;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (psyntax config) () (void))

(library-letrec* (ironscheme conditions)
  ((g$5147$11762$f3xia
     g$5147$12190$f3xia
     (make-record-type-descriptor
       '&condition
       '#f
       'g$5150$f3xia
       '#f
       '#f
       '#()))
   (g$5149$11763$f3xia g$5149$12191$f3xia '#f)
   (g$5148$11764$f3xia
     g$5148$12192$f3xia
     (make-record-constructor-descriptor
       g$5147$11762$f3xia
       '#f
       g$5149$11763$f3xia))
   (g$&condition?$11767$f3xia
     g$&condition?$12193$f3xia
     (record-predicate g$5147$11762$f3xia))
   (g$make-&condition$11768$f3xia
     g$make-&condition$12194$f3xia
     (record-constructor g$5148$11764$f3xia))
   (g$&condition-rtd$11769$f3xia
     g$&condition-rtd$12195$f3xia
     g$5147$11762$f3xia)
   (g$&condition-rcd$11770$f3xia
     g$&condition-rcd$12196$f3xia
     g$5148$11764$f3xia)
   (g$5184$11868$f3xia
     g$5184$12197$f3xia
     (make-record-type-descriptor
       '&message
       g$5147$11762$f3xia
       'g$5187$f3xia
       '#f
       '#f
       '#((immutable message))))
   (g$5186$11869$f3xia g$5186$12198$f3xia '#f)
   (g$5185$11870$f3xia
     g$5185$12199$f3xia
     (make-record-constructor-descriptor
       g$5184$11868$f3xia
       g$5148$11764$f3xia
       g$5186$11869$f3xia))
   (g$p?$11873$f3xia
     g$p?$12200$f3xia
     (record-predicate g$5184$11868$f3xia))
   (g$make-message-condition$11874$f3xia
     g$make-message-condition$12201$f3xia
     (record-constructor g$5185$11870$f3xia))
   (g$condition-message$11875$f3xia
     g$condition-message$12202$f3xia
     (record-accessor g$5184$11868$f3xia '0))
   (g$message-condition?$11876$f3xia
     g$message-condition?$12203$f3xia
     (condition-predicate g$5184$11868$f3xia))
   (g$condition-message$11877$f3xia
     g$condition-message$12204$f3xia
     (condition-accessor
       g$5184$11868$f3xia
       g$condition-message$11875$f3xia))
   (g$&message-rtd$11878$f3xia
     g$&message-rtd$12205$f3xia
     g$5184$11868$f3xia)
   (g$&message-rcd$11879$f3xia
     g$&message-rcd$12206$f3xia
     g$5185$11870$f3xia)
   (g$5199$11880$f3xia
     g$5199$12207$f3xia
     (make-record-type-descriptor
       '&warning
       g$5147$11762$f3xia
       'g$5202$f3xia
       '#f
       '#f
       '#()))
   (g$5201$11881$f3xia g$5201$12208$f3xia '#f)
   (g$5200$11882$f3xia
     g$5200$12209$f3xia
     (make-record-constructor-descriptor
       g$5199$11880$f3xia
       g$5148$11764$f3xia
       g$5201$11881$f3xia))
   (g$p?$11885$f3xia
     g$p?$12210$f3xia
     (record-predicate g$5199$11880$f3xia))
   (g$make-warning$11886$f3xia
     g$make-warning$12211$f3xia
     (record-constructor g$5200$11882$f3xia))
   (g$warning?$11887$f3xia
     g$warning?$12212$f3xia
     (condition-predicate g$5199$11880$f3xia))
   (g$&warning-rtd$11888$f3xia
     g$&warning-rtd$12213$f3xia
     g$5199$11880$f3xia)
   (g$&warning-rcd$11889$f3xia
     g$&warning-rcd$12214$f3xia
     g$5200$11882$f3xia)
   (g$5212$11890$f3xia
     g$5212$12215$f3xia
     (make-record-type-descriptor
       '&serious
       g$5147$11762$f3xia
       'g$5215$f3xia
       '#f
       '#f
       '#()))
   (g$5214$11891$f3xia g$5214$12216$f3xia '#f)
   (g$5213$11892$f3xia
     g$5213$12217$f3xia
     (make-record-constructor-descriptor
       g$5212$11890$f3xia
       g$5148$11764$f3xia
       g$5214$11891$f3xia))
   (g$p?$11895$f3xia
     g$p?$12218$f3xia
     (record-predicate g$5212$11890$f3xia))
   (g$make-serious-condition$11896$f3xia
     g$make-serious-condition$12219$f3xia
     (record-constructor g$5213$11892$f3xia))
   (g$serious-condition?$11897$f3xia
     g$serious-condition?$12220$f3xia
     (condition-predicate g$5212$11890$f3xia))
   (g$&serious-rtd$11898$f3xia
     g$&serious-rtd$12221$f3xia
     g$5212$11890$f3xia)
   (g$&serious-rcd$11899$f3xia
     g$&serious-rcd$12222$f3xia
     g$5213$11892$f3xia)
   (g$5225$11900$f3xia
     g$5225$12223$f3xia
     (make-record-type-descriptor
       '&error
       g$5212$11890$f3xia
       'g$5228$f3xia
       '#f
       '#f
       '#()))
   (g$5227$11901$f3xia g$5227$12224$f3xia '#f)
   (g$5226$11902$f3xia
     g$5226$12225$f3xia
     (make-record-constructor-descriptor
       g$5225$11900$f3xia
       g$5213$11892$f3xia
       g$5227$11901$f3xia))
   (g$p?$11905$f3xia
     g$p?$12226$f3xia
     (record-predicate g$5225$11900$f3xia))
   (g$make-error$11906$f3xia
     g$make-error$12227$f3xia
     (record-constructor g$5226$11902$f3xia))
   (g$error?$11907$f3xia
     g$error?$12228$f3xia
     (condition-predicate g$5225$11900$f3xia))
   (g$&error-rtd$11908$f3xia
     g$&error-rtd$12229$f3xia
     g$5225$11900$f3xia)
   (g$&error-rcd$11909$f3xia
     g$&error-rcd$12230$f3xia
     g$5226$11902$f3xia)
   (g$5238$11910$f3xia
     g$5238$12231$f3xia
     (make-record-type-descriptor
       '&violation
       g$5212$11890$f3xia
       'g$5241$f3xia
       '#f
       '#f
       '#()))
   (g$5240$11911$f3xia g$5240$12232$f3xia '#f)
   (g$5239$11912$f3xia
     g$5239$12233$f3xia
     (make-record-constructor-descriptor
       g$5238$11910$f3xia
       g$5213$11892$f3xia
       g$5240$11911$f3xia))
   (g$p?$11915$f3xia
     g$p?$12234$f3xia
     (record-predicate g$5238$11910$f3xia))
   (g$make-violation$11916$f3xia
     g$make-violation$12235$f3xia
     (record-constructor g$5239$11912$f3xia))
   (g$violation?$11917$f3xia
     g$violation?$12236$f3xia
     (condition-predicate g$5238$11910$f3xia))
   (g$&violation-rtd$11918$f3xia
     g$&violation-rtd$12237$f3xia
     g$5238$11910$f3xia)
   (g$&violation-rcd$11919$f3xia
     g$&violation-rcd$12238$f3xia
     g$5239$11912$f3xia)
   (g$5251$11920$f3xia
     g$5251$12239$f3xia
     (make-record-type-descriptor
       '&assertion
       g$5238$11910$f3xia
       'g$5254$f3xia
       '#f
       '#f
       '#()))
   (g$5253$11921$f3xia g$5253$12240$f3xia '#f)
   (g$5252$11922$f3xia
     g$5252$12241$f3xia
     (make-record-constructor-descriptor
       g$5251$11920$f3xia
       g$5239$11912$f3xia
       g$5253$11921$f3xia))
   (g$p?$11925$f3xia
     g$p?$12242$f3xia
     (record-predicate g$5251$11920$f3xia))
   (g$make-assertion-violation$11926$f3xia
     g$make-assertion-violation$12243$f3xia
     (record-constructor g$5252$11922$f3xia))
   (g$assertion-violation?$11927$f3xia
     g$assertion-violation?$12244$f3xia
     (condition-predicate g$5251$11920$f3xia))
   (g$&assertion-rtd$11928$f3xia
     g$&assertion-rtd$12245$f3xia
     g$5251$11920$f3xia)
   (g$&assertion-rcd$11929$f3xia
     g$&assertion-rcd$12246$f3xia
     g$5252$11922$f3xia)
   (g$5264$11931$f3xia
     g$5264$12247$f3xia
     (make-record-type-descriptor
       '&irritants
       g$5147$11762$f3xia
       'g$5267$f3xia
       '#f
       '#f
       '#((immutable irritants))))
   (g$5266$11932$f3xia g$5266$12248$f3xia '#f)
   (g$5265$11933$f3xia
     g$5265$12249$f3xia
     (make-record-constructor-descriptor
       g$5264$11931$f3xia
       g$5148$11764$f3xia
       g$5266$11932$f3xia))
   (g$p?$11936$f3xia
     g$p?$12250$f3xia
     (record-predicate g$5264$11931$f3xia))
   (g$make-irritants-condition$11937$f3xia
     g$make-irritants-condition$12251$f3xia
     (record-constructor g$5265$11933$f3xia))
   (g$condition-irritants$11938$f3xia
     g$condition-irritants$12252$f3xia
     (record-accessor g$5264$11931$f3xia '0))
   (g$irritants-condition?$11939$f3xia
     g$irritants-condition?$12253$f3xia
     (condition-predicate g$5264$11931$f3xia))
   (g$condition-irritants$11940$f3xia
     g$condition-irritants$12254$f3xia
     (condition-accessor
       g$5264$11931$f3xia
       g$condition-irritants$11938$f3xia))
   (g$&irritants-rtd$11941$f3xia
     g$&irritants-rtd$12255$f3xia
     g$5264$11931$f3xia)
   (g$&irritants-rcd$11942$f3xia
     g$&irritants-rcd$12256$f3xia
     g$5265$11933$f3xia)
   (g$5279$11944$f3xia
     g$5279$12257$f3xia
     (make-record-type-descriptor
       '&who
       g$5147$11762$f3xia
       'g$5282$f3xia
       '#f
       '#f
       '#((immutable who))))
   (g$5281$11945$f3xia g$5281$12258$f3xia '#f)
   (g$5280$11946$f3xia
     g$5280$12259$f3xia
     (make-record-constructor-descriptor
       g$5279$11944$f3xia
       g$5148$11764$f3xia
       g$5281$11945$f3xia))
   (g$p?$11949$f3xia
     g$p?$12260$f3xia
     (record-predicate g$5279$11944$f3xia))
   (g$make-who-condition$11950$f3xia
     g$make-who-condition$12261$f3xia
     (record-constructor g$5280$11946$f3xia))
   (g$condition-who$11951$f3xia
     g$condition-who$12262$f3xia
     (record-accessor g$5279$11944$f3xia '0))
   (g$who-condition?$11952$f3xia
     g$who-condition?$12263$f3xia
     (condition-predicate g$5279$11944$f3xia))
   (g$condition-who$11953$f3xia
     g$condition-who$12264$f3xia
     (condition-accessor
       g$5279$11944$f3xia
       g$condition-who$11951$f3xia))
   (g$&who-rtd$11954$f3xia g$&who-rtd$12265$f3xia g$5279$11944$f3xia)
   (g$&who-rcd$11955$f3xia g$&who-rcd$12266$f3xia g$5280$11946$f3xia)
   (g$5294$11957$f3xia
     g$5294$12267$f3xia
     (make-record-type-descriptor
       '&where
       g$5147$11762$f3xia
       'g$5297$f3xia
       '#f
       '#f
       '#((immutable where))))
   (g$5296$11958$f3xia g$5296$12268$f3xia '#f)
   (g$5295$11959$f3xia
     g$5295$12269$f3xia
     (make-record-constructor-descriptor
       g$5294$11957$f3xia
       g$5148$11764$f3xia
       g$5296$11958$f3xia))
   (g$p?$11962$f3xia
     g$p?$12270$f3xia
     (record-predicate g$5294$11957$f3xia))
   (g$make-where-condition$11963$f3xia
     g$make-where-condition$12271$f3xia
     (record-constructor g$5295$11959$f3xia))
   (g$condition-where$11964$f3xia
     g$condition-where$12272$f3xia
     (record-accessor g$5294$11957$f3xia '0))
   (g$where-condition?$11965$f3xia
     g$where-condition?$12273$f3xia
     (condition-predicate g$5294$11957$f3xia))
   (g$condition-where$11966$f3xia
     g$condition-where$12274$f3xia
     (condition-accessor
       g$5294$11957$f3xia
       g$condition-where$11964$f3xia))
   (g$&where-rtd$11967$f3xia
     g$&where-rtd$12275$f3xia
     g$5294$11957$f3xia)
   (g$&where-rcd$11968$f3xia
     g$&where-rcd$12276$f3xia
     g$5295$11959$f3xia)
   (g$5309$11970$f3xia
     g$5309$12277$f3xia
     (make-record-type-descriptor
       '&stacktrace
       g$5147$11762$f3xia
       'g$5312$f3xia
       '#f
       '#f
       '#((immutable stacktrace))))
   (g$5311$11971$f3xia g$5311$12278$f3xia '#f)
   (g$5310$11972$f3xia
     g$5310$12279$f3xia
     (make-record-constructor-descriptor
       g$5309$11970$f3xia
       g$5148$11764$f3xia
       g$5311$11971$f3xia))
   (g$p?$11975$f3xia
     g$p?$12280$f3xia
     (record-predicate g$5309$11970$f3xia))
   (g$make-stacktrace-condition$11976$f3xia
     g$make-stacktrace-condition$12281$f3xia
     (record-constructor g$5310$11972$f3xia))
   (g$condition-stacktrace$11977$f3xia
     g$condition-stacktrace$12282$f3xia
     (record-accessor g$5309$11970$f3xia '0))
   (g$stacktrace-condition?$11978$f3xia
     g$stacktrace-condition?$12283$f3xia
     (condition-predicate g$5309$11970$f3xia))
   (g$condition-stacktrace$11979$f3xia
     g$condition-stacktrace$12284$f3xia
     (condition-accessor
       g$5309$11970$f3xia
       g$condition-stacktrace$11977$f3xia))
   (g$&stacktrace-rtd$11980$f3xia
     g$&stacktrace-rtd$12285$f3xia
     g$5309$11970$f3xia)
   (g$&stacktrace-rcd$11981$f3xia
     g$&stacktrace-rcd$12286$f3xia
     g$5310$11972$f3xia)
   (g$5324$11982$f3xia
     g$5324$12287$f3xia
     (make-record-type-descriptor
       '&non-continuable
       g$5238$11910$f3xia
       'g$5327$f3xia
       '#f
       '#f
       '#()))
   (g$5326$11983$f3xia g$5326$12288$f3xia '#f)
   (g$5325$11984$f3xia
     g$5325$12289$f3xia
     (make-record-constructor-descriptor
       g$5324$11982$f3xia
       g$5239$11912$f3xia
       g$5326$11983$f3xia))
   (g$p?$11987$f3xia
     g$p?$12290$f3xia
     (record-predicate g$5324$11982$f3xia))
   (g$make-non-continuable-violation$11988$f3xia
     g$make-non-continuable-violation$12291$f3xia
     (record-constructor g$5325$11984$f3xia))
   (g$non-continuable-violation?$11989$f3xia
     g$non-continuable-violation?$12292$f3xia
     (condition-predicate g$5324$11982$f3xia))
   (g$&non-continuable-rtd$11990$f3xia
     g$&non-continuable-rtd$12293$f3xia
     g$5324$11982$f3xia)
   (g$&non-continuable-rcd$11991$f3xia
     g$&non-continuable-rcd$12294$f3xia
     g$5325$11984$f3xia)
   (g$5337$11992$f3xia
     g$5337$12295$f3xia
     (make-record-type-descriptor
       '&implementation-restriction
       g$5238$11910$f3xia
       'g$5340$f3xia
       '#f
       '#f
       '#()))
   (g$5339$11993$f3xia g$5339$12296$f3xia '#f)
   (g$5338$11994$f3xia
     g$5338$12297$f3xia
     (make-record-constructor-descriptor
       g$5337$11992$f3xia
       g$5239$11912$f3xia
       g$5339$11993$f3xia))
   (g$p?$11997$f3xia
     g$p?$12298$f3xia
     (record-predicate g$5337$11992$f3xia))
   (g$make-implementation-restriction-violation$11998$f3xia
     g$make-implementation-restriction-violation$12299$f3xia
     (record-constructor g$5338$11994$f3xia))
   (g$implementation-restriction-violation?$11999$f3xia
     g$implementation-restriction-violation?$12300$f3xia
     (condition-predicate g$5337$11992$f3xia))
   (g$&implementation-restriction-rtd$12000$f3xia
     g$&implementation-restriction-rtd$12301$f3xia
     g$5337$11992$f3xia)
   (g$&implementation-restriction-rcd$12001$f3xia
     g$&implementation-restriction-rcd$12302$f3xia
     g$5338$11994$f3xia)
   (g$5350$12002$f3xia
     g$5350$12303$f3xia
     (make-record-type-descriptor
       '&lexical
       g$5238$11910$f3xia
       'g$5353$f3xia
       '#f
       '#f
       '#()))
   (g$5352$12003$f3xia g$5352$12304$f3xia '#f)
   (g$5351$12004$f3xia
     g$5351$12305$f3xia
     (make-record-constructor-descriptor
       g$5350$12002$f3xia
       g$5239$11912$f3xia
       g$5352$12003$f3xia))
   (g$p?$12007$f3xia
     g$p?$12306$f3xia
     (record-predicate g$5350$12002$f3xia))
   (g$make-lexical-violation$12008$f3xia
     g$make-lexical-violation$12307$f3xia
     (record-constructor g$5351$12004$f3xia))
   (g$lexical-violation?$12009$f3xia
     g$lexical-violation?$12308$f3xia
     (condition-predicate g$5350$12002$f3xia))
   (g$&lexical-rtd$12010$f3xia
     g$&lexical-rtd$12309$f3xia
     g$5350$12002$f3xia)
   (g$&lexical-rcd$12011$f3xia
     g$&lexical-rcd$12310$f3xia
     g$5351$12004$f3xia)
   (g$5363$12014$f3xia
     g$5363$12311$f3xia
     (make-record-type-descriptor
       '&syntax
       g$5238$11910$f3xia
       'g$5366$f3xia
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$5365$12015$f3xia g$5365$12312$f3xia '#f)
   (g$5364$12016$f3xia
     g$5364$12313$f3xia
     (make-record-constructor-descriptor
       g$5363$12014$f3xia
       g$5239$11912$f3xia
       g$5365$12015$f3xia))
   (g$p?$12019$f3xia
     g$p?$12314$f3xia
     (record-predicate g$5363$12014$f3xia))
   (g$make-syntax-violation$12020$f3xia
     g$make-syntax-violation$12315$f3xia
     (record-constructor g$5364$12016$f3xia))
   (g$syntax-violation-form$12021$f3xia
     g$syntax-violation-form$12316$f3xia
     (record-accessor g$5363$12014$f3xia '0))
   (g$syntax-violation-subform$12022$f3xia
     g$syntax-violation-subform$12317$f3xia
     (record-accessor g$5363$12014$f3xia '1))
   (g$syntax-violation?$12023$f3xia
     g$syntax-violation?$12318$f3xia
     (condition-predicate g$5363$12014$f3xia))
   (g$syntax-violation-form$12024$f3xia
     g$syntax-violation-form$12319$f3xia
     (condition-accessor
       g$5363$12014$f3xia
       g$syntax-violation-form$12021$f3xia))
   (g$syntax-violation-subform$12025$f3xia
     g$syntax-violation-subform$12320$f3xia
     (condition-accessor
       g$5363$12014$f3xia
       g$syntax-violation-subform$12022$f3xia))
   (g$&syntax-rtd$12026$f3xia
     g$&syntax-rtd$12321$f3xia
     g$5363$12014$f3xia)
   (g$&syntax-rcd$12027$f3xia
     g$&syntax-rcd$12322$f3xia
     g$5364$12016$f3xia)
   (g$5380$12028$f3xia
     g$5380$12323$f3xia
     (make-record-type-descriptor
       '&undefined
       g$5238$11910$f3xia
       'g$5383$f3xia
       '#f
       '#f
       '#()))
   (g$5382$12029$f3xia g$5382$12324$f3xia '#f)
   (g$5381$12030$f3xia
     g$5381$12325$f3xia
     (make-record-constructor-descriptor
       g$5380$12028$f3xia
       g$5239$11912$f3xia
       g$5382$12029$f3xia))
   (g$p?$12033$f3xia
     g$p?$12326$f3xia
     (record-predicate g$5380$12028$f3xia))
   (g$make-undefined-violation$12034$f3xia
     g$make-undefined-violation$12327$f3xia
     (record-constructor g$5381$12030$f3xia))
   (g$undefined-violation?$12035$f3xia
     g$undefined-violation?$12328$f3xia
     (condition-predicate g$5380$12028$f3xia))
   (g$&undefined-rtd$12036$f3xia
     g$&undefined-rtd$12329$f3xia
     g$5380$12028$f3xia)
   (g$&undefined-rcd$12037$f3xia
     g$&undefined-rcd$12330$f3xia
     g$5381$12030$f3xia)
   (g$5393$12038$f3xia
     g$5393$12331$f3xia
     (make-record-type-descriptor
       '&i/o
       g$5225$11900$f3xia
       'g$5396$f3xia
       '#f
       '#f
       '#()))
   (g$5395$12039$f3xia g$5395$12332$f3xia '#f)
   (g$5394$12040$f3xia
     g$5394$12333$f3xia
     (make-record-constructor-descriptor
       g$5393$12038$f3xia
       g$5226$11902$f3xia
       g$5395$12039$f3xia))
   (g$p?$12043$f3xia
     g$p?$12334$f3xia
     (record-predicate g$5393$12038$f3xia))
   (g$make-i/o-error$12044$f3xia
     g$make-i/o-error$12335$f3xia
     (record-constructor g$5394$12040$f3xia))
   (g$i/o-error?$12045$f3xia
     g$i/o-error?$12336$f3xia
     (condition-predicate g$5393$12038$f3xia))
   (g$&i/o-rtd$12046$f3xia g$&i/o-rtd$12337$f3xia g$5393$12038$f3xia)
   (g$&i/o-rcd$12047$f3xia g$&i/o-rcd$12338$f3xia g$5394$12040$f3xia)
   (g$5406$12048$f3xia
     g$5406$12339$f3xia
     (make-record-type-descriptor
       '&i/o-read
       g$5393$12038$f3xia
       'g$5409$f3xia
       '#f
       '#f
       '#()))
   (g$5408$12049$f3xia g$5408$12340$f3xia '#f)
   (g$5407$12050$f3xia
     g$5407$12341$f3xia
     (make-record-constructor-descriptor
       g$5406$12048$f3xia
       g$5394$12040$f3xia
       g$5408$12049$f3xia))
   (g$p?$12053$f3xia
     g$p?$12342$f3xia
     (record-predicate g$5406$12048$f3xia))
   (g$make-i/o-read-error$12054$f3xia
     g$make-i/o-read-error$12343$f3xia
     (record-constructor g$5407$12050$f3xia))
   (g$i/o-read-error?$12055$f3xia
     g$i/o-read-error?$12344$f3xia
     (condition-predicate g$5406$12048$f3xia))
   (g$&i/o-read-rtd$12056$f3xia
     g$&i/o-read-rtd$12345$f3xia
     g$5406$12048$f3xia)
   (g$&i/o-read-rcd$12057$f3xia
     g$&i/o-read-rcd$12346$f3xia
     g$5407$12050$f3xia)
   (g$5419$12058$f3xia
     g$5419$12347$f3xia
     (make-record-type-descriptor
       '&i/o-write
       g$5393$12038$f3xia
       'g$5422$f3xia
       '#f
       '#f
       '#()))
   (g$5421$12059$f3xia g$5421$12348$f3xia '#f)
   (g$5420$12060$f3xia
     g$5420$12349$f3xia
     (make-record-constructor-descriptor
       g$5419$12058$f3xia
       g$5394$12040$f3xia
       g$5421$12059$f3xia))
   (g$p?$12063$f3xia
     g$p?$12350$f3xia
     (record-predicate g$5419$12058$f3xia))
   (g$make-i/o-write-error$12064$f3xia
     g$make-i/o-write-error$12351$f3xia
     (record-constructor g$5420$12060$f3xia))
   (g$i/o-write-error?$12065$f3xia
     g$i/o-write-error?$12352$f3xia
     (condition-predicate g$5419$12058$f3xia))
   (g$&i/o-write-rtd$12066$f3xia
     g$&i/o-write-rtd$12353$f3xia
     g$5419$12058$f3xia)
   (g$&i/o-write-rcd$12067$f3xia
     g$&i/o-write-rcd$12354$f3xia
     g$5420$12060$f3xia)
   (g$5432$12069$f3xia
     g$5432$12355$f3xia
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$5393$12038$f3xia
       'g$5435$f3xia
       '#f
       '#f
       '#((immutable position))))
   (g$5434$12070$f3xia g$5434$12356$f3xia '#f)
   (g$5433$12071$f3xia
     g$5433$12357$f3xia
     (make-record-constructor-descriptor
       g$5432$12069$f3xia
       g$5394$12040$f3xia
       g$5434$12070$f3xia))
   (g$p?$12074$f3xia
     g$p?$12358$f3xia
     (record-predicate g$5432$12069$f3xia))
   (g$make-i/o-invalid-position-error$12075$f3xia
     g$make-i/o-invalid-position-error$12359$f3xia
     (record-constructor g$5433$12071$f3xia))
   (g$i/o-error-position$12076$f3xia
     g$i/o-error-position$12360$f3xia
     (record-accessor g$5432$12069$f3xia '0))
   (g$i/o-invalid-position-error?$12077$f3xia
     g$i/o-invalid-position-error?$12361$f3xia
     (condition-predicate g$5432$12069$f3xia))
   (g$i/o-error-position$12078$f3xia
     g$i/o-error-position$12362$f3xia
     (condition-accessor
       g$5432$12069$f3xia
       g$i/o-error-position$12076$f3xia))
   (g$&i/o-invalid-position-rtd$12079$f3xia
     g$&i/o-invalid-position-rtd$12363$f3xia
     g$5432$12069$f3xia)
   (g$&i/o-invalid-position-rcd$12080$f3xia
     g$&i/o-invalid-position-rcd$12364$f3xia
     g$5433$12071$f3xia)
   (g$5447$12082$f3xia
     g$5447$12365$f3xia
     (make-record-type-descriptor
       '&i/o-filename
       g$5393$12038$f3xia
       'g$5450$f3xia
       '#f
       '#f
       '#((immutable filename))))
   (g$5449$12083$f3xia g$5449$12366$f3xia '#f)
   (g$5448$12084$f3xia
     g$5448$12367$f3xia
     (make-record-constructor-descriptor
       g$5447$12082$f3xia
       g$5394$12040$f3xia
       g$5449$12083$f3xia))
   (g$p?$12087$f3xia
     g$p?$12368$f3xia
     (record-predicate g$5447$12082$f3xia))
   (g$make-i/o-filename-error$12088$f3xia
     g$make-i/o-filename-error$12369$f3xia
     (record-constructor g$5448$12084$f3xia))
   (g$i/o-error-filename$12089$f3xia
     g$i/o-error-filename$12370$f3xia
     (record-accessor g$5447$12082$f3xia '0))
   (g$i/o-filename-error?$12090$f3xia
     g$i/o-filename-error?$12371$f3xia
     (condition-predicate g$5447$12082$f3xia))
   (g$i/o-error-filename$12091$f3xia
     g$i/o-error-filename$12372$f3xia
     (condition-accessor
       g$5447$12082$f3xia
       g$i/o-error-filename$12089$f3xia))
   (g$&i/o-filename-rtd$12092$f3xia
     g$&i/o-filename-rtd$12373$f3xia
     g$5447$12082$f3xia)
   (g$&i/o-filename-rcd$12093$f3xia
     g$&i/o-filename-rcd$12374$f3xia
     g$5448$12084$f3xia)
   (g$5462$12094$f3xia
     g$5462$12375$f3xia
     (make-record-type-descriptor
       '&i/o-file-protection
       g$5447$12082$f3xia
       'g$5465$f3xia
       '#f
       '#f
       '#()))
   (g$5464$12095$f3xia g$5464$12376$f3xia '#f)
   (g$5463$12096$f3xia
     g$5463$12377$f3xia
     (make-record-constructor-descriptor
       g$5462$12094$f3xia
       g$5448$12084$f3xia
       g$5464$12095$f3xia))
   (g$p?$12099$f3xia
     g$p?$12378$f3xia
     (record-predicate g$5462$12094$f3xia))
   (g$make-i/o-file-protection-error$12100$f3xia
     g$make-i/o-file-protection-error$12379$f3xia
     (record-constructor g$5463$12096$f3xia))
   (g$i/o-file-protection-error?$12101$f3xia
     g$i/o-file-protection-error?$12380$f3xia
     (condition-predicate g$5462$12094$f3xia))
   (g$&i/o-file-protection-rtd$12102$f3xia
     g$&i/o-file-protection-rtd$12381$f3xia
     g$5462$12094$f3xia)
   (g$&i/o-file-protection-rcd$12103$f3xia
     g$&i/o-file-protection-rcd$12382$f3xia
     g$5463$12096$f3xia)
   (g$5475$12104$f3xia
     g$5475$12383$f3xia
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$5462$12094$f3xia
       'g$5478$f3xia
       '#f
       '#f
       '#()))
   (g$5477$12105$f3xia g$5477$12384$f3xia '#f)
   (g$5476$12106$f3xia
     g$5476$12385$f3xia
     (make-record-constructor-descriptor
       g$5475$12104$f3xia
       g$5463$12096$f3xia
       g$5477$12105$f3xia))
   (g$p?$12109$f3xia
     g$p?$12386$f3xia
     (record-predicate g$5475$12104$f3xia))
   (g$make-i/o-file-is-read-only-error$12110$f3xia
     g$make-i/o-file-is-read-only-error$12387$f3xia
     (record-constructor g$5476$12106$f3xia))
   (g$i/o-file-is-read-only-error?$12111$f3xia
     g$i/o-file-is-read-only-error?$12388$f3xia
     (condition-predicate g$5475$12104$f3xia))
   (g$&i/o-file-is-read-only-rtd$12112$f3xia
     g$&i/o-file-is-read-only-rtd$12389$f3xia
     g$5475$12104$f3xia)
   (g$&i/o-file-is-read-only-rcd$12113$f3xia
     g$&i/o-file-is-read-only-rcd$12390$f3xia
     g$5476$12106$f3xia)
   (g$5488$12114$f3xia
     g$5488$12391$f3xia
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$5447$12082$f3xia
       'g$5491$f3xia
       '#f
       '#f
       '#()))
   (g$5490$12115$f3xia g$5490$12392$f3xia '#f)
   (g$5489$12116$f3xia
     g$5489$12393$f3xia
     (make-record-constructor-descriptor
       g$5488$12114$f3xia
       g$5448$12084$f3xia
       g$5490$12115$f3xia))
   (g$p?$12119$f3xia
     g$p?$12394$f3xia
     (record-predicate g$5488$12114$f3xia))
   (g$make-i/o-file-already-exists-error$12120$f3xia
     g$make-i/o-file-already-exists-error$12395$f3xia
     (record-constructor g$5489$12116$f3xia))
   (g$i/o-file-already-exists-error?$12121$f3xia
     g$i/o-file-already-exists-error?$12396$f3xia
     (condition-predicate g$5488$12114$f3xia))
   (g$&i/o-file-already-exists-rtd$12122$f3xia
     g$&i/o-file-already-exists-rtd$12397$f3xia
     g$5488$12114$f3xia)
   (g$&i/o-file-already-exists-rcd$12123$f3xia
     g$&i/o-file-already-exists-rcd$12398$f3xia
     g$5489$12116$f3xia)
   (g$5501$12124$f3xia
     g$5501$12399$f3xia
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$5447$12082$f3xia
       'g$5504$f3xia
       '#f
       '#f
       '#()))
   (g$5503$12125$f3xia g$5503$12400$f3xia '#f)
   (g$5502$12126$f3xia
     g$5502$12401$f3xia
     (make-record-constructor-descriptor
       g$5501$12124$f3xia
       g$5448$12084$f3xia
       g$5503$12125$f3xia))
   (g$p?$12129$f3xia
     g$p?$12402$f3xia
     (record-predicate g$5501$12124$f3xia))
   (g$make-i/o-file-does-not-exist-error$12130$f3xia
     g$make-i/o-file-does-not-exist-error$12403$f3xia
     (record-constructor g$5502$12126$f3xia))
   (g$i/o-file-does-not-exist-error?$12131$f3xia
     g$i/o-file-does-not-exist-error?$12404$f3xia
     (condition-predicate g$5501$12124$f3xia))
   (g$&i/o-file-does-not-exist-rtd$12132$f3xia
     g$&i/o-file-does-not-exist-rtd$12405$f3xia
     g$5501$12124$f3xia)
   (g$&i/o-file-does-not-exist-rcd$12133$f3xia
     g$&i/o-file-does-not-exist-rcd$12406$f3xia
     g$5502$12126$f3xia)
   (g$5514$12135$f3xia
     g$5514$12407$f3xia
     (make-record-type-descriptor
       '&i/o-port
       g$5393$12038$f3xia
       'g$5517$f3xia
       '#f
       '#f
       '#((immutable port))))
   (g$5516$12136$f3xia g$5516$12408$f3xia '#f)
   (g$5515$12137$f3xia
     g$5515$12409$f3xia
     (make-record-constructor-descriptor
       g$5514$12135$f3xia
       g$5394$12040$f3xia
       g$5516$12136$f3xia))
   (g$p?$12140$f3xia
     g$p?$12410$f3xia
     (record-predicate g$5514$12135$f3xia))
   (g$make-i/o-port-error$12141$f3xia
     g$make-i/o-port-error$12411$f3xia
     (record-constructor g$5515$12137$f3xia))
   (g$i/o-error-port$12142$f3xia
     g$i/o-error-port$12412$f3xia
     (record-accessor g$5514$12135$f3xia '0))
   (g$i/o-port-error?$12143$f3xia
     g$i/o-port-error?$12413$f3xia
     (condition-predicate g$5514$12135$f3xia))
   (g$i/o-error-port$12144$f3xia
     g$i/o-error-port$12414$f3xia
     (condition-accessor
       g$5514$12135$f3xia
       g$i/o-error-port$12142$f3xia))
   (g$&i/o-port-rtd$12145$f3xia
     g$&i/o-port-rtd$12415$f3xia
     g$5514$12135$f3xia)
   (g$&i/o-port-rcd$12146$f3xia
     g$&i/o-port-rcd$12416$f3xia
     g$5515$12137$f3xia)
   (g$5529$12147$f3xia
     g$5529$12417$f3xia
     (make-record-type-descriptor
       '&i/o-decoding
       g$5514$12135$f3xia
       'g$5532$f3xia
       '#f
       '#f
       '#()))
   (g$5531$12148$f3xia g$5531$12418$f3xia '#f)
   (g$5530$12149$f3xia
     g$5530$12419$f3xia
     (make-record-constructor-descriptor
       g$5529$12147$f3xia
       g$5515$12137$f3xia
       g$5531$12148$f3xia))
   (g$p?$12152$f3xia
     g$p?$12420$f3xia
     (record-predicate g$5529$12147$f3xia))
   (g$make-i/o-decoding-error$12153$f3xia
     g$make-i/o-decoding-error$12421$f3xia
     (record-constructor g$5530$12149$f3xia))
   (g$i/o-decoding-error?$12154$f3xia
     g$i/o-decoding-error?$12422$f3xia
     (condition-predicate g$5529$12147$f3xia))
   (g$&i/o-decoding-rtd$12155$f3xia
     g$&i/o-decoding-rtd$12423$f3xia
     g$5529$12147$f3xia)
   (g$&i/o-decoding-rcd$12156$f3xia
     g$&i/o-decoding-rcd$12424$f3xia
     g$5530$12149$f3xia)
   (g$5542$12158$f3xia
     g$5542$12425$f3xia
     (make-record-type-descriptor
       '&i/o-encoding
       g$5514$12135$f3xia
       'g$5545$f3xia
       '#f
       '#f
       '#((immutable char))))
   (g$5544$12159$f3xia g$5544$12426$f3xia '#f)
   (g$5543$12160$f3xia
     g$5543$12427$f3xia
     (make-record-constructor-descriptor
       g$5542$12158$f3xia
       g$5515$12137$f3xia
       g$5544$12159$f3xia))
   (g$p?$12163$f3xia
     g$p?$12428$f3xia
     (record-predicate g$5542$12158$f3xia))
   (g$make-i/o-encoding-error$12164$f3xia
     g$make-i/o-encoding-error$12429$f3xia
     (record-constructor g$5543$12160$f3xia))
   (g$i/o-encoding-error-char$12165$f3xia
     g$i/o-encoding-error-char$12430$f3xia
     (record-accessor g$5542$12158$f3xia '0))
   (g$i/o-encoding-error?$12166$f3xia
     g$i/o-encoding-error?$12431$f3xia
     (condition-predicate g$5542$12158$f3xia))
   (g$i/o-encoding-error-char$12167$f3xia
     g$i/o-encoding-error-char$12432$f3xia
     (condition-accessor
       g$5542$12158$f3xia
       g$i/o-encoding-error-char$12165$f3xia))
   (g$&i/o-encoding-rtd$12168$f3xia
     g$&i/o-encoding-rtd$12433$f3xia
     g$5542$12158$f3xia)
   (g$&i/o-encoding-rcd$12169$f3xia
     g$&i/o-encoding-rcd$12434$f3xia
     g$5543$12160$f3xia)
   (g$5557$12170$f3xia
     g$5557$12435$f3xia
     (make-record-type-descriptor
       '&no-infinities
       g$5337$11992$f3xia
       'g$5560$f3xia
       '#f
       '#f
       '#()))
   (g$5559$12171$f3xia g$5559$12436$f3xia '#f)
   (g$5558$12172$f3xia
     g$5558$12437$f3xia
     (make-record-constructor-descriptor
       g$5557$12170$f3xia
       g$5338$11994$f3xia
       g$5559$12171$f3xia))
   (g$p?$12175$f3xia
     g$p?$12438$f3xia
     (record-predicate g$5557$12170$f3xia))
   (g$make-no-infinities-violation$12176$f3xia
     g$make-no-infinities-violation$12439$f3xia
     (record-constructor g$5558$12172$f3xia))
   (g$no-infinities-violation?$12177$f3xia
     g$no-infinities-violation?$12440$f3xia
     (condition-predicate g$5557$12170$f3xia))
   (g$&no-infinities-rtd$12178$f3xia
     g$&no-infinities-rtd$12441$f3xia
     g$5557$12170$f3xia)
   (g$&no-infinities-rcd$12179$f3xia
     g$&no-infinities-rcd$12442$f3xia
     g$5558$12172$f3xia)
   (g$5570$12180$f3xia
     g$5570$12443$f3xia
     (make-record-type-descriptor
       '&no-nans
       g$5337$11992$f3xia
       'g$5573$f3xia
       '#f
       '#f
       '#()))
   (g$5572$12181$f3xia g$5572$12444$f3xia '#f)
   (g$5571$12182$f3xia
     g$5571$12445$f3xia
     (make-record-constructor-descriptor
       g$5570$12180$f3xia
       g$5338$11994$f3xia
       g$5572$12181$f3xia))
   (g$p?$12185$f3xia
     g$p?$12446$f3xia
     (record-predicate g$5570$12180$f3xia))
   (g$make-no-nans-violation$12186$f3xia
     g$make-no-nans-violation$12447$f3xia
     (record-constructor g$5571$12182$f3xia))
   (g$no-nans-violation?$12187$f3xia
     g$no-nans-violation?$12448$f3xia
     (condition-predicate g$5570$12180$f3xia))
   (g$&no-nans-rtd$12188$f3xia
     g$&no-nans-rtd$12449$f3xia
     g$5570$12180$f3xia)
   (g$&no-nans-rcd$12189$f3xia
     g$&no-nans-rcd$12450$f3xia
     g$5571$12182$f3xia))
  (void))

(library-letrec* (ironscheme exceptions)
  ((g$assertion-violation$12451$f3xia
     g$assertion-violation$12459$f3xia
     (case-lambda
       ((g$who$12453$f3xia g$msg$12454$f3xia . g$irritants$12455$f3xia)
        (raise-continuable
          (condition
            (g$make-assertion-violation$12243$f3xia)
            (if g$who$12453$f3xia
              (g$make-who-condition$12261$f3xia g$who$12453$f3xia)
              (condition))
            (g$make-message-condition$12201$f3xia g$msg$12454$f3xia)
            (g$make-irritants-condition$12251$f3xia
              g$irritants$12455$f3xia))))))
   (g$error$12452$f3xia
     g$error$12460$f3xia
     (case-lambda
       ((g$who$12456$f3xia g$msg$12457$f3xia . g$irritants$12458$f3xia)
        (raise
          (condition
            (g$make-error$12227$f3xia)
            (if g$who$12456$f3xia
              (g$make-who-condition$12261$f3xia g$who$12456$f3xia)
              (condition))
            (g$make-message-condition$12201$f3xia g$msg$12457$f3xia)
            (g$make-irritants-condition$12251$f3xia
              g$irritants$12458$f3xia)))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$greatest-fixnum$13032$f3xia
     g$greatest-fixnum$15261$f3xia
     (case-lambda (() '2147483647)))
   (g$least-fixnum$13033$f3xia
     g$least-fixnum$15262$f3xia
     (case-lambda (() '-2147483648)))
   (g$fx+$13139$f3xia
     g$fx+$15263$f3xia
     (case-lambda
       ((g$x1$13534$f3xia g$x2$13535$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$13534$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx+
              '"not a fixnum"
              g$x1$13534$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$x2$13535$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx+
              '"not a fixnum"
              g$x2$13535$f3xia)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx+ g$x1$13534$f3xia g$x2$13535$f3xia)
                (g$overflow-error$13142$f3xia '#f)))))))))
   (g$fx*$13140$f3xia
     g$fx*$15264$f3xia
     (case-lambda
       ((g$x1$13536$f3xia g$x2$13537$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$13536$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx*
              '"not a fixnum"
              g$x1$13536$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$x2$13537$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx*
              '"not a fixnum"
              g$x2$13537$f3xia)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx* g$x1$13536$f3xia g$x2$13537$f3xia)
                (g$overflow-error$13142$f3xia '#f)))))))))
   (g$fx-$13141$f3xia
     g$fx-$15265$f3xia
     (case-lambda
       ((g$x1$13538$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$13538$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx-
              '"not a fixnum"
              g$x1$13538$f3xia)
            (void))
          (if ($fx=? (g$least-fixnum$13033$f3xia) g$x1$13538$f3xia)
            (g$overflow-error$13142$f3xia 'fx- g$x1$13538$f3xia)
            (void))
          ($$fx- g$x1$13538$f3xia)))
       ((g$x1$13539$f3xia g$x2$13540$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$13539$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx-
              '"not a fixnum"
              g$x1$13539$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$x2$13540$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx-
              '"not a fixnum"
              g$x2$13540$f3xia)
            (void))
          ($try
            ($fx- g$x1$13539$f3xia g$x2$13540$f3xia)
            (g$overflow-error$13142$f3xia '#f))))))
   (g$overflow-error$13142$f3xia
     g$overflow-error$15266$f3xia
     (case-lambda
       ((g$name$13541$f3xia . g$irritants$13542$f3xia)
        (raise
          (condition
            (g$make-implementation-restriction-violation$12299$f3xia)
            (g$make-who-condition$12261$f3xia g$name$13541$f3xia)
            (g$make-message-condition$12201$f3xia
              '"arithmetic overflow")
            (g$make-irritants-condition$12251$f3xia
              g$irritants$13542$f3xia))))))
   (g$residual-fxarithmetic-shift*$13158$f3xia
     g$residual-fxarithmetic-shift*$15267$f3xia
     (case-lambda
       ((g$x$13563$f3xia g$k$13564$f3xia)
        (if ($fx=? g$k$13564$f3xia '0)
          g$x$13563$f3xia
          (if ($fx<? g$k$13564$f3xia '0)
            ($fxarithmetic-shift-right
              g$x$13563$f3xia
              ($$fx- g$k$13564$f3xia))
            ((case-lambda
               (()
                (begin
                  '#f
                  ((case-lambda
                     ((g$i$13565$f3xia)
                      (begin
                        (if ($fx>?
                              (clr-call-internal
                                'System.Math
                                '"abs(int32)"
                                '()
                                g$x$13563$f3xia)
                              (clr-call-internal
                                'System.Math
                                '"abs(int32)"
                                '()
                                g$i$13565$f3xia))
                          (g$overflow-error$13142$f3xia
                            'fxarithmetic-shift
                            g$x$13563$f3xia
                            g$k$13564$f3xia)
                          (void))
                        g$i$13565$f3xia)))
                   ($fxarithmetic-shift-left
                     g$x$13563$f3xia
                     g$k$13564$f3xia)))))))))))
   (g$fxarithmetic-shift$13159$f3xia
     g$fxarithmetic-shift$15268$f3xia
     (case-lambda
       ((g$x$13566$f3xia g$k$13567$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x$13566$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxarithmetic-shift
              '"not a fixnum"
              g$x$13566$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$k$13567$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxarithmetic-shift
              '"not a fixnum"
              g$k$13567$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$13588$f3xia g$k$13589$f3xia)
                  (if ($fx=? g$k$13589$f3xia '0)
                    g$x$13588$f3xia
                    (if ($fx<? g$k$13589$f3xia '0)
                      ($fxarithmetic-shift-right
                        g$x$13588$f3xia
                        ($$fx- g$k$13589$f3xia))
                      ((case-lambda
                         (()
                          (begin
                            '#f
                            ((case-lambda
                               ((g$i$13590$f3xia)
                                (begin
                                  (if ($fx>?
                                        (clr-call-internal
                                          'System.Math
                                          '"abs(int32)"
                                          '()
                                          g$x$13588$f3xia)
                                        (clr-call-internal
                                          'System.Math
                                          '"abs(int32)"
                                          '()
                                          g$i$13590$f3xia))
                                    (g$overflow-error$13142$f3xia
                                      'fxarithmetic-shift
                                      g$x$13588$f3xia
                                      g$k$13589$f3xia)
                                    (void))
                                  g$i$13590$f3xia)))
                             ($fxarithmetic-shift-left
                               g$x$13588$f3xia
                               g$k$13589$f3xia))))))))))
               g$x$13566$f3xia
               g$k$13567$f3xia))))))))
   (g$residual-fxbit-count*$13175$f3xia
     g$residual-fxbit-count*$15269$f3xia
     (case-lambda
       ((g$x$13611$f3xia)
        (if ($fx<=? g$x$13611$f3xia '0)
          ($fxnot
            (g$residual-fxbit-count*$13175$f3xia
              ($fxnot g$x$13611$f3xia)))
          ((letrec ((g$f$13612$f3xia
                      (case-lambda
                        ((g$count$13613$f3xia g$x$13614$f3xia)
                         (if ($fx<? '0 g$x$13614$f3xia)
                           (g$f$13612$f3xia
                             ($$fx+
                               g$count$13613$f3xia
                               ($fxand g$x$13614$f3xia '1))
                             ($fxarithmetic-shift-right
                               g$x$13614$f3xia
                               '1))
                           g$count$13613$f3xia)))))
             g$f$13612$f3xia)
           '0
           g$x$13611$f3xia)))))
   (g$fxbit-count$13176$f3xia
     g$fxbit-count$15270$f3xia
     (case-lambda
       ((g$x$13615$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x$13615$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxbit-count
              '"not a fixnum"
              g$x$13615$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$13636$f3xia)
                  (if ($fx<=? g$x$13636$f3xia '0)
                    ($fxnot
                      (g$residual-fxbit-count*$13175$f3xia
                        ($fxnot g$x$13636$f3xia)))
                    ((letrec ((g$f$13637$f3xia
                                (case-lambda
                                  ((g$count$13638$f3xia g$x$13639$f3xia)
                                   (if ($fx<? '0 g$x$13639$f3xia)
                                     (g$f$13637$f3xia
                                       ($$fx+
                                         g$count$13638$f3xia
                                         ($fxand g$x$13639$f3xia '1))
                                       ($fxarithmetic-shift-right
                                         g$x$13639$f3xia
                                         '1))
                                     g$count$13638$f3xia)))))
                       g$f$13637$f3xia)
                     '0
                     g$x$13636$f3xia))))
               g$x$13615$f3xia))))))))
   (g$residual-fxlength*$13192$f3xia
     g$residual-fxlength*$15271$f3xia
     (case-lambda
       ((g$x$13660$f3xia)
        (if ($fx<? g$x$13660$f3xia '0)
          (g$residual-fxlength*$13192$f3xia ($fxnot g$x$13660$f3xia))
          ((letrec ((g$f$13661$f3xia
                      (case-lambda
                        ((g$count$13662$f3xia g$x$13663$f3xia)
                         (if ($fx<? '0 g$x$13663$f3xia)
                           (g$f$13661$f3xia
                             ($$fx+ g$count$13662$f3xia '1)
                             ($fxarithmetic-shift-right
                               g$x$13663$f3xia
                               '1))
                           g$count$13662$f3xia)))))
             g$f$13661$f3xia)
           '0
           g$x$13660$f3xia)))))
   (g$fxlength$13193$f3xia
     g$fxlength$15272$f3xia
     (case-lambda
       ((g$x$13664$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x$13664$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxlength
              '"not a fixnum"
              g$x$13664$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$13685$f3xia)
                  (if ($fx<? g$x$13685$f3xia '0)
                    (g$residual-fxlength*$13192$f3xia
                      ($fxnot g$x$13685$f3xia))
                    ((letrec ((g$f$13686$f3xia
                                (case-lambda
                                  ((g$count$13687$f3xia g$x$13688$f3xia)
                                   (if ($fx<? '0 g$x$13688$f3xia)
                                     (g$f$13686$f3xia
                                       ($$fx+ g$count$13687$f3xia '1)
                                       ($fxarithmetic-shift-right
                                         g$x$13688$f3xia
                                         '1))
                                     g$count$13687$f3xia)))))
                       g$f$13686$f3xia)
                     '0
                     g$x$13685$f3xia))))
               g$x$13664$f3xia))))))))
   (g$fxfirst-bit-set$13194$f3xia
     g$fxfirst-bit-set$15273$f3xia
     (case-lambda
       ((g$x$13689$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x$13689$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxfirst-bit-set
              '"not a fixnum"
              g$x$13689$f3xia)
            (void))
          ((case-lambda
             (()
              (if ($fx=? g$x$13689$f3xia '0)
                '-1
                ((letrec ((g$f$13690$f3xia
                            (case-lambda
                              ((g$count$13691$f3xia g$x$13692$f3xia)
                               (if (not ($fx=? '0 g$x$13692$f3xia))
                                 (if ($fx=?
                                       '1
                                       ($fxand '1 g$x$13692$f3xia))
                                   g$count$13691$f3xia
                                   (g$f$13690$f3xia
                                     ($$fx+ g$count$13691$f3xia '1)
                                     ($fxarithmetic-shift-right
                                       g$x$13692$f3xia
                                       '1)))
                                 g$count$13691$f3xia)))))
                   g$f$13690$f3xia)
                 '0
                 g$x$13689$f3xia)))))))))
   (g$fxbit-set?$13195$f3xia
     g$fxbit-set?$15274$f3xia
     (case-lambda
       ((g$x$13693$f3xia g$k$13694$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x$13693$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxbit-set?
              '"not a fixnum"
              g$x$13693$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$k$13694$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxbit-set?
              '"not a fixnum"
              g$k$13694$f3xia)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx<? g$k$13694$f3xia '0)
                  (g$assertion-violation$12459$f3xia
                    'fxbit-set?
                    '"cannot be negative"
                    g$k$13694$f3xia)
                  (void))
                (if ($fx>=? g$k$13694$f3xia '32)
                  (g$assertion-violation$12459$f3xia
                    'fxbit-set?
                    '"cannot be larger than 31"
                    g$k$13694$f3xia)
                  (void))
                (if ($fx=? '0 g$x$13693$f3xia)
                  '#f
                  ($fx=?
                    '1
                    ($fxand
                      '1
                      ($fxarithmetic-shift-right
                        g$x$13693$f3xia
                        g$k$13694$f3xia))))))))))))
   (g$fxnot$13196$f3xia
     g$fxnot$15275$f3xia
     (case-lambda
       ((g$x1$13695$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$13695$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxnot
              '"not a fixnum"
              g$x1$13695$f3xia)
            (void))
          ((case-lambda (() ($fxnot g$x1$13695$f3xia))))))))
   (g$fx=?$13247$f3xia
     g$fx=?$15276$f3xia
     (case-lambda
       ((g$x1$13696$f3xia g$x2$13697$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$13696$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx=?
              '"not a fixnum"
              g$x1$13696$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$x2$13697$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx=?
              '"not a fixnum"
              g$x2$13697$f3xia)
            (void))
          ($fx=? g$x1$13696$f3xia g$x2$13697$f3xia)))
       ((g$x1$13698$f3xia g$x2$13699$f3xia . g$rest$13700$f3xia)
        ((letrec ((g$f$13701$f3xia
                    (case-lambda
                      ((g$a$13702$f3xia g$b$13703$f3xia)
                       (if (null? g$b$13703$f3xia)
                         '#t
                         (if (g$fx=?$13247$f3xia
                               g$a$13702$f3xia
                               ($car g$b$13703$f3xia))
                           (g$f$13701$f3xia
                             ($car g$b$13703$f3xia)
                             ($cdr g$b$13703$f3xia))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$13701$f3xia)
         g$x1$13698$f3xia
         (cons g$x2$13699$f3xia g$rest$13700$f3xia)))))
   (g$fx<?$13248$f3xia
     g$fx<?$15277$f3xia
     (case-lambda
       ((g$x1$13704$f3xia g$x2$13705$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$13704$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx<?
              '"not a fixnum"
              g$x1$13704$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$x2$13705$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx<?
              '"not a fixnum"
              g$x2$13705$f3xia)
            (void))
          ($fx<? g$x1$13704$f3xia g$x2$13705$f3xia)))
       ((g$x1$13706$f3xia g$x2$13707$f3xia . g$rest$13708$f3xia)
        ((letrec ((g$f$13709$f3xia
                    (case-lambda
                      ((g$a$13710$f3xia g$b$13711$f3xia)
                       (if (null? g$b$13711$f3xia)
                         '#t
                         (if (g$fx<?$13248$f3xia
                               g$a$13710$f3xia
                               ($car g$b$13711$f3xia))
                           (g$f$13709$f3xia
                             ($car g$b$13711$f3xia)
                             ($cdr g$b$13711$f3xia))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$13709$f3xia)
         g$x1$13706$f3xia
         (cons g$x2$13707$f3xia g$rest$13708$f3xia)))))
   (g$fx<=?$13249$f3xia
     g$fx<=?$15278$f3xia
     (case-lambda
       ((g$x1$13712$f3xia g$x2$13713$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$13712$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx<=?
              '"not a fixnum"
              g$x1$13712$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$x2$13713$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx<=?
              '"not a fixnum"
              g$x2$13713$f3xia)
            (void))
          ($fx<=? g$x1$13712$f3xia g$x2$13713$f3xia)))
       ((g$x1$13714$f3xia g$x2$13715$f3xia . g$rest$13716$f3xia)
        ((letrec ((g$f$13717$f3xia
                    (case-lambda
                      ((g$a$13718$f3xia g$b$13719$f3xia)
                       (if (null? g$b$13719$f3xia)
                         '#t
                         (if (g$fx<=?$13249$f3xia
                               g$a$13718$f3xia
                               ($car g$b$13719$f3xia))
                           (g$f$13717$f3xia
                             ($car g$b$13719$f3xia)
                             ($cdr g$b$13719$f3xia))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$13717$f3xia)
         g$x1$13714$f3xia
         (cons g$x2$13715$f3xia g$rest$13716$f3xia)))))
   (g$fx>?$13250$f3xia
     g$fx>?$15279$f3xia
     (case-lambda
       ((g$x1$13720$f3xia g$x2$13721$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$13720$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx>?
              '"not a fixnum"
              g$x1$13720$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$x2$13721$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx>?
              '"not a fixnum"
              g$x2$13721$f3xia)
            (void))
          ($fx>? g$x1$13720$f3xia g$x2$13721$f3xia)))
       ((g$x1$13722$f3xia g$x2$13723$f3xia . g$rest$13724$f3xia)
        ((letrec ((g$f$13725$f3xia
                    (case-lambda
                      ((g$a$13726$f3xia g$b$13727$f3xia)
                       (if (null? g$b$13727$f3xia)
                         '#t
                         (if (g$fx>?$13250$f3xia
                               g$a$13726$f3xia
                               ($car g$b$13727$f3xia))
                           (g$f$13725$f3xia
                             ($car g$b$13727$f3xia)
                             ($cdr g$b$13727$f3xia))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$13725$f3xia)
         g$x1$13722$f3xia
         (cons g$x2$13723$f3xia g$rest$13724$f3xia)))))
   (g$fx>=?$13251$f3xia
     g$fx>=?$15280$f3xia
     (case-lambda
       ((g$x1$13728$f3xia g$x2$13729$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$13728$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx>=?
              '"not a fixnum"
              g$x1$13728$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$x2$13729$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx>=?
              '"not a fixnum"
              g$x2$13729$f3xia)
            (void))
          ($fx>=? g$x1$13728$f3xia g$x2$13729$f3xia)))
       ((g$x1$13730$f3xia g$x2$13731$f3xia . g$rest$13732$f3xia)
        ((letrec ((g$f$13733$f3xia
                    (case-lambda
                      ((g$a$13734$f3xia g$b$13735$f3xia)
                       (if (null? g$b$13735$f3xia)
                         '#t
                         (if (g$fx>=?$13251$f3xia
                               g$a$13734$f3xia
                               ($car g$b$13735$f3xia))
                           (g$f$13733$f3xia
                             ($car g$b$13735$f3xia)
                             ($cdr g$b$13735$f3xia))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$13733$f3xia)
         g$x1$13730$f3xia
         (cons g$x2$13731$f3xia g$rest$13732$f3xia)))))
   (g$fxand$13299$f3xia
     g$fxand$15281$f3xia
     (case-lambda
       (() '-1)
       ((g$x1$13736$f3xia g$x2$13737$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$13736$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxand
              '"not a fixnum"
              g$x1$13736$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$x2$13737$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxand
              '"not a fixnum"
              g$x2$13737$f3xia)
            (void))
          ($fxand g$x1$13736$f3xia g$x2$13737$f3xia)))
       (g$args$13738$f3xia
        (g$fold-left$15557$f3xia
          g$fxand$13299$f3xia
          (g$fxand$13299$f3xia)
          g$args$13738$f3xia))))
   (g$fxior$13300$f3xia
     g$fxior$15282$f3xia
     (case-lambda
       (() '0)
       ((g$x1$13739$f3xia g$x2$13740$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$13739$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxior
              '"not a fixnum"
              g$x1$13739$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$x2$13740$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxior
              '"not a fixnum"
              g$x2$13740$f3xia)
            (void))
          ($fxior g$x1$13739$f3xia g$x2$13740$f3xia)))
       (g$args$13741$f3xia
        (g$fold-left$15557$f3xia
          g$fxior$13300$f3xia
          (g$fxior$13300$f3xia)
          g$args$13741$f3xia))))
   (g$fxxor$13301$f3xia
     g$fxxor$15283$f3xia
     (case-lambda
       (() '0)
       ((g$x1$13742$f3xia g$x2$13743$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$13742$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxxor
              '"not a fixnum"
              g$x1$13742$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$x2$13743$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxxor
              '"not a fixnum"
              g$x2$13743$f3xia)
            (void))
          ($fxxor g$x1$13742$f3xia g$x2$13743$f3xia)))
       (g$args$13744$f3xia
        (g$fold-left$15557$f3xia
          g$fxxor$13301$f3xia
          (g$fxxor$13301$f3xia)
          g$args$13744$f3xia))))
   (g$residual-fxdiv*$13317$f3xia
     g$residual-fxdiv*$15284$f3xia
     (case-lambda
       ((g$x1$13765$f3xia g$x2$13766$f3xia)
        (begin
          (if ($fx=? '0 g$x2$13766$f3xia)
            (g$assertion-violation$12459$f3xia
              'fxdiv
              '"divide by zero"
              g$x1$13765$f3xia
              g$x2$13766$f3xia)
            (void))
          (if (if ($fx=? '-1 g$x2$13766$f3xia)
                (begin
                  '#f
                  ($fx=? (g$least-fixnum$13033$f3xia) g$x1$13765$f3xia))
                '#f)
            (g$overflow-error$13142$f3xia
              'fxdiv
              g$x1$13765$f3xia
              g$x2$13766$f3xia)
            (void))
          (if ($fx=? '0 g$x1$13765$f3xia)
            '0
            (if ($fx<? '0 g$x1$13765$f3xia)
              ((case-lambda
                 ((g$x1$13787$f3xia g$x2$13788$f3xia)
                  ($fxdiv0 g$x1$13787$f3xia g$x2$13788$f3xia)))
               g$x1$13765$f3xia
               g$x2$13766$f3xia)
              (if ($fx<? '0 g$x2$13766$f3xia)
                ((case-lambda
                   ((g$x1$13809$f3xia g$x2$13810$f3xia)
                    ($fxdiv0 g$x1$13809$f3xia g$x2$13810$f3xia)))
                 ($$fx- g$x1$13765$f3xia ($$fx- g$x2$13766$f3xia '1))
                 g$x2$13766$f3xia)
                ((case-lambda
                   (()
                    (begin
                      '#f
                      ((case-lambda
                         ((g$x1$13831$f3xia g$x2$13832$f3xia)
                          ($fxdiv0 g$x1$13831$f3xia g$x2$13832$f3xia)))
                       ($$fx+
                         g$x1$13765$f3xia
                         ($$fx+ g$x2$13766$f3xia '1))
                       g$x2$13766$f3xia))))))))))))
   (g$fxdiv$13318$f3xia
     g$fxdiv$15285$f3xia
     (case-lambda
       ((g$x1$13833$f3xia g$x2$13834$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$13833$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxdiv
              '"not a fixnum"
              g$x1$13833$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$x2$13834$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxdiv
              '"not a fixnum"
              g$x2$13834$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$13855$f3xia g$x2$13856$f3xia)
                  (begin
                    (if ($fx=? '0 g$x2$13856$f3xia)
                      (g$assertion-violation$12459$f3xia
                        'fxdiv
                        '"divide by zero"
                        g$x1$13855$f3xia
                        g$x2$13856$f3xia)
                      (void))
                    (if (if ($fx=? '-1 g$x2$13856$f3xia)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$13033$f3xia)
                              g$x1$13855$f3xia))
                          '#f)
                      (g$overflow-error$13142$f3xia
                        'fxdiv
                        g$x1$13855$f3xia
                        g$x2$13856$f3xia)
                      (void))
                    (if ($fx=? '0 g$x1$13855$f3xia)
                      '0
                      (if ($fx<? '0 g$x1$13855$f3xia)
                        ((case-lambda
                           ((g$x1$13877$f3xia g$x2$13878$f3xia)
                            ($fxdiv0
                              g$x1$13877$f3xia
                              g$x2$13878$f3xia)))
                         g$x1$13855$f3xia
                         g$x2$13856$f3xia)
                        (if ($fx<? '0 g$x2$13856$f3xia)
                          ((case-lambda
                             ((g$x1$13899$f3xia g$x2$13900$f3xia)
                              ($fxdiv0
                                g$x1$13899$f3xia
                                g$x2$13900$f3xia)))
                           ($$fx-
                             g$x1$13855$f3xia
                             ($$fx- g$x2$13856$f3xia '1))
                           g$x2$13856$f3xia)
                          ((case-lambda
                             (()
                              (begin
                                '#f
                                ((case-lambda
                                   ((g$x1$13921$f3xia g$x2$13922$f3xia)
                                    ($fxdiv0
                                      g$x1$13921$f3xia
                                      g$x2$13922$f3xia)))
                                 ($$fx+
                                   g$x1$13855$f3xia
                                   ($$fx+ g$x2$13856$f3xia '1))
                                 g$x2$13856$f3xia)))))))))))
               g$x1$13833$f3xia
               g$x2$13834$f3xia))))))))
   (g$residual-fxmod*$13334$f3xia
     g$residual-fxmod*$15286$f3xia
     (case-lambda
       ((g$x1$13943$f3xia g$x2$13944$f3xia)
        ($$fx-
          g$x1$13943$f3xia
          ($$fx*
            ((case-lambda
               ((g$x1$13965$f3xia g$x2$13966$f3xia)
                (begin
                  (if ($fx=? '0 g$x2$13966$f3xia)
                    (g$assertion-violation$12459$f3xia
                      'fxdiv
                      '"divide by zero"
                      g$x1$13965$f3xia
                      g$x2$13966$f3xia)
                    (void))
                  (if (if ($fx=? '-1 g$x2$13966$f3xia)
                        (begin
                          '#f
                          ($fx=?
                            (g$least-fixnum$13033$f3xia)
                            g$x1$13965$f3xia))
                        '#f)
                    (g$overflow-error$13142$f3xia
                      'fxdiv
                      g$x1$13965$f3xia
                      g$x2$13966$f3xia)
                    (void))
                  (if ($fx=? '0 g$x1$13965$f3xia)
                    '0
                    (if ($fx<? '0 g$x1$13965$f3xia)
                      ((case-lambda
                         ((g$x1$13987$f3xia g$x2$13988$f3xia)
                          ($fxdiv0 g$x1$13987$f3xia g$x2$13988$f3xia)))
                       g$x1$13965$f3xia
                       g$x2$13966$f3xia)
                      (if ($fx<? '0 g$x2$13966$f3xia)
                        ((case-lambda
                           ((g$x1$14009$f3xia g$x2$14010$f3xia)
                            ($fxdiv0
                              g$x1$14009$f3xia
                              g$x2$14010$f3xia)))
                         ($$fx-
                           g$x1$13965$f3xia
                           ($$fx- g$x2$13966$f3xia '1))
                         g$x2$13966$f3xia)
                        ((case-lambda
                           (()
                            (begin
                              '#f
                              ((case-lambda
                                 ((g$x1$14031$f3xia g$x2$14032$f3xia)
                                  ($fxdiv0
                                    g$x1$14031$f3xia
                                    g$x2$14032$f3xia)))
                               ($$fx+
                                 g$x1$13965$f3xia
                                 ($$fx+ g$x2$13966$f3xia '1))
                               g$x2$13966$f3xia)))))))))))
             g$x1$13943$f3xia
             g$x2$13944$f3xia)
            g$x2$13944$f3xia)))))
   (g$fxmod$13335$f3xia
     g$fxmod$15287$f3xia
     (case-lambda
       ((g$x1$14033$f3xia g$x2$14034$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$14033$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxmod
              '"not a fixnum"
              g$x1$14033$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$x2$14034$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxmod
              '"not a fixnum"
              g$x2$14034$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$14055$f3xia g$x2$14056$f3xia)
                  ($$fx-
                    g$x1$14055$f3xia
                    ($$fx*
                      ((case-lambda
                         ((g$x1$14077$f3xia g$x2$14078$f3xia)
                          (begin
                            (if ($fx=? '0 g$x2$14078$f3xia)
                              (g$assertion-violation$12459$f3xia
                                'fxdiv
                                '"divide by zero"
                                g$x1$14077$f3xia
                                g$x2$14078$f3xia)
                              (void))
                            (if (if ($fx=? '-1 g$x2$14078$f3xia)
                                  (begin
                                    '#f
                                    ($fx=?
                                      (g$least-fixnum$13033$f3xia)
                                      g$x1$14077$f3xia))
                                  '#f)
                              (g$overflow-error$13142$f3xia
                                'fxdiv
                                g$x1$14077$f3xia
                                g$x2$14078$f3xia)
                              (void))
                            (if ($fx=? '0 g$x1$14077$f3xia)
                              '0
                              (if ($fx<? '0 g$x1$14077$f3xia)
                                ((case-lambda
                                   ((g$x1$14099$f3xia g$x2$14100$f3xia)
                                    ($fxdiv0
                                      g$x1$14099$f3xia
                                      g$x2$14100$f3xia)))
                                 g$x1$14077$f3xia
                                 g$x2$14078$f3xia)
                                (if ($fx<? '0 g$x2$14078$f3xia)
                                  ((case-lambda
                                     ((g$x1$14121$f3xia
                                        g$x2$14122$f3xia)
                                      ($fxdiv0
                                        g$x1$14121$f3xia
                                        g$x2$14122$f3xia)))
                                   ($$fx-
                                     g$x1$14077$f3xia
                                     ($$fx- g$x2$14078$f3xia '1))
                                   g$x2$14078$f3xia)
                                  ((case-lambda
                                     (()
                                      (begin
                                        '#f
                                        ((case-lambda
                                           ((g$x1$14143$f3xia
                                              g$x2$14144$f3xia)
                                            ($fxdiv0
                                              g$x1$14143$f3xia
                                              g$x2$14144$f3xia)))
                                         ($$fx+
                                           g$x1$14077$f3xia
                                           ($$fx+ g$x2$14078$f3xia '1))
                                         g$x2$14078$f3xia)))))))))))
                       g$x1$14055$f3xia
                       g$x2$14056$f3xia)
                      g$x2$14056$f3xia))))
               g$x1$14033$f3xia
               g$x2$14034$f3xia))))))))
   (g$fxmod0$13336$f3xia
     g$fxmod0$15288$f3xia
     (case-lambda
       ((g$x1$14145$f3xia g$x2$14146$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$14145$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxmod0
              '"not a fixnum"
              g$x1$14145$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$x2$14146$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxmod0
              '"not a fixnum"
              g$x2$14146$f3xia)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx=? '0 g$x2$14146$f3xia)
                  (g$assertion-violation$12459$f3xia
                    'fxmod0
                    '"divide by zero"
                    g$x1$14145$f3xia
                    g$x2$14146$f3xia)
                  (void))
                (if (if ($fx=? '-1 g$x2$14146$f3xia)
                      (begin
                        '#f
                        ($fx=?
                          (g$least-fixnum$13033$f3xia)
                          g$x1$14145$f3xia))
                      '#f)
                  (g$overflow-error$13142$f3xia
                    'fxmod0
                    g$x1$14145$f3xia
                    g$x2$14146$f3xia)
                  (void))
                ($fxmod0 g$x1$14145$f3xia g$x2$14146$f3xia)))))))))
   (g$fxdiv-and-mod$13337$f3xia
     g$fxdiv-and-mod$15289$f3xia
     (case-lambda
       ((g$x1$14147$f3xia g$x2$14148$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$14147$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxdiv-and-mod
              '"not a fixnum"
              g$x1$14147$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$x2$14148$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxdiv-and-mod
              '"not a fixnum"
              g$x2$14148$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$14149$f3xia)
                  (values
                    g$d$14149$f3xia
                    ($$fx-
                      g$x1$14147$f3xia
                      ($$fx* g$d$14149$f3xia g$x2$14148$f3xia)))))
               ((case-lambda
                  ((g$x1$14170$f3xia g$x2$14171$f3xia)
                   (begin
                     (if ($fx=? '0 g$x2$14171$f3xia)
                       (g$assertion-violation$12459$f3xia
                         'fxdiv
                         '"divide by zero"
                         g$x1$14170$f3xia
                         g$x2$14171$f3xia)
                       (void))
                     (if (if ($fx=? '-1 g$x2$14171$f3xia)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$13033$f3xia)
                               g$x1$14170$f3xia))
                           '#f)
                       (g$overflow-error$13142$f3xia
                         'fxdiv
                         g$x1$14170$f3xia
                         g$x2$14171$f3xia)
                       (void))
                     (if ($fx=? '0 g$x1$14170$f3xia)
                       '0
                       (if ($fx<? '0 g$x1$14170$f3xia)
                         ((case-lambda
                            ((g$x1$14192$f3xia g$x2$14193$f3xia)
                             ($fxdiv0
                               g$x1$14192$f3xia
                               g$x2$14193$f3xia)))
                          g$x1$14170$f3xia
                          g$x2$14171$f3xia)
                         (if ($fx<? '0 g$x2$14171$f3xia)
                           ((case-lambda
                              ((g$x1$14214$f3xia g$x2$14215$f3xia)
                               ($fxdiv0
                                 g$x1$14214$f3xia
                                 g$x2$14215$f3xia)))
                            ($$fx-
                              g$x1$14170$f3xia
                              ($$fx- g$x2$14171$f3xia '1))
                            g$x2$14171$f3xia)
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$x1$14236$f3xia g$x2$14237$f3xia)
                                     ($fxdiv0
                                       g$x1$14236$f3xia
                                       g$x2$14237$f3xia)))
                                  ($$fx+
                                    g$x1$14170$f3xia
                                    ($$fx+ g$x2$14171$f3xia '1))
                                  g$x2$14171$f3xia)))))))))))
                g$x1$14147$f3xia
                g$x2$14148$f3xia)))))))))
   (g$residual-fxdiv0*$13353$f3xia
     g$residual-fxdiv0*$15290$f3xia
     (case-lambda
       ((g$x1$14258$f3xia g$x2$14259$f3xia)
        (begin
          (if ($fx=? '0 g$x2$14259$f3xia)
            (g$assertion-violation$12459$f3xia
              'fxdiv0
              '"divide by zero"
              g$x1$14258$f3xia
              g$x2$14259$f3xia)
            (void))
          (if (if ($fx=? '-1 g$x2$14259$f3xia)
                (begin
                  '#f
                  ($fx=? (g$least-fixnum$13033$f3xia) g$x1$14258$f3xia))
                '#f)
            (g$overflow-error$13142$f3xia
              'fxdiv0
              g$x1$14258$f3xia
              g$x2$14259$f3xia)
            (void))
          ((case-lambda
             ((g$x1$14280$f3xia g$x2$14281$f3xia)
              ($fxdiv0 g$x1$14280$f3xia g$x2$14281$f3xia)))
           g$x1$14258$f3xia
           g$x2$14259$f3xia)))))
   (g$fxdiv0$13354$f3xia
     g$fxdiv0$15291$f3xia
     (case-lambda
       ((g$x1$14282$f3xia g$x2$14283$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$14282$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxdiv0
              '"not a fixnum"
              g$x1$14282$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$x2$14283$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxdiv0
              '"not a fixnum"
              g$x2$14283$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$14304$f3xia g$x2$14305$f3xia)
                  (begin
                    (if ($fx=? '0 g$x2$14305$f3xia)
                      (g$assertion-violation$12459$f3xia
                        'fxdiv0
                        '"divide by zero"
                        g$x1$14304$f3xia
                        g$x2$14305$f3xia)
                      (void))
                    (if (if ($fx=? '-1 g$x2$14305$f3xia)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$13033$f3xia)
                              g$x1$14304$f3xia))
                          '#f)
                      (g$overflow-error$13142$f3xia
                        'fxdiv0
                        g$x1$14304$f3xia
                        g$x2$14305$f3xia)
                      (void))
                    ((case-lambda
                       ((g$x1$14326$f3xia g$x2$14327$f3xia)
                        ($fxdiv0 g$x1$14326$f3xia g$x2$14327$f3xia)))
                     g$x1$14304$f3xia
                     g$x2$14305$f3xia))))
               g$x1$14282$f3xia
               g$x2$14283$f3xia))))))))
   (g$residual-%%fxdiv0$13370$f3xia
     g$residual-%%fxdiv0$15292$f3xia
     (case-lambda
       ((g$x1$14348$f3xia g$x2$14349$f3xia)
        ($fxdiv0 g$x1$14348$f3xia g$x2$14349$f3xia))))
   (g$fxdiv0-and-mod0$13371$f3xia
     g$fxdiv0-and-mod0$15293$f3xia
     (case-lambda
       ((g$x1$14350$f3xia g$x2$14351$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$14350$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x1$14350$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$x2$14351$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x2$14351$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$14352$f3xia)
                  (values
                    g$d$14352$f3xia
                    ($$fx-
                      g$x1$14350$f3xia
                      ($$fx* g$d$14352$f3xia g$x2$14351$f3xia)))))
               ((case-lambda
                  ((g$x1$14373$f3xia g$x2$14374$f3xia)
                   (begin
                     (if ($fx=? '0 g$x2$14374$f3xia)
                       (g$assertion-violation$12459$f3xia
                         'fxdiv0
                         '"divide by zero"
                         g$x1$14373$f3xia
                         g$x2$14374$f3xia)
                       (void))
                     (if (if ($fx=? '-1 g$x2$14374$f3xia)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$13033$f3xia)
                               g$x1$14373$f3xia))
                           '#f)
                       (g$overflow-error$13142$f3xia
                         'fxdiv0
                         g$x1$14373$f3xia
                         g$x2$14374$f3xia)
                       (void))
                     ((case-lambda
                        ((g$x1$14395$f3xia g$x2$14396$f3xia)
                         ($fxdiv0 g$x1$14395$f3xia g$x2$14396$f3xia)))
                      g$x1$14373$f3xia
                      g$x2$14374$f3xia))))
                g$x1$14350$f3xia
                g$x2$14351$f3xia)))))))))
   (g$residual-fxpositive?*$13387$f3xia
     g$residual-fxpositive?*$15294$f3xia
     (case-lambda ((g$r$14417$f3xia) ($fx<? '0 g$r$14417$f3xia))))
   (g$fxpositive?$13388$f3xia
     g$fxpositive?$15295$f3xia
     (case-lambda
       ((g$r$14418$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$r$14418$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxpositive?
              '"not a fixnum"
              g$r$14418$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$14439$f3xia) ($fx<? '0 g$r$14439$f3xia)))
               g$r$14418$f3xia))))))))
   (g$residual-fxnegative?*$13404$f3xia
     g$residual-fxnegative?*$15296$f3xia
     (case-lambda ((g$r$14460$f3xia) ($fx>? '0 g$r$14460$f3xia))))
   (g$fxnegative?$13405$f3xia
     g$fxnegative?$15297$f3xia
     (case-lambda
       ((g$r$14461$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$r$14461$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxnegative?
              '"not a fixnum"
              g$r$14461$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$14482$f3xia) ($fx>? '0 g$r$14482$f3xia)))
               g$r$14461$f3xia))))))))
   (g$residual-fxzero?*$13421$f3xia
     g$residual-fxzero?*$15298$f3xia
     (case-lambda ((g$r$14503$f3xia) ($fx=? '0 g$r$14503$f3xia))))
   (g$fxzero?$13422$f3xia
     g$fxzero?$15299$f3xia
     (case-lambda
       ((g$r$14504$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$r$14504$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxzero?
              '"not a fixnum"
              g$r$14504$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$14525$f3xia) ($fx=? '0 g$r$14525$f3xia)))
               g$r$14504$f3xia))))))))
   (g$residual-fxeven?*$13438$f3xia
     g$residual-fxeven?*$15300$f3xia
     (case-lambda
       ((g$n$14546$f3xia) ($fx=? '0 ($fxand g$n$14546$f3xia '1)))))
   (g$fxeven?$13439$f3xia
     g$fxeven?$15301$f3xia
     (case-lambda
       ((g$n$14547$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$n$14547$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxeven?
              '"not a fixnum"
              g$n$14547$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$14568$f3xia)
                  ($fx=? '0 ($fxand g$n$14568$f3xia '1))))
               g$n$14547$f3xia))))))))
   (g$residual-fxodd?*$13455$f3xia
     g$residual-fxodd?*$15302$f3xia
     (case-lambda
       ((g$n$14589$f3xia) ($fx=? '1 ($fxand g$n$14589$f3xia '1)))))
   (g$fxodd?$13456$f3xia
     g$fxodd?$15303$f3xia
     (case-lambda
       ((g$n$14590$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$n$14590$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxodd?
              '"not a fixnum"
              g$n$14590$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$14611$f3xia)
                  ($fx=? '1 ($fxand g$n$14611$f3xia '1))))
               g$n$14590$f3xia))))))))
   (g$fxmax$13457$f3xia
     g$fxmax$15304$f3xia
     (case-lambda
       ((g$a$14612$f3xia . g$rest$14613$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$a$14612$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxmax
              '"not a fixnum"
              g$a$14612$f3xia)
            (void))
          (g$fold-left$15557$f3xia
            (case-lambda
              ((g$a$14614$f3xia g$b$14615$f3xia)
               (if (g$fx<?$13248$f3xia g$a$14614$f3xia g$b$14615$f3xia)
                 g$b$14615$f3xia
                 g$a$14614$f3xia)))
            g$a$14612$f3xia
            g$rest$14613$f3xia)))))
   (g$fxmin$13458$f3xia
     g$fxmin$15305$f3xia
     (case-lambda
       ((g$a$14616$f3xia . g$rest$14617$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$a$14616$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxmin
              '"not a fixnum"
              g$a$14616$f3xia)
            (void))
          (g$fold-left$15557$f3xia
            (case-lambda
              ((g$a$14618$f3xia g$b$14619$f3xia)
               (if (g$fx>?$13250$f3xia g$a$14618$f3xia g$b$14619$f3xia)
                 g$b$14619$f3xia
                 g$a$14618$f3xia)))
            g$a$14616$f3xia
            g$rest$14617$f3xia)))))
   (g$fx*/carry$13459$f3xia
     g$fx*/carry$15306$f3xia
     (case-lambda
       ((g$fx1$14620$f3xia g$fx2$14621$f3xia g$fx3$14622$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$fx1$14620$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx*/carry
              '"not a fixnum"
              g$fx1$14620$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$fx2$14621$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx*/carry
              '"not a fixnum"
              g$fx2$14621$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$fx3$14622$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx*/carry
              '"not a fixnum"
              g$fx3$14622$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$14623$f3xia g$e$14624$f3xia)
                  (values
                    (g$mod0$16000$f3xia g$s$14623$f3xia g$e$14624$f3xia)
                    (g$div0$15998$f3xia
                      g$s$14623$f3xia
                      g$e$14624$f3xia))))
               (+ (* g$fx1$14620$f3xia g$fx2$14621$f3xia)
                  g$fx3$14622$f3xia)
               (g$expt$17071$f3xia
                 '2
                 (g$fixnum-width$15981$f3xia))))))))))
   (g$fx-/carry$13460$f3xia
     g$fx-/carry$15307$f3xia
     (case-lambda
       ((g$fx1$14625$f3xia g$fx2$14626$f3xia g$fx3$14627$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$fx1$14625$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx-/carry
              '"not a fixnum"
              g$fx1$14625$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$fx2$14626$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx-/carry
              '"not a fixnum"
              g$fx2$14626$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$fx3$14627$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx-/carry
              '"not a fixnum"
              g$fx3$14627$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$14628$f3xia g$e$14629$f3xia)
                  (values
                    (g$mod0$16000$f3xia g$s$14628$f3xia g$e$14629$f3xia)
                    (g$div0$15998$f3xia
                      g$s$14628$f3xia
                      g$e$14629$f3xia))))
               (- g$fx1$14625$f3xia g$fx2$14626$f3xia g$fx3$14627$f3xia)
               (g$expt$17071$f3xia
                 '2
                 (g$fixnum-width$15981$f3xia))))))))))
   (g$fx+/carry$13461$f3xia
     g$fx+/carry$15308$f3xia
     (case-lambda
       ((g$fx1$14630$f3xia g$fx2$14631$f3xia g$fx3$14632$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$fx1$14630$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx+/carry
              '"not a fixnum"
              g$fx1$14630$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$fx2$14631$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx+/carry
              '"not a fixnum"
              g$fx2$14631$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$fx3$14632$f3xia))
            (g$assertion-violation$12459$f3xia
              'fx+/carry
              '"not a fixnum"
              g$fx3$14632$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$14633$f3xia g$e$14634$f3xia)
                  (values
                    (g$mod0$16000$f3xia g$s$14633$f3xia g$e$14634$f3xia)
                    (g$div0$15998$f3xia
                      g$s$14633$f3xia
                      g$e$14634$f3xia))))
               (+ g$fx1$14630$f3xia g$fx2$14631$f3xia g$fx3$14632$f3xia)
               (g$expt$17071$f3xia
                 '2
                 (g$fixnum-width$15981$f3xia))))))))))
   (g$residual-fxif*$13477$f3xia
     g$residual-fxif*$15309$f3xia
     (case-lambda
       ((g$fx1$14655$f3xia g$fx2$14656$f3xia g$fx3$14657$f3xia)
        ($fxior
          ($fxand g$fx1$14655$f3xia g$fx2$14656$f3xia)
          ($fxand ($fxnot g$fx1$14655$f3xia) g$fx3$14657$f3xia)))))
   (g$fxif$13478$f3xia
     g$fxif$15310$f3xia
     (case-lambda
       ((g$fx1$14658$f3xia g$fx2$14659$f3xia g$fx3$14660$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$fx1$14658$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxif
              '"not a fixnum"
              g$fx1$14658$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$fx2$14659$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxif
              '"not a fixnum"
              g$fx2$14659$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$fx3$14660$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxif
              '"not a fixnum"
              g$fx3$14660$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$14681$f3xia
                    g$fx2$14682$f3xia
                    g$fx3$14683$f3xia)
                  ($fxior
                    ($fxand g$fx1$14681$f3xia g$fx2$14682$f3xia)
                    ($fxand
                      ($fxnot g$fx1$14681$f3xia)
                      g$fx3$14683$f3xia))))
               g$fx1$14658$f3xia
               g$fx2$14659$f3xia
               g$fx3$14660$f3xia))))))))
   (g$residual-fxcopy-bit*$13494$f3xia
     g$residual-fxcopy-bit*$15311$f3xia
     (case-lambda
       ((g$fx1$14704$f3xia g$fx2$14705$f3xia g$fx3$14706$f3xia)
        ((case-lambda
           ((g$fx1$14727$f3xia g$fx2$14728$f3xia g$fx3$14729$f3xia)
            ($fxior
              ($fxand g$fx1$14727$f3xia g$fx2$14728$f3xia)
              ($fxand ($fxnot g$fx1$14727$f3xia) g$fx3$14729$f3xia))))
         ($fxarithmetic-shift-left '1 g$fx2$14705$f3xia)
         ($fxarithmetic-shift-left g$fx3$14706$f3xia g$fx2$14705$f3xia)
         g$fx1$14704$f3xia))))
   (g$fxcopy-bit$13495$f3xia
     g$fxcopy-bit$15312$f3xia
     (case-lambda
       ((g$fx1$14730$f3xia g$fx2$14731$f3xia g$fx3$14732$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$fx1$14730$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxcopy-bit
              '"not a fixnum"
              g$fx1$14730$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$fx2$14731$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxcopy-bit
              '"not a fixnum"
              g$fx2$14731$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$fx3$14732$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxcopy-bit
              '"not a fixnum"
              g$fx3$14732$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$14753$f3xia
                    g$fx2$14754$f3xia
                    g$fx3$14755$f3xia)
                  ((case-lambda
                     ((g$fx1$14776$f3xia
                        g$fx2$14777$f3xia
                        g$fx3$14778$f3xia)
                      ($fxior
                        ($fxand g$fx1$14776$f3xia g$fx2$14777$f3xia)
                        ($fxand
                          ($fxnot g$fx1$14776$f3xia)
                          g$fx3$14778$f3xia))))
                   ($fxarithmetic-shift-left '1 g$fx2$14754$f3xia)
                   ($fxarithmetic-shift-left
                     g$fx3$14755$f3xia
                     g$fx2$14754$f3xia)
                   g$fx1$14753$f3xia)))
               g$fx1$14730$f3xia
               g$fx2$14731$f3xia
               g$fx3$14732$f3xia))))))))
   (g$residual-fxbit-field*$13511$f3xia
     g$residual-fxbit-field*$15313$f3xia
     (case-lambda
       ((g$fx1$14799$f3xia g$fx2$14800$f3xia g$fx3$14801$f3xia)
        ($fxarithmetic-shift-right
          ($fxand
            g$fx1$14799$f3xia
            ($fxnot ($fxarithmetic-shift-left '-1 g$fx3$14801$f3xia)))
          g$fx2$14800$f3xia))))
   (g$fxbit-field$13512$f3xia
     g$fxbit-field$15314$f3xia
     (case-lambda
       ((g$fx1$14802$f3xia g$fx2$14803$f3xia g$fx3$14804$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$fx1$14802$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxbit-field
              '"not a fixnum"
              g$fx1$14802$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$fx2$14803$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxbit-field
              '"not a fixnum"
              g$fx2$14803$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$fx3$14804$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxbit-field
              '"not a fixnum"
              g$fx3$14804$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$14825$f3xia
                    g$fx2$14826$f3xia
                    g$fx3$14827$f3xia)
                  ($fxarithmetic-shift-right
                    ($fxand
                      g$fx1$14825$f3xia
                      ($fxnot
                        ($fxarithmetic-shift-left
                          '-1
                          g$fx3$14827$f3xia)))
                    g$fx2$14826$f3xia)))
               g$fx1$14802$f3xia
               g$fx2$14803$f3xia
               g$fx3$14804$f3xia))))))))
   (g$residual-fxcopy-bit-field*$13528$f3xia
     g$residual-fxcopy-bit-field*$15315$f3xia
     (case-lambda
       ((g$to$14848$f3xia
          g$start$14849$f3xia
          g$end$14850$f3xia
          g$from$14851$f3xia)
        ((case-lambda
           ((g$fx1$14872$f3xia g$fx2$14873$f3xia g$fx3$14874$f3xia)
            ($fxior
              ($fxand g$fx1$14872$f3xia g$fx2$14873$f3xia)
              ($fxand ($fxnot g$fx1$14872$f3xia) g$fx3$14874$f3xia))))
         ($fxand
           ($fxarithmetic-shift-left '-1 g$start$14849$f3xia)
           ($fxnot ($fxarithmetic-shift-left '-1 g$end$14850$f3xia)))
         ($fxarithmetic-shift-left
           g$from$14851$f3xia
           g$start$14849$f3xia)
         g$to$14848$f3xia))))
   (g$fxcopy-bit-field$13529$f3xia
     g$fxcopy-bit-field$15316$f3xia
     (case-lambda
       ((g$to$14875$f3xia
          g$start$14876$f3xia
          g$end$14877$f3xia
          g$from$14878$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$to$14875$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxcopy-bit-field
              '"not a fixnum"
              g$to$14875$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$start$14876$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxcopy-bit-field
              '"not a fixnum"
              g$start$14876$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$end$14877$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxcopy-bit-field
              '"not a fixnum"
              g$end$14877$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$from$14878$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxcopy-bit-field
              '"not a fixnum"
              g$from$14878$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$to$14899$f3xia
                    g$start$14900$f3xia
                    g$end$14901$f3xia
                    g$from$14902$f3xia)
                  ((case-lambda
                     ((g$fx1$14923$f3xia
                        g$fx2$14924$f3xia
                        g$fx3$14925$f3xia)
                      ($fxior
                        ($fxand g$fx1$14923$f3xia g$fx2$14924$f3xia)
                        ($fxand
                          ($fxnot g$fx1$14923$f3xia)
                          g$fx3$14925$f3xia))))
                   ($fxand
                     ($fxarithmetic-shift-left '-1 g$start$14900$f3xia)
                     ($fxnot
                       ($fxarithmetic-shift-left
                         '-1
                         g$end$14901$f3xia)))
                   ($fxarithmetic-shift-left
                     g$from$14902$f3xia
                     g$start$14900$f3xia)
                   g$to$14899$f3xia)))
               g$to$14875$f3xia
               g$start$14876$f3xia
               g$end$14877$f3xia
               g$from$14878$f3xia))))))))
   (g$fxarithmetic-shift-left$13530$f3xia
     g$fxarithmetic-shift-left$15317$f3xia
     (case-lambda
       ((g$fx1$14926$f3xia g$fx2$14927$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$fx1$14926$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx1$14926$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$fx2$14927$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx2$14927$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$14948$f3xia g$k$14949$f3xia)
                  (if ($fx=? g$k$14949$f3xia '0)
                    g$x$14948$f3xia
                    (if ($fx<? g$k$14949$f3xia '0)
                      ($fxarithmetic-shift-right
                        g$x$14948$f3xia
                        ($$fx- g$k$14949$f3xia))
                      ((case-lambda
                         (()
                          (begin
                            '#f
                            ((case-lambda
                               ((g$i$14950$f3xia)
                                (begin
                                  (if ($fx>?
                                        (clr-call-internal
                                          'System.Math
                                          '"abs(int32)"
                                          '()
                                          g$x$14948$f3xia)
                                        (clr-call-internal
                                          'System.Math
                                          '"abs(int32)"
                                          '()
                                          g$i$14950$f3xia))
                                    (g$overflow-error$13142$f3xia
                                      'fxarithmetic-shift
                                      g$x$14948$f3xia
                                      g$k$14949$f3xia)
                                    (void))
                                  g$i$14950$f3xia)))
                             ($fxarithmetic-shift-left
                               g$x$14948$f3xia
                               g$k$14949$f3xia))))))))))
               g$fx1$14926$f3xia
               g$fx2$14927$f3xia))))))))
   (g$fxarithmetic-shift-right$13531$f3xia
     g$fxarithmetic-shift-right$15318$f3xia
     (case-lambda
       ((g$fx1$14951$f3xia g$fx2$14952$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$fx1$14951$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx1$14951$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$fx2$14952$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx2$14952$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$14973$f3xia g$k$14974$f3xia)
                  (if ($fx=? g$k$14974$f3xia '0)
                    g$x$14973$f3xia
                    (if ($fx<? g$k$14974$f3xia '0)
                      ($fxarithmetic-shift-right
                        g$x$14973$f3xia
                        ($$fx- g$k$14974$f3xia))
                      ((case-lambda
                         (()
                          (begin
                            '#f
                            ((case-lambda
                               ((g$i$14975$f3xia)
                                (begin
                                  (if ($fx>?
                                        (clr-call-internal
                                          'System.Math
                                          '"abs(int32)"
                                          '()
                                          g$x$14973$f3xia)
                                        (clr-call-internal
                                          'System.Math
                                          '"abs(int32)"
                                          '()
                                          g$i$14975$f3xia))
                                    (g$overflow-error$13142$f3xia
                                      'fxarithmetic-shift
                                      g$x$14973$f3xia
                                      g$k$14974$f3xia)
                                    (void))
                                  g$i$14975$f3xia)))
                             ($fxarithmetic-shift-left
                               g$x$14973$f3xia
                               g$k$14974$f3xia))))))))))
               g$fx1$14951$f3xia
               ($$fx- g$fx2$14952$f3xia)))))))))
   (g$fxrotate-bit-field$13532$f3xia
     g$fxrotate-bit-field$15319$f3xia
     (case-lambda
       ((g$n$14976$f3xia
          g$start$14977$f3xia
          g$end$14978$f3xia
          g$count$14979$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$n$14976$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxrotate-bit-field
              '"not a fixnum"
              g$n$14976$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$start$14977$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxrotate-bit-field
              '"not a fixnum"
              g$start$14977$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$end$14978$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxrotate-bit-field
              '"not a fixnum"
              g$end$14978$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$count$14979$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxrotate-bit-field
              '"not a fixnum"
              g$count$14979$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$width$14980$f3xia)
                  (if ((case-lambda
                         ((g$r$15001$f3xia) ($fx<? '0 g$r$15001$f3xia)))
                       g$width$14980$f3xia)
                    ((case-lambda
                       ((g$count$15002$f3xia g$field$15003$f3xia)
                        ((case-lambda
                           ((g$to$15024$f3xia
                              g$start$15025$f3xia
                              g$end$15026$f3xia
                              g$from$15027$f3xia)
                            ((case-lambda
                               ((g$fx1$15048$f3xia
                                  g$fx2$15049$f3xia
                                  g$fx3$15050$f3xia)
                                ($fxior
                                  ($fxand
                                    g$fx1$15048$f3xia
                                    g$fx2$15049$f3xia)
                                  ($fxand
                                    ($fxnot g$fx1$15048$f3xia)
                                    g$fx3$15050$f3xia))))
                             ($fxand
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$start$15025$f3xia)
                               ($fxnot
                                 ($fxarithmetic-shift-left
                                   '-1
                                   g$end$15026$f3xia)))
                             ($fxarithmetic-shift-left
                               g$from$15027$f3xia
                               g$start$15025$f3xia)
                             g$to$15024$f3xia)))
                         g$n$14976$f3xia
                         g$start$14977$f3xia
                         g$end$14978$f3xia
                         ($fxior
                           ($fxarithmetic-shift-left
                             g$field$15003$f3xia
                             g$count$15002$f3xia)
                           ($fxarithmetic-shift-right
                             g$field$15003$f3xia
                             ($$fx-
                               g$width$14980$f3xia
                               g$count$15002$f3xia))))))
                     ((case-lambda
                        ((g$x1$15071$f3xia g$x2$15072$f3xia)
                         ($$fx-
                           g$x1$15071$f3xia
                           ($$fx*
                             ((case-lambda
                                ((g$x1$15093$f3xia g$x2$15094$f3xia)
                                 (begin
                                   (if ($fx=? '0 g$x2$15094$f3xia)
                                     (g$assertion-violation$12459$f3xia
                                       'fxdiv
                                       '"divide by zero"
                                       g$x1$15093$f3xia
                                       g$x2$15094$f3xia)
                                     (void))
                                   (if (if ($fx=? '-1 g$x2$15094$f3xia)
                                         (begin
                                           '#f
                                           ($fx=?
                                             (g$least-fixnum$13033$f3xia)
                                             g$x1$15093$f3xia))
                                         '#f)
                                     (g$overflow-error$13142$f3xia
                                       'fxdiv
                                       g$x1$15093$f3xia
                                       g$x2$15094$f3xia)
                                     (void))
                                   (if ($fx=? '0 g$x1$15093$f3xia)
                                     '0
                                     (if ($fx<? '0 g$x1$15093$f3xia)
                                       ((case-lambda
                                          ((g$x1$15115$f3xia
                                             g$x2$15116$f3xia)
                                           ($fxdiv0
                                             g$x1$15115$f3xia
                                             g$x2$15116$f3xia)))
                                        g$x1$15093$f3xia
                                        g$x2$15094$f3xia)
                                       (if ($fx<? '0 g$x2$15094$f3xia)
                                         ((case-lambda
                                            ((g$x1$15137$f3xia
                                               g$x2$15138$f3xia)
                                             ($fxdiv0
                                               g$x1$15137$f3xia
                                               g$x2$15138$f3xia)))
                                          ($$fx-
                                            g$x1$15093$f3xia
                                            ($$fx- g$x2$15094$f3xia '1))
                                          g$x2$15094$f3xia)
                                         ((case-lambda
                                            (()
                                             (begin
                                               '#f
                                               ((case-lambda
                                                  ((g$x1$15159$f3xia
                                                     g$x2$15160$f3xia)
                                                   ($fxdiv0
                                                     g$x1$15159$f3xia
                                                     g$x2$15160$f3xia)))
                                                ($$fx+
                                                  g$x1$15093$f3xia
                                                  ($$fx+
                                                    g$x2$15094$f3xia
                                                    '1))
                                                g$x2$15094$f3xia)))))))))))
                              g$x1$15071$f3xia
                              g$x2$15072$f3xia)
                             g$x2$15072$f3xia))))
                      g$count$14979$f3xia
                      g$width$14980$f3xia)
                     ((case-lambda
                        ((g$fx1$15181$f3xia
                           g$fx2$15182$f3xia
                           g$fx3$15183$f3xia)
                         ($fxarithmetic-shift-right
                           ($fxand
                             g$fx1$15181$f3xia
                             ($fxnot
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$fx3$15183$f3xia)))
                           g$fx2$15182$f3xia)))
                      g$n$14976$f3xia
                      g$start$14977$f3xia
                      g$end$14978$f3xia))
                    g$n$14976$f3xia)))
               ($$fx- g$end$14978$f3xia g$start$14977$f3xia)))))))))
   (g$fxreverse-bit-field$13533$f3xia
     g$fxreverse-bit-field$15320$f3xia
     (case-lambda
       ((g$x1$15184$f3xia g$start$15185$f3xia g$end$15186$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x1$15184$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxreverse-bit-field
              '"not a fixnum"
              g$x1$15184$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$start$15185$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxreverse-bit-field
              '"not a fixnum"
              g$start$15185$f3xia)
            (void))
          (if (not (g$fixnum?$15979$f3xia g$end$15186$f3xia))
            (g$assertion-violation$12459$f3xia
              'fxreverse-bit-field
              '"not a fixnum"
              g$end$15186$f3xia)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not ($fx<=? g$start$15185$f3xia g$end$15186$f3xia))
                  (g$assertion-violation$12459$f3xia
                    'fxreverse-bit-field
                    '"start must be less than end"
                    g$start$15185$f3xia
                    g$end$15186$f3xia)
                  (void))
                (letrec ((g$loop$15187$f3xia
                           (case-lambda
                             ((g$width$15211$f3xia
                                g$bits$15212$f3xia
                                g$rbits$15213$f3xia)
                              (if ($fx=? g$width$15211$f3xia '0)
                                (begin
                                  (if '#f '#f (void))
                                  ((case-lambda
                                     ((g$to$15234$f3xia
                                        g$start$15235$f3xia
                                        g$end$15236$f3xia
                                        g$from$15237$f3xia)
                                      ((case-lambda
                                         ((g$fx1$15258$f3xia
                                            g$fx2$15259$f3xia
                                            g$fx3$15260$f3xia)
                                          ($fxior
                                            ($fxand
                                              g$fx1$15258$f3xia
                                              g$fx2$15259$f3xia)
                                            ($fxand
                                              ($fxnot g$fx1$15258$f3xia)
                                              g$fx3$15260$f3xia))))
                                       ($fxand
                                         ($fxarithmetic-shift-left
                                           '-1
                                           g$start$15235$f3xia)
                                         ($fxnot
                                           ($fxarithmetic-shift-left
                                             '-1
                                             g$end$15236$f3xia)))
                                       ($fxarithmetic-shift-left
                                         g$from$15237$f3xia
                                         g$start$15235$f3xia)
                                       g$to$15234$f3xia)))
                                   g$x1$15184$f3xia
                                   g$start$15185$f3xia
                                   g$end$15186$f3xia
                                   g$rbits$15213$f3xia))
                                (g$loop$15187$f3xia
                                  ($$fx- g$width$15211$f3xia '1)
                                  ($fxarithmetic-shift-right
                                    g$bits$15212$f3xia
                                    '1)
                                  ($fxior
                                    ($fxarithmetic-shift-left
                                      g$rbits$15213$f3xia
                                      '1)
                                    ($fxand
                                      g$bits$15212$f3xia
                                      '1))))))))
                  (g$loop$15187$f3xia
                    ($$fx- g$end$15186$f3xia g$start$15185$f3xia)
                    ((case-lambda
                       ((g$fx1$15208$f3xia
                          g$fx2$15209$f3xia
                          g$fx3$15210$f3xia)
                        ($fxarithmetic-shift-right
                          ($fxand
                            g$fx1$15208$f3xia
                            ($fxnot
                              ($fxarithmetic-shift-left
                                '-1
                                g$fx3$15210$f3xia)))
                          g$fx2$15209$f3xia)))
                     g$x1$15184$f3xia
                     g$start$15185$f3xia
                     g$end$15186$f3xia)
                    '0)))))))))))
  (void))

(library-letrec* (ironscheme lists)
  ((g$list-tail$15321$f3xia
     g$list-tail$15526$f3xia
     (case-lambda
       ((g$lst$15357$f3xia g$index$15358$f3xia)
        (if ((case-lambda
               ((g$t$15359$f3xia)
                (if g$t$15359$f3xia
                  g$t$15359$f3xia
                  (begin
                    '#f
                    (g$negative?$17031$f3xia g$index$15358$f3xia)))))
             (null? g$lst$15357$f3xia))
          (g$assertion-violation$12459$f3xia
            'list-tail
            '"index out of range"
            g$lst$15357$f3xia
            g$index$15358$f3xia)
          (if (g$zero?$17029$f3xia g$index$15358$f3xia)
            g$lst$15357$f3xia
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$list-tail$15321$f3xia
                    (cdr g$lst$15357$f3xia)
                    (- g$index$15358$f3xia '1)))))))))))
   (g$list-ref$15322$f3xia
     g$list-ref$15527$f3xia
     (case-lambda
       ((g$lst$15360$f3xia g$index$15361$f3xia)
        (car (g$list-tail$15321$f3xia
               g$lst$15360$f3xia
               g$index$15361$f3xia)))))
   (g$last-pair$15323$f3xia
     g$last-pair$15528$f3xia
     (case-lambda
       ((g$lst$15362$f3xia)
        (if (null? g$lst$15362$f3xia)
          g$lst$15362$f3xia
          (if (null? (cdr g$lst$15362$f3xia))
            g$lst$15362$f3xia
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$last-pair$15323$f3xia
                    (cdr g$lst$15362$f3xia)))))))))))
   (g$make-list$15324$f3xia
     g$make-list$15529$f3xia
     (case-lambda
       ((g$n$15363$f3xia)
        (g$vector->list$16010$f3xia
          (g$make-vector$16007$f3xia g$n$15363$f3xia)))
       ((g$n$15364$f3xia g$fill$15365$f3xia)
        (g$vector->list$16010$f3xia
          (g$make-vector$16007$f3xia
            g$n$15364$f3xia
            g$fill$15365$f3xia)))))
   (g$find$15325$f3xia
     g$find$15530$f3xia
     (case-lambda
       ((g$proc$15366$f3xia g$l$15367$f3xia)
        (if (null? g$l$15367$f3xia)
          '#f
          ((case-lambda
             ((g$e$15368$f3xia g$r$15369$f3xia g$proc$15370$f3xia)
              (if (g$proc$15370$f3xia g$e$15368$f3xia)
                g$e$15368$f3xia
                (g$find$15325$f3xia
                  g$proc$15370$f3xia
                  g$r$15369$f3xia))))
           (car g$l$15367$f3xia)
           (cdr g$l$15367$f3xia)
           g$proc$15366$f3xia)))))
   (g$partition$15326$f3xia
     g$partition$15531$f3xia
     (case-lambda
       ((g$proc$15371$f3xia g$l$15372$f3xia)
        ((letrec ((g$f$15373$f3xia
                    (case-lambda
                      ((g$l$15374$f3xia g$a$15375$f3xia g$b$15376$f3xia)
                       (if (null? g$l$15374$f3xia)
                         (values
                           (reverse! g$a$15375$f3xia)
                           (reverse! g$b$15376$f3xia))
                         ((case-lambda
                            ((g$e$15377$f3xia)
                             (if (g$proc$15371$f3xia g$e$15377$f3xia)
                               (g$f$15373$f3xia
                                 (cdr g$l$15374$f3xia)
                                 (cons g$e$15377$f3xia g$a$15375$f3xia)
                                 g$b$15376$f3xia)
                               (g$f$15373$f3xia
                                 (cdr g$l$15374$f3xia)
                                 g$a$15375$f3xia
                                 (cons
                                   g$e$15377$f3xia
                                   g$b$15376$f3xia)))))
                          (car g$l$15374$f3xia)))))))
           g$f$15373$f3xia)
         g$l$15372$f3xia
         '()
         '()))))
   (g$remp$15327$f3xia
     g$remp$15532$f3xia
     (case-lambda
       ((g$proc$15378$f3xia g$l$15379$f3xia)
        ((letrec ((g$f$15380$f3xia
                    (case-lambda
                      ((g$l$15381$f3xia g$a$15382$f3xia)
                       (if (null? g$l$15381$f3xia)
                         (reverse! g$a$15382$f3xia)
                         ((case-lambda
                            ((g$e$15383$f3xia)
                             (if (g$proc$15378$f3xia g$e$15383$f3xia)
                               (g$f$15380$f3xia
                                 (cdr g$l$15381$f3xia)
                                 g$a$15382$f3xia)
                               (g$f$15380$f3xia
                                 (cdr g$l$15381$f3xia)
                                 (cons
                                   g$e$15383$f3xia
                                   g$a$15382$f3xia)))))
                          (car g$l$15381$f3xia)))))))
           g$f$15380$f3xia)
         g$l$15379$f3xia
         '()))))
   (g$filter$15328$f3xia
     g$filter$15533$f3xia
     (case-lambda
       ((g$proc$15384$f3xia g$l$15385$f3xia)
        ((letrec ((g$f$15386$f3xia
                    (case-lambda
                      ((g$l$15387$f3xia g$a$15388$f3xia)
                       (if (null? g$l$15387$f3xia)
                         (reverse! g$a$15388$f3xia)
                         ((case-lambda
                            ((g$e$15389$f3xia)
                             (if (g$proc$15384$f3xia g$e$15389$f3xia)
                               (g$f$15386$f3xia
                                 (cdr g$l$15387$f3xia)
                                 (cons g$e$15389$f3xia g$a$15388$f3xia))
                               (g$f$15386$f3xia
                                 (cdr g$l$15387$f3xia)
                                 g$a$15388$f3xia))))
                          (car g$l$15387$f3xia)))))))
           g$f$15386$f3xia)
         g$l$15385$f3xia
         '()))))
   (g$assq$15329$f3xia
     g$assq$15534$f3xia
     (case-lambda
       ((g$obj$15390$f3xia g$lst$15391$f3xia)
        (if (null? g$lst$15391$f3xia)
          '#f
          ((case-lambda
             ((g$obj$15392$f3xia g$t$15393$f3xia g$r$15394$f3xia)
              (if (eq? g$obj$15392$f3xia (car g$t$15393$f3xia))
                g$t$15393$f3xia
                (g$assq$15329$f3xia
                  g$obj$15392$f3xia
                  g$r$15394$f3xia))))
           g$obj$15390$f3xia
           (car g$lst$15391$f3xia)
           (cdr g$lst$15391$f3xia))))))
   (g$assv$15330$f3xia
     g$assv$15535$f3xia
     (case-lambda
       ((g$obj$15395$f3xia g$lst$15396$f3xia)
        (if (null? g$lst$15396$f3xia)
          '#f
          ((case-lambda
             ((g$obj$15397$f3xia g$t$15398$f3xia g$r$15399$f3xia)
              (if (eqv? g$obj$15397$f3xia (car g$t$15398$f3xia))
                g$t$15398$f3xia
                (g$assv$15330$f3xia
                  g$obj$15397$f3xia
                  g$r$15399$f3xia))))
           g$obj$15395$f3xia
           (car g$lst$15396$f3xia)
           (cdr g$lst$15396$f3xia))))))
   (g$assoc$15331$f3xia
     g$assoc$15536$f3xia
     (case-lambda
       ((g$obj$15400$f3xia g$lst$15401$f3xia)
        (if (null? g$lst$15401$f3xia)
          '#f
          ((case-lambda
             ((g$obj$15402$f3xia g$t$15403$f3xia g$r$15404$f3xia)
              (if (g$equal?$19443$f3xia
                    g$obj$15402$f3xia
                    (car g$t$15403$f3xia))
                g$t$15403$f3xia
                (g$assoc$15331$f3xia
                  g$obj$15402$f3xia
                  g$r$15404$f3xia))))
           g$obj$15400$f3xia
           (car g$lst$15401$f3xia)
           (cdr g$lst$15401$f3xia))))))
   (g$assp$15332$f3xia
     g$assp$15537$f3xia
     (case-lambda
       ((g$p?$15405$f3xia g$lst$15406$f3xia)
        (if (null? g$lst$15406$f3xia)
          '#f
          ((case-lambda
             ((g$p?$15407$f3xia g$t$15408$f3xia g$r$15409$f3xia)
              (if (g$p?$15407$f3xia (car g$t$15408$f3xia))
                g$t$15408$f3xia
                (g$assp$15332$f3xia g$p?$15407$f3xia g$r$15409$f3xia))))
           g$p?$15405$f3xia
           (car g$lst$15406$f3xia)
           (cdr g$lst$15406$f3xia))))))
   (g$memq$15333$f3xia
     g$memq$15538$f3xia
     (case-lambda
       ((g$obj$15410$f3xia g$lst$15411$f3xia)
        (if (null? g$lst$15411$f3xia)
          '#f
          (if (eq? g$obj$15410$f3xia (car g$lst$15411$f3xia))
            g$lst$15411$f3xia
            (g$memq$15333$f3xia
              g$obj$15410$f3xia
              (cdr g$lst$15411$f3xia)))))))
   (g$memv$15334$f3xia
     g$memv$15539$f3xia
     (case-lambda
       ((g$obj$15412$f3xia g$lst$15413$f3xia)
        (if (null? g$lst$15413$f3xia)
          '#f
          (if (eqv? g$obj$15412$f3xia (car g$lst$15413$f3xia))
            g$lst$15413$f3xia
            (g$memv$15334$f3xia
              g$obj$15412$f3xia
              (cdr g$lst$15413$f3xia)))))))
   (g$member$15335$f3xia
     g$member$15540$f3xia
     (case-lambda
       ((g$obj$15414$f3xia g$lst$15415$f3xia)
        (if (null? g$lst$15415$f3xia)
          '#f
          (if (g$equal?$19443$f3xia
                g$obj$15414$f3xia
                (car g$lst$15415$f3xia))
            g$lst$15415$f3xia
            (g$member$15335$f3xia
              g$obj$15414$f3xia
              (cdr g$lst$15415$f3xia)))))))
   (g$memp$15336$f3xia
     g$memp$15541$f3xia
     (case-lambda
       ((g$p?$15416$f3xia g$lst$15417$f3xia)
        (if (null? g$lst$15417$f3xia)
          '#f
          (if (g$p?$15416$f3xia (car g$lst$15417$f3xia))
            g$lst$15417$f3xia
            (g$memp$15336$f3xia
              g$p?$15416$f3xia
              (cdr g$lst$15417$f3xia)))))))
   (g$all-empty?$15337$f3xia
     g$all-empty?$15542$f3xia
     (case-lambda
       ((g$ls$15418$f3xia)
        ((case-lambda
           ((g$t$15419$f3xia)
            (if g$t$15419$f3xia
              g$t$15419$f3xia
              (begin
                '#f
                (if (null? (car g$ls$15418$f3xia))
                  (begin
                    '#f
                    (g$all-empty?$15337$f3xia (cdr g$ls$15418$f3xia)))
                  '#f)))))
         (null? g$ls$15418$f3xia)))))
   (g$split$15338$f3xia
     g$split$15543$f3xia
     (case-lambda
       ((g$ls$15420$f3xia)
        (if (null? g$ls$15420$f3xia)
          (values '() '())
          ((case-lambda
             (()
              (begin
                '#f
                (call-with-values
                  (case-lambda
                    (() (g$split$15338$f3xia (cdr g$ls$15420$f3xia))))
                  (case-lambda
                    ((g$cars$15421$f3xia g$cdrs$15422$f3xia)
                     ((case-lambda
                        ((g$a$15423$f3xia)
                         (values
                           (cons
                             (car g$a$15423$f3xia)
                             g$cars$15421$f3xia)
                           (cons
                             (cdr g$a$15423$f3xia)
                             g$cdrs$15422$f3xia))))
                      (car g$ls$15420$f3xia)))))))))))))
   (g$list/check?$15339$f3xia
     g$list/check?$15544$f3xia
     (case-lambda
       ((g$head$15424$f3xia g$tail$15425$f3xia)
        (if (pair? g$head$15424$f3xia)
          ((case-lambda
             ((g$head$15426$f3xia)
              (if (pair? g$head$15426$f3xia)
                (if (not (eq? g$head$15426$f3xia g$tail$15425$f3xia))
                  (begin
                    '#f
                    (g$list/check?$15339$f3xia
                      ($cdr g$head$15426$f3xia)
                      ($cdr g$tail$15425$f3xia)))
                  '#f)
                (null? g$head$15426$f3xia))))
           ($cdr g$head$15424$f3xia))
          (null? g$head$15424$f3xia)))))
   (g$list?$15340$f3xia
     g$list?$15545$f3xia
     (case-lambda
       ((g$obj$15427$f3xia)
        (g$list/check?$15339$f3xia
          g$obj$15427$f3xia
          g$obj$15427$f3xia))))
   (g$length/check$15341$f3xia
     g$length/check$15546$f3xia
     (case-lambda
       ((g$head$15428$f3xia g$tail$15429$f3xia g$i$15430$f3xia)
        (if (pair? g$head$15428$f3xia)
          ((case-lambda
             ((g$head$15431$f3xia)
              (if (pair? g$head$15431$f3xia)
                (if (not (eq? g$head$15431$f3xia g$tail$15429$f3xia))
                  (g$length/check$15341$f3xia
                    ($cdr g$head$15431$f3xia)
                    ($cdr g$tail$15429$f3xia)
                    ($$fx+ g$i$15430$f3xia '2))
                  (g$assertion-violation$12459$f3xia
                    'length
                    '"not a proper list"))
                (if (null? g$head$15431$f3xia)
                  ($$fx+ g$i$15430$f3xia '1)
                  (g$assertion-violation$12459$f3xia
                    'length
                    '"not a proper list")))))
           ($cdr g$head$15428$f3xia))
          (if (null? g$head$15428$f3xia)
            g$i$15430$f3xia
            (g$assertion-violation$12459$f3xia
              'length
              '"not a proper list"))))))
   (g$length$15342$f3xia
     g$length$15547$f3xia
     (case-lambda
       ((g$lst$15432$f3xia)
        (g$length/check$15341$f3xia
          g$lst$15432$f3xia
          g$lst$15432$f3xia
          '0))))
   (g$for-all$15343$f3xia
     g$for-all$15548$f3xia
     (case-lambda
       ((g$f$15433$f3xia g$arg1$15434$f3xia)
        (if (null? g$arg1$15434$f3xia)
          '#t
          (if (null? (cdr g$arg1$15434$f3xia))
            (g$f$15433$f3xia (car g$arg1$15434$f3xia))
            (if (g$f$15433$f3xia (car g$arg1$15434$f3xia))
              (begin
                '#f
                (g$for-all$15343$f3xia
                  g$f$15433$f3xia
                  (cdr g$arg1$15434$f3xia)))
              '#f))))
       ((g$f$15435$f3xia g$arg1$15436$f3xia . g$args$15437$f3xia)
        ((case-lambda
           ((g$args$15438$f3xia)
            (if (g$all-empty?$15337$f3xia g$args$15438$f3xia)
              '#t
              (call-with-values
                (case-lambda
                  (() (g$split$15338$f3xia g$args$15438$f3xia)))
                (case-lambda
                  ((g$cars$15439$f3xia g$cdrs$15440$f3xia)
                   (if (g$all-empty?$15337$f3xia g$cdrs$15440$f3xia)
                     (apply g$f$15435$f3xia g$cars$15439$f3xia)
                     (if (apply g$f$15435$f3xia g$cars$15439$f3xia)
                       (begin
                         '#f
                         (apply
                           g$for-all$15343$f3xia
                           g$f$15435$f3xia
                           g$cdrs$15440$f3xia))
                       '#f))))))))
         (cons g$arg1$15436$f3xia g$args$15437$f3xia)))))
   (g$exists$15344$f3xia
     g$exists$15549$f3xia
     (case-lambda
       ((g$f$15441$f3xia g$arg1$15442$f3xia)
        (if (null? g$arg1$15442$f3xia)
          '#f
          ((case-lambda
             ((g$t$15443$f3xia)
              (if g$t$15443$f3xia
                g$t$15443$f3xia
                (begin
                  '#f
                  (g$exists$15344$f3xia
                    g$f$15441$f3xia
                    (cdr g$arg1$15442$f3xia))))))
           (g$f$15441$f3xia (car g$arg1$15442$f3xia)))))
       ((g$f$15444$f3xia g$arg1$15445$f3xia . g$args$15446$f3xia)
        ((case-lambda
           ((g$args$15447$f3xia)
            (if (g$all-empty?$15337$f3xia g$args$15447$f3xia)
              '#f
              (call-with-values
                (case-lambda
                  (() (g$split$15338$f3xia g$args$15447$f3xia)))
                (case-lambda
                  ((g$cars$15448$f3xia g$cdrs$15449$f3xia)
                   ((case-lambda
                      ((g$t$15450$f3xia)
                       (if g$t$15450$f3xia
                         g$t$15450$f3xia
                         (begin
                           '#f
                           (apply
                             g$exists$15344$f3xia
                             g$f$15444$f3xia
                             g$cdrs$15449$f3xia)))))
                    (apply g$f$15444$f3xia g$cars$15448$f3xia))))))))
         (cons g$arg1$15445$f3xia g$args$15446$f3xia)))))
   (g$map$15345$f3xia
     g$map$15550$f3xia
     (case-lambda
       ((g$proc$15451$f3xia g$list1$15452$f3xia)
        ((letrec ((g$f$15453$f3xia
                    (case-lambda
                      ((g$lst$15454$f3xia g$a$15455$f3xia)
                       (if (null? g$lst$15454$f3xia)
                         (reverse! g$a$15455$f3xia)
                         (g$f$15453$f3xia
                           (cdr g$lst$15454$f3xia)
                           (cons
                             (g$proc$15451$f3xia
                               (car g$lst$15454$f3xia))
                             g$a$15455$f3xia)))))))
           g$f$15453$f3xia)
         g$list1$15452$f3xia
         '()))
       ((g$proc$15456$f3xia g$list1$15457$f3xia . g$lists$15458$f3xia)
        ((letrec ((g$f$15459$f3xia
                    (case-lambda
                      ((g$lists$15460$f3xia g$a$15461$f3xia)
                       (if (g$all-empty?$15337$f3xia
                             g$lists$15460$f3xia)
                         (reverse! g$a$15461$f3xia)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$split$15338$f3xia
                                g$lists$15460$f3xia)))
                           (case-lambda
                             ((g$cars$15462$f3xia g$cdrs$15463$f3xia)
                              (g$f$15459$f3xia
                                g$cdrs$15463$f3xia
                                (cons
                                  (apply
                                    g$proc$15456$f3xia
                                    g$cars$15462$f3xia)
                                  g$a$15461$f3xia))))))))))
           g$f$15459$f3xia)
         (cons g$list1$15457$f3xia g$lists$15458$f3xia)
         '()))))
   (g$for-each$15346$f3xia
     g$for-each$15551$f3xia
     (case-lambda
       ((g$f$15464$f3xia g$arg1$15465$f3xia)
        (if (not (null? g$arg1$15465$f3xia))
          (begin
            (g$f$15464$f3xia (car g$arg1$15465$f3xia))
            (g$for-each$15346$f3xia
              g$f$15464$f3xia
              (cdr g$arg1$15465$f3xia)))
          (void)))
       ((g$f$15466$f3xia g$arg1$15467$f3xia . g$args$15468$f3xia)
        ((case-lambda
           ((g$args$15469$f3xia)
            (if (not (g$all-empty?$15337$f3xia g$args$15469$f3xia))
              (call-with-values
                (case-lambda
                  (() (g$split$15338$f3xia g$args$15469$f3xia)))
                (case-lambda
                  ((g$cars$15470$f3xia g$cdrs$15471$f3xia)
                   (begin
                     (apply g$f$15466$f3xia g$cars$15470$f3xia)
                     (apply
                       g$for-each$15346$f3xia
                       g$f$15466$f3xia
                       g$cdrs$15471$f3xia)))))
              (void))))
         (cons g$arg1$15467$f3xia g$args$15468$f3xia)))))
   (g$cons*$15347$f3xia
     g$cons*$15552$f3xia
     (case-lambda
       ((g$a$15472$f3xia . g$rest$15473$f3xia)
        ((letrec ((g$f$15474$f3xia
                    (case-lambda
                      ((g$a$15475$f3xia g$rest$15476$f3xia)
                       (if (null? g$rest$15476$f3xia)
                         g$a$15475$f3xia
                         (cons
                           g$a$15475$f3xia
                           (g$f$15474$f3xia
                             (car g$rest$15476$f3xia)
                             (cdr g$rest$15476$f3xia))))))))
           g$f$15474$f3xia)
         g$a$15472$f3xia
         g$rest$15473$f3xia))))
   (g$list-copy$15348$f3xia
     g$list-copy$15553$f3xia
     (case-lambda
       ((g$lst$15477$f3xia)
        (clr-call-internal
          'IronScheme.Runtime.Cons
          'FromList
          '()
          g$lst$15477$f3xia))))
   (g$append-fast!$15349$f3xia
     g$append-fast!$15554$f3xia
     (case-lambda
       ((g$a$15478$f3xia g$b$15479$f3xia)
        ((case-lambda
           ((g$c$15480$f3xia)
            (if (null? g$c$15480$f3xia)
              (clr-field-set!-internal
                'IronScheme.Runtime.Cons
                'cdr
                g$a$15478$f3xia
                g$b$15479$f3xia)
              (g$append-fast!$15349$f3xia
                g$c$15480$f3xia
                g$b$15479$f3xia))))
         ($cdr g$a$15478$f3xia)))))
   (g$append!$15350$f3xia
     g$append!$15555$f3xia
     (case-lambda
       ((g$a$15481$f3xia g$b$15482$f3xia)
        (if (null? g$a$15481$f3xia)
          g$b$15482$f3xia
          (if (null? g$b$15482$f3xia)
            g$a$15481$f3xia
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$append-fast!$15349$f3xia
                    g$a$15481$f3xia
                    g$b$15482$f3xia)
                  g$a$15481$f3xia)))))))))
   (g$append$15351$f3xia
     g$append$15556$f3xia
     (case-lambda
       (() '())
       ((g$obj$15483$f3xia) g$obj$15483$f3xia)
       ((g$obj1$15484$f3xia g$obj2$15485$f3xia)
        (begin
          (if (not (g$list?$15340$f3xia g$obj1$15484$f3xia))
            (g$assertion-violation$12459$f3xia
              'append
              '"not a list"
              g$obj1$15484$f3xia)
            (void))
          (g$append!$15350$f3xia
            (g$list-copy$15348$f3xia g$obj1$15484$f3xia)
            g$obj2$15485$f3xia)))
       ((g$obj$15486$f3xia g$i1$15487$f3xia . g$il$15488$f3xia)
        (begin
          (if (not (g$list?$15340$f3xia g$obj$15486$f3xia))
            (g$assertion-violation$12459$f3xia
              'append
              '"not a list"
              g$obj$15486$f3xia)
            (void))
          (if (null? g$i1$15487$f3xia)
            (if (null? g$il$15488$f3xia)
              (g$list-copy$15348$f3xia g$obj$15486$f3xia)
              (apply
                g$append$15351$f3xia
                (cons g$obj$15486$f3xia g$il$15488$f3xia)))
            (if (pair? g$i1$15487$f3xia)
              (if (null? g$il$15488$f3xia)
                (g$append!$15350$f3xia
                  (g$list-copy$15348$f3xia g$obj$15486$f3xia)
                  g$i1$15487$f3xia)
                (g$append!$15350$f3xia
                  (g$list-copy$15348$f3xia g$obj$15486$f3xia)
                  (apply
                    g$append$15351$f3xia
                    (cons g$i1$15487$f3xia g$il$15488$f3xia))))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$append!$15350$f3xia
                      (g$list-copy$15348$f3xia g$obj$15486$f3xia)
                      g$i1$15487$f3xia)))))))))))
   (g$fold-left$15352$f3xia
     g$fold-left$15557$f3xia
     (case-lambda
       ((g$combine$15509$f3xia
          g$nil$15510$f3xia
          g$list1$15511$f3xia
          .
          g$lists$15512$f3xia)
        (if (null? g$list1$15511$f3xia)
          g$nil$15510$f3xia
          (if (null? g$lists$15512$f3xia)
            (g$fold-left$15352$f3xia
              g$combine$15509$f3xia
              (g$combine$15509$f3xia
                g$nil$15510$f3xia
                (car g$list1$15511$f3xia))
              (cdr g$list1$15511$f3xia))
            ((case-lambda
               (()
                (begin
                  '#f
                  (apply
                    g$fold-left$15352$f3xia
                    (g$cons*$15347$f3xia
                      g$combine$15509$f3xia
                      (apply
                        g$combine$15509$f3xia
                        (g$cons*$15347$f3xia
                          g$nil$15510$f3xia
                          (car g$list1$15511$f3xia)
                          (g$map$15345$f3xia car g$lists$15512$f3xia)))
                      (cdr g$list1$15511$f3xia)
                      (g$map$15345$f3xia
                        cdr
                        g$lists$15512$f3xia))))))))))))
   (g$fold-right$15353$f3xia
     g$fold-right$15558$f3xia
     (case-lambda
       ((g$combine$15513$f3xia
          g$nil$15514$f3xia
          g$list1$15515$f3xia
          .
          g$lists$15516$f3xia)
        (if (null? g$list1$15515$f3xia)
          g$nil$15514$f3xia
          (if (null? g$lists$15516$f3xia)
            (g$combine$15513$f3xia
              (car g$list1$15515$f3xia)
              (g$fold-right$15353$f3xia
                g$combine$15513$f3xia
                g$nil$15514$f3xia
                (cdr g$list1$15515$f3xia)))
            ((case-lambda
               (()
                (begin
                  '#f
                  (apply
                    g$combine$15513$f3xia
                    (g$append$15351$f3xia
                      (list (car g$list1$15515$f3xia))
                      (g$map$15345$f3xia car g$lists$15516$f3xia)
                      (list
                        (apply
                          g$fold-right$15353$f3xia
                          (g$cons*$15347$f3xia
                            g$combine$15513$f3xia
                            g$nil$15514$f3xia
                            (cdr g$list1$15515$f3xia)
                            (g$map$15345$f3xia
                              cdr
                              g$lists$15516$f3xia)))))))))))))))
   (g$remove$15354$f3xia
     g$remove$15559$f3xia
     (case-lambda
       ((g$obj$15517$f3xia g$list$15518$f3xia)
        (g$remp$15327$f3xia
          (case-lambda
            ((g$x$15519$f3xia)
             (g$equal?$19443$f3xia g$obj$15517$f3xia g$x$15519$f3xia)))
          g$list$15518$f3xia))))
   (g$remv$15355$f3xia
     g$remv$15560$f3xia
     (case-lambda
       ((g$obj$15520$f3xia g$list$15521$f3xia)
        (g$remp$15327$f3xia
          (case-lambda
            ((g$x$15522$f3xia)
             (eqv? g$obj$15520$f3xia g$x$15522$f3xia)))
          g$list$15521$f3xia))))
   (g$remq$15356$f3xia
     g$remq$15561$f3xia
     (case-lambda
       ((g$obj$15523$f3xia g$list$15524$f3xia)
        (g$remp$15327$f3xia
          (case-lambda
            ((g$x$15525$f3xia) (eq? g$obj$15523$f3xia g$x$15525$f3xia)))
          g$list$15524$f3xia)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$clr-string?$15562$f3xia
     g$clr-string?$15970$f3xia
     (case-lambda
       ((g$obj$15738$f3xia)
        (clr-is-internal 'System.String g$obj$15738$f3xia))))
   (g$stringbuilder?$15563$f3xia
     g$stringbuilder?$15971$f3xia
     (case-lambda
       ((g$obj$15739$f3xia)
        (clr-is-internal
          'System.Text.StringBuilder
          g$obj$15739$f3xia))))
   (g$string?$15564$f3xia
     g$string?$15972$f3xia
     (case-lambda
       ((g$obj$15740$f3xia)
        ((case-lambda
           ((g$t$15741$f3xia)
            (if g$t$15741$f3xia
              g$t$15741$f3xia
              (begin
                '#f
                (g$stringbuilder?$15563$f3xia g$obj$15740$f3xia)))))
         (g$clr-string?$15562$f3xia g$obj$15740$f3xia)))))
   (g$char?$15565$f3xia
     g$char?$15973$f3xia
     (case-lambda
       ((g$obj$15742$f3xia)
        (clr-is-internal 'system.char g$obj$15742$f3xia))))
   (g$vector?$15566$f3xia
     g$vector?$15974$f3xia
     (case-lambda
       ((g$obj$15743$f3xia)
        (clr-is-internal 'system.object[] g$obj$15743$f3xia))))
   (g$bytevector?$15567$f3xia
     g$bytevector?$15975$f3xia
     (case-lambda
       ((g$obj$15744$f3xia)
        (clr-is-internal 'system.byte[] g$obj$15744$f3xia))))
   (g$symbol?$15568$f3xia
     g$symbol?$15976$f3xia
     (case-lambda
       ((g$obj$15745$f3xia)
        (clr-is-internal
          'microsoft.scripting.symbolid
          g$obj$15745$f3xia))))
   (g$boolean?$15569$f3xia
     g$boolean?$15977$f3xia
     (case-lambda
       ((g$obj$15746$f3xia)
        (clr-is-internal 'system.boolean g$obj$15746$f3xia))))
   (g$procedure?$15570$f3xia
     g$procedure?$15978$f3xia
     (case-lambda
       ((g$obj$15747$f3xia)
        (clr-is-internal
          'ironscheme.runtime.icallable
          g$obj$15747$f3xia))))
   (g$fixnum?$15571$f3xia
     g$fixnum?$15979$f3xia
     (case-lambda
       ((g$obj$15748$f3xia)
        (clr-is-internal 'system.int32 g$obj$15748$f3xia))))
   (g$flonum?$15572$f3xia
     g$flonum?$15980$f3xia
     (case-lambda
       ((g$obj$15749$f3xia)
        (clr-is-internal 'system.double g$obj$15749$f3xia))))
   (g$fixnum-width$15573$f3xia
     g$fixnum-width$15981$f3xia
     (case-lambda (() '32)))
   (g$char->integer$15574$f3xia
     g$char->integer$15982$f3xia
     (case-lambda
       ((g$chr$15750$f3xia)
        (begin
          (if (not (g$char?$15565$f3xia g$chr$15750$f3xia))
            (g$assertion-violation$12459$f3xia
              'char->integer
              '"not a character"
              g$chr$15750$f3xia)
            (void))
          (clr-cast-internal
            'System.Int32
            (clr-cast-internal 'System.Char g$chr$15750$f3xia))))))
   (g$integer->char$15575$f3xia
     g$integer->char$15983$f3xia
     (case-lambda
       ((g$num$15751$f3xia)
        (begin
          (if (not (g$fixnum?$15571$f3xia g$num$15751$f3xia))
            (g$assertion-violation$12459$f3xia
              'integer->char
              '"not a integer"
              g$num$15751$f3xia)
            (void))
          (if ((case-lambda
                 ((g$t$15752$f3xia)
                  (if g$t$15752$f3xia
                    g$t$15752$f3xia
                    ((case-lambda
                       ((g$t$15753$f3xia)
                        (if g$t$15753$f3xia
                          g$t$15753$f3xia
                          (begin
                            '#f
                            (if (g$fx>?$15279$f3xia
                                  g$num$15751$f3xia
                                  '55295)
                              (begin
                                '#f
                                (g$fx<?$15277$f3xia
                                  g$num$15751$f3xia
                                  '57344))
                              '#f)))))
                     (g$fx>?$15279$f3xia g$num$15751$f3xia '1114111)))))
               (g$fxnegative?$15297$f3xia g$num$15751$f3xia))
            (g$assertion-violation$12459$f3xia
              'integer->char
              '"not a valid unicode value"
              g$num$15751$f3xia)
            (void))
          (g$string-ref$15577$f3xia
            (clr-call-internal
              'System.Char
              'ConvertFromUtf32
              '()
              g$num$15751$f3xia)
            '0)))))
   (g$make-string$15576$f3xia
     g$make-string$15984$f3xia
     (case-lambda
       ((g$k$15754$f3xia)
        (g$make-string$15576$f3xia g$k$15754$f3xia '#\nul))
       ((g$k$15755$f3xia g$fill$15756$f3xia)
        (begin
          (if (not (g$fixnum?$15571$f3xia g$k$15755$f3xia))
            (g$assertion-violation$12459$f3xia
              'make-string
              '"not a fixnum"
              g$k$15755$f3xia)
            (void))
          (if (g$negative?$17031$f3xia g$k$15755$f3xia)
            (g$assertion-violation$12459$f3xia
              'make-string
              '"cannot be negative"
              g$k$15755$f3xia)
            (void))
          (if (not (g$char?$15565$f3xia g$fill$15756$f3xia))
            (g$assertion-violation$12459$f3xia
              'make-string
              '"not a character"
              g$fill$15756$f3xia)
            (void))
          ((case-lambda
             ((g$str$15757$f3xia)
              ((letrec ((g$f$15758$f3xia
                          (case-lambda
                            ((g$i$15759$f3xia)
                             (if (g$fx=?$15276$f3xia
                                   g$i$15759$f3xia
                                   g$k$15755$f3xia)
                               g$str$15757$f3xia
                               (begin
                                 (clr-call-internal
                                   'System.Text.StringBuilder
                                   '"Append(Char)"
                                   g$str$15757$f3xia
                                   g$fill$15756$f3xia)
                                 (g$f$15758$f3xia
                                   (g$fx+$15263$f3xia
                                     g$i$15759$f3xia
                                     '1))))))))
                 g$f$15758$f3xia)
               '0)))
           (clr-new-internal
             'System.Text.StringBuilder
             (clr-cast-internal 'System.Int32 g$k$15755$f3xia)))))))
   (g$string-ref$15577$f3xia
     g$string-ref$15985$f3xia
     (case-lambda
       ((g$str$15760$f3xia g$k$15761$f3xia)
        (begin
          (if (not (if (g$fixnum?$15571$f3xia g$k$15761$f3xia)
                     (begin
                       '#f
                       (g$fx>=?$15280$f3xia g$k$15761$f3xia '0))
                     '#f))
            (g$assertion-violation$12459$f3xia
              'string-ref
              '"not a non-negative integer"
              g$k$15761$f3xia)
            (void))
          (if (g$clr-string?$15562$f3xia g$str$15760$f3xia)
            (clr-call-internal
              'System.String
              'get_Chars
              g$str$15760$f3xia
              g$k$15761$f3xia)
            (if (g$stringbuilder?$15563$f3xia g$str$15760$f3xia)
              (clr-call-internal
                'System.Text.StringBuilder
                'get_Chars
                g$str$15760$f3xia
                g$k$15761$f3xia)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'string-set!
                      '"not a string"
                      g$str$15760$f3xia)))))))))))
   (g$string-set!$15578$f3xia
     g$string-set!$15986$f3xia
     (case-lambda
       ((g$str$15762$f3xia g$k$15763$f3xia g$val$15764$f3xia)
        (begin
          (if (not (g$stringbuilder?$15563$f3xia g$str$15762$f3xia))
            (g$assertion-violation$12459$f3xia
              'string-set!
              '"not a mutable string"
              g$str$15762$f3xia)
            (void))
          (if (not (if (g$fixnum?$15571$f3xia g$k$15763$f3xia)
                     (begin
                       '#f
                       (g$fx>=?$15280$f3xia g$k$15763$f3xia '0))
                     '#f))
            (g$assertion-violation$12459$f3xia
              'string-set!
              '"not a non-negative integer"
              g$k$15763$f3xia)
            (void))
          (clr-call-internal
            'System.Text.StringBuilder
            'set_Chars
            g$str$15762$f3xia
            g$k$15763$f3xia
            g$val$15764$f3xia)))))
   (g$string-fill!$15579$f3xia
     g$string-fill!$15987$f3xia
     (case-lambda
       ((g$str$15765$f3xia g$k$15766$f3xia g$fill$15767$f3xia)
        (begin
          (if (not (g$stringbuilder?$15563$f3xia g$str$15765$f3xia))
            (g$assertion-violation$12459$f3xia
              'string-fill!
              '"not a mutable string"
              g$str$15765$f3xia)
            (void))
          (if (not (if (g$fixnum?$15571$f3xia g$k$15766$f3xia)
                     (begin
                       '#f
                       (g$fx>=?$15280$f3xia g$k$15766$f3xia '0))
                     '#f))
            (g$assertion-violation$12459$f3xia
              'string-fill!
              '"not a non-negative integer"
              g$k$15766$f3xia)
            (void))
          (if (not (g$char?$15565$f3xia g$fill$15767$f3xia))
            (g$assertion-violation$12459$f3xia
              'string-fill!
              '"not a character"
              g$fill$15767$f3xia)
            (void))
          ((letrec ((g$f$15768$f3xia
                      (case-lambda
                        ((g$i$15769$f3xia)
                         (if (not (g$fx=?$15276$f3xia
                                    g$i$15769$f3xia
                                    g$k$15766$f3xia))
                           (begin
                             (clr-call-internal
                               'System.Text.StringBuilder
                               'set_Chars
                               g$str$15765$f3xia
                               g$i$15769$f3xia
                               g$fill$15767$f3xia)
                             (g$f$15768$f3xia
                               (g$fx+$15263$f3xia g$i$15769$f3xia '1)))
                           (void))))))
             g$f$15768$f3xia)
           '0)))))
   (g$string-length$15580$f3xia
     g$string-length$15988$f3xia
     (case-lambda
       ((g$str$15770$f3xia)
        (if (g$clr-string?$15562$f3xia g$str$15770$f3xia)
          (clr-call-internal
            'System.String
            'get_Length
            g$str$15770$f3xia)
          (if (g$stringbuilder?$15563$f3xia g$str$15770$f3xia)
            (clr-call-internal
              'System.Text.StringBuilder
              'get_Length
              g$str$15770$f3xia)
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$12459$f3xia
                    'string-length
                    '"not a string"
                    g$str$15770$f3xia))))))))))
   (g$->string$15581$f3xia
     g$->string$15989$f3xia
     (case-lambda
       ((g$str$15771$f3xia)
        (if (g$clr-string?$15562$f3xia g$str$15771$f3xia)
          g$str$15771$f3xia
          (clr-call-internal 'Object 'ToString g$str$15771$f3xia)))))
   (g$string$15582$f3xia
     g$string$15990$f3xia
     (case-lambda
       (g$args$15772$f3xia
        (begin
          (if (not (g$for-all$15548$f3xia
                     g$char?$15565$f3xia
                     g$args$15772$f3xia))
            (g$assertion-violation$12459$f3xia
              'string
              '"not all char"
              g$args$15772$f3xia)
            (void))
          ((case-lambda
             ((g$str$15773$f3xia)
              ((letrec ((g$f$15774$f3xia
                          (case-lambda
                            ((g$args$15775$f3xia)
                             (if (null? g$args$15775$f3xia)
                               g$str$15773$f3xia
                               (begin
                                 (clr-call-internal
                                   'System.Text.StringBuilder
                                   '"Append(Char)"
                                   g$str$15773$f3xia
                                   (car g$args$15775$f3xia))
                                 (g$f$15774$f3xia
                                   (cdr g$args$15775$f3xia))))))))
                 g$f$15774$f3xia)
               g$args$15772$f3xia)))
           (clr-new-internal 'System.Text.StringBuilder))))))
   (g$string->list$15583$f3xia
     g$string->list$15991$f3xia
     (case-lambda
       ((g$str$15776$f3xia)
        (begin
          (if (not (g$string?$15564$f3xia g$str$15776$f3xia))
            (g$assertion-violation$12459$f3xia
              'string->list
              '"not a string"
              g$str$15776$f3xia)
            (void))
          (clr-call-internal
            'IronScheme.Runtime.Cons
            'FromList
            '()
            (g$->string$15581$f3xia g$str$15776$f3xia))))))
   (g$string-copy$15584$f3xia
     g$string-copy$15992$f3xia
     (case-lambda
       ((g$str$15777$f3xia)
        (if (g$clr-string?$15562$f3xia g$str$15777$f3xia)
          (clr-call-internal 'System.String 'Copy '() g$str$15777$f3xia)
          (if (g$stringbuilder?$15563$f3xia g$str$15777$f3xia)
            (clr-call-internal
              'System.Text.StringBuilder
              'ToString
              g$str$15777$f3xia)
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$12459$f3xia
                    'string-copy
                    '"not a string"
                    g$str$15777$f3xia))))))))))
   (g$substring$15585$f3xia
     g$substring$15993$f3xia
     (case-lambda
       ((g$str$15778$f3xia g$start$15779$f3xia g$end$15780$f3xia)
        (begin
          (if (not (if (g$fixnum?$15571$f3xia g$start$15779$f3xia)
                     (begin
                       '#f
                       (g$fx>=?$15280$f3xia g$start$15779$f3xia '0))
                     '#f))
            (g$assertion-violation$12459$f3xia
              'substring
              '"not a non-negative integer"
              g$start$15779$f3xia)
            (void))
          (if (not (if (g$fixnum?$15571$f3xia g$end$15780$f3xia)
                     (begin
                       '#f
                       (g$fx>=?$15280$f3xia g$end$15780$f3xia '0))
                     '#f))
            (g$assertion-violation$12459$f3xia
              'substring
              '"not a non-negative integer"
              g$end$15780$f3xia)
            (void))
          (if (g$clr-string?$15562$f3xia g$str$15778$f3xia)
            (clr-call-internal
              'System.String
              'Substring
              g$str$15778$f3xia
              g$start$15779$f3xia
              (g$fx-$15265$f3xia g$end$15780$f3xia g$start$15779$f3xia))
            (if (g$stringbuilder?$15563$f3xia g$str$15778$f3xia)
              (clr-call-internal
                'System.Text.StringBuilder
                'ToString
                g$str$15778$f3xia
                g$start$15779$f3xia
                (g$fx-$15265$f3xia
                  g$end$15780$f3xia
                  g$start$15779$f3xia))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'substring
                      '"not a string"
                      g$str$15778$f3xia)))))))))))
   (g$string-append$15586$f3xia
     g$string-append$15994$f3xia
     (case-lambda
       (g$args$15781$f3xia
        (begin
          (if (not (g$for-all$15548$f3xia
                     g$string?$15564$f3xia
                     g$args$15781$f3xia))
            (g$assertion-violation$12459$f3xia
              'string-append
              '"not strings"
              g$args$15781$f3xia)
            (void))
          (clr-call-internal
            'System.String
            '"Concat(String[])"
            '()
            (g$list->vector$15595$f3xia
              (g$map$15550$f3xia
                g$->string$15581$f3xia
                g$args$15781$f3xia)))))))
   (g$string-format$15587$f3xia
     g$string-format$15995$f3xia
     (case-lambda
       ((g$fmt$15782$f3xia . g$args$15783$f3xia)
        (clr-call-internal
          'System.String
          '"Format(String,Object[])"
          '()
          g$fmt$15782$f3xia
          (g$list->vector$15595$f3xia g$args$15783$f3xia)))))
   (g$symbol->string$15588$f3xia
     g$symbol->string$15996$f3xia
     (case-lambda
       ((g$sym$15784$f3xia)
        (begin
          (if (not (g$symbol?$15568$f3xia g$sym$15784$f3xia))
            (g$assertion-violation$12459$f3xia
              'symbol->string
              '"not a symbol"
              g$sym$15784$f3xia)
            (void))
          (clr-call-internal
            'Microsoft.Scripting.SymbolTable
            'IdToString
            '()
            g$sym$15784$f3xia)))))
   (g$string->symbol$15589$f3xia
     g$string->symbol$15997$f3xia
     (case-lambda
       ((g$str$15785$f3xia)
        (begin
          (if (not (g$string?$15564$f3xia g$str$15785$f3xia))
            (g$assertion-violation$12459$f3xia
              'string->symbol
              '"not a string"
              g$str$15785$f3xia)
            (void))
          (clr-call-internal
            'Microsoft.Scripting.SymbolTable
            'StringToObject
            '()
            g$str$15785$f3xia)))))
   (g$div0$15590$f3xia
     g$div0$15998$f3xia
     (case-lambda
       ((g$x1$15786$f3xia g$x2$15787$f3xia)
        ((case-lambda
           ((g$d$15788$f3xia)
            ((case-lambda
               ((g$m$15789$f3xia)
                (if (g$<$17039$f3xia
                      g$m$15789$f3xia
                      (g$magnitude$17046$f3xia (/ g$x2$15787$f3xia '2)))
                  g$d$15788$f3xia
                  (if (g$positive?$17030$f3xia g$x2$15787$f3xia)
                    (+ g$d$15788$f3xia '1)
                    ((case-lambda
                       (() (begin '#f (- g$d$15788$f3xia '1)))))))))
             (- g$x1$15786$f3xia
                (* g$d$15788$f3xia g$x2$15787$f3xia)))))
         (g$div$17063$f3xia g$x1$15786$f3xia g$x2$15787$f3xia)))))
   (g$mod$15591$f3xia
     g$mod$15999$f3xia
     (case-lambda
       ((g$x1$15790$f3xia g$x2$15791$f3xia)
        (- g$x1$15790$f3xia
           (* (g$div$17063$f3xia g$x1$15790$f3xia g$x2$15791$f3xia)
              g$x2$15791$f3xia)))))
   (g$mod0$15592$f3xia
     g$mod0$16000$f3xia
     (case-lambda
       ((g$x1$15792$f3xia g$x2$15793$f3xia)
        (- g$x1$15792$f3xia
           (* (g$div0$15590$f3xia g$x1$15792$f3xia g$x2$15793$f3xia)
              g$x2$15793$f3xia)))))
   (g$div-and-mod$15593$f3xia
     g$div-and-mod$16001$f3xia
     (case-lambda
       ((g$x1$15794$f3xia g$x2$15795$f3xia)
        ((case-lambda
           ((g$d$15796$f3xia)
            (values
              g$d$15796$f3xia
              (- g$x1$15794$f3xia
                 (* g$d$15796$f3xia g$x2$15795$f3xia)))))
         (g$div$17063$f3xia g$x1$15794$f3xia g$x2$15795$f3xia)))))
   (g$div0-and-mod0$15594$f3xia
     g$div0-and-mod0$16002$f3xia
     (case-lambda
       ((g$x1$15797$f3xia g$x2$15798$f3xia)
        ((case-lambda
           ((g$d$15799$f3xia)
            (values
              g$d$15799$f3xia
              (- g$x1$15797$f3xia
                 (* g$d$15799$f3xia g$x2$15798$f3xia)))))
         (g$div0$15590$f3xia g$x1$15797$f3xia g$x2$15798$f3xia)))))
   (g$list->vector$15595$f3xia
     g$list->vector$16003$f3xia
     (case-lambda
       ((g$lst$15800$f3xia) (apply vector g$lst$15800$f3xia))))
   (g$list->string$15596$f3xia
     g$list->string$16004$f3xia
     (case-lambda
       ((g$lst$15801$f3xia)
        (apply g$string$15582$f3xia g$lst$15801$f3xia))))
   (g$vector-ref$15597$f3xia
     g$vector-ref$16005$f3xia
     (case-lambda
       ((g$x$15802$f3xia g$n$15803$f3xia)
        (begin
          (if (not (g$vector?$15566$f3xia g$x$15802$f3xia))
            (g$assertion-violation$12459$f3xia
              'vector-ref
              '"not a vector"
              g$x$15802$f3xia)
            (void))
          (if (not (g$integer?$17025$f3xia g$n$15803$f3xia))
            (g$assertion-violation$12459$f3xia
              'vector-ref
              '"not an integer"
              g$n$15803$f3xia)
            (void))
          (if (g$negative?$17031$f3xia g$n$15803$f3xia)
            (g$assertion-violation$12459$f3xia
              'vector-ref
              '"negative index"
              g$n$15803$f3xia)
            (void))
          ($vector-ref g$x$15802$f3xia g$n$15803$f3xia)))))
   (g$vector-set!$15598$f3xia
     g$vector-set!$16006$f3xia
     (case-lambda
       ((g$x$15804$f3xia g$n$15805$f3xia g$value$15806$f3xia)
        (begin
          (if (not (g$vector?$15566$f3xia g$x$15804$f3xia))
            (g$assertion-violation$12459$f3xia
              'vector-set!
              '"not a vector"
              g$x$15804$f3xia)
            (void))
          (if (not (g$integer?$17025$f3xia g$n$15805$f3xia))
            (g$assertion-violation$12459$f3xia
              'vector-set!
              '"not an integer"
              g$n$15805$f3xia)
            (void))
          (if (g$negative?$17031$f3xia g$n$15805$f3xia)
            (g$assertion-violation$12459$f3xia
              'vector-set!
              '"negative index"
              g$n$15805$f3xia)
            (void))
          ($vector-set!
            g$x$15804$f3xia
            g$n$15805$f3xia
            g$value$15806$f3xia)
          (void)))))
   (g$make-vector$15599$f3xia
     g$make-vector$16007$f3xia
     (case-lambda
       ((g$k$15807$f3xia)
        (begin
          (if (not (g$fixnum?$15571$f3xia g$k$15807$f3xia))
            (g$assertion-violation$12459$f3xia
              'make-vector
              '"not a fixnum"
              g$k$15807$f3xia)
            (void))
          (if (g$negative?$17031$f3xia g$k$15807$f3xia)
            (g$assertion-violation$12459$f3xia
              'make-vector
              '"cannot be negative"
              g$k$15807$f3xia)
            (void))
          (clr-new-array-internal 'System.Object g$k$15807$f3xia)))
       ((g$k$15808$f3xia g$fill$15809$f3xia)
        ((case-lambda
           ((g$vec$15810$f3xia)
            (begin
              (g$vector-fill!$15601$f3xia
                g$vec$15810$f3xia
                g$fill$15809$f3xia)
              g$vec$15810$f3xia)))
         (g$make-vector$15599$f3xia g$k$15808$f3xia)))))
   (g$vector-length$15600$f3xia
     g$vector-length$16008$f3xia
     (case-lambda
       ((g$vec$15811$f3xia)
        (begin
          (if (not (g$vector?$15566$f3xia g$vec$15811$f3xia))
            (g$assertion-violation$12459$f3xia
              'vector-length
              '"not a vector"
              g$vec$15811$f3xia)
            (void))
          (clr-call-internal
            'System.Array
            'get_Length
            g$vec$15811$f3xia)))))
   (g$vector-fill!$15601$f3xia
     g$vector-fill!$16009$f3xia
     (case-lambda
       ((g$vec$15812$f3xia g$val$15813$f3xia)
        ((case-lambda
           ((g$len$15814$f3xia)
            (letrec ((g$loop$15815$f3xia
                       (case-lambda
                         ((g$i$15816$f3xia)
                          (if (g$fx=?$15276$f3xia
                                g$i$15816$f3xia
                                g$len$15814$f3xia)
                            (if '#f '#f (void))
                            (begin
                              (g$vector-set!$15598$f3xia
                                g$vec$15812$f3xia
                                g$i$15816$f3xia
                                g$val$15813$f3xia)
                              (g$loop$15815$f3xia
                                (g$fx+$15263$f3xia
                                  g$i$15816$f3xia
                                  '1))))))))
              (g$loop$15815$f3xia '0))))
         (g$vector-length$15600$f3xia g$vec$15812$f3xia)))))
   (g$vector->list$15602$f3xia
     g$vector->list$16010$f3xia
     (case-lambda
       ((g$vec$15817$f3xia)
        (begin
          (if (not (g$vector?$15566$f3xia g$vec$15817$f3xia))
            (g$assertion-violation$12459$f3xia
              'vector->list
              '"not a vector"
              g$vec$15817$f3xia)
            (void))
          (clr-call-internal
            'IronScheme.Runtime.Cons
            'FromList
            '()
            g$vec$15817$f3xia)))))
   (g$xcons$15603$f3xia
     g$xcons$16011$f3xia
     (case-lambda
       ((g$x$15818$f3xia g$y$15819$f3xia)
        (cons g$y$15819$f3xia g$x$15818$f3xia))))
   (g$reverse$15604$f3xia
     g$reverse$16012$f3xia
     (case-lambda
       ((g$lst$15820$f3xia)
        (g$fold-left$15557$f3xia
          g$xcons$15603$f3xia
          '()
          g$lst$15820$f3xia))))
   (g$caar$15605$f3xia
     g$caar$16013$f3xia
     (case-lambda ((g$x$15821$f3xia) (car (car g$x$15821$f3xia)))))
   (g$cadr$15606$f3xia
     g$cadr$16014$f3xia
     (case-lambda ((g$x$15822$f3xia) (car (cdr g$x$15822$f3xia)))))
   (g$cdar$15607$f3xia
     g$cdar$16015$f3xia
     (case-lambda ((g$x$15823$f3xia) (cdr (car g$x$15823$f3xia)))))
   (g$cddr$15608$f3xia
     g$cddr$16016$f3xia
     (case-lambda ((g$x$15824$f3xia) (cdr (cdr g$x$15824$f3xia)))))
   (g$caaar$15609$f3xia
     g$caaar$16017$f3xia
     (case-lambda
       ((g$x$15825$f3xia) (g$caar$15605$f3xia (car g$x$15825$f3xia)))))
   (g$caadr$15610$f3xia
     g$caadr$16018$f3xia
     (case-lambda
       ((g$x$15826$f3xia) (g$caar$15605$f3xia (cdr g$x$15826$f3xia)))))
   (g$cadar$15611$f3xia
     g$cadar$16019$f3xia
     (case-lambda
       ((g$x$15827$f3xia) (g$cadr$15606$f3xia (car g$x$15827$f3xia)))))
   (g$caddr$15612$f3xia
     g$caddr$16020$f3xia
     (case-lambda
       ((g$x$15828$f3xia) (g$cadr$15606$f3xia (cdr g$x$15828$f3xia)))))
   (g$cdaar$15613$f3xia
     g$cdaar$16021$f3xia
     (case-lambda
       ((g$x$15829$f3xia) (g$cdar$15607$f3xia (car g$x$15829$f3xia)))))
   (g$cdadr$15614$f3xia
     g$cdadr$16022$f3xia
     (case-lambda
       ((g$x$15830$f3xia) (g$cdar$15607$f3xia (cdr g$x$15830$f3xia)))))
   (g$cddar$15615$f3xia
     g$cddar$16023$f3xia
     (case-lambda
       ((g$x$15831$f3xia) (g$cddr$15608$f3xia (car g$x$15831$f3xia)))))
   (g$cdddr$15616$f3xia
     g$cdddr$16024$f3xia
     (case-lambda
       ((g$x$15832$f3xia) (g$cddr$15608$f3xia (cdr g$x$15832$f3xia)))))
   (g$caaaar$15617$f3xia
     g$caaaar$16025$f3xia
     (case-lambda
       ((g$x$15833$f3xia) (g$caaar$15609$f3xia (car g$x$15833$f3xia)))))
   (g$caaadr$15618$f3xia
     g$caaadr$16026$f3xia
     (case-lambda
       ((g$x$15834$f3xia) (g$caaar$15609$f3xia (cdr g$x$15834$f3xia)))))
   (g$caadar$15619$f3xia
     g$caadar$16027$f3xia
     (case-lambda
       ((g$x$15835$f3xia) (g$caadr$15610$f3xia (car g$x$15835$f3xia)))))
   (g$caaddr$15620$f3xia
     g$caaddr$16028$f3xia
     (case-lambda
       ((g$x$15836$f3xia) (g$caadr$15610$f3xia (cdr g$x$15836$f3xia)))))
   (g$cadaar$15621$f3xia
     g$cadaar$16029$f3xia
     (case-lambda
       ((g$x$15837$f3xia) (g$cadar$15611$f3xia (car g$x$15837$f3xia)))))
   (g$cadadr$15622$f3xia
     g$cadadr$16030$f3xia
     (case-lambda
       ((g$x$15838$f3xia) (g$cadar$15611$f3xia (cdr g$x$15838$f3xia)))))
   (g$caddar$15623$f3xia
     g$caddar$16031$f3xia
     (case-lambda
       ((g$x$15839$f3xia) (g$caddr$15612$f3xia (car g$x$15839$f3xia)))))
   (g$cadddr$15624$f3xia
     g$cadddr$16032$f3xia
     (case-lambda
       ((g$x$15840$f3xia) (g$caddr$15612$f3xia (cdr g$x$15840$f3xia)))))
   (g$cdaaar$15625$f3xia
     g$cdaaar$16033$f3xia
     (case-lambda
       ((g$x$15841$f3xia) (g$cdaar$15613$f3xia (car g$x$15841$f3xia)))))
   (g$cdaadr$15626$f3xia
     g$cdaadr$16034$f3xia
     (case-lambda
       ((g$x$15842$f3xia) (g$cdaar$15613$f3xia (cdr g$x$15842$f3xia)))))
   (g$cdadar$15627$f3xia
     g$cdadar$16035$f3xia
     (case-lambda
       ((g$x$15843$f3xia) (g$cdadr$15614$f3xia (car g$x$15843$f3xia)))))
   (g$cdaddr$15628$f3xia
     g$cdaddr$16036$f3xia
     (case-lambda
       ((g$x$15844$f3xia) (g$cdadr$15614$f3xia (cdr g$x$15844$f3xia)))))
   (g$cddaar$15629$f3xia
     g$cddaar$16037$f3xia
     (case-lambda
       ((g$x$15845$f3xia) (g$cddar$15615$f3xia (car g$x$15845$f3xia)))))
   (g$cddadr$15630$f3xia
     g$cddadr$16038$f3xia
     (case-lambda
       ((g$x$15846$f3xia) (g$cddar$15615$f3xia (cdr g$x$15846$f3xia)))))
   (g$cdddar$15631$f3xia
     g$cdddar$16039$f3xia
     (case-lambda
       ((g$x$15847$f3xia) (g$cdddr$15616$f3xia (car g$x$15847$f3xia)))))
   (g$cddddr$15632$f3xia
     g$cddddr$16040$f3xia
     (case-lambda
       ((g$x$15848$f3xia) (g$cdddr$15616$f3xia (cdr g$x$15848$f3xia)))))
   (g$even?$15633$f3xia
     g$even?$16041$f3xia
     (case-lambda
       ((g$n$15849$f3xia)
        (begin
          (if (not (g$integer?$17025$f3xia g$n$15849$f3xia))
            (g$assertion-violation$12459$f3xia
              'even?
              '"not a integer"
              g$n$15849$f3xia)
            (void))
          (g$=$17038$f3xia
            '0
            (g$mod$15591$f3xia g$n$15849$f3xia '2))))))
   (g$odd?$15634$f3xia
     g$odd?$16042$f3xia
     (case-lambda
       ((g$n$15850$f3xia)
        (begin
          (if (not (g$integer?$17025$f3xia g$n$15850$f3xia))
            (g$assertion-violation$12459$f3xia
              'odd?
              '"not a integer"
              g$n$15850$f3xia)
            (void))
          (g$=$17038$f3xia
            '1
            (g$mod$15591$f3xia g$n$15850$f3xia '2))))))
   (g$max$15635$f3xia
     g$max$16043$f3xia
     (case-lambda
       ((g$a$15851$f3xia . g$rest$15852$f3xia)
        (begin
          (if (not (g$real?$17023$f3xia g$a$15851$f3xia))
            (g$assertion-violation$12459$f3xia
              'max
              '"not a real"
              g$a$15851$f3xia)
            (void))
          (g$fold-left$15557$f3xia
            (case-lambda
              ((g$a$15853$f3xia g$b$15854$f3xia)
               ((case-lambda
                  ((g$r$15855$f3xia)
                   (if ((case-lambda
                          ((g$t$15856$f3xia)
                           (if g$t$15856$f3xia
                             g$t$15856$f3xia
                             (begin
                               '#f
                               (g$inexact?$17021$f3xia
                                 g$b$15854$f3xia)))))
                        (g$inexact?$17021$f3xia g$a$15853$f3xia))
                     (g$inexact$17032$f3xia g$r$15855$f3xia)
                     g$r$15855$f3xia)))
                (if (g$<$17039$f3xia g$a$15853$f3xia g$b$15854$f3xia)
                  g$b$15854$f3xia
                  g$a$15853$f3xia))))
            g$a$15851$f3xia
            g$rest$15852$f3xia)))))
   (g$min$15636$f3xia
     g$min$16044$f3xia
     (case-lambda
       ((g$a$15857$f3xia . g$rest$15858$f3xia)
        (begin
          (if (not (g$real?$17023$f3xia g$a$15857$f3xia))
            (g$assertion-violation$12459$f3xia
              'min
              '"not a real"
              g$a$15857$f3xia)
            (void))
          (g$fold-left$15557$f3xia
            (case-lambda
              ((g$a$15859$f3xia g$b$15860$f3xia)
               ((case-lambda
                  ((g$r$15861$f3xia)
                   (if ((case-lambda
                          ((g$t$15862$f3xia)
                           (if g$t$15862$f3xia
                             g$t$15862$f3xia
                             (begin
                               '#f
                               (g$inexact?$17021$f3xia
                                 g$b$15860$f3xia)))))
                        (g$inexact?$17021$f3xia g$a$15859$f3xia))
                     (g$inexact$17032$f3xia g$r$15861$f3xia)
                     g$r$15861$f3xia)))
                (if (g$>$17041$f3xia g$a$15859$f3xia g$b$15860$f3xia)
                  g$b$15860$f3xia
                  g$a$15859$f3xia))))
            g$a$15857$f3xia
            g$rest$15858$f3xia)))))
   (g$gcd$15637$f3xia
     g$gcd$16045$f3xia
     (case-lambda
       (g$nums$15863$f3xia
        ((case-lambda
           ((g$t$15864$f3xia)
            (if (eqv? g$t$15864$f3xia '0)
              '0
              (if (eqv? g$t$15864$f3xia '1)
                ((case-lambda
                   ((g$n$15865$f3xia)
                    (begin
                      (if (not (g$integer?$17025$f3xia g$n$15865$f3xia))
                        (g$assertion-violation$12459$f3xia
                          'gcd
                          '"not an integer"
                          g$n$15865$f3xia)
                        (void))
                      (g$abs$17064$f3xia g$n$15865$f3xia))))
                 (car g$nums$15863$f3xia))
                (if (eqv? g$t$15864$f3xia '2)
                  ((case-lambda
                     ((g$a$15866$f3xia g$b$15867$f3xia)
                      (begin
                        (if (not (g$integer?$17025$f3xia
                                   g$a$15866$f3xia))
                          (g$assertion-violation$12459$f3xia
                            'gcd
                            '"not an integer"
                            g$a$15866$f3xia)
                          (void))
                        (if (not (g$integer?$17025$f3xia
                                   g$b$15867$f3xia))
                          (g$assertion-violation$12459$f3xia
                            'gcd
                            '"not an integer"
                            g$b$15867$f3xia)
                          (void))
                        (if (g$zero?$17029$f3xia g$b$15867$f3xia)
                          (g$abs$17064$f3xia g$a$15866$f3xia)
                          (g$abs$17064$f3xia
                            (g$gcd$15637$f3xia
                              g$b$15867$f3xia
                              (g$mod$15591$f3xia
                                g$a$15866$f3xia
                                g$b$15867$f3xia)))))))
                   (car g$nums$15863$f3xia)
                   (g$cadr$15606$f3xia g$nums$15863$f3xia))
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        (g$fold-left$15557$f3xia
                          g$gcd$15637$f3xia
                          (g$abs$17064$f3xia (car g$nums$15863$f3xia))
                          (cdr g$nums$15863$f3xia)))))))))))
         (g$length$15547$f3xia g$nums$15863$f3xia)))))
   (g$lcm$15638$f3xia
     g$lcm$16046$f3xia
     (case-lambda
       (g$nums$15868$f3xia
        ((case-lambda
           ((g$t$15869$f3xia)
            (if (eqv? g$t$15869$f3xia '0)
              '1
              (if (eqv? g$t$15869$f3xia '1)
                ((case-lambda
                   ((g$n$15870$f3xia)
                    (begin
                      (if (not (g$integer?$17025$f3xia g$n$15870$f3xia))
                        (g$assertion-violation$12459$f3xia
                          'lcm
                          '"not an integer"
                          g$n$15870$f3xia)
                        (void))
                      (g$abs$17064$f3xia g$n$15870$f3xia))))
                 (car g$nums$15868$f3xia))
                (if (eqv? g$t$15869$f3xia '2)
                  ((case-lambda
                     ((g$a$15871$f3xia g$b$15872$f3xia)
                      (begin
                        (if (not (g$integer?$17025$f3xia
                                   g$a$15871$f3xia))
                          (g$assertion-violation$12459$f3xia
                            'lcm
                            '"not an integer"
                            g$a$15871$f3xia)
                          (void))
                        (if (not (g$integer?$17025$f3xia
                                   g$b$15872$f3xia))
                          (g$assertion-violation$12459$f3xia
                            'lcm
                            '"not an integer"
                            g$b$15872$f3xia)
                          (void))
                        (if ((case-lambda
                               ((g$t$15873$f3xia)
                                (if g$t$15873$f3xia
                                  g$t$15873$f3xia
                                  (begin
                                    '#f
                                    (g$zero?$17029$f3xia
                                      g$b$15872$f3xia)))))
                             (g$zero?$17029$f3xia g$a$15871$f3xia))
                          '0
                          (g$abs$17064$f3xia
                            (* (/ g$a$15871$f3xia
                                  (g$gcd$15637$f3xia
                                    g$a$15871$f3xia
                                    g$b$15872$f3xia))
                               g$b$15872$f3xia))))))
                   (car g$nums$15868$f3xia)
                   (g$cadr$15606$f3xia g$nums$15868$f3xia))
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        (g$fold-left$15557$f3xia
                          g$lcm$15638$f3xia
                          (g$abs$17064$f3xia (car g$nums$15868$f3xia))
                          (cdr g$nums$15868$f3xia)))))))))))
         (g$length$15547$f3xia g$nums$15868$f3xia)))))
   (g$string-compare$15639$f3xia
     g$string-compare$16047$f3xia
     (case-lambda
       ((g$a$15874$f3xia g$b$15875$f3xia)
        (clr-call-internal
          'System.String
          '"Compare(String,String,StringComparison)"
          '()
          (g$->string$15581$f3xia g$a$15874$f3xia)
          (g$->string$15581$f3xia g$b$15875$f3xia)
          'ordinal))))
   (g$string=?$15680$f3xia
     g$string=?$16048$f3xia
     (case-lambda
       ((g$a$15876$f3xia g$b$15877$f3xia . g$rest$15878$f3xia)
        (begin
          (if (not (g$string?$15564$f3xia g$a$15876$f3xia))
            (g$assertion-violation$12459$f3xia
              'string=?
              '"not a string"
              g$a$15876$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$15879$f3xia)
               (begin
                 (if (not (g$string?$15564$f3xia g$x$15879$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'string=?
                     '"not a string"
                     g$x$15879$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$15880$f3xia)
                     (begin
                       (set! g$a$15876$f3xia g$x$15879$f3xia)
                       g$r$15880$f3xia)))
                  (g$fx=?$15276$f3xia
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      (g$->string$15581$f3xia g$a$15876$f3xia)
                      (g$->string$15581$f3xia g$x$15879$f3xia)
                      'ordinal)
                    '0)))))
            (cons g$b$15877$f3xia g$rest$15878$f3xia))))))
   (g$string<?$15681$f3xia
     g$string<?$16049$f3xia
     (case-lambda
       ((g$a$15881$f3xia g$b$15882$f3xia . g$rest$15883$f3xia)
        (begin
          (if (not (g$string?$15564$f3xia g$a$15881$f3xia))
            (g$assertion-violation$12459$f3xia
              'string<?
              '"not a string"
              g$a$15881$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$15884$f3xia)
               (begin
                 (if (not (g$string?$15564$f3xia g$x$15884$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'string<?
                     '"not a string"
                     g$x$15884$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$15885$f3xia)
                     (begin
                       (set! g$a$15881$f3xia g$x$15884$f3xia)
                       g$r$15885$f3xia)))
                  (g$fx<?$15277$f3xia
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      (g$->string$15581$f3xia g$a$15881$f3xia)
                      (g$->string$15581$f3xia g$x$15884$f3xia)
                      'ordinal)
                    '0)))))
            (cons g$b$15882$f3xia g$rest$15883$f3xia))))))
   (g$string>?$15682$f3xia
     g$string>?$16050$f3xia
     (case-lambda
       ((g$a$15886$f3xia g$b$15887$f3xia . g$rest$15888$f3xia)
        (begin
          (if (not (g$string?$15564$f3xia g$a$15886$f3xia))
            (g$assertion-violation$12459$f3xia
              'string>?
              '"not a string"
              g$a$15886$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$15889$f3xia)
               (begin
                 (if (not (g$string?$15564$f3xia g$x$15889$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'string>?
                     '"not a string"
                     g$x$15889$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$15890$f3xia)
                     (begin
                       (set! g$a$15886$f3xia g$x$15889$f3xia)
                       g$r$15890$f3xia)))
                  (g$fx>?$15279$f3xia
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      (g$->string$15581$f3xia g$a$15886$f3xia)
                      (g$->string$15581$f3xia g$x$15889$f3xia)
                      'ordinal)
                    '0)))))
            (cons g$b$15887$f3xia g$rest$15888$f3xia))))))
   (g$string<=?$15683$f3xia
     g$string<=?$16051$f3xia
     (case-lambda
       ((g$a$15891$f3xia g$b$15892$f3xia . g$rest$15893$f3xia)
        (begin
          (if (not (g$string?$15564$f3xia g$a$15891$f3xia))
            (g$assertion-violation$12459$f3xia
              'string<=?
              '"not a string"
              g$a$15891$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$15894$f3xia)
               (begin
                 (if (not (g$string?$15564$f3xia g$x$15894$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'string<=?
                     '"not a string"
                     g$x$15894$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$15895$f3xia)
                     (begin
                       (set! g$a$15891$f3xia g$x$15894$f3xia)
                       g$r$15895$f3xia)))
                  (g$fx<=?$15278$f3xia
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      (g$->string$15581$f3xia g$a$15891$f3xia)
                      (g$->string$15581$f3xia g$x$15894$f3xia)
                      'ordinal)
                    '0)))))
            (cons g$b$15892$f3xia g$rest$15893$f3xia))))))
   (g$string>=?$15684$f3xia
     g$string>=?$16052$f3xia
     (case-lambda
       ((g$a$15896$f3xia g$b$15897$f3xia . g$rest$15898$f3xia)
        (begin
          (if (not (g$string?$15564$f3xia g$a$15896$f3xia))
            (g$assertion-violation$12459$f3xia
              'string>=?
              '"not a string"
              g$a$15896$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$15899$f3xia)
               (begin
                 (if (not (g$string?$15564$f3xia g$x$15899$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'string>=?
                     '"not a string"
                     g$x$15899$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$15900$f3xia)
                     (begin
                       (set! g$a$15896$f3xia g$x$15899$f3xia)
                       g$r$15900$f3xia)))
                  (g$fx>=?$15280$f3xia
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      (g$->string$15581$f3xia g$a$15896$f3xia)
                      (g$->string$15581$f3xia g$x$15899$f3xia)
                      'ordinal)
                    '0)))))
            (cons g$b$15897$f3xia g$rest$15898$f3xia))))))
   (g$symbol=?$15685$f3xia
     g$symbol=?$16053$f3xia
     (case-lambda
       ((g$a$15901$f3xia g$b$15902$f3xia . g$rest$15903$f3xia)
        (begin
          (if (not (g$symbol?$15568$f3xia g$a$15901$f3xia))
            (g$assertion-violation$12459$f3xia
              'symbol=?
              '"not a symbol"
              g$a$15901$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$15904$f3xia)
               (begin
                 (if (not (g$symbol?$15568$f3xia g$x$15904$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'symbol=?
                     '"not a symbol"
                     g$x$15904$f3xia)
                   (void))
                 (eq? g$a$15901$f3xia g$x$15904$f3xia))))
            (cons g$b$15902$f3xia g$rest$15903$f3xia))))))
   (g$boolean=?$15686$f3xia
     g$boolean=?$16054$f3xia
     (case-lambda
       ((g$a$15905$f3xia g$b$15906$f3xia . g$rest$15907$f3xia)
        (begin
          (if (not (g$boolean?$15569$f3xia g$a$15905$f3xia))
            (g$assertion-violation$12459$f3xia
              'boolean=?
              '"not a boolean"
              g$a$15905$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$15908$f3xia)
               (begin
                 (if (not (g$boolean?$15569$f3xia g$x$15908$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'boolean=?
                     '"not a boolean"
                     g$x$15908$f3xia)
                   (void))
                 (eq? g$a$15905$f3xia g$x$15908$f3xia))))
            (cons g$b$15906$f3xia g$rest$15907$f3xia))))))
   (g$char=?$15727$f3xia
     g$char=?$16055$f3xia
     (case-lambda
       ((g$a$15909$f3xia g$b$15910$f3xia . g$rest$15911$f3xia)
        (begin
          (if (not (g$char?$15565$f3xia g$a$15909$f3xia))
            (g$assertion-violation$12459$f3xia
              'char=?
              '"not a char"
              g$a$15909$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$15912$f3xia)
               (begin
                 (if (not (g$char?$15565$f3xia g$x$15912$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'char=?
                     '"not a char"
                     g$x$15912$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$15913$f3xia)
                     (begin
                       (set! g$a$15909$f3xia g$x$15912$f3xia)
                       g$r$15913$f3xia)))
                  (g$fx=?$15276$f3xia
                    (g$char->integer$15574$f3xia g$a$15909$f3xia)
                    (g$char->integer$15574$f3xia g$x$15912$f3xia))))))
            (cons g$b$15910$f3xia g$rest$15911$f3xia))))))
   (g$char<?$15728$f3xia
     g$char<?$16056$f3xia
     (case-lambda
       ((g$a$15914$f3xia g$b$15915$f3xia . g$rest$15916$f3xia)
        (begin
          (if (not (g$char?$15565$f3xia g$a$15914$f3xia))
            (g$assertion-violation$12459$f3xia
              'char<?
              '"not a char"
              g$a$15914$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$15917$f3xia)
               (begin
                 (if (not (g$char?$15565$f3xia g$x$15917$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'char<?
                     '"not a char"
                     g$x$15917$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$15918$f3xia)
                     (begin
                       (set! g$a$15914$f3xia g$x$15917$f3xia)
                       g$r$15918$f3xia)))
                  (g$fx<?$15277$f3xia
                    (g$char->integer$15574$f3xia g$a$15914$f3xia)
                    (g$char->integer$15574$f3xia g$x$15917$f3xia))))))
            (cons g$b$15915$f3xia g$rest$15916$f3xia))))))
   (g$char>?$15729$f3xia
     g$char>?$16057$f3xia
     (case-lambda
       ((g$a$15919$f3xia g$b$15920$f3xia . g$rest$15921$f3xia)
        (begin
          (if (not (g$char?$15565$f3xia g$a$15919$f3xia))
            (g$assertion-violation$12459$f3xia
              'char>?
              '"not a char"
              g$a$15919$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$15922$f3xia)
               (begin
                 (if (not (g$char?$15565$f3xia g$x$15922$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'char>?
                     '"not a char"
                     g$x$15922$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$15923$f3xia)
                     (begin
                       (set! g$a$15919$f3xia g$x$15922$f3xia)
                       g$r$15923$f3xia)))
                  (g$fx>?$15279$f3xia
                    (g$char->integer$15574$f3xia g$a$15919$f3xia)
                    (g$char->integer$15574$f3xia g$x$15922$f3xia))))))
            (cons g$b$15920$f3xia g$rest$15921$f3xia))))))
   (g$char<=?$15730$f3xia
     g$char<=?$16058$f3xia
     (case-lambda
       ((g$a$15924$f3xia g$b$15925$f3xia . g$rest$15926$f3xia)
        (begin
          (if (not (g$char?$15565$f3xia g$a$15924$f3xia))
            (g$assertion-violation$12459$f3xia
              'char<=?
              '"not a char"
              g$a$15924$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$15927$f3xia)
               (begin
                 (if (not (g$char?$15565$f3xia g$x$15927$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'char<=?
                     '"not a char"
                     g$x$15927$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$15928$f3xia)
                     (begin
                       (set! g$a$15924$f3xia g$x$15927$f3xia)
                       g$r$15928$f3xia)))
                  (g$fx<=?$15278$f3xia
                    (g$char->integer$15574$f3xia g$a$15924$f3xia)
                    (g$char->integer$15574$f3xia g$x$15927$f3xia))))))
            (cons g$b$15925$f3xia g$rest$15926$f3xia))))))
   (g$char>=?$15731$f3xia
     g$char>=?$16059$f3xia
     (case-lambda
       ((g$a$15929$f3xia g$b$15930$f3xia . g$rest$15931$f3xia)
        (begin
          (if (not (g$char?$15565$f3xia g$a$15929$f3xia))
            (g$assertion-violation$12459$f3xia
              'char>=?
              '"not a char"
              g$a$15929$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$15932$f3xia)
               (begin
                 (if (not (g$char?$15565$f3xia g$x$15932$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'char>=?
                     '"not a char"
                     g$x$15932$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$15933$f3xia)
                     (begin
                       (set! g$a$15929$f3xia g$x$15932$f3xia)
                       g$r$15933$f3xia)))
                  (g$fx>=?$15280$f3xia
                    (g$char->integer$15574$f3xia g$a$15929$f3xia)
                    (g$char->integer$15574$f3xia g$x$15932$f3xia))))))
            (cons g$b$15930$f3xia g$rest$15931$f3xia))))))
   (g$rationalize$15732$f3xia
     g$rationalize$16060$f3xia
     (case-lambda
       ((g$x$15934$f3xia g$e$15935$f3xia)
        (if (if (g$infinite?$17019$f3xia g$x$15934$f3xia)
              (begin '#f (g$infinite?$17019$f3xia g$e$15935$f3xia))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$15936$f3xia)
              (if (if (g$exact?$17020$f3xia g$x$15934$f3xia)
                    (begin '#f (g$exact?$17020$f3xia g$e$15935$f3xia))
                    '#f)
                g$r$15936$f3xia
                (g$inexact$17032$f3xia g$r$15936$f3xia))))
           (apply
             /
             (g$find-ratio$15733$f3xia
               g$x$15934$f3xia
               g$e$15935$f3xia)))))))
   (g$find-ratio$15733$f3xia
     g$find-ratio$16061$f3xia
     (case-lambda
       ((g$x$15937$f3xia g$e$15938$f3xia)
        (g$find-ratio-between$15734$f3xia
          (- g$x$15937$f3xia g$e$15938$f3xia)
          (+ g$x$15937$f3xia g$e$15938$f3xia)))))
   (g$find-ratio-between$15734$f3xia
     g$find-ratio-between$16062$f3xia
     (case-lambda
       ((g$x$15939$f3xia g$y$15940$f3xia)
        (letrec* ((g$sr$15941$f3xia
                    (case-lambda
                      ((g$x$15943$f3xia g$y$15944$f3xia)
                       ((case-lambda
                          ((g$fx$15945$f3xia g$fy$15946$f3xia)
                           (if (g$>=$17042$f3xia
                                 g$fx$15945$f3xia
                                 g$x$15943$f3xia)
                             (list g$fx$15945$f3xia '1)
                             (if (g$=$17038$f3xia
                                   g$fx$15945$f3xia
                                   g$fy$15946$f3xia)
                               ((case-lambda
                                  ((g$rat$15947$f3xia)
                                   (list
                                     (+ (g$cadr$15606$f3xia
                                          g$rat$15947$f3xia)
                                        (* g$fx$15945$f3xia
                                           (car g$rat$15947$f3xia)))
                                     (car g$rat$15947$f3xia))))
                                (g$sr$15941$f3xia
                                  (/ (- g$y$15944$f3xia
                                        g$fy$15946$f3xia))
                                  (/ (- g$x$15943$f3xia
                                        g$fx$15945$f3xia))))
                               ((case-lambda
                                  (()
                                   (begin
                                     '#f
                                     (list
                                       (+ '1 g$fx$15945$f3xia)
                                       '1)))))))))
                        (g$exact$17033$f3xia
                          (g$floor$17065$f3xia g$x$15943$f3xia))
                        (g$exact$17033$f3xia
                          (g$floor$17065$f3xia g$y$15944$f3xia)))))))
          (if (g$<$17039$f3xia g$y$15940$f3xia g$x$15939$f3xia)
            (g$find-ratio-between$15734$f3xia
              g$y$15940$f3xia
              g$x$15939$f3xia)
            (if (g$>=$17042$f3xia g$x$15939$f3xia g$y$15940$f3xia)
              (list g$x$15939$f3xia '1)
              (if (g$positive?$17030$f3xia g$x$15939$f3xia)
                (g$sr$15941$f3xia g$x$15939$f3xia g$y$15940$f3xia)
                (if (g$negative?$17031$f3xia g$y$15940$f3xia)
                  ((case-lambda
                     ((g$rat$15942$f3xia)
                      (list
                        (- (car g$rat$15942$f3xia))
                        (g$cadr$15606$f3xia g$rat$15942$f3xia))))
                   (g$sr$15941$f3xia
                     (- g$y$15940$f3xia)
                     (- g$x$15939$f3xia)))
                  ((case-lambda (() (begin '#f '(0 1)))))))))))))
   (g$vector-map$15735$f3xia
     g$vector-map$16063$f3xia
     (case-lambda
       ((g$p$15948$f3xia g$vec1$15949$f3xia . g$vecs$15950$f3xia)
        ((case-lambda
           ((g$len$15951$f3xia)
            ((case-lambda
               ((g$res$15952$f3xia)
                (letrec ((g$loop$15953$f3xia
                           (case-lambda
                             ((g$i$15954$f3xia)
                              (if (g$fx=?$15276$f3xia
                                    g$i$15954$f3xia
                                    g$len$15951$f3xia)
                                (begin
                                  (if '#f '#f (void))
                                  g$res$15952$f3xia)
                                (begin
                                  (g$vector-set!$15598$f3xia
                                    g$res$15952$f3xia
                                    g$i$15954$f3xia
                                    (if (null? g$vecs$15950$f3xia)
                                      (g$p$15948$f3xia
                                        (g$vector-ref$15597$f3xia
                                          g$vec1$15949$f3xia
                                          g$i$15954$f3xia))
                                      (apply
                                        g$p$15948$f3xia
                                        (g$map$15550$f3xia
                                          (case-lambda
                                            ((g$x$15955$f3xia)
                                             (g$vector-ref$15597$f3xia
                                               g$x$15955$f3xia
                                               g$i$15954$f3xia)))
                                          (cons
                                            g$vec1$15949$f3xia
                                            g$vecs$15950$f3xia)))))
                                  (g$loop$15953$f3xia
                                    (g$fx+$15263$f3xia
                                      g$i$15954$f3xia
                                      '1))))))))
                  (g$loop$15953$f3xia '0))))
             (g$make-vector$15599$f3xia g$len$15951$f3xia '()))))
         (g$vector-length$15600$f3xia g$vec1$15949$f3xia)))))
   (g$vector-for-each$15736$f3xia
     g$vector-for-each$16064$f3xia
     (case-lambda
       ((g$p$15956$f3xia g$vec1$15957$f3xia . g$vecs$15958$f3xia)
        ((case-lambda
           ((g$len$15959$f3xia)
            (letrec ((g$loop$15960$f3xia
                       (case-lambda
                         ((g$i$15961$f3xia)
                          (if (g$fx=?$15276$f3xia
                                g$i$15961$f3xia
                                g$len$15959$f3xia)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$vecs$15958$f3xia)
                                (g$p$15956$f3xia
                                  (g$vector-ref$15597$f3xia
                                    g$vec1$15957$f3xia
                                    g$i$15961$f3xia))
                                (apply
                                  g$p$15956$f3xia
                                  (g$map$15550$f3xia
                                    (case-lambda
                                      ((g$x$15962$f3xia)
                                       (g$vector-ref$15597$f3xia
                                         g$x$15962$f3xia
                                         g$i$15961$f3xia)))
                                    (cons
                                      g$vec1$15957$f3xia
                                      g$vecs$15958$f3xia))))
                              (g$loop$15960$f3xia
                                (g$fx+$15263$f3xia
                                  g$i$15961$f3xia
                                  '1))))))))
              (g$loop$15960$f3xia '0))))
         (g$vector-length$15600$f3xia g$vec1$15957$f3xia)))))
   (g$string-for-each$15737$f3xia
     g$string-for-each$16065$f3xia
     (case-lambda
       ((g$p$15963$f3xia g$str1$15964$f3xia . g$strs$15965$f3xia)
        ((case-lambda
           ((g$len$15966$f3xia)
            (letrec ((g$loop$15967$f3xia
                       (case-lambda
                         ((g$i$15968$f3xia)
                          (if (g$fx=?$15276$f3xia
                                g$i$15968$f3xia
                                g$len$15966$f3xia)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$strs$15965$f3xia)
                                (g$p$15963$f3xia
                                  (g$string-ref$15577$f3xia
                                    g$str1$15964$f3xia
                                    g$i$15968$f3xia))
                                (apply
                                  g$p$15963$f3xia
                                  (g$map$15550$f3xia
                                    (case-lambda
                                      ((g$x$15969$f3xia)
                                       (g$string-ref$15577$f3xia
                                         g$x$15969$f3xia
                                         g$i$15968$f3xia)))
                                    (cons
                                      g$str1$15964$f3xia
                                      g$strs$15965$f3xia))))
                              (g$loop$15967$f3xia
                                (g$fx+$15263$f3xia
                                  g$i$15968$f3xia
                                  '1))))))))
              (g$loop$15967$f3xia '0))))
         (g$string-length$15580$f3xia g$str1$15964$f3xia))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$16067$f3xia
     g$using$16109$f3xia
     (clr-using-internal 'system))
   (g$using$16069$f3xia
     g$using$16110$f3xia
     (clr-using-internal 'system.collections))
   (g$hashtable?$16070$f3xia
     g$hashtable?$16111$f3xia
     (case-lambda
       ((g$obj$16083$f3xia)
        (clr-is-internal 'Hashtable g$obj$16083$f3xia))))
   (g$make-eq-hashtable$16071$f3xia
     g$make-eq-hashtable$16112$f3xia
     (case-lambda
       (() (g$make-eq-hashtable$16071$f3xia '32))
       ((g$k$16084$f3xia)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$16084$f3xia)))))
   (g$make-eqv-hashtable$16072$f3xia
     g$make-eqv-hashtable$16113$f3xia
     (case-lambda
       (() (g$make-eqv-hashtable$16072$f3xia '32))
       ((g$k$16085$f3xia)
        (make-hashtable eqv-hash eqv? g$k$16085$f3xia))))
   (g$hashtable-size$16073$f3xia
     g$hashtable-size$16114$f3xia
     (case-lambda
       ((g$ht$16086$f3xia)
        (clr-call-internal 'hashtable 'get_count g$ht$16086$f3xia))))
   (g$hashtable-ref$16074$f3xia
     g$hashtable-ref$16115$f3xia
     (case-lambda
       ((g$ht$16087$f3xia g$key$16088$f3xia g$default$16089$f3xia)
        ((case-lambda
           ((g$r$16090$f3xia)
            (if ((case-lambda
                   ((g$t$16091$f3xia)
                    (if g$t$16091$f3xia
                      g$t$16091$f3xia
                      (begin
                        '#f
                        (g$hashtable-contains?$16077$f3xia
                          g$ht$16087$f3xia
                          g$key$16088$f3xia)))))
                 (not (null? g$r$16090$f3xia)))
              g$r$16090$f3xia
              g$default$16089$f3xia)))
         (clr-call-internal
           'hashtable
           'get_item
           g$ht$16087$f3xia
           g$key$16088$f3xia)))))
   (g$hashtable-set!$16075$f3xia
     g$hashtable-set!$16116$f3xia
     (case-lambda
       ((g$ht$16092$f3xia g$key$16093$f3xia g$obj$16094$f3xia)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$16092$f3xia
          g$key$16093$f3xia
          g$obj$16094$f3xia))))
   (g$hashtable-delete!$16076$f3xia
     g$hashtable-delete!$16117$f3xia
     (case-lambda
       ((g$ht$16095$f3xia g$key$16096$f3xia)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$16095$f3xia
          g$key$16096$f3xia))))
   (g$hashtable-contains?$16077$f3xia
     g$hashtable-contains?$16118$f3xia
     (case-lambda
       ((g$ht$16097$f3xia g$key$16098$f3xia)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$16097$f3xia
          g$key$16098$f3xia))))
   (g$hashtable-update!$16078$f3xia
     g$hashtable-update!$16119$f3xia
     (case-lambda
       ((g$ht$16099$f3xia
          g$key$16100$f3xia
          g$proc$16101$f3xia
          g$default$16102$f3xia)
        (g$hashtable-set!$16075$f3xia
          g$ht$16099$f3xia
          g$key$16100$f3xia
          (g$proc$16101$f3xia
            (g$hashtable-ref$16074$f3xia
              g$ht$16099$f3xia
              g$key$16100$f3xia
              g$default$16102$f3xia))))))
   (g$hashtable-clear!$16079$f3xia
     g$hashtable-clear!$16120$f3xia
     (case-lambda
       ((g$ht$16103$f3xia)
        (g$hashtable-clear!$16079$f3xia g$ht$16103$f3xia '32))
       ((g$ht$16104$f3xia g$k$16105$f3xia)
        (clr-call-internal 'hashtable 'clear g$ht$16104$f3xia))))
   (g$string-hash$16080$f3xia
     g$string-hash$16121$f3xia
     (case-lambda
       ((g$str$16106$f3xia)
        (begin
          (if (not (g$string?$15972$f3xia g$str$16106$f3xia))
            (g$assertion-violation$12459$f3xia
              'string-hash
              '"not a string"
              g$str$16106$f3xia)
            (void))
          (clr-call-internal
            'StringComparer
            '"GetHashCode(String)"
            (clr-call-internal 'StringComparer 'get_Ordinal '())
            (clr-call-internal 'Object 'ToString g$str$16106$f3xia))))))
   (g$string-ci-hash$16081$f3xia
     g$string-ci-hash$16122$f3xia
     (case-lambda
       ((g$str$16107$f3xia)
        (begin
          (if (not (g$string?$15972$f3xia g$str$16107$f3xia))
            (g$assertion-violation$12459$f3xia
              'string-ci-hash
              '"not a string"
              g$str$16107$f3xia)
            (void))
          (clr-call-internal
            'StringComparer
            '"GetHashCode(String)"
            (clr-call-internal
              'StringComparer
              'get_InvariantCultureIgnoreCase
              '())
            (clr-call-internal 'Object 'ToString g$str$16107$f3xia))))))
   (g$symbol-hash$16082$f3xia
     g$symbol-hash$16123$f3xia
     (case-lambda
       ((g$sym$16108$f3xia)
        (begin
          (if (not (g$symbol?$15976$f3xia g$sym$16108$f3xia))
            (g$assertion-violation$12459$f3xia
              'symbol-hash
              '"not a symbol"
              g$sym$16108$f3xia)
            (void))
          (clr-call-internal
            'Object
            'GetHashCode
            g$sym$16108$f3xia))))))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$16125$f3xia
     g$using$16132$f3xia
     (clr-using-internal 'system.io))
   (g$file-exists?$16126$f3xia
     g$file-exists?$16133$f3xia
     (case-lambda
       ((g$fn$16129$f3xia)
        (clr-call-internal 'file 'exists '() g$fn$16129$f3xia))))
   (g$delete-file$16127$f3xia
     g$delete-file$16134$f3xia
     (case-lambda
       ((g$fn$16130$f3xia)
        (clr-call-internal 'file 'delete '() g$fn$16130$f3xia))))
   (g$get-directory-name$16128$f3xia
     g$get-directory-name$16135$f3xia
     (case-lambda
       ((g$path$16131$f3xia)
        (clr-call-internal
          'path
          'getdirectoryname
          '()
          g$path$16131$f3xia)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$16136$f3xia
     g$native-endianness$16455$f3xia
     (case-lambda (() 'little)))
   (g$utf8$16137$f3xia
     g$utf8$16456$f3xia
     (clr-call-internal 'System.Text.Encoding 'get_UTF8 '()))
   (g$utf16le$16138$f3xia
     g$utf16le$16457$f3xia
     (clr-new-internal 'System.Text.UnicodeEncoding '#f '#f))
   (g$utf16be$16139$f3xia
     g$utf16be$16458$f3xia
     (clr-new-internal 'System.Text.UnicodeEncoding '#t '#f))
   (g$utf32le$16140$f3xia
     g$utf32le$16459$f3xia
     (clr-new-internal 'System.Text.UTF32Encoding '#f '#f))
   (g$utf32be$16141$f3xia
     g$utf32be$16460$f3xia
     (clr-new-internal 'System.Text.UTF32Encoding '#t '#f))
   (g$bignum?$16142$f3xia
     g$bignum?$16461$f3xia
     (case-lambda
       ((g$obj$16209$f3xia)
        (clr-is-internal
          'Microsoft.Scripting.Math.BigInteger
          g$obj$16209$f3xia))))
   (g$->bignum$16143$f3xia
     g$->bignum$16462$f3xia
     (case-lambda
       ((g$ei$16210$f3xia)
        (if (g$bignum?$16142$f3xia g$ei$16210$f3xia)
          g$ei$16210$f3xia
          (if (g$fixnum?$15979$f3xia g$ei$16210$f3xia)
            (clr-call-internal
              'Microsoft.Scripting.Math.BigInteger
              '"Create(System.Int32)"
              '()
              g$ei$16210$f3xia)
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$12459$f3xia
                    '#f
                    '"not a exact integer"
                    g$ei$16210$f3xia))))))))))
   (g$get-bytes$16144$f3xia
     g$get-bytes$16463$f3xia
     (case-lambda
       ((g$enc$16211$f3xia g$str$16212$f3xia)
        (clr-call-internal
          'System.Text.Encoding
          '"GetBytes(String)"
          g$enc$16211$f3xia
          g$str$16212$f3xia))))
   (g$get-string$16145$f3xia
     g$get-string$16464$f3xia
     (case-lambda
       ((g$enc$16213$f3xia g$bv$16214$f3xia)
        (clr-call-internal
          'System.Text.Encoding
          '"GetString(Byte[])"
          g$enc$16213$f3xia
          g$bv$16214$f3xia))))
   (g$byte->sbyte$16146$f3xia
     g$byte->sbyte$16465$f3xia
     (case-lambda
       ((g$b$16215$f3xia)
        ((case-lambda
           ((g$b$16216$f3xia)
            (if (g$fx>?$15279$f3xia g$b$16216$f3xia '127)
              (g$fx-$15265$f3xia g$b$16216$f3xia '256)
              g$b$16216$f3xia)))
         (g$->fixnum$16148$f3xia g$b$16215$f3xia)))))
   (g$->byte$16147$f3xia
     g$->byte$16466$f3xia
     (case-lambda
       ((g$k$16217$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$k$16217$f3xia))
            (g$assertion-violation$12459$f3xia
              '#f
              '"not a fixnum"
              g$k$16217$f3xia)
            (void))
          (if ((case-lambda
                 ((g$t$16218$f3xia)
                  (if g$t$16218$f3xia
                    g$t$16218$f3xia
                    (begin
                      '#f
                      (g$fx>?$15279$f3xia g$k$16217$f3xia '255)))))
               (g$fx<?$15277$f3xia g$k$16217$f3xia '-128))
            (g$assertion-violation$12459$f3xia
              '#f
              '"too big or small for octect or byte"
              g$k$16217$f3xia)
            (void))
          (clr-cast-internal
            'System.Byte
            (clr-cast-internal 'System.Int32 g$k$16217$f3xia))))))
   (g$->fixnum$16148$f3xia
     g$->fixnum$16467$f3xia
     (case-lambda
       ((g$b$16219$f3xia)
        (clr-call-internal
          'System.Convert
          '"ToInt32(Object)"
          '()
          g$b$16219$f3xia))))
   (g$make-bytevector$16149$f3xia
     g$make-bytevector$16468$f3xia
     (case-lambda
       ((g$k$16220$f3xia)
        (clr-new-array-internal
          'System.Byte
          (clr-cast-internal 'System.Int32 g$k$16220$f3xia)))
       ((g$k$16221$f3xia g$fill$16222$f3xia)
        ((case-lambda
           ((g$bv$16223$f3xia)
            (begin
              (g$bytevector-fill!$16152$f3xia
                g$bv$16223$f3xia
                g$fill$16222$f3xia)
              g$bv$16223$f3xia)))
         (g$make-bytevector$16149$f3xia g$k$16221$f3xia)))))
   (g$bytevector-length$16150$f3xia
     g$bytevector-length$16469$f3xia
     (case-lambda
       ((g$bv$16224$f3xia)
        (begin
          (if (not (g$bytevector?$15975$f3xia g$bv$16224$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector-length
              '"not a bytevector"
              g$bv$16224$f3xia)
            (void))
          (clr-call-internal
            'System.Array
            'get_Length
            g$bv$16224$f3xia)))))
   (g$bytevector=?$16151$f3xia
     g$bytevector=?$16470$f3xia
     (case-lambda
       ((g$bv1$16225$f3xia g$bv2$16226$f3xia)
        (begin
          (if (not (g$bytevector?$15975$f3xia g$bv1$16225$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector=?
              '"not a bytevector"
              g$bv1$16225$f3xia)
            (void))
          (if (not (g$bytevector?$15975$f3xia g$bv2$16226$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector=?
              '"not a bytevector"
              g$bv2$16226$f3xia)
            (void))
          (if (eq? g$bv1$16225$f3xia g$bv2$16226$f3xia)
            '#t
            ((case-lambda
               ((g$t$16227$f3xia)
                (if g$t$16227$f3xia
                  g$t$16227$f3xia
                  (begin '#f ((case-lambda (() (begin '#f '#f))))))))
             ((case-lambda
                ((g$bl$16228$f3xia)
                 (if (g$=$17038$f3xia
                       g$bl$16228$f3xia
                       (g$bytevector-length$16150$f3xia
                         g$bv2$16226$f3xia))
                   ((letrec ((g$f$16229$f3xia
                               (case-lambda
                                 ((g$i$16230$f3xia)
                                  (if (g$=$17038$f3xia
                                        g$i$16230$f3xia
                                        g$bl$16228$f3xia)
                                    '#t
                                    (if (g$=$17038$f3xia
                                          (g$bytevector-u8-ref$16155$f3xia
                                            g$bv1$16225$f3xia
                                            g$i$16230$f3xia)
                                          (g$bytevector-u8-ref$16155$f3xia
                                            g$bv2$16226$f3xia
                                            g$i$16230$f3xia))
                                      (g$f$16229$f3xia
                                        (+ g$i$16230$f3xia '1))
                                      ((case-lambda
                                         (() (begin '#f '#f))))))))))
                      g$f$16229$f3xia)
                    '0)
                   '#f)))
              (g$bytevector-length$16150$f3xia g$bv1$16225$f3xia))))))))
   (g$bytevector-fill!$16152$f3xia
     g$bytevector-fill!$16471$f3xia
     (case-lambda
       ((g$bv$16231$f3xia g$fill$16232$f3xia)
        (begin
          (if (not (g$bytevector?$15975$f3xia g$bv$16231$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector-fill!
              '"not a bytevector"
              g$bv$16231$f3xia)
            (void))
          ((case-lambda
             ((g$fill$16233$f3xia g$k$16234$f3xia)
              ((letrec ((g$f$16235$f3xia
                          (case-lambda
                            ((g$i$16236$f3xia)
                             (if (not (g$=$17038$f3xia
                                        g$i$16236$f3xia
                                        g$k$16234$f3xia))
                               (begin
                                 (g$bytevector-u8-set!$16156$f3xia
                                   g$bv$16231$f3xia
                                   g$i$16236$f3xia
                                   g$fill$16233$f3xia)
                                 (g$f$16235$f3xia
                                   (+ g$i$16236$f3xia '1)))
                               (void))))))
                 g$f$16235$f3xia)
               '0)))
           (g$->byte$16147$f3xia g$fill$16232$f3xia)
           (g$bytevector-length$16150$f3xia g$bv$16231$f3xia))))))
   (g$bytevector-copy!$16153$f3xia
     g$bytevector-copy!$16472$f3xia
     (case-lambda
       ((g$bv1$16237$f3xia
          g$s1$16238$f3xia
          g$bv2$16239$f3xia
          g$s2$16240$f3xia
          g$len$16241$f3xia)
        (begin
          (if (not (g$bytevector?$15975$f3xia g$bv1$16237$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector-copy!
              '"not a bytevector"
              g$bv1$16237$f3xia)
            (void))
          (if (not (g$bytevector?$15975$f3xia g$bv2$16239$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector-copy!
              '"not a bytevector"
              g$bv2$16239$f3xia)
            (void))
          (clr-call-internal
            'System.Buffer
            'BlockCopy
            '()
            g$bv1$16237$f3xia
            g$s1$16238$f3xia
            g$bv2$16239$f3xia
            g$s2$16240$f3xia
            g$len$16241$f3xia)))))
   (g$bytevector-copy$16154$f3xia
     g$bytevector-copy$16473$f3xia
     (case-lambda
       ((g$bv$16242$f3xia)
        (begin
          (if (not (g$bytevector?$15975$f3xia g$bv$16242$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector-copy
              '"not a bytevector"
              g$bv$16242$f3xia)
            (void))
          (clr-call-internal 'System.Array 'Clone g$bv$16242$f3xia)))))
   (g$bytevector-u8-ref$16155$f3xia
     g$bytevector-u8-ref$16474$f3xia
     (case-lambda
       ((g$bv$16243$f3xia g$k$16244$f3xia)
        (begin
          (if (not (g$bytevector?$15975$f3xia g$bv$16243$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector-u8-ref
              '"not a bytevector"
              g$bv$16243$f3xia)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToInt32(Byte)"
            '()
            ($bytevector-ref g$bv$16243$f3xia g$k$16244$f3xia))))))
   (g$bytevector-u8-set!$16156$f3xia
     g$bytevector-u8-set!$16475$f3xia
     (case-lambda
       ((g$bv$16245$f3xia g$k$16246$f3xia g$value$16247$f3xia)
        (begin
          (if (not (g$bytevector?$15975$f3xia g$bv$16245$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector-u8-set!
              '"not a bytevector"
              g$bv$16245$f3xia)
            (void))
          ($bytevector-set!
            g$bv$16245$f3xia
            g$k$16246$f3xia
            (clr-call-internal
              'System.Convert
              '"ToByte(Object)"
              '()
              g$value$16247$f3xia))))))
   (g$bytevector-s8-ref$16157$f3xia
     g$bytevector-s8-ref$16476$f3xia
     (case-lambda
       ((g$bv$16248$f3xia g$k$16249$f3xia)
        (begin
          (if (not (g$bytevector?$15975$f3xia g$bv$16248$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector-s8-ref
              '"not a bytevector"
              g$bv$16248$f3xia)
            (void))
          (g$byte->sbyte$16146$f3xia
            ($bytevector-ref g$bv$16248$f3xia g$k$16249$f3xia))))))
   (g$bytevector-s8-set!$16158$f3xia
     g$bytevector-s8-set!$16477$f3xia
     (case-lambda
       ((g$bv$16250$f3xia g$k$16251$f3xia g$value$16252$f3xia)
        (begin
          (if (not (g$bytevector?$15975$f3xia g$bv$16250$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector-s8-set!
              '"not a bytevector"
              g$bv$16250$f3xia)
            (void))
          ($bytevector-set!
            g$bv$16250$f3xia
            g$k$16251$f3xia
            (g$->byte$16147$f3xia g$value$16252$f3xia))))))
   (g$bytevector->u8-list$16159$f3xia
     g$bytevector->u8-list$16478$f3xia
     (case-lambda
       ((g$bv$16253$f3xia)
        (begin
          (if (not (g$bytevector?$15975$f3xia g$bv$16253$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector->u8-list
              '"not a bytevector"
              g$bv$16253$f3xia)
            (void))
          ((case-lambda
             ((g$l$16254$f3xia)
              ((letrec ((g$f$16255$f3xia
                          (case-lambda
                            ((g$i$16256$f3xia g$a$16257$f3xia)
                             (if (g$negative?$17031$f3xia
                                   g$i$16256$f3xia)
                               g$a$16257$f3xia
                               (g$f$16255$f3xia
                                 (- g$i$16256$f3xia '1)
                                 (cons
                                   (g$bytevector-u8-ref$16155$f3xia
                                     g$bv$16253$f3xia
                                     g$i$16256$f3xia)
                                   g$a$16257$f3xia)))))))
                 g$f$16255$f3xia)
               (- g$l$16254$f3xia '1)
               '())))
           (g$bytevector-length$16150$f3xia g$bv$16253$f3xia))))))
   (g$u8-list->bytevector$16160$f3xia
     g$u8-list->bytevector$16479$f3xia
     (case-lambda
       ((g$lst$16258$f3xia)
        (begin
          (if (not (g$list?$15545$f3xia g$lst$16258$f3xia))
            (g$assertion-violation$12459$f3xia
              'u8-list->bytevector
              '"not a list"
              g$lst$16258$f3xia)
            (void))
          ((case-lambda
             ((g$l$16259$f3xia)
              ((case-lambda
                 ((g$bv$16260$f3xia)
                  ((letrec ((g$f$16261$f3xia
                              (case-lambda
                                ((g$i$16262$f3xia g$lst$16263$f3xia)
                                 (if (g$=$17038$f3xia
                                       g$i$16262$f3xia
                                       g$l$16259$f3xia)
                                   g$bv$16260$f3xia
                                   (begin
                                     (g$bytevector-u8-set!$16156$f3xia
                                       g$bv$16260$f3xia
                                       g$i$16262$f3xia
                                       (car g$lst$16263$f3xia))
                                     (g$f$16261$f3xia
                                       (+ g$i$16262$f3xia '1)
                                       (cdr g$lst$16263$f3xia))))))))
                     g$f$16261$f3xia)
                   '0
                   g$lst$16258$f3xia)))
               (g$make-bytevector$16149$f3xia g$l$16259$f3xia))))
           (g$length$15547$f3xia g$lst$16258$f3xia))))))
   (g$bytevector-uint-ref$16161$f3xia
     g$bytevector-uint-ref$16480$f3xia
     (case-lambda
       ((g$bv$16264$f3xia
          g$k$16265$f3xia
          g$end$16266$f3xia
          g$size$16267$f3xia)
        (begin
          (if (not (g$bytevector?$15975$f3xia g$bv$16264$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector-uint-ref
              '"not a bytevector"
              g$bv$16264$f3xia)
            (void))
          (if (not (if (g$integer?$17025$f3xia g$k$16265$f3xia)
                     (if (g$exact?$17020$f3xia g$k$16265$f3xia)
                       (begin
                         '#f
                         (not (g$negative?$17031$f3xia
                                g$k$16265$f3xia)))
                       '#f)
                     '#f))
            (g$assertion-violation$12459$f3xia
              'bytevector-uint-ref
              '"not a non-negative exact integer"
              g$k$16265$f3xia)
            (void))
          (if (not (if (g$integer?$17025$f3xia g$size$16267$f3xia)
                     (if (g$exact?$17020$f3xia g$size$16267$f3xia)
                       (begin
                         '#f
                         (not (g$negative?$17031$f3xia
                                g$size$16267$f3xia)))
                       '#f)
                     '#f))
            (g$assertion-violation$12459$f3xia
              'bytevector-uint-ref
              '"not a non-negative exact integer"
              g$size$16267$f3xia)
            (void))
          (if (not (g$symbol?$15976$f3xia g$end$16266$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector-uint-ref
              '"not a symbol"
              g$end$16266$f3xia)
            (void))
          ((case-lambda
             ((g$sb$16268$f3xia)
              (begin
                (g$bytevector-copy!$16153$f3xia
                  g$bv$16264$f3xia
                  g$k$16265$f3xia
                  g$sb$16268$f3xia
                  '0
                  g$size$16267$f3xia)
                (if (eq? g$end$16266$f3xia 'big)
                  (clr-call-internal
                    'System.Array
                    'Reverse
                    '()
                    g$sb$16268$f3xia)
                  (void))
                ((case-lambda
                   ((g$t$16269$f3xia)
                    (if (eqv? g$t$16269$f3xia '1)
                      (g$->fixnum$16148$f3xia
                        ($bytevector-ref
                          g$sb$16268$f3xia
                          g$k$16265$f3xia))
                      (if (eqv? g$t$16269$f3xia '2)
                        (g$->fixnum$16148$f3xia
                          (clr-call-internal
                            'System.BitConverter
                            '"ToUInt16(Byte[],Int32)"
                            '()
                            g$sb$16268$f3xia
                            '0))
                        (if (eqv? g$t$16269$f3xia '4)
                          (g$exact$17033$f3xia
                            (clr-call-internal
                              'Microsoft.Scripting.Math.BigInteger
                              '"op_Implicit(UInt32)"
                              '()
                              (clr-call-internal
                                'System.BitConverter
                                '"ToUInt32(Byte[],Int32)"
                                '()
                                g$sb$16268$f3xia
                                '0)))
                          (if (eqv? g$t$16269$f3xia '8)
                            (clr-call-internal
                              'Microsoft.Scripting.Math.BigInteger
                              '"op_Implicit(UInt64)"
                              '()
                              (clr-call-internal
                                'System.BitConverter
                                '"ToUInt64(Byte[],Int32)"
                                '()
                                g$sb$16268$f3xia
                                '0))
                            ((case-lambda
                               (()
                                (begin
                                  '#f
                                  ((case-lambda
                                     ((g$data$16270$f3xia)
                                      (begin
                                        (g$bytevector-copy!$16153$f3xia
                                          g$sb$16268$f3xia
                                          '0
                                          g$data$16270$f3xia
                                          '0
                                          g$size$16267$f3xia)
                                        (clr-call-internal
                                          'Microsoft.Scripting.Math.BigInteger
                                          '"Create(Byte[])"
                                          '()
                                          g$data$16270$f3xia))))
                                   (g$make-bytevector$16149$f3xia
                                     (+ g$size$16267$f3xia
                                        '1)))))))))))))
                 g$size$16267$f3xia))))
           (g$make-bytevector$16149$f3xia g$size$16267$f3xia))))))
   (g$bytevector-sint-ref$16162$f3xia
     g$bytevector-sint-ref$16481$f3xia
     (case-lambda
       ((g$bv$16271$f3xia
          g$k$16272$f3xia
          g$end$16273$f3xia
          g$size$16274$f3xia)
        (begin
          (if (not (g$bytevector?$15975$f3xia g$bv$16271$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector-sint-ref
              '"not a bytevector"
              g$bv$16271$f3xia)
            (void))
          (if (not (if (g$integer?$17025$f3xia g$k$16272$f3xia)
                     (if (g$exact?$17020$f3xia g$k$16272$f3xia)
                       (begin
                         '#f
                         (not (g$negative?$17031$f3xia
                                g$k$16272$f3xia)))
                       '#f)
                     '#f))
            (g$assertion-violation$12459$f3xia
              'bytevector-sint-ref
              '"not a non-negative exact integer"
              g$k$16272$f3xia)
            (void))
          (if (not (if (g$integer?$17025$f3xia g$size$16274$f3xia)
                     (if (g$exact?$17020$f3xia g$size$16274$f3xia)
                       (begin
                         '#f
                         (not (g$negative?$17031$f3xia
                                g$size$16274$f3xia)))
                       '#f)
                     '#f))
            (g$assertion-violation$12459$f3xia
              'bytevector-sint-ref
              '"not a non-negative exact integer"
              g$size$16274$f3xia)
            (void))
          (if (not (g$symbol?$15976$f3xia g$end$16273$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector-sint-ref
              '"not a symbol"
              g$end$16273$f3xia)
            (void))
          ((case-lambda
             ((g$sb$16275$f3xia)
              (begin
                (g$bytevector-copy!$16153$f3xia
                  g$bv$16271$f3xia
                  g$k$16272$f3xia
                  g$sb$16275$f3xia
                  '0
                  g$size$16274$f3xia)
                (if (eq? g$end$16273$f3xia 'big)
                  (clr-call-internal
                    'System.Array
                    'Reverse
                    '()
                    g$sb$16275$f3xia)
                  (void))
                ((case-lambda
                   ((g$t$16276$f3xia)
                    (if (eqv? g$t$16276$f3xia '1)
                      (g$byte->sbyte$16146$f3xia
                        ($bytevector-ref
                          g$sb$16275$f3xia
                          g$k$16272$f3xia))
                      (if (eqv? g$t$16276$f3xia '2)
                        (g$->fixnum$16148$f3xia
                          (clr-call-internal
                            'System.BitConverter
                            '"ToInt16(Byte[],Int32)"
                            '()
                            g$sb$16275$f3xia
                            '0))
                        (if (eqv? g$t$16276$f3xia '4)
                          (clr-call-internal
                            'System.BitConverter
                            '"ToInt32(Byte[],Int32)"
                            '()
                            g$sb$16275$f3xia
                            '0)
                          (if (eqv? g$t$16276$f3xia '8)
                            (clr-call-internal
                              'Microsoft.Scripting.Math.BigInteger
                              '"op_Implicit(Int64)"
                              '()
                              (clr-call-internal
                                'System.BitConverter
                                '"ToInt64(Byte[],Int32)"
                                '()
                                g$sb$16275$f3xia
                                '0))
                            ((case-lambda
                               (()
                                (begin
                                  '#f
                                  (clr-call-internal
                                    'Microsoft.Scripting.Math.BigInteger
                                    '"Create(Byte[])"
                                    '()
                                    g$sb$16275$f3xia)))))))))))
                 g$size$16274$f3xia))))
           (g$make-bytevector$16149$f3xia g$size$16274$f3xia))))))
   (g$bytevector-uint-set!$16163$f3xia
     g$bytevector-uint-set!$16482$f3xia
     (case-lambda
       ((g$bv$16277$f3xia
          g$k$16278$f3xia
          g$n$16279$f3xia
          g$end$16280$f3xia
          g$size$16281$f3xia)
        (begin
          (if (not (g$bytevector?$15975$f3xia g$bv$16277$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector-uint-set!
              '"not a bytevector"
              g$bv$16277$f3xia)
            (void))
          (if (not (if (g$integer?$17025$f3xia g$k$16278$f3xia)
                     (if (g$exact?$17020$f3xia g$k$16278$f3xia)
                       (begin
                         '#f
                         (not (g$negative?$17031$f3xia
                                g$k$16278$f3xia)))
                       '#f)
                     '#f))
            (g$assertion-violation$12459$f3xia
              'bytevector-uint-set!
              '"not a non-negative exact integer"
              g$k$16278$f3xia)
            (void))
          (if (not (if (g$integer?$17025$f3xia g$size$16281$f3xia)
                     (if (g$exact?$17020$f3xia g$size$16281$f3xia)
                       (begin
                         '#f
                         (not (g$negative?$17031$f3xia
                                g$size$16281$f3xia)))
                       '#f)
                     '#f))
            (g$assertion-violation$12459$f3xia
              'bytevector-uint-set!
              '"not a non-negative exact integer"
              g$size$16281$f3xia)
            (void))
          (if (not (g$symbol?$15976$f3xia g$end$16280$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector-uint-set!
              '"not a symbol"
              g$end$16280$f3xia)
            (void))
          ((case-lambda
             ((g$t$16282$f3xia)
              (if (eqv? g$t$16282$f3xia '1)
                ($bytevector-set!
                  g$bv$16277$f3xia
                  g$k$16278$f3xia
                  (g$->byte$16147$f3xia g$n$16279$f3xia))
                (if (eqv? g$t$16282$f3xia '2)
                  ((case-lambda
                     ((g$data$16283$f3xia)
                      (begin
                        (if (eq? g$end$16280$f3xia 'big)
                          (clr-call-internal
                            'System.Array
                            'Reverse
                            '()
                            g$data$16283$f3xia)
                          (void))
                        (g$bytevector-copy!$16153$f3xia
                          g$data$16283$f3xia
                          '0
                          g$bv$16277$f3xia
                          g$k$16278$f3xia
                          g$size$16281$f3xia))))
                   (clr-call-internal
                     'System.BitConverter
                     '"GetBytes(UInt16)"
                     '()
                     (clr-call-internal
                       'System.Convert
                       '"ToUInt16(Object)"
                       '()
                       g$n$16279$f3xia)))
                  (if (eqv? g$t$16282$f3xia '4)
                    ((case-lambda
                       ((g$data$16284$f3xia)
                        (begin
                          (if (eq? g$end$16280$f3xia 'big)
                            (clr-call-internal
                              'System.Array
                              'Reverse
                              '()
                              g$data$16284$f3xia)
                            (void))
                          (g$bytevector-copy!$16153$f3xia
                            g$data$16284$f3xia
                            '0
                            g$bv$16277$f3xia
                            g$k$16278$f3xia
                            g$size$16281$f3xia))))
                     (clr-call-internal
                       'System.BitConverter
                       '"GetBytes(UInt32)"
                       '()
                       (clr-call-internal
                         'System.Convert
                         '"ToUInt32(Object)"
                         '()
                         g$n$16279$f3xia)))
                    (if (eqv? g$t$16282$f3xia '8)
                      ((case-lambda
                         ((g$data$16285$f3xia)
                          (begin
                            (if (eq? g$end$16280$f3xia 'big)
                              (clr-call-internal
                                'System.Array
                                'Reverse
                                '()
                                g$data$16285$f3xia)
                              (void))
                            (g$bytevector-copy!$16153$f3xia
                              g$data$16285$f3xia
                              '0
                              g$bv$16277$f3xia
                              g$k$16278$f3xia
                              g$size$16281$f3xia))))
                       (clr-call-internal
                         'System.BitConverter
                         '"GetBytes(UInt64)"
                         '()
                         (clr-call-internal
                           'System.Convert
                           '"ToUInt64(Object)"
                           '()
                           g$n$16279$f3xia)))
                      ((case-lambda
                         (()
                          (begin
                            '#f
                            ((case-lambda
                               ((g$data$16286$f3xia)
                                (begin
                                  (if (eq? g$end$16280$f3xia 'big)
                                    (clr-call-internal
                                      'System.Array
                                      'Reverse
                                      '()
                                      g$data$16286$f3xia)
                                    (void))
                                  (g$bytevector-copy!$16153$f3xia
                                    g$data$16286$f3xia
                                    (if (eq? g$end$16280$f3xia 'big)
                                      '1
                                      '0)
                                    g$bv$16277$f3xia
                                    g$k$16278$f3xia
                                    g$size$16281$f3xia))))
                             (clr-call-internal
                               'Microsoft.Scripting.Math.BigInteger
                               'ToByteArray
                               (g$->bignum$16143$f3xia
                                 g$n$16279$f3xia)))))))))))))
           g$size$16281$f3xia)
          (void)))))
   (g$bytevector-sint-set!$16164$f3xia
     g$bytevector-sint-set!$16483$f3xia
     (case-lambda
       ((g$bv$16287$f3xia
          g$k$16288$f3xia
          g$n$16289$f3xia
          g$end$16290$f3xia
          g$size$16291$f3xia)
        (begin
          (if (not (g$bytevector?$15975$f3xia g$bv$16287$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector-sint-set!
              '"not a bytevector"
              g$bv$16287$f3xia)
            (void))
          (if (not (if (g$integer?$17025$f3xia g$k$16288$f3xia)
                     (if (g$exact?$17020$f3xia g$k$16288$f3xia)
                       (begin
                         '#f
                         (not (g$negative?$17031$f3xia
                                g$k$16288$f3xia)))
                       '#f)
                     '#f))
            (g$assertion-violation$12459$f3xia
              'bytevector-sint-set!
              '"not a non-negative exact integer"
              g$k$16288$f3xia)
            (void))
          (if (not (if (g$integer?$17025$f3xia g$size$16291$f3xia)
                     (if (g$exact?$17020$f3xia g$size$16291$f3xia)
                       (begin
                         '#f
                         (not (g$negative?$17031$f3xia
                                g$size$16291$f3xia)))
                       '#f)
                     '#f))
            (g$assertion-violation$12459$f3xia
              'bytevector-sint-set!
              '"not a non-negative exact integer"
              g$size$16291$f3xia)
            (void))
          (if (not (g$symbol?$15976$f3xia g$end$16290$f3xia))
            (g$assertion-violation$12459$f3xia
              'bytevector-sint-set!
              '"not a symbol"
              g$end$16290$f3xia)
            (void))
          ((case-lambda
             ((g$t$16292$f3xia)
              (if (eqv? g$t$16292$f3xia '1)
                ($bytevector-set!
                  g$bv$16287$f3xia
                  g$k$16288$f3xia
                  (g$->byte$16147$f3xia g$n$16289$f3xia))
                (if (eqv? g$t$16292$f3xia '2)
                  ((case-lambda
                     ((g$data$16293$f3xia)
                      (begin
                        (if (eq? g$end$16290$f3xia 'big)
                          (clr-call-internal
                            'System.Array
                            'Reverse
                            '()
                            g$data$16293$f3xia)
                          (void))
                        (g$bytevector-copy!$16153$f3xia
                          g$data$16293$f3xia
                          '0
                          g$bv$16287$f3xia
                          g$k$16288$f3xia
                          g$size$16291$f3xia))))
                   (clr-call-internal
                     'System.BitConverter
                     '"GetBytes(Int16)"
                     '()
                     (clr-call-internal
                       'System.Convert
                       '"ToInt16(Object)"
                       '()
                       g$n$16289$f3xia)))
                  (if (eqv? g$t$16292$f3xia '4)
                    ((case-lambda
                       ((g$data$16294$f3xia)
                        (begin
                          (if (eq? g$end$16290$f3xia 'big)
                            (clr-call-internal
                              'System.Array
                              'Reverse
                              '()
                              g$data$16294$f3xia)
                            (void))
                          (g$bytevector-copy!$16153$f3xia
                            g$data$16294$f3xia
                            '0
                            g$bv$16287$f3xia
                            g$k$16288$f3xia
                            g$size$16291$f3xia))))
                     (clr-call-internal
                       'System.BitConverter
                       '"GetBytes(Int32)"
                       '()
                       (clr-call-internal
                         'System.Convert
                         '"ToInt32(Object)"
                         '()
                         g$n$16289$f3xia)))
                    (if (eqv? g$t$16292$f3xia '8)
                      ((case-lambda
                         ((g$data$16295$f3xia)
                          (begin
                            (if (eq? g$end$16290$f3xia 'big)
                              (clr-call-internal
                                'System.Array
                                'Reverse
                                '()
                                g$data$16295$f3xia)
                              (void))
                            (g$bytevector-copy!$16153$f3xia
                              g$data$16295$f3xia
                              '0
                              g$bv$16287$f3xia
                              g$k$16288$f3xia
                              g$size$16291$f3xia))))
                       (clr-call-internal
                         'System.BitConverter
                         '"GetBytes(Int64)"
                         '()
                         (clr-call-internal
                           'System.Convert
                           '"ToInt64(Object)"
                           '()
                           g$n$16289$f3xia)))
                      ((case-lambda
                         (()
                          (begin
                            '#f
                            ((case-lambda
                               ((g$data$16296$f3xia)
                                (begin
                                  (if (eq? g$end$16290$f3xia 'big)
                                    (clr-call-internal
                                      'System.Array
                                      'Reverse
                                      '()
                                      g$data$16296$f3xia)
                                    (void))
                                  (g$bytevector-copy!$16153$f3xia
                                    g$data$16296$f3xia
                                    '0
                                    g$bv$16287$f3xia
                                    g$k$16288$f3xia
                                    g$size$16291$f3xia))))
                             (clr-call-internal
                               'Microsoft.Scripting.Math.BigInteger
                               'ToByteArray
                               (g$->bignum$16143$f3xia
                                 g$n$16289$f3xia)))))))))))))
           g$size$16291$f3xia)
          (void)))))
   (g$string->utf8$16165$f3xia
     g$string->utf8$16484$f3xia
     (case-lambda
       ((g$s$16297$f3xia)
        (begin
          (if (not (g$string?$15972$f3xia g$s$16297$f3xia))
            (g$assertion-violation$12459$f3xia
              'string->utf8
              '"not a string"
              g$s$16297$f3xia)
            (void))
          (g$get-bytes$16144$f3xia
            g$utf8$16137$f3xia
            g$s$16297$f3xia)))))
   (g$string->utf16$16166$f3xia
     g$string->utf16$16485$f3xia
     (case-lambda
       ((g$s$16298$f3xia)
        (g$string->utf16$16166$f3xia g$s$16298$f3xia 'big))
       ((g$s$16299$f3xia g$end$16300$f3xia)
        (begin
          (if (not (g$string?$15972$f3xia g$s$16299$f3xia))
            (g$assertion-violation$12459$f3xia
              'string->utf16
              '"not a string"
              g$s$16299$f3xia)
            (void))
          ((case-lambda
             ((g$t$16301$f3xia)
              (if (eqv? g$t$16301$f3xia 'big)
                (g$get-bytes$16144$f3xia
                  g$utf16be$16139$f3xia
                  g$s$16299$f3xia)
                (if (eqv? g$t$16301$f3xia 'little)
                  (g$get-bytes$16144$f3xia
                    g$utf16le$16138$f3xia
                    g$s$16299$f3xia)
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        (g$assertion-violation$12459$f3xia
                          'string->utf16
                          '"unknown endianness"
                          g$end$16300$f3xia)))))))))
           g$end$16300$f3xia)))))
   (g$string->utf32$16167$f3xia
     g$string->utf32$16486$f3xia
     (case-lambda
       ((g$s$16302$f3xia)
        (g$string->utf32$16167$f3xia g$s$16302$f3xia 'big))
       ((g$s$16303$f3xia g$end$16304$f3xia)
        (begin
          (if (not (g$string?$15972$f3xia g$s$16303$f3xia))
            (g$assertion-violation$12459$f3xia
              'string->utf32
              '"not a string"
              g$s$16303$f3xia)
            (void))
          ((case-lambda
             ((g$t$16305$f3xia)
              (if (eqv? g$t$16305$f3xia 'big)
                (g$get-bytes$16144$f3xia
                  g$utf32be$16141$f3xia
                  g$s$16303$f3xia)
                (if (eqv? g$t$16305$f3xia 'little)
                  (g$get-bytes$16144$f3xia
                    g$utf32le$16140$f3xia
                    g$s$16303$f3xia)
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        (g$assertion-violation$12459$f3xia
                          'string->utf32
                          '"unknown endianness"
                          g$end$16304$f3xia)))))))))
           g$end$16304$f3xia)))))
   (g$utf8->string$16168$f3xia
     g$utf8->string$16487$f3xia
     (case-lambda
       ((g$bv$16306$f3xia)
        (begin
          (if (not (g$bytevector?$15975$f3xia g$bv$16306$f3xia))
            (g$assertion-violation$12459$f3xia
              'utf8->string
              '"not a bytevector"
              g$bv$16306$f3xia)
            (void))
          (g$get-string$16145$f3xia
            g$utf8$16137$f3xia
            g$bv$16306$f3xia)))))
   (g$trim-front$16169$f3xia
     g$trim-front$16488$f3xia
     (case-lambda
       ((g$bv$16307$f3xia g$k$16308$f3xia)
        ((case-lambda
           ((g$d$16309$f3xia)
            (begin
              (g$bytevector-copy!$16153$f3xia
                g$bv$16307$f3xia
                g$k$16308$f3xia
                g$d$16309$f3xia
                '0
                (g$bytevector-length$16150$f3xia g$d$16309$f3xia))
              g$d$16309$f3xia)))
         (g$make-bytevector$16149$f3xia
           (- (g$bytevector-length$16150$f3xia g$bv$16307$f3xia)
              g$k$16308$f3xia))))))
   (g$utf16->string$16170$f3xia
     g$utf16->string$16489$f3xia
     (case-lambda
       ((g$bv$16310$f3xia g$end$16311$f3xia)
        (g$utf16->string$16170$f3xia
          g$bv$16310$f3xia
          g$end$16311$f3xia
          '#f))
       ((g$bv$16312$f3xia g$end$16313$f3xia g$endman?$16314$f3xia)
        (if g$endman?$16314$f3xia
          (if (eq? g$end$16313$f3xia 'big)
            (g$get-string$16145$f3xia
              g$utf16be$16139$f3xia
              g$bv$16312$f3xia)
            (g$get-string$16145$f3xia
              g$utf16le$16138$f3xia
              g$bv$16312$f3xia))
          ((case-lambda
             ((g$b0$16315$f3xia g$b1$16316$f3xia)
              (if (if (g$=$17038$f3xia '255 g$b0$16315$f3xia)
                    (begin '#f (g$=$17038$f3xia g$b1$16316$f3xia '254))
                    '#f)
                (g$utf16->string$16170$f3xia
                  (g$trim-front$16169$f3xia g$bv$16312$f3xia '2)
                  'little
                  '#t)
                (if (if (g$=$17038$f3xia '254 g$b0$16315$f3xia)
                      (begin
                        '#f
                        (g$=$17038$f3xia g$b1$16316$f3xia '255))
                      '#f)
                  (g$utf16->string$16170$f3xia
                    (g$trim-front$16169$f3xia g$bv$16312$f3xia '2)
                    'big
                    '#t)
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        (g$utf16->string$16170$f3xia
                          g$bv$16312$f3xia
                          g$end$16313$f3xia
                          '#t)))))))))
           (g$bytevector-u8-ref$16155$f3xia g$bv$16312$f3xia '0)
           (g$bytevector-u8-ref$16155$f3xia g$bv$16312$f3xia '1))))))
   (g$utf32->string$16171$f3xia
     g$utf32->string$16490$f3xia
     (case-lambda
       ((g$bv$16317$f3xia g$end$16318$f3xia)
        (g$utf32->string$16171$f3xia
          g$bv$16317$f3xia
          g$end$16318$f3xia
          '#f))
       ((g$bv$16319$f3xia g$end$16320$f3xia g$endman?$16321$f3xia)
        (if g$endman?$16321$f3xia
          (if (eq? g$end$16320$f3xia 'big)
            (g$get-string$16145$f3xia
              g$utf32be$16141$f3xia
              g$bv$16319$f3xia)
            (g$get-string$16145$f3xia
              g$utf32le$16140$f3xia
              g$bv$16319$f3xia))
          ((case-lambda
             ((g$b0$16322$f3xia
                g$b1$16323$f3xia
                g$b2$16324$f3xia
                g$b3$16325$f3xia)
              (if (if (g$=$17038$f3xia '255 g$b0$16322$f3xia)
                    (if (g$=$17038$f3xia g$b1$16323$f3xia '254)
                      (if (g$zero?$17029$f3xia g$b2$16324$f3xia)
                        (begin
                          '#f
                          (g$zero?$17029$f3xia g$b3$16325$f3xia))
                        '#f)
                      '#f)
                    '#f)
                (g$utf32->string$16171$f3xia
                  (g$trim-front$16169$f3xia g$bv$16319$f3xia '4)
                  'little
                  '#t)
                (if (if (g$zero?$17029$f3xia g$b0$16322$f3xia)
                      (if (g$zero?$17029$f3xia g$b1$16323$f3xia)
                        (if (g$=$17038$f3xia '254 g$b2$16324$f3xia)
                          (begin
                            '#f
                            (g$=$17038$f3xia g$b3$16325$f3xia '255))
                          '#f)
                        '#f)
                      '#f)
                  (g$utf32->string$16171$f3xia
                    (g$trim-front$16169$f3xia g$bv$16319$f3xia '4)
                    'big
                    '#t)
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        (g$utf32->string$16171$f3xia
                          g$bv$16319$f3xia
                          g$end$16320$f3xia
                          '#t)))))))))
           (g$bytevector-u8-ref$16155$f3xia g$bv$16319$f3xia '0)
           (g$bytevector-u8-ref$16155$f3xia g$bv$16319$f3xia '1)
           (g$bytevector-u8-ref$16155$f3xia g$bv$16319$f3xia '2)
           (g$bytevector-u8-ref$16155$f3xia g$bv$16319$f3xia '3))))))
   (g$uint-list->bytevector$16172$f3xia
     g$uint-list->bytevector$16491$f3xia
     (case-lambda
       ((g$lst$16326$f3xia g$end$16327$f3xia g$size$16328$f3xia)
        (begin
          (if (g$negative?$17031$f3xia g$size$16328$f3xia)
            (g$assertion-violation$12459$f3xia
              'uint-list->bytevector
              '"invalid size"
              g$size$16328$f3xia)
            (void))
          ((case-lambda
             ((g$bv$16329$f3xia)
              ((letrec ((g$f$16330$f3xia
                          (case-lambda
                            ((g$i$16331$f3xia g$lst$16332$f3xia)
                             (if (null? g$lst$16332$f3xia)
                               g$bv$16329$f3xia
                               (begin
                                 (g$bytevector-uint-set!$16163$f3xia
                                   g$bv$16329$f3xia
                                   g$i$16331$f3xia
                                   (car g$lst$16332$f3xia)
                                   g$end$16327$f3xia
                                   g$size$16328$f3xia)
                                 (g$f$16330$f3xia
                                   (+ g$i$16331$f3xia
                                      g$size$16328$f3xia)
                                   (cdr g$lst$16332$f3xia))))))))
                 g$f$16330$f3xia)
               '0
               g$lst$16326$f3xia)))
           (g$make-bytevector$16149$f3xia
             (* (g$length$15547$f3xia g$lst$16326$f3xia)
                g$size$16328$f3xia)))))))
   (g$sint-list->bytevector$16173$f3xia
     g$sint-list->bytevector$16492$f3xia
     (case-lambda
       ((g$lst$16333$f3xia g$end$16334$f3xia g$size$16335$f3xia)
        (begin
          (if (g$negative?$17031$f3xia g$size$16335$f3xia)
            (g$assertion-violation$12459$f3xia
              'sint-list->bytevector
              '"invalid size"
              g$size$16335$f3xia)
            (void))
          ((case-lambda
             ((g$bv$16336$f3xia)
              ((letrec ((g$f$16337$f3xia
                          (case-lambda
                            ((g$i$16338$f3xia g$lst$16339$f3xia)
                             (if (null? g$lst$16339$f3xia)
                               g$bv$16336$f3xia
                               (begin
                                 (g$bytevector-sint-set!$16164$f3xia
                                   g$bv$16336$f3xia
                                   g$i$16338$f3xia
                                   (car g$lst$16339$f3xia)
                                   g$end$16334$f3xia
                                   g$size$16335$f3xia)
                                 (g$f$16337$f3xia
                                   (+ g$i$16338$f3xia
                                      g$size$16335$f3xia)
                                   (cdr g$lst$16339$f3xia))))))))
                 g$f$16337$f3xia)
               '0
               g$lst$16333$f3xia)))
           (g$make-bytevector$16149$f3xia
             (* (g$length$15547$f3xia g$lst$16333$f3xia)
                g$size$16335$f3xia)))))))
   (g$bytevector->uint-list$16174$f3xia
     g$bytevector->uint-list$16493$f3xia
     (case-lambda
       ((g$bv$16340$f3xia g$end$16341$f3xia g$size$16342$f3xia)
        (begin
          (if (g$negative?$17031$f3xia g$size$16342$f3xia)
            (g$assertion-violation$12459$f3xia
              'bytevector->uint-list
              '"invalid size"
              g$size$16342$f3xia)
            (void))
          ((letrec ((g$f$16343$f3xia
                      (case-lambda
                        ((g$l$16344$f3xia g$a$16345$f3xia)
                         (if (g$zero?$17029$f3xia g$l$16344$f3xia)
                           g$a$16345$f3xia
                           (g$f$16343$f3xia
                             (- g$l$16344$f3xia g$size$16342$f3xia)
                             (cons
                               (g$bytevector-uint-ref$16161$f3xia
                                 g$bv$16340$f3xia
                                 (- g$l$16344$f3xia g$size$16342$f3xia)
                                 g$end$16341$f3xia
                                 g$size$16342$f3xia)
                               g$a$16345$f3xia)))))))
             g$f$16343$f3xia)
           (g$bytevector-length$16150$f3xia g$bv$16340$f3xia)
           '())))))
   (g$bytevector->sint-list$16175$f3xia
     g$bytevector->sint-list$16494$f3xia
     (case-lambda
       ((g$bv$16346$f3xia g$end$16347$f3xia g$size$16348$f3xia)
        (begin
          (if (g$negative?$17031$f3xia g$size$16348$f3xia)
            (g$assertion-violation$12459$f3xia
              'bytevector->sint-list
              '"invalid size"
              g$size$16348$f3xia)
            (void))
          ((letrec ((g$f$16349$f3xia
                      (case-lambda
                        ((g$l$16350$f3xia g$a$16351$f3xia)
                         (if (g$zero?$17029$f3xia g$l$16350$f3xia)
                           g$a$16351$f3xia
                           (g$f$16349$f3xia
                             (- g$l$16350$f3xia g$size$16348$f3xia)
                             (cons
                               (g$bytevector-sint-ref$16162$f3xia
                                 g$bv$16346$f3xia
                                 (- g$l$16350$f3xia g$size$16348$f3xia)
                                 g$end$16347$f3xia
                                 g$size$16348$f3xia)
                               g$a$16351$f3xia)))))))
             g$f$16349$f3xia)
           (g$bytevector-length$16150$f3xia g$bv$16346$f3xia)
           '())))))
   (g$single->double$16176$f3xia
     g$single->double$16495$f3xia
     (case-lambda
       ((g$s$16352$f3xia)
        (clr-call-internal
          'System.Convert
          '"ToDouble(Single)"
          '()
          g$s$16352$f3xia))))
   (g$bytevector-ieee-single-ref$16177$f3xia
     g$bytevector-ieee-single-ref$16496$f3xia
     (case-lambda
       ((g$bv$16353$f3xia g$k$16354$f3xia g$end$16355$f3xia)
        ((case-lambda
           ((g$d$16356$f3xia)
            (begin
              (g$bytevector-copy!$16153$f3xia
                g$bv$16353$f3xia
                g$k$16354$f3xia
                g$d$16356$f3xia
                '0
                '4)
              (if (eq? g$end$16355$f3xia 'big)
                (clr-call-internal
                  'System.Array
                  'Reverse
                  '()
                  g$d$16356$f3xia)
                (void))
              (g$single->double$16176$f3xia
                (clr-call-internal
                  'System.BitConverter
                  'ToSingle
                  '()
                  g$d$16356$f3xia
                  '0)))))
         (g$make-bytevector$16149$f3xia '4)))))
   (g$bytevector-ieee-double-ref$16178$f3xia
     g$bytevector-ieee-double-ref$16497$f3xia
     (case-lambda
       ((g$bv$16357$f3xia g$k$16358$f3xia g$end$16359$f3xia)
        ((case-lambda
           ((g$d$16360$f3xia)
            (begin
              (g$bytevector-copy!$16153$f3xia
                g$bv$16357$f3xia
                g$k$16358$f3xia
                g$d$16360$f3xia
                '0
                '8)
              (if (eq? g$end$16359$f3xia 'big)
                (clr-call-internal
                  'System.Array
                  'Reverse
                  '()
                  g$d$16360$f3xia)
                (void))
              (clr-call-internal
                'System.BitConverter
                'ToDouble
                '()
                g$d$16360$f3xia
                '0))))
         (g$make-bytevector$16149$f3xia '8)))))
   (g$bytevector-ieee-single-set!$16179$f3xia
     g$bytevector-ieee-single-set!$16498$f3xia
     (case-lambda
       ((g$bv$16361$f3xia
          g$k$16362$f3xia
          g$value$16363$f3xia
          g$end$16364$f3xia)
        ((case-lambda
           ((g$value$16365$f3xia)
            ((case-lambda
               ((g$data$16366$f3xia)
                (begin
                  (if (eq? g$end$16364$f3xia 'big)
                    (clr-call-internal
                      'System.Array
                      'Reverse
                      '()
                      g$data$16366$f3xia)
                    (void))
                  (g$bytevector-copy!$16153$f3xia
                    g$data$16366$f3xia
                    '0
                    g$bv$16361$f3xia
                    g$k$16362$f3xia
                    '4))))
             (clr-call-internal
               'System.BitConverter
               '"GetBytes(Single)"
               '()
               g$value$16365$f3xia))))
         (clr-call-internal
           'System.Convert
           '"ToSingle(Object)"
           '()
           g$value$16363$f3xia)))))
   (g$bytevector-ieee-double-set!$16180$f3xia
     g$bytevector-ieee-double-set!$16499$f3xia
     (case-lambda
       ((g$bv$16367$f3xia
          g$k$16368$f3xia
          g$value$16369$f3xia
          g$end$16370$f3xia)
        ((case-lambda
           ((g$value$16371$f3xia)
            ((case-lambda
               ((g$data$16372$f3xia)
                (begin
                  (if (eq? g$end$16370$f3xia 'big)
                    (clr-call-internal
                      'System.Array
                      'Reverse
                      '()
                      g$data$16372$f3xia)
                    (void))
                  (g$bytevector-copy!$16153$f3xia
                    g$data$16372$f3xia
                    '0
                    g$bv$16367$f3xia
                    g$k$16368$f3xia
                    '8))))
             (clr-call-internal
               'System.BitConverter
               '"GetBytes(Double)"
               '()
               g$value$16371$f3xia))))
         (clr-call-internal
           'System.Convert
           '"ToDouble(Object)"
           '()
           g$value$16369$f3xia)))))
   (g$bytevector-u16-ref$16181$f3xia
     g$bytevector-u16-ref$16500$f3xia
     (case-lambda
       ((g$bytevector$16373$f3xia
          g$k$16374$f3xia
          g$endianness$16375$f3xia)
        (g$bytevector-uint-ref$16161$f3xia
          g$bytevector$16373$f3xia
          g$k$16374$f3xia
          g$endianness$16375$f3xia
          '2))))
   (g$bytevector-s16-ref$16182$f3xia
     g$bytevector-s16-ref$16501$f3xia
     (case-lambda
       ((g$bytevector$16376$f3xia
          g$k$16377$f3xia
          g$endianness$16378$f3xia)
        (g$bytevector-sint-ref$16162$f3xia
          g$bytevector$16376$f3xia
          g$k$16377$f3xia
          g$endianness$16378$f3xia
          '2))))
   (g$bytevector-u16-native-ref$16183$f3xia
     g$bytevector-u16-native-ref$16502$f3xia
     (case-lambda
       ((g$bytevector$16379$f3xia g$k$16380$f3xia)
        (g$bytevector-uint-ref$16161$f3xia
          g$bytevector$16379$f3xia
          g$k$16380$f3xia
          (g$native-endianness$16136$f3xia)
          '2))))
   (g$bytevector-s16-native-ref$16184$f3xia
     g$bytevector-s16-native-ref$16503$f3xia
     (case-lambda
       ((g$bytevector$16381$f3xia g$k$16382$f3xia)
        (g$bytevector-sint-ref$16162$f3xia
          g$bytevector$16381$f3xia
          g$k$16382$f3xia
          (g$native-endianness$16136$f3xia)
          '2))))
   (g$bytevector-u16-set!$16185$f3xia
     g$bytevector-u16-set!$16504$f3xia
     (case-lambda
       ((g$bytevector$16383$f3xia
          g$k$16384$f3xia
          g$n$16385$f3xia
          g$endianness$16386$f3xia)
        (g$bytevector-uint-set!$16163$f3xia
          g$bytevector$16383$f3xia
          g$k$16384$f3xia
          g$n$16385$f3xia
          g$endianness$16386$f3xia
          '2))))
   (g$bytevector-s16-set!$16186$f3xia
     g$bytevector-s16-set!$16505$f3xia
     (case-lambda
       ((g$bytevector$16387$f3xia
          g$k$16388$f3xia
          g$n$16389$f3xia
          g$endianness$16390$f3xia)
        (g$bytevector-sint-set!$16164$f3xia
          g$bytevector$16387$f3xia
          g$k$16388$f3xia
          g$n$16389$f3xia
          g$endianness$16390$f3xia
          '2))))
   (g$bytevector-u16-native-set!$16187$f3xia
     g$bytevector-u16-native-set!$16506$f3xia
     (case-lambda
       ((g$bytevector$16391$f3xia g$k$16392$f3xia g$n$16393$f3xia)
        (g$bytevector-uint-set!$16163$f3xia
          g$bytevector$16391$f3xia
          g$k$16392$f3xia
          g$n$16393$f3xia
          (g$native-endianness$16136$f3xia)
          '2))))
   (g$bytevector-s16-native-set!$16188$f3xia
     g$bytevector-s16-native-set!$16507$f3xia
     (case-lambda
       ((g$bytevector$16394$f3xia g$k$16395$f3xia g$n$16396$f3xia)
        (g$bytevector-sint-set!$16164$f3xia
          g$bytevector$16394$f3xia
          g$k$16395$f3xia
          g$n$16396$f3xia
          (g$native-endianness$16136$f3xia)
          '2))))
   (g$bytevector-u32-ref$16189$f3xia
     g$bytevector-u32-ref$16508$f3xia
     (case-lambda
       ((g$bytevector$16397$f3xia
          g$k$16398$f3xia
          g$endianness$16399$f3xia)
        (g$bytevector-uint-ref$16161$f3xia
          g$bytevector$16397$f3xia
          g$k$16398$f3xia
          g$endianness$16399$f3xia
          '4))))
   (g$bytevector-s32-ref$16190$f3xia
     g$bytevector-s32-ref$16509$f3xia
     (case-lambda
       ((g$bytevector$16400$f3xia
          g$k$16401$f3xia
          g$endianness$16402$f3xia)
        (g$bytevector-sint-ref$16162$f3xia
          g$bytevector$16400$f3xia
          g$k$16401$f3xia
          g$endianness$16402$f3xia
          '4))))
   (g$bytevector-u32-native-ref$16191$f3xia
     g$bytevector-u32-native-ref$16510$f3xia
     (case-lambda
       ((g$bytevector$16403$f3xia g$k$16404$f3xia)
        (g$bytevector-uint-ref$16161$f3xia
          g$bytevector$16403$f3xia
          g$k$16404$f3xia
          (g$native-endianness$16136$f3xia)
          '4))))
   (g$bytevector-s32-native-ref$16192$f3xia
     g$bytevector-s32-native-ref$16511$f3xia
     (case-lambda
       ((g$bytevector$16405$f3xia g$k$16406$f3xia)
        (g$bytevector-sint-ref$16162$f3xia
          g$bytevector$16405$f3xia
          g$k$16406$f3xia
          (g$native-endianness$16136$f3xia)
          '4))))
   (g$bytevector-u32-set!$16193$f3xia
     g$bytevector-u32-set!$16512$f3xia
     (case-lambda
       ((g$bytevector$16407$f3xia
          g$k$16408$f3xia
          g$n$16409$f3xia
          g$endianness$16410$f3xia)
        (g$bytevector-uint-set!$16163$f3xia
          g$bytevector$16407$f3xia
          g$k$16408$f3xia
          g$n$16409$f3xia
          g$endianness$16410$f3xia
          '4))))
   (g$bytevector-s32-set!$16194$f3xia
     g$bytevector-s32-set!$16513$f3xia
     (case-lambda
       ((g$bytevector$16411$f3xia
          g$k$16412$f3xia
          g$n$16413$f3xia
          g$endianness$16414$f3xia)
        (g$bytevector-sint-set!$16164$f3xia
          g$bytevector$16411$f3xia
          g$k$16412$f3xia
          g$n$16413$f3xia
          g$endianness$16414$f3xia
          '4))))
   (g$bytevector-u32-native-set!$16195$f3xia
     g$bytevector-u32-native-set!$16514$f3xia
     (case-lambda
       ((g$bytevector$16415$f3xia g$k$16416$f3xia g$n$16417$f3xia)
        (g$bytevector-uint-set!$16163$f3xia
          g$bytevector$16415$f3xia
          g$k$16416$f3xia
          g$n$16417$f3xia
          (g$native-endianness$16136$f3xia)
          '4))))
   (g$bytevector-s32-native-set!$16196$f3xia
     g$bytevector-s32-native-set!$16515$f3xia
     (case-lambda
       ((g$bytevector$16418$f3xia g$k$16419$f3xia g$n$16420$f3xia)
        (g$bytevector-sint-set!$16164$f3xia
          g$bytevector$16418$f3xia
          g$k$16419$f3xia
          g$n$16420$f3xia
          (g$native-endianness$16136$f3xia)
          '4))))
   (g$bytevector-u64-ref$16197$f3xia
     g$bytevector-u64-ref$16516$f3xia
     (case-lambda
       ((g$bytevector$16421$f3xia
          g$k$16422$f3xia
          g$endianness$16423$f3xia)
        (g$bytevector-uint-ref$16161$f3xia
          g$bytevector$16421$f3xia
          g$k$16422$f3xia
          g$endianness$16423$f3xia
          '8))))
   (g$bytevector-s64-ref$16198$f3xia
     g$bytevector-s64-ref$16517$f3xia
     (case-lambda
       ((g$bytevector$16424$f3xia
          g$k$16425$f3xia
          g$endianness$16426$f3xia)
        (g$bytevector-sint-ref$16162$f3xia
          g$bytevector$16424$f3xia
          g$k$16425$f3xia
          g$endianness$16426$f3xia
          '8))))
   (g$bytevector-u64-native-ref$16199$f3xia
     g$bytevector-u64-native-ref$16518$f3xia
     (case-lambda
       ((g$bytevector$16427$f3xia g$k$16428$f3xia)
        (g$bytevector-uint-ref$16161$f3xia
          g$bytevector$16427$f3xia
          g$k$16428$f3xia
          (g$native-endianness$16136$f3xia)
          '8))))
   (g$bytevector-s64-native-ref$16200$f3xia
     g$bytevector-s64-native-ref$16519$f3xia
     (case-lambda
       ((g$bytevector$16429$f3xia g$k$16430$f3xia)
        (g$bytevector-sint-ref$16162$f3xia
          g$bytevector$16429$f3xia
          g$k$16430$f3xia
          (g$native-endianness$16136$f3xia)
          '8))))
   (g$bytevector-u64-set!$16201$f3xia
     g$bytevector-u64-set!$16520$f3xia
     (case-lambda
       ((g$bytevector$16431$f3xia
          g$k$16432$f3xia
          g$n$16433$f3xia
          g$endianness$16434$f3xia)
        (g$bytevector-uint-set!$16163$f3xia
          g$bytevector$16431$f3xia
          g$k$16432$f3xia
          g$n$16433$f3xia
          g$endianness$16434$f3xia
          '8))))
   (g$bytevector-s64-set!$16202$f3xia
     g$bytevector-s64-set!$16521$f3xia
     (case-lambda
       ((g$bytevector$16435$f3xia
          g$k$16436$f3xia
          g$n$16437$f3xia
          g$endianness$16438$f3xia)
        (g$bytevector-sint-set!$16164$f3xia
          g$bytevector$16435$f3xia
          g$k$16436$f3xia
          g$n$16437$f3xia
          g$endianness$16438$f3xia
          '8))))
   (g$bytevector-u64-native-set!$16203$f3xia
     g$bytevector-u64-native-set!$16522$f3xia
     (case-lambda
       ((g$bytevector$16439$f3xia g$k$16440$f3xia g$n$16441$f3xia)
        (g$bytevector-uint-set!$16163$f3xia
          g$bytevector$16439$f3xia
          g$k$16440$f3xia
          g$n$16441$f3xia
          (g$native-endianness$16136$f3xia)
          '8))))
   (g$bytevector-s64-native-set!$16204$f3xia
     g$bytevector-s64-native-set!$16523$f3xia
     (case-lambda
       ((g$bytevector$16442$f3xia g$k$16443$f3xia g$n$16444$f3xia)
        (g$bytevector-sint-set!$16164$f3xia
          g$bytevector$16442$f3xia
          g$k$16443$f3xia
          g$n$16444$f3xia
          (g$native-endianness$16136$f3xia)
          '8))))
   (g$bytevector-ieee-single-native-ref$16205$f3xia
     g$bytevector-ieee-single-native-ref$16524$f3xia
     (case-lambda
       ((g$bytevector$16445$f3xia g$k$16446$f3xia)
        (if (not (g$zero?$17029$f3xia
                   (g$mod$15999$f3xia g$k$16446$f3xia '4)))
          (g$assertion-violation$12459$f3xia
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$16446$f3xia)
          (g$bytevector-ieee-single-ref$16177$f3xia
            g$bytevector$16445$f3xia
            g$k$16446$f3xia
            (g$native-endianness$16136$f3xia))))))
   (g$bytevector-ieee-double-native-ref$16206$f3xia
     g$bytevector-ieee-double-native-ref$16525$f3xia
     (case-lambda
       ((g$bytevector$16447$f3xia g$k$16448$f3xia)
        (if (not (g$zero?$17029$f3xia
                   (g$mod$15999$f3xia g$k$16448$f3xia '8)))
          (g$assertion-violation$12459$f3xia
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$16448$f3xia)
          (g$bytevector-ieee-double-ref$16178$f3xia
            g$bytevector$16447$f3xia
            g$k$16448$f3xia
            (g$native-endianness$16136$f3xia))))))
   (g$bytevector-ieee-single-native-set!$16207$f3xia
     g$bytevector-ieee-single-native-set!$16526$f3xia
     (case-lambda
       ((g$bytevector$16449$f3xia g$k$16450$f3xia g$x$16451$f3xia)
        (if (not (g$zero?$17029$f3xia
                   (g$mod$15999$f3xia g$k$16450$f3xia '4)))
          (g$assertion-violation$12459$f3xia
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$16450$f3xia)
          (g$bytevector-ieee-single-set!$16179$f3xia
            g$bytevector$16449$f3xia
            g$k$16450$f3xia
            g$x$16451$f3xia
            (g$native-endianness$16136$f3xia))))))
   (g$bytevector-ieee-double-native-set!$16208$f3xia
     g$bytevector-ieee-double-native-set!$16527$f3xia
     (case-lambda
       ((g$bytevector$16452$f3xia g$k$16453$f3xia g$x$16454$f3xia)
        (if (not (g$zero?$17029$f3xia
                   (g$mod$15999$f3xia g$k$16453$f3xia '8)))
          (g$assertion-violation$12459$f3xia
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$16453$f3xia)
          (g$bytevector-ieee-double-set!$16180$f3xia
            g$bytevector$16452$f3xia
            g$k$16453$f3xia
            g$x$16454$f3xia
            (g$native-endianness$16136$f3xia)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme numbers)
  ((g$bignum?$16528$f3xia
     g$bignum?$16990$f3xia
     (case-lambda
       ((g$obj$16741$f3xia)
        (clr-is-internal
          'Microsoft.Scripting.Math.BigInteger
          g$obj$16741$f3xia))))
   (g$rectnum?$16529$f3xia
     g$rectnum?$16991$f3xia
     (case-lambda
       ((g$obj$16742$f3xia)
        (clr-is-internal
          'IronScheme.Runtime.ComplexFraction
          g$obj$16742$f3xia))))
   (g$make-rectnum$16530$f3xia
     g$make-rectnum$16992$f3xia
     (case-lambda
       ((g$r1$16743$f3xia g$r2$16744$f3xia)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'Make
          '()
          g$r1$16743$f3xia
          g$r2$16744$f3xia))))
   (g$rectnum-imag-part$16531$f3xia
     g$rectnum-imag-part$16993$f3xia
     (case-lambda
       ((g$c$16745$f3xia)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'get_Imag
          g$c$16745$f3xia))))
   (g$rectnum-real-part$16532$f3xia
     g$rectnum-real-part$16994$f3xia
     (case-lambda
       ((g$c$16746$f3xia)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'get_Real
          g$c$16746$f3xia))))
   (g$ratnum?$16533$f3xia
     g$ratnum?$16995$f3xia
     (case-lambda
       ((g$obj$16747$f3xia)
        (clr-is-internal
          'IronScheme.Runtime.Fraction
          g$obj$16747$f3xia))))
   (g$ratnum-denominator$16534$f3xia
     g$ratnum-denominator$16996$f3xia
     (case-lambda
       ((g$rat$16748$f3xia)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'get_Denominator
          g$rat$16748$f3xia))))
   (g$ratnum-numerator$16535$f3xia
     g$ratnum-numerator$16997$f3xia
     (case-lambda
       ((g$rat$16749$f3xia)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'get_Numerator
          g$rat$16749$f3xia))))
   (g$complexnum?$16536$f3xia
     g$complexnum?$16998$f3xia
     (case-lambda
       ((g$obj$16750$f3xia)
        (clr-is-internal
          'Microsoft.Scripting.Math.Complex64
          g$obj$16750$f3xia))))
   (g$make-complexnum$16537$f3xia
     g$make-complexnum$16999$f3xia
     (case-lambda
       ((g$r1$16751$f3xia g$r2$16752$f3xia)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'Make
          '()
          g$r1$16751$f3xia
          g$r2$16752$f3xia))))
   (g$complexnum-imag-part$16538$f3xia
     g$complexnum-imag-part$17000$f3xia
     (case-lambda
       ((g$c$16753$f3xia)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'get_Imag
          g$c$16753$f3xia))))
   (g$complexnum-real-part$16539$f3xia
     g$complexnum-real-part$17001$f3xia
     (case-lambda
       ((g$c$16754$f3xia)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'get_Real
          g$c$16754$f3xia))))
   (g$bignum/$16540$f3xia
     g$bignum/$17002$f3xia
     (case-lambda
       ((g$a$16755$f3xia g$b$16756$f3xia)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'op_Division
          '()
          g$a$16755$f3xia
          g$b$16756$f3xia))))
   (g$bignum%$16541$f3xia
     g$bignum%$17003$f3xia
     (case-lambda
       ((g$a$16757$f3xia g$b$16758$f3xia)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'op_Modulus
          '()
          g$a$16757$f3xia
          g$b$16758$f3xia))))
   (g$bignum->fixnum$16542$f3xia
     g$bignum->fixnum$17004$f3xia
     (case-lambda
       ((g$b$16759$f3xia)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'ToInt32
          g$b$16759$f3xia))))
   (g$flonum->ratnum$16543$f3xia
     g$flonum->ratnum$17005$f3xia
     (case-lambda
       ((g$f$16760$f3xia)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          '"op_Implicit(System.Double)"
          '()
          g$f$16760$f3xia))))
   (g$ratnum->flonum$16544$f3xia
     g$ratnum->flonum$17006$f3xia
     (case-lambda
       ((g$r$16761$f3xia)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'ToDouble
          g$r$16761$f3xia
          '()))))
   (g$fixnum->bignum$16545$f3xia
     g$fixnum->bignum$17007$f3xia
     (case-lambda
       ((g$f$16762$f3xia)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          '"Create(System.Int32)"
          '()
          g$f$16762$f3xia))))
   (g$real->complexnum$16546$f3xia
     g$real->complexnum$17008$f3xia
     (case-lambda
       ((g$num$16763$f3xia)
        (if (g$complexnum?$16536$f3xia g$num$16763$f3xia)
          g$num$16763$f3xia
          (g$make-complexnum$16537$f3xia
            (g$inexact$16570$f3xia g$num$16763$f3xia)
            '0.0)))))
   (g$complexnum->rectnum$16547$f3xia
     g$complexnum->rectnum$17009$f3xia
     (case-lambda
       ((g$num$16764$f3xia)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          '"op_Implicit(Microsoft.Scripting.Math.Complex64)"
          '()
          g$num$16764$f3xia))))
   (g$rectnum->complexnum$16548$f3xia
     g$rectnum->complexnum$17010$f3xia
     (case-lambda
       ((g$num$16765$f3xia)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'ToComplex64
          g$num$16765$f3xia))))
   (g$->fixnum$16549$f3xia
     g$->fixnum$17011$f3xia
     (case-lambda
       ((g$num$16766$f3xia)
        (if (g$fixnum?$15979$f3xia g$num$16766$f3xia)
          g$num$16766$f3xia
          (clr-call-internal
            'System.Convert
            '"ToInt32(Object)"
            '()
            g$num$16766$f3xia)))))
   (g$->ratnum$16550$f3xia
     g$->ratnum$17012$f3xia
     (case-lambda
       ((g$num$16767$f3xia)
        (if (g$ratnum?$16533$f3xia g$num$16767$f3xia)
          g$num$16767$f3xia
          (if (g$real?$16561$f3xia g$num$16767$f3xia)
            (g$flonum->ratnum$16543$f3xia
              (g$real->flonum$16552$f3xia g$num$16767$f3xia))
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$12459$f3xia
                    '->ratnum
                    '"not a real"
                    g$num$16767$f3xia))))))))))
   (g$->bignum$16551$f3xia
     g$->bignum$17013$f3xia
     (case-lambda
       ((g$num$16768$f3xia)
        (if (g$bignum?$16528$f3xia g$num$16768$f3xia)
          g$num$16768$f3xia
          (if (g$fixnum?$15979$f3xia g$num$16768$f3xia)
            (g$fixnum->bignum$16545$f3xia g$num$16768$f3xia)
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$12459$f3xia
                    '->bignum
                    '"not an integer"
                    g$num$16768$f3xia))))))))))
   (g$real->flonum$16552$f3xia
     g$real->flonum$17014$f3xia
     (case-lambda
       ((g$x$16769$f3xia)
        (begin
          (if (not (g$real?$16561$f3xia g$x$16769$f3xia))
            (g$assertion-violation$12459$f3xia
              'real->flonum
              '"not a real"
              g$x$16769$f3xia)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToDouble(System.Object)"
            '()
            g$x$16769$f3xia)))))
   (g$fixnum->flonum$16553$f3xia
     g$fixnum->flonum$17015$f3xia
     (case-lambda
       ((g$x$16770$f3xia)
        (begin
          (if (not (g$fixnum?$15979$f3xia g$x$16770$f3xia))
            (g$assertion-violation$12459$f3xia
              'fixnum->flonum
              '"not a fixnum"
              g$x$16770$f3xia)
            (void))
          (clr-cast-internal
            'System.Double
            (clr-cast-internal 'System.Int32 g$x$16770$f3xia))))))
   (g$number?$16554$f3xia
     g$number?$17016$f3xia
     (case-lambda
       ((g$obj$16771$f3xia)
        ((case-lambda
           ((g$t$16772$f3xia)
            (if g$t$16772$f3xia
              g$t$16772$f3xia
              ((case-lambda
                 ((g$t$16773$f3xia)
                  (if g$t$16773$f3xia
                    g$t$16773$f3xia
                    ((case-lambda
                       ((g$t$16774$f3xia)
                        (if g$t$16774$f3xia
                          g$t$16774$f3xia
                          ((case-lambda
                             ((g$t$16775$f3xia)
                              (if g$t$16775$f3xia
                                g$t$16775$f3xia
                                ((case-lambda
                                   ((g$t$16776$f3xia)
                                    (if g$t$16776$f3xia
                                      g$t$16776$f3xia
                                      (begin
                                        '#f
                                        (g$rectnum?$16529$f3xia
                                          g$obj$16771$f3xia)))))
                                 (g$complexnum?$16536$f3xia
                                   g$obj$16771$f3xia)))))
                           (g$ratnum?$16533$f3xia g$obj$16771$f3xia)))))
                     (g$bignum?$16528$f3xia g$obj$16771$f3xia)))))
               (g$flonum?$15980$f3xia g$obj$16771$f3xia)))))
         (g$fixnum?$15979$f3xia g$obj$16771$f3xia)))))
   (g$nan?$16555$f3xia
     g$nan?$17017$f3xia
     (case-lambda
       ((g$num$16777$f3xia)
        (if ((case-lambda
               ((g$t$16778$f3xia)
                (if g$t$16778$f3xia
                  g$t$16778$f3xia
                  ((case-lambda
                     ((g$t$16779$f3xia)
                      (if g$t$16779$f3xia
                        g$t$16779$f3xia
                        ((case-lambda
                           ((g$t$16780$f3xia)
                            (if g$t$16780$f3xia
                              g$t$16780$f3xia
                              (begin
                                '#f
                                (g$rectnum?$16529$f3xia
                                  g$num$16777$f3xia)))))
                         (g$ratnum?$16533$f3xia g$num$16777$f3xia)))))
                   (g$bignum?$16528$f3xia g$num$16777$f3xia)))))
             (g$fixnum?$15979$f3xia g$num$16777$f3xia))
          '#f
          (if (g$flonum?$15980$f3xia g$num$16777$f3xia)
            (g$flnan?$19030$f3xia g$num$16777$f3xia)
            (if (g$complexnum?$16536$f3xia g$num$16777$f3xia)
              ((case-lambda
                 ((g$t$16781$f3xia)
                  (if g$t$16781$f3xia
                    g$t$16781$f3xia
                    (begin
                      '#f
                      (g$flnan?$19030$f3xia
                        (g$complexnum-imag-part$16538$f3xia
                          g$num$16777$f3xia))))))
               (g$flnan?$19030$f3xia
                 (g$complexnum-real-part$16539$f3xia
                   g$num$16777$f3xia)))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'nan?
                      '"not a number"
                      g$num$16777$f3xia)))))))))))
   (g$finite?$16556$f3xia
     g$finite?$17018$f3xia
     (case-lambda
       ((g$num$16782$f3xia)
        (if ((case-lambda
               ((g$t$16783$f3xia)
                (if g$t$16783$f3xia
                  g$t$16783$f3xia
                  ((case-lambda
                     ((g$t$16784$f3xia)
                      (if g$t$16784$f3xia
                        g$t$16784$f3xia
                        ((case-lambda
                           ((g$t$16785$f3xia)
                            (if g$t$16785$f3xia
                              g$t$16785$f3xia
                              (begin
                                '#f
                                (g$rectnum?$16529$f3xia
                                  g$num$16782$f3xia)))))
                         (g$ratnum?$16533$f3xia g$num$16782$f3xia)))))
                   (g$bignum?$16528$f3xia g$num$16782$f3xia)))))
             (g$fixnum?$15979$f3xia g$num$16782$f3xia))
          '#t
          (if (g$flonum?$15980$f3xia g$num$16782$f3xia)
            (g$flfinite?$19027$f3xia g$num$16782$f3xia)
            (if (g$complexnum?$16536$f3xia g$num$16782$f3xia)
              (if (g$flfinite?$19027$f3xia
                    (g$complexnum-real-part$16539$f3xia
                      g$num$16782$f3xia))
                (begin
                  '#f
                  (g$flfinite?$19027$f3xia
                    (g$complexnum-imag-part$16538$f3xia
                      g$num$16782$f3xia)))
                '#f)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'finite?
                      '"not a number"
                      g$num$16782$f3xia)))))))))))
   (g$infinite?$16557$f3xia
     g$infinite?$17019$f3xia
     (case-lambda
       ((g$num$16786$f3xia)
        (if ((case-lambda
               ((g$t$16787$f3xia)
                (if g$t$16787$f3xia
                  g$t$16787$f3xia
                  ((case-lambda
                     ((g$t$16788$f3xia)
                      (if g$t$16788$f3xia
                        g$t$16788$f3xia
                        ((case-lambda
                           ((g$t$16789$f3xia)
                            (if g$t$16789$f3xia
                              g$t$16789$f3xia
                              (begin
                                '#f
                                (g$rectnum?$16529$f3xia
                                  g$num$16786$f3xia)))))
                         (g$ratnum?$16533$f3xia g$num$16786$f3xia)))))
                   (g$bignum?$16528$f3xia g$num$16786$f3xia)))))
             (g$fixnum?$15979$f3xia g$num$16786$f3xia))
          '#f
          (if (g$flonum?$15980$f3xia g$num$16786$f3xia)
            (g$flinfinite?$19029$f3xia g$num$16786$f3xia)
            (if (g$complexnum?$16536$f3xia g$num$16786$f3xia)
              ((case-lambda
                 ((g$t$16790$f3xia)
                  (if g$t$16790$f3xia
                    g$t$16790$f3xia
                    (begin
                      '#f
                      (g$flinfinite?$19029$f3xia
                        (g$complexnum-imag-part$16538$f3xia
                          g$num$16786$f3xia))))))
               (g$flinfinite?$19029$f3xia
                 (g$complexnum-real-part$16539$f3xia
                   g$num$16786$f3xia)))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'infinite?
                      '"not a number"
                      g$num$16786$f3xia)))))))))))
   (g$exact?$16558$f3xia
     g$exact?$17020$f3xia
     (case-lambda
       ((g$obj$16791$f3xia)
        (if ((case-lambda
               ((g$t$16792$f3xia)
                (if g$t$16792$f3xia
                  g$t$16792$f3xia
                  ((case-lambda
                     ((g$t$16793$f3xia)
                      (if g$t$16793$f3xia
                        g$t$16793$f3xia
                        ((case-lambda
                           ((g$t$16794$f3xia)
                            (if g$t$16794$f3xia
                              g$t$16794$f3xia
                              (begin
                                '#f
                                (g$rectnum?$16529$f3xia
                                  g$obj$16791$f3xia)))))
                         (g$ratnum?$16533$f3xia g$obj$16791$f3xia)))))
                   (g$bignum?$16528$f3xia g$obj$16791$f3xia)))))
             (g$fixnum?$15979$f3xia g$obj$16791$f3xia))
          '#t
          (if ((case-lambda
                 ((g$t$16795$f3xia)
                  (if g$t$16795$f3xia
                    g$t$16795$f3xia
                    (begin
                      '#f
                      (g$complexnum?$16536$f3xia g$obj$16791$f3xia)))))
               (g$flonum?$15980$f3xia g$obj$16791$f3xia))
            '#f
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$12459$f3xia
                    'exact
                    '"not a number"
                    g$obj$16791$f3xia))))))))))
   (g$inexact?$16559$f3xia
     g$inexact?$17021$f3xia
     (case-lambda
       ((g$obj$16796$f3xia)
        (if ((case-lambda
               ((g$t$16797$f3xia)
                (if g$t$16797$f3xia
                  g$t$16797$f3xia
                  ((case-lambda
                     ((g$t$16798$f3xia)
                      (if g$t$16798$f3xia
                        g$t$16798$f3xia
                        ((case-lambda
                           ((g$t$16799$f3xia)
                            (if g$t$16799$f3xia
                              g$t$16799$f3xia
                              (begin
                                '#f
                                (g$rectnum?$16529$f3xia
                                  g$obj$16796$f3xia)))))
                         (g$ratnum?$16533$f3xia g$obj$16796$f3xia)))))
                   (g$bignum?$16528$f3xia g$obj$16796$f3xia)))))
             (g$fixnum?$15979$f3xia g$obj$16796$f3xia))
          '#f
          (if ((case-lambda
                 ((g$t$16800$f3xia)
                  (if g$t$16800$f3xia
                    g$t$16800$f3xia
                    (begin
                      '#f
                      (g$complexnum?$16536$f3xia g$obj$16796$f3xia)))))
               (g$flonum?$15980$f3xia g$obj$16796$f3xia))
            '#t
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$12459$f3xia
                    'inexact
                    '"not a number"
                    g$obj$16796$f3xia))))))))))
   (g$complex?$16560$f3xia
     g$complex?$17022$f3xia
     (case-lambda
       ((g$obj$16801$f3xia) (g$number?$16554$f3xia g$obj$16801$f3xia))))
   (g$real?$16561$f3xia
     g$real?$17023$f3xia
     (case-lambda
       ((g$obj$16802$f3xia)
        (if ((case-lambda
               ((g$t$16803$f3xia)
                (if g$t$16803$f3xia
                  g$t$16803$f3xia
                  ((case-lambda
                     ((g$t$16804$f3xia)
                      (if g$t$16804$f3xia
                        g$t$16804$f3xia
                        ((case-lambda
                           ((g$t$16805$f3xia)
                            (if g$t$16805$f3xia
                              g$t$16805$f3xia
                              (begin
                                '#f
                                (g$flonum?$15980$f3xia
                                  g$obj$16802$f3xia)))))
                         (g$ratnum?$16533$f3xia g$obj$16802$f3xia)))))
                   (g$bignum?$16528$f3xia g$obj$16802$f3xia)))))
             (g$fixnum?$15979$f3xia g$obj$16802$f3xia))
          '#t
          (if ((case-lambda
                 ((g$t$16806$f3xia)
                  (if g$t$16806$f3xia
                    g$t$16806$f3xia
                    (begin
                      '#f
                      (g$rectnum?$16529$f3xia g$obj$16802$f3xia)))))
               (g$complexnum?$16536$f3xia g$obj$16802$f3xia))
            ((case-lambda
               ((g$i$16807$f3xia)
                (if (g$zero?$16567$f3xia g$i$16807$f3xia)
                  (begin '#f (g$exact?$16558$f3xia g$i$16807$f3xia))
                  '#f)))
             (g$imag-part$16687$f3xia g$obj$16802$f3xia))
            ((case-lambda (() (begin '#f '#f)))))))))
   (g$rational?$16562$f3xia
     g$rational?$17024$f3xia
     (case-lambda
       ((g$obj$16808$f3xia)
        (if ((case-lambda
               ((g$t$16809$f3xia)
                (if g$t$16809$f3xia
                  g$t$16809$f3xia
                  ((case-lambda
                     ((g$t$16810$f3xia)
                      (if g$t$16810$f3xia
                        g$t$16810$f3xia
                        (begin
                          '#f
                          (g$ratnum?$16533$f3xia g$obj$16808$f3xia)))))
                   (g$bignum?$16528$f3xia g$obj$16808$f3xia)))))
             (g$fixnum?$15979$f3xia g$obj$16808$f3xia))
          '#t
          (if (if ((case-lambda
                     ((g$t$16811$f3xia)
                      (if g$t$16811$f3xia
                        g$t$16811$f3xia
                        ((case-lambda
                           ((g$t$16812$f3xia)
                            (if g$t$16812$f3xia
                              g$t$16812$f3xia
                              (begin
                                '#f
                                (g$flonum?$15980$f3xia
                                  g$obj$16808$f3xia)))))
                         (g$rectnum?$16529$f3xia g$obj$16808$f3xia)))))
                   (g$complexnum?$16536$f3xia g$obj$16808$f3xia))
                (if (g$finite?$16556$f3xia g$obj$16808$f3xia)
                  (begin
                    '#f
                    (not (g$nan?$16555$f3xia g$obj$16808$f3xia)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$16813$f3xia)
                (if (g$exact?$16558$f3xia g$i$16813$f3xia)
                  (begin '#f (g$zero?$16567$f3xia g$i$16813$f3xia))
                  '#f)))
             (g$imag-part$16687$f3xia g$obj$16808$f3xia))
            ((case-lambda (() (begin '#f '#f)))))))))
   (g$integer?$16563$f3xia
     g$integer?$17025$f3xia
     (case-lambda
       ((g$obj$16814$f3xia)
        (if ((case-lambda
               ((g$t$16815$f3xia)
                (if g$t$16815$f3xia
                  g$t$16815$f3xia
                  (begin
                    '#f
                    (g$bignum?$16528$f3xia g$obj$16814$f3xia)))))
             (g$fixnum?$15979$f3xia g$obj$16814$f3xia))
          '#t
          (if (if ((case-lambda
                     ((g$t$16816$f3xia)
                      (if g$t$16816$f3xia
                        g$t$16816$f3xia
                        ((case-lambda
                           ((g$t$16817$f3xia)
                            (if g$t$16817$f3xia
                              g$t$16817$f3xia
                              ((case-lambda
                                 ((g$t$16818$f3xia)
                                  (if g$t$16818$f3xia
                                    g$t$16818$f3xia
                                    (begin
                                      '#f
                                      (g$flonum?$15980$f3xia
                                        g$obj$16814$f3xia)))))
                               (g$rectnum?$16529$f3xia
                                 g$obj$16814$f3xia)))))
                         (g$complexnum?$16536$f3xia
                           g$obj$16814$f3xia)))))
                   (g$ratnum?$16533$f3xia g$obj$16814$f3xia))
                (if (g$finite?$16556$f3xia g$obj$16814$f3xia)
                  (begin
                    '#f
                    (not (g$nan?$16555$f3xia g$obj$16814$f3xia)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$16819$f3xia)
                (if (g$exact?$16558$f3xia g$i$16819$f3xia)
                  (if (g$zero?$16567$f3xia g$i$16819$f3xia)
                    (begin
                      '#f
                      (g$=$16674$f3xia
                        (g$denominator$16685$f3xia
                          (g$real-part$16686$f3xia g$obj$16814$f3xia))
                        '1))
                    '#f)
                  '#f)))
             (g$imag-part$16687$f3xia g$obj$16814$f3xia))
            ((case-lambda (() (begin '#f '#f)))))))))
   (g$real-valued?$16564$f3xia
     g$real-valued?$17026$f3xia
     (case-lambda
       ((g$obj$16820$f3xia)
        (if ((case-lambda
               ((g$t$16821$f3xia)
                (if g$t$16821$f3xia
                  g$t$16821$f3xia
                  ((case-lambda
                     ((g$t$16822$f3xia)
                      (if g$t$16822$f3xia
                        g$t$16822$f3xia
                        ((case-lambda
                           ((g$t$16823$f3xia)
                            (if g$t$16823$f3xia
                              g$t$16823$f3xia
                              (begin
                                '#f
                                (g$flonum?$15980$f3xia
                                  g$obj$16820$f3xia)))))
                         (g$ratnum?$16533$f3xia g$obj$16820$f3xia)))))
                   (g$bignum?$16528$f3xia g$obj$16820$f3xia)))))
             (g$fixnum?$15979$f3xia g$obj$16820$f3xia))
          '#t
          (if ((case-lambda
                 ((g$t$16824$f3xia)
                  (if g$t$16824$f3xia
                    g$t$16824$f3xia
                    (begin
                      '#f
                      (g$rectnum?$16529$f3xia g$obj$16820$f3xia)))))
               (g$complexnum?$16536$f3xia g$obj$16820$f3xia))
            ((case-lambda
               ((g$i$16825$f3xia)
                (g$zero?$16567$f3xia g$i$16825$f3xia)))
             (g$imag-part$16687$f3xia g$obj$16820$f3xia))
            ((case-lambda (() (begin '#f '#f)))))))))
   (g$rational-valued?$16565$f3xia
     g$rational-valued?$17027$f3xia
     (case-lambda
       ((g$obj$16826$f3xia)
        (if ((case-lambda
               ((g$t$16827$f3xia)
                (if g$t$16827$f3xia
                  g$t$16827$f3xia
                  ((case-lambda
                     ((g$t$16828$f3xia)
                      (if g$t$16828$f3xia
                        g$t$16828$f3xia
                        (begin
                          '#f
                          (g$ratnum?$16533$f3xia g$obj$16826$f3xia)))))
                   (g$bignum?$16528$f3xia g$obj$16826$f3xia)))))
             (g$fixnum?$15979$f3xia g$obj$16826$f3xia))
          '#t
          (if (if ((case-lambda
                     ((g$t$16829$f3xia)
                      (if g$t$16829$f3xia
                        g$t$16829$f3xia
                        ((case-lambda
                           ((g$t$16830$f3xia)
                            (if g$t$16830$f3xia
                              g$t$16830$f3xia
                              (begin
                                '#f
                                (g$flonum?$15980$f3xia
                                  g$obj$16826$f3xia)))))
                         (g$rectnum?$16529$f3xia g$obj$16826$f3xia)))))
                   (g$complexnum?$16536$f3xia g$obj$16826$f3xia))
                (if (g$finite?$16556$f3xia g$obj$16826$f3xia)
                  (begin
                    '#f
                    (not (g$nan?$16555$f3xia g$obj$16826$f3xia)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$16831$f3xia)
                (g$zero?$16567$f3xia g$i$16831$f3xia)))
             (g$imag-part$16687$f3xia g$obj$16826$f3xia))
            ((case-lambda (() (begin '#f '#f)))))))))
   (g$integer-valued?$16566$f3xia
     g$integer-valued?$17028$f3xia
     (case-lambda
       ((g$obj$16832$f3xia)
        (if ((case-lambda
               ((g$t$16833$f3xia)
                (if g$t$16833$f3xia
                  g$t$16833$f3xia
                  (begin
                    '#f
                    (g$bignum?$16528$f3xia g$obj$16832$f3xia)))))
             (g$fixnum?$15979$f3xia g$obj$16832$f3xia))
          '#t
          (if (if ((case-lambda
                     ((g$t$16834$f3xia)
                      (if g$t$16834$f3xia
                        g$t$16834$f3xia
                        ((case-lambda
                           ((g$t$16835$f3xia)
                            (if g$t$16835$f3xia
                              g$t$16835$f3xia
                              ((case-lambda
                                 ((g$t$16836$f3xia)
                                  (if g$t$16836$f3xia
                                    g$t$16836$f3xia
                                    (begin
                                      '#f
                                      (g$flonum?$15980$f3xia
                                        g$obj$16832$f3xia)))))
                               (g$rectnum?$16529$f3xia
                                 g$obj$16832$f3xia)))))
                         (g$complexnum?$16536$f3xia
                           g$obj$16832$f3xia)))))
                   (g$ratnum?$16533$f3xia g$obj$16832$f3xia))
                (if (g$finite?$16556$f3xia g$obj$16832$f3xia)
                  (begin
                    '#f
                    (not (g$nan?$16555$f3xia g$obj$16832$f3xia)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$16837$f3xia)
                (if (g$zero?$16567$f3xia g$i$16837$f3xia)
                  (begin
                    '#f
                    (g$=$16674$f3xia
                      (g$denominator$16685$f3xia
                        (g$real-part$16686$f3xia g$obj$16832$f3xia))
                      '1))
                  '#f)))
             (g$imag-part$16687$f3xia g$obj$16832$f3xia))
            ((case-lambda (() (begin '#f '#f)))))))))
   (g$zero?$16567$f3xia
     g$zero?$17029$f3xia
     (case-lambda
       ((g$num$16838$f3xia)
        (begin
          (if (not (g$number?$16554$f3xia g$num$16838$f3xia))
            (g$assertion-violation$12459$f3xia
              'zero?
              '"not a number"
              g$num$16838$f3xia)
            (void))
          (g$=$16674$f3xia g$num$16838$f3xia '0)))))
   (g$positive?$16568$f3xia
     g$positive?$17030$f3xia
     (case-lambda
       ((g$num$16839$f3xia)
        (begin
          (if (not (g$number?$16554$f3xia g$num$16839$f3xia))
            (g$assertion-violation$12459$f3xia
              'positive?
              '"not a number"
              g$num$16839$f3xia)
            (void))
          (g$>$16677$f3xia g$num$16839$f3xia '0)))))
   (g$negative?$16569$f3xia
     g$negative?$17031$f3xia
     (case-lambda
       ((g$num$16840$f3xia)
        (begin
          (if (not (g$number?$16554$f3xia g$num$16840$f3xia))
            (g$assertion-violation$12459$f3xia
              'negative?
              '"not a number"
              g$num$16840$f3xia)
            (void))
          (g$<$16675$f3xia g$num$16840$f3xia '0)))))
   (g$inexact$16570$f3xia
     g$inexact$17032$f3xia
     (case-lambda
       ((g$num$16841$f3xia)
        (if ((case-lambda
               ((g$t$16842$f3xia)
                (if g$t$16842$f3xia
                  g$t$16842$f3xia
                  (begin
                    '#f
                    (g$flonum?$15980$f3xia g$num$16841$f3xia)))))
             (g$complexnum?$16536$f3xia g$num$16841$f3xia))
          g$num$16841$f3xia
          (if ((case-lambda
                 ((g$t$16843$f3xia)
                  (if g$t$16843$f3xia
                    g$t$16843$f3xia
                    (begin
                      '#f
                      (g$ratnum?$16533$f3xia g$num$16841$f3xia)))))
               (g$exact-integer?$16683$f3xia g$num$16841$f3xia))
            (g$real->flonum$16552$f3xia g$num$16841$f3xia)
            (if (g$rectnum?$16529$f3xia g$num$16841$f3xia)
              (g$rectnum->complexnum$16548$f3xia g$num$16841$f3xia)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'inexact
                      '"not a number"
                      g$num$16841$f3xia)))))))))))
   (g$exact$16571$f3xia
     g$exact$17033$f3xia
     (case-lambda
       ((g$num$16844$f3xia)
        (if (g$complexnum?$16536$f3xia g$num$16844$f3xia)
          (if (g$zero?$16567$f3xia
                (g$complexnum-imag-part$16538$f3xia g$num$16844$f3xia))
            (g$exact$16571$f3xia
              (g$complexnum-real-part$16539$f3xia g$num$16844$f3xia))
            ((case-lambda
               ((g$t$16845$f3xia)
                (if g$t$16845$f3xia
                  g$t$16845$f3xia
                  (begin
                    '#f
                    ((case-lambda
                       (()
                        (begin
                          '#f
                          (g$assertion-violation$12459$f3xia
                            'exact
                            '"no exact equivalent"
                            g$num$16844$f3xia)))))))))
             ((case-lambda
                ((g$i$16846$f3xia g$r$16847$f3xia)
                 (if (g$rational?$16562$f3xia g$r$16847$f3xia)
                   (if (g$rational?$16562$f3xia g$i$16846$f3xia)
                     (begin
                       '#f
                       (g$make-rectnum$16530$f3xia
                         (g$flonum->ratnum$16543$f3xia g$r$16847$f3xia)
                         (g$flonum->ratnum$16543$f3xia
                           g$i$16846$f3xia)))
                     '#f)
                   '#f)))
              (g$complexnum-imag-part$16538$f3xia g$num$16844$f3xia)
              (g$complexnum-real-part$16539$f3xia g$num$16844$f3xia))))
          (if (g$flonum?$15980$f3xia g$num$16844$f3xia)
            (if ((case-lambda
                   ((g$t$16848$f3xia)
                    (if g$t$16848$f3xia
                      g$t$16848$f3xia
                      (begin
                        '#f
                        (g$flinfinite?$19029$f3xia
                          g$num$16844$f3xia)))))
                 (g$flnan?$19030$f3xia g$num$16844$f3xia))
              (g$assertion-violation$12459$f3xia
                'exact
                '"no exact equivalent"
                g$num$16844$f3xia)
              (g$flonum->ratnum$16543$f3xia g$num$16844$f3xia))
            (if (g$bignum?$16528$f3xia g$num$16844$f3xia)
              (if (g$fx<=?$15278$f3xia
                    (g$fixnum-width$15981$f3xia)
                    (g$bitwise-length$17501$f3xia g$num$16844$f3xia))
                g$num$16844$f3xia
                (g$bignum->fixnum$16542$f3xia g$num$16844$f3xia))
              (if (g$ratnum?$16533$f3xia g$num$16844$f3xia)
                (if (g$=$16674$f3xia
                      (g$ratnum-denominator$16534$f3xia
                        g$num$16844$f3xia)
                      '1)
                  (g$exact$16571$f3xia
                    (g$ratnum-numerator$16535$f3xia g$num$16844$f3xia))
                  g$num$16844$f3xia)
                (if (g$rectnum?$16529$f3xia g$num$16844$f3xia)
                  (if (g$zero?$16567$f3xia
                        (g$rectnum-imag-part$16531$f3xia
                          g$num$16844$f3xia))
                    (g$exact$16571$f3xia
                      (g$rectnum-real-part$16532$f3xia
                        g$num$16844$f3xia))
                    g$num$16844$f3xia)
                  (if (g$fixnum?$15979$f3xia g$num$16844$f3xia)
                    g$num$16844$f3xia
                    ((case-lambda
                       (()
                        (begin
                          '#f
                          (g$assertion-violation$12459$f3xia
                            'exact
                            '"not a number"
                            g$num$16844$f3xia))))))))))))))
   (g$hex-char$16572$f3xia
     g$hex-char$17034$f3xia
     (case-lambda
       ((g$num$16849$f3xia)
        (g$integer->char$15983$f3xia
          (+ g$num$16849$f3xia
             (g$char->integer$15982$f3xia
               (if (g$fx<?$15277$f3xia g$num$16849$f3xia '10)
                 '#\0
                 '#\W)))))))
   (g$fixnum->string$16573$f3xia
     g$fixnum->string$17035$f3xia
     (case-lambda
       ((g$num$16850$f3xia g$radix$16851$f3xia)
        (if (g$fxnegative?$15297$f3xia g$num$16850$f3xia)
          (g$string-append$15994$f3xia
            '"-"
            (g$number->string$16575$f3xia
              (g$abs$16733$f3xia g$num$16850$f3xia)
              g$radix$16851$f3xia))
          (clr-call-internal
            'System.Convert
            '"ToString(Int32,Int32)"
            '()
            g$num$16850$f3xia
            g$radix$16851$f3xia)))))
   (g$bignum->string$16574$f3xia
     g$bignum->string$17036$f3xia
     (case-lambda
       ((g$num$16852$f3xia g$radix$16853$f3xia)
        ((case-lambda
           ((g$neg?$16854$f3xia)
            ((case-lambda
               ((g$num$16855$f3xia)
                ((case-lambda
                   ((g$out$16856$f3xia)
                    (if g$neg?$16854$f3xia
                      (g$string-append$15994$f3xia
                        '"-"
                        g$out$16856$f3xia)
                      g$out$16856$f3xia)))
                 ((letrec ((g$f$16857$f3xia
                             (case-lambda
                               ((g$num$16858$f3xia g$a$16859$f3xia)
                                (if (g$zero?$16567$f3xia
                                      g$num$16858$f3xia)
                                  (apply
                                    g$string$15990$f3xia
                                    g$a$16859$f3xia)
                                  (g$f$16857$f3xia
                                    (g$div$16732$f3xia
                                      g$num$16858$f3xia
                                      g$radix$16853$f3xia)
                                    (cons
                                      (g$hex-char$16572$f3xia
                                        (g$mod$15999$f3xia
                                          g$num$16858$f3xia
                                          g$radix$16853$f3xia))
                                      g$a$16859$f3xia)))))))
                    g$f$16857$f3xia)
                  g$num$16855$f3xia
                  '()))))
             (g$abs$16733$f3xia g$num$16852$f3xia))))
         (g$negative?$16569$f3xia g$num$16852$f3xia)))))
   (g$number->string$16575$f3xia
     g$number->string$17037$f3xia
     (case-lambda
       ((g$num$16860$f3xia)
        (g$number->string$16575$f3xia g$num$16860$f3xia '10))
       ((g$num$16861$f3xia g$radix$16862$f3xia g$prec$16863$f3xia)
        (g$number->string$16575$f3xia
          g$num$16861$f3xia
          g$radix$16862$f3xia))
       ((g$num$16864$f3xia g$radix$16865$f3xia)
        (if (g$fixnum?$15979$f3xia g$num$16864$f3xia)
          (g$fixnum->string$16573$f3xia
            g$num$16864$f3xia
            g$radix$16865$f3xia)
          (if (g$flonum?$15980$f3xia g$num$16864$f3xia)
            (begin
              (if (not (g$=$16674$f3xia g$radix$16865$f3xia '10))
                (g$assertion-violation$12459$f3xia
                  'number->string
                  '"invalid radix"
                  g$radix$16865$f3xia)
                (void))
              (flonum->string g$num$16864$f3xia))
            (if (g$ratnum?$16533$f3xia g$num$16864$f3xia)
              (g$string-append$15994$f3xia
                (if (g$negative?$16569$f3xia g$num$16864$f3xia)
                  '"-"
                  '"")
                (g$number->string$16575$f3xia
                  (g$abs$16733$f3xia
                    (g$ratnum-numerator$16535$f3xia g$num$16864$f3xia))
                  g$radix$16865$f3xia)
                '"/"
                (g$number->string$16575$f3xia
                  (g$abs$16733$f3xia
                    (g$ratnum-denominator$16534$f3xia
                      g$num$16864$f3xia))
                  g$radix$16865$f3xia))
              (if (g$bignum?$16528$f3xia g$num$16864$f3xia)
                (g$bignum->string$16574$f3xia
                  g$num$16864$f3xia
                  g$radix$16865$f3xia)
                (if (g$complexnum?$16536$f3xia g$num$16864$f3xia)
                  (begin
                    (if (not (g$=$16674$f3xia g$radix$16865$f3xia '10))
                      (g$assertion-violation$12459$f3xia
                        'number->string
                        '"invalid radix"
                        g$radix$16865$f3xia)
                      (void))
                    (g$string-append$15994$f3xia
                      (if (g$zero?$16567$f3xia
                            (g$real-part$16686$f3xia g$num$16864$f3xia))
                        '""
                        (g$number->string$16575$f3xia
                          (g$real-part$16686$f3xia g$num$16864$f3xia)
                          g$radix$16865$f3xia))
                      (if ((case-lambda
                             ((g$i$16866$f3xia)
                              ((case-lambda
                                 ((g$t$16867$f3xia)
                                  (if g$t$16867$f3xia
                                    g$t$16867$f3xia
                                    ((case-lambda
                                       ((g$t$16868$f3xia)
                                        (if g$t$16868$f3xia
                                          g$t$16868$f3xia
                                          (begin
                                            '#f
                                            (g$infinite?$16557$f3xia
                                              g$i$16866$f3xia)))))
                                     (g$nan?$16555$f3xia
                                       g$i$16866$f3xia)))))
                               (g$negative?$16569$f3xia
                                 g$i$16866$f3xia))))
                           (g$imag-part$16687$f3xia g$num$16864$f3xia))
                        '""
                        '"+")
                      (if (g$=$16674$f3xia
                            '1.0
                            (g$imag-part$16687$f3xia g$num$16864$f3xia))
                        '""
                        (g$number->string$16575$f3xia
                          (g$imag-part$16687$f3xia g$num$16864$f3xia)
                          g$radix$16865$f3xia))
                      '"i"))
                  (if (g$rectnum?$16529$f3xia g$num$16864$f3xia)
                    (g$string-append$15994$f3xia
                      (if (g$zero?$16567$f3xia
                            (g$real-part$16686$f3xia g$num$16864$f3xia))
                        '""
                        (g$number->string$16575$f3xia
                          (g$real-part$16686$f3xia g$num$16864$f3xia)
                          g$radix$16865$f3xia))
                      (if (g$negative?$16569$f3xia
                            (g$imag-part$16687$f3xia g$num$16864$f3xia))
                        '""
                        '"+")
                      (if (g$=$16674$f3xia
                            '1
                            (g$imag-part$16687$f3xia g$num$16864$f3xia))
                        '""
                        (g$number->string$16575$f3xia
                          (g$imag-part$16687$f3xia g$num$16864$f3xia)
                          g$radix$16865$f3xia))
                      '"i")
                    ((case-lambda
                       (()
                        (begin
                          '#f
                          (g$assertion-violation$12459$f3xia
                            'number->string
                            '"not a number"
                            g$num$16864$f3xia))))))))))))))
   (g$=$16674$f3xia
     g$=$17038$f3xia
     (case-lambda
       ((g$a$16869$f3xia g$b$16870$f3xia)
        (if (if (g$real?$16561$f3xia g$a$16869$f3xia)
              (if (g$real?$16561$f3xia g$b$16870$f3xia)
                (if (g$finite?$16556$f3xia g$a$16869$f3xia)
                  (if (g$finite?$16556$f3xia g$b$16870$f3xia)
                    (if (not (g$nan?$16555$f3xia g$a$16869$f3xia))
                      (begin
                        '#f
                        (not (g$nan?$16555$f3xia g$b$16870$f3xia)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx=?
            (exact-compare
              (g$exact$16571$f3xia g$a$16869$f3xia)
              (g$exact$16571$f3xia g$b$16870$f3xia))
            '0)
          (if ((case-lambda
                 ((g$t$16871$f3xia)
                  (if g$t$16871$f3xia
                    g$t$16871$f3xia
                    (begin
                      '#f
                      (if (g$real?$16561$f3xia g$b$16870$f3xia)
                        (begin '#f (g$nan?$16555$f3xia g$b$16870$f3xia))
                        '#f)))))
               (if (g$real?$16561$f3xia g$a$16869$f3xia)
                 (begin '#f (g$nan?$16555$f3xia g$a$16869$f3xia))
                 '#f))
            '#f
            (if (if (g$number?$16554$f3xia g$a$16869$f3xia)
                  (begin '#f (g$number?$16554$f3xia g$b$16870$f3xia))
                  '#f)
              (inexact=?
                (g$inexact$16570$f3xia g$a$16869$f3xia)
                (g$inexact$16570$f3xia g$b$16870$f3xia))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      '=
                      '"not number arguments"
                      g$a$16869$f3xia
                      g$b$16870$f3xia)))))))))
       ((g$x1$16872$f3xia g$x2$16873$f3xia . g$rest$16874$f3xia)
        ((letrec ((g$f$16875$f3xia
                    (case-lambda
                      ((g$a$16876$f3xia g$b$16877$f3xia)
                       (if (null? g$b$16877$f3xia)
                         '#t
                         (if (g$=$16674$f3xia
                               g$a$16876$f3xia
                               ($car g$b$16877$f3xia))
                           (g$f$16875$f3xia
                             ($car g$b$16877$f3xia)
                             ($cdr g$b$16877$f3xia))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$16875$f3xia)
         g$x1$16872$f3xia
         (cons g$x2$16873$f3xia g$rest$16874$f3xia)))))
   (g$<$16675$f3xia
     g$<$17039$f3xia
     (case-lambda
       ((g$a$16878$f3xia g$b$16879$f3xia)
        (if (if (g$real?$16561$f3xia g$a$16878$f3xia)
              (if (g$real?$16561$f3xia g$b$16879$f3xia)
                (if (g$finite?$16556$f3xia g$a$16878$f3xia)
                  (if (g$finite?$16556$f3xia g$b$16879$f3xia)
                    (if (not (g$nan?$16555$f3xia g$a$16878$f3xia))
                      (begin
                        '#f
                        (not (g$nan?$16555$f3xia g$b$16879$f3xia)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx<?
            (exact-compare
              (g$exact$16571$f3xia g$a$16878$f3xia)
              (g$exact$16571$f3xia g$b$16879$f3xia))
            '0)
          (if ((case-lambda
                 ((g$t$16880$f3xia)
                  (if g$t$16880$f3xia
                    g$t$16880$f3xia
                    (begin
                      '#f
                      (if (g$real?$16561$f3xia g$b$16879$f3xia)
                        (begin '#f (g$nan?$16555$f3xia g$b$16879$f3xia))
                        '#f)))))
               (if (g$real?$16561$f3xia g$a$16878$f3xia)
                 (begin '#f (g$nan?$16555$f3xia g$a$16878$f3xia))
                 '#f))
            '#f
            (if (if (g$real?$16561$f3xia g$a$16878$f3xia)
                  (begin '#f (g$real?$16561$f3xia g$b$16879$f3xia))
                  '#f)
              ($fx<?
                (inexact-compare
                  (g$inexact$16570$f3xia g$a$16878$f3xia)
                  (g$inexact$16570$f3xia g$b$16879$f3xia))
                '0)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      '<
                      '"not real arguments"
                      g$a$16878$f3xia
                      g$b$16879$f3xia)))))))))
       ((g$x1$16881$f3xia g$x2$16882$f3xia . g$rest$16883$f3xia)
        ((letrec ((g$f$16884$f3xia
                    (case-lambda
                      ((g$a$16885$f3xia g$b$16886$f3xia)
                       (if (null? g$b$16886$f3xia)
                         '#t
                         (if (g$<$16675$f3xia
                               g$a$16885$f3xia
                               ($car g$b$16886$f3xia))
                           (g$f$16884$f3xia
                             ($car g$b$16886$f3xia)
                             ($cdr g$b$16886$f3xia))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$16884$f3xia)
         g$x1$16881$f3xia
         (cons g$x2$16882$f3xia g$rest$16883$f3xia)))))
   (g$<=$16676$f3xia
     g$<=$17040$f3xia
     (case-lambda
       ((g$a$16887$f3xia g$b$16888$f3xia)
        (if (if (g$real?$16561$f3xia g$a$16887$f3xia)
              (if (g$real?$16561$f3xia g$b$16888$f3xia)
                (if (g$finite?$16556$f3xia g$a$16887$f3xia)
                  (if (g$finite?$16556$f3xia g$b$16888$f3xia)
                    (if (not (g$nan?$16555$f3xia g$a$16887$f3xia))
                      (begin
                        '#f
                        (not (g$nan?$16555$f3xia g$b$16888$f3xia)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx<=?
            (exact-compare
              (g$exact$16571$f3xia g$a$16887$f3xia)
              (g$exact$16571$f3xia g$b$16888$f3xia))
            '0)
          (if ((case-lambda
                 ((g$t$16889$f3xia)
                  (if g$t$16889$f3xia
                    g$t$16889$f3xia
                    (begin
                      '#f
                      (if (g$real?$16561$f3xia g$b$16888$f3xia)
                        (begin '#f (g$nan?$16555$f3xia g$b$16888$f3xia))
                        '#f)))))
               (if (g$real?$16561$f3xia g$a$16887$f3xia)
                 (begin '#f (g$nan?$16555$f3xia g$a$16887$f3xia))
                 '#f))
            '#f
            (if (if (g$real?$16561$f3xia g$a$16887$f3xia)
                  (begin '#f (g$real?$16561$f3xia g$b$16888$f3xia))
                  '#f)
              ($fx<=?
                (inexact-compare
                  (g$inexact$16570$f3xia g$a$16887$f3xia)
                  (g$inexact$16570$f3xia g$b$16888$f3xia))
                '0)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      '<=
                      '"not real arguments"
                      g$a$16887$f3xia
                      g$b$16888$f3xia)))))))))
       ((g$x1$16890$f3xia g$x2$16891$f3xia . g$rest$16892$f3xia)
        ((letrec ((g$f$16893$f3xia
                    (case-lambda
                      ((g$a$16894$f3xia g$b$16895$f3xia)
                       (if (null? g$b$16895$f3xia)
                         '#t
                         (if (g$<=$16676$f3xia
                               g$a$16894$f3xia
                               ($car g$b$16895$f3xia))
                           (g$f$16893$f3xia
                             ($car g$b$16895$f3xia)
                             ($cdr g$b$16895$f3xia))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$16893$f3xia)
         g$x1$16890$f3xia
         (cons g$x2$16891$f3xia g$rest$16892$f3xia)))))
   (g$>$16677$f3xia
     g$>$17041$f3xia
     (case-lambda
       ((g$a$16896$f3xia g$b$16897$f3xia)
        (if (if (g$real?$16561$f3xia g$a$16896$f3xia)
              (if (g$real?$16561$f3xia g$b$16897$f3xia)
                (if (g$finite?$16556$f3xia g$a$16896$f3xia)
                  (if (g$finite?$16556$f3xia g$b$16897$f3xia)
                    (if (not (g$nan?$16555$f3xia g$a$16896$f3xia))
                      (begin
                        '#f
                        (not (g$nan?$16555$f3xia g$b$16897$f3xia)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx>?
            (exact-compare
              (g$exact$16571$f3xia g$a$16896$f3xia)
              (g$exact$16571$f3xia g$b$16897$f3xia))
            '0)
          (if ((case-lambda
                 ((g$t$16898$f3xia)
                  (if g$t$16898$f3xia
                    g$t$16898$f3xia
                    (begin
                      '#f
                      (if (g$real?$16561$f3xia g$b$16897$f3xia)
                        (begin '#f (g$nan?$16555$f3xia g$b$16897$f3xia))
                        '#f)))))
               (if (g$real?$16561$f3xia g$a$16896$f3xia)
                 (begin '#f (g$nan?$16555$f3xia g$a$16896$f3xia))
                 '#f))
            '#f
            (if (if (g$real?$16561$f3xia g$a$16896$f3xia)
                  (begin '#f (g$real?$16561$f3xia g$b$16897$f3xia))
                  '#f)
              ($fx>?
                (inexact-compare
                  (g$inexact$16570$f3xia g$a$16896$f3xia)
                  (g$inexact$16570$f3xia g$b$16897$f3xia))
                '0)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      '>
                      '"not real arguments"
                      g$a$16896$f3xia
                      g$b$16897$f3xia)))))))))
       ((g$x1$16899$f3xia g$x2$16900$f3xia . g$rest$16901$f3xia)
        ((letrec ((g$f$16902$f3xia
                    (case-lambda
                      ((g$a$16903$f3xia g$b$16904$f3xia)
                       (if (null? g$b$16904$f3xia)
                         '#t
                         (if (g$>$16677$f3xia
                               g$a$16903$f3xia
                               ($car g$b$16904$f3xia))
                           (g$f$16902$f3xia
                             ($car g$b$16904$f3xia)
                             ($cdr g$b$16904$f3xia))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$16902$f3xia)
         g$x1$16899$f3xia
         (cons g$x2$16900$f3xia g$rest$16901$f3xia)))))
   (g$>=$16678$f3xia
     g$>=$17042$f3xia
     (case-lambda
       ((g$a$16905$f3xia g$b$16906$f3xia)
        (if (if (g$real?$16561$f3xia g$a$16905$f3xia)
              (if (g$real?$16561$f3xia g$b$16906$f3xia)
                (if (g$finite?$16556$f3xia g$a$16905$f3xia)
                  (if (g$finite?$16556$f3xia g$b$16906$f3xia)
                    (if (not (g$nan?$16555$f3xia g$a$16905$f3xia))
                      (begin
                        '#f
                        (not (g$nan?$16555$f3xia g$b$16906$f3xia)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx>=?
            (exact-compare
              (g$exact$16571$f3xia g$a$16905$f3xia)
              (g$exact$16571$f3xia g$b$16906$f3xia))
            '0)
          (if ((case-lambda
                 ((g$t$16907$f3xia)
                  (if g$t$16907$f3xia
                    g$t$16907$f3xia
                    (begin
                      '#f
                      (if (g$real?$16561$f3xia g$b$16906$f3xia)
                        (begin '#f (g$nan?$16555$f3xia g$b$16906$f3xia))
                        '#f)))))
               (if (g$real?$16561$f3xia g$a$16905$f3xia)
                 (begin '#f (g$nan?$16555$f3xia g$a$16905$f3xia))
                 '#f))
            '#f
            (if (if (g$real?$16561$f3xia g$a$16905$f3xia)
                  (begin '#f (g$real?$16561$f3xia g$b$16906$f3xia))
                  '#f)
              ($fx>=?
                (inexact-compare
                  (g$inexact$16570$f3xia g$a$16905$f3xia)
                  (g$inexact$16570$f3xia g$b$16906$f3xia))
                '0)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      '>=
                      '"not real arguments"
                      g$a$16905$f3xia
                      g$b$16906$f3xia)))))))))
       ((g$x1$16908$f3xia g$x2$16909$f3xia . g$rest$16910$f3xia)
        ((letrec ((g$f$16911$f3xia
                    (case-lambda
                      ((g$a$16912$f3xia g$b$16913$f3xia)
                       (if (null? g$b$16913$f3xia)
                         '#t
                         (if (g$>=$16678$f3xia
                               g$a$16912$f3xia
                               ($car g$b$16913$f3xia))
                           (g$f$16911$f3xia
                             ($car g$b$16913$f3xia)
                             ($cdr g$b$16913$f3xia))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$16911$f3xia)
         g$x1$16908$f3xia
         (cons g$x2$16909$f3xia g$rest$16910$f3xia)))))
   (g$make-rectangular$16679$f3xia
     g$make-rectangular$17043$f3xia
     (case-lambda
       ((g$r1$16914$f3xia g$r2$16915$f3xia)
        (begin
          (if (not (g$real?$16561$f3xia g$r1$16914$f3xia))
            (g$assertion-violation$12459$f3xia
              'make-rectangular
              '"not a real"
              g$r1$16914$f3xia)
            (void))
          (if (not (g$real?$16561$f3xia g$r2$16915$f3xia))
            (g$assertion-violation$12459$f3xia
              'make-rectangular
              '"not a real"
              g$r2$16915$f3xia)
            (void))
          (if (if (g$exact?$16558$f3xia g$r1$16914$f3xia)
                (begin '#f (g$exact?$16558$f3xia g$r2$16915$f3xia))
                '#f)
            (g$make-rectnum$16530$f3xia
              (g$->ratnum$16550$f3xia g$r1$16914$f3xia)
              (g$->ratnum$16550$f3xia g$r2$16915$f3xia))
            (if (if (g$exact?$16558$f3xia g$r2$16915$f3xia)
                  (begin '#f (g$zero?$16567$f3xia g$r2$16915$f3xia))
                  '#f)
              g$r1$16914$f3xia
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$make-complexnum$16537$f3xia
                      (g$inexact$16570$f3xia g$r1$16914$f3xia)
                      (g$inexact$16570$f3xia
                        g$r2$16915$f3xia))))))))))))
   (g$make-polar$16680$f3xia
     g$make-polar$17044$f3xia
     (case-lambda
       ((g$r1$16916$f3xia g$r2$16917$f3xia)
        (begin
          (if (not (g$real?$16561$f3xia g$r1$16916$f3xia))
            (g$assertion-violation$12459$f3xia
              'make-polar
              '"not a real"
              g$r1$16916$f3xia)
            (void))
          (if (not (g$real?$16561$f3xia g$r2$16917$f3xia))
            (g$assertion-violation$12459$f3xia
              'make-polar
              '"not a real"
              g$r2$16917$f3xia)
            (void))
          (if (if (g$exact?$16558$f3xia g$r2$16917$f3xia)
                (begin '#f (g$zero?$16567$f3xia g$r2$16917$f3xia))
                '#f)
            g$r1$16916$f3xia
            (* g$r1$16916$f3xia
               (g$make-rectangular$16679$f3xia
                 (g$cos$16725$f3xia g$r2$16917$f3xia)
                 (g$sin$16722$f3xia g$r2$16917$f3xia))))))))
   (g$angle$16681$f3xia
     g$angle$17045$f3xia
     (case-lambda
       ((g$num$16918$f3xia)
        (begin
          (if (not (g$number?$16554$f3xia g$num$16918$f3xia))
            (g$assertion-violation$12459$f3xia
              'angle
              '"not a number"
              g$num$16918$f3xia)
            (void))
          (if (g$rectnum?$16529$f3xia g$num$16918$f3xia)
            (g$angle$16681$f3xia
              (g$inexact$16570$f3xia g$num$16918$f3xia))
            (g$atan$16730$f3xia
              (g$imag-part$16687$f3xia g$num$16918$f3xia)
              (g$real-part$16686$f3xia g$num$16918$f3xia)))))))
   (g$magnitude$16682$f3xia
     g$magnitude$17046$f3xia
     (case-lambda
       ((g$num$16919$f3xia)
        (if (g$rectnum?$16529$f3xia g$num$16919$f3xia)
          (g$magnitude$16682$f3xia
            (g$inexact$16570$f3xia g$num$16919$f3xia))
          (if (g$complexnum?$16536$f3xia g$num$16919$f3xia)
            ((case-lambda
               ((g$i$16920$f3xia g$r$16921$f3xia)
                (g$sqrt$16738$f3xia
                  (+ (* g$i$16920$f3xia g$i$16920$f3xia)
                     (* g$r$16921$f3xia g$r$16921$f3xia)))))
             (g$imag-part$16687$f3xia g$num$16919$f3xia)
             (g$real-part$16686$f3xia g$num$16919$f3xia))
            (if (g$real?$16561$f3xia g$num$16919$f3xia)
              (g$abs$16733$f3xia g$num$16919$f3xia)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'magnitude
                      '"not a number"
                      g$num$16919$f3xia)))))))))))
   (g$exact-integer?$16683$f3xia
     g$exact-integer?$17047$f3xia
     (case-lambda
       ((g$obj$16922$f3xia)
        ((case-lambda
           ((g$t$16923$f3xia)
            (if g$t$16923$f3xia
              g$t$16923$f3xia
              (begin '#f (g$bignum?$16528$f3xia g$obj$16922$f3xia)))))
         (g$fixnum?$15979$f3xia g$obj$16922$f3xia)))))
   (g$numerator$16684$f3xia
     g$numerator$17048$f3xia
     (case-lambda
       ((g$num$16924$f3xia)
        (if (g$exact-integer?$16683$f3xia g$num$16924$f3xia)
          g$num$16924$f3xia
          (if (g$ratnum?$16533$f3xia g$num$16924$f3xia)
            (g$exact$16571$f3xia
              (g$ratnum-numerator$16535$f3xia g$num$16924$f3xia))
            (if (if (g$real?$16561$f3xia g$num$16924$f3xia)
                  (if (g$finite?$16556$f3xia g$num$16924$f3xia)
                    (begin
                      '#f
                      (not (g$nan?$16555$f3xia g$num$16924$f3xia)))
                    '#f)
                  '#f)
              (g$inexact$16570$f3xia
                (g$numerator$16684$f3xia
                  (g$exact$16571$f3xia g$num$16924$f3xia)))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'numerator
                      '"not a real"
                      g$num$16924$f3xia)))))))))))
   (g$denominator$16685$f3xia
     g$denominator$17049$f3xia
     (case-lambda
       ((g$num$16925$f3xia)
        (if (g$exact-integer?$16683$f3xia g$num$16925$f3xia)
          '1
          (if (g$ratnum?$16533$f3xia g$num$16925$f3xia)
            (g$exact$16571$f3xia
              (g$ratnum-denominator$16534$f3xia g$num$16925$f3xia))
            (if (if (g$real?$16561$f3xia g$num$16925$f3xia)
                  (if (g$finite?$16556$f3xia g$num$16925$f3xia)
                    (begin
                      '#f
                      (not (g$nan?$16555$f3xia g$num$16925$f3xia)))
                    '#f)
                  '#f)
              (g$inexact$16570$f3xia
                (g$denominator$16685$f3xia
                  (g$exact$16571$f3xia g$num$16925$f3xia)))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'denominator
                      '"not a real"
                      g$num$16925$f3xia)))))))))))
   (g$real-part$16686$f3xia
     g$real-part$17050$f3xia
     (case-lambda
       ((g$num$16926$f3xia)
        (if (g$complexnum?$16536$f3xia g$num$16926$f3xia)
          (g$complexnum-real-part$16539$f3xia g$num$16926$f3xia)
          (if (g$rectnum?$16529$f3xia g$num$16926$f3xia)
            (g$exact$16571$f3xia
              (g$rectnum-real-part$16532$f3xia g$num$16926$f3xia))
            (if (g$real?$16561$f3xia g$num$16926$f3xia)
              g$num$16926$f3xia
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'real-part
                      '"not a number"
                      g$num$16926$f3xia)))))))))))
   (g$imag-part$16687$f3xia
     g$imag-part$17051$f3xia
     (case-lambda
       ((g$num$16927$f3xia)
        (if (g$complexnum?$16536$f3xia g$num$16927$f3xia)
          (g$complexnum-imag-part$16538$f3xia g$num$16927$f3xia)
          (if (g$rectnum?$16529$f3xia g$num$16927$f3xia)
            (g$exact$16571$f3xia
              (g$rectnum-imag-part$16531$f3xia g$num$16927$f3xia))
            (if (g$real?$16561$f3xia g$num$16927$f3xia)
              '0
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'imag-part
                      '"not a number"
                      g$num$16927$f3xia)))))))))))
   (g$exp$16721$f3xia
     g$exp$17052$f3xia
     (case-lambda
       ((g$num$16928$f3xia)
        (if (g$rectnum?$16529$f3xia g$num$16928$f3xia)
          (g$exp$16721$f3xia
            (g$rectnum->complexnum$16548$f3xia g$num$16928$f3xia))
          (if (g$complexnum?$16536$f3xia g$num$16928$f3xia)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'exp
              '()
              g$num$16928$f3xia)
            (if (g$real?$16561$f3xia g$num$16928$f3xia)
              (clr-call-internal
                'System.Math
                'exp
                '()
                (g$inexact$16570$f3xia g$num$16928$f3xia))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'exp
                      '"not a number"
                      g$num$16928$f3xia)))))))))))
   (g$sin$16722$f3xia
     g$sin$17053$f3xia
     (case-lambda
       ((g$num$16929$f3xia)
        (if (g$rectnum?$16529$f3xia g$num$16929$f3xia)
          (g$sin$16722$f3xia
            (g$rectnum->complexnum$16548$f3xia g$num$16929$f3xia))
          (if (g$complexnum?$16536$f3xia g$num$16929$f3xia)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'sin
              '()
              g$num$16929$f3xia)
            (if (g$real?$16561$f3xia g$num$16929$f3xia)
              (clr-call-internal
                'System.Math
                'sin
                '()
                (g$inexact$16570$f3xia g$num$16929$f3xia))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'sin
                      '"not a number"
                      g$num$16929$f3xia)))))))))))
   (g$asin$16723$f3xia
     g$asin$17054$f3xia
     (case-lambda
       ((g$num$16930$f3xia)
        (if (g$rectnum?$16529$f3xia g$num$16930$f3xia)
          (g$asin$16723$f3xia
            (g$rectnum->complexnum$16548$f3xia g$num$16930$f3xia))
          (if (g$complexnum?$16536$f3xia g$num$16930$f3xia)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'asin
              '()
              g$num$16930$f3xia)
            (if (g$real?$16561$f3xia g$num$16930$f3xia)
              (clr-call-internal
                'System.Math
                'asin
                '()
                (g$inexact$16570$f3xia g$num$16930$f3xia))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'asin
                      '"not a number"
                      g$num$16930$f3xia)))))))))))
   (g$sinh$16724$f3xia
     g$sinh$17055$f3xia
     (case-lambda
       ((g$num$16931$f3xia)
        (if (g$rectnum?$16529$f3xia g$num$16931$f3xia)
          (g$sinh$16724$f3xia
            (g$rectnum->complexnum$16548$f3xia g$num$16931$f3xia))
          (if (g$complexnum?$16536$f3xia g$num$16931$f3xia)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'sinh
              '()
              g$num$16931$f3xia)
            (if (g$real?$16561$f3xia g$num$16931$f3xia)
              (clr-call-internal
                'System.Math
                'sinh
                '()
                (g$inexact$16570$f3xia g$num$16931$f3xia))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'sinh
                      '"not a number"
                      g$num$16931$f3xia)))))))))))
   (g$cos$16725$f3xia
     g$cos$17056$f3xia
     (case-lambda
       ((g$num$16932$f3xia)
        (if (g$rectnum?$16529$f3xia g$num$16932$f3xia)
          (g$cos$16725$f3xia
            (g$rectnum->complexnum$16548$f3xia g$num$16932$f3xia))
          (if (g$complexnum?$16536$f3xia g$num$16932$f3xia)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'cos
              '()
              g$num$16932$f3xia)
            (if (g$real?$16561$f3xia g$num$16932$f3xia)
              (clr-call-internal
                'System.Math
                'cos
                '()
                (g$inexact$16570$f3xia g$num$16932$f3xia))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'cos
                      '"not a number"
                      g$num$16932$f3xia)))))))))))
   (g$acos$16726$f3xia
     g$acos$17057$f3xia
     (case-lambda
       ((g$num$16933$f3xia)
        (if (g$rectnum?$16529$f3xia g$num$16933$f3xia)
          (g$acos$16726$f3xia
            (g$rectnum->complexnum$16548$f3xia g$num$16933$f3xia))
          (if (g$complexnum?$16536$f3xia g$num$16933$f3xia)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'acos
              '()
              g$num$16933$f3xia)
            (if (g$real?$16561$f3xia g$num$16933$f3xia)
              (clr-call-internal
                'System.Math
                'acos
                '()
                (g$inexact$16570$f3xia g$num$16933$f3xia))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'acos
                      '"not a number"
                      g$num$16933$f3xia)))))))))))
   (g$cosh$16727$f3xia
     g$cosh$17058$f3xia
     (case-lambda
       ((g$num$16934$f3xia)
        (if (g$rectnum?$16529$f3xia g$num$16934$f3xia)
          (g$cosh$16727$f3xia
            (g$rectnum->complexnum$16548$f3xia g$num$16934$f3xia))
          (if (g$complexnum?$16536$f3xia g$num$16934$f3xia)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'cosh
              '()
              g$num$16934$f3xia)
            (if (g$real?$16561$f3xia g$num$16934$f3xia)
              (clr-call-internal
                'System.Math
                'cosh
                '()
                (g$inexact$16570$f3xia g$num$16934$f3xia))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'cosh
                      '"not a number"
                      g$num$16934$f3xia)))))))))))
   (g$tan$16728$f3xia
     g$tan$17059$f3xia
     (case-lambda
       ((g$num$16935$f3xia)
        (if (g$rectnum?$16529$f3xia g$num$16935$f3xia)
          (g$tan$16728$f3xia
            (g$rectnum->complexnum$16548$f3xia g$num$16935$f3xia))
          (if (g$complexnum?$16536$f3xia g$num$16935$f3xia)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'tan
              '()
              g$num$16935$f3xia)
            (if (g$real?$16561$f3xia g$num$16935$f3xia)
              (clr-call-internal
                'System.Math
                'tan
                '()
                (g$inexact$16570$f3xia g$num$16935$f3xia))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'tan
                      '"not a number"
                      g$num$16935$f3xia)))))))))))
   (g$tanh$16729$f3xia
     g$tanh$17060$f3xia
     (case-lambda
       ((g$num$16936$f3xia)
        (if (g$rectnum?$16529$f3xia g$num$16936$f3xia)
          (g$tanh$16729$f3xia
            (g$rectnum->complexnum$16548$f3xia g$num$16936$f3xia))
          (if (g$complexnum?$16536$f3xia g$num$16936$f3xia)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'tanh
              '()
              g$num$16936$f3xia)
            (if (g$real?$16561$f3xia g$num$16936$f3xia)
              (clr-call-internal
                'System.Math
                'tanh
                '()
                (g$inexact$16570$f3xia g$num$16936$f3xia))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'tanh
                      '"not a number"
                      g$num$16936$f3xia)))))))))))
   (g$atan$16730$f3xia
     g$atan$17061$f3xia
     (case-lambda
       ((g$num$16937$f3xia)
        (if (g$rectnum?$16529$f3xia g$num$16937$f3xia)
          (g$atan$16730$f3xia
            (g$rectnum->complexnum$16548$f3xia g$num$16937$f3xia))
          (if (g$complexnum?$16536$f3xia g$num$16937$f3xia)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'Atan
              '()
              g$num$16937$f3xia)
            (if (g$real?$16561$f3xia g$num$16937$f3xia)
              (clr-call-internal
                'System.Math
                'Atan
                '()
                (g$inexact$16570$f3xia g$num$16937$f3xia))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'atan
                      '"not a number"
                      g$num$16937$f3xia)))))))))
       ((g$num1$16938$f3xia g$num2$16939$f3xia)
        (begin
          (if (not (g$real?$16561$f3xia g$num1$16938$f3xia))
            (g$assertion-violation$12459$f3xia
              'atan
              '"not a real"
              g$num1$16938$f3xia)
            (void))
          (if (not (g$real?$16561$f3xia g$num2$16939$f3xia))
            (g$assertion-violation$12459$f3xia
              'atan
              '"not a real"
              g$num2$16939$f3xia)
            (void))
          (clr-call-internal
            'System.Math
            'Atan2
            '()
            (g$inexact$16570$f3xia g$num1$16938$f3xia)
            (g$inexact$16570$f3xia g$num2$16939$f3xia))))))
   (g$log$16731$f3xia
     g$log$17062$f3xia
     (case-lambda
       ((g$num$16940$f3xia)
        (begin
          (if (not (g$number?$16554$f3xia g$num$16940$f3xia))
            (g$assertion-violation$12459$f3xia
              'atan
              '"not a number"
              g$num$16940$f3xia)
            (void))
          (if (g$rectnum?$16529$f3xia g$num$16940$f3xia)
            (g$log$16731$f3xia
              (g$rectnum->complexnum$16548$f3xia g$num$16940$f3xia))
            (if (g$complexnum?$16536$f3xia g$num$16940$f3xia)
              (clr-call-internal
                'Microsoft.Scripting.Math.Complex64
                'Log
                '()
                g$num$16940$f3xia)
              (if (g$negative?$16569$f3xia g$num$16940$f3xia)
                (clr-call-internal
                  'Microsoft.Scripting.Math.Complex64
                  'Log
                  '()
                  (g$make-complexnum$16537$f3xia
                    (g$inexact$16570$f3xia g$num$16940$f3xia)
                    '0.0))
                (if (g$zero?$16567$f3xia g$num$16940$f3xia)
                  (if (g$exact?$16558$f3xia g$num$16940$f3xia)
                    (g$assertion-violation$12459$f3xia
                      'log
                      '"not possible"
                      g$num$16940$f3xia)
                    '-inf.0)
                  (if (g$infinite?$16557$f3xia g$num$16940$f3xia)
                    (if (g$negative?$16569$f3xia g$num$16940$f3xia)
                      (g$make-complexnum$16537$f3xia
                        (g$inexact$16570$f3xia
                          (g$abs$16733$f3xia g$num$16940$f3xia))
                        '0)
                      g$num$16940$f3xia)
                    ((case-lambda
                       (()
                        (begin
                          '#f
                          (clr-call-internal
                            'System.Math
                            'Log
                            '()
                            (g$inexact$16570$f3xia
                              g$num$16940$f3xia)))))))))))))
       ((g$num1$16941$f3xia g$num2$16942$f3xia)
        (/ (g$log$16731$f3xia g$num1$16941$f3xia)
           (g$log$16731$f3xia g$num2$16942$f3xia)))))
   (g$div$16732$f3xia
     g$div$17063$f3xia
     (case-lambda
       ((g$x1$16943$f3xia g$x2$16944$f3xia)
        (begin
          (if (not (g$real?$16561$f3xia g$x1$16943$f3xia))
            (g$assertion-violation$12459$f3xia
              'div
              '"not a real"
              g$x1$16943$f3xia)
            (void))
          (if (not (g$real?$16561$f3xia g$x2$16944$f3xia))
            (g$assertion-violation$12459$f3xia
              'div
              '"not a real"
              g$x2$16944$f3xia)
            (void))
          (if (g$zero?$16567$f3xia g$x2$16944$f3xia)
            (g$assertion-violation$12459$f3xia
              'div
              '"divide by zero"
              g$x1$16943$f3xia
              g$x2$16944$f3xia)
            (void))
          (if ((case-lambda
                 ((g$t$16945$f3xia)
                  (if g$t$16945$f3xia
                    g$t$16945$f3xia
                    (begin
                      '#f
                      (g$infinite?$16557$f3xia g$x1$16943$f3xia)))))
               (g$nan?$16555$f3xia g$x1$16943$f3xia))
            (g$assertion-violation$12459$f3xia
              'div
              '"cannot be nan or infinite"
              g$x1$16943$f3xia
              g$x2$16944$f3xia)
            (void))
          (call-with-values
            (case-lambda
              (()
               (if (if (g$exact?$16558$f3xia g$x1$16943$f3xia)
                     (begin '#f (g$exact?$16558$f3xia g$x2$16944$f3xia))
                     '#f)
                 ((case-lambda
                    ((g$scale$16949$f3xia)
                     (values
                       (* g$x1$16943$f3xia g$scale$16949$f3xia)
                       (* g$x2$16944$f3xia g$scale$16949$f3xia)
                       '#t)))
                  (* (g$denominator$16685$f3xia g$x1$16943$f3xia)
                     (g$denominator$16685$f3xia g$x2$16944$f3xia)))
                 (values g$x1$16943$f3xia g$x2$16944$f3xia '#f))))
            (case-lambda
              ((g$x1$16950$f3xia
                 g$x2$16951$f3xia
                 g$exact-args?$16952$f3xia)
               ((case-lambda
                  ((g$exact-args?$16953$f3xia
                     g$x2$16954$f3xia
                     g$x1$16955$f3xia)
                   ((case-lambda
                      ((g$d$16956$f3xia)
                       (if (if g$exact-args?$16953$f3xia
                             (begin
                               '#f
                               (g$rational-valued?$16565$f3xia
                                 g$d$16956$f3xia))
                             '#f)
                         (g$exact$16571$f3xia g$d$16956$f3xia)
                         g$d$16956$f3xia)))
                    (if (g$positive?$16568$f3xia g$x2$16954$f3xia)
                      (g$floor$16734$f3xia
                        (/ g$x1$16955$f3xia g$x2$16954$f3xia))
                      (- (g$floor$16734$f3xia
                           (/ g$x1$16955$f3xia
                              (- g$x2$16954$f3xia))))))))
                g$exact-args?$16952$f3xia
                g$x2$16951$f3xia
                g$x1$16950$f3xia))))))))
   (g$abs$16733$f3xia
     g$abs$17064$f3xia
     (case-lambda
       ((g$x1$16957$f3xia)
        (begin
          (if (not (g$real?$16561$f3xia g$x1$16957$f3xia))
            (g$assertion-violation$12459$f3xia
              'abs
              '"not a real"
              g$x1$16957$f3xia)
            (void))
          (if (g$negative?$16569$f3xia g$x1$16957$f3xia)
            (- g$x1$16957$f3xia)
            g$x1$16957$f3xia)))))
   (g$floor$16734$f3xia
     g$floor$17065$f3xia
     (case-lambda
       ((g$x$16958$f3xia)
        (begin
          (if (not (g$real?$16561$f3xia g$x$16958$f3xia))
            (g$assertion-violation$12459$f3xia
              'floor
              '"not a real"
              g$x$16958$f3xia)
            (void))
          (if (g$exact-integer?$16683$f3xia g$x$16958$f3xia)
            g$x$16958$f3xia
            (if (g$ratnum?$16533$f3xia g$x$16958$f3xia)
              ((case-lambda
                 ((g$r$16959$f3xia)
                  (g$exact$16571$f3xia
                    (if (g$negative?$16569$f3xia g$x$16958$f3xia)
                      (- g$r$16959$f3xia '1)
                      g$r$16959$f3xia))))
               (g$bignum/$16540$f3xia
                 (g$ratnum-numerator$16535$f3xia g$x$16958$f3xia)
                 (g$ratnum-denominator$16534$f3xia g$x$16958$f3xia)))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (clr-call-internal
                      'System.Math
                      '"Floor(System.Double)"
                      '()
                      (g$inexact$16570$f3xia g$x$16958$f3xia))))))))))))
   (g$ceiling$16735$f3xia
     g$ceiling$17066$f3xia
     (case-lambda
       ((g$x$16960$f3xia)
        (begin
          (if (not (g$real?$16561$f3xia g$x$16960$f3xia))
            (g$assertion-violation$12459$f3xia
              'ceiling
              '"not a real"
              g$x$16960$f3xia)
            (void))
          (if (g$exact-integer?$16683$f3xia g$x$16960$f3xia)
            g$x$16960$f3xia
            (if (g$ratnum?$16533$f3xia g$x$16960$f3xia)
              ((case-lambda
                 ((g$r$16961$f3xia)
                  (g$exact$16571$f3xia
                    (if (g$positive?$16568$f3xia g$r$16961$f3xia)
                      (+ g$r$16961$f3xia '1)
                      g$r$16961$f3xia))))
               (g$bignum/$16540$f3xia
                 (g$ratnum-numerator$16535$f3xia g$x$16960$f3xia)
                 (g$ratnum-denominator$16534$f3xia g$x$16960$f3xia)))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (clr-call-internal
                      'System.Math
                      '"Ceiling(System.Double)"
                      '()
                      (g$inexact$16570$f3xia g$x$16960$f3xia))))))))))))
   (g$truncate$16736$f3xia
     g$truncate$17067$f3xia
     (case-lambda
       ((g$x$16962$f3xia)
        (begin
          (if (not (g$real?$16561$f3xia g$x$16962$f3xia))
            (g$assertion-violation$12459$f3xia
              'truncate
              '"not a real"
              g$x$16962$f3xia)
            (void))
          (if (g$exact-integer?$16683$f3xia g$x$16962$f3xia)
            g$x$16962$f3xia
            ((case-lambda
               (()
                (begin
                  '#f
                  ((case-lambda
                     ((g$r$16963$f3xia)
                      (if (g$exact?$16558$f3xia g$x$16962$f3xia)
                        (g$exact$16571$f3xia g$r$16963$f3xia)
                        g$r$16963$f3xia)))
                   (clr-call-internal
                     'System.Math
                     '"Truncate(System.Double)"
                     '()
                     (g$inexact$16570$f3xia g$x$16962$f3xia))))))))))))
   (g$round$16737$f3xia
     g$round$17068$f3xia
     (case-lambda
       ((g$x$16964$f3xia)
        (begin
          (if (not (g$real?$16561$f3xia g$x$16964$f3xia))
            (g$assertion-violation$12459$f3xia
              'round
              '"not a real"
              g$x$16964$f3xia)
            (void))
          (if (g$exact-integer?$16683$f3xia g$x$16964$f3xia)
            g$x$16964$f3xia
            (if (g$ratnum?$16533$f3xia g$x$16964$f3xia)
              ((case-lambda
                 ((g$num$16965$f3xia)
                  ((case-lambda
                     ((g$den$16966$f3xia)
                      ((case-lambda
                         ((g$d$16967$f3xia)
                          ((case-lambda
                             ((g$r$16968$f3xia)
                              ((case-lambda
                                 ((g$hd$16969$f3xia)
                                  (if (g$negative?$16569$f3xia
                                        g$r$16968$f3xia)
                                    (g$exact$16571$f3xia
                                      (if (g$>$16677$f3xia
                                            (- g$r$16968$f3xia)
                                            g$hd$16969$f3xia)
                                        (- g$d$16967$f3xia '1)
                                        (if (g$<$16675$f3xia
                                              (- g$r$16968$f3xia)
                                              g$hd$16969$f3xia)
                                          g$d$16967$f3xia
                                          (if (g$even?$16041$f3xia
                                                g$d$16967$f3xia)
                                            g$d$16967$f3xia
                                            ((case-lambda
                                               (()
                                                (begin
                                                  '#f
                                                  (+ g$d$16967$f3xia
                                                     '1)))))))))
                                    (if (g$positive?$16568$f3xia
                                          g$r$16968$f3xia)
                                      (g$exact$16571$f3xia
                                        (if (g$>$16677$f3xia
                                              g$r$16968$f3xia
                                              g$hd$16969$f3xia)
                                          (+ g$d$16967$f3xia '1)
                                          (if (g$<$16675$f3xia
                                                g$r$16968$f3xia
                                                g$hd$16969$f3xia)
                                            g$d$16967$f3xia
                                            (if (g$even?$16041$f3xia
                                                  g$d$16967$f3xia)
                                              g$d$16967$f3xia
                                              ((case-lambda
                                                 (()
                                                  (begin
                                                    '#f
                                                    (+ g$d$16967$f3xia
                                                       '1)))))))))
                                      ((case-lambda
                                         (()
                                          (begin
                                            '#f
                                            g$d$16967$f3xia))))))))
                               (g$div$16732$f3xia g$d$16967$f3xia '2))))
                           (g$bignum%$16541$f3xia
                             g$num$16965$f3xia
                             g$den$16966$f3xia))))
                       (g$bignum/$16540$f3xia
                         g$num$16965$f3xia
                         g$den$16966$f3xia))))
                   (g$ratnum-denominator$16534$f3xia g$x$16964$f3xia))))
               (g$ratnum-numerator$16535$f3xia g$x$16964$f3xia))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (clr-call-internal
                      'System.Math
                      '"Round(System.Double)"
                      '()
                      (g$inexact$16570$f3xia g$x$16964$f3xia))))))))))))
   (g$sqrt$16738$f3xia
     g$sqrt$17069$f3xia
     (case-lambda
       ((g$num$16970$f3xia)
        (if (g$rectnum?$16529$f3xia g$num$16970$f3xia)
          (g$sqrt$16738$f3xia
            (g$rectnum->complexnum$16548$f3xia g$num$16970$f3xia))
          (if (g$complexnum?$16536$f3xia g$num$16970$f3xia)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'Sqrt
              '()
              g$num$16970$f3xia)
            (if (g$negative?$16569$f3xia g$num$16970$f3xia)
              (g$make-rectangular$16679$f3xia
                '0
                (g$sqrt$16738$f3xia (- g$num$16970$f3xia)))
              (if (g$bignum?$16528$f3xia g$num$16970$f3xia)
                (bignum-sqrt g$num$16970$f3xia)
                (if (g$infinite?$16557$f3xia g$num$16970$f3xia)
                  g$num$16970$f3xia
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        ((case-lambda
                           ((g$r$16971$f3xia)
                            (if (g$exact?$16558$f3xia g$num$16970$f3xia)
                              (g$exact$16571$f3xia g$r$16971$f3xia)
                              g$r$16971$f3xia)))
                         (clr-call-internal
                           'System.Math
                           'Sqrt
                           '()
                           (g$inexact$16570$f3xia
                             g$num$16970$f3xia)))))))))))))))
   (g$exact-integer-sqrt$16739$f3xia
     g$exact-integer-sqrt$17070$f3xia
     (case-lambda
       ((g$num$16972$f3xia)
        (if (g$bignum?$16528$f3xia g$num$16972$f3xia)
          (bignum-sqrt-exact g$num$16972$f3xia)
          ((case-lambda
             ((g$r$16973$f3xia)
              ((case-lambda
                 ((g$rf$16974$f3xia)
                  ((case-lambda
                     ((g$rest$16975$f3xia)
                      (values g$rf$16974$f3xia g$rest$16975$f3xia)))
                   (- g$num$16972$f3xia
                      (* g$rf$16974$f3xia g$rf$16974$f3xia)))))
               (g$exact$16571$f3xia
                 (g$floor$16734$f3xia g$r$16973$f3xia)))))
           (g$sqrt$16738$f3xia g$num$16972$f3xia))))))
   (g$expt$16740$f3xia
     g$expt$17071$f3xia
     (case-lambda
       ((g$obj1$16976$f3xia g$obj2$16977$f3xia)
        (letrec* ((g$make-restriction-violation$16978$f3xia
                    (case-lambda
                      (()
                       (condition
                         (g$make-implementation-restriction-violation$12299$f3xia)
                         (g$make-who-condition$12261$f3xia 'expt)
                         (g$make-message-condition$12201$f3xia
                           '"not supported")
                         (g$make-irritants-condition$12251$f3xia
                           g$obj1$16976$f3xia
                           g$obj2$16977$f3xia))))))
          (if (g$rectnum?$16529$f3xia g$obj1$16976$f3xia)
            (g$expt$16740$f3xia
              (g$rectnum->complexnum$16548$f3xia g$obj1$16976$f3xia)
              g$obj2$16977$f3xia)
            (if ((case-lambda
                   ((g$t$16979$f3xia)
                    (if g$t$16979$f3xia
                      g$t$16979$f3xia
                      (begin
                        '#f
                        (g$negative?$16569$f3xia g$obj1$16976$f3xia)))))
                 (g$complexnum?$16536$f3xia g$obj1$16976$f3xia))
              (clr-call-internal
                'Microsoft.Scripting.Math.Complex64
                'Pow
                '()
                (g$real->complexnum$16546$f3xia g$obj1$16976$f3xia)
                (g$real->complexnum$16546$f3xia g$obj2$16977$f3xia))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    ((case-lambda
                       ((g$e$16980$f3xia
                          g$z1$16981$f3xia
                          g$z2$16982$f3xia)
                        (if (if g$z1$16981$f3xia
                              (begin '#f (not g$z2$16982$f3xia))
                              '#f)
                          (if g$e$16980$f3xia '0 '0.0)
                          (if ((case-lambda
                                 ((g$t$16983$f3xia)
                                  (if g$t$16983$f3xia
                                    g$t$16983$f3xia
                                    (begin
                                      '#f
                                      (g$=$16674$f3xia
                                        g$obj1$16976$f3xia
                                        '1)))))
                               g$z2$16982$f3xia)
                            (if g$e$16980$f3xia '1 '1.0)
                            (if (g$=$16674$f3xia g$obj2$16977$f3xia '1)
                              (if g$e$16980$f3xia
                                g$obj1$16976$f3xia
                                (g$inexact$16570$f3xia
                                  g$obj1$16976$f3xia))
                              ((case-lambda
                                 (()
                                  (begin
                                    '#f
                                    ((case-lambda
                                       ((g$neg?$16984$f3xia)
                                        ((case-lambda
                                           ((g$obj2$16985$f3xia)
                                            (if (if (g$integer?$16563$f3xia
                                                      g$obj1$16976$f3xia)
                                                  (begin
                                                    '#f
                                                    (g$integer?$16563$f3xia
                                                      g$obj2$16985$f3xia))
                                                  '#f)
                                              ((case-lambda
                                                 ((g$a$16986$f3xia)
                                                  ((case-lambda
                                                     ((g$r$16987$f3xia)
                                                      (if g$neg?$16984$f3xia
                                                        (if (g$zero?$16567$f3xia
                                                              g$r$16987$f3xia)
                                                          (raise
                                                            (g$make-restriction-violation$16978$f3xia))
                                                          (/ '1
                                                             g$r$16987$f3xia))
                                                        (g$exact$16571$f3xia
                                                          g$r$16987$f3xia))))
                                                   (clr-call-internal
                                                     'Microsoft.Scripting.Math.BigInteger
                                                     'Power
                                                     g$a$16986$f3xia
                                                     (g$->fixnum$16549$f3xia
                                                       g$obj2$16985$f3xia)))))
                                               (g$->bignum$16551$f3xia
                                                 g$obj1$16976$f3xia))
                                              (if (if (g$rational?$16562$f3xia
                                                        g$obj1$16976$f3xia)
                                                    (begin
                                                      '#f
                                                      (g$integer?$16563$f3xia
                                                        g$obj2$16985$f3xia))
                                                    '#f)
                                                ((case-lambda
                                                   ((g$f$16988$f3xia)
                                                    (if g$neg?$16984$f3xia
                                                      (/ (g$expt$16740$f3xia
                                                           (g$denominator$16685$f3xia
                                                             g$f$16988$f3xia)
                                                           g$obj2$16985$f3xia)
                                                         (g$expt$16740$f3xia
                                                           (g$numerator$16684$f3xia
                                                             g$f$16988$f3xia)
                                                           g$obj2$16985$f3xia))
                                                      (/ (g$expt$16740$f3xia
                                                           (g$numerator$16684$f3xia
                                                             g$f$16988$f3xia)
                                                           g$obj2$16985$f3xia)
                                                         (g$expt$16740$f3xia
                                                           (g$denominator$16685$f3xia
                                                             g$f$16988$f3xia)
                                                           g$obj2$16985$f3xia)))))
                                                 (g$->ratnum$16550$f3xia
                                                   g$obj1$16976$f3xia))
                                                (if (if (g$real?$16561$f3xia
                                                          g$obj1$16976$f3xia)
                                                      (begin
                                                        '#f
                                                        (g$real?$16561$f3xia
                                                          g$obj2$16985$f3xia))
                                                      '#f)
                                                  ((case-lambda
                                                     ((g$r$16989$f3xia)
                                                      (if g$neg?$16984$f3xia
                                                        (/ '1
                                                           g$r$16989$f3xia)
                                                        g$r$16989$f3xia)))
                                                   (clr-call-internal
                                                     'System.Math
                                                     'Pow
                                                     '()
                                                     (g$inexact$16570$f3xia
                                                       g$obj1$16976$f3xia)
                                                     (g$inexact$16570$f3xia
                                                       g$obj2$16985$f3xia)))
                                                  ((case-lambda
                                                     (()
                                                      (begin
                                                        '#f
                                                        (raise
                                                          (g$make-restriction-violation$16978$f3xia)))))))))))
                                         (if g$neg?$16984$f3xia
                                           (g$abs$16733$f3xia
                                             g$obj2$16977$f3xia)
                                           g$obj2$16977$f3xia))))
                                     (g$negative?$16569$f3xia
                                       g$obj2$16977$f3xia)))))))))))
                     (if (g$exact?$16558$f3xia g$obj1$16976$f3xia)
                       (begin
                         '#f
                         (g$exact?$16558$f3xia g$obj2$16977$f3xia))
                       '#f)
                     (g$zero?$16567$f3xia g$obj1$16976$f3xia)
                     (g$zero?$16567$f3xia
                       g$obj2$16977$f3xia)))))))))))))
  (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$set-car!$17072$f3xia
     g$set-car!$17078$f3xia
     (case-lambda
       ((g$lst$17074$f3xia g$val$17075$f3xia)
        (begin
          (if (not (pair? g$lst$17074$f3xia))
            (g$assertion-violation$12459$f3xia
              'set-car!
              '"not a pair"
              g$val$17075$f3xia)
            (void))
          (clr-field-set!-internal
            'IronScheme.Runtime.Cons
            'car
            g$lst$17074$f3xia
            g$val$17075$f3xia)))))
   (g$set-cdr!$17073$f3xia
     g$set-cdr!$17079$f3xia
     (case-lambda
       ((g$lst$17076$f3xia g$val$17077$f3xia)
        (begin
          (if (not (pair? g$lst$17076$f3xia))
            (g$assertion-violation$12459$f3xia
              'set-cdr!
              '"not a pair"
              g$val$17077$f3xia)
            (void))
          (clr-field-set!-internal
            'IronScheme.Runtime.Cons
            'cdr
            g$lst$17076$f3xia
            g$val$17077$f3xia))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$inexact->exact$17080$f3xia
     g$inexact->exact$17100$f3xia
     g$exact$17033$f3xia)
   (g$exact->inexact$17081$f3xia
     g$exact->inexact$17101$f3xia
     g$inexact$17032$f3xia)
   (g$sign$17082$f3xia
     g$sign$17102$f3xia
     (case-lambda
       ((g$n$17088$f3xia)
        (if (g$>$17041$f3xia g$n$17088$f3xia '0)
          '1
          (if (g$<$17039$f3xia g$n$17088$f3xia '0)
            '-1
            ((case-lambda (() (begin '#f '0)))))))))
   (g$quotient$17083$f3xia
     g$quotient$17103$f3xia
     (case-lambda
       ((g$n1$17089$f3xia g$n2$17090$f3xia)
        (begin
          (if (not (g$integer-valued?$17028$f3xia g$n1$17089$f3xia))
            (g$assertion-violation$12459$f3xia
              'quotient
              '"not an integer"
              g$n1$17089$f3xia)
            (void))
          (if (not (g$integer-valued?$17028$f3xia g$n2$17090$f3xia))
            (g$assertion-violation$12459$f3xia
              'quotient
              '"not an integer"
              g$n2$17090$f3xia)
            (void))
          (* (g$sign$17082$f3xia g$n1$17089$f3xia)
             (g$sign$17082$f3xia g$n2$17090$f3xia)
             (g$div$17063$f3xia
               (g$abs$17064$f3xia g$n1$17089$f3xia)
               (g$abs$17064$f3xia g$n2$17090$f3xia)))))))
   (g$remainder$17084$f3xia
     g$remainder$17104$f3xia
     (case-lambda
       ((g$n1$17091$f3xia g$n2$17092$f3xia)
        (begin
          (if (not (g$integer-valued?$17028$f3xia g$n1$17091$f3xia))
            (g$assertion-violation$12459$f3xia
              'remainder
              '"not an integer"
              g$n1$17091$f3xia)
            (void))
          (if (not (g$integer-valued?$17028$f3xia g$n2$17092$f3xia))
            (g$assertion-violation$12459$f3xia
              'remainder
              '"not an integer"
              g$n2$17092$f3xia)
            (void))
          (* (g$sign$17082$f3xia g$n1$17091$f3xia)
             (g$mod$15999$f3xia
               (g$abs$17064$f3xia g$n1$17091$f3xia)
               (g$abs$17064$f3xia g$n2$17092$f3xia)))))))
   (g$modulo$17085$f3xia
     g$modulo$17105$f3xia
     (case-lambda
       ((g$n1$17093$f3xia g$n2$17094$f3xia)
        (begin
          (if (not (g$integer-valued?$17028$f3xia g$n1$17093$f3xia))
            (g$assertion-violation$12459$f3xia
              'modulo
              '"not an integer"
              g$n1$17093$f3xia)
            (void))
          (if (not (g$integer-valued?$17028$f3xia g$n2$17094$f3xia))
            (g$assertion-violation$12459$f3xia
              'modulo
              '"not an integer"
              g$n2$17094$f3xia)
            (void))
          (* (g$sign$17082$f3xia g$n2$17094$f3xia)
             (g$mod$15999$f3xia
               (* (g$sign$17082$f3xia g$n2$17094$f3xia)
                  g$n1$17093$f3xia)
               (g$abs$17064$f3xia g$n2$17094$f3xia)))))))
   (g$make-promise$17086$f3xia
     g$make-promise$17106$f3xia
     (case-lambda
       ((g$proc$17095$f3xia)
        ((case-lambda
           ((g$result-ready?$17096$f3xia g$result$17097$f3xia)
            (case-lambda
              (()
               (if g$result-ready?$17096$f3xia
                 g$result$17097$f3xia
                 ((case-lambda
                    ((g$x$17098$f3xia)
                     (if g$result-ready?$17096$f3xia
                       g$result$17097$f3xia
                       (begin
                         (set! g$result-ready?$17096$f3xia '#t)
                         (set! g$result$17097$f3xia g$x$17098$f3xia)
                         g$result$17097$f3xia))))
                  (g$proc$17095$f3xia)))))))
         '#f
         '#f))))
   (g$force$17087$f3xia
     g$force$17107$f3xia
     (case-lambda ((g$object$17099$f3xia) (g$object$17099$f3xia)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$17108$f3xia
     g$split$17137$f3xia
     (case-lambda
       ((g$ls$17113$f3xia)
        ((letrec ((g$loop$17114$f3xia
                    (case-lambda
                      ((g$rest$17115$f3xia
                         g$left$17116$f3xia
                         g$right$17117$f3xia)
                       (if (null? g$rest$17115$f3xia)
                         (cons g$left$17116$f3xia g$right$17117$f3xia)
                         (if (null? (cdr g$rest$17115$f3xia))
                           (cons
                             (cons
                               (car g$rest$17115$f3xia)
                               g$left$17116$f3xia)
                             g$right$17117$f3xia)
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 (g$loop$17114$f3xia
                                   (g$cddr$16016$f3xia
                                     g$rest$17115$f3xia)
                                   (cons
                                     (car g$rest$17115$f3xia)
                                     g$left$17116$f3xia)
                                   (cons
                                     (g$cadr$16014$f3xia
                                       g$rest$17115$f3xia)
                                     g$right$17117$f3xia))))))))))))
           g$loop$17114$f3xia)
         g$ls$17113$f3xia
         '()
         '()))))
   (g$reverse-it$17109$f3xia
     g$reverse-it$17138$f3xia
     (case-lambda
       ((g$head$17118$f3xia g$tail$17119$f3xia)
        (if (null? g$head$17118$f3xia)
          g$tail$17119$f3xia
          (g$reverse-it$17109$f3xia
            (cdr g$head$17118$f3xia)
            (cons (car g$head$17118$f3xia) g$tail$17119$f3xia))))))
   (g$merge$17110$f3xia
     g$merge$17139$f3xia
     (case-lambda
       ((g$list-1$17120$f3xia
          g$list-2$17121$f3xia
          g$precedes?$17122$f3xia)
        ((letrec ((g$loop$17123$f3xia
                    (case-lambda
                      ((g$source-1$17124$f3xia
                         g$source-2$17125$f3xia
                         g$so-far$17126$f3xia)
                       (if (null? g$source-1$17124$f3xia)
                         (g$reverse-it$17109$f3xia
                           g$so-far$17126$f3xia
                           g$source-2$17125$f3xia)
                         (if (null? g$source-2$17125$f3xia)
                           (g$reverse-it$17109$f3xia
                             g$so-far$17126$f3xia
                             g$source-1$17124$f3xia)
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$car-1$17127$f3xia
                                       g$car-2$17128$f3xia)
                                     (if (g$precedes?$17122$f3xia
                                           g$car-2$17128$f3xia
                                           g$car-1$17127$f3xia)
                                       (g$loop$17123$f3xia
                                         g$source-1$17124$f3xia
                                         (cdr g$source-2$17125$f3xia)
                                         (cons
                                           g$car-2$17128$f3xia
                                           g$so-far$17126$f3xia))
                                       (g$loop$17123$f3xia
                                         g$source-2$17125$f3xia
                                         (cdr g$source-1$17124$f3xia)
                                         (cons
                                           g$car-1$17127$f3xia
                                           g$so-far$17126$f3xia)))))
                                  (car g$source-1$17124$f3xia)
                                  (car g$source-2$17125$f3xia))))))))))))
           g$loop$17123$f3xia)
         g$list-1$17120$f3xia
         g$list-2$17121$f3xia
         '()))))
   (g$list-sort$17111$f3xia
     g$list-sort$17140$f3xia
     (case-lambda
       ((g$precedes?$17129$f3xia g$ls$17130$f3xia)
        (if (null? g$ls$17130$f3xia)
          '()
          ((letrec ((g$helper$17131$f3xia
                      (case-lambda
                        ((g$piece$17132$f3xia)
                         (if (null? (cdr g$piece$17132$f3xia))
                           g$piece$17132$f3xia
                           ((case-lambda
                              ((g$parts$17133$f3xia)
                               (g$merge$17110$f3xia
                                 (g$helper$17131$f3xia
                                   (car g$parts$17133$f3xia))
                                 (g$helper$17131$f3xia
                                   (cdr g$parts$17133$f3xia))
                                 g$precedes?$17129$f3xia)))
                            (g$split$17108$f3xia
                              g$piece$17132$f3xia)))))))
             g$helper$17131$f3xia)
           g$ls$17130$f3xia)))))
   (g$vector-sort$17112$f3xia
     g$vector-sort$17141$f3xia
     (case-lambda
       ((g$pred?$17134$f3xia g$vec$17135$f3xia)
        (begin
          (if (not (g$vector?$15974$f3xia g$vec$17135$f3xia))
            (g$assertion-violation$12459$f3xia
              'vector-sort
              '"not a vector"
              g$vec$17135$f3xia)
            (void))
          ((case-lambda
             ((g$vec$17136$f3xia)
              (begin
                (vector-sort! g$pred?$17134$f3xia g$vec$17136$f3xia)
                g$vec$17136$f3xia)))
           (clr-call-internal
             'System.Array
             'Clone
             g$vec$17135$f3xia)))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$using$17143$f3xia
     g$using$17372$f3xia
     (clr-using-internal 'System.Globalization))
   (g$compare-info$17144$f3xia
     g$compare-info$17373$f3xia
     (clr-call-internal
       'CultureInfo
       'get_CompareInfo
       (clr-call-internal 'CultureInfo 'get_InvariantCulture '())))
   (g$text-info$17145$f3xia
     g$text-info$17374$f3xia
     (clr-call-internal
       'CultureInfo
       'get_TextInfo
       (clr-call-internal 'CultureInfo 'get_InvariantCulture '())))
   (g$char-upcase$17146$f3xia
     g$char-upcase$17375$f3xia
     (case-lambda
       ((g$chr$17298$f3xia)
        (begin
          (if (not (g$char?$15973$f3xia g$chr$17298$f3xia))
            (g$assertion-violation$12459$f3xia
              'char-upcase
              '"not a character"
              g$chr$17298$f3xia)
            (void))
          (clr-call-internal
            'System.Char
            'ToUpper
            '()
            g$chr$17298$f3xia)))))
   (g$char-downcase$17147$f3xia
     g$char-downcase$17376$f3xia
     (case-lambda
       ((g$chr$17299$f3xia)
        (begin
          (if (not (g$char?$15973$f3xia g$chr$17299$f3xia))
            (g$assertion-violation$12459$f3xia
              'char-downcase
              '"not a character"
              g$chr$17299$f3xia)
            (void))
          (clr-call-internal
            'System.Char
            'ToLower
            '()
            g$chr$17299$f3xia)))))
   (g$char-titlecase$17148$f3xia
     g$char-titlecase$17377$f3xia
     (case-lambda
       ((g$chr$17300$f3xia)
        (begin
          (if (not (g$char?$15973$f3xia g$chr$17300$f3xia))
            (g$assertion-violation$12459$f3xia
              'char-titlecase
              '"not a character"
              g$chr$17300$f3xia)
            (void))
          (g$string-ref$15985$f3xia
            (clr-call-internal
              'TextInfo
              'ToTitleCase
              g$text-info$17145$f3xia
              (g$->string$17158$f3xia
                (g$string$15990$f3xia g$chr$17300$f3xia)))
            '0)))))
   (g$char-foldcase$17149$f3xia
     g$char-foldcase$17378$f3xia
     (case-lambda
       ((g$chr$17301$f3xia)
        (begin
          (if (not (g$char?$15973$f3xia g$chr$17301$f3xia))
            (g$assertion-violation$12459$f3xia
              'char-foldcase
              '"not a character"
              g$chr$17301$f3xia)
            (void))
          (clr-call-internal
            'System.Char
            'ToLowerInvariant
            '()
            (clr-call-internal
              'System.Char
              'ToUpperInvariant
              '()
              g$chr$17301$f3xia))))))
   (g$char-alphabetic?$17150$f3xia
     g$char-alphabetic?$17379$f3xia
     (case-lambda
       ((g$chr$17302$f3xia)
        (begin
          (if (not (g$char?$15973$f3xia g$chr$17302$f3xia))
            (g$assertion-violation$12459$f3xia
              'char-alphabetic?
              '"not a character"
              g$chr$17302$f3xia)
            (void))
          (clr-call-internal
            'System.Char
            '"IsLetter(Char)"
            '()
            g$chr$17302$f3xia)))))
   (g$char-numeric?$17151$f3xia
     g$char-numeric?$17380$f3xia
     (case-lambda
       ((g$chr$17303$f3xia)
        (begin
          (if (not (g$char?$15973$f3xia g$chr$17303$f3xia))
            (g$assertion-violation$12459$f3xia
              'char-numeric?
              '"not a character"
              g$chr$17303$f3xia)
            (void))
          (clr-call-internal
            'System.Char
            '"IsDigit(Char)"
            '()
            g$chr$17303$f3xia)))))
   (g$char-whitespace?$17152$f3xia
     g$char-whitespace?$17381$f3xia
     (case-lambda
       ((g$chr$17304$f3xia)
        (begin
          (if (not (g$char?$15973$f3xia g$chr$17304$f3xia))
            (g$assertion-violation$12459$f3xia
              'char-whitespace?
              '"not a character"
              g$chr$17304$f3xia)
            (void))
          (clr-call-internal
            'System.Char
            '"IsWhiteSpace(Char)"
            '()
            g$chr$17304$f3xia)))))
   (g$char-upper-case?$17153$f3xia
     g$char-upper-case?$17382$f3xia
     (case-lambda
       ((g$chr$17305$f3xia)
        (begin
          (if (not (g$char?$15973$f3xia g$chr$17305$f3xia))
            (g$assertion-violation$12459$f3xia
              'char-upper-case?
              '"not a character"
              g$chr$17305$f3xia)
            (void))
          (clr-call-internal
            'System.Char
            '"IsUpper(Char)"
            '()
            g$chr$17305$f3xia)))))
   (g$char-lower-case?$17154$f3xia
     g$char-lower-case?$17383$f3xia
     (case-lambda
       ((g$chr$17306$f3xia)
        (begin
          (if (not (g$char?$15973$f3xia g$chr$17306$f3xia))
            (g$assertion-violation$12459$f3xia
              'char-lower-case?
              '"not a character"
              g$chr$17306$f3xia)
            (void))
          (clr-call-internal
            'System.Char
            '"IsLower(Char)"
            '()
            g$chr$17306$f3xia)))))
   (g$char-title-case?$17155$f3xia
     g$char-title-case?$17384$f3xia
     (case-lambda
       ((g$chr$17307$f3xia)
        (begin
          (if (not (g$char?$15973$f3xia g$chr$17307$f3xia))
            (g$assertion-violation$12459$f3xia
              'char-title-case?
              '"not a character"
              g$chr$17307$f3xia)
            (void))
          ((case-lambda
             ((g$t$17308$f3xia)
              (if (g$memv$15539$f3xia g$t$17308$f3xia '(#\I #\A))
                '#f
                ((case-lambda
                   (()
                    (begin
                      '#f
                      (eqv?
                        g$chr$17307$f3xia
                        (g$char-titlecase$17148$f3xia
                          g$chr$17307$f3xia)))))))))
           g$chr$17307$f3xia)))))
   (g$char-general-category$17156$f3xia
     g$char-general-category$17385$f3xia
     (case-lambda
       ((g$chr$17309$f3xia)
        (begin
          (if (not (g$char?$15973$f3xia g$chr$17309$f3xia))
            (g$assertion-violation$12459$f3xia
              'char-general-category
              '"not a character"
              g$chr$17309$f3xia)
            (void))
          ((case-lambda
             ((g$t$17310$f3xia)
              (if (eqv? g$t$17310$f3xia 'closepunctuation)
                'Pe
                (if (eqv? g$t$17310$f3xia 'connectorpunctuation)
                  'Pc
                  (if (eqv? g$t$17310$f3xia 'control)
                    'Cc
                    (if (eqv? g$t$17310$f3xia 'currencysymbol)
                      'Sc
                      (if (eqv? g$t$17310$f3xia 'dashpunctuation)
                        'Pd
                        (if (eqv? g$t$17310$f3xia 'decimaldigitnumber)
                          'Nd
                          (if (eqv? g$t$17310$f3xia 'enclosingmark)
                            'Me
                            (if (eqv?
                                  g$t$17310$f3xia
                                  'finalquotepunctuation)
                              'Pf
                              (if (eqv? g$t$17310$f3xia 'format)
                                'Cf
                                (if (eqv?
                                      g$t$17310$f3xia
                                      'initialquotepunctuation)
                                  'Pi
                                  (if (eqv?
                                        g$t$17310$f3xia
                                        'letternumber)
                                    'Nl
                                    (if (eqv?
                                          g$t$17310$f3xia
                                          'lineseparator)
                                      'Zl
                                      (if (eqv?
                                            g$t$17310$f3xia
                                            'lowercaseletter)
                                        'Ll
                                        (if (eqv?
                                              g$t$17310$f3xia
                                              'mathsymbol)
                                          'Sm
                                          (if (eqv?
                                                g$t$17310$f3xia
                                                'modifierletter)
                                            'Lm
                                            (if (eqv?
                                                  g$t$17310$f3xia
                                                  'modifiersymbol)
                                              'Sk
                                              (if (eqv?
                                                    g$t$17310$f3xia
                                                    'nonspacingmark)
                                                'Mn
                                                (if (eqv?
                                                      g$t$17310$f3xia
                                                      'openpunctuation)
                                                  'Ps
                                                  (if (eqv?
                                                        g$t$17310$f3xia
                                                        'otherletter)
                                                    'Lo
                                                    (if (eqv?
                                                          g$t$17310$f3xia
                                                          'othernotassigned)
                                                      'Cn
                                                      (if (eqv?
                                                            g$t$17310$f3xia
                                                            'othernumber)
                                                        'No
                                                        (if (eqv?
                                                              g$t$17310$f3xia
                                                              'otherpunctuation)
                                                          'Po
                                                          (if (eqv?
                                                                g$t$17310$f3xia
                                                                'othersymbol)
                                                            'So
                                                            (if (eqv?
                                                                  g$t$17310$f3xia
                                                                  'paragraphseparator)
                                                              'Zp
                                                              (if (eqv?
                                                                    g$t$17310$f3xia
                                                                    'privateuse)
                                                                'Co
                                                                (if (eqv?
                                                                      g$t$17310$f3xia
                                                                      'spaceseparator)
                                                                  'Zs
                                                                  (if (eqv?
                                                                        g$t$17310$f3xia
                                                                        'spacingcombiningmark)
                                                                    'Mc
                                                                    (if (eqv?
                                                                          g$t$17310$f3xia
                                                                          'surrogate)
                                                                      'Cs
                                                                      (if (eqv?
                                                                            g$t$17310$f3xia
                                                                            'titlecaseletter)
                                                                        'Lt
                                                                        (if (eqv?
                                                                              g$t$17310$f3xia
                                                                              'uppercaseletter)
                                                                          'Lu
                                                                          ((case-lambda
                                                                             (()
                                                                              (begin
                                                                                '#f
                                                                                '#f))))))))))))))))))))))))))))))))))))
           (clr-call-internal
             'System.Char
             '"GetUnicodeCategory(Char)"
             '()
             g$chr$17309$f3xia))))))
   (g$clr-string?$17157$f3xia
     g$clr-string?$17386$f3xia
     (case-lambda
       ((g$obj$17311$f3xia)
        (clr-is-internal 'System.String g$obj$17311$f3xia))))
   (g$->string$17158$f3xia
     g$->string$17387$f3xia
     (case-lambda
       ((g$str$17312$f3xia)
        (if (g$clr-string?$17157$f3xia g$str$17312$f3xia)
          g$str$17312$f3xia
          (clr-call-internal 'Object 'ToString g$str$17312$f3xia)))))
   (g$string-ci-compare$17178$f3xia
     g$string-ci-compare$17388$f3xia
     (case-lambda
       ((g$a$17313$f3xia g$b$17314$f3xia)
        (begin
          (if (not (g$string?$15972$f3xia g$a$17313$f3xia))
            (g$assertion-violation$12459$f3xia
              'string-ci-compare
              '"not a string"
              g$a$17313$f3xia)
            (void))
          (if (not (g$string?$15972$f3xia g$b$17314$f3xia))
            (g$assertion-violation$12459$f3xia
              'string-ci-compare
              '"not a string"
              g$b$17314$f3xia)
            (void))
          (clr-call-internal
            'CompareInfo
            '"Compare(String,String,CompareOptions)"
            g$compare-info$17144$f3xia
            (g$->string$17158$f3xia g$a$17313$f3xia)
            (g$->string$17158$f3xia g$b$17314$f3xia)
            'IgnoreCase)))))
   (g$string-ci=?$17217$f3xia
     g$string-ci=?$17389$f3xia
     (case-lambda
       ((g$a$17315$f3xia g$b$17316$f3xia . g$rest$17317$f3xia)
        (begin
          (if (not (g$string?$15972$f3xia g$a$17315$f3xia))
            (g$assertion-violation$12459$f3xia
              'string-ci=?
              '"not a string"
              g$a$17315$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$17318$f3xia)
               (begin
                 (if (not (g$string?$15972$f3xia g$x$17318$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'string-ci=?
                     '"not a string"
                     g$x$17318$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$17319$f3xia)
                     (begin
                       (set! g$a$17315$f3xia g$x$17318$f3xia)
                       g$r$17319$f3xia)))
                  (g$fx=?$15276$f3xia
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$17144$f3xia
                      (g$->string$17158$f3xia g$a$17315$f3xia)
                      (g$->string$17158$f3xia g$x$17318$f3xia)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$17316$f3xia g$rest$17317$f3xia))))))
   (g$string-ci<?$17218$f3xia
     g$string-ci<?$17390$f3xia
     (case-lambda
       ((g$a$17320$f3xia g$b$17321$f3xia . g$rest$17322$f3xia)
        (begin
          (if (not (g$string?$15972$f3xia g$a$17320$f3xia))
            (g$assertion-violation$12459$f3xia
              'string-ci<?
              '"not a string"
              g$a$17320$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$17323$f3xia)
               (begin
                 (if (not (g$string?$15972$f3xia g$x$17323$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'string-ci<?
                     '"not a string"
                     g$x$17323$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$17324$f3xia)
                     (begin
                       (set! g$a$17320$f3xia g$x$17323$f3xia)
                       g$r$17324$f3xia)))
                  (g$fx<?$15277$f3xia
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$17144$f3xia
                      (g$->string$17158$f3xia g$a$17320$f3xia)
                      (g$->string$17158$f3xia g$x$17323$f3xia)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$17321$f3xia g$rest$17322$f3xia))))))
   (g$string-ci>?$17219$f3xia
     g$string-ci>?$17391$f3xia
     (case-lambda
       ((g$a$17325$f3xia g$b$17326$f3xia . g$rest$17327$f3xia)
        (begin
          (if (not (g$string?$15972$f3xia g$a$17325$f3xia))
            (g$assertion-violation$12459$f3xia
              'string-ci>?
              '"not a string"
              g$a$17325$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$17328$f3xia)
               (begin
                 (if (not (g$string?$15972$f3xia g$x$17328$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'string-ci>?
                     '"not a string"
                     g$x$17328$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$17329$f3xia)
                     (begin
                       (set! g$a$17325$f3xia g$x$17328$f3xia)
                       g$r$17329$f3xia)))
                  (g$fx>?$15279$f3xia
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$17144$f3xia
                      (g$->string$17158$f3xia g$a$17325$f3xia)
                      (g$->string$17158$f3xia g$x$17328$f3xia)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$17326$f3xia g$rest$17327$f3xia))))))
   (g$string-ci<=?$17220$f3xia
     g$string-ci<=?$17392$f3xia
     (case-lambda
       ((g$a$17330$f3xia g$b$17331$f3xia . g$rest$17332$f3xia)
        (begin
          (if (not (g$string?$15972$f3xia g$a$17330$f3xia))
            (g$assertion-violation$12459$f3xia
              'string-ci<=?
              '"not a string"
              g$a$17330$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$17333$f3xia)
               (begin
                 (if (not (g$string?$15972$f3xia g$x$17333$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'string-ci<=?
                     '"not a string"
                     g$x$17333$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$17334$f3xia)
                     (begin
                       (set! g$a$17330$f3xia g$x$17333$f3xia)
                       g$r$17334$f3xia)))
                  (g$fx<=?$15278$f3xia
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$17144$f3xia
                      (g$->string$17158$f3xia g$a$17330$f3xia)
                      (g$->string$17158$f3xia g$x$17333$f3xia)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$17331$f3xia g$rest$17332$f3xia))))))
   (g$string-ci>=?$17221$f3xia
     g$string-ci>=?$17393$f3xia
     (case-lambda
       ((g$a$17335$f3xia g$b$17336$f3xia . g$rest$17337$f3xia)
        (begin
          (if (not (g$string?$15972$f3xia g$a$17335$f3xia))
            (g$assertion-violation$12459$f3xia
              'string-ci>=?
              '"not a string"
              g$a$17335$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$17338$f3xia)
               (begin
                 (if (not (g$string?$15972$f3xia g$x$17338$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'string-ci>=?
                     '"not a string"
                     g$x$17338$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$17339$f3xia)
                     (begin
                       (set! g$a$17335$f3xia g$x$17338$f3xia)
                       g$r$17339$f3xia)))
                  (g$fx>=?$15280$f3xia
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$17144$f3xia
                      (g$->string$17158$f3xia g$a$17335$f3xia)
                      (g$->string$17158$f3xia g$x$17338$f3xia)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$17336$f3xia g$rest$17337$f3xia))))))
   (g$string-titlecase$17222$f3xia
     g$string-titlecase$17394$f3xia
     (case-lambda
       ((g$str$17340$f3xia)
        (begin
          (if (not (g$string?$15972$f3xia g$str$17340$f3xia))
            (g$assertion-violation$12459$f3xia
              'string-titlecase
              '"not a string"
              g$str$17340$f3xia)
            (void))
          (clr-call-internal
            'TextInfo
            'ToTitleCase
            g$text-info$17145$f3xia
            (string-downcase g$str$17340$f3xia))))))
   (g$string-foldcase$17223$f3xia
     g$string-foldcase$17395$f3xia
     (case-lambda
       ((g$str$17341$f3xia)
        (begin
          (if (not (g$string?$15972$f3xia g$str$17341$f3xia))
            (g$assertion-violation$12459$f3xia
              'string-foldcase
              '"not a string"
              g$str$17341$f3xia)
            (void))
          (clr-call-internal
            'System.String
            'ToLowerInvariant
            (g$string-upcase$17267$f3xia g$str$17341$f3xia))))))
   (g$char-ci=?$17262$f3xia
     g$char-ci=?$17396$f3xia
     (case-lambda
       ((g$a$17342$f3xia g$b$17343$f3xia . g$rest$17344$f3xia)
        (begin
          (if (not (g$char?$15973$f3xia g$a$17342$f3xia))
            (g$assertion-violation$12459$f3xia
              'char-ci=?
              '"not a char"
              g$a$17342$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$17345$f3xia)
               (begin
                 (if (not (g$char?$15973$f3xia g$x$17345$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'char-ci=?
                     '"not a char"
                     g$x$17345$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$17346$f3xia)
                     (begin
                       (set! g$a$17342$f3xia g$x$17345$f3xia)
                       g$r$17346$f3xia)))
                  (g$fx=?$15276$f3xia
                    (g$char->integer$15982$f3xia
                      (g$char-upcase$17146$f3xia g$a$17342$f3xia))
                    (g$char->integer$15982$f3xia
                      (g$char-upcase$17146$f3xia g$x$17345$f3xia)))))))
            (cons g$b$17343$f3xia g$rest$17344$f3xia))))))
   (g$char-ci<?$17263$f3xia
     g$char-ci<?$17397$f3xia
     (case-lambda
       ((g$a$17347$f3xia g$b$17348$f3xia . g$rest$17349$f3xia)
        (begin
          (if (not (g$char?$15973$f3xia g$a$17347$f3xia))
            (g$assertion-violation$12459$f3xia
              'char-ci<?
              '"not a char"
              g$a$17347$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$17350$f3xia)
               (begin
                 (if (not (g$char?$15973$f3xia g$x$17350$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'char-ci<?
                     '"not a char"
                     g$x$17350$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$17351$f3xia)
                     (begin
                       (set! g$a$17347$f3xia g$x$17350$f3xia)
                       g$r$17351$f3xia)))
                  (g$fx<?$15277$f3xia
                    (g$char->integer$15982$f3xia
                      (g$char-upcase$17146$f3xia g$a$17347$f3xia))
                    (g$char->integer$15982$f3xia
                      (g$char-upcase$17146$f3xia g$x$17350$f3xia)))))))
            (cons g$b$17348$f3xia g$rest$17349$f3xia))))))
   (g$char-ci>?$17264$f3xia
     g$char-ci>?$17398$f3xia
     (case-lambda
       ((g$a$17352$f3xia g$b$17353$f3xia . g$rest$17354$f3xia)
        (begin
          (if (not (g$char?$15973$f3xia g$a$17352$f3xia))
            (g$assertion-violation$12459$f3xia
              'char-ci>?
              '"not a char"
              g$a$17352$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$17355$f3xia)
               (begin
                 (if (not (g$char?$15973$f3xia g$x$17355$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'char-ci>?
                     '"not a char"
                     g$x$17355$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$17356$f3xia)
                     (begin
                       (set! g$a$17352$f3xia g$x$17355$f3xia)
                       g$r$17356$f3xia)))
                  (g$fx>?$15279$f3xia
                    (g$char->integer$15982$f3xia
                      (g$char-upcase$17146$f3xia g$a$17352$f3xia))
                    (g$char->integer$15982$f3xia
                      (g$char-upcase$17146$f3xia g$x$17355$f3xia)))))))
            (cons g$b$17353$f3xia g$rest$17354$f3xia))))))
   (g$char-ci<=?$17265$f3xia
     g$char-ci<=?$17399$f3xia
     (case-lambda
       ((g$a$17357$f3xia g$b$17358$f3xia . g$rest$17359$f3xia)
        (begin
          (if (not (g$char?$15973$f3xia g$a$17357$f3xia))
            (g$assertion-violation$12459$f3xia
              'char-ci<=?
              '"not a char"
              g$a$17357$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$17360$f3xia)
               (begin
                 (if (not (g$char?$15973$f3xia g$x$17360$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'char-ci<=?
                     '"not a char"
                     g$x$17360$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$17361$f3xia)
                     (begin
                       (set! g$a$17357$f3xia g$x$17360$f3xia)
                       g$r$17361$f3xia)))
                  (g$fx<=?$15278$f3xia
                    (g$char->integer$15982$f3xia
                      (g$char-upcase$17146$f3xia g$a$17357$f3xia))
                    (g$char->integer$15982$f3xia
                      (g$char-upcase$17146$f3xia g$x$17360$f3xia)))))))
            (cons g$b$17358$f3xia g$rest$17359$f3xia))))))
   (g$char-ci>=?$17266$f3xia
     g$char-ci>=?$17400$f3xia
     (case-lambda
       ((g$a$17362$f3xia g$b$17363$f3xia . g$rest$17364$f3xia)
        (begin
          (if (not (g$char?$15973$f3xia g$a$17362$f3xia))
            (g$assertion-violation$12459$f3xia
              'char-ci>=?
              '"not a char"
              g$a$17362$f3xia)
            (void))
          (g$for-all$15548$f3xia
            (case-lambda
              ((g$x$17365$f3xia)
               (begin
                 (if (not (g$char?$15973$f3xia g$x$17365$f3xia))
                   (g$assertion-violation$12459$f3xia
                     'char-ci>=?
                     '"not a char"
                     g$x$17365$f3xia)
                   (void))
                 ((case-lambda
                    ((g$r$17366$f3xia)
                     (begin
                       (set! g$a$17362$f3xia g$x$17365$f3xia)
                       g$r$17366$f3xia)))
                  (g$fx>=?$15280$f3xia
                    (g$char->integer$15982$f3xia
                      (g$char-upcase$17146$f3xia g$a$17362$f3xia))
                    (g$char->integer$15982$f3xia
                      (g$char-upcase$17146$f3xia g$x$17365$f3xia)))))))
            (cons g$b$17363$f3xia g$rest$17364$f3xia))))))
   (g$string-upcase$17267$f3xia
     g$string-upcase$17401$f3xia
     (case-lambda
       ((g$str$17367$f3xia)
        (if (g$string?$15972$f3xia g$str$17367$f3xia)
          (clr-call-internal
            'System.String
            'Replace
            (clr-call-internal
              'System.String
              'ToUpper
              (g$->string$17158$f3xia g$str$17367$f3xia))
            '"ß"
            '"SS")
          (g$assertion-violation$12459$f3xia
            'string-upcase
            '"not a string"
            g$str$17367$f3xia)))))
   (g$string-normalize-nfc$17294$f3xia
     g$string-normalize-nfc$17402$f3xia
     (case-lambda
       ((g$s$17368$f3xia)
        (if (g$string?$15972$f3xia g$s$17368$f3xia)
          (clr-call-internal
            'System.String
            'Normalize
            (g$->string$17158$f3xia g$s$17368$f3xia)
            'formc)
          (g$assertion-violation$12459$f3xia
            'string-normalize
            '"not a string"
            g$s$17368$f3xia)))))
   (g$string-normalize-nfd$17295$f3xia
     g$string-normalize-nfd$17403$f3xia
     (case-lambda
       ((g$s$17369$f3xia)
        (if (g$string?$15972$f3xia g$s$17369$f3xia)
          (clr-call-internal
            'System.String
            'Normalize
            (g$->string$17158$f3xia g$s$17369$f3xia)
            'formd)
          (g$assertion-violation$12459$f3xia
            'string-normalize
            '"not a string"
            g$s$17369$f3xia)))))
   (g$string-normalize-nfkc$17296$f3xia
     g$string-normalize-nfkc$17404$f3xia
     (case-lambda
       ((g$s$17370$f3xia)
        (if (g$string?$15972$f3xia g$s$17370$f3xia)
          (clr-call-internal
            'System.String
            'Normalize
            (g$->string$17158$f3xia g$s$17370$f3xia)
            'formkc)
          (g$assertion-violation$12459$f3xia
            'string-normalize
            '"not a string"
            g$s$17370$f3xia)))))
   (g$string-normalize-nfkd$17297$f3xia
     g$string-normalize-nfkd$17405$f3xia
     (case-lambda
       ((g$s$17371$f3xia)
        (if (g$string?$15972$f3xia g$s$17371$f3xia)
          (clr-call-internal
            'System.String
            'Normalize
            (g$->string$17158$f3xia g$s$17371$f3xia)
            'formkd)
          (g$assertion-violation$12459$f3xia
            'string-normalize
            '"not a string"
            g$s$17371$f3xia))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bignum?$17406$f3xia
     g$bignum?$17494$f3xia
     (case-lambda
       ((g$obj$17425$f3xia)
        (clr-is-internal
          'Microsoft.Scripting.Math.BigInteger
          g$obj$17425$f3xia))))
   (g$->bignum$17407$f3xia
     g$->bignum$17495$f3xia
     (case-lambda
       ((g$ei$17426$f3xia)
        (if (g$bignum?$17406$f3xia g$ei$17426$f3xia)
          g$ei$17426$f3xia
          (if (g$fixnum?$15979$f3xia g$ei$17426$f3xia)
            (clr-call-internal
              'Microsoft.Scripting.Math.BigInteger
              '"Create(System.Int32)"
              '()
              g$ei$17426$f3xia)
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$12459$f3xia
                    '#f
                    '"not a exact integer"
                    g$ei$17426$f3xia))))))))))
   (g$bitwise-not$17408$f3xia
     g$bitwise-not$17496$f3xia
     (case-lambda
       ((g$ei$17427$f3xia)
        (g$exact$17033$f3xia
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_OnesComplement
            '()
            (g$->bignum$17407$f3xia g$ei$17427$f3xia))))))
   (g$bitwise-and$17409$f3xia
     g$bitwise-and$17497$f3xia
     (case-lambda
       (() '-1)
       ((g$ei$17428$f3xia) (g$->bignum$17407$f3xia g$ei$17428$f3xia))
       ((g$ei1$17429$f3xia g$ei2$17430$f3xia)
        (g$exact$17033$f3xia
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_BitwiseAnd
            '()
            (g$->bignum$17407$f3xia g$ei1$17429$f3xia)
            (g$->bignum$17407$f3xia g$ei2$17430$f3xia))))
       ((g$ei1$17431$f3xia g$ei2$17432$f3xia . g$rest$17433$f3xia)
        (g$fold-left$15557$f3xia
          g$bitwise-and$17409$f3xia
          (g$->bignum$17407$f3xia g$ei1$17431$f3xia)
          (cons g$ei2$17432$f3xia g$rest$17433$f3xia)))))
   (g$bitwise-ior$17410$f3xia
     g$bitwise-ior$17498$f3xia
     (case-lambda
       (() '0)
       ((g$ei$17434$f3xia) (g$->bignum$17407$f3xia g$ei$17434$f3xia))
       ((g$ei1$17435$f3xia g$ei2$17436$f3xia)
        (g$exact$17033$f3xia
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_BitwiseOr
            '()
            (g$->bignum$17407$f3xia g$ei1$17435$f3xia)
            (g$->bignum$17407$f3xia g$ei2$17436$f3xia))))
       ((g$ei1$17437$f3xia g$ei2$17438$f3xia . g$rest$17439$f3xia)
        (g$fold-left$15557$f3xia
          g$bitwise-ior$17410$f3xia
          (g$->bignum$17407$f3xia g$ei1$17437$f3xia)
          (cons g$ei2$17438$f3xia g$rest$17439$f3xia)))))
   (g$bitwise-xor$17411$f3xia
     g$bitwise-xor$17499$f3xia
     (case-lambda
       (() '0)
       ((g$ei$17440$f3xia) (g$->bignum$17407$f3xia g$ei$17440$f3xia))
       ((g$ei1$17441$f3xia g$ei2$17442$f3xia)
        (g$exact$17033$f3xia
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_ExclusiveOr
            '()
            (g$->bignum$17407$f3xia g$ei1$17441$f3xia)
            (g$->bignum$17407$f3xia g$ei2$17442$f3xia))))
       ((g$ei1$17443$f3xia g$ei2$17444$f3xia . g$rest$17445$f3xia)
        (g$fold-left$15557$f3xia
          g$bitwise-xor$17411$f3xia
          (g$->bignum$17407$f3xia g$ei1$17443$f3xia)
          (cons g$ei2$17444$f3xia g$rest$17445$f3xia)))))
   (g$bitwise-bit-count$17412$f3xia
     g$bitwise-bit-count$17500$f3xia
     (case-lambda
       ((g$ei$17446$f3xia)
        (if (g$positive?$17030$f3xia g$ei$17446$f3xia)
          ((letrec ((g$f$17447$f3xia
                      (case-lambda
                        ((g$c$17448$f3xia g$ei$17449$f3xia)
                         (if (g$positive?$17030$f3xia g$ei$17449$f3xia)
                           (g$f$17447$f3xia
                             (+ g$c$17448$f3xia
                                (g$bitwise-and$17409$f3xia
                                  g$ei$17449$f3xia
                                  '1))
                             (g$bitwise-arithmetic-shift-right$17422$f3xia
                               g$ei$17449$f3xia
                               '1))
                           g$c$17448$f3xia)))))
             g$f$17447$f3xia)
           '0
           (g$->bignum$17407$f3xia g$ei$17446$f3xia))
          (g$bitwise-not$17408$f3xia
            (g$bitwise-bit-count$17412$f3xia
              (g$bitwise-not$17408$f3xia g$ei$17446$f3xia)))))))
   (g$bitwise-length$17413$f3xia
     g$bitwise-length$17501$f3xia
     (case-lambda
       ((g$ei$17450$f3xia)
        ((case-lambda
           ((g$ei$17451$f3xia)
            (if (clr-call-internal
                  'Microsoft.Scripting.Math.BigInteger
                  'op_LessThan
                  '()
                  g$ei$17451$f3xia
                  (g$->bignum$17407$f3xia '0))
              (g$bitwise-length$17413$f3xia
                (g$bitwise-not$17408$f3xia g$ei$17451$f3xia))
              (clr-call-internal
                'Microsoft.Scripting.Math.BigInteger
                'get_BitLength
                g$ei$17451$f3xia))))
         (g$->bignum$17407$f3xia g$ei$17450$f3xia)))))
   (g$bitwise-first-bit-set$17414$f3xia
     g$bitwise-first-bit-set$17502$f3xia
     (case-lambda
       ((g$ei$17452$f3xia)
        ((case-lambda
           ((g$ei$17453$f3xia)
            (if (g$zero?$17029$f3xia g$ei$17453$f3xia)
              '-1
              ((letrec ((g$f$17454$f3xia
                          (case-lambda
                            ((g$c$17455$f3xia g$ei$17456$f3xia)
                             (if (g$=$17038$f3xia
                                   '1
                                   (g$bitwise-and$17409$f3xia
                                     g$ei$17456$f3xia
                                     '1))
                               g$c$17455$f3xia
                               (g$f$17454$f3xia
                                 (+ g$c$17455$f3xia '1)
                                 (g$bitwise-arithmetic-shift-right$17422$f3xia
                                   g$ei$17456$f3xia
                                   '1)))))))
                 g$f$17454$f3xia)
               '0
               g$ei$17453$f3xia))))
         (g$->bignum$17407$f3xia g$ei$17452$f3xia)))))
   (g$bitwise-bit-set?$17415$f3xia
     g$bitwise-bit-set?$17503$f3xia
     (case-lambda
       ((g$ei$17457$f3xia g$k$17458$f3xia)
        ((case-lambda
           ((g$ei$17459$f3xia g$k$17460$f3xia)
            (begin
              (if (g$negative?$17031$f3xia g$k$17460$f3xia)
                (g$assertion-violation$12459$f3xia
                  'bitwise-bit-set?
                  '"cannot be negative"
                  g$k$17460$f3xia)
                (void))
              (if (g$=$17038$f3xia '-1 g$ei$17459$f3xia)
                '#t
                ((case-lambda
                   (()
                    (begin
                      '#f
                      (g$=$17038$f3xia
                        '1
                        (g$bitwise-and$17409$f3xia
                          '1
                          (g$bitwise-arithmetic-shift-right$17422$f3xia
                            g$ei$17459$f3xia
                            g$k$17460$f3xia)))))))))))
         (g$->bignum$17407$f3xia g$ei$17457$f3xia)
         (g$->bignum$17407$f3xia g$k$17458$f3xia)))))
   (g$bitwise-if$17416$f3xia
     g$bitwise-if$17504$f3xia
     (case-lambda
       ((g$ei1$17461$f3xia g$ei2$17462$f3xia g$ei3$17463$f3xia)
        (g$bitwise-ior$17410$f3xia
          (g$bitwise-and$17409$f3xia
            g$ei1$17461$f3xia
            g$ei2$17462$f3xia)
          (g$bitwise-and$17409$f3xia
            (g$bitwise-not$17408$f3xia g$ei1$17461$f3xia)
            g$ei3$17463$f3xia)))))
   (g$bitwise-copy-bit$17417$f3xia
     g$bitwise-copy-bit$17505$f3xia
     (case-lambda
       ((g$ei1$17464$f3xia g$ei2$17465$f3xia g$ei3$17466$f3xia)
        (g$bitwise-if$17416$f3xia
          (g$bitwise-arithmetic-shift-left$17421$f3xia
            '1
            g$ei2$17465$f3xia)
          (g$bitwise-arithmetic-shift-left$17421$f3xia
            g$ei3$17466$f3xia
            g$ei2$17465$f3xia)
          g$ei1$17464$f3xia))))
   (g$bitwise-bit-field$17418$f3xia
     g$bitwise-bit-field$17506$f3xia
     (case-lambda
       ((g$ei1$17467$f3xia g$ei2$17468$f3xia g$ei3$17469$f3xia)
        (g$bitwise-arithmetic-shift-right$17422$f3xia
          (g$bitwise-and$17409$f3xia
            g$ei1$17467$f3xia
            (g$bitwise-not$17408$f3xia
              (g$bitwise-arithmetic-shift-left$17421$f3xia
                '-1
                g$ei3$17469$f3xia)))
          g$ei2$17468$f3xia))))
   (g$bitwise-copy-bit-field$17419$f3xia
     g$bitwise-copy-bit-field$17507$f3xia
     (case-lambda
       ((g$to$17470$f3xia
          g$start$17471$f3xia
          g$end$17472$f3xia
          g$from$17473$f3xia)
        (g$bitwise-if$17416$f3xia
          (g$bitwise-and$17409$f3xia
            (g$bitwise-arithmetic-shift-left$17421$f3xia
              '-1
              g$start$17471$f3xia)
            (g$bitwise-not$17408$f3xia
              (g$bitwise-arithmetic-shift-left$17421$f3xia
                '-1
                g$end$17472$f3xia)))
          (g$bitwise-arithmetic-shift-left$17421$f3xia
            g$from$17473$f3xia
            g$start$17471$f3xia)
          g$to$17470$f3xia))))
   (g$bitwise-arithmetic-shift$17420$f3xia
     g$bitwise-arithmetic-shift$17508$f3xia
     (case-lambda
       ((g$ei$17474$f3xia g$k$17475$f3xia)
        (g$exact$17033$f3xia
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'LeftShift
            '()
            (g$->bignum$17407$f3xia g$ei$17474$f3xia)
            g$k$17475$f3xia)))))
   (g$bitwise-arithmetic-shift-left$17421$f3xia
     g$bitwise-arithmetic-shift-left$17509$f3xia
     (case-lambda
       ((g$ei1$17476$f3xia g$ei2$17477$f3xia)
        (g$bitwise-arithmetic-shift$17420$f3xia
          g$ei1$17476$f3xia
          g$ei2$17477$f3xia))))
   (g$bitwise-arithmetic-shift-right$17422$f3xia
     g$bitwise-arithmetic-shift-right$17510$f3xia
     (case-lambda
       ((g$ei1$17478$f3xia g$ei2$17479$f3xia)
        (g$bitwise-arithmetic-shift$17420$f3xia
          g$ei1$17478$f3xia
          (- g$ei2$17479$f3xia)))))
   (g$bitwise-rotate-bit-field$17423$f3xia
     g$bitwise-rotate-bit-field$17511$f3xia
     (case-lambda
       ((g$n$17480$f3xia
          g$start$17481$f3xia
          g$end$17482$f3xia
          g$count$17483$f3xia)
        ((case-lambda
           ((g$width$17484$f3xia)
            (if (g$positive?$17030$f3xia g$width$17484$f3xia)
              ((case-lambda
                 ((g$count$17485$f3xia g$field$17486$f3xia)
                  (g$bitwise-copy-bit-field$17419$f3xia
                    g$n$17480$f3xia
                    g$start$17481$f3xia
                    g$end$17482$f3xia
                    (g$bitwise-ior$17410$f3xia
                      (g$bitwise-arithmetic-shift-left$17421$f3xia
                        g$field$17486$f3xia
                        g$count$17485$f3xia)
                      (g$bitwise-arithmetic-shift-right$17422$f3xia
                        g$field$17486$f3xia
                        (- g$width$17484$f3xia g$count$17485$f3xia))))))
               (g$mod$15999$f3xia
                 g$count$17483$f3xia
                 g$width$17484$f3xia)
               (g$bitwise-bit-field$17418$f3xia
                 g$n$17480$f3xia
                 g$start$17481$f3xia
                 g$end$17482$f3xia))
              g$n$17480$f3xia)))
         (- g$end$17482$f3xia g$start$17481$f3xia)))))
   (g$bitwise-reverse-bit-field$17424$f3xia
     g$bitwise-reverse-bit-field$17512$f3xia
     (case-lambda
       ((g$x1$17487$f3xia g$start$17488$f3xia g$end$17489$f3xia)
        (begin
          (if (not (g$<$17039$f3xia
                     g$start$17488$f3xia
                     g$end$17489$f3xia))
            (g$assertion-violation$12459$f3xia
              'bitwise-reverse-bit-field
              '"start must be less than end"
              g$start$17488$f3xia
              g$end$17489$f3xia)
            (void))
          (letrec ((g$loop$17490$f3xia
                     (case-lambda
                       ((g$width$17491$f3xia
                          g$bits$17492$f3xia
                          g$rbits$17493$f3xia)
                        (if (g$=$17038$f3xia g$width$17491$f3xia '0)
                          (begin
                            (if '#f '#f (void))
                            (g$bitwise-copy-bit-field$17419$f3xia
                              g$x1$17487$f3xia
                              g$start$17488$f3xia
                              g$end$17489$f3xia
                              g$rbits$17493$f3xia))
                          (g$loop$17490$f3xia
                            (- g$width$17491$f3xia '1)
                            (g$bitwise-arithmetic-shift-right$17422$f3xia
                              g$bits$17492$f3xia
                              '1)
                            (g$bitwise-ior$17410$f3xia
                              (g$bitwise-arithmetic-shift-left$17421$f3xia
                                g$rbits$17493$f3xia
                                '1)
                              (g$bitwise-and$17409$f3xia
                                g$bits$17492$f3xia
                                '1))))))))
            (g$loop$17490$f3xia
              (- g$end$17489$f3xia g$start$17488$f3xia)
              (g$bitwise-bit-field$17418$f3xia
                g$x1$17487$f3xia
                g$start$17488$f3xia
                g$end$17489$f3xia)
              '0)))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$fl+$17691$f3xia
     g$fl+$19006$f3xia
     (case-lambda
       (() '0.0)
       ((g$x1$17814$f3xia g$x2$17815$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$x1$17814$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl+
              '"not a flonum"
              g$x1$17814$f3xia)
            (void))
          (if (not (g$flonum?$15980$f3xia g$x2$17815$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl+
              '"not a flonum"
              g$x2$17815$f3xia)
            (void))
          ($fl+ g$x1$17814$f3xia g$x2$17815$f3xia)))
       (g$args$17816$f3xia
        (g$fold-left$15557$f3xia
          g$fl+$17691$f3xia
          (g$fl+$17691$f3xia)
          g$args$17816$f3xia))))
   (g$fl*$17692$f3xia
     g$fl*$19007$f3xia
     (case-lambda
       (() '1.0)
       ((g$x1$17817$f3xia g$x2$17818$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$x1$17817$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl*
              '"not a flonum"
              g$x1$17817$f3xia)
            (void))
          (if (not (g$flonum?$15980$f3xia g$x2$17818$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl*
              '"not a flonum"
              g$x2$17818$f3xia)
            (void))
          ($fl* g$x1$17817$f3xia g$x2$17818$f3xia)))
       (g$args$17819$f3xia
        (g$fold-left$15557$f3xia
          g$fl*$17692$f3xia
          (g$fl*$17692$f3xia)
          g$args$17819$f3xia))))
   (g$fldenominator$17693$f3xia
     g$fldenominator$19008$f3xia
     (case-lambda
       ((g$fl$17820$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$17820$f3xia))
            (g$assertion-violation$12459$f3xia
              'fldenominator
              '"not a flonum"
              g$fl$17820$f3xia)
            (void))
          ((case-lambda
             (()
              (if ((case-lambda
                     ((g$t$17821$f3xia)
                      (if g$t$17821$f3xia
                        g$t$17821$f3xia
                        (begin
                          '#f
                          (g$flinfinite?$17774$f3xia
                            g$fl$17820$f3xia)))))
                   (g$flnan?$17775$f3xia g$fl$17820$f3xia))
                '1.0
                (g$real->flonum$17014$f3xia
                  (g$denominator$17049$f3xia g$fl$17820$f3xia))))))))))
   (g$flnumerator$17694$f3xia
     g$flnumerator$19009$f3xia
     (case-lambda
       ((g$fl$17822$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$17822$f3xia))
            (g$assertion-violation$12459$f3xia
              'flnumerator
              '"not a flonum"
              g$fl$17822$f3xia)
            (void))
          ((case-lambda
             (()
              (if ((case-lambda
                     ((g$t$17823$f3xia)
                      (if g$t$17823$f3xia
                        g$t$17823$f3xia
                        (begin
                          '#f
                          (g$flinfinite?$17774$f3xia
                            g$fl$17822$f3xia)))))
                   (g$flnan?$17775$f3xia g$fl$17822$f3xia))
                g$fl$17822$f3xia
                (g$real->flonum$17014$f3xia
                  (g$numerator$17048$f3xia g$fl$17822$f3xia))))))))))
   (g$fl-$17695$f3xia
     g$fl-$19010$f3xia
     (case-lambda
       ((g$x1$17824$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$x1$17824$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl-
              '"not a flonum"
              g$x1$17824$f3xia)
            (void))
          ($fl- g$x1$17824$f3xia)))
       ((g$x1$17825$f3xia g$x2$17826$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$x1$17825$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl-
              '"not a flonum"
              g$x1$17825$f3xia)
            (void))
          (if (not (g$flonum?$15980$f3xia g$x2$17826$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl-
              '"not a flonum"
              g$x2$17826$f3xia)
            (void))
          ($fl- g$x1$17825$f3xia g$x2$17826$f3xia)))
       ((g$x1$17827$f3xia g$x2$17828$f3xia . g$rest$17829$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$x1$17827$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl-
              '"not a flonum"
              g$x1$17827$f3xia)
            (void))
          (g$fold-left$15557$f3xia
            g$fl-$17695$f3xia
            g$x1$17827$f3xia
            (cons g$x2$17828$f3xia g$rest$17829$f3xia))))))
   (g$fl/$17696$f3xia
     g$fl/$19011$f3xia
     (case-lambda
       ((g$x1$17830$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$x1$17830$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl/
              '"not a flonum"
              g$x1$17830$f3xia)
            (void))
          ($fl/ '1.0 g$x1$17830$f3xia)))
       ((g$x1$17831$f3xia g$x2$17832$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$x1$17831$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl/
              '"not a flonum"
              g$x1$17831$f3xia)
            (void))
          (if (not (g$flonum?$15980$f3xia g$x2$17832$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl/
              '"not a flonum"
              g$x2$17832$f3xia)
            (void))
          ($fl/ g$x1$17831$f3xia g$x2$17832$f3xia)))
       ((g$x1$17833$f3xia g$x2$17834$f3xia . g$rest$17835$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$x1$17833$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl/
              '"not a flonum"
              g$x1$17833$f3xia)
            (void))
          (g$fold-left$15557$f3xia
            g$fl/$17696$f3xia
            g$x1$17833$f3xia
            (cons g$x2$17834$f3xia g$rest$17835$f3xia))))))
   (g$fl=?$17697$f3xia
     g$fl=?$19012$f3xia
     (case-lambda
       ((g$x1$17836$f3xia g$x2$17837$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$x1$17836$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl=?
              '"not a flonum"
              g$x1$17836$f3xia)
            (void))
          (if (not (g$flonum?$15980$f3xia g$x2$17837$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl=?
              '"not a flonum"
              g$x2$17837$f3xia)
            (void))
          ($fl=? g$x1$17836$f3xia g$x2$17837$f3xia)))
       ((g$x1$17838$f3xia g$x2$17839$f3xia . g$rest$17840$f3xia)
        ((letrec ((g$f$17841$f3xia
                    (case-lambda
                      ((g$a$17842$f3xia g$b$17843$f3xia)
                       (if (null? g$b$17843$f3xia)
                         '#t
                         (if (g$fl=?$17697$f3xia
                               g$a$17842$f3xia
                               ($car g$b$17843$f3xia))
                           (g$f$17841$f3xia
                             ($car g$b$17843$f3xia)
                             ($cdr g$b$17843$f3xia))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$17841$f3xia)
         g$x1$17838$f3xia
         (cons g$x2$17839$f3xia g$rest$17840$f3xia)))))
   (g$fl<?$17698$f3xia
     g$fl<?$19013$f3xia
     (case-lambda
       ((g$x1$17844$f3xia g$x2$17845$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$x1$17844$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl<?
              '"not a flonum"
              g$x1$17844$f3xia)
            (void))
          (if (not (g$flonum?$15980$f3xia g$x2$17845$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl<?
              '"not a flonum"
              g$x2$17845$f3xia)
            (void))
          ($fl<? g$x1$17844$f3xia g$x2$17845$f3xia)))
       ((g$x1$17846$f3xia g$x2$17847$f3xia . g$rest$17848$f3xia)
        ((letrec ((g$f$17849$f3xia
                    (case-lambda
                      ((g$a$17850$f3xia g$b$17851$f3xia)
                       (if (null? g$b$17851$f3xia)
                         '#t
                         (if (g$fl<?$17698$f3xia
                               g$a$17850$f3xia
                               ($car g$b$17851$f3xia))
                           (g$f$17849$f3xia
                             ($car g$b$17851$f3xia)
                             ($cdr g$b$17851$f3xia))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$17849$f3xia)
         g$x1$17846$f3xia
         (cons g$x2$17847$f3xia g$rest$17848$f3xia)))))
   (g$fl<=?$17699$f3xia
     g$fl<=?$19014$f3xia
     (case-lambda
       ((g$x1$17852$f3xia g$x2$17853$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$x1$17852$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl<=?
              '"not a flonum"
              g$x1$17852$f3xia)
            (void))
          (if (not (g$flonum?$15980$f3xia g$x2$17853$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl<=?
              '"not a flonum"
              g$x2$17853$f3xia)
            (void))
          ($fl<=? g$x1$17852$f3xia g$x2$17853$f3xia)))
       ((g$x1$17854$f3xia g$x2$17855$f3xia . g$rest$17856$f3xia)
        ((letrec ((g$f$17857$f3xia
                    (case-lambda
                      ((g$a$17858$f3xia g$b$17859$f3xia)
                       (if (null? g$b$17859$f3xia)
                         '#t
                         (if (g$fl<=?$17699$f3xia
                               g$a$17858$f3xia
                               ($car g$b$17859$f3xia))
                           (g$f$17857$f3xia
                             ($car g$b$17859$f3xia)
                             ($cdr g$b$17859$f3xia))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$17857$f3xia)
         g$x1$17854$f3xia
         (cons g$x2$17855$f3xia g$rest$17856$f3xia)))))
   (g$fl>?$17700$f3xia
     g$fl>?$19015$f3xia
     (case-lambda
       ((g$x1$17860$f3xia g$x2$17861$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$x1$17860$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl>?
              '"not a flonum"
              g$x1$17860$f3xia)
            (void))
          (if (not (g$flonum?$15980$f3xia g$x2$17861$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl>?
              '"not a flonum"
              g$x2$17861$f3xia)
            (void))
          ($fl>? g$x1$17860$f3xia g$x2$17861$f3xia)))
       ((g$x1$17862$f3xia g$x2$17863$f3xia . g$rest$17864$f3xia)
        ((letrec ((g$f$17865$f3xia
                    (case-lambda
                      ((g$a$17866$f3xia g$b$17867$f3xia)
                       (if (null? g$b$17867$f3xia)
                         '#t
                         (if (g$fl>?$17700$f3xia
                               g$a$17866$f3xia
                               ($car g$b$17867$f3xia))
                           (g$f$17865$f3xia
                             ($car g$b$17867$f3xia)
                             ($cdr g$b$17867$f3xia))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$17865$f3xia)
         g$x1$17862$f3xia
         (cons g$x2$17863$f3xia g$rest$17864$f3xia)))))
   (g$fl>=?$17701$f3xia
     g$fl>=?$19016$f3xia
     (case-lambda
       ((g$x1$17868$f3xia g$x2$17869$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$x1$17868$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl>=?
              '"not a flonum"
              g$x1$17868$f3xia)
            (void))
          (if (not (g$flonum?$15980$f3xia g$x2$17869$f3xia))
            (g$assertion-violation$12459$f3xia
              'fl>=?
              '"not a flonum"
              g$x2$17869$f3xia)
            (void))
          ($fl>=? g$x1$17868$f3xia g$x2$17869$f3xia)))
       ((g$x1$17870$f3xia g$x2$17871$f3xia . g$rest$17872$f3xia)
        ((letrec ((g$f$17873$f3xia
                    (case-lambda
                      ((g$a$17874$f3xia g$b$17875$f3xia)
                       (if (null? g$b$17875$f3xia)
                         '#t
                         (if (g$fl>=?$17701$f3xia
                               g$a$17874$f3xia
                               ($car g$b$17875$f3xia))
                           (g$f$17873$f3xia
                             ($car g$b$17875$f3xia)
                             ($cdr g$b$17875$f3xia))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$17873$f3xia)
         g$x1$17870$f3xia
         (cons g$x2$17871$f3xia g$rest$17872$f3xia)))))
   (g$residual-fldiv0*$17717$f3xia
     g$residual-fldiv0*$19017$f3xia
     (case-lambda
       ((g$x1$17896$f3xia g$x2$17897$f3xia)
        ((case-lambda
           ((g$d$17898$f3xia)
            ((case-lambda
               ((g$m$17899$f3xia)
                (if ($fl<?
                      g$m$17899$f3xia
                      (g$magnitude$17046$f3xia
                        ($fl/ g$x2$17897$f3xia '2.0)))
                  g$d$17898$f3xia
                  (if ($fl<? '0.0 g$x2$17897$f3xia)
                    ($fl+ g$d$17898$f3xia '1.0)
                    ((case-lambda
                       (()
                        (begin '#f ($fl- g$d$17898$f3xia '1.0)))))))))
             ($fl-
               g$x1$17896$f3xia
               ($fl* g$d$17898$f3xia g$x2$17897$f3xia)))))
         ((case-lambda
            ((g$x1$17920$f3xia g$x2$17921$f3xia)
             (if ($fl<? '0.0 g$x2$17921$f3xia)
               ((case-lambda
                  ((g$fl$17942$f3xia)
                   (clr-call-internal
                     'system.math
                     '"floor(double)"
                     '()
                     g$fl$17942$f3xia)))
                ($fl/ g$x1$17920$f3xia g$x2$17921$f3xia))
               ($fl-
                 ((case-lambda
                    ((g$fl$17963$f3xia)
                     (clr-call-internal
                       'system.math
                       '"floor(double)"
                       '()
                       g$fl$17963$f3xia)))
                  ($fl/ g$x1$17920$f3xia ($fl- g$x2$17921$f3xia)))))))
          g$x1$17896$f3xia
          g$x2$17897$f3xia)))))
   (g$fldiv0$17718$f3xia
     g$fldiv0$19018$f3xia
     (case-lambda
       ((g$x1$17964$f3xia g$x2$17965$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$x1$17964$f3xia))
            (g$assertion-violation$12459$f3xia
              'fldiv0
              '"not a flonum"
              g$x1$17964$f3xia)
            (void))
          (if (not (g$flonum?$15980$f3xia g$x2$17965$f3xia))
            (g$assertion-violation$12459$f3xia
              'fldiv0
              '"not a flonum"
              g$x2$17965$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$17986$f3xia g$x2$17987$f3xia)
                  ((case-lambda
                     ((g$d$17988$f3xia)
                      ((case-lambda
                         ((g$m$17989$f3xia)
                          (if ($fl<?
                                g$m$17989$f3xia
                                (g$magnitude$17046$f3xia
                                  ($fl/ g$x2$17987$f3xia '2.0)))
                            g$d$17988$f3xia
                            (if ($fl<? '0.0 g$x2$17987$f3xia)
                              ($fl+ g$d$17988$f3xia '1.0)
                              ((case-lambda
                                 (()
                                  (begin
                                    '#f
                                    ($fl- g$d$17988$f3xia '1.0)))))))))
                       ($fl-
                         g$x1$17986$f3xia
                         ($fl* g$d$17988$f3xia g$x2$17987$f3xia)))))
                   ((case-lambda
                      ((g$x1$18010$f3xia g$x2$18011$f3xia)
                       (if ($fl<? '0.0 g$x2$18011$f3xia)
                         ((case-lambda
                            ((g$fl$18032$f3xia)
                             (clr-call-internal
                               'system.math
                               '"floor(double)"
                               '()
                               g$fl$18032$f3xia)))
                          ($fl/ g$x1$18010$f3xia g$x2$18011$f3xia))
                         ($fl-
                           ((case-lambda
                              ((g$fl$18053$f3xia)
                               (clr-call-internal
                                 'system.math
                                 '"floor(double)"
                                 '()
                                 g$fl$18053$f3xia)))
                            ($fl/
                              g$x1$18010$f3xia
                              ($fl- g$x2$18011$f3xia)))))))
                    g$x1$17986$f3xia
                    g$x2$17987$f3xia))))
               g$x1$17964$f3xia
               g$x2$17965$f3xia))))))))
   (g$residual-flmod*$17734$f3xia
     g$residual-flmod*$19019$f3xia
     (case-lambda
       ((g$x1$18074$f3xia g$x2$18075$f3xia)
        ($fl-
          g$x1$18074$f3xia
          ($fl*
            ((case-lambda
               ((g$x1$18096$f3xia g$x2$18097$f3xia)
                (if ($fl<? '0.0 g$x2$18097$f3xia)
                  ((case-lambda
                     ((g$fl$18118$f3xia)
                      (clr-call-internal
                        'system.math
                        '"floor(double)"
                        '()
                        g$fl$18118$f3xia)))
                   ($fl/ g$x1$18096$f3xia g$x2$18097$f3xia))
                  ($fl-
                    ((case-lambda
                       ((g$fl$18139$f3xia)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$18139$f3xia)))
                     ($fl/
                       g$x1$18096$f3xia
                       ($fl- g$x2$18097$f3xia)))))))
             g$x1$18074$f3xia
             g$x2$18075$f3xia)
            g$x2$18075$f3xia)))))
   (g$flmod$17735$f3xia
     g$flmod$19020$f3xia
     (case-lambda
       ((g$x1$18140$f3xia g$x2$18141$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$x1$18140$f3xia))
            (g$assertion-violation$12459$f3xia
              'flmod
              '"not a flonum"
              g$x1$18140$f3xia)
            (void))
          (if (not (g$flonum?$15980$f3xia g$x2$18141$f3xia))
            (g$assertion-violation$12459$f3xia
              'flmod
              '"not a flonum"
              g$x2$18141$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$18162$f3xia g$x2$18163$f3xia)
                  ($fl-
                    g$x1$18162$f3xia
                    ($fl*
                      ((case-lambda
                         ((g$x1$18184$f3xia g$x2$18185$f3xia)
                          (if ($fl<? '0.0 g$x2$18185$f3xia)
                            ((case-lambda
                               ((g$fl$18206$f3xia)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$18206$f3xia)))
                             ($fl/ g$x1$18184$f3xia g$x2$18185$f3xia))
                            ($fl-
                              ((case-lambda
                                 ((g$fl$18227$f3xia)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$18227$f3xia)))
                               ($fl/
                                 g$x1$18184$f3xia
                                 ($fl- g$x2$18185$f3xia)))))))
                       g$x1$18162$f3xia
                       g$x2$18163$f3xia)
                      g$x2$18163$f3xia))))
               g$x1$18140$f3xia
               g$x2$18141$f3xia))))))))
   (g$flmod0$17736$f3xia
     g$flmod0$19021$f3xia
     (case-lambda
       ((g$x1$18228$f3xia g$x2$18229$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$x1$18228$f3xia))
            (g$assertion-violation$12459$f3xia
              'flmod0
              '"not a flonum"
              g$x1$18228$f3xia)
            (void))
          (if (not (g$flonum?$15980$f3xia g$x2$18229$f3xia))
            (g$assertion-violation$12459$f3xia
              'flmod0
              '"not a flonum"
              g$x2$18229$f3xia)
            (void))
          ((case-lambda
             (()
              ($fl-
                g$x1$18228$f3xia
                ($fl*
                  ((case-lambda
                     ((g$x1$18250$f3xia g$x2$18251$f3xia)
                      ((case-lambda
                         ((g$d$18252$f3xia)
                          ((case-lambda
                             ((g$m$18253$f3xia)
                              (if ($fl<?
                                    g$m$18253$f3xia
                                    (g$magnitude$17046$f3xia
                                      ($fl/ g$x2$18251$f3xia '2.0)))
                                g$d$18252$f3xia
                                (if ($fl<? '0.0 g$x2$18251$f3xia)
                                  ($fl+ g$d$18252$f3xia '1.0)
                                  ((case-lambda
                                     (()
                                      (begin
                                        '#f
                                        ($fl-
                                          g$d$18252$f3xia
                                          '1.0)))))))))
                           ($fl-
                             g$x1$18250$f3xia
                             ($fl* g$d$18252$f3xia g$x2$18251$f3xia)))))
                       ((case-lambda
                          ((g$x1$18274$f3xia g$x2$18275$f3xia)
                           (if ($fl<? '0.0 g$x2$18275$f3xia)
                             ((case-lambda
                                ((g$fl$18296$f3xia)
                                 (clr-call-internal
                                   'system.math
                                   '"floor(double)"
                                   '()
                                   g$fl$18296$f3xia)))
                              ($fl/ g$x1$18274$f3xia g$x2$18275$f3xia))
                             ($fl-
                               ((case-lambda
                                  ((g$fl$18317$f3xia)
                                   (clr-call-internal
                                     'system.math
                                     '"floor(double)"
                                     '()
                                     g$fl$18317$f3xia)))
                                ($fl/
                                  g$x1$18274$f3xia
                                  ($fl- g$x2$18275$f3xia)))))))
                        g$x1$18250$f3xia
                        g$x2$18251$f3xia))))
                   g$x1$18228$f3xia
                   g$x2$18229$f3xia)
                  g$x2$18229$f3xia)))))))))
   (g$fldiv-and-mod$17737$f3xia
     g$fldiv-and-mod$19022$f3xia
     (case-lambda
       ((g$x1$18318$f3xia g$x2$18319$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$x1$18318$f3xia))
            (g$assertion-violation$12459$f3xia
              'fldiv-and-mod
              '"not a flonum"
              g$x1$18318$f3xia)
            (void))
          (if (not (g$flonum?$15980$f3xia g$x2$18319$f3xia))
            (g$assertion-violation$12459$f3xia
              'fldiv-and-mod
              '"not a flonum"
              g$x2$18319$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$18320$f3xia)
                  (values
                    g$d$18320$f3xia
                    ($fl-
                      g$x1$18318$f3xia
                      ($fl* g$d$18320$f3xia g$x2$18319$f3xia)))))
               ((case-lambda
                  ((g$x1$18341$f3xia g$x2$18342$f3xia)
                   (if ($fl<? '0.0 g$x2$18342$f3xia)
                     ((case-lambda
                        ((g$fl$18363$f3xia)
                         (clr-call-internal
                           'system.math
                           '"floor(double)"
                           '()
                           g$fl$18363$f3xia)))
                      ($fl/ g$x1$18341$f3xia g$x2$18342$f3xia))
                     ($fl-
                       ((case-lambda
                          ((g$fl$18384$f3xia)
                           (clr-call-internal
                             'system.math
                             '"floor(double)"
                             '()
                             g$fl$18384$f3xia)))
                        ($fl/
                          g$x1$18341$f3xia
                          ($fl- g$x2$18342$f3xia)))))))
                g$x1$18318$f3xia
                g$x2$18319$f3xia)))))))))
   (g$residual-fldiv*$17753$f3xia
     g$residual-fldiv*$19023$f3xia
     (case-lambda
       ((g$x1$18405$f3xia g$x2$18406$f3xia)
        (if ($fl<? '0.0 g$x2$18406$f3xia)
          ((case-lambda
             ((g$fl$18427$f3xia)
              (clr-call-internal
                'system.math
                '"floor(double)"
                '()
                g$fl$18427$f3xia)))
           ($fl/ g$x1$18405$f3xia g$x2$18406$f3xia))
          ($fl-
            ((case-lambda
               ((g$fl$18448$f3xia)
                (clr-call-internal
                  'system.math
                  '"floor(double)"
                  '()
                  g$fl$18448$f3xia)))
             ($fl/ g$x1$18405$f3xia ($fl- g$x2$18406$f3xia))))))))
   (g$fldiv$17754$f3xia
     g$fldiv$19024$f3xia
     (case-lambda
       ((g$x1$18449$f3xia g$x2$18450$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$x1$18449$f3xia))
            (g$assertion-violation$12459$f3xia
              'fldiv
              '"not a flonum"
              g$x1$18449$f3xia)
            (void))
          (if (not (g$flonum?$15980$f3xia g$x2$18450$f3xia))
            (g$assertion-violation$12459$f3xia
              'fldiv
              '"not a flonum"
              g$x2$18450$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$18471$f3xia g$x2$18472$f3xia)
                  (if ($fl<? '0.0 g$x2$18472$f3xia)
                    ((case-lambda
                       ((g$fl$18493$f3xia)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$18493$f3xia)))
                     ($fl/ g$x1$18471$f3xia g$x2$18472$f3xia))
                    ($fl-
                      ((case-lambda
                         ((g$fl$18514$f3xia)
                          (clr-call-internal
                            'system.math
                            '"floor(double)"
                            '()
                            g$fl$18514$f3xia)))
                       ($fl/
                         g$x1$18471$f3xia
                         ($fl- g$x2$18472$f3xia)))))))
               g$x1$18449$f3xia
               g$x2$18450$f3xia))))))))
   (g$fldiv0-and-mod0$17755$f3xia
     g$fldiv0-and-mod0$19025$f3xia
     (case-lambda
       ((g$x1$18515$f3xia g$x2$18516$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$x1$18515$f3xia))
            (g$assertion-violation$12459$f3xia
              'fldiv0-and-mod0
              '"not a flonum"
              g$x1$18515$f3xia)
            (void))
          (if (not (g$flonum?$15980$f3xia g$x2$18516$f3xia))
            (g$assertion-violation$12459$f3xia
              'fldiv0-and-mod0
              '"not a flonum"
              g$x2$18516$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$18517$f3xia)
                  (values
                    g$d$18517$f3xia
                    ($fl-
                      g$x1$18515$f3xia
                      ($fl* g$d$18517$f3xia g$x2$18516$f3xia)))))
               ((case-lambda
                  ((g$x1$18538$f3xia g$x2$18539$f3xia)
                   ((case-lambda
                      ((g$d$18540$f3xia)
                       ((case-lambda
                          ((g$m$18541$f3xia)
                           (if ($fl<?
                                 g$m$18541$f3xia
                                 (g$magnitude$17046$f3xia
                                   ($fl/ g$x2$18539$f3xia '2.0)))
                             g$d$18540$f3xia
                             (if ($fl<? '0.0 g$x2$18539$f3xia)
                               ($fl+ g$d$18540$f3xia '1.0)
                               ((case-lambda
                                  (()
                                   (begin
                                     '#f
                                     ($fl- g$d$18540$f3xia '1.0)))))))))
                        ($fl-
                          g$x1$18538$f3xia
                          ($fl* g$d$18540$f3xia g$x2$18539$f3xia)))))
                    ((case-lambda
                       ((g$x1$18562$f3xia g$x2$18563$f3xia)
                        (if ($fl<? '0.0 g$x2$18563$f3xia)
                          ((case-lambda
                             ((g$fl$18584$f3xia)
                              (clr-call-internal
                                'system.math
                                '"floor(double)"
                                '()
                                g$fl$18584$f3xia)))
                           ($fl/ g$x1$18562$f3xia g$x2$18563$f3xia))
                          ($fl-
                            ((case-lambda
                               ((g$fl$18605$f3xia)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$18605$f3xia)))
                             ($fl/
                               g$x1$18562$f3xia
                               ($fl- g$x2$18563$f3xia)))))))
                     g$x1$18538$f3xia
                     g$x2$18539$f3xia))))
                g$x1$18515$f3xia
                g$x2$18516$f3xia)))))))))
   (g$flinteger?$17756$f3xia
     g$flinteger?$19026$f3xia
     (case-lambda
       ((g$fl$18606$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$18606$f3xia))
            (g$assertion-violation$12459$f3xia
              'flinteger?
              '"not a flonum"
              g$fl$18606$f3xia)
            (void))
          ((case-lambda
             (()
              ($fl=?
                '0.0
                ((case-lambda
                   ((g$x1$18627$f3xia g$x2$18628$f3xia)
                    ($fl-
                      g$x1$18627$f3xia
                      ($fl*
                        ((case-lambda
                           ((g$x1$18649$f3xia g$x2$18650$f3xia)
                            (if ($fl<? '0.0 g$x2$18650$f3xia)
                              ((case-lambda
                                 ((g$fl$18671$f3xia)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$18671$f3xia)))
                               ($fl/ g$x1$18649$f3xia g$x2$18650$f3xia))
                              ($fl-
                                ((case-lambda
                                   ((g$fl$18692$f3xia)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$18692$f3xia)))
                                 ($fl/
                                   g$x1$18649$f3xia
                                   ($fl- g$x2$18650$f3xia)))))))
                         g$x1$18627$f3xia
                         g$x2$18628$f3xia)
                        g$x2$18628$f3xia))))
                 g$fl$18606$f3xia
                 '1.0)))))))))
   (g$flfinite?$17757$f3xia
     g$flfinite?$19027$f3xia
     (case-lambda
       ((g$fl$18693$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$18693$f3xia))
            (g$assertion-violation$12459$f3xia
              'flfinite?
              '"not a flonum"
              g$fl$18693$f3xia)
            (void))
          ((case-lambda
             (()
              (not ((case-lambda
                      ((g$fl$18714$f3xia)
                       (clr-call-internal
                         'system.double
                         'isinfinity
                         '()
                         g$fl$18714$f3xia)))
                    g$fl$18693$f3xia)))))))))
   (g$residual-flinfinite?*$17773$f3xia
     g$residual-flinfinite?*$19028$f3xia
     (case-lambda
       ((g$fl$18735$f3xia)
        (clr-call-internal
          'system.double
          'isinfinity
          '()
          g$fl$18735$f3xia))))
   (g$flinfinite?$17774$f3xia
     g$flinfinite?$19029$f3xia
     (case-lambda
       ((g$fl$18736$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$18736$f3xia))
            (g$assertion-violation$12459$f3xia
              'flinfinite?
              '"not a flonum"
              g$fl$18736$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$18757$f3xia)
                  (clr-call-internal
                    'system.double
                    'isinfinity
                    '()
                    g$fl$18757$f3xia)))
               g$fl$18736$f3xia))))))))
   (g$flnan?$17775$f3xia
     g$flnan?$19030$f3xia
     (case-lambda
       ((g$fl$18758$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$18758$f3xia))
            (g$assertion-violation$12459$f3xia
              'flnan?
              '"not a flonum"
              g$fl$18758$f3xia)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.double
                'isnan
                '()
                g$fl$18758$f3xia))))))))
   (g$flsin$17776$f3xia
     g$flsin$19031$f3xia
     (case-lambda
       ((g$fl$18759$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$18759$f3xia))
            (g$assertion-violation$12459$f3xia
              'flsin
              '"not a flonum"
              g$fl$18759$f3xia)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sin
                '()
                g$fl$18759$f3xia))))))))
   (g$flcos$17777$f3xia
     g$flcos$19032$f3xia
     (case-lambda
       ((g$fl$18760$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$18760$f3xia))
            (g$assertion-violation$12459$f3xia
              'flcos
              '"not a flonum"
              g$fl$18760$f3xia)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'cos
                '()
                g$fl$18760$f3xia))))))))
   (g$fltan$17778$f3xia
     g$fltan$19033$f3xia
     (case-lambda
       ((g$fl$18761$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$18761$f3xia))
            (g$assertion-violation$12459$f3xia
              'fltan
              '"not a flonum"
              g$fl$18761$f3xia)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'tan
                '()
                g$fl$18761$f3xia))))))))
   (g$flasin$17779$f3xia
     g$flasin$19034$f3xia
     (case-lambda
       ((g$fl$18762$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$18762$f3xia))
            (g$assertion-violation$12459$f3xia
              'flasin
              '"not a flonum"
              g$fl$18762$f3xia)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'asin
                '()
                g$fl$18762$f3xia))))))))
   (g$flacos$17780$f3xia
     g$flacos$19035$f3xia
     (case-lambda
       ((g$fl$18763$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$18763$f3xia))
            (g$assertion-violation$12459$f3xia
              'flacos
              '"not a flonum"
              g$fl$18763$f3xia)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'acos
                '()
                g$fl$18763$f3xia))))))))
   (g$flatan$17781$f3xia
     g$flatan$19036$f3xia
     (case-lambda
       ((g$fl$18764$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$18764$f3xia))
            (g$assertion-violation$12459$f3xia
              'flatan
              '"not a flonum"
              g$fl$18764$f3xia)
            (void))
          (clr-call-internal 'system.math 'atan '() g$fl$18764$f3xia)))
       ((g$fl1$18765$f3xia g$fl2$18766$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl1$18765$f3xia))
            (g$assertion-violation$12459$f3xia
              'flatan
              '"not a flonum"
              g$fl1$18765$f3xia)
            (void))
          (if (not (g$flonum?$15980$f3xia g$fl2$18766$f3xia))
            (g$assertion-violation$12459$f3xia
              'flatan
              '"not a flonum"
              g$fl2$18766$f3xia)
            (void))
          (clr-call-internal
            'system.math
            'atan2
            '()
            g$fl1$18765$f3xia
            g$fl2$18766$f3xia)))))
   (g$fllog$17782$f3xia
     g$fllog$19037$f3xia
     (case-lambda
       ((g$fl$18767$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$18767$f3xia))
            (g$assertion-violation$12459$f3xia
              'fllog
              '"not a flonum"
              g$fl$18767$f3xia)
            (void))
          (clr-call-internal 'system.math 'log '() g$fl$18767$f3xia)))
       ((g$fl1$18768$f3xia g$fl2$18769$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl1$18768$f3xia))
            (g$assertion-violation$12459$f3xia
              'fllog
              '"not a flonum"
              g$fl1$18768$f3xia)
            (void))
          (if (not (g$flonum?$15980$f3xia g$fl2$18769$f3xia))
            (g$assertion-violation$12459$f3xia
              'fllog
              '"not a flonum"
              g$fl2$18769$f3xia)
            (void))
          (clr-call-internal
            'system.math
            'log
            '()
            g$fl1$18768$f3xia
            g$fl2$18769$f3xia)))))
   (g$flsqrt$17783$f3xia
     g$flsqrt$19038$f3xia
     (case-lambda
       ((g$fl$18770$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$18770$f3xia))
            (g$assertion-violation$12459$f3xia
              'flsqrt
              '"not a flonum"
              g$fl$18770$f3xia)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sqrt
                '()
                g$fl$18770$f3xia))))))))
   (g$flexp$17784$f3xia
     g$flexp$19039$f3xia
     (case-lambda
       ((g$fl$18771$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$18771$f3xia))
            (g$assertion-violation$12459$f3xia
              'flexp
              '"not a flonum"
              g$fl$18771$f3xia)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'exp
                '()
                g$fl$18771$f3xia))))))))
   (g$flexpt$17785$f3xia
     g$flexpt$19040$f3xia
     (case-lambda
       ((g$fl$18772$f3xia g$n$18773$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$18772$f3xia))
            (g$assertion-violation$12459$f3xia
              'flexpt
              '"not a flonum"
              g$fl$18772$f3xia)
            (void))
          (if (not (g$flonum?$15980$f3xia g$n$18773$f3xia))
            (g$assertion-violation$12459$f3xia
              'flexpt
              '"not a flonum"
              g$n$18773$f3xia)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'pow
                '()
                g$fl$18772$f3xia
                g$n$18773$f3xia))))))))
   (g$flceiling$17786$f3xia
     g$flceiling$19041$f3xia
     (case-lambda
       ((g$fl$18774$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$18774$f3xia))
            (g$assertion-violation$12459$f3xia
              'flceiling
              '"not a flonum"
              g$fl$18774$f3xia)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"ceiling(double)"
                '()
                g$fl$18774$f3xia))))))))
   (g$residual-flfloor*$17802$f3xia
     g$residual-flfloor*$19042$f3xia
     (case-lambda
       ((g$fl$18795$f3xia)
        (clr-call-internal
          'system.math
          '"floor(double)"
          '()
          g$fl$18795$f3xia))))
   (g$flfloor$17803$f3xia
     g$flfloor$19043$f3xia
     (case-lambda
       ((g$fl$18796$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$18796$f3xia))
            (g$assertion-violation$12459$f3xia
              'flfloor
              '"not a flonum"
              g$fl$18796$f3xia)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$18817$f3xia)
                  (clr-call-internal
                    'system.math
                    '"floor(double)"
                    '()
                    g$fl$18817$f3xia)))
               g$fl$18796$f3xia))))))))
   (g$fltruncate$17804$f3xia
     g$fltruncate$19044$f3xia
     (case-lambda
       ((g$fl$18818$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$18818$f3xia))
            (g$assertion-violation$12459$f3xia
              'fltruncate
              '"not a flonum"
              g$fl$18818$f3xia)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"truncate(double)"
                '()
                g$fl$18818$f3xia))))))))
   (g$flround$17805$f3xia
     g$flround$19045$f3xia
     (case-lambda
       ((g$fl$18819$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$18819$f3xia))
            (g$assertion-violation$12459$f3xia
              'flround
              '"not a flonum"
              g$fl$18819$f3xia)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"round(double)"
                '()
                g$fl$18819$f3xia))))))))
   (g$flabs$17806$f3xia
     g$flabs$19046$f3xia
     (case-lambda
       ((g$fl$18820$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$fl$18820$f3xia))
            (g$assertion-violation$12459$f3xia
              'flabs
              '"not a flonum"
              g$fl$18820$f3xia)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"abs(double)"
                '()
                g$fl$18820$f3xia))))))))
   (g$flpositive?$17807$f3xia
     g$flpositive?$19047$f3xia
     (case-lambda
       ((g$r$18821$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$r$18821$f3xia))
            (g$assertion-violation$12459$f3xia
              'flpositive?
              '"not a flonum"
              g$r$18821$f3xia)
            (void))
          ((case-lambda (() ($fl<? '0.0 g$r$18821$f3xia))))))))
   (g$flnegative?$17808$f3xia
     g$flnegative?$19048$f3xia
     (case-lambda
       ((g$r$18822$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$r$18822$f3xia))
            (g$assertion-violation$12459$f3xia
              'flnegative?
              '"not a flonum"
              g$r$18822$f3xia)
            (void))
          ((case-lambda (() ($fl>? '0.0 g$r$18822$f3xia))))))))
   (g$flzero?$17809$f3xia
     g$flzero?$19049$f3xia
     (case-lambda
       ((g$r$18823$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$r$18823$f3xia))
            (g$assertion-violation$12459$f3xia
              'flzero?
              '"not a flonum"
              g$r$18823$f3xia)
            (void))
          ((case-lambda (() ($fl=? '0.0 g$r$18823$f3xia))))))))
   (g$fleven?$17810$f3xia
     g$fleven?$19050$f3xia
     (case-lambda
       ((g$n$18824$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$n$18824$f3xia))
            (g$assertion-violation$12459$f3xia
              'fleven?
              '"not a flonum"
              g$n$18824$f3xia)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (g$integer-valued?$17028$f3xia
                           g$n$18824$f3xia))
                  (g$assertion-violation$12459$f3xia
                    'fleven?
                    '"not integer valued"
                    g$n$18824$f3xia)
                  (void))
                ($fl=?
                  '0.0
                  ((case-lambda
                     ((g$x1$18845$f3xia g$x2$18846$f3xia)
                      ($fl-
                        g$x1$18845$f3xia
                        ($fl*
                          ((case-lambda
                             ((g$x1$18867$f3xia g$x2$18868$f3xia)
                              (if ($fl<? '0.0 g$x2$18868$f3xia)
                                ((case-lambda
                                   ((g$fl$18889$f3xia)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$18889$f3xia)))
                                 ($fl/
                                   g$x1$18867$f3xia
                                   g$x2$18868$f3xia))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$18910$f3xia)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$18910$f3xia)))
                                   ($fl/
                                     g$x1$18867$f3xia
                                     ($fl- g$x2$18868$f3xia)))))))
                           g$x1$18845$f3xia
                           g$x2$18846$f3xia)
                          g$x2$18846$f3xia))))
                   g$n$18824$f3xia
                   '2.0))))))))))
   (g$flodd?$17811$f3xia
     g$flodd?$19051$f3xia
     (case-lambda
       ((g$n$18911$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$n$18911$f3xia))
            (g$assertion-violation$12459$f3xia
              'flodd?
              '"not a flonum"
              g$n$18911$f3xia)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (g$integer-valued?$17028$f3xia
                           g$n$18911$f3xia))
                  (g$assertion-violation$12459$f3xia
                    'flodd?
                    '"not integer valued"
                    g$n$18911$f3xia)
                  (void))
                ($fl=?
                  '1.0
                  ((case-lambda
                     ((g$x1$18932$f3xia g$x2$18933$f3xia)
                      ($fl-
                        g$x1$18932$f3xia
                        ($fl*
                          ((case-lambda
                             ((g$x1$18954$f3xia g$x2$18955$f3xia)
                              (if ($fl<? '0.0 g$x2$18955$f3xia)
                                ((case-lambda
                                   ((g$fl$18976$f3xia)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$18976$f3xia)))
                                 ($fl/
                                   g$x1$18954$f3xia
                                   g$x2$18955$f3xia))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$18997$f3xia)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$18997$f3xia)))
                                   ($fl/
                                     g$x1$18954$f3xia
                                     ($fl- g$x2$18955$f3xia)))))))
                           g$x1$18932$f3xia
                           g$x2$18933$f3xia)
                          g$x2$18933$f3xia))))
                   g$n$18911$f3xia
                   '2.0))))))))))
   (g$flmax$17812$f3xia
     g$flmax$19052$f3xia
     (case-lambda
       ((g$a$18998$f3xia . g$rest$18999$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$a$18998$f3xia))
            (g$assertion-violation$12459$f3xia
              'flmax
              '"not a flonum"
              g$a$18998$f3xia)
            (void))
          (g$fold-left$15557$f3xia
            (case-lambda
              ((g$a$19000$f3xia g$b$19001$f3xia)
               (if (g$fl<?$17698$f3xia g$a$19000$f3xia g$b$19001$f3xia)
                 g$b$19001$f3xia
                 g$a$19000$f3xia)))
            g$a$18998$f3xia
            g$rest$18999$f3xia)))))
   (g$flmin$17813$f3xia
     g$flmin$19053$f3xia
     (case-lambda
       ((g$a$19002$f3xia . g$rest$19003$f3xia)
        (begin
          (if (not (g$flonum?$15980$f3xia g$a$19002$f3xia))
            (g$assertion-violation$12459$f3xia
              'flmin
              '"not a flonum"
              g$a$19002$f3xia)
            (void))
          (g$fold-left$15557$f3xia
            (case-lambda
              ((g$a$19004$f3xia g$b$19005$f3xia)
               (if (g$fl>?$17700$f3xia g$a$19004$f3xia g$b$19005$f3xia)
                 g$b$19005$f3xia
                 g$a$19004$f3xia)))
            g$a$19002$f3xia
            g$rest$19003$f3xia))))))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$using$19055$f3xia
     g$using$19081$f3xia
     (clr-using-internal 'ironscheme.runtime))
   (g$standard-error-port$19056$f3xia
     g$standard-error-port$19082$f3xia
     (case-lambda
       (() (clr-call-internal 'System.Console 'OpenStandardError '()))))
   (g$standard-input-port$19057$f3xia
     g$standard-input-port$19083$f3xia
     (case-lambda
       (() (clr-call-internal 'System.Console 'OpenStandardInput '()))))
   (g$standard-output-port$19058$f3xia
     g$standard-output-port$19084$f3xia
     (case-lambda
       (()
        (clr-call-internal 'System.Console 'OpenStandardOutput '()))))
   (g$native-eol-style$19059$f3xia
     g$native-eol-style$19085$f3xia
     (case-lambda (() 'crlf)))
   (g$buffer-mode?$19060$f3xia
     g$buffer-mode?$19086$f3xia
     (case-lambda
       ((g$obj$19069$f3xia)
        (if (g$symbol?$15976$f3xia g$obj$19069$f3xia)
          (if (g$memq$15538$f3xia g$obj$19069$f3xia '(none line block))
            (begin '#f '#t)
            '#f)
          '#f))))
   (g$put-datum$19061$f3xia
     g$put-datum$19087$f3xia
     (case-lambda
       ((g$p$19070$f3xia g$datum$19071$f3xia)
        (write g$datum$19071$f3xia g$p$19070$f3xia))))
   (g$get-datum$19062$f3xia g$get-datum$19088$f3xia read)
   (g$get-output-string$19063$f3xia
     g$get-output-string$19089$f3xia
     (case-lambda
       ((g$port$19072$f3xia)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$19072$f3xia))))
   (g$open-output-string$19064$f3xia
     g$open-output-string$19090$f3xia
     (case-lambda
       (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$19065$f3xia
     g$open-string-output-port$19091$f3xia
     (case-lambda
       (()
        ((case-lambda
           ((g$p$19073$f3xia)
            (values
              g$p$19073$f3xia
              (case-lambda
                (()
                 (g$get-output-string$19063$f3xia g$p$19073$f3xia))))))
         (g$open-output-string$19064$f3xia)))))
   (g$port?$19066$f3xia
     g$port?$19092$f3xia
     (case-lambda
       ((g$obj$19074$f3xia)
        ((case-lambda
           ((g$t$19075$f3xia)
            (if g$t$19075$f3xia
              g$t$19075$f3xia
              (begin '#f (binary-port? g$obj$19074$f3xia)))))
         (textual-port? g$obj$19074$f3xia)))))
   (g$call-with-string-output-port$19067$f3xia
     g$call-with-string-output-port$19093$f3xia
     (case-lambda
       ((g$proc$19076$f3xia)
        ((case-lambda
           ((g$p$19077$f3xia)
            (begin
              (g$call-with-port$19068$f3xia
                g$p$19077$f3xia
                g$proc$19076$f3xia)
              (g$get-output-string$19063$f3xia g$p$19077$f3xia))))
         (g$open-output-string$19064$f3xia)))))
   (g$call-with-port$19068$f3xia
     g$call-with-port$19094$f3xia
     (case-lambda
       ((g$port$19078$f3xia g$proc$19079$f3xia)
        ((case-lambda
           ((g$r$19080$f3xia)
            (begin (close-port g$port$19078$f3xia) g$r$19080$f3xia)))
         (g$proc$19079$f3xia g$port$19078$f3xia))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$peek-char$19095$f3xia
     g$peek-char$19150$f3xia
     (case-lambda
       (() (g$peek-char$19095$f3xia (current-input-port)))
       ((g$port$19122$f3xia) (lookahead-char g$port$19122$f3xia))))
   (g$read-char$19096$f3xia
     g$read-char$19151$f3xia
     (case-lambda
       (() (g$read-char$19096$f3xia (current-input-port)))
       ((g$port$19123$f3xia) (get-char g$port$19123$f3xia))))
   (g$write-char$19097$f3xia
     g$write-char$19152$f3xia
     (case-lambda
       ((g$chr$19124$f3xia)
        (g$write-char$19097$f3xia
          g$chr$19124$f3xia
          (current-output-port)))
       ((g$chr$19125$f3xia g$port$19126$f3xia)
        (put-char g$port$19126$f3xia g$chr$19125$f3xia))))
   (g$with-input-from-file$19117$f3xia
     g$with-input-from-file$19153$f3xia
     (case-lambda
       ((g$filename$19127$f3xia g$thunk$19128$f3xia)
        ((case-lambda
           ((g$current-input-port$19131$f3xia g$t$19132$f3xia)
            ((case-lambda
               ((g$swap$19133$f3xia)
                (dynamic-wind
                  g$swap$19133$f3xia
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$19128$f3xia)))
                       (case-lambda
                         (()
                          (close-input-port (current-input-port)))))))
                  g$swap$19133$f3xia)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$19134$f3xia)
                    (begin
                      (g$current-input-port$19131$f3xia g$t$19132$f3xia)
                      (set! g$t$19132$f3xia g$t$19134$f3xia))))
                 (g$current-input-port$19131$f3xia)))))))
         current-input-port
         (open-input-file g$filename$19127$f3xia)))))
   (g$with-output-to-file$19118$f3xia
     g$with-output-to-file$19154$f3xia
     (case-lambda
       ((g$filename$19135$f3xia g$thunk$19136$f3xia)
        ((case-lambda
           ((g$current-output-port$19139$f3xia g$t$19140$f3xia)
            ((case-lambda
               ((g$swap$19141$f3xia)
                (dynamic-wind
                  g$swap$19141$f3xia
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$19136$f3xia)))
                       (case-lambda
                         (()
                          (close-output-port (current-output-port)))))))
                  g$swap$19141$f3xia)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$19142$f3xia)
                    (begin
                      (g$current-output-port$19139$f3xia
                        g$t$19140$f3xia)
                      (set! g$t$19140$f3xia g$t$19142$f3xia))))
                 (g$current-output-port$19139$f3xia)))))))
         current-output-port
         (open-output-file g$filename$19135$f3xia)))))
   (g$call-with-input-file$19119$f3xia
     g$call-with-input-file$19155$f3xia
     (case-lambda
       ((g$filename$19143$f3xia g$proc$19144$f3xia)
        ((case-lambda
           ((g$p$19145$f3xia)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$19144$f3xia g$p$19145$f3xia)))
              (case-lambda (() (close-input-port g$p$19145$f3xia))))))
         (open-input-file g$filename$19143$f3xia)))))
   (g$call-with-output-file$19120$f3xia
     g$call-with-output-file$19156$f3xia
     (case-lambda
       ((g$filename$19146$f3xia g$proc$19147$f3xia)
        ((case-lambda
           ((g$p$19148$f3xia)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$19147$f3xia g$p$19148$f3xia)))
              (case-lambda (() (close-output-port g$p$19148$f3xia))))))
         (open-output-file g$filename$19146$f3xia)))))
   (g$newline$19121$f3xia
     g$newline$19157$f3xia
     (case-lambda
       (() (g$newline$19121$f3xia (current-output-port)))
       ((g$port$19149$f3xia) (display '"
" g$port$19149$f3xia)))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$9041$19158$f3xia
     g$9041$19271$f3xia
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$9043$19159$f3xia g$9043$19272$f3xia '#f)
   (g$9042$19160$f3xia
     g$9042$19273$f3xia
     (make-record-constructor-descriptor
       g$9041$19158$f3xia
       '#f
       g$9043$19159$f3xia))
   (g$enum?$19163$f3xia
     g$enum?$19274$f3xia
     (record-predicate g$9041$19158$f3xia))
   (g$make-enum$19164$f3xia
     g$make-enum$19275$f3xia
     (record-constructor g$9042$19160$f3xia))
   (g$enum-value$19165$f3xia
     g$enum-value$19276$f3xia
     (record-accessor g$9041$19158$f3xia '0))
   (g$enum-info$19166$f3xia
     g$enum-info$19277$f3xia
     (record-accessor g$9041$19158$f3xia '1))
   (g$9052$19167$f3xia
     g$9052$19278$f3xia
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$9054$19168$f3xia g$9054$19279$f3xia '#f)
   (g$9053$19169$f3xia
     g$9053$19280$f3xia
     (make-record-constructor-descriptor
       g$9052$19167$f3xia
       '#f
       g$9054$19168$f3xia))
   (g$enum-universe?$19172$f3xia
     g$enum-universe?$19281$f3xia
     (record-predicate g$9052$19167$f3xia))
   (g$make-enum-universe$19173$f3xia
     g$make-enum-universe$19282$f3xia
     (record-constructor g$9053$19169$f3xia))
   (g$enum-universe-id$19174$f3xia
     g$enum-universe-id$19283$f3xia
     (record-accessor g$9052$19167$f3xia '0))
   (g$enum-universe-symbols$19175$f3xia
     g$enum-universe-symbols$19284$f3xia
     (record-accessor g$9052$19167$f3xia '1))
   (g$enum-universe-mapping$19176$f3xia
     g$enum-universe-mapping$19285$f3xia
     (record-accessor g$9052$19167$f3xia '2))
   (g$enum-universe-value$19177$f3xia
     g$enum-universe-value$19286$f3xia
     (record-accessor g$9052$19167$f3xia '3))
   (g$enum-type=?$19178$f3xia
     g$enum-type=?$19287$f3xia
     (case-lambda
       ((g$enumset1$19200$f3xia g$enumset2$19201$f3xia)
        (eq? (g$enum-universe-id$19174$f3xia
               (g$enum-info$19166$f3xia g$enumset1$19200$f3xia))
             (g$enum-universe-id$19174$f3xia
               (g$enum-info$19166$f3xia g$enumset2$19201$f3xia))))))
   (g$get-symbols$19179$f3xia
     g$get-symbols$19288$f3xia
     (case-lambda
       ((g$enumset$19202$f3xia)
        (g$enum-universe-symbols$19175$f3xia
          (g$enum-info$19166$f3xia g$enumset$19202$f3xia)))))
   (g$get-value$19180$f3xia
     g$get-value$19289$f3xia
     (case-lambda
       ((g$enumset$19203$f3xia g$s$19204$f3xia)
        (g$hashtable-ref$16115$f3xia
          (g$enum-universe-mapping$19176$f3xia
            (g$enum-info$19166$f3xia g$enumset$19203$f3xia))
          g$s$19204$f3xia
          '#f))))
   (g$assert-enum$19181$f3xia
     g$assert-enum$19290$f3xia
     (case-lambda
       ((g$who$19205$f3xia g$enumset$19206$f3xia)
        (if (not (g$enum?$19163$f3xia g$enumset$19206$f3xia))
          (g$assertion-violation$12459$f3xia
            g$who$19205$f3xia
            '"not an enumeration"
            g$enumset$19206$f3xia)
          (void)))))
   (g$make-info$19182$f3xia
     g$make-info$19291$f3xia
     (case-lambda
       ((g$symbols$19207$f3xia)
        ((case-lambda
           ((g$ht$19208$f3xia)
            ((letrec ((g$f$19209$f3xia
                        (case-lambda
                          ((g$s$19210$f3xia
                             g$a$19211$f3xia
                             g$mask$19212$f3xia)
                           (if (null? g$s$19210$f3xia)
                             (values
                               (reverse! g$a$19211$f3xia)
                               g$ht$19208$f3xia
                               (- g$mask$19212$f3xia '1))
                             ((case-lambda
                                ((g$n$19213$f3xia)
                                 (if (g$symbol?$15976$f3xia
                                       g$n$19213$f3xia)
                                   (if (g$hashtable-contains?$16118$f3xia
                                         g$ht$19208$f3xia
                                         g$n$19213$f3xia)
                                     (g$f$19209$f3xia
                                       (cdr g$s$19210$f3xia)
                                       g$a$19211$f3xia
                                       g$mask$19212$f3xia)
                                     (begin
                                       (g$hashtable-set!$16116$f3xia
                                         g$ht$19208$f3xia
                                         g$n$19213$f3xia
                                         g$mask$19212$f3xia)
                                       (g$f$19209$f3xia
                                         (cdr g$s$19210$f3xia)
                                         (cons
                                           g$n$19213$f3xia
                                           g$a$19211$f3xia)
                                         (g$bitwise-arithmetic-shift-left$17509$f3xia
                                           g$mask$19212$f3xia
                                           '1))))
                                   (g$assertion-violation$12459$f3xia
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$19213$f3xia))))
                              (car g$s$19210$f3xia)))))))
               g$f$19209$f3xia)
             g$symbols$19207$f3xia
             '()
             '1)))
         (g$make-eq-hashtable$16112$f3xia)))))
   (g$make-name$19183$f3xia
     g$make-name$19292$f3xia
     (case-lambda
       ((g$symbols$19214$f3xia)
        (g$string->symbol$15997$f3xia
          (g$format$19331$f3xia '"~a" g$symbols$19214$f3xia)))))
   (g$make-enumeration$19184$f3xia
     g$make-enumeration$19293$f3xia
     (case-lambda
       ((g$symbols$19215$f3xia)
        (call-with-values
          (case-lambda
            (() (g$make-info$19182$f3xia g$symbols$19215$f3xia)))
          (case-lambda
            ((g$s$19219$f3xia g$mapping$19220$f3xia g$mask$19221$f3xia)
             ((case-lambda
                ((g$mask$19222$f3xia
                   g$mapping$19223$f3xia
                   g$s$19224$f3xia)
                 (g$make-enum$19164$f3xia
                   g$mask$19222$f3xia
                   (g$make-enum-universe$19173$f3xia
                     (g$make-name$19183$f3xia g$s$19224$f3xia)
                     g$s$19224$f3xia
                     g$mapping$19223$f3xia
                     g$mask$19222$f3xia))))
              g$mask$19221$f3xia
              g$mapping$19220$f3xia
              g$s$19219$f3xia)))))))
   (g$enum-set-universe$19185$f3xia
     g$enum-set-universe$19294$f3xia
     (case-lambda
       ((g$enumset$19225$f3xia)
        (begin
          (g$assert-enum$19181$f3xia
            'enum-set-universe
            g$enumset$19225$f3xia)
          ((case-lambda
             ((g$ei$19226$f3xia)
              (g$make-enum$19164$f3xia
                (g$enum-universe-value$19177$f3xia g$ei$19226$f3xia)
                g$ei$19226$f3xia)))
           (g$enum-info$19166$f3xia g$enumset$19225$f3xia))))))
   (g$enum-set-indexer$19186$f3xia
     g$enum-set-indexer$19295$f3xia
     (case-lambda
       ((g$enumset$19227$f3xia)
        (begin
          (g$assert-enum$19181$f3xia
            'enum-set-indexer
            g$enumset$19227$f3xia)
          (case-lambda
            ((g$symbol$19228$f3xia)
             (begin
               (if (not (g$symbol?$15976$f3xia g$symbol$19228$f3xia))
                 (g$assertion-violation$12459$f3xia
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$19228$f3xia)
                 (void))
               ((case-lambda
                  ((g$v$19229$f3xia)
                   (if g$v$19229$f3xia
                     (- (g$bitwise-length$17501$f3xia g$v$19229$f3xia)
                        '1)
                     '#f)))
                (g$get-value$19180$f3xia
                  g$enumset$19227$f3xia
                  g$symbol$19228$f3xia)))))))))
   (g$enum-set-constructor$19187$f3xia
     g$enum-set-constructor$19296$f3xia
     (case-lambda
       ((g$enumset$19230$f3xia)
        (begin
          (g$assert-enum$19181$f3xia
            'enum-set-constructor
            g$enumset$19230$f3xia)
          (case-lambda
            ((g$symbols$19231$f3xia)
             ((letrec ((g$f$19232$f3xia
                         (case-lambda
                           ((g$v$19233$f3xia g$s$19234$f3xia)
                            (if (null? g$s$19234$f3xia)
                              (g$make-enum$19164$f3xia
                                g$v$19233$f3xia
                                (g$enum-info$19166$f3xia
                                  g$enumset$19230$f3xia))
                              ((case-lambda
                                 ((g$n$19235$f3xia)
                                  (if (g$symbol?$15976$f3xia
                                        g$n$19235$f3xia)
                                    ((case-lambda
                                       ((g$v*$19236$f3xia)
                                        (if g$v*$19236$f3xia
                                          (g$f$19232$f3xia
                                            (g$bitwise-ior$17498$f3xia
                                              g$v$19233$f3xia
                                              g$v*$19236$f3xia)
                                            (cdr g$s$19234$f3xia))
                                          (g$assertion-violation$12459$f3xia
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$19235$f3xia))))
                                     (g$get-value$19180$f3xia
                                       g$enumset$19230$f3xia
                                       g$n$19235$f3xia))
                                    (g$assertion-violation$12459$f3xia
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$19235$f3xia))))
                               (car g$s$19234$f3xia)))))))
                g$f$19232$f3xia)
              '0
              g$symbols$19231$f3xia)))))))
   (g$enum-set->list$19188$f3xia
     g$enum-set->list$19297$f3xia
     (case-lambda
       ((g$enumset$19237$f3xia)
        (begin
          (g$assert-enum$19181$f3xia
            'enum-set->list
            g$enumset$19237$f3xia)
          ((case-lambda
             ((g$value$19238$f3xia)
              ((letrec ((g$f$19239$f3xia
                          (case-lambda
                            ((g$s$19240$f3xia g$l$19241$f3xia)
                             (if (null? g$s$19240$f3xia)
                               (reverse! g$l$19241$f3xia)
                               (if (g$zero?$17029$f3xia
                                     (g$bitwise-and$17497$f3xia
                                       (g$get-value$19180$f3xia
                                         g$enumset$19237$f3xia
                                         (car g$s$19240$f3xia))
                                       g$value$19238$f3xia))
                                 (g$f$19239$f3xia
                                   (cdr g$s$19240$f3xia)
                                   g$l$19241$f3xia)
                                 (g$f$19239$f3xia
                                   (cdr g$s$19240$f3xia)
                                   (cons
                                     (car g$s$19240$f3xia)
                                     g$l$19241$f3xia))))))))
                 g$f$19239$f3xia)
               (g$get-symbols$19179$f3xia g$enumset$19237$f3xia)
               '())))
           (g$enum-value$19165$f3xia g$enumset$19237$f3xia))))))
   (g$enum-set-member?$19189$f3xia
     g$enum-set-member?$19298$f3xia
     (case-lambda
       ((g$symbol$19242$f3xia g$enumset$19243$f3xia)
        (begin
          (if (not (g$symbol?$15976$f3xia g$symbol$19242$f3xia))
            (g$assertion-violation$12459$f3xia
              'enum-set-member?
              '"not a symbol"
              g$symbol$19242$f3xia)
            (void))
          (g$assert-enum$19181$f3xia
            'enum-set-member?
            g$enumset$19243$f3xia)
          ((case-lambda
             ((g$v$19244$f3xia)
              (if g$v$19244$f3xia
                (not (g$zero?$17029$f3xia
                       (g$bitwise-and$17497$f3xia
                         g$v$19244$f3xia
                         (g$enum-value$19165$f3xia
                           g$enumset$19243$f3xia))))
                '#f)))
           (g$get-value$19180$f3xia
             g$enumset$19243$f3xia
             g$symbol$19242$f3xia))))))
   (g$enum-set-subset?$19190$f3xia
     g$enum-set-subset?$19299$f3xia
     (case-lambda
       ((g$enumset1$19245$f3xia g$enumset2$19246$f3xia)
        (begin
          (g$assert-enum$19181$f3xia
            'enum-set-subset?
            g$enumset1$19245$f3xia)
          (g$assert-enum$19181$f3xia
            'enum-set-subset?
            g$enumset2$19246$f3xia)
          ((case-lambda
             ((g$v1$19247$f3xia g$v2$19248$f3xia)
              (if (g$enum-type=?$19178$f3xia
                    g$enumset1$19245$f3xia
                    g$enumset2$19246$f3xia)
                (g$=$17038$f3xia
                  (g$bitwise-and$17497$f3xia
                    g$v1$19247$f3xia
                    g$v2$19248$f3xia)
                  g$v1$19247$f3xia)
                ((letrec ((g$f$19249$f3xia
                            (case-lambda
                              ((g$s$19250$f3xia)
                               (if (null? g$s$19250$f3xia)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$19251$f3xia
                                       g$v2*$19252$f3xia)
                                     (if g$v2*$19252$f3xia
                                       ((case-lambda
                                          ((g$has1$19253$f3xia
                                             g$has2$19254$f3xia)
                                           (if (if g$has1$19253$f3xia
                                                 (begin
                                                   '#f
                                                   (not g$has2$19254$f3xia))
                                                 '#f)
                                             '#f
                                             (g$f$19249$f3xia
                                               (cdr g$s$19250$f3xia)))))
                                        (not (g$zero?$17029$f3xia
                                               (g$bitwise-and$17497$f3xia
                                                 g$v1$19247$f3xia
                                                 g$v1*$19251$f3xia)))
                                        (not (g$zero?$17029$f3xia
                                               (g$bitwise-and$17497$f3xia
                                                 g$v2$19248$f3xia
                                                 g$v2*$19252$f3xia))))
                                       '#f)))
                                  (g$get-value$19180$f3xia
                                    g$enumset1$19245$f3xia
                                    (car g$s$19250$f3xia))
                                  (g$get-value$19180$f3xia
                                    g$enumset2$19246$f3xia
                                    (car g$s$19250$f3xia))))))))
                   g$f$19249$f3xia)
                 (g$get-symbols$19179$f3xia g$enumset1$19245$f3xia)))))
           (g$enum-value$19165$f3xia g$enumset1$19245$f3xia)
           (g$enum-value$19165$f3xia g$enumset2$19246$f3xia))))))
   (g$enum-set=?$19191$f3xia
     g$enum-set=?$19300$f3xia
     (case-lambda
       ((g$enumset1$19255$f3xia g$enumset2$19256$f3xia)
        (begin
          (g$assert-enum$19181$f3xia 'enum-set=? g$enumset1$19255$f3xia)
          (g$assert-enum$19181$f3xia 'enum-set=? g$enumset2$19256$f3xia)
          (if (g$enum-set-subset?$19190$f3xia
                g$enumset1$19255$f3xia
                g$enumset2$19256$f3xia)
            (begin
              '#f
              (g$enum-set-subset?$19190$f3xia
                g$enumset2$19256$f3xia
                g$enumset1$19255$f3xia))
            '#f)))))
   (g$enum-set-union$19192$f3xia
     g$enum-set-union$19301$f3xia
     (case-lambda
       ((g$enumset1$19257$f3xia g$enumset2$19258$f3xia)
        (begin
          (g$assert-enum$19181$f3xia
            'enum-set-union
            g$enumset1$19257$f3xia)
          (g$assert-enum$19181$f3xia
            'enum-set-union
            g$enumset2$19258$f3xia)
          (if (g$enum-type=?$19178$f3xia
                g$enumset1$19257$f3xia
                g$enumset2$19258$f3xia)
            (g$make-enum$19164$f3xia
              (g$bitwise-ior$17498$f3xia
                (g$enum-value$19165$f3xia g$enumset1$19257$f3xia)
                (g$enum-value$19165$f3xia g$enumset2$19258$f3xia))
              (g$enum-info$19166$f3xia g$enumset1$19257$f3xia))
            '#f)))))
   (g$enum-set-intersection$19193$f3xia
     g$enum-set-intersection$19302$f3xia
     (case-lambda
       ((g$enumset1$19259$f3xia g$enumset2$19260$f3xia)
        (begin
          (g$assert-enum$19181$f3xia
            'enum-set-intersection
            g$enumset1$19259$f3xia)
          (g$assert-enum$19181$f3xia
            'enum-set-intersection
            g$enumset2$19260$f3xia)
          (if (g$enum-type=?$19178$f3xia
                g$enumset1$19259$f3xia
                g$enumset2$19260$f3xia)
            (g$make-enum$19164$f3xia
              (g$bitwise-and$17497$f3xia
                (g$enum-value$19165$f3xia g$enumset1$19259$f3xia)
                (g$enum-value$19165$f3xia g$enumset2$19260$f3xia))
              (g$enum-info$19166$f3xia g$enumset1$19259$f3xia))
            '#f)))))
   (g$enum-set-difference$19194$f3xia
     g$enum-set-difference$19303$f3xia
     (case-lambda
       ((g$enumset1$19261$f3xia g$enumset2$19262$f3xia)
        (begin
          (g$assert-enum$19181$f3xia
            'enum-set-difference
            g$enumset1$19261$f3xia)
          (g$assert-enum$19181$f3xia
            'enum-set-difference
            g$enumset2$19262$f3xia)
          (if (g$enum-type=?$19178$f3xia
                g$enumset1$19261$f3xia
                g$enumset2$19262$f3xia)
            (g$make-enum$19164$f3xia
              (g$bitwise-and$17497$f3xia
                (g$enum-value$19165$f3xia g$enumset1$19261$f3xia)
                (g$bitwise-not$17496$f3xia
                  (g$enum-value$19165$f3xia g$enumset2$19262$f3xia)))
              (g$enum-info$19166$f3xia g$enumset1$19261$f3xia))
            '#f)))))
   (g$enum-set-complement$19195$f3xia
     g$enum-set-complement$19304$f3xia
     (case-lambda
       ((g$enumset$19263$f3xia)
        (begin
          (g$assert-enum$19181$f3xia
            'enum-set-complement
            g$enumset$19263$f3xia)
          (g$make-enum$19164$f3xia
            (g$bitwise-not$17496$f3xia
              (g$enum-value$19165$f3xia g$enumset$19263$f3xia))
            (g$enum-info$19166$f3xia g$enumset$19263$f3xia))))))
   (g$enum-set-projection$19196$f3xia
     g$enum-set-projection$19305$f3xia
     (case-lambda
       ((g$enumset1$19264$f3xia g$enumset2$19265$f3xia)
        (begin
          (g$assert-enum$19181$f3xia
            'enum-set-projection
            g$enumset1$19264$f3xia)
          (g$assert-enum$19181$f3xia
            'enum-set-projection
            g$enumset2$19265$f3xia)
          ((case-lambda
             ((g$v1$19266$f3xia)
              ((letrec ((g$f$19267$f3xia
                          (case-lambda
                            ((g$s$19268$f3xia g$v$19269$f3xia)
                             (if (null? g$s$19268$f3xia)
                               (g$make-enum$19164$f3xia
                                 g$v$19269$f3xia
                                 (g$enum-info$19166$f3xia
                                   g$enumset2$19265$f3xia))
                               (if (g$zero?$17029$f3xia
                                     (g$bitwise-and$17497$f3xia
                                       g$v1$19266$f3xia
                                       (g$get-value$19180$f3xia
                                         g$enumset1$19264$f3xia
                                         (car g$s$19268$f3xia))))
                                 (g$f$19267$f3xia
                                   (cdr g$s$19268$f3xia)
                                   g$v$19269$f3xia)
                                 ((case-lambda
                                    ((g$v2$19270$f3xia)
                                     (if g$v2$19270$f3xia
                                       (g$f$19267$f3xia
                                         (cdr g$s$19268$f3xia)
                                         (g$bitwise-ior$17498$f3xia
                                           g$v$19269$f3xia
                                           g$v2$19270$f3xia))
                                       (g$f$19267$f3xia
                                         (cdr g$s$19268$f3xia)
                                         g$v$19269$f3xia))))
                                  (g$get-value$19180$f3xia
                                    g$enumset2$19265$f3xia
                                    (car g$s$19268$f3xia)))))))))
                 g$f$19267$f3xia)
               (g$get-symbols$19179$f3xia g$enumset1$19264$f3xia)
               '0)))
           (g$enum-value$19165$f3xia g$enumset1$19264$f3xia)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$19197$f3xia g$p$19198$f3xia g$wr$19199$f3xia)
       (g$fprintf$19330$f3xia
         g$p$19198$f3xia
         '"#[enum-set ~a]"
         (g$enum-set->list$19188$f3xia g$x$19197$f3xia))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$19306$f3xia
     g$dofmt$19328$f3xia
     (case-lambda
       ((g$p$19310$f3xia g$cntl$19311$f3xia g$args$19312$f3xia)
        ((case-lambda
           ((g$nmax$19313$f3xia)
            ((letrec ((g$loop$19314$f3xia
                        (case-lambda
                          ((g$n$19315$f3xia g$a$19316$f3xia)
                           (if (g$fx<=?$15278$f3xia
                                 g$n$19315$f3xia
                                 g$nmax$19313$f3xia)
                             ((case-lambda
                                ((g$c$19317$f3xia)
                                 (if (if (g$char=?$16055$f3xia
                                           g$c$19317$f3xia
                                           '#\~)
                                       (begin
                                         '#f
                                         (g$fx<?$15277$f3xia
                                           g$n$19315$f3xia
                                           g$nmax$19313$f3xia))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$19318$f3xia)
                                       (if (eqv? g$t$19318$f3xia '#\a)
                                         (begin
                                           (display
                                             (car g$a$19316$f3xia)
                                             g$p$19310$f3xia)
                                           (g$loop$19314$f3xia
                                             (g$fx+$15263$f3xia
                                               g$n$19315$f3xia
                                               '2)
                                             (cdr g$a$19316$f3xia)))
                                         (if (eqv? g$t$19318$f3xia '#\s)
                                           (begin
                                             (write
                                               (car g$a$19316$f3xia)
                                               g$p$19310$f3xia)
                                             (g$loop$19314$f3xia
                                               (g$fx+$15263$f3xia
                                                 g$n$19315$f3xia
                                                 '2)
                                               (cdr g$a$19316$f3xia)))
                                           (if (eqv?
                                                 g$t$19318$f3xia
                                                 '#\b)
                                             (begin
                                               (write
                                                 (g$number->string$17037$f3xia
                                                   (car g$a$19316$f3xia)
                                                   '2)
                                                 g$p$19310$f3xia)
                                               (g$loop$19314$f3xia
                                                 (g$fx+$15263$f3xia
                                                   g$n$19315$f3xia
                                                   '2)
                                                 (cdr g$a$19316$f3xia)))
                                             (if (eqv?
                                                   g$t$19318$f3xia
                                                   '#\o)
                                               (begin
                                                 (write
                                                   (g$number->string$17037$f3xia
                                                     (car g$a$19316$f3xia)
                                                     '8)
                                                   g$p$19310$f3xia)
                                                 (g$loop$19314$f3xia
                                                   (g$fx+$15263$f3xia
                                                     g$n$19315$f3xia
                                                     '2)
                                                   (cdr g$a$19316$f3xia)))
                                               (if (eqv?
                                                     g$t$19318$f3xia
                                                     '#\x)
                                                 (begin
                                                   (write
                                                     (g$number->string$17037$f3xia
                                                       (car g$a$19316$f3xia)
                                                       '16)
                                                     g$p$19310$f3xia)
                                                   (g$loop$19314$f3xia
                                                     (g$fx+$15263$f3xia
                                                       g$n$19315$f3xia
                                                       '2)
                                                     (cdr g$a$19316$f3xia)))
                                                 (if (eqv?
                                                       g$t$19318$f3xia
                                                       '#\d)
                                                   (begin
                                                     (write
                                                       (g$number->string$17037$f3xia
                                                         (car g$a$19316$f3xia)
                                                         '10)
                                                       g$p$19310$f3xia)
                                                     (g$loop$19314$f3xia
                                                       (g$fx+$15263$f3xia
                                                         g$n$19315$f3xia
                                                         '2)
                                                       (cdr g$a$19316$f3xia)))
                                                   (if (eqv?
                                                         g$t$19318$f3xia
                                                         '#\~)
                                                     (begin
                                                       (g$write-char$19152$f3xia
                                                         '#\~
                                                         g$p$19310$f3xia)
                                                       (g$loop$19314$f3xia
                                                         (g$fx+$15263$f3xia
                                                           g$n$19315$f3xia
                                                           '2)
                                                         g$a$19316$f3xia))
                                                     ((case-lambda
                                                        (()
                                                         (begin
                                                           '#f
                                                           (g$write-char$19152$f3xia
                                                             g$c$19317$f3xia
                                                             g$p$19310$f3xia)
                                                           (g$loop$19314$f3xia
                                                             (g$fx+$15263$f3xia
                                                               g$n$19315$f3xia
                                                               '1)
                                                             g$a$19316$f3xia))))))))))))))
                                    (g$string-ref$15985$f3xia
                                      g$cntl$19311$f3xia
                                      (g$fx+$15263$f3xia
                                        g$n$19315$f3xia
                                        '1)))
                                   (begin
                                     (g$write-char$19152$f3xia
                                       g$c$19317$f3xia
                                       g$p$19310$f3xia)
                                     (g$loop$19314$f3xia
                                       (g$fx+$15263$f3xia
                                         g$n$19315$f3xia
                                         '1)
                                       g$a$19316$f3xia)))))
                              (g$string-ref$15985$f3xia
                                g$cntl$19311$f3xia
                                g$n$19315$f3xia))
                             (void))))))
               g$loop$19314$f3xia)
             '0
             g$args$19312$f3xia)))
         (g$fx-$15265$f3xia
           (g$string-length$15988$f3xia g$cntl$19311$f3xia)
           '1)))))
   (g$printf$19307$f3xia
     g$printf$19329$f3xia
     (case-lambda
       ((g$control$19319$f3xia . g$args$19320$f3xia)
        (g$dofmt$19306$f3xia
          (current-output-port)
          g$control$19319$f3xia
          g$args$19320$f3xia))))
   (g$fprintf$19308$f3xia
     g$fprintf$19330$f3xia
     (case-lambda
       ((g$p$19321$f3xia g$control$19322$f3xia . g$args$19323$f3xia)
        (g$dofmt$19306$f3xia
          g$p$19321$f3xia
          g$control$19322$f3xia
          g$args$19323$f3xia))))
   (g$format$19309$f3xia
     g$format$19331$f3xia
     (case-lambda
       ((g$control$19324$f3xia . g$args$19325$f3xia)
        (call-with-values
          g$open-string-output-port$19091$f3xia
          (case-lambda
            ((g$p$19326$f3xia g$c$19327$f3xia)
             (begin
               (g$dofmt$19306$f3xia
                 g$p$19326$f3xia
                 g$control$19324$f3xia
                 g$args$19325$f3xia)
               (g$c$19327$f3xia)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$19332$f3xia
     g$make-traced-macro$19335$f3xia
     (case-lambda
       ((g$name$19333$f3xia g$x$19334$f3xia)
        (if (g$procedure?$15978$f3xia g$x$19334$f3xia)
          (make-traced-procedure
            g$name$19333$f3xia
            g$x$19334$f3xia
            g$syntax->datum$25023$f3xia)
          (if (g$variable-transformer?$24843$f3xia g$x$19334$f3xia)
            (g$make-variable-transformer$24841$f3xia
              (make-traced-procedure
                g$name$19333$f3xia
                (g$variable-transformer-procedure$24844$f3xia
                  g$x$19334$f3xia)
                g$syntax->datum$25023$f3xia))
            ((case-lambda (() (begin '#f g$x$19334$f3xia))))))))))
  (void))

(library-letrec* (ironscheme equal)
  ((g$k0$19336$f3xia g$k0$19428$f3xia '400)
   (g$kb$19337$f3xia g$kb$19429$f3xia '-40)
   (g$9186$19338$f3xia
     g$9186$19430$f3xia
     (make-record-type-descriptor
       'box
       '#f
       '#f
       '#f
       '#f
       '#((mutable content))))
   (g$9188$19339$f3xia g$9188$19431$f3xia '#f)
   (g$9187$19340$f3xia
     g$9187$19432$f3xia
     (make-record-constructor-descriptor
       g$9186$19338$f3xia
       '#f
       g$9188$19339$f3xia))
   (g$box?$19343$f3xia
     g$box?$19433$f3xia
     (record-predicate g$9186$19338$f3xia))
   (g$make-box$19344$f3xia
     g$make-box$19434$f3xia
     (record-constructor g$9187$19340$f3xia))
   (g$box-content$19345$f3xia
     g$box-content$19435$f3xia
     (record-accessor g$9186$19338$f3xia '0))
   (g$set-box-content!$19346$f3xia
     g$set-box-content!$19436$f3xia
     (record-mutator g$9186$19338$f3xia '0))
   (g$random$19347$f3xia
     g$random$19437$f3xia
     ((case-lambda
        ((g$rg$19354$f3xia)
         (case-lambda
           ((g$k$19355$f3xia)
            (clr-call-internal
              'System.Random
              'Next
              g$rg$19354$f3xia
              g$k$19355$f3xia)))))
      (clr-new-internal 'System.Random)))
   (g$union-find$19348$f3xia
     g$union-find$19438$f3xia
     (case-lambda
       ((g$ht$19356$f3xia g$x$19357$f3xia g$y$19358$f3xia)
        (letrec* ((g$eq-hashtable-ref$19359$f3xia
                    g$hashtable-ref$16115$f3xia)
                  (g$eq-hashtable-set!$19360$f3xia
                    g$hashtable-set!$16116$f3xia)
                  (g$find$19361$f3xia
                    (case-lambda
                      ((g$b$19372$f3xia)
                       ((case-lambda
                          ((g$n$19373$f3xia)
                           (if (g$box?$19343$f3xia g$n$19373$f3xia)
                             ((letrec ((g$loop$19374$f3xia
                                         (case-lambda
                                           ((g$b$19375$f3xia
                                              g$n$19376$f3xia)
                                            ((case-lambda
                                               ((g$nn$19377$f3xia)
                                                (if (g$box?$19343$f3xia
                                                      g$nn$19377$f3xia)
                                                  (begin
                                                    (g$set-box-content!$19346$f3xia
                                                      g$b$19375$f3xia
                                                      g$nn$19377$f3xia)
                                                    (g$loop$19374$f3xia
                                                      g$n$19376$f3xia
                                                      g$nn$19377$f3xia))
                                                  g$n$19376$f3xia)))
                                             (g$box-content$19345$f3xia
                                               g$n$19376$f3xia))))))
                                g$loop$19374$f3xia)
                              g$b$19372$f3xia
                              g$n$19373$f3xia)
                             g$b$19372$f3xia)))
                        (g$box-content$19345$f3xia g$b$19372$f3xia))))))
          ((case-lambda
             ((g$bx$19362$f3xia g$by$19363$f3xia)
              (if (not g$bx$19362$f3xia)
                (if (not g$by$19363$f3xia)
                  ((case-lambda
                     ((g$b$19364$f3xia)
                      (begin
                        (g$eq-hashtable-set!$19360$f3xia
                          g$ht$19356$f3xia
                          g$x$19357$f3xia
                          g$b$19364$f3xia)
                        (g$eq-hashtable-set!$19360$f3xia
                          g$ht$19356$f3xia
                          g$y$19358$f3xia
                          g$b$19364$f3xia)
                        '#f)))
                   (g$make-box$19344$f3xia '1))
                  ((case-lambda
                     ((g$ry$19365$f3xia)
                      (begin
                        (g$eq-hashtable-set!$19360$f3xia
                          g$ht$19356$f3xia
                          g$x$19357$f3xia
                          g$ry$19365$f3xia)
                        '#f)))
                   (g$find$19361$f3xia g$by$19363$f3xia)))
                (if (not g$by$19363$f3xia)
                  ((case-lambda
                     ((g$rx$19366$f3xia)
                      (begin
                        (g$eq-hashtable-set!$19360$f3xia
                          g$ht$19356$f3xia
                          g$y$19358$f3xia
                          g$rx$19366$f3xia)
                        '#f)))
                   (g$find$19361$f3xia g$bx$19362$f3xia))
                  ((case-lambda
                     ((g$rx$19367$f3xia g$ry$19368$f3xia)
                      ((case-lambda
                         ((g$t$19369$f3xia)
                          (if g$t$19369$f3xia
                            g$t$19369$f3xia
                            (begin
                              '#f
                              ((case-lambda
                                 ((g$nx$19370$f3xia g$ny$19371$f3xia)
                                  (if ($fx>?
                                        g$nx$19370$f3xia
                                        g$ny$19371$f3xia)
                                    (begin
                                      (g$set-box-content!$19346$f3xia
                                        g$ry$19368$f3xia
                                        g$rx$19367$f3xia)
                                      (g$set-box-content!$19346$f3xia
                                        g$rx$19367$f3xia
                                        ($fx+
                                          g$nx$19370$f3xia
                                          g$ny$19371$f3xia))
                                      '#f)
                                    (begin
                                      (g$set-box-content!$19346$f3xia
                                        g$rx$19367$f3xia
                                        g$ry$19368$f3xia)
                                      (g$set-box-content!$19346$f3xia
                                        g$ry$19368$f3xia
                                        ($fx+
                                          g$ny$19371$f3xia
                                          g$nx$19370$f3xia))
                                      '#f))))
                               (g$box-content$19345$f3xia
                                 g$rx$19367$f3xia)
                               (g$box-content$19345$f3xia
                                 g$ry$19368$f3xia))))))
                       (eq? g$rx$19367$f3xia g$ry$19368$f3xia))))
                   (g$find$19361$f3xia g$bx$19362$f3xia)
                   (g$find$19361$f3xia g$by$19363$f3xia))))))
           (g$eq-hashtable-ref$19359$f3xia
             g$ht$19356$f3xia
             g$x$19357$f3xia
             '#f)
           (g$eq-hashtable-ref$19359$f3xia
             g$ht$19356$f3xia
             g$y$19358$f3xia
             '#f))))))
   (g$pre?$19349$f3xia
     g$pre?$19439$f3xia
     (case-lambda
       ((g$x$19378$f3xia g$y$19379$f3xia g$k$19380$f3xia)
        (if (eq? g$x$19378$f3xia g$y$19379$f3xia)
          g$k$19380$f3xia
          (if (pair? g$x$19378$f3xia)
            (if (pair? g$y$19379$f3xia)
              (begin
                '#f
                (if ($fx<=? g$k$19380$f3xia '0)
                  g$k$19380$f3xia
                  ((case-lambda
                     ((g$k$19381$f3xia)
                      (if g$k$19381$f3xia
                        (begin
                          '#f
                          (g$pre?$19349$f3xia
                            ($cdr g$x$19378$f3xia)
                            ($cdr g$y$19379$f3xia)
                            g$k$19381$f3xia))
                        '#f)))
                   (g$pre?$19349$f3xia
                     ($car g$x$19378$f3xia)
                     ($car g$y$19379$f3xia)
                     ($fx- g$k$19380$f3xia '1)))))
              '#f)
            (if (g$vector?$15974$f3xia g$x$19378$f3xia)
              (if (g$vector?$15974$f3xia g$y$19379$f3xia)
                (begin
                  '#f
                  ((case-lambda
                     ((g$n$19382$f3xia)
                      (if ($fx=?
                            (g$vector-length$16008$f3xia
                              g$y$19379$f3xia)
                            g$n$19382$f3xia)
                        (begin
                          '#f
                          ((letrec ((g$f$19383$f3xia
                                      (case-lambda
                                        ((g$i$19384$f3xia
                                           g$k$19385$f3xia)
                                         (if ((case-lambda
                                                ((g$t$19386$f3xia)
                                                 (if g$t$19386$f3xia
                                                   g$t$19386$f3xia
                                                   (begin
                                                     '#f
                                                     ($fx<=?
                                                       g$k$19385$f3xia
                                                       '0)))))
                                              ($fx=?
                                                g$i$19384$f3xia
                                                g$n$19382$f3xia))
                                           g$k$19385$f3xia
                                           ((case-lambda
                                              ((g$k$19387$f3xia)
                                               (if g$k$19387$f3xia
                                                 (begin
                                                   '#f
                                                   (g$f$19383$f3xia
                                                     ($fx+
                                                       g$i$19384$f3xia
                                                       '1)
                                                     g$k$19387$f3xia))
                                                 '#f)))
                                            (g$pre?$19349$f3xia
                                              ($vector-ref
                                                g$x$19378$f3xia
                                                g$i$19384$f3xia)
                                              ($vector-ref
                                                g$y$19379$f3xia
                                                g$i$19384$f3xia)
                                              ($fx-
                                                g$k$19385$f3xia
                                                '1))))))))
                             g$f$19383$f3xia)
                           '0
                           g$k$19380$f3xia))
                        '#f)))
                   (g$vector-length$16008$f3xia g$x$19378$f3xia)))
                '#f)
              (if (g$string?$15972$f3xia g$x$19378$f3xia)
                (if (g$string?$15972$f3xia g$y$19379$f3xia)
                  (if (g$string=?$16048$f3xia
                        g$x$19378$f3xia
                        g$y$19379$f3xia)
                    (begin '#f g$k$19380$f3xia)
                    '#f)
                  '#f)
                (if (g$bytevector?$15975$f3xia g$x$19378$f3xia)
                  (if (g$bytevector?$15975$f3xia g$y$19379$f3xia)
                    (if (g$bytevector=?$16470$f3xia
                          g$x$19378$f3xia
                          g$y$19379$f3xia)
                      (begin '#f g$k$19380$f3xia)
                      '#f)
                    '#f)
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        (if (eqv? g$x$19378$f3xia g$y$19379$f3xia)
                          (begin '#f g$k$19380$f3xia)
                          '#f)))))))))))))
   (g$interleave?$19350$f3xia
     g$interleave?$19440$f3xia
     (case-lambda
       ((g$x$19388$f3xia g$y$19389$f3xia g$k$19390$f3xia)
        ((case-lambda
           ((g$ht$19391$f3xia)
            (letrec* ((g$call-union-find$19392$f3xia
                        (case-lambda
                          ((g$x$19418$f3xia g$y$19419$f3xia)
                           (begin
                             (if (not g$ht$19391$f3xia)
                               (set! g$ht$19391$f3xia
                                 (g$make-eq-hashtable$16112$f3xia))
                               (void))
                             (g$union-find$19348$f3xia
                               g$ht$19391$f3xia
                               g$x$19418$f3xia
                               g$y$19419$f3xia)))))
                      (g$e?$19393$f3xia
                        (case-lambda
                          ((g$x$19415$f3xia
                             g$y$19416$f3xia
                             g$k$19417$f3xia)
                           (if ($fx<=? g$k$19417$f3xia '0)
                             (if ($fx=?
                                   g$k$19417$f3xia
                                   g$kb$19337$f3xia)
                               (g$fast?$19395$f3xia
                                 g$x$19415$f3xia
                                 g$y$19416$f3xia
                                 (g$random$19347$f3xia
                                   (* '2 g$k0$19336$f3xia)))
                               (g$slow?$19394$f3xia
                                 g$x$19415$f3xia
                                 g$y$19416$f3xia
                                 g$k$19417$f3xia))
                             (g$fast?$19395$f3xia
                               g$x$19415$f3xia
                               g$y$19416$f3xia
                               g$k$19417$f3xia)))))
                      (g$slow?$19394$f3xia
                        (case-lambda
                          ((g$x$19406$f3xia
                             g$y$19407$f3xia
                             g$k$19408$f3xia)
                           (if (eq? g$x$19406$f3xia g$y$19407$f3xia)
                             g$k$19408$f3xia
                             (if (pair? g$x$19406$f3xia)
                               (if (pair? g$y$19407$f3xia)
                                 (begin
                                   '#f
                                   (if (g$call-union-find$19392$f3xia
                                         g$x$19406$f3xia
                                         g$y$19407$f3xia)
                                     '0
                                     ((case-lambda
                                        ((g$k$19409$f3xia)
                                         (if g$k$19409$f3xia
                                           (begin
                                             '#f
                                             (g$e?$19393$f3xia
                                               ($cdr g$x$19406$f3xia)
                                               ($cdr g$y$19407$f3xia)
                                               g$k$19409$f3xia))
                                           '#f)))
                                      (g$e?$19393$f3xia
                                        ($car g$x$19406$f3xia)
                                        ($car g$y$19407$f3xia)
                                        ($fx- g$k$19408$f3xia '1)))))
                                 '#f)
                               (if (g$vector?$15974$f3xia
                                     g$x$19406$f3xia)
                                 (if (g$vector?$15974$f3xia
                                       g$y$19407$f3xia)
                                   (begin
                                     '#f
                                     ((case-lambda
                                        ((g$n$19410$f3xia)
                                         (if ($fx=?
                                               (g$vector-length$16008$f3xia
                                                 g$y$19407$f3xia)
                                               g$n$19410$f3xia)
                                           (begin
                                             '#f
                                             (if (g$call-union-find$19392$f3xia
                                                   g$x$19406$f3xia
                                                   g$y$19407$f3xia)
                                               '0
                                               ((letrec ((g$f$19411$f3xia
                                                           (case-lambda
                                                             ((g$i$19412$f3xia
                                                                g$k$19413$f3xia)
                                                              (if ($fx=?
                                                                    g$i$19412$f3xia
                                                                    g$n$19410$f3xia)
                                                                g$k$19413$f3xia
                                                                ((case-lambda
                                                                   ((g$k$19414$f3xia)
                                                                    (if g$k$19414$f3xia
                                                                      (begin
                                                                        '#f
                                                                        (g$f$19411$f3xia
                                                                          ($fx+
                                                                            g$i$19412$f3xia
                                                                            '1)
                                                                          g$k$19414$f3xia))
                                                                      '#f)))
                                                                 (g$e?$19393$f3xia
                                                                   ($vector-ref
                                                                     g$x$19406$f3xia
                                                                     g$i$19412$f3xia)
                                                                   ($vector-ref
                                                                     g$y$19407$f3xia
                                                                     g$i$19412$f3xia)
                                                                   g$k$19413$f3xia)))))))
                                                  g$f$19411$f3xia)
                                                '0
                                                ($fx-
                                                  g$k$19408$f3xia
                                                  '1))))
                                           '#f)))
                                      (g$vector-length$16008$f3xia
                                        g$x$19406$f3xia)))
                                   '#f)
                                 (if (g$string?$15972$f3xia
                                       g$x$19406$f3xia)
                                   (if (g$string?$15972$f3xia
                                         g$y$19407$f3xia)
                                     (if (g$string=?$16048$f3xia
                                           g$x$19406$f3xia
                                           g$y$19407$f3xia)
                                       (begin '#f g$k$19408$f3xia)
                                       '#f)
                                     '#f)
                                   (if (g$bytevector?$15975$f3xia
                                         g$x$19406$f3xia)
                                     (if (g$bytevector?$15975$f3xia
                                           g$y$19407$f3xia)
                                       (if (g$bytevector=?$16470$f3xia
                                             g$x$19406$f3xia
                                             g$y$19407$f3xia)
                                         (begin '#f g$k$19408$f3xia)
                                         '#f)
                                       '#f)
                                     ((case-lambda
                                        (()
                                         (begin
                                           '#f
                                           (if (eqv?
                                                 g$x$19406$f3xia
                                                 g$y$19407$f3xia)
                                             (begin '#f g$k$19408$f3xia)
                                             '#f)))))))))))))
                      (g$fast?$19395$f3xia
                        (case-lambda
                          ((g$x$19396$f3xia
                             g$y$19397$f3xia
                             g$k$19398$f3xia)
                           ((case-lambda
                              ((g$k$19399$f3xia)
                               (if (eq? g$x$19396$f3xia g$y$19397$f3xia)
                                 g$k$19399$f3xia
                                 (if (pair? g$x$19396$f3xia)
                                   (if (pair? g$y$19397$f3xia)
                                     (begin
                                       '#f
                                       ((case-lambda
                                          ((g$k$19400$f3xia)
                                           (if g$k$19400$f3xia
                                             (begin
                                               '#f
                                               (g$e?$19393$f3xia
                                                 ($cdr g$x$19396$f3xia)
                                                 ($cdr g$y$19397$f3xia)
                                                 g$k$19400$f3xia))
                                             '#f)))
                                        (g$e?$19393$f3xia
                                          ($car g$x$19396$f3xia)
                                          ($car g$y$19397$f3xia)
                                          g$k$19399$f3xia)))
                                     '#f)
                                   (if (g$vector?$15974$f3xia
                                         g$x$19396$f3xia)
                                     (if (g$vector?$15974$f3xia
                                           g$y$19397$f3xia)
                                       (begin
                                         '#f
                                         ((case-lambda
                                            ((g$n$19401$f3xia)
                                             (if ($fx=?
                                                   (g$vector-length$16008$f3xia
                                                     g$y$19397$f3xia)
                                                   g$n$19401$f3xia)
                                               (begin
                                                 '#f
                                                 ((letrec ((g$f$19402$f3xia
                                                             (case-lambda
                                                               ((g$i$19403$f3xia
                                                                  g$k$19404$f3xia)
                                                                (if ($fx=?
                                                                      g$i$19403$f3xia
                                                                      g$n$19401$f3xia)
                                                                  g$k$19404$f3xia
                                                                  ((case-lambda
                                                                     ((g$k$19405$f3xia)
                                                                      (if g$k$19405$f3xia
                                                                        (begin
                                                                          '#f
                                                                          (g$f$19402$f3xia
                                                                            ($fx+
                                                                              g$i$19403$f3xia
                                                                              '1)
                                                                            g$k$19405$f3xia))
                                                                        '#f)))
                                                                   (g$e?$19393$f3xia
                                                                     ($vector-ref
                                                                       g$x$19396$f3xia
                                                                       g$i$19403$f3xia)
                                                                     ($vector-ref
                                                                       g$y$19397$f3xia
                                                                       g$i$19403$f3xia)
                                                                     g$k$19404$f3xia)))))))
                                                    g$f$19402$f3xia)
                                                  '0
                                                  g$k$19399$f3xia))
                                               '#f)))
                                          (g$vector-length$16008$f3xia
                                            g$x$19396$f3xia)))
                                       '#f)
                                     (if (g$string?$15972$f3xia
                                           g$x$19396$f3xia)
                                       (if (g$string?$15972$f3xia
                                             g$y$19397$f3xia)
                                         (if (g$string=?$16048$f3xia
                                               g$x$19396$f3xia
                                               g$y$19397$f3xia)
                                           (begin '#f g$k$19399$f3xia)
                                           '#f)
                                         '#f)
                                       (if (g$bytevector?$15975$f3xia
                                             g$x$19396$f3xia)
                                         (if (g$bytevector?$15975$f3xia
                                               g$y$19397$f3xia)
                                           (if (g$bytevector=?$16470$f3xia
                                                 g$x$19396$f3xia
                                                 g$y$19397$f3xia)
                                             (begin '#f g$k$19399$f3xia)
                                             '#f)
                                           '#f)
                                         ((case-lambda
                                            (()
                                             (begin
                                               '#f
                                               (if (eqv?
                                                     g$x$19396$f3xia
                                                     g$y$19397$f3xia)
                                                 (begin
                                                   '#f
                                                   g$k$19399$f3xia)
                                                 '#f))))))))))))
                            ($fx- g$k$19398$f3xia '1))))))
              (if (g$e?$19393$f3xia
                    g$x$19388$f3xia
                    g$y$19389$f3xia
                    g$k$19390$f3xia)
                (begin '#f '#t)
                '#f))))
         '#f))))
   (g$interleave-equal?$19351$f3xia
     g$interleave-equal?$19441$f3xia
     (case-lambda
       ((g$x$19420$f3xia g$y$19421$f3xia)
        (g$interleave?$19350$f3xia
          g$x$19420$f3xia
          g$y$19421$f3xia
          g$k0$19336$f3xia))))
   (g$precheck/interleave-equal?$19352$f3xia
     g$precheck/interleave-equal?$19442$f3xia
     (case-lambda
       ((g$x$19422$f3xia g$y$19423$f3xia)
        ((case-lambda
           ((g$k$19424$f3xia)
            (if g$k$19424$f3xia
              (begin
                '#f
                ((case-lambda
                   ((g$t$19425$f3xia)
                    (if g$t$19425$f3xia
                      g$t$19425$f3xia
                      (begin
                        '#f
                        (g$interleave?$19350$f3xia
                          g$x$19422$f3xia
                          g$y$19423$f3xia
                          '0)))))
                 (g$>$17041$f3xia g$k$19424$f3xia '0)))
              '#f)))
         (g$pre?$19349$f3xia
           g$x$19422$f3xia
           g$y$19423$f3xia
           g$k0$19336$f3xia)))))
   (g$equal?$19353$f3xia
     g$equal?$19443$f3xia
     (case-lambda
       ((g$x$19426$f3xia g$y$19427$f3xia)
        (g$precheck/interleave-equal?$19352$f3xia
          g$x$19426$f3xia
          g$y$19427$f3xia)))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$19444$f3xia
     g$library-version-mismatch-warning$19647$f3xia
     (case-lambda
       ((g$name$19619$f3xia
          g$depname$19620$f3xia
          g$filename$19621$f3xia)
        (g$fprintf$19330$f3xia
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$19619$f3xia
          g$depname$19620$f3xia
          g$filename$19621$f3xia))))
   (g$file-locator-resolution-error$19445$f3xia
     g$file-locator-resolution-error$19648$f3xia
     (case-lambda
       ((g$libname$19622$f3xia g$failed-list$19623$f3xia)
        (letrec* ((g$9326$19624$f3xia
                    (make-record-type-descriptor
                      '&library-resolution
                      g$&condition-rtd$12195$f3xia
                      'g$9329$f3xia
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$9328$19625$f3xia '#f)
                  (g$9327$19626$f3xia
                    (make-record-constructor-descriptor
                      g$9326$19624$f3xia
                      g$&condition-rcd$12196$f3xia
                      g$9328$19625$f3xia))
                  (g$9325$19629$f3xia
                    (record-predicate g$9326$19624$f3xia))
                  (g$make-library-resolution-condition$19630$f3xia
                    (record-constructor g$9327$19626$f3xia))
                  (g$9323$19631$f3xia
                    (record-accessor g$9326$19624$f3xia '0))
                  (g$9324$19632$f3xia
                    (record-accessor g$9326$19624$f3xia '1))
                  (g$library-resolution-condition?$19633$f3xia
                    (condition-predicate g$9326$19624$f3xia))
                  (g$condition-library$19634$f3xia
                    (condition-accessor
                      g$9326$19624$f3xia
                      g$9323$19631$f3xia))
                  (g$condition-files$19635$f3xia
                    (condition-accessor
                      g$9326$19624$f3xia
                      g$9324$19632$f3xia)))
          (raise
            (condition
              (g$make-error$12227$f3xia)
              (g$make-who-condition$12261$f3xia 'expander)
              (g$make-message-condition$12201$f3xia
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$19630$f3xia
                g$libname$19622$f3xia
                g$failed-list$19623$f3xia)))))))
   (g$read-library-source-file$19446$f3xia
     g$read-library-source-file$19649$f3xia
     (case-lambda
       ((g$file-name$19636$f3xia)
        (g$with-input-from-file$19153$f3xia
          g$file-name$19636$f3xia
          read-annotated))))
   (g$make-parameter$19447$f3xia
     g$make-parameter$19650$f3xia
     (case-lambda
       ((g$x$19637$f3xia)
        (g$make-parameter$19447$f3xia
          g$x$19637$f3xia
          (case-lambda ((g$x$19638$f3xia) g$x$19638$f3xia))))
       ((g$x$19639$f3xia g$fender$19640$f3xia)
        (begin
          (if (not (g$procedure?$15978$f3xia g$fender$19640$f3xia))
            (g$assertion-error$25016$f3xia
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(90,8) - (90,36)"))
            (void))
          ((case-lambda
             ((g$x$19641$f3xia)
              (case-lambda
                (() g$x$19641$f3xia)
                ((g$v$19642$f3xia)
                 (set! g$x$19641$f3xia
                   (g$fender$19640$f3xia g$v$19642$f3xia))))))
           (g$fender$19640$f3xia g$x$19639$f3xia))))))
   (g$file-options-constructor$19615$f3xia
     g$file-options-constructor$19651$f3xia
     (g$make-parameter$19447$f3xia '#f))
   (g$file-options-spec$19616$f3xia
     g$file-options-spec$19652$f3xia
     (case-lambda
       ((g$x$19643$f3xia)
        ((g$file-options-constructor$19615$f3xia) g$x$19643$f3xia))))
   (g$set-label-binding!$19617$f3xia
     g$set-label-binding!$19653$f3xia
     (case-lambda
       ((g$label$19644$f3xia g$binding$19645$f3xia)
        (set-symbol-value! g$label$19644$f3xia g$binding$19645$f3xia))))
   (g$label-binding$19618$f3xia
     g$label-binding$19654$f3xia
     (case-lambda
       ((g$label$19646$f3xia)
        (if (symbol-bound? g$label$19646$f3xia)
          (begin '#f (symbol-value g$label$19646$f3xia))
          '#f)))))
  (void))

(library-letrec* (ironscheme pretty-print)
  ((g$genwrite:newline-str$19655$f3xia
     g$genwrite:newline-str$19848$f3xia
     (g$make-string$15984$f3xia '1 '#\newline))
   (g$symbol->string$19656$f3xia
     g$symbol->string$19849$f3xia
     (case-lambda
       ((g$s$19668$f3xia)
        (g$symbol->string$15996$f3xia
          (if (g$pretty-gensyms$19665$f3xia)
            (ungensym g$s$19668$f3xia)
            g$s$19668$f3xia)))))
   (g$read-macro-body$19657$f3xia
     g$read-macro-body$19850$f3xia
     (case-lambda
       ((g$l$19669$f3xia) (g$cadr$16014$f3xia g$l$19669$f3xia))))
   (g$read-macro-prefix$19658$f3xia
     g$read-macro-prefix$19851$f3xia
     (case-lambda
       ((g$l$19670$f3xia)
        ((case-lambda
           ((g$head$19671$f3xia g$tail$19672$f3xia)
            ((case-lambda
               ((g$t$19673$f3xia)
                (if (eqv? g$t$19673$f3xia 'syntax)
                  '"#'"
                  (if (eqv? g$t$19673$f3xia 'quasisyntax)
                    '"#`"
                    (if (eqv? g$t$19673$f3xia 'unsyntax)
                      '"#,"
                      (if (eqv? g$t$19673$f3xia 'unsyntax-splicing)
                        '"#,@"
                        (if (eqv? g$t$19673$f3xia 'quote)
                          '"'"
                          (if (eqv? g$t$19673$f3xia 'quasiquote)
                            '"`"
                            (if (eqv? g$t$19673$f3xia 'unquote)
                              '","
                              (if (eqv?
                                    g$t$19673$f3xia
                                    'unquote-splicing)
                                '",@"
                                (if '#f '#f (void))))))))))))
             g$head$19671$f3xia)))
         (car g$l$19670$f3xia)
         (cdr g$l$19670$f3xia)))))
   (g$length1?$19659$f3xia
     g$length1?$19852$f3xia
     (case-lambda
       ((g$l$19674$f3xia)
        (if (pair? g$l$19674$f3xia)
          (begin '#f (null? (cdr g$l$19674$f3xia)))
          '#f))))
   (g$read-macro?$19660$f3xia
     g$read-macro?$19853$f3xia
     (case-lambda
       ((g$l$19675$f3xia)
        ((case-lambda
           ((g$head$19676$f3xia g$tail$19677$f3xia)
            ((case-lambda
               ((g$t$19678$f3xia)
                (if (g$memv$15539$f3xia
                      g$t$19678$f3xia
                      '(quote
                         quasiquote
                         unquote
                         unquote-splicing
                         syntax
                         quasisyntax
                         unsyntax
                         unsyntax-splicing))
                  (g$length1?$19659$f3xia g$tail$19677$f3xia)
                  ((case-lambda (() (begin '#f '#f)))))))
             g$head$19676$f3xia)))
         (car g$l$19675$f3xia)
         (cdr g$l$19675$f3xia)))))
   (g$generic-write$19661$f3xia
     g$generic-write$19854$f3xia
     (case-lambda
       ((g$obj$19679$f3xia
          g$display?$19680$f3xia
          g$width$19681$f3xia
          g$output$19682$f3xia)
        (letrec* ((g$out$19683$f3xia
                    (case-lambda
                      ((g$str$19832$f3xia g$col$19833$f3xia)
                       (if g$col$19833$f3xia
                         (if (g$output$19682$f3xia g$str$19832$f3xia)
                           (begin
                             '#f
                             (g$fx+$15263$f3xia
                               g$col$19833$f3xia
                               (g$string-length$15988$f3xia
                                 g$str$19832$f3xia)))
                           '#f)
                         '#f))))
                  (g$wr$19684$f3xia
                    (case-lambda
                      ((g$obj$19815$f3xia g$col$19816$f3xia)
                       (letrec* ((g$wr-expr$19817$f3xia
                                   (case-lambda
                                     ((g$expr$19830$f3xia
                                        g$col$19831$f3xia)
                                      (if (g$read-macro?$19660$f3xia
                                            g$expr$19830$f3xia)
                                        (g$wr$19684$f3xia
                                          (g$read-macro-body$19657$f3xia
                                            g$expr$19830$f3xia)
                                          (g$out$19683$f3xia
                                            (g$read-macro-prefix$19658$f3xia
                                              g$expr$19830$f3xia)
                                            g$col$19831$f3xia))
                                        (g$wr-lst$19818$f3xia
                                          g$expr$19830$f3xia
                                          g$col$19831$f3xia)))))
                                 (g$wr-lst$19818$f3xia
                                   (case-lambda
                                     ((g$l$19825$f3xia
                                        g$col$19826$f3xia)
                                      (if (pair? g$l$19825$f3xia)
                                        ((letrec ((g$loop$19827$f3xia
                                                    (case-lambda
                                                      ((g$l$19828$f3xia
                                                         g$col$19829$f3xia)
                                                       (if (not g$col$19829$f3xia)
                                                         g$col$19829$f3xia
                                                         (if (pair?
                                                               g$l$19828$f3xia)
                                                           (g$loop$19827$f3xia
                                                             (cdr g$l$19828$f3xia)
                                                             (g$wr$19684$f3xia
                                                               (car g$l$19828$f3xia)
                                                               (g$out$19683$f3xia
                                                                 '" "
                                                                 g$col$19829$f3xia)))
                                                           (if (null?
                                                                 g$l$19828$f3xia)
                                                             (g$out$19683$f3xia
                                                               '")"
                                                               g$col$19829$f3xia)
                                                             ((case-lambda
                                                                (()
                                                                 (begin
                                                                   '#f
                                                                   (g$out$19683$f3xia
                                                                     '")"
                                                                     (g$wr$19684$f3xia
                                                                       g$l$19828$f3xia
                                                                       (g$out$19683$f3xia
                                                                         '" . "
                                                                         g$col$19829$f3xia))))))))))))))
                                           g$loop$19827$f3xia)
                                         (cdr g$l$19825$f3xia)
                                         (if g$col$19826$f3xia
                                           (begin
                                             '#f
                                             (g$wr$19684$f3xia
                                               (car g$l$19825$f3xia)
                                               (g$out$19683$f3xia
                                                 '"("
                                                 g$col$19826$f3xia)))
                                           '#f))
                                        (g$out$19683$f3xia
                                          '"()"
                                          g$col$19826$f3xia))))))
                         (if (pair? g$obj$19815$f3xia)
                           (g$wr-expr$19817$f3xia
                             g$obj$19815$f3xia
                             g$col$19816$f3xia)
                           (if (null? g$obj$19815$f3xia)
                             (g$wr-lst$19818$f3xia
                               g$obj$19815$f3xia
                               g$col$19816$f3xia)
                             (if (g$vector?$15974$f3xia
                                   g$obj$19815$f3xia)
                               (g$wr-lst$19818$f3xia
                                 (g$vector->list$16010$f3xia
                                   g$obj$19815$f3xia)
                                 (g$out$19683$f3xia
                                   '"#"
                                   g$col$19816$f3xia))
                               (if (g$boolean?$15977$f3xia
                                     g$obj$19815$f3xia)
                                 (g$out$19683$f3xia
                                   (if g$obj$19815$f3xia '"#t" '"#f")
                                   g$col$19816$f3xia)
                                 (if (g$number?$17016$f3xia
                                       g$obj$19815$f3xia)
                                   (g$out$19683$f3xia
                                     (g$number->string$17037$f3xia
                                       g$obj$19815$f3xia)
                                     g$col$19816$f3xia)
                                   (if (g$symbol?$15976$f3xia
                                         g$obj$19815$f3xia)
                                     (g$out$19683$f3xia
                                       (g$symbol->string$19656$f3xia
                                         g$obj$19815$f3xia)
                                       g$col$19816$f3xia)
                                     (if (g$string?$15972$f3xia
                                           g$obj$19815$f3xia)
                                       (if g$display?$19680$f3xia
                                         (g$out$19683$f3xia
                                           g$obj$19815$f3xia
                                           g$col$19816$f3xia)
                                         ((letrec ((g$loop$19819$f3xia
                                                     (case-lambda
                                                       ((g$i$19820$f3xia
                                                          g$j$19821$f3xia
                                                          g$col$19822$f3xia)
                                                        (if (if g$col$19822$f3xia
                                                              (begin
                                                                '#f
                                                                (g$fx<?$15277$f3xia
                                                                  g$j$19821$f3xia
                                                                  (g$string-length$15988$f3xia
                                                                    g$obj$19815$f3xia)))
                                                              '#f)
                                                          ((case-lambda
                                                             ((g$c$19823$f3xia)
                                                              (if ((case-lambda
                                                                     ((g$t$19824$f3xia)
                                                                      (if g$t$19824$f3xia
                                                                        g$t$19824$f3xia
                                                                        (begin
                                                                          '#f
                                                                          (g$char=?$16055$f3xia
                                                                            g$c$19823$f3xia
                                                                            '#\")))))
                                                                   (g$char=?$16055$f3xia
                                                                     g$c$19823$f3xia
                                                                     '#\\))
                                                                (g$loop$19819$f3xia
                                                                  g$j$19821$f3xia
                                                                  (g$fx+$15263$f3xia
                                                                    g$j$19821$f3xia
                                                                    '1)
                                                                  (g$out$19683$f3xia
                                                                    '"\\"
                                                                    (g$out$19683$f3xia
                                                                      (g$substring$15993$f3xia
                                                                        g$obj$19815$f3xia
                                                                        g$i$19820$f3xia
                                                                        g$j$19821$f3xia)
                                                                      g$col$19822$f3xia)))
                                                                (g$loop$19819$f3xia
                                                                  g$i$19820$f3xia
                                                                  (g$fx+$15263$f3xia
                                                                    g$j$19821$f3xia
                                                                    '1)
                                                                  g$col$19822$f3xia))))
                                                           (g$string-ref$15985$f3xia
                                                             g$obj$19815$f3xia
                                                             g$j$19821$f3xia))
                                                          (g$out$19683$f3xia
                                                            '"\""
                                                            (g$out$19683$f3xia
                                                              (g$substring$15993$f3xia
                                                                g$obj$19815$f3xia
                                                                g$i$19820$f3xia
                                                                g$j$19821$f3xia)
                                                              g$col$19822$f3xia)))))))
                                            g$loop$19819$f3xia)
                                          '0
                                          '0
                                          (g$out$19683$f3xia
                                            '"\""
                                            g$col$19816$f3xia)))
                                       ((case-lambda
                                          (()
                                           (begin
                                             '#f
                                             (g$out$19683$f3xia
                                               (g$format$19331$f3xia
                                                 (if g$display?$19680$f3xia
                                                   '"~a"
                                                   '"~s")
                                                 g$obj$19815$f3xia)
                                               g$col$19816$f3xia))))))))))))))))
                  (g$pp$19685$f3xia
                    (case-lambda
                      ((g$obj$19686$f3xia g$col$19687$f3xia)
                       (letrec* ((g$spaces$19688$f3xia
                                   (case-lambda
                                     ((g$n$19813$f3xia
                                        g$col$19814$f3xia)
                                      (if (g$fx>?$15279$f3xia
                                            g$n$19813$f3xia
                                            '0)
                                        (if (g$fx>?$15279$f3xia
                                              g$n$19813$f3xia
                                              '7)
                                          (g$spaces$19688$f3xia
                                            (g$fx-$15265$f3xia
                                              g$n$19813$f3xia
                                              '8)
                                            (g$out$19683$f3xia
                                              '"        "
                                              g$col$19814$f3xia))
                                          (g$out$19683$f3xia
                                            (g$substring$15993$f3xia
                                              '"        "
                                              '0
                                              g$n$19813$f3xia)
                                            g$col$19814$f3xia))
                                        g$col$19814$f3xia))))
                                 (g$indent$19689$f3xia
                                   (case-lambda
                                     ((g$to$19811$f3xia
                                        g$col$19812$f3xia)
                                      (if g$col$19812$f3xia
                                        (begin
                                          '#f
                                          (if (g$fx<?$15277$f3xia
                                                g$to$19811$f3xia
                                                g$col$19812$f3xia)
                                            (if (g$out$19683$f3xia
                                                  g$genwrite:newline-str$19655$f3xia
                                                  g$col$19812$f3xia)
                                              (begin
                                                '#f
                                                (g$spaces$19688$f3xia
                                                  g$to$19811$f3xia
                                                  '0))
                                              '#f)
                                            (g$spaces$19688$f3xia
                                              (g$fx-$15265$f3xia
                                                g$to$19811$f3xia
                                                g$col$19812$f3xia)
                                              g$col$19812$f3xia)))
                                        '#f))))
                                 (g$pr$19690$f3xia
                                   (case-lambda
                                     ((g$obj$19803$f3xia
                                        g$col$19804$f3xia
                                        g$extra$19805$f3xia
                                        g$pp-pair$19806$f3xia)
                                      (if ((case-lambda
                                             ((g$t$19807$f3xia)
                                              (if g$t$19807$f3xia
                                                g$t$19807$f3xia
                                                (begin
                                                  '#f
                                                  (g$vector?$15974$f3xia
                                                    g$obj$19803$f3xia)))))
                                           (pair? g$obj$19803$f3xia))
                                        ((case-lambda
                                           ((g$result$19808$f3xia
                                              g$left$19809$f3xia)
                                            (begin
                                              (g$generic-write$19661$f3xia
                                                g$obj$19803$f3xia
                                                g$display?$19680$f3xia
                                                '#f
                                                (case-lambda
                                                  ((g$str$19810$f3xia)
                                                   (begin
                                                     (set! g$result$19808$f3xia
                                                       (cons
                                                         g$str$19810$f3xia
                                                         g$result$19808$f3xia))
                                                     (set! g$left$19809$f3xia
                                                       (g$fx-$15265$f3xia
                                                         g$left$19809$f3xia
                                                         (g$string-length$15988$f3xia
                                                           g$str$19810$f3xia)))
                                                     (g$fx>?$15279$f3xia
                                                       g$left$19809$f3xia
                                                       '0)))))
                                              (if (g$fx>?$15279$f3xia
                                                    g$left$19809$f3xia
                                                    '0)
                                                (g$out$19683$f3xia
                                                  (g$reverse-string-append$19666$f3xia
                                                    g$result$19808$f3xia)
                                                  g$col$19804$f3xia)
                                                (if (pair?
                                                      g$obj$19803$f3xia)
                                                  (g$pp-pair$19806$f3xia
                                                    g$obj$19803$f3xia
                                                    g$col$19804$f3xia
                                                    g$extra$19805$f3xia)
                                                  (g$pp-list$19693$f3xia
                                                    (g$vector->list$16010$f3xia
                                                      g$obj$19803$f3xia)
                                                    (g$out$19683$f3xia
                                                      '"#"
                                                      g$col$19804$f3xia)
                                                    g$extra$19805$f3xia
                                                    g$pp-expr$19691$f3xia))))))
                                         '()
                                         (g$min$16044$f3xia
                                           (g$fx+$15263$f3xia
                                             (g$fx-$15265$f3xia
                                               (g$fx-$15265$f3xia
                                                 g$width$19681$f3xia
                                                 g$col$19804$f3xia)
                                               g$extra$19805$f3xia)
                                             '1)
                                           (g$pretty-width$19662$f3xia)))
                                        (g$wr$19684$f3xia
                                          g$obj$19803$f3xia
                                          g$col$19804$f3xia)))))
                                 (g$pp-expr$19691$f3xia
                                   (case-lambda
                                     ((g$expr$19798$f3xia
                                        g$col$19799$f3xia
                                        g$extra$19800$f3xia)
                                      (if (g$read-macro?$19660$f3xia
                                            g$expr$19798$f3xia)
                                        (g$pr$19690$f3xia
                                          (g$read-macro-body$19657$f3xia
                                            g$expr$19798$f3xia)
                                          (g$out$19683$f3xia
                                            (g$read-macro-prefix$19658$f3xia
                                              g$expr$19798$f3xia)
                                            g$col$19799$f3xia)
                                          g$extra$19800$f3xia
                                          g$pp-expr$19691$f3xia)
                                        ((case-lambda
                                           ((g$head$19801$f3xia)
                                            (if (g$symbol?$15976$f3xia
                                                  g$head$19801$f3xia)
                                              ((case-lambda
                                                 ((g$proc$19802$f3xia)
                                                  (if g$proc$19802$f3xia
                                                    (g$proc$19802$f3xia
                                                      g$expr$19798$f3xia
                                                      g$col$19799$f3xia
                                                      g$extra$19800$f3xia)
                                                    (if (g$fx>?$15279$f3xia
                                                          (g$string-length$15988$f3xia
                                                            (g$symbol->string$19656$f3xia
                                                              g$head$19801$f3xia))
                                                          (g$max-call-head-width$19664$f3xia))
                                                      (g$pp-general$19695$f3xia
                                                        g$expr$19798$f3xia
                                                        g$col$19799$f3xia
                                                        g$extra$19800$f3xia
                                                        '#f
                                                        '#f
                                                        '#f
                                                        g$pp-expr$19691$f3xia)
                                                      (g$pp-call$19692$f3xia
                                                        g$expr$19798$f3xia
                                                        g$col$19799$f3xia
                                                        g$extra$19800$f3xia
                                                        g$pp-expr$19691$f3xia)))))
                                               (g$style$19707$f3xia
                                                 g$head$19801$f3xia))
                                              (g$pp-list$19693$f3xia
                                                g$expr$19798$f3xia
                                                g$col$19799$f3xia
                                                g$extra$19800$f3xia
                                                g$pp-expr$19691$f3xia))))
                                         (car g$expr$19798$f3xia))))))
                                 (g$pp-call$19692$f3xia
                                   (case-lambda
                                     ((g$expr$19793$f3xia
                                        g$col$19794$f3xia
                                        g$extra$19795$f3xia
                                        g$pp-item$19796$f3xia)
                                      ((case-lambda
                                         ((g$col*$19797$f3xia)
                                          (if g$col$19794$f3xia
                                            (begin
                                              '#f
                                              (g$pp-down$19694$f3xia
                                                (cdr g$expr$19793$f3xia)
                                                g$col*$19797$f3xia
                                                (g$fx+$15263$f3xia
                                                  g$col*$19797$f3xia
                                                  '1)
                                                g$extra$19795$f3xia
                                                g$pp-item$19796$f3xia))
                                            '#f)))
                                       (g$wr$19684$f3xia
                                         (car g$expr$19793$f3xia)
                                         (g$out$19683$f3xia
                                           '"("
                                           g$col$19794$f3xia))))))
                                 (g$pp-list$19693$f3xia
                                   (case-lambda
                                     ((g$l$19788$f3xia
                                        g$col$19789$f3xia
                                        g$extra$19790$f3xia
                                        g$pp-item$19791$f3xia)
                                      ((case-lambda
                                         ((g$col$19792$f3xia)
                                          (g$pp-down$19694$f3xia
                                            g$l$19788$f3xia
                                            g$col$19792$f3xia
                                            g$col$19792$f3xia
                                            g$extra$19790$f3xia
                                            g$pp-item$19791$f3xia)))
                                       (g$out$19683$f3xia
                                         '"("
                                         g$col$19789$f3xia)))))
                                 (g$pp-down$19694$f3xia
                                   (case-lambda
                                     ((g$l$19778$f3xia
                                        g$col1$19779$f3xia
                                        g$col2$19780$f3xia
                                        g$extra$19781$f3xia
                                        g$pp-item$19782$f3xia)
                                      ((letrec ((g$loop$19783$f3xia
                                                  (case-lambda
                                                    ((g$l$19784$f3xia
                                                       g$col$19785$f3xia)
                                                     (if g$col$19785$f3xia
                                                       (begin
                                                         '#f
                                                         (if (pair?
                                                               g$l$19784$f3xia)
                                                           ((case-lambda
                                                              ((g$rest$19786$f3xia)
                                                               ((case-lambda
                                                                  ((g$extra$19787$f3xia)
                                                                   (g$loop$19783$f3xia
                                                                     g$rest$19786$f3xia
                                                                     (g$pr$19690$f3xia
                                                                       (car g$l$19784$f3xia)
                                                                       (g$indent$19689$f3xia
                                                                         g$col2$19780$f3xia
                                                                         g$col$19785$f3xia)
                                                                       g$extra$19787$f3xia
                                                                       g$pp-item$19782$f3xia))))
                                                                (if (null?
                                                                      g$rest$19786$f3xia)
                                                                  (g$fx+$15263$f3xia
                                                                    g$extra$19781$f3xia
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$l$19784$f3xia))
                                                           (if (null?
                                                                 g$l$19784$f3xia)
                                                             (g$out$19683$f3xia
                                                               '")"
                                                               g$col$19785$f3xia)
                                                             ((case-lambda
                                                                (()
                                                                 (begin
                                                                   '#f
                                                                   (g$out$19683$f3xia
                                                                     '")"
                                                                     (g$pr$19690$f3xia
                                                                       g$l$19784$f3xia
                                                                       (g$indent$19689$f3xia
                                                                         g$col2$19780$f3xia
                                                                         (g$out$19683$f3xia
                                                                           '"."
                                                                           (g$indent$19689$f3xia
                                                                             g$col2$19780$f3xia
                                                                             g$col$19785$f3xia)))
                                                                       (g$fx+$15263$f3xia
                                                                         g$extra$19781$f3xia
                                                                         '1)
                                                                       g$pp-item$19782$f3xia)))))))))
                                                       '#f)))))
                                         g$loop$19783$f3xia)
                                       g$l$19778$f3xia
                                       g$col1$19779$f3xia))))
                                 (g$pp-general$19695$f3xia
                                   (case-lambda
                                     ((g$expr$19745$f3xia
                                        g$col$19746$f3xia
                                        g$extra$19747$f3xia
                                        g$named?$19748$f3xia
                                        g$pp-1$19749$f3xia
                                        g$pp-2$19750$f3xia
                                        g$pp-3$19751$f3xia)
                                      (letrec* ((g$tail1$19752$f3xia
                                                  (case-lambda
                                                    ((g$rest$19771$f3xia
                                                       g$col1$19772$f3xia
                                                       g$col2$19773$f3xia
                                                       g$col3$19774$f3xia)
                                                     (if (if g$pp-1$19749$f3xia
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$19771$f3xia))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$19775$f3xia)
                                                           ((case-lambda
                                                              ((g$rest$19776$f3xia)
                                                               ((case-lambda
                                                                  ((g$extra$19777$f3xia)
                                                                   (g$tail2$19753$f3xia
                                                                     g$rest$19776$f3xia
                                                                     g$col1$19772$f3xia
                                                                     (g$pr$19690$f3xia
                                                                       g$val1$19775$f3xia
                                                                       (g$indent$19689$f3xia
                                                                         g$col3$19774$f3xia
                                                                         g$col2$19773$f3xia)
                                                                       g$extra$19777$f3xia
                                                                       g$pp-1$19749$f3xia)
                                                                     g$col3$19774$f3xia)))
                                                                (if (null?
                                                                      g$rest$19776$f3xia)
                                                                  (g$fx+$15263$f3xia
                                                                    g$extra$19747$f3xia
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$19771$f3xia))))
                                                        (car g$rest$19771$f3xia))
                                                       (g$tail2$19753$f3xia
                                                         g$rest$19771$f3xia
                                                         g$col1$19772$f3xia
                                                         g$col2$19773$f3xia
                                                         g$col3$19774$f3xia)))))
                                                (g$tail2$19753$f3xia
                                                  (case-lambda
                                                    ((g$rest$19764$f3xia
                                                       g$col1$19765$f3xia
                                                       g$col2$19766$f3xia
                                                       g$col3$19767$f3xia)
                                                     (if (if g$pp-2$19750$f3xia
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$19764$f3xia))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$19768$f3xia)
                                                           ((case-lambda
                                                              ((g$rest$19769$f3xia)
                                                               ((case-lambda
                                                                  ((g$extra$19770$f3xia)
                                                                   (g$tail3$19754$f3xia
                                                                     g$rest$19769$f3xia
                                                                     g$col1$19765$f3xia
                                                                     (g$pr$19690$f3xia
                                                                       g$val1$19768$f3xia
                                                                       (g$indent$19689$f3xia
                                                                         g$col3$19767$f3xia
                                                                         g$col2$19766$f3xia)
                                                                       g$extra$19770$f3xia
                                                                       g$pp-2$19750$f3xia))))
                                                                (if (null?
                                                                      g$rest$19769$f3xia)
                                                                  (g$fx+$15263$f3xia
                                                                    g$extra$19747$f3xia
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$19764$f3xia))))
                                                        (car g$rest$19764$f3xia))
                                                       (g$tail3$19754$f3xia
                                                         g$rest$19764$f3xia
                                                         g$col1$19765$f3xia
                                                         g$col2$19766$f3xia)))))
                                                (g$tail3$19754$f3xia
                                                  (case-lambda
                                                    ((g$rest$19761$f3xia
                                                       g$col1$19762$f3xia
                                                       g$col2$19763$f3xia)
                                                     (g$pp-down$19694$f3xia
                                                       g$rest$19761$f3xia
                                                       g$col2$19763$f3xia
                                                       g$col1$19762$f3xia
                                                       g$extra$19747$f3xia
                                                       g$pp-3$19751$f3xia)))))
                                        ((case-lambda
                                           ((g$head$19755$f3xia)
                                            ((case-lambda
                                               ((g$rest$19756$f3xia)
                                                ((case-lambda
                                                   ((g$col*$19757$f3xia)
                                                    (if (if g$named?$19748$f3xia
                                                          (begin
                                                            '#f
                                                            (pair?
                                                              g$rest$19756$f3xia))
                                                          '#f)
                                                      ((case-lambda
                                                         ((g$name$19758$f3xia)
                                                          ((case-lambda
                                                             ((g$rest$19759$f3xia)
                                                              ((case-lambda
                                                                 ((g$col**$19760$f3xia)
                                                                  (g$tail1$19752$f3xia
                                                                    g$rest$19759$f3xia
                                                                    (g$fx+$15263$f3xia
                                                                      g$col$19746$f3xia
                                                                      (g$indent-general$19663$f3xia))
                                                                    g$col**$19760$f3xia
                                                                    (g$fx+$15263$f3xia
                                                                      g$col**$19760$f3xia
                                                                      '1))))
                                                               (g$wr$19684$f3xia
                                                                 g$name$19758$f3xia
                                                                 (g$out$19683$f3xia
                                                                   '" "
                                                                   g$col*$19757$f3xia)))))
                                                           (cdr g$rest$19756$f3xia))))
                                                       (car g$rest$19756$f3xia))
                                                      (g$tail1$19752$f3xia
                                                        g$rest$19756$f3xia
                                                        (g$fx+$15263$f3xia
                                                          g$col$19746$f3xia
                                                          (g$indent-general$19663$f3xia))
                                                        g$col*$19757$f3xia
                                                        (g$fx+$15263$f3xia
                                                          g$col*$19757$f3xia
                                                          '1)))))
                                                 (g$wr$19684$f3xia
                                                   g$head$19755$f3xia
                                                   (g$out$19683$f3xia
                                                     '"("
                                                     g$col$19746$f3xia)))))
                                             (cdr g$expr$19745$f3xia))))
                                         (car g$expr$19745$f3xia))))))
                                 (g$pp-expr-list$19696$f3xia
                                   (case-lambda
                                     ((g$l$19742$f3xia
                                        g$col$19743$f3xia
                                        g$extra$19744$f3xia)
                                      (g$pp-list$19693$f3xia
                                        g$l$19742$f3xia
                                        g$col$19743$f3xia
                                        g$extra$19744$f3xia
                                        g$pp-expr$19691$f3xia))))
                                 (g$pp-SYNTAX-CASE$19697$f3xia
                                   (case-lambda
                                     ((g$expr$19739$f3xia
                                        g$col$19740$f3xia
                                        g$extra$19741$f3xia)
                                      (g$pp-general$19695$f3xia
                                        g$expr$19739$f3xia
                                        g$col$19740$f3xia
                                        g$extra$19741$f3xia
                                        '#t
                                        g$pp-expr-list$19696$f3xia
                                        '#f
                                        g$pp-expr$19691$f3xia))))
                                 (g$pp-LAMBDA$19698$f3xia
                                   (case-lambda
                                     ((g$expr$19736$f3xia
                                        g$col$19737$f3xia
                                        g$extra$19738$f3xia)
                                      (g$pp-general$19695$f3xia
                                        g$expr$19736$f3xia
                                        g$col$19737$f3xia
                                        g$extra$19738$f3xia
                                        '#f
                                        g$pp-expr-list$19696$f3xia
                                        '#f
                                        g$pp-expr$19691$f3xia))))
                                 (g$pp-IF$19699$f3xia
                                   (case-lambda
                                     ((g$expr$19733$f3xia
                                        g$col$19734$f3xia
                                        g$extra$19735$f3xia)
                                      (g$pp-general$19695$f3xia
                                        g$expr$19733$f3xia
                                        g$col$19734$f3xia
                                        g$extra$19735$f3xia
                                        '#f
                                        g$pp-expr$19691$f3xia
                                        '#f
                                        g$pp-expr$19691$f3xia))))
                                 (g$pp-COND$19700$f3xia
                                   (case-lambda
                                     ((g$expr$19730$f3xia
                                        g$col$19731$f3xia
                                        g$extra$19732$f3xia)
                                      (g$pp-call$19692$f3xia
                                        g$expr$19730$f3xia
                                        g$col$19731$f3xia
                                        g$extra$19732$f3xia
                                        g$pp-expr-list$19696$f3xia))))
                                 (g$pp-CASE$19701$f3xia
                                   (case-lambda
                                     ((g$expr$19727$f3xia
                                        g$col$19728$f3xia
                                        g$extra$19729$f3xia)
                                      (g$pp-general$19695$f3xia
                                        g$expr$19727$f3xia
                                        g$col$19728$f3xia
                                        g$extra$19729$f3xia
                                        '#f
                                        g$pp-expr$19691$f3xia
                                        '#f
                                        g$pp-expr-list$19696$f3xia))))
                                 (g$pp-CASE-LAMBDA$19702$f3xia
                                   (case-lambda
                                     ((g$expr$19724$f3xia
                                        g$col$19725$f3xia
                                        g$extra$19726$f3xia)
                                      (g$pp-general$19695$f3xia
                                        g$expr$19724$f3xia
                                        g$col$19725$f3xia
                                        g$extra$19726$f3xia
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr-list$19696$f3xia))))
                                 (g$pp-AND$19703$f3xia
                                   (case-lambda
                                     ((g$expr$19721$f3xia
                                        g$col$19722$f3xia
                                        g$extra$19723$f3xia)
                                      (g$pp-call$19692$f3xia
                                        g$expr$19721$f3xia
                                        g$col$19722$f3xia
                                        g$extra$19723$f3xia
                                        g$pp-expr$19691$f3xia))))
                                 (g$pp-LET$19704$f3xia
                                   (case-lambda
                                     ((g$expr$19716$f3xia
                                        g$col$19717$f3xia
                                        g$extra$19718$f3xia)
                                      ((case-lambda
                                         ((g$rest$19719$f3xia)
                                          ((case-lambda
                                             ((g$named?$19720$f3xia)
                                              (g$pp-general$19695$f3xia
                                                g$expr$19716$f3xia
                                                g$col$19717$f3xia
                                                g$extra$19718$f3xia
                                                g$named?$19720$f3xia
                                                g$pp-expr-list$19696$f3xia
                                                '#f
                                                g$pp-expr$19691$f3xia)))
                                           (if (pair?
                                                 g$rest$19719$f3xia)
                                             (begin
                                               '#f
                                               (g$symbol?$15976$f3xia
                                                 (car g$rest$19719$f3xia)))
                                             '#f))))
                                       (cdr g$expr$19716$f3xia)))))
                                 (g$pp-BEGIN$19705$f3xia
                                   (case-lambda
                                     ((g$expr$19713$f3xia
                                        g$col$19714$f3xia
                                        g$extra$19715$f3xia)
                                      (g$pp-general$19695$f3xia
                                        g$expr$19713$f3xia
                                        g$col$19714$f3xia
                                        g$extra$19715$f3xia
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr$19691$f3xia))))
                                 (g$pp-DO$19706$f3xia
                                   (case-lambda
                                     ((g$expr$19710$f3xia
                                        g$col$19711$f3xia
                                        g$extra$19712$f3xia)
                                      (g$pp-general$19695$f3xia
                                        g$expr$19710$f3xia
                                        g$col$19711$f3xia
                                        g$extra$19712$f3xia
                                        '#f
                                        g$pp-expr-list$19696$f3xia
                                        g$pp-expr-list$19696$f3xia
                                        g$pp-expr$19691$f3xia))))
                                 (g$style$19707$f3xia
                                   (case-lambda
                                     ((g$head$19708$f3xia)
                                      ((case-lambda
                                         ((g$t$19709$f3xia)
                                          (if (g$memv$15539$f3xia
                                                g$t$19709$f3xia
                                                '(lambda let*
                                                   letrec
                                                   letrec*
                                                   define
                                                   define-syntax
                                                   syntax-rules
                                                   let-syntax
                                                   letrec-syntax
                                                   with-syntax
                                                   library
                                                   library-letrec*))
                                            g$pp-LAMBDA$19698$f3xia
                                            (if (eqv?
                                                  g$t$19709$f3xia
                                                  'syntax-case)
                                              g$pp-SYNTAX-CASE$19697$f3xia
                                              (if (g$memv$15539$f3xia
                                                    g$t$19709$f3xia
                                                    '(if set!
                                                       when
                                                       unless))
                                                g$pp-IF$19699$f3xia
                                                (if (eqv?
                                                      g$t$19709$f3xia
                                                      'cond)
                                                  g$pp-COND$19700$f3xia
                                                  (if (eqv?
                                                        g$t$19709$f3xia
                                                        'case-lambda)
                                                    g$pp-CASE-LAMBDA$19702$f3xia
                                                    (if (eqv?
                                                          g$t$19709$f3xia
                                                          'case)
                                                      g$pp-CASE$19701$f3xia
                                                      (if (g$memv$15539$f3xia
                                                            g$t$19709$f3xia
                                                            '(and or
                                                                  import
                                                                  export))
                                                        g$pp-AND$19703$f3xia
                                                        (if (eqv?
                                                              g$t$19709$f3xia
                                                              'let)
                                                          g$pp-LET$19704$f3xia
                                                          (if (eqv?
                                                                g$t$19709$f3xia
                                                                'begin)
                                                            g$pp-BEGIN$19705$f3xia
                                                            (if (eqv?
                                                                  g$t$19709$f3xia
                                                                  'do)
                                                              g$pp-DO$19706$f3xia
                                                              ((case-lambda
                                                                 (()
                                                                  (begin
                                                                    '#f
                                                                    '#f))))))))))))))))
                                       g$head$19708$f3xia)))))
                         (g$pr$19690$f3xia
                           g$obj$19686$f3xia
                           g$col$19687$f3xia
                           '0
                           g$pp-expr$19691$f3xia))))))
          (if g$width$19681$f3xia
            (g$out$19683$f3xia
              g$genwrite:newline-str$19655$f3xia
              (g$pp$19685$f3xia g$obj$19679$f3xia '0))
            (g$wr$19684$f3xia g$obj$19679$f3xia '0))))))
   (g$pretty-width$19662$f3xia
     g$pretty-width$19855$f3xia
     (g$make-parameter$19650$f3xia '72))
   (g$indent-general$19663$f3xia
     g$indent-general$19856$f3xia
     (g$make-parameter$19650$f3xia '2))
   (g$max-call-head-width$19664$f3xia
     g$max-call-head-width$19857$f3xia
     (g$make-parameter$19650$f3xia '3))
   (g$pretty-gensyms$19665$f3xia
     g$pretty-gensyms$19858$f3xia
     (g$make-parameter$19650$f3xia '#f))
   (g$reverse-string-append$19666$f3xia
     g$reverse-string-append$19859$f3xia
     (case-lambda
       ((g$l$19834$f3xia)
        (letrec* ((g$rev-string-append$19835$f3xia
                    (case-lambda
                      ((g$l$19836$f3xia g$i$19837$f3xia)
                       (if (pair? g$l$19836$f3xia)
                         ((case-lambda
                            ((g$str$19838$f3xia)
                             ((case-lambda
                                ((g$len$19839$f3xia)
                                 ((case-lambda
                                    ((g$result$19840$f3xia)
                                     ((letrec ((g$loop$19841$f3xia
                                                 (case-lambda
                                                   ((g$j$19842$f3xia
                                                      g$k$19843$f3xia)
                                                    (if (g$fx<?$15277$f3xia
                                                          g$j$19842$f3xia
                                                          g$len$19839$f3xia)
                                                      (begin
                                                        (g$string-set!$15986$f3xia
                                                          g$result$19840$f3xia
                                                          g$k$19843$f3xia
                                                          (g$string-ref$15985$f3xia
                                                            g$str$19838$f3xia
                                                            g$j$19842$f3xia))
                                                        (g$loop$19841$f3xia
                                                          (g$fx+$15263$f3xia
                                                            g$j$19842$f3xia
                                                            '1)
                                                          (g$fx+$15263$f3xia
                                                            g$k$19843$f3xia
                                                            '1)))
                                                      g$result$19840$f3xia)))))
                                        g$loop$19841$f3xia)
                                      '0
                                      (g$fx-$15265$f3xia
                                        (g$fx-$15265$f3xia
                                          (g$string-length$15988$f3xia
                                            g$result$19840$f3xia)
                                          g$i$19837$f3xia)
                                        g$len$19839$f3xia))))
                                  (g$rev-string-append$19835$f3xia
                                    (cdr g$l$19836$f3xia)
                                    (g$fx+$15263$f3xia
                                      g$i$19837$f3xia
                                      g$len$19839$f3xia)))))
                              (g$string-length$15988$f3xia
                                g$str$19838$f3xia))))
                          (car g$l$19836$f3xia))
                         (g$make-string$15984$f3xia
                           g$i$19837$f3xia))))))
          (g$rev-string-append$19835$f3xia g$l$19834$f3xia '0)))))
   (g$pretty-print$19667$f3xia
     g$pretty-print$19860$f3xia
     (case-lambda
       ((g$obj$19844$f3xia . g$opt$19845$f3xia)
        ((case-lambda
           ((g$port$19846$f3xia)
            (g$generic-write$19661$f3xia
              g$obj$19844$f3xia
              '#f
              (g$pretty-width$19662$f3xia)
              (case-lambda
                ((g$s$19847$f3xia)
                 (begin
                   (display g$s$19847$f3xia g$port$19846$f3xia)
                   '#t))))))
         (if (pair? g$opt$19845$f3xia)
           (car g$opt$19845$f3xia)
           (current-output-port)))))))
  (void))

(library-letrec* (ironscheme cps)
  ((g$cps/generate-reference$19861$f3xia
     g$cps/generate-reference$20126$f3xia
     (case-lambda
       ((g$variable$19914$f3xia)
        (g$cps/generate-operand$19865$f3xia
          (g$make-reference$19891$f3xia g$variable$19914$f3xia)))))
   (g$cps/generate-literal$19862$f3xia
     g$cps/generate-literal$20127$f3xia
     (case-lambda
       ((g$datum$19915$f3xia)
        (g$cps/generate-operand$19865$f3xia
          (g$make-literal$19890$f3xia g$datum$19915$f3xia)))))
   (g$cps/generate-abstraction$19863$f3xia
     g$cps/generate-abstraction$20128$f3xia
     (case-lambda
       ((g$bvl$19916$f3xia g$body-generator$19917$f3xia)
        (g$cps/generate-operand$19865$f3xia
          (g$make-user-abstraction$19892$f3xia
            g$bvl$19916$f3xia
            (case-lambda
              ((g$continuation-variable$19918$f3xia)
               (g$body-generator$19917$f3xia
                 (g$variable-continuator$19878$f3xia
                   g$continuation-variable$19918$f3xia)))))))))
   (g$cps/generate-abstractions$19864$f3xia
     g$cps/generate-abstractions$20129$f3xia
     (case-lambda
       ((g$bvls$19919$f3xia g$body-generators$19920$f3xia)
        (g$cps/generate-operand$19865$f3xia
          (g$make-user-abstractions$19893$f3xia
            g$bvls$19919$f3xia
            (g$map$15550$f3xia
              (case-lambda
                ((g$body-generator$19921$f3xia)
                 (case-lambda
                   ((g$continuation-variable$19922$f3xia)
                    (g$body-generator$19921$f3xia
                      (g$variable-continuator$19878$f3xia
                        g$continuation-variable$19922$f3xia))))))
              g$body-generators$19920$f3xia))))))
   (g$cps/generate-operand$19865$f3xia
     g$cps/generate-operand$20130$f3xia
     (case-lambda
       ((g$operand$19923$f3xia)
        (case-lambda
          ((g$continuator$19924$f3xia)
           (g$continue-with-operand$19881$f3xia
             g$continuator$19924$f3xia
             g$operand$19923$f3xia))))))
   (g$cps/generate-conditional$19866$f3xia
     g$cps/generate-conditional$20131$f3xia
     (case-lambda
       ((g$condition-generator$19925$f3xia
          g$consequent-generator$19926$f3xia
          g$alternative-generator$19927$f3xia)
        (case-lambda
          ((g$continuator$19928$f3xia)
           (letrec* ((g$if-variable$19929$f3xia
                       (case-lambda
                         ((g$continuation-variable$19931$f3xia)
                          ((case-lambda
                             ((g$continuator*$19932$f3xia)
                              (g$condition-generator$19925$f3xia
                                (g$conditional-continuator$19877$f3xia
                                  (case-lambda
                                    ((g$condition$19933$f3xia)
                                     (g$make-conditional$19900$f3xia
                                       g$condition$19933$f3xia
                                       (g$consequent-generator$19926$f3xia
                                         g$continuator*$19932$f3xia)
                                       (g$alternative-generator$19927$f3xia
                                         g$continuator*$19932$f3xia))))))))
                           (g$variable-continuator$19878$f3xia
                             g$continuation-variable$19931$f3xia))))))
             (g$reify-continuation*$19883$f3xia
               g$continuator$19928$f3xia
               g$if-variable$19929$f3xia
               (case-lambda
                 ((g$continuation-abstraction$19930$f3xia)
                  (g$make-conditional-join$19901$f3xia
                    g$continuation-abstraction$19930$f3xia
                    g$if-variable$19929$f3xia))))))))))
   (g$cps/generate-recursive-bind$19867$f3xia
     g$cps/generate-recursive-bind$20132$f3xia
     (case-lambda
       ((g$variables$19934$f3xia
          g$generators$19935$f3xia
          g$body-generator$19936$f3xia)
        (case-lambda
          ((g$continuator$19937$f3xia)
           (g$make-recursive-bind$19895$f3xia
             g$variables$19934$f3xia
             (g$map$15550$f3xia
               (case-lambda
                 ((g$generator$19938$f3xia)
                  (case-lambda
                    ((g$continuation-variable$19939$f3xia)
                     (g$generator$19938$f3xia
                       (g$variable-continuator$19878$f3xia
                         g$continuation-variable$19939$f3xia))))))
               g$generators$19935$f3xia)
             (g$body-generator$19936$f3xia
               (g$reified-continuator$19880$f3xia
                 g$continuator$19937$f3xia))))))))
   (g$cps/generate-recursive*-bind$19868$f3xia
     g$cps/generate-recursive*-bind$20133$f3xia
     (case-lambda
       ((g$variables$19940$f3xia
          g$generators$19941$f3xia
          g$body-generator$19942$f3xia)
        (case-lambda
          ((g$continuator$19943$f3xia)
           (g$make-recursive*-bind$19896$f3xia
             g$variables$19940$f3xia
             (g$map$15550$f3xia
               (case-lambda
                 ((g$generator$19944$f3xia)
                  (case-lambda
                    ((g$continuation-variable$19945$f3xia)
                     (g$generator$19944$f3xia
                       (g$variable-continuator$19878$f3xia
                         g$continuation-variable$19945$f3xia))))))
               g$generators$19941$f3xia)
             (g$body-generator$19942$f3xia
               (g$reified-continuator$19880$f3xia
                 g$continuator$19943$f3xia))))))))
   (g$cps/generate-recursive*-library-bind$19869$f3xia
     g$cps/generate-recursive*-library-bind$20134$f3xia
     (case-lambda
       ((g$name$19946$f3xia
          g$variables$19947$f3xia
          g$variables*$19948$f3xia
          g$generators$19949$f3xia
          g$body-generator$19950$f3xia)
        (case-lambda
          ((g$continuator$19951$f3xia)
           (g$make-recursive*-library-bind$19897$f3xia
             g$name$19946$f3xia
             g$variables$19947$f3xia
             g$variables*$19948$f3xia
             (g$map$15550$f3xia
               (case-lambda
                 ((g$generator$19952$f3xia)
                  (case-lambda
                    ((g$continuation-variable$19953$f3xia)
                     (g$generator$19952$f3xia
                       (g$variable-continuator$19878$f3xia
                         g$continuation-variable$19953$f3xia))))))
               g$generators$19949$f3xia)
             (g$body-generator$19950$f3xia
               (g$reified-continuator$19880$f3xia
                 g$continuator$19951$f3xia))))))))
   (g$cps/generate-sequence$19870$f3xia
     g$cps/generate-sequence$20135$f3xia
     (case-lambda
       ((g$generators$19954$f3xia)
        (case-lambda
          ((g$continuator$19955$f3xia)
           ((letrec ((g$recur$19956$f3xia
                       (case-lambda
                         ((g$generators$19957$f3xia)
                          ((car g$generators$19957$f3xia)
                           ((case-lambda
                              ((g$generators$19958$f3xia)
                               (if (pair? g$generators$19958$f3xia)
                                 (g$effect-continuator$19876$f3xia
                                   (case-lambda
                                     (()
                                      (g$recur$19956$f3xia
                                        g$generators$19958$f3xia))))
                                 g$continuator$19955$f3xia)))
                            (cdr g$generators$19957$f3xia)))))))
              g$recur$19956$f3xia)
            g$generators$19954$f3xia))))))
   (g$cps/generate-assignment$19871$f3xia
     g$cps/generate-assignment$20136$f3xia
     (case-lambda
       ((g$location$19959$f3xia g$expression-generator$19960$f3xia)
        (case-lambda
          ((g$continuator$19961$f3xia)
           (g$expression-generator$19960$f3xia
             (g$operand-continuator$19875$f3xia
               (case-lambda
                 ((g$operand$19962$f3xia)
                  (g$make-assignment$19903$f3xia
                    g$location$19959$f3xia
                    g$operand$19962$f3xia
                    (g$continue-with-operand$19881$f3xia
                      g$continuator$19961$f3xia
                      '(cps-void))))))))))))
   (g$cps/generate-declaration$19872$f3xia
     g$cps/generate-declaration$20137$f3xia
     (case-lambda
       ((g$location$19963$f3xia g$expression-generator$19964$f3xia)
        (case-lambda
          ((g$continuator$19965$f3xia)
           (g$expression-generator$19964$f3xia
             (g$operand-continuator$19875$f3xia
               (case-lambda
                 ((g$operand$19966$f3xia)
                  (g$make-declaration$19904$f3xia
                    g$location$19963$f3xia
                    g$operand$19966$f3xia
                    (g$continue-with-operand$19881$f3xia
                      g$continuator$19965$f3xia
                      '(cps-void))))))))))))
   (g$cps/generate-combination$19873$f3xia
     g$cps/generate-combination$20138$f3xia
     (case-lambda
       ((g$operator-generator$19967$f3xia
          g$operand-generators$19968$f3xia)
        (g$cps/generate-subproblems$19874$f3xia
          (g$reverse$16012$f3xia
            (cons
              g$operator-generator$19967$f3xia
              g$operand-generators$19968$f3xia))
          (case-lambda
            ((g$operands$19969$f3xia g$continuator$19970$f3xia)
             (g$make-combination$19898$f3xia
               (car g$operands$19969$f3xia)
               (g$reify-continuation$19882$f3xia
                 g$continuator$19970$f3xia)
               (cdr g$operands$19969$f3xia))))))))
   (g$cps/generate-subproblems$19874$f3xia
     g$cps/generate-subproblems$20139$f3xia
     (case-lambda
       ((g$generators$19971$f3xia g$combiner$19972$f3xia)
        (case-lambda
          ((g$continuator$19973$f3xia)
           ((letrec ((g$recur$19974$f3xia
                       (case-lambda
                         ((g$generators$19975$f3xia
                            g$operands$19976$f3xia)
                          (if (pair? g$generators$19975$f3xia)
                            ((car g$generators$19975$f3xia)
                             ((case-lambda
                                ((g$generators$19977$f3xia)
                                 (g$operand-continuator$19875$f3xia
                                   (case-lambda
                                     ((g$operand$19978$f3xia)
                                      (g$recur$19974$f3xia
                                        g$generators$19977$f3xia
                                        (cons
                                          g$operand$19978$f3xia
                                          g$operands$19976$f3xia)))))))
                              (cdr g$generators$19975$f3xia)))
                            (g$combiner$19972$f3xia
                              g$operands$19976$f3xia
                              g$continuator$19973$f3xia))))))
              g$recur$19974$f3xia)
            g$generators$19971$f3xia
            '()))))))
   (g$operand-continuator$19875$f3xia
     g$operand-continuator$20140$f3xia
     (case-lambda
       ((g$generator$19979$f3xia)
        (case-lambda
          ((g$if-operand$19980$f3xia
             g$if-effect$19981$f3xia
             g$if-conditional$19982$f3xia
             g$if-variable$19983$f3xia
             g$if-inline$19984$f3xia)
           (begin
             g$if-effect$19981$f3xia
             g$if-conditional$19982$f3xia
             g$if-variable$19983$f3xia
             g$if-inline$19984$f3xia
             (g$if-operand$19980$f3xia g$generator$19979$f3xia)))))))
   (g$effect-continuator$19876$f3xia
     g$effect-continuator$20141$f3xia
     (case-lambda
       ((g$generator$19985$f3xia)
        (case-lambda
          ((g$if-operand$19986$f3xia
             g$if-effect$19987$f3xia
             g$if-conditional$19988$f3xia
             g$if-variable$19989$f3xia
             g$if-inline$19990$f3xia)
           (begin
             g$if-operand$19986$f3xia
             g$if-conditional$19988$f3xia
             g$if-variable$19989$f3xia
             g$if-inline$19990$f3xia
             (g$if-effect$19987$f3xia g$generator$19985$f3xia)))))))
   (g$conditional-continuator$19877$f3xia
     g$conditional-continuator$20142$f3xia
     (case-lambda
       ((g$generator$19991$f3xia)
        (case-lambda
          ((g$if-operand$19992$f3xia
             g$if-effect$19993$f3xia
             g$if-conditional$19994$f3xia
             g$if-variable$19995$f3xia
             g$if-inline$19996$f3xia)
           (begin
             g$if-operand$19992$f3xia
             g$if-effect$19993$f3xia
             g$if-variable$19995$f3xia
             g$if-inline$19996$f3xia
             (g$if-conditional$19994$f3xia
               g$generator$19991$f3xia)))))))
   (g$variable-continuator$19878$f3xia
     g$variable-continuator$20143$f3xia
     (case-lambda
       ((g$variable$19997$f3xia)
        (case-lambda
          ((g$if-operand$19998$f3xia
             g$if-effect$19999$f3xia
             g$if-conditional$20000$f3xia
             g$if-variable$20001$f3xia
             g$if-inline$20002$f3xia)
           (begin
             g$if-operand$19998$f3xia
             g$if-effect$19999$f3xia
             g$if-variable$20001$f3xia
             g$if-inline$20002$f3xia
             (g$if-variable$20001$f3xia g$variable$19997$f3xia)))))))
   (g$inline-continuator$19879$f3xia
     g$inline-continuator$20144$f3xia
     (case-lambda
       ((g$continuation$20003$f3xia)
        (case-lambda
          ((g$if-operand$20004$f3xia
             g$if-effect$20005$f3xia
             g$if-conditional$20006$f3xia
             g$if-variable$20007$f3xia
             g$if-inline$20008$f3xia)
           (begin
             g$if-operand$20004$f3xia
             g$if-effect$20005$f3xia
             g$if-conditional$20006$f3xia
             g$if-variable$20007$f3xia
             (g$if-inline$20008$f3xia g$continuation$20003$f3xia)))))))
   (g$reified-continuator$19880$f3xia
     g$reified-continuator$20145$f3xia
     (case-lambda
       ((g$continuator$20009$f3xia)
        (case-lambda
          ((g$if-operand$20010$f3xia
             g$if-effect$20011$f3xia
             g$if-conditional$20012$f3xia
             g$if-variable$20013$f3xia
             g$if-inline$20014$f3xia)
           (begin
             g$if-operand$20010$f3xia
             g$if-effect$20011$f3xia
             g$if-conditional$20012$f3xia
             (g$reify-continuation*$19883$f3xia
               g$continuator$20009$f3xia
               g$if-variable$20013$f3xia
               g$if-inline$20014$f3xia)))))))
   (g$continue-with-operand$19881$f3xia
     g$continue-with-operand$20146$f3xia
     (case-lambda
       ((g$continuator$20015$f3xia g$operand$20016$f3xia)
        (g$continuator$20015$f3xia
          (case-lambda
            ((g$generator$20017$f3xia)
             (g$generator$20017$f3xia g$operand$20016$f3xia)))
          (case-lambda
            ((g$generator$20018$f3xia) (g$generator$20018$f3xia)))
          (case-lambda
            ((g$generator$20019$f3xia)
             (g$generator$20019$f3xia
               (g$make-truth-test$19905$f3xia g$operand$20016$f3xia))))
          (case-lambda
            ((g$continuation-variable$20020$f3xia)
             (g$make-return$19899$f3xia
               (g$make-reference$19891$f3xia
                 g$continuation-variable$20020$f3xia)
               (list g$operand$20016$f3xia))))
          (case-lambda
            ((g$continuation-abstraction$20021$f3xia)
             (g$make-return$19899$f3xia
               g$continuation-abstraction$20021$f3xia
               (list g$operand$20016$f3xia))))))))
   (g$reify-continuation$19882$f3xia
     g$reify-continuation$20147$f3xia
     (case-lambda
       ((g$continuator$20022$f3xia)
        (g$continuator$20022$f3xia
          g$operand-continuation-reifier$19885$f3xia
          g$effect-continuation-reifier$19887$f3xia
          g$conditional-continuation-reifier$19889$f3xia
          (case-lambda
            ((g$variable$20023$f3xia)
             (g$make-reference$19891$f3xia g$variable$20023$f3xia)))
          (case-lambda
            ((g$continuation$20024$f3xia)
             g$continuation$20024$f3xia))))))
   (g$reify-continuation*$19883$f3xia
     g$reify-continuation*$20148$f3xia
     (case-lambda
       ((g$continuator$20025$f3xia
          g$if-variable$20026$f3xia
          g$if-inline$20027$f3xia)
        (g$continuator$20025$f3xia
          (g$operand-continuation-reifier*$19884$f3xia
            g$if-inline$20027$f3xia)
          (g$effect-continuation-reifier*$19886$f3xia
            g$if-inline$20027$f3xia)
          (g$conditional-continuation-reifier*$19888$f3xia
            g$if-inline$20027$f3xia)
          g$if-variable$20026$f3xia
          g$if-inline$20027$f3xia))))
   (g$operand-continuation-reifier*$19884$f3xia
     g$operand-continuation-reifier*$20149$f3xia
     (case-lambda
       ((g$receiver$20028$f3xia)
        (case-lambda
          ((g$generator$20029$f3xia)
           (g$receiver$20028$f3xia
             ((case-lambda
                ((g$variable$20030$f3xia)
                 (g$make-continuation-abstraction$19894$f3xia
                   (list g$variable$20030$f3xia)
                   (g$generator$20029$f3xia
                     (g$make-reference$19891$f3xia
                       g$variable$20030$f3xia)))))
              (g$generate-variable$19906$f3xia 'V))))))))
   (g$operand-continuation-reifier$19885$f3xia
     g$operand-continuation-reifier$20150$f3xia
     (g$operand-continuation-reifier*$19884$f3xia values))
   (g$effect-continuation-reifier*$19886$f3xia
     g$effect-continuation-reifier*$20151$f3xia
     (case-lambda
       ((g$receiver$20031$f3xia)
        (case-lambda
          ((g$generator$20032$f3xia)
           (g$receiver$20031$f3xia
             ((case-lambda
                ((g$variable$20033$f3xia)
                 (g$make-continuation-abstraction$19894$f3xia
                   g$variable$20033$f3xia
                   (g$generator$20032$f3xia))))
              (g$generate-variable$19906$f3xia 'IGNORE))))))))
   (g$effect-continuation-reifier$19887$f3xia
     g$effect-continuation-reifier$20152$f3xia
     (g$effect-continuation-reifier*$19886$f3xia values))
   (g$conditional-continuation-reifier*$19888$f3xia
     g$conditional-continuation-reifier*$20153$f3xia
     (case-lambda
       ((g$receiver$20034$f3xia)
        (case-lambda
          ((g$generator$20035$f3xia)
           (g$receiver$20034$f3xia
             ((case-lambda
                ((g$variable$20036$f3xia)
                 (g$make-continuation-abstraction$19894$f3xia
                   (list g$variable$20036$f3xia)
                   (g$generator$20035$f3xia
                     (g$make-truth-test$19905$f3xia
                       (g$make-reference$19891$f3xia
                         g$variable$20036$f3xia))))))
              (g$generate-variable$19906$f3xia 'T))))))))
   (g$conditional-continuation-reifier$19889$f3xia
     g$conditional-continuation-reifier$20154$f3xia
     (g$conditional-continuation-reifier*$19888$f3xia values))
   (g$make-literal$19890$f3xia
     g$make-literal$20155$f3xia
     (case-lambda
       ((g$datum$20037$f3xia) (list 'quote g$datum$20037$f3xia))))
   (g$make-reference$19891$f3xia
     g$make-reference$20156$f3xia
     (case-lambda ((g$variable$20038$f3xia) g$variable$20038$f3xia)))
   (g$make-user-abstraction$19892$f3xia
     g$make-user-abstraction$20157$f3xia
     (case-lambda
       ((g$bvl$20039$f3xia g$body-constructor$20040$f3xia)
        ((case-lambda
           ((g$continuation$20041$f3xia)
            (list
              'case-lambda
              (list
                (cons g$continuation$20041$f3xia g$bvl$20039$f3xia)
                (g$body-constructor$20040$f3xia
                  g$continuation$20041$f3xia)))))
         (g$generate-variable$19906$f3xia 'C)))))
   (g$make-user-abstractions$19893$f3xia
     g$make-user-abstractions$20158$f3xia
     (case-lambda
       ((g$bvls$20042$f3xia g$body-constructors$20043$f3xia)
        ((case-lambda
           ((g$continuation$20044$f3xia)
            (cons
              'case-lambda
              (g$map$15550$f3xia
                (case-lambda
                  ((g$bvl$20045$f3xia g$body-constructor$20046$f3xia)
                   (list
                     (cons g$continuation$20044$f3xia g$bvl$20045$f3xia)
                     (g$body-constructor$20046$f3xia
                       g$continuation$20044$f3xia))))
                g$bvls$20042$f3xia
                g$body-constructors$20043$f3xia))))
         (g$generate-variable$19906$f3xia 'C)))))
   (g$make-continuation-abstraction$19894$f3xia
     g$make-continuation-abstraction$20159$f3xia
     (case-lambda
       ((g$bvl$20047$f3xia g$body$20048$f3xia)
        (list
          'case-lambda
          (list g$bvl$20047$f3xia g$body$20048$f3xia)))))
   (g$make-recursive-bind$19895$f3xia
     g$make-recursive-bind$20160$f3xia
     (case-lambda
       ((g$variables$20049$f3xia
          g$constructors$20050$f3xia
          g$body$20051$f3xia)
        (list
          'letrec
          (g$map$15550$f3xia
            (case-lambda
              ((g$variable$20052$f3xia g$constructor$20053$f3xia)
               (list
                 g$variable$20052$f3xia
                 (list
                   (g$make-user-abstraction$19892$f3xia
                     '()
                     g$constructor$20053$f3xia)
                   (list
                     'letrec-identity
                     (list 'quote g$variable$20052$f3xia))))))
            g$variables$20049$f3xia
            g$constructors$20050$f3xia)
          g$body$20051$f3xia))))
   (g$make-recursive*-bind$19896$f3xia
     g$make-recursive*-bind$20161$f3xia
     (case-lambda
       ((g$variables$20054$f3xia
          g$constructors$20055$f3xia
          g$body$20056$f3xia)
        (list
          'letrec*
          (g$map$15550$f3xia
            (case-lambda
              ((g$variable$20057$f3xia g$constructor$20058$f3xia)
               (list
                 g$variable$20057$f3xia
                 (list
                   (g$make-user-abstraction$19892$f3xia
                     '()
                     g$constructor$20058$f3xia)
                   (list
                     'letrec*-identity
                     (list 'quote g$variable$20057$f3xia))))))
            g$variables$20054$f3xia
            g$constructors$20055$f3xia)
          g$body$20056$f3xia))))
   (g$make-recursive*-library-bind$19897$f3xia
     g$make-recursive*-library-bind$20162$f3xia
     (case-lambda
       ((g$name$20059$f3xia
          g$variables$20060$f3xia
          g$variables*$20061$f3xia
          g$constructors$20062$f3xia
          g$body$20063$f3xia)
        (list
          'library-letrec*
          g$name$20059$f3xia
          (g$map$15550$f3xia
            (case-lambda
              ((g$variable$20064$f3xia
                 g$variable*$20065$f3xia
                 g$constructor$20066$f3xia)
               (list
                 g$variable$20064$f3xia
                 g$variable*$20065$f3xia
                 (list
                   (g$make-user-abstraction$19892$f3xia
                     '()
                     g$constructor$20066$f3xia)
                   (list
                     'library-letrec*-identity
                     (list 'quote g$variable$20064$f3xia))))))
            g$variables$20060$f3xia
            g$variables*$20061$f3xia
            g$constructors$20062$f3xia)
          g$body$20063$f3xia))))
   (g$make-combination$19898$f3xia
     g$make-combination$20163$f3xia
     (case-lambda
       ((g$operator$20067$f3xia
          g$continuation$20068$f3xia
          g$operands$20069$f3xia)
        (cons
          g$operator$20067$f3xia
          (cons g$continuation$20068$f3xia g$operands$20069$f3xia)))))
   (g$make-return$19899$f3xia
     g$make-return$20164$f3xia
     (case-lambda
       ((g$continuation$20070$f3xia g$operands$20071$f3xia)
        (cons g$continuation$20070$f3xia g$operands$20071$f3xia))))
   (g$make-conditional$19900$f3xia
     g$make-conditional$20165$f3xia
     (case-lambda
       ((g$condition$20072$f3xia
          g$consequent$20073$f3xia
          g$alternative$20074$f3xia)
        (list
          'if
          g$condition$20072$f3xia
          g$consequent$20073$f3xia
          g$alternative$20074$f3xia))))
   (g$make-conditional-join$19901$f3xia
     g$make-conditional-join$20166$f3xia
     (case-lambda
       ((g$continuation$20075$f3xia g$constructor$20076$f3xia)
        ((case-lambda
           ((g$variable$20077$f3xia)
            (g$make-let$19902$f3xia
              (list g$variable$20077$f3xia)
              (list g$continuation$20075$f3xia)
              (g$constructor$20076$f3xia g$variable$20077$f3xia))))
         (g$generate-variable$19906$f3xia 'J)))))
   (g$make-let$19902$f3xia
     g$make-let$20167$f3xia
     (case-lambda
       ((g$variables$20078$f3xia
          g$expressions$20079$f3xia
          g$body$20080$f3xia)
        (cons
          (list
            'case-lambda
            (list g$variables$20078$f3xia g$body$20080$f3xia))
          g$expressions$20079$f3xia))))
   (g$make-assignment$19903$f3xia
     g$make-assignment$20168$f3xia
     (case-lambda
       ((g$location$20081$f3xia
          g$operand$20082$f3xia
          g$expression$20083$f3xia)
        (list
          'begin
          (list 'set! g$location$20081$f3xia g$operand$20082$f3xia)
          g$expression$20083$f3xia))))
   (g$make-declaration$19904$f3xia
     g$make-declaration$20169$f3xia
     (case-lambda
       ((g$location$20084$f3xia
          g$operand$20085$f3xia
          g$expression$20086$f3xia)
        (list
          'begin
          (list 'define g$location$20084$f3xia g$operand$20085$f3xia)
          g$expression$20086$f3xia))))
   (g$make-truth-test$19905$f3xia
     g$make-truth-test$20170$f3xia
     (case-lambda ((g$operand$20087$f3xia) g$operand$20087$f3xia)))
   (g$generate-variable$19906$f3xia
     g$generate-variable$20171$f3xia
     (case-lambda ((g$name$20088$f3xia) (gensym g$name$20088$f3xia))))
   (g$parse$19907$f3xia
     g$parse$20172$f3xia
     (case-lambda
       ((g$x$20089$f3xia)
        (if (pair? g$x$20089$f3xia)
          ((case-lambda
             ((g$t$20090$f3xia)
              (if (eqv? g$t$20090$f3xia 'quote)
                (g$cps/generate-literal$19862$f3xia
                  (g$cadr$16014$f3xia g$x$20089$f3xia))
                (if (eqv? g$t$20090$f3xia 'if)
                  (g$cps/generate-conditional$19866$f3xia
                    (g$parse$19907$f3xia
                      (g$cadr$16014$f3xia g$x$20089$f3xia))
                    (g$parse$19907$f3xia
                      (g$caddr$16020$f3xia g$x$20089$f3xia))
                    (g$parse$19907$f3xia
                      (g$cadddr$16032$f3xia g$x$20089$f3xia)))
                  (if (eqv? g$t$20090$f3xia 'case-lambda)
                    ((case-lambda
                       ((g$d$20091$f3xia)
                        (g$cps/generate-abstractions$19864$f3xia
                          (g$map$15550$f3xia car g$d$20091$f3xia)
                          (g$map$15550$f3xia
                            (case-lambda
                              ((g$e$20092$f3xia)
                               (g$cps/generate-sequence$19870$f3xia
                                 (g$map$15550$f3xia
                                   g$parse$19907$f3xia
                                   (cdr g$e$20092$f3xia)))))
                            g$d$20091$f3xia))))
                     (cdr g$x$20089$f3xia))
                    (if (eqv? g$t$20090$f3xia 'letrec)
                      ((case-lambda
                         ((g$bindings$20093$f3xia g$body*$20094$f3xia)
                          ((case-lambda
                             ((g$lhs*$20095$f3xia g$rhs*$20096$f3xia)
                              ((case-lambda
                                 ((g$t*$20097$f3xia g$tmps$20098$f3xia)
                                  ((case-lambda
                                     ((g$s*$20099$f3xia)
                                      (g$parse$19907$f3xia
                                        (cons
                                          (list
                                            'case-lambda
                                            (list
                                              g$lhs*$20095$f3xia
                                              (cons
                                                (list
                                                  'case-lambda
                                                  (cons
                                                    g$t*$20097$f3xia
                                                    (g$append$15556$f3xia
                                                      g$s*$20099$f3xia
                                                      g$body*$20094$f3xia)))
                                                g$rhs*$20096$f3xia)))
                                          g$tmps$20098$f3xia))))
                                   (g$map$15550$f3xia
                                     (case-lambda
                                       ((g$i$20100$f3xia
                                          g$t$20101$f3xia)
                                        (list
                                          'set!
                                          g$i$20100$f3xia
                                          g$t$20101$f3xia)))
                                     g$lhs*$20095$f3xia
                                     g$t*$20097$f3xia))))
                               (g$map$15550$f3xia
                                 gensym
                                 g$lhs*$20095$f3xia)
                               (g$map$15550$f3xia
                                 (case-lambda
                                   ((g$x$20102$f3xia) 'uninitialized))
                                 g$lhs*$20095$f3xia))))
                           (g$map$15550$f3xia
                             car
                             g$bindings$20093$f3xia)
                           (g$map$15550$f3xia
                             g$cadr$16014$f3xia
                             g$bindings$20093$f3xia))))
                       (g$cadr$16014$f3xia g$x$20089$f3xia)
                       (g$cddr$16016$f3xia g$x$20089$f3xia))
                      (if (eqv? g$t$20090$f3xia 'letrec*)
                        ((case-lambda
                           ((g$bindings$20103$f3xia g$body*$20104$f3xia)
                            ((case-lambda
                               ((g$lhs*$20105$f3xia g$rhs*$20106$f3xia)
                                (g$cps/generate-recursive*-bind$19868$f3xia
                                  g$lhs*$20105$f3xia
                                  (g$map$15550$f3xia
                                    g$parse$19907$f3xia
                                    g$rhs*$20106$f3xia)
                                  (g$parse$19907$f3xia
                                    (cons
                                      'begin
                                      g$body*$20104$f3xia)))))
                             (g$map$15550$f3xia
                               car
                               g$bindings$20103$f3xia)
                             (g$map$15550$f3xia
                               g$cadr$16014$f3xia
                               g$bindings$20103$f3xia))))
                         (g$cadr$16014$f3xia g$x$20089$f3xia)
                         (g$cddr$16016$f3xia g$x$20089$f3xia))
                        (if (eqv? g$t$20090$f3xia 'library-letrec*)
                          ((case-lambda
                             ((g$name$20107$f3xia g$x$20108$f3xia)
                              ((case-lambda
                                 ((g$bindings$20109$f3xia
                                    g$body*$20110$f3xia)
                                  ((case-lambda
                                     ((g$lhs*$20111$f3xia
                                        g$lhs**$20112$f3xia
                                        g$rhs*$20113$f3xia)
                                      (g$cps/generate-recursive*-library-bind$19869$f3xia
                                        g$name$20107$f3xia
                                        g$lhs*$20111$f3xia
                                        g$lhs**$20112$f3xia
                                        (g$map$15550$f3xia
                                          g$parse$19907$f3xia
                                          g$rhs*$20113$f3xia)
                                        (g$parse$19907$f3xia
                                          (cons
                                            'begin
                                            g$body*$20110$f3xia)))))
                                   (g$map$15550$f3xia
                                     car
                                     g$bindings$20109$f3xia)
                                   (g$map$15550$f3xia
                                     g$cadr$16014$f3xia
                                     g$bindings$20109$f3xia)
                                   (g$map$15550$f3xia
                                     g$caddr$16020$f3xia
                                     g$bindings$20109$f3xia))))
                               (g$cadr$16014$f3xia g$x$20108$f3xia)
                               (g$cddr$16016$f3xia g$x$20108$f3xia))))
                           (g$cadr$16014$f3xia g$x$20089$f3xia)
                           (cdr g$x$20089$f3xia))
                          (if (eqv? g$t$20090$f3xia 'begin)
                            (g$cps/generate-sequence$19870$f3xia
                              (g$map$15550$f3xia
                                g$parse$19907$f3xia
                                (cdr g$x$20089$f3xia)))
                            (if (eqv? g$t$20090$f3xia 'set!)
                              (g$cps/generate-assignment$19871$f3xia
                                (g$cadr$16014$f3xia g$x$20089$f3xia)
                                (g$parse$19907$f3xia
                                  (g$caddr$16020$f3xia
                                    g$x$20089$f3xia)))
                              (if (eqv? g$t$20090$f3xia 'define)
                                (g$cps/generate-declaration$19872$f3xia
                                  (g$cadr$16014$f3xia g$x$20089$f3xia)
                                  (g$parse$19907$f3xia
                                    (g$caddr$16020$f3xia
                                      g$x$20089$f3xia)))
                                ((case-lambda
                                   (()
                                    (begin
                                      '#f
                                      (if (g$list?$15545$f3xia
                                            g$x$20089$f3xia)
                                        (g$cps/generate-combination$19873$f3xia
                                          (g$parse$19907$f3xia
                                            (car g$x$20089$f3xia))
                                          (g$map$15550$f3xia
                                            g$parse$19907$f3xia
                                            (cdr g$x$20089$f3xia)))
                                        (g$error$12460$f3xia
                                          'rewrite
                                          '"invalid form ~s ~s"
                                          g$x$20089$f3xia
                                          (g$list?$15545$f3xia
                                            g$x$20089$f3xia))))))))))))))))))
           (car g$x$20089$f3xia))
          (if (g$symbol?$15976$f3xia g$x$20089$f3xia)
            (g$cps/generate-reference$19861$f3xia g$x$20089$f3xia)
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$cps/generate-literal$19862$f3xia
                    g$x$20089$f3xia))))))))))
   (g$starts-with?$19908$f3xia
     g$starts-with?$20173$f3xia
     (case-lambda
       ((g$str$20114$f3xia g$sub$20115$f3xia)
        (clr-call-internal
          'system.string
          'startswith
          g$str$20114$f3xia
          g$sub$20115$f3xia))))
   (g$ends-with?$19909$f3xia
     g$ends-with?$20174$f3xia
     (case-lambda
       ((g$str$20116$f3xia g$sub$20117$f3xia)
        (clr-call-internal
          'system.string
          'endswith
          g$str$20116$f3xia
          g$sub$20117$f3xia))))
   (g$clr-generator?$19910$f3xia
     g$clr-generator?$20175$f3xia
     (case-lambda
       ((g$o$20118$f3xia)
        (if (g$symbol?$15976$f3xia g$o$20118$f3xia)
          (begin
            '#f
            ((case-lambda
               ((g$o$20119$f3xia)
                (if (g$starts-with?$19908$f3xia g$o$20119$f3xia '"clr-")
                  (begin
                    '#f
                    (g$ends-with?$19909$f3xia
                      g$o$20119$f3xia
                      '"-internal"))
                  '#f)))
             (g$symbol->string$15996$f3xia g$o$20118$f3xia)))
          '#f))))
   (g$fix-primitives$19911$f3xia
     g$fix-primitives$20176$f3xia
     (case-lambda
       ((g$e$20120$f3xia)
        (if (if (pair? g$e$20120$f3xia)
              (begin '#f (g$list?$15545$f3xia g$e$20120$f3xia))
              '#f)
          ((case-lambda
             ((g$o$20121$f3xia)
              (if (eq? g$o$20121$f3xia 'quote)
                g$e$20120$f3xia
                (if (begin
                      '#f
                      (g$clr-generator?$19910$f3xia g$o$20121$f3xia))
                  (if (pair? (cdr g$e$20120$f3xia))
                    (list
                      (g$fix-primitives$19911$f3xia
                        (g$cadr$16014$f3xia g$e$20120$f3xia))
                      (cons
                        g$o$20121$f3xia
                        (g$map$15550$f3xia
                          g$fix-primitives$19911$f3xia
                          (g$cddr$16016$f3xia g$e$20120$f3xia))))
                    g$e$20120$f3xia)
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        (cons
                          (g$fix-primitives$19911$f3xia g$o$20121$f3xia)
                          (g$map$15550$f3xia
                            g$fix-primitives$19911$f3xia
                            (cdr g$e$20120$f3xia)))))))))))
           (car g$e$20120$f3xia))
          g$e$20120$f3xia))))
   (g$parse->cps$19912$f3xia
     g$parse->cps$20177$f3xia
     (case-lambda
       ((g$e$20122$f3xia g$var$20123$f3xia)
        ((g$parse$19907$f3xia g$e$20122$f3xia)
         (g$variable-continuator$19878$f3xia g$var$20123$f3xia)))))
   (g$convert->cps$19913$f3xia
     g$convert->cps$20178$f3xia
     (case-lambda
       ((g$e$20124$f3xia g$var$20125$f3xia)
        (g$fix-primitives$19911$f3xia
          (g$parse->cps$19912$f3xia
            g$e$20124$f3xia
            g$var$20125$f3xia))))))
  (void))

(library-letrec* (ironscheme constant-fold)
  ((g$allow-constant-fold?$20179$f3xia
     g$allow-constant-fold?$20194$f3xia
     (case-lambda
       ((g$proc$20184$f3xia)
        (clr-call-internal
          'IronScheme.Runtime.ICallable
          'get_AllowConstantFold
          g$proc$20184$f3xia))))
   (g$set-allow-constant-fold!$20180$f3xia
     g$set-allow-constant-fold!$20195$f3xia
     (case-lambda
       ((g$proc$20185$f3xia g$bool$20186$f3xia)
        (clr-call-internal
          'IronScheme.Runtime.ICallable
          'set_AllowConstantFold
          g$proc$20185$f3xia
          g$bool$20186$f3xia))))
   (g$enable-constant-fold$20181$f3xia
     g$enable-constant-fold$20196$f3xia
     (case-lambda
       (g$procs$20187$f3xia
        (g$for-each$15551$f3xia
          (case-lambda
            ((g$proc$20188$f3xia)
             (g$set-allow-constant-fold!$20180$f3xia
               g$proc$20188$f3xia
               '#t)))
          g$procs$20187$f3xia))))
   (g$proc-filter$20182$f3xia
     g$proc-filter$20197$f3xia
     (case-lambda
       ((g$b$20189$f3xia) (eq? 'procedure (cdr g$b$20189$f3xia)))))
   (g$enable-constant-fold/env$20183$f3xia
     g$enable-constant-fold/env$20198$f3xia
     (case-lambda
       (g$import-spec$20190$f3xia
        ((case-lambda
           ((g$env$20191$f3xia g$env*$20192$f3xia)
            ((case-lambda
               ((g$b$20193$f3xia)
                (apply
                  g$enable-constant-fold$20181$f3xia
                  (g$eval$25001$f3xia
                    (cons 'list g$b$20193$f3xia)
                    g$env*$20192$f3xia))))
             (g$map$15550$f3xia
               car
               (g$filter$15533$f3xia
                 g$proc-filter$20182$f3xia
                 (g$environment-bindings$24993$f3xia
                   g$env$20191$f3xia))))))
         (apply g$environment$24997$f3xia g$import-spec$20190$f3xia)
         (apply
           g$environment$24997$f3xia
           '(only (rnrs) list)
           g$import-spec$20190$f3xia))))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$20199$f3xia
     g$current-primitive-locations$20244$f3xia
     (g$make-parameter$19650$f3xia
       (case-lambda ((g$x$20205$f3xia) '#f))
       (case-lambda
         ((g$p$20206$f3xia)
          (begin
            (if (not (g$procedure?$15978$f3xia g$p$20206$f3xia))
              (g$assertion-error$25016$f3xia
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$20206$f3xia)))))
   (g$mutable?$20200$f3xia
     g$mutable?$20245$f3xia
     (case-lambda
       ((g$x$20207$f3xia)
        (letrec* ((g$simple?$20208$f3xia
                    (case-lambda
                      ((g$x$20209$f3xia)
                       ((case-lambda
                          ((g$t$20210$f3xia)
                           (if g$t$20210$f3xia
                             g$t$20210$f3xia
                             ((case-lambda
                                ((g$t$20211$f3xia)
                                 (if g$t$20211$f3xia
                                   g$t$20211$f3xia
                                   ((case-lambda
                                      ((g$t$20212$f3xia)
                                       (if g$t$20212$f3xia
                                         g$t$20212$f3xia
                                         ((case-lambda
                                            ((g$t$20213$f3xia)
                                             (if g$t$20213$f3xia
                                               g$t$20213$f3xia
                                               ((case-lambda
                                                  ((g$t$20214$f3xia)
                                                   (if g$t$20214$f3xia
                                                     g$t$20214$f3xia
                                                     ((case-lambda
                                                        ((g$t$20215$f3xia)
                                                         (if g$t$20215$f3xia
                                                           g$t$20215$f3xia
                                                           (begin
                                                             '#f
                                                             (g$number?$17016$f3xia
                                                               g$x$20209$f3xia)))))
                                                      (g$bytevector?$15975$f3xia
                                                        g$x$20209$f3xia)))))
                                                (g$string?$15972$f3xia
                                                  g$x$20209$f3xia)))))
                                          (g$boolean?$15977$f3xia
                                            g$x$20209$f3xia)))))
                                    (g$symbol?$15976$f3xia
                                      g$x$20209$f3xia)))))
                              (g$char?$15973$f3xia g$x$20209$f3xia)))))
                        (null? g$x$20209$f3xia))))))
          (not (g$simple?$20208$f3xia g$x$20207$f3xia))))))
   (g$rewriter$20201$f3xia
     g$rewriter$20246$f3xia
     (case-lambda
       ((g$quote-hack?$20216$f3xia)
        (letrec* ((g$f$20217$f3xia
                    (case-lambda
                      ((g$x$20218$f3xia)
                       (if (pair? g$x$20218$f3xia)
                         ((case-lambda
                            ((g$t$20219$f3xia)
                             (if (eqv? g$t$20219$f3xia 'quote)
                               (if (if g$quote-hack?$20216$f3xia
                                     (begin
                                       '#f
                                       (g$mutable?$20200$f3xia
                                         (g$cadr$16014$f3xia
                                           g$x$20218$f3xia)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$20220$f3xia)
                                     (begin
                                       (set-symbol-value!
                                         g$g$20220$f3xia
                                         (g$cadr$16014$f3xia
                                           g$x$20218$f3xia))
                                       g$g$20220$f3xia)))
                                  (gensym 'weak-temp))
                                 ((case-lambda
                                    (() (begin '#f g$x$20218$f3xia)))))
                               (if (eqv? g$t$20219$f3xia 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (g$map$15550$f3xia
                                     (case-lambda
                                       ((g$x$20221$f3xia)
                                        (cons
                                          (car g$x$20221$f3xia)
                                          (g$map$15550$f3xia
                                            g$f$20217$f3xia
                                            (cdr g$x$20221$f3xia)))))
                                     (cdr g$x$20218$f3xia)))
                                 (if (eqv? g$t$20219$f3xia 'lambda)
                                   (g$cons*$15552$f3xia
                                     'lambda
                                     (g$cadr$16014$f3xia
                                       g$x$20218$f3xia)
                                     (g$map$15550$f3xia
                                       g$f$20217$f3xia
                                       (g$cddr$16016$f3xia
                                         g$x$20218$f3xia)))
                                   (if (eqv? g$t$20219$f3xia 'letrec)
                                     ((case-lambda
                                        ((g$bindings$20222$f3xia
                                           g$body*$20223$f3xia)
                                         ((case-lambda
                                            ((g$lhs*$20224$f3xia
                                               g$rhs*$20225$f3xia)
                                             (g$cons*$15552$f3xia
                                               'letrec
                                               (g$map$15550$f3xia
                                                 list
                                                 g$lhs*$20224$f3xia
                                                 (g$map$15550$f3xia
                                                   g$f$20217$f3xia
                                                   g$rhs*$20225$f3xia))
                                               (g$map$15550$f3xia
                                                 g$f$20217$f3xia
                                                 g$body*$20223$f3xia))))
                                          (g$map$15550$f3xia
                                            car
                                            g$bindings$20222$f3xia)
                                          (g$map$15550$f3xia
                                            g$cadr$16014$f3xia
                                            g$bindings$20222$f3xia))))
                                      (g$cadr$16014$f3xia
                                        g$x$20218$f3xia)
                                      (g$cddr$16016$f3xia
                                        g$x$20218$f3xia))
                                     (if (eqv? g$t$20219$f3xia 'letrec*)
                                       ((case-lambda
                                          ((g$bindings$20226$f3xia
                                             g$body*$20227$f3xia)
                                           ((case-lambda
                                              ((g$lhs*$20228$f3xia
                                                 g$rhs*$20229$f3xia)
                                               (g$cons*$15552$f3xia
                                                 'letrec*
                                                 (g$map$15550$f3xia
                                                   list
                                                   g$lhs*$20228$f3xia
                                                   (g$map$15550$f3xia
                                                     g$f$20217$f3xia
                                                     g$rhs*$20229$f3xia))
                                                 (g$map$15550$f3xia
                                                   g$f$20217$f3xia
                                                   g$body*$20227$f3xia))))
                                            (g$map$15550$f3xia
                                              car
                                              g$bindings$20226$f3xia)
                                            (g$map$15550$f3xia
                                              g$cadr$16014$f3xia
                                              g$bindings$20226$f3xia))))
                                        (g$cadr$16014$f3xia
                                          g$x$20218$f3xia)
                                        (g$cddr$16016$f3xia
                                          g$x$20218$f3xia))
                                       (if (eqv?
                                             g$t$20219$f3xia
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$20230$f3xia
                                               g$x$20231$f3xia)
                                             ((case-lambda
                                                ((g$bindings$20232$f3xia
                                                   g$body*$20233$f3xia)
                                                 ((case-lambda
                                                    ((g$lhs*$20234$f3xia
                                                       g$lhs**$20235$f3xia
                                                       g$rhs*$20236$f3xia)
                                                     (g$cons*$15552$f3xia
                                                       'library-letrec*
                                                       g$name$20230$f3xia
                                                       (g$map$15550$f3xia
                                                         list
                                                         g$lhs*$20234$f3xia
                                                         g$lhs**$20235$f3xia
                                                         (g$map$15550$f3xia
                                                           g$f$20217$f3xia
                                                           g$rhs*$20236$f3xia))
                                                       (g$map$15550$f3xia
                                                         g$f$20217$f3xia
                                                         g$body*$20233$f3xia))))
                                                  (g$map$15550$f3xia
                                                    car
                                                    g$bindings$20232$f3xia)
                                                  (g$map$15550$f3xia
                                                    g$cadr$16014$f3xia
                                                    g$bindings$20232$f3xia)
                                                  (g$map$15550$f3xia
                                                    g$caddr$16020$f3xia
                                                    g$bindings$20232$f3xia))))
                                              (g$cadr$16014$f3xia
                                                g$x$20231$f3xia)
                                              (g$cddr$16016$f3xia
                                                g$x$20231$f3xia))))
                                          (g$cadr$16014$f3xia
                                            g$x$20218$f3xia)
                                          (cdr g$x$20218$f3xia))
                                         (if (eqv?
                                               g$t$20219$f3xia
                                               'begin)
                                           (cons
                                             'begin
                                             (g$map$15550$f3xia
                                               g$f$20217$f3xia
                                               (cdr g$x$20218$f3xia)))
                                           (if (eqv?
                                                 g$t$20219$f3xia
                                                 'set!)
                                             (list
                                               'set!
                                               (g$cadr$16014$f3xia
                                                 g$x$20218$f3xia)
                                               (g$f$20217$f3xia
                                                 (g$caddr$16020$f3xia
                                                   g$x$20218$f3xia)))
                                             (if (eqv?
                                                   g$t$20219$f3xia
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$20237$f3xia)
                                                   ((case-lambda
                                                      ((g$t$20238$f3xia)
                                                       (if g$t$20238$f3xia
                                                         ((case-lambda
                                                            ((g$loc$20239$f3xia)
                                                             g$loc$20239$f3xia))
                                                          g$t$20238$f3xia)
                                                         ((case-lambda
                                                            (()
                                                             (begin
                                                               '#f
                                                               g$op$20237$f3xia)))))))
                                                    ((g$current-primitive-locations$20199$f3xia)
                                                     g$op$20237$f3xia))))
                                                (g$cadr$16014$f3xia
                                                  g$x$20218$f3xia))
                                               (if (eqv?
                                                     g$t$20219$f3xia
                                                     'define)
                                                 g$x$20218$f3xia
                                                 ((case-lambda
                                                    (()
                                                     (begin
                                                       '#f
                                                       (if (g$list?$15545$f3xia
                                                             g$x$20218$f3xia)
                                                         (g$map$15550$f3xia
                                                           g$f$20217$f3xia
                                                           g$x$20218$f3xia)
                                                         (g$error$12460$f3xia
                                                           'rewrite
                                                           '"invalid form ~s ~s"
                                                           g$x$20218$f3xia
                                                           (g$list?$15545$f3xia
                                                             g$x$20218$f3xia)))))))))))))))))))
                          (car g$x$20218$f3xia))
                         ((case-lambda
                            (() (begin '#f g$x$20218$f3xia)))))))))
          g$f$20217$f3xia))))
   (g$expanded->core$20202$f3xia
     g$expanded->core$20247$f3xia
     (case-lambda
       ((g$x$20240$f3xia)
        ((g$rewriter$20201$f3xia '#t) g$x$20240$f3xia))))
   (g$compile-core-expr$20203$f3xia
     g$compile-core-expr$20248$f3xia
     (case-lambda
       ((g$x$20241$f3xia)
        ((g$rewriter$20201$f3xia '#f) g$x$20241$f3xia))))
   (g$compile-core-expr-to-port$20204$f3xia
     g$compile-core-expr-to-port$20249$f3xia
     (case-lambda
       ((g$x$20242$f3xia g$p$20243$f3xia)
        (g$pretty-print$19860$f3xia
          ((g$rewriter$20201$f3xia '#f) g$x$20242$f3xia)
          g$p$20243$f3xia)))))
  (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$20250$f3xia
     g$make-collection$20459$f3xia
     (case-lambda
       (()
        ((case-lambda
           ((g$set$20313$f3xia)
            (letrec* ((g$set-cons$20314$f3xia
                        (case-lambda
                          ((g$x$20318$f3xia g$ls$20319$f3xia)
                           (if (g$memq$15538$f3xia
                                 g$x$20318$f3xia
                                 g$ls$20319$f3xia)
                             g$ls$20319$f3xia
                             ((case-lambda
                                (()
                                 (begin
                                   '#f
                                   (cons
                                     g$x$20318$f3xia
                                     g$ls$20319$f3xia))))))))))
              (case-lambda
                (() g$set$20313$f3xia)
                ((g$x$20315$f3xia)
                 (set! g$set$20313$f3xia
                   (g$set-cons$20314$f3xia
                     g$x$20315$f3xia
                     g$set$20313$f3xia)))
                ((g$x$20316$f3xia g$del?$20317$f3xia)
                 (if g$del?$20317$f3xia
                   (set! g$set$20313$f3xia
                     (g$remq$15561$f3xia
                       g$x$20316$f3xia
                       g$set$20313$f3xia))
                   (set! g$set$20313$f3xia
                     (g$set-cons$20314$f3xia
                       g$x$20316$f3xia
                       g$set$20313$f3xia))))))))
         '()))))
   (g$current-library-collection$20251$f3xia
     g$current-library-collection$20460$f3xia
     (g$make-parameter$19650$f3xia
       (g$make-collection$20250$f3xia)
       (case-lambda
         ((g$x$20320$f3xia)
          (begin
            (if (not (g$procedure?$15978$f3xia g$x$20320$f3xia))
              (g$assertion-violation$12459$f3xia
                'current-library-collection
                '"not a procedure"
                g$x$20320$f3xia)
              (void))
            g$x$20320$f3xia)))))
   (g$9879$20252$f3xia
     g$9879$20461$f3xia
     (make-record-type-descriptor
       'library
       '#f
       'g$9882$f3xia
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$9881$20253$f3xia g$9881$20462$f3xia '#f)
   (g$9880$20254$f3xia
     g$9880$20463$f3xia
     (make-record-constructor-descriptor
       g$9879$20252$f3xia
       '#f
       g$9881$20253$f3xia))
   (g$library?$20257$f3xia
     g$library?$20464$f3xia
     (record-predicate g$9879$20252$f3xia))
   (g$make-library$20258$f3xia
     g$make-library$20465$f3xia
     (record-constructor g$9880$20254$f3xia))
   (g$library-id$20259$f3xia
     g$library-id$20466$f3xia
     (record-accessor g$9879$20252$f3xia '0))
   (g$library-name$20260$f3xia
     g$library-name$20467$f3xia
     (record-accessor g$9879$20252$f3xia '1))
   (g$library-version$20261$f3xia
     g$library-version$20468$f3xia
     (record-accessor g$9879$20252$f3xia '2))
   (g$library-imp*$20262$f3xia
     g$library-imp*$20469$f3xia
     (record-accessor g$9879$20252$f3xia '3))
   (g$library-vis*$20263$f3xia
     g$library-vis*$20470$f3xia
     (record-accessor g$9879$20252$f3xia '4))
   (g$library-inv*$20264$f3xia
     g$library-inv*$20471$f3xia
     (record-accessor g$9879$20252$f3xia '5))
   (g$library-subst$20265$f3xia
     g$library-subst$20472$f3xia
     (record-accessor g$9879$20252$f3xia '6))
   (g$library-env$20266$f3xia
     g$library-env$20473$f3xia
     (record-accessor g$9879$20252$f3xia '7))
   (g$library-visit-state$20267$f3xia
     g$library-visit-state$20474$f3xia
     (record-accessor g$9879$20252$f3xia '8))
   (g$library-invoke-state$20268$f3xia
     g$library-invoke-state$20475$f3xia
     (record-accessor g$9879$20252$f3xia '9))
   (g$library-visit-code$20269$f3xia
     g$library-visit-code$20476$f3xia
     (record-accessor g$9879$20252$f3xia '10))
   (g$library-invoke-code$20270$f3xia
     g$library-invoke-code$20477$f3xia
     (record-accessor g$9879$20252$f3xia '11))
   (g$library-visible?$20271$f3xia
     g$library-visible?$20478$f3xia
     (record-accessor g$9879$20252$f3xia '12))
   (g$library-source-file-name$20272$f3xia
     g$library-source-file-name$20479$f3xia
     (record-accessor g$9879$20252$f3xia '13))
   (g$set-library-id!$20273$f3xia
     g$set-library-id!$20480$f3xia
     (record-mutator g$9879$20252$f3xia '0))
   (g$set-library-name!$20274$f3xia
     g$set-library-name!$20481$f3xia
     (record-mutator g$9879$20252$f3xia '1))
   (g$set-library-version!$20275$f3xia
     g$set-library-version!$20482$f3xia
     (record-mutator g$9879$20252$f3xia '2))
   (g$set-library-imp*!$20276$f3xia
     g$set-library-imp*!$20483$f3xia
     (record-mutator g$9879$20252$f3xia '3))
   (g$set-library-vis*!$20277$f3xia
     g$set-library-vis*!$20484$f3xia
     (record-mutator g$9879$20252$f3xia '4))
   (g$set-library-inv*!$20278$f3xia
     g$set-library-inv*!$20485$f3xia
     (record-mutator g$9879$20252$f3xia '5))
   (g$set-library-subst!$20279$f3xia
     g$set-library-subst!$20486$f3xia
     (record-mutator g$9879$20252$f3xia '6))
   (g$set-library-env!$20280$f3xia
     g$set-library-env!$20487$f3xia
     (record-mutator g$9879$20252$f3xia '7))
   (g$set-library-visit-state!$20281$f3xia
     g$set-library-visit-state!$20488$f3xia
     (record-mutator g$9879$20252$f3xia '8))
   (g$set-library-invoke-state!$20282$f3xia
     g$set-library-invoke-state!$20489$f3xia
     (record-mutator g$9879$20252$f3xia '9))
   (g$set-library-visit-code!$20283$f3xia
     g$set-library-visit-code!$20490$f3xia
     (record-mutator g$9879$20252$f3xia '10))
   (g$set-library-invoke-code!$20284$f3xia
     g$set-library-invoke-code!$20491$f3xia
     (record-mutator g$9879$20252$f3xia '11))
   (g$set-library-visible?!$20285$f3xia
     g$set-library-visible?!$20492$f3xia
     (record-mutator g$9879$20252$f3xia '12))
   (g$set-library-source-file-name!$20286$f3xia
     g$set-library-source-file-name!$20493$f3xia
     (record-mutator g$9879$20252$f3xia '13))
   (g$rp$20287$f3xia
     g$rp$20494$f3xia
     (make-record-printer
       'library
       (case-lambda
         ((g$x$20321$f3xia g$p$20322$f3xia g$wr$20323$f3xia)
          (begin
            (if (not (g$library?$20257$f3xia g$x$20321$f3xia))
              (g$assertion-violation$12459$f3xia
                'record-type-printer
                '"not a library")
              (void))
            (display
              (g$format$19331$f3xia
                '"#<library ~s>"
                (if (null?
                      (g$library-version$20261$f3xia g$x$20321$f3xia))
                  (g$library-name$20260$f3xia g$x$20321$f3xia)
                  (g$append$15556$f3xia
                    (g$library-name$20260$f3xia g$x$20321$f3xia)
                    (list
                      (g$library-version$20261$f3xia
                        g$x$20321$f3xia)))))
              g$p$20322$f3xia))))))
   (g$find-dependencies$20288$f3xia
     g$find-dependencies$20495$f3xia
     (case-lambda
       ((g$ls$20324$f3xia)
        (if (null? g$ls$20324$f3xia)
          '()
          ((case-lambda
             (()
              (begin
                '#f
                (g$assertion-violation$12459$f3xia
                  'find-dependencies
                  '"cannot handle deps yet")))))))))
   (g$find-library-by$20289$f3xia
     g$find-library-by$20496$f3xia
     (case-lambda
       ((g$pred$20325$f3xia)
        ((letrec ((g$f$20326$f3xia
                    (case-lambda
                      ((g$ls$20327$f3xia)
                       (if (null? g$ls$20327$f3xia)
                         '#f
                         (if (g$pred$20325$f3xia (car g$ls$20327$f3xia))
                           (car g$ls$20327$f3xia)
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 (g$f$20326$f3xia
                                   (cdr g$ls$20327$f3xia))))))))))))
           g$f$20326$f3xia)
         ((g$current-library-collection$20251$f3xia))))))
   (g$library-path$20290$f3xia
     g$library-path$20497$f3xia
     (g$make-parameter$19650$f3xia
       '(".")
       (case-lambda
         ((g$x$20328$f3xia)
          (if (if (g$list?$15545$f3xia g$x$20328$f3xia)
                (begin
                  '#f
                  (g$for-all$15548$f3xia
                    g$string?$15972$f3xia
                    g$x$20328$f3xia))
                '#f)
            (g$map$15550$f3xia
              (case-lambda ((g$x$20329$f3xia) g$x$20329$f3xia))
              g$x$20328$f3xia)
            (g$assertion-violation$12459$f3xia
              'library-path
              '"not a list of strings"
              g$x$20328$f3xia))))))
   (g$library-extensions$20291$f3xia
     g$library-extensions$20498$f3xia
     (g$make-parameter$19650$f3xia
       '(".sls" ".ss")
       (case-lambda
         ((g$x$20330$f3xia)
          (if (if (g$list?$15545$f3xia g$x$20330$f3xia)
                (begin
                  '#f
                  (g$for-all$15548$f3xia
                    g$string?$15972$f3xia
                    g$x$20330$f3xia))
                '#f)
            (g$map$15550$f3xia
              (case-lambda ((g$x$20331$f3xia) g$x$20331$f3xia))
              g$x$20330$f3xia)
            (g$assertion-violation$12459$f3xia
              'library-extensions
              '"not a list of strings"
              g$x$20330$f3xia))))))
   (g$library-name->file-name$20292$f3xia
     g$library-name->file-name$20499$f3xia
     (case-lambda
       ((g$x$20332$f3xia)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$19091$f3xia)))
          (case-lambda
            ((g$p$20335$f3xia g$extract$20336$f3xia)
             ((case-lambda
                ((g$extract$20337$f3xia g$p$20338$f3xia)
                 (letrec* ((g$display-hex$20339$f3xia
                             (case-lambda
                               ((g$n$20347$f3xia)
                                (if (g$<=$17040$f3xia
                                      '0
                                      g$n$20347$f3xia
                                      '9)
                                  (display
                                    g$n$20347$f3xia
                                    g$p$20338$f3xia)
                                  ((case-lambda
                                     (()
                                      (begin
                                        '#f
                                        (display
                                          (g$integer->char$15983$f3xia
                                            (+ (g$char->integer$15982$f3xia
                                                 '#\A)
                                               (- g$n$20347$f3xia '10)))
                                          g$p$20338$f3xia))))))))))
                   (begin
                     ((letrec ((g$f$20340$f3xia
                                 (case-lambda
                                   ((g$ls$20341$f3xia)
                                    (if (not (null? g$ls$20341$f3xia))
                                      (begin
                                        (display '"/" g$p$20338$f3xia)
                                        (g$for-each$15551$f3xia
                                          (case-lambda
                                            ((g$c$20342$f3xia)
                                             (if ((case-lambda
                                                    ((g$t$20343$f3xia)
                                                     (if g$t$20343$f3xia
                                                       g$t$20343$f3xia
                                                       ((case-lambda
                                                          ((g$t$20344$f3xia)
                                                           (if g$t$20344$f3xia
                                                             g$t$20344$f3xia
                                                             ((case-lambda
                                                                ((g$t$20345$f3xia)
                                                                 (if g$t$20345$f3xia
                                                                   g$t$20345$f3xia
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$15539$f3xia
                                                                       g$c$20342$f3xia
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$16058$f3xia
                                                                '#\0
                                                                g$c$20342$f3xia
                                                                '#\9)))))
                                                        (g$char<=?$16058$f3xia
                                                          '#\A
                                                          g$c$20342$f3xia
                                                          '#\Z)))))
                                                  (g$char<=?$16058$f3xia
                                                    '#\a
                                                    g$c$20342$f3xia
                                                    '#\z))
                                               (display
                                                 g$c$20342$f3xia
                                                 g$p$20338$f3xia)
                                               ((case-lambda
                                                  (()
                                                   (begin
                                                     '#f
                                                     (display
                                                       '"%"
                                                       g$p$20338$f3xia)
                                                     ((case-lambda
                                                        ((g$n$20346$f3xia)
                                                         (begin
                                                           (g$display-hex$20339$f3xia
                                                             (g$quotient$17103$f3xia
                                                               g$n$20346$f3xia
                                                               '16))
                                                           (g$display-hex$20339$f3xia
                                                             (g$remainder$17104$f3xia
                                                               g$n$20346$f3xia
                                                               '16)))))
                                                      (g$char->integer$15982$f3xia
                                                        g$c$20342$f3xia)))))))))
                                          (g$string->list$15991$f3xia
                                            (g$symbol->string$15996$f3xia
                                              (car g$ls$20341$f3xia))))
                                        (g$f$20340$f3xia
                                          (cdr g$ls$20341$f3xia)))
                                      (void))))))
                        g$f$20340$f3xia)
                      g$x$20332$f3xia)
                     (g$extract$20337$f3xia)))))
              g$extract$20336$f3xia
              g$p$20335$f3xia)))))))
   (g$file-locator$20293$f3xia
     g$file-locator$20500$f3xia
     (g$make-parameter$19650$f3xia
       (case-lambda
         ((g$x$20348$f3xia)
          ((case-lambda
             ((g$str$20349$f3xia)
              ((letrec ((g$f$20350$f3xia
                          (case-lambda
                            ((g$ls$20351$f3xia
                               g$exts$20352$f3xia
                               g$failed-list$20353$f3xia)
                             (if (null? g$ls$20351$f3xia)
                               (g$file-locator-resolution-error$19648$f3xia
                                 g$x$20348$f3xia
                                 (g$reverse$16012$f3xia
                                   g$failed-list$20353$f3xia)
                                 ((case-lambda
                                    ((g$ls$20354$f3xia)
                                     (if (null? g$ls$20354$f3xia)
                                       (g$error$12460$f3xia
                                         'library-manager
                                         '"BUG")
                                       (cdr g$ls$20354$f3xia))))
                                  (g$external-pending-libraries$20299$f3xia)))
                               (if (null? g$exts$20352$f3xia)
                                 (g$f$20350$f3xia
                                   (cdr g$ls$20351$f3xia)
                                   (g$library-extensions$20291$f3xia)
                                   g$failed-list$20353$f3xia)
                                 ((case-lambda
                                    (()
                                     (begin
                                       '#f
                                       ((case-lambda
                                          ((g$name$20355$f3xia)
                                           (if (g$file-exists?$16133$f3xia
                                                 g$name$20355$f3xia)
                                             g$name$20355$f3xia
                                             (g$f$20350$f3xia
                                               g$ls$20351$f3xia
                                               (cdr g$exts$20352$f3xia)
                                               (cons
                                                 g$name$20355$f3xia
                                                 g$failed-list$20353$f3xia)))))
                                        (g$string-append$15994$f3xia
                                          (car g$ls$20351$f3xia)
                                          g$str$20349$f3xia
                                          (car g$exts$20352$f3xia)))))))))))))
                 g$f$20350$f3xia)
               (g$library-path$20290$f3xia)
               (g$library-extensions$20291$f3xia)
               '())))
           (g$library-name->file-name$20292$f3xia g$x$20348$f3xia))))
       (case-lambda
         ((g$f$20356$f3xia)
          (if (g$procedure?$15978$f3xia g$f$20356$f3xia)
            g$f$20356$f3xia
            (g$assertion-violation$12459$f3xia
              'file-locator
              '"not a procedure"
              g$f$20356$f3xia))))))
   (g$serialize-all$20294$f3xia
     g$serialize-all$20501$f3xia
     (case-lambda
       ((g$serialize$20357$f3xia g$compile$20358$f3xia)
        (letrec* ((g$library-desc$20359$f3xia
                    (case-lambda
                      ((g$x$20361$f3xia)
                       (list
                         (g$library-id$20259$f3xia g$x$20361$f3xia)
                         (g$library-name$20260$f3xia
                           g$x$20361$f3xia))))))
          (g$for-each$15551$f3xia
            (case-lambda
              ((g$x$20360$f3xia)
               (if (g$library-source-file-name$20272$f3xia
                     g$x$20360$f3xia)
                 (g$serialize$20357$f3xia
                   (g$library-source-file-name$20272$f3xia
                     g$x$20360$f3xia)
                   (list
                     (g$library-id$20259$f3xia g$x$20360$f3xia)
                     (g$library-name$20260$f3xia g$x$20360$f3xia)
                     (g$library-version$20261$f3xia g$x$20360$f3xia)
                     (g$map$15550$f3xia
                       g$library-desc$20359$f3xia
                       (g$library-imp*$20262$f3xia g$x$20360$f3xia))
                     (g$map$15550$f3xia
                       g$library-desc$20359$f3xia
                       (g$library-vis*$20263$f3xia g$x$20360$f3xia))
                     (g$map$15550$f3xia
                       g$library-desc$20359$f3xia
                       (g$library-inv*$20264$f3xia g$x$20360$f3xia))
                     (g$library-subst$20265$f3xia g$x$20360$f3xia)
                     (g$library-env$20266$f3xia g$x$20360$f3xia)
                     (g$compile$20358$f3xia
                       (g$library-visit-code$20269$f3xia
                         g$x$20360$f3xia))
                     (g$compile$20358$f3xia
                       (g$library-invoke-code$20270$f3xia
                         g$x$20360$f3xia))
                     (g$library-visible?$20271$f3xia g$x$20360$f3xia)))
                 (void))))
            ((g$current-library-collection$20251$f3xia)))))))
   (g$current-precompiled-library-loader$20295$f3xia
     g$current-precompiled-library-loader$20502$f3xia
     (g$make-parameter$19650$f3xia
       (case-lambda ((g$filename$20362$f3xia g$sk$20363$f3xia) '#f))))
   (g$try-load-from-file$20296$f3xia
     g$try-load-from-file$20503$f3xia
     (case-lambda
       ((g$filename$20364$f3xia)
        ((g$current-precompiled-library-loader$20295$f3xia)
         g$filename$20364$f3xia
         (case-lambda
           ((g$id$20365$f3xia
              g$name$20366$f3xia
              g$ver$20367$f3xia
              g$imp*$20368$f3xia
              g$vis*$20369$f3xia
              g$inv*$20370$f3xia
              g$exp-subst$20371$f3xia
              g$exp-env$20372$f3xia
              g$visit-proc$20373$f3xia
              g$invoke-proc$20374$f3xia
              g$visible?$20375$f3xia)
            ((letrec ((g$f$20376$f3xia
                        (case-lambda
                          ((g$deps$20377$f3xia)
                           (if (null? g$deps$20377$f3xia)
                             (begin
                               (g$install-library$20306$f3xia
                                 g$id$20365$f3xia
                                 g$name$20366$f3xia
                                 g$ver$20367$f3xia
                                 g$imp*$20368$f3xia
                                 g$vis*$20369$f3xia
                                 g$inv*$20370$f3xia
                                 g$exp-subst$20371$f3xia
                                 g$exp-env$20372$f3xia
                                 g$visit-proc$20373$f3xia
                                 g$invoke-proc$20374$f3xia
                                 '#f
                                 '#f
                                 g$visible?$20375$f3xia
                                 '#f)
                               '#t)
                             ((case-lambda
                                (()
                                 (begin
                                   '#f
                                   ((case-lambda
                                      ((g$d$20378$f3xia)
                                       ((case-lambda
                                          ((g$label$20379$f3xia
                                             g$dname$20380$f3xia)
                                           ((case-lambda
                                              ((g$l$20381$f3xia)
                                               (if (if (g$library?$20257$f3xia
                                                         g$l$20381$f3xia)
                                                     (begin
                                                       '#f
                                                       (eq? g$label$20379$f3xia
                                                            (g$library-id$20259$f3xia
                                                              g$l$20381$f3xia)))
                                                     '#f)
                                                 (g$f$20376$f3xia
                                                   (cdr g$deps$20377$f3xia))
                                                 ((case-lambda
                                                    (()
                                                     (begin
                                                       '#f
                                                       (g$library-version-mismatch-warning$19647$f3xia
                                                         g$name$20366$f3xia
                                                         g$dname$20380$f3xia
                                                         g$filename$20364$f3xia)
                                                       '#f)))))))
                                            (g$find-library-by-name$20301$f3xia
                                              g$dname$20380$f3xia))))
                                        (car g$d$20378$f3xia)
                                        (g$cadr$16014$f3xia
                                          g$d$20378$f3xia))))
                                    (car g$deps$20377$f3xia)))))))))))
               g$f$20376$f3xia)
             (g$append$15556$f3xia
               g$imp*$20368$f3xia
               g$vis*$20369$f3xia
               g$inv*$20370$f3xia)))
           (g$others$20382$f3xia '#f))))))
   (g$library-loader$20297$f3xia
     g$library-loader$20504$f3xia
     (g$make-parameter$19650$f3xia
       (case-lambda
         ((g$x$20383$f3xia)
          ((case-lambda
             ((g$file-name$20384$f3xia)
              (if (not g$file-name$20384$f3xia)
                (g$assertion-violation$12459$f3xia
                  '#f
                  '"cannot find library"
                  g$x$20383$f3xia)
                ((case-lambda
                   ((g$t$20385$f3xia)
                    (if g$t$20385$f3xia
                      g$t$20385$f3xia
                      (begin
                        '#f
                        ((case-lambda
                           (()
                            (begin
                              '#f
                              ((g$current-library-expander$20298$f3xia)
                               (g$read-library-source-file$19649$f3xia
                                 g$file-name$20384$f3xia)
                               g$file-name$20384$f3xia
                               (case-lambda
                                 ((g$name$20386$f3xia)
                                  (if (not (g$equal?$19443$f3xia
                                             g$name$20386$f3xia
                                             g$x$20383$f3xia))
                                    (g$assertion-violation$12459$f3xia
                                      'import
                                      (call-with-values
                                        (case-lambda
                                          (()
                                           (g$open-string-output-port$19091$f3xia)))
                                        (case-lambda
                                          ((g$p$20389$f3xia
                                             g$e$20390$f3xia)
                                           ((case-lambda
                                              ((g$e$20391$f3xia
                                                 g$p$20392$f3xia)
                                               (begin
                                                 (display
                                                   '"expected to find library "
                                                   g$p$20392$f3xia)
                                                 (write
                                                   g$x$20383$f3xia
                                                   g$p$20392$f3xia)
                                                 (display
                                                   '" in file "
                                                   g$p$20392$f3xia)
                                                 (display
                                                   g$file-name$20384$f3xia
                                                   g$p$20392$f3xia)
                                                 (display
                                                   '", found "
                                                   g$p$20392$f3xia)
                                                 (write
                                                   g$name$20386$f3xia
                                                   g$p$20392$f3xia)
                                                 (display
                                                   '" instead"
                                                   g$p$20392$f3xia)
                                                 (g$e$20391$f3xia))))
                                            g$e$20390$f3xia
                                            g$p$20389$f3xia)))))
                                    (void)))))))))))))
                 (g$try-load-from-file$20296$f3xia
                   g$file-name$20384$f3xia)))))
           ((g$file-locator$20293$f3xia) g$x$20383$f3xia))))
       (case-lambda
         ((g$f$20393$f3xia)
          (if (g$procedure?$15978$f3xia g$f$20393$f3xia)
            g$f$20393$f3xia
            (g$assertion-violation$12459$f3xia
              'library-locator
              '"not a procedure"
              g$f$20393$f3xia))))))
   (g$current-library-expander$20298$f3xia
     g$current-library-expander$20505$f3xia
     (g$make-parameter$19650$f3xia
       (case-lambda
         ((g$x$20394$f3xia)
          (g$assertion-violation$12459$f3xia
            'library-expander
            '"not initialized")))
       (case-lambda
         ((g$f$20395$f3xia)
          (if (g$procedure?$15978$f3xia g$f$20395$f3xia)
            g$f$20395$f3xia
            (g$assertion-violation$12459$f3xia
              'library-expander
              '"not a procedure"
              g$f$20395$f3xia))))))
   (g$external-pending-libraries$20299$f3xia
     g$external-pending-libraries$20506$f3xia
     (g$make-parameter$19650$f3xia '()))
   (g$find-external-library$20300$f3xia
     g$find-external-library$20507$f3xia
     (case-lambda
       ((g$name$20396$f3xia)
        (begin
          (if (g$member$15540$f3xia
                g$name$20396$f3xia
                (g$external-pending-libraries$20299$f3xia))
            (g$assertion-violation$12459$f3xia
              '#f
              '"circular attempt to import library was detected"
              g$name$20396$f3xia)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$20399$f3xia
                g$external-pending-libraries$20400$f3xia)
              ((case-lambda
                 ((g$swap$20401$f3xia)
                  (dynamic-wind
                    g$swap$20401$f3xia
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$20297$f3xia)
                          g$name$20396$f3xia)
                         ((case-lambda
                            ((g$t$20402$f3xia)
                             (if g$t$20402$f3xia
                               g$t$20402$f3xia
                               (begin
                                 '#f
                                 (g$assertion-violation$12459$f3xia
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$20396$f3xia)))))
                          (g$find-library-by$20289$f3xia
                            (case-lambda
                              ((g$x$20403$f3xia)
                               (g$equal?$19443$f3xia
                                 (g$library-name$20260$f3xia
                                   g$x$20403$f3xia)
                                 g$name$20396$f3xia))))))))
                    g$swap$20401$f3xia)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$20404$f3xia)
                      (begin
                        (g$external-pending-libraries$20399$f3xia
                          g$external-pending-libraries$20400$f3xia)
                        (set! g$external-pending-libraries$20400$f3xia
                          g$t$20404$f3xia))))
                   (g$external-pending-libraries$20399$f3xia)))))))
           g$external-pending-libraries$20299$f3xia
           (cons
             g$name$20396$f3xia
             (g$external-pending-libraries$20299$f3xia)))))))
   (g$find-library-by-name$20301$f3xia
     g$find-library-by-name$20508$f3xia
     (case-lambda
       ((g$name$20405$f3xia)
        ((case-lambda
           ((g$t$20406$f3xia)
            (if g$t$20406$f3xia
              g$t$20406$f3xia
              (begin
                '#f
                (g$find-external-library$20300$f3xia
                  g$name$20405$f3xia)))))
         (g$find-library-by$20289$f3xia
           (case-lambda
             ((g$x$20407$f3xia)
              (g$equal?$19443$f3xia
                (g$library-name$20260$f3xia g$x$20407$f3xia)
                g$name$20405$f3xia))))))))
   (g$uninstall-library$20302$f3xia
     g$uninstall-library$20509$f3xia
     (case-lambda
       ((g$name$20408$f3xia g$err?$20409$f3xia)
        (letrec* ((g$who$20410$f3xia 'uninstall-library))
          ((case-lambda
             ((g$lib$20411$f3xia)
              (begin
                (if (if g$err?$20409$f3xia
                      (begin '#f (not g$lib$20411$f3xia))
                      '#f)
                  (g$assertion-violation$12459$f3xia
                    g$who$20410$f3xia
                    '"library not installed"
                    g$name$20408$f3xia)
                  (void))
                ((g$current-library-collection$20251$f3xia)
                 g$lib$20411$f3xia
                 '#t)
                (g$for-each$15551$f3xia
                  (case-lambda
                    ((g$x$20412$f3xia)
                     ((case-lambda
                        ((g$label$20413$f3xia g$binding$20414$f3xia)
                         (begin
                           (remove-location g$label$20413$f3xia)
                           (if (g$memq$15538$f3xia
                                 (car g$binding$20414$f3xia)
                                 '(global
                                    global-macro
                                    global-macro!
                                    global-ctv))
                             (remove-location
                               (cdr g$binding$20414$f3xia))
                             (void)))))
                      (car g$x$20412$f3xia)
                      (cdr g$x$20412$f3xia))))
                  (g$library-env$20266$f3xia g$lib$20411$f3xia)))))
           (g$find-library-by$20289$f3xia
             (case-lambda
               ((g$x$20415$f3xia)
                (g$equal?$19443$f3xia
                  (g$library-name$20260$f3xia g$x$20415$f3xia)
                  g$name$20408$f3xia)))))))
       ((g$name$20416$f3xia)
        (g$uninstall-library$20302$f3xia g$name$20416$f3xia '#t))))
   (g$library-exists?$20303$f3xia
     g$library-exists?$20510$f3xia
     (case-lambda
       ((g$name$20417$f3xia)
        (if (g$find-library-by$20289$f3xia
              (case-lambda
                ((g$x$20418$f3xia)
                 (g$equal?$19443$f3xia
                   (g$library-name$20260$f3xia g$x$20418$f3xia)
                   g$name$20417$f3xia))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$20304$f3xia
     g$find-library-by-spec/die$20511$f3xia
     (case-lambda
       ((g$spec$20419$f3xia)
        ((case-lambda
           ((g$id$20420$f3xia)
            ((case-lambda
               ((g$t$20421$f3xia)
                (if g$t$20421$f3xia
                  g$t$20421$f3xia
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      '#f
                      '"cannot find library with required spec"
                      g$spec$20419$f3xia)))))
             (g$find-library-by$20289$f3xia
               (case-lambda
                 ((g$x$20422$f3xia)
                  (eq? g$id$20420$f3xia
                       (g$library-id$20259$f3xia g$x$20422$f3xia))))))))
         (car g$spec$20419$f3xia)))))
   (g$install-library-record$20305$f3xia
     g$install-library-record$20512$f3xia
     (case-lambda
       ((g$lib$20423$f3xia)
        (begin
          ((case-lambda
             ((g$exp-env$20424$f3xia)
              (g$for-each$15551$f3xia
                (case-lambda
                  ((g$x$20425$f3xia)
                   ((case-lambda
                      ((g$label$20426$f3xia g$binding$20427$f3xia)
                       ((case-lambda
                          ((g$binding$20428$f3xia)
                           (g$set-label-binding!$19653$f3xia
                             g$label$20426$f3xia
                             g$binding$20428$f3xia)))
                        ((case-lambda
                           ((g$t$20429$f3xia)
                            (if (eqv? g$t$20429$f3xia 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$20423$f3xia
                                  (cdr g$binding$20427$f3xia)))
                              (if (eqv? g$t$20429$f3xia 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$20423$f3xia
                                    (cdr g$binding$20427$f3xia)))
                                (if (eqv?
                                      g$t$20429$f3xia
                                      'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$20423$f3xia
                                      (cdr g$binding$20427$f3xia)))
                                  (if (eqv? g$t$20429$f3xia 'global-ctv)
                                    (cons
                                      'global-ctv
                                      (cons
                                        g$lib$20423$f3xia
                                        (cdr g$binding$20427$f3xia)))
                                    ((case-lambda
                                       (()
                                        (begin
                                          '#f
                                          g$binding$20427$f3xia))))))))))
                         (car g$binding$20427$f3xia)))))
                    (car g$x$20425$f3xia)
                    (cdr g$x$20425$f3xia))))
                g$exp-env$20424$f3xia)))
           (g$library-env$20266$f3xia g$lib$20423$f3xia))
          ((g$current-library-collection$20251$f3xia)
           g$lib$20423$f3xia)))))
   (g$install-library$20306$f3xia
     g$install-library$20513$f3xia
     (case-lambda
       ((g$id$20430$f3xia
          g$name$20431$f3xia
          g$ver$20432$f3xia
          g$imp*$20433$f3xia
          g$vis*$20434$f3xia
          g$inv*$20435$f3xia
          g$exp-subst$20436$f3xia
          g$exp-env$20437$f3xia
          g$visit-proc$20438$f3xia
          g$invoke-proc$20439$f3xia
          g$visit-code$20440$f3xia
          g$invoke-code$20441$f3xia
          g$visible?$20442$f3xia
          g$source-file-name$20443$f3xia)
        ((case-lambda
           ((g$imp-lib*$20444$f3xia
              g$vis-lib*$20445$f3xia
              g$inv-lib*$20446$f3xia)
            (begin
              (if (not (if (g$symbol?$15976$f3xia g$id$20430$f3xia)
                         (if (g$list?$15545$f3xia g$name$20431$f3xia)
                           (begin
                             '#f
                             (g$list?$15545$f3xia g$ver$20432$f3xia))
                           '#f)
                         '#f))
                (g$assertion-violation$12459$f3xia
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$20430$f3xia
                  g$name$20431$f3xia
                  g$ver$20432$f3xia)
                (void))
              (if (g$library-exists?$20303$f3xia g$name$20431$f3xia)
                (g$assertion-violation$12459$f3xia
                  'install-library
                  '"library is already installed"
                  g$name$20431$f3xia)
                (void))
              ((case-lambda
                 ((g$lib$20447$f3xia)
                  (g$install-library-record$20305$f3xia
                    g$lib$20447$f3xia)))
               (g$make-library$20258$f3xia
                 g$id$20430$f3xia
                 g$name$20431$f3xia
                 g$ver$20432$f3xia
                 g$imp-lib*$20444$f3xia
                 g$vis-lib*$20445$f3xia
                 g$inv-lib*$20446$f3xia
                 g$exp-subst$20436$f3xia
                 g$exp-env$20437$f3xia
                 g$visit-proc$20438$f3xia
                 g$invoke-proc$20439$f3xia
                 g$visit-code$20440$f3xia
                 g$invoke-code$20441$f3xia
                 g$visible?$20442$f3xia
                 g$source-file-name$20443$f3xia)))))
         (g$map$15550$f3xia
           g$find-library-by-spec/die$20304$f3xia
           g$imp*$20433$f3xia)
         (g$map$15550$f3xia
           g$find-library-by-spec/die$20304$f3xia
           g$vis*$20434$f3xia)
         (g$map$15550$f3xia
           g$find-library-by-spec/die$20304$f3xia
           g$inv*$20435$f3xia)))))
   (g$imported-label->binding$20307$f3xia
     g$imported-label->binding$20514$f3xia
     (case-lambda
       ((g$lab$20448$f3xia)
        (g$label-binding$19654$f3xia g$lab$20448$f3xia))))
   (g$invoke-library$20308$f3xia
     g$invoke-library$20515$f3xia
     (case-lambda
       ((g$lib$20449$f3xia)
        ((case-lambda
           ((g$invoke$20450$f3xia)
            (if (g$procedure?$15978$f3xia g$invoke$20450$f3xia)
              (begin
                (g$set-library-invoke-state!$20282$f3xia
                  g$lib$20449$f3xia
                  (case-lambda
                    (()
                     (g$assertion-violation$12459$f3xia
                       'invoke
                       '"circularity detected"
                       g$lib$20449$f3xia))))
                (g$for-each$15551$f3xia
                  g$invoke-library$20308$f3xia
                  (g$library-inv*$20264$f3xia g$lib$20449$f3xia))
                (g$set-library-invoke-state!$20282$f3xia
                  g$lib$20449$f3xia
                  (case-lambda
                    (()
                     (g$assertion-violation$12459$f3xia
                       'invoke
                       '"first invoke did not return"
                       g$lib$20449$f3xia))))
                (g$invoke$20450$f3xia)
                (g$set-library-invoke-state!$20282$f3xia
                  g$lib$20449$f3xia
                  '#t))
              (void))))
         (g$library-invoke-state$20268$f3xia g$lib$20449$f3xia)))))
   (g$visit-library$20309$f3xia
     g$visit-library$20516$f3xia
     (case-lambda
       ((g$lib$20451$f3xia)
        ((case-lambda
           ((g$visit$20452$f3xia)
            (if (g$procedure?$15978$f3xia g$visit$20452$f3xia)
              (begin
                (g$set-library-visit-state!$20281$f3xia
                  g$lib$20451$f3xia
                  (case-lambda
                    (()
                     (g$assertion-violation$12459$f3xia
                       'visit
                       '"circularity detected"
                       g$lib$20451$f3xia))))
                (g$for-each$15551$f3xia
                  g$invoke-library$20308$f3xia
                  (g$library-vis*$20263$f3xia g$lib$20451$f3xia))
                (g$set-library-visit-state!$20281$f3xia
                  g$lib$20451$f3xia
                  (case-lambda
                    (()
                     (g$assertion-violation$12459$f3xia
                       'invoke
                       '"first visit did not return"
                       g$lib$20451$f3xia))))
                (g$visit$20452$f3xia)
                (g$set-library-visit-state!$20281$f3xia
                  g$lib$20451$f3xia
                  '#t))
              (void))))
         (g$library-visit-state$20267$f3xia g$lib$20451$f3xia)))))
   (g$invoke-library-by-spec$20310$f3xia
     g$invoke-library-by-spec$20517$f3xia
     (case-lambda
       ((g$spec$20453$f3xia)
        (g$invoke-library$20308$f3xia
          (g$find-library-by-spec/die$20304$f3xia
            g$spec$20453$f3xia)))))
   (g$installed-libraries$20311$f3xia
     g$installed-libraries$20518$f3xia
     (case-lambda
       ((g$all?$20454$f3xia)
        ((letrec ((g$f$20455$f3xia
                    (case-lambda
                      ((g$ls$20456$f3xia)
                       (if (null? g$ls$20456$f3xia)
                         '()
                         (if ((case-lambda
                                ((g$t$20457$f3xia)
                                 (if g$t$20457$f3xia
                                   g$t$20457$f3xia
                                   (begin
                                     '#f
                                     (g$library-visible?$20271$f3xia
                                       (car g$ls$20456$f3xia))))))
                              g$all?$20454$f3xia)
                           (cons
                             (g$library-name$20260$f3xia
                               (car g$ls$20456$f3xia))
                             (g$f$20455$f3xia (cdr g$ls$20456$f3xia)))
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 (g$f$20455$f3xia
                                   (cdr g$ls$20456$f3xia))))))))))))
           g$f$20455$f3xia)
         ((g$current-library-collection$20251$f3xia))))
       (() (g$installed-libraries$20311$f3xia '#f))))
   (g$library-spec$20312$f3xia
     g$library-spec$20519$f3xia
     (case-lambda
       ((g$x$20458$f3xia)
        (begin
          (if (not (g$library?$20257$f3xia g$x$20458$f3xia))
            (g$assertion-violation$12459$f3xia
              'library-spec
              '"not a library"
              g$x$20458$f3xia)
            (void))
          (list
            (g$library-id$20259$f3xia g$x$20458$f3xia)
            (g$library-name$20260$f3xia g$x$20458$f3xia)
            (g$library-version$20261$f3xia g$x$20458$f3xia)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$20520$f3xia
     g$build-global-define$20730$f3xia
     (case-lambda ((g$x$20701$f3xia) (g$build-void$20697$f3xia))))
   (g$build-lambda$20631$f3xia
     g$build-lambda$20731$f3xia
     (case-lambda
       ((g$ae$20702$f3xia g$vars$20703$f3xia g$exp$20704$f3xia)
        (if g$ae$20702$f3xia
          (list
            'case-lambda
            (list g$vars$20703$f3xia g$exp$20704$f3xia))
          (list
            'case-lambda
            (list g$vars$20703$f3xia g$exp$20704$f3xia))))))
   (g$build-case-lambda$20632$f3xia
     g$build-case-lambda$20732$f3xia
     (case-lambda
       ((g$ae$20705$f3xia g$vars*$20706$f3xia g$exp*$20707$f3xia)
        (if g$ae$20705$f3xia
          (cons
            'case-lambda
            (g$map$15550$f3xia
              list
              g$vars*$20706$f3xia
              g$exp*$20707$f3xia))
          (cons
            'case-lambda
            (g$map$15550$f3xia
              list
              g$vars*$20706$f3xia
              g$exp*$20707$f3xia))))))
   (g$build-let$20633$f3xia
     g$build-let$20733$f3xia
     (case-lambda
       ((g$ae$20708$f3xia
          g$lhs*$20709$f3xia
          g$rhs*$20710$f3xia
          g$body$20711$f3xia)
        (cons
          (g$build-lambda$20631$f3xia
            g$ae$20708$f3xia
            g$lhs*$20709$f3xia
            g$body$20711$f3xia)
          g$rhs*$20710$f3xia))))
   (g$build-sequence$20696$f3xia
     g$build-sequence$20734$f3xia
     (case-lambda
       ((g$ae$20712$f3xia g$exps$20713$f3xia)
        ((letrec ((g$loop$20714$f3xia
                    (case-lambda
                      ((g$exps$20715$f3xia)
                       (if (null? (cdr g$exps$20715$f3xia))
                         (car g$exps$20715$f3xia)
                         (if (g$equal?$19443$f3xia
                               (car g$exps$20715$f3xia)
                               (g$build-void$20697$f3xia))
                           (g$loop$20714$f3xia (cdr g$exps$20715$f3xia))
                           (cons 'begin g$exps$20715$f3xia)))))))
           g$loop$20714$f3xia)
         g$exps$20713$f3xia))))
   (g$build-void$20697$f3xia
     g$build-void$20735$f3xia
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$20698$f3xia
     g$build-letrec$20736$f3xia
     (case-lambda
       ((g$ae$20716$f3xia
          g$vars$20717$f3xia
          g$val-exps$20718$f3xia
          g$body-exp$20719$f3xia)
        (if (null? g$vars$20717$f3xia)
          g$body-exp$20719$f3xia
          (list
            'letrec
            (g$map$15550$f3xia
              list
              g$vars$20717$f3xia
              g$val-exps$20718$f3xia)
            g$body-exp$20719$f3xia)))))
   (g$build-letrec*$20699$f3xia
     g$build-letrec*$20737$f3xia
     (case-lambda
       ((g$ae$20720$f3xia
          g$vars$20721$f3xia
          g$val-exps$20722$f3xia
          g$body-exp$20723$f3xia)
        (if (null? g$vars$20721$f3xia)
          g$body-exp$20723$f3xia
          ((case-lambda
             (()
              (begin
                '#f
                (list
                  'letrec*
                  (g$map$15550$f3xia
                    list
                    g$vars$20721$f3xia
                    g$val-exps$20722$f3xia)
                  g$body-exp$20723$f3xia)))))))))
   (g$build-library-letrec*$20700$f3xia
     g$build-library-letrec*$20738$f3xia
     (case-lambda
       ((g$ae$20724$f3xia
          g$name$20725$f3xia
          g$vars$20726$f3xia
          g$locs$20727$f3xia
          g$val-exps$20728$f3xia
          g$body-exp$20729$f3xia)
        (list
          'library-letrec*
          g$name$20725$f3xia
          (g$map$15550$f3xia
            list
            g$vars$20726$f3xia
            g$locs$20727$f3xia
            g$val-exps$20728$f3xia)
          g$body-exp$20729$f3xia)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$20739$f3xia
     g$set-cons$24754$f3xia
     (case-lambda
       ((g$x$21436$f3xia g$ls$21437$f3xia)
        (if (g$memq$15538$f3xia g$x$21436$f3xia g$ls$21437$f3xia)
          g$ls$21437$f3xia
          ((case-lambda
             (()
              (begin '#f (cons g$x$21436$f3xia g$ls$21437$f3xia)))))))))
   (g$set-union$20740$f3xia
     g$set-union$24755$f3xia
     (case-lambda
       ((g$ls1$21438$f3xia g$ls2$21439$f3xia)
        (if (null? g$ls1$21438$f3xia)
          g$ls2$21439$f3xia
          (if (g$memq$15538$f3xia
                (car g$ls1$21438$f3xia)
                g$ls2$21439$f3xia)
            (g$set-union$20740$f3xia
              (cdr g$ls1$21438$f3xia)
              g$ls2$21439$f3xia)
            ((case-lambda
               (()
                (begin
                  '#f
                  (cons
                    (car g$ls1$21438$f3xia)
                    (g$set-union$20740$f3xia
                      (cdr g$ls1$21438$f3xia)
                      g$ls2$21439$f3xia)))))))))))
   (g$top-mark*$20742$f3xia g$top-mark*$24756$f3xia '(top))
   (g$top-marked?$20743$f3xia
     g$top-marked?$24757$f3xia
     (case-lambda
       ((g$m*$21440$f3xia) (g$memq$15538$f3xia 'top g$m*$21440$f3xia))))
   (g$gen-lexical$20744$f3xia
     g$gen-lexical$24758$f3xia
     (case-lambda
       ((g$sym$21441$f3xia)
        (if (g$symbol?$15976$f3xia g$sym$21441$f3xia)
          (gensym g$sym$21441$f3xia)
          (if (g$stx?$20781$f3xia g$sym$21441$f3xia)
            (g$gen-lexical$20744$f3xia
              (g$id->sym$20810$f3xia g$sym$21441$f3xia))
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$12459$f3xia
                    'gen-lexical
                    '"BUG: invalid arg"
                    g$sym$21441$f3xia))))))))))
   (g$gen-global$20745$f3xia
     g$gen-global$24759$f3xia
     (case-lambda
       ((g$x$21442$f3xia) (g$gen-lexical$20744$f3xia g$x$21442$f3xia))))
   (g$gen-label$20746$f3xia
     g$gen-label$24760$f3xia
     (case-lambda ((g$_$21443$f3xia) (gensym))))
   (g$gen-top-level-label$20747$f3xia
     g$gen-top-level-label$24761$f3xia
     (case-lambda
       ((g$id$21444$f3xia g$rib$21445$f3xia)
        (letrec* ((g$find$21446$f3xia
                    (case-lambda
                      ((g$sym$21452$f3xia
                         g$mark*$21453$f3xia
                         g$sym*$21454$f3xia
                         g$mark**$21455$f3xia
                         g$label*$21456$f3xia)
                       (if (pair? g$sym*$21454$f3xia)
                         (begin
                           '#f
                           (if (if (eq? g$sym$21452$f3xia
                                        (car g$sym*$21454$f3xia))
                                 (begin
                                   '#f
                                   (g$same-marks?$20811$f3xia
                                     g$mark*$21453$f3xia
                                     (car g$mark**$21455$f3xia)))
                                 '#f)
                             (car g$label*$21456$f3xia)
                             (g$find$21446$f3xia
                               g$sym$21452$f3xia
                               g$mark*$21453$f3xia
                               (cdr g$sym*$21454$f3xia)
                               (cdr g$mark**$21455$f3xia)
                               (cdr g$label*$21456$f3xia))))
                         '#f)))))
          ((case-lambda
             ((g$sym$21447$f3xia g$mark*$21448$f3xia)
              ((case-lambda
                 ((g$sym*$21449$f3xia)
                  ((case-lambda
                     ((g$t$21450$f3xia)
                      (if g$t$21450$f3xia
                        ((case-lambda
                           ((g$label$21451$f3xia)
                            (if (g$imported-label->binding$20514$f3xia
                                  g$label$21451$f3xia)
                              (gensym)
                              ((case-lambda
                                 (()
                                  (begin '#f g$label$21451$f3xia)))))))
                         g$t$21450$f3xia)
                        ((case-lambda (() (begin '#f (gensym))))))))
                   (if (g$memq$15538$f3xia
                         g$sym$21447$f3xia
                         (g$rib-sym*$20757$f3xia g$rib$21445$f3xia))
                     (begin
                       '#f
                       (g$find$21446$f3xia
                         g$sym$21447$f3xia
                         g$mark*$21448$f3xia
                         g$sym*$21449$f3xia
                         (g$rib-mark**$20758$f3xia g$rib$21445$f3xia)
                         (g$rib-label*$20759$f3xia g$rib$21445$f3xia)))
                     '#f))))
               (g$rib-sym*$20757$f3xia g$rib$21445$f3xia))))
           (g$id->sym$20810$f3xia g$id$21444$f3xia)
           (g$stx-mark*$20784$f3xia g$id$21444$f3xia))))))
   (g$gen-define-label+loc$20748$f3xia
     g$gen-define-label+loc$24762$f3xia
     (case-lambda
       ((g$id$21457$f3xia g$rib$21458$f3xia g$sd?$21459$f3xia)
        (if g$sd?$21459$f3xia
          (values (gensym) (g$gen-lexical$20744$f3xia g$id$21457$f3xia))
          ((case-lambda
             ((g$env$21460$f3xia)
              ((case-lambda
                 ((g$label$21461$f3xia g$locs$21462$f3xia)
                  (values
                    g$label$21461$f3xia
                    ((case-lambda
                       ((g$t$21463$f3xia)
                        (if g$t$21463$f3xia
                          (cdr g$t$21463$f3xia)
                          ((case-lambda
                             (()
                              (begin
                                '#f
                                ((case-lambda
                                   ((g$loc$21464$f3xia)
                                    (begin
                                      (g$set-interaction-env-locs!$21397$f3xia
                                        g$env$21460$f3xia
                                        (cons
                                          (cons
                                            g$label$21461$f3xia
                                            g$loc$21464$f3xia)
                                          g$locs$21462$f3xia))
                                      g$loc$21464$f3xia)))
                                 (g$gen-lexical$20744$f3xia
                                   g$id$21457$f3xia)))))))))
                     (g$assq$15534$f3xia
                       g$label$21461$f3xia
                       g$locs$21462$f3xia)))))
               (g$gen-top-level-label$20747$f3xia
                 g$id$21457$f3xia
                 g$rib$21458$f3xia)
               (g$interaction-env-locs$21394$f3xia g$env$21460$f3xia))))
           (g$top-level-context$21435$f3xia))))))
   (g$gen-define-label$20749$f3xia
     g$gen-define-label$24763$f3xia
     (case-lambda
       ((g$id$21465$f3xia g$rib$21466$f3xia g$sd?$21467$f3xia)
        (if g$sd?$21467$f3xia
          (gensym)
          (g$gen-top-level-label$20747$f3xia
            g$id$21465$f3xia
            g$rib$21466$f3xia)))))
   (g$10206$20750$f3xia
     g$10206$24764$f3xia
     (make-record-type-descriptor
       'rib
       '#f
       'g$10209$f3xia
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$10208$20751$f3xia g$10208$24765$f3xia '#f)
   (g$10207$20752$f3xia
     g$10207$24766$f3xia
     (make-record-constructor-descriptor
       g$10206$20750$f3xia
       '#f
       g$10208$20751$f3xia))
   (g$rib?$20755$f3xia
     g$rib?$24767$f3xia
     (record-predicate g$10206$20750$f3xia))
   (g$make-rib$20756$f3xia
     g$make-rib$24768$f3xia
     (record-constructor g$10207$20752$f3xia))
   (g$rib-sym*$20757$f3xia
     g$rib-sym*$24769$f3xia
     (record-accessor g$10206$20750$f3xia '0))
   (g$rib-mark**$20758$f3xia
     g$rib-mark**$24770$f3xia
     (record-accessor g$10206$20750$f3xia '1))
   (g$rib-label*$20759$f3xia
     g$rib-label*$24771$f3xia
     (record-accessor g$10206$20750$f3xia '2))
   (g$rib-sealed/freq$20760$f3xia
     g$rib-sealed/freq$24772$f3xia
     (record-accessor g$10206$20750$f3xia '3))
   (g$rib-cache$20761$f3xia
     g$rib-cache$24773$f3xia
     (record-accessor g$10206$20750$f3xia '4))
   (g$set-rib-sym*!$20762$f3xia
     g$set-rib-sym*!$24774$f3xia
     (record-mutator g$10206$20750$f3xia '0))
   (g$set-rib-mark**!$20763$f3xia
     g$set-rib-mark**!$24775$f3xia
     (record-mutator g$10206$20750$f3xia '1))
   (g$set-rib-label*!$20764$f3xia
     g$set-rib-label*!$24776$f3xia
     (record-mutator g$10206$20750$f3xia '2))
   (g$set-rib-sealed/freq!$20765$f3xia
     g$set-rib-sealed/freq!$24777$f3xia
     (record-mutator g$10206$20750$f3xia '3))
   (g$set-rib-cache!$20766$f3xia
     g$set-rib-cache!$24778$f3xia
     (record-mutator g$10206$20750$f3xia '4))
   (g$make-empty-rib$20767$f3xia
     g$make-empty-rib$24779$f3xia
     (case-lambda (() (g$make-rib$20756$f3xia '() '() '() '#f '#f))))
   (g$make-cache-rib$20768$f3xia
     g$make-cache-rib$24780$f3xia
     (case-lambda
       (()
        (g$make-rib$20756$f3xia
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$16112$f3xia)))))
   (g$find-label$20769$f3xia
     g$find-label$24781$f3xia
     (case-lambda
       ((g$rib$21468$f3xia g$sym$21469$f3xia g$mark*$21470$f3xia)
        ((case-lambda
           ((g$ht$21471$f3xia)
            (if g$ht$21471$f3xia
              (begin
                '#f
                ((case-lambda
                   ((g$cv$21472$f3xia)
                    ((case-lambda
                       ((g$t$21473$f3xia)
                        (if g$t$21473$f3xia
                          (cdr g$t$21473$f3xia)
                          ((case-lambda (() (begin '#f '#f)))))))
                     (if g$cv$21472$f3xia
                       (begin
                         '#f
                         (g$assp$15537$f3xia
                           (case-lambda
                             ((g$m$21474$f3xia)
                              (g$same-marks?$20811$f3xia
                                g$mark*$21470$f3xia
                                g$m$21474$f3xia)))
                           g$cv$21472$f3xia))
                       '#f))))
                 (g$hashtable-ref$16115$f3xia
                   g$ht$21471$f3xia
                   g$sym$21469$f3xia
                   '#f)))
              '#f)))
         (g$rib-cache$20761$f3xia g$rib$21468$f3xia)))))
   (g$extend-rib!$20770$f3xia
     g$extend-rib!$24782$f3xia
     (case-lambda
       ((g$rib$21475$f3xia
          g$id$21476$f3xia
          g$label$21477$f3xia
          g$sd?$21478$f3xia)
        (letrec* ((g$find$21479$f3xia
                    (case-lambda
                      ((g$sym$21488$f3xia
                         g$mark*$21489$f3xia
                         g$sym*$21490$f3xia
                         g$mark**$21491$f3xia
                         g$label*$21492$f3xia)
                       (if (pair? g$sym*$21490$f3xia)
                         (begin
                           '#f
                           (if (if (eq? g$sym$21488$f3xia
                                        (car g$sym*$21490$f3xia))
                                 (begin
                                   '#f
                                   (g$same-marks?$20811$f3xia
                                     g$mark*$21489$f3xia
                                     (car g$mark**$21491$f3xia)))
                                 '#f)
                             g$label*$21492$f3xia
                             (g$find$21479$f3xia
                               g$sym$21488$f3xia
                               g$mark*$21489$f3xia
                               (cdr g$sym*$21490$f3xia)
                               (cdr g$mark**$21491$f3xia)
                               (cdr g$label*$21492$f3xia))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$20760$f3xia g$rib$21475$f3xia)
              (g$assertion-violation$12459$f3xia
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$21475$f3xia)
              (void))
            ((case-lambda
               ((g$sym$21480$f3xia g$mark*$21481$f3xia)
                ((case-lambda
                   ((g$sym*$21482$f3xia)
                    ((case-lambda
                       ((g$t$21483$f3xia)
                        (if g$t$21483$f3xia
                          ((case-lambda
                             ((g$p$21484$f3xia)
                              (if (not (eq? g$label$21477$f3xia
                                            g$p$21484$f3xia))
                                (g$syntax-violation$21427$f3xia
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$21476$f3xia)
                                (void))))
                           g$t$21483$f3xia)
                          ((case-lambda
                             ((g$t$21485$f3xia)
                              (if g$t$21485$f3xia
                                ((case-lambda
                                   ((g$p$21486$f3xia)
                                    (if (not (eq? g$label$21477$f3xia
                                                  (car g$p$21486$f3xia)))
                                      (if (not g$sd?$21478$f3xia)
                                        (g$set-car!$17078$f3xia
                                          g$p$21486$f3xia
                                          g$label$21477$f3xia)
                                        ((case-lambda
                                           (()
                                            (begin
                                              '#f
                                              (g$syntax-violation$21427$f3xia
                                                '#f
                                                '"multiple definitions of identifier"
                                                g$id$21476$f3xia))))))
                                      (void))))
                                 g$t$21485$f3xia)
                                ((case-lambda
                                   (()
                                    (begin
                                      '#f
                                      (if (g$rib-cache$20761$f3xia
                                            g$rib$21475$f3xia)
                                        (g$hashtable-update!$16119$f3xia
                                          (g$rib-cache$20761$f3xia
                                            g$rib$21475$f3xia)
                                          g$sym$21480$f3xia
                                          (case-lambda
                                            ((g$e$21487$f3xia)
                                             (cons
                                               (cons
                                                 g$mark*$21481$f3xia
                                                 g$label$21477$f3xia)
                                               g$e$21487$f3xia)))
                                          '())
                                        (void))
                                      (g$set-rib-sym*!$20762$f3xia
                                        g$rib$21475$f3xia
                                        (cons
                                          g$sym$21480$f3xia
                                          g$sym*$21482$f3xia))
                                      (g$set-rib-mark**!$20763$f3xia
                                        g$rib$21475$f3xia
                                        (cons
                                          g$mark*$21481$f3xia
                                          (g$rib-mark**$20758$f3xia
                                            g$rib$21475$f3xia)))
                                      (g$set-rib-label*!$20764$f3xia
                                        g$rib$21475$f3xia
                                        (cons
                                          g$label$21477$f3xia
                                          (g$rib-label*$20759$f3xia
                                            g$rib$21475$f3xia))))))))))
                           (if (g$memq$15538$f3xia
                                 g$sym$21480$f3xia
                                 (g$rib-sym*$20757$f3xia
                                   g$rib$21475$f3xia))
                             (begin
                               '#f
                               (g$find$21479$f3xia
                                 g$sym$21480$f3xia
                                 g$mark*$21481$f3xia
                                 g$sym*$21482$f3xia
                                 (g$rib-mark**$20758$f3xia
                                   g$rib$21475$f3xia)
                                 (g$rib-label*$20759$f3xia
                                   g$rib$21475$f3xia)))
                             '#f)))))
                     (g$find-label$20769$f3xia
                       g$rib$21475$f3xia
                       g$sym$21480$f3xia
                       g$mark*$21481$f3xia))))
                 (g$rib-sym*$20757$f3xia g$rib$21475$f3xia))))
             (g$id->sym$20810$f3xia g$id$21476$f3xia)
             (g$stx-mark*$20784$f3xia g$id$21476$f3xia)))))))
   (g$extend-rib/nc!$20771$f3xia
     g$extend-rib/nc!$24783$f3xia
     (case-lambda
       ((g$rib$21493$f3xia g$id$21494$f3xia g$label$21495$f3xia)
        ((case-lambda
           ((g$sym$21496$f3xia g$mark*$21497$f3xia)
            ((case-lambda
               ((g$sym*$21498$f3xia)
                (begin
                  (if (g$rib-cache$20761$f3xia g$rib$21493$f3xia)
                    (g$hashtable-update!$16119$f3xia
                      (g$rib-cache$20761$f3xia g$rib$21493$f3xia)
                      g$sym$21496$f3xia
                      (case-lambda
                        ((g$e$21499$f3xia)
                         (cons
                           (cons
                             g$mark*$21497$f3xia
                             g$label$21495$f3xia)
                           g$e$21499$f3xia)))
                      '())
                    (void))
                  (g$set-rib-sym*!$20762$f3xia
                    g$rib$21493$f3xia
                    (cons g$sym$21496$f3xia g$sym*$21498$f3xia))
                  (g$set-rib-mark**!$20763$f3xia
                    g$rib$21493$f3xia
                    (cons
                      g$mark*$21497$f3xia
                      (g$rib-mark**$20758$f3xia g$rib$21493$f3xia)))
                  (g$set-rib-label*!$20764$f3xia
                    g$rib$21493$f3xia
                    (cons
                      g$label$21495$f3xia
                      (g$rib-label*$20759$f3xia g$rib$21493$f3xia))))))
             (g$rib-sym*$20757$f3xia g$rib$21493$f3xia))))
         (g$id->sym$20810$f3xia g$id$21494$f3xia)
         (g$stx-mark*$20784$f3xia g$id$21494$f3xia)))))
   (g$make-rib-map$20772$f3xia
     g$make-rib-map$24784$f3xia
     (case-lambda
       ((g$sym*$21500$f3xia)
        ((case-lambda
           ((g$ht$21501$f3xia)
            ((letrec ((g$f$21502$f3xia
                        (case-lambda
                          ((g$i$21503$f3xia g$sym*$21504$f3xia)
                           (if (null? g$sym*$21504$f3xia)
                             g$ht$21501$f3xia
                             (begin
                               (g$hashtable-update!$16119$f3xia
                                 g$ht$21501$f3xia
                                 (car g$sym*$21504$f3xia)
                                 (case-lambda
                                   ((g$x$21505$f3xia)
                                    (cons
                                      g$i$21503$f3xia
                                      g$x$21505$f3xia)))
                                 '())
                               (g$f$21502$f3xia
                                 (+ g$i$21503$f3xia '1)
                                 (cdr g$sym*$21504$f3xia))))))))
               g$f$21502$f3xia)
             '0
             g$sym*$21500$f3xia)))
         (g$make-eq-hashtable$16112$f3xia)))))
   (g$seal-rib!$20773$f3xia
     g$seal-rib!$24785$f3xia
     (case-lambda
       ((g$rib$21506$f3xia)
        ((case-lambda
           ((g$sym*$21507$f3xia)
            (if (not (null? g$sym*$21507$f3xia))
              (begin
                (g$set-rib-sym*!$20762$f3xia
                  g$rib$21506$f3xia
                  (g$list->vector$16003$f3xia g$sym*$21507$f3xia))
                (g$set-rib-mark**!$20763$f3xia
                  g$rib$21506$f3xia
                  (g$list->vector$16003$f3xia
                    (g$rib-mark**$20758$f3xia g$rib$21506$f3xia)))
                (g$set-rib-label*!$20764$f3xia
                  g$rib$21506$f3xia
                  (g$list->vector$16003$f3xia
                    (g$rib-label*$20759$f3xia g$rib$21506$f3xia)))
                (g$set-rib-sealed/freq!$20765$f3xia
                  g$rib$21506$f3xia
                  (g$make-rib-map$20772$f3xia g$sym*$21507$f3xia)))
              (void))))
         (g$rib-sym*$20757$f3xia g$rib$21506$f3xia)))))
   (g$unseal-rib!$20774$f3xia
     g$unseal-rib!$24786$f3xia
     (case-lambda
       ((g$rib$21508$f3xia)
        (if (g$rib-sealed/freq$20760$f3xia g$rib$21508$f3xia)
          (begin
            (g$set-rib-sealed/freq!$20765$f3xia g$rib$21508$f3xia '#f)
            (g$set-rib-sym*!$20762$f3xia
              g$rib$21508$f3xia
              (g$vector->list$16010$f3xia
                (g$rib-sym*$20757$f3xia g$rib$21508$f3xia)))
            (g$set-rib-mark**!$20763$f3xia
              g$rib$21508$f3xia
              (g$vector->list$16010$f3xia
                (g$rib-mark**$20758$f3xia g$rib$21508$f3xia)))
            (g$set-rib-label*!$20764$f3xia
              g$rib$21508$f3xia
              (g$vector->list$16010$f3xia
                (g$rib-label*$20759$f3xia g$rib$21508$f3xia))))
          (void)))))
   (g$make-full-rib$20775$f3xia
     g$make-full-rib$24787$f3xia
     (case-lambda
       ((g$id*$21509$f3xia g$label*$21510$f3xia)
        ((case-lambda
           ((g$r$21511$f3xia)
            (begin
              (g$seal-rib!$20773$f3xia g$r$21511$f3xia)
              g$r$21511$f3xia)))
         (g$make-rib$20756$f3xia
           (g$map$15550$f3xia g$id->sym$20810$f3xia g$id*$21509$f3xia)
           (g$map$15550$f3xia g$stx-mark*$20784$f3xia g$id*$21509$f3xia)
           g$label*$21510$f3xia
           '#f
           '#f)))))
   (g$10235$20776$f3xia
     g$10235$24788$f3xia
     (make-record-type-descriptor
       'stx
       '#f
       'g$10238$f3xia
       '#t
       '#t
       '#((mutable expr)
          (mutable mark*)
          (mutable subst*)
          (mutable ae*))))
   (g$10237$20777$f3xia g$10237$24789$f3xia '#f)
   (g$10236$20778$f3xia
     g$10236$24790$f3xia
     (make-record-constructor-descriptor
       g$10235$20776$f3xia
       '#f
       g$10237$20777$f3xia))
   (g$stx?$20781$f3xia
     g$stx?$24791$f3xia
     (record-predicate g$10235$20776$f3xia))
   (g$make-stx$20782$f3xia
     g$make-stx$24792$f3xia
     (record-constructor g$10236$20778$f3xia))
   (g$stx-expr$20783$f3xia
     g$stx-expr$24793$f3xia
     (record-accessor g$10235$20776$f3xia '0))
   (g$stx-mark*$20784$f3xia
     g$stx-mark*$24794$f3xia
     (record-accessor g$10235$20776$f3xia '1))
   (g$stx-subst*$20785$f3xia
     g$stx-subst*$24795$f3xia
     (record-accessor g$10235$20776$f3xia '2))
   (g$stx-ae*$20786$f3xia
     g$stx-ae*$24796$f3xia
     (record-accessor g$10235$20776$f3xia '3))
   (g$set-stx-expr!$20787$f3xia
     g$set-stx-expr!$24797$f3xia
     (record-mutator g$10235$20776$f3xia '0))
   (g$set-stx-mark*!$20788$f3xia
     g$set-stx-mark*!$24798$f3xia
     (record-mutator g$10235$20776$f3xia '1))
   (g$set-stx-subst*!$20789$f3xia
     g$set-stx-subst*!$24799$f3xia
     (record-mutator g$10235$20776$f3xia '2))
   (g$set-stx-ae*!$20790$f3xia
     g$set-stx-ae*!$24800$f3xia
     (record-mutator g$10235$20776$f3xia '3))
   (g$rp$20791$f3xia
     g$rp$24801$f3xia
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$21512$f3xia g$p$21513$f3xia g$wr$21514$f3xia)
          (begin
            (display '"#<syntax " g$p$21513$f3xia)
            (write
              (g$stx->datum$20820$f3xia g$x$21512$f3xia)
              g$p$21513$f3xia)
            ((case-lambda
               ((g$expr$21515$f3xia)
                (if (annotation? g$expr$21515$f3xia)
                  ((case-lambda
                     ((g$src$21516$f3xia)
                      (if (pair? g$src$21516$f3xia)
                        (begin
                          (display '" (" g$p$21513$f3xia)
                          (display
                            (cdr g$src$21516$f3xia)
                            g$p$21513$f3xia)
                          (display '" of " g$p$21513$f3xia)
                          (display
                            (car g$src$21516$f3xia)
                            g$p$21513$f3xia)
                          (display '")" g$p$21513$f3xia))
                        (void))))
                   (annotation-source g$expr$21515$f3xia))
                  (void))))
             (g$stx-expr$20783$f3xia g$x$21512$f3xia))
            (display '">" g$p$21513$f3xia))))))
   (g$datum->stx$20792$f3xia
     g$datum->stx$24802$f3xia
     (case-lambda
       ((g$id$21517$f3xia g$datum$21518$f3xia)
        (g$make-stx$20782$f3xia
          g$datum$21518$f3xia
          (g$stx-mark*$20784$f3xia g$id$21517$f3xia)
          (g$stx-subst*$20785$f3xia g$id$21517$f3xia)
          (g$stx-ae*$20786$f3xia g$id$21517$f3xia)))))
   (g$gen-mark$20793$f3xia
     g$gen-mark$24803$f3xia
     (case-lambda (() (g$string$15990$f3xia '#\m))))
   (g$anti-mark$20794$f3xia g$anti-mark$24804$f3xia '#f)
   (g$anti-mark?$20795$f3xia g$anti-mark?$24805$f3xia not)
   (g$join-wraps$20796$f3xia
     g$join-wraps$24806$f3xia
     (case-lambda
       ((g$m1*$21519$f3xia
          g$s1*$21520$f3xia
          g$ae1*$21521$f3xia
          g$e$21522$f3xia)
        (letrec* ((g$cancel$21523$f3xia
                    (case-lambda
                      ((g$ls1$21527$f3xia g$ls2$21528$f3xia)
                       ((letrec ((g$f$21529$f3xia
                                   (case-lambda
                                     ((g$x$21530$f3xia
                                        g$ls1$21531$f3xia)
                                      (if (null? g$ls1$21531$f3xia)
                                        (cdr g$ls2$21528$f3xia)
                                        (cons
                                          g$x$21530$f3xia
                                          (g$f$21529$f3xia
                                            (car g$ls1$21531$f3xia)
                                            (cdr g$ls1$21531$f3xia))))))))
                          g$f$21529$f3xia)
                        (car g$ls1$21527$f3xia)
                        (cdr g$ls1$21527$f3xia))))))
          ((case-lambda
             ((g$m2*$21524$f3xia g$s2*$21525$f3xia g$ae2*$21526$f3xia)
              (if (if (not (null? g$m1*$21519$f3xia))
                    (if (not (null? g$m2*$21524$f3xia))
                      (begin
                        '#f
                        (g$anti-mark?$20795$f3xia
                          (car g$m2*$21524$f3xia)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$21523$f3xia
                    g$m1*$21519$f3xia
                    g$m2*$21524$f3xia)
                  (g$cancel$21523$f3xia
                    g$s1*$21520$f3xia
                    g$s2*$21525$f3xia)
                  (g$cancel$21523$f3xia
                    g$ae1*$21521$f3xia
                    g$ae2*$21526$f3xia))
                (values
                  (g$append$15556$f3xia
                    g$m1*$21519$f3xia
                    g$m2*$21524$f3xia)
                  (g$append$15556$f3xia
                    g$s1*$21520$f3xia
                    g$s2*$21525$f3xia)
                  (g$append$15556$f3xia
                    g$ae1*$21521$f3xia
                    g$ae2*$21526$f3xia)))))
           (g$stx-mark*$20784$f3xia g$e$21522$f3xia)
           (g$stx-subst*$20785$f3xia g$e$21522$f3xia)
           (g$stx-ae*$20786$f3xia g$e$21522$f3xia))))))
   (g$mkstx$20797$f3xia
     g$mkstx$24807$f3xia
     (case-lambda
       ((g$e$21532$f3xia
          g$m*$21533$f3xia
          g$s*$21534$f3xia
          g$ae*$21535$f3xia)
        (if (if (g$stx?$20781$f3xia g$e$21532$f3xia)
              (begin
                '#f
                (not (g$top-marked?$20743$f3xia g$m*$21533$f3xia)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$20796$f3xia
                 g$m*$21533$f3xia
                 g$s*$21534$f3xia
                 g$ae*$21535$f3xia
                 g$e$21532$f3xia)))
            (case-lambda
              ((g$m*$21539$f3xia g$s*$21540$f3xia g$ae*$21541$f3xia)
               ((case-lambda
                  ((g$ae*$21542$f3xia g$s*$21543$f3xia g$m*$21544$f3xia)
                   (g$make-stx$20782$f3xia
                     (g$stx-expr$20783$f3xia g$e$21532$f3xia)
                     g$m*$21544$f3xia
                     g$s*$21543$f3xia
                     g$ae*$21542$f3xia)))
                g$ae*$21541$f3xia
                g$s*$21540$f3xia
                g$m*$21539$f3xia))))
          (g$make-stx$20782$f3xia
            g$e$21532$f3xia
            g$m*$21533$f3xia
            g$s*$21534$f3xia
            g$ae*$21535$f3xia)))))
   (g$add-mark$20798$f3xia
     g$add-mark$24808$f3xia
     (case-lambda
       ((g$m$21545$f3xia g$e$21546$f3xia g$ae$21547$f3xia)
        (g$mkstx$20797$f3xia
          g$e$21546$f3xia
          (list g$m$21545$f3xia)
          '(shift)
          (list g$ae$21547$f3xia)))))
   (g$add-subst$20799$f3xia
     g$add-subst$24809$f3xia
     (case-lambda
       ((g$subst$21548$f3xia g$e$21549$f3xia)
        (g$mkstx$20797$f3xia
          g$e$21549$f3xia
          '()
          (list g$subst$21548$f3xia)
          '()))))
   (g$syntax-kind?$20800$f3xia
     g$syntax-kind?$24810$f3xia
     (case-lambda
       ((g$x$21550$f3xia g$p?$21551$f3xia)
        (if (g$stx?$20781$f3xia g$x$21550$f3xia)
          (g$syntax-kind?$20800$f3xia
            (g$stx-expr$20783$f3xia g$x$21550$f3xia)
            g$p?$21551$f3xia)
          (if (annotation? g$x$21550$f3xia)
            (g$syntax-kind?$20800$f3xia
              (annotation-expression g$x$21550$f3xia)
              g$p?$21551$f3xia)
            ((case-lambda
               (()
                (begin '#f (g$p?$21551$f3xia g$x$21550$f3xia))))))))))
   (g$syntax-vector->list$20801$f3xia
     g$syntax-vector->list$24811$f3xia
     (case-lambda
       ((g$x$21552$f3xia)
        (if (g$stx?$20781$f3xia g$x$21552$f3xia)
          ((case-lambda
             ((g$ls$21553$f3xia
                g$m*$21554$f3xia
                g$s*$21555$f3xia
                g$ae*$21556$f3xia)
              (g$map$15550$f3xia
                (case-lambda
                  ((g$x$21557$f3xia)
                   (g$mkstx$20797$f3xia
                     g$x$21557$f3xia
                     g$m*$21554$f3xia
                     g$s*$21555$f3xia
                     g$ae*$21556$f3xia)))
                g$ls$21553$f3xia)))
           (g$syntax-vector->list$20801$f3xia
             (g$stx-expr$20783$f3xia g$x$21552$f3xia))
           (g$stx-mark*$20784$f3xia g$x$21552$f3xia)
           (g$stx-subst*$20785$f3xia g$x$21552$f3xia)
           (g$stx-ae*$20786$f3xia g$x$21552$f3xia))
          (if (annotation? g$x$21552$f3xia)
            (g$syntax-vector->list$20801$f3xia
              (annotation-expression g$x$21552$f3xia))
            (if (g$vector?$15974$f3xia g$x$21552$f3xia)
              (g$vector->list$16010$f3xia g$x$21552$f3xia)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'syntax-vector->list
                      '"BUG: not a syntax vector"
                      g$x$21552$f3xia)))))))))))
   (g$syntax-pair?$20802$f3xia
     g$syntax-pair?$24812$f3xia
     (case-lambda
       ((g$x$21558$f3xia)
        (g$syntax-kind?$20800$f3xia g$x$21558$f3xia pair?))))
   (g$syntax-vector?$20803$f3xia
     g$syntax-vector?$24813$f3xia
     (case-lambda
       ((g$x$21559$f3xia)
        (g$syntax-kind?$20800$f3xia
          g$x$21559$f3xia
          g$vector?$15974$f3xia))))
   (g$syntax-null?$20804$f3xia
     g$syntax-null?$24814$f3xia
     (case-lambda
       ((g$x$21560$f3xia)
        (g$syntax-kind?$20800$f3xia g$x$21560$f3xia null?))))
   (g$syntax-list?$20805$f3xia
     g$syntax-list?$24815$f3xia
     (case-lambda
       ((g$x$21561$f3xia)
        ((case-lambda
           ((g$t$21562$f3xia)
            (if g$t$21562$f3xia
              g$t$21562$f3xia
              (begin
                '#f
                (if (g$syntax-pair?$20802$f3xia g$x$21561$f3xia)
                  (begin
                    '#f
                    (g$syntax-list?$20805$f3xia
                      (g$syntax-cdr$20807$f3xia g$x$21561$f3xia)))
                  '#f)))))
         (g$syntax-null?$20804$f3xia g$x$21561$f3xia)))))
   (g$syntax-car$20806$f3xia
     g$syntax-car$24816$f3xia
     (case-lambda
       ((g$x$21563$f3xia)
        (if (g$stx?$20781$f3xia g$x$21563$f3xia)
          (g$mkstx$20797$f3xia
            (g$syntax-car$20806$f3xia
              (g$stx-expr$20783$f3xia g$x$21563$f3xia))
            (g$stx-mark*$20784$f3xia g$x$21563$f3xia)
            (g$stx-subst*$20785$f3xia g$x$21563$f3xia)
            (g$stx-ae*$20786$f3xia g$x$21563$f3xia))
          (if (annotation? g$x$21563$f3xia)
            (g$syntax-car$20806$f3xia
              (annotation-expression g$x$21563$f3xia))
            (if (pair? g$x$21563$f3xia)
              (car g$x$21563$f3xia)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'syntax-car
                      '"BUG: not a pair"
                      g$x$21563$f3xia)))))))))))
   (g$syntax-cdr$20807$f3xia
     g$syntax-cdr$24817$f3xia
     (case-lambda
       ((g$x$21564$f3xia)
        (if (g$stx?$20781$f3xia g$x$21564$f3xia)
          (g$mkstx$20797$f3xia
            (g$syntax-cdr$20807$f3xia
              (g$stx-expr$20783$f3xia g$x$21564$f3xia))
            (g$stx-mark*$20784$f3xia g$x$21564$f3xia)
            (g$stx-subst*$20785$f3xia g$x$21564$f3xia)
            (g$stx-ae*$20786$f3xia g$x$21564$f3xia))
          (if (annotation? g$x$21564$f3xia)
            (g$syntax-cdr$20807$f3xia
              (annotation-expression g$x$21564$f3xia))
            (if (pair? g$x$21564$f3xia)
              (cdr g$x$21564$f3xia)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$12459$f3xia
                      'syntax-cdr
                      '"BUG: not a pair"
                      g$x$21564$f3xia)))))))))))
   (g$syntax->list$20808$f3xia
     g$syntax->list$24818$f3xia
     (case-lambda
       ((g$x$21565$f3xia)
        (if (g$syntax-pair?$20802$f3xia g$x$21565$f3xia)
          (cons
            (g$syntax-car$20806$f3xia g$x$21565$f3xia)
            (g$syntax->list$20808$f3xia
              (g$syntax-cdr$20807$f3xia g$x$21565$f3xia)))
          (if (g$syntax-null?$20804$f3xia g$x$21565$f3xia)
            '()
            (g$assertion-violation$12459$f3xia
              'syntax->list
              '"BUG: invalid argument"
              g$x$21565$f3xia))))))
   (g$id?$20809$f3xia
     g$id?$24819$f3xia
     (case-lambda
       ((g$x$21566$f3xia)
        (if (g$stx?$20781$f3xia g$x$21566$f3xia)
          (begin
            '#f
            ((case-lambda
               ((g$expr$21567$f3xia)
                (g$symbol?$15976$f3xia
                  (if (annotation? g$expr$21567$f3xia)
                    (annotation-stripped g$expr$21567$f3xia)
                    g$expr$21567$f3xia))))
             (g$stx-expr$20783$f3xia g$x$21566$f3xia)))
          '#f))))
   (g$id->sym$20810$f3xia
     g$id->sym$24820$f3xia
     (case-lambda
       ((g$x$21568$f3xia)
        (begin
          (if (not (g$stx?$20781$f3xia g$x$21568$f3xia))
            (g$error$12460$f3xia
              'id->sym
              '"BUG in ikarus: not an id"
              g$x$21568$f3xia)
            (void))
          ((case-lambda
             ((g$expr$21569$f3xia)
              ((case-lambda
                 ((g$sym$21570$f3xia)
                  (if (g$symbol?$15976$f3xia g$sym$21570$f3xia)
                    g$sym$21570$f3xia
                    (g$error$12460$f3xia
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$21568$f3xia))))
               (if (annotation? g$expr$21569$f3xia)
                 (annotation-stripped g$expr$21569$f3xia)
                 g$expr$21569$f3xia))))
           (g$stx-expr$20783$f3xia g$x$21568$f3xia))))))
   (g$same-marks?$20811$f3xia
     g$same-marks?$24821$f3xia
     (case-lambda
       ((g$x$21571$f3xia g$y$21572$f3xia)
        ((case-lambda
           ((g$t$21573$f3xia)
            (if g$t$21573$f3xia
              g$t$21573$f3xia
              (begin
                '#f
                (if (pair? g$x$21571$f3xia)
                  (if (pair? g$y$21572$f3xia)
                    (if (eq? (car g$x$21571$f3xia)
                             (car g$y$21572$f3xia))
                      (begin
                        '#f
                        (g$same-marks?$20811$f3xia
                          (cdr g$x$21571$f3xia)
                          (cdr g$y$21572$f3xia)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$21571$f3xia)
           (begin '#f (null? g$y$21572$f3xia))
           '#f)))))
   (g$bound-id=?$20812$f3xia
     g$bound-id=?$24822$f3xia
     (case-lambda
       ((g$x$21574$f3xia g$y$21575$f3xia)
        (if (eq? (g$id->sym$20810$f3xia g$x$21574$f3xia)
                 (g$id->sym$20810$f3xia g$y$21575$f3xia))
          (begin
            '#f
            (g$same-marks?$20811$f3xia
              (g$stx-mark*$20784$f3xia g$x$21574$f3xia)
              (g$stx-mark*$20784$f3xia g$y$21575$f3xia)))
          '#f))))
   (g$free-id=?$20813$f3xia
     g$free-id=?$24823$f3xia
     (case-lambda
       ((g$i$21576$f3xia g$j$21577$f3xia)
        ((case-lambda
           ((g$t0$21578$f3xia g$t1$21579$f3xia)
            (if ((case-lambda
                   ((g$t$21580$f3xia)
                    (if g$t$21580$f3xia
                      g$t$21580$f3xia
                      (begin '#f g$t1$21579$f3xia))))
                 g$t0$21578$f3xia)
              (eq? g$t0$21578$f3xia g$t1$21579$f3xia)
              (eq? (g$id->sym$20810$f3xia g$i$21576$f3xia)
                   (g$id->sym$20810$f3xia g$j$21577$f3xia)))))
         (g$id->real-label$20823$f3xia g$i$21576$f3xia)
         (g$id->real-label$20823$f3xia g$j$21577$f3xia)))))
   (g$valid-bound-ids?$20814$f3xia
     g$valid-bound-ids?$24824$f3xia
     (case-lambda
       ((g$id*$21581$f3xia)
        (if (g$for-all$15548$f3xia g$id?$20809$f3xia g$id*$21581$f3xia)
          (begin
            '#f
            (g$distinct-bound-ids?$20815$f3xia g$id*$21581$f3xia))
          '#f))))
   (g$distinct-bound-ids?$20815$f3xia
     g$distinct-bound-ids?$24825$f3xia
     (case-lambda
       ((g$id*$21582$f3xia)
        ((case-lambda
           ((g$t$21583$f3xia)
            (if g$t$21583$f3xia
              g$t$21583$f3xia
              (begin
                '#f
                (if (not (g$bound-id-member?$20816$f3xia
                           (car g$id*$21582$f3xia)
                           (cdr g$id*$21582$f3xia)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$20815$f3xia
                      (cdr g$id*$21582$f3xia)))
                  '#f)))))
         (null? g$id*$21582$f3xia)))))
   (g$bound-id-member?$20816$f3xia
     g$bound-id-member?$24826$f3xia
     (case-lambda
       ((g$id$21584$f3xia g$id*$21585$f3xia)
        (if (pair? g$id*$21585$f3xia)
          (begin
            '#f
            ((case-lambda
               ((g$t$21586$f3xia)
                (if g$t$21586$f3xia
                  g$t$21586$f3xia
                  (begin
                    '#f
                    (g$bound-id-member?$20816$f3xia
                      g$id$21584$f3xia
                      (cdr g$id*$21585$f3xia))))))
             (g$bound-id=?$20812$f3xia
               g$id$21584$f3xia
               (car g$id*$21585$f3xia))))
          '#f))))
   (g$self-evaluating?$20817$f3xia
     g$self-evaluating?$24827$f3xia
     (case-lambda
       ((g$x$21587$f3xia)
        ((case-lambda
           ((g$t$21588$f3xia)
            (if g$t$21588$f3xia
              g$t$21588$f3xia
              ((case-lambda
                 ((g$t$21589$f3xia)
                  (if g$t$21589$f3xia
                    g$t$21589$f3xia
                    ((case-lambda
                       ((g$t$21590$f3xia)
                        (if g$t$21590$f3xia
                          g$t$21590$f3xia
                          ((case-lambda
                             ((g$t$21591$f3xia)
                              (if g$t$21591$f3xia
                                g$t$21591$f3xia
                                (begin
                                  '#f
                                  (g$bytevector?$15975$f3xia
                                    g$x$21587$f3xia)))))
                           (g$boolean?$15977$f3xia g$x$21587$f3xia)))))
                     (g$char?$15973$f3xia g$x$21587$f3xia)))))
               (g$string?$15972$f3xia g$x$21587$f3xia)))))
         (g$number?$17016$f3xia g$x$21587$f3xia)))))
   (g$strip-annotations$20818$f3xia
     g$strip-annotations$24828$f3xia
     (case-lambda
       ((g$x$21592$f3xia)
        (if (pair? g$x$21592$f3xia)
          (cons
            (g$strip-annotations$20818$f3xia (car g$x$21592$f3xia))
            (g$strip-annotations$20818$f3xia (cdr g$x$21592$f3xia)))
          (if (g$vector?$15974$f3xia g$x$21592$f3xia)
            (g$vector-map$16063$f3xia
              g$strip-annotations$20818$f3xia
              g$x$21592$f3xia)
            (if (annotation? g$x$21592$f3xia)
              (annotation-stripped g$x$21592$f3xia)
              ((case-lambda (() (begin '#f g$x$21592$f3xia))))))))))
   (g$strip$20819$f3xia
     g$strip$24829$f3xia
     (case-lambda
       ((g$x$21593$f3xia g$m*$21594$f3xia)
        (if (g$top-marked?$20743$f3xia g$m*$21594$f3xia)
          (if ((case-lambda
                 ((g$t$21595$f3xia)
                  (if g$t$21595$f3xia
                    g$t$21595$f3xia
                    ((case-lambda
                       ((g$t$21596$f3xia)
                        (if g$t$21596$f3xia
                          g$t$21596$f3xia
                          (begin
                            '#f
                            (if (g$vector?$15974$f3xia g$x$21593$f3xia)
                              (if (g$>$17041$f3xia
                                    (g$vector-length$16008$f3xia
                                      g$x$21593$f3xia)
                                    '0)
                                (begin
                                  '#f
                                  (annotation?
                                    (g$vector-ref$16005$f3xia
                                      g$x$21593$f3xia
                                      '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$21593$f3xia)
                       (begin '#f (annotation? (car g$x$21593$f3xia)))
                       '#f)))))
               (annotation? g$x$21593$f3xia))
            (g$strip-annotations$20818$f3xia g$x$21593$f3xia)
            g$x$21593$f3xia)
          ((letrec ((g$f$21597$f3xia
                      (case-lambda
                        ((g$x$21598$f3xia)
                         (if (g$stx?$20781$f3xia g$x$21598$f3xia)
                           (g$strip$20819$f3xia
                             (g$stx-expr$20783$f3xia g$x$21598$f3xia)
                             (g$stx-mark*$20784$f3xia g$x$21598$f3xia))
                           (if (annotation? g$x$21598$f3xia)
                             (annotation-stripped g$x$21598$f3xia)
                             (if (pair? g$x$21598$f3xia)
                               ((case-lambda
                                  ((g$a$21599$f3xia g$d$21600$f3xia)
                                   (if (if (eq? g$a$21599$f3xia
                                                (car g$x$21598$f3xia))
                                         (begin
                                           '#f
                                           (eq? g$d$21600$f3xia
                                                (cdr g$x$21598$f3xia)))
                                         '#f)
                                     g$x$21598$f3xia
                                     (cons
                                       g$a$21599$f3xia
                                       g$d$21600$f3xia))))
                                (g$f$21597$f3xia (car g$x$21598$f3xia))
                                (g$f$21597$f3xia (cdr g$x$21598$f3xia)))
                               (if (g$vector?$15974$f3xia
                                     g$x$21598$f3xia)
                                 ((case-lambda
                                    ((g$old$21601$f3xia)
                                     ((case-lambda
                                        ((g$new$21602$f3xia)
                                         (if (g$for-all$15548$f3xia
                                               eq?
                                               g$old$21601$f3xia
                                               g$new$21602$f3xia)
                                           g$x$21598$f3xia
                                           (g$list->vector$16003$f3xia
                                             g$new$21602$f3xia))))
                                      (g$map$15550$f3xia
                                        g$f$21597$f3xia
                                        g$old$21601$f3xia))))
                                  (g$vector->list$16010$f3xia
                                    g$x$21598$f3xia))
                                 ((case-lambda
                                    (()
                                     (begin
                                       '#f
                                       g$x$21598$f3xia))))))))))))
             g$f$21597$f3xia)
           g$x$21593$f3xia)))))
   (g$stx->datum$20820$f3xia
     g$stx->datum$24830$f3xia
     (case-lambda
       ((g$x$21603$f3xia) (g$strip$20819$f3xia g$x$21603$f3xia '()))))
   (g$same-marks*?$20821$f3xia
     g$same-marks*?$24831$f3xia
     (case-lambda
       ((g$mark*$21604$f3xia g$mark**$21605$f3xia g$si$21606$f3xia)
        (if (null? g$si$21606$f3xia)
          '#f
          (if (g$same-marks?$20811$f3xia
                g$mark*$21604$f3xia
                (g$vector-ref$16005$f3xia
                  g$mark**$21605$f3xia
                  (car g$si$21606$f3xia)))
            (car g$si$21606$f3xia)
            (g$same-marks*?$20821$f3xia
              g$mark*$21604$f3xia
              g$mark**$21605$f3xia
              (cdr g$si$21606$f3xia)))))))
   (g$id->label$20822$f3xia
     g$id->label$24832$f3xia
     (case-lambda
       ((g$id$21607$f3xia)
        ((case-lambda
           ((g$t$21608$f3xia)
            (if g$t$21608$f3xia
              g$t$21608$f3xia
              (begin
                '#f
                ((case-lambda
                   ((g$t$21609$f3xia)
                    (if g$t$21609$f3xia
                      ((case-lambda
                         ((g$env$21610$f3xia)
                          ((case-lambda
                             ((g$rib$21611$f3xia)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$20748$f3xia
                                     g$id$21607$f3xia
                                     g$rib$21611$f3xia
                                     '#f)))
                                (case-lambda
                                  ((g$lab$21614$f3xia
                                     g$_loc$21615$f3xia)
                                   ((case-lambda
                                      ((g$_loc$21616$f3xia
                                         g$lab$21617$f3xia)
                                       (begin
                                         (g$extend-rib!$20770$f3xia
                                           g$rib$21611$f3xia
                                           g$id$21607$f3xia
                                           g$lab$21617$f3xia
                                           '#t)
                                         g$lab$21617$f3xia)))
                                    g$_loc$21615$f3xia
                                    g$lab$21614$f3xia))))))
                           (g$interaction-env-rib$21392$f3xia
                             g$env$21610$f3xia))))
                       g$t$21609$f3xia)
                      ((case-lambda (() (begin '#f '#f)))))))
                 (g$top-level-context$21435$f3xia))))))
         (g$id->real-label$20823$f3xia g$id$21607$f3xia)))))
   (g$id->real-label$20823$f3xia
     g$id->real-label$24833$f3xia
     (case-lambda
       ((g$id$21618$f3xia)
        ((case-lambda
           ((g$sym$21619$f3xia)
            ((letrec ((g$search$21620$f3xia
                        (case-lambda
                          ((g$subst*$21621$f3xia g$mark*$21622$f3xia)
                           (if (null? g$subst*$21621$f3xia)
                             '#f
                             (if (eq? (car g$subst*$21621$f3xia) 'shift)
                               (g$search$21620$f3xia
                                 (cdr g$subst*$21621$f3xia)
                                 (cdr g$mark*$21622$f3xia))
                               ((case-lambda
                                  (()
                                   (begin
                                     '#f
                                     ((case-lambda
                                        ((g$rib$21623$f3xia)
                                         ((case-lambda
                                            ((g$t$21624$f3xia)
                                             (if g$t$21624$f3xia
                                               ((case-lambda
                                                  ((g$ht$21625$f3xia)
                                                   ((case-lambda
                                                      ((g$si$21626$f3xia)
                                                       ((case-lambda
                                                          ((g$i$21627$f3xia)
                                                           (if g$i$21627$f3xia
                                                             (g$vector-ref$16005$f3xia
                                                               (g$rib-label*$20759$f3xia
                                                                 g$rib$21623$f3xia)
                                                               g$i$21627$f3xia)
                                                             (g$search$21620$f3xia
                                                               (cdr g$subst*$21621$f3xia)
                                                               g$mark*$21622$f3xia))))
                                                        (if g$si$21626$f3xia
                                                          (begin
                                                            '#f
                                                            (g$same-marks*?$20821$f3xia
                                                              g$mark*$21622$f3xia
                                                              (g$rib-mark**$20758$f3xia
                                                                g$rib$21623$f3xia)
                                                              (g$reverse$16012$f3xia
                                                                g$si$21626$f3xia)))
                                                          '#f))))
                                                    (g$hashtable-ref$16115$f3xia
                                                      g$ht$21625$f3xia
                                                      g$sym$21619$f3xia
                                                      '#f))))
                                                g$t$21624$f3xia)
                                               ((case-lambda
                                                  ((g$t$21628$f3xia)
                                                   (if g$t$21628$f3xia
                                                     g$t$21628$f3xia
                                                     (begin
                                                       '#f
                                                       ((case-lambda
                                                          (()
                                                           (begin
                                                             '#f
                                                             ((letrec ((g$f$21629$f3xia
                                                                         (case-lambda
                                                                           ((g$sym*$21630$f3xia
                                                                              g$mark**$21631$f3xia
                                                                              g$label*$21632$f3xia)
                                                                            (if (null?
                                                                                  g$sym*$21630$f3xia)
                                                                              (g$search$21620$f3xia
                                                                                (cdr g$subst*$21621$f3xia)
                                                                                g$mark*$21622$f3xia)
                                                                              (if (if (eq? (car g$sym*$21630$f3xia)
                                                                                           g$sym$21619$f3xia)
                                                                                    (begin
                                                                                      '#f
                                                                                      (g$same-marks?$20811$f3xia
                                                                                        (car g$mark**$21631$f3xia)
                                                                                        g$mark*$21622$f3xia))
                                                                                    '#f)
                                                                                (car g$label*$21632$f3xia)
                                                                                ((case-lambda
                                                                                   (()
                                                                                    (begin
                                                                                      '#f
                                                                                      (g$f$21629$f3xia
                                                                                        (cdr g$sym*$21630$f3xia)
                                                                                        (cdr g$mark**$21631$f3xia)
                                                                                        (cdr g$label*$21632$f3xia))))))))))))
                                                                g$f$21629$f3xia)
                                                              (g$rib-sym*$20757$f3xia
                                                                g$rib$21623$f3xia)
                                                              (g$rib-mark**$20758$f3xia
                                                                g$rib$21623$f3xia)
                                                              (g$rib-label*$20759$f3xia
                                                                g$rib$21623$f3xia))))))))))
                                                (g$find-label$20769$f3xia
                                                  g$rib$21623$f3xia
                                                  g$sym$21619$f3xia
                                                  g$mark*$21622$f3xia)))))
                                          (g$rib-sealed/freq$20760$f3xia
                                            g$rib$21623$f3xia))))
                                      (car g$subst*$21621$f3xia))))))))))))
               g$search$21620$f3xia)
             (g$stx-subst*$20785$f3xia g$id$21618$f3xia)
             (g$stx-mark*$20784$f3xia g$id$21618$f3xia))))
         (g$id->sym$20810$f3xia g$id$21618$f3xia)))))
   (g$label->binding$20824$f3xia
     g$label->binding$24834$f3xia
     (case-lambda
       ((g$x$21633$f3xia g$r$21634$f3xia)
        (if (not g$x$21633$f3xia)
          '(displaced-lexical)
          ((case-lambda
             ((g$t$21635$f3xia)
              (if g$t$21635$f3xia
                ((case-lambda
                   ((g$b$21636$f3xia)
                    (if (if (pair? g$b$21636$f3xia)
                          (begin
                            '#f
                            (eq? (car g$b$21636$f3xia) '$core-rtd))
                          '#f)
                      (cons
                        '$rtd
                        (g$map$15550$f3xia
                          g$bless$21270$f3xia
                          (cdr g$b$21636$f3xia)))
                      (if (if (pair? g$b$21636$f3xia)
                            (begin
                              '#f
                              (eq? (car g$b$21636$f3xia) 'global-rtd))
                            '#f)
                        ((case-lambda
                           ((g$lib$21637$f3xia g$loc$21638$f3xia)
                            (cons
                              '$rtd
                              (symbol-value g$loc$21638$f3xia))))
                         (g$cadr$16014$f3xia g$b$21636$f3xia)
                         (g$cddr$16016$f3xia g$b$21636$f3xia))
                        ((case-lambda
                           (() (begin '#f g$b$21636$f3xia))))))))
                 g$t$21635$f3xia)
                ((case-lambda
                   ((g$t$21639$f3xia)
                    (if g$t$21639$f3xia
                      (cdr g$t$21639$f3xia)
                      ((case-lambda
                         ((g$t$21640$f3xia)
                          (if g$t$21640$f3xia
                            ((case-lambda
                               ((g$env$21641$f3xia)
                                ((case-lambda
                                   ((g$t$21642$f3xia)
                                    (if g$t$21642$f3xia
                                      ((case-lambda
                                         ((g$p$21643$f3xia)
                                          (g$cons*$15552$f3xia
                                            'lexical
                                            (cdr g$p$21643$f3xia)
                                            '#f)))
                                       g$t$21642$f3xia)
                                      ((case-lambda
                                         (()
                                          (begin
                                            '#f
                                            '(displaced-lexical
                                               .
                                               #f))))))))
                                 (g$assq$15534$f3xia
                                   g$x$21633$f3xia
                                   (g$interaction-env-locs$21394$f3xia
                                     g$env$21641$f3xia)))))
                             g$t$21640$f3xia)
                            ((case-lambda
                               (()
                                (begin
                                  '#f
                                  '(displaced-lexical . #f))))))))
                       (g$top-level-context$21435$f3xia)))))
                 (g$assq$15534$f3xia
                   g$x$21633$f3xia
                   g$r$21634$f3xia)))))
           (g$imported-label->binding$20514$f3xia g$x$21633$f3xia))))))
   (g$make-binding$20825$f3xia g$make-binding$24835$f3xia cons)
   (g$binding-type$20826$f3xia g$binding-type$24836$f3xia car)
   (g$binding-value$20827$f3xia g$binding-value$24837$f3xia cdr)
   (g$raise-unbound-error$20828$f3xia
     g$raise-unbound-error$24838$f3xia
     (case-lambda
       ((g$id$21644$f3xia)
        (g$syntax-violation*$21426$f3xia
          '#f
          '"unbound identifier"
          g$id$21644$f3xia
          (g$make-undefined-violation$12327$f3xia)))))
   (g$syntax-type$20829$f3xia
     g$syntax-type$24839$f3xia
     (case-lambda
       ((g$e$21645$f3xia g$r$21646$f3xia)
        (if (g$id?$20809$f3xia g$e$21645$f3xia)
          ((case-lambda
             ((g$id$21647$f3xia)
              ((case-lambda
                 ((g$label$21648$f3xia)
                  ((case-lambda
                     ((g$b$21649$f3xia)
                      ((case-lambda
                         ((g$type$21650$f3xia)
                          (begin
                            (if (not g$label$21648$f3xia)
                              (g$raise-unbound-error$20828$f3xia
                                g$id$21647$f3xia)
                              (void))
                            ((case-lambda
                               ((g$t$21651$f3xia)
                                (if (g$memv$15539$f3xia
                                      g$t$21651$f3xia
                                      '(lexical
                                         core-prim
                                         macro
                                         macro!
                                         global
                                         local-macro
                                         local-macro!
                                         global-macro
                                         global-macro!
                                         displaced-lexical
                                         syntax
                                         import
                                         export
                                         $module
                                         $core-rtd
                                         library
                                         mutable
                                         ctv
                                         local-ctv
                                         global-ctv))
                                  (values
                                    g$type$21650$f3xia
                                    (g$binding-value$20827$f3xia
                                      g$b$21649$f3xia)
                                    g$id$21647$f3xia)
                                  ((case-lambda
                                     (()
                                      (begin
                                        '#f
                                        (values 'other '#f '#f))))))))
                             g$type$21650$f3xia))))
                       (g$binding-type$20826$f3xia g$b$21649$f3xia))))
                   (g$label->binding$20824$f3xia
                     g$label$21648$f3xia
                     g$r$21646$f3xia))))
               (g$id->label$20822$f3xia g$id$21647$f3xia))))
           g$e$21645$f3xia)
          (if (g$syntax-pair?$20802$f3xia g$e$21645$f3xia)
            ((case-lambda
               ((g$id$21652$f3xia)
                (if (g$id?$20809$f3xia g$id$21652$f3xia)
                  ((case-lambda
                     ((g$label$21653$f3xia)
                      ((case-lambda
                         ((g$b$21654$f3xia)
                          ((case-lambda
                             ((g$type$21655$f3xia)
                              (begin
                                (if (not g$label$21653$f3xia)
                                  (g$raise-unbound-error$20828$f3xia
                                    g$id$21652$f3xia)
                                  (void))
                                ((case-lambda
                                   ((g$t$21656$f3xia)
                                    (if (g$memv$15539$f3xia
                                          g$t$21656$f3xia
                                          '(define define-syntax
                                             core-macro
                                             begin
                                             macro
                                             macro!
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             module
                                             library
                                             set!
                                             let-syntax
                                             letrec-syntax
                                             import
                                             export
                                             $core-rtd
                                             ctv
                                             local-ctv
                                             global-ctv))
                                      (values
                                        g$type$21655$f3xia
                                        (g$binding-value$20827$f3xia
                                          g$b$21654$f3xia)
                                        g$id$21652$f3xia)
                                      ((case-lambda
                                         (()
                                          (begin
                                            '#f
                                            (values
                                              'call
                                              '#f
                                              '#f))))))))
                                 g$type$21655$f3xia))))
                           (g$binding-type$20826$f3xia
                             g$b$21654$f3xia))))
                       (g$label->binding$20824$f3xia
                         g$label$21653$f3xia
                         g$r$21646$f3xia))))
                   (g$id->label$20822$f3xia g$id$21652$f3xia))
                  (values 'call '#f '#f))))
             (g$syntax-car$20806$f3xia g$e$21645$f3xia))
            ((case-lambda
               (()
                (begin
                  '#f
                  ((case-lambda
                     ((g$d$21657$f3xia)
                      (if (g$self-evaluating?$20817$f3xia
                            g$d$21657$f3xia)
                        (values 'constant g$d$21657$f3xia '#f)
                        (values 'other '#f '#f))))
                   (g$stx->datum$20820$f3xia g$e$21645$f3xia)))))))))))
   (g$sanitize-binding$20852$f3xia
     g$sanitize-binding$24840$f3xia
     (case-lambda
       ((g$x$21658$f3xia g$src$21659$f3xia)
        (if (g$procedure?$15978$f3xia g$x$21658$f3xia)
          (g$cons*$15552$f3xia
            'local-macro
            g$x$21658$f3xia
            g$src$21659$f3xia)
          (if (if (pair? g$x$21658$f3xia)
                (if (eq? (car g$x$21658$f3xia) 'macro!)
                  (begin
                    '#f
                    (g$procedure?$15978$f3xia (cdr g$x$21658$f3xia)))
                  '#f)
                '#f)
            (g$cons*$15552$f3xia
              'local-macro!
              (cdr g$x$21658$f3xia)
              g$src$21659$f3xia)
            (if (if (pair? g$x$21658$f3xia)
                  (begin '#f (eq? (car g$x$21658$f3xia) '$rtd))
                  '#f)
              g$x$21658$f3xia
              (if (if (pair? g$x$21658$f3xia)
                    (begin '#f (eq? (car g$x$21658$f3xia) 'ctv))
                    '#f)
                (g$cons*$15552$f3xia
                  'local-ctv
                  (cdr g$x$21658$f3xia)
                  g$src$21659$f3xia)
                ((case-lambda
                   (()
                    (begin
                      '#f
                      (g$assertion-violation$12459$f3xia
                        'expand
                        '"invalid transformer"
                        g$x$21658$f3xia))))))))))))
   (g$make-variable-transformer$20853$f3xia
     g$make-variable-transformer$24841$f3xia
     (case-lambda
       ((g$x$21660$f3xia)
        (if (g$procedure?$15978$f3xia g$x$21660$f3xia)
          (cons 'macro! g$x$21660$f3xia)
          (g$assertion-violation$12459$f3xia
            'make-variable-transformer
            '"not a procedure"
            g$x$21660$f3xia)))))
   (g$make-compile-time-value$20854$f3xia
     g$make-compile-time-value$24842$f3xia
     (case-lambda ((g$x$21661$f3xia) (cons 'ctv g$x$21661$f3xia))))
   (g$variable-transformer?$20855$f3xia
     g$variable-transformer?$24843$f3xia
     (case-lambda
       ((g$x$21662$f3xia)
        (if (pair? g$x$21662$f3xia)
          (if (eq? (car g$x$21662$f3xia) 'macro!)
            (begin '#f (g$procedure?$15978$f3xia (cdr g$x$21662$f3xia)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$20856$f3xia
     g$variable-transformer-procedure$24844$f3xia
     (case-lambda
       ((g$x$21663$f3xia)
        (if (g$variable-transformer?$20855$f3xia g$x$21663$f3xia)
          (cdr g$x$21663$f3xia)
          (g$assertion-violation$12459$f3xia
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$21663$f3xia)))))
   (g$make-eval-transformer$20857$f3xia
     g$make-eval-transformer$24845$f3xia
     (case-lambda
       ((g$x$21664$f3xia)
        (g$sanitize-binding$20852$f3xia
          (eval-core (g$expanded->core$20247$f3xia g$x$21664$f3xia))
          g$x$21664$f3xia))))
   (g$parse-define$21247$f3xia
     g$parse-define$24846$f3xia
     (case-lambda
       ((g$x$21665$f3xia)
        ((case-lambda
           ((g$t$21666$f3xia)
            ((case-lambda
               ((g$ls/false$21667$f3xia)
                (if (if g$ls/false$21667$f3xia
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$21668$f3xia
                               g$fmls$21669$f3xia
                               g$b$21670$f3xia
                               g$b*$21671$f3xia)
                             (g$id?$20809$f3xia g$id$21668$f3xia)))
                          g$ls/false$21667$f3xia))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$21672$f3xia
                         g$fmls$21673$f3xia
                         g$b$21674$f3xia
                         g$b*$21675$f3xia)
                       (begin
                         (g$verify-formals$21327$f3xia
                           g$fmls$21673$f3xia
                           g$x$21665$f3xia)
                         (values
                           g$id$21672$f3xia
                           (cons 'defun g$x$21665$f3xia)))))
                    g$ls/false$21667$f3xia)
                  ((case-lambda
                     ((g$t$21676$f3xia)
                      ((case-lambda
                         ((g$ls/false$21677$f3xia)
                          (if (if g$ls/false$21677$f3xia
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$21678$f3xia
                                         g$val$21679$f3xia)
                                       (g$id?$20809$f3xia
                                         g$id$21678$f3xia)))
                                    g$ls/false$21677$f3xia))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$21680$f3xia g$val$21681$f3xia)
                                 (values
                                   g$id$21680$f3xia
                                   (cons 'expr g$val$21681$f3xia))))
                              g$ls/false$21677$f3xia)
                            ((case-lambda
                               ((g$t$21682$f3xia)
                                ((case-lambda
                                   ((g$ls/false$21683$f3xia)
                                    (if (if g$ls/false$21683$f3xia
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$21684$f3xia)
                                                 (g$id?$20809$f3xia
                                                   g$id$21684$f3xia)))
                                              g$ls/false$21683$f3xia))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$21685$f3xia)
                                           (values
                                             g$id$21685$f3xia
                                             (cons
                                               'expr
                                               (g$bless$21270$f3xia
                                                 '(void))))))
                                        g$ls/false$21683$f3xia)
                                      (g$syntax-violation$21427$f3xia
                                        '#f
                                        '"invalid syntax"
                                        g$t$21682$f3xia))))
                                 (g$syntax-dispatch$21307$f3xia
                                   g$t$21682$f3xia
                                   '(_ any)))))
                             g$t$21676$f3xia))))
                       (g$syntax-dispatch$21307$f3xia
                         g$t$21676$f3xia
                         '(_ any any)))))
                   g$t$21666$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$21666$f3xia
               '(_ (any . any) any . each-any)))))
         g$x$21665$f3xia))))
   (g$parse-define-syntax$21248$f3xia
     g$parse-define-syntax$24847$f3xia
     (case-lambda
       ((g$x$21686$f3xia)
        ((case-lambda
           ((g$t$21687$f3xia)
            ((case-lambda
               ((g$ls/false$21688$f3xia)
                (if (if g$ls/false$21688$f3xia
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$21689$f3xia g$val$21690$f3xia)
                             (g$id?$20809$f3xia g$id$21689$f3xia)))
                          g$ls/false$21688$f3xia))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$21691$f3xia g$val$21692$f3xia)
                       (values g$id$21691$f3xia g$val$21692$f3xia)))
                    g$ls/false$21688$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$21687$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$21687$f3xia
               '(_ any any)))))
         g$x$21686$f3xia))))
   (g$scheme-stx-hashtable$21249$f3xia
     g$scheme-stx-hashtable$24848$f3xia
     (g$make-eq-hashtable$16112$f3xia))
   (g$scheme-stx$21250$f3xia
     g$scheme-stx$24849$f3xia
     (case-lambda
       ((g$sym$21693$f3xia)
        ((case-lambda
           ((g$t$21694$f3xia)
            (if g$t$21694$f3xia
              g$t$21694$f3xia
              (begin
                '#f
                ((case-lambda
                   ((g$subst$21695$f3xia)
                    ((case-lambda
                       ((g$stx$21696$f3xia)
                        ((case-lambda
                           ((g$stx$21697$f3xia)
                            (begin
                              (g$hashtable-set!$16116$f3xia
                                g$scheme-stx-hashtable$21249$f3xia
                                g$sym$21693$f3xia
                                g$stx$21697$f3xia)
                              g$stx$21697$f3xia)))
                         ((case-lambda
                            ((g$t$21698$f3xia)
                             (if g$t$21698$f3xia
                               ((case-lambda
                                  ((g$x$21699$f3xia)
                                   ((case-lambda
                                      ((g$name$21700$f3xia
                                         g$label$21701$f3xia)
                                       (g$add-subst$20799$f3xia
                                         (g$make-rib$20756$f3xia
                                           (list g$name$21700$f3xia)
                                           (list
                                             g$top-mark*$20742$f3xia)
                                           (list g$label$21701$f3xia)
                                           '#f
                                           '#f)
                                         g$stx$21696$f3xia)))
                                    (car g$x$21699$f3xia)
                                    (cdr g$x$21699$f3xia))))
                                g$t$21698$f3xia)
                               ((case-lambda
                                  (()
                                   (begin '#f g$stx$21696$f3xia)))))))
                          (g$assq$15534$f3xia
                            g$sym$21693$f3xia
                            g$subst$21695$f3xia)))))
                     (g$make-stx$20782$f3xia
                       g$sym$21693$f3xia
                       g$top-mark*$20742$f3xia
                       '()
                       '()))))
                 (g$library-subst$20472$f3xia
                   (g$find-library-by-name$20508$f3xia
                     '(psyntax system $all))))))))
         (g$hashtable-ref$16115$f3xia
           g$scheme-stx-hashtable$21249$f3xia
           g$sym$21693$f3xia
           '#f)))))
   (g$lexical-var$21251$f3xia g$lexical-var$24850$f3xia car)
   (g$lexical-mutable?$21252$f3xia g$lexical-mutable?$24851$f3xia cdr)
   (g$set-lexical-mutable!$21253$f3xia
     g$set-lexical-mutable!$24852$f3xia
     g$set-cdr!$17079$f3xia)
   (g$add-lexical$21254$f3xia
     g$add-lexical$24853$f3xia
     (case-lambda
       ((g$lab$21702$f3xia g$lex$21703$f3xia g$r$21704$f3xia)
        (cons
          (g$cons*$15552$f3xia
            g$lab$21702$f3xia
            'lexical
            g$lex$21703$f3xia
            '#f)
          g$r$21704$f3xia))))
   (g$add-lexicals$21255$f3xia
     g$add-lexicals$24854$f3xia
     (case-lambda
       ((g$lab*$21705$f3xia g$lex*$21706$f3xia g$r$21707$f3xia)
        (if (null? g$lab*$21705$f3xia)
          g$r$21707$f3xia
          ((case-lambda
             (()
              (begin
                '#f
                (g$add-lexicals$21255$f3xia
                  (cdr g$lab*$21705$f3xia)
                  (cdr g$lex*$21706$f3xia)
                  (g$add-lexical$21254$f3xia
                    (car g$lab*$21705$f3xia)
                    (car g$lex*$21706$f3xia)
                    g$r$21707$f3xia))))))))))
   (g$letrec-helper$21256$f3xia
     g$letrec-helper$24855$f3xia
     (case-lambda
       ((g$e$21708$f3xia
          g$r$21709$f3xia
          g$mr$21710$f3xia
          g$build$21711$f3xia)
        ((case-lambda
           ((g$t$21712$f3xia)
            ((case-lambda
               ((g$ls/false$21713$f3xia)
                (if g$ls/false$21713$f3xia
                  (apply
                    (case-lambda
                      ((g$lhs*$21714$f3xia
                         g$rhs*$21715$f3xia
                         g$b$21716$f3xia
                         g$b*$21717$f3xia)
                       (if (not (g$valid-bound-ids?$20814$f3xia
                                  g$lhs*$21714$f3xia))
                         (g$invalid-fmls-error$21272$f3xia
                           g$e$21708$f3xia
                           g$lhs*$21714$f3xia)
                         ((case-lambda
                            ((g$lex*$21718$f3xia g$lab*$21719$f3xia)
                             ((case-lambda
                                ((g$rib$21720$f3xia g$r$21721$f3xia)
                                 ((case-lambda
                                    ((g$body$21722$f3xia
                                       g$rhs*$21723$f3xia)
                                     (g$build$21711$f3xia
                                       '#f
                                       g$lex*$21718$f3xia
                                       g$rhs*$21723$f3xia
                                       g$body$21722$f3xia)))
                                  (g$chi-internal$21336$f3xia
                                    (g$add-subst$20799$f3xia
                                      g$rib$21720$f3xia
                                      (cons
                                        g$b$21716$f3xia
                                        g$b*$21717$f3xia))
                                    g$r$21721$f3xia
                                    g$mr$21710$f3xia)
                                  (g$chi-expr*$21323$f3xia
                                    (g$map$15550$f3xia
                                      (case-lambda
                                        ((g$x$21724$f3xia)
                                         (g$add-subst$20799$f3xia
                                           g$rib$21720$f3xia
                                           g$x$21724$f3xia)))
                                      g$rhs*$21715$f3xia)
                                    g$r$21721$f3xia
                                    g$mr$21710$f3xia))))
                              (g$make-full-rib$20775$f3xia
                                g$lhs*$21714$f3xia
                                g$lab*$21719$f3xia)
                              (g$add-lexicals$21255$f3xia
                                g$lab*$21719$f3xia
                                g$lex*$21718$f3xia
                                g$r$21709$f3xia))))
                          (g$map$15550$f3xia
                            g$gen-lexical$20744$f3xia
                            g$lhs*$21714$f3xia)
                          (g$map$15550$f3xia
                            g$gen-label$20746$f3xia
                            g$lhs*$21714$f3xia)))))
                    g$ls/false$21713$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$21712$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$21712$f3xia
               '(_ #(each (any any)) any . each-any)))))
         g$e$21708$f3xia))))
   (g$letrec-transformer$21257$f3xia
     g$letrec-transformer$24856$f3xia
     (case-lambda
       ((g$e$21725$f3xia g$r$21726$f3xia g$mr$21727$f3xia)
        (g$letrec-helper$21256$f3xia
          g$e$21725$f3xia
          g$r$21726$f3xia
          g$mr$21727$f3xia
          g$build-letrec$20736$f3xia))))
   (g$letrec*-transformer$21258$f3xia
     g$letrec*-transformer$24857$f3xia
     (case-lambda
       ((g$e$21728$f3xia g$r$21729$f3xia g$mr$21730$f3xia)
        (g$letrec-helper$21256$f3xia
          g$e$21728$f3xia
          g$r$21729$f3xia
          g$mr$21730$f3xia
          g$build-letrec*$20737$f3xia))))
   (g$fluid-let-syntax-transformer$21259$f3xia
     g$fluid-let-syntax-transformer$24858$f3xia
     (case-lambda
       ((g$e$21731$f3xia g$r$21732$f3xia g$mr$21733$f3xia)
        (letrec* ((g$lookup$21734$f3xia
                    (case-lambda
                      ((g$x$21744$f3xia)
                       ((case-lambda
                          ((g$t$21745$f3xia)
                           (if g$t$21745$f3xia
                             g$t$21745$f3xia
                             (begin
                               '#f
                               (g$syntax-violation$21427$f3xia
                                 '#f
                                 '"unbound identifier"
                                 g$e$21731$f3xia
                                 g$x$21744$f3xia)))))
                        (g$id->label$20822$f3xia g$x$21744$f3xia))))))
          ((case-lambda
             ((g$t$21735$f3xia)
              ((case-lambda
                 ((g$ls/false$21736$f3xia)
                  (if g$ls/false$21736$f3xia
                    (apply
                      (case-lambda
                        ((g$lhs*$21737$f3xia
                           g$rhs*$21738$f3xia
                           g$b$21739$f3xia
                           g$b*$21740$f3xia)
                         (if (not (g$valid-bound-ids?$20814$f3xia
                                    g$lhs*$21737$f3xia))
                           (g$invalid-fmls-error$21272$f3xia
                             g$e$21731$f3xia
                             g$lhs*$21737$f3xia)
                           ((case-lambda
                              ((g$lab*$21741$f3xia g$rhs*$21742$f3xia)
                               (g$chi-internal$21336$f3xia
                                 (cons g$b$21739$f3xia g$b*$21740$f3xia)
                                 (g$append$15556$f3xia
                                   (g$map$15550$f3xia
                                     cons
                                     g$lab*$21741$f3xia
                                     g$rhs*$21742$f3xia)
                                   g$r$21732$f3xia)
                                 (g$append$15556$f3xia
                                   (g$map$15550$f3xia
                                     cons
                                     g$lab*$21741$f3xia
                                     g$rhs*$21742$f3xia)
                                   g$mr$21733$f3xia))))
                            (g$map$15550$f3xia
                              g$lookup$21734$f3xia
                              g$lhs*$21737$f3xia)
                            (g$map$15550$f3xia
                              (case-lambda
                                ((g$x$21743$f3xia)
                                 (g$make-eval-transformer$20857$f3xia
                                   (g$expand-transformer$21355$f3xia
                                     g$x$21743$f3xia
                                     g$mr$21733$f3xia))))
                              g$rhs*$21738$f3xia)))))
                      g$ls/false$21736$f3xia)
                    (g$syntax-violation$21427$f3xia
                      '#f
                      '"invalid syntax"
                      g$t$21735$f3xia))))
               (g$syntax-dispatch$21307$f3xia
                 g$t$21735$f3xia
                 '(_ #(each (any any)) any . each-any)))))
           g$e$21731$f3xia)))))
   (g$type-descriptor-transformer$21260$f3xia
     g$type-descriptor-transformer$24859$f3xia
     (case-lambda
       ((g$e$21746$f3xia g$r$21747$f3xia g$mr$21748$f3xia)
        ((case-lambda
           ((g$t$21749$f3xia)
            ((case-lambda
               ((g$ls/false$21750$f3xia)
                (if (if g$ls/false$21750$f3xia
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$21751$f3xia)
                             (g$id?$20809$f3xia g$id$21751$f3xia)))
                          g$ls/false$21750$f3xia))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$21752$f3xia)
                       ((case-lambda
                          ((g$lab$21753$f3xia)
                           ((case-lambda
                              ((g$b$21754$f3xia)
                               ((case-lambda
                                  ((g$type$21755$f3xia)
                                   (begin
                                     (if (not g$lab$21753$f3xia)
                                       (g$raise-unbound-error$20828$f3xia
                                         g$id$21752$f3xia)
                                       (void))
                                     (if (not (if (eq? g$type$21755$f3xia
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (not (g$list?$15545$f3xia
                                                         (g$binding-value$20827$f3xia
                                                           g$b$21754$f3xia))))
                                                '#f))
                                       (g$syntax-violation$21427$f3xia
                                         '#f
                                         '"not a record type"
                                         g$e$21746$f3xia)
                                       (void))
                                     (list
                                       'quote
                                       (g$binding-value$20827$f3xia
                                         g$b$21754$f3xia)))))
                                (g$binding-type$20826$f3xia
                                  g$b$21754$f3xia))))
                            (g$label->binding$20824$f3xia
                              g$lab$21753$f3xia
                              g$r$21747$f3xia))))
                        (g$id->label$20822$f3xia g$id$21752$f3xia))))
                    g$ls/false$21750$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$21749$f3xia))))
             (g$syntax-dispatch$21307$f3xia g$t$21749$f3xia '(_ any)))))
         g$e$21746$f3xia))))
   (g$record-type-descriptor-transformer$21261$f3xia
     g$record-type-descriptor-transformer$24860$f3xia
     (case-lambda
       ((g$e$21756$f3xia g$r$21757$f3xia g$mr$21758$f3xia)
        ((case-lambda
           ((g$t$21759$f3xia)
            ((case-lambda
               ((g$ls/false$21760$f3xia)
                (if (if g$ls/false$21760$f3xia
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$21761$f3xia)
                             (g$id?$20809$f3xia g$id$21761$f3xia)))
                          g$ls/false$21760$f3xia))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$21762$f3xia)
                       ((case-lambda
                          ((g$lab$21763$f3xia)
                           ((case-lambda
                              ((g$b$21764$f3xia)
                               ((case-lambda
                                  ((g$type$21765$f3xia)
                                   (begin
                                     (if (not g$lab$21763$f3xia)
                                       (g$raise-unbound-error$20828$f3xia
                                         g$id$21762$f3xia)
                                       (void))
                                     (if (not (if (eq? g$type$21765$f3xia
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (g$list?$15545$f3xia
                                                    (g$binding-value$20827$f3xia
                                                      g$b$21764$f3xia)))
                                                '#f))
                                       (g$syntax-violation$21427$f3xia
                                         '#f
                                         '"not a record type"
                                         g$e$21756$f3xia)
                                       (void))
                                     (g$chi-expr$21325$f3xia
                                       (car (g$binding-value$20827$f3xia
                                              g$b$21764$f3xia))
                                       g$r$21757$f3xia
                                       g$mr$21758$f3xia))))
                                (g$binding-type$20826$f3xia
                                  g$b$21764$f3xia))))
                            (g$label->binding$20824$f3xia
                              g$lab$21763$f3xia
                              g$r$21757$f3xia))))
                        (g$id->label$20822$f3xia g$id$21762$f3xia))))
                    g$ls/false$21760$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$21759$f3xia))))
             (g$syntax-dispatch$21307$f3xia g$t$21759$f3xia '(_ any)))))
         g$e$21756$f3xia))))
   (g$record-constructor-descriptor-transformer$21262$f3xia
     g$record-constructor-descriptor-transformer$24861$f3xia
     (case-lambda
       ((g$e$21766$f3xia g$r$21767$f3xia g$mr$21768$f3xia)
        ((case-lambda
           ((g$t$21769$f3xia)
            ((case-lambda
               ((g$ls/false$21770$f3xia)
                (if (if g$ls/false$21770$f3xia
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$21771$f3xia)
                             (g$id?$20809$f3xia g$id$21771$f3xia)))
                          g$ls/false$21770$f3xia))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$21772$f3xia)
                       ((case-lambda
                          ((g$lab$21773$f3xia)
                           ((case-lambda
                              ((g$b$21774$f3xia)
                               ((case-lambda
                                  ((g$type$21775$f3xia)
                                   (begin
                                     (if (not g$lab$21773$f3xia)
                                       (g$raise-unbound-error$20828$f3xia
                                         g$id$21772$f3xia)
                                       (void))
                                     (if (not (if (eq? g$type$21775$f3xia
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (g$list?$15545$f3xia
                                                    (g$binding-value$20827$f3xia
                                                      g$b$21774$f3xia)))
                                                '#f))
                                       (g$syntax-violation$21427$f3xia
                                         '#f
                                         '"invalid type"
                                         g$e$21766$f3xia)
                                       (void))
                                     (g$chi-expr$21325$f3xia
                                       (g$cadr$16014$f3xia
                                         (g$binding-value$20827$f3xia
                                           g$b$21774$f3xia))
                                       g$r$21767$f3xia
                                       g$mr$21768$f3xia))))
                                (g$binding-type$20826$f3xia
                                  g$b$21774$f3xia))))
                            (g$label->binding$20824$f3xia
                              g$lab$21773$f3xia
                              g$r$21767$f3xia))))
                        (g$id->label$20822$f3xia g$id$21772$f3xia))))
                    g$ls/false$21770$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$21769$f3xia))))
             (g$syntax-dispatch$21307$f3xia g$t$21769$f3xia '(_ any)))))
         g$e$21766$f3xia))))
   (g$when-macro$21263$f3xia
     g$when-macro$24862$f3xia
     (case-lambda
       ((g$e$21776$f3xia)
        ((case-lambda
           ((g$t$21777$f3xia)
            ((case-lambda
               ((g$ls/false$21778$f3xia)
                (if g$ls/false$21778$f3xia
                  (apply
                    (case-lambda
                      ((g$test$21779$f3xia
                         g$e$21780$f3xia
                         g$e*$21781$f3xia)
                       (g$bless$21270$f3xia
                         (list
                           'if
                           g$test$21779$f3xia
                           (cons
                             'begin
                             (cons
                               g$e$21780$f3xia
                               g$e*$21781$f3xia))))))
                    g$ls/false$21778$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$21777$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$21777$f3xia
               '(_ any any . each-any)))))
         g$e$21776$f3xia))))
   (g$unless-macro$21264$f3xia
     g$unless-macro$24863$f3xia
     (case-lambda
       ((g$e$21782$f3xia)
        ((case-lambda
           ((g$t$21783$f3xia)
            ((case-lambda
               ((g$ls/false$21784$f3xia)
                (if g$ls/false$21784$f3xia
                  (apply
                    (case-lambda
                      ((g$test$21785$f3xia
                         g$e$21786$f3xia
                         g$e*$21787$f3xia)
                       (g$bless$21270$f3xia
                         (list
                           'if
                           (list 'not g$test$21785$f3xia)
                           (cons
                             'begin
                             (cons
                               g$e$21786$f3xia
                               g$e*$21787$f3xia))))))
                    g$ls/false$21784$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$21783$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$21783$f3xia
               '(_ any any . each-any)))))
         g$e$21782$f3xia))))
   (g$if-transformer$21265$f3xia
     g$if-transformer$24864$f3xia
     (case-lambda
       ((g$e$21788$f3xia g$r$21789$f3xia g$mr$21790$f3xia)
        ((case-lambda
           ((g$t$21791$f3xia)
            ((case-lambda
               ((g$ls/false$21792$f3xia)
                (if g$ls/false$21792$f3xia
                  (apply
                    (case-lambda
                      ((g$e0$21793$f3xia
                         g$e1$21794$f3xia
                         g$e2$21795$f3xia)
                       (list
                         'if
                         (g$chi-expr$21325$f3xia
                           g$e0$21793$f3xia
                           g$r$21789$f3xia
                           g$mr$21790$f3xia)
                         (g$chi-expr$21325$f3xia
                           g$e1$21794$f3xia
                           g$r$21789$f3xia
                           g$mr$21790$f3xia)
                         (g$chi-expr$21325$f3xia
                           g$e2$21795$f3xia
                           g$r$21789$f3xia
                           g$mr$21790$f3xia))))
                    g$ls/false$21792$f3xia)
                  ((case-lambda
                     ((g$t$21796$f3xia)
                      ((case-lambda
                         ((g$ls/false$21797$f3xia)
                          (if g$ls/false$21797$f3xia
                            (apply
                              (case-lambda
                                ((g$e0$21798$f3xia g$e1$21799$f3xia)
                                 (list
                                   'if
                                   (g$chi-expr$21325$f3xia
                                     g$e0$21798$f3xia
                                     g$r$21789$f3xia
                                     g$mr$21790$f3xia)
                                   (g$chi-expr$21325$f3xia
                                     g$e1$21799$f3xia
                                     g$r$21789$f3xia
                                     g$mr$21790$f3xia)
                                   (g$build-void$20735$f3xia))))
                              g$ls/false$21797$f3xia)
                            (g$syntax-violation$21427$f3xia
                              '#f
                              '"invalid syntax"
                              g$t$21796$f3xia))))
                       (g$syntax-dispatch$21307$f3xia
                         g$t$21796$f3xia
                         '(_ any any)))))
                   g$t$21791$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$21791$f3xia
               '(_ any any any)))))
         g$e$21788$f3xia))))
   (g$case-macro$21266$f3xia
     g$case-macro$24865$f3xia
     (case-lambda
       ((g$e$21800$f3xia)
        (letrec* ((g$build-last$21801$f3xia
                    (case-lambda
                      ((g$cls$21821$f3xia)
                       ((case-lambda
                          ((g$t$21822$f3xia)
                           ((case-lambda
                              ((g$ls/false$21823$f3xia)
                               (if g$ls/false$21823$f3xia
                                 (apply
                                   (case-lambda
                                     ((g$e$21824$f3xia g$e*$21825$f3xia)
                                      (cons
                                        'let
                                        (cons
                                          '()
                                          (cons
                                            '#f
                                            (cons
                                              g$e$21824$f3xia
                                              g$e*$21825$f3xia))))))
                                   g$ls/false$21823$f3xia)
                                 ((case-lambda
                                    ((g$t$21826$f3xia)
                                     ((case-lambda
                                        ((g$ls/false$21827$f3xia)
                                         (if g$ls/false$21827$f3xia
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$21802$f3xia
                                                  g$cls$21821$f3xia
                                                  '(if #f #f))))
                                             g$ls/false$21827$f3xia)
                                           (g$syntax-violation$21427$f3xia
                                             '#f
                                             '"invalid syntax"
                                             g$t$21826$f3xia))))
                                      (g$syntax-dispatch$21307$f3xia
                                        g$t$21826$f3xia
                                        '_))))
                                  g$t$21822$f3xia))))
                            (g$syntax-dispatch$21307$f3xia
                              g$t$21822$f3xia
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$21821$f3xia))))
                  (g$build-one$21802$f3xia
                    (case-lambda
                      ((g$cls$21814$f3xia g$k$21815$f3xia)
                       ((case-lambda
                          ((g$t$21816$f3xia)
                           ((case-lambda
                              ((g$ls/false$21817$f3xia)
                               (if g$ls/false$21817$f3xia
                                 (apply
                                   (case-lambda
                                     ((g$d*$21818$f3xia
                                        g$e$21819$f3xia
                                        g$e*$21820$f3xia)
                                      (if (g$=$17038$f3xia
                                            '1
                                            (g$length$15547$f3xia
                                              g$d*$21818$f3xia))
                                        (list
                                          'if
                                          (list
                                            'eqv?
                                            't
                                            (list
                                              'quote
                                              (car g$d*$21818$f3xia)))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$21819$f3xia
                                              g$e*$21820$f3xia))
                                          g$k$21815$f3xia)
                                        (list
                                          'if
                                          (list
                                            'memv
                                            't
                                            (list
                                              'quote
                                              g$d*$21818$f3xia))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$21819$f3xia
                                              g$e*$21820$f3xia))
                                          g$k$21815$f3xia))))
                                   g$ls/false$21817$f3xia)
                                 (g$syntax-violation$21427$f3xia
                                   '#f
                                   '"invalid syntax"
                                   g$t$21816$f3xia))))
                            (g$syntax-dispatch$21307$f3xia
                              g$t$21816$f3xia
                              '(each-any any . each-any)))))
                        g$cls$21814$f3xia)))))
          ((case-lambda
             ((g$t$21803$f3xia)
              ((case-lambda
                 ((g$ls/false$21804$f3xia)
                  (if g$ls/false$21804$f3xia
                    (apply
                      (case-lambda
                        ((g$expr$21805$f3xia)
                         (g$bless$21270$f3xia
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$21805$f3xia))
                               '((if #f #f)))))))
                      g$ls/false$21804$f3xia)
                    ((case-lambda
                       ((g$t$21806$f3xia)
                        ((case-lambda
                           ((g$ls/false$21807$f3xia)
                            (if g$ls/false$21807$f3xia
                              (apply
                                (case-lambda
                                  ((g$expr$21808$f3xia
                                     g$cls$21809$f3xia
                                     g$cls*$21810$f3xia)
                                   (g$bless$21270$f3xia
                                     (list
                                       'let
                                       (list
                                         (list 't g$expr$21808$f3xia))
                                       ((letrec ((g$f$21811$f3xia
                                                   (case-lambda
                                                     ((g$cls$21812$f3xia
                                                        g$cls*$21813$f3xia)
                                                      (if (null?
                                                            g$cls*$21813$f3xia)
                                                        (g$build-last$21801$f3xia
                                                          g$cls$21812$f3xia)
                                                        (g$build-one$21802$f3xia
                                                          g$cls$21812$f3xia
                                                          (g$f$21811$f3xia
                                                            (car g$cls*$21813$f3xia)
                                                            (cdr g$cls*$21813$f3xia))))))))
                                          g$f$21811$f3xia)
                                        g$cls$21809$f3xia
                                        g$cls*$21810$f3xia)))))
                                g$ls/false$21807$f3xia)
                              (g$syntax-violation$21427$f3xia
                                '#f
                                '"invalid syntax"
                                g$t$21806$f3xia))))
                         (g$syntax-dispatch$21307$f3xia
                           g$t$21806$f3xia
                           '(_ any any . each-any)))))
                     g$t$21803$f3xia))))
               (g$syntax-dispatch$21307$f3xia
                 g$t$21803$f3xia
                 '(_ any)))))
           g$e$21800$f3xia)))))
   (g$quote-transformer$21267$f3xia
     g$quote-transformer$24866$f3xia
     (case-lambda
       ((g$e$21828$f3xia g$r$21829$f3xia g$mr$21830$f3xia)
        ((case-lambda
           ((g$t$21831$f3xia)
            ((case-lambda
               ((g$ls/false$21832$f3xia)
                (if g$ls/false$21832$f3xia
                  (apply
                    (case-lambda
                      ((g$datum$21833$f3xia)
                       (list
                         'quote
                         (g$stx->datum$20820$f3xia
                           g$datum$21833$f3xia))))
                    g$ls/false$21832$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$21831$f3xia))))
             (g$syntax-dispatch$21307$f3xia g$t$21831$f3xia '(_ any)))))
         g$e$21828$f3xia))))
   (g$case-lambda-transformer$21268$f3xia
     g$case-lambda-transformer$24867$f3xia
     (case-lambda
       ((g$e$21834$f3xia g$r$21835$f3xia g$mr$21836$f3xia)
        ((case-lambda
           ((g$t$21837$f3xia)
            ((case-lambda
               ((g$ls/false$21838$f3xia)
                (if g$ls/false$21838$f3xia
                  (apply
                    (case-lambda
                      ((g$fmls*$21839$f3xia
                         g$b*$21840$f3xia
                         g$b**$21841$f3xia)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$21329$f3xia
                              g$e$21834$f3xia
                              g$fmls*$21839$f3xia
                              (g$map$15550$f3xia
                                cons
                                g$b*$21840$f3xia
                                g$b**$21841$f3xia)
                              g$r$21835$f3xia
                              g$mr$21836$f3xia)))
                         (case-lambda
                           ((g$fmls*$21844$f3xia g$body*$21845$f3xia)
                            ((case-lambda
                               ((g$body*$21846$f3xia
                                  g$fmls*$21847$f3xia)
                                (g$build-case-lambda$20732$f3xia
                                  (g$syntax-annotation$21422$f3xia
                                    g$e$21834$f3xia)
                                  g$fmls*$21847$f3xia
                                  g$body*$21846$f3xia)))
                             g$body*$21845$f3xia
                             g$fmls*$21844$f3xia))))))
                    g$ls/false$21838$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$21837$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$21837$f3xia
               '(_ . #(each (any any . each-any)))))))
         g$e$21834$f3xia))))
   (g$lambda-transformer$21269$f3xia
     g$lambda-transformer$24868$f3xia
     (case-lambda
       ((g$e$21848$f3xia g$r$21849$f3xia g$mr$21850$f3xia)
        ((case-lambda
           ((g$t$21851$f3xia)
            ((case-lambda
               ((g$ls/false$21852$f3xia)
                (if g$ls/false$21852$f3xia
                  (apply
                    (case-lambda
                      ((g$fmls$21853$f3xia
                         g$b$21854$f3xia
                         g$b*$21855$f3xia)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$21328$f3xia
                              g$e$21848$f3xia
                              g$fmls$21853$f3xia
                              (cons g$b$21854$f3xia g$b*$21855$f3xia)
                              g$r$21849$f3xia
                              g$mr$21850$f3xia)))
                         (case-lambda
                           ((g$fmls$21858$f3xia g$body$21859$f3xia)
                            ((case-lambda
                               ((g$body$21860$f3xia g$fmls$21861$f3xia)
                                (g$build-lambda$20731$f3xia
                                  (g$syntax-annotation$21422$f3xia
                                    g$e$21848$f3xia)
                                  g$fmls$21861$f3xia
                                  g$body$21860$f3xia)))
                             g$body$21859$f3xia
                             g$fmls$21858$f3xia))))))
                    g$ls/false$21852$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$21851$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$21851$f3xia
               '(_ any any . each-any)))))
         g$e$21848$f3xia))))
   (g$bless$21270$f3xia
     g$bless$24869$f3xia
     (case-lambda
       ((g$x$21862$f3xia)
        (g$mkstx$20797$f3xia
          ((letrec ((g$f$21863$f3xia
                      (case-lambda
                        ((g$x$21864$f3xia)
                         (if (g$stx?$20781$f3xia g$x$21864$f3xia)
                           g$x$21864$f3xia
                           (if (pair? g$x$21864$f3xia)
                             (cons
                               (g$f$21863$f3xia (car g$x$21864$f3xia))
                               (g$f$21863$f3xia (cdr g$x$21864$f3xia)))
                             (if (g$symbol?$15976$f3xia g$x$21864$f3xia)
                               (g$scheme-stx$21250$f3xia
                                 g$x$21864$f3xia)
                               (if (g$vector?$15974$f3xia
                                     g$x$21864$f3xia)
                                 (g$vector-map$16063$f3xia
                                   g$f$21863$f3xia
                                   g$x$21864$f3xia)
                                 ((case-lambda
                                    (()
                                     (begin
                                       '#f
                                       g$x$21864$f3xia))))))))))))
             g$f$21863$f3xia)
           g$x$21862$f3xia)
          '()
          '()
          '()))))
   (g$with-syntax-macro$21271$f3xia
     g$with-syntax-macro$24870$f3xia
     (case-lambda
       ((g$e$21865$f3xia)
        ((case-lambda
           ((g$t$21866$f3xia)
            ((case-lambda
               ((g$ls/false$21867$f3xia)
                (if g$ls/false$21867$f3xia
                  (apply
                    (case-lambda
                      ((g$pat*$21868$f3xia
                         g$expr*$21869$f3xia
                         g$b$21870$f3xia
                         g$b*$21871$f3xia)
                       ((case-lambda
                          ((g$idn*$21872$f3xia)
                           (begin
                             (g$verify-formals$21327$f3xia
                               (g$map$15550$f3xia
                                 car
                                 g$idn*$21872$f3xia)
                               g$e$21865$f3xia)
                             ((case-lambda
                                ((g$t*$21873$f3xia)
                                 (g$bless$21270$f3xia
                                   (list
                                     'let
                                     (g$map$15550$f3xia
                                       list
                                       g$t*$21873$f3xia
                                       g$expr*$21869$f3xia)
                                     ((letrec ((g$f$21874$f3xia
                                                 (case-lambda
                                                   ((g$pat*$21875$f3xia
                                                      g$t*$21876$f3xia)
                                                    (if (null?
                                                          g$pat*$21875$f3xia)
                                                      (cons
                                                        'let
                                                        (cons
                                                          '()
                                                          (cons
                                                            g$b$21870$f3xia
                                                            g$b*$21871$f3xia)))
                                                      ((case-lambda
                                                         (()
                                                          (begin
                                                            '#f
                                                            (list
                                                              'syntax-case
                                                              (car g$t*$21876$f3xia)
                                                              '()
                                                              (list
                                                                (car g$pat*$21875$f3xia)
                                                                (g$f$21874$f3xia
                                                                  (cdr g$pat*$21875$f3xia)
                                                                  (cdr g$t*$21876$f3xia)))
                                                              (list
                                                                '_
                                                                (list
                                                                  'assertion-violation
                                                                  ''with-syntax
                                                                  '"pattern does not match value"
                                                                  (list
                                                                    'quote
                                                                    (car g$pat*$21875$f3xia))
                                                                  (car g$t*$21876$f3xia)))))))))))))
                                        g$f$21874$f3xia)
                                      g$pat*$21868$f3xia
                                      g$t*$21873$f3xia)))))
                              (g$generate-temporaries$21416$f3xia
                                g$expr*$21869$f3xia)))))
                        ((letrec ((g$f$21877$f3xia
                                    (case-lambda
                                      ((g$pat*$21878$f3xia)
                                       (if (null? g$pat*$21878$f3xia)
                                         '()
                                         ((case-lambda
                                            (()
                                             (begin
                                               '#f
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$convert-pattern$21306$f3xia
                                                      (car g$pat*$21878$f3xia)
                                                      '())))
                                                 (case-lambda
                                                   ((g$pat$21881$f3xia
                                                      g$idn*$21882$f3xia)
                                                    ((case-lambda
                                                       ((g$idn*$21883$f3xia
                                                          g$pat$21884$f3xia)
                                                        (g$append$15556$f3xia
                                                          g$idn*$21883$f3xia
                                                          (g$f$21877$f3xia
                                                            (cdr g$pat*$21878$f3xia)))))
                                                     g$idn*$21882$f3xia
                                                     g$pat$21881$f3xia)))))))))))))
                           g$f$21877$f3xia)
                         g$pat*$21868$f3xia))))
                    g$ls/false$21867$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$21866$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$21866$f3xia
               '(_ #(each (any any)) any . each-any)))))
         g$e$21865$f3xia))))
   (g$invalid-fmls-error$21272$f3xia
     g$invalid-fmls-error$24871$f3xia
     (case-lambda
       ((g$stx$21885$f3xia g$fmls$21886$f3xia)
        ((case-lambda
           ((g$t$21887$f3xia)
            ((case-lambda
               ((g$ls/false$21888$f3xia)
                (if g$ls/false$21888$f3xia
                  (apply
                    (case-lambda
                      ((g$id*$21889$f3xia g$last$21890$f3xia)
                       ((letrec ((g$f$21891$f3xia
                                   (case-lambda
                                     ((g$id*$21892$f3xia)
                                      (if (null? g$id*$21892$f3xia)
                                        (values)
                                        (if (not (g$id?$20809$f3xia
                                                   (car g$id*$21892$f3xia)))
                                          (g$syntax-violation$21427$f3xia
                                            '#f
                                            '"not an identifier"
                                            g$stx$21885$f3xia
                                            (car g$id*$21892$f3xia))
                                          ((case-lambda
                                             (()
                                              (begin
                                                '#f
                                                (g$f$21891$f3xia
                                                  (cdr g$id*$21892$f3xia))
                                                (if (g$bound-id-member?$20816$f3xia
                                                      (car g$id*$21892$f3xia)
                                                      (cdr g$id*$21892$f3xia))
                                                  (g$syntax-violation$21427$f3xia
                                                    '#f
                                                    '"duplicate binding"
                                                    g$stx$21885$f3xia
                                                    (car g$id*$21892$f3xia))
                                                  (void))))))))))))
                          g$f$21891$f3xia)
                        (if (g$id?$20809$f3xia g$last$21890$f3xia)
                          (cons g$last$21890$f3xia g$id*$21889$f3xia)
                          (if (g$syntax-null?$20804$f3xia
                                g$last$21890$f3xia)
                            g$id*$21889$f3xia
                            ((case-lambda
                               (()
                                (begin
                                  '#f
                                  (g$syntax-violation$21427$f3xia
                                    '#f
                                    '"not an identifier"
                                    g$stx$21885$f3xia
                                    g$last$21890$f3xia))))))))))
                    g$ls/false$21888$f3xia)
                  ((case-lambda
                     ((g$t$21893$f3xia)
                      ((case-lambda
                         ((g$ls/false$21894$f3xia)
                          (if g$ls/false$21894$f3xia
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$21427$f3xia
                                   '#f
                                   '"malformed binding form"
                                   g$stx$21885$f3xia
                                   g$fmls$21886$f3xia)))
                              g$ls/false$21894$f3xia)
                            (g$syntax-violation$21427$f3xia
                              '#f
                              '"invalid syntax"
                              g$t$21893$f3xia))))
                       (g$syntax-dispatch$21307$f3xia
                         g$t$21893$f3xia
                         '_))))
                   g$t$21887$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$21887$f3xia
               '#(each+ any () any)))))
         g$fmls$21886$f3xia))))
   (g$let-macro$21273$f3xia
     g$let-macro$24872$f3xia
     (case-lambda
       ((g$stx$21895$f3xia)
        ((case-lambda
           ((g$t$21896$f3xia)
            ((case-lambda
               ((g$ls/false$21897$f3xia)
                (if g$ls/false$21897$f3xia
                  (apply
                    (case-lambda
                      ((g$lhs*$21898$f3xia
                         g$rhs*$21899$f3xia
                         g$b$21900$f3xia
                         g$b*$21901$f3xia)
                       (if (g$valid-bound-ids?$20814$f3xia
                             g$lhs*$21898$f3xia)
                         (g$bless$21270$f3xia
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$21898$f3xia
                                 (cons
                                   g$b$21900$f3xia
                                   g$b*$21901$f3xia)))
                             g$rhs*$21899$f3xia))
                         (g$invalid-fmls-error$21272$f3xia
                           g$stx$21895$f3xia
                           g$lhs*$21898$f3xia))))
                    g$ls/false$21897$f3xia)
                  ((case-lambda
                     ((g$t$21902$f3xia)
                      ((case-lambda
                         ((g$ls/false$21903$f3xia)
                          (if (if g$ls/false$21903$f3xia
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$21904$f3xia
                                         g$lhs*$21905$f3xia
                                         g$rhs*$21906$f3xia
                                         g$b$21907$f3xia
                                         g$b*$21908$f3xia)
                                       (g$id?$20809$f3xia
                                         g$f$21904$f3xia)))
                                    g$ls/false$21903$f3xia))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$21909$f3xia
                                   g$lhs*$21910$f3xia
                                   g$rhs*$21911$f3xia
                                   g$b$21912$f3xia
                                   g$b*$21913$f3xia)
                                 (if (g$valid-bound-ids?$20814$f3xia
                                       g$lhs*$21910$f3xia)
                                   (g$bless$21270$f3xia
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$21909$f3xia
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$21910$f3xia
                                                 (cons
                                                   g$b$21912$f3xia
                                                   g$b*$21913$f3xia)))))
                                         g$f$21909$f3xia)
                                       g$rhs*$21911$f3xia))
                                   (g$invalid-fmls-error$21272$f3xia
                                     g$stx$21895$f3xia
                                     g$lhs*$21910$f3xia))))
                              g$ls/false$21903$f3xia)
                            (g$syntax-violation$21427$f3xia
                              '#f
                              '"invalid syntax"
                              g$t$21902$f3xia))))
                       (g$syntax-dispatch$21307$f3xia
                         g$t$21902$f3xia
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$21896$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$21896$f3xia
               '(_ #(each (any any)) any . each-any)))))
         g$stx$21895$f3xia))))
   (g$let-values-macro$21274$f3xia
     g$let-values-macro$24873$f3xia
     (case-lambda
       ((g$stx$21914$f3xia)
        (letrec* ((g$rename$21915$f3xia
                    (case-lambda
                      ((g$x$21966$f3xia
                         g$old*$21967$f3xia
                         g$new*$21968$f3xia)
                       (begin
                         (if (not (g$id?$20809$f3xia g$x$21966$f3xia))
                           (g$syntax-violation$21427$f3xia
                             '#f
                             '"not an indentifier"
                             g$stx$21914$f3xia
                             g$x$21966$f3xia)
                           (void))
                         (if (g$bound-id-member?$20816$f3xia
                               g$x$21966$f3xia
                               g$old*$21967$f3xia)
                           (g$syntax-violation$21427$f3xia
                             '#f
                             '"duplicate binding"
                             g$stx$21914$f3xia
                             g$x$21966$f3xia)
                           (void))
                         ((case-lambda
                            ((g$y$21969$f3xia)
                             (values
                               g$y$21969$f3xia
                               (cons g$x$21966$f3xia g$old*$21967$f3xia)
                               (cons
                                 g$y$21969$f3xia
                                 g$new*$21968$f3xia))))
                          (gensym
                            (g$syntax->datum$21430$f3xia
                              g$x$21966$f3xia)))))))
                  (g$rename*$21916$f3xia
                    (case-lambda
                      ((g$x*$21957$f3xia
                         g$old*$21958$f3xia
                         g$new*$21959$f3xia)
                       (if (null? g$x*$21957$f3xia)
                         (values
                           '()
                           g$old*$21958$f3xia
                           g$new*$21959$f3xia)
                         ((case-lambda
                            (()
                             (begin
                               '#f
                               (call-with-values
                                 (case-lambda
                                   (()
                                    (g$rename$21915$f3xia
                                      (car g$x*$21957$f3xia)
                                      g$old*$21958$f3xia
                                      g$new*$21959$f3xia)))
                                 (case-lambda
                                   ((g$x$21960$f3xia
                                      g$old*$21961$f3xia
                                      g$new*$21962$f3xia)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$rename*$21916$f3xia
                                           (cdr g$x*$21957$f3xia)
                                           g$old*$21961$f3xia
                                           g$new*$21962$f3xia)))
                                      (case-lambda
                                        ((g$x*$21963$f3xia
                                           g$old*$21964$f3xia
                                           g$new*$21965$f3xia)
                                         (values
                                           (cons
                                             g$x$21960$f3xia
                                             g$x*$21963$f3xia)
                                           g$old*$21964$f3xia
                                           g$new*$21965$f3xia))))))))))))))))
          ((case-lambda
             ((g$t$21917$f3xia)
              ((case-lambda
                 ((g$ls/false$21918$f3xia)
                  (if g$ls/false$21918$f3xia
                    (apply
                      (case-lambda
                        ((g$b$21919$f3xia g$b*$21920$f3xia)
                         (g$cons*$15552$f3xia
                           (g$bless$21270$f3xia 'let)
                           '()
                           g$b$21919$f3xia
                           g$b*$21920$f3xia)))
                      g$ls/false$21918$f3xia)
                    ((case-lambda
                       ((g$t$21921$f3xia)
                        ((case-lambda
                           ((g$ls/false$21922$f3xia)
                            (if g$ls/false$21922$f3xia
                              (apply
                                (case-lambda
                                  ((g$lhs*$21923$f3xia
                                     g$rhs*$21924$f3xia
                                     g$b$21925$f3xia
                                     g$b*$21926$f3xia)
                                   (g$bless$21270$f3xia
                                     ((letrec ((g$f$21927$f3xia
                                                 (case-lambda
                                                   ((g$lhs*$21928$f3xia
                                                      g$rhs*$21929$f3xia
                                                      g$old*$21930$f3xia
                                                      g$new*$21931$f3xia)
                                                    (if (null?
                                                          g$lhs*$21928$f3xia)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$15550$f3xia
                                                            list
                                                            g$old*$21930$f3xia
                                                            g$new*$21931$f3xia)
                                                          (cons
                                                            g$b$21925$f3xia
                                                            g$b*$21926$f3xia)))
                                                      ((case-lambda
                                                         (()
                                                          (begin
                                                            '#f
                                                            ((case-lambda
                                                               ((g$t$21932$f3xia)
                                                                ((case-lambda
                                                                   ((g$ls/false$21933$f3xia)
                                                                    (if g$ls/false$21933$f3xia
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x*$21934$f3xia)
                                                                           (call-with-values
                                                                             (case-lambda
                                                                               (()
                                                                                (g$rename*$21916$f3xia
                                                                                  g$x*$21934$f3xia
                                                                                  g$old*$21930$f3xia
                                                                                  g$new*$21931$f3xia)))
                                                                             (case-lambda
                                                                               ((g$y*$21938$f3xia
                                                                                  g$old*$21939$f3xia
                                                                                  g$new*$21940$f3xia)
                                                                                ((case-lambda
                                                                                   ((g$new*$21941$f3xia
                                                                                      g$old*$21942$f3xia
                                                                                      g$y*$21943$f3xia)
                                                                                    (list
                                                                                      'call-with-values
                                                                                      (list
                                                                                        'lambda
                                                                                        '()
                                                                                        (car g$rhs*$21929$f3xia))
                                                                                      (list
                                                                                        'lambda
                                                                                        g$y*$21943$f3xia
                                                                                        (g$f$21927$f3xia
                                                                                          (cdr g$lhs*$21928$f3xia)
                                                                                          (cdr g$rhs*$21929$f3xia)
                                                                                          g$old*$21942$f3xia
                                                                                          g$new*$21941$f3xia)))))
                                                                                 g$new*$21940$f3xia
                                                                                 g$old*$21939$f3xia
                                                                                 g$y*$21938$f3xia))))))
                                                                        g$ls/false$21933$f3xia)
                                                                      ((case-lambda
                                                                         ((g$t$21944$f3xia)
                                                                          ((case-lambda
                                                                             ((g$ls/false$21945$f3xia)
                                                                              (if g$ls/false$21945$f3xia
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$x*$21946$f3xia
                                                                                       g$x$21947$f3xia)
                                                                                     (call-with-values
                                                                                       (case-lambda
                                                                                         (()
                                                                                          (g$rename$21915$f3xia
                                                                                            g$x$21947$f3xia
                                                                                            g$old*$21930$f3xia
                                                                                            g$new*$21931$f3xia)))
                                                                                       (case-lambda
                                                                                         ((g$y$21948$f3xia
                                                                                            g$old*$21949$f3xia
                                                                                            g$new*$21950$f3xia)
                                                                                          (call-with-values
                                                                                            (case-lambda
                                                                                              (()
                                                                                               (g$rename*$21916$f3xia
                                                                                                 g$x*$21946$f3xia
                                                                                                 g$old*$21949$f3xia
                                                                                                 g$new*$21950$f3xia)))
                                                                                            (case-lambda
                                                                                              ((g$y*$21951$f3xia
                                                                                                 g$old*$21952$f3xia
                                                                                                 g$new*$21953$f3xia)
                                                                                               (list
                                                                                                 'call-with-values
                                                                                                 (list
                                                                                                   'lambda
                                                                                                   '()
                                                                                                   (car g$rhs*$21929$f3xia))
                                                                                                 (list
                                                                                                   'lambda
                                                                                                   (g$append$15556$f3xia
                                                                                                     g$y*$21951$f3xia
                                                                                                     g$y$21948$f3xia)
                                                                                                   (g$f$21927$f3xia
                                                                                                     (cdr g$lhs*$21928$f3xia)
                                                                                                     (cdr g$rhs*$21929$f3xia)
                                                                                                     g$old*$21952$f3xia
                                                                                                     g$new*$21953$f3xia)))))))))))
                                                                                  g$ls/false$21945$f3xia)
                                                                                ((case-lambda
                                                                                   ((g$t$21954$f3xia)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$21955$f3xia)
                                                                                        (if g$ls/false$21955$f3xia
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$21956$f3xia)
                                                                                               (g$syntax-violation$21427$f3xia
                                                                                                 '#f
                                                                                                 '"malformed bindings"
                                                                                                 g$stx$21914$f3xia
                                                                                                 g$others$21956$f3xia)))
                                                                                            g$ls/false$21955$f3xia)
                                                                                          (g$syntax-violation$21427$f3xia
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$21954$f3xia))))
                                                                                     (g$syntax-dispatch$21307$f3xia
                                                                                       g$t$21954$f3xia
                                                                                       'any))))
                                                                                 g$t$21944$f3xia))))
                                                                           (g$syntax-dispatch$21307$f3xia
                                                                             g$t$21944$f3xia
                                                                             '#(each+
                                                                                any
                                                                                ()
                                                                                any)))))
                                                                       g$t$21932$f3xia))))
                                                                 (g$syntax-dispatch$21307$f3xia
                                                                   g$t$21932$f3xia
                                                                   'each-any))))
                                                             (car g$lhs*$21928$f3xia)))))))))))
                                        g$f$21927$f3xia)
                                      g$lhs*$21923$f3xia
                                      g$rhs*$21924$f3xia
                                      '()
                                      '()))))
                                g$ls/false$21922$f3xia)
                              (g$syntax-violation$21427$f3xia
                                '#f
                                '"invalid syntax"
                                g$t$21921$f3xia))))
                         (g$syntax-dispatch$21307$f3xia
                           g$t$21921$f3xia
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$21917$f3xia))))
               (g$syntax-dispatch$21307$f3xia
                 g$t$21917$f3xia
                 '(_ () any . each-any)))))
           g$stx$21914$f3xia)))))
   (g$let*-values-macro$21275$f3xia
     g$let*-values-macro$24874$f3xia
     (case-lambda
       ((g$stx$21970$f3xia)
        (letrec* ((g$check$21971$f3xia
                    (case-lambda
                      ((g$x*$21995$f3xia)
                       (if (not (null? g$x*$21995$f3xia))
                         ((case-lambda
                            ((g$x$21996$f3xia)
                             (begin
                               (if (not (g$id?$20809$f3xia
                                          g$x$21996$f3xia))
                                 (g$syntax-violation$21427$f3xia
                                   '#f
                                   '"not an identifier"
                                   g$stx$21970$f3xia
                                   g$x$21996$f3xia)
                                 (void))
                               (g$check$21971$f3xia
                                 (cdr g$x*$21995$f3xia))
                               (if (g$bound-id-member?$20816$f3xia
                                     g$x$21996$f3xia
                                     (cdr g$x*$21995$f3xia))
                                 (g$syntax-violation$21427$f3xia
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$21970$f3xia
                                   g$x$21996$f3xia)
                                 (void)))))
                          (car g$x*$21995$f3xia))
                         (void))))))
          ((case-lambda
             ((g$t$21972$f3xia)
              ((case-lambda
                 ((g$ls/false$21973$f3xia)
                  (if g$ls/false$21973$f3xia
                    (apply
                      (case-lambda
                        ((g$b$21974$f3xia g$b*$21975$f3xia)
                         (g$cons*$15552$f3xia
                           (g$bless$21270$f3xia 'let)
                           '()
                           g$b$21974$f3xia
                           g$b*$21975$f3xia)))
                      g$ls/false$21973$f3xia)
                    ((case-lambda
                       ((g$t$21976$f3xia)
                        ((case-lambda
                           ((g$ls/false$21977$f3xia)
                            (if g$ls/false$21977$f3xia
                              (apply
                                (case-lambda
                                  ((g$lhs*$21978$f3xia
                                     g$rhs*$21979$f3xia
                                     g$b$21980$f3xia
                                     g$b*$21981$f3xia)
                                   (g$bless$21270$f3xia
                                     ((letrec ((g$f$21982$f3xia
                                                 (case-lambda
                                                   ((g$lhs*$21983$f3xia
                                                      g$rhs*$21984$f3xia)
                                                    (if (null?
                                                          g$lhs*$21983$f3xia)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$21980$f3xia
                                                          g$b*$21981$f3xia))
                                                      ((case-lambda
                                                         (()
                                                          (begin
                                                            '#f
                                                            ((case-lambda
                                                               ((g$t$21985$f3xia)
                                                                ((case-lambda
                                                                   ((g$ls/false$21986$f3xia)
                                                                    (if g$ls/false$21986$f3xia
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x*$21987$f3xia)
                                                                           (begin
                                                                             (g$check$21971$f3xia
                                                                               g$x*$21987$f3xia)
                                                                             (list
                                                                               'call-with-values
                                                                               (list
                                                                                 'lambda
                                                                                 '()
                                                                                 (car g$rhs*$21984$f3xia))
                                                                               (list
                                                                                 'lambda
                                                                                 g$x*$21987$f3xia
                                                                                 (g$f$21982$f3xia
                                                                                   (cdr g$lhs*$21983$f3xia)
                                                                                   (cdr g$rhs*$21984$f3xia)))))))
                                                                        g$ls/false$21986$f3xia)
                                                                      ((case-lambda
                                                                         ((g$t$21988$f3xia)
                                                                          ((case-lambda
                                                                             ((g$ls/false$21989$f3xia)
                                                                              (if g$ls/false$21989$f3xia
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$x*$21990$f3xia
                                                                                       g$x$21991$f3xia)
                                                                                     (begin
                                                                                       (g$check$21971$f3xia
                                                                                         (cons
                                                                                           g$x$21991$f3xia
                                                                                           g$x*$21990$f3xia))
                                                                                       (list
                                                                                         'call-with-values
                                                                                         (list
                                                                                           'lambda
                                                                                           '()
                                                                                           (car g$rhs*$21984$f3xia))
                                                                                         (list
                                                                                           'lambda
                                                                                           (g$append$15556$f3xia
                                                                                             g$x*$21990$f3xia
                                                                                             g$x$21991$f3xia)
                                                                                           (g$f$21982$f3xia
                                                                                             (cdr g$lhs*$21983$f3xia)
                                                                                             (cdr g$rhs*$21984$f3xia)))))))
                                                                                  g$ls/false$21989$f3xia)
                                                                                ((case-lambda
                                                                                   ((g$t$21992$f3xia)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$21993$f3xia)
                                                                                        (if g$ls/false$21993$f3xia
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$21994$f3xia)
                                                                                               (g$syntax-violation$21427$f3xia
                                                                                                 '#f
                                                                                                 '"malformed bindings"
                                                                                                 g$stx$21970$f3xia
                                                                                                 g$others$21994$f3xia)))
                                                                                            g$ls/false$21993$f3xia)
                                                                                          (g$syntax-violation$21427$f3xia
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$21992$f3xia))))
                                                                                     (g$syntax-dispatch$21307$f3xia
                                                                                       g$t$21992$f3xia
                                                                                       'any))))
                                                                                 g$t$21988$f3xia))))
                                                                           (g$syntax-dispatch$21307$f3xia
                                                                             g$t$21988$f3xia
                                                                             '#(each+
                                                                                any
                                                                                ()
                                                                                any)))))
                                                                       g$t$21985$f3xia))))
                                                                 (g$syntax-dispatch$21307$f3xia
                                                                   g$t$21985$f3xia
                                                                   'each-any))))
                                                             (car g$lhs*$21983$f3xia)))))))))))
                                        g$f$21982$f3xia)
                                      g$lhs*$21978$f3xia
                                      g$rhs*$21979$f3xia))))
                                g$ls/false$21977$f3xia)
                              (g$syntax-violation$21427$f3xia
                                '#f
                                '"invalid syntax"
                                g$t$21976$f3xia))))
                         (g$syntax-dispatch$21307$f3xia
                           g$t$21976$f3xia
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$21972$f3xia))))
               (g$syntax-dispatch$21307$f3xia
                 g$t$21972$f3xia
                 '(_ () any . each-any)))))
           g$stx$21970$f3xia)))))
   (g$trace-lambda-macro$21276$f3xia
     g$trace-lambda-macro$24875$f3xia
     (case-lambda
       ((g$stx$21997$f3xia)
        ((case-lambda
           ((g$t$21998$f3xia)
            ((case-lambda
               ((g$ls/false$21999$f3xia)
                (if g$ls/false$21999$f3xia
                  (apply
                    (case-lambda
                      ((g$who$22000$f3xia
                         g$fmls$22001$f3xia
                         g$b$22002$f3xia
                         g$b*$22003$f3xia)
                       (if (g$valid-bound-ids?$20814$f3xia
                             g$fmls$22001$f3xia)
                         (g$bless$21270$f3xia
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$22000$f3xia)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$22001$f3xia
                                 (cons
                                   g$b$22002$f3xia
                                   g$b*$22003$f3xia)))))
                         (g$invalid-fmls-error$21272$f3xia
                           g$stx$21997$f3xia
                           g$fmls$22001$f3xia))))
                    g$ls/false$21999$f3xia)
                  ((case-lambda
                     ((g$t$22004$f3xia)
                      ((case-lambda
                         ((g$ls/false$22005$f3xia)
                          (if g$ls/false$22005$f3xia
                            (apply
                              (case-lambda
                                ((g$who$22006$f3xia
                                   g$fmls$22007$f3xia
                                   g$last$22008$f3xia
                                   g$b$22009$f3xia
                                   g$b*$22010$f3xia)
                                 (if (g$valid-bound-ids?$20814$f3xia
                                       (cons
                                         g$last$22008$f3xia
                                         g$fmls$22007$f3xia))
                                   (g$bless$21270$f3xia
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$22006$f3xia)
                                       (cons
                                         'lambda
                                         (cons
                                           (g$append$15556$f3xia
                                             g$fmls$22007$f3xia
                                             g$last$22008$f3xia)
                                           (cons
                                             g$b$22009$f3xia
                                             g$b*$22010$f3xia)))))
                                   (g$invalid-fmls-error$21272$f3xia
                                     g$stx$21997$f3xia
                                     (g$append$15556$f3xia
                                       g$fmls$22007$f3xia
                                       g$last$22008$f3xia)))))
                              g$ls/false$22005$f3xia)
                            (g$syntax-violation$21427$f3xia
                              '#f
                              '"invalid syntax"
                              g$t$22004$f3xia))))
                       (g$syntax-dispatch$21307$f3xia
                         g$t$22004$f3xia
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$21998$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$21998$f3xia
               '(_ any each-any any . each-any)))))
         g$stx$21997$f3xia))))
   (g$trace-define-macro$21277$f3xia
     g$trace-define-macro$24876$f3xia
     (case-lambda
       ((g$stx$22011$f3xia)
        ((case-lambda
           ((g$t$22012$f3xia)
            ((case-lambda
               ((g$ls/false$22013$f3xia)
                (if g$ls/false$22013$f3xia
                  (apply
                    (case-lambda
                      ((g$who$22014$f3xia
                         g$fmls$22015$f3xia
                         g$b$22016$f3xia
                         g$b*$22017$f3xia)
                       (if (g$valid-bound-ids?$20814$f3xia
                             g$fmls$22015$f3xia)
                         (g$bless$21270$f3xia
                           (list
                             'define
                             g$who$22014$f3xia
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$22014$f3xia)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$22015$f3xia
                                   (cons
                                     g$b$22016$f3xia
                                     g$b*$22017$f3xia))))))
                         (g$invalid-fmls-error$21272$f3xia
                           g$stx$22011$f3xia
                           g$fmls$22015$f3xia))))
                    g$ls/false$22013$f3xia)
                  ((case-lambda
                     ((g$t$22018$f3xia)
                      ((case-lambda
                         ((g$ls/false$22019$f3xia)
                          (if g$ls/false$22019$f3xia
                            (apply
                              (case-lambda
                                ((g$who$22020$f3xia
                                   g$fmls$22021$f3xia
                                   g$last$22022$f3xia
                                   g$b$22023$f3xia
                                   g$b*$22024$f3xia)
                                 (if (g$valid-bound-ids?$20814$f3xia
                                       (cons
                                         g$last$22022$f3xia
                                         g$fmls$22021$f3xia))
                                   (g$bless$21270$f3xia
                                     (list
                                       'define
                                       g$who$22020$f3xia
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$22020$f3xia)
                                         (cons
                                           'lambda
                                           (cons
                                             (g$append$15556$f3xia
                                               g$fmls$22021$f3xia
                                               g$last$22022$f3xia)
                                             (cons
                                               g$b$22023$f3xia
                                               g$b*$22024$f3xia))))))
                                   (g$invalid-fmls-error$21272$f3xia
                                     g$stx$22011$f3xia
                                     (g$append$15556$f3xia
                                       g$fmls$22021$f3xia
                                       g$last$22022$f3xia)))))
                              g$ls/false$22019$f3xia)
                            ((case-lambda
                               ((g$t$22025$f3xia)
                                ((case-lambda
                                   ((g$ls/false$22026$f3xia)
                                    (if g$ls/false$22026$f3xia
                                      (apply
                                        (case-lambda
                                          ((g$who$22027$f3xia
                                             g$expr$22028$f3xia)
                                           (if (g$id?$20809$f3xia
                                                 g$who$22027$f3xia)
                                             (g$bless$21270$f3xia
                                               (list
                                                 'define
                                                 g$who$22027$f3xia
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$22028$f3xia))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$22027$f3xia)
                                                             '(v)))
                                                         '(v)))))))
                                             (g$syntax-violation$21427$f3xia
                                               '#f
                                               '"invalid name"
                                               g$stx$22011$f3xia))))
                                        g$ls/false$22026$f3xia)
                                      (g$syntax-violation$21427$f3xia
                                        '#f
                                        '"invalid syntax"
                                        g$t$22025$f3xia))))
                                 (g$syntax-dispatch$21307$f3xia
                                   g$t$22025$f3xia
                                   '(_ any any)))))
                             g$t$22018$f3xia))))
                       (g$syntax-dispatch$21307$f3xia
                         g$t$22018$f3xia
                         '(_ (any . #(each+ any () any))
                             any
                             .
                             each-any)))))
                   g$t$22012$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$22012$f3xia
               '(_ (any . each-any) any . each-any)))))
         g$stx$22011$f3xia))))
   (g$trace-define-syntax-macro$21278$f3xia
     g$trace-define-syntax-macro$24877$f3xia
     (case-lambda
       ((g$stx$22029$f3xia)
        ((case-lambda
           ((g$t$22030$f3xia)
            ((case-lambda
               ((g$ls/false$22031$f3xia)
                (if g$ls/false$22031$f3xia
                  (apply
                    (case-lambda
                      ((g$who$22032$f3xia g$expr$22033$f3xia)
                       (if (g$id?$20809$f3xia g$who$22032$f3xia)
                         (g$bless$21270$f3xia
                           (list
                             'define-syntax
                             g$who$22032$f3xia
                             (list
                               'make-traced-macro
                               (list 'quote g$who$22032$f3xia)
                               g$expr$22033$f3xia)))
                         (g$syntax-violation$21427$f3xia
                           '#f
                           '"invalid name"
                           g$stx$22029$f3xia))))
                    g$ls/false$22031$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$22030$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$22030$f3xia
               '(_ any any)))))
         g$stx$22029$f3xia))))
   (g$trace-let/rec-syntax$21279$f3xia
     g$trace-let/rec-syntax$24878$f3xia
     (case-lambda
       ((g$who$22034$f3xia)
        (case-lambda
          ((g$stx$22035$f3xia)
           ((case-lambda
              ((g$t$22036$f3xia)
               ((case-lambda
                  ((g$ls/false$22037$f3xia)
                   (if g$ls/false$22037$f3xia
                     (apply
                       (case-lambda
                         ((g$lhs*$22038$f3xia
                            g$rhs*$22039$f3xia
                            g$b$22040$f3xia
                            g$b*$22041$f3xia)
                          (if (g$valid-bound-ids?$20814$f3xia
                                g$lhs*$22038$f3xia)
                            ((case-lambda
                               ((g$rhs*$22042$f3xia)
                                (g$bless$21270$f3xia
                                  (cons
                                    g$who$22034$f3xia
                                    (cons
                                      (g$map$15550$f3xia
                                        list
                                        g$lhs*$22038$f3xia
                                        g$rhs*$22042$f3xia)
                                      (cons
                                        g$b$22040$f3xia
                                        g$b*$22041$f3xia))))))
                             (g$map$15550$f3xia
                               (case-lambda
                                 ((g$lhs$22043$f3xia g$rhs$22044$f3xia)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$22043$f3xia)
                                    g$rhs$22044$f3xia)))
                               g$lhs*$22038$f3xia
                               g$rhs*$22039$f3xia))
                            (g$invalid-fmls-error$21272$f3xia
                              g$stx$22035$f3xia
                              g$lhs*$22038$f3xia))))
                       g$ls/false$22037$f3xia)
                     (g$syntax-violation$21427$f3xia
                       '#f
                       '"invalid syntax"
                       g$t$22036$f3xia))))
                (g$syntax-dispatch$21307$f3xia
                  g$t$22036$f3xia
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$22035$f3xia))))))
   (g$trace-let-syntax-macro$21280$f3xia
     g$trace-let-syntax-macro$24879$f3xia
     (g$trace-let/rec-syntax$21279$f3xia 'let-syntax))
   (g$trace-letrec-syntax-macro$21281$f3xia
     g$trace-letrec-syntax-macro$24880$f3xia
     (g$trace-let/rec-syntax$21279$f3xia 'letrec-syntax))
   (g$guard-macro$21282$f3xia
     g$guard-macro$24881$f3xia
     (case-lambda
       ((g$x$22045$f3xia)
        (letrec* ((g$gen-clauses$22046$f3xia
                    (case-lambda
                      ((g$con$22058$f3xia
                         g$outerk$22059$f3xia
                         g$clause*$22060$f3xia)
                       (letrec* ((g$f$22061$f3xia
                                   (case-lambda
                                     ((g$x$22089$f3xia g$k$22090$f3xia)
                                      ((case-lambda
                                         ((g$t$22091$f3xia)
                                          ((case-lambda
                                             ((g$ls/false$22092$f3xia)
                                              (if g$ls/false$22092$f3xia
                                                (apply
                                                  (case-lambda
                                                    ((g$e$22093$f3xia
                                                       g$p$22094$f3xia)
                                                     ((case-lambda
                                                        ((g$t$22095$f3xia)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$22095$f3xia
                                                               g$e$22093$f3xia))
                                                           (list
                                                             'if
                                                             g$t$22095$f3xia
                                                             (list
                                                               g$p$22094$f3xia
                                                               g$t$22095$f3xia)
                                                             g$k$22090$f3xia))))
                                                      (gensym))))
                                                  g$ls/false$22092$f3xia)
                                                ((case-lambda
                                                   ((g$t$22096$f3xia)
                                                    ((case-lambda
                                                       ((g$ls/false$22097$f3xia)
                                                        (if g$ls/false$22097$f3xia
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$22098$f3xia)
                                                               ((case-lambda
                                                                  ((g$t$22099$f3xia)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$22099$f3xia
                                                                         g$e$22098$f3xia))
                                                                     (list
                                                                       'if
                                                                       g$t$22099$f3xia
                                                                       g$t$22099$f3xia
                                                                       g$k$22090$f3xia))))
                                                                (gensym))))
                                                            g$ls/false$22097$f3xia)
                                                          ((case-lambda
                                                             ((g$t$22100$f3xia)
                                                              ((case-lambda
                                                                 ((g$ls/false$22101$f3xia)
                                                                  (if g$ls/false$22101$f3xia
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$22102$f3xia
                                                                           g$v$22103$f3xia
                                                                           g$v*$22104$f3xia)
                                                                         (list
                                                                           'if
                                                                           g$e$22102$f3xia
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$22103$f3xia
                                                                               g$v*$22104$f3xia))
                                                                           g$k$22090$f3xia)))
                                                                      g$ls/false$22101$f3xia)
                                                                    ((case-lambda
                                                                       ((g$t$22105$f3xia)
                                                                        ((case-lambda
                                                                           ((g$ls/false$22106$f3xia)
                                                                            (if g$ls/false$22106$f3xia
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$21427$f3xia
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$22089$f3xia)))
                                                                                g$ls/false$22106$f3xia)
                                                                              (g$syntax-violation$21427$f3xia
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$22105$f3xia))))
                                                                         (g$syntax-dispatch$21307$f3xia
                                                                           g$t$22105$f3xia
                                                                           '_))))
                                                                     g$t$22100$f3xia))))
                                                               (g$syntax-dispatch$21307$f3xia
                                                                 g$t$22100$f3xia
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$22096$f3xia))))
                                                     (g$syntax-dispatch$21307$f3xia
                                                       g$t$22096$f3xia
                                                       '(any)))))
                                                 g$t$22091$f3xia))))
                                           (g$syntax-dispatch$21307$f3xia
                                             g$t$22091$f3xia
                                             '(any #(scheme-id =>)
                                                   any)))))
                                       g$x$22089$f3xia))))
                                 (g$f*$22062$f3xia
                                   (case-lambda
                                     ((g$x*$22069$f3xia)
                                      ((case-lambda
                                         ((g$t$22070$f3xia)
                                          ((case-lambda
                                             ((g$ls/false$22071$f3xia)
                                              (if g$ls/false$22071$f3xia
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$22058$f3xia)
                                                       '#t)))
                                                  g$ls/false$22071$f3xia)
                                                ((case-lambda
                                                   ((g$t$22072$f3xia)
                                                    ((case-lambda
                                                       ((g$ls/false$22073$f3xia)
                                                        (if g$ls/false$22073$f3xia
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$22074$f3xia
                                                                 g$e*$22075$f3xia)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$22074$f3xia
                                                                     g$e*$22075$f3xia))
                                                                 '#f)))
                                                            g$ls/false$22073$f3xia)
                                                          ((case-lambda
                                                             ((g$t$22076$f3xia)
                                                              ((case-lambda
                                                                 ((g$ls/false$22077$f3xia)
                                                                  (if g$ls/false$22077$f3xia
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$22078$f3xia
                                                                           g$cls*$22079$f3xia)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$22062$f3xia
                                                                                g$cls*$22079$f3xia)))
                                                                           (case-lambda
                                                                             ((g$e$22082$f3xia
                                                                                g$g$22083$f3xia)
                                                                              ((case-lambda
                                                                                 ((g$g$22084$f3xia
                                                                                    g$e$22085$f3xia)
                                                                                  (values
                                                                                    (g$f$22061$f3xia
                                                                                      g$cls$22078$f3xia
                                                                                      g$e$22085$f3xia)
                                                                                    g$g$22084$f3xia)))
                                                                               g$g$22083$f3xia
                                                                               g$e$22082$f3xia))))))
                                                                      g$ls/false$22077$f3xia)
                                                                    ((case-lambda
                                                                       ((g$t$22086$f3xia)
                                                                        ((case-lambda
                                                                           ((g$ls/false$22087$f3xia)
                                                                            (if g$ls/false$22087$f3xia
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$22088$f3xia)
                                                                                   (g$syntax-violation$21427$f3xia
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$22088$f3xia)))
                                                                                g$ls/false$22087$f3xia)
                                                                              (g$syntax-violation$21427$f3xia
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$22086$f3xia))))
                                                                         (g$syntax-dispatch$21307$f3xia
                                                                           g$t$22086$f3xia
                                                                           'any))))
                                                                     g$t$22076$f3xia))))
                                                               (g$syntax-dispatch$21307$f3xia
                                                                 g$t$22076$f3xia
                                                                 '(any .
                                                                       any)))))
                                                           g$t$22072$f3xia))))
                                                     (g$syntax-dispatch$21307$f3xia
                                                       g$t$22072$f3xia
                                                       '((#(scheme-id
                                                            else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$22070$f3xia))))
                                           (g$syntax-dispatch$21307$f3xia
                                             g$t$22070$f3xia
                                             '()))))
                                       g$x*$22069$f3xia)))))
                         (call-with-values
                           (case-lambda
                             (()
                              (g$f*$22062$f3xia g$clause*$22060$f3xia)))
                           (case-lambda
                             ((g$code$22065$f3xia g$raisek$22066$f3xia)
                              ((case-lambda
                                 ((g$raisek$22067$f3xia
                                    g$code$22068$f3xia)
                                  (if g$raisek$22067$f3xia
                                    (list
                                      g$outerk$22059$f3xia
                                      g$code$22068$f3xia)
                                    g$code$22068$f3xia)))
                               g$raisek$22066$f3xia
                               g$code$22065$f3xia)))))))))
          ((case-lambda
             ((g$t$22047$f3xia)
              ((case-lambda
                 ((g$ls/false$22048$f3xia)
                  (if (if g$ls/false$22048$f3xia
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$22049$f3xia
                                 g$clause*$22050$f3xia
                                 g$b$22051$f3xia
                                 g$b*$22052$f3xia)
                               (g$id?$20809$f3xia g$con$22049$f3xia)))
                            g$ls/false$22048$f3xia))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$22053$f3xia
                           g$clause*$22054$f3xia
                           g$b$22055$f3xia
                           g$b*$22056$f3xia)
                         ((case-lambda
                            ((g$outerk$22057$f3xia)
                             (g$bless$21270$f3xia
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$22057$f3xia)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$22053$f3xia)
                                           (g$gen-clauses$22046$f3xia
                                             g$con$22053$f3xia
                                             g$outerk$22057$f3xia
                                             g$clause*$22054$f3xia))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               g$b$22055$f3xia
                                               g$b*$22056$f3xia)))))))))))
                          (gensym))))
                      g$ls/false$22048$f3xia)
                    (g$syntax-violation$21427$f3xia
                      '#f
                      '"invalid syntax"
                      g$t$22047$f3xia))))
               (g$syntax-dispatch$21307$f3xia
                 g$t$22047$f3xia
                 '(_ (any . each-any) any . each-any)))))
           g$x$22045$f3xia)))))
   (g$define-enumeration-macro$21283$f3xia
     g$define-enumeration-macro$24882$f3xia
     (case-lambda
       ((g$stx$22107$f3xia)
        (letrec* ((g$set?$22108$f3xia
                    (case-lambda
                      ((g$x$22121$f3xia)
                       ((case-lambda
                          ((g$t$22122$f3xia)
                           (if g$t$22122$f3xia
                             g$t$22122$f3xia
                             (begin
                               '#f
                               (if (not (g$memq$15538$f3xia
                                          (car g$x$22121$f3xia)
                                          (cdr g$x$22121$f3xia)))
                                 (begin
                                   '#f
                                   (g$set?$22108$f3xia
                                     (cdr g$x$22121$f3xia)))
                                 '#f)))))
                        (null? g$x$22121$f3xia)))))
                  (g$remove-dups$22109$f3xia
                    (case-lambda
                      ((g$ls$22120$f3xia)
                       (if (null? g$ls$22120$f3xia)
                         '()
                         ((case-lambda
                            (()
                             (begin
                               '#f
                               (cons
                                 (car g$ls$22120$f3xia)
                                 (g$remove-dups$22109$f3xia
                                   (g$remq$15561$f3xia
                                     (car g$ls$22120$f3xia)
                                     (cdr g$ls$22120$f3xia)))))))))))))
          ((case-lambda
             ((g$t$22110$f3xia)
              ((case-lambda
                 ((g$ls/false$22111$f3xia)
                  (if (if g$ls/false$22111$f3xia
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$22112$f3xia
                                 g$id*$22113$f3xia
                                 g$maker$22114$f3xia)
                               (if (g$id?$20809$f3xia
                                     g$name$22112$f3xia)
                                 (if (g$id?$20809$f3xia
                                       g$maker$22114$f3xia)
                                   (begin
                                     '#f
                                     (g$for-all$15548$f3xia
                                       g$id?$20809$f3xia
                                       g$id*$22113$f3xia))
                                   '#f)
                                 '#f)))
                            g$ls/false$22111$f3xia))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$22115$f3xia
                           g$id*$22116$f3xia
                           g$maker$22117$f3xia)
                         ((case-lambda
                            ((g$name*$22118$f3xia g$mk$22119$f3xia)
                             (g$bless$21270$f3xia
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$22119$f3xia
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list
                                         'quote
                                         g$name*$22118$f3xia))))
                                 (list
                                   'define-syntax
                                   g$name$22115$f3xia
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list
                                               'quote
                                               g$name*$22118$f3xia))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list
                                                 'quote
                                                 g$name$22115$f3xia)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$22117$f3xia
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$22117$f3xia)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$22118$f3xia))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$22117$f3xia)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$22119$f3xia
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$22109$f3xia
                            (g$syntax->datum$21430$f3xia
                              g$id*$22116$f3xia))
                          (gensym))))
                      g$ls/false$22111$f3xia)
                    (g$syntax-violation$21427$f3xia
                      '#f
                      '"invalid syntax"
                      g$t$22110$f3xia))))
               (g$syntax-dispatch$21307$f3xia
                 g$t$22110$f3xia
                 '(_ any each-any any)))))
           g$stx$22107$f3xia)))))
   (g$time-macro$21284$f3xia
     g$time-macro$24883$f3xia
     (case-lambda
       ((g$stx$22123$f3xia)
        ((case-lambda
           ((g$t$22124$f3xia)
            ((case-lambda
               ((g$ls/false$22125$f3xia)
                (if g$ls/false$22125$f3xia
                  (apply
                    (case-lambda
                      ((g$expr$22126$f3xia)
                       ((case-lambda
                          ((g$str$22127$f3xia)
                           (g$bless$21270$f3xia
                             (list
                               'time-it
                               g$str$22127$f3xia
                               (list 'lambda '() g$expr$22126$f3xia)))))
                        (call-with-values
                          (case-lambda
                            (()
                             (g$open-string-output-port$19091$f3xia)))
                          (case-lambda
                            ((g$p$22130$f3xia g$e$22131$f3xia)
                             ((case-lambda
                                ((g$e$22132$f3xia g$p$22133$f3xia)
                                 (begin
                                   (write
                                     (g$syntax->datum$21430$f3xia
                                       g$expr$22126$f3xia)
                                     g$p$22133$f3xia)
                                   (g$e$22132$f3xia))))
                              g$e$22131$f3xia
                              g$p$22130$f3xia)))))))
                    g$ls/false$22125$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$22124$f3xia))))
             (g$syntax-dispatch$21307$f3xia g$t$22124$f3xia '(_ any)))))
         g$stx$22123$f3xia))))
   (g$delay-macro$21285$f3xia
     g$delay-macro$24884$f3xia
     (case-lambda
       ((g$stx$22134$f3xia)
        ((case-lambda
           ((g$t$22135$f3xia)
            ((case-lambda
               ((g$ls/false$22136$f3xia)
                (if g$ls/false$22136$f3xia
                  (apply
                    (case-lambda
                      ((g$expr$22137$f3xia)
                       (g$bless$21270$f3xia
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$22137$f3xia)))))
                    g$ls/false$22136$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$22135$f3xia))))
             (g$syntax-dispatch$21307$f3xia g$t$22135$f3xia '(_ any)))))
         g$stx$22134$f3xia))))
   (g$assert-macro$21286$f3xia
     g$assert-macro$24885$f3xia
     (case-lambda
       ((g$stx$22138$f3xia)
        ((case-lambda
           ((g$t$22139$f3xia)
            ((case-lambda
               ((g$ls/false$22140$f3xia)
                (if g$ls/false$22140$f3xia
                  (apply
                    (case-lambda
                      ((g$expr$22141$f3xia)
                       ((case-lambda
                          ((g$pos$22142$f3xia)
                           (g$bless$21270$f3xia
                             (list
                               'unless
                               g$expr$22141$f3xia
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$22141$f3xia)
                                 (list 'quote g$pos$22142$f3xia))))))
                        ((case-lambda
                           ((g$t$22143$f3xia)
                            (if g$t$22143$f3xia
                              g$t$22143$f3xia
                              (begin
                                '#f
                                (g$expression-position$21421$f3xia
                                  g$expr$22141$f3xia)))))
                         (g$expression-position$21421$f3xia
                           g$stx$22138$f3xia)))))
                    g$ls/false$22140$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$22139$f3xia))))
             (g$syntax-dispatch$21307$f3xia g$t$22139$f3xia '(_ any)))))
         g$stx$22138$f3xia))))
   (g$endianness-macro$21287$f3xia
     g$endianness-macro$24886$f3xia
     (case-lambda
       ((g$stx$22144$f3xia)
        ((case-lambda
           ((g$t$22145$f3xia)
            ((case-lambda
               ((g$ls/false$22146$f3xia)
                (if g$ls/false$22146$f3xia
                  (apply
                    (case-lambda
                      ((g$e$22147$f3xia)
                       ((case-lambda
                          ((g$t$22148$f3xia)
                           (if (eqv? g$t$22148$f3xia 'little)
                             (g$bless$21270$f3xia ''little)
                             (if (eqv? g$t$22148$f3xia 'big)
                               (g$bless$21270$f3xia ''big)
                               ((case-lambda
                                  (()
                                   (begin
                                     '#f
                                     (g$syntax-violation$21427$f3xia
                                       '#f
                                       '"endianness must be big or little"
                                       g$stx$22144$f3xia)))))))))
                        (g$syntax->datum$21430$f3xia g$e$22147$f3xia))))
                    g$ls/false$22146$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$22145$f3xia))))
             (g$syntax-dispatch$21307$f3xia g$t$22145$f3xia '(_ any)))))
         g$stx$22144$f3xia))))
   (g$identifier-syntax-macro$21288$f3xia
     g$identifier-syntax-macro$24887$f3xia
     (case-lambda
       ((g$stx$22149$f3xia)
        ((case-lambda
           ((g$t$22150$f3xia)
            ((case-lambda
               ((g$ls/false$22151$f3xia)
                (if g$ls/false$22151$f3xia
                  (apply
                    (case-lambda
                      ((g$expr$22152$f3xia)
                       (g$bless$21270$f3xia
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$22152$f3xia))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$22152$f3xia)
                                   '(#'(e* ...))))))))))
                    g$ls/false$22151$f3xia)
                  ((case-lambda
                     ((g$t$22153$f3xia)
                      ((case-lambda
                         ((g$ls/false$22154$f3xia)
                          (if (if g$ls/false$22154$f3xia
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$22155$f3xia
                                         g$expr1$22156$f3xia
                                         g$id2$22157$f3xia
                                         g$expr2$22158$f3xia
                                         g$expr3$22159$f3xia)
                                       (if (g$id?$20809$f3xia
                                             g$id1$22155$f3xia)
                                         (if (g$id?$20809$f3xia
                                               g$id2$22157$f3xia)
                                           (begin
                                             '#f
                                             (g$id?$20809$f3xia
                                               g$expr2$22158$f3xia))
                                           '#f)
                                         '#f)))
                                    g$ls/false$22154$f3xia))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$22160$f3xia
                                   g$expr1$22161$f3xia
                                   g$id2$22162$f3xia
                                   g$expr2$22163$f3xia
                                   g$expr3$22164$f3xia)
                                 (g$bless$21270$f3xia
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             g$expr1$22161$f3xia))
                                         (list
                                           (list
                                             'set!
                                             'id
                                             g$expr2$22163$f3xia)
                                           (list
                                             'syntax
                                             g$expr3$22164$f3xia))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$22161$f3xia
                                               '(e* ...))))))))))
                              g$ls/false$22154$f3xia)
                            (g$syntax-violation$21427$f3xia
                              '#f
                              '"invalid syntax"
                              g$t$22153$f3xia))))
                       (g$syntax-dispatch$21307$f3xia
                         g$t$22153$f3xia
                         '(_ (any any)
                             ((#(scheme-id set!) any any) any))))))
                   g$t$22150$f3xia))))
             (g$syntax-dispatch$21307$f3xia g$t$22150$f3xia '(_ any)))))
         g$stx$22149$f3xia))))
   (g$do-macro$21289$f3xia
     g$do-macro$24888$f3xia
     (case-lambda
       ((g$stx$22165$f3xia)
        (letrec* ((g$bind$22166$f3xia
                    (case-lambda
                      ((g$x$22178$f3xia)
                       ((case-lambda
                          ((g$t$22179$f3xia)
                           ((case-lambda
                              ((g$ls/false$22180$f3xia)
                               (if g$ls/false$22180$f3xia
                                 (apply
                                   (case-lambda
                                     ((g$x$22181$f3xia
                                        g$init$22182$f3xia)
                                      (list
                                        g$x$22181$f3xia
                                        g$init$22182$f3xia
                                        g$x$22181$f3xia)))
                                   g$ls/false$22180$f3xia)
                                 ((case-lambda
                                    ((g$t$22183$f3xia)
                                     ((case-lambda
                                        ((g$ls/false$22184$f3xia)
                                         (if g$ls/false$22184$f3xia
                                           (apply
                                             (case-lambda
                                               ((g$x$22185$f3xia
                                                  g$init$22186$f3xia
                                                  g$step$22187$f3xia)
                                                (list
                                                  g$x$22185$f3xia
                                                  g$init$22186$f3xia
                                                  g$step$22187$f3xia)))
                                             g$ls/false$22184$f3xia)
                                           ((case-lambda
                                              ((g$t$22188$f3xia)
                                               ((case-lambda
                                                  ((g$ls/false$22189$f3xia)
                                                   (if g$ls/false$22189$f3xia
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$21427$f3xia
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$22165$f3xia)))
                                                       g$ls/false$22189$f3xia)
                                                     (g$syntax-violation$21427$f3xia
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$22188$f3xia))))
                                                (g$syntax-dispatch$21307$f3xia
                                                  g$t$22188$f3xia
                                                  '_))))
                                            g$t$22183$f3xia))))
                                      (g$syntax-dispatch$21307$f3xia
                                        g$t$22183$f3xia
                                        '(any any any)))))
                                  g$t$22179$f3xia))))
                            (g$syntax-dispatch$21307$f3xia
                              g$t$22179$f3xia
                              '(any any)))))
                        g$x$22178$f3xia)))))
          ((case-lambda
             ((g$t$22167$f3xia)
              ((case-lambda
                 ((g$ls/false$22168$f3xia)
                  (if g$ls/false$22168$f3xia
                    (apply
                      (case-lambda
                        ((g$binding*$22169$f3xia
                           g$test$22170$f3xia
                           g$expr*$22171$f3xia
                           g$command*$22172$f3xia)
                         ((case-lambda
                            ((g$t$22173$f3xia)
                             ((case-lambda
                                ((g$ls/false$22174$f3xia)
                                 (if g$ls/false$22174$f3xia
                                   (apply
                                     (case-lambda
                                       ((g$x*$22175$f3xia
                                          g$init*$22176$f3xia
                                          g$step*$22177$f3xia)
                                        (if (g$valid-bound-ids?$20814$f3xia
                                              g$x*$22175$f3xia)
                                          (g$bless$21270$f3xia
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$22175$f3xia
                                                    (list
                                                      'if
                                                      g$test$22170$f3xia
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$22171$f3xia))
                                                      (cons
                                                        'begin
                                                        (g$append$15556$f3xia
                                                          g$command*$22172$f3xia
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$22177$f3xia))))))))
                                              (cons
                                                'loop
                                                g$init*$22176$f3xia)))
                                          (g$syntax-violation$21427$f3xia
                                            '#f
                                            '"invalid bindings"
                                            g$stx$22165$f3xia))))
                                     g$ls/false$22174$f3xia)
                                   (g$syntax-violation$21427$f3xia
                                     '#f
                                     '"invalid syntax"
                                     g$t$22173$f3xia))))
                              (g$syntax-dispatch$21307$f3xia
                                g$t$22173$f3xia
                                '#(each (any any any))))))
                          (g$map$15550$f3xia
                            g$bind$22166$f3xia
                            g$binding*$22169$f3xia))))
                      g$ls/false$22168$f3xia)
                    (g$syntax-violation$21427$f3xia
                      '#f
                      '"invalid syntax"
                      g$t$22167$f3xia))))
               (g$syntax-dispatch$21307$f3xia
                 g$t$22167$f3xia
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$22165$f3xia)))))
   (g$let*-macro$21290$f3xia
     g$let*-macro$24889$f3xia
     (case-lambda
       ((g$stx$22190$f3xia)
        ((case-lambda
           ((g$t$22191$f3xia)
            ((case-lambda
               ((g$ls/false$22192$f3xia)
                (if (if g$ls/false$22192$f3xia
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$22193$f3xia
                               g$rhs*$22194$f3xia
                               g$b$22195$f3xia
                               g$b*$22196$f3xia)
                             (g$for-all$15548$f3xia
                               g$id?$20809$f3xia
                               g$lhs*$22193$f3xia)))
                          g$ls/false$22192$f3xia))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$22197$f3xia
                         g$rhs*$22198$f3xia
                         g$b$22199$f3xia
                         g$b*$22200$f3xia)
                       (g$bless$21270$f3xia
                         ((letrec ((g$f$22201$f3xia
                                     (case-lambda
                                       ((g$x*$22202$f3xia)
                                        (if (null? g$x*$22202$f3xia)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$22199$f3xia
                                                g$b*$22200$f3xia)))
                                          (if (null?
                                                (cdr g$x*$22202$f3xia))
                                            (cons
                                              'let
                                              (cons
                                                (list
                                                  (car g$x*$22202$f3xia))
                                                (cons
                                                  g$b$22199$f3xia
                                                  g$b*$22200$f3xia)))
                                            ((case-lambda
                                               (()
                                                (begin
                                                  '#f
                                                  (list
                                                    'let
                                                    (list
                                                      (car g$x*$22202$f3xia))
                                                    (g$f$22201$f3xia
                                                      (cdr g$x*$22202$f3xia)))))))))))))
                            g$f$22201$f3xia)
                          (g$map$15550$f3xia
                            list
                            g$lhs*$22197$f3xia
                            g$rhs*$22198$f3xia)))))
                    g$ls/false$22192$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$22191$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$22191$f3xia
               '(_ #(each (any any)) any . each-any)))))
         g$stx$22190$f3xia))))
   (g$or-macro$21291$f3xia
     g$or-macro$24890$f3xia
     (case-lambda
       ((g$stx$22203$f3xia)
        ((case-lambda
           ((g$t$22204$f3xia)
            ((case-lambda
               ((g$ls/false$22205$f3xia)
                (if g$ls/false$22205$f3xia
                  (apply (case-lambda (() '#f)) g$ls/false$22205$f3xia)
                  ((case-lambda
                     ((g$t$22206$f3xia)
                      ((case-lambda
                         ((g$ls/false$22207$f3xia)
                          (if g$ls/false$22207$f3xia
                            (apply
                              (case-lambda
                                ((g$e$22208$f3xia g$e*$22209$f3xia)
                                 (g$bless$21270$f3xia
                                   ((letrec ((g$f$22210$f3xia
                                               (case-lambda
                                                 ((g$e$22211$f3xia
                                                    g$e*$22212$f3xia)
                                                  (if (null?
                                                        g$e*$22212$f3xia)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$22211$f3xia)
                                                    ((case-lambda
                                                       (()
                                                        (begin
                                                          '#f
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                g$e$22211$f3xia))
                                                            (list
                                                              'if
                                                              't
                                                              't
                                                              (g$f$22210$f3xia
                                                                (car g$e*$22212$f3xia)
                                                                (cdr g$e*$22212$f3xia)))))))))))))
                                      g$f$22210$f3xia)
                                    g$e$22208$f3xia
                                    g$e*$22209$f3xia))))
                              g$ls/false$22207$f3xia)
                            (g$syntax-violation$21427$f3xia
                              '#f
                              '"invalid syntax"
                              g$t$22206$f3xia))))
                       (g$syntax-dispatch$21307$f3xia
                         g$t$22206$f3xia
                         '(_ any . each-any)))))
                   g$t$22204$f3xia))))
             (g$syntax-dispatch$21307$f3xia g$t$22204$f3xia '(_)))))
         g$stx$22203$f3xia))))
   (g$and-macro$21292$f3xia
     g$and-macro$24891$f3xia
     (case-lambda
       ((g$stx$22213$f3xia)
        ((case-lambda
           ((g$t$22214$f3xia)
            ((case-lambda
               ((g$ls/false$22215$f3xia)
                (if g$ls/false$22215$f3xia
                  (apply (case-lambda (() '#t)) g$ls/false$22215$f3xia)
                  ((case-lambda
                     ((g$t$22216$f3xia)
                      ((case-lambda
                         ((g$ls/false$22217$f3xia)
                          (if g$ls/false$22217$f3xia
                            (apply
                              (case-lambda
                                ((g$e$22218$f3xia g$e*$22219$f3xia)
                                 (g$bless$21270$f3xia
                                   ((letrec ((g$f$22220$f3xia
                                               (case-lambda
                                                 ((g$e$22221$f3xia
                                                    g$e*$22222$f3xia)
                                                  (if (null?
                                                        g$e*$22222$f3xia)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$22221$f3xia)
                                                    ((case-lambda
                                                       (()
                                                        (begin
                                                          '#f
                                                          (cons
                                                            'if
                                                            (cons
                                                              g$e$22221$f3xia
                                                              (cons
                                                                (g$f$22220$f3xia
                                                                  (car g$e*$22222$f3xia)
                                                                  (cdr g$e*$22222$f3xia))
                                                                '(#f)))))))))))))
                                      g$f$22220$f3xia)
                                    g$e$22218$f3xia
                                    g$e*$22219$f3xia))))
                              g$ls/false$22217$f3xia)
                            (g$syntax-violation$21427$f3xia
                              '#f
                              '"invalid syntax"
                              g$t$22216$f3xia))))
                       (g$syntax-dispatch$21307$f3xia
                         g$t$22216$f3xia
                         '(_ any . each-any)))))
                   g$t$22214$f3xia))))
             (g$syntax-dispatch$21307$f3xia g$t$22214$f3xia '(_)))))
         g$stx$22213$f3xia))))
   (g$cond-macro$21293$f3xia
     g$cond-macro$24892$f3xia
     (case-lambda
       ((g$stx$22223$f3xia)
        ((case-lambda
           ((g$t$22224$f3xia)
            ((case-lambda
               ((g$ls/false$22225$f3xia)
                (if g$ls/false$22225$f3xia
                  (apply
                    (case-lambda
                      ((g$cls$22226$f3xia g$cls*$22227$f3xia)
                       (g$bless$21270$f3xia
                         ((letrec ((g$f$22228$f3xia
                                     (case-lambda
                                       ((g$cls$22229$f3xia
                                          g$cls*$22230$f3xia)
                                        (if (null? g$cls*$22230$f3xia)
                                          ((case-lambda
                                             ((g$t$22231$f3xia)
                                              ((case-lambda
                                                 ((g$ls/false$22232$f3xia)
                                                  (if g$ls/false$22232$f3xia
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$22233$f3xia
                                                           g$e*$22234$f3xia)
                                                         (cons
                                                           'let
                                                           (cons
                                                             '()
                                                             (cons
                                                               '#f
                                                               (cons
                                                                 g$e$22233$f3xia
                                                                 g$e*$22234$f3xia))))))
                                                      g$ls/false$22232$f3xia)
                                                    ((case-lambda
                                                       ((g$t$22235$f3xia)
                                                        ((case-lambda
                                                           ((g$ls/false$22236$f3xia)
                                                            (if g$ls/false$22236$f3xia
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$22237$f3xia
                                                                     g$p$22238$f3xia)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$22237$f3xia))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$22238$f3xia
                                                                         '(t))))))
                                                                g$ls/false$22236$f3xia)
                                                              ((case-lambda
                                                                 ((g$t$22239$f3xia)
                                                                  ((case-lambda
                                                                     ((g$ls/false$22240$f3xia)
                                                                      (if g$ls/false$22240$f3xia
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$22241$f3xia)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$22241$f3xia
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$22240$f3xia)
                                                                        ((case-lambda
                                                                           ((g$t$22242$f3xia)
                                                                            ((case-lambda
                                                                               ((g$ls/false$22243$f3xia)
                                                                                (if g$ls/false$22243$f3xia
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$22244$f3xia
                                                                                         g$e*$22245$f3xia)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$22244$f3xia
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$22245$f3xia))))
                                                                                    g$ls/false$22243$f3xia)
                                                                                  ((case-lambda
                                                                                     ((g$t$22246$f3xia)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$22247$f3xia)
                                                                                          (if g$ls/false$22247$f3xia
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$21427$f3xia
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$22223$f3xia)))
                                                                                              g$ls/false$22247$f3xia)
                                                                                            (g$syntax-violation$21427$f3xia
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$22246$f3xia))))
                                                                                       (g$syntax-dispatch$21307$f3xia
                                                                                         g$t$22246$f3xia
                                                                                         '_))))
                                                                                   g$t$22242$f3xia))))
                                                                             (g$syntax-dispatch$21307$f3xia
                                                                               g$t$22242$f3xia
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$22239$f3xia))))
                                                                   (g$syntax-dispatch$21307$f3xia
                                                                     g$t$22239$f3xia
                                                                     '(any)))))
                                                               g$t$22235$f3xia))))
                                                         (g$syntax-dispatch$21307$f3xia
                                                           g$t$22235$f3xia
                                                           '(any #(scheme-id
                                                                   =>)
                                                                 any)))))
                                                     g$t$22231$f3xia))))
                                               (g$syntax-dispatch$21307$f3xia
                                                 g$t$22231$f3xia
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$22229$f3xia)
                                          ((case-lambda
                                             (()
                                              (begin
                                                '#f
                                                ((case-lambda
                                                   ((g$t$22248$f3xia)
                                                    ((case-lambda
                                                       ((g$ls/false$22249$f3xia)
                                                        (if g$ls/false$22249$f3xia
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$22250$f3xia
                                                                 g$e*$22251$f3xia)
                                                               (g$syntax-violation$21427$f3xia
                                                                 '#f
                                                                 '"incorrect position of keyword else"
                                                                 g$stx$22223$f3xia)))
                                                            g$ls/false$22249$f3xia)
                                                          ((case-lambda
                                                             ((g$t$22252$f3xia)
                                                              ((case-lambda
                                                                 ((g$ls/false$22253$f3xia)
                                                                  (if g$ls/false$22253$f3xia
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$22254$f3xia
                                                                           g$p$22255$f3xia)
                                                                         (list
                                                                           'let
                                                                           (list
                                                                             (list
                                                                               't
                                                                               g$e$22254$f3xia))
                                                                           (list
                                                                             'if
                                                                             't
                                                                             (cons
                                                                               g$p$22255$f3xia
                                                                               '(t))
                                                                             (g$f$22228$f3xia
                                                                               (car g$cls*$22230$f3xia)
                                                                               (cdr g$cls*$22230$f3xia))))))
                                                                      g$ls/false$22253$f3xia)
                                                                    ((case-lambda
                                                                       ((g$t$22256$f3xia)
                                                                        ((case-lambda
                                                                           ((g$ls/false$22257$f3xia)
                                                                            (if g$ls/false$22257$f3xia
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$e$22258$f3xia)
                                                                                   (list
                                                                                     'or
                                                                                     g$e$22258$f3xia
                                                                                     (g$f$22228$f3xia
                                                                                       (car g$cls*$22230$f3xia)
                                                                                       (cdr g$cls*$22230$f3xia)))))
                                                                                g$ls/false$22257$f3xia)
                                                                              ((case-lambda
                                                                                 ((g$t$22259$f3xia)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$22260$f3xia)
                                                                                      (if g$ls/false$22260$f3xia
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$e$22261$f3xia
                                                                                               g$e*$22262$f3xia)
                                                                                             (list
                                                                                               'if
                                                                                               g$e$22261$f3xia
                                                                                               (cons
                                                                                                 'begin
                                                                                                 g$e*$22262$f3xia)
                                                                                               (g$f$22228$f3xia
                                                                                                 (car g$cls*$22230$f3xia)
                                                                                                 (cdr g$cls*$22230$f3xia)))))
                                                                                          g$ls/false$22260$f3xia)
                                                                                        ((case-lambda
                                                                                           ((g$t$22263$f3xia)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$22264$f3xia)
                                                                                                (if g$ls/false$22264$f3xia
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$21427$f3xia
                                                                                                         '#f
                                                                                                         '"invalid last clause"
                                                                                                         g$stx$22223$f3xia)))
                                                                                                    g$ls/false$22264$f3xia)
                                                                                                  (g$syntax-violation$21427$f3xia
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$22263$f3xia))))
                                                                                             (g$syntax-dispatch$21307$f3xia
                                                                                               g$t$22263$f3xia
                                                                                               '_))))
                                                                                         g$t$22259$f3xia))))
                                                                                   (g$syntax-dispatch$21307$f3xia
                                                                                     g$t$22259$f3xia
                                                                                     '(any .
                                                                                           each-any)))))
                                                                               g$t$22256$f3xia))))
                                                                         (g$syntax-dispatch$21307$f3xia
                                                                           g$t$22256$f3xia
                                                                           '(any)))))
                                                                     g$t$22252$f3xia))))
                                                               (g$syntax-dispatch$21307$f3xia
                                                                 g$t$22252$f3xia
                                                                 '(any #(scheme-id
                                                                         =>)
                                                                       any)))))
                                                           g$t$22248$f3xia))))
                                                     (g$syntax-dispatch$21307$f3xia
                                                       g$t$22248$f3xia
                                                       '(#(scheme-id
                                                           else)
                                                         any
                                                         .
                                                         each-any)))))
                                                 g$cls$22229$f3xia))))))))))
                            g$f$22228$f3xia)
                          g$cls$22226$f3xia
                          g$cls*$22227$f3xia))))
                    g$ls/false$22225$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$22224$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$22224$f3xia
               '(_ any . each-any)))))
         g$stx$22223$f3xia))))
   (g$do-include$21294$f3xia
     g$do-include$24893$f3xia
     (case-lambda
       ((g$stx$22265$f3xia g$id$22266$f3xia g$filename$22267$f3xia)
        ((case-lambda
           ((g$filename$22268$f3xia)
            (begin
              (if (not (if (g$string?$15972$f3xia
                             g$filename$22268$f3xia)
                         (begin
                           '#f
                           (g$id?$20809$f3xia g$id$22266$f3xia))
                         '#f))
                (g$syntax-violation$21427$f3xia
                  '#f
                  '"invalid syntax"
                  g$stx$22265$f3xia)
                (void))
              (cons
                (g$bless$21270$f3xia 'begin)
                (g$with-input-from-file$19153$f3xia
                  g$filename$22268$f3xia
                  (case-lambda
                    (()
                     ((letrec ((g$f$22269$f3xia
                                 (case-lambda
                                   ((g$ls$22270$f3xia)
                                    ((case-lambda
                                       ((g$x$22271$f3xia)
                                        (if (eof-object?
                                              g$x$22271$f3xia)
                                          (g$reverse$16012$f3xia
                                            g$ls$22270$f3xia)
                                          ((case-lambda
                                             (()
                                              (begin
                                                '#f
                                                (g$f$22269$f3xia
                                                  (cons
                                                    (g$datum->stx$20792$f3xia
                                                      g$id$22266$f3xia
                                                      g$x$22271$f3xia)
                                                    g$ls$22270$f3xia)))))))))
                                     (read-annotated))))))
                        g$f$22269$f3xia)
                      '()))))))))
         (g$stx->datum$20820$f3xia g$filename$22267$f3xia)))))
   (g$include-macro$21295$f3xia
     g$include-macro$24894$f3xia
     (case-lambda
       ((g$e$22272$f3xia)
        ((case-lambda
           ((g$t$22273$f3xia)
            ((case-lambda
               ((g$ls/false$22274$f3xia)
                (if g$ls/false$22274$f3xia
                  (apply
                    (case-lambda
                      ((g$id$22275$f3xia g$filename$22276$f3xia)
                       (g$do-include$21294$f3xia
                         g$e$22272$f3xia
                         g$id$22275$f3xia
                         g$filename$22276$f3xia)))
                    g$ls/false$22274$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$22273$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$22273$f3xia
               '(any any)))))
         g$e$22272$f3xia))))
   (g$include-into-macro$21296$f3xia
     g$include-into-macro$24895$f3xia
     (case-lambda
       ((g$e$22277$f3xia)
        ((case-lambda
           ((g$t$22278$f3xia)
            ((case-lambda
               ((g$ls/false$22279$f3xia)
                (if g$ls/false$22279$f3xia
                  (apply
                    (case-lambda
                      ((g$id$22280$f3xia g$filename$22281$f3xia)
                       (g$do-include$21294$f3xia
                         g$e$22277$f3xia
                         g$id$22280$f3xia
                         g$filename$22281$f3xia)))
                    g$ls/false$22279$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$22278$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$22278$f3xia
               '(_ any any)))))
         g$e$22277$f3xia))))
   (g$syntax-rules-macro$21297$f3xia
     g$syntax-rules-macro$24896$f3xia
     (case-lambda
       ((g$e$22282$f3xia)
        ((case-lambda
           ((g$t$22283$f3xia)
            ((case-lambda
               ((g$ls/false$22284$f3xia)
                (if g$ls/false$22284$f3xia
                  (apply
                    (case-lambda
                      ((g$lits$22285$f3xia
                         g$pat*$22286$f3xia
                         g$tmp*$22287$f3xia)
                       (begin
                         (g$verify-literals$21310$f3xia
                           g$lits$22285$f3xia
                           g$e$22282$f3xia)
                         (g$bless$21270$f3xia
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$22285$f3xia
                                   (g$map$15550$f3xia
                                     (case-lambda
                                       ((g$pat$22288$f3xia
                                          g$tmp$22289$f3xia)
                                        ((case-lambda
                                           ((g$t$22290$f3xia)
                                            ((case-lambda
                                               ((g$ls/false$22291$f3xia)
                                                (if g$ls/false$22291$f3xia
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$22292$f3xia)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$22292$f3xia)
                                                         (list
                                                           'syntax
                                                           g$tmp$22289$f3xia))))
                                                    g$ls/false$22291$f3xia)
                                                  ((case-lambda
                                                     ((g$t$22293$f3xia)
                                                      ((case-lambda
                                                         ((g$ls/false$22294$f3xia)
                                                          (if g$ls/false$22294$f3xia
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$21427$f3xia
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$22282$f3xia
                                                                   g$pat$22288$f3xia)))
                                                              g$ls/false$22294$f3xia)
                                                            (g$syntax-violation$21427$f3xia
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$22293$f3xia))))
                                                       (g$syntax-dispatch$21307$f3xia
                                                         g$t$22293$f3xia
                                                         '_))))
                                                   g$t$22290$f3xia))))
                                             (g$syntax-dispatch$21307$f3xia
                                               g$t$22290$f3xia
                                               '(_ . any)))))
                                         g$pat$22288$f3xia)))
                                     g$pat*$22286$f3xia
                                     g$tmp*$22287$f3xia)))))))))
                    g$ls/false$22284$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$22283$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$22283$f3xia
               '(_ each-any . #(each (any any)))))))
         g$e$22282$f3xia))))
   (g$quasiquote-macro$21298$f3xia
     g$quasiquote-macro$24897$f3xia
     ((case-lambda
        (()
         (letrec* ((g$datum$22295$f3xia
                     (case-lambda
                       ((g$x$22445$f3xia)
                        (list
                          (g$scheme-stx$21250$f3xia 'quote)
                          (g$mkstx$20797$f3xia
                            g$x$22445$f3xia
                            '()
                            '()
                            '())))))
                   (g$quasicons*$22330$f3xia
                     (case-lambda
                       ((g$x$22441$f3xia g$y$22442$f3xia)
                        ((letrec ((g$f$22443$f3xia
                                    (case-lambda
                                      ((g$x$22444$f3xia)
                                       (if (null? g$x$22444$f3xia)
                                         g$y$22442$f3xia
                                         (g$quasicons$22331$f3xia
                                           (car g$x$22444$f3xia)
                                           (g$f$22443$f3xia
                                             (cdr g$x$22444$f3xia))))))))
                           g$f$22443$f3xia)
                         g$x$22441$f3xia))))
                   (g$quasicons$22331$f3xia
                     (case-lambda
                       ((g$x$22422$f3xia g$y$22423$f3xia)
                        ((case-lambda
                           ((g$t$22424$f3xia)
                            ((case-lambda
                               ((g$ls/false$22425$f3xia)
                                (if g$ls/false$22425$f3xia
                                  (apply
                                    (case-lambda
                                      ((g$dy$22426$f3xia)
                                       ((case-lambda
                                          ((g$t$22427$f3xia)
                                           ((case-lambda
                                              ((g$ls/false$22428$f3xia)
                                               (if g$ls/false$22428$f3xia
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$22429$f3xia)
                                                      (list
                                                        (g$scheme-stx$21250$f3xia
                                                          'quote)
                                                        (cons
                                                          g$dx$22429$f3xia
                                                          g$dy$22426$f3xia))))
                                                   g$ls/false$22428$f3xia)
                                                 ((case-lambda
                                                    ((g$t$22430$f3xia)
                                                     ((case-lambda
                                                        ((g$ls/false$22431$f3xia)
                                                         (if g$ls/false$22431$f3xia
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$22432$f3xia)
                                                                    ((case-lambda
                                                                       ((g$ls/false$22433$f3xia)
                                                                        (if g$ls/false$22433$f3xia
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$21250$f3xia
                                                                                   'list)
                                                                                 g$x$22422$f3xia)))
                                                                            g$ls/false$22433$f3xia)
                                                                          ((case-lambda
                                                                             ((g$t$22434$f3xia)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$22435$f3xia)
                                                                                  (if g$ls/false$22435$f3xia
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$21250$f3xia
                                                                                             'cons)
                                                                                           g$x$22422$f3xia
                                                                                           g$y$22423$f3xia)))
                                                                                      g$ls/false$22435$f3xia)
                                                                                    (g$syntax-violation$21427$f3xia
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$22434$f3xia))))
                                                                               (g$syntax-dispatch$21307$f3xia
                                                                                 g$t$22434$f3xia
                                                                                 '_))))
                                                                           g$t$22432$f3xia))))
                                                                     (g$syntax-dispatch$21307$f3xia
                                                                       g$t$22432$f3xia
                                                                       '()))))
                                                                 g$dy$22426$f3xia)))
                                                             g$ls/false$22431$f3xia)
                                                           (g$syntax-violation$21427$f3xia
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$22430$f3xia))))
                                                      (g$syntax-dispatch$21307$f3xia
                                                        g$t$22430$f3xia
                                                        '_))))
                                                  g$t$22427$f3xia))))
                                            (g$syntax-dispatch$21307$f3xia
                                              g$t$22427$f3xia
                                              '(#(scheme-id quote)
                                                any)))))
                                        g$x$22422$f3xia)))
                                    g$ls/false$22425$f3xia)
                                  ((case-lambda
                                     ((g$t$22436$f3xia)
                                      ((case-lambda
                                         ((g$ls/false$22437$f3xia)
                                          (if g$ls/false$22437$f3xia
                                            (apply
                                              (case-lambda
                                                ((g$stuff$22438$f3xia)
                                                 (g$cons*$15552$f3xia
                                                   (g$scheme-stx$21250$f3xia
                                                     'list)
                                                   g$x$22422$f3xia
                                                   g$stuff$22438$f3xia)))
                                              g$ls/false$22437$f3xia)
                                            ((case-lambda
                                               ((g$t$22439$f3xia)
                                                ((case-lambda
                                                   ((g$ls/false$22440$f3xia)
                                                    (if g$ls/false$22440$f3xia
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$21250$f3xia
                                                               'cons)
                                                             g$x$22422$f3xia
                                                             g$y$22423$f3xia)))
                                                        g$ls/false$22440$f3xia)
                                                      (g$syntax-violation$21427$f3xia
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$22439$f3xia))))
                                                 (g$syntax-dispatch$21307$f3xia
                                                   g$t$22439$f3xia
                                                   '_))))
                                             g$t$22436$f3xia))))
                                       (g$syntax-dispatch$21307$f3xia
                                         g$t$22436$f3xia
                                         '(#(scheme-id list)
                                           .
                                           each-any)))))
                                   g$t$22424$f3xia))))
                             (g$syntax-dispatch$21307$f3xia
                               g$t$22424$f3xia
                               '(#(scheme-id quote) any)))))
                         g$y$22423$f3xia))))
                   (g$quasiappend$22332$f3xia
                     (case-lambda
                       ((g$x$22409$f3xia g$y$22410$f3xia)
                        ((case-lambda
                           ((g$ls$22411$f3xia)
                            (if (null? g$ls$22411$f3xia)
                              (list
                                (g$scheme-stx$21250$f3xia 'quote)
                                '())
                              (if (null? (cdr g$ls$22411$f3xia))
                                (car g$ls$22411$f3xia)
                                ((case-lambda
                                   (()
                                    (begin
                                      '#f
                                      (g$cons*$15552$f3xia
                                        (g$scheme-stx$21250$f3xia
                                          'append)
                                        g$ls$22411$f3xia)))))))))
                         ((letrec ((g$f$22412$f3xia
                                     (case-lambda
                                       ((g$x$22413$f3xia)
                                        (if (null? g$x$22413$f3xia)
                                          ((case-lambda
                                             ((g$t$22414$f3xia)
                                              ((case-lambda
                                                 ((g$ls/false$22415$f3xia)
                                                  (if g$ls/false$22415$f3xia
                                                    (apply
                                                      (case-lambda
                                                        (() '()))
                                                      g$ls/false$22415$f3xia)
                                                    ((case-lambda
                                                       ((g$t$22416$f3xia)
                                                        ((case-lambda
                                                           ((g$ls/false$22417$f3xia)
                                                            (if g$ls/false$22417$f3xia
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$22410$f3xia)))
                                                                g$ls/false$22417$f3xia)
                                                              (g$syntax-violation$21427$f3xia
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$22416$f3xia))))
                                                         (g$syntax-dispatch$21307$f3xia
                                                           g$t$22416$f3xia
                                                           '_))))
                                                     g$t$22414$f3xia))))
                                               (g$syntax-dispatch$21307$f3xia
                                                 g$t$22414$f3xia
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           g$y$22410$f3xia)
                                          ((case-lambda
                                             ((g$t$22418$f3xia)
                                              ((case-lambda
                                                 ((g$ls/false$22419$f3xia)
                                                  (if g$ls/false$22419$f3xia
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$22412$f3xia
                                                           (cdr g$x$22413$f3xia))))
                                                      g$ls/false$22419$f3xia)
                                                    ((case-lambda
                                                       ((g$t$22420$f3xia)
                                                        ((case-lambda
                                                           ((g$ls/false$22421$f3xia)
                                                            (if g$ls/false$22421$f3xia
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$22413$f3xia)
                                                                     (g$f$22412$f3xia
                                                                       (cdr g$x$22413$f3xia)))))
                                                                g$ls/false$22421$f3xia)
                                                              (g$syntax-violation$21427$f3xia
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$22420$f3xia))))
                                                         (g$syntax-dispatch$21307$f3xia
                                                           g$t$22420$f3xia
                                                           '_))))
                                                     g$t$22418$f3xia))))
                                               (g$syntax-dispatch$21307$f3xia
                                                 g$t$22418$f3xia
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           (car g$x$22413$f3xia)))))))
                            g$f$22412$f3xia)
                          g$x$22409$f3xia)))))
                   (g$quasivector$22333$f3xia
                     (case-lambda
                       ((g$x$22384$f3xia)
                        ((case-lambda
                           ((g$pat-x$22385$f3xia)
                            ((case-lambda
                               ((g$t$22386$f3xia)
                                ((case-lambda
                                   ((g$ls/false$22387$f3xia)
                                    (if g$ls/false$22387$f3xia
                                      (apply
                                        (case-lambda
                                          ((g$x*$22388$f3xia)
                                           (list
                                             (g$scheme-stx$21250$f3xia
                                               'quote)
                                             (g$list->vector$16003$f3xia
                                               g$x*$22388$f3xia))))
                                        g$ls/false$22387$f3xia)
                                      ((case-lambda
                                         ((g$t$22389$f3xia)
                                          ((case-lambda
                                             ((g$ls/false$22390$f3xia)
                                              (if g$ls/false$22390$f3xia
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$22391$f3xia
                                                                 (case-lambda
                                                                   ((g$x$22392$f3xia
                                                                      g$k$22393$f3xia)
                                                                    ((case-lambda
                                                                       ((g$t$22394$f3xia)
                                                                        ((case-lambda
                                                                           ((g$ls/false$22395$f3xia)
                                                                            (if g$ls/false$22395$f3xia
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$22396$f3xia)
                                                                                   (g$k$22393$f3xia
                                                                                     (g$map$15550$f3xia
                                                                                       (case-lambda
                                                                                         ((g$x$22397$f3xia)
                                                                                          (list
                                                                                            (g$scheme-stx$21250$f3xia
                                                                                              'quote)
                                                                                            g$x$22397$f3xia)))
                                                                                       g$x*$22396$f3xia))))
                                                                                g$ls/false$22395$f3xia)
                                                                              ((case-lambda
                                                                                 ((g$t$22398$f3xia)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$22399$f3xia)
                                                                                      (if g$ls/false$22399$f3xia
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$22400$f3xia)
                                                                                             (g$k$22393$f3xia
                                                                                               g$x*$22400$f3xia)))
                                                                                          g$ls/false$22399$f3xia)
                                                                                        ((case-lambda
                                                                                           ((g$t$22401$f3xia)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$22402$f3xia)
                                                                                                (if g$ls/false$22402$f3xia
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$22403$f3xia
                                                                                                         g$y$22404$f3xia)
                                                                                                       (g$f$22391$f3xia
                                                                                                         g$y$22404$f3xia
                                                                                                         (case-lambda
                                                                                                           ((g$ls$22405$f3xia)
                                                                                                            (g$k$22393$f3xia
                                                                                                              (cons
                                                                                                                g$x$22403$f3xia
                                                                                                                g$ls$22405$f3xia)))))))
                                                                                                    g$ls/false$22402$f3xia)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$22406$f3xia)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$22407$f3xia)
                                                                                                          (if g$ls/false$22407$f3xia
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$21250$f3xia
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$22385$f3xia)))
                                                                                                              g$ls/false$22407$f3xia)
                                                                                                            (g$syntax-violation$21427$f3xia
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$22406$f3xia))))
                                                                                                       (g$syntax-dispatch$21307$f3xia
                                                                                                         g$t$22406$f3xia
                                                                                                         '_))))
                                                                                                   g$t$22401$f3xia))))
                                                                                             (g$syntax-dispatch$21307$f3xia
                                                                                               g$t$22401$f3xia
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$22398$f3xia))))
                                                                                   (g$syntax-dispatch$21307$f3xia
                                                                                     g$t$22398$f3xia
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$22394$f3xia))))
                                                                         (g$syntax-dispatch$21307$f3xia
                                                                           g$t$22394$f3xia
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$22392$f3xia)))))
                                                        g$f$22391$f3xia)
                                                      g$x$22384$f3xia
                                                      (case-lambda
                                                        ((g$ls$22408$f3xia)
                                                         (g$cons*$15552$f3xia
                                                           (g$scheme-stx$21250$f3xia
                                                             'vector)
                                                           g$ls$22408$f3xia))))))
                                                  g$ls/false$22390$f3xia)
                                                (g$syntax-violation$21427$f3xia
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$22389$f3xia))))
                                           (g$syntax-dispatch$21307$f3xia
                                             g$t$22389$f3xia
                                             '_))))
                                       g$t$22386$f3xia))))
                                 (g$syntax-dispatch$21307$f3xia
                                   g$t$22386$f3xia
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$22385$f3xia)))
                         g$x$22384$f3xia))))
                   (g$vquasi$22334$f3xia
                     (case-lambda
                       ((g$p$22367$f3xia g$lev$22368$f3xia)
                        ((case-lambda
                           ((g$t$22369$f3xia)
                            ((case-lambda
                               ((g$ls/false$22370$f3xia)
                                (if g$ls/false$22370$f3xia
                                  (apply
                                    (case-lambda
                                      ((g$p$22371$f3xia g$q$22372$f3xia)
                                       ((case-lambda
                                          ((g$t$22373$f3xia)
                                           ((case-lambda
                                              ((g$ls/false$22374$f3xia)
                                               (if g$ls/false$22374$f3xia
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$22375$f3xia)
                                                      (if (g$=$17038$f3xia
                                                            g$lev$22368$f3xia
                                                            '0)
                                                        (g$quasicons*$22330$f3xia
                                                          g$p$22375$f3xia
                                                          (g$vquasi$22334$f3xia
                                                            g$q$22372$f3xia
                                                            g$lev$22368$f3xia))
                                                        (g$quasicons$22331$f3xia
                                                          (g$quasicons$22331$f3xia
                                                            (g$datum$22295$f3xia
                                                              'unquote)
                                                            (g$quasi$22335$f3xia
                                                              g$p$22375$f3xia
                                                              (- g$lev$22368$f3xia
                                                                 '1)))
                                                          (g$vquasi$22334$f3xia
                                                            g$q$22372$f3xia
                                                            g$lev$22368$f3xia)))))
                                                   g$ls/false$22374$f3xia)
                                                 ((case-lambda
                                                    ((g$t$22376$f3xia)
                                                     ((case-lambda
                                                        ((g$ls/false$22377$f3xia)
                                                         (if g$ls/false$22377$f3xia
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$22378$f3xia)
                                                                (if (g$=$17038$f3xia
                                                                      g$lev$22368$f3xia
                                                                      '0)
                                                                  (g$quasiappend$22332$f3xia
                                                                    g$p$22378$f3xia
                                                                    (g$vquasi$22334$f3xia
                                                                      g$q$22372$f3xia
                                                                      g$lev$22368$f3xia))
                                                                  (g$quasicons$22331$f3xia
                                                                    (g$quasicons$22331$f3xia
                                                                      (g$datum$22295$f3xia
                                                                        'unquote-splicing)
                                                                      (g$quasi$22335$f3xia
                                                                        g$p$22378$f3xia
                                                                        (- g$lev$22368$f3xia
                                                                           '1)))
                                                                    (g$vquasi$22334$f3xia
                                                                      g$q$22372$f3xia
                                                                      g$lev$22368$f3xia)))))
                                                             g$ls/false$22377$f3xia)
                                                           ((case-lambda
                                                              ((g$t$22379$f3xia)
                                                               ((case-lambda
                                                                  ((g$ls/false$22380$f3xia)
                                                                   (if g$ls/false$22380$f3xia
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$22381$f3xia)
                                                                          (g$quasicons$22331$f3xia
                                                                            (g$quasi$22335$f3xia
                                                                              g$p$22381$f3xia
                                                                              g$lev$22368$f3xia)
                                                                            (g$vquasi$22334$f3xia
                                                                              g$q$22372$f3xia
                                                                              g$lev$22368$f3xia))))
                                                                       g$ls/false$22380$f3xia)
                                                                     (g$syntax-violation$21427$f3xia
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$22379$f3xia))))
                                                                (g$syntax-dispatch$21307$f3xia
                                                                  g$t$22379$f3xia
                                                                  'any))))
                                                            g$t$22376$f3xia))))
                                                      (g$syntax-dispatch$21307$f3xia
                                                        g$t$22376$f3xia
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$22373$f3xia))))
                                            (g$syntax-dispatch$21307$f3xia
                                              g$t$22373$f3xia
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$22371$f3xia)))
                                    g$ls/false$22370$f3xia)
                                  ((case-lambda
                                     ((g$t$22382$f3xia)
                                      ((case-lambda
                                         ((g$ls/false$22383$f3xia)
                                          (if g$ls/false$22383$f3xia
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$21250$f3xia
                                                     'quote)
                                                   '())))
                                              g$ls/false$22383$f3xia)
                                            (g$syntax-violation$21427$f3xia
                                              '#f
                                              '"invalid syntax"
                                              g$t$22382$f3xia))))
                                       (g$syntax-dispatch$21307$f3xia
                                         g$t$22382$f3xia
                                         '()))))
                                   g$t$22369$f3xia))))
                             (g$syntax-dispatch$21307$f3xia
                               g$t$22369$f3xia
                               '(any . any)))))
                         g$p$22367$f3xia))))
                   (g$quasi$22335$f3xia
                     (case-lambda
                       ((g$p$22340$f3xia g$lev$22341$f3xia)
                        ((case-lambda
                           ((g$t$22342$f3xia)
                            ((case-lambda
                               ((g$ls/false$22343$f3xia)
                                (if g$ls/false$22343$f3xia
                                  (apply
                                    (case-lambda
                                      ((g$p$22344$f3xia)
                                       (if (g$=$17038$f3xia
                                             g$lev$22341$f3xia
                                             '0)
                                         g$p$22344$f3xia
                                         (g$quasicons$22331$f3xia
                                           (g$datum$22295$f3xia
                                             'unquote)
                                           (g$quasi$22335$f3xia
                                             (list g$p$22344$f3xia)
                                             (- g$lev$22341$f3xia
                                                '1))))))
                                    g$ls/false$22343$f3xia)
                                  ((case-lambda
                                     ((g$t$22345$f3xia)
                                      ((case-lambda
                                         ((g$ls/false$22346$f3xia)
                                          (if g$ls/false$22346$f3xia
                                            (apply
                                              (case-lambda
                                                ((g$p$22347$f3xia
                                                   g$q$22348$f3xia)
                                                 (if (g$=$17038$f3xia
                                                       g$lev$22341$f3xia
                                                       '0)
                                                   (g$quasicons*$22330$f3xia
                                                     g$p$22347$f3xia
                                                     (g$quasi$22335$f3xia
                                                       g$q$22348$f3xia
                                                       g$lev$22341$f3xia))
                                                   (g$quasicons$22331$f3xia
                                                     (g$quasicons$22331$f3xia
                                                       (g$datum$22295$f3xia
                                                         'unquote)
                                                       (g$quasi$22335$f3xia
                                                         g$p$22347$f3xia
                                                         (- g$lev$22341$f3xia
                                                            '1)))
                                                     (g$quasi$22335$f3xia
                                                       g$q$22348$f3xia
                                                       g$lev$22341$f3xia)))))
                                              g$ls/false$22346$f3xia)
                                            ((case-lambda
                                               ((g$t$22349$f3xia)
                                                ((case-lambda
                                                   ((g$ls/false$22350$f3xia)
                                                    (if g$ls/false$22350$f3xia
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$22351$f3xia
                                                             g$q$22352$f3xia)
                                                           (if (g$=$17038$f3xia
                                                                 g$lev$22341$f3xia
                                                                 '0)
                                                             (g$quasiappend$22332$f3xia
                                                               g$p$22351$f3xia
                                                               (g$quasi$22335$f3xia
                                                                 g$q$22352$f3xia
                                                                 g$lev$22341$f3xia))
                                                             (g$quasicons$22331$f3xia
                                                               (g$quasicons$22331$f3xia
                                                                 (g$datum$22295$f3xia
                                                                   'unquote-splicing)
                                                                 (g$quasi$22335$f3xia
                                                                   g$p$22351$f3xia
                                                                   (- g$lev$22341$f3xia
                                                                      '1)))
                                                               (g$quasi$22335$f3xia
                                                                 g$q$22352$f3xia
                                                                 g$lev$22341$f3xia)))))
                                                        g$ls/false$22350$f3xia)
                                                      ((case-lambda
                                                         ((g$t$22353$f3xia)
                                                          ((case-lambda
                                                             ((g$ls/false$22354$f3xia)
                                                              (if g$ls/false$22354$f3xia
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$22355$f3xia)
                                                                     (g$quasicons$22331$f3xia
                                                                       (g$datum$22295$f3xia
                                                                         'quasiquote)
                                                                       (g$quasi$22335$f3xia
                                                                         (list
                                                                           g$p$22355$f3xia)
                                                                         (+ g$lev$22341$f3xia
                                                                            '1)))))
                                                                  g$ls/false$22354$f3xia)
                                                                ((case-lambda
                                                                   ((g$t$22356$f3xia)
                                                                    ((case-lambda
                                                                       ((g$ls/false$22357$f3xia)
                                                                        (if g$ls/false$22357$f3xia
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$22358$f3xia
                                                                                 g$q$22359$f3xia)
                                                                               (g$quasicons$22331$f3xia
                                                                                 (g$quasi$22335$f3xia
                                                                                   g$p$22358$f3xia
                                                                                   g$lev$22341$f3xia)
                                                                                 (g$quasi$22335$f3xia
                                                                                   g$q$22359$f3xia
                                                                                   g$lev$22341$f3xia))))
                                                                            g$ls/false$22357$f3xia)
                                                                          ((case-lambda
                                                                             ((g$t$22360$f3xia)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$22361$f3xia)
                                                                                  (if (if g$ls/false$22361$f3xia
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$22362$f3xia)
                                                                                               (not (g$stx?$20781$f3xia
                                                                                                      g$x$22362$f3xia))))
                                                                                            g$ls/false$22361$f3xia))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$22363$f3xia)
                                                                                         (g$quasivector$22333$f3xia
                                                                                           (g$vquasi$22334$f3xia
                                                                                             g$x$22363$f3xia
                                                                                             g$lev$22341$f3xia))))
                                                                                      g$ls/false$22361$f3xia)
                                                                                    ((case-lambda
                                                                                       ((g$t$22364$f3xia)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$22365$f3xia)
                                                                                            (if g$ls/false$22365$f3xia
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$22366$f3xia)
                                                                                                   (list
                                                                                                     (g$scheme-stx$21250$f3xia
                                                                                                       'quote)
                                                                                                     g$p$22366$f3xia)))
                                                                                                g$ls/false$22365$f3xia)
                                                                                              (g$syntax-violation$21427$f3xia
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$22364$f3xia))))
                                                                                         (g$syntax-dispatch$21307$f3xia
                                                                                           g$t$22364$f3xia
                                                                                           'any))))
                                                                                     g$t$22360$f3xia))))
                                                                               (g$syntax-dispatch$21307$f3xia
                                                                                 g$t$22360$f3xia
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$22356$f3xia))))
                                                                     (g$syntax-dispatch$21307$f3xia
                                                                       g$t$22356$f3xia
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$22353$f3xia))))
                                                           (g$syntax-dispatch$21307$f3xia
                                                             g$t$22353$f3xia
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$22349$f3xia))))
                                                 (g$syntax-dispatch$21307$f3xia
                                                   g$t$22349$f3xia
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$22345$f3xia))))
                                       (g$syntax-dispatch$21307$f3xia
                                         g$t$22345$f3xia
                                         '((#(scheme-id unquote)
                                            .
                                            each-any)
                                           .
                                           any)))))
                                   g$t$22342$f3xia))))
                             (g$syntax-dispatch$21307$f3xia
                               g$t$22342$f3xia
                               '(#(scheme-id unquote) any)))))
                         g$p$22340$f3xia)))))
           (case-lambda
             ((g$x$22336$f3xia)
              ((case-lambda
                 ((g$t$22337$f3xia)
                  ((case-lambda
                     ((g$ls/false$22338$f3xia)
                      (if g$ls/false$22338$f3xia
                        (apply
                          (case-lambda
                            ((g$e$22339$f3xia)
                             (g$quasi$22335$f3xia g$e$22339$f3xia '0)))
                          g$ls/false$22338$f3xia)
                        (g$syntax-violation$21427$f3xia
                          '#f
                          '"invalid syntax"
                          g$t$22337$f3xia))))
                   (g$syntax-dispatch$21307$f3xia
                     g$t$22337$f3xia
                     '(_ any)))))
               g$x$22336$f3xia))))))))
   (g$quasisyntax-macro$21299$f3xia
     g$quasisyntax-macro$24898$f3xia
     ((case-lambda
        (()
         (letrec* ((g$quasi$22446$f3xia
                     (case-lambda
                       ((g$p$22460$f3xia g$lev$22461$f3xia)
                        ((case-lambda
                           ((g$t$22462$f3xia)
                            ((case-lambda
                               ((g$ls/false$22463$f3xia)
                                (if g$ls/false$22463$f3xia
                                  (apply
                                    (case-lambda
                                      ((g$p$22464$f3xia)
                                       (if (g$=$17038$f3xia
                                             g$lev$22461$f3xia
                                             '0)
                                         ((case-lambda
                                            ((g$g$22465$f3xia)
                                             (values
                                               (list g$g$22465$f3xia)
                                               (list g$p$22464$f3xia)
                                               g$g$22465$f3xia)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$22446$f3xia
                                                g$p$22464$f3xia
                                                (- g$lev$22461$f3xia
                                                   '1))))
                                           (case-lambda
                                             ((g$lhs*$22469$f3xia
                                                g$rhs*$22470$f3xia
                                                g$p$22471$f3xia)
                                              ((case-lambda
                                                 ((g$p$22472$f3xia
                                                    g$rhs*$22473$f3xia
                                                    g$lhs*$22474$f3xia)
                                                  (values
                                                    g$lhs*$22474$f3xia
                                                    g$rhs*$22473$f3xia
                                                    (list
                                                      'unsyntax
                                                      g$p$22472$f3xia))))
                                               g$p$22471$f3xia
                                               g$rhs*$22470$f3xia
                                               g$lhs*$22469$f3xia)))))))
                                    g$ls/false$22463$f3xia)
                                  ((case-lambda
                                     ((g$t$22475$f3xia)
                                      ((case-lambda
                                         ((g$ls/false$22476$f3xia)
                                          (if (if g$ls/false$22476$f3xia
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (g$=$17038$f3xia
                                                         g$lev$22461$f3xia
                                                         '0)))
                                                    g$ls/false$22476$f3xia))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$21427$f3xia
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$22460$f3xia)))
                                              g$ls/false$22476$f3xia)
                                            ((case-lambda
                                               ((g$t$22477$f3xia)
                                                ((case-lambda
                                                   ((g$ls/false$22478$f3xia)
                                                    (if g$ls/false$22478$f3xia
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$22479$f3xia
                                                             g$q$22480$f3xia)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$22446$f3xia
                                                                  g$q$22480$f3xia
                                                                  g$lev$22461$f3xia)))
                                                             (case-lambda
                                                               ((g$lhs*$22484$f3xia
                                                                  g$rhs*$22485$f3xia
                                                                  g$q$22486$f3xia)
                                                                ((case-lambda
                                                                   ((g$q$22487$f3xia
                                                                      g$rhs*$22488$f3xia
                                                                      g$lhs*$22489$f3xia)
                                                                    (if (g$=$17038$f3xia
                                                                          g$lev$22461$f3xia
                                                                          '0)
                                                                      ((case-lambda
                                                                         ((g$g*$22490$f3xia)
                                                                          (values
                                                                            (g$append$15556$f3xia
                                                                              g$g*$22490$f3xia
                                                                              g$lhs*$22489$f3xia)
                                                                            (g$append$15556$f3xia
                                                                              g$p*$22479$f3xia
                                                                              g$rhs*$22488$f3xia)
                                                                            (g$append$15556$f3xia
                                                                              g$g*$22490$f3xia
                                                                              g$q$22487$f3xia))))
                                                                       (g$map$15550$f3xia
                                                                         (case-lambda
                                                                           ((g$x$22491$f3xia)
                                                                            (gensym)))
                                                                         g$p*$22479$f3xia))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$22446$f3xia
                                                                             g$p*$22479$f3xia
                                                                             (- g$lev$22461$f3xia
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$22495$f3xia
                                                                             g$rhs2*$22496$f3xia
                                                                             g$p*$22497$f3xia)
                                                                           ((case-lambda
                                                                              ((g$p*$22498$f3xia
                                                                                 g$rhs2*$22499$f3xia
                                                                                 g$lhs2*$22500$f3xia)
                                                                               (values
                                                                                 (g$append$15556$f3xia
                                                                                   g$lhs2*$22500$f3xia
                                                                                   g$lhs*$22489$f3xia)
                                                                                 (g$append$15556$f3xia
                                                                                   g$rhs2*$22499$f3xia
                                                                                   g$rhs*$22488$f3xia)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$22498$f3xia)
                                                                                   g$q$22487$f3xia))))
                                                                            g$p*$22497$f3xia
                                                                            g$rhs2*$22496$f3xia
                                                                            g$lhs2*$22495$f3xia)))))))
                                                                 g$q$22486$f3xia
                                                                 g$rhs*$22485$f3xia
                                                                 g$lhs*$22484$f3xia))))))
                                                        g$ls/false$22478$f3xia)
                                                      ((case-lambda
                                                         ((g$t$22501$f3xia)
                                                          ((case-lambda
                                                             ((g$ls/false$22502$f3xia)
                                                              (if g$ls/false$22502$f3xia
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$22503$f3xia
                                                                       g$q$22504$f3xia)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$22446$f3xia
                                                                            g$q$22504$f3xia
                                                                            g$lev$22461$f3xia)))
                                                                       (case-lambda
                                                                         ((g$lhs*$22508$f3xia
                                                                            g$rhs*$22509$f3xia
                                                                            g$q$22510$f3xia)
                                                                          ((case-lambda
                                                                             ((g$q$22511$f3xia
                                                                                g$rhs*$22512$f3xia
                                                                                g$lhs*$22513$f3xia)
                                                                              (if (g$=$17038$f3xia
                                                                                    g$lev$22461$f3xia
                                                                                    '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$22514$f3xia)
                                                                                    (values
                                                                                      (g$append$15556$f3xia
                                                                                        (g$map$15550$f3xia
                                                                                          (case-lambda
                                                                                            ((g$g$22515$f3xia)
                                                                                             (cons
                                                                                               g$g$22515$f3xia
                                                                                               '(...))))
                                                                                          g$g*$22514$f3xia)
                                                                                        g$lhs*$22513$f3xia)
                                                                                      (g$append$15556$f3xia
                                                                                        g$p*$22503$f3xia
                                                                                        g$rhs*$22512$f3xia)
                                                                                      (g$append$15556$f3xia
                                                                                        (apply
                                                                                          g$append$15556$f3xia
                                                                                          (g$map$15550$f3xia
                                                                                            (case-lambda
                                                                                              ((g$g$22516$f3xia)
                                                                                               (cons
                                                                                                 g$g$22516$f3xia
                                                                                                 '(...))))
                                                                                            g$g*$22514$f3xia))
                                                                                        g$q$22511$f3xia))))
                                                                                 (g$map$15550$f3xia
                                                                                   (case-lambda
                                                                                     ((g$x$22517$f3xia)
                                                                                      (gensym)))
                                                                                   g$p*$22503$f3xia))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$22446$f3xia
                                                                                       g$p*$22503$f3xia
                                                                                       (- g$lev$22461$f3xia
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$22521$f3xia
                                                                                       g$rhs2*$22522$f3xia
                                                                                       g$p*$22523$f3xia)
                                                                                     ((case-lambda
                                                                                        ((g$p*$22524$f3xia
                                                                                           g$rhs2*$22525$f3xia
                                                                                           g$lhs2*$22526$f3xia)
                                                                                         (values
                                                                                           (g$append$15556$f3xia
                                                                                             g$lhs2*$22526$f3xia
                                                                                             g$lhs*$22513$f3xia)
                                                                                           (g$append$15556$f3xia
                                                                                             g$rhs2*$22525$f3xia
                                                                                             g$rhs*$22512$f3xia)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$22524$f3xia)
                                                                                             g$q$22511$f3xia))))
                                                                                      g$p*$22523$f3xia
                                                                                      g$rhs2*$22522$f3xia
                                                                                      g$lhs2*$22521$f3xia)))))))
                                                                           g$q$22510$f3xia
                                                                           g$rhs*$22509$f3xia
                                                                           g$lhs*$22508$f3xia))))))
                                                                  g$ls/false$22502$f3xia)
                                                                ((case-lambda
                                                                   ((g$t$22527$f3xia)
                                                                    ((case-lambda
                                                                       ((g$ls/false$22528$f3xia)
                                                                        (if (if g$ls/false$22528$f3xia
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$=$17038$f3xia
                                                                                       g$lev$22461$f3xia
                                                                                       '0)))
                                                                                  g$ls/false$22528$f3xia))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$21427$f3xia
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$22460$f3xia)))
                                                                            g$ls/false$22528$f3xia)
                                                                          ((case-lambda
                                                                             ((g$t$22529$f3xia)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$22530$f3xia)
                                                                                  (if g$ls/false$22530$f3xia
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$22531$f3xia)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$22446$f3xia
                                                                                                g$p$22531$f3xia
                                                                                                (+ g$lev$22461$f3xia
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$22535$f3xia
                                                                                                g$rhs*$22536$f3xia
                                                                                                g$p$22537$f3xia)
                                                                                              ((case-lambda
                                                                                                 ((g$p$22538$f3xia
                                                                                                    g$rhs*$22539$f3xia
                                                                                                    g$lhs*$22540$f3xia)
                                                                                                  (values
                                                                                                    g$lhs*$22540$f3xia
                                                                                                    g$rhs*$22539$f3xia
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$22538$f3xia))))
                                                                                               g$p$22537$f3xia
                                                                                               g$rhs*$22536$f3xia
                                                                                               g$lhs*$22535$f3xia))))))
                                                                                      g$ls/false$22530$f3xia)
                                                                                    ((case-lambda
                                                                                       ((g$t$22541$f3xia)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$22542$f3xia)
                                                                                            (if g$ls/false$22542$f3xia
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$22543$f3xia
                                                                                                     g$q$22544$f3xia)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$22446$f3xia
                                                                                                          g$p$22543$f3xia
                                                                                                          g$lev$22461$f3xia)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$22551$f3xia
                                                                                                          g$rhs*$22552$f3xia
                                                                                                          g$p$22553$f3xia)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$22446$f3xia
                                                                                                               g$q$22544$f3xia
                                                                                                               g$lev$22461$f3xia)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$22554$f3xia
                                                                                                               g$rhs2*$22555$f3xia
                                                                                                               g$q$22556$f3xia)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$22557$f3xia
                                                                                                                   g$rhs2*$22558$f3xia
                                                                                                                   g$lhs2*$22559$f3xia
                                                                                                                   g$p$22560$f3xia
                                                                                                                   g$rhs*$22561$f3xia
                                                                                                                   g$lhs*$22562$f3xia)
                                                                                                                 (values
                                                                                                                   (g$append$15556$f3xia
                                                                                                                     g$lhs2*$22559$f3xia
                                                                                                                     g$lhs*$22562$f3xia)
                                                                                                                   (g$append$15556$f3xia
                                                                                                                     g$rhs2*$22558$f3xia
                                                                                                                     g$rhs*$22561$f3xia)
                                                                                                                   (cons
                                                                                                                     g$p$22560$f3xia
                                                                                                                     g$q$22557$f3xia))))
                                                                                                              g$q$22556$f3xia
                                                                                                              g$rhs2*$22555$f3xia
                                                                                                              g$lhs2*$22554$f3xia
                                                                                                              g$p$22553$f3xia
                                                                                                              g$rhs*$22552$f3xia
                                                                                                              g$lhs*$22551$f3xia)))))))))
                                                                                                g$ls/false$22542$f3xia)
                                                                                              ((case-lambda
                                                                                                 ((g$t$22563$f3xia)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$22564$f3xia)
                                                                                                      (if g$ls/false$22564$f3xia
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$22565$f3xia)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$22446$f3xia
                                                                                                                    g$x*$22565$f3xia
                                                                                                                    g$lev$22461$f3xia)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$22569$f3xia
                                                                                                                    g$rhs*$22570$f3xia
                                                                                                                    g$x*$22571$f3xia)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$22572$f3xia
                                                                                                                        g$rhs*$22573$f3xia
                                                                                                                        g$lhs*$22574$f3xia)
                                                                                                                      (values
                                                                                                                        g$lhs*$22574$f3xia
                                                                                                                        g$rhs*$22573$f3xia
                                                                                                                        (g$list->vector$16003$f3xia
                                                                                                                          g$x*$22572$f3xia))))
                                                                                                                   g$x*$22571$f3xia
                                                                                                                   g$rhs*$22570$f3xia
                                                                                                                   g$lhs*$22569$f3xia))))))
                                                                                                          g$ls/false$22564$f3xia)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$22575$f3xia)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$22576$f3xia)
                                                                                                                (if g$ls/false$22576$f3xia
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$22460$f3xia)))
                                                                                                                    g$ls/false$22576$f3xia)
                                                                                                                  (g$syntax-violation$21427$f3xia
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$22575$f3xia))))
                                                                                                             (g$syntax-dispatch$21307$f3xia
                                                                                                               g$t$22575$f3xia
                                                                                                               '_))))
                                                                                                         g$t$22563$f3xia))))
                                                                                                   (g$syntax-dispatch$21307$f3xia
                                                                                                     g$t$22563$f3xia
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$22541$f3xia))))
                                                                                         (g$syntax-dispatch$21307$f3xia
                                                                                           g$t$22541$f3xia
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$22529$f3xia))))
                                                                               (g$syntax-dispatch$21307$f3xia
                                                                                 g$t$22529$f3xia
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$22527$f3xia))))
                                                                     (g$syntax-dispatch$21307$f3xia
                                                                       g$t$22527$f3xia
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$22501$f3xia))))
                                                           (g$syntax-dispatch$21307$f3xia
                                                             g$t$22501$f3xia
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$22477$f3xia))))
                                                 (g$syntax-dispatch$21307$f3xia
                                                   g$t$22477$f3xia
                                                   '((#(scheme-id
                                                        unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$22475$f3xia))))
                                       (g$syntax-dispatch$21307$f3xia
                                         g$t$22475$f3xia
                                         '#(scheme-id unsyntax)))))
                                   g$t$22462$f3xia))))
                             (g$syntax-dispatch$21307$f3xia
                               g$t$22462$f3xia
                               '(#(scheme-id unsyntax) any)))))
                         g$p$22460$f3xia)))))
           (case-lambda
             ((g$x$22447$f3xia)
              ((case-lambda
                 ((g$t$22448$f3xia)
                  ((case-lambda
                     ((g$ls/false$22449$f3xia)
                      (if g$ls/false$22449$f3xia
                        (apply
                          (case-lambda
                            ((g$e$22450$f3xia)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$quasi$22446$f3xia
                                    g$e$22450$f3xia
                                    '0)))
                               (case-lambda
                                 ((g$lhs*$22454$f3xia
                                    g$rhs*$22455$f3xia
                                    g$v$22456$f3xia)
                                  ((case-lambda
                                     ((g$v$22457$f3xia
                                        g$rhs*$22458$f3xia
                                        g$lhs*$22459$f3xia)
                                      (g$bless$21270$f3xia
                                        (list
                                          'syntax-case
                                          (cons
                                            'list
                                            g$rhs*$22458$f3xia)
                                          '()
                                          (list
                                            g$lhs*$22459$f3xia
                                            (list
                                              'syntax
                                              g$v$22457$f3xia))))))
                                   g$v$22456$f3xia
                                   g$rhs*$22455$f3xia
                                   g$lhs*$22454$f3xia))))))
                          g$ls/false$22449$f3xia)
                        (g$syntax-violation$21427$f3xia
                          '#f
                          '"invalid syntax"
                          g$t$22448$f3xia))))
                   (g$syntax-dispatch$21307$f3xia
                     g$t$22448$f3xia
                     '(_ any)))))
               g$x$22447$f3xia))))))))
   (g$define-struct-macro$21300$f3xia
     g$define-struct-macro$24899$f3xia
     (case-lambda
       ((g$stx$22577$f3xia)
        (g$syntax-violation$21427$f3xia
          '#f
          '"define-struct not supported"
          g$stx$22577$f3xia))))
   (g$define-record-type-macro$21301$f3xia
     g$define-record-type-macro$24900$f3xia
     (case-lambda
       ((g$x$22578$f3xia)
        (letrec* ((g$id$22579$f3xia
                    (case-lambda
                      ((g$ctxt$22831$f3xia . g$str*$22832$f3xia)
                       (g$datum->syntax$21429$f3xia
                         g$ctxt$22831$f3xia
                         (g$string->symbol$15997$f3xia
                           (apply
                             g$string-append$15994$f3xia
                             (g$map$15550$f3xia
                               (case-lambda
                                 ((g$x$22833$f3xia)
                                  (if (g$symbol?$15976$f3xia
                                        g$x$22833$f3xia)
                                    (g$symbol->string$15996$f3xia
                                      g$x$22833$f3xia)
                                    (if (g$string?$15972$f3xia
                                          g$x$22833$f3xia)
                                      g$x$22833$f3xia
                                      ((case-lambda
                                         (()
                                          (begin
                                            '#f
                                            (g$assertion-violation$12459$f3xia
                                              'define-record-type
                                              '"BUG")))))))))
                               g$str*$22832$f3xia)))))))
                  (g$get-record-name$22580$f3xia
                    (case-lambda
                      ((g$spec$22822$f3xia)
                       ((case-lambda
                          ((g$t$22823$f3xia)
                           ((case-lambda
                              ((g$ls/false$22824$f3xia)
                               (if g$ls/false$22824$f3xia
                                 (apply
                                   (case-lambda
                                     ((g$foo$22825$f3xia
                                        g$make-foo$22826$f3xia
                                        g$foo?$22827$f3xia)
                                      g$foo$22825$f3xia))
                                   g$ls/false$22824$f3xia)
                                 ((case-lambda
                                    ((g$t$22828$f3xia)
                                     ((case-lambda
                                        ((g$ls/false$22829$f3xia)
                                         (if g$ls/false$22829$f3xia
                                           (apply
                                             (case-lambda
                                               ((g$foo$22830$f3xia)
                                                g$foo$22830$f3xia))
                                             g$ls/false$22829$f3xia)
                                           (g$syntax-violation$21427$f3xia
                                             '#f
                                             '"invalid syntax"
                                             g$t$22828$f3xia))))
                                      (g$syntax-dispatch$21307$f3xia
                                        g$t$22828$f3xia
                                        'any))))
                                  g$t$22823$f3xia))))
                            (g$syntax-dispatch$21307$f3xia
                              g$t$22823$f3xia
                              '(any any any)))))
                        g$spec$22822$f3xia))))
                  (g$get-record-constructor-name$22581$f3xia
                    (case-lambda
                      ((g$spec$22812$f3xia)
                       ((case-lambda
                          ((g$t$22813$f3xia)
                           ((case-lambda
                              ((g$ls/false$22814$f3xia)
                               (if g$ls/false$22814$f3xia
                                 (apply
                                   (case-lambda
                                     ((g$foo$22815$f3xia
                                        g$make-foo$22816$f3xia
                                        g$foo?$22817$f3xia)
                                      g$make-foo$22816$f3xia))
                                   g$ls/false$22814$f3xia)
                                 ((case-lambda
                                    ((g$t$22818$f3xia)
                                     ((case-lambda
                                        ((g$ls/false$22819$f3xia)
                                         (if (if g$ls/false$22819$f3xia
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$22820$f3xia)
                                                      (g$id?$20809$f3xia
                                                        g$foo$22820$f3xia)))
                                                   g$ls/false$22819$f3xia))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$22821$f3xia)
                                                (g$id$22579$f3xia
                                                  g$foo$22821$f3xia
                                                  '"make-"
                                                  (g$stx->datum$20820$f3xia
                                                    g$foo$22821$f3xia))))
                                             g$ls/false$22819$f3xia)
                                           (g$syntax-violation$21427$f3xia
                                             '#f
                                             '"invalid syntax"
                                             g$t$22818$f3xia))))
                                      (g$syntax-dispatch$21307$f3xia
                                        g$t$22818$f3xia
                                        'any))))
                                  g$t$22813$f3xia))))
                            (g$syntax-dispatch$21307$f3xia
                              g$t$22813$f3xia
                              '(any any any)))))
                        g$spec$22812$f3xia))))
                  (g$get-record-predicate-name$22582$f3xia
                    (case-lambda
                      ((g$spec$22802$f3xia)
                       ((case-lambda
                          ((g$t$22803$f3xia)
                           ((case-lambda
                              ((g$ls/false$22804$f3xia)
                               (if g$ls/false$22804$f3xia
                                 (apply
                                   (case-lambda
                                     ((g$foo$22805$f3xia
                                        g$make-foo$22806$f3xia
                                        g$foo?$22807$f3xia)
                                      g$foo?$22807$f3xia))
                                   g$ls/false$22804$f3xia)
                                 ((case-lambda
                                    ((g$t$22808$f3xia)
                                     ((case-lambda
                                        ((g$ls/false$22809$f3xia)
                                         (if (if g$ls/false$22809$f3xia
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$22810$f3xia)
                                                      (g$id?$20809$f3xia
                                                        g$foo$22810$f3xia)))
                                                   g$ls/false$22809$f3xia))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$22811$f3xia)
                                                (g$id$22579$f3xia
                                                  g$foo$22811$f3xia
                                                  (g$stx->datum$20820$f3xia
                                                    g$foo$22811$f3xia)
                                                  '"?")))
                                             g$ls/false$22809$f3xia)
                                           (g$syntax-violation$21427$f3xia
                                             '#f
                                             '"invalid syntax"
                                             g$t$22808$f3xia))))
                                      (g$syntax-dispatch$21307$f3xia
                                        g$t$22808$f3xia
                                        'any))))
                                  g$t$22803$f3xia))))
                            (g$syntax-dispatch$21307$f3xia
                              g$t$22803$f3xia
                              '(any any any)))))
                        g$spec$22802$f3xia))))
                  (g$get-clause$22583$f3xia
                    (case-lambda
                      ((g$id$22793$f3xia g$ls$22794$f3xia)
                       ((case-lambda
                          ((g$t$22795$f3xia)
                           ((case-lambda
                              ((g$ls/false$22796$f3xia)
                               (if g$ls/false$22796$f3xia
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$22796$f3xia)
                                 ((case-lambda
                                    ((g$t$22797$f3xia)
                                     ((case-lambda
                                        ((g$ls/false$22798$f3xia)
                                         (if g$ls/false$22798$f3xia
                                           (apply
                                             (case-lambda
                                               ((g$x$22799$f3xia
                                                  g$rest$22800$f3xia
                                                  g$ls$22801$f3xia)
                                                (if (g$free-id=?$20813$f3xia
                                                      (g$bless$21270$f3xia
                                                        g$id$22793$f3xia)
                                                      g$x$22799$f3xia)
                                                  (cons
                                                    g$x$22799$f3xia
                                                    g$rest$22800$f3xia)
                                                  (g$get-clause$22583$f3xia
                                                    g$id$22793$f3xia
                                                    g$ls$22801$f3xia))))
                                             g$ls/false$22798$f3xia)
                                           (g$syntax-violation$21427$f3xia
                                             '#f
                                             '"invalid syntax"
                                             g$t$22797$f3xia))))
                                      (g$syntax-dispatch$21307$f3xia
                                        g$t$22797$f3xia
                                        '((any . any) . any)))))
                                  g$t$22795$f3xia))))
                            (g$syntax-dispatch$21307$f3xia
                              g$t$22795$f3xia
                              '()))))
                        g$ls$22794$f3xia))))
                  (g$foo-rtd-code$22584$f3xia
                    (case-lambda
                      ((g$name$22752$f3xia
                         g$clause*$22753$f3xia
                         g$parent-rtd-code$22754$f3xia)
                       (letrec* ((g$convert-field-spec*$22755$f3xia
                                   (case-lambda
                                     ((g$ls$22780$f3xia)
                                      (g$list->vector$16003$f3xia
                                        (g$map$15550$f3xia
                                          (case-lambda
                                            ((g$x$22781$f3xia)
                                             ((case-lambda
                                                ((g$t$22782$f3xia)
                                                 ((case-lambda
                                                    ((g$ls/false$22783$f3xia)
                                                     (if g$ls/false$22783$f3xia
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$22784$f3xia
                                                              g$rest$22785$f3xia)
                                                            (list
                                                              'mutable
                                                              g$name$22784$f3xia)))
                                                         g$ls/false$22783$f3xia)
                                                       ((case-lambda
                                                          ((g$t$22786$f3xia)
                                                           ((case-lambda
                                                              ((g$ls/false$22787$f3xia)
                                                               (if g$ls/false$22787$f3xia
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$22788$f3xia
                                                                        g$rest$22789$f3xia)
                                                                      (list
                                                                        'immutable
                                                                        g$name$22788$f3xia)))
                                                                   g$ls/false$22787$f3xia)
                                                                 ((case-lambda
                                                                    ((g$t$22790$f3xia)
                                                                     ((case-lambda
                                                                        ((g$ls/false$22791$f3xia)
                                                                         (if g$ls/false$22791$f3xia
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$22792$f3xia)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$22792$f3xia)))
                                                                             g$ls/false$22791$f3xia)
                                                                           (g$syntax-violation$21427$f3xia
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$22790$f3xia))))
                                                                      (g$syntax-dispatch$21307$f3xia
                                                                        g$t$22790$f3xia
                                                                        'any))))
                                                                  g$t$22786$f3xia))))
                                                            (g$syntax-dispatch$21307$f3xia
                                                              g$t$22786$f3xia
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$22782$f3xia))))
                                                  (g$syntax-dispatch$21307$f3xia
                                                    g$t$22782$f3xia
                                                    '(#(scheme-id
                                                        mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$22781$f3xia)))
                                          g$ls$22780$f3xia))))))
                         ((case-lambda
                            ((g$uid-code$22756$f3xia
                               g$sealed?$22757$f3xia
                               g$opaque?$22758$f3xia
                               g$fields$22759$f3xia)
                             (g$bless$21270$f3xia
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$22752$f3xia)
                                 g$parent-rtd-code$22754$f3xia
                                 g$uid-code$22756$f3xia
                                 g$sealed?$22757$f3xia
                                 g$opaque?$22758$f3xia
                                 g$fields$22759$f3xia))))
                          ((case-lambda
                             ((g$t$22760$f3xia)
                              ((case-lambda
                                 ((g$ls/false$22761$f3xia)
                                  (if g$ls/false$22761$f3xia
                                    (apply
                                      (case-lambda
                                        (() (list 'quote (gensym))))
                                      g$ls/false$22761$f3xia)
                                    ((case-lambda
                                       ((g$t$22762$f3xia)
                                        ((case-lambda
                                           ((g$ls/false$22763$f3xia)
                                            (if g$ls/false$22763$f3xia
                                              (apply
                                                (case-lambda
                                                  ((g$uid$22764$f3xia)
                                                   (list
                                                     'quote
                                                     g$uid$22764$f3xia)))
                                                g$ls/false$22763$f3xia)
                                              ((case-lambda
                                                 ((g$t$22765$f3xia)
                                                  ((case-lambda
                                                     ((g$ls/false$22766$f3xia)
                                                      (if g$ls/false$22766$f3xia
                                                        (apply
                                                          (case-lambda
                                                            (() '#f))
                                                          g$ls/false$22766$f3xia)
                                                        (g$syntax-violation$21427$f3xia
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$22765$f3xia))))
                                                   (g$syntax-dispatch$21307$f3xia
                                                     g$t$22765$f3xia
                                                     '_))))
                                               g$t$22762$f3xia))))
                                         (g$syntax-dispatch$21307$f3xia
                                           g$t$22762$f3xia
                                           '(_ any)))))
                                     g$t$22760$f3xia))))
                               (g$syntax-dispatch$21307$f3xia
                                 g$t$22760$f3xia
                                 '(_)))))
                           (g$get-clause$22583$f3xia
                             'nongenerative
                             g$clause*$22753$f3xia))
                          ((case-lambda
                             ((g$t$22767$f3xia)
                              ((case-lambda
                                 ((g$ls/false$22768$f3xia)
                                  (if g$ls/false$22768$f3xia
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$22768$f3xia)
                                    ((case-lambda
                                       ((g$t$22769$f3xia)
                                        ((case-lambda
                                           ((g$ls/false$22770$f3xia)
                                            (if g$ls/false$22770$f3xia
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$22770$f3xia)
                                              (g$syntax-violation$21427$f3xia
                                                '#f
                                                '"invalid syntax"
                                                g$t$22769$f3xia))))
                                         (g$syntax-dispatch$21307$f3xia
                                           g$t$22769$f3xia
                                           '_))))
                                     g$t$22767$f3xia))))
                               (g$syntax-dispatch$21307$f3xia
                                 g$t$22767$f3xia
                                 '(_ #(atom #t))))))
                           (g$get-clause$22583$f3xia
                             'sealed
                             g$clause*$22753$f3xia))
                          ((case-lambda
                             ((g$t$22771$f3xia)
                              ((case-lambda
                                 ((g$ls/false$22772$f3xia)
                                  (if g$ls/false$22772$f3xia
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$22772$f3xia)
                                    ((case-lambda
                                       ((g$t$22773$f3xia)
                                        ((case-lambda
                                           ((g$ls/false$22774$f3xia)
                                            (if g$ls/false$22774$f3xia
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$22774$f3xia)
                                              (g$syntax-violation$21427$f3xia
                                                '#f
                                                '"invalid syntax"
                                                g$t$22773$f3xia))))
                                         (g$syntax-dispatch$21307$f3xia
                                           g$t$22773$f3xia
                                           '_))))
                                     g$t$22771$f3xia))))
                               (g$syntax-dispatch$21307$f3xia
                                 g$t$22771$f3xia
                                 '(_ #(atom #t))))))
                           (g$get-clause$22583$f3xia
                             'opaque
                             g$clause*$22753$f3xia))
                          ((case-lambda
                             ((g$t$22775$f3xia)
                              ((case-lambda
                                 ((g$ls/false$22776$f3xia)
                                  (if g$ls/false$22776$f3xia
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$22777$f3xia)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$22755$f3xia
                                             g$field-spec*$22777$f3xia))))
                                      g$ls/false$22776$f3xia)
                                    ((case-lambda
                                       ((g$t$22778$f3xia)
                                        ((case-lambda
                                           ((g$ls/false$22779$f3xia)
                                            (if g$ls/false$22779$f3xia
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$22779$f3xia)
                                              (g$syntax-violation$21427$f3xia
                                                '#f
                                                '"invalid syntax"
                                                g$t$22778$f3xia))))
                                         (g$syntax-dispatch$21307$f3xia
                                           g$t$22778$f3xia
                                           '_))))
                                     g$t$22775$f3xia))))
                               (g$syntax-dispatch$21307$f3xia
                                 g$t$22775$f3xia
                                 '(_ . each-any)))))
                           (g$get-clause$22583$f3xia
                             'fields
                             g$clause*$22753$f3xia)))))))
                  (g$parent-rtd-code$22585$f3xia
                    (case-lambda
                      ((g$clause*$22740$f3xia)
                       ((case-lambda
                          ((g$t$22741$f3xia)
                           ((case-lambda
                              ((g$ls/false$22742$f3xia)
                               (if g$ls/false$22742$f3xia
                                 (apply
                                   (case-lambda
                                     ((g$name$22743$f3xia)
                                      (list
                                        'record-type-descriptor
                                        g$name$22743$f3xia)))
                                   g$ls/false$22742$f3xia)
                                 ((case-lambda
                                    ((g$t$22744$f3xia)
                                     ((case-lambda
                                        ((g$ls/false$22745$f3xia)
                                         (if g$ls/false$22745$f3xia
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$22746$f3xia)
                                                    ((case-lambda
                                                       ((g$ls/false$22747$f3xia)
                                                        (if g$ls/false$22747$f3xia
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$22748$f3xia
                                                                 g$rcd$22749$f3xia)
                                                               g$rtd$22748$f3xia))
                                                            g$ls/false$22747$f3xia)
                                                          ((case-lambda
                                                             ((g$t$22750$f3xia)
                                                              ((case-lambda
                                                                 ((g$ls/false$22751$f3xia)
                                                                  (if g$ls/false$22751$f3xia
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$22751$f3xia)
                                                                    (g$syntax-violation$21427$f3xia
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$22750$f3xia))))
                                                               (g$syntax-dispatch$21307$f3xia
                                                                 g$t$22750$f3xia
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$22746$f3xia))))
                                                     (g$syntax-dispatch$21307$f3xia
                                                       g$t$22746$f3xia
                                                       '(_ any any)))))
                                                 (g$get-clause$22583$f3xia
                                                   'parent-rtd
                                                   g$clause*$22740$f3xia))))
                                             g$ls/false$22745$f3xia)
                                           (g$syntax-violation$21427$f3xia
                                             '#f
                                             '"invalid syntax"
                                             g$t$22744$f3xia))))
                                      (g$syntax-dispatch$21307$f3xia
                                        g$t$22744$f3xia
                                        '#(atom #f)))))
                                  g$t$22741$f3xia))))
                            (g$syntax-dispatch$21307$f3xia
                              g$t$22741$f3xia
                              '(_ any)))))
                        (g$get-clause$22583$f3xia
                          'parent
                          g$clause*$22740$f3xia)))))
                  (g$parent-rcd-code$22586$f3xia
                    (case-lambda
                      ((g$clause*$22728$f3xia)
                       ((case-lambda
                          ((g$t$22729$f3xia)
                           ((case-lambda
                              ((g$ls/false$22730$f3xia)
                               (if g$ls/false$22730$f3xia
                                 (apply
                                   (case-lambda
                                     ((g$name$22731$f3xia)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$22731$f3xia)))
                                   g$ls/false$22730$f3xia)
                                 ((case-lambda
                                    ((g$t$22732$f3xia)
                                     ((case-lambda
                                        ((g$ls/false$22733$f3xia)
                                         (if g$ls/false$22733$f3xia
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$22734$f3xia)
                                                    ((case-lambda
                                                       ((g$ls/false$22735$f3xia)
                                                        (if g$ls/false$22735$f3xia
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$22736$f3xia
                                                                 g$rcd$22737$f3xia)
                                                               g$rcd$22737$f3xia))
                                                            g$ls/false$22735$f3xia)
                                                          ((case-lambda
                                                             ((g$t$22738$f3xia)
                                                              ((case-lambda
                                                                 ((g$ls/false$22739$f3xia)
                                                                  (if g$ls/false$22739$f3xia
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$22739$f3xia)
                                                                    (g$syntax-violation$21427$f3xia
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$22738$f3xia))))
                                                               (g$syntax-dispatch$21307$f3xia
                                                                 g$t$22738$f3xia
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$22734$f3xia))))
                                                     (g$syntax-dispatch$21307$f3xia
                                                       g$t$22734$f3xia
                                                       '(_ any any)))))
                                                 (g$get-clause$22583$f3xia
                                                   'parent-rtd
                                                   g$clause*$22728$f3xia))))
                                             g$ls/false$22733$f3xia)
                                           (g$syntax-violation$21427$f3xia
                                             '#f
                                             '"invalid syntax"
                                             g$t$22732$f3xia))))
                                      (g$syntax-dispatch$21307$f3xia
                                        g$t$22732$f3xia
                                        '#(atom #f)))))
                                  g$t$22729$f3xia))))
                            (g$syntax-dispatch$21307$f3xia
                              g$t$22729$f3xia
                              '(_ any)))))
                        (g$get-clause$22583$f3xia
                          'parent
                          g$clause*$22728$f3xia)))))
                  (g$foo-rcd-code$22587$f3xia
                    (case-lambda
                      ((g$clause*$22724$f3xia
                         g$foo-rtd$22725$f3xia
                         g$protocol$22726$f3xia
                         g$parent-rcd-code$22727$f3xia)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$22725$f3xia
                         g$parent-rcd-code$22727$f3xia
                         g$protocol$22726$f3xia))))
                  (g$get-protocol-code$22588$f3xia
                    (case-lambda
                      ((g$clause*$22718$f3xia)
                       ((case-lambda
                          ((g$t$22719$f3xia)
                           ((case-lambda
                              ((g$ls/false$22720$f3xia)
                               (if g$ls/false$22720$f3xia
                                 (apply
                                   (case-lambda
                                     ((g$expr$22721$f3xia)
                                      g$expr$22721$f3xia))
                                   g$ls/false$22720$f3xia)
                                 ((case-lambda
                                    ((g$t$22722$f3xia)
                                     ((case-lambda
                                        ((g$ls/false$22723$f3xia)
                                         (if g$ls/false$22723$f3xia
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$22723$f3xia)
                                           (g$syntax-violation$21427$f3xia
                                             '#f
                                             '"invalid syntax"
                                             g$t$22722$f3xia))))
                                      (g$syntax-dispatch$21307$f3xia
                                        g$t$22722$f3xia
                                        '_))))
                                  g$t$22719$f3xia))))
                            (g$syntax-dispatch$21307$f3xia
                              g$t$22719$f3xia
                              '(_ any)))))
                        (g$get-clause$22583$f3xia
                          'protocol
                          g$clause*$22718$f3xia)))))
                  (g$get-fields$22589$f3xia
                    (case-lambda
                      ((g$clause*$22709$f3xia)
                       ((case-lambda
                          ((g$t$22710$f3xia)
                           ((case-lambda
                              ((g$ls/false$22711$f3xia)
                               (if g$ls/false$22711$f3xia
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$22711$f3xia)
                                 ((case-lambda
                                    ((g$t$22712$f3xia)
                                     ((case-lambda
                                        ((g$ls/false$22713$f3xia)
                                         (if g$ls/false$22713$f3xia
                                           (apply
                                             (case-lambda
                                               ((g$f*$22714$f3xia)
                                                g$f*$22714$f3xia))
                                             g$ls/false$22713$f3xia)
                                           ((case-lambda
                                              ((g$t$22715$f3xia)
                                               ((case-lambda
                                                  ((g$ls/false$22716$f3xia)
                                                   (if g$ls/false$22716$f3xia
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$22717$f3xia)
                                                          (g$get-fields$22589$f3xia
                                                            g$rest$22717$f3xia)))
                                                       g$ls/false$22716$f3xia)
                                                     (g$syntax-violation$21427$f3xia
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$22715$f3xia))))
                                                (g$syntax-dispatch$21307$f3xia
                                                  g$t$22715$f3xia
                                                  '(_ . any)))))
                                            g$t$22712$f3xia))))
                                      (g$syntax-dispatch$21307$f3xia
                                        g$t$22712$f3xia
                                        '((#(scheme-id fields)
                                           .
                                           each-any)
                                          .
                                          _)))))
                                  g$t$22710$f3xia))))
                            (g$syntax-dispatch$21307$f3xia
                              g$t$22710$f3xia
                              '()))))
                        g$clause*$22709$f3xia))))
                  (g$get-mutator-indices$22590$f3xia
                    (case-lambda
                      ((g$fields$22697$f3xia)
                       ((letrec ((g$f$22698$f3xia
                                   (case-lambda
                                     ((g$fields$22699$f3xia
                                        g$i$22700$f3xia)
                                      ((case-lambda
                                         ((g$t$22701$f3xia)
                                          ((case-lambda
                                             ((g$ls/false$22702$f3xia)
                                              (if g$ls/false$22702$f3xia
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$22702$f3xia)
                                                ((case-lambda
                                                   ((g$t$22703$f3xia)
                                                    ((case-lambda
                                                       ((g$ls/false$22704$f3xia)
                                                        (if g$ls/false$22704$f3xia
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$22705$f3xia)
                                                               (cons
                                                                 g$i$22700$f3xia
                                                                 (g$f$22698$f3xia
                                                                   g$rest$22705$f3xia
                                                                   (+ g$i$22700$f3xia
                                                                      '1)))))
                                                            g$ls/false$22704$f3xia)
                                                          ((case-lambda
                                                             ((g$t$22706$f3xia)
                                                              ((case-lambda
                                                                 ((g$ls/false$22707$f3xia)
                                                                  (if g$ls/false$22707$f3xia
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$22708$f3xia)
                                                                         (g$f$22698$f3xia
                                                                           g$rest$22708$f3xia
                                                                           (+ g$i$22700$f3xia
                                                                              '1))))
                                                                      g$ls/false$22707$f3xia)
                                                                    (g$syntax-violation$21427$f3xia
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$22706$f3xia))))
                                                               (g$syntax-dispatch$21307$f3xia
                                                                 g$t$22706$f3xia
                                                                 '(_ .
                                                                     any)))))
                                                           g$t$22703$f3xia))))
                                                     (g$syntax-dispatch$21307$f3xia
                                                       g$t$22703$f3xia
                                                       '((#(scheme-id
                                                            mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$22701$f3xia))))
                                           (g$syntax-dispatch$21307$f3xia
                                             g$t$22701$f3xia
                                             '()))))
                                       g$fields$22699$f3xia)))))
                          g$f$22698$f3xia)
                        g$fields$22697$f3xia
                        '0))))
                  (g$get-mutators$22591$f3xia
                    (case-lambda
                      ((g$foo$22676$f3xia g$fields$22677$f3xia)
                       (letrec* ((g$gen-name$22678$f3xia
                                   (case-lambda
                                     ((g$x$22696$f3xia)
                                      (g$datum->syntax$21429$f3xia
                                        g$foo$22676$f3xia
                                        (g$string->symbol$15997$f3xia
                                          (g$string-append$15994$f3xia
                                            (g$symbol->string$15996$f3xia
                                              (g$syntax->datum$21430$f3xia
                                                g$foo$22676$f3xia))
                                            '"-"
                                            (g$symbol->string$15996$f3xia
                                              (g$syntax->datum$21430$f3xia
                                                g$x$22696$f3xia))
                                            '"-set!")))))))
                         ((letrec ((g$f$22679$f3xia
                                     (case-lambda
                                       ((g$fields$22680$f3xia)
                                        ((case-lambda
                                           ((g$t$22681$f3xia)
                                            ((case-lambda
                                               ((g$ls/false$22682$f3xia)
                                                (if g$ls/false$22682$f3xia
                                                  (apply
                                                    (case-lambda
                                                      (() '()))
                                                    g$ls/false$22682$f3xia)
                                                  ((case-lambda
                                                     ((g$t$22683$f3xia)
                                                      ((case-lambda
                                                         ((g$ls/false$22684$f3xia)
                                                          (if g$ls/false$22684$f3xia
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$22685$f3xia
                                                                   g$accessor$22686$f3xia
                                                                   g$mutator$22687$f3xia
                                                                   g$rest$22688$f3xia)
                                                                 (cons
                                                                   g$mutator$22687$f3xia
                                                                   (g$f$22679$f3xia
                                                                     g$rest$22688$f3xia))))
                                                              g$ls/false$22684$f3xia)
                                                            ((case-lambda
                                                               ((g$t$22689$f3xia)
                                                                ((case-lambda
                                                                   ((g$ls/false$22690$f3xia)
                                                                    (if g$ls/false$22690$f3xia
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$22691$f3xia
                                                                             g$rest$22692$f3xia)
                                                                           (cons
                                                                             (g$gen-name$22678$f3xia
                                                                               g$name$22691$f3xia)
                                                                             (g$f$22679$f3xia
                                                                               g$rest$22692$f3xia))))
                                                                        g$ls/false$22690$f3xia)
                                                                      ((case-lambda
                                                                         ((g$t$22693$f3xia)
                                                                          ((case-lambda
                                                                             ((g$ls/false$22694$f3xia)
                                                                              (if g$ls/false$22694$f3xia
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$22695$f3xia)
                                                                                     (g$f$22679$f3xia
                                                                                       g$rest$22695$f3xia)))
                                                                                  g$ls/false$22694$f3xia)
                                                                                (g$syntax-violation$21427$f3xia
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$22693$f3xia))))
                                                                           (g$syntax-dispatch$21307$f3xia
                                                                             g$t$22693$f3xia
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$22689$f3xia))))
                                                                 (g$syntax-dispatch$21307$f3xia
                                                                   g$t$22689$f3xia
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$22683$f3xia))))
                                                       (g$syntax-dispatch$21307$f3xia
                                                         g$t$22683$f3xia
                                                         '((#(scheme-id
                                                              mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$22681$f3xia))))
                                             (g$syntax-dispatch$21307$f3xia
                                               g$t$22681$f3xia
                                               '()))))
                                         g$fields$22680$f3xia)))))
                            g$f$22679$f3xia)
                          g$fields$22677$f3xia)))))
                  (g$get-accessors$22592$f3xia
                    (case-lambda
                      ((g$foo$22642$f3xia g$fields$22643$f3xia)
                       (letrec* ((g$gen-name$22644$f3xia
                                   (case-lambda
                                     ((g$x$22675$f3xia)
                                      (g$datum->syntax$21429$f3xia
                                        g$foo$22642$f3xia
                                        (g$string->symbol$15997$f3xia
                                          (g$string-append$15994$f3xia
                                            (g$symbol->string$15996$f3xia
                                              (g$syntax->datum$21430$f3xia
                                                g$foo$22642$f3xia))
                                            '"-"
                                            (g$symbol->string$15996$f3xia
                                              (g$syntax->datum$21430$f3xia
                                                g$x$22675$f3xia)))))))))
                         (g$map$15550$f3xia
                           (case-lambda
                             ((g$field$22645$f3xia)
                              ((case-lambda
                                 ((g$t$22646$f3xia)
                                  ((case-lambda
                                     ((g$ls/false$22647$f3xia)
                                      (if (if g$ls/false$22647$f3xia
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$22648$f3xia
                                                     g$accessor$22649$f3xia
                                                     g$mutator$22650$f3xia)
                                                   (g$id?$20809$f3xia
                                                     g$accessor$22649$f3xia)))
                                                g$ls/false$22647$f3xia))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$22651$f3xia
                                               g$accessor$22652$f3xia
                                               g$mutator$22653$f3xia)
                                             g$accessor$22652$f3xia))
                                          g$ls/false$22647$f3xia)
                                        ((case-lambda
                                           ((g$t$22654$f3xia)
                                            ((case-lambda
                                               ((g$ls/false$22655$f3xia)
                                                (if (if g$ls/false$22655$f3xia
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$22656$f3xia
                                                               g$accessor$22657$f3xia)
                                                             (g$id?$20809$f3xia
                                                               g$accessor$22657$f3xia)))
                                                          g$ls/false$22655$f3xia))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$22658$f3xia
                                                         g$accessor$22659$f3xia)
                                                       g$accessor$22659$f3xia))
                                                    g$ls/false$22655$f3xia)
                                                  ((case-lambda
                                                     ((g$t$22660$f3xia)
                                                      ((case-lambda
                                                         ((g$ls/false$22661$f3xia)
                                                          (if (if g$ls/false$22661$f3xia
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$22662$f3xia)
                                                                       (g$id?$20809$f3xia
                                                                         g$name$22662$f3xia)))
                                                                    g$ls/false$22661$f3xia))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$22663$f3xia)
                                                                 (g$gen-name$22644$f3xia
                                                                   g$name$22663$f3xia)))
                                                              g$ls/false$22661$f3xia)
                                                            ((case-lambda
                                                               ((g$t$22664$f3xia)
                                                                ((case-lambda
                                                                   ((g$ls/false$22665$f3xia)
                                                                    (if (if g$ls/false$22665$f3xia
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$22666$f3xia)
                                                                                 (g$id?$20809$f3xia
                                                                                   g$name$22666$f3xia)))
                                                                              g$ls/false$22665$f3xia))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$22667$f3xia)
                                                                           (g$gen-name$22644$f3xia
                                                                             g$name$22667$f3xia)))
                                                                        g$ls/false$22665$f3xia)
                                                                      ((case-lambda
                                                                         ((g$t$22668$f3xia)
                                                                          ((case-lambda
                                                                             ((g$ls/false$22669$f3xia)
                                                                              (if (if g$ls/false$22669$f3xia
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$22670$f3xia)
                                                                                           (g$id?$20809$f3xia
                                                                                             g$name$22670$f3xia)))
                                                                                        g$ls/false$22669$f3xia))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$22671$f3xia)
                                                                                     (g$gen-name$22644$f3xia
                                                                                       g$name$22671$f3xia)))
                                                                                  g$ls/false$22669$f3xia)
                                                                                ((case-lambda
                                                                                   ((g$t$22672$f3xia)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$22673$f3xia)
                                                                                        (if g$ls/false$22673$f3xia
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$22674$f3xia)
                                                                                               (g$syntax-violation$21427$f3xia
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$22645$f3xia)))
                                                                                            g$ls/false$22673$f3xia)
                                                                                          (g$syntax-violation$21427$f3xia
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$22672$f3xia))))
                                                                                     (g$syntax-dispatch$21307$f3xia
                                                                                       g$t$22672$f3xia
                                                                                       'any))))
                                                                                 g$t$22668$f3xia))))
                                                                           (g$syntax-dispatch$21307$f3xia
                                                                             g$t$22668$f3xia
                                                                             'any))))
                                                                       g$t$22664$f3xia))))
                                                                 (g$syntax-dispatch$21307$f3xia
                                                                   g$t$22664$f3xia
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$22660$f3xia))))
                                                       (g$syntax-dispatch$21307$f3xia
                                                         g$t$22660$f3xia
                                                         '(#(scheme-id
                                                             mutable)
                                                           any)))))
                                                   g$t$22654$f3xia))))
                                             (g$syntax-dispatch$21307$f3xia
                                               g$t$22654$f3xia
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$22646$f3xia))))
                                   (g$syntax-dispatch$21307$f3xia
                                     g$t$22646$f3xia
                                     '(#(scheme-id mutable)
                                       any
                                       any
                                       any)))))
                               g$field$22645$f3xia)))
                           g$fields$22643$f3xia)))))
                  (g$enumerate$22593$f3xia
                    (case-lambda
                      ((g$ls$22638$f3xia)
                       ((letrec ((g$f$22639$f3xia
                                   (case-lambda
                                     ((g$ls$22640$f3xia g$i$22641$f3xia)
                                      (if (null? g$ls$22640$f3xia)
                                        '()
                                        ((case-lambda
                                           (()
                                            (begin
                                              '#f
                                              (cons
                                                g$i$22641$f3xia
                                                (g$f$22639$f3xia
                                                  (cdr g$ls$22640$f3xia)
                                                  (+ g$i$22641$f3xia
                                                     '1))))))))))))
                          g$f$22639$f3xia)
                        g$ls$22638$f3xia
                        '0))))
                  (g$do-define-record$22594$f3xia
                    (case-lambda
                      ((g$namespec$22618$f3xia g$clause*$22619$f3xia)
                       ((case-lambda
                          ((g$foo$22620$f3xia)
                           ((case-lambda
                              ((g$foo-rtd$22621$f3xia)
                               ((case-lambda
                                  ((g$foo-rcd$22622$f3xia)
                                   ((case-lambda
                                      ((g$protocol$22623$f3xia)
                                       ((case-lambda
                                          ((g$make-foo$22624$f3xia)
                                           ((case-lambda
                                              ((g$fields$22625$f3xia)
                                               ((case-lambda
                                                  ((g$idx*$22626$f3xia)
                                                   ((case-lambda
                                                      ((g$foo-x*$22627$f3xia)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$22628$f3xia)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$22629$f3xia)
                                                               ((case-lambda
                                                                  ((g$foo?$22630$f3xia)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$22631$f3xia)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$22632$f3xia)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$22633$f3xia)
                                                                               (g$bless$21270$f3xia
                                                                                 (cons
                                                                                   'begin
                                                                                   (cons
                                                                                     (list
                                                                                       'define
                                                                                       g$foo-rtd$22621$f3xia
                                                                                       g$foo-rtd-code$22631$f3xia)
                                                                                     (cons
                                                                                       (list
                                                                                         'define
                                                                                         g$protocol$22623$f3xia
                                                                                         g$protocol-code$22633$f3xia)
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rcd$22622$f3xia
                                                                                           g$foo-rcd-code$22632$f3xia)
                                                                                         (cons
                                                                                           (list
                                                                                             'define-syntax
                                                                                             g$foo$22620$f3xia
                                                                                             (list
                                                                                               'list
                                                                                               ''$rtd
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rtd$22621$f3xia)
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rcd$22622$f3xia)))
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo?$22630$f3xia
                                                                                               (list
                                                                                                 'record-predicate
                                                                                                 g$foo-rtd$22621$f3xia))
                                                                                             (cons
                                                                                               (list
                                                                                                 'define
                                                                                                 g$make-foo$22624$f3xia
                                                                                                 (list
                                                                                                   'record-constructor
                                                                                                   g$foo-rcd$22622$f3xia))
                                                                                               (g$append$15556$f3xia
                                                                                                 (g$map$15550$f3xia
                                                                                                   (case-lambda
                                                                                                     ((g$foo-x$22634$f3xia
                                                                                                        g$idx$22635$f3xia)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$foo-x$22634$f3xia
                                                                                                        (list
                                                                                                          'record-accessor
                                                                                                          g$foo-rtd$22621$f3xia
                                                                                                          g$idx$22635$f3xia))))
                                                                                                   g$foo-x*$22627$f3xia
                                                                                                   g$idx*$22626$f3xia)
                                                                                                 (g$map$15550$f3xia
                                                                                                   (case-lambda
                                                                                                     ((g$set-foo-x!$22636$f3xia
                                                                                                        g$idx$22637$f3xia)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$set-foo-x!$22636$f3xia
                                                                                                        (list
                                                                                                          'record-mutator
                                                                                                          g$foo-rtd$22621$f3xia
                                                                                                          g$idx$22637$f3xia))))
                                                                                                   g$set-foo-x!*$22628$f3xia
                                                                                                   g$set-foo-idx*$22629$f3xia))))))))))))
                                                                            (g$get-protocol-code$22588$f3xia
                                                                              g$clause*$22619$f3xia))))
                                                                        (g$foo-rcd-code$22587$f3xia
                                                                          g$clause*$22619$f3xia
                                                                          g$foo-rtd$22621$f3xia
                                                                          g$protocol$22623$f3xia
                                                                          (g$parent-rcd-code$22586$f3xia
                                                                            g$clause*$22619$f3xia)))))
                                                                    (g$foo-rtd-code$22584$f3xia
                                                                      g$foo$22620$f3xia
                                                                      g$clause*$22619$f3xia
                                                                      (g$parent-rtd-code$22585$f3xia
                                                                        g$clause*$22619$f3xia)))))
                                                                (g$get-record-predicate-name$22582$f3xia
                                                                  g$namespec$22618$f3xia))))
                                                            (g$get-mutator-indices$22590$f3xia
                                                              g$fields$22625$f3xia))))
                                                        (g$get-mutators$22591$f3xia
                                                          g$foo$22620$f3xia
                                                          g$fields$22625$f3xia))))
                                                    (g$get-accessors$22592$f3xia
                                                      g$foo$22620$f3xia
                                                      g$fields$22625$f3xia))))
                                                (g$enumerate$22593$f3xia
                                                  g$fields$22625$f3xia))))
                                            (g$get-fields$22589$f3xia
                                              g$clause*$22619$f3xia))))
                                        (g$get-record-constructor-name$22581$f3xia
                                          g$namespec$22618$f3xia))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$22580$f3xia
                          g$namespec$22618$f3xia)))))
                  (g$verify-clauses$22595$f3xia
                    (case-lambda
                      ((g$x$22600$f3xia g$cls*$22601$f3xia)
                       (letrec* ((g$valid-kwds$22602$f3xia
                                   (g$map$15550$f3xia
                                     g$bless$21270$f3xia
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$22603$f3xia
                                   (case-lambda
                                     ((g$x$22615$f3xia g$ls$22616$f3xia)
                                      (if (pair? g$ls$22616$f3xia)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$22617$f3xia)
                                              (if g$t$22617$f3xia
                                                g$t$22617$f3xia
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$22603$f3xia
                                                    g$x$22615$f3xia
                                                    (cdr g$ls$22616$f3xia))))))
                                           (g$free-id=?$20813$f3xia
                                             g$x$22615$f3xia
                                             (car g$ls$22616$f3xia))))
                                        '#f)))))
                         ((letrec ((g$f$22604$f3xia
                                     (case-lambda
                                       ((g$cls*$22605$f3xia
                                          g$seen*$22606$f3xia)
                                        (if (not (null?
                                                   g$cls*$22605$f3xia))
                                          ((case-lambda
                                             ((g$t$22607$f3xia)
                                              ((case-lambda
                                                 ((g$ls/false$22608$f3xia)
                                                  (if g$ls/false$22608$f3xia
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$22609$f3xia
                                                           g$rest$22610$f3xia)
                                                         (if ((case-lambda
                                                                ((g$t$22611$f3xia)
                                                                 (if g$t$22611$f3xia
                                                                   g$t$22611$f3xia
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$22603$f3xia
                                                                            g$kwd$22609$f3xia
                                                                            g$valid-kwds$22602$f3xia))))))
                                                              (not (g$id?$20809$f3xia
                                                                     g$kwd$22609$f3xia)))
                                                           (g$syntax-violation$21427$f3xia
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$22609$f3xia)
                                                           (if (g$bound-id-member?$20816$f3xia
                                                                 g$kwd$22609$f3xia
                                                                 g$seen*$22606$f3xia)
                                                             (g$syntax-violation$21427$f3xia
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$22600$f3xia
                                                               g$kwd$22609$f3xia)
                                                             ((case-lambda
                                                                (()
                                                                 (begin
                                                                   '#f
                                                                   (g$f$22604$f3xia
                                                                     (cdr g$cls*$22605$f3xia)
                                                                     (cons
                                                                       g$kwd$22609$f3xia
                                                                       g$seen*$22606$f3xia))))))))))
                                                      g$ls/false$22608$f3xia)
                                                    ((case-lambda
                                                       ((g$t$22612$f3xia)
                                                        ((case-lambda
                                                           ((g$ls/false$22613$f3xia)
                                                            (if g$ls/false$22613$f3xia
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$22614$f3xia)
                                                                   (g$syntax-violation$21427$f3xia
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$22614$f3xia)))
                                                                g$ls/false$22613$f3xia)
                                                              (g$syntax-violation$21427$f3xia
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$22612$f3xia))))
                                                         (g$syntax-dispatch$21307$f3xia
                                                           g$t$22612$f3xia
                                                           'any))))
                                                     g$t$22607$f3xia))))
                                               (g$syntax-dispatch$21307$f3xia
                                                 g$t$22607$f3xia
                                                 '(any . any)))))
                                           (car g$cls*$22605$f3xia))
                                          (void))))))
                            g$f$22604$f3xia)
                          g$cls*$22601$f3xia
                          '()))))))
          ((case-lambda
             ((g$t$22596$f3xia)
              ((case-lambda
                 ((g$ls/false$22597$f3xia)
                  (if g$ls/false$22597$f3xia
                    (apply
                      (case-lambda
                        ((g$namespec$22598$f3xia g$clause*$22599$f3xia)
                         (begin
                           (g$verify-clauses$22595$f3xia
                             g$x$22578$f3xia
                             g$clause*$22599$f3xia)
                           (g$do-define-record$22594$f3xia
                             g$namespec$22598$f3xia
                             g$clause*$22599$f3xia))))
                      g$ls/false$22597$f3xia)
                    (g$syntax-violation$21427$f3xia
                      '#f
                      '"invalid syntax"
                      g$t$22596$f3xia))))
               (g$syntax-dispatch$21307$f3xia
                 g$t$22596$f3xia
                 '(_ any . each-any)))))
           g$x$22578$f3xia)))))
   (g$define-condition-type-macro$21302$f3xia
     g$define-condition-type-macro$24901$f3xia
     (case-lambda
       ((g$x$22834$f3xia)
        (letrec* ((g$mkname$22835$f3xia
                    (case-lambda
                      ((g$name$22858$f3xia g$suffix$22859$f3xia)
                       (g$datum->syntax$21429$f3xia
                         g$name$22858$f3xia
                         (g$string->symbol$15997$f3xia
                           (g$string-append$15994$f3xia
                             (g$symbol->string$15996$f3xia
                               (g$syntax->datum$21430$f3xia
                                 g$name$22858$f3xia))
                             g$suffix$22859$f3xia)))))))
          ((case-lambda
             ((g$t$22836$f3xia)
              ((case-lambda
                 ((g$ls/false$22837$f3xia)
                  (if (if g$ls/false$22837$f3xia
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$22838$f3xia
                                 g$name$22839$f3xia
                                 g$super$22840$f3xia
                                 g$constructor$22841$f3xia
                                 g$predicate$22842$f3xia
                                 g$field*$22843$f3xia
                                 g$accessor*$22844$f3xia)
                               (if (g$id?$20809$f3xia
                                     g$name$22839$f3xia)
                                 (if (g$id?$20809$f3xia
                                       g$super$22840$f3xia)
                                   (if (g$id?$20809$f3xia
                                         g$constructor$22841$f3xia)
                                     (if (g$id?$20809$f3xia
                                           g$predicate$22842$f3xia)
                                       (if (g$for-all$15548$f3xia
                                             g$id?$20809$f3xia
                                             g$field*$22843$f3xia)
                                         (begin
                                           '#f
                                           (g$for-all$15548$f3xia
                                             g$id?$20809$f3xia
                                             g$accessor*$22844$f3xia))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$22837$f3xia))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$22845$f3xia
                           g$name$22846$f3xia
                           g$super$22847$f3xia
                           g$constructor$22848$f3xia
                           g$predicate$22849$f3xia
                           g$field*$22850$f3xia
                           g$accessor*$22851$f3xia)
                         ((case-lambda
                            ((g$aux-accessor*$22852$f3xia)
                             (g$bless$21270$f3xia
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$22846$f3xia
                                         g$constructor$22848$f3xia
                                         (gensym))
                                       (cons
                                         (list
                                           'parent
                                           g$super$22847$f3xia)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$15550$f3xia
                                               (case-lambda
                                                 ((g$field$22853$f3xia
                                                    g$aux$22854$f3xia)
                                                  (list
                                                    'immutable
                                                    g$field$22853$f3xia
                                                    g$aux$22854$f3xia)))
                                               g$field*$22850$f3xia
                                               g$aux-accessor*$22852$f3xia))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$22849$f3xia
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$22846$f3xia)))
                                     (g$map$15550$f3xia
                                       (case-lambda
                                         ((g$accessor$22855$f3xia
                                            g$aux$22856$f3xia)
                                          (list
                                            'define
                                            g$accessor$22855$f3xia
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$22846$f3xia)
                                              g$aux$22856$f3xia))))
                                       g$accessor*$22851$f3xia
                                       g$aux-accessor*$22852$f3xia)))))))
                          (g$map$15550$f3xia
                            (case-lambda ((g$x$22857$f3xia) (gensym)))
                            g$accessor*$22851$f3xia))))
                      g$ls/false$22837$f3xia)
                    (g$syntax-violation$21427$f3xia
                      '#f
                      '"invalid syntax"
                      g$t$22836$f3xia))))
               (g$syntax-dispatch$21307$f3xia
                 g$t$22836$f3xia
                 '(any any any any any . #(each (any any)))))))
           g$x$22834$f3xia)))))
   (g$incorrect-usage-macro$21303$f3xia
     g$incorrect-usage-macro$24902$f3xia
     (case-lambda
       ((g$e$22860$f3xia)
        (g$syntax-violation$21427$f3xia
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$22860$f3xia))))
   (g$parameterize-macro$21304$f3xia
     g$parameterize-macro$24903$f3xia
     (case-lambda
       ((g$e$22861$f3xia)
        ((case-lambda
           ((g$t$22862$f3xia)
            ((case-lambda
               ((g$ls/false$22863$f3xia)
                (if g$ls/false$22863$f3xia
                  (apply
                    (case-lambda
                      ((g$b$22864$f3xia g$b*$22865$f3xia)
                       (g$bless$21270$f3xia
                         (cons
                           'let
                           (cons
                             '()
                             (cons
                               g$b$22864$f3xia
                               g$b*$22865$f3xia))))))
                    g$ls/false$22863$f3xia)
                  ((case-lambda
                     ((g$t$22866$f3xia)
                      ((case-lambda
                         ((g$ls/false$22867$f3xia)
                          (if g$ls/false$22867$f3xia
                            (apply
                              (case-lambda
                                ((g$olhs*$22868$f3xia
                                   g$orhs*$22869$f3xia
                                   g$b$22870$f3xia
                                   g$b*$22871$f3xia)
                                 ((case-lambda
                                    ((g$lhs*$22872$f3xia
                                       g$rhs*$22873$f3xia)
                                     (g$bless$21270$f3xia
                                       (cons
                                         (list
                                           'lambda
                                           (g$append$15556$f3xia
                                             g$lhs*$22872$f3xia
                                             g$rhs*$22873$f3xia)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$15550$f3xia
                                                       (case-lambda
                                                         ((g$lhs$22874$f3xia
                                                            g$rhs$22875$f3xia)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$22874$f3xia)))
                                                            (list
                                                              g$lhs$22874$f3xia
                                                              g$rhs$22875$f3xia)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$22875$f3xia
                                                                '(t))))))
                                                       g$lhs*$22872$f3xia
                                                       g$rhs*$22873$f3xia)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$22870$f3xia
                                                         g$b*$22871$f3xia)))
                                                   '(swap))))))
                                         (g$append$15556$f3xia
                                           g$olhs*$22868$f3xia
                                           g$orhs*$22869$f3xia)))))
                                  (g$generate-temporaries$21416$f3xia
                                    g$olhs*$22868$f3xia)
                                  (g$generate-temporaries$21416$f3xia
                                    g$orhs*$22869$f3xia))))
                              g$ls/false$22867$f3xia)
                            (g$syntax-violation$21427$f3xia
                              '#f
                              '"invalid syntax"
                              g$t$22866$f3xia))))
                       (g$syntax-dispatch$21307$f3xia
                         g$t$22866$f3xia
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$22862$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$22862$f3xia
               '(_ () any . each-any)))))
         g$e$22861$f3xia))))
   (g$foreign-call-transformer$21305$f3xia
     g$foreign-call-transformer$24904$f3xia
     (case-lambda
       ((g$e$22876$f3xia g$r$22877$f3xia g$mr$22878$f3xia)
        ((case-lambda
           ((g$t$22879$f3xia)
            ((case-lambda
               ((g$ls/false$22880$f3xia)
                (if g$ls/false$22880$f3xia
                  (apply
                    (case-lambda
                      ((g$name$22881$f3xia g$arg*$22882$f3xia)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$21325$f3xia
                             g$name$22881$f3xia
                             g$r$22877$f3xia
                             g$mr$22878$f3xia)
                           (g$chi-expr*$21323$f3xia
                             g$arg*$22882$f3xia
                             g$r$22877$f3xia
                             g$mr$22878$f3xia)))))
                    g$ls/false$22880$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$22879$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$22879$f3xia
               '(_ any . each-any)))))
         g$e$22876$f3xia))))
   (g$convert-pattern$21306$f3xia
     g$convert-pattern$24905$f3xia
     (case-lambda
       ((g$pattern$22883$f3xia g$keys$22884$f3xia)
        (letrec* ((g$cvt*$22885$f3xia
                    (case-lambda
                      ((g$p*$22965$f3xia
                         g$n$22966$f3xia
                         g$ids$22967$f3xia)
                       (if (null? g$p*$22965$f3xia)
                         (values '() g$ids$22967$f3xia)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$22885$f3xia
                                (cdr g$p*$22965$f3xia)
                                g$n$22966$f3xia
                                g$ids$22967$f3xia)))
                           (case-lambda
                             ((g$y$22970$f3xia g$ids$22971$f3xia)
                              ((case-lambda
                                 ((g$ids$22972$f3xia g$y$22973$f3xia)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$22886$f3xia
                                         (car g$p*$22965$f3xia)
                                         g$n$22966$f3xia
                                         g$ids$22972$f3xia)))
                                    (case-lambda
                                      ((g$x$22976$f3xia
                                         g$ids$22977$f3xia)
                                       ((case-lambda
                                          ((g$ids$22978$f3xia
                                             g$x$22979$f3xia)
                                           (values
                                             (cons
                                               g$x$22979$f3xia
                                               g$y$22973$f3xia)
                                             g$ids$22978$f3xia)))
                                        g$ids$22977$f3xia
                                        g$x$22976$f3xia))))))
                               g$ids$22971$f3xia
                               g$y$22970$f3xia))))))))
                  (g$cvt$22886$f3xia
                    (case-lambda
                      ((g$p$22887$f3xia
                         g$n$22888$f3xia
                         g$ids$22889$f3xia)
                       ((case-lambda
                          ((g$t$22890$f3xia)
                           ((case-lambda
                              ((g$ls/false$22891$f3xia)
                               (if (if g$ls/false$22891$f3xia
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$22892$f3xia)
                                            (g$id?$20809$f3xia
                                              g$id$22892$f3xia)))
                                         g$ls/false$22891$f3xia))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$22893$f3xia)
                                      (if (g$bound-id-member?$20816$f3xia
                                            g$p$22887$f3xia
                                            g$keys$22884$f3xia)
                                        (values
                                          (vector
                                            'free-id
                                            g$p$22887$f3xia)
                                          g$ids$22889$f3xia)
                                        (if (g$free-id=?$20813$f3xia
                                              g$p$22887$f3xia
                                              (g$scheme-stx$21250$f3xia
                                                '_))
                                          (values '_ g$ids$22889$f3xia)
                                          ((case-lambda
                                             (()
                                              (begin
                                                '#f
                                                (values
                                                  'any
                                                  (cons
                                                    (cons
                                                      g$p$22887$f3xia
                                                      g$n$22888$f3xia)
                                                    g$ids$22889$f3xia))))))))))
                                   g$ls/false$22891$f3xia)
                                 ((case-lambda
                                    ((g$t$22894$f3xia)
                                     ((case-lambda
                                        ((g$ls/false$22895$f3xia)
                                         (if (if g$ls/false$22895$f3xia
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$22896$f3xia
                                                        g$dots$22897$f3xia)
                                                      (g$ellipsis?$21308$f3xia
                                                        g$dots$22897$f3xia)))
                                                   g$ls/false$22895$f3xia))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$22898$f3xia
                                                  g$dots$22899$f3xia)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$22886$f3xia
                                                       g$p$22898$f3xia
                                                       (+ g$n$22888$f3xia
                                                          '1)
                                                       g$ids$22889$f3xia)))
                                                  (case-lambda
                                                    ((g$p$22902$f3xia
                                                       g$ids$22903$f3xia)
                                                     ((case-lambda
                                                        ((g$ids$22904$f3xia
                                                           g$p$22905$f3xia)
                                                         (values
                                                           (if (eq? g$p$22905$f3xia
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$22905$f3xia))
                                                           g$ids$22904$f3xia)))
                                                      g$ids$22903$f3xia
                                                      g$p$22902$f3xia))))))
                                             g$ls/false$22895$f3xia)
                                           ((case-lambda
                                              ((g$t$22906$f3xia)
                                               ((case-lambda
                                                  ((g$ls/false$22907$f3xia)
                                                   (if (if g$ls/false$22907$f3xia
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$22908$f3xia
                                                                  g$dots$22909$f3xia
                                                                  g$ys$22910$f3xia
                                                                  g$z$22911$f3xia)
                                                                (g$ellipsis?$21308$f3xia
                                                                  g$dots$22909$f3xia)))
                                                             g$ls/false$22907$f3xia))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$22912$f3xia
                                                            g$dots$22913$f3xia
                                                            g$ys$22914$f3xia
                                                            g$z$22915$f3xia)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$22886$f3xia
                                                                 g$z$22915$f3xia
                                                                 g$n$22888$f3xia
                                                                 g$ids$22889$f3xia)))
                                                            (case-lambda
                                                              ((g$z$22918$f3xia
                                                                 g$ids$22919$f3xia)
                                                               ((case-lambda
                                                                  ((g$ids$22920$f3xia
                                                                     g$z$22921$f3xia)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$22885$f3xia
                                                                          g$ys$22914$f3xia
                                                                          g$n$22888$f3xia
                                                                          g$ids$22920$f3xia)))
                                                                     (case-lambda
                                                                       ((g$ys$22924$f3xia
                                                                          g$ids$22925$f3xia)
                                                                        ((case-lambda
                                                                           ((g$ids$22926$f3xia
                                                                              g$ys$22927$f3xia)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$22886$f3xia
                                                                                   g$x$22912$f3xia
                                                                                   (+ g$n$22888$f3xia
                                                                                      '1)
                                                                                   g$ids$22926$f3xia)))
                                                                              (case-lambda
                                                                                ((g$x$22930$f3xia
                                                                                   g$ids$22931$f3xia)
                                                                                 ((case-lambda
                                                                                    ((g$ids$22932$f3xia
                                                                                       g$x$22933$f3xia)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$22933$f3xia
                                                                                         (g$reverse$16012$f3xia
                                                                                           g$ys$22927$f3xia)
                                                                                         g$z$22921$f3xia)
                                                                                       g$ids$22932$f3xia)))
                                                                                  g$ids$22931$f3xia
                                                                                  g$x$22930$f3xia))))))
                                                                         g$ids$22925$f3xia
                                                                         g$ys$22924$f3xia))))))
                                                                g$ids$22919$f3xia
                                                                g$z$22918$f3xia))))))
                                                       g$ls/false$22907$f3xia)
                                                     ((case-lambda
                                                        ((g$t$22934$f3xia)
                                                         ((case-lambda
                                                            ((g$ls/false$22935$f3xia)
                                                             (if g$ls/false$22935$f3xia
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$22936$f3xia
                                                                      g$y$22937$f3xia)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$22886$f3xia
                                                                           g$y$22937$f3xia
                                                                           g$n$22888$f3xia
                                                                           g$ids$22889$f3xia)))
                                                                      (case-lambda
                                                                        ((g$y$22940$f3xia
                                                                           g$ids$22941$f3xia)
                                                                         ((case-lambda
                                                                            ((g$ids$22942$f3xia
                                                                               g$y$22943$f3xia)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$22886$f3xia
                                                                                    g$x$22936$f3xia
                                                                                    g$n$22888$f3xia
                                                                                    g$ids$22942$f3xia)))
                                                                               (case-lambda
                                                                                 ((g$x$22946$f3xia
                                                                                    g$ids$22947$f3xia)
                                                                                  ((case-lambda
                                                                                     ((g$ids$22948$f3xia
                                                                                        g$x$22949$f3xia)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$22949$f3xia
                                                                                          g$y$22943$f3xia)
                                                                                        g$ids$22948$f3xia)))
                                                                                   g$ids$22947$f3xia
                                                                                   g$x$22946$f3xia))))))
                                                                          g$ids$22941$f3xia
                                                                          g$y$22940$f3xia))))))
                                                                 g$ls/false$22935$f3xia)
                                                               ((case-lambda
                                                                  ((g$t$22950$f3xia)
                                                                   ((case-lambda
                                                                      ((g$ls/false$22951$f3xia)
                                                                       (if g$ls/false$22951$f3xia
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$22889$f3xia)))
                                                                           g$ls/false$22951$f3xia)
                                                                         ((case-lambda
                                                                            ((g$t$22952$f3xia)
                                                                             ((case-lambda
                                                                                ((g$ls/false$22953$f3xia)
                                                                                 (if (if g$ls/false$22953$f3xia
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$22954$f3xia)
                                                                                              (not (g$stx?$20781$f3xia
                                                                                                     g$p$22954$f3xia))))
                                                                                           g$ls/false$22953$f3xia))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$22955$f3xia)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$22886$f3xia
                                                                                               g$p$22955$f3xia
                                                                                               g$n$22888$f3xia
                                                                                               g$ids$22889$f3xia)))
                                                                                          (case-lambda
                                                                                            ((g$p$22958$f3xia
                                                                                               g$ids$22959$f3xia)
                                                                                             ((case-lambda
                                                                                                ((g$ids$22960$f3xia
                                                                                                   g$p$22961$f3xia)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$22961$f3xia)
                                                                                                   g$ids$22960$f3xia)))
                                                                                              g$ids$22959$f3xia
                                                                                              g$p$22958$f3xia))))))
                                                                                     g$ls/false$22953$f3xia)
                                                                                   ((case-lambda
                                                                                      ((g$t$22962$f3xia)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$22963$f3xia)
                                                                                           (if g$ls/false$22963$f3xia
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$22964$f3xia)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$20820$f3xia
                                                                                                        g$datum$22964$f3xia))
                                                                                                    g$ids$22889$f3xia)))
                                                                                               g$ls/false$22963$f3xia)
                                                                                             (g$syntax-violation$21427$f3xia
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$22962$f3xia))))
                                                                                        (g$syntax-dispatch$21307$f3xia
                                                                                          g$t$22962$f3xia
                                                                                          'any))))
                                                                                    g$t$22952$f3xia))))
                                                                              (g$syntax-dispatch$21307$f3xia
                                                                                g$t$22952$f3xia
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$22950$f3xia))))
                                                                    (g$syntax-dispatch$21307$f3xia
                                                                      g$t$22950$f3xia
                                                                      '()))))
                                                                g$t$22934$f3xia))))
                                                          (g$syntax-dispatch$21307$f3xia
                                                            g$t$22934$f3xia
                                                            '(any .
                                                                  any)))))
                                                      g$t$22906$f3xia))))
                                                (g$syntax-dispatch$21307$f3xia
                                                  g$t$22906$f3xia
                                                  '(any any
                                                        .
                                                        #(each+
                                                          any
                                                          ()
                                                          any))))))
                                            g$t$22894$f3xia))))
                                      (g$syntax-dispatch$21307$f3xia
                                        g$t$22894$f3xia
                                        '(any any)))))
                                  g$t$22890$f3xia))))
                            (g$syntax-dispatch$21307$f3xia
                              g$t$22890$f3xia
                              'any))))
                        g$p$22887$f3xia)))))
          (g$cvt$22886$f3xia g$pattern$22883$f3xia '0 '())))))
   (g$syntax-dispatch$21307$f3xia
     g$syntax-dispatch$24906$f3xia
     (case-lambda
       ((g$e$22980$f3xia g$p$22981$f3xia)
        (letrec* ((g$stx^$22982$f3xia
                    (case-lambda
                      ((g$e$23090$f3xia
                         g$m*$23091$f3xia
                         g$s*$23092$f3xia
                         g$ae*$23093$f3xia)
                       (if (if (null? g$m*$23091$f3xia)
                             (if (null? g$s*$23092$f3xia)
                               (begin '#f (null? g$ae*$23093$f3xia))
                               '#f)
                             '#f)
                         g$e$23090$f3xia
                         (g$mkstx$20797$f3xia
                           g$e$23090$f3xia
                           g$m*$23091$f3xia
                           g$s*$23092$f3xia
                           g$ae*$23093$f3xia)))))
                  (g$match-each$22983$f3xia
                    (case-lambda
                      ((g$e$23074$f3xia
                         g$p$23075$f3xia
                         g$m*$23076$f3xia
                         g$s*$23077$f3xia
                         g$ae*$23078$f3xia)
                       (if (pair? g$e$23074$f3xia)
                         ((case-lambda
                            ((g$first$23079$f3xia)
                             (if g$first$23079$f3xia
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$23080$f3xia)
                                     (if g$rest$23080$f3xia
                                       (begin
                                         '#f
                                         (cons
                                           g$first$23079$f3xia
                                           g$rest$23080$f3xia))
                                       '#f)))
                                  (g$match-each$22983$f3xia
                                    (cdr g$e$23074$f3xia)
                                    g$p$23075$f3xia
                                    g$m*$23076$f3xia
                                    g$s*$23077$f3xia
                                    g$ae*$23078$f3xia)))
                               '#f)))
                          (g$match$22989$f3xia
                            (car g$e$23074$f3xia)
                            g$p$23075$f3xia
                            g$m*$23076$f3xia
                            g$s*$23077$f3xia
                            g$ae*$23078$f3xia
                            '()))
                         (if (null? g$e$23074$f3xia)
                           '()
                           (if (g$stx?$20781$f3xia g$e$23074$f3xia)
                             (if (not (g$top-marked?$20743$f3xia
                                        g$m*$23076$f3xia))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$20796$f3xia
                                        g$m*$23076$f3xia
                                        g$s*$23077$f3xia
                                        g$ae*$23078$f3xia
                                        g$e$23074$f3xia)))
                                   (case-lambda
                                     ((g$m*$23084$f3xia
                                        g$s*$23085$f3xia
                                        g$ae*$23086$f3xia)
                                      ((case-lambda
                                         ((g$ae*$23087$f3xia
                                            g$s*$23088$f3xia
                                            g$m*$23089$f3xia)
                                          (g$match-each$22983$f3xia
                                            (g$stx-expr$20783$f3xia
                                              g$e$23074$f3xia)
                                            g$p$23075$f3xia
                                            g$m*$23089$f3xia
                                            g$s*$23088$f3xia
                                            g$ae*$23087$f3xia)))
                                       g$ae*$23086$f3xia
                                       g$s*$23085$f3xia
                                       g$m*$23084$f3xia)))))
                               '#f)
                             (if (annotation? g$e$23074$f3xia)
                               (g$match-each$22983$f3xia
                                 (annotation-expression g$e$23074$f3xia)
                                 g$p$23075$f3xia
                                 g$m*$23076$f3xia
                                 g$s*$23077$f3xia
                                 g$ae*$23078$f3xia)
                               ((case-lambda
                                  (() (begin '#f '#f)))))))))))
                  (g$match-each+$22984$f3xia
                    (case-lambda
                      ((g$e$23042$f3xia
                         g$x-pat$23043$f3xia
                         g$y-pat$23044$f3xia
                         g$z-pat$23045$f3xia
                         g$m*$23046$f3xia
                         g$s*$23047$f3xia
                         g$ae*$23048$f3xia
                         g$r$23049$f3xia)
                       ((letrec ((g$f$23050$f3xia
                                   (case-lambda
                                     ((g$e$23051$f3xia
                                        g$m*$23052$f3xia
                                        g$s*$23053$f3xia
                                        g$ae*$23054$f3xia)
                                      (if (pair? g$e$23051$f3xia)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$23050$f3xia
                                               (cdr g$e$23051$f3xia)
                                               g$m*$23052$f3xia
                                               g$s*$23053$f3xia
                                               g$ae*$23054$f3xia)))
                                          (case-lambda
                                            ((g$xr*$23058$f3xia
                                               g$y-pat$23059$f3xia
                                               g$r$23060$f3xia)
                                             ((case-lambda
                                                ((g$r$23061$f3xia
                                                   g$y-pat$23062$f3xia
                                                   g$xr*$23063$f3xia)
                                                 (if g$r$23061$f3xia
                                                   (if (null?
                                                         g$y-pat$23062$f3xia)
                                                     ((case-lambda
                                                        ((g$xr$23064$f3xia)
                                                         (if g$xr$23064$f3xia
                                                           (values
                                                             (cons
                                                               g$xr$23064$f3xia
                                                               g$xr*$23063$f3xia)
                                                             g$y-pat$23062$f3xia
                                                             g$r$23061$f3xia)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$22989$f3xia
                                                        (car g$e$23051$f3xia)
                                                        g$x-pat$23043$f3xia
                                                        g$m*$23052$f3xia
                                                        g$s*$23053$f3xia
                                                        g$ae*$23054$f3xia
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$23062$f3xia)
                                                       (g$match$22989$f3xia
                                                         (car g$e$23051$f3xia)
                                                         (car g$y-pat$23062$f3xia)
                                                         g$m*$23052$f3xia
                                                         g$s*$23053$f3xia
                                                         g$ae*$23054$f3xia
                                                         g$r$23061$f3xia)))
                                                   (values
                                                     '#f
                                                     '#f
                                                     '#f))))
                                              g$r$23060$f3xia
                                              g$y-pat$23059$f3xia
                                              g$xr*$23058$f3xia))))
                                        (if (g$stx?$20781$f3xia
                                              g$e$23051$f3xia)
                                          (if (g$top-marked?$20743$f3xia
                                                g$m*$23052$f3xia)
                                            (values
                                              '()
                                              g$y-pat$23044$f3xia
                                              (g$match$22989$f3xia
                                                g$e$23051$f3xia
                                                g$z-pat$23045$f3xia
                                                g$m*$23052$f3xia
                                                g$s*$23053$f3xia
                                                g$ae*$23054$f3xia
                                                g$r$23049$f3xia))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$20796$f3xia
                                                   g$m*$23052$f3xia
                                                   g$s*$23053$f3xia
                                                   g$ae*$23054$f3xia
                                                   g$e$23051$f3xia)))
                                              (case-lambda
                                                ((g$m*$23068$f3xia
                                                   g$s*$23069$f3xia
                                                   g$ae*$23070$f3xia)
                                                 ((case-lambda
                                                    ((g$ae*$23071$f3xia
                                                       g$s*$23072$f3xia
                                                       g$m*$23073$f3xia)
                                                     (g$f$23050$f3xia
                                                       (g$stx-expr$20783$f3xia
                                                         g$e$23051$f3xia)
                                                       g$m*$23073$f3xia
                                                       g$s*$23072$f3xia
                                                       g$ae*$23071$f3xia)))
                                                  g$ae*$23070$f3xia
                                                  g$s*$23069$f3xia
                                                  g$m*$23068$f3xia)))))
                                          (if (annotation?
                                                g$e$23051$f3xia)
                                            (g$f$23050$f3xia
                                              (annotation-expression
                                                g$e$23051$f3xia)
                                              g$m*$23052$f3xia
                                              g$s*$23053$f3xia
                                              g$ae*$23054$f3xia)
                                            ((case-lambda
                                               (()
                                                (begin
                                                  '#f
                                                  (values
                                                    '()
                                                    g$y-pat$23044$f3xia
                                                    (g$match$22989$f3xia
                                                      g$e$23051$f3xia
                                                      g$z-pat$23045$f3xia
                                                      g$m*$23052$f3xia
                                                      g$s*$23053$f3xia
                                                      g$ae*$23054$f3xia
                                                      g$r$23049$f3xia)))))))))))))
                          g$f$23050$f3xia)
                        g$e$23042$f3xia
                        g$m*$23046$f3xia
                        g$s*$23047$f3xia
                        g$ae*$23048$f3xia))))
                  (g$match-each-any$22985$f3xia
                    (case-lambda
                      ((g$e$23028$f3xia
                         g$m*$23029$f3xia
                         g$s*$23030$f3xia
                         g$ae*$23031$f3xia)
                       (if (pair? g$e$23028$f3xia)
                         ((case-lambda
                            ((g$l$23032$f3xia)
                             (if g$l$23032$f3xia
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$22982$f3xia
                                     (car g$e$23028$f3xia)
                                     g$m*$23029$f3xia
                                     g$s*$23030$f3xia
                                     g$ae*$23031$f3xia)
                                   g$l$23032$f3xia))
                               '#f)))
                          (g$match-each-any$22985$f3xia
                            (cdr g$e$23028$f3xia)
                            g$m*$23029$f3xia
                            g$s*$23030$f3xia
                            g$ae*$23031$f3xia))
                         (if (null? g$e$23028$f3xia)
                           '()
                           (if (g$stx?$20781$f3xia g$e$23028$f3xia)
                             (if (not (g$top-marked?$20743$f3xia
                                        g$m*$23029$f3xia))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$20796$f3xia
                                        g$m*$23029$f3xia
                                        g$s*$23030$f3xia
                                        g$ae*$23031$f3xia
                                        g$e$23028$f3xia)))
                                   (case-lambda
                                     ((g$m*$23036$f3xia
                                        g$s*$23037$f3xia
                                        g$ae*$23038$f3xia)
                                      ((case-lambda
                                         ((g$ae*$23039$f3xia
                                            g$s*$23040$f3xia
                                            g$m*$23041$f3xia)
                                          (g$match-each-any$22985$f3xia
                                            (g$stx-expr$20783$f3xia
                                              g$e$23028$f3xia)
                                            g$m*$23041$f3xia
                                            g$s*$23040$f3xia
                                            g$ae*$23039$f3xia)))
                                       g$ae*$23038$f3xia
                                       g$s*$23037$f3xia
                                       g$m*$23036$f3xia)))))
                               '#f)
                             (if (annotation? g$e$23028$f3xia)
                               (g$match-each-any$22985$f3xia
                                 (annotation-expression g$e$23028$f3xia)
                                 g$m*$23029$f3xia
                                 g$s*$23030$f3xia
                                 g$ae*$23031$f3xia)
                               ((case-lambda
                                  (() (begin '#f '#f)))))))))))
                  (g$match-empty$22986$f3xia
                    (case-lambda
                      ((g$p$23025$f3xia g$r$23026$f3xia)
                       (if (null? g$p$23025$f3xia)
                         g$r$23026$f3xia
                         (if (eq? g$p$23025$f3xia '_)
                           g$r$23026$f3xia
                           (if (eq? g$p$23025$f3xia 'any)
                             (cons '() g$r$23026$f3xia)
                             (if (pair? g$p$23025$f3xia)
                               (g$match-empty$22986$f3xia
                                 (car g$p$23025$f3xia)
                                 (g$match-empty$22986$f3xia
                                   (cdr g$p$23025$f3xia)
                                   g$r$23026$f3xia))
                               (if (eq? g$p$23025$f3xia 'each-any)
                                 (cons '() g$r$23026$f3xia)
                                 ((case-lambda
                                    (()
                                     (begin
                                       '#f
                                       ((case-lambda
                                          ((g$t$23027$f3xia)
                                           (if (eqv?
                                                 g$t$23027$f3xia
                                                 'each)
                                             (g$match-empty$22986$f3xia
                                               (g$vector-ref$16005$f3xia
                                                 g$p$23025$f3xia
                                                 '1)
                                               g$r$23026$f3xia)
                                             (if (eqv?
                                                   g$t$23027$f3xia
                                                   'each+)
                                               (g$match-empty$22986$f3xia
                                                 (g$vector-ref$16005$f3xia
                                                   g$p$23025$f3xia
                                                   '1)
                                                 (g$match-empty$22986$f3xia
                                                   (g$reverse$16012$f3xia
                                                     (g$vector-ref$16005$f3xia
                                                       g$p$23025$f3xia
                                                       '2))
                                                   (g$match-empty$22986$f3xia
                                                     (g$vector-ref$16005$f3xia
                                                       g$p$23025$f3xia
                                                       '3)
                                                     g$r$23026$f3xia)))
                                               (if (g$memv$15539$f3xia
                                                     g$t$23027$f3xia
                                                     '(free-id atom))
                                                 g$r$23026$f3xia
                                                 (if (g$memv$15539$f3xia
                                                       g$t$23027$f3xia
                                                       '(scheme-id
                                                          atom))
                                                   g$r$23026$f3xia
                                                   (if (eqv?
                                                         g$t$23027$f3xia
                                                         'vector)
                                                     (g$match-empty$22986$f3xia
                                                       (g$vector-ref$16005$f3xia
                                                         g$p$23025$f3xia
                                                         '1)
                                                       g$r$23026$f3xia)
                                                     ((case-lambda
                                                        (()
                                                         (begin
                                                           '#f
                                                           (g$assertion-violation$12459$f3xia
                                                             'syntax-dispatch
                                                             '"invalid pattern"
                                                             g$p$23025$f3xia))))))))))))
                                        (g$vector-ref$16005$f3xia
                                          g$p$23025$f3xia
                                          '0))))))))))))))
                  (g$combine$22987$f3xia
                    (case-lambda
                      ((g$r*$23023$f3xia g$r$23024$f3xia)
                       (if (null? (car g$r*$23023$f3xia))
                         g$r$23024$f3xia
                         (cons
                           (g$map$15550$f3xia car g$r*$23023$f3xia)
                           (g$combine$22987$f3xia
                             (g$map$15550$f3xia cdr g$r*$23023$f3xia)
                             g$r$23024$f3xia))))))
                  (g$match*$22988$f3xia
                    (case-lambda
                      ((g$e$23005$f3xia
                         g$p$23006$f3xia
                         g$m*$23007$f3xia
                         g$s*$23008$f3xia
                         g$ae*$23009$f3xia
                         g$r$23010$f3xia)
                       (if (null? g$p$23006$f3xia)
                         (if (null? g$e$23005$f3xia)
                           (begin '#f g$r$23010$f3xia)
                           '#f)
                         (if (pair? g$p$23006$f3xia)
                           (if (pair? g$e$23005$f3xia)
                             (begin
                               '#f
                               (g$match$22989$f3xia
                                 (car g$e$23005$f3xia)
                                 (car g$p$23006$f3xia)
                                 g$m*$23007$f3xia
                                 g$s*$23008$f3xia
                                 g$ae*$23009$f3xia
                                 (g$match$22989$f3xia
                                   (cdr g$e$23005$f3xia)
                                   (cdr g$p$23006$f3xia)
                                   g$m*$23007$f3xia
                                   g$s*$23008$f3xia
                                   g$ae*$23009$f3xia
                                   g$r$23010$f3xia)))
                             '#f)
                           (if (eq? g$p$23006$f3xia 'each-any)
                             ((case-lambda
                                ((g$l$23011$f3xia)
                                 (if g$l$23011$f3xia
                                   (begin
                                     '#f
                                     (cons
                                       g$l$23011$f3xia
                                       g$r$23010$f3xia))
                                   '#f)))
                              (g$match-each-any$22985$f3xia
                                g$e$23005$f3xia
                                g$m*$23007$f3xia
                                g$s*$23008$f3xia
                                g$ae*$23009$f3xia))
                             ((case-lambda
                                (()
                                 (begin
                                   '#f
                                   ((case-lambda
                                      ((g$t$23012$f3xia)
                                       (if (eqv? g$t$23012$f3xia 'each)
                                         (if (null? g$e$23005$f3xia)
                                           (g$match-empty$22986$f3xia
                                             (g$vector-ref$16005$f3xia
                                               g$p$23006$f3xia
                                               '1)
                                             g$r$23010$f3xia)
                                           ((case-lambda
                                              ((g$r*$23013$f3xia)
                                               (if g$r*$23013$f3xia
                                                 (begin
                                                   '#f
                                                   (g$combine$22987$f3xia
                                                     g$r*$23013$f3xia
                                                     g$r$23010$f3xia))
                                                 '#f)))
                                            (g$match-each$22983$f3xia
                                              g$e$23005$f3xia
                                              (g$vector-ref$16005$f3xia
                                                g$p$23006$f3xia
                                                '1)
                                              g$m*$23007$f3xia
                                              g$s*$23008$f3xia
                                              g$ae*$23009$f3xia)))
                                         (if (eqv?
                                               g$t$23012$f3xia
                                               'free-id)
                                           (if (g$symbol?$15976$f3xia
                                                 g$e$23005$f3xia)
                                             (if (g$top-marked?$20743$f3xia
                                                   g$m*$23007$f3xia)
                                               (if (g$free-id=?$20813$f3xia
                                                     (g$stx^$22982$f3xia
                                                       g$e$23005$f3xia
                                                       g$m*$23007$f3xia
                                                       g$s*$23008$f3xia
                                                       g$ae*$23009$f3xia)
                                                     (g$vector-ref$16005$f3xia
                                                       g$p$23006$f3xia
                                                       '1))
                                                 (begin
                                                   '#f
                                                   g$r$23010$f3xia)
                                                 '#f)
                                               '#f)
                                             '#f)
                                           (if (eqv?
                                                 g$t$23012$f3xia
                                                 'scheme-id)
                                             (if (g$symbol?$15976$f3xia
                                                   g$e$23005$f3xia)
                                               (if (g$top-marked?$20743$f3xia
                                                     g$m*$23007$f3xia)
                                                 (if (g$free-id=?$20813$f3xia
                                                       (g$stx^$22982$f3xia
                                                         g$e$23005$f3xia
                                                         g$m*$23007$f3xia
                                                         g$s*$23008$f3xia
                                                         g$ae*$23009$f3xia)
                                                       (g$scheme-stx$21250$f3xia
                                                         (g$vector-ref$16005$f3xia
                                                           g$p$23006$f3xia
                                                           '1)))
                                                   (begin
                                                     '#f
                                                     g$r$23010$f3xia)
                                                   '#f)
                                                 '#f)
                                               '#f)
                                             (if (eqv?
                                                   g$t$23012$f3xia
                                                   'each+)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$match-each+$22984$f3xia
                                                      g$e$23005$f3xia
                                                      (g$vector-ref$16005$f3xia
                                                        g$p$23006$f3xia
                                                        '1)
                                                      (g$vector-ref$16005$f3xia
                                                        g$p$23006$f3xia
                                                        '2)
                                                      (g$vector-ref$16005$f3xia
                                                        g$p$23006$f3xia
                                                        '3)
                                                      g$m*$23007$f3xia
                                                      g$s*$23008$f3xia
                                                      g$ae*$23009$f3xia
                                                      g$r$23010$f3xia)))
                                                 (case-lambda
                                                   ((g$xr*$23017$f3xia
                                                      g$y-pat$23018$f3xia
                                                      g$r$23019$f3xia)
                                                    ((case-lambda
                                                       ((g$r$23020$f3xia
                                                          g$y-pat$23021$f3xia
                                                          g$xr*$23022$f3xia)
                                                        (if g$r$23020$f3xia
                                                          (if (null?
                                                                g$y-pat$23021$f3xia)
                                                            (begin
                                                              '#f
                                                              (if (null?
                                                                    g$xr*$23022$f3xia)
                                                                (g$match-empty$22986$f3xia
                                                                  (g$vector-ref$16005$f3xia
                                                                    g$p$23006$f3xia
                                                                    '1)
                                                                  g$r$23020$f3xia)
                                                                (g$combine$22987$f3xia
                                                                  g$xr*$23022$f3xia
                                                                  g$r$23020$f3xia)))
                                                            '#f)
                                                          '#f)))
                                                     g$r$23019$f3xia
                                                     g$y-pat$23018$f3xia
                                                     g$xr*$23017$f3xia))))
                                               (if (eqv?
                                                     g$t$23012$f3xia
                                                     'atom)
                                                 (if (g$equal?$19443$f3xia
                                                       (g$vector-ref$16005$f3xia
                                                         g$p$23006$f3xia
                                                         '1)
                                                       (g$strip$20819$f3xia
                                                         g$e$23005$f3xia
                                                         g$m*$23007$f3xia))
                                                   (begin
                                                     '#f
                                                     g$r$23010$f3xia)
                                                   '#f)
                                                 (if (eqv?
                                                       g$t$23012$f3xia
                                                       'vector)
                                                   (if (g$vector?$15974$f3xia
                                                         g$e$23005$f3xia)
                                                     (begin
                                                       '#f
                                                       (g$match$22989$f3xia
                                                         (g$vector->list$16010$f3xia
                                                           g$e$23005$f3xia)
                                                         (g$vector-ref$16005$f3xia
                                                           g$p$23006$f3xia
                                                           '1)
                                                         g$m*$23007$f3xia
                                                         g$s*$23008$f3xia
                                                         g$ae*$23009$f3xia
                                                         g$r$23010$f3xia))
                                                     '#f)
                                                   ((case-lambda
                                                      (()
                                                       (begin
                                                         '#f
                                                         (g$assertion-violation$12459$f3xia
                                                           'syntax-dispatch
                                                           '"invalid pattern"
                                                           g$p$23006$f3xia)))))))))))))
                                    (g$vector-ref$16005$f3xia
                                      g$p$23006$f3xia
                                      '0))))))))))))
                  (g$match$22989$f3xia
                    (case-lambda
                      ((g$e$22990$f3xia
                         g$p$22991$f3xia
                         g$m*$22992$f3xia
                         g$s*$22993$f3xia
                         g$ae*$22994$f3xia
                         g$r$22995$f3xia)
                       (if (not g$r$22995$f3xia)
                         '#f
                         (if (eq? g$p$22991$f3xia '_)
                           g$r$22995$f3xia
                           (if (eq? g$p$22991$f3xia 'any)
                             (cons
                               (g$stx^$22982$f3xia
                                 g$e$22990$f3xia
                                 g$m*$22992$f3xia
                                 g$s*$22993$f3xia
                                 g$ae*$22994$f3xia)
                               g$r$22995$f3xia)
                             (if (g$stx?$20781$f3xia g$e$22990$f3xia)
                               (if (not (g$top-marked?$20743$f3xia
                                          g$m*$22992$f3xia))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$20796$f3xia
                                          g$m*$22992$f3xia
                                          g$s*$22993$f3xia
                                          g$ae*$22994$f3xia
                                          g$e$22990$f3xia)))
                                     (case-lambda
                                       ((g$m*$22999$f3xia
                                          g$s*$23000$f3xia
                                          g$ae*$23001$f3xia)
                                        ((case-lambda
                                           ((g$ae*$23002$f3xia
                                              g$s*$23003$f3xia
                                              g$m*$23004$f3xia)
                                            (g$match$22989$f3xia
                                              (g$stx-expr$20783$f3xia
                                                g$e$22990$f3xia)
                                              g$p$22991$f3xia
                                              g$m*$23004$f3xia
                                              g$s*$23003$f3xia
                                              g$ae*$23002$f3xia
                                              g$r$22995$f3xia)))
                                         g$ae*$23001$f3xia
                                         g$s*$23000$f3xia
                                         g$m*$22999$f3xia)))))
                                 '#f)
                               (if (annotation? g$e$22990$f3xia)
                                 (g$match$22989$f3xia
                                   (annotation-expression
                                     g$e$22990$f3xia)
                                   g$p$22991$f3xia
                                   g$m*$22992$f3xia
                                   g$s*$22993$f3xia
                                   g$ae*$22994$f3xia
                                   g$r$22995$f3xia)
                                 ((case-lambda
                                    (()
                                     (begin
                                       '#f
                                       (g$match*$22988$f3xia
                                         g$e$22990$f3xia
                                         g$p$22991$f3xia
                                         g$m*$22992$f3xia
                                         g$s*$22993$f3xia
                                         g$ae*$22994$f3xia
                                         g$r$22995$f3xia))))))))))))))
          (g$match$22989$f3xia
            g$e$22980$f3xia
            g$p$22981$f3xia
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$21308$f3xia
     g$ellipsis?$24907$f3xia
     (case-lambda
       ((g$x$23094$f3xia)
        (if (g$id?$20809$f3xia g$x$23094$f3xia)
          (begin
            '#f
            (g$free-id=?$20813$f3xia
              g$x$23094$f3xia
              (g$scheme-stx$21250$f3xia '...)))
          '#f))))
   (g$underscore?$21309$f3xia
     g$underscore?$24908$f3xia
     (case-lambda
       ((g$x$23095$f3xia)
        (if (g$id?$20809$f3xia g$x$23095$f3xia)
          (begin
            '#f
            (g$free-id=?$20813$f3xia
              g$x$23095$f3xia
              (g$scheme-stx$21250$f3xia '_)))
          '#f))))
   (g$verify-literals$21310$f3xia
     g$verify-literals$24909$f3xia
     (case-lambda
       ((g$lits$23096$f3xia g$expr$23097$f3xia)
        (g$for-each$15551$f3xia
          (case-lambda
            ((g$x$23098$f3xia)
             (if ((case-lambda
                    ((g$t$23099$f3xia)
                     (if g$t$23099$f3xia
                       g$t$23099$f3xia
                       ((case-lambda
                          ((g$t$23100$f3xia)
                           (if g$t$23100$f3xia
                             g$t$23100$f3xia
                             (begin
                               '#f
                               (g$underscore?$21309$f3xia
                                 g$x$23098$f3xia)))))
                        (g$ellipsis?$21308$f3xia g$x$23098$f3xia)))))
                  (not (g$id?$20809$f3xia g$x$23098$f3xia)))
               (g$syntax-violation$21427$f3xia
                 '#f
                 '"invalid literal"
                 g$expr$23097$f3xia
                 g$x$23098$f3xia)
               (void))))
          g$lits$23096$f3xia))))
   (g$syntax-case-transformer$21311$f3xia
     g$syntax-case-transformer$24910$f3xia
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$23101$f3xia
                     (case-lambda
                       ((g$pvars$23158$f3xia
                          g$expr$23159$f3xia
                          g$y$23160$f3xia
                          g$r$23161$f3xia
                          g$mr$23162$f3xia)
                        ((case-lambda
                           ((g$ids$23163$f3xia g$levels$23164$f3xia)
                            ((case-lambda
                               ((g$labels$23165$f3xia
                                  g$new-vars$23166$f3xia)
                                ((case-lambda
                                   ((g$body$23167$f3xia)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$20731$f3xia
                                        '#f
                                        g$new-vars$23166$f3xia
                                        g$body$23167$f3xia)
                                      g$y$23160$f3xia)))
                                 (g$chi-expr$21325$f3xia
                                   (g$add-subst$20799$f3xia
                                     (g$make-full-rib$20775$f3xia
                                       g$ids$23163$f3xia
                                       g$labels$23165$f3xia)
                                     g$expr$23159$f3xia)
                                   (g$append$15556$f3xia
                                     (g$map$15550$f3xia
                                       (case-lambda
                                         ((g$label$23168$f3xia
                                            g$var$23169$f3xia
                                            g$level$23170$f3xia)
                                          (cons
                                            g$label$23168$f3xia
                                            (g$make-binding$20825$f3xia
                                              'syntax
                                              (cons
                                                g$var$23169$f3xia
                                                g$level$23170$f3xia)))))
                                       g$labels$23165$f3xia
                                       g$new-vars$23166$f3xia
                                       (g$map$15550$f3xia
                                         cdr
                                         g$pvars$23158$f3xia))
                                     g$r$23161$f3xia)
                                   g$mr$23162$f3xia))))
                             (g$map$15550$f3xia
                               g$gen-label$20746$f3xia
                               g$ids$23163$f3xia)
                             (g$map$15550$f3xia
                               g$gen-lexical$20744$f3xia
                               g$ids$23163$f3xia))))
                         (g$map$15550$f3xia car g$pvars$23158$f3xia)
                         (g$map$15550$f3xia cdr g$pvars$23158$f3xia)))))
                   (g$invalid-ids-error$23102$f3xia
                     (case-lambda
                       ((g$id*$23152$f3xia
                          g$e$23153$f3xia
                          g$class$23154$f3xia)
                        ((letrec ((g$find$23155$f3xia
                                    (case-lambda
                                      ((g$id*$23156$f3xia
                                         g$ok*$23157$f3xia)
                                       (if (null? g$id*$23156$f3xia)
                                         (g$syntax-violation$21427$f3xia
                                           '#f
                                           '"invalid syntax"
                                           g$e$23153$f3xia)
                                         (if (g$id?$20809$f3xia
                                               (car g$id*$23156$f3xia))
                                           (if (g$bound-id-member?$20816$f3xia
                                                 (car g$id*$23156$f3xia)
                                                 g$ok*$23157$f3xia)
                                             (g$syntax-error$21424$f3xia
                                               (car g$id*$23156$f3xia)
                                               '"duplicate "
                                               g$class$23154$f3xia)
                                             (g$find$23155$f3xia
                                               (cdr g$id*$23156$f3xia)
                                               (cons
                                                 (car g$id*$23156$f3xia)
                                                 g$ok*$23157$f3xia)))
                                           (g$syntax-error$21424$f3xia
                                             (car g$id*$23156$f3xia)
                                             '"invalid "
                                             g$class$23154$f3xia)))))))
                           g$find$23155$f3xia)
                         g$id*$23152$f3xia
                         '()))))
                   (g$gen-clause$23103$f3xia
                     (case-lambda
                       ((g$x$23132$f3xia
                          g$keys$23133$f3xia
                          g$clauses$23134$f3xia
                          g$r$23135$f3xia
                          g$mr$23136$f3xia
                          g$pat$23137$f3xia
                          g$fender$23138$f3xia
                          g$expr$23139$f3xia)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$21306$f3xia
                               g$pat$23137$f3xia
                               g$keys$23133$f3xia)))
                          (case-lambda
                            ((g$p$23142$f3xia g$pvars$23143$f3xia)
                             ((case-lambda
                                ((g$pvars$23144$f3xia g$p$23145$f3xia)
                                 (if (not (g$distinct-bound-ids?$20815$f3xia
                                            (g$map$15550$f3xia
                                              car
                                              g$pvars$23144$f3xia)))
                                   (g$invalid-ids-error$23102$f3xia
                                     (g$map$15550$f3xia
                                       car
                                       g$pvars$23144$f3xia)
                                     g$pat$23137$f3xia
                                     '"pattern variable")
                                   (if (not (g$for-all$15548$f3xia
                                              (case-lambda
                                                ((g$x$23146$f3xia)
                                                 (not (g$ellipsis?$21308$f3xia
                                                        (car g$x$23146$f3xia)))))
                                              g$pvars$23144$f3xia))
                                     (g$syntax-violation$21427$f3xia
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$23137$f3xia)
                                     ((case-lambda
                                        (()
                                         (begin
                                           '#f
                                           ((case-lambda
                                              ((g$y$23147$f3xia)
                                               ((case-lambda
                                                  ((g$test$23148$f3xia)
                                                   ((case-lambda
                                                      ((g$conseq$23149$f3xia)
                                                       ((case-lambda
                                                          ((g$altern$23150$f3xia)
                                                           (list
                                                             (g$build-lambda$20731$f3xia
                                                               '#f
                                                               (list
                                                                 g$y$23147$f3xia)
                                                               (list
                                                                 'if
                                                                 g$test$23148$f3xia
                                                                 g$conseq$23149$f3xia
                                                                 g$altern$23150$f3xia))
                                                             (list
                                                               '(primitive
                                                                  syntax-dispatch)
                                                               g$x$23132$f3xia
                                                               (list
                                                                 'quote
                                                                 g$p$23145$f3xia)))))
                                                        (g$gen-syntax-case$23104$f3xia
                                                          g$x$23132$f3xia
                                                          g$keys$23133$f3xia
                                                          g$clauses$23134$f3xia
                                                          g$r$23135$f3xia
                                                          g$mr$23136$f3xia))))
                                                    (g$build-dispatch-call$23101$f3xia
                                                      g$pvars$23144$f3xia
                                                      g$expr$23139$f3xia
                                                      g$y$23147$f3xia
                                                      g$r$23135$f3xia
                                                      g$mr$23136$f3xia))))
                                                (if (eq? g$fender$23138$f3xia
                                                         '#t)
                                                  g$y$23147$f3xia
                                                  ((case-lambda
                                                     (()
                                                      (begin
                                                        '#f
                                                        ((case-lambda
                                                           ((g$call$23151$f3xia)
                                                            (list
                                                              'if
                                                              g$y$23147$f3xia
                                                              g$call$23151$f3xia
                                                              (list
                                                                'quote
                                                                '#f))))
                                                         (g$build-dispatch-call$23101$f3xia
                                                           g$pvars$23144$f3xia
                                                           g$fender$23138$f3xia
                                                           g$y$23147$f3xia
                                                           g$r$23135$f3xia
                                                           g$mr$23136$f3xia))))))))))
                                            (g$gen-lexical$20744$f3xia
                                              'tmp))))))))))
                              g$pvars$23143$f3xia
                              g$p$23142$f3xia)))))))
                   (g$gen-syntax-case$23104$f3xia
                     (case-lambda
                       ((g$x$23115$f3xia
                          g$keys$23116$f3xia
                          g$clauses$23117$f3xia
                          g$r$23118$f3xia
                          g$mr$23119$f3xia)
                        (if (null? g$clauses$23117$f3xia)
                          (list
                            '(primitive syntax-error)
                            g$x$23115$f3xia)
                          ((case-lambda
                             ((g$t$23120$f3xia)
                              ((case-lambda
                                 ((g$ls/false$23121$f3xia)
                                  (if g$ls/false$23121$f3xia
                                    (apply
                                      (case-lambda
                                        ((g$pat$23122$f3xia
                                           g$expr$23123$f3xia)
                                         (if (if (g$id?$20809$f3xia
                                                   g$pat$23122$f3xia)
                                               (if (not (g$bound-id-member?$20816$f3xia
                                                          g$pat$23122$f3xia
                                                          g$keys$23116$f3xia))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$21308$f3xia
                                                          g$pat$23122$f3xia)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$20813$f3xia
                                                 g$pat$23122$f3xia
                                                 (g$scheme-stx$21250$f3xia
                                                   '_))
                                             (g$chi-expr$21325$f3xia
                                               g$expr$23123$f3xia
                                               g$r$23118$f3xia
                                               g$mr$23119$f3xia)
                                             ((case-lambda
                                                ((g$lab$23124$f3xia
                                                   g$lex$23125$f3xia)
                                                 ((case-lambda
                                                    ((g$body$23126$f3xia)
                                                     (list
                                                       (g$build-lambda$20731$f3xia
                                                         '#f
                                                         (list
                                                           g$lex$23125$f3xia)
                                                         g$body$23126$f3xia)
                                                       g$x$23115$f3xia)))
                                                  (g$chi-expr$21325$f3xia
                                                    (g$add-subst$20799$f3xia
                                                      (g$make-full-rib$20775$f3xia
                                                        (list
                                                          g$pat$23122$f3xia)
                                                        (list
                                                          g$lab$23124$f3xia))
                                                      g$expr$23123$f3xia)
                                                    (cons
                                                      (cons
                                                        g$lab$23124$f3xia
                                                        (g$make-binding$20825$f3xia
                                                          'syntax
                                                          (cons
                                                            g$lex$23125$f3xia
                                                            '0)))
                                                      g$r$23118$f3xia)
                                                    g$mr$23119$f3xia))))
                                              (g$gen-label$20746$f3xia
                                                g$pat$23122$f3xia)
                                              (g$gen-lexical$20744$f3xia
                                                g$pat$23122$f3xia)))
                                           (g$gen-clause$23103$f3xia
                                             g$x$23115$f3xia
                                             g$keys$23116$f3xia
                                             (cdr g$clauses$23117$f3xia)
                                             g$r$23118$f3xia
                                             g$mr$23119$f3xia
                                             g$pat$23122$f3xia
                                             '#t
                                             g$expr$23123$f3xia))))
                                      g$ls/false$23121$f3xia)
                                    ((case-lambda
                                       ((g$t$23127$f3xia)
                                        ((case-lambda
                                           ((g$ls/false$23128$f3xia)
                                            (if g$ls/false$23128$f3xia
                                              (apply
                                                (case-lambda
                                                  ((g$pat$23129$f3xia
                                                     g$fender$23130$f3xia
                                                     g$expr$23131$f3xia)
                                                   (g$gen-clause$23103$f3xia
                                                     g$x$23115$f3xia
                                                     g$keys$23116$f3xia
                                                     (cdr g$clauses$23117$f3xia)
                                                     g$r$23118$f3xia
                                                     g$mr$23119$f3xia
                                                     g$pat$23129$f3xia
                                                     g$fender$23130$f3xia
                                                     g$expr$23131$f3xia)))
                                                g$ls/false$23128$f3xia)
                                              (g$syntax-violation$21427$f3xia
                                                '#f
                                                '"invalid syntax"
                                                g$t$23127$f3xia))))
                                         (g$syntax-dispatch$21307$f3xia
                                           g$t$23127$f3xia
                                           '(any any any)))))
                                     g$t$23120$f3xia))))
                               (g$syntax-dispatch$21307$f3xia
                                 g$t$23120$f3xia
                                 '(any any)))))
                           (car g$clauses$23117$f3xia)))))))
           (case-lambda
             ((g$e$23105$f3xia g$r$23106$f3xia g$mr$23107$f3xia)
              ((case-lambda
                 ((g$t$23108$f3xia)
                  ((case-lambda
                     ((g$ls/false$23109$f3xia)
                      (if g$ls/false$23109$f3xia
                        (apply
                          (case-lambda
                            ((g$expr$23110$f3xia
                               g$keys$23111$f3xia
                               g$clauses$23112$f3xia)
                             (begin
                               (g$verify-literals$21310$f3xia
                                 g$keys$23111$f3xia
                                 g$e$23105$f3xia)
                               ((case-lambda
                                  ((g$x$23113$f3xia)
                                   ((case-lambda
                                      ((g$body$23114$f3xia)
                                       (list
                                         (g$build-lambda$20731$f3xia
                                           '#f
                                           (list g$x$23113$f3xia)
                                           g$body$23114$f3xia)
                                         (g$chi-expr$21325$f3xia
                                           g$expr$23110$f3xia
                                           g$r$23106$f3xia
                                           g$mr$23107$f3xia))))
                                    (g$gen-syntax-case$23104$f3xia
                                      g$x$23113$f3xia
                                      g$keys$23111$f3xia
                                      g$clauses$23112$f3xia
                                      g$r$23106$f3xia
                                      g$mr$23107$f3xia))))
                                (g$gen-lexical$20744$f3xia 'tmp)))))
                          g$ls/false$23109$f3xia)
                        (g$syntax-violation$21427$f3xia
                          '#f
                          '"invalid syntax"
                          g$t$23108$f3xia))))
                   (g$syntax-dispatch$21307$f3xia
                     g$t$23108$f3xia
                     '(_ any each-any . each-any)))))
               g$e$23105$f3xia))))))))
   (g$ellipsis-map$21312$f3xia
     g$ellipsis-map$24911$f3xia
     (case-lambda
       ((g$proc$23171$f3xia g$ls$23172$f3xia . g$ls*$23173$f3xia)
        (letrec* ((g$who$23174$f3xia '...))
          (begin
            (if (not (g$list?$15545$f3xia g$ls$23172$f3xia))
              (g$assertion-violation$12459$f3xia
                g$who$23174$f3xia
                '"not a list"
                g$ls$23172$f3xia)
              (void))
            (if (not (null? g$ls*$23173$f3xia))
              ((case-lambda
                 ((g$n$23175$f3xia)
                  (g$for-each$15551$f3xia
                    (case-lambda
                      ((g$x$23176$f3xia)
                       (begin
                         (if (not (g$list?$15545$f3xia g$x$23176$f3xia))
                           (g$assertion-violation$12459$f3xia
                             g$who$23174$f3xia
                             '"not a list"
                             g$x$23176$f3xia)
                           (void))
                         (if (not (g$=$17038$f3xia
                                    (g$length$15547$f3xia
                                      g$x$23176$f3xia)
                                    g$n$23175$f3xia))
                           (g$assertion-violation$12459$f3xia
                             g$who$23174$f3xia
                             '"length mismatch"
                             g$ls$23172$f3xia
                             g$x$23176$f3xia)
                           (void)))))
                    g$ls*$23173$f3xia)))
               (g$length$15547$f3xia g$ls$23172$f3xia))
              (void))
            (apply
              g$map$15550$f3xia
              g$proc$23171$f3xia
              g$ls$23172$f3xia
              g$ls*$23173$f3xia))))))
   (g$syntax-transformer$21313$f3xia
     g$syntax-transformer$24912$f3xia
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$23177$f3xia
                     (case-lambda
                       ((g$src$23237$f3xia
                          g$e$23238$f3xia
                          g$r$23239$f3xia
                          g$maps$23240$f3xia
                          g$ellipsis?$23241$f3xia
                          g$vec?$23242$f3xia)
                        ((case-lambda
                           ((g$t$23243$f3xia)
                            ((case-lambda
                               ((g$ls/false$23244$f3xia)
                                (if (if g$ls/false$23244$f3xia
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$23245$f3xia)
                                             (g$ellipsis?$23241$f3xia
                                               g$dots$23245$f3xia)))
                                          g$ls/false$23244$f3xia))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$23246$f3xia)
                                       (g$syntax-violation$21427$f3xia
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$23237$f3xia)))
                                    g$ls/false$23244$f3xia)
                                  ((case-lambda
                                     ((g$t$23247$f3xia)
                                      ((case-lambda
                                         ((g$ls/false$23248$f3xia)
                                          (if (if g$ls/false$23248$f3xia
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$23249$f3xia)
                                                       (g$id?$20809$f3xia
                                                         g$id$23249$f3xia)))
                                                    g$ls/false$23248$f3xia))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$23250$f3xia)
                                                 ((case-lambda
                                                    ((g$label$23251$f3xia)
                                                     ((case-lambda
                                                        ((g$b$23252$f3xia)
                                                         (if (eq? (g$binding-type$20826$f3xia
                                                                    g$b$23252$f3xia)
                                                                  'syntax)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$var.lev$23255$f3xia)
                                                                    (g$gen-ref$23178$f3xia
                                                                      g$src$23237$f3xia
                                                                      (car g$var.lev$23255$f3xia)
                                                                      (cdr g$var.lev$23255$f3xia)
                                                                      g$maps$23240$f3xia)))
                                                                 (g$binding-value$20827$f3xia
                                                                   g$b$23252$f3xia))))
                                                             (case-lambda
                                                               ((g$var$23256$f3xia
                                                                  g$maps$23257$f3xia)
                                                                ((case-lambda
                                                                   ((g$maps$23258$f3xia
                                                                      g$var$23259$f3xia)
                                                                    (values
                                                                      (list
                                                                        'ref
                                                                        g$var$23259$f3xia)
                                                                      g$maps$23258$f3xia)))
                                                                 g$maps$23257$f3xia
                                                                 g$var$23256$f3xia))))
                                                           (values
                                                             (list
                                                               'quote
                                                               g$e$23238$f3xia)
                                                             g$maps$23240$f3xia))))
                                                      (g$label->binding$20824$f3xia
                                                        g$label$23251$f3xia
                                                        g$r$23239$f3xia))))
                                                  (g$id->label$20822$f3xia
                                                    g$e$23238$f3xia))))
                                              g$ls/false$23248$f3xia)
                                            ((case-lambda
                                               ((g$t$23260$f3xia)
                                                ((case-lambda
                                                   ((g$ls/false$23261$f3xia)
                                                    (if (if g$ls/false$23261$f3xia
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$23262$f3xia
                                                                   g$e$23263$f3xia)
                                                                 (g$ellipsis?$23241$f3xia
                                                                   g$dots$23262$f3xia)))
                                                              g$ls/false$23261$f3xia))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$23264$f3xia
                                                             g$e$23265$f3xia)
                                                           (if g$vec?$23242$f3xia
                                                             (g$syntax-violation$21427$f3xia
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$23237$f3xia)
                                                             (g$gen-syntax$23177$f3xia
                                                               g$src$23237$f3xia
                                                               g$e$23265$f3xia
                                                               g$r$23239$f3xia
                                                               g$maps$23240$f3xia
                                                               (case-lambda
                                                                 ((g$x$23266$f3xia)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$23261$f3xia)
                                                      ((case-lambda
                                                         ((g$t$23267$f3xia)
                                                          ((case-lambda
                                                             ((g$ls/false$23268$f3xia)
                                                              (if (if g$ls/false$23268$f3xia
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$23269$f3xia
                                                                             g$dots$23270$f3xia
                                                                             g$y$23271$f3xia)
                                                                           (g$ellipsis?$23241$f3xia
                                                                             g$dots$23270$f3xia)))
                                                                        g$ls/false$23268$f3xia))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$23272$f3xia
                                                                       g$dots$23273$f3xia
                                                                       g$y$23274$f3xia)
                                                                     ((letrec ((g$f$23275$f3xia
                                                                                 (case-lambda
                                                                                   ((g$y$23276$f3xia
                                                                                      g$k$23277$f3xia)
                                                                                    ((case-lambda
                                                                                       ((g$t$23278$f3xia)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$23279$f3xia)
                                                                                            (if g$ls/false$23279$f3xia
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$23277$f3xia
                                                                                                     g$maps$23240$f3xia)))
                                                                                                g$ls/false$23279$f3xia)
                                                                                              ((case-lambda
                                                                                                 ((g$t$23280$f3xia)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$23281$f3xia)
                                                                                                      (if (if g$ls/false$23281$f3xia
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$23282$f3xia
                                                                                                                     g$y$23283$f3xia)
                                                                                                                   (g$ellipsis?$23241$f3xia
                                                                                                                     g$dots$23282$f3xia)))
                                                                                                                g$ls/false$23281$f3xia))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$23284$f3xia
                                                                                                               g$y$23285$f3xia)
                                                                                                             (g$f$23275$f3xia
                                                                                                               g$y$23285$f3xia
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$23286$f3xia)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$23277$f3xia
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$23286$f3xia))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$23289$f3xia
                                                                                                                         g$maps$23290$f3xia)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$23291$f3xia
                                                                                                                             g$x$23292$f3xia)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$23291$f3xia))
                                                                                                                             (g$syntax-violation$21427$f3xia
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$23237$f3xia)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$23180$f3xia
                                                                                                                                 g$x$23292$f3xia
                                                                                                                                 (car g$maps$23291$f3xia))
                                                                                                                               (cdr g$maps$23291$f3xia)))))
                                                                                                                        g$maps$23290$f3xia
                                                                                                                        g$x$23289$f3xia)))))))))
                                                                                                          g$ls/false$23281$f3xia)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$23293$f3xia)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$23294$f3xia)
                                                                                                                (if g$ls/false$23294$f3xia
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$23177$f3xia
                                                                                                                              g$src$23237$f3xia
                                                                                                                              g$y$23276$f3xia
                                                                                                                              g$r$23239$f3xia
                                                                                                                              g$maps$23240$f3xia
                                                                                                                              g$ellipsis?$23241$f3xia
                                                                                                                              g$vec?$23242$f3xia)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$23297$f3xia
                                                                                                                              g$maps$23298$f3xia)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$23299$f3xia
                                                                                                                                  g$y$23300$f3xia)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$23277$f3xia
                                                                                                                                       g$maps$23299$f3xia)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$23303$f3xia
                                                                                                                                       g$maps$23304$f3xia)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$23305$f3xia
                                                                                                                                           g$x$23306$f3xia)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$23179$f3xia
                                                                                                                                             g$x$23306$f3xia
                                                                                                                                             g$y$23300$f3xia)
                                                                                                                                           g$maps$23305$f3xia)))
                                                                                                                                      g$maps$23304$f3xia
                                                                                                                                      g$x$23303$f3xia))))))
                                                                                                                             g$maps$23298$f3xia
                                                                                                                             g$y$23297$f3xia))))))
                                                                                                                    g$ls/false$23294$f3xia)
                                                                                                                  (g$syntax-violation$21427$f3xia
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$23293$f3xia))))
                                                                                                             (g$syntax-dispatch$21307$f3xia
                                                                                                               g$t$23293$f3xia
                                                                                                               '_))))
                                                                                                         g$t$23280$f3xia))))
                                                                                                   (g$syntax-dispatch$21307$f3xia
                                                                                                     g$t$23280$f3xia
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$23278$f3xia))))
                                                                                         (g$syntax-dispatch$21307$f3xia
                                                                                           g$t$23278$f3xia
                                                                                           '()))))
                                                                                     g$y$23276$f3xia)))))
                                                                        g$f$23275$f3xia)
                                                                      g$y$23274$f3xia
                                                                      (case-lambda
                                                                        ((g$maps$23307$f3xia)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$23177$f3xia
                                                                                g$src$23237$f3xia
                                                                                g$x$23272$f3xia
                                                                                g$r$23239$f3xia
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$23307$f3xia)
                                                                                g$ellipsis?$23241$f3xia
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$23310$f3xia
                                                                                g$maps$23311$f3xia)
                                                                              ((case-lambda
                                                                                 ((g$maps$23312$f3xia
                                                                                    g$x$23313$f3xia)
                                                                                  (if (null?
                                                                                        (car g$maps$23312$f3xia))
                                                                                    (g$syntax-violation$21427$f3xia
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$23237$f3xia)
                                                                                    (values
                                                                                      (g$gen-map$23181$f3xia
                                                                                        g$x$23313$f3xia
                                                                                        (car g$maps$23312$f3xia))
                                                                                      (cdr g$maps$23312$f3xia)))))
                                                                               g$maps$23311$f3xia
                                                                               g$x$23310$f3xia)))))))))
                                                                  g$ls/false$23268$f3xia)
                                                                ((case-lambda
                                                                   ((g$t$23314$f3xia)
                                                                    ((case-lambda
                                                                       ((g$ls/false$23315$f3xia)
                                                                        (if g$ls/false$23315$f3xia
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$23316$f3xia
                                                                                 g$y$23317$f3xia)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$23177$f3xia
                                                                                      g$src$23237$f3xia
                                                                                      g$x$23316$f3xia
                                                                                      g$r$23239$f3xia
                                                                                      g$maps$23240$f3xia
                                                                                      g$ellipsis?$23241$f3xia
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$23320$f3xia
                                                                                      g$maps$23321$f3xia)
                                                                                    ((case-lambda
                                                                                       ((g$maps$23322$f3xia
                                                                                          g$xnew$23323$f3xia)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$23177$f3xia
                                                                                               g$src$23237$f3xia
                                                                                               g$y$23317$f3xia
                                                                                               g$r$23239$f3xia
                                                                                               g$maps$23322$f3xia
                                                                                               g$ellipsis?$23241$f3xia
                                                                                               g$vec?$23242$f3xia)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$23326$f3xia
                                                                                               g$maps$23327$f3xia)
                                                                                             ((case-lambda
                                                                                                ((g$maps$23328$f3xia
                                                                                                   g$ynew$23329$f3xia)
                                                                                                 (values
                                                                                                   (g$gen-cons$23182$f3xia
                                                                                                     g$e$23238$f3xia
                                                                                                     g$x$23316$f3xia
                                                                                                     g$y$23317$f3xia
                                                                                                     g$xnew$23323$f3xia
                                                                                                     g$ynew$23329$f3xia)
                                                                                                   g$maps$23328$f3xia)))
                                                                                              g$maps$23327$f3xia
                                                                                              g$ynew$23326$f3xia))))))
                                                                                     g$maps$23321$f3xia
                                                                                     g$xnew$23320$f3xia))))))
                                                                            g$ls/false$23315$f3xia)
                                                                          ((case-lambda
                                                                             ((g$t$23330$f3xia)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$23331$f3xia)
                                                                                  (if g$ls/false$23331$f3xia
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$23332$f3xia)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$23177$f3xia
                                                                                                g$src$23237$f3xia
                                                                                                g$ls$23332$f3xia
                                                                                                g$r$23239$f3xia
                                                                                                g$maps$23240$f3xia
                                                                                                g$ellipsis?$23241$f3xia
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$23335$f3xia
                                                                                                g$maps$23336$f3xia)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$23337$f3xia
                                                                                                    g$lsnew$23338$f3xia)
                                                                                                  (values
                                                                                                    (g$gen-vector$23183$f3xia
                                                                                                      g$e$23238$f3xia
                                                                                                      g$ls$23332$f3xia
                                                                                                      g$lsnew$23338$f3xia)
                                                                                                    g$maps$23337$f3xia)))
                                                                                               g$maps$23336$f3xia
                                                                                               g$lsnew$23335$f3xia))))))
                                                                                      g$ls/false$23331$f3xia)
                                                                                    ((case-lambda
                                                                                       ((g$t$23339$f3xia)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$23340$f3xia)
                                                                                            (if g$ls/false$23340$f3xia
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$23238$f3xia)
                                                                                                     g$maps$23240$f3xia)))
                                                                                                g$ls/false$23340$f3xia)
                                                                                              (g$syntax-violation$21427$f3xia
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$23339$f3xia))))
                                                                                         (g$syntax-dispatch$21307$f3xia
                                                                                           g$t$23339$f3xia
                                                                                           '_))))
                                                                                     g$t$23330$f3xia))))
                                                                               (g$syntax-dispatch$21307$f3xia
                                                                                 g$t$23330$f3xia
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$23314$f3xia))))
                                                                     (g$syntax-dispatch$21307$f3xia
                                                                       g$t$23314$f3xia
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$23267$f3xia))))
                                                           (g$syntax-dispatch$21307$f3xia
                                                             g$t$23267$f3xia
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$23260$f3xia))))
                                                 (g$syntax-dispatch$21307$f3xia
                                                   g$t$23260$f3xia
                                                   '(any any)))))
                                             g$t$23247$f3xia))))
                                       (g$syntax-dispatch$21307$f3xia
                                         g$t$23247$f3xia
                                         'any))))
                                   g$t$23243$f3xia))))
                             (g$syntax-dispatch$21307$f3xia
                               g$t$23243$f3xia
                               'any))))
                         g$e$23238$f3xia))))
                   (g$gen-ref$23178$f3xia
                     (case-lambda
                       ((g$src$23224$f3xia
                          g$var$23225$f3xia
                          g$level$23226$f3xia
                          g$maps$23227$f3xia)
                        (if (g$=$17038$f3xia g$level$23226$f3xia '0)
                          (values g$var$23225$f3xia g$maps$23227$f3xia)
                          (if (null? g$maps$23227$f3xia)
                            (g$syntax-violation$21427$f3xia
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$23224$f3xia)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$23178$f3xia
                                   g$src$23224$f3xia
                                   g$var$23225$f3xia
                                   (- g$level$23226$f3xia '1)
                                   (cdr g$maps$23227$f3xia))))
                              (case-lambda
                                ((g$outer-var$23230$f3xia
                                   g$outer-maps$23231$f3xia)
                                 ((case-lambda
                                    ((g$outer-maps$23232$f3xia
                                       g$outer-var$23233$f3xia)
                                     ((case-lambda
                                        ((g$t$23234$f3xia)
                                         (if g$t$23234$f3xia
                                           ((case-lambda
                                              ((g$b$23235$f3xia)
                                               (values
                                                 (cdr g$b$23235$f3xia)
                                                 g$maps$23227$f3xia)))
                                            g$t$23234$f3xia)
                                           ((case-lambda
                                              (()
                                               (begin
                                                 '#f
                                                 ((case-lambda
                                                    ((g$inner-var$23236$f3xia)
                                                     (values
                                                       g$inner-var$23236$f3xia
                                                       (cons
                                                         (cons
                                                           (cons
                                                             g$outer-var$23233$f3xia
                                                             g$inner-var$23236$f3xia)
                                                           (car g$maps$23227$f3xia))
                                                         g$outer-maps$23232$f3xia))))
                                                  (g$gen-lexical$20744$f3xia
                                                    'tmp)))))))))
                                      (g$assq$15534$f3xia
                                        g$outer-var$23233$f3xia
                                        (car g$maps$23227$f3xia)))))
                                  g$outer-maps$23231$f3xia
                                  g$outer-var$23230$f3xia)))))))))
                   (g$gen-append$23179$f3xia
                     (case-lambda
                       ((g$x$23222$f3xia g$y$23223$f3xia)
                        (if (g$equal?$19443$f3xia g$y$23223$f3xia ''())
                          g$x$23222$f3xia
                          (list
                            'append
                            g$x$23222$f3xia
                            g$y$23223$f3xia)))))
                   (g$gen-mappend$23180$f3xia
                     (case-lambda
                       ((g$e$23220$f3xia g$map-env$23221$f3xia)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$23181$f3xia
                            g$e$23220$f3xia
                            g$map-env$23221$f3xia)))))
                   (g$gen-map$23181$f3xia
                     (case-lambda
                       ((g$e$23211$f3xia g$map-env$23212$f3xia)
                        ((case-lambda
                           ((g$formals$23213$f3xia
                              g$actuals$23214$f3xia)
                            (if (eq? (car g$e$23211$f3xia) 'ref)
                              (car g$actuals$23214$f3xia)
                              (if (g$for-all$15548$f3xia
                                    (case-lambda
                                      ((g$x$23215$f3xia)
                                       (if (eq? (car g$x$23215$f3xia)
                                                'ref)
                                         (begin
                                           '#f
                                           (g$memq$15538$f3xia
                                             (g$cadr$16014$f3xia
                                               g$x$23215$f3xia)
                                             g$formals$23213$f3xia))
                                         '#f)))
                                    (cdr g$e$23211$f3xia))
                                ((case-lambda
                                   ((g$args$23216$f3xia)
                                    (cons
                                      'map
                                      (cons
                                        (list
                                          'primitive
                                          (car g$e$23211$f3xia))
                                        g$args$23216$f3xia))))
                                 (g$map$15550$f3xia
                                   ((case-lambda
                                      ((g$r$23217$f3xia)
                                       (case-lambda
                                         ((g$x$23218$f3xia)
                                          (cdr (g$assq$15534$f3xia
                                                 (g$cadr$16014$f3xia
                                                   g$x$23218$f3xia)
                                                 g$r$23217$f3xia))))))
                                    (g$map$15550$f3xia
                                      cons
                                      g$formals$23213$f3xia
                                      g$actuals$23214$f3xia))
                                   (cdr g$e$23211$f3xia)))
                                ((case-lambda
                                   (()
                                    (begin
                                      '#f
                                      (g$cons*$15552$f3xia
                                        'map
                                        (list
                                          'lambda
                                          g$formals$23213$f3xia
                                          g$e$23211$f3xia)
                                        g$actuals$23214$f3xia)))))))))
                         (g$map$15550$f3xia cdr g$map-env$23212$f3xia)
                         (g$map$15550$f3xia
                           (case-lambda
                             ((g$x$23219$f3xia)
                              (list 'ref (car g$x$23219$f3xia))))
                           g$map-env$23212$f3xia)))))
                   (g$gen-cons$23182$f3xia
                     (case-lambda
                       ((g$e$23203$f3xia
                          g$x$23204$f3xia
                          g$y$23205$f3xia
                          g$xnew$23206$f3xia
                          g$ynew$23207$f3xia)
                        ((case-lambda
                           ((g$t$23208$f3xia)
                            (if (eqv? g$t$23208$f3xia 'quote)
                              (if (eq? (car g$xnew$23206$f3xia) 'quote)
                                ((case-lambda
                                   ((g$xnew$23209$f3xia
                                      g$ynew$23210$f3xia)
                                    (if (if (eq? g$xnew$23209$f3xia
                                                 g$x$23204$f3xia)
                                          (begin
                                            '#f
                                            (eq? g$ynew$23210$f3xia
                                                 g$y$23205$f3xia))
                                          '#f)
                                      (list 'quote g$e$23203$f3xia)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$23209$f3xia
                                          g$ynew$23210$f3xia)))))
                                 (g$cadr$16014$f3xia g$xnew$23206$f3xia)
                                 (g$cadr$16014$f3xia
                                   g$ynew$23207$f3xia))
                                (if (null?
                                      (g$cadr$16014$f3xia
                                        g$ynew$23207$f3xia))
                                  (list 'list g$xnew$23206$f3xia)
                                  (list
                                    'cons
                                    g$xnew$23206$f3xia
                                    g$ynew$23207$f3xia)))
                              (if (eqv? g$t$23208$f3xia 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$23206$f3xia
                                    (cdr g$ynew$23207$f3xia)))
                                ((case-lambda
                                   (()
                                    (begin
                                      '#f
                                      (list
                                        'cons
                                        g$xnew$23206$f3xia
                                        g$ynew$23207$f3xia)))))))))
                         (car g$ynew$23207$f3xia)))))
                   (g$gen-vector$23183$f3xia
                     (case-lambda
                       ((g$e$23200$f3xia
                          g$ls$23201$f3xia
                          g$lsnew$23202$f3xia)
                        (if (eq? (car g$lsnew$23202$f3xia) 'quote)
                          (if (eq? (g$cadr$16014$f3xia
                                     g$lsnew$23202$f3xia)
                                   g$ls$23201$f3xia)
                            (list 'quote g$e$23200$f3xia)
                            (list
                              'quote
                              (g$list->vector$16003$f3xia
                                (g$cadr$16014$f3xia
                                  g$lsnew$23202$f3xia))))
                          (if (eq? (car g$lsnew$23202$f3xia) 'list)
                            (cons 'vector (cdr g$lsnew$23202$f3xia))
                            ((case-lambda
                               (()
                                (begin
                                  '#f
                                  (list
                                    'list->vector
                                    g$lsnew$23202$f3xia))))))))))
                   (g$regen$23184$f3xia
                     (case-lambda
                       ((g$x$23197$f3xia)
                        ((case-lambda
                           ((g$t$23198$f3xia)
                            (if (eqv? g$t$23198$f3xia 'ref)
                              (g$cadr$16014$f3xia g$x$23197$f3xia)
                              (if (eqv? g$t$23198$f3xia 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$16014$f3xia g$x$23197$f3xia))
                                (if (eqv? g$t$23198$f3xia 'quote)
                                  (list
                                    'quote
                                    (g$cadr$16014$f3xia
                                      g$x$23197$f3xia))
                                  (if (eqv? g$t$23198$f3xia 'lambda)
                                    (g$build-lambda$20731$f3xia
                                      '#f
                                      (g$cadr$16014$f3xia
                                        g$x$23197$f3xia)
                                      (g$regen$23184$f3xia
                                        (g$caddr$16020$f3xia
                                          g$x$23197$f3xia)))
                                    (if (eqv? g$t$23198$f3xia 'map)
                                      ((case-lambda
                                         ((g$ls$23199$f3xia)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$23199$f3xia)))
                                       (g$map$15550$f3xia
                                         g$regen$23184$f3xia
                                         (cdr g$x$23197$f3xia)))
                                      ((case-lambda
                                         (()
                                          (begin
                                            '#f
                                            (cons
                                              (list
                                                'primitive
                                                (car g$x$23197$f3xia))
                                              (g$map$15550$f3xia
                                                g$regen$23184$f3xia
                                                (cdr g$x$23197$f3xia))))))))))))))
                         (car g$x$23197$f3xia))))))
           (case-lambda
             ((g$e$23185$f3xia g$r$23186$f3xia g$mr$23187$f3xia)
              ((case-lambda
                 ((g$t$23188$f3xia)
                  ((case-lambda
                     ((g$ls/false$23189$f3xia)
                      (if g$ls/false$23189$f3xia
                        (apply
                          (case-lambda
                            ((g$x$23190$f3xia)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$23177$f3xia
                                    g$e$23185$f3xia
                                    g$x$23190$f3xia
                                    g$r$23186$f3xia
                                    '()
                                    g$ellipsis?$21308$f3xia
                                    '#f)))
                               (case-lambda
                                 ((g$e$23193$f3xia g$maps$23194$f3xia)
                                  ((case-lambda
                                     ((g$maps$23195$f3xia
                                        g$e$23196$f3xia)
                                      (g$regen$23184$f3xia
                                        g$e$23196$f3xia)))
                                   g$maps$23194$f3xia
                                   g$e$23193$f3xia))))))
                          g$ls/false$23189$f3xia)
                        (g$syntax-violation$21427$f3xia
                          '#f
                          '"invalid syntax"
                          g$t$23188$f3xia))))
                   (g$syntax-dispatch$21307$f3xia
                     g$t$23188$f3xia
                     '(_ any)))))
               g$e$23185$f3xia))))))))
   (g$core-macro-transformer$21314$f3xia
     g$core-macro-transformer$24913$f3xia
     (case-lambda
       ((g$name$23341$f3xia)
        ((case-lambda
           ((g$t$23342$f3xia)
            (if (eqv? g$t$23342$f3xia 'quote)
              g$quote-transformer$21267$f3xia
              (if (eqv? g$t$23342$f3xia 'lambda)
                g$lambda-transformer$21269$f3xia
                (if (eqv? g$t$23342$f3xia 'case-lambda)
                  g$case-lambda-transformer$21268$f3xia
                  (if (eqv? g$t$23342$f3xia 'letrec)
                    g$letrec-transformer$21257$f3xia
                    (if (eqv? g$t$23342$f3xia 'letrec*)
                      g$letrec*-transformer$21258$f3xia
                      (if (eqv? g$t$23342$f3xia 'if)
                        g$if-transformer$21265$f3xia
                        (if (eqv? g$t$23342$f3xia 'foreign-call)
                          g$foreign-call-transformer$21305$f3xia
                          (if (eqv? g$t$23342$f3xia 'syntax-case)
                            g$syntax-case-transformer$21311$f3xia
                            (if (eqv? g$t$23342$f3xia 'syntax)
                              g$syntax-transformer$21313$f3xia
                              (if (eqv?
                                    g$t$23342$f3xia
                                    'type-descriptor)
                                g$type-descriptor-transformer$21260$f3xia
                                (if (eqv?
                                      g$t$23342$f3xia
                                      'record-type-descriptor)
                                  g$record-type-descriptor-transformer$21261$f3xia
                                  (if (eqv?
                                        g$t$23342$f3xia
                                        'record-constructor-descriptor)
                                    g$record-constructor-descriptor-transformer$21262$f3xia
                                    (if (eqv?
                                          g$t$23342$f3xia
                                          'fluid-let-syntax)
                                      g$fluid-let-syntax-transformer$21259$f3xia
                                      ((case-lambda
                                         (()
                                          (begin
                                            '#f
                                            (g$assertion-violation$12459$f3xia
                                              'macro-transformer
                                              '"BUG: cannot find transformer"
                                              g$name$23341$f3xia))))))))))))))))))))
         g$name$23341$f3xia))))
   (g$file-options-macro$21315$f3xia
     g$file-options-macro$24914$f3xia
     (case-lambda
       ((g$x$23343$f3xia)
        (letrec* ((g$valid-option?$23344$f3xia
                    (case-lambda
                      ((g$x$23349$f3xia)
                       (if (g$id?$20809$f3xia g$x$23349$f3xia)
                         (begin
                           '#f
                           (g$memq$15538$f3xia
                             (g$id->sym$20810$f3xia g$x$23349$f3xia)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$23345$f3xia)
              ((case-lambda
                 ((g$ls/false$23346$f3xia)
                  (if (if g$ls/false$23346$f3xia
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$23347$f3xia)
                               (if (g$for-all$15548$f3xia
                                     g$valid-option?$23344$f3xia
                                     g$opt*$23347$f3xia)
                                 (begin
                                   '#f
                                   (g$file-options-spec$19652$f3xia
                                     (g$map$15550$f3xia
                                       g$id->sym$20810$f3xia
                                       g$opt*$23347$f3xia)))
                                 '#f)))
                            g$ls/false$23346$f3xia))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$23348$f3xia)
                         (g$bless$21270$f3xia
                           (list
                             'quote
                             (g$file-options-spec$19652$f3xia
                               (g$map$15550$f3xia
                                 g$id->sym$20810$f3xia
                                 g$opt*$23348$f3xia))))))
                      g$ls/false$23346$f3xia)
                    (g$syntax-violation$21427$f3xia
                      '#f
                      '"invalid syntax"
                      g$t$23345$f3xia))))
               (g$syntax-dispatch$21307$f3xia
                 g$t$23345$f3xia
                 '(_ . each-any)))))
           g$x$23343$f3xia)))))
   (g$symbol-macro$21316$f3xia
     g$symbol-macro$24915$f3xia
     (case-lambda
       ((g$x$23350$f3xia g$set$23351$f3xia)
        ((case-lambda
           ((g$t$23352$f3xia)
            ((case-lambda
               ((g$ls/false$23353$f3xia)
                (if (if g$ls/false$23353$f3xia
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$23354$f3xia)
                             (if (g$id?$20809$f3xia g$name$23354$f3xia)
                               (begin
                                 '#f
                                 (g$memq$15538$f3xia
                                   (g$id->sym$20810$f3xia
                                     g$name$23354$f3xia)
                                   g$set$23351$f3xia))
                               '#f)))
                          g$ls/false$23353$f3xia))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$23355$f3xia)
                       (g$bless$21270$f3xia
                         (list 'quote g$name$23355$f3xia))))
                    g$ls/false$23353$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$23352$f3xia))))
             (g$syntax-dispatch$21307$f3xia g$t$23352$f3xia '(_ any)))))
         g$x$23350$f3xia))))
   (g$macro-transformer$21317$f3xia
     g$macro-transformer$24916$f3xia
     (case-lambda
       ((g$x$23356$f3xia)
        (if (g$procedure?$15978$f3xia g$x$23356$f3xia)
          g$x$23356$f3xia
          (if (g$symbol?$15976$f3xia g$x$23356$f3xia)
            ((case-lambda
               ((g$t$23357$f3xia)
                (if (eqv? g$t$23357$f3xia 'define-record-type)
                  g$define-record-type-macro$21301$f3xia
                  (if (eqv? g$t$23357$f3xia 'define-struct)
                    g$define-struct-macro$21300$f3xia
                    (if (eqv? g$t$23357$f3xia 'include)
                      g$include-macro$21295$f3xia
                      (if (eqv? g$t$23357$f3xia 'cond)
                        g$cond-macro$21293$f3xia
                        (if (eqv? g$t$23357$f3xia 'let)
                          g$let-macro$21273$f3xia
                          (if (eqv? g$t$23357$f3xia 'do)
                            g$do-macro$21289$f3xia
                            (if (eqv? g$t$23357$f3xia 'or)
                              g$or-macro$21291$f3xia
                              (if (eqv? g$t$23357$f3xia 'and)
                                g$and-macro$21292$f3xia
                                (if (eqv? g$t$23357$f3xia 'let*)
                                  g$let*-macro$21290$f3xia
                                  (if (eqv? g$t$23357$f3xia 'let-values)
                                    g$let-values-macro$21274$f3xia
                                    (if (eqv?
                                          g$t$23357$f3xia
                                          'let*-values)
                                      g$let*-values-macro$21275$f3xia
                                      (if (eqv?
                                            g$t$23357$f3xia
                                            'syntax-rules)
                                        g$syntax-rules-macro$21297$f3xia
                                        (if (eqv?
                                              g$t$23357$f3xia
                                              'quasiquote)
                                          g$quasiquote-macro$21298$f3xia
                                          (if (eqv?
                                                g$t$23357$f3xia
                                                'quasisyntax)
                                            g$quasisyntax-macro$21299$f3xia
                                            (if (eqv?
                                                  g$t$23357$f3xia
                                                  'with-syntax)
                                              g$with-syntax-macro$21271$f3xia
                                              (if (eqv?
                                                    g$t$23357$f3xia
                                                    'when)
                                                g$when-macro$21263$f3xia
                                                (if (eqv?
                                                      g$t$23357$f3xia
                                                      'unless)
                                                  g$unless-macro$21264$f3xia
                                                  (if (eqv?
                                                        g$t$23357$f3xia
                                                        'case)
                                                    g$case-macro$21266$f3xia
                                                    (if (eqv?
                                                          g$t$23357$f3xia
                                                          'identifier-syntax)
                                                      g$identifier-syntax-macro$21288$f3xia
                                                      (if (eqv?
                                                            g$t$23357$f3xia
                                                            'time)
                                                        g$time-macro$21284$f3xia
                                                        (if (eqv?
                                                              g$t$23357$f3xia
                                                              'delay)
                                                          g$delay-macro$21285$f3xia
                                                          (if (eqv?
                                                                g$t$23357$f3xia
                                                                'assert)
                                                            g$assert-macro$21286$f3xia
                                                            (if (eqv?
                                                                  g$t$23357$f3xia
                                                                  'endianness)
                                                              g$endianness-macro$21287$f3xia
                                                              (if (eqv?
                                                                    g$t$23357$f3xia
                                                                    'guard)
                                                                g$guard-macro$21282$f3xia
                                                                (if (eqv?
                                                                      g$t$23357$f3xia
                                                                      'define-enumeration)
                                                                  g$define-enumeration-macro$21283$f3xia
                                                                  (if (eqv?
                                                                        g$t$23357$f3xia
                                                                        'trace-lambda)
                                                                    g$trace-lambda-macro$21276$f3xia
                                                                    (if (eqv?
                                                                          g$t$23357$f3xia
                                                                          'trace-define)
                                                                      g$trace-define-macro$21277$f3xia
                                                                      (if (eqv?
                                                                            g$t$23357$f3xia
                                                                            'trace-define-syntax)
                                                                        g$trace-define-syntax-macro$21278$f3xia
                                                                        (if (eqv?
                                                                              g$t$23357$f3xia
                                                                              'trace-let-syntax)
                                                                          g$trace-let-syntax-macro$21280$f3xia
                                                                          (if (eqv?
                                                                                g$t$23357$f3xia
                                                                                'trace-letrec-syntax)
                                                                            g$trace-letrec-syntax-macro$21281$f3xia
                                                                            (if (eqv?
                                                                                  g$t$23357$f3xia
                                                                                  'define-condition-type)
                                                                              g$define-condition-type-macro$21302$f3xia
                                                                              (if (eqv?
                                                                                    g$t$23357$f3xia
                                                                                    'parameterize)
                                                                                g$parameterize-macro$21304$f3xia
                                                                                (if (eqv?
                                                                                      g$t$23357$f3xia
                                                                                      'include-into)
                                                                                  g$include-into-macro$21296$f3xia
                                                                                  (if (eqv?
                                                                                        g$t$23357$f3xia
                                                                                        'eol-style)
                                                                                    (case-lambda
                                                                                      ((g$x$23358$f3xia)
                                                                                       (g$symbol-macro$21316$f3xia
                                                                                         g$x$23358$f3xia
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (eqv?
                                                                                          g$t$23357$f3xia
                                                                                          'error-handling-mode)
                                                                                      (case-lambda
                                                                                        ((g$x$23359$f3xia)
                                                                                         (g$symbol-macro$21316$f3xia
                                                                                           g$x$23359$f3xia
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (eqv?
                                                                                            g$t$23357$f3xia
                                                                                            'buffer-mode)
                                                                                        (case-lambda
                                                                                          ((g$x$23360$f3xia)
                                                                                           (g$symbol-macro$21316$f3xia
                                                                                             g$x$23360$f3xia
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (eqv?
                                                                                              g$t$23357$f3xia
                                                                                              'file-options)
                                                                                          g$file-options-macro$21315$f3xia
                                                                                          (if (g$memv$15539$f3xia
                                                                                                g$t$23357$f3xia
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$21303$f3xia
                                                                                            ((case-lambda
                                                                                               (()
                                                                                                (begin
                                                                                                  '#f
                                                                                                  (g$error$12460$f3xia
                                                                                                    'macro-transformer
                                                                                                    '"BUG: invalid macro"
                                                                                                    g$x$23356$f3xia)))))))))))))))))))))))))))))))))))))))))))))
             g$x$23356$f3xia)
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$error$12460$f3xia
                    'core-macro-transformer
                    '"BUG: invalid macro"
                    g$x$23356$f3xia))))))))))
   (g$local-macro-transformer$21318$f3xia
     g$local-macro-transformer$24917$f3xia
     (case-lambda ((g$x$23361$f3xia) (car g$x$23361$f3xia))))
   (g$do-macro-call$21319$f3xia
     g$do-macro-call$24918$f3xia
     (case-lambda
       ((g$transformer$23362$f3xia g$expr$23363$f3xia g$r$23364$f3xia)
        (letrec* ((g$return$23365$f3xia
                    (case-lambda
                      ((g$x$23373$f3xia)
                       (begin
                         ((letrec ((g$f$23374$f3xia
                                     (case-lambda
                                       ((g$x$23375$f3xia)
                                        (if (not (g$stx?$20781$f3xia
                                                   g$x$23375$f3xia))
                                          (if (pair? g$x$23375$f3xia)
                                            (begin
                                              (g$f$23374$f3xia
                                                (car g$x$23375$f3xia))
                                              (g$f$23374$f3xia
                                                (cdr g$x$23375$f3xia)))
                                            (if (g$vector?$15974$f3xia
                                                  g$x$23375$f3xia)
                                              (g$vector-for-each$16064$f3xia
                                                g$f$23374$f3xia
                                                g$x$23375$f3xia)
                                              (if (g$symbol?$15976$f3xia
                                                    g$x$23375$f3xia)
                                                (g$syntax-violation$21427$f3xia
                                                  '#f
                                                  '"raw symbol encountered in output of macro"
                                                  g$expr$23363$f3xia
                                                  g$x$23375$f3xia)
                                                (void))))
                                          (void))))))
                            g$f$23374$f3xia)
                          g$x$23373$f3xia)
                         (g$add-mark$20798$f3xia
                           (g$gen-mark$20793$f3xia)
                           g$x$23373$f3xia
                           g$expr$23363$f3xia))))))
          ((case-lambda
             ((g$x$23366$f3xia)
              (if (g$procedure?$15978$f3xia g$x$23366$f3xia)
                (g$return$23365$f3xia
                  (g$x$23366$f3xia
                    (case-lambda
                      ((g$id$23367$f3xia)
                       (begin
                         (if (not (g$id?$20809$f3xia g$id$23367$f3xia))
                           (g$assertion-violation$12459$f3xia
                             'rho
                             '"not an identifier"
                             g$id$23367$f3xia)
                           (void))
                         ((case-lambda
                            ((g$label$23368$f3xia)
                             ((case-lambda
                                ((g$binding$23369$f3xia)
                                 ((case-lambda
                                    ((g$t$23370$f3xia)
                                     (if (eqv?
                                           g$t$23370$f3xia
                                           'local-ctv)
                                       (g$cadr$16014$f3xia
                                         g$binding$23369$f3xia)
                                       (if (eqv?
                                             g$t$23370$f3xia
                                             'global-ctv)
                                         ((case-lambda
                                            ((g$lib$23371$f3xia
                                               g$loc$23372$f3xia)
                                             (begin
                                               (g$visit-library$20516$f3xia
                                                 g$lib$23371$f3xia)
                                               (symbol-value
                                                 g$loc$23372$f3xia))))
                                          (g$cadr$16014$f3xia
                                            g$binding$23369$f3xia)
                                          (g$cddr$16016$f3xia
                                            g$binding$23369$f3xia))
                                         ((case-lambda
                                            (() (begin '#f '#f))))))))
                                  (car g$binding$23369$f3xia))))
                              (g$label->binding$20824$f3xia
                                g$label$23368$f3xia
                                g$r$23364$f3xia))))
                          (g$id->label$20822$f3xia
                            g$id$23367$f3xia)))))))
                (g$return$23365$f3xia g$x$23366$f3xia))))
           (g$transformer$23362$f3xia
             (g$add-mark$20798$f3xia
               g$anti-mark$20794$f3xia
               g$expr$23363$f3xia
               '#f)))))))
   (g$chi-macro$21320$f3xia
     g$chi-macro$24919$f3xia
     (case-lambda
       ((g$p$23376$f3xia g$e$23377$f3xia g$r$23378$f3xia)
        (g$do-macro-call$21319$f3xia
          (g$macro-transformer$21317$f3xia g$p$23376$f3xia)
          g$e$23377$f3xia
          g$r$23378$f3xia))))
   (g$chi-local-macro$21321$f3xia
     g$chi-local-macro$24920$f3xia
     (case-lambda
       ((g$p$23379$f3xia g$e$23380$f3xia g$r$23381$f3xia)
        (g$do-macro-call$21319$f3xia
          (g$local-macro-transformer$21318$f3xia g$p$23379$f3xia)
          g$e$23380$f3xia
          g$r$23381$f3xia))))
   (g$chi-global-macro$21322$f3xia
     g$chi-global-macro$24921$f3xia
     (case-lambda
       ((g$p$23382$f3xia g$e$23383$f3xia g$r$23384$f3xia)
        ((case-lambda
           ((g$lib$23385$f3xia g$loc$23386$f3xia)
            (begin
              (g$visit-library$20516$f3xia g$lib$23385$f3xia)
              ((case-lambda
                 ((g$x$23387$f3xia)
                  ((case-lambda
                     ((g$transformer$23388$f3xia)
                      (g$do-macro-call$21319$f3xia
                        g$transformer$23388$f3xia
                        g$e$23383$f3xia
                        g$r$23384$f3xia)))
                   (if (g$procedure?$15978$f3xia g$x$23387$f3xia)
                     g$x$23387$f3xia
                     ((case-lambda
                        (()
                         (begin
                           '#f
                           (g$assertion-violation$12459$f3xia
                             'chi-global-macro
                             '"BUG: not a procedure"
                             g$x$23387$f3xia)))))))))
               (symbol-value g$loc$23386$f3xia)))))
         (car g$p$23382$f3xia)
         (cdr g$p$23382$f3xia)))))
   (g$chi-expr*$21323$f3xia
     g$chi-expr*$24922$f3xia
     (case-lambda
       ((g$e*$23389$f3xia g$r$23390$f3xia g$mr$23391$f3xia)
        (if (null? g$e*$23389$f3xia)
          '()
          ((case-lambda
             (()
              (begin
                '#f
                ((case-lambda
                   ((g$e$23392$f3xia)
                    (cons
                      g$e$23392$f3xia
                      (g$chi-expr*$21323$f3xia
                        (cdr g$e*$23389$f3xia)
                        g$r$23390$f3xia
                        g$mr$23391$f3xia))))
                 (g$chi-expr$21325$f3xia
                   (car g$e*$23389$f3xia)
                   g$r$23390$f3xia
                   g$mr$23391$f3xia))))))))))
   (g$chi-application$21324$f3xia
     g$chi-application$24923$f3xia
     (case-lambda
       ((g$e$23393$f3xia g$r$23394$f3xia g$mr$23395$f3xia)
        ((case-lambda
           ((g$t$23396$f3xia)
            ((case-lambda
               ((g$ls/false$23397$f3xia)
                (if g$ls/false$23397$f3xia
                  (apply
                    (case-lambda
                      ((g$rator$23398$f3xia g$rands$23399$f3xia)
                       ((case-lambda
                          ((g$rator$23400$f3xia)
                           (cons
                             g$rator$23400$f3xia
                             (g$chi-expr*$21323$f3xia
                               g$rands$23399$f3xia
                               g$r$23394$f3xia
                               g$mr$23395$f3xia))))
                        (g$chi-expr$21325$f3xia
                          g$rator$23398$f3xia
                          g$r$23394$f3xia
                          g$mr$23395$f3xia))))
                    g$ls/false$23397$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$23396$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$23396$f3xia
               '(any . each-any)))))
         g$e$23393$f3xia))))
   (g$chi-expr$21325$f3xia
     g$chi-expr$24924$f3xia
     (case-lambda
       ((g$e$23401$f3xia g$r$23402$f3xia g$mr$23403$f3xia)
        (call-with-values
          (case-lambda
            (()
             (g$syntax-type$20829$f3xia
               g$e$23401$f3xia
               g$r$23402$f3xia)))
          (case-lambda
            ((g$type$23407$f3xia g$value$23408$f3xia g$kwd$23409$f3xia)
             ((case-lambda
                ((g$kwd$23410$f3xia
                   g$value$23411$f3xia
                   g$type$23412$f3xia)
                 ((case-lambda
                    ((g$t$23413$f3xia)
                     (if (eqv? g$t$23413$f3xia 'core-macro)
                       ((case-lambda
                          ((g$transformer$23414$f3xia)
                           (g$transformer$23414$f3xia
                             g$e$23401$f3xia
                             g$r$23402$f3xia
                             g$mr$23403$f3xia)))
                        (g$core-macro-transformer$21314$f3xia
                          g$value$23411$f3xia))
                       (if (eqv? g$t$23413$f3xia 'global)
                         ((case-lambda
                            ((g$lib$23415$f3xia)
                             ((case-lambda
                                ((g$loc$23416$f3xia)
                                 (begin
                                   ((g$inv-collector$21362$f3xia)
                                    g$lib$23415$f3xia)
                                   g$loc$23416$f3xia)))
                              (cdr g$value$23411$f3xia))))
                          (car g$value$23411$f3xia))
                         (if (eqv? g$t$23413$f3xia 'core-prim)
                           ((case-lambda
                              ((g$name$23417$f3xia)
                               (list 'primitive g$name$23417$f3xia)))
                            g$value$23411$f3xia)
                           (if (eqv? g$t$23413$f3xia 'call)
                             (g$chi-application$21324$f3xia
                               g$e$23401$f3xia
                               g$r$23402$f3xia
                               g$mr$23403$f3xia)
                             (if (eqv? g$t$23413$f3xia 'lexical)
                               ((case-lambda
                                  ((g$lex$23418$f3xia)
                                   g$lex$23418$f3xia))
                                (g$lexical-var$21251$f3xia
                                  g$value$23411$f3xia))
                               (if (g$memv$15539$f3xia
                                     g$t$23413$f3xia
                                     '(global-macro global-macro!))
                                 (g$chi-expr$21325$f3xia
                                   (g$chi-global-macro$21322$f3xia
                                     g$value$23411$f3xia
                                     g$e$23401$f3xia
                                     g$r$23402$f3xia)
                                   g$r$23402$f3xia
                                   g$mr$23403$f3xia)
                                 (if (g$memv$15539$f3xia
                                       g$t$23413$f3xia
                                       '(local-macro local-macro!))
                                   (g$chi-expr$21325$f3xia
                                     (g$chi-local-macro$21321$f3xia
                                       g$value$23411$f3xia
                                       g$e$23401$f3xia
                                       g$r$23402$f3xia)
                                     g$r$23402$f3xia
                                     g$mr$23403$f3xia)
                                   (if (g$memv$15539$f3xia
                                         g$t$23413$f3xia
                                         '(macro macro!))
                                     (g$chi-expr$21325$f3xia
                                       (g$chi-macro$21320$f3xia
                                         g$value$23411$f3xia
                                         g$e$23401$f3xia
                                         g$r$23402$f3xia)
                                       g$r$23402$f3xia
                                       g$mr$23403$f3xia)
                                     (if (eqv?
                                           g$t$23413$f3xia
                                           'constant)
                                       ((case-lambda
                                          ((g$datum$23419$f3xia)
                                           (list
                                             'quote
                                             g$datum$23419$f3xia)))
                                        g$value$23411$f3xia)
                                       (if (eqv? g$t$23413$f3xia 'set!)
                                         (g$chi-set!$21326$f3xia
                                           g$e$23401$f3xia
                                           g$r$23402$f3xia
                                           g$mr$23403$f3xia)
                                         (if (eqv?
                                               g$t$23413$f3xia
                                               'begin)
                                           ((case-lambda
                                              ((g$t$23420$f3xia)
                                               ((case-lambda
                                                  ((g$ls/false$23421$f3xia)
                                                   (if g$ls/false$23421$f3xia
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$23422$f3xia
                                                            g$x*$23423$f3xia)
                                                          (g$build-sequence$20734$f3xia
                                                            '#f
                                                            (g$chi-expr*$21323$f3xia
                                                              (cons
                                                                g$x$23422$f3xia
                                                                g$x*$23423$f3xia)
                                                              g$r$23402$f3xia
                                                              g$mr$23403$f3xia))))
                                                       g$ls/false$23421$f3xia)
                                                     (g$syntax-violation$21427$f3xia
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$23420$f3xia))))
                                                (g$syntax-dispatch$21307$f3xia
                                                  g$t$23420$f3xia
                                                  '(_ any
                                                      .
                                                      each-any)))))
                                            g$e$23401$f3xia)
                                           (if (g$memv$15539$f3xia
                                                 g$t$23413$f3xia
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$23424$f3xia)
                                                 ((case-lambda
                                                    ((g$ls/false$23425$f3xia)
                                                     (if (if g$ls/false$23425$f3xia
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$23426$f3xia
                                                                    g$xrhs*$23427$f3xia
                                                                    g$xbody$23428$f3xia
                                                                    g$xbody*$23429$f3xia)
                                                                  (if (not (g$valid-bound-ids?$20814$f3xia
                                                                             g$xlhs*$23426$f3xia))
                                                                    (g$syntax-violation$21427$f3xia
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$23401$f3xia)
                                                                    (void))))
                                                               g$ls/false$23425$f3xia))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$23430$f3xia
                                                              g$xrhs*$23431$f3xia
                                                              g$xbody$23432$f3xia
                                                              g$xbody*$23433$f3xia)
                                                            ((case-lambda
                                                               ((g$xlab*$23434$f3xia)
                                                                ((case-lambda
                                                                   ((g$xrib$23435$f3xia)
                                                                    ((case-lambda
                                                                       ((g$xb*$23436$f3xia)
                                                                        (g$build-sequence$20734$f3xia
                                                                          '#f
                                                                          (g$chi-expr*$21323$f3xia
                                                                            (g$map$15550$f3xia
                                                                              (case-lambda
                                                                                ((g$x$23437$f3xia)
                                                                                 (g$add-subst$20799$f3xia
                                                                                   g$xrib$23435$f3xia
                                                                                   g$x$23437$f3xia)))
                                                                              (cons
                                                                                g$xbody$23432$f3xia
                                                                                g$xbody*$23433$f3xia))
                                                                            (g$append$15556$f3xia
                                                                              (g$map$15550$f3xia
                                                                                cons
                                                                                g$xlab*$23434$f3xia
                                                                                g$xb*$23436$f3xia)
                                                                              g$r$23402$f3xia)
                                                                            (g$append$15556$f3xia
                                                                              (g$map$15550$f3xia
                                                                                cons
                                                                                g$xlab*$23434$f3xia
                                                                                g$xb*$23436$f3xia)
                                                                              g$mr$23403$f3xia)))))
                                                                     (g$map$15550$f3xia
                                                                       (case-lambda
                                                                         ((g$x$23438$f3xia)
                                                                          (g$make-eval-transformer$20857$f3xia
                                                                            (g$expand-transformer$21355$f3xia
                                                                              (if (eq? g$type$23412$f3xia
                                                                                       'let-syntax)
                                                                                g$x$23438$f3xia
                                                                                (g$add-subst$20799$f3xia
                                                                                  g$xrib$23435$f3xia
                                                                                  g$x$23438$f3xia))
                                                                              g$mr$23403$f3xia))))
                                                                       g$xrhs*$23431$f3xia))))
                                                                 (g$make-full-rib$20775$f3xia
                                                                   g$xlhs*$23430$f3xia
                                                                   g$xlab*$23434$f3xia))))
                                                             (g$map$15550$f3xia
                                                               g$gen-label$20746$f3xia
                                                               g$xlhs*$23430$f3xia))))
                                                         g$ls/false$23425$f3xia)
                                                       (g$syntax-violation$21427$f3xia
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$23424$f3xia))))
                                                  (g$syntax-dispatch$21307$f3xia
                                                    g$t$23424$f3xia
                                                    '(_ #(each
                                                          (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$23401$f3xia)
                                             (if (eqv?
                                                   g$t$23413$f3xia
                                                   'displaced-lexical)
                                               (g$syntax-violation$21427$f3xia
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$23401$f3xia)
                                               (if (eqv?
                                                     g$t$23413$f3xia
                                                     'syntax)
                                                 (g$syntax-violation$21427$f3xia
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$23401$f3xia)
                                                 (if (g$memv$15539$f3xia
                                                       g$t$23413$f3xia
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$21427$f3xia
                                                     '#f
                                                     (g$string-append$15994$f3xia
                                                       ((case-lambda
                                                          ((g$t$23439$f3xia)
                                                           (if (eqv?
                                                                 g$t$23439$f3xia
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$23439$f3xia
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$23439$f3xia
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$23439$f3xia
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$23439$f3xia
                                                                         'import)
                                                                     '"an import declaration"
                                                                     (if (eqv?
                                                                           g$t$23439$f3xia
                                                                           'export)
                                                                       '"an export declaration"
                                                                       ((case-lambda
                                                                          (()
                                                                           (begin
                                                                             '#f
                                                                             '"a non-expression"))))))))))))
                                                        g$type$23412$f3xia)
                                                       '" was found where an expression was expected")
                                                     g$e$23401$f3xia)
                                                   (if (eqv?
                                                         g$t$23413$f3xia
                                                         'mutable)
                                                     (g$syntax-violation$21427$f3xia
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$23401$f3xia)
                                                     ((case-lambda
                                                        (()
                                                         (begin
                                                           '#f
                                                           (g$syntax-violation$21427$f3xia
                                                             '#f
                                                             '"invalid expression"
                                                             g$e$23401$f3xia)))))))))))))))))))))))
                  g$type$23412$f3xia)))
              g$kwd$23409$f3xia
              g$value$23408$f3xia
              g$type$23407$f3xia)))))))
   (g$chi-set!$21326$f3xia
     g$chi-set!$24925$f3xia
     (case-lambda
       ((g$e$23440$f3xia g$r$23441$f3xia g$mr$23442$f3xia)
        ((case-lambda
           ((g$t$23443$f3xia)
            ((case-lambda
               ((g$ls/false$23444$f3xia)
                (if (if g$ls/false$23444$f3xia
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$23445$f3xia g$v$23446$f3xia)
                             (g$id?$20809$f3xia g$x$23445$f3xia)))
                          g$ls/false$23444$f3xia))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$23447$f3xia g$v$23448$f3xia)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$20829$f3xia
                              g$x$23447$f3xia
                              g$r$23441$f3xia)))
                         (case-lambda
                           ((g$type$23452$f3xia
                              g$value$23453$f3xia
                              g$kwd$23454$f3xia)
                            ((case-lambda
                               ((g$kwd$23455$f3xia
                                  g$value$23456$f3xia
                                  g$type$23457$f3xia)
                                ((case-lambda
                                   ((g$t$23458$f3xia)
                                    (if (eqv? g$t$23458$f3xia 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$21253$f3xia
                                          g$value$23456$f3xia
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$21251$f3xia
                                            g$value$23456$f3xia)
                                          (g$chi-expr$21325$f3xia
                                            g$v$23448$f3xia
                                            g$r$23441$f3xia
                                            g$mr$23442$f3xia)))
                                      (if (eqv?
                                            g$t$23458$f3xia
                                            'core-prim)
                                        (g$syntax-violation$21427$f3xia
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$23440$f3xia)
                                        (if (eqv?
                                              g$t$23458$f3xia
                                              'global)
                                          (g$syntax-violation$21427$f3xia
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$23440$f3xia)
                                          (if (eqv?
                                                g$t$23458$f3xia
                                                'global-macro!)
                                            (g$chi-expr$21325$f3xia
                                              (g$chi-global-macro$21322$f3xia
                                                g$value$23456$f3xia
                                                g$e$23440$f3xia
                                                g$r$23441$f3xia)
                                              g$r$23441$f3xia
                                              g$mr$23442$f3xia)
                                            (if (eqv?
                                                  g$t$23458$f3xia
                                                  'local-macro!)
                                              (g$chi-expr$21325$f3xia
                                                (g$chi-local-macro$21321$f3xia
                                                  g$value$23456$f3xia
                                                  g$e$23440$f3xia
                                                  g$r$23441$f3xia)
                                                g$r$23441$f3xia
                                                g$mr$23442$f3xia)
                                              (if (eqv?
                                                    g$t$23458$f3xia
                                                    'mutable)
                                                (g$syntax-violation$21427$f3xia
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$23440$f3xia)
                                                ((case-lambda
                                                   (()
                                                    (begin
                                                      '#f
                                                      (g$syntax-violation$21427$f3xia
                                                        '#f
                                                        '"invalid syntax"
                                                        g$e$23440$f3xia)))))))))))))
                                 g$type$23457$f3xia)))
                             g$kwd$23454$f3xia
                             g$value$23453$f3xia
                             g$type$23452$f3xia))))))
                    g$ls/false$23444$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$23443$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$23443$f3xia
               '(_ any any)))))
         g$e$23440$f3xia))))
   (g$verify-formals$21327$f3xia
     g$verify-formals$24926$f3xia
     (case-lambda
       ((g$fmls$23459$f3xia g$stx$23460$f3xia)
        ((case-lambda
           ((g$t$23461$f3xia)
            ((case-lambda
               ((g$ls/false$23462$f3xia)
                (if g$ls/false$23462$f3xia
                  (apply
                    (case-lambda
                      ((g$x*$23463$f3xia)
                       (if (not (g$valid-bound-ids?$20814$f3xia
                                  g$x*$23463$f3xia))
                         (g$invalid-fmls-error$21272$f3xia
                           g$stx$23460$f3xia
                           g$fmls$23459$f3xia)
                         (void))))
                    g$ls/false$23462$f3xia)
                  ((case-lambda
                     ((g$t$23464$f3xia)
                      ((case-lambda
                         ((g$ls/false$23465$f3xia)
                          (if g$ls/false$23465$f3xia
                            (apply
                              (case-lambda
                                ((g$x*$23466$f3xia g$x$23467$f3xia)
                                 (if (not (g$valid-bound-ids?$20814$f3xia
                                            (cons
                                              g$x$23467$f3xia
                                              g$x*$23466$f3xia)))
                                   (g$invalid-fmls-error$21272$f3xia
                                     g$stx$23460$f3xia
                                     g$fmls$23459$f3xia)
                                   (void))))
                              g$ls/false$23465$f3xia)
                            ((case-lambda
                               ((g$t$23468$f3xia)
                                ((case-lambda
                                   ((g$ls/false$23469$f3xia)
                                    (if g$ls/false$23469$f3xia
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$21427$f3xia
                                             '#f
                                             '"invalid syntax"
                                             g$stx$23460$f3xia)))
                                        g$ls/false$23469$f3xia)
                                      (g$syntax-violation$21427$f3xia
                                        '#f
                                        '"invalid syntax"
                                        g$t$23468$f3xia))))
                                 (g$syntax-dispatch$21307$f3xia
                                   g$t$23468$f3xia
                                   '_))))
                             g$t$23464$f3xia))))
                       (g$syntax-dispatch$21307$f3xia
                         g$t$23464$f3xia
                         '#(each+ any () any)))))
                   g$t$23461$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$23461$f3xia
               'each-any))))
         g$fmls$23459$f3xia))))
   (g$chi-lambda-clause$21328$f3xia
     g$chi-lambda-clause$24927$f3xia
     (case-lambda
       ((g$stx$23470$f3xia
          g$fmls$23471$f3xia
          g$body*$23472$f3xia
          g$r$23473$f3xia
          g$mr$23474$f3xia)
        ((case-lambda
           ((g$t$23475$f3xia)
            ((case-lambda
               ((g$ls/false$23476$f3xia)
                (if g$ls/false$23476$f3xia
                  (apply
                    (case-lambda
                      ((g$x*$23477$f3xia)
                       (begin
                         (g$verify-formals$21327$f3xia
                           g$fmls$23471$f3xia
                           g$stx$23470$f3xia)
                         ((case-lambda
                            ((g$lex*$23478$f3xia g$lab*$23479$f3xia)
                             (values
                               g$lex*$23478$f3xia
                               (g$chi-internal$21336$f3xia
                                 (g$add-subst$20799$f3xia
                                   (g$make-full-rib$20775$f3xia
                                     g$x*$23477$f3xia
                                     g$lab*$23479$f3xia)
                                   g$body*$23472$f3xia)
                                 (g$add-lexicals$21255$f3xia
                                   g$lab*$23479$f3xia
                                   g$lex*$23478$f3xia
                                   g$r$23473$f3xia)
                                 g$mr$23474$f3xia))))
                          (g$map$15550$f3xia
                            g$gen-lexical$20744$f3xia
                            g$x*$23477$f3xia)
                          (g$map$15550$f3xia
                            g$gen-label$20746$f3xia
                            g$x*$23477$f3xia)))))
                    g$ls/false$23476$f3xia)
                  ((case-lambda
                     ((g$t$23480$f3xia)
                      ((case-lambda
                         ((g$ls/false$23481$f3xia)
                          (if g$ls/false$23481$f3xia
                            (apply
                              (case-lambda
                                ((g$x*$23482$f3xia g$x$23483$f3xia)
                                 (begin
                                   (g$verify-formals$21327$f3xia
                                     g$fmls$23471$f3xia
                                     g$stx$23470$f3xia)
                                   ((case-lambda
                                      ((g$lex*$23484$f3xia
                                         g$lab*$23485$f3xia
                                         g$lex$23486$f3xia
                                         g$lab$23487$f3xia)
                                       (values
                                         (g$append$15556$f3xia
                                           g$lex*$23484$f3xia
                                           g$lex$23486$f3xia)
                                         (g$chi-internal$21336$f3xia
                                           (g$add-subst$20799$f3xia
                                             (g$make-full-rib$20775$f3xia
                                               (cons
                                                 g$x$23483$f3xia
                                                 g$x*$23482$f3xia)
                                               (cons
                                                 g$lab$23487$f3xia
                                                 g$lab*$23485$f3xia))
                                             g$body*$23472$f3xia)
                                           (g$add-lexicals$21255$f3xia
                                             (cons
                                               g$lab$23487$f3xia
                                               g$lab*$23485$f3xia)
                                             (cons
                                               g$lex$23486$f3xia
                                               g$lex*$23484$f3xia)
                                             g$r$23473$f3xia)
                                           g$mr$23474$f3xia))))
                                    (g$map$15550$f3xia
                                      g$gen-lexical$20744$f3xia
                                      g$x*$23482$f3xia)
                                    (g$map$15550$f3xia
                                      g$gen-label$20746$f3xia
                                      g$x*$23482$f3xia)
                                    (g$gen-lexical$20744$f3xia
                                      g$x$23483$f3xia)
                                    (g$gen-label$20746$f3xia
                                      g$x$23483$f3xia)))))
                              g$ls/false$23481$f3xia)
                            ((case-lambda
                               ((g$t$23488$f3xia)
                                ((case-lambda
                                   ((g$ls/false$23489$f3xia)
                                    (if g$ls/false$23489$f3xia
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$21427$f3xia
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$23471$f3xia)))
                                        g$ls/false$23489$f3xia)
                                      (g$syntax-violation$21427$f3xia
                                        '#f
                                        '"invalid syntax"
                                        g$t$23488$f3xia))))
                                 (g$syntax-dispatch$21307$f3xia
                                   g$t$23488$f3xia
                                   '_))))
                             g$t$23480$f3xia))))
                       (g$syntax-dispatch$21307$f3xia
                         g$t$23480$f3xia
                         '#(each+ any () any)))))
                   g$t$23475$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$23475$f3xia
               'each-any))))
         g$fmls$23471$f3xia))))
   (g$chi-lambda-clause*$21329$f3xia
     g$chi-lambda-clause*$24928$f3xia
     (case-lambda
       ((g$stx$23490$f3xia
          g$fmls*$23491$f3xia
          g$body**$23492$f3xia
          g$r$23493$f3xia
          g$mr$23494$f3xia)
        (if (null? g$fmls*$23491$f3xia)
          (values '() '())
          ((case-lambda
             (()
              (begin
                '#f
                (call-with-values
                  (case-lambda
                    (()
                     (g$chi-lambda-clause$21328$f3xia
                       g$stx$23490$f3xia
                       (car g$fmls*$23491$f3xia)
                       (car g$body**$23492$f3xia)
                       g$r$23493$f3xia
                       g$mr$23494$f3xia)))
                  (case-lambda
                    ((g$a$23497$f3xia g$b$23498$f3xia)
                     ((case-lambda
                        ((g$b$23499$f3xia g$a$23500$f3xia)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-lambda-clause*$21329$f3xia
                                g$stx$23490$f3xia
                                (cdr g$fmls*$23491$f3xia)
                                (cdr g$body**$23492$f3xia)
                                g$r$23493$f3xia
                                g$mr$23494$f3xia)))
                           (case-lambda
                             ((g$a*$23503$f3xia g$b*$23504$f3xia)
                              ((case-lambda
                                 ((g$b*$23505$f3xia g$a*$23506$f3xia)
                                  (values
                                    (cons
                                      g$a$23500$f3xia
                                      g$a*$23506$f3xia)
                                    (cons
                                      g$b$23499$f3xia
                                      g$b*$23505$f3xia))))
                               g$b*$23504$f3xia
                               g$a*$23503$f3xia))))))
                      g$b$23498$f3xia
                      g$a$23497$f3xia))))))))))))
   (g$chi-defun$21330$f3xia
     g$chi-defun$24929$f3xia
     (case-lambda
       ((g$x$23507$f3xia g$r$23508$f3xia g$mr$23509$f3xia)
        ((case-lambda
           ((g$t$23510$f3xia)
            ((case-lambda
               ((g$ls/false$23511$f3xia)
                (if g$ls/false$23511$f3xia
                  (apply
                    (case-lambda
                      ((g$fmls$23512$f3xia g$body*$23513$f3xia)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$21328$f3xia
                              g$fmls$23512$f3xia
                              g$fmls$23512$f3xia
                              g$body*$23513$f3xia
                              g$r$23508$f3xia
                              g$mr$23509$f3xia)))
                         (case-lambda
                           ((g$fmls$23516$f3xia g$body$23517$f3xia)
                            ((case-lambda
                               ((g$body$23518$f3xia g$fmls$23519$f3xia)
                                (g$build-lambda$20731$f3xia
                                  (g$syntax-annotation$21422$f3xia
                                    g$x$23507$f3xia)
                                  g$fmls$23519$f3xia
                                  g$body$23518$f3xia)))
                             g$body$23517$f3xia
                             g$fmls$23516$f3xia))))))
                    g$ls/false$23511$f3xia)
                  (g$syntax-violation$21427$f3xia
                    '#f
                    '"invalid syntax"
                    g$t$23510$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$23510$f3xia
               '(_ (_ . any) . any)))))
         g$x$23507$f3xia))))
   (g$chi-rhs$21331$f3xia
     g$chi-rhs$24930$f3xia
     (case-lambda
       ((g$rhs$23520$f3xia g$r$23521$f3xia g$mr$23522$f3xia)
        ((case-lambda
           ((g$t$23523$f3xia)
            (if (eqv? g$t$23523$f3xia 'defun)
              (g$chi-defun$21330$f3xia
                (cdr g$rhs$23520$f3xia)
                g$r$23521$f3xia
                g$mr$23522$f3xia)
              (if (eqv? g$t$23523$f3xia 'expr)
                ((case-lambda
                   ((g$expr$23524$f3xia)
                    (g$chi-expr$21325$f3xia
                      g$expr$23524$f3xia
                      g$r$23521$f3xia
                      g$mr$23522$f3xia)))
                 (cdr g$rhs$23520$f3xia))
                (if (eqv? g$t$23523$f3xia 'top-expr)
                  ((case-lambda
                     ((g$expr$23525$f3xia)
                      (g$build-sequence$20734$f3xia
                        '#f
                        (list
                          (g$chi-expr$21325$f3xia
                            g$expr$23525$f3xia
                            g$r$23521$f3xia
                            g$mr$23522$f3xia)
                          (g$build-void$20735$f3xia)))))
                   (cdr g$rhs$23520$f3xia))
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        (g$assertion-violation$12459$f3xia
                          'chi-rhs
                          '"BUG: invalid rhs"
                          g$rhs$23520$f3xia))))))))))
         (car g$rhs$23520$f3xia)))))
   (g$expand-interaction-rhs*/init*$21332$f3xia
     g$expand-interaction-rhs*/init*$24931$f3xia
     (case-lambda
       ((g$lhs*$23526$f3xia
          g$rhs*$23527$f3xia
          g$init*$23528$f3xia
          g$r$23529$f3xia
          g$mr$23530$f3xia)
        ((letrec ((g$f$23531$f3xia
                    (case-lambda
                      ((g$lhs*$23532$f3xia g$rhs*$23533$f3xia)
                       (if (null? g$lhs*$23532$f3xia)
                         (g$map$15550$f3xia
                           (case-lambda
                             ((g$x$23534$f3xia)
                              (g$chi-expr$21325$f3xia
                                g$x$23534$f3xia
                                g$r$23529$f3xia
                                g$mr$23530$f3xia)))
                           g$init*$23528$f3xia)
                         ((case-lambda
                            (()
                             (begin
                               '#f
                               ((case-lambda
                                  ((g$lhs$23535$f3xia g$rhs$23536$f3xia)
                                   ((case-lambda
                                      ((g$t$23537$f3xia)
                                       (if (eqv? g$t$23537$f3xia 'defun)
                                         ((case-lambda
                                            ((g$rhs$23538$f3xia)
                                             (cons
                                               (list
                                                 'set!
                                                 g$lhs$23535$f3xia
                                                 g$rhs$23538$f3xia)
                                               (g$f$23531$f3xia
                                                 (cdr g$lhs*$23532$f3xia)
                                                 (cdr g$rhs*$23533$f3xia)))))
                                          (g$chi-defun$21330$f3xia
                                            (cdr g$rhs$23536$f3xia)
                                            g$r$23529$f3xia
                                            g$mr$23530$f3xia))
                                         (if (eqv?
                                               g$t$23537$f3xia
                                               'expr)
                                           ((case-lambda
                                              ((g$rhs$23539$f3xia)
                                               (cons
                                                 (list
                                                   'set!
                                                   g$lhs$23535$f3xia
                                                   g$rhs$23539$f3xia)
                                                 (g$f$23531$f3xia
                                                   (cdr g$lhs*$23532$f3xia)
                                                   (cdr g$rhs*$23533$f3xia)))))
                                            (g$chi-expr$21325$f3xia
                                              (cdr g$rhs$23536$f3xia)
                                              g$r$23529$f3xia
                                              g$mr$23530$f3xia))
                                           (if (eqv?
                                                 g$t$23537$f3xia
                                                 'top-expr)
                                             ((case-lambda
                                                ((g$e$23540$f3xia)
                                                 (cons
                                                   g$e$23540$f3xia
                                                   (g$f$23531$f3xia
                                                     (cdr g$lhs*$23532$f3xia)
                                                     (cdr g$rhs*$23533$f3xia)))))
                                              (g$chi-expr$21325$f3xia
                                                (cdr g$rhs$23536$f3xia)
                                                g$r$23529$f3xia
                                                g$mr$23530$f3xia))
                                             ((case-lambda
                                                (()
                                                 (begin
                                                   '#f
                                                   (g$error$12460$f3xia
                                                     'expand-interaction
                                                     '"invallid"
                                                     g$rhs$23536$f3xia))))))))))
                                    (car g$rhs$23536$f3xia))))
                                (car g$lhs*$23532$f3xia)
                                (car g$rhs*$23533$f3xia)))))))))))
           g$f$23531$f3xia)
         g$lhs*$23526$f3xia
         g$rhs*$23527$f3xia))))
   (g$chi-rhs*$21333$f3xia
     g$chi-rhs*$24932$f3xia
     (case-lambda
       ((g$rhs*$23541$f3xia g$r$23542$f3xia g$mr$23543$f3xia)
        ((letrec ((g$f$23544$f3xia
                    (case-lambda
                      ((g$ls$23545$f3xia)
                       (if (null? g$ls$23545$f3xia)
                         '()
                         ((case-lambda
                            (()
                             (begin
                               '#f
                               ((case-lambda
                                  ((g$a$23546$f3xia)
                                   (cons
                                     g$a$23546$f3xia
                                     (g$f$23544$f3xia
                                       (cdr g$ls$23545$f3xia)))))
                                (g$chi-rhs$21331$f3xia
                                  (car g$ls$23545$f3xia)
                                  g$r$23542$f3xia
                                  g$mr$23543$f3xia)))))))))))
           g$f$23544$f3xia)
         g$rhs*$23541$f3xia))))
   (g$find-bound=?$21334$f3xia
     g$find-bound=?$24933$f3xia
     (case-lambda
       ((g$x$23547$f3xia g$lhs*$23548$f3xia g$rhs*$23549$f3xia)
        (if (null? g$lhs*$23548$f3xia)
          '#f
          (if (g$bound-id=?$20812$f3xia
                g$x$23547$f3xia
                (car g$lhs*$23548$f3xia))
            (car g$rhs*$23549$f3xia)
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$find-bound=?$21334$f3xia
                    g$x$23547$f3xia
                    (cdr g$lhs*$23548$f3xia)
                    (cdr g$rhs*$23549$f3xia)))))))))))
   (g$find-dups$21335$f3xia
     g$find-dups$24934$f3xia
     (case-lambda
       ((g$ls$23550$f3xia)
        ((letrec ((g$f$23551$f3xia
                    (case-lambda
                      ((g$ls$23552$f3xia g$dups$23553$f3xia)
                       (if (null? g$ls$23552$f3xia)
                         g$dups$23553$f3xia
                         ((case-lambda
                            ((g$t$23554$f3xia)
                             (if g$t$23554$f3xia
                               ((case-lambda
                                  ((g$x$23555$f3xia)
                                   (g$f$23551$f3xia
                                     (cdr g$ls$23552$f3xia)
                                     (cons
                                       (list
                                         (car g$ls$23552$f3xia)
                                         g$x$23555$f3xia)
                                       g$dups$23553$f3xia))))
                                g$t$23554$f3xia)
                               ((case-lambda
                                  (()
                                   (begin
                                     '#f
                                     (g$f$23551$f3xia
                                       (cdr g$ls$23552$f3xia)
                                       g$dups$23553$f3xia))))))))
                          (g$find-bound=?$21334$f3xia
                            (car g$ls$23552$f3xia)
                            (cdr g$ls$23552$f3xia)
                            (cdr g$ls$23552$f3xia))))))))
           g$f$23551$f3xia)
         g$ls$23550$f3xia
         '()))))
   (g$chi-internal$21336$f3xia
     g$chi-internal$24935$f3xia
     (case-lambda
       ((g$e*$23556$f3xia g$r$23557$f3xia g$mr$23558$f3xia)
        ((case-lambda
           ((g$rib$23559$f3xia)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$21354$f3xia
                   (g$map$15550$f3xia
                     (case-lambda
                       ((g$x$23568$f3xia)
                        (g$add-subst$20799$f3xia
                          g$rib$23559$f3xia
                          g$x$23568$f3xia)))
                     (g$syntax->list$20808$f3xia g$e*$23556$f3xia))
                   g$r$23557$f3xia
                   g$mr$23558$f3xia
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$23559$f3xia
                   '#f
                   '#t)))
              (case-lambda
                ((g$e*$23569$f3xia
                   g$r$23570$f3xia
                   g$mr$23571$f3xia
                   g$lex*$23572$f3xia
                   g$rhs*$23573$f3xia
                   g$mod**$23574$f3xia
                   g$kwd*$23575$f3xia
                   g$_exp*$23576$f3xia)
                 ((case-lambda
                    ((g$_exp*$23577$f3xia
                       g$kwd*$23578$f3xia
                       g$mod**$23579$f3xia
                       g$rhs*$23580$f3xia
                       g$lex*$23581$f3xia
                       g$mr$23582$f3xia
                       g$r$23583$f3xia
                       g$e*$23584$f3xia)
                     (begin
                       (if (null? g$e*$23584$f3xia)
                         (g$syntax-violation$21427$f3xia
                           '#f
                           '"no expression in body"
                           g$e*$23584$f3xia)
                         (void))
                       ((case-lambda
                          ((g$init*$23585$f3xia)
                           ((case-lambda
                              ((g$rhs*$23586$f3xia)
                               (g$build-letrec*$20737$f3xia
                                 '#f
                                 (g$reverse$16012$f3xia
                                   g$lex*$23581$f3xia)
                                 (g$reverse$16012$f3xia
                                   g$rhs*$23586$f3xia)
                                 (g$build-sequence$20734$f3xia
                                   '#f
                                   g$init*$23585$f3xia))))
                            (g$chi-rhs*$21333$f3xia
                              g$rhs*$23580$f3xia
                              g$r$23583$f3xia
                              g$mr$23582$f3xia))))
                        (g$chi-expr*$21323$f3xia
                          (g$append$15556$f3xia
                            (apply
                              g$append$15556$f3xia
                              (g$reverse$16012$f3xia
                                g$mod**$23579$f3xia))
                            g$e*$23584$f3xia)
                          g$r$23583$f3xia
                          g$mr$23582$f3xia)))))
                  g$_exp*$23576$f3xia
                  g$kwd*$23575$f3xia
                  g$mod**$23574$f3xia
                  g$rhs*$23573$f3xia
                  g$lex*$23572$f3xia
                  g$mr$23571$f3xia
                  g$r$23570$f3xia
                  g$e*$23569$f3xia))))))
         (g$make-empty-rib$20767$f3xia)))))
   (g$parse-module$21337$f3xia
     g$parse-module$24936$f3xia
     (case-lambda
       ((g$e$23587$f3xia)
        ((case-lambda
           ((g$t$23588$f3xia)
            ((case-lambda
               ((g$ls/false$23589$f3xia)
                (if g$ls/false$23589$f3xia
                  (apply
                    (case-lambda
                      ((g$export*$23590$f3xia g$b*$23591$f3xia)
                       (begin
                         (if (not (g$for-all$15548$f3xia
                                    g$id?$20809$f3xia
                                    g$export*$23590$f3xia))
                           (g$syntax-violation$21427$f3xia
                             '#f
                             '"module exports must be identifiers"
                             g$e$23587$f3xia)
                           (void))
                         (values
                           '#f
                           (g$list->vector$16003$f3xia
                             g$export*$23590$f3xia)
                           g$b*$23591$f3xia))))
                    g$ls/false$23589$f3xia)
                  ((case-lambda
                     ((g$t$23592$f3xia)
                      ((case-lambda
                         ((g$ls/false$23593$f3xia)
                          (if g$ls/false$23593$f3xia
                            (apply
                              (case-lambda
                                ((g$name$23594$f3xia
                                   g$export*$23595$f3xia
                                   g$b*$23596$f3xia)
                                 (begin
                                   (if (not (g$id?$20809$f3xia
                                              g$name$23594$f3xia))
                                     (g$syntax-violation$21427$f3xia
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$23587$f3xia)
                                     (void))
                                   (if (not (g$for-all$15548$f3xia
                                              g$id?$20809$f3xia
                                              g$export*$23595$f3xia))
                                     (g$syntax-violation$21427$f3xia
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$23587$f3xia)
                                     (void))
                                   (values
                                     g$name$23594$f3xia
                                     (g$list->vector$16003$f3xia
                                       g$export*$23595$f3xia)
                                     g$b*$23596$f3xia))))
                              g$ls/false$23593$f3xia)
                            (g$syntax-violation$21427$f3xia
                              '#f
                              '"invalid syntax"
                              g$t$23592$f3xia))))
                       (g$syntax-dispatch$21307$f3xia
                         g$t$23592$f3xia
                         '(_ any each-any . each-any)))))
                   g$t$23588$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$23588$f3xia
               '(_ each-any . each-any)))))
         g$e$23587$f3xia))))
   (g$10520$21338$f3xia
     g$10520$24937$f3xia
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$10523$f3xia
       '#t
       '#t
       '#((mutable first-mark)
          (mutable exp-id-vec)
          (mutable exp-lab-vec))))
   (g$10522$21339$f3xia g$10522$24938$f3xia '#f)
   (g$10521$21340$f3xia
     g$10521$24939$f3xia
     (make-record-constructor-descriptor
       g$10520$21338$f3xia
       '#f
       g$10522$21339$f3xia))
   (g$module-interface?$21343$f3xia
     g$module-interface?$24940$f3xia
     (record-predicate g$10520$21338$f3xia))
   (g$make-module-interface$21344$f3xia
     g$make-module-interface$24941$f3xia
     (record-constructor g$10521$21340$f3xia))
   (g$module-interface-first-mark$21345$f3xia
     g$module-interface-first-mark$24942$f3xia
     (record-accessor g$10520$21338$f3xia '0))
   (g$module-interface-exp-id-vec$21346$f3xia
     g$module-interface-exp-id-vec$24943$f3xia
     (record-accessor g$10520$21338$f3xia '1))
   (g$module-interface-exp-lab-vec$21347$f3xia
     g$module-interface-exp-lab-vec$24944$f3xia
     (record-accessor g$10520$21338$f3xia '2))
   (g$set-module-interface-first-mark!$21348$f3xia
     g$set-module-interface-first-mark!$24945$f3xia
     (record-mutator g$10520$21338$f3xia '0))
   (g$set-module-interface-exp-id-vec!$21349$f3xia
     g$set-module-interface-exp-id-vec!$24946$f3xia
     (record-mutator g$10520$21338$f3xia '1))
   (g$set-module-interface-exp-lab-vec!$21350$f3xia
     g$set-module-interface-exp-lab-vec!$24947$f3xia
     (record-mutator g$10520$21338$f3xia '2))
   (g$module-interface-exp-id*$21351$f3xia
     g$module-interface-exp-id*$24948$f3xia
     (case-lambda
       ((g$iface$23597$f3xia g$id$23598$f3xia)
        (letrec* ((g$diff-marks$23599$f3xia
                    (case-lambda
                      ((g$ls$23603$f3xia g$x$23604$f3xia)
                       (begin
                         (if (null? g$ls$23603$f3xia)
                           (g$error$12460$f3xia
                             'diff-marks
                             '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$23605$f3xia)
                             (if (eq? g$a$23605$f3xia g$x$23604$f3xia)
                               '()
                               (cons
                                 g$a$23605$f3xia
                                 (g$diff-marks$23599$f3xia
                                   (cdr g$ls$23603$f3xia)
                                   g$x$23604$f3xia)))))
                          (car g$ls$23603$f3xia)))))))
          ((case-lambda
             ((g$diff$23600$f3xia g$id-vec$23601$f3xia)
              (if (null? g$diff$23600$f3xia)
                g$id-vec$23601$f3xia
                (g$vector-map$16063$f3xia
                  (case-lambda
                    ((g$x$23602$f3xia)
                     (g$make-stx$20782$f3xia
                       (g$stx-expr$20783$f3xia g$x$23602$f3xia)
                       (g$append$15556$f3xia
                         g$diff$23600$f3xia
                         (g$stx-mark*$20784$f3xia g$x$23602$f3xia))
                       '()
                       '())))
                  g$id-vec$23601$f3xia))))
           (g$diff-marks$23599$f3xia
             (g$stx-mark*$20784$f3xia g$id$23598$f3xia)
             (g$module-interface-first-mark$21345$f3xia
               g$iface$23597$f3xia))
           (g$module-interface-exp-id-vec$21346$f3xia
             g$iface$23597$f3xia))))))
   (g$syntax-transpose$21352$f3xia
     g$syntax-transpose$24949$f3xia
     (case-lambda
       ((g$object$23606$f3xia
          g$base-id$23607$f3xia
          g$new-id$23608$f3xia)
        (letrec* ((g$who$23609$f3xia 'syntax-transpose)
                  (g$err$23610$f3xia
                    (case-lambda
                      ((g$msg$23652$f3xia . g$args$23653$f3xia)
                       (apply
                         g$assertion-violation$12459$f3xia
                         g$who$23609$f3xia
                         g$msg$23652$f3xia
                         g$args$23653$f3xia))))
                  (g$split$23611$f3xia
                    (case-lambda
                      ((g$s*$23645$f3xia)
                       (if (eq? (car g$s*$23645$f3xia) 'shift)
                         (values (list 'shift) (cdr g$s*$23645$f3xia))
                         ((case-lambda
                            (()
                             (begin
                               '#f
                               (call-with-values
                                 (case-lambda
                                   (()
                                    (g$split$23611$f3xia
                                      (cdr g$s*$23645$f3xia))))
                                 (case-lambda
                                   ((g$s1*$23648$f3xia
                                      g$s2*$23649$f3xia)
                                    ((case-lambda
                                       ((g$s2*$23650$f3xia
                                          g$s1*$23651$f3xia)
                                        (values
                                          (cons
                                            (car g$s*$23645$f3xia)
                                            g$s1*$23651$f3xia)
                                          g$s2*$23650$f3xia)))
                                     g$s2*$23649$f3xia
                                     g$s1*$23648$f3xia))))))))))))
                  (g$final$23612$f3xia
                    (case-lambda
                      ((g$s*$23643$f3xia)
                       (if ((case-lambda
                              ((g$t$23644$f3xia)
                               (if g$t$23644$f3xia
                                 g$t$23644$f3xia
                                 (begin
                                   '#f
                                   (eq? (car g$s*$23643$f3xia)
                                        'shift)))))
                            (null? g$s*$23643$f3xia))
                         '()
                         ((case-lambda
                            (()
                             (begin
                               '#f
                               (cons
                                 (car g$s*$23643$f3xia)
                                 (g$final$23612$f3xia
                                   (cdr g$s*$23643$f3xia)))))))))))
                  (g$diff$23613$f3xia
                    (case-lambda
                      ((g$m$23623$f3xia
                         g$m*$23624$f3xia
                         g$s*$23625$f3xia
                         g$ae*$23626$f3xia)
                       (if (null? g$m*$23624$f3xia)
                         (g$err$23610$f3xia
                           '"unmatched identifiers"
                           g$base-id$23607$f3xia
                           g$new-id$23608$f3xia)
                         ((case-lambda
                            ((g$m1$23627$f3xia)
                             (if (eq? g$m$23623$f3xia g$m1$23627$f3xia)
                               (values
                                 '()
                                 (g$final$23612$f3xia g$s*$23625$f3xia)
                                 '())
                               (call-with-values
                                 (case-lambda
                                   (()
                                    (g$split$23611$f3xia
                                      g$s*$23625$f3xia)))
                                 (case-lambda
                                   ((g$s1*$23630$f3xia
                                      g$s2*$23631$f3xia)
                                    ((case-lambda
                                       ((g$s2*$23632$f3xia
                                          g$s1*$23633$f3xia)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$diff$23613$f3xia
                                               g$m$23623$f3xia
                                               (cdr g$m*$23624$f3xia)
                                               g$s2*$23632$f3xia
                                               (cdr g$ae*$23626$f3xia))))
                                          (case-lambda
                                            ((g$nm*$23637$f3xia
                                               g$ns*$23638$f3xia
                                               g$nae*$23639$f3xia)
                                             ((case-lambda
                                                ((g$nae*$23640$f3xia
                                                   g$ns*$23641$f3xia
                                                   g$nm*$23642$f3xia)
                                                 (values
                                                   (cons
                                                     g$m1$23627$f3xia
                                                     g$nm*$23642$f3xia)
                                                   (g$append$15556$f3xia
                                                     g$s1*$23633$f3xia
                                                     g$ns*$23641$f3xia)
                                                   (cons
                                                     (car g$ae*$23626$f3xia)
                                                     g$nae*$23640$f3xia))))
                                              g$nae*$23639$f3xia
                                              g$ns*$23638$f3xia
                                              g$nm*$23637$f3xia))))))
                                     g$s2*$23631$f3xia
                                     g$s1*$23630$f3xia)))))))
                          (car g$m*$23624$f3xia)))))))
          (begin
            (if (not (g$id?$20809$f3xia g$base-id$23607$f3xia))
              (g$err$23610$f3xia
                '"not an identifier"
                g$base-id$23607$f3xia)
              (void))
            (if (not (g$id?$20809$f3xia g$new-id$23608$f3xia))
              (g$err$23610$f3xia
                '"not an identifier"
                g$new-id$23608$f3xia)
              (void))
            (if (not (g$free-identifier=?$21417$f3xia
                       g$base-id$23607$f3xia
                       g$new-id$23608$f3xia))
              (g$err$23610$f3xia
                '"not the same identifier"
                g$base-id$23607$f3xia
                g$new-id$23608$f3xia)
              (void))
            (call-with-values
              (case-lambda
                (()
                 (g$diff$23613$f3xia
                   (car (g$stx-mark*$20784$f3xia g$base-id$23607$f3xia))
                   (g$stx-mark*$20784$f3xia g$new-id$23608$f3xia)
                   (g$stx-subst*$20785$f3xia g$new-id$23608$f3xia)
                   (g$stx-ae*$20786$f3xia g$new-id$23608$f3xia))))
              (case-lambda
                ((g$m*$23617$f3xia g$s*$23618$f3xia g$ae*$23619$f3xia)
                 ((case-lambda
                    ((g$ae*$23620$f3xia
                       g$s*$23621$f3xia
                       g$m*$23622$f3xia)
                     (if (if (null? g$m*$23622$f3xia)
                           (begin '#f (null? g$s*$23621$f3xia))
                           '#f)
                       g$object$23606$f3xia
                       (g$mkstx$20797$f3xia
                         g$object$23606$f3xia
                         g$m*$23622$f3xia
                         g$s*$23621$f3xia
                         g$ae*$23620$f3xia))))
                  g$ae*$23619$f3xia
                  g$s*$23618$f3xia
                  g$m*$23617$f3xia)))))))))
   (g$chi-internal-module$21353$f3xia
     g$chi-internal-module$24950$f3xia
     (case-lambda
       ((g$e$23654$f3xia
          g$r$23655$f3xia
          g$mr$23656$f3xia
          g$lex*$23657$f3xia
          g$rhs*$23658$f3xia
          g$mod**$23659$f3xia
          g$kwd*$23660$f3xia)
        (call-with-values
          (case-lambda
            (() (g$parse-module$21337$f3xia g$e$23654$f3xia)))
          (case-lambda
            ((g$name$23664$f3xia g$exp-id*$23665$f3xia g$e*$23666$f3xia)
             ((case-lambda
                ((g$e*$23667$f3xia
                   g$exp-id*$23668$f3xia
                   g$name$23669$f3xia)
                 ((case-lambda
                    ((g$rib$23670$f3xia)
                     ((case-lambda
                        ((g$e*$23671$f3xia)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-body*$21354$f3xia
                                g$e*$23671$f3xia
                                g$r$23655$f3xia
                                g$mr$23656$f3xia
                                g$lex*$23657$f3xia
                                g$rhs*$23658$f3xia
                                g$mod**$23659$f3xia
                                g$kwd*$23660$f3xia
                                '()
                                g$rib$23670$f3xia
                                '#f
                                '#t)))
                           (case-lambda
                             ((g$e*$23680$f3xia
                                g$r$23681$f3xia
                                g$mr$23682$f3xia
                                g$lex*$23683$f3xia
                                g$rhs*$23684$f3xia
                                g$mod**$23685$f3xia
                                g$kwd*$23686$f3xia
                                g$_exp*$23687$f3xia)
                              ((case-lambda
                                 ((g$_exp*$23688$f3xia
                                    g$kwd*$23689$f3xia
                                    g$mod**$23690$f3xia
                                    g$rhs*$23691$f3xia
                                    g$lex*$23692$f3xia
                                    g$mr$23693$f3xia
                                    g$r$23694$f3xia
                                    g$e*$23695$f3xia)
                                  ((case-lambda
                                     ((g$exp-lab*$23696$f3xia
                                        g$mod**$23697$f3xia)
                                      (if (not g$name$23669$f3xia)
                                        (values
                                          g$lex*$23692$f3xia
                                          g$rhs*$23691$f3xia
                                          g$exp-id*$23668$f3xia
                                          g$exp-lab*$23696$f3xia
                                          g$r$23694$f3xia
                                          g$mr$23693$f3xia
                                          g$mod**$23697$f3xia
                                          g$kwd*$23689$f3xia)
                                        ((case-lambda
                                           ((g$lab$23698$f3xia
                                              g$iface$23699$f3xia)
                                            (values
                                              g$lex*$23692$f3xia
                                              g$rhs*$23691$f3xia
                                              (vector
                                                g$name$23669$f3xia)
                                              (vector g$lab$23698$f3xia)
                                              (cons
                                                (cons
                                                  g$lab$23698$f3xia
                                                  (cons
                                                    '$module
                                                    g$iface$23699$f3xia))
                                                g$r$23694$f3xia)
                                              (cons
                                                (cons
                                                  g$lab$23698$f3xia
                                                  (cons
                                                    '$module
                                                    g$iface$23699$f3xia))
                                                g$mr$23693$f3xia)
                                              g$mod**$23697$f3xia
                                              g$kwd*$23689$f3xia)))
                                         (g$gen-label$20746$f3xia
                                           'module)
                                         (g$make-module-interface$21344$f3xia
                                           (car (g$stx-mark*$20784$f3xia
                                                  g$name$23669$f3xia))
                                           (g$vector-map$16063$f3xia
                                             (case-lambda
                                               ((g$x$23700$f3xia)
                                                (g$make-stx$20782$f3xia
                                                  (g$stx-expr$20783$f3xia
                                                    g$x$23700$f3xia)
                                                  (g$stx-mark*$20784$f3xia
                                                    g$x$23700$f3xia)
                                                  '()
                                                  '())))
                                             g$exp-id*$23668$f3xia)
                                           g$exp-lab*$23696$f3xia)))))
                                   (g$vector-map$16063$f3xia
                                     (case-lambda
                                       ((g$x$23701$f3xia)
                                        ((case-lambda
                                           ((g$t$23702$f3xia)
                                            (if g$t$23702$f3xia
                                              g$t$23702$f3xia
                                              (begin
                                                '#f
                                                (g$syntax-violation$21427$f3xia
                                                  '#f
                                                  '"cannot find module export"
                                                  g$x$23701$f3xia)))))
                                         (g$id->label$20822$f3xia
                                           (g$make-stx$20782$f3xia
                                             (g$id->sym$20810$f3xia
                                               g$x$23701$f3xia)
                                             (g$stx-mark*$20784$f3xia
                                               g$x$23701$f3xia)
                                             (list g$rib$23670$f3xia)
                                             '())))))
                                     g$exp-id*$23668$f3xia)
                                   (cons
                                     g$e*$23695$f3xia
                                     g$mod**$23690$f3xia))))
                               g$_exp*$23687$f3xia
                               g$kwd*$23686$f3xia
                               g$mod**$23685$f3xia
                               g$rhs*$23684$f3xia
                               g$lex*$23683$f3xia
                               g$mr$23682$f3xia
                               g$r$23681$f3xia
                               g$e*$23680$f3xia))))))
                      (g$map$15550$f3xia
                        (case-lambda
                          ((g$x$23703$f3xia)
                           (g$add-subst$20799$f3xia
                             g$rib$23670$f3xia
                             g$x$23703$f3xia)))
                        (g$syntax->list$20808$f3xia
                          g$e*$23667$f3xia)))))
                  (g$make-empty-rib$20767$f3xia))))
              g$e*$23666$f3xia
              g$exp-id*$23665$f3xia
              g$name$23664$f3xia)))))))
   (g$chi-body*$21354$f3xia
     g$chi-body*$24951$f3xia
     (case-lambda
       ((g$e*$23704$f3xia
          g$r$23705$f3xia
          g$mr$23706$f3xia
          g$lex*$23707$f3xia
          g$rhs*$23708$f3xia
          g$mod**$23709$f3xia
          g$kwd*$23710$f3xia
          g$exp*$23711$f3xia
          g$rib$23712$f3xia
          g$mix?$23713$f3xia
          g$sd?$23714$f3xia)
        (if (null? g$e*$23704$f3xia)
          (values
            g$e*$23704$f3xia
            g$r$23705$f3xia
            g$mr$23706$f3xia
            g$lex*$23707$f3xia
            g$rhs*$23708$f3xia
            g$mod**$23709$f3xia
            g$kwd*$23710$f3xia
            g$exp*$23711$f3xia)
          ((case-lambda
             (()
              (begin
                '#f
                ((case-lambda
                   ((g$e$23715$f3xia)
                    (call-with-values
                      (case-lambda
                        (()
                         (g$syntax-type$20829$f3xia
                           g$e$23715$f3xia
                           g$r$23705$f3xia)))
                      (case-lambda
                        ((g$type$23719$f3xia
                           g$value$23720$f3xia
                           g$kwd$23721$f3xia)
                         ((case-lambda
                            ((g$kwd$23722$f3xia
                               g$value$23723$f3xia
                               g$type$23724$f3xia)
                             ((case-lambda
                                ((g$kwd*$23725$f3xia)
                                 ((case-lambda
                                    ((g$t$23726$f3xia)
                                     (if (eqv? g$t$23726$f3xia 'define)
                                       (call-with-values
                                         (case-lambda
                                           (()
                                            (g$parse-define$21247$f3xia
                                              g$e$23715$f3xia)))
                                         (case-lambda
                                           ((g$id$23729$f3xia
                                              g$rhs$23730$f3xia)
                                            ((case-lambda
                                               ((g$rhs$23731$f3xia
                                                  g$id$23732$f3xia)
                                                (begin
                                                  (if (g$bound-id-member?$20816$f3xia
                                                        g$id$23732$f3xia
                                                        g$kwd*$23725$f3xia)
                                                    (g$syntax-violation$21427$f3xia
                                                      '#f
                                                      '"cannot redefine keyword"
                                                      g$e$23715$f3xia)
                                                    (void))
                                                  (call-with-values
                                                    (case-lambda
                                                      (()
                                                       (g$gen-define-label+loc$20748$f3xia
                                                         g$id$23732$f3xia
                                                         g$rib$23712$f3xia
                                                         g$sd?$23714$f3xia)))
                                                    (case-lambda
                                                      ((g$lab$23735$f3xia
                                                         g$lex$23736$f3xia)
                                                       ((case-lambda
                                                          ((g$lex$23737$f3xia
                                                             g$lab$23738$f3xia)
                                                           (begin
                                                             (g$extend-rib!$20770$f3xia
                                                               g$rib$23712$f3xia
                                                               g$id$23732$f3xia
                                                               g$lab$23738$f3xia
                                                               g$sd?$23714$f3xia)
                                                             (g$chi-body*$21354$f3xia
                                                               (cdr g$e*$23704$f3xia)
                                                               (g$add-lexical$21254$f3xia
                                                                 g$lab$23738$f3xia
                                                                 g$lex$23737$f3xia
                                                                 g$r$23705$f3xia)
                                                               g$mr$23706$f3xia
                                                               (cons
                                                                 g$lex$23737$f3xia
                                                                 g$lex*$23707$f3xia)
                                                               (cons
                                                                 g$rhs$23731$f3xia
                                                                 g$rhs*$23708$f3xia)
                                                               g$mod**$23709$f3xia
                                                               g$kwd*$23725$f3xia
                                                               g$exp*$23711$f3xia
                                                               g$rib$23712$f3xia
                                                               g$mix?$23713$f3xia
                                                               g$sd?$23714$f3xia))))
                                                        g$lex$23736$f3xia
                                                        g$lab$23735$f3xia)))))))
                                             g$rhs$23730$f3xia
                                             g$id$23729$f3xia))))
                                       (if (eqv?
                                             g$t$23726$f3xia
                                             'define-syntax)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$parse-define-syntax$21248$f3xia
                                                g$e$23715$f3xia)))
                                           (case-lambda
                                             ((g$id$23741$f3xia
                                                g$rhs$23742$f3xia)
                                              ((case-lambda
                                                 ((g$rhs$23743$f3xia
                                                    g$id$23744$f3xia)
                                                  (begin
                                                    (if (g$bound-id-member?$20816$f3xia
                                                          g$id$23744$f3xia
                                                          g$kwd*$23725$f3xia)
                                                      (g$syntax-violation$21427$f3xia
                                                        '#f
                                                        '"cannot redefine keyword"
                                                        g$e$23715$f3xia)
                                                      (void))
                                                    ((case-lambda
                                                       ((g$lab$23745$f3xia)
                                                        ((case-lambda
                                                           ((g$expanded-rhs$23746$f3xia)
                                                            (begin
                                                              (g$extend-rib!$20770$f3xia
                                                                g$rib$23712$f3xia
                                                                g$id$23744$f3xia
                                                                g$lab$23745$f3xia
                                                                g$sd?$23714$f3xia)
                                                              ((case-lambda
                                                                 ((g$b$23747$f3xia)
                                                                  (g$chi-body*$21354$f3xia
                                                                    (cdr g$e*$23704$f3xia)
                                                                    (cons
                                                                      (cons
                                                                        g$lab$23745$f3xia
                                                                        g$b$23747$f3xia)
                                                                      g$r$23705$f3xia)
                                                                    (cons
                                                                      (cons
                                                                        g$lab$23745$f3xia
                                                                        g$b$23747$f3xia)
                                                                      g$mr$23706$f3xia)
                                                                    g$lex*$23707$f3xia
                                                                    g$rhs*$23708$f3xia
                                                                    g$mod**$23709$f3xia
                                                                    g$kwd*$23725$f3xia
                                                                    g$exp*$23711$f3xia
                                                                    g$rib$23712$f3xia
                                                                    g$mix?$23713$f3xia
                                                                    g$sd?$23714$f3xia)))
                                                               (g$make-eval-transformer$20857$f3xia
                                                                 g$expanded-rhs$23746$f3xia)))))
                                                         (g$expand-transformer$21355$f3xia
                                                           g$rhs$23743$f3xia
                                                           g$mr$23706$f3xia))))
                                                     (g$gen-define-label$20749$f3xia
                                                       g$id$23744$f3xia
                                                       g$rib$23712$f3xia
                                                       g$sd?$23714$f3xia)))))
                                               g$rhs$23742$f3xia
                                               g$id$23741$f3xia))))
                                         (if (g$memv$15539$f3xia
                                               g$t$23726$f3xia
                                               '(let-syntax letrec-syntax))
                                           ((case-lambda
                                              ((g$t$23748$f3xia)
                                               ((case-lambda
                                                  ((g$ls/false$23749$f3xia)
                                                   (if (if g$ls/false$23749$f3xia
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$xlhs*$23750$f3xia
                                                                  g$xrhs*$23751$f3xia
                                                                  g$xbody*$23752$f3xia)
                                                                (if (not (g$valid-bound-ids?$20814$f3xia
                                                                           g$xlhs*$23750$f3xia))
                                                                  (g$syntax-violation$21427$f3xia
                                                                    '#f
                                                                    '"invalid identifiers"
                                                                    g$e$23715$f3xia)
                                                                  (void))))
                                                             g$ls/false$23749$f3xia))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$23753$f3xia
                                                            g$xrhs*$23754$f3xia
                                                            g$xbody*$23755$f3xia)
                                                          ((case-lambda
                                                             ((g$xlab*$23756$f3xia)
                                                              ((case-lambda
                                                                 ((g$xrib$23757$f3xia)
                                                                  ((case-lambda
                                                                     ((g$xb*$23758$f3xia)
                                                                      (g$chi-body*$21354$f3xia
                                                                        (g$append$15556$f3xia
                                                                          (g$map$15550$f3xia
                                                                            (case-lambda
                                                                              ((g$x$23759$f3xia)
                                                                               (g$add-subst$20799$f3xia
                                                                                 g$xrib$23757$f3xia
                                                                                 g$x$23759$f3xia)))
                                                                            g$xbody*$23755$f3xia)
                                                                          (cdr g$e*$23704$f3xia))
                                                                        (g$append$15556$f3xia
                                                                          (g$map$15550$f3xia
                                                                            cons
                                                                            g$xlab*$23756$f3xia
                                                                            g$xb*$23758$f3xia)
                                                                          g$r$23705$f3xia)
                                                                        (g$append$15556$f3xia
                                                                          (g$map$15550$f3xia
                                                                            cons
                                                                            g$xlab*$23756$f3xia
                                                                            g$xb*$23758$f3xia)
                                                                          g$mr$23706$f3xia)
                                                                        g$lex*$23707$f3xia
                                                                        g$rhs*$23708$f3xia
                                                                        g$mod**$23709$f3xia
                                                                        g$kwd*$23725$f3xia
                                                                        g$exp*$23711$f3xia
                                                                        g$rib$23712$f3xia
                                                                        g$mix?$23713$f3xia
                                                                        g$sd?$23714$f3xia)))
                                                                   (g$map$15550$f3xia
                                                                     (case-lambda
                                                                       ((g$x$23760$f3xia)
                                                                        (g$make-eval-transformer$20857$f3xia
                                                                          (g$expand-transformer$21355$f3xia
                                                                            (if (eq? g$type$23724$f3xia
                                                                                     'let-syntax)
                                                                              g$x$23760$f3xia
                                                                              (g$add-subst$20799$f3xia
                                                                                g$xrib$23757$f3xia
                                                                                g$x$23760$f3xia))
                                                                            g$mr$23706$f3xia))))
                                                                     g$xrhs*$23754$f3xia))))
                                                               (g$make-full-rib$20775$f3xia
                                                                 g$xlhs*$23753$f3xia
                                                                 g$xlab*$23756$f3xia))))
                                                           (g$map$15550$f3xia
                                                             g$gen-label$20746$f3xia
                                                             g$xlhs*$23753$f3xia))))
                                                       g$ls/false$23749$f3xia)
                                                     (g$syntax-violation$21427$f3xia
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$23748$f3xia))))
                                                (g$syntax-dispatch$21307$f3xia
                                                  g$t$23748$f3xia
                                                  '(_ #(each (any any))
                                                      .
                                                      each-any)))))
                                            g$e$23715$f3xia)
                                           (if (eqv?
                                                 g$t$23726$f3xia
                                                 'begin)
                                             ((case-lambda
                                                ((g$t$23761$f3xia)
                                                 ((case-lambda
                                                    ((g$ls/false$23762$f3xia)
                                                     (if g$ls/false$23762$f3xia
                                                       (apply
                                                         (case-lambda
                                                           ((g$x*$23763$f3xia)
                                                            (g$chi-body*$21354$f3xia
                                                              (g$append$15556$f3xia
                                                                g$x*$23763$f3xia
                                                                (cdr g$e*$23704$f3xia))
                                                              g$r$23705$f3xia
                                                              g$mr$23706$f3xia
                                                              g$lex*$23707$f3xia
                                                              g$rhs*$23708$f3xia
                                                              g$mod**$23709$f3xia
                                                              g$kwd*$23725$f3xia
                                                              g$exp*$23711$f3xia
                                                              g$rib$23712$f3xia
                                                              g$mix?$23713$f3xia
                                                              g$sd?$23714$f3xia)))
                                                         g$ls/false$23762$f3xia)
                                                       (g$syntax-violation$21427$f3xia
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$23761$f3xia))))
                                                  (g$syntax-dispatch$21307$f3xia
                                                    g$t$23761$f3xia
                                                    '(_ . each-any)))))
                                              g$e$23715$f3xia)
                                             (if (g$memv$15539$f3xia
                                                   g$t$23726$f3xia
                                                   '(global-macro
                                                      global-macro!))
                                               (g$chi-body*$21354$f3xia
                                                 (cons
                                                   (g$add-subst$20799$f3xia
                                                     g$rib$23712$f3xia
                                                     (g$chi-global-macro$21322$f3xia
                                                       g$value$23723$f3xia
                                                       g$e$23715$f3xia
                                                       g$r$23705$f3xia))
                                                   (cdr g$e*$23704$f3xia))
                                                 g$r$23705$f3xia
                                                 g$mr$23706$f3xia
                                                 g$lex*$23707$f3xia
                                                 g$rhs*$23708$f3xia
                                                 g$mod**$23709$f3xia
                                                 g$kwd*$23725$f3xia
                                                 g$exp*$23711$f3xia
                                                 g$rib$23712$f3xia
                                                 g$mix?$23713$f3xia
                                                 g$sd?$23714$f3xia)
                                               (if (g$memv$15539$f3xia
                                                     g$t$23726$f3xia
                                                     '(local-macro
                                                        local-macro!))
                                                 (g$chi-body*$21354$f3xia
                                                   (cons
                                                     (g$add-subst$20799$f3xia
                                                       g$rib$23712$f3xia
                                                       (g$chi-local-macro$21321$f3xia
                                                         g$value$23723$f3xia
                                                         g$e$23715$f3xia
                                                         g$r$23705$f3xia))
                                                     (cdr g$e*$23704$f3xia))
                                                   g$r$23705$f3xia
                                                   g$mr$23706$f3xia
                                                   g$lex*$23707$f3xia
                                                   g$rhs*$23708$f3xia
                                                   g$mod**$23709$f3xia
                                                   g$kwd*$23725$f3xia
                                                   g$exp*$23711$f3xia
                                                   g$rib$23712$f3xia
                                                   g$mix?$23713$f3xia
                                                   g$sd?$23714$f3xia)
                                                 (if (g$memv$15539$f3xia
                                                       g$t$23726$f3xia
                                                       '(macro macro!))
                                                   (g$chi-body*$21354$f3xia
                                                     (cons
                                                       (g$add-subst$20799$f3xia
                                                         g$rib$23712$f3xia
                                                         (g$chi-macro$21320$f3xia
                                                           g$value$23723$f3xia
                                                           g$e$23715$f3xia
                                                           g$r$23705$f3xia))
                                                       (cdr g$e*$23704$f3xia))
                                                     g$r$23705$f3xia
                                                     g$mr$23706$f3xia
                                                     g$lex*$23707$f3xia
                                                     g$rhs*$23708$f3xia
                                                     g$mod**$23709$f3xia
                                                     g$kwd*$23725$f3xia
                                                     g$exp*$23711$f3xia
                                                     g$rib$23712$f3xia
                                                     g$mix?$23713$f3xia
                                                     g$sd?$23714$f3xia)
                                                   (if (eqv?
                                                         g$t$23726$f3xia
                                                         'module)
                                                     (call-with-values
                                                       (case-lambda
                                                         (()
                                                          (g$chi-internal-module$21353$f3xia
                                                            g$e$23715$f3xia
                                                            g$r$23705$f3xia
                                                            g$mr$23706$f3xia
                                                            g$lex*$23707$f3xia
                                                            g$rhs*$23708$f3xia
                                                            g$mod**$23709$f3xia
                                                            g$kwd*$23725$f3xia)))
                                                       (case-lambda
                                                         ((g$lex*$23772$f3xia
                                                            g$rhs*$23773$f3xia
                                                            g$m-exp-id*$23774$f3xia
                                                            g$m-exp-lab*$23775$f3xia
                                                            g$r$23776$f3xia
                                                            g$mr$23777$f3xia
                                                            g$mod**$23778$f3xia
                                                            g$kwd*$23779$f3xia)
                                                          ((case-lambda
                                                             ((g$kwd*$23780$f3xia
                                                                g$mod**$23781$f3xia
                                                                g$mr$23782$f3xia
                                                                g$r$23783$f3xia
                                                                g$m-exp-lab*$23784$f3xia
                                                                g$m-exp-id*$23785$f3xia
                                                                g$rhs*$23786$f3xia
                                                                g$lex*$23787$f3xia)
                                                              (begin
                                                                (g$vector-for-each$16064$f3xia
                                                                  (case-lambda
                                                                    ((g$id$23788$f3xia
                                                                       g$lab$23789$f3xia)
                                                                     (g$extend-rib!$20770$f3xia
                                                                       g$rib$23712$f3xia
                                                                       g$id$23788$f3xia
                                                                       g$lab$23789$f3xia
                                                                       g$sd?$23714$f3xia)))
                                                                  g$m-exp-id*$23785$f3xia
                                                                  g$m-exp-lab*$23784$f3xia)
                                                                (g$chi-body*$21354$f3xia
                                                                  (cdr g$e*$23704$f3xia)
                                                                  g$r$23783$f3xia
                                                                  g$mr$23782$f3xia
                                                                  g$lex*$23787$f3xia
                                                                  g$rhs*$23786$f3xia
                                                                  g$mod**$23781$f3xia
                                                                  g$kwd*$23780$f3xia
                                                                  g$exp*$23711$f3xia
                                                                  g$rib$23712$f3xia
                                                                  g$mix?$23713$f3xia
                                                                  g$sd?$23714$f3xia))))
                                                           g$kwd*$23779$f3xia
                                                           g$mod**$23778$f3xia
                                                           g$mr$23777$f3xia
                                                           g$r$23776$f3xia
                                                           g$m-exp-lab*$23775$f3xia
                                                           g$m-exp-id*$23774$f3xia
                                                           g$rhs*$23773$f3xia
                                                           g$lex*$23772$f3xia))))
                                                     (if (eqv?
                                                           g$t$23726$f3xia
                                                           'library)
                                                       (begin
                                                         (g$library-expander$21410$f3xia
                                                           (g$stx->datum$20820$f3xia
                                                             g$e$23715$f3xia))
                                                         (g$chi-body*$21354$f3xia
                                                           (cdr g$e*$23704$f3xia)
                                                           g$r$23705$f3xia
                                                           g$mr$23706$f3xia
                                                           g$lex*$23707$f3xia
                                                           g$rhs*$23708$f3xia
                                                           g$mod**$23709$f3xia
                                                           g$kwd*$23725$f3xia
                                                           g$exp*$23711$f3xia
                                                           g$rib$23712$f3xia
                                                           g$mix?$23713$f3xia
                                                           g$sd?$23714$f3xia))
                                                       (if (eqv?
                                                             g$t$23726$f3xia
                                                             'export)
                                                         ((case-lambda
                                                            ((g$t$23790$f3xia)
                                                             ((case-lambda
                                                                ((g$ls/false$23791$f3xia)
                                                                 (if g$ls/false$23791$f3xia
                                                                   (apply
                                                                     (case-lambda
                                                                       ((g$exp-decl*$23792$f3xia)
                                                                        (g$chi-body*$21354$f3xia
                                                                          (cdr g$e*$23704$f3xia)
                                                                          g$r$23705$f3xia
                                                                          g$mr$23706$f3xia
                                                                          g$lex*$23707$f3xia
                                                                          g$rhs*$23708$f3xia
                                                                          g$mod**$23709$f3xia
                                                                          g$kwd*$23725$f3xia
                                                                          (g$append$15556$f3xia
                                                                            g$exp-decl*$23792$f3xia
                                                                            g$exp*$23711$f3xia)
                                                                          g$rib$23712$f3xia
                                                                          g$mix?$23713$f3xia
                                                                          g$sd?$23714$f3xia)))
                                                                     g$ls/false$23791$f3xia)
                                                                   (g$syntax-violation$21427$f3xia
                                                                     '#f
                                                                     '"invalid syntax"
                                                                     g$t$23790$f3xia))))
                                                              (g$syntax-dispatch$21307$f3xia
                                                                g$t$23790$f3xia
                                                                '(_ .
                                                                    each-any)))))
                                                          g$e$23715$f3xia)
                                                         (if (eqv?
                                                               g$t$23726$f3xia
                                                               'import)
                                                           ((case-lambda
                                                              (()
                                                               (letrec* ((g$module-import?$23793$f3xia
                                                                           (case-lambda
                                                                             ((g$e$23835$f3xia)
                                                                              ((case-lambda
                                                                                 ((g$t$23836$f3xia)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$23837$f3xia)
                                                                                      (if (if g$ls/false$23837$f3xia
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$id$23838$f3xia)
                                                                                                   (g$id?$20809$f3xia
                                                                                                     g$id$23838$f3xia)))
                                                                                                g$ls/false$23837$f3xia))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$23839$f3xia)
                                                                                             '#t))
                                                                                          g$ls/false$23837$f3xia)
                                                                                        ((case-lambda
                                                                                           ((g$t$23840$f3xia)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$23841$f3xia)
                                                                                                (if g$ls/false$23841$f3xia
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$imp*$23842$f3xia)
                                                                                                       '#f))
                                                                                                    g$ls/false$23841$f3xia)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$23843$f3xia)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$23844$f3xia)
                                                                                                          (if g$ls/false$23844$f3xia
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$21427$f3xia
                                                                                                                   '#f
                                                                                                                   '"malformed import form"
                                                                                                                   g$e$23835$f3xia)))
                                                                                                              g$ls/false$23844$f3xia)
                                                                                                            (g$syntax-violation$21427$f3xia
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$23843$f3xia))))
                                                                                                       (g$syntax-dispatch$21307$f3xia
                                                                                                         g$t$23843$f3xia
                                                                                                         '_))))
                                                                                                   g$t$23840$f3xia))))
                                                                                             (g$syntax-dispatch$21307$f3xia
                                                                                               g$t$23840$f3xia
                                                                                               '(_ .
                                                                                                   each-any)))))
                                                                                         g$t$23836$f3xia))))
                                                                                   (g$syntax-dispatch$21307$f3xia
                                                                                     g$t$23836$f3xia
                                                                                     '(_ any)))))
                                                                               g$e$23835$f3xia))))
                                                                         (g$module-import$23794$f3xia
                                                                           (case-lambda
                                                                             ((g$e$23818$f3xia
                                                                                g$r$23819$f3xia)
                                                                              ((case-lambda
                                                                                 ((g$t$23820$f3xia)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$23821$f3xia)
                                                                                      (if (if g$ls/false$23821$f3xia
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$id$23822$f3xia)
                                                                                                   (g$id?$20809$f3xia
                                                                                                     g$id$23822$f3xia)))
                                                                                                g$ls/false$23821$f3xia))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$23823$f3xia)
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$syntax-type$20829$f3xia
                                                                                                    g$id$23823$f3xia
                                                                                                    g$r$23819$f3xia)))
                                                                                               (case-lambda
                                                                                                 ((g$type$23827$f3xia
                                                                                                    g$value$23828$f3xia
                                                                                                    g$kwd$23829$f3xia)
                                                                                                  ((case-lambda
                                                                                                     ((g$kwd$23830$f3xia
                                                                                                        g$value$23831$f3xia
                                                                                                        g$type$23832$f3xia)
                                                                                                      ((case-lambda
                                                                                                         ((g$t$23833$f3xia)
                                                                                                          (if (eqv?
                                                                                                                g$t$23833$f3xia
                                                                                                                '$module)
                                                                                                            ((case-lambda
                                                                                                               ((g$iface$23834$f3xia)
                                                                                                                (values
                                                                                                                  (g$module-interface-exp-id*$21351$f3xia
                                                                                                                    g$iface$23834$f3xia
                                                                                                                    g$id$23823$f3xia)
                                                                                                                  (g$module-interface-exp-lab-vec$21347$f3xia
                                                                                                                    g$iface$23834$f3xia))))
                                                                                                             g$value$23831$f3xia)
                                                                                                            ((case-lambda
                                                                                                               (()
                                                                                                                (begin
                                                                                                                  '#f
                                                                                                                  (g$syntax-violation$21427$f3xia
                                                                                                                    '#f
                                                                                                                    '"invalid import"
                                                                                                                    g$e$23818$f3xia))))))))
                                                                                                       g$type$23832$f3xia)))
                                                                                                   g$kwd$23829$f3xia
                                                                                                   g$value$23828$f3xia
                                                                                                   g$type$23827$f3xia))))))
                                                                                          g$ls/false$23821$f3xia)
                                                                                        (g$syntax-violation$21427$f3xia
                                                                                          '#f
                                                                                          '"invalid syntax"
                                                                                          g$t$23820$f3xia))))
                                                                                   (g$syntax-dispatch$21307$f3xia
                                                                                     g$t$23820$f3xia
                                                                                     '(_ any)))))
                                                                               g$e$23818$f3xia))))
                                                                         (g$library-import$23795$f3xia
                                                                           (case-lambda
                                                                             ((g$e$23804$f3xia)
                                                                              ((case-lambda
                                                                                 ((g$t$23805$f3xia)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$23806$f3xia)
                                                                                      (if g$ls/false$23806$f3xia
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$ctxt$23807$f3xia
                                                                                               g$imp*$23808$f3xia)
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$parse-import-spec*$21359$f3xia
                                                                                                    (g$syntax->datum$21430$f3xia
                                                                                                      g$imp*$23808$f3xia))))
                                                                                               (case-lambda
                                                                                                 ((g$subst-names$23811$f3xia
                                                                                                    g$subst-labels$23812$f3xia)
                                                                                                  ((case-lambda
                                                                                                     ((g$subst-labels$23813$f3xia
                                                                                                        g$subst-names$23814$f3xia)
                                                                                                      (values
                                                                                                        (g$vector-map$16063$f3xia
                                                                                                          (case-lambda
                                                                                                            ((g$name$23815$f3xia)
                                                                                                             (g$datum->stx$20792$f3xia
                                                                                                               g$ctxt$23807$f3xia
                                                                                                               g$name$23815$f3xia)))
                                                                                                          g$subst-names$23814$f3xia)
                                                                                                        g$subst-labels$23813$f3xia)))
                                                                                                   g$subst-labels$23812$f3xia
                                                                                                   g$subst-names$23811$f3xia))))))
                                                                                          g$ls/false$23806$f3xia)
                                                                                        ((case-lambda
                                                                                           ((g$t$23816$f3xia)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$23817$f3xia)
                                                                                                (if g$ls/false$23817$f3xia
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$21427$f3xia
                                                                                                         '#f
                                                                                                         '"invalid import form"
                                                                                                         g$e$23804$f3xia)))
                                                                                                    g$ls/false$23817$f3xia)
                                                                                                  (g$syntax-violation$21427$f3xia
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$23816$f3xia))))
                                                                                             (g$syntax-dispatch$21307$f3xia
                                                                                               g$t$23816$f3xia
                                                                                               '_))))
                                                                                         g$t$23805$f3xia))))
                                                                                   (g$syntax-dispatch$21307$f3xia
                                                                                     g$t$23805$f3xia
                                                                                     '(any .
                                                                                           each-any)))))
                                                                               g$e$23804$f3xia)))))
                                                                 (begin
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (if (g$module-import?$23793$f3xia
                                                                              g$e$23715$f3xia)
                                                                          (g$module-import$23794$f3xia
                                                                            g$e$23715$f3xia
                                                                            g$r$23705$f3xia)
                                                                          (g$library-import$23795$f3xia
                                                                            g$e$23715$f3xia))))
                                                                     (case-lambda
                                                                       ((g$id*$23798$f3xia
                                                                          g$lab*$23799$f3xia)
                                                                        ((case-lambda
                                                                           ((g$lab*$23800$f3xia
                                                                              g$id*$23801$f3xia)
                                                                            (g$vector-for-each$16064$f3xia
                                                                              (case-lambda
                                                                                ((g$id$23802$f3xia
                                                                                   g$lab$23803$f3xia)
                                                                                 (g$extend-rib!$20770$f3xia
                                                                                   g$rib$23712$f3xia
                                                                                   g$id$23802$f3xia
                                                                                   g$lab$23803$f3xia
                                                                                   g$sd?$23714$f3xia)))
                                                                              g$id*$23801$f3xia
                                                                              g$lab*$23800$f3xia)))
                                                                         g$lab*$23799$f3xia
                                                                         g$id*$23798$f3xia))))
                                                                   (g$chi-body*$21354$f3xia
                                                                     (cdr g$e*$23704$f3xia)
                                                                     g$r$23705$f3xia
                                                                     g$mr$23706$f3xia
                                                                     g$lex*$23707$f3xia
                                                                     g$rhs*$23708$f3xia
                                                                     g$mod**$23709$f3xia
                                                                     g$kwd*$23725$f3xia
                                                                     g$exp*$23711$f3xia
                                                                     g$rib$23712$f3xia
                                                                     g$mix?$23713$f3xia
                                                                     g$sd?$23714$f3xia))))))
                                                           ((case-lambda
                                                              (()
                                                               (begin
                                                                 '#f
                                                                 (if g$mix?$23713$f3xia
                                                                   (g$chi-body*$21354$f3xia
                                                                     (cdr g$e*$23704$f3xia)
                                                                     g$r$23705$f3xia
                                                                     g$mr$23706$f3xia
                                                                     (cons
                                                                       (g$gen-lexical$20744$f3xia
                                                                         'dummy)
                                                                       g$lex*$23707$f3xia)
                                                                     (cons
                                                                       (cons
                                                                         'top-expr
                                                                         g$e$23715$f3xia)
                                                                       g$rhs*$23708$f3xia)
                                                                     g$mod**$23709$f3xia
                                                                     g$kwd*$23725$f3xia
                                                                     g$exp*$23711$f3xia
                                                                     g$rib$23712$f3xia
                                                                     '#t
                                                                     g$sd?$23714$f3xia)
                                                                   (values
                                                                     g$e*$23704$f3xia
                                                                     g$r$23705$f3xia
                                                                     g$mr$23706$f3xia
                                                                     g$lex*$23707$f3xia
                                                                     g$rhs*$23708$f3xia
                                                                     g$mod**$23709$f3xia
                                                                     g$kwd*$23725$f3xia
                                                                     g$exp*$23711$f3xia)))))))))))))))))))
                                  g$type$23724$f3xia)))
                              (if (g$id?$20809$f3xia g$kwd$23722$f3xia)
                                (cons
                                  g$kwd$23722$f3xia
                                  g$kwd*$23710$f3xia)
                                g$kwd*$23710$f3xia))))
                          g$kwd$23721$f3xia
                          g$value$23720$f3xia
                          g$type$23719$f3xia))))))
                 (car g$e*$23704$f3xia))))))))))
   (g$expand-transformer$21355$f3xia
     g$expand-transformer$24952$f3xia
     (case-lambda
       ((g$expr$23845$f3xia g$r$23846$f3xia)
        ((case-lambda
           ((g$rtc$23847$f3xia)
            ((case-lambda
               ((g$expanded-rhs$23848$f3xia)
                (begin
                  (g$for-each$15551$f3xia
                    ((case-lambda
                       ((g$mark-visit$23849$f3xia)
                        (case-lambda
                          ((g$x$23850$f3xia)
                           (begin
                             (g$invoke-library$20515$f3xia
                               g$x$23850$f3xia)
                             (g$mark-visit$23849$f3xia
                               g$x$23850$f3xia))))))
                     (g$vis-collector$21363$f3xia))
                    (g$rtc$23847$f3xia))
                  g$expanded-rhs$23848$f3xia)))
             ((case-lambda
                ((g$inv-collector$23855$f3xia
                   g$vis-collector$23856$f3xia
                   g$inv-collector$23857$f3xia
                   g$vis-collector$23858$f3xia)
                 ((case-lambda
                    ((g$swap$23859$f3xia)
                     (dynamic-wind
                       g$swap$23859$f3xia
                       (case-lambda
                         (()
                          (g$chi-expr$21325$f3xia
                            g$expr$23845$f3xia
                            g$r$23846$f3xia
                            g$r$23846$f3xia)))
                       g$swap$23859$f3xia)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$23860$f3xia)
                           (begin
                             (g$inv-collector$23855$f3xia
                               g$inv-collector$23857$f3xia)
                             (set! g$inv-collector$23857$f3xia
                               g$t$23860$f3xia))))
                        (g$inv-collector$23855$f3xia))
                       ((case-lambda
                          ((g$t$23861$f3xia)
                           (begin
                             (g$vis-collector$23856$f3xia
                               g$vis-collector$23858$f3xia)
                             (set! g$vis-collector$23858$f3xia
                               g$t$23861$f3xia))))
                        (g$vis-collector$23856$f3xia))))))))
              g$inv-collector$21362$f3xia
              g$vis-collector$21363$f3xia
              g$rtc$23847$f3xia
              (case-lambda ((g$x$23862$f3xia) (values)))))))
         (g$make-collector$21361$f3xia)))))
   (g$parse-exports$21356$f3xia
     g$parse-exports$24953$f3xia
     (case-lambda
       ((g$exp*$23863$f3xia)
        ((letrec ((g$f$23864$f3xia
                    (case-lambda
                      ((g$exp*$23865$f3xia
                         g$int*$23866$f3xia
                         g$ext*$23867$f3xia)
                       (if (null? g$exp*$23865$f3xia)
                         (begin
                           (if (not (g$valid-bound-ids?$20814$f3xia
                                      g$ext*$23867$f3xia))
                             (g$syntax-violation$21427$f3xia
                               'export
                               '"invalid exports"
                               (g$find-dups$21335$f3xia
                                 g$ext*$23867$f3xia))
                             (void))
                           (values
                             (g$map$15550$f3xia
                               g$syntax->datum$21430$f3xia
                               g$ext*$23867$f3xia)
                             g$int*$23866$f3xia))
                         ((case-lambda
                            (()
                             (begin
                               '#f
                               ((case-lambda
                                  ((g$t$23868$f3xia)
                                   ((case-lambda
                                      ((g$ls/false$23869$f3xia)
                                       (if g$ls/false$23869$f3xia
                                         (apply
                                           (case-lambda
                                             ((g$rename$23870$f3xia
                                                g$i*$23871$f3xia
                                                g$e*$23872$f3xia)
                                              (begin
                                                (if (not (if (eq? (g$syntax->datum$21430$f3xia
                                                                    g$rename$23870$f3xia)
                                                                  'rename)
                                                           (if (g$for-all$15548$f3xia
                                                                 g$id?$20809$f3xia
                                                                 g$i*$23871$f3xia)
                                                             (begin
                                                               '#f
                                                               (g$for-all$15548$f3xia
                                                                 g$id?$20809$f3xia
                                                                 g$e*$23872$f3xia))
                                                             '#f)
                                                           '#f))
                                                  (g$syntax-violation$21427$f3xia
                                                    'export
                                                    '"invalid export specifier"
                                                    (car g$exp*$23865$f3xia))
                                                  (void))
                                                (g$f$23864$f3xia
                                                  (cdr g$exp*$23865$f3xia)
                                                  (g$append$15556$f3xia
                                                    g$i*$23871$f3xia
                                                    g$int*$23866$f3xia)
                                                  (g$append$15556$f3xia
                                                    g$e*$23872$f3xia
                                                    g$ext*$23867$f3xia)))))
                                           g$ls/false$23869$f3xia)
                                         ((case-lambda
                                            ((g$t$23873$f3xia)
                                             ((case-lambda
                                                ((g$ls/false$23874$f3xia)
                                                 (if g$ls/false$23874$f3xia
                                                   (apply
                                                     (case-lambda
                                                       ((g$ie$23875$f3xia)
                                                        (begin
                                                          (if (not (g$id?$20809$f3xia
                                                                     g$ie$23875$f3xia))
                                                            (g$syntax-violation$21427$f3xia
                                                              'export
                                                              '"invalid export"
                                                              g$ie$23875$f3xia)
                                                            (void))
                                                          (g$f$23864$f3xia
                                                            (cdr g$exp*$23865$f3xia)
                                                            (cons
                                                              g$ie$23875$f3xia
                                                              g$int*$23866$f3xia)
                                                            (cons
                                                              g$ie$23875$f3xia
                                                              g$ext*$23867$f3xia)))))
                                                     g$ls/false$23874$f3xia)
                                                   (g$syntax-violation$21427$f3xia
                                                     '#f
                                                     '"invalid syntax"
                                                     g$t$23873$f3xia))))
                                              (g$syntax-dispatch$21307$f3xia
                                                g$t$23873$f3xia
                                                'any))))
                                          g$t$23868$f3xia))))
                                    (g$syntax-dispatch$21307$f3xia
                                      g$t$23868$f3xia
                                      '(any . #(each (any any)))))))
                                (car g$exp*$23865$f3xia)))))))))))
           g$f$23864$f3xia)
         g$exp*$23863$f3xia
         '()
         '()))))
   (g$parse-library-name$21357$f3xia
     g$parse-library-name$24954$f3xia
     (case-lambda
       ((g$spec$23876$f3xia)
        (letrec* ((g$parse$23877$f3xia
                    (case-lambda
                      ((g$x$23884$f3xia)
                       ((case-lambda
                          ((g$t$23885$f3xia)
                           ((case-lambda
                              ((g$ls/false$23886$f3xia)
                               (if (if g$ls/false$23886$f3xia
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$23887$f3xia)
                                            (g$for-all$15548$f3xia
                                              (case-lambda
                                                ((g$x$23888$f3xia)
                                                 ((case-lambda
                                                    ((g$x$23889$f3xia)
                                                     (if (g$integer?$17025$f3xia
                                                           g$x$23889$f3xia)
                                                       (begin
                                                         '#f
                                                         (g$exact?$17020$f3xia
                                                           g$x$23889$f3xia))
                                                       '#f)))
                                                  (g$syntax->datum$21430$f3xia
                                                    g$x$23888$f3xia))))
                                              g$v*$23887$f3xia)))
                                         g$ls/false$23886$f3xia))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$23890$f3xia)
                                      (values
                                        '()
                                        (g$map$15550$f3xia
                                          g$syntax->datum$21430$f3xia
                                          g$v*$23890$f3xia))))
                                   g$ls/false$23886$f3xia)
                                 ((case-lambda
                                    ((g$t$23891$f3xia)
                                     ((case-lambda
                                        ((g$ls/false$23892$f3xia)
                                         (if (if g$ls/false$23892$f3xia
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$23893$f3xia
                                                        g$rest$23894$f3xia)
                                                      (g$symbol?$15976$f3xia
                                                        (g$syntax->datum$21430$f3xia
                                                          g$x$23893$f3xia))))
                                                   g$ls/false$23892$f3xia))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$23895$f3xia
                                                  g$rest$23896$f3xia)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$23877$f3xia
                                                       g$rest$23896$f3xia)))
                                                  (case-lambda
                                                    ((g$x*$23899$f3xia
                                                       g$v*$23900$f3xia)
                                                     ((case-lambda
                                                        ((g$v*$23901$f3xia
                                                           g$x*$23902$f3xia)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$21430$f3xia
                                                               g$x$23895$f3xia)
                                                             g$x*$23902$f3xia)
                                                           g$v*$23901$f3xia)))
                                                      g$v*$23900$f3xia
                                                      g$x*$23899$f3xia))))))
                                             g$ls/false$23892$f3xia)
                                           ((case-lambda
                                              ((g$t$23903$f3xia)
                                               ((case-lambda
                                                  ((g$ls/false$23904$f3xia)
                                                   (if g$ls/false$23904$f3xia
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (values
                                                            '()
                                                            '())))
                                                       g$ls/false$23904$f3xia)
                                                     ((case-lambda
                                                        ((g$t$23905$f3xia)
                                                         ((case-lambda
                                                            ((g$ls/false$23906$f3xia)
                                                             (if g$ls/false$23906$f3xia
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$21427$f3xia
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$23876$f3xia)))
                                                                 g$ls/false$23906$f3xia)
                                                               (g$syntax-violation$21427$f3xia
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$23905$f3xia))))
                                                          (g$syntax-dispatch$21307$f3xia
                                                            g$t$23905$f3xia
                                                            '_))))
                                                      g$t$23903$f3xia))))
                                                (g$syntax-dispatch$21307$f3xia
                                                  g$t$23903$f3xia
                                                  '()))))
                                            g$t$23891$f3xia))))
                                      (g$syntax-dispatch$21307$f3xia
                                        g$t$23891$f3xia
                                        '(any . any)))))
                                  g$t$23885$f3xia))))
                            (g$syntax-dispatch$21307$f3xia
                              g$t$23885$f3xia
                              '(each-any)))))
                        g$x$23884$f3xia)))))
          (call-with-values
            (case-lambda (() (g$parse$23877$f3xia g$spec$23876$f3xia)))
            (case-lambda
              ((g$name*$23880$f3xia g$ver*$23881$f3xia)
               ((case-lambda
                  ((g$ver*$23882$f3xia g$name*$23883$f3xia)
                   (begin
                     (if (null? g$name*$23883$f3xia)
                       (g$syntax-violation$21427$f3xia
                         '#f
                         '"empty library name"
                         g$spec$23876$f3xia)
                       (void))
                     (values g$name*$23883$f3xia g$ver*$23882$f3xia))))
                g$ver*$23881$f3xia
                g$name*$23880$f3xia))))))))
   (g$parse-library$21358$f3xia
     g$parse-library$24955$f3xia
     (case-lambda
       ((g$e$23907$f3xia)
        ((case-lambda
           ((g$t$23908$f3xia)
            ((case-lambda
               ((g$ls/false$23909$f3xia)
                (if (if g$ls/false$23909$f3xia
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$23910$f3xia
                               g$name*$23911$f3xia
                               g$export$23912$f3xia
                               g$exp*$23913$f3xia
                               g$import$23914$f3xia
                               g$imp*$23915$f3xia
                               g$b*$23916$f3xia)
                             (if (eq? (g$syntax->datum$21430$f3xia
                                        g$export$23912$f3xia)
                                      'export)
                               (if (eq? (g$syntax->datum$21430$f3xia
                                          g$import$23914$f3xia)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$21430$f3xia
                                          g$library$23910$f3xia)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$23909$f3xia))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$23917$f3xia
                         g$name*$23918$f3xia
                         g$export$23919$f3xia
                         g$exp*$23920$f3xia
                         g$import$23921$f3xia
                         g$imp*$23922$f3xia
                         g$b*$23923$f3xia)
                       (values
                         g$name*$23918$f3xia
                         g$exp*$23920$f3xia
                         g$imp*$23922$f3xia
                         g$b*$23923$f3xia)))
                    g$ls/false$23909$f3xia)
                  ((case-lambda
                     ((g$t$23924$f3xia)
                      ((case-lambda
                         ((g$ls/false$23925$f3xia)
                          (if g$ls/false$23925$f3xia
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$21427$f3xia
                                   '#f
                                   '"malformed library"
                                   g$e$23907$f3xia)))
                              g$ls/false$23925$f3xia)
                            (g$syntax-violation$21427$f3xia
                              '#f
                              '"invalid syntax"
                              g$t$23924$f3xia))))
                       (g$syntax-dispatch$21307$f3xia
                         g$t$23924$f3xia
                         '_))))
                   g$t$23908$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$23908$f3xia
               '(any each-any
                     (any . each-any)
                     (any . each-any)
                     .
                     each-any)))))
         g$e$23907$f3xia))))
   (g$parse-import-spec*$21359$f3xia
     g$parse-import-spec*$24956$f3xia
     (case-lambda
       ((g$imp*$23926$f3xia)
        (letrec* ((g$idsyn?$23927$f3xia
                    (case-lambda
                      ((g$x$24187$f3xia)
                       (g$symbol?$15976$f3xia
                         (g$syntax->datum$21430$f3xia
                           g$x$24187$f3xia)))))
                  (g$dup-error$23928$f3xia
                    (case-lambda
                      ((g$name$24186$f3xia)
                       (g$syntax-violation$21427$f3xia
                         'import
                         '"two imports with different bindings"
                         g$name$24186$f3xia))))
                  (g$merge-substs$23929$f3xia
                    (case-lambda
                      ((g$s$24177$f3xia g$subst$24178$f3xia)
                       (letrec* ((g$insert-to-subst$24179$f3xia
                                   (case-lambda
                                     ((g$a$24180$f3xia
                                        g$subst$24181$f3xia)
                                      ((case-lambda
                                         ((g$name$24182$f3xia
                                            g$label$24183$f3xia)
                                          ((case-lambda
                                             ((g$t$24184$f3xia)
                                              (if g$t$24184$f3xia
                                                ((case-lambda
                                                   ((g$x$24185$f3xia)
                                                    (if (eq? (cdr g$x$24185$f3xia)
                                                             g$label$24183$f3xia)
                                                      g$subst$24181$f3xia
                                                      ((case-lambda
                                                         (()
                                                          (begin
                                                            '#f
                                                            (g$dup-error$23928$f3xia
                                                              g$name$24182$f3xia))))))))
                                                 g$t$24184$f3xia)
                                                ((case-lambda
                                                   (()
                                                    (begin
                                                      '#f
                                                      (cons
                                                        g$a$24180$f3xia
                                                        g$subst$24181$f3xia))))))))
                                           (g$assq$15534$f3xia
                                             g$name$24182$f3xia
                                             g$subst$24181$f3xia))))
                                       (car g$a$24180$f3xia)
                                       (cdr g$a$24180$f3xia))))))
                         (if (null? g$s$24177$f3xia)
                           g$subst$24178$f3xia
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 (g$insert-to-subst$24179$f3xia
                                   (car g$s$24177$f3xia)
                                   (g$merge-substs$23929$f3xia
                                     (cdr g$s$24177$f3xia)
                                     g$subst$24178$f3xia)))))))))))
                  (g$exclude*$23930$f3xia
                    (case-lambda
                      ((g$sym*$24153$f3xia g$subst$24154$f3xia)
                       (letrec* ((g$exclude$24155$f3xia
                                   (case-lambda
                                     ((g$sym$24168$f3xia
                                        g$subst$24169$f3xia)
                                      (if (null? g$subst$24169$f3xia)
                                        (g$syntax-violation$21427$f3xia
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$24168$f3xia)
                                        (if (eq? g$sym$24168$f3xia
                                                 (g$caar$16013$f3xia
                                                   g$subst$24169$f3xia))
                                          (values
                                            (g$cdar$16015$f3xia
                                              g$subst$24169$f3xia)
                                            (cdr g$subst$24169$f3xia))
                                          ((case-lambda
                                             (()
                                              (begin
                                                '#f
                                                ((case-lambda
                                                   ((g$a$24170$f3xia)
                                                    (call-with-values
                                                      (case-lambda
                                                        (()
                                                         (g$exclude$24155$f3xia
                                                           g$sym$24168$f3xia
                                                           (cdr g$subst$24169$f3xia))))
                                                      (case-lambda
                                                        ((g$old$24173$f3xia
                                                           g$subst$24174$f3xia)
                                                         ((case-lambda
                                                            ((g$subst$24175$f3xia
                                                               g$old$24176$f3xia)
                                                             (values
                                                               g$old$24176$f3xia
                                                               (cons
                                                                 g$a$24170$f3xia
                                                                 g$subst$24175$f3xia))))
                                                          g$subst$24174$f3xia
                                                          g$old$24173$f3xia))))))
                                                 (car g$subst$24169$f3xia))))))))))))
                         (if (null? g$sym*$24153$f3xia)
                           (values '() g$subst$24154$f3xia)
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$exclude$24155$f3xia
                                        (car g$sym*$24153$f3xia)
                                        g$subst$24154$f3xia)))
                                   (case-lambda
                                     ((g$old$24158$f3xia
                                        g$subst$24159$f3xia)
                                      ((case-lambda
                                         ((g$subst$24160$f3xia
                                            g$old$24161$f3xia)
                                          (call-with-values
                                            (case-lambda
                                              (()
                                               (g$exclude*$23930$f3xia
                                                 (cdr g$sym*$24153$f3xia)
                                                 g$subst$24160$f3xia)))
                                            (case-lambda
                                              ((g$old*$24164$f3xia
                                                 g$subst$24165$f3xia)
                                               ((case-lambda
                                                  ((g$subst$24166$f3xia
                                                     g$old*$24167$f3xia)
                                                   (values
                                                     (cons
                                                       g$old$24161$f3xia
                                                       g$old*$24167$f3xia)
                                                     g$subst$24166$f3xia)))
                                                g$subst$24165$f3xia
                                                g$old*$24164$f3xia))))))
                                       g$subst$24159$f3xia
                                       g$old$24158$f3xia)))))))))))))
                  (g$find*$23931$f3xia
                    (case-lambda
                      ((g$sym*$24149$f3xia g$subst$24150$f3xia)
                       (g$map$15550$f3xia
                         (case-lambda
                           ((g$x$24151$f3xia)
                            ((case-lambda
                               ((g$t$24152$f3xia)
                                (if g$t$24152$f3xia
                                  (cdr g$t$24152$f3xia)
                                  ((case-lambda
                                     (()
                                      (begin
                                        '#f
                                        (g$syntax-violation$21427$f3xia
                                          'import
                                          '"cannot find identifier"
                                          g$x$24151$f3xia))))))))
                             (g$assq$15534$f3xia
                               g$x$24151$f3xia
                               g$subst$24150$f3xia))))
                         g$sym*$24149$f3xia))))
                  (g$rem*$23932$f3xia
                    (case-lambda
                      ((g$sym*$24145$f3xia g$subst$24146$f3xia)
                       ((letrec ((g$f$24147$f3xia
                                   (case-lambda
                                     ((g$subst$24148$f3xia)
                                      (if (null? g$subst$24148$f3xia)
                                        '()
                                        (if (g$memq$15538$f3xia
                                              (g$caar$16013$f3xia
                                                g$subst$24148$f3xia)
                                              g$sym*$24145$f3xia)
                                          (g$f$24147$f3xia
                                            (cdr g$subst$24148$f3xia))
                                          ((case-lambda
                                             (()
                                              (begin
                                                '#f
                                                (cons
                                                  (car g$subst$24148$f3xia)
                                                  (g$f$24147$f3xia
                                                    (cdr g$subst$24148$f3xia)))))))))))))
                          g$f$24147$f3xia)
                        g$subst$24146$f3xia))))
                  (g$remove-dups$23933$f3xia
                    (case-lambda
                      ((g$ls$24144$f3xia)
                       (if (null? g$ls$24144$f3xia)
                         '()
                         (if (g$memq$15538$f3xia
                               (car g$ls$24144$f3xia)
                               (cdr g$ls$24144$f3xia))
                           (g$remove-dups$23933$f3xia
                             (cdr g$ls$24144$f3xia))
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 (cons
                                   (car g$ls$24144$f3xia)
                                   (g$remove-dups$23933$f3xia
                                     (cdr g$ls$24144$f3xia))))))))))))
                  (g$parse-library-name$23934$f3xia
                    (case-lambda
                      ((g$spec$24028$f3xia)
                       (letrec* ((g$subversion?$24029$f3xia
                                   (case-lambda
                                     ((g$x$24142$f3xia)
                                      ((case-lambda
                                         ((g$x$24143$f3xia)
                                          (if (g$integer?$17025$f3xia
                                                g$x$24143$f3xia)
                                            (if (g$exact?$17020$f3xia
                                                  g$x$24143$f3xia)
                                              (begin
                                                '#f
                                                (g$>=$17042$f3xia
                                                  g$x$24143$f3xia
                                                  '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$21430$f3xia
                                         g$x$24142$f3xia)))))
                                 (g$subversion-pred$24030$f3xia
                                   (case-lambda
                                     ((g$x*$24094$f3xia)
                                      ((case-lambda
                                         ((g$t$24095$f3xia)
                                          ((case-lambda
                                             ((g$ls/false$24096$f3xia)
                                              (if (if g$ls/false$24096$f3xia
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$24097$f3xia)
                                                           (g$subversion?$24029$f3xia
                                                             g$n$24097$f3xia)))
                                                        g$ls/false$24096$f3xia))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$24098$f3xia)
                                                     (case-lambda
                                                       ((g$x$24099$f3xia)
                                                        (g$=$17038$f3xia
                                                          g$x$24099$f3xia
                                                          (g$syntax->datum$21430$f3xia
                                                            g$n$24098$f3xia))))))
                                                  g$ls/false$24096$f3xia)
                                                ((case-lambda
                                                   ((g$t$24100$f3xia)
                                                    ((case-lambda
                                                       ((g$ls/false$24101$f3xia)
                                                        (if (if g$ls/false$24101$f3xia
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$24102$f3xia
                                                                       g$sub*$24103$f3xia)
                                                                     (eq? (g$syntax->datum$21430$f3xia
                                                                            g$p?$24102$f3xia)
                                                                          'and)))
                                                                  g$ls/false$24101$f3xia))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$24104$f3xia
                                                                 g$sub*$24105$f3xia)
                                                               ((case-lambda
                                                                  ((g$p*$24106$f3xia)
                                                                   (case-lambda
                                                                     ((g$x$24107$f3xia)
                                                                      (g$for-all$15548$f3xia
                                                                        (case-lambda
                                                                          ((g$p$24108$f3xia)
                                                                           (g$p$24108$f3xia
                                                                             g$x$24107$f3xia)))
                                                                        g$p*$24106$f3xia)))))
                                                                (g$map$15550$f3xia
                                                                  g$subversion-pred$24030$f3xia
                                                                  g$sub*$24105$f3xia))))
                                                            g$ls/false$24101$f3xia)
                                                          ((case-lambda
                                                             ((g$t$24109$f3xia)
                                                              ((case-lambda
                                                                 ((g$ls/false$24110$f3xia)
                                                                  (if (if g$ls/false$24110$f3xia
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$24111$f3xia
                                                                                 g$sub*$24112$f3xia)
                                                                               (eq? (g$syntax->datum$21430$f3xia
                                                                                      g$p?$24111$f3xia)
                                                                                    'or)))
                                                                            g$ls/false$24110$f3xia))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$24113$f3xia
                                                                           g$sub*$24114$f3xia)
                                                                         ((case-lambda
                                                                            ((g$p*$24115$f3xia)
                                                                             (case-lambda
                                                                               ((g$x$24116$f3xia)
                                                                                (g$exists$15549$f3xia
                                                                                  (case-lambda
                                                                                    ((g$p$24117$f3xia)
                                                                                     (g$p$24117$f3xia
                                                                                       g$x$24116$f3xia)))
                                                                                  g$p*$24115$f3xia)))))
                                                                          (g$map$15550$f3xia
                                                                            g$subversion-pred$24030$f3xia
                                                                            g$sub*$24114$f3xia))))
                                                                      g$ls/false$24110$f3xia)
                                                                    ((case-lambda
                                                                       ((g$t$24118$f3xia)
                                                                        ((case-lambda
                                                                           ((g$ls/false$24119$f3xia)
                                                                            (if (if g$ls/false$24119$f3xia
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$24120$f3xia
                                                                                           g$sub$24121$f3xia)
                                                                                         (eq? (g$syntax->datum$21430$f3xia
                                                                                                g$p?$24120$f3xia)
                                                                                              'not)))
                                                                                      g$ls/false$24119$f3xia))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$24122$f3xia
                                                                                     g$sub$24123$f3xia)
                                                                                   ((case-lambda
                                                                                      ((g$p$24124$f3xia)
                                                                                       (case-lambda
                                                                                         ((g$x$24125$f3xia)
                                                                                          (not (g$p$24124$f3xia
                                                                                                 g$x$24125$f3xia))))))
                                                                                    (g$subversion-pred$24030$f3xia
                                                                                      g$sub$24123$f3xia))))
                                                                                g$ls/false$24119$f3xia)
                                                                              ((case-lambda
                                                                                 ((g$t$24126$f3xia)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$24127$f3xia)
                                                                                      (if (if g$ls/false$24127$f3xia
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$24128$f3xia
                                                                                                     g$n$24129$f3xia)
                                                                                                   (if (eq? (g$syntax->datum$21430$f3xia
                                                                                                              g$p?$24128$f3xia)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$24029$f3xia
                                                                                                         g$n$24129$f3xia))
                                                                                                     '#f)))
                                                                                                g$ls/false$24127$f3xia))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$24130$f3xia
                                                                                               g$n$24131$f3xia)
                                                                                             (case-lambda
                                                                                               ((g$x$24132$f3xia)
                                                                                                (g$<=$17040$f3xia
                                                                                                  g$x$24132$f3xia
                                                                                                  (g$syntax->datum$21430$f3xia
                                                                                                    g$n$24131$f3xia))))))
                                                                                          g$ls/false$24127$f3xia)
                                                                                        ((case-lambda
                                                                                           ((g$t$24133$f3xia)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$24134$f3xia)
                                                                                                (if (if g$ls/false$24134$f3xia
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$24135$f3xia
                                                                                                               g$n$24136$f3xia)
                                                                                                             (if (eq? (g$syntax->datum$21430$f3xia
                                                                                                                        g$p?$24135$f3xia)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$24029$f3xia
                                                                                                                   g$n$24136$f3xia))
                                                                                                               '#f)))
                                                                                                          g$ls/false$24134$f3xia))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$24137$f3xia
                                                                                                         g$n$24138$f3xia)
                                                                                                       (case-lambda
                                                                                                         ((g$x$24139$f3xia)
                                                                                                          (g$>=$17042$f3xia
                                                                                                            g$x$24139$f3xia
                                                                                                            (g$syntax->datum$21430$f3xia
                                                                                                              g$n$24138$f3xia))))))
                                                                                                    g$ls/false$24134$f3xia)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$24140$f3xia)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$24141$f3xia)
                                                                                                          (if g$ls/false$24141$f3xia
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$21427$f3xia
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$24028$f3xia
                                                                                                                   g$x*$24094$f3xia)))
                                                                                                              g$ls/false$24141$f3xia)
                                                                                                            (g$syntax-violation$21427$f3xia
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$24140$f3xia))))
                                                                                                       (g$syntax-dispatch$21307$f3xia
                                                                                                         g$t$24140$f3xia
                                                                                                         '_))))
                                                                                                   g$t$24133$f3xia))))
                                                                                             (g$syntax-dispatch$21307$f3xia
                                                                                               g$t$24133$f3xia
                                                                                               '(any any)))))
                                                                                         g$t$24126$f3xia))))
                                                                                   (g$syntax-dispatch$21307$f3xia
                                                                                     g$t$24126$f3xia
                                                                                     '(any any)))))
                                                                               g$t$24118$f3xia))))
                                                                         (g$syntax-dispatch$21307$f3xia
                                                                           g$t$24118$f3xia
                                                                           '(any any)))))
                                                                     g$t$24109$f3xia))))
                                                               (g$syntax-dispatch$21307$f3xia
                                                                 g$t$24109$f3xia
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$24100$f3xia))))
                                                     (g$syntax-dispatch$21307$f3xia
                                                       g$t$24100$f3xia
                                                       '(any .
                                                             each-any)))))
                                                 g$t$24095$f3xia))))
                                           (g$syntax-dispatch$21307$f3xia
                                             g$t$24095$f3xia
                                             'any))))
                                       g$x*$24094$f3xia))))
                                 (g$version-pred$24031$f3xia
                                   (case-lambda
                                     ((g$x*$24054$f3xia)
                                      ((case-lambda
                                         ((g$t$24055$f3xia)
                                          ((case-lambda
                                             ((g$ls/false$24056$f3xia)
                                              (if g$ls/false$24056$f3xia
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$24057$f3xia)
                                                        '#t))))
                                                  g$ls/false$24056$f3xia)
                                                ((case-lambda
                                                   ((g$t$24058$f3xia)
                                                    ((case-lambda
                                                       ((g$ls/false$24059$f3xia)
                                                        (if (if g$ls/false$24059$f3xia
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$24060$f3xia
                                                                       g$ver*$24061$f3xia)
                                                                     (eq? (g$syntax->datum$21430$f3xia
                                                                            g$c$24060$f3xia)
                                                                          'and)))
                                                                  g$ls/false$24059$f3xia))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$24062$f3xia
                                                                 g$ver*$24063$f3xia)
                                                               ((case-lambda
                                                                  ((g$p*$24064$f3xia)
                                                                   (case-lambda
                                                                     ((g$x$24065$f3xia)
                                                                      (g$for-all$15548$f3xia
                                                                        (case-lambda
                                                                          ((g$p$24066$f3xia)
                                                                           (g$p$24066$f3xia
                                                                             g$x$24065$f3xia)))
                                                                        g$p*$24064$f3xia)))))
                                                                (g$map$15550$f3xia
                                                                  g$version-pred$24031$f3xia
                                                                  g$ver*$24063$f3xia))))
                                                            g$ls/false$24059$f3xia)
                                                          ((case-lambda
                                                             ((g$t$24067$f3xia)
                                                              ((case-lambda
                                                                 ((g$ls/false$24068$f3xia)
                                                                  (if (if g$ls/false$24068$f3xia
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$24069$f3xia
                                                                                 g$ver*$24070$f3xia)
                                                                               (eq? (g$syntax->datum$21430$f3xia
                                                                                      g$c$24069$f3xia)
                                                                                    'or)))
                                                                            g$ls/false$24068$f3xia))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$24071$f3xia
                                                                           g$ver*$24072$f3xia)
                                                                         ((case-lambda
                                                                            ((g$p*$24073$f3xia)
                                                                             (case-lambda
                                                                               ((g$x$24074$f3xia)
                                                                                (g$exists$15549$f3xia
                                                                                  (case-lambda
                                                                                    ((g$p$24075$f3xia)
                                                                                     (g$p$24075$f3xia
                                                                                       g$x$24074$f3xia)))
                                                                                  g$p*$24073$f3xia)))))
                                                                          (g$map$15550$f3xia
                                                                            g$version-pred$24031$f3xia
                                                                            g$ver*$24072$f3xia))))
                                                                      g$ls/false$24068$f3xia)
                                                                    ((case-lambda
                                                                       ((g$t$24076$f3xia)
                                                                        ((case-lambda
                                                                           ((g$ls/false$24077$f3xia)
                                                                            (if (if g$ls/false$24077$f3xia
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$24078$f3xia
                                                                                           g$ver$24079$f3xia)
                                                                                         (eq? (g$syntax->datum$21430$f3xia
                                                                                                g$c$24078$f3xia)
                                                                                              'not)))
                                                                                      g$ls/false$24077$f3xia))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$24080$f3xia
                                                                                     g$ver$24081$f3xia)
                                                                                   ((case-lambda
                                                                                      ((g$p$24082$f3xia)
                                                                                       (case-lambda
                                                                                         ((g$x$24083$f3xia)
                                                                                          (not (g$p$24082$f3xia
                                                                                                 g$x$24083$f3xia))))))
                                                                                    (g$version-pred$24031$f3xia
                                                                                      g$ver$24081$f3xia))))
                                                                                g$ls/false$24077$f3xia)
                                                                              ((case-lambda
                                                                                 ((g$t$24084$f3xia)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$24085$f3xia)
                                                                                      (if g$ls/false$24085$f3xia
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$24086$f3xia)
                                                                                             ((case-lambda
                                                                                                ((g$p*$24087$f3xia)
                                                                                                 (case-lambda
                                                                                                   ((g$x$24088$f3xia)
                                                                                                    ((letrec ((g$f$24089$f3xia
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$24090$f3xia
                                                                                                                     g$x$24091$f3xia)
                                                                                                                   (if (null?
                                                                                                                         g$p*$24090$f3xia)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$24091$f3xia)
                                                                                                                       '#f
                                                                                                                       ((case-lambda
                                                                                                                          (()
                                                                                                                           (begin
                                                                                                                             '#f
                                                                                                                             (if ((car g$p*$24090$f3xia)
                                                                                                                                  (car g$x$24091$f3xia))
                                                                                                                               (begin
                                                                                                                                 '#f
                                                                                                                                 (g$f$24089$f3xia
                                                                                                                                   (cdr g$p*$24090$f3xia)
                                                                                                                                   (cdr g$x$24091$f3xia)))
                                                                                                                               '#f)))))))))))
                                                                                                       g$f$24089$f3xia)
                                                                                                     g$p*$24087$f3xia
                                                                                                     g$x$24088$f3xia)))))
                                                                                              (g$map$15550$f3xia
                                                                                                g$subversion-pred$24030$f3xia
                                                                                                g$sub*$24086$f3xia))))
                                                                                          g$ls/false$24085$f3xia)
                                                                                        ((case-lambda
                                                                                           ((g$t$24092$f3xia)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$24093$f3xia)
                                                                                                (if g$ls/false$24093$f3xia
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$21427$f3xia
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$24028$f3xia
                                                                                                         g$x*$24054$f3xia)))
                                                                                                    g$ls/false$24093$f3xia)
                                                                                                  (g$syntax-violation$21427$f3xia
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$24092$f3xia))))
                                                                                             (g$syntax-dispatch$21307$f3xia
                                                                                               g$t$24092$f3xia
                                                                                               '_))))
                                                                                         g$t$24084$f3xia))))
                                                                                   (g$syntax-dispatch$21307$f3xia
                                                                                     g$t$24084$f3xia
                                                                                     'each-any))))
                                                                               g$t$24076$f3xia))))
                                                                         (g$syntax-dispatch$21307$f3xia
                                                                           g$t$24076$f3xia
                                                                           '(any any)))))
                                                                     g$t$24067$f3xia))))
                                                               (g$syntax-dispatch$21307$f3xia
                                                                 g$t$24067$f3xia
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$24058$f3xia))))
                                                     (g$syntax-dispatch$21307$f3xia
                                                       g$t$24058$f3xia
                                                       '(any .
                                                             each-any)))))
                                                 g$t$24055$f3xia))))
                                           (g$syntax-dispatch$21307$f3xia
                                             g$t$24055$f3xia
                                             '()))))
                                       g$x*$24054$f3xia)))))
                         ((letrec ((g$f$24032$f3xia
                                     (case-lambda
                                       ((g$x$24033$f3xia)
                                        ((case-lambda
                                           ((g$t$24034$f3xia)
                                            ((case-lambda
                                               ((g$ls/false$24035$f3xia)
                                                (if g$ls/false$24035$f3xia
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$24036$f3xia)
                                                       (values
                                                         '()
                                                         (g$version-pred$24031$f3xia
                                                           g$version-spec*$24036$f3xia))))
                                                    g$ls/false$24035$f3xia)
                                                  ((case-lambda
                                                     ((g$t$24037$f3xia)
                                                      ((case-lambda
                                                         ((g$ls/false$24038$f3xia)
                                                          (if (if g$ls/false$24038$f3xia
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$24039$f3xia
                                                                         g$x*$24040$f3xia)
                                                                       (g$idsyn?$23927$f3xia
                                                                         g$x$24039$f3xia)))
                                                                    g$ls/false$24038$f3xia))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$24041$f3xia
                                                                   g$x*$24042$f3xia)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$24032$f3xia
                                                                        g$x*$24042$f3xia)))
                                                                   (case-lambda
                                                                     ((g$name$24045$f3xia
                                                                        g$pred$24046$f3xia)
                                                                      ((case-lambda
                                                                         ((g$pred$24047$f3xia
                                                                            g$name$24048$f3xia)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$21430$f3xia
                                                                                g$x$24041$f3xia)
                                                                              g$name$24048$f3xia)
                                                                            g$pred$24047$f3xia)))
                                                                       g$pred$24046$f3xia
                                                                       g$name$24045$f3xia))))))
                                                              g$ls/false$24038$f3xia)
                                                            ((case-lambda
                                                               ((g$t$24049$f3xia)
                                                                ((case-lambda
                                                                   ((g$ls/false$24050$f3xia)
                                                                    (if g$ls/false$24050$f3xia
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$24051$f3xia)
                                                                                '#t)))))
                                                                        g$ls/false$24050$f3xia)
                                                                      ((case-lambda
                                                                         ((g$t$24052$f3xia)
                                                                          ((case-lambda
                                                                             ((g$ls/false$24053$f3xia)
                                                                              (if g$ls/false$24053$f3xia
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$21427$f3xia
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$24028$f3xia)))
                                                                                  g$ls/false$24053$f3xia)
                                                                                (g$syntax-violation$21427$f3xia
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$24052$f3xia))))
                                                                           (g$syntax-dispatch$21307$f3xia
                                                                             g$t$24052$f3xia
                                                                             '_))))
                                                                       g$t$24049$f3xia))))
                                                                 (g$syntax-dispatch$21307$f3xia
                                                                   g$t$24049$f3xia
                                                                   '()))))
                                                             g$t$24037$f3xia))))
                                                       (g$syntax-dispatch$21307$f3xia
                                                         g$t$24037$f3xia
                                                         '(any .
                                                               any)))))
                                                   g$t$24034$f3xia))))
                                             (g$syntax-dispatch$21307$f3xia
                                               g$t$24034$f3xia
                                               '(each-any)))))
                                         g$x$24033$f3xia)))))
                            g$f$24032$f3xia)
                          g$spec$24028$f3xia)))))
                  (g$import-library$23935$f3xia
                    (case-lambda
                      ((g$spec*$24020$f3xia)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$23934$f3xia
                              g$spec*$24020$f3xia)))
                         (case-lambda
                           ((g$name$24023$f3xia g$pred$24024$f3xia)
                            ((case-lambda
                               ((g$pred$24025$f3xia g$name$24026$f3xia)
                                (begin
                                  (if (null? g$name$24026$f3xia)
                                    (g$syntax-violation$21427$f3xia
                                      'import
                                      '"empty library name"
                                      g$spec*$24020$f3xia)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$24027$f3xia)
                                      (begin
                                        (if (not g$lib$24027$f3xia)
                                          (g$syntax-violation$21427$f3xia
                                            'import
                                            '"cannot find library with required name"
                                            g$name$24026$f3xia)
                                          (void))
                                        (if (not (g$pred$24025$f3xia
                                                   (g$library-version$20468$f3xia
                                                     g$lib$24027$f3xia)))
                                          (g$syntax-violation$21427$f3xia
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$24020$f3xia
                                            g$lib$24027$f3xia)
                                          (void))
                                        ((g$imp-collector$21364$f3xia)
                                         g$lib$24027$f3xia)
                                        (g$library-subst$20472$f3xia
                                          g$lib$24027$f3xia))))
                                   (g$find-library-by-name$20508$f3xia
                                     g$name$24026$f3xia)))))
                             g$pred$24024$f3xia
                             g$name$24023$f3xia)))))))
                  (g$get-import$23936$f3xia
                    (case-lambda
                      ((g$spec$23949$f3xia)
                       ((case-lambda
                          ((g$t$23950$f3xia)
                           ((case-lambda
                              ((g$ls/false$23951$f3xia)
                               (if (if g$ls/false$23951$f3xia
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$23952$f3xia
                                              g$x*$23953$f3xia)
                                            (not (g$memq$15538$f3xia
                                                   (g$syntax->datum$21430$f3xia
                                                     g$x$23952$f3xia)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$23951$f3xia))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$23954$f3xia g$x*$23955$f3xia)
                                      (g$import-library$23935$f3xia
                                        (cons
                                          g$x$23954$f3xia
                                          g$x*$23955$f3xia))))
                                   g$ls/false$23951$f3xia)
                                 ((case-lambda
                                    ((g$t$23956$f3xia)
                                     ((case-lambda
                                        ((g$ls/false$23957$f3xia)
                                         (if (if g$ls/false$23957$f3xia
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$23958$f3xia
                                                        g$isp$23959$f3xia
                                                        g$old*$23960$f3xia
                                                        g$new*$23961$f3xia)
                                                      (if (eq? (g$syntax->datum$21430$f3xia
                                                                 g$rename$23958$f3xia)
                                                               'rename)
                                                        (if (g$for-all$15548$f3xia
                                                              g$idsyn?$23927$f3xia
                                                              g$old*$23960$f3xia)
                                                          (begin
                                                            '#f
                                                            (g$for-all$15548$f3xia
                                                              g$idsyn?$23927$f3xia
                                                              g$new*$23961$f3xia))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$23957$f3xia))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$23962$f3xia
                                                  g$isp$23963$f3xia
                                                  g$old*$23964$f3xia
                                                  g$new*$23965$f3xia)
                                                ((case-lambda
                                                   ((g$subst$23966$f3xia
                                                      g$old*$23967$f3xia
                                                      g$new*$23968$f3xia)
                                                    ((case-lambda
                                                       ((g$old-label*$23969$f3xia)
                                                        ((case-lambda
                                                           ((g$subst$23970$f3xia)
                                                            (g$merge-substs$23929$f3xia
                                                              (g$map$15550$f3xia
                                                                cons
                                                                g$new*$23968$f3xia
                                                                g$old-label*$23969$f3xia)
                                                              g$subst$23970$f3xia)))
                                                         (g$rem*$23932$f3xia
                                                           g$old*$23967$f3xia
                                                           g$subst$23966$f3xia))))
                                                     (g$find*$23931$f3xia
                                                       g$old*$23967$f3xia
                                                       g$subst$23966$f3xia))))
                                                 (g$get-import$23936$f3xia
                                                   g$isp$23963$f3xia)
                                                 (g$map$15550$f3xia
                                                   g$syntax->datum$21430$f3xia
                                                   g$old*$23964$f3xia)
                                                 (g$map$15550$f3xia
                                                   g$syntax->datum$21430$f3xia
                                                   g$new*$23965$f3xia))))
                                             g$ls/false$23957$f3xia)
                                           ((case-lambda
                                              ((g$t$23971$f3xia)
                                               ((case-lambda
                                                  ((g$ls/false$23972$f3xia)
                                                   (if (if g$ls/false$23972$f3xia
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$23973$f3xia
                                                                  g$isp$23974$f3xia
                                                                  g$sym*$23975$f3xia)
                                                                (if (eq? (g$syntax->datum$21430$f3xia
                                                                           g$except$23973$f3xia)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$15548$f3xia
                                                                      g$idsyn?$23927$f3xia
                                                                      g$sym*$23975$f3xia))
                                                                  '#f)))
                                                             g$ls/false$23972$f3xia))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$23976$f3xia
                                                            g$isp$23977$f3xia
                                                            g$sym*$23978$f3xia)
                                                          ((case-lambda
                                                             ((g$subst$23979$f3xia)
                                                              (g$rem*$23932$f3xia
                                                                (g$map$15550$f3xia
                                                                  g$syntax->datum$21430$f3xia
                                                                  g$sym*$23978$f3xia)
                                                                g$subst$23979$f3xia)))
                                                           (g$get-import$23936$f3xia
                                                             g$isp$23977$f3xia))))
                                                       g$ls/false$23972$f3xia)
                                                     ((case-lambda
                                                        ((g$t$23980$f3xia)
                                                         ((case-lambda
                                                            ((g$ls/false$23981$f3xia)
                                                             (if (if g$ls/false$23981$f3xia
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$23982$f3xia
                                                                            g$isp$23983$f3xia
                                                                            g$sym*$23984$f3xia)
                                                                          (if (eq? (g$syntax->datum$21430$f3xia
                                                                                     g$only$23982$f3xia)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$15548$f3xia
                                                                                g$idsyn?$23927$f3xia
                                                                                g$sym*$23984$f3xia))
                                                                            '#f)))
                                                                       g$ls/false$23981$f3xia))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$23985$f3xia
                                                                      g$isp$23986$f3xia
                                                                      g$sym*$23987$f3xia)
                                                                    ((case-lambda
                                                                       ((g$subst$23988$f3xia
                                                                          g$sym*$23989$f3xia)
                                                                        ((case-lambda
                                                                           ((g$sym*$23990$f3xia)
                                                                            ((case-lambda
                                                                               ((g$lab*$23991$f3xia)
                                                                                (g$map$15550$f3xia
                                                                                  cons
                                                                                  g$sym*$23990$f3xia
                                                                                  g$lab*$23991$f3xia)))
                                                                             (g$find*$23931$f3xia
                                                                               g$sym*$23990$f3xia
                                                                               g$subst$23988$f3xia))))
                                                                         (g$remove-dups$23933$f3xia
                                                                           g$sym*$23989$f3xia))))
                                                                     (g$get-import$23936$f3xia
                                                                       g$isp$23986$f3xia)
                                                                     (g$map$15550$f3xia
                                                                       g$syntax->datum$21430$f3xia
                                                                       g$sym*$23987$f3xia))))
                                                                 g$ls/false$23981$f3xia)
                                                               ((case-lambda
                                                                  ((g$t$23992$f3xia)
                                                                   ((case-lambda
                                                                      ((g$ls/false$23993$f3xia)
                                                                       (if (if g$ls/false$23993$f3xia
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$23994$f3xia
                                                                                      g$isp$23995$f3xia
                                                                                      g$p$23996$f3xia)
                                                                                    (if (eq? (g$syntax->datum$21430$f3xia
                                                                                               g$prefix$23994$f3xia)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$23927$f3xia
                                                                                          g$p$23996$f3xia))
                                                                                      '#f)))
                                                                                 g$ls/false$23993$f3xia))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$23997$f3xia
                                                                                g$isp$23998$f3xia
                                                                                g$p$23999$f3xia)
                                                                              ((case-lambda
                                                                                 ((g$subst$24000$f3xia
                                                                                    g$prefix$24001$f3xia)
                                                                                  (g$map$15550$f3xia
                                                                                    (case-lambda
                                                                                      ((g$x$24002$f3xia)
                                                                                       (cons
                                                                                         (g$string->symbol$15997$f3xia
                                                                                           (g$string-append$15994$f3xia
                                                                                             g$prefix$24001$f3xia
                                                                                             (g$symbol->string$15996$f3xia
                                                                                               (car g$x$24002$f3xia))))
                                                                                         (cdr g$x$24002$f3xia))))
                                                                                    g$subst$24000$f3xia)))
                                                                               (g$get-import$23936$f3xia
                                                                                 g$isp$23998$f3xia)
                                                                               (g$symbol->string$15996$f3xia
                                                                                 (g$syntax->datum$21430$f3xia
                                                                                   g$p$23999$f3xia)))))
                                                                           g$ls/false$23993$f3xia)
                                                                         ((case-lambda
                                                                            ((g$t$24003$f3xia)
                                                                             ((case-lambda
                                                                                ((g$ls/false$24004$f3xia)
                                                                                 (if (if g$ls/false$24004$f3xia
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$24005$f3xia
                                                                                                g$spec*$24006$f3xia)
                                                                                              (eq? (g$syntax->datum$21430$f3xia
                                                                                                     g$library$24005$f3xia)
                                                                                                   'library)))
                                                                                           g$ls/false$24004$f3xia))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$24007$f3xia
                                                                                          g$spec*$24008$f3xia)
                                                                                        (g$import-library$23935$f3xia
                                                                                          g$spec*$24008$f3xia)))
                                                                                     g$ls/false$24004$f3xia)
                                                                                   ((case-lambda
                                                                                      ((g$t$24009$f3xia)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$24010$f3xia)
                                                                                           (if (if g$ls/false$24010$f3xia
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$24011$f3xia
                                                                                                          g$isp$24012$f3xia
                                                                                                          g$rest$24013$f3xia)
                                                                                                        (eq? (g$syntax->datum$21430$f3xia
                                                                                                               g$for$24011$f3xia)
                                                                                                             'for)))
                                                                                                     g$ls/false$24010$f3xia))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$24014$f3xia
                                                                                                    g$isp$24015$f3xia
                                                                                                    g$rest$24016$f3xia)
                                                                                                  (g$get-import$23936$f3xia
                                                                                                    g$isp$24015$f3xia)))
                                                                                               g$ls/false$24010$f3xia)
                                                                                             ((case-lambda
                                                                                                ((g$t$24017$f3xia)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$24018$f3xia)
                                                                                                     (if g$ls/false$24018$f3xia
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$24019$f3xia)
                                                                                                            (g$syntax-violation$21427$f3xia
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$24019$f3xia)))
                                                                                                         g$ls/false$24018$f3xia)
                                                                                                       (g$syntax-violation$21427$f3xia
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$24017$f3xia))))
                                                                                                  (g$syntax-dispatch$21307$f3xia
                                                                                                    g$t$24017$f3xia
                                                                                                    'any))))
                                                                                              g$t$24009$f3xia))))
                                                                                        (g$syntax-dispatch$21307$f3xia
                                                                                          g$t$24009$f3xia
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$24003$f3xia))))
                                                                              (g$syntax-dispatch$21307$f3xia
                                                                                g$t$24003$f3xia
                                                                                '(any each-any)))))
                                                                          g$t$23992$f3xia))))
                                                                    (g$syntax-dispatch$21307$f3xia
                                                                      g$t$23992$f3xia
                                                                      '(any any
                                                                            any)))))
                                                                g$t$23980$f3xia))))
                                                          (g$syntax-dispatch$21307$f3xia
                                                            g$t$23980$f3xia
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$23971$f3xia))))
                                                (g$syntax-dispatch$21307$f3xia
                                                  g$t$23971$f3xia
                                                  '(any any
                                                        .
                                                        each-any)))))
                                            g$t$23956$f3xia))))
                                      (g$syntax-dispatch$21307$f3xia
                                        g$t$23956$f3xia
                                        '(any any
                                              .
                                              #(each (any any)))))))
                                  g$t$23950$f3xia))))
                            (g$syntax-dispatch$21307$f3xia
                              g$t$23950$f3xia
                              '(any . each-any)))))
                        g$spec$23949$f3xia))))
                  (g$add-imports!$23937$f3xia
                    (case-lambda
                      ((g$imp$23941$f3xia g$h$23942$f3xia)
                       ((case-lambda
                          ((g$subst$23943$f3xia)
                           (g$for-each$15551$f3xia
                             (case-lambda
                               ((g$x$23944$f3xia)
                                ((case-lambda
                                   ((g$name$23945$f3xia
                                      g$label$23946$f3xia)
                                    ((case-lambda
                                       ((g$t$23947$f3xia)
                                        (if g$t$23947$f3xia
                                          ((case-lambda
                                             ((g$l$23948$f3xia)
                                              (if (not (eq? g$l$23948$f3xia
                                                            g$label$23946$f3xia))
                                                (g$dup-error$23928$f3xia
                                                  g$name$23945$f3xia)
                                                (void))))
                                           g$t$23947$f3xia)
                                          ((case-lambda
                                             (()
                                              (begin
                                                '#f
                                                (g$hashtable-set!$16116$f3xia
                                                  g$h$23942$f3xia
                                                  g$name$23945$f3xia
                                                  g$label$23946$f3xia))))))))
                                     (g$hashtable-ref$16115$f3xia
                                       g$h$23942$f3xia
                                       g$name$23945$f3xia
                                       '#f))))
                                 (car g$x$23944$f3xia)
                                 (cdr g$x$23944$f3xia))))
                             g$subst$23943$f3xia)))
                        (g$get-import$23936$f3xia
                          g$imp$23941$f3xia))))))
          ((letrec ((g$f$23938$f3xia
                      (case-lambda
                        ((g$imp*$23939$f3xia g$h$23940$f3xia)
                         (if (null? g$imp*$23939$f3xia)
                           (hashtable-entries g$h$23940$f3xia)
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 (g$add-imports!$23937$f3xia
                                   (car g$imp*$23939$f3xia)
                                   g$h$23940$f3xia)
                                 (g$f$23938$f3xia
                                   (cdr g$imp*$23939$f3xia)
                                   g$h$23940$f3xia))))))))))
             g$f$23938$f3xia)
           g$imp*$23926$f3xia
           (g$make-eq-hashtable$16112$f3xia))))))
   (g$make-top-rib$21360$f3xia
     g$make-top-rib$24957$f3xia
     (case-lambda
       ((g$names$24188$f3xia g$labels$24189$f3xia)
        ((case-lambda
           ((g$rib$24190$f3xia)
            (begin
              (g$vector-for-each$16064$f3xia
                (case-lambda
                  ((g$name$24191$f3xia g$label$24192$f3xia)
                   (begin
                     (if (not (g$symbol?$15976$f3xia
                                g$name$24191$f3xia))
                       (g$error$12460$f3xia
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$24191$f3xia)
                       (void))
                     (g$extend-rib/nc!$20771$f3xia
                       g$rib$24190$f3xia
                       (g$make-stx$20782$f3xia
                         g$name$24191$f3xia
                         g$top-mark*$20742$f3xia
                         '()
                         '())
                       g$label$24192$f3xia))))
                g$names$24188$f3xia
                g$labels$24189$f3xia)
              g$rib$24190$f3xia)))
         (g$make-cache-rib$20768$f3xia)))))
   (g$make-collector$21361$f3xia
     g$make-collector$24958$f3xia
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$24193$f3xia)
            (case-lambda
              (() g$ls$24193$f3xia)
              ((g$x$24194$f3xia)
               (set! g$ls$24193$f3xia
                 (g$set-cons$20739$f3xia
                   g$x$24194$f3xia
                   g$ls$24193$f3xia))))))
         '()))))
   (g$inv-collector$21362$f3xia
     g$inv-collector$24959$f3xia
     (g$make-parameter$19650$f3xia
       (case-lambda
         (g$args$24195$f3xia
          (g$assertion-violation$12459$f3xia
            'inv-collector
            '"BUG: not initialized")))
       (case-lambda
         ((g$x$24196$f3xia)
          (begin
            (if (not (g$procedure?$15978$f3xia g$x$24196$f3xia))
              (g$assertion-violation$12459$f3xia
                'inv-collector
                '"BUG: not a procedure"
                g$x$24196$f3xia)
              (void))
            g$x$24196$f3xia)))))
   (g$vis-collector$21363$f3xia
     g$vis-collector$24960$f3xia
     (g$make-parameter$19650$f3xia
       (case-lambda
         (g$args$24197$f3xia
          (g$assertion-violation$12459$f3xia
            'vis-collector
            '"BUG: not initialized")))
       (case-lambda
         ((g$x$24198$f3xia)
          (begin
            (if (not (g$procedure?$15978$f3xia g$x$24198$f3xia))
              (g$assertion-violation$12459$f3xia
                'vis-collector
                '"BUG: not a procedure"
                g$x$24198$f3xia)
              (void))
            g$x$24198$f3xia)))))
   (g$imp-collector$21364$f3xia
     g$imp-collector$24961$f3xia
     (g$make-parameter$19650$f3xia
       (case-lambda
         (g$args$24199$f3xia
          (g$assertion-violation$12459$f3xia
            'imp-collector
            '"BUG: not initialized")))
       (case-lambda
         ((g$x$24200$f3xia)
          (begin
            (if (not (g$procedure?$15978$f3xia g$x$24200$f3xia))
              (g$assertion-violation$12459$f3xia
                'imp-collector
                '"BUG: not a procedure"
                g$x$24200$f3xia)
              (void))
            g$x$24200$f3xia)))))
   (g$chi-library-internal$21365$f3xia
     g$chi-library-internal$24962$f3xia
     (case-lambda
       ((g$e*$24201$f3xia g$rib$24202$f3xia g$mix?$24203$f3xia)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$21354$f3xia
               g$e*$24201$f3xia
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$24202$f3xia
               g$mix?$24203$f3xia
               '#t)))
          (case-lambda
            ((g$e*$24212$f3xia
               g$r$24213$f3xia
               g$mr$24214$f3xia
               g$lex*$24215$f3xia
               g$rhs*$24216$f3xia
               g$mod**$24217$f3xia
               g$_kwd*$24218$f3xia
               g$exp*$24219$f3xia)
             ((case-lambda
                ((g$exp*$24220$f3xia
                   g$_kwd*$24221$f3xia
                   g$mod**$24222$f3xia
                   g$rhs*$24223$f3xia
                   g$lex*$24224$f3xia
                   g$mr$24225$f3xia
                   g$r$24226$f3xia
                   g$e*$24227$f3xia)
                 (values
                   (g$append$15556$f3xia
                     (apply
                       g$append$15556$f3xia
                       (g$reverse$16012$f3xia g$mod**$24222$f3xia))
                     g$e*$24227$f3xia)
                   g$r$24226$f3xia
                   g$mr$24225$f3xia
                   (g$reverse$16012$f3xia g$lex*$24224$f3xia)
                   (g$reverse$16012$f3xia g$rhs*$24223$f3xia)
                   g$exp*$24220$f3xia)))
              g$exp*$24219$f3xia
              g$_kwd*$24218$f3xia
              g$mod**$24217$f3xia
              g$rhs*$24216$f3xia
              g$lex*$24215$f3xia
              g$mr$24214$f3xia
              g$r$24213$f3xia
              g$e*$24212$f3xia)))))))
   (g$chi-interaction-expr$21366$f3xia
     g$chi-interaction-expr$24963$f3xia
     (case-lambda
       ((g$e$24228$f3xia g$rib$24229$f3xia g$r$24230$f3xia)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$21354$f3xia
               (list g$e$24228$f3xia)
               g$r$24230$f3xia
               g$r$24230$f3xia
               '()
               '()
               '()
               '()
               '()
               g$rib$24229$f3xia
               '#t
               '#f)))
          (case-lambda
            ((g$e*$24239$f3xia
               g$r$24240$f3xia
               g$mr$24241$f3xia
               g$lex*$24242$f3xia
               g$rhs*$24243$f3xia
               g$mod**$24244$f3xia
               g$_kwd*$24245$f3xia
               g$_exp*$24246$f3xia)
             ((case-lambda
                ((g$_exp*$24247$f3xia
                   g$_kwd*$24248$f3xia
                   g$mod**$24249$f3xia
                   g$rhs*$24250$f3xia
                   g$lex*$24251$f3xia
                   g$mr$24252$f3xia
                   g$r$24253$f3xia
                   g$e*$24254$f3xia)
                 ((case-lambda
                    ((g$e*$24255$f3xia)
                     ((case-lambda
                        ((g$e$24256$f3xia)
                         (values g$e$24256$f3xia g$r$24253$f3xia)))
                      (if (null? g$e*$24255$f3xia)
                        (g$build-void$20735$f3xia)
                        (if (null? (cdr g$e*$24255$f3xia))
                          (car g$e*$24255$f3xia)
                          ((case-lambda
                             (()
                              (begin
                                '#f
                                (g$build-sequence$20734$f3xia
                                  '#f
                                  g$e*$24255$f3xia))))))))))
                  (g$expand-interaction-rhs*/init*$21332$f3xia
                    (g$reverse$16012$f3xia g$lex*$24251$f3xia)
                    (g$reverse$16012$f3xia g$rhs*$24250$f3xia)
                    (g$append$15556$f3xia
                      (apply
                        g$append$15556$f3xia
                        (g$reverse$16012$f3xia g$mod**$24249$f3xia))
                      g$e*$24254$f3xia)
                    g$r$24253$f3xia
                    g$mr$24252$f3xia))))
              g$_exp*$24246$f3xia
              g$_kwd*$24245$f3xia
              g$mod**$24244$f3xia
              g$rhs*$24243$f3xia
              g$lex*$24242$f3xia
              g$mr$24241$f3xia
              g$r$24240$f3xia
              g$e*$24239$f3xia)))))))
   (g$library-body-expander$21367$f3xia
     g$library-body-expander$24964$f3xia
     (case-lambda
       ((g$name$24257$f3xia
          g$main-exp*$24258$f3xia
          g$imp*$24259$f3xia
          g$b*$24260$f3xia
          g$mix?$24261$f3xia)
        (letrec* ((g$itc$24262$f3xia (g$make-collector$21361$f3xia)))
          ((case-lambda
             ((g$imp-collector$24267$f3xia
                g$top-level-context$24268$f3xia
                g$imp-collector$24269$f3xia
                g$top-level-context$24270$f3xia)
              ((case-lambda
                 ((g$swap$24271$f3xia)
                  (dynamic-wind
                    g$swap$24271$f3xia
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$21359$f3xia
                              g$imp*$24259$f3xia)))
                         (case-lambda
                           ((g$subst-names$24274$f3xia
                              g$subst-labels$24275$f3xia)
                            ((case-lambda
                               ((g$subst-labels$24276$f3xia
                                  g$subst-names$24277$f3xia)
                                ((case-lambda
                                   ((g$rib$24278$f3xia)
                                    (letrec* ((g$wrap$24279$f3xia
                                                (case-lambda
                                                  ((g$x$24341$f3xia)
                                                   (g$make-stx$20782$f3xia
                                                     g$x$24341$f3xia
                                                     g$top-mark*$20742$f3xia
                                                     (list
                                                       g$rib$24278$f3xia)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$24280$f3xia
                                            g$main-exp*$24281$f3xia
                                            g$rtc$24282$f3xia
                                            g$vtc$24283$f3xia)
                                          ((case-lambda
                                             ((g$inv-collector$24288$f3xia
                                                g$vis-collector$24289$f3xia
                                                g$inv-collector$24290$f3xia
                                                g$vis-collector$24291$f3xia)
                                              ((case-lambda
                                                 ((g$swap$24292$f3xia)
                                                  (dynamic-wind
                                                    g$swap$24292$f3xia
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$21365$f3xia
                                                              g$b*$24280$f3xia
                                                              g$rib$24278$f3xia
                                                              g$mix?$24261$f3xia)))
                                                         (case-lambda
                                                           ((g$init*$24299$f3xia
                                                              g$r$24300$f3xia
                                                              g$mr$24301$f3xia
                                                              g$lex*$24302$f3xia
                                                              g$rhs*$24303$f3xia
                                                              g$internal-exp*$24304$f3xia)
                                                            ((case-lambda
                                                               ((g$internal-exp*$24305$f3xia
                                                                  g$rhs*$24306$f3xia
                                                                  g$lex*$24307$f3xia
                                                                  g$mr$24308$f3xia
                                                                  g$r$24309$f3xia
                                                                  g$init*$24310$f3xia)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$21356$f3xia
                                                                       (g$append$15556$f3xia
                                                                         g$main-exp*$24281$f3xia
                                                                         g$internal-exp*$24305$f3xia))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$24313$f3xia
                                                                       g$exp-id*$24314$f3xia)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$24315$f3xia
                                                                           g$exp-name*$24316$f3xia)
                                                                         (begin
                                                                           (g$seal-rib!$20773$f3xia
                                                                             g$rib$24278$f3xia)
                                                                           ((case-lambda
                                                                              ((g$init*$24317$f3xia)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$24318$f3xia)
                                                                                   (begin
                                                                                     (g$unseal-rib!$20774$f3xia
                                                                                       g$rib$24278$f3xia)
                                                                                     ((case-lambda
                                                                                        ((g$loc*$24319$f3xia
                                                                                           g$export-subst$24320$f3xia)
                                                                                         (letrec* ((g$errstr$24321$f3xia
                                                                                                     '"attempt to export mutated variable"))
                                                                                           (call-with-values
                                                                                             (case-lambda
                                                                                               (()
                                                                                                (g$make-export-env/macros$21415$f3xia
                                                                                                  g$lex*$24307$f3xia
                                                                                                  g$loc*$24319$f3xia
                                                                                                  g$r$24309$f3xia)))
                                                                                             (case-lambda
                                                                                               ((g$export-env$24325$f3xia
                                                                                                  g$global*$24326$f3xia
                                                                                                  g$macro*$24327$f3xia)
                                                                                                ((case-lambda
                                                                                                   ((g$macro*$24328$f3xia
                                                                                                      g$global*$24329$f3xia
                                                                                                      g$export-env$24330$f3xia)
                                                                                                    (begin
                                                                                                      (g$for-each$15551$f3xia
                                                                                                        (case-lambda
                                                                                                          ((g$s$24331$f3xia)
                                                                                                           ((case-lambda
                                                                                                              ((g$name$24332$f3xia
                                                                                                                 g$label$24333$f3xia)
                                                                                                               ((case-lambda
                                                                                                                  ((g$p$24334$f3xia)
                                                                                                                   (if g$p$24334$f3xia
                                                                                                                     ((case-lambda
                                                                                                                        ((g$b$24335$f3xia)
                                                                                                                         ((case-lambda
                                                                                                                            ((g$type$24336$f3xia)
                                                                                                                             (if (eq? g$type$24336$f3xia
                                                                                                                                      'mutable)
                                                                                                                               (g$syntax-violation$21427$f3xia
                                                                                                                                 'export
                                                                                                                                 g$errstr$24321$f3xia
                                                                                                                                 g$name$24332$f3xia)
                                                                                                                               (void))))
                                                                                                                          (car g$b$24335$f3xia))))
                                                                                                                      (cdr g$p$24334$f3xia))
                                                                                                                     (void))))
                                                                                                                (g$assq$15534$f3xia
                                                                                                                  g$label$24333$f3xia
                                                                                                                  g$export-env$24330$f3xia))))
                                                                                                            (car g$s$24331$f3xia)
                                                                                                            (cdr g$s$24331$f3xia))))
                                                                                                        g$export-subst$24320$f3xia)
                                                                                                      ((case-lambda
                                                                                                         ((g$invoke-body$24337$f3xia
                                                                                                            g$invoke-definitions$24338$f3xia)
                                                                                                          (values
                                                                                                            (g$itc$24262$f3xia)
                                                                                                            (g$rtc$24282$f3xia)
                                                                                                            (g$vtc$24283$f3xia)
                                                                                                            (g$build-sequence$20734$f3xia
                                                                                                              '#f
                                                                                                              (g$append$15556$f3xia
                                                                                                                g$invoke-definitions$24338$f3xia
                                                                                                                (list
                                                                                                                  g$invoke-body$24337$f3xia)))
                                                                                                            g$macro*$24328$f3xia
                                                                                                            g$export-subst$24320$f3xia
                                                                                                            g$export-env$24330$f3xia)))
                                                                                                       (g$build-library-letrec*$20738$f3xia
                                                                                                         '#f
                                                                                                         g$name$24257$f3xia
                                                                                                         g$lex*$24307$f3xia
                                                                                                         g$loc*$24319$f3xia
                                                                                                         g$rhs*$24318$f3xia
                                                                                                         (if (null?
                                                                                                               g$init*$24317$f3xia)
                                                                                                           (g$build-void$20735$f3xia)
                                                                                                           (g$build-sequence$20734$f3xia
                                                                                                             '#f
                                                                                                             g$init*$24317$f3xia)))
                                                                                                       (g$map$15550$f3xia
                                                                                                         g$build-global-define$20730$f3xia
                                                                                                         (g$map$15550$f3xia
                                                                                                           cdr
                                                                                                           g$global*$24329$f3xia))))))
                                                                                                 g$macro*$24327$f3xia
                                                                                                 g$global*$24326$f3xia
                                                                                                 g$export-env$24325$f3xia)))))))
                                                                                      (g$map$15550$f3xia
                                                                                        g$gen-global$20745$f3xia
                                                                                        g$lex*$24307$f3xia)
                                                                                      (g$make-export-subst$21414$f3xia
                                                                                        g$exp-name*$24316$f3xia
                                                                                        g$exp-id*$24315$f3xia)))))
                                                                                (g$chi-rhs*$21333$f3xia
                                                                                  g$rhs*$24306$f3xia
                                                                                  g$r$24309$f3xia
                                                                                  g$mr$24308$f3xia))))
                                                                            (g$chi-expr*$21323$f3xia
                                                                              g$init*$24310$f3xia
                                                                              g$r$24309$f3xia
                                                                              g$mr$24308$f3xia)))))
                                                                      g$exp-id*$24314$f3xia
                                                                      g$exp-name*$24313$f3xia))))))
                                                             g$internal-exp*$24304$f3xia
                                                             g$rhs*$24303$f3xia
                                                             g$lex*$24302$f3xia
                                                             g$mr$24301$f3xia
                                                             g$r$24300$f3xia
                                                             g$init*$24299$f3xia))))))
                                                    g$swap$24292$f3xia)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$24339$f3xia)
                                                        (begin
                                                          (g$inv-collector$24288$f3xia
                                                            g$inv-collector$24290$f3xia)
                                                          (set! g$inv-collector$24290$f3xia
                                                            g$t$24339$f3xia))))
                                                     (g$inv-collector$24288$f3xia))
                                                    ((case-lambda
                                                       ((g$t$24340$f3xia)
                                                        (begin
                                                          (g$vis-collector$24289$f3xia
                                                            g$vis-collector$24291$f3xia)
                                                          (set! g$vis-collector$24291$f3xia
                                                            g$t$24340$f3xia))))
                                                     (g$vis-collector$24289$f3xia))))))))
                                           g$inv-collector$21362$f3xia
                                           g$vis-collector$21363$f3xia
                                           g$rtc$24282$f3xia
                                           g$vtc$24283$f3xia)))
                                       (g$map$15550$f3xia
                                         g$wrap$24279$f3xia
                                         g$b*$24260$f3xia)
                                       (g$map$15550$f3xia
                                         g$wrap$24279$f3xia
                                         g$main-exp*$24258$f3xia)
                                       (g$make-collector$21361$f3xia)
                                       (g$make-collector$21361$f3xia)))))
                                 (g$make-top-rib$21360$f3xia
                                   g$subst-names$24277$f3xia
                                   g$subst-labels$24276$f3xia))))
                             g$subst-labels$24275$f3xia
                             g$subst-names$24274$f3xia))))))
                    g$swap$24271$f3xia)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$24342$f3xia)
                        (begin
                          (g$imp-collector$24267$f3xia
                            g$imp-collector$24269$f3xia)
                          (set! g$imp-collector$24269$f3xia
                            g$t$24342$f3xia))))
                     (g$imp-collector$24267$f3xia))
                    ((case-lambda
                       ((g$t$24343$f3xia)
                        (begin
                          (g$top-level-context$24268$f3xia
                            g$top-level-context$24270$f3xia)
                          (set! g$top-level-context$24270$f3xia
                            g$t$24343$f3xia))))
                     (g$top-level-context$24268$f3xia))))))))
           g$imp-collector$21364$f3xia
           g$top-level-context$21435$f3xia
           g$itc$24262$f3xia
           '#f)))))
   (g$core-library-expander$21368$f3xia
     g$core-library-expander$24965$f3xia
     (case-lambda
       ((g$e$24344$f3xia g$verify-name$24345$f3xia)
        (call-with-values
          (case-lambda
            (() (g$parse-library$21358$f3xia g$e$24344$f3xia)))
          (case-lambda
            ((g$name*$24350$f3xia
               g$exp*$24351$f3xia
               g$imp*$24352$f3xia
               g$b*$24353$f3xia)
             ((case-lambda
                ((g$b*$24354$f3xia
                   g$imp*$24355$f3xia
                   g$exp*$24356$f3xia
                   g$name*$24357$f3xia)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$21357$f3xia
                        g$name*$24357$f3xia)))
                   (case-lambda
                     ((g$name$24360$f3xia g$ver$24361$f3xia)
                      ((case-lambda
                         ((g$ver$24362$f3xia g$name$24363$f3xia)
                          (begin
                            (g$verify-name$24345$f3xia
                              g$name$24363$f3xia)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$21367$f3xia
                                   g$name$24363$f3xia
                                   g$exp*$24356$f3xia
                                   g$imp*$24355$f3xia
                                   g$b*$24354$f3xia
                                   '#f)))
                              (case-lambda
                                ((g$imp*$24371$f3xia
                                   g$invoke-req*$24372$f3xia
                                   g$visit-req*$24373$f3xia
                                   g$invoke-code$24374$f3xia
                                   g$visit-code$24375$f3xia
                                   g$export-subst$24376$f3xia
                                   g$export-env$24377$f3xia)
                                 ((case-lambda
                                    ((g$export-env$24378$f3xia
                                       g$export-subst$24379$f3xia
                                       g$visit-code$24380$f3xia
                                       g$invoke-code$24381$f3xia
                                       g$visit-req*$24382$f3xia
                                       g$invoke-req*$24383$f3xia
                                       g$imp*$24384$f3xia)
                                     (values
                                       g$name$24363$f3xia
                                       g$ver$24362$f3xia
                                       g$imp*$24384$f3xia
                                       g$invoke-req*$24383$f3xia
                                       g$visit-req*$24382$f3xia
                                       g$invoke-code$24381$f3xia
                                       g$visit-code$24380$f3xia
                                       g$export-subst$24379$f3xia
                                       g$export-env$24378$f3xia)))
                                  g$export-env$24377$f3xia
                                  g$export-subst$24376$f3xia
                                  g$visit-code$24375$f3xia
                                  g$invoke-code$24374$f3xia
                                  g$visit-req*$24373$f3xia
                                  g$invoke-req*$24372$f3xia
                                  g$imp*$24371$f3xia)))))))
                       g$ver$24361$f3xia
                       g$name$24360$f3xia))))))
              g$b*$24353$f3xia
              g$imp*$24352$f3xia
              g$exp*$24351$f3xia
              g$name*$24350$f3xia)))))))
   (g$parse-top-level-program$21369$f3xia
     g$parse-top-level-program$24966$f3xia
     (case-lambda
       ((g$e*$24385$f3xia)
        ((case-lambda
           ((g$t$24386$f3xia)
            ((case-lambda
               ((g$ls/false$24387$f3xia)
                (if (if g$ls/false$24387$f3xia
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$24388$f3xia
                               g$imp*$24389$f3xia
                               g$b*$24390$f3xia)
                             (eq? (g$syntax->datum$21430$f3xia
                                    g$import$24388$f3xia)
                                  'import)))
                          g$ls/false$24387$f3xia))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$24391$f3xia
                         g$imp*$24392$f3xia
                         g$b*$24393$f3xia)
                       (values g$imp*$24392$f3xia g$b*$24393$f3xia)))
                    g$ls/false$24387$f3xia)
                  ((case-lambda
                     ((g$t$24394$f3xia)
                      ((case-lambda
                         ((g$ls/false$24395$f3xia)
                          (if (if g$ls/false$24395$f3xia
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$24396$f3xia
                                         g$x$24397$f3xia
                                         g$y$24398$f3xia)
                                       (eq? (g$syntax->datum$21430$f3xia
                                              g$import$24396$f3xia)
                                            'import)))
                                    g$ls/false$24395$f3xia))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$24399$f3xia
                                   g$x$24400$f3xia
                                   g$y$24401$f3xia)
                                 (g$syntax-violation$21427$f3xia
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$20806$f3xia
                                     g$e*$24385$f3xia))))
                              g$ls/false$24395$f3xia)
                            ((case-lambda
                               ((g$t$24402$f3xia)
                                ((case-lambda
                                   ((g$ls/false$24403$f3xia)
                                    (if g$ls/false$24403$f3xia
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$assertion-violation$12459$f3xia
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$24403$f3xia)
                                      (g$syntax-violation$21427$f3xia
                                        '#f
                                        '"invalid syntax"
                                        g$t$24402$f3xia))))
                                 (g$syntax-dispatch$21307$f3xia
                                   g$t$24402$f3xia
                                   '_))))
                             g$t$24394$f3xia))))
                       (g$syntax-dispatch$21307$f3xia
                         g$t$24394$f3xia
                         '((any . any) . any)))))
                   g$t$24386$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$24386$f3xia
               '((any . each-any) . each-any)))))
         g$e*$24385$f3xia))))
   (g$top-level-expander$21370$f3xia
     g$top-level-expander$24967$f3xia
     (case-lambda
       ((g$e*$24404$f3xia)
        (call-with-values
          (case-lambda
            (()
             (g$parse-top-level-program$21369$f3xia g$e*$24404$f3xia)))
          (case-lambda
            ((g$imp*$24407$f3xia g$b*$24408$f3xia)
             ((case-lambda
                ((g$b*$24409$f3xia g$imp*$24410$f3xia)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$21367$f3xia
                        '()
                        '()
                        g$imp*$24410$f3xia
                        g$b*$24409$f3xia
                        '#t)))
                   (case-lambda
                     ((g$imp*$24418$f3xia
                        g$invoke-req*$24419$f3xia
                        g$visit-req*$24420$f3xia
                        g$invoke-code$24421$f3xia
                        g$visit-code$24422$f3xia
                        g$export-subst$24423$f3xia
                        g$export-env$24424$f3xia)
                      ((case-lambda
                         ((g$export-env$24425$f3xia
                            g$export-subst$24426$f3xia
                            g$visit-code$24427$f3xia
                            g$invoke-code$24428$f3xia
                            g$visit-req*$24429$f3xia
                            g$invoke-req*$24430$f3xia
                            g$imp*$24431$f3xia)
                          (values
                            g$invoke-req*$24430$f3xia
                            g$invoke-code$24428$f3xia)))
                       g$export-env$24424$f3xia
                       g$export-subst$24423$f3xia
                       g$visit-code$24422$f3xia
                       g$invoke-code$24421$f3xia
                       g$visit-req*$24420$f3xia
                       g$invoke-req*$24419$f3xia
                       g$imp*$24418$f3xia))))))
              g$b*$24408$f3xia
              g$imp*$24407$f3xia)))))))
   (g$10556$21371$f3xia
     g$10556$24968$f3xia
     (make-record-type-descriptor
       'env
       '#f
       'g$10559$f3xia
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$10558$21372$f3xia g$10558$24969$f3xia '#f)
   (g$10557$21373$f3xia
     g$10557$24970$f3xia
     (make-record-constructor-descriptor
       g$10556$21371$f3xia
       '#f
       g$10558$21372$f3xia))
   (g$env?$21376$f3xia
     g$env?$24971$f3xia
     (record-predicate g$10556$21371$f3xia))
   (g$make-env$21377$f3xia
     g$make-env$24972$f3xia
     (record-constructor g$10557$21373$f3xia))
   (g$env-names$21378$f3xia
     g$env-names$24973$f3xia
     (record-accessor g$10556$21371$f3xia '0))
   (g$env-labels$21379$f3xia
     g$env-labels$24974$f3xia
     (record-accessor g$10556$21371$f3xia '1))
   (g$env-itc$21380$f3xia
     g$env-itc$24975$f3xia
     (record-accessor g$10556$21371$f3xia '2))
   (g$set-env-names!$21381$f3xia
     g$set-env-names!$24976$f3xia
     (record-mutator g$10556$21371$f3xia '0))
   (g$set-env-labels!$21382$f3xia
     g$set-env-labels!$24977$f3xia
     (record-mutator g$10556$21371$f3xia '1))
   (g$set-env-itc!$21383$f3xia
     g$set-env-itc!$24978$f3xia
     (record-mutator g$10556$21371$f3xia '2))
   (g$rp$21384$f3xia
     g$rp$24979$f3xia
     (make-record-printer
       'env
       (case-lambda
         ((g$x$24432$f3xia g$p$24433$f3xia g$wr$24434$f3xia)
          (display '"#<environment>" g$p$24433$f3xia)))))
   (g$10573$21385$f3xia
     g$10573$24980$f3xia
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$10576$f3xia
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$10575$21386$f3xia g$10575$24981$f3xia '#f)
   (g$10574$21387$f3xia
     g$10574$24982$f3xia
     (make-record-constructor-descriptor
       g$10573$21385$f3xia
       '#f
       g$10575$21386$f3xia))
   (g$interaction-env?$21390$f3xia
     g$interaction-env?$24983$f3xia
     (record-predicate g$10573$21385$f3xia))
   (g$make-interaction-env$21391$f3xia
     g$make-interaction-env$24984$f3xia
     (record-constructor g$10574$21387$f3xia))
   (g$interaction-env-rib$21392$f3xia
     g$interaction-env-rib$24985$f3xia
     (record-accessor g$10573$21385$f3xia '0))
   (g$interaction-env-r$21393$f3xia
     g$interaction-env-r$24986$f3xia
     (record-accessor g$10573$21385$f3xia '1))
   (g$interaction-env-locs$21394$f3xia
     g$interaction-env-locs$24987$f3xia
     (record-accessor g$10573$21385$f3xia '2))
   (g$set-interaction-env-rib!$21395$f3xia
     g$set-interaction-env-rib!$24988$f3xia
     (record-mutator g$10573$21385$f3xia '0))
   (g$set-interaction-env-r!$21396$f3xia
     g$set-interaction-env-r!$24989$f3xia
     (record-mutator g$10573$21385$f3xia '1))
   (g$set-interaction-env-locs!$21397$f3xia
     g$set-interaction-env-locs!$24990$f3xia
     (record-mutator g$10573$21385$f3xia '2))
   (g$rp$21398$f3xia
     g$rp$24991$f3xia
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$24435$f3xia g$p$24436$f3xia g$wr$24437$f3xia)
          (display '"#<environment>" g$p$24436$f3xia)))))
   (g$interaction-environment-symbols$21399$f3xia
     g$interaction-environment-symbols$24992$f3xia
     (case-lambda
       (()
        (g$environment-symbols$21403$f3xia
          (g$interaction-environment$21434$f3xia)))))
   (g$environment-bindings$21400$f3xia
     g$environment-bindings$24993$f3xia
     (case-lambda
       ((g$e$24438$f3xia)
        (g$vector->list$16010$f3xia
          (g$vector-map$16063$f3xia
            (case-lambda
              ((g$name$24439$f3xia g$label$24440$f3xia)
               (g$parse-binding$21401$f3xia
                 (cons
                   g$name$24439$f3xia
                   (g$imported-label->binding$20514$f3xia
                     g$label$24440$f3xia)))))
            (g$env-names$21378$f3xia g$e$24438$f3xia)
            (g$env-labels$21379$f3xia g$e$24438$f3xia))))))
   (g$parse-binding$21401$f3xia
     g$parse-binding$24994$f3xia
     (case-lambda
       ((g$b$24441$f3xia)
        (cons
          (car g$b$24441$f3xia)
          ((case-lambda
             ((g$t$24442$f3xia)
              (if (g$memv$15539$f3xia
                    g$t$24442$f3xia
                    '(core-prim global))
                'procedure
                (if (g$memv$15539$f3xia
                      g$t$24442$f3xia
                      '(core-macro macro global-macro))
                  'syntax
                  (if (eqv? g$t$24442$f3xia '$core-rtd)
                    'record
                    ((case-lambda
                       (()
                        (begin
                          '#f
                          (if (eq? (car g$b$24441$f3xia)
                                   (g$cadr$16014$f3xia g$b$24441$f3xia))
                            'syntax
                            'unknown))))))))))
           (g$cadr$16014$f3xia g$b$24441$f3xia))))))
   (g$environment?$21402$f3xia
     g$environment?$24995$f3xia
     (case-lambda
       ((g$x$24443$f3xia)
        ((case-lambda
           ((g$t$24444$f3xia)
            (if g$t$24444$f3xia
              g$t$24444$f3xia
              (begin
                '#f
                (g$interaction-env?$21390$f3xia g$x$24443$f3xia)))))
         (g$env?$21376$f3xia g$x$24443$f3xia)))))
   (g$environment-symbols$21403$f3xia
     g$environment-symbols$24996$f3xia
     (case-lambda
       ((g$x$24445$f3xia)
        (if (g$env?$21376$f3xia g$x$24445$f3xia)
          (g$vector->list$16010$f3xia
            (g$env-names$21378$f3xia g$x$24445$f3xia))
          (if (g$interaction-env?$21390$f3xia g$x$24445$f3xia)
            (g$map$15550$f3xia
              values
              (g$rib-sym*$20757$f3xia
                (g$interaction-env-rib$21392$f3xia g$x$24445$f3xia)))
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$12459$f3xia
                    'environment-symbols
                    '"not an environment"
                    g$x$24445$f3xia))))))))))
   (g$environment$21404$f3xia
     g$environment$24997$f3xia
     (case-lambda
       (g$imp*$24446$f3xia
        ((case-lambda
           ((g$itc$24447$f3xia)
            ((case-lambda
               ((g$imp-collector$24450$f3xia
                  g$imp-collector$24451$f3xia)
                ((case-lambda
                   ((g$swap$24452$f3xia)
                    (dynamic-wind
                      g$swap$24452$f3xia
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$21359$f3xia
                                g$imp*$24446$f3xia)))
                           (case-lambda
                             ((g$subst-names$24455$f3xia
                                g$subst-labels$24456$f3xia)
                              ((case-lambda
                                 ((g$subst-labels$24457$f3xia
                                    g$subst-names$24458$f3xia)
                                  (g$make-env$21377$f3xia
                                    g$subst-names$24458$f3xia
                                    g$subst-labels$24457$f3xia
                                    g$itc$24447$f3xia)))
                               g$subst-labels$24456$f3xia
                               g$subst-names$24455$f3xia))))))
                      g$swap$24452$f3xia)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$24459$f3xia)
                        (begin
                          (g$imp-collector$24450$f3xia
                            g$imp-collector$24451$f3xia)
                          (set! g$imp-collector$24451$f3xia
                            g$t$24459$f3xia))))
                     (g$imp-collector$24450$f3xia)))))))
             g$imp-collector$21364$f3xia
             g$itc$24447$f3xia)))
         (g$make-collector$21361$f3xia)))))
   (g$null-environment$21405$f3xia
     g$null-environment$24998$f3xia
     (case-lambda
       ((g$n$24460$f3xia)
        (begin
          (if (not (eqv? g$n$24460$f3xia '5))
            (g$assertion-violation$12459$f3xia
              'null-environment
              '"not 5"
              g$n$24460$f3xia)
            (void))
          (g$environment$21404$f3xia '(psyntax null-environment-5))))))
   (g$scheme-report-environment$21406$f3xia
     g$scheme-report-environment$24999$f3xia
     (case-lambda
       ((g$n$24461$f3xia)
        (begin
          (if (not (eqv? g$n$24461$f3xia '5))
            (g$assertion-violation$12459$f3xia
              'scheme-report-environment
              '"not 5"
              g$n$24461$f3xia)
            (void))
          (g$environment$21404$f3xia
            '(psyntax scheme-report-environment-5))))))
   (g$expand$21407$f3xia
     g$expand$25000$f3xia
     (case-lambda
       ((g$x$24462$f3xia g$env$24463$f3xia)
        (if (g$env?$21376$f3xia g$env$24463$f3xia)
          ((case-lambda
             ((g$rib$24464$f3xia)
              ((case-lambda
                 ((g$x$24465$f3xia
                    g$itc$24466$f3xia
                    g$rtc$24467$f3xia
                    g$vtc$24468$f3xia)
                  ((case-lambda
                     ((g$x$24469$f3xia)
                      (begin
                        (g$seal-rib!$20773$f3xia g$rib$24464$f3xia)
                        (values g$x$24469$f3xia (g$rtc$24467$f3xia)))))
                   ((case-lambda
                      ((g$top-level-context$24478$f3xia
                         g$inv-collector$24479$f3xia
                         g$vis-collector$24480$f3xia
                         g$imp-collector$24481$f3xia
                         g$top-level-context$24482$f3xia
                         g$inv-collector$24483$f3xia
                         g$vis-collector$24484$f3xia
                         g$imp-collector$24485$f3xia)
                       ((case-lambda
                          ((g$swap$24486$f3xia)
                           (dynamic-wind
                             g$swap$24486$f3xia
                             (case-lambda
                               (()
                                (g$chi-expr$21325$f3xia
                                  g$x$24465$f3xia
                                  '()
                                  '())))
                             g$swap$24486$f3xia)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$24487$f3xia)
                                 (begin
                                   (g$top-level-context$24478$f3xia
                                     g$top-level-context$24482$f3xia)
                                   (set! g$top-level-context$24482$f3xia
                                     g$t$24487$f3xia))))
                              (g$top-level-context$24478$f3xia))
                             ((case-lambda
                                ((g$t$24488$f3xia)
                                 (begin
                                   (g$inv-collector$24479$f3xia
                                     g$inv-collector$24483$f3xia)
                                   (set! g$inv-collector$24483$f3xia
                                     g$t$24488$f3xia))))
                              (g$inv-collector$24479$f3xia))
                             ((case-lambda
                                ((g$t$24489$f3xia)
                                 (begin
                                   (g$vis-collector$24480$f3xia
                                     g$vis-collector$24484$f3xia)
                                   (set! g$vis-collector$24484$f3xia
                                     g$t$24489$f3xia))))
                              (g$vis-collector$24480$f3xia))
                             ((case-lambda
                                ((g$t$24490$f3xia)
                                 (begin
                                   (g$imp-collector$24481$f3xia
                                     g$imp-collector$24485$f3xia)
                                   (set! g$imp-collector$24485$f3xia
                                     g$t$24490$f3xia))))
                              (g$imp-collector$24481$f3xia))))))))
                    g$top-level-context$21435$f3xia
                    g$inv-collector$21362$f3xia
                    g$vis-collector$21363$f3xia
                    g$imp-collector$21364$f3xia
                    '#f
                    g$rtc$24467$f3xia
                    g$vtc$24468$f3xia
                    g$itc$24466$f3xia))))
               (g$make-stx$20782$f3xia
                 g$x$24462$f3xia
                 g$top-mark*$20742$f3xia
                 (list g$rib$24464$f3xia)
                 '())
               (g$env-itc$21380$f3xia g$env$24463$f3xia)
               (g$make-collector$21361$f3xia)
               (g$make-collector$21361$f3xia))))
           (g$make-top-rib$21360$f3xia
             (g$env-names$21378$f3xia g$env$24463$f3xia)
             (g$env-labels$21379$f3xia g$env$24463$f3xia)))
          (if (g$interaction-env?$21390$f3xia g$env$24463$f3xia)
            ((case-lambda
               ((g$rib$24491$f3xia g$r$24492$f3xia g$rtc$24493$f3xia)
                ((case-lambda
                   ((g$x$24494$f3xia)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$24505$f3xia
                               g$inv-collector$24506$f3xia
                               g$vis-collector$24507$f3xia
                               g$imp-collector$24508$f3xia
                               g$top-level-context$24509$f3xia
                               g$inv-collector$24510$f3xia
                               g$vis-collector$24511$f3xia
                               g$imp-collector$24512$f3xia)
                             ((case-lambda
                                ((g$swap$24513$f3xia)
                                 (dynamic-wind
                                   g$swap$24513$f3xia
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$21366$f3xia
                                        g$x$24494$f3xia
                                        g$rib$24491$f3xia
                                        g$r$24492$f3xia)))
                                   g$swap$24513$f3xia)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$24514$f3xia)
                                       (begin
                                         (g$top-level-context$24505$f3xia
                                           g$top-level-context$24509$f3xia)
                                         (set! g$top-level-context$24509$f3xia
                                           g$t$24514$f3xia))))
                                    (g$top-level-context$24505$f3xia))
                                   ((case-lambda
                                      ((g$t$24515$f3xia)
                                       (begin
                                         (g$inv-collector$24506$f3xia
                                           g$inv-collector$24510$f3xia)
                                         (set! g$inv-collector$24510$f3xia
                                           g$t$24515$f3xia))))
                                    (g$inv-collector$24506$f3xia))
                                   ((case-lambda
                                      ((g$t$24516$f3xia)
                                       (begin
                                         (g$vis-collector$24507$f3xia
                                           g$vis-collector$24511$f3xia)
                                         (set! g$vis-collector$24511$f3xia
                                           g$t$24516$f3xia))))
                                    (g$vis-collector$24507$f3xia))
                                   ((case-lambda
                                      ((g$t$24517$f3xia)
                                       (begin
                                         (g$imp-collector$24508$f3xia
                                           g$imp-collector$24512$f3xia)
                                         (set! g$imp-collector$24512$f3xia
                                           g$t$24517$f3xia))))
                                    (g$imp-collector$24508$f3xia))))))))
                          g$top-level-context$21435$f3xia
                          g$inv-collector$21362$f3xia
                          g$vis-collector$21363$f3xia
                          g$imp-collector$21364$f3xia
                          g$env$24463$f3xia
                          g$rtc$24493$f3xia
                          (g$make-collector$21361$f3xia)
                          (g$make-collector$21361$f3xia))))
                      (case-lambda
                        ((g$e$24518$f3xia g$r^$24519$f3xia)
                         ((case-lambda
                            ((g$r^$24520$f3xia g$e$24521$f3xia)
                             (begin
                               (g$set-interaction-env-r!$21396$f3xia
                                 g$env$24463$f3xia
                                 g$r^$24520$f3xia)
                               (values
                                 g$e$24521$f3xia
                                 (g$rtc$24493$f3xia)))))
                          g$r^$24519$f3xia
                          g$e$24518$f3xia))))))
                 (g$make-stx$20782$f3xia
                   g$x$24462$f3xia
                   g$top-mark*$20742$f3xia
                   (list g$rib$24491$f3xia)
                   '()))))
             (g$interaction-env-rib$21392$f3xia g$env$24463$f3xia)
             (g$interaction-env-r$21393$f3xia g$env$24463$f3xia)
             (g$make-collector$21361$f3xia))
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$12459$f3xia
                    'expand
                    '"not an environment"
                    g$env$24463$f3xia))))))))))
   (g$eval$21408$f3xia
     g$eval$25001$f3xia
     (case-lambda
       ((g$x$24522$f3xia g$env$24523$f3xia)
        (begin
          (if (not (g$environment?$21402$f3xia g$env$24523$f3xia))
            (g$error$12460$f3xia
              'eval
              '"not an environment"
              g$env$24523$f3xia)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$21407$f3xia
                 g$x$24522$f3xia
                 g$env$24523$f3xia)))
            (case-lambda
              ((g$x$24526$f3xia g$invoke-req*$24527$f3xia)
               ((case-lambda
                  ((g$invoke-req*$24528$f3xia g$x$24529$f3xia)
                   (begin
                     (g$for-each$15551$f3xia
                       g$invoke-library$20515$f3xia
                       g$invoke-req*$24528$f3xia)
                     (eval-core
                       (g$expanded->core$20247$f3xia
                         g$x$24529$f3xia)))))
                g$invoke-req*$24527$f3xia
                g$x$24526$f3xia))))))))
   (g$expand->core$21409$f3xia
     g$expand->core$25002$f3xia
     (case-lambda
       ((g$x$24530$f3xia g$env$24531$f3xia)
        (begin
          (if (not (g$environment?$21402$f3xia g$env$24531$f3xia))
            (g$error$12460$f3xia
              'eval
              '"not an environment"
              g$env$24531$f3xia)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$21407$f3xia
                 g$x$24530$f3xia
                 g$env$24531$f3xia)))
            (case-lambda
              ((g$x$24534$f3xia g$invoke-req*$24535$f3xia)
               ((case-lambda
                  ((g$invoke-req*$24536$f3xia g$x$24537$f3xia)
                   (begin
                     (g$for-each$15551$f3xia
                       g$invoke-library$20515$f3xia
                       g$invoke-req*$24536$f3xia)
                     (g$expanded->core$20247$f3xia g$x$24537$f3xia))))
                g$invoke-req*$24535$f3xia
                g$x$24534$f3xia))))))))
   (g$library-expander$21410$f3xia
     g$library-expander$25003$f3xia
     (case-lambda
       ((g$x$24538$f3xia
          g$filename$24539$f3xia
          g$verify-name$24540$f3xia)
        (letrec* ((g$build-visit-code$24541$f3xia
                    (case-lambda
                      ((g$macro*$24584$f3xia)
                       (if (null? g$macro*$24584$f3xia)
                         (g$build-void$20735$f3xia)
                         (g$build-sequence$20734$f3xia
                           '#f
                           (g$map$15550$f3xia
                             (case-lambda
                               ((g$x$24585$f3xia)
                                ((case-lambda
                                   ((g$loc$24586$f3xia
                                      g$src$24587$f3xia)
                                    (list
                                      'set!
                                      g$loc$24586$f3xia
                                      g$src$24587$f3xia)))
                                 (car g$x$24585$f3xia)
                                 (g$cddr$16016$f3xia g$x$24585$f3xia))))
                             g$macro*$24584$f3xia))))))
                  (g$visit!$24542$f3xia
                    (case-lambda
                      ((g$macro*$24580$f3xia)
                       (g$for-each$15551$f3xia
                         (case-lambda
                           ((g$x$24581$f3xia)
                            ((case-lambda
                               ((g$loc$24582$f3xia g$proc$24583$f3xia)
                                (set-symbol-value!
                                  g$loc$24582$f3xia
                                  g$proc$24583$f3xia)))
                             (car g$x$24581$f3xia)
                             (g$cadr$16014$f3xia g$x$24581$f3xia))))
                         g$macro*$24580$f3xia)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$21368$f3xia
                 g$x$24538$f3xia
                 g$verify-name$24540$f3xia)))
            (case-lambda
              ((g$name$24552$f3xia
                 g$ver$24553$f3xia
                 g$imp*$24554$f3xia
                 g$inv*$24555$f3xia
                 g$vis*$24556$f3xia
                 g$invoke-code$24557$f3xia
                 g$macro*$24558$f3xia
                 g$export-subst$24559$f3xia
                 g$export-env$24560$f3xia)
               ((case-lambda
                  ((g$export-env$24561$f3xia
                     g$export-subst$24562$f3xia
                     g$macro*$24563$f3xia
                     g$invoke-code$24564$f3xia
                     g$vis*$24565$f3xia
                     g$inv*$24566$f3xia
                     g$imp*$24567$f3xia
                     g$ver$24568$f3xia
                     g$name$24569$f3xia)
                   ((case-lambda
                      ((g$id$24570$f3xia
                         g$name$24571$f3xia
                         g$ver$24572$f3xia
                         g$imp*$24573$f3xia
                         g$vis*$24574$f3xia
                         g$inv*$24575$f3xia
                         g$visit-proc$24576$f3xia
                         g$invoke-proc$24577$f3xia
                         g$visit-code$24578$f3xia
                         g$invoke-code$24579$f3xia)
                       (begin
                         (g$install-library$20513$f3xia
                           g$id$24570$f3xia
                           g$name$24571$f3xia
                           g$ver$24572$f3xia
                           g$imp*$24573$f3xia
                           g$vis*$24574$f3xia
                           g$inv*$24575$f3xia
                           g$export-subst$24562$f3xia
                           g$export-env$24561$f3xia
                           g$visit-proc$24576$f3xia
                           g$invoke-proc$24577$f3xia
                           g$visit-code$24578$f3xia
                           g$invoke-code$24579$f3xia
                           '#t
                           g$filename$24539$f3xia)
                         (values
                           g$id$24570$f3xia
                           g$name$24571$f3xia
                           g$ver$24572$f3xia
                           g$imp*$24573$f3xia
                           g$vis*$24574$f3xia
                           g$inv*$24575$f3xia
                           g$invoke-code$24579$f3xia
                           g$visit-code$24578$f3xia
                           g$export-subst$24562$f3xia
                           g$export-env$24561$f3xia))))
                    (gensym)
                    g$name$24569$f3xia
                    g$ver$24568$f3xia
                    (g$map$15550$f3xia
                      g$library-spec$20519$f3xia
                      g$imp*$24567$f3xia)
                    (g$map$15550$f3xia
                      g$library-spec$20519$f3xia
                      g$vis*$24565$f3xia)
                    (g$map$15550$f3xia
                      g$library-spec$20519$f3xia
                      g$inv*$24566$f3xia)
                    (case-lambda
                      (() (g$visit!$24542$f3xia g$macro*$24563$f3xia)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$20247$f3xia
                           g$invoke-code$24564$f3xia))))
                    (g$build-visit-code$24541$f3xia
                      g$macro*$24563$f3xia)
                    g$invoke-code$24564$f3xia)))
                g$export-env$24560$f3xia
                g$export-subst$24559$f3xia
                g$macro*$24558$f3xia
                g$invoke-code$24557$f3xia
                g$vis*$24556$f3xia
                g$inv*$24555$f3xia
                g$imp*$24554$f3xia
                g$ver$24553$f3xia
                g$name$24552$f3xia))))))
       ((g$x$24588$f3xia g$filename$24589$f3xia)
        (g$library-expander$21410$f3xia
          g$x$24588$f3xia
          g$filename$24589$f3xia
          (case-lambda ((g$x$24590$f3xia) (values)))))
       ((g$x$24591$f3xia)
        (g$library-expander$21410$f3xia
          g$x$24591$f3xia
          '#f
          (case-lambda ((g$x$24592$f3xia) (values)))))))
   (g$boot-library-expand$21411$f3xia
     g$boot-library-expand$25004$f3xia
     (case-lambda
       ((g$x$24593$f3xia)
        (call-with-values
          (case-lambda
            (() (g$library-expander$21410$f3xia g$x$24593$f3xia)))
          (case-lambda
            ((g$id$24604$f3xia
               g$name$24605$f3xia
               g$ver$24606$f3xia
               g$imp*$24607$f3xia
               g$vis*$24608$f3xia
               g$inv*$24609$f3xia
               g$invoke-code$24610$f3xia
               g$visit-code$24611$f3xia
               g$export-subst$24612$f3xia
               g$export-env$24613$f3xia)
             ((case-lambda
                ((g$export-env$24614$f3xia
                   g$export-subst$24615$f3xia
                   g$visit-code$24616$f3xia
                   g$invoke-code$24617$f3xia
                   g$inv*$24618$f3xia
                   g$vis*$24619$f3xia
                   g$imp*$24620$f3xia
                   g$ver$24621$f3xia
                   g$name$24622$f3xia
                   g$id$24623$f3xia)
                 (values
                   g$name$24622$f3xia
                   g$invoke-code$24617$f3xia
                   g$export-subst$24615$f3xia
                   g$export-env$24614$f3xia)))
              g$export-env$24613$f3xia
              g$export-subst$24612$f3xia
              g$visit-code$24611$f3xia
              g$invoke-code$24610$f3xia
              g$inv*$24609$f3xia
              g$vis*$24608$f3xia
              g$imp*$24607$f3xia
              g$ver$24606$f3xia
              g$name$24605$f3xia
              g$id$24604$f3xia)))))))
   (g$rev-map-append$21412$f3xia
     g$rev-map-append$25005$f3xia
     (case-lambda
       ((g$f$24624$f3xia g$ls$24625$f3xia g$ac$24626$f3xia)
        (if (null? g$ls$24625$f3xia)
          g$ac$24626$f3xia
          ((case-lambda
             (()
              (begin
                '#f
                (g$rev-map-append$21412$f3xia
                  g$f$24624$f3xia
                  (cdr g$ls$24625$f3xia)
                  (cons
                    (g$f$24624$f3xia (car g$ls$24625$f3xia))
                    g$ac$24626$f3xia))))))))))
   (g$build-exports$21413$f3xia
     g$build-exports$25006$f3xia
     (case-lambda
       ((g$lex*+loc*$24627$f3xia g$init*$24628$f3xia)
        (g$build-sequence$20734$f3xia
          '#f
          (cons
            (g$build-void$20735$f3xia)
            (g$rev-map-append$21412$f3xia
              (case-lambda
                ((g$x$24629$f3xia)
                 (list
                   'set!
                   (cdr g$x$24629$f3xia)
                   (car g$x$24629$f3xia))))
              g$lex*+loc*$24627$f3xia
              g$init*$24628$f3xia))))))
   (g$make-export-subst$21414$f3xia
     g$make-export-subst$25007$f3xia
     (case-lambda
       ((g$name*$24630$f3xia g$id*$24631$f3xia)
        (g$map$15550$f3xia
          (case-lambda
            ((g$name$24632$f3xia g$id$24633$f3xia)
             ((case-lambda
                ((g$label$24634$f3xia)
                 (begin
                   (if (not g$label$24634$f3xia)
                     (g$syntax-violation$21427$f3xia
                       '#f
                       '"cannot export unbound identifier"
                       g$id$24633$f3xia)
                     (void))
                   (cons g$name$24632$f3xia g$label$24634$f3xia))))
              (g$id->label$20822$f3xia g$id$24633$f3xia))))
          g$name*$24630$f3xia
          g$id*$24631$f3xia))))
   (g$make-export-env/macros$21415$f3xia
     g$make-export-env/macros$25008$f3xia
     (case-lambda
       ((g$lex*$24635$f3xia g$loc*$24636$f3xia g$r$24637$f3xia)
        (letrec* ((g$lookup$24638$f3xia
                    (case-lambda
                      ((g$x$24654$f3xia)
                       ((letrec ((g$f$24655$f3xia
                                   (case-lambda
                                     ((g$x$24656$f3xia
                                        g$lex*$24657$f3xia
                                        g$loc*$24658$f3xia)
                                      (if (pair? g$lex*$24657$f3xia)
                                        (if (eq? g$x$24656$f3xia
                                                 (car g$lex*$24657$f3xia))
                                          (car g$loc*$24658$f3xia)
                                          (g$f$24655$f3xia
                                            g$x$24656$f3xia
                                            (cdr g$lex*$24657$f3xia)
                                            (cdr g$loc*$24658$f3xia)))
                                        ((case-lambda
                                           (()
                                            (begin
                                              '#f
                                              (g$assertion-violation$12459$f3xia
                                                'lookup-make-export
                                                '"BUG"))))))))))
                          g$f$24655$f3xia)
                        g$x$24654$f3xia
                        g$lex*$24635$f3xia
                        g$loc*$24636$f3xia)))))
          ((letrec ((g$f$24639$f3xia
                      (case-lambda
                        ((g$r$24640$f3xia
                           g$env$24641$f3xia
                           g$global*$24642$f3xia
                           g$macro*$24643$f3xia)
                         (if (null? g$r$24640$f3xia)
                           (values
                             g$env$24641$f3xia
                             g$global*$24642$f3xia
                             g$macro*$24643$f3xia)
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$x$24644$f3xia)
                                     ((case-lambda
                                        ((g$label$24645$f3xia
                                           g$b$24646$f3xia)
                                         ((case-lambda
                                            ((g$t$24647$f3xia)
                                             (if (eqv?
                                                   g$t$24647$f3xia
                                                   'lexical)
                                               ((case-lambda
                                                  ((g$v$24648$f3xia)
                                                   ((case-lambda
                                                      ((g$loc$24649$f3xia
                                                         g$type$24650$f3xia)
                                                       (g$f$24639$f3xia
                                                         (cdr g$r$24640$f3xia)
                                                         (cons
                                                           (g$cons*$15552$f3xia
                                                             g$label$24645$f3xia
                                                             g$type$24650$f3xia
                                                             g$loc$24649$f3xia)
                                                           g$env$24641$f3xia)
                                                         (cons
                                                           (cons
                                                             (g$lexical-var$21251$f3xia
                                                               g$v$24648$f3xia)
                                                             g$loc$24649$f3xia)
                                                           g$global*$24642$f3xia)
                                                         g$macro*$24643$f3xia)))
                                                    (g$lookup$24638$f3xia
                                                      (g$lexical-var$21251$f3xia
                                                        g$v$24648$f3xia))
                                                    (if (g$lexical-mutable?$21252$f3xia
                                                          g$v$24648$f3xia)
                                                      'mutable
                                                      'global))))
                                                (g$binding-value$20827$f3xia
                                                  g$b$24646$f3xia))
                                               (if (eqv?
                                                     g$t$24647$f3xia
                                                     'local-macro)
                                                 ((case-lambda
                                                    ((g$loc$24651$f3xia)
                                                     (g$f$24639$f3xia
                                                       (cdr g$r$24640$f3xia)
                                                       (cons
                                                         (g$cons*$15552$f3xia
                                                           g$label$24645$f3xia
                                                           'global-macro
                                                           g$loc$24651$f3xia)
                                                         g$env$24641$f3xia)
                                                       g$global*$24642$f3xia
                                                       (cons
                                                         (cons
                                                           g$loc$24651$f3xia
                                                           (g$binding-value$20827$f3xia
                                                             g$b$24646$f3xia))
                                                         g$macro*$24643$f3xia))))
                                                  (gensym))
                                                 (if (eqv?
                                                       g$t$24647$f3xia
                                                       'local-macro!)
                                                   ((case-lambda
                                                      ((g$loc$24652$f3xia)
                                                       (g$f$24639$f3xia
                                                         (cdr g$r$24640$f3xia)
                                                         (cons
                                                           (g$cons*$15552$f3xia
                                                             g$label$24645$f3xia
                                                             'global-macro!
                                                             g$loc$24652$f3xia)
                                                           g$env$24641$f3xia)
                                                         g$global*$24642$f3xia
                                                         (cons
                                                           (cons
                                                             g$loc$24652$f3xia
                                                             (g$binding-value$20827$f3xia
                                                               g$b$24646$f3xia))
                                                           g$macro*$24643$f3xia))))
                                                    (gensym))
                                                   (if (eqv?
                                                         g$t$24647$f3xia
                                                         'local-ctv)
                                                     ((case-lambda
                                                        ((g$loc$24653$f3xia)
                                                         (g$f$24639$f3xia
                                                           (cdr g$r$24640$f3xia)
                                                           (cons
                                                             (g$cons*$15552$f3xia
                                                               g$label$24645$f3xia
                                                               'global-ctv
                                                               g$loc$24653$f3xia)
                                                             g$env$24641$f3xia)
                                                           g$global*$24642$f3xia
                                                           (cons
                                                             (cons
                                                               g$loc$24653$f3xia
                                                               (g$binding-value$20827$f3xia
                                                                 g$b$24646$f3xia))
                                                             g$macro*$24643$f3xia))))
                                                      (gensym))
                                                     (if (g$memv$15539$f3xia
                                                           g$t$24647$f3xia
                                                           '($rtd
                                                              $module))
                                                       (g$f$24639$f3xia
                                                         (cdr g$r$24640$f3xia)
                                                         (cons
                                                           g$x$24644$f3xia
                                                           g$env$24641$f3xia)
                                                         g$global*$24642$f3xia
                                                         g$macro*$24643$f3xia)
                                                       ((case-lambda
                                                          (()
                                                           (begin
                                                             '#f
                                                             (g$assertion-violation$12459$f3xia
                                                               'expander
                                                               '"BUG: do not know how to export"
                                                               (g$binding-type$20826$f3xia
                                                                 g$b$24646$f3xia)
                                                               (g$binding-value$20827$f3xia
                                                                 g$b$24646$f3xia)))))))))))))
                                          (g$binding-type$20826$f3xia
                                            g$b$24646$f3xia))))
                                      (car g$x$24644$f3xia)
                                      (cdr g$x$24644$f3xia))))
                                  (car g$r$24640$f3xia)))))))))))
             g$f$24639$f3xia)
           g$r$24637$f3xia
           '()
           '()
           '())))))
   (g$generate-temporaries$21416$f3xia
     g$generate-temporaries$25009$f3xia
     (case-lambda
       ((g$ls$24659$f3xia)
        ((case-lambda
           ((g$t$24660$f3xia)
            ((case-lambda
               ((g$ls/false$24661$f3xia)
                (if g$ls/false$24661$f3xia
                  (apply
                    (case-lambda
                      ((g$ls$24662$f3xia)
                       (g$map$15550$f3xia
                         (case-lambda
                           ((g$x$24663$f3xia)
                            (g$make-stx$20782$f3xia
                              ((case-lambda
                                 ((g$x$24664$f3xia)
                                  (if ((case-lambda
                                         ((g$t$24665$f3xia)
                                          (if g$t$24665$f3xia
                                            g$t$24665$f3xia
                                            (begin
                                              '#f
                                              (g$string?$15972$f3xia
                                                g$x$24664$f3xia)))))
                                       (g$symbol?$15976$f3xia
                                         g$x$24664$f3xia))
                                    (gensym g$x$24664$f3xia)
                                    ((case-lambda
                                       (() (begin '#f (gensym 't))))))))
                               (g$syntax->datum$21430$f3xia
                                 g$x$24663$f3xia))
                              g$top-mark*$20742$f3xia
                              '()
                              '())))
                         g$ls$24662$f3xia)))
                    g$ls/false$24661$f3xia)
                  ((case-lambda
                     ((g$t$24666$f3xia)
                      ((case-lambda
                         ((g$ls/false$24667$f3xia)
                          (if g$ls/false$24667$f3xia
                            (apply
                              (case-lambda
                                (()
                                 (g$assertion-violation$12459$f3xia
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$24667$f3xia)
                            (g$syntax-violation$21427$f3xia
                              '#f
                              '"invalid syntax"
                              g$t$24666$f3xia))))
                       (g$syntax-dispatch$21307$f3xia
                         g$t$24666$f3xia
                         '_))))
                   g$t$24660$f3xia))))
             (g$syntax-dispatch$21307$f3xia
               g$t$24660$f3xia
               'each-any))))
         g$ls$24659$f3xia))))
   (g$free-identifier=?$21417$f3xia
     g$free-identifier=?$25010$f3xia
     (case-lambda
       ((g$x$24668$f3xia g$y$24669$f3xia)
        (if (g$id?$20809$f3xia g$x$24668$f3xia)
          (if (g$id?$20809$f3xia g$y$24669$f3xia)
            (g$free-id=?$20813$f3xia g$x$24668$f3xia g$y$24669$f3xia)
            (g$assertion-violation$12459$f3xia
              'free-identifier=?
              '"not an identifier"
              g$y$24669$f3xia))
          (g$assertion-violation$12459$f3xia
            'free-identifier=?
            '"not an identifier"
            g$x$24668$f3xia)))))
   (g$bound-identifier=?$21418$f3xia
     g$bound-identifier=?$25011$f3xia
     (case-lambda
       ((g$x$24670$f3xia g$y$24671$f3xia)
        (if (g$id?$20809$f3xia g$x$24670$f3xia)
          (if (g$id?$20809$f3xia g$y$24671$f3xia)
            (g$bound-id=?$20812$f3xia g$x$24670$f3xia g$y$24671$f3xia)
            (g$assertion-violation$12459$f3xia
              'bound-identifier=?
              '"not an identifier"
              g$y$24671$f3xia))
          (g$assertion-violation$12459$f3xia
            'bound-identifier=?
            '"not an identifier"
            g$x$24670$f3xia)))))
   (g$make-source-condition$21419$f3xia
     g$make-source-condition$25012$f3xia
     (case-lambda
       ((g$x$24672$f3xia)
        (letrec* ((g$13549$24673$f3xia
                    (make-record-type-descriptor
                      '&source-information
                      g$&condition-rtd$12195$f3xia
                      'g$13552$f3xia
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$13551$24674$f3xia '#f)
                  (g$13550$24675$f3xia
                    (make-record-constructor-descriptor
                      g$13549$24673$f3xia
                      g$&condition-rcd$12196$f3xia
                      g$13551$24674$f3xia))
                  (g$13548$24678$f3xia
                    (record-predicate g$13549$24673$f3xia))
                  (g$make-source-condition$24679$f3xia
                    (record-constructor g$13550$24675$f3xia))
                  (g$13546$24680$f3xia
                    (record-accessor g$13549$24673$f3xia '0))
                  (g$13547$24681$f3xia
                    (record-accessor g$13549$24673$f3xia '1))
                  (g$source-condition?$24682$f3xia
                    (condition-predicate g$13549$24673$f3xia))
                  (g$source-filename$24683$f3xia
                    (condition-accessor
                      g$13549$24673$f3xia
                      g$13546$24680$f3xia))
                  (g$source-character$24684$f3xia
                    (condition-accessor
                      g$13549$24673$f3xia
                      g$13547$24681$f3xia)))
          (if (pair? g$x$24672$f3xia)
            (g$make-source-condition$24679$f3xia
              (car g$x$24672$f3xia)
              (cdr g$x$24672$f3xia))
            (condition))))))
   (g$extract-position-condition$21420$f3xia
     g$extract-position-condition$25013$f3xia
     (case-lambda
       ((g$x$24685$f3xia)
        (g$make-source-condition$21419$f3xia
          (g$expression-position$21421$f3xia g$x$24685$f3xia)))))
   (g$expression-position$21421$f3xia
     g$expression-position$25014$f3xia
     (case-lambda
       ((g$x$24686$f3xia)
        (if (g$stx?$20781$f3xia g$x$24686$f3xia)
          (begin
            '#f
            ((case-lambda
               ((g$x$24687$f3xia)
                (if (annotation? g$x$24687$f3xia)
                  (begin '#f (annotation-source g$x$24687$f3xia))
                  '#f)))
             (g$stx-expr$20783$f3xia g$x$24686$f3xia)))
          '#f))))
   (g$syntax-annotation$21422$f3xia
     g$syntax-annotation$25015$f3xia
     (case-lambda
       ((g$x$24688$f3xia)
        (if (g$stx?$20781$f3xia g$x$24688$f3xia)
          (g$stx-expr$20783$f3xia g$x$24688$f3xia)
          g$x$24688$f3xia))))
   (g$assertion-error$21423$f3xia
     g$assertion-error$25016$f3xia
     (case-lambda
       ((g$expr$24689$f3xia g$pos$24690$f3xia)
        (raise
          (condition
            (g$make-assertion-violation$12243$f3xia)
            (g$make-who-condition$12261$f3xia 'assert)
            (g$make-message-condition$12201$f3xia '"assertion failed")
            (g$make-irritants-condition$12251$f3xia
              (list g$expr$24689$f3xia))
            (g$make-source-condition$21419$f3xia g$pos$24690$f3xia))))))
   (g$syntax-error$21424$f3xia
     g$syntax-error$25017$f3xia
     (case-lambda
       ((g$x$24691$f3xia . g$args$24692$f3xia)
        (begin
          (if (not (g$for-all$15548$f3xia
                     g$string?$15972$f3xia
                     g$args$24692$f3xia))
            (g$assertion-violation$12459$f3xia
              'syntax-error
              '"invalid argument"
              g$args$24692$f3xia)
            (void))
          (raise
            (condition
              (g$make-message-condition$12201$f3xia
                (if (null? g$args$24692$f3xia)
                  '"invalid syntax"
                  (apply
                    g$string-append$15994$f3xia
                    g$args$24692$f3xia)))
              (g$make-syntax-violation$12315$f3xia
                (g$syntax->datum$21430$f3xia g$x$24691$f3xia)
                '#f)
              (g$extract-position-condition$21420$f3xia g$x$24691$f3xia)
              (g$extract-trace$21425$f3xia g$x$24691$f3xia)))))))
   (g$extract-trace$21425$f3xia
     g$extract-trace$25018$f3xia
     (case-lambda
       ((g$x$24693$f3xia)
        (letrec* ((g$13575$24694$f3xia
                    (make-record-type-descriptor
                      '&trace
                      g$&condition-rtd$12195$f3xia
                      'g$13578$f3xia
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$13577$24695$f3xia '#f)
                  (g$13576$24696$f3xia
                    (make-record-constructor-descriptor
                      g$13575$24694$f3xia
                      g$&condition-rcd$12196$f3xia
                      g$13577$24695$f3xia))
                  (g$13574$24699$f3xia
                    (record-predicate g$13575$24694$f3xia))
                  (g$make-trace$24700$f3xia
                    (record-constructor g$13576$24696$f3xia))
                  (g$13573$24701$f3xia
                    (record-accessor g$13575$24694$f3xia '0))
                  (g$trace?$24702$f3xia
                    (condition-predicate g$13575$24694$f3xia))
                  (g$trace-form$24703$f3xia
                    (condition-accessor
                      g$13575$24694$f3xia
                      g$13573$24701$f3xia)))
          ((letrec ((g$f$24704$f3xia
                      (case-lambda
                        ((g$x$24705$f3xia)
                         (if (g$stx?$20781$f3xia g$x$24705$f3xia)
                           (apply
                             condition
                             (g$make-trace$24700$f3xia g$x$24705$f3xia)
                             (g$map$15550$f3xia
                               g$f$24704$f3xia
                               (g$stx-ae*$20786$f3xia g$x$24705$f3xia)))
                           (if (annotation? g$x$24705$f3xia)
                             (g$make-trace$24700$f3xia
                               (g$make-stx$20782$f3xia
                                 g$x$24705$f3xia
                                 '()
                                 '()
                                 '()))
                             ((case-lambda
                                (() (begin '#f (condition)))))))))))
             g$f$24704$f3xia)
           g$x$24693$f3xia)))))
   (g$syntax-violation*$21426$f3xia
     g$syntax-violation*$25019$f3xia
     (case-lambda
       ((g$who$24706$f3xia
          g$msg$24707$f3xia
          g$form$24708$f3xia
          g$condition-object$24709$f3xia)
        (begin
          (if (not (g$string?$15972$f3xia g$msg$24707$f3xia))
            (g$assertion-violation$12459$f3xia
              'syntax-violation
              '"message is not a string"
              g$msg$24707$f3xia)
            (void))
          ((case-lambda
             ((g$who$24710$f3xia)
              (raise
                (condition
                  (if g$who$24710$f3xia
                    (g$make-who-condition$12261$f3xia g$who$24710$f3xia)
                    (condition))
                  (g$make-message-condition$12201$f3xia
                    g$msg$24707$f3xia)
                  g$condition-object$24709$f3xia
                  (g$extract-position-condition$21420$f3xia
                    g$form$24708$f3xia)
                  (g$extract-trace$21425$f3xia g$form$24708$f3xia)))))
           (if ((case-lambda
                  ((g$t$24711$f3xia)
                   (if g$t$24711$f3xia
                     g$t$24711$f3xia
                     (begin
                       '#f
                       (g$symbol?$15976$f3xia g$who$24706$f3xia)))))
                (g$string?$15972$f3xia g$who$24706$f3xia))
             g$who$24706$f3xia
             (if (not g$who$24706$f3xia)
               ((case-lambda
                  ((g$t$24712$f3xia)
                   ((case-lambda
                      ((g$ls/false$24713$f3xia)
                       (if (if g$ls/false$24713$f3xia
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$24714$f3xia)
                                    (g$id?$20809$f3xia
                                      g$id$24714$f3xia)))
                                 g$ls/false$24713$f3xia))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$24715$f3xia)
                              (g$syntax->datum$21430$f3xia
                                g$id$24715$f3xia)))
                           g$ls/false$24713$f3xia)
                         ((case-lambda
                            ((g$t$24716$f3xia)
                             ((case-lambda
                                ((g$ls/false$24717$f3xia)
                                 (if (if g$ls/false$24717$f3xia
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$24718$f3xia
                                                g$rest$24719$f3xia)
                                              (g$id?$20809$f3xia
                                                g$id$24718$f3xia)))
                                           g$ls/false$24717$f3xia))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$24720$f3xia
                                          g$rest$24721$f3xia)
                                        (g$syntax->datum$21430$f3xia
                                          g$id$24720$f3xia)))
                                     g$ls/false$24717$f3xia)
                                   ((case-lambda
                                      ((g$t$24722$f3xia)
                                       ((case-lambda
                                          ((g$ls/false$24723$f3xia)
                                           (if g$ls/false$24723$f3xia
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$24723$f3xia)
                                             (g$syntax-violation$21427$f3xia
                                               '#f
                                               '"invalid syntax"
                                               g$t$24722$f3xia))))
                                        (g$syntax-dispatch$21307$f3xia
                                          g$t$24722$f3xia
                                          '_))))
                                    g$t$24716$f3xia))))
                              (g$syntax-dispatch$21307$f3xia
                                g$t$24716$f3xia
                                '(any . any)))))
                          g$t$24712$f3xia))))
                    (g$syntax-dispatch$21307$f3xia
                      g$t$24712$f3xia
                      'any))))
                g$form$24708$f3xia)
               ((case-lambda
                  (()
                   (begin
                     '#f
                     (g$assertion-violation$12459$f3xia
                       'syntax-violation
                       '"invalid who argument"
                       g$who$24706$f3xia))))))))))))
   (g$syntax-violation$21427$f3xia
     g$syntax-violation$25020$f3xia
     (case-lambda
       ((g$who$24724$f3xia g$msg$24725$f3xia g$form$24726$f3xia)
        (g$syntax-violation$21427$f3xia
          g$who$24724$f3xia
          g$msg$24725$f3xia
          g$form$24726$f3xia
          '#f))
       ((g$who$24727$f3xia
          g$msg$24728$f3xia
          g$form$24729$f3xia
          g$subform$24730$f3xia)
        (g$syntax-violation*$21426$f3xia
          g$who$24727$f3xia
          g$msg$24728$f3xia
          g$form$24729$f3xia
          (g$make-syntax-violation$12315$f3xia
            (g$syntax->datum$21430$f3xia g$form$24729$f3xia)
            (g$syntax->datum$21430$f3xia g$subform$24730$f3xia))))))
   (g$identifier?$21428$f3xia
     g$identifier?$25021$f3xia
     (case-lambda
       ((g$x$24731$f3xia) (g$id?$20809$f3xia g$x$24731$f3xia))))
   (g$datum->syntax$21429$f3xia
     g$datum->syntax$25022$f3xia
     (case-lambda
       ((g$id$24732$f3xia g$datum$24733$f3xia)
        (if (g$id?$20809$f3xia g$id$24732$f3xia)
          (g$datum->stx$20792$f3xia
            g$id$24732$f3xia
            g$datum$24733$f3xia)
          (g$assertion-violation$12459$f3xia
            'datum->syntax
            '"not an identifier"
            g$id$24732$f3xia)))))
   (g$syntax->datum$21430$f3xia
     g$syntax->datum$25023$f3xia
     (case-lambda
       ((g$x$24734$f3xia) (g$stx->datum$20820$f3xia g$x$24734$f3xia))))
   (g$compile-r6rs-top-level$21431$f3xia
     g$compile-r6rs-top-level$25024$f3xia
     (case-lambda
       ((g$x*$24735$f3xia)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$21370$f3xia g$x*$24735$f3xia)))
          (case-lambda
            ((g$lib*$24738$f3xia g$invoke-code$24739$f3xia)
             ((case-lambda
                ((g$invoke-code$24740$f3xia g$lib*$24741$f3xia)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$15551$f3xia
                        g$invoke-library$20515$f3xia
                        g$lib*$24741$f3xia)
                      (eval-core
                        (g$expanded->core$20247$f3xia
                          g$invoke-code$24740$f3xia)))))))
              g$invoke-code$24739$f3xia
              g$lib*$24738$f3xia)))))))
   (g$pre-compile-r6rs-top-level$21432$f3xia
     g$pre-compile-r6rs-top-level$25025$f3xia
     (case-lambda
       ((g$x*$24742$f3xia)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$21370$f3xia g$x*$24742$f3xia)))
          (case-lambda
            ((g$lib*$24745$f3xia g$invoke-code$24746$f3xia)
             ((case-lambda
                ((g$invoke-code$24747$f3xia g$lib*$24748$f3xia)
                 (begin
                   (g$for-each$15551$f3xia
                     g$invoke-library$20515$f3xia
                     g$lib*$24748$f3xia)
                   (compile-core
                     (g$expanded->core$20247$f3xia
                       g$invoke-code$24747$f3xia)))))
              g$invoke-code$24746$f3xia
              g$lib*$24745$f3xia)))))))
   (g$new-interaction-environment$21433$f3xia
     g$new-interaction-environment$25026$f3xia
     (case-lambda
       (() (g$new-interaction-environment$21433$f3xia '(ironscheme)))
       ((g$libname$24749$f3xia)
        ((case-lambda
           ((g$lib$24750$f3xia g$rib$24751$f3xia)
            (begin
              ((case-lambda
                 ((g$subst$24752$f3xia)
                  (begin
                    (g$set-rib-sym*!$20762$f3xia
                      g$rib$24751$f3xia
                      (g$map$15550$f3xia car g$subst$24752$f3xia))
                    (g$set-rib-mark**!$20763$f3xia
                      g$rib$24751$f3xia
                      (g$map$15550$f3xia
                        (case-lambda
                          ((g$x$24753$f3xia) g$top-mark*$20742$f3xia))
                        g$subst$24752$f3xia))
                    (g$set-rib-label*!$20764$f3xia
                      g$rib$24751$f3xia
                      (g$map$15550$f3xia cdr g$subst$24752$f3xia)))))
               (g$library-subst$20472$f3xia g$lib$24750$f3xia))
              (g$make-interaction-env$21391$f3xia
                g$rib$24751$f3xia
                '()
                '()))))
         (g$find-library-by-name$20508$f3xia g$libname$24749$f3xia)
         (g$make-empty-rib$20767$f3xia)))))
   (g$interaction-environment$21434$f3xia
     g$interaction-environment$25027$f3xia
     (g$make-parameter$19650$f3xia '#f))
   (g$top-level-context$21435$f3xia
     g$top-level-context$25028$f3xia
     (g$make-parameter$19650$f3xia '#f)))
  (g$current-library-expander$20505$f3xia
    g$library-expander$21410$f3xia))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$20244$f3xia
      (case-lambda
        ((g$x$25118$f3xia)
         ((case-lambda
            ((g$t$25119$f3xia)
             (if g$t$25119$f3xia
               (cdr g$t$25119$f3xia)
               ((case-lambda (() (begin '#f '#f)))))))
          (g$assq$15534$f3xia
            g$x$25118$f3xia
            '((ellipsis-map . g$ellipsis-map$24911$f3xia)
              (&stacktrace-rcd . g$&stacktrace-rcd$12286$f3xia)
              (&stacktrace-rtd . g$&stacktrace-rtd$12285$f3xia)
              (&where-rcd . g$&where-rcd$12276$f3xia)
              (&where-rtd . g$&where-rtd$12275$f3xia)
              (&no-nans-rcd . g$&no-nans-rcd$12450$f3xia)
              (&no-nans-rtd . g$&no-nans-rtd$12449$f3xia)
              (&no-infinities-rcd . g$&no-infinities-rcd$12442$f3xia)
              (&no-infinities-rtd . g$&no-infinities-rtd$12441$f3xia)
              (&i/o-encoding-rcd . g$&i/o-encoding-rcd$12434$f3xia)
              (&i/o-encoding-rtd . g$&i/o-encoding-rtd$12433$f3xia)
              (&i/o-decoding-rcd . g$&i/o-decoding-rcd$12424$f3xia)
              (&i/o-decoding-rtd . g$&i/o-decoding-rtd$12423$f3xia)
              (&i/o-port-rcd . g$&i/o-port-rcd$12416$f3xia)
              (&i/o-port-rtd . g$&i/o-port-rtd$12415$f3xia)
              (&i/o-file-does-not-exist-rcd
                .
                g$&i/o-file-does-not-exist-rcd$12406$f3xia)
              (&i/o-file-does-not-exist-rtd
                .
                g$&i/o-file-does-not-exist-rtd$12405$f3xia)
              (&i/o-file-already-exists-rcd
                .
                g$&i/o-file-already-exists-rcd$12398$f3xia)
              (&i/o-file-already-exists-rtd
                .
                g$&i/o-file-already-exists-rtd$12397$f3xia)
              (&i/o-file-is-read-only-rcd
                .
                g$&i/o-file-is-read-only-rcd$12390$f3xia)
              (&i/o-file-is-read-only-rtd
                .
                g$&i/o-file-is-read-only-rtd$12389$f3xia)
              (&i/o-file-protection-rcd
                .
                g$&i/o-file-protection-rcd$12382$f3xia)
              (&i/o-file-protection-rtd
                .
                g$&i/o-file-protection-rtd$12381$f3xia)
              (&i/o-filename-rcd . g$&i/o-filename-rcd$12374$f3xia)
              (&i/o-filename-rtd . g$&i/o-filename-rtd$12373$f3xia)
              (&i/o-invalid-position-rcd
                .
                g$&i/o-invalid-position-rcd$12364$f3xia)
              (&i/o-invalid-position-rtd
                .
                g$&i/o-invalid-position-rtd$12363$f3xia)
              (&i/o-write-rcd . g$&i/o-write-rcd$12354$f3xia)
              (&i/o-write-rtd . g$&i/o-write-rtd$12353$f3xia)
              (&i/o-read-rcd . g$&i/o-read-rcd$12346$f3xia)
              (&i/o-read-rtd . g$&i/o-read-rtd$12345$f3xia)
              (&i/o-rcd . g$&i/o-rcd$12338$f3xia)
              (&i/o-rtd . g$&i/o-rtd$12337$f3xia)
              (&undefined-rcd . g$&undefined-rcd$12330$f3xia)
              (&undefined-rtd . g$&undefined-rtd$12329$f3xia)
              (&syntax-rcd . g$&syntax-rcd$12322$f3xia)
              (&syntax-rtd . g$&syntax-rtd$12321$f3xia)
              (&lexical-rcd . g$&lexical-rcd$12310$f3xia)
              (&lexical-rtd . g$&lexical-rtd$12309$f3xia)
              (&implementation-restriction-rcd
                .
                g$&implementation-restriction-rcd$12302$f3xia)
              (&implementation-restriction-rtd
                .
                g$&implementation-restriction-rtd$12301$f3xia)
              (&non-continuable-rcd
                .
                g$&non-continuable-rcd$12294$f3xia)
              (&non-continuable-rtd
                .
                g$&non-continuable-rtd$12293$f3xia)
              (&who-rcd . g$&who-rcd$12266$f3xia)
              (&who-rtd . g$&who-rtd$12265$f3xia)
              (&irritants-rcd . g$&irritants-rcd$12256$f3xia)
              (&irritants-rtd . g$&irritants-rtd$12255$f3xia)
              (&assertion-rcd . g$&assertion-rcd$12246$f3xia)
              (&assertion-rtd . g$&assertion-rtd$12245$f3xia)
              (&violation-rcd . g$&violation-rcd$12238$f3xia)
              (&violation-rtd . g$&violation-rtd$12237$f3xia)
              (&error-rcd . g$&error-rcd$12230$f3xia)
              (&error-rtd . g$&error-rtd$12229$f3xia)
              (&serious-rcd . g$&serious-rcd$12222$f3xia)
              (&serious-rtd . g$&serious-rtd$12221$f3xia)
              (&warning-rcd . g$&warning-rcd$12214$f3xia)
              (&warning-rtd . g$&warning-rtd$12213$f3xia)
              (&message-rcd . g$&message-rcd$12206$f3xia)
              (&message-rtd . g$&message-rtd$12205$f3xia)
              (&condition-rcd . g$&condition-rcd$12196$f3xia)
              (&condition-rtd . g$&condition-rtd$12195$f3xia)
              (tanh . g$tanh$17060$f3xia)
              (cosh . g$cosh$17058$f3xia)
              (sinh . g$sinh$17055$f3xia)
              (make-list . g$make-list$15529$f3xia)
              (last-pair . g$last-pair$15528$f3xia)
              (ironscheme-test . g$ironscheme-test$25107$f3xia)
              (ironscheme-build . g$ironscheme-build$25108$f3xia)
              (syntax-error . g$syntax-error$25017$f3xia)
              (syntax-dispatch . g$syntax-dispatch$24906$f3xia)
              (compile-system-libraries
                .
                g$compile-system-libraries$25113$f3xia)
              (compile->closure . g$compile->closure$25115$f3xia)
              (compile . g$compile$25114$f3xia)
              (load . g$load$25106$f3xia)
              (new-interaction-environment
                .
                g$new-interaction-environment$25026$f3xia)
              (interaction-environment
                .
                g$interaction-environment$25027$f3xia)
              (string-upcase . g$string-upcase$17401$f3xia)
              (string-titlecase . g$string-titlecase$17394$f3xia)
              (string-normalize-nfkd
                .
                g$string-normalize-nfkd$17405$f3xia)
              (string-normalize-nfkc
                .
                g$string-normalize-nfkc$17404$f3xia)
              (string-normalize-nfd
                .
                g$string-normalize-nfd$17403$f3xia)
              (string-normalize-nfc
                .
                g$string-normalize-nfc$17402$f3xia)
              (string-foldcase . g$string-foldcase$17395$f3xia)
              (string-ci>? . g$string-ci>?$17391$f3xia)
              (string-ci>=? . g$string-ci>=?$17393$f3xia)
              (string-ci=? . g$string-ci=?$17389$f3xia)
              (string-ci<? . g$string-ci<?$17390$f3xia)
              (string-ci<=? . g$string-ci<=?$17392$f3xia)
              (char-whitespace? . g$char-whitespace?$17381$f3xia)
              (char-upper-case? . g$char-upper-case?$17382$f3xia)
              (char-title-case? . g$char-title-case?$17384$f3xia)
              (char-numeric? . g$char-numeric?$17380$f3xia)
              (char-lower-case? . g$char-lower-case?$17383$f3xia)
              (char-general-category
                .
                g$char-general-category$17385$f3xia)
              (char-upcase . g$char-upcase$17375$f3xia)
              (char-titlecase . g$char-titlecase$17377$f3xia)
              (char-foldcase . g$char-foldcase$17378$f3xia)
              (char-downcase . g$char-downcase$17376$f3xia)
              (char-ci>? . g$char-ci>?$17398$f3xia)
              (char-ci>=? . g$char-ci>=?$17400$f3xia)
              (char-ci=? . g$char-ci=?$17396$f3xia)
              (char-ci<? . g$char-ci<?$17397$f3xia)
              (char-ci<=? . g$char-ci<=?$17399$f3xia)
              (char-alphabetic? . g$char-alphabetic?$17379$f3xia)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$24844$f3xia)
              (variable-transformer?
                .
                g$variable-transformer?$24843$f3xia)
              (make-variable-transformer
                .
                g$make-variable-transformer$24841$f3xia)
              (identifier? . g$identifier?$25021$f3xia)
              (generate-temporaries
                .
                g$generate-temporaries$25009$f3xia)
              (free-identifier=? . g$free-identifier=?$25010$f3xia)
              (syntax->datum . g$syntax->datum$25023$f3xia)
              (datum->syntax . g$datum->syntax$25022$f3xia)
              (bound-identifier=? . g$bound-identifier=?$25011$f3xia)
              (delete-file . g$delete-file$16134$f3xia)
              (file-exists? . g$file-exists?$16133$f3xia)
              (vector-sort . g$vector-sort$17141$f3xia)
              (list-sort . g$list-sort$17140$f3xia)
              (symbol-hash . g$symbol-hash$16123$f3xia)
              (string-ci-hash . g$string-ci-hash$16122$f3xia)
              (string-hash . g$string-hash$16121$f3xia)
              (make-eqv-hashtable . g$make-eqv-hashtable$16113$f3xia)
              (make-eq-hashtable . g$make-eq-hashtable$16112$f3xia)
              (hashtable? . g$hashtable?$16111$f3xia)
              (hashtable-update! . g$hashtable-update!$16119$f3xia)
              (hashtable-size . g$hashtable-size$16114$f3xia)
              (hashtable-set! . g$hashtable-set!$16116$f3xia)
              (hashtable-ref . g$hashtable-ref$16115$f3xia)
              (hashtable-delete! . g$hashtable-delete!$16117$f3xia)
              (hashtable-contains? . g$hashtable-contains?$16118$f3xia)
              (hashtable-clear! . g$hashtable-clear!$16120$f3xia)
              (call-with-output-file
                .
                g$call-with-output-file$19156$f3xia)
              (call-with-input-file
                .
                g$call-with-input-file$19155$f3xia)
              (write-char . g$write-char$19152$f3xia)
              (with-output-to-file . g$with-output-to-file$19154$f3xia)
              (with-input-from-file
                .
                g$with-input-from-file$19153$f3xia)
              (read-char . g$read-char$19151$f3xia)
              (peek-char . g$peek-char$19150$f3xia)
              (newline . g$newline$19157$f3xia)
              (standard-output-port
                .
                g$standard-output-port$19084$f3xia)
              (standard-input-port . g$standard-input-port$19083$f3xia)
              (standard-error-port . g$standard-error-port$19082$f3xia)
              (put-datum . g$put-datum$19087$f3xia)
              (port? . g$port?$19092$f3xia)
              (open-string-output-port
                .
                g$open-string-output-port$19091$f3xia)
              (native-eol-style . g$native-eol-style$19085$f3xia)
              (make-i/o-write-error
                .
                g$make-i/o-write-error$12351$f3xia)
              (make-i/o-read-error . g$make-i/o-read-error$12343$f3xia)
              (make-i/o-port-error . g$make-i/o-port-error$12411$f3xia)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$12359$f3xia)
              (make-i/o-filename-error
                .
                g$make-i/o-filename-error$12369$f3xia)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$12379$f3xia)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$12387$f3xia)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$12403$f3xia)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$12395$f3xia)
              (make-i/o-error . g$make-i/o-error$12335$f3xia)
              (make-i/o-encoding-error
                .
                g$make-i/o-encoding-error$12429$f3xia)
              (make-i/o-decoding-error
                .
                g$make-i/o-decoding-error$12421$f3xia)
              (make-bytevector . g$make-bytevector$16468$f3xia)
              (i/o-write-error? . g$i/o-write-error?$12352$f3xia)
              (i/o-read-error? . g$i/o-read-error?$12344$f3xia)
              (i/o-port-error? . g$i/o-port-error?$12413$f3xia)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$12361$f3xia)
              (i/o-error-position . g$i/o-error-position$12362$f3xia)
              (i/o-filename-error? . g$i/o-filename-error?$12371$f3xia)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$12380$f3xia)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$12388$f3xia)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$12404$f3xia)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$12396$f3xia)
              (i/o-error? . g$i/o-error?$12336$f3xia)
              (i/o-error-port . g$i/o-error-port$12414$f3xia)
              (i/o-error-filename . g$i/o-error-filename$12372$f3xia)
              (i/o-encoding-error? . g$i/o-encoding-error?$12431$f3xia)
              (i/o-encoding-error-char
                .
                g$i/o-encoding-error-char$12432$f3xia)
              (i/o-decoding-error? . g$i/o-decoding-error?$12422$f3xia)
              (get-datum . g$get-datum$19088$f3xia)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$19093$f3xia)
              (call-with-port . g$call-with-port$19094$f3xia)
              (buffer-mode? . g$buffer-mode?$19086$f3xia)
              (scheme-report-environment
                .
                g$scheme-report-environment$24999$f3xia)
              (quotient . g$quotient$17103$f3xia)
              (null-environment . g$null-environment$24998$f3xia)
              (remainder . g$remainder$17104$f3xia)
              (modulo . g$modulo$17105$f3xia)
              (inexact->exact . g$inexact->exact$17100$f3xia)
              (force . g$force$17107$f3xia)
              (exact->inexact . g$exact->inexact$17101$f3xia)
              (command-line . g$command-line$25101$f3xia)
              (string-fill! . g$string-fill!$15987$f3xia)
              (string-set! . g$string-set!$15986$f3xia)
              (set-cdr! . g$set-cdr!$17079$f3xia)
              (set-car! . g$set-car!$17078$f3xia)
              (remove . g$remove$15559$f3xia)
              (remv . g$remv$15560$f3xia)
              (remp . g$remp$15532$f3xia)
              (remq . g$remq$15561$f3xia)
              (partition . g$partition$15531$f3xia)
              (memv . g$memv$15539$f3xia)
              (memq . g$memq$15538$f3xia)
              (memp . g$memp$15541$f3xia)
              (member . g$member$15540$f3xia)
              (exists . g$exists$15549$f3xia)
              (for-all . g$for-all$15548$f3xia)
              (fold-right . g$fold-right$15558$f3xia)
              (fold-left . g$fold-left$15557$f3xia)
              (find . g$find$15530$f3xia)
              (filter . g$filter$15533$f3xia)
              (cons* . g$cons*$15552$f3xia)
              (assv . g$assv$15535$f3xia)
              (assq . g$assq$15534$f3xia)
              (assp . g$assp$15537$f3xia)
              (assoc . g$assoc$15536$f3xia)
              (eval . g$eval$25001$f3xia)
              (environment . g$environment$24997$f3xia)
              (make-enumeration . g$make-enumeration$19293$f3xia)
              (enum-set=? . g$enum-set=?$19300$f3xia)
              (enum-set-universe . g$enum-set-universe$19294$f3xia)
              (enum-set-union . g$enum-set-union$19301$f3xia)
              (enum-set-subset? . g$enum-set-subset?$19299$f3xia)
              (enum-set-projection . g$enum-set-projection$19305$f3xia)
              (enum-set-member? . g$enum-set-member?$19298$f3xia)
              (enum-set-intersection
                .
                g$enum-set-intersection$19302$f3xia)
              (enum-set-indexer . g$enum-set-indexer$19295$f3xia)
              (enum-set-difference . g$enum-set-difference$19303$f3xia)
              (enum-set-constructor
                .
                g$enum-set-constructor$19296$f3xia)
              (enum-set-complement . g$enum-set-complement$19304$f3xia)
              (enum-set->list . g$enum-set->list$19297$f3xia)
              (who-condition? . g$who-condition?$12263$f3xia)
              (warning? . g$warning?$12212$f3xia)
              (violation? . g$violation?$12236$f3xia)
              (undefined-violation?
                .
                g$undefined-violation?$12328$f3xia)
              (syntax-violation? . g$syntax-violation?$12318$f3xia)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$12320$f3xia)
              (syntax-violation-form
                .
                g$syntax-violation-form$12319$f3xia)
              (syntax-violation . g$syntax-violation$25020$f3xia)
              (serious-condition? . g$serious-condition?$12220$f3xia)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$12292$f3xia)
              (message-condition? . g$message-condition?$12203$f3xia)
              (make-who-condition . g$make-who-condition$12261$f3xia)
              (make-warning . g$make-warning$12211$f3xia)
              (make-violation . g$make-violation$12235$f3xia)
              (make-undefined-violation
                .
                g$make-undefined-violation$12327$f3xia)
              (make-syntax-violation
                .
                g$make-syntax-violation$12315$f3xia)
              (make-serious-condition
                .
                g$make-serious-condition$12219$f3xia)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$12291$f3xia)
              (make-message-condition
                .
                g$make-message-condition$12201$f3xia)
              (make-lexical-violation
                .
                g$make-lexical-violation$12307$f3xia)
              (make-irritants-condition
                .
                g$make-irritants-condition$12251$f3xia)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$12299$f3xia)
              (make-error . g$make-error$12227$f3xia)
              (make-assertion-violation
                .
                g$make-assertion-violation$12243$f3xia)
              (lexical-violation? . g$lexical-violation?$12308$f3xia)
              (irritants-condition?
                .
                g$irritants-condition?$12253$f3xia)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$12300$f3xia)
              (error? . g$error?$12228$f3xia)
              (condition-who . g$condition-who$12264$f3xia)
              (condition-message . g$condition-message$12204$f3xia)
              (condition-irritants . g$condition-irritants$12254$f3xia)
              (assertion-violation?
                .
                g$assertion-violation?$12244$f3xia)
              (utf32->string . g$utf32->string$16490$f3xia)
              (utf16->string . g$utf16->string$16489$f3xia)
              (utf8->string . g$utf8->string$16487$f3xia)
              (uint-list->bytevector
                .
                g$uint-list->bytevector$16491$f3xia)
              (u8-list->bytevector . g$u8-list->bytevector$16479$f3xia)
              (string->utf8 . g$string->utf8$16484$f3xia)
              (string->utf32 . g$string->utf32$16486$f3xia)
              (string->utf16 . g$string->utf16$16485$f3xia)
              (sint-list->bytevector
                .
                g$sint-list->bytevector$16492$f3xia)
              (native-endianness . g$native-endianness$16455$f3xia)
              (bytevector? . g$bytevector?$15975$f3xia)
              (bytevector=? . g$bytevector=?$16470$f3xia)
              (bytevector-uint-set!
                .
                g$bytevector-uint-set!$16482$f3xia)
              (bytevector-uint-ref . g$bytevector-uint-ref$16480$f3xia)
              (bytevector-u8-set! . g$bytevector-u8-set!$16475$f3xia)
              (bytevector-u8-ref . g$bytevector-u8-ref$16474$f3xia)
              (bytevector-u64-set! . g$bytevector-u64-set!$16520$f3xia)
              (bytevector-u64-ref . g$bytevector-u64-ref$16516$f3xia)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$16522$f3xia)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$16518$f3xia)
              (bytevector-u32-set! . g$bytevector-u32-set!$16512$f3xia)
              (bytevector-u32-ref . g$bytevector-u32-ref$16508$f3xia)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$16514$f3xia)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$16510$f3xia)
              (bytevector-u16-set! . g$bytevector-u16-set!$16504$f3xia)
              (bytevector-u16-ref . g$bytevector-u16-ref$16500$f3xia)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$16506$f3xia)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$16502$f3xia)
              (bytevector-sint-set!
                .
                g$bytevector-sint-set!$16483$f3xia)
              (bytevector-sint-ref . g$bytevector-sint-ref$16481$f3xia)
              (bytevector-s8-set! . g$bytevector-s8-set!$16477$f3xia)
              (bytevector-s8-ref . g$bytevector-s8-ref$16476$f3xia)
              (bytevector-s64-set! . g$bytevector-s64-set!$16521$f3xia)
              (bytevector-s64-ref . g$bytevector-s64-ref$16517$f3xia)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$16523$f3xia)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$16519$f3xia)
              (bytevector-s32-set! . g$bytevector-s32-set!$16513$f3xia)
              (bytevector-s32-ref . g$bytevector-s32-ref$16509$f3xia)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$16515$f3xia)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$16511$f3xia)
              (bytevector-s16-set! . g$bytevector-s16-set!$16505$f3xia)
              (bytevector-s16-ref . g$bytevector-s16-ref$16501$f3xia)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$16507$f3xia)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$16503$f3xia)
              (bytevector-length . g$bytevector-length$16469$f3xia)
              (bytevector-ieee-single-set!
                .
                g$bytevector-ieee-single-set!$16498$f3xia)
              (bytevector-ieee-single-ref
                .
                g$bytevector-ieee-single-ref$16496$f3xia)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$16526$f3xia)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$16524$f3xia)
              (bytevector-ieee-double-set!
                .
                g$bytevector-ieee-double-set!$16499$f3xia)
              (bytevector-ieee-double-ref
                .
                g$bytevector-ieee-double-ref$16497$f3xia)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$16527$f3xia)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$16525$f3xia)
              (bytevector-fill! . g$bytevector-fill!$16471$f3xia)
              (bytevector-copy! . g$bytevector-copy!$16472$f3xia)
              (bytevector-copy . g$bytevector-copy$16473$f3xia)
              (bytevector->uint-list
                .
                g$bytevector->uint-list$16493$f3xia)
              (bytevector->u8-list . g$bytevector->u8-list$16478$f3xia)
              (bytevector->sint-list
                .
                g$bytevector->sint-list$16494$f3xia)
              (no-nans-violation? . g$no-nans-violation?$12448$f3xia)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$12440$f3xia)
              (make-no-nans-violation
                .
                g$make-no-nans-violation$12447$f3xia)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$12439$f3xia)
              (real->flonum . g$real->flonum$17014$f3xia)
              (flzero? . g$flzero?$19049$f3xia)
              (fltruncate . g$fltruncate$19044$f3xia)
              (fltan . g$fltan$19033$f3xia)
              (flsqrt . g$flsqrt$19038$f3xia)
              (flsin . g$flsin$19031$f3xia)
              (flround . g$flround$19045$f3xia)
              (flpositive? . g$flpositive?$19047$f3xia)
              (flonum? . g$flonum?$15980$f3xia)
              (flodd? . g$flodd?$19051$f3xia)
              (flnumerator . g$flnumerator$19009$f3xia)
              (flnegative? . g$flnegative?$19048$f3xia)
              (flnan? . g$flnan?$19030$f3xia)
              (flmod0 . g$flmod0$19021$f3xia)
              (flmod . g$flmod$19020$f3xia)
              (flmin . g$flmin$19053$f3xia)
              (flmax . g$flmax$19052$f3xia)
              (fllog . g$fllog$19037$f3xia)
              (flinteger? . g$flinteger?$19026$f3xia)
              (flinfinite? . g$flinfinite?$19029$f3xia)
              (flfloor . g$flfloor$19043$f3xia)
              (flfinite? . g$flfinite?$19027$f3xia)
              (flexpt . g$flexpt$19040$f3xia)
              (flexp . g$flexp$19039$f3xia)
              (fleven? . g$fleven?$19050$f3xia)
              (fldiv0-and-mod0 . g$fldiv0-and-mod0$19025$f3xia)
              (fldiv0 . g$fldiv0$19018$f3xia)
              (fldiv-and-mod . g$fldiv-and-mod$19022$f3xia)
              (fldiv . g$fldiv$19024$f3xia)
              (fldenominator . g$fldenominator$19008$f3xia)
              (flcos . g$flcos$19032$f3xia)
              (flceiling . g$flceiling$19041$f3xia)
              (flatan . g$flatan$19036$f3xia)
              (flasin . g$flasin$19034$f3xia)
              (flacos . g$flacos$19035$f3xia)
              (flabs . g$flabs$19046$f3xia)
              (fl>? . g$fl>?$19015$f3xia)
              (fl>=? . g$fl>=?$19016$f3xia)
              (fl=? . g$fl=?$19012$f3xia)
              (fl<? . g$fl<?$19013$f3xia)
              (fl<=? . g$fl<=?$19014$f3xia)
              (fl/ . g$fl/$19011$f3xia)
              (fl- . g$fl-$19010$f3xia)
              (fl+ . g$fl+$19006$f3xia)
              (fl* . g$fl*$19007$f3xia)
              (fixnum->flonum . g$fixnum->flonum$17015$f3xia)
              (fxzero? . g$fxzero?$15299$f3xia)
              (fxxor . g$fxxor$15283$f3xia)
              (fxrotate-bit-field . g$fxrotate-bit-field$15319$f3xia)
              (fxreverse-bit-field . g$fxreverse-bit-field$15320$f3xia)
              (fxpositive? . g$fxpositive?$15295$f3xia)
              (fxodd? . g$fxodd?$15303$f3xia)
              (fxnot . g$fxnot$15275$f3xia)
              (fxnegative? . g$fxnegative?$15297$f3xia)
              (fxmod0 . g$fxmod0$15288$f3xia)
              (fxmod . g$fxmod$15287$f3xia)
              (fxmin . g$fxmin$15305$f3xia)
              (fxmax . g$fxmax$15304$f3xia)
              (fxlength . g$fxlength$15272$f3xia)
              (fxior . g$fxior$15282$f3xia)
              (fxif . g$fxif$15310$f3xia)
              (fxfirst-bit-set . g$fxfirst-bit-set$15273$f3xia)
              (fxeven? . g$fxeven?$15301$f3xia)
              (fxdiv0-and-mod0 . g$fxdiv0-and-mod0$15293$f3xia)
              (fxdiv0 . g$fxdiv0$15291$f3xia)
              (fxdiv-and-mod . g$fxdiv-and-mod$15289$f3xia)
              (fxdiv . g$fxdiv$15285$f3xia)
              (fxcopy-bit-field . g$fxcopy-bit-field$15316$f3xia)
              (fxcopy-bit . g$fxcopy-bit$15312$f3xia)
              (fxbit-set? . g$fxbit-set?$15274$f3xia)
              (fxbit-field . g$fxbit-field$15314$f3xia)
              (fxbit-count . g$fxbit-count$15270$f3xia)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$15318$f3xia)
              (fxarithmetic-shift-left
                .
                g$fxarithmetic-shift-left$15317$f3xia)
              (fxarithmetic-shift . g$fxarithmetic-shift$15268$f3xia)
              (fxand . g$fxand$15281$f3xia)
              (fx>? . g$fx>?$15279$f3xia)
              (fx>=? . g$fx>=?$15280$f3xia)
              (fx=? . g$fx=?$15276$f3xia)
              (fx<? . g$fx<?$15277$f3xia)
              (fx<=? . g$fx<=?$15278$f3xia)
              (fx-/carry . g$fx-/carry$15307$f3xia)
              (fx- . g$fx-$15265$f3xia)
              (fx+/carry . g$fx+/carry$15308$f3xia)
              (fx+ . g$fx+$15263$f3xia)
              (fx*/carry . g$fx*/carry$15306$f3xia)
              (fx* . g$fx*$15264$f3xia)
              (greatest-fixnum . g$greatest-fixnum$15261$f3xia)
              (least-fixnum . g$least-fixnum$15262$f3xia)
              (fixnum-width . g$fixnum-width$15981$f3xia)
              (fixnum? . g$fixnum?$15979$f3xia)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$17511$f3xia)
              (bitwise-reverse-bit-field
                .
                g$bitwise-reverse-bit-field$17512$f3xia)
              (bitwise-length . g$bitwise-length$17501$f3xia)
              (bitwise-if . g$bitwise-if$17504$f3xia)
              (bitwise-first-bit-set
                .
                g$bitwise-first-bit-set$17502$f3xia)
              (bitwise-copy-bit-field
                .
                g$bitwise-copy-bit-field$17507$f3xia)
              (bitwise-copy-bit . g$bitwise-copy-bit$17505$f3xia)
              (bitwise-bit-set? . g$bitwise-bit-set?$17503$f3xia)
              (bitwise-bit-field . g$bitwise-bit-field$17506$f3xia)
              (bitwise-bit-count . g$bitwise-bit-count$17500$f3xia)
              (bitwise-xor . g$bitwise-xor$17499$f3xia)
              (bitwise-ior . g$bitwise-ior$17498$f3xia)
              (bitwise-and . g$bitwise-and$17497$f3xia)
              (bitwise-not . g$bitwise-not$17496$f3xia)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$17510$f3xia)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$17509$f3xia)
              (bitwise-arithmetic-shift
                .
                g$bitwise-arithmetic-shift$17508$f3xia)
              (zero? . g$zero?$17029$f3xia)
              (vector? . g$vector?$15974$f3xia)
              (vector-set! . g$vector-set!$16006$f3xia)
              (vector-ref . g$vector-ref$16005$f3xia)
              (vector-map . g$vector-map$16063$f3xia)
              (vector-length . g$vector-length$16008$f3xia)
              (vector-for-each . g$vector-for-each$16064$f3xia)
              (vector-fill! . g$vector-fill!$16009$f3xia)
              (vector->list . g$vector->list$16010$f3xia)
              (truncate . g$truncate$17067$f3xia)
              (tan . g$tan$17059$f3xia)
              (symbol? . g$symbol?$15976$f3xia)
              (symbol=? . g$symbol=?$16053$f3xia)
              (symbol->string . g$symbol->string$15996$f3xia)
              (substring . g$substring$15993$f3xia)
              (string? . g$string?$15972$f3xia)
              (string>? . g$string>?$16050$f3xia)
              (string>=? . g$string>=?$16052$f3xia)
              (string=? . g$string=?$16048$f3xia)
              (string<? . g$string<?$16049$f3xia)
              (string<=? . g$string<=?$16051$f3xia)
              (string-ref . g$string-ref$15985$f3xia)
              (string-length . g$string-length$15988$f3xia)
              (string-for-each . g$string-for-each$16065$f3xia)
              (string-copy . g$string-copy$15992$f3xia)
              (string-append . g$string-append$15994$f3xia)
              (string->symbol . g$string->symbol$15997$f3xia)
              (string->list . g$string->list$15991$f3xia)
              (string . g$string$15990$f3xia)
              (sqrt . g$sqrt$17069$f3xia)
              (sin . g$sin$17053$f3xia)
              (round . g$round$17068$f3xia)
              (reverse . g$reverse$16012$f3xia)
              (real? . g$real?$17023$f3xia)
              (real-valued? . g$real-valued?$17026$f3xia)
              (real-part . g$real-part$17050$f3xia)
              (rationalize . g$rationalize$16060$f3xia)
              (rational? . g$rational?$17024$f3xia)
              (rational-valued? . g$rational-valued?$17027$f3xia)
              (procedure? . g$procedure?$15978$f3xia)
              (positive? . g$positive?$17030$f3xia)
              (odd? . g$odd?$16042$f3xia)
              (numerator . g$numerator$17048$f3xia)
              (number? . g$number?$17016$f3xia)
              (number->string . g$number->string$17037$f3xia)
              (negative? . g$negative?$17031$f3xia)
              (nan? . g$nan?$17017$f3xia)
              (min . g$min$16044$f3xia)
              (max . g$max$16043$f3xia)
              (map . g$map$15550$f3xia)
              (make-vector . g$make-vector$16007$f3xia)
              (make-string . g$make-string$15984$f3xia)
              (make-rectangular . g$make-rectangular$17043$f3xia)
              (make-polar . g$make-polar$17044$f3xia)
              (magnitude . g$magnitude$17046$f3xia)
              (log . g$log$17062$f3xia)
              (list? . g$list?$15545$f3xia)
              (list-tail . g$list-tail$15526$f3xia)
              (list-ref . g$list-ref$15527$f3xia)
              (list->vector . g$list->vector$16003$f3xia)
              (list->string . g$list->string$16004$f3xia)
              (length . g$length$15547$f3xia)
              (lcm . g$lcm$16046$f3xia)
              (integer? . g$integer?$17025$f3xia)
              (integer-valued? . g$integer-valued?$17028$f3xia)
              (integer->char . g$integer->char$15983$f3xia)
              (infinite? . g$infinite?$17019$f3xia)
              (inexact? . g$inexact?$17021$f3xia)
              (inexact . g$inexact$17032$f3xia)
              (imag-part . g$imag-part$17051$f3xia)
              (gcd . g$gcd$16045$f3xia)
              (for-each . g$for-each$15551$f3xia)
              (floor . g$floor$17065$f3xia)
              (finite? . g$finite?$17018$f3xia)
              (expt . g$expt$17071$f3xia)
              (exp . g$exp$17052$f3xia)
              (exact? . g$exact?$17020$f3xia)
              (exact-integer-sqrt . g$exact-integer-sqrt$17070$f3xia)
              (exact . g$exact$17033$f3xia)
              (even? . g$even?$16041$f3xia)
              (error . g$error$12460$f3xia)
              (equal? . g$equal?$19443$f3xia)
              (div0-and-mod0 . g$div0-and-mod0$16002$f3xia)
              (mod0 . g$mod0$16000$f3xia)
              (div0 . g$div0$15998$f3xia)
              (div-and-mod . g$div-and-mod$16001$f3xia)
              (mod . g$mod$15999$f3xia)
              (div . g$div$17063$f3xia)
              (denominator . g$denominator$17049$f3xia)
              (cos . g$cos$17056$f3xia)
              (complex? . g$complex?$17022$f3xia)
              (char? . g$char?$15973$f3xia)
              (char>? . g$char>?$16057$f3xia)
              (char>=? . g$char>=?$16059$f3xia)
              (char=? . g$char=?$16055$f3xia)
              (char<? . g$char<?$16056$f3xia)
              (char<=? . g$char<=?$16058$f3xia)
              (char->integer . g$char->integer$15982$f3xia)
              (ceiling . g$ceiling$17066$f3xia)
              (cddddr . g$cddddr$16040$f3xia)
              (cdddar . g$cdddar$16039$f3xia)
              (cddadr . g$cddadr$16038$f3xia)
              (cddaar . g$cddaar$16037$f3xia)
              (cdaddr . g$cdaddr$16036$f3xia)
              (cdadar . g$cdadar$16035$f3xia)
              (cdaadr . g$cdaadr$16034$f3xia)
              (cdaaar . g$cdaaar$16033$f3xia)
              (cadddr . g$cadddr$16032$f3xia)
              (caddar . g$caddar$16031$f3xia)
              (cadadr . g$cadadr$16030$f3xia)
              (cadaar . g$cadaar$16029$f3xia)
              (caaddr . g$caaddr$16028$f3xia)
              (caadar . g$caadar$16027$f3xia)
              (caaadr . g$caaadr$16026$f3xia)
              (caaaar . g$caaaar$16025$f3xia)
              (cdddr . g$cdddr$16024$f3xia)
              (cddar . g$cddar$16023$f3xia)
              (cdadr . g$cdadr$16022$f3xia)
              (cdaar . g$cdaar$16021$f3xia)
              (caddr . g$caddr$16020$f3xia)
              (cadar . g$cadar$16019$f3xia)
              (caadr . g$caadr$16018$f3xia)
              (caaar . g$caaar$16017$f3xia)
              (cddr . g$cddr$16016$f3xia)
              (cdar . g$cdar$16015$f3xia)
              (cadr . g$cadr$16014$f3xia)
              (caar . g$caar$16013$f3xia)
              (boolean? . g$boolean?$15977$f3xia)
              (boolean=? . g$boolean=?$16054$f3xia)
              (atan . g$atan$17061$f3xia)
              (assertion-violation . g$assertion-violation$12459$f3xia)
              (asin . g$asin$17054$f3xia)
              (append . g$append$15556$f3xia)
              (angle . g$angle$17045$f3xia)
              (acos . g$acos$17057$f3xia)
              (abs . g$abs$17064$f3xia)
              (>= . g$>=$17042$f3xia)
              (> . g$>$17041$f3xia)
              (= . g$=$17038$f3xia)
              (<= . g$<=$17040$f3xia)
              (< . g$<$17039$f3xia)
              (enum-set? . g$enum?$19274$f3xia)
              (make-promise . g$make-promise$17106$f3xia)
              (load/unload . g$load/unload$25105$f3xia)
              (load/args . g$load/args$25104$f3xia)
              (printf . g$printf$19329$f3xia)
              (fprintf . g$fprintf$19330$f3xia)
              (format . g$format$19331$f3xia)
              (trace-printer . g$trace-printer$25099$f3xia)
              (make-traced-macro . g$make-traced-macro$19335$f3xia)
              (assertion-error . g$assertion-error$25016$f3xia)
              (make-parameter . g$make-parameter$19650$f3xia)
              (environment-bindings
                .
                g$environment-bindings$24993$f3xia)
              (environment-symbols . g$environment-symbols$24996$f3xia)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$24992$f3xia)
              (library-path . g$library-path$20497$f3xia)
              (make-compile-time-value
                .
                g$make-compile-time-value$24842$f3xia)
              (expand->core . g$expand->core$25002$f3xia)
              (expand . g$expand$25000$f3xia)
              (emacs-mode? . g$emacs-mode?$25102$f3xia)
              (syntax-transpose . g$syntax-transpose$24949$f3xia)
              (convert->cps . g$convert->cps$20178$f3xia)
              (condition-stacktrace
                .
                g$condition-stacktrace$12284$f3xia)
              (stacktrace-condition?
                .
                g$stacktrace-condition?$12283$f3xia)
              (stacktrace-enable? . g$stacktrace-enable?$25100$f3xia)
              (make-stacktrace-condition
                .
                g$make-stacktrace-condition$12281$f3xia)
              (condition-where . g$condition-where$12274$f3xia)
              (where-condition? . g$where-condition?$12273$f3xia)
              (make-where-condition
                .
                g$make-where-condition$12271$f3xia)
              (installed-libraries . g$installed-libraries$20518$f3xia)
              (uninstall-library . g$uninstall-library$20509$f3xia)
              (pretty-gensyms . g$pretty-gensyms$19858$f3xia)
              (pretty-width . g$pretty-width$19855$f3xia)
              (pretty-print . g$pretty-print$19860$f3xia)))))))
    (g$install-library$20513$f3xia
      'g$14041$f3xia
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$7781$f3xia)
        (cosh . g$7779$f3xia)
        (sinh . g$7776$f3xia)
        (make-guid . g$14034$f3xia)
        (unspecified? . g$14033$f3xia)
        (make-list . g$6794$f3xia)
        (last-pair . g$6793$f3xia)
        (load-r5rs . g$14032$f3xia)
        (license . g$14031$f3xia)
        (stacktrace . g$14030$f3xia)
        (ironscheme-test . g$13646$f3xia)
        (ironscheme-build . g$13647$f3xia)
        (remove-location . g$14014$f3xia)
        (set-symbol-value! . g$14013$f3xia)
        (symbol-value . g$14012$f3xia)
        (symbol-bound? . g$14011$f3xia)
        (ungensym . g$14010$f3xia)
        (gensym . g$14009$f3xia)
        (void . g$14008$f3xia)
        (compile-system-libraries . g$13652$f3xia)
        (compile->closure . g$13654$f3xia)
        (compile . g$13653$f3xia)
        (load . g$13645$f3xia)
        (new-interaction-environment . g$10624$f3xia)
        (interaction-environment . g$10625$f3xia)
        (string-upcase . g$8149$f3xia)
        (string-titlecase . g$8137$f3xia)
        (string-normalize-nfkd . g$8158$f3xia)
        (string-normalize-nfkc . g$8157$f3xia)
        (string-normalize-nfd . g$8156$f3xia)
        (string-normalize-nfc . g$8155$f3xia)
        (string-foldcase . g$8138$f3xia)
        (string-downcase . g$14003$f3xia)
        (string-ci>? . g$8134$f3xia)
        (string-ci>=? . g$8136$f3xia)
        (string-ci=? . g$8132$f3xia)
        (string-ci<? . g$8133$f3xia)
        (string-ci<=? . g$8135$f3xia)
        (char-whitespace? . g$8114$f3xia)
        (char-upper-case? . g$8115$f3xia)
        (char-title-case? . g$8117$f3xia)
        (char-numeric? . g$8113$f3xia)
        (char-lower-case? . g$8116$f3xia)
        (char-general-category . g$8118$f3xia)
        (char-upcase . g$8108$f3xia)
        (char-titlecase . g$8110$f3xia)
        (char-foldcase . g$8111$f3xia)
        (char-downcase . g$8109$f3xia)
        (char-ci>? . g$8146$f3xia)
        (char-ci>=? . g$8148$f3xia)
        (char-ci=? . g$8144$f3xia)
        (char-ci<? . g$8145$f3xia)
        (char-ci<=? . g$8147$f3xia)
        (char-alphabetic? . g$8112$f3xia)
        (make-variable-transformer . g$10298$f3xia)
        (identifier? . g$10619$f3xia)
        (generate-temporaries . g$10607$f3xia)
        (free-identifier=? . g$10608$f3xia)
        (syntax->datum . g$10621$f3xia)
        (datum->syntax . g$10620$f3xia)
        (bound-identifier=? . g$10609$f3xia)
        (record-type-descriptor? . g$14002$f3xia)
        (record-predicate . g$14001$f3xia)
        (record-mutator . g$14000$f3xia)
        (record-constructor . g$13999$f3xia)
        (record-accessor . g$13998$f3xia)
        (make-record-type-descriptor . g$13997$f3xia)
        (make-record-constructor-descriptor . g$13996$f3xia)
        (record? . g$13995$f3xia)
        (record-type-uid . g$13994$f3xia)
        (record-type-sealed? . g$13993$f3xia)
        (record-type-parent . g$13992$f3xia)
        (record-type-opaque? . g$13991$f3xia)
        (record-type-name . g$13990$f3xia)
        (record-type-generative? . g$13989$f3xia)
        (record-type-field-names . g$13988$f3xia)
        (record-rtd . g$13987$f3xia)
        (record-field-mutable? . g$13986$f3xia)
        (delete-file . g$7370$f3xia)
        (file-exists? . g$7369$f3xia)
        (vector-sort! . g$13985$f3xia)
        (vector-sort . g$8078$f3xia)
        (list-sort . g$8077$f3xia)
        (symbol-hash . g$7340$f3xia)
        (string-ci-hash . g$7339$f3xia)
        (string-hash . g$7338$f3xia)
        (equal-hash . g$13984$f3xia)
        (hashtable-equivalence-function . g$13983$f3xia)
        (make-hashtable . g$13982$f3xia)
        (hashtable-hash-function . g$13981$f3xia)
        (make-eqv-hashtable . g$7330$f3xia)
        (make-eq-hashtable . g$7329$f3xia)
        (hashtable? . g$7328$f3xia)
        (hashtable-update! . g$7336$f3xia)
        (hashtable-size . g$7331$f3xia)
        (hashtable-set! . g$7333$f3xia)
        (hashtable-ref . g$7332$f3xia)
        (hashtable-mutable? . g$13980$f3xia)
        (hashtable-keys . g$13979$f3xia)
        (hashtable-entries . g$13978$f3xia)
        (hashtable-delete! . g$7334$f3xia)
        (hashtable-copy . g$13977$f3xia)
        (hashtable-contains? . g$7335$f3xia)
        (hashtable-clear! . g$7337$f3xia)
        (call-with-output-file . g$9010$f3xia)
        (call-with-input-file . g$9009$f3xia)
        (write-char . g$9001$f3xia)
        (write . g$13976$f3xia)
        (with-output-to-file . g$9008$f3xia)
        (with-input-from-file . g$9007$f3xia)
        (read-char . g$9000$f3xia)
        (read . g$13975$f3xia)
        (peek-char . g$8999$f3xia)
        (open-output-file . g$13974$f3xia)
        (open-input-file . g$13973$f3xia)
        (newline . g$9011$f3xia)
        (display . g$13972$f3xia)
        (close-output-port . g$13971$f3xia)
        (close-input-port . g$13970$f3xia)
        (eof-object? . g$13969$f3xia)
        (eof-object . g$13968$f3xia)
        (current-error-port . g$13967$f3xia)
        (current-output-port . g$13966$f3xia)
        (current-input-port . g$13965$f3xia)
        (output-port? . g$13964$f3xia)
        (input-port? . g$13963$f3xia)
        (utf-8-codec . g$13962$f3xia)
        (utf-16-codec . g$13961$f3xia)
        (transcoder-error-handling-mode . g$13960$f3xia)
        (transcoder-eol-style . g$13959$f3xia)
        (transcoder-codec . g$13958$f3xia)
        (transcoded-port . g$13957$f3xia)
        (textual-port? . g$13956$f3xia)
        (string->bytevector . g$13955$f3xia)
        (standard-output-port . g$8975$f3xia)
        (standard-input-port . g$8974$f3xia)
        (standard-error-port . g$8973$f3xia)
        (set-port-position! . g$13954$f3xia)
        (put-u8 . g$13953$f3xia)
        (put-string . g$13952$f3xia)
        (put-datum . g$8978$f3xia)
        (put-char . g$13951$f3xia)
        (put-bytevector . g$13950$f3xia)
        (port? . g$8983$f3xia)
        (port-transcoder . g$13949$f3xia)
        (port-position . g$13948$f3xia)
        (port-has-set-port-position!? . g$13947$f3xia)
        (port-has-port-position? . g$13946$f3xia)
        (port-eof? . g$13945$f3xia)
        (output-port-buffer-mode . g$13944$f3xia)
        (open-string-output-port . g$8982$f3xia)
        (open-string-input-port . g$13943$f3xia)
        (open-file-output-port . g$13942$f3xia)
        (open-file-input/output-port . g$13941$f3xia)
        (open-file-input-port . g$13940$f3xia)
        (open-bytevector-output-port . g$13939$f3xia)
        (open-bytevector-input-port . g$13938$f3xia)
        (native-transcoder . g$13937$f3xia)
        (native-eol-style . g$8976$f3xia)
        (make-transcoder . g$13936$f3xia)
        (latin-1-codec . g$13935$f3xia)
        (make-i/o-write-error . g$5428$f3xia)
        (make-i/o-read-error . g$5415$f3xia)
        (make-i/o-port-error . g$5523$f3xia)
        (make-i/o-invalid-position-error . g$5441$f3xia)
        (make-i/o-filename-error . g$5456$f3xia)
        (make-i/o-file-protection-error . g$5471$f3xia)
        (make-i/o-file-is-read-only-error . g$5484$f3xia)
        (make-i/o-file-does-not-exist-error . g$5510$f3xia)
        (make-i/o-file-already-exists-error . g$5497$f3xia)
        (make-i/o-error . g$5402$f3xia)
        (make-i/o-encoding-error . g$5551$f3xia)
        (make-i/o-decoding-error . g$5538$f3xia)
        (make-custom-textual-output-port . g$13934$f3xia)
        (make-custom-textual-input/output-port . g$13933$f3xia)
        (make-custom-textual-input-port . g$13932$f3xia)
        (make-custom-binary-output-port . g$13931$f3xia)
        (make-custom-binary-input/output-port . g$13930$f3xia)
        (make-custom-binary-input-port . g$13929$f3xia)
        (make-bytevector . g$7389$f3xia)
        (lookahead-u8 . g$13928$f3xia)
        (lookahead-char . g$13927$f3xia)
        (i/o-write-error? . g$5429$f3xia)
        (i/o-read-error? . g$5416$f3xia)
        (i/o-port-error? . g$5525$f3xia)
        (i/o-invalid-position-error? . g$5443$f3xia)
        (i/o-error-position . g$5444$f3xia)
        (i/o-filename-error? . g$5458$f3xia)
        (i/o-file-protection-error? . g$5472$f3xia)
        (i/o-file-is-read-only-error? . g$5485$f3xia)
        (i/o-file-does-not-exist-error? . g$5511$f3xia)
        (i/o-file-already-exists-error? . g$5498$f3xia)
        (i/o-error? . g$5403$f3xia)
        (i/o-error-port . g$5526$f3xia)
        (i/o-error-filename . g$5459$f3xia)
        (i/o-encoding-error? . g$5553$f3xia)
        (i/o-encoding-error-char . g$5554$f3xia)
        (i/o-decoding-error? . g$5539$f3xia)
        (get-u8 . g$13926$f3xia)
        (get-string-n! . g$13925$f3xia)
        (get-string-n . g$13924$f3xia)
        (get-string-all . g$13923$f3xia)
        (get-line . g$13922$f3xia)
        (get-datum . g$8979$f3xia)
        (get-char . g$13921$f3xia)
        (get-bytevector-some . g$13920$f3xia)
        (get-bytevector-n! . g$13919$f3xia)
        (get-bytevector-n . g$13918$f3xia)
        (get-bytevector-all . g$13917$f3xia)
        (flush-output-port . g$13916$f3xia)
        (close-port . g$13915$f3xia)
        (call-with-string-output-port . g$8984$f3xia)
        (call-with-port . g$8985$f3xia)
        (call-with-bytevector-output-port . g$13914$f3xia)
        (bytevector->string . g$13913$f3xia)
        (buffer-mode? . g$8977$f3xia)
        (binary-port? . g$13912$f3xia)
        (scheme-report-environment . g$10597$f3xia)
        (quotient . g$8056$f3xia)
        (null-environment . g$10596$f3xia)
        (remainder . g$8057$f3xia)
        (modulo . g$8058$f3xia)
        (inexact->exact . g$8053$f3xia)
        (force . g$8060$f3xia)
        (exact->inexact . g$8054$f3xia)
        (exit . g$13911$f3xia)
        (command-line . g$13640$f3xia)
        (string-fill! . g$7002$f3xia)
        (string-set! . g$7001$f3xia)
        (set-cdr! . g$8045$f3xia)
        (set-car! . g$8044$f3xia)
        (remove . g$6824$f3xia)
        (remv . g$6825$f3xia)
        (remp . g$6797$f3xia)
        (remq . g$6826$f3xia)
        (partition . g$6796$f3xia)
        (memv . g$6804$f3xia)
        (memq . g$6803$f3xia)
        (memp . g$6806$f3xia)
        (member . g$6805$f3xia)
        (exists . g$6814$f3xia)
        (for-all . g$6813$f3xia)
        (fold-right . g$6823$f3xia)
        (fold-left . g$6822$f3xia)
        (find . g$6795$f3xia)
        (filter . g$6798$f3xia)
        (cons* . g$6817$f3xia)
        (assv . g$6800$f3xia)
        (assq . g$6799$f3xia)
        (assp . g$6802$f3xia)
        (assoc . g$6801$f3xia)
        (with-exception-handler . g$13910$f3xia)
        (raise-continuable . g$13909$f3xia)
        (raise . g$13908$f3xia)
        (eval . g$10599$f3xia)
        (environment . g$10595$f3xia)
        (make-enumeration . g$9071$f3xia)
        (enum-set=? . g$9078$f3xia)
        (enum-set-universe . g$9072$f3xia)
        (enum-set-union . g$9079$f3xia)
        (enum-set-subset? . g$9077$f3xia)
        (enum-set-projection . g$9083$f3xia)
        (enum-set-member? . g$9076$f3xia)
        (enum-set-intersection . g$9080$f3xia)
        (enum-set-indexer . g$9073$f3xia)
        (enum-set-difference . g$9081$f3xia)
        (enum-set-constructor . g$9074$f3xia)
        (enum-set-complement . g$9082$f3xia)
        (enum-set->list . g$9075$f3xia)
        (who-condition? . g$5290$f3xia)
        (warning? . g$5209$f3xia)
        (violation? . g$5248$f3xia)
        (undefined-violation? . g$5390$f3xia)
        (syntax-violation? . g$5375$f3xia)
        (syntax-violation-subform . g$5377$f3xia)
        (syntax-violation-form . g$5376$f3xia)
        (syntax-violation . g$10618$f3xia)
        (simple-conditions . g$13907$f3xia)
        (serious-condition? . g$5222$f3xia)
        (non-continuable-violation? . g$5334$f3xia)
        (message-condition? . g$5195$f3xia)
        (make-who-condition . g$5288$f3xia)
        (make-warning . g$5208$f3xia)
        (make-violation . g$5247$f3xia)
        (make-undefined-violation . g$5389$f3xia)
        (make-syntax-violation . g$5372$f3xia)
        (make-serious-condition . g$5221$f3xia)
        (make-non-continuable-violation . g$5333$f3xia)
        (make-message-condition . g$5193$f3xia)
        (make-lexical-violation . g$5359$f3xia)
        (make-irritants-condition . g$5273$f3xia)
        (make-implementation-restriction-violation . g$5346$f3xia)
        (make-error . g$5234$f3xia)
        (make-assertion-violation . g$5260$f3xia)
        (lexical-violation? . g$5360$f3xia)
        (irritants-condition? . g$5275$f3xia)
        (implementation-restriction-violation? . g$5347$f3xia)
        (error? . g$5235$f3xia)
        (condition-who . g$5291$f3xia)
        (condition-predicate . g$13906$f3xia)
        (condition-message . g$5196$f3xia)
        (condition-irritants . g$5276$f3xia)
        (condition-accessor . g$13905$f3xia)
        (condition . g$13904$f3xia)
        (assertion-violation? . g$5261$f3xia)
        (condition? . g$13903$f3xia)
        (utf32->string . g$7411$f3xia)
        (utf16->string . g$7410$f3xia)
        (utf8->string . g$7408$f3xia)
        (uint-list->bytevector . g$7412$f3xia)
        (u8-list->bytevector . g$7400$f3xia)
        (string->utf8 . g$7405$f3xia)
        (string->utf32 . g$7407$f3xia)
        (string->utf16 . g$7406$f3xia)
        (sint-list->bytevector . g$7413$f3xia)
        (native-endianness . g$7376$f3xia)
        (bytevector? . g$6990$f3xia)
        (bytevector=? . g$7391$f3xia)
        (bytevector-uint-set! . g$7403$f3xia)
        (bytevector-uint-ref . g$7401$f3xia)
        (bytevector-u8-set! . g$7396$f3xia)
        (bytevector-u8-ref . g$7395$f3xia)
        (bytevector-u64-set! . g$7441$f3xia)
        (bytevector-u64-ref . g$7437$f3xia)
        (bytevector-u64-native-set! . g$7443$f3xia)
        (bytevector-u64-native-ref . g$7439$f3xia)
        (bytevector-u32-set! . g$7433$f3xia)
        (bytevector-u32-ref . g$7429$f3xia)
        (bytevector-u32-native-set! . g$7435$f3xia)
        (bytevector-u32-native-ref . g$7431$f3xia)
        (bytevector-u16-set! . g$7425$f3xia)
        (bytevector-u16-ref . g$7421$f3xia)
        (bytevector-u16-native-set! . g$7427$f3xia)
        (bytevector-u16-native-ref . g$7423$f3xia)
        (bytevector-sint-set! . g$7404$f3xia)
        (bytevector-sint-ref . g$7402$f3xia)
        (bytevector-s8-set! . g$7398$f3xia)
        (bytevector-s8-ref . g$7397$f3xia)
        (bytevector-s64-set! . g$7442$f3xia)
        (bytevector-s64-ref . g$7438$f3xia)
        (bytevector-s64-native-set! . g$7444$f3xia)
        (bytevector-s64-native-ref . g$7440$f3xia)
        (bytevector-s32-set! . g$7434$f3xia)
        (bytevector-s32-ref . g$7430$f3xia)
        (bytevector-s32-native-set! . g$7436$f3xia)
        (bytevector-s32-native-ref . g$7432$f3xia)
        (bytevector-s16-set! . g$7426$f3xia)
        (bytevector-s16-ref . g$7422$f3xia)
        (bytevector-s16-native-set! . g$7428$f3xia)
        (bytevector-s16-native-ref . g$7424$f3xia)
        (bytevector-length . g$7390$f3xia)
        (bytevector-ieee-single-set! . g$7419$f3xia)
        (bytevector-ieee-single-ref . g$7417$f3xia)
        (bytevector-ieee-single-native-set! . g$7447$f3xia)
        (bytevector-ieee-single-native-ref . g$7445$f3xia)
        (bytevector-ieee-double-set! . g$7420$f3xia)
        (bytevector-ieee-double-ref . g$7418$f3xia)
        (bytevector-ieee-double-native-set! . g$7448$f3xia)
        (bytevector-ieee-double-native-ref . g$7446$f3xia)
        (bytevector-fill! . g$7392$f3xia)
        (bytevector-copy! . g$7393$f3xia)
        (bytevector-copy . g$7394$f3xia)
        (bytevector->uint-list . g$7414$f3xia)
        (bytevector->u8-list . g$7399$f3xia)
        (bytevector->sint-list . g$7415$f3xia)
        (no-nans-violation? . g$5580$f3xia)
        (no-infinities-violation? . g$5567$f3xia)
        (make-no-nans-violation . g$5579$f3xia)
        (make-no-infinities-violation . g$5566$f3xia)
        (real->flonum . g$7721$f3xia)
        (flzero? . g$8415$f3xia)
        (fltruncate . g$8410$f3xia)
        (fltan . g$8396$f3xia)
        (flsqrt . g$8401$f3xia)
        (flsin . g$8394$f3xia)
        (flround . g$8411$f3xia)
        (flpositive? . g$8413$f3xia)
        (flonum? . g$6995$f3xia)
        (flodd? . g$8417$f3xia)
        (flnumerator . g$8360$f3xia)
        (flnegative? . g$8414$f3xia)
        (flnan? . g$8393$f3xia)
        (flmod0 . g$8378$f3xia)
        (flmod . g$8377$f3xia)
        (flmin . g$8419$f3xia)
        (flmax . g$8418$f3xia)
        (fllog . g$8400$f3xia)
        (flinteger? . g$8386$f3xia)
        (flinfinite? . g$8392$f3xia)
        (flfloor . g$8409$f3xia)
        (flfinite? . g$8387$f3xia)
        (flexpt . g$8403$f3xia)
        (flexp . g$8402$f3xia)
        (fleven? . g$8416$f3xia)
        (fldiv0-and-mod0 . g$8385$f3xia)
        (fldiv0 . g$8372$f3xia)
        (fldiv-and-mod . g$8379$f3xia)
        (fldiv . g$8384$f3xia)
        (fldenominator . g$8359$f3xia)
        (flcos . g$8395$f3xia)
        (flceiling . g$8404$f3xia)
        (flatan . g$8399$f3xia)
        (flasin . g$8397$f3xia)
        (flacos . g$8398$f3xia)
        (flabs . g$8412$f3xia)
        (fl>? . g$8366$f3xia)
        (fl>=? . g$8367$f3xia)
        (fl=? . g$8363$f3xia)
        (fl<? . g$8364$f3xia)
        (fl<=? . g$8365$f3xia)
        (fl/ . g$8362$f3xia)
        (fl- . g$8361$f3xia)
        (fl+ . g$8357$f3xia)
        (fl* . g$8358$f3xia)
        (fixnum->flonum . g$7722$f3xia)
        (fxzero? . g$5924$f3xia)
        (fxxor . g$5887$f3xia)
        (fxrotate-bit-field . g$5962$f3xia)
        (fxreverse-bit-field . g$5963$f3xia)
        (fxpositive? . g$5914$f3xia)
        (fxodd? . g$5934$f3xia)
        (fxnot . g$5868$f3xia)
        (fxnegative? . g$5919$f3xia)
        (fxmod0 . g$5898$f3xia)
        (fxmod . g$5897$f3xia)
        (fxmin . g$5936$f3xia)
        (fxmax . g$5935$f3xia)
        (fxlength . g$5865$f3xia)
        (fxior . g$5886$f3xia)
        (fxif . g$5944$f3xia)
        (fxfirst-bit-set . g$5866$f3xia)
        (fxeven? . g$5929$f3xia)
        (fxdiv0-and-mod0 . g$5909$f3xia)
        (fxdiv0 . g$5904$f3xia)
        (fxdiv-and-mod . g$5899$f3xia)
        (fxdiv . g$5892$f3xia)
        (fxcopy-bit-field . g$5959$f3xia)
        (fxcopy-bit . g$5949$f3xia)
        (fxbit-set? . g$5867$f3xia)
        (fxbit-field . g$5954$f3xia)
        (fxbit-count . g$5860$f3xia)
        (fxarithmetic-shift-right . g$5961$f3xia)
        (fxarithmetic-shift-left . g$5960$f3xia)
        (fxarithmetic-shift . g$5855$f3xia)
        (fxand . g$5885$f3xia)
        (fx>? . g$5877$f3xia)
        (fx>=? . g$5878$f3xia)
        (fx=? . g$5874$f3xia)
        (fx<? . g$5875$f3xia)
        (fx<=? . g$5876$f3xia)
        (fx-/carry . g$5938$f3xia)
        (fx- . g$5849$f3xia)
        (fx+/carry . g$5939$f3xia)
        (fx+ . g$5847$f3xia)
        (fx*/carry . g$5937$f3xia)
        (fx* . g$5848$f3xia)
        (greatest-fixnum . g$5818$f3xia)
        (least-fixnum . g$5819$f3xia)
        (fixnum-width . g$6996$f3xia)
        (fixnum? . g$6994$f3xia)
        (bitwise-rotate-bit-field . g$8255$f3xia)
        (bitwise-reverse-bit-field . g$8256$f3xia)
        (bitwise-length . g$8245$f3xia)
        (bitwise-if . g$8248$f3xia)
        (bitwise-first-bit-set . g$8246$f3xia)
        (bitwise-copy-bit-field . g$8251$f3xia)
        (bitwise-copy-bit . g$8249$f3xia)
        (bitwise-bit-set? . g$8247$f3xia)
        (bitwise-bit-field . g$8250$f3xia)
        (bitwise-bit-count . g$8244$f3xia)
        (bitwise-xor . g$8243$f3xia)
        (bitwise-ior . g$8242$f3xia)
        (bitwise-and . g$8241$f3xia)
        (bitwise-not . g$8240$f3xia)
        (bitwise-arithmetic-shift-right . g$8254$f3xia)
        (bitwise-arithmetic-shift-left . g$8253$f3xia)
        (bitwise-arithmetic-shift . g$8252$f3xia)
        (zero? . g$7736$f3xia)
        (vector? . g$6989$f3xia)
        (vector-set! . g$7021$f3xia)
        (vector-ref . g$7020$f3xia)
        (vector-map . g$7088$f3xia)
        (vector-length . g$7023$f3xia)
        (vector-for-each . g$7089$f3xia)
        (vector-fill! . g$7024$f3xia)
        (vector->list . g$7025$f3xia)
        (vector . g$13902$f3xia)
        (values . g$13901$f3xia)
        (truncate . g$7788$f3xia)
        (tan . g$7780$f3xia)
        (symbol? . g$6991$f3xia)
        (symbol=? . g$7073$f3xia)
        (symbol->string . g$7011$f3xia)
        (substring . g$7008$f3xia)
        (string? . g$6987$f3xia)
        (string>? . g$7070$f3xia)
        (string>=? . g$7072$f3xia)
        (string=? . g$7068$f3xia)
        (string<? . g$7069$f3xia)
        (string<=? . g$7071$f3xia)
        (string-ref . g$7000$f3xia)
        (string-length . g$7003$f3xia)
        (string-for-each . g$7090$f3xia)
        (string-copy . g$7007$f3xia)
        (string-append . g$7009$f3xia)
        (string->symbol . g$7012$f3xia)
        (string->number . g$13900$f3xia)
        (string->list . g$7006$f3xia)
        (string . g$7005$f3xia)
        (sqrt . g$7790$f3xia)
        (sin . g$7774$f3xia)
        (round . g$7789$f3xia)
        (reverse . g$7027$f3xia)
        (real? . g$7730$f3xia)
        (real-valued? . g$7733$f3xia)
        (real-part . g$7767$f3xia)
        (rationalize . g$7085$f3xia)
        (rational? . g$7731$f3xia)
        (rational-valued? . g$7734$f3xia)
        (procedure? . g$6993$f3xia)
        (positive? . g$7737$f3xia)
        (pair? . g$13899$f3xia)
        (odd? . g$7057$f3xia)
        (numerator . g$7765$f3xia)
        (number? . g$7723$f3xia)
        (number->string . g$7744$f3xia)
        (null? . g$13898$f3xia)
        (not . g$13897$f3xia)
        (negative? . g$7738$f3xia)
        (nan? . g$7724$f3xia)
        (min . g$7059$f3xia)
        (max . g$7058$f3xia)
        (map . g$6815$f3xia)
        (make-vector . g$7022$f3xia)
        (make-string . g$6999$f3xia)
        (make-rectangular . g$7760$f3xia)
        (make-polar . g$7761$f3xia)
        (magnitude . g$7763$f3xia)
        (log . g$7783$f3xia)
        (list? . g$6810$f3xia)
        (list-tail . g$6791$f3xia)
        (list-ref . g$6792$f3xia)
        (list->vector . g$7018$f3xia)
        (list->string . g$7019$f3xia)
        (list . g$13896$f3xia)
        (length . g$6812$f3xia)
        (lcm . g$7061$f3xia)
        (integer? . g$7732$f3xia)
        (integer-valued? . g$7735$f3xia)
        (integer->char . g$6998$f3xia)
        (infinite? . g$7726$f3xia)
        (inexact? . g$7728$f3xia)
        (inexact . g$7739$f3xia)
        (imag-part . g$7768$f3xia)
        (gcd . g$7060$f3xia)
        (for-each . g$6816$f3xia)
        (floor . g$7786$f3xia)
        (finite? . g$7725$f3xia)
        (expt . g$7792$f3xia)
        (exp . g$7773$f3xia)
        (exact? . g$7727$f3xia)
        (exact-integer-sqrt . g$7791$f3xia)
        (exact . g$7740$f3xia)
        (even? . g$7056$f3xia)
        (error . g$5586$f3xia)
        (eqv? . g$13895$f3xia)
        (equal? . g$9203$f3xia)
        (eq? . g$13894$f3xia)
        (dynamic-wind . g$13893$f3xia)
        (div0-and-mod0 . g$7017$f3xia)
        (mod0 . g$7015$f3xia)
        (div0 . g$7013$f3xia)
        (div-and-mod . g$7016$f3xia)
        (mod . g$7014$f3xia)
        (div . g$7784$f3xia)
        (denominator . g$7766$f3xia)
        (cos . g$7777$f3xia)
        (cons . g$13892$f3xia)
        (complex? . g$7729$f3xia)
        (char? . g$6988$f3xia)
        (char>? . g$7082$f3xia)
        (char>=? . g$7084$f3xia)
        (char=? . g$7080$f3xia)
        (char<? . g$7081$f3xia)
        (char<=? . g$7083$f3xia)
        (char->integer . g$6997$f3xia)
        (ceiling . g$7787$f3xia)
        (call-with-values . g$13891$f3xia)
        (call/cc . g$13890$f3xia)
        (call-with-current-continuation . g$13889$f3xia)
        (cddddr . g$7055$f3xia)
        (cdddar . g$7054$f3xia)
        (cddadr . g$7053$f3xia)
        (cddaar . g$7052$f3xia)
        (cdaddr . g$7051$f3xia)
        (cdadar . g$7050$f3xia)
        (cdaadr . g$7049$f3xia)
        (cdaaar . g$7048$f3xia)
        (cadddr . g$7047$f3xia)
        (caddar . g$7046$f3xia)
        (cadadr . g$7045$f3xia)
        (cadaar . g$7044$f3xia)
        (caaddr . g$7043$f3xia)
        (caadar . g$7042$f3xia)
        (caaadr . g$7041$f3xia)
        (caaaar . g$7040$f3xia)
        (cdddr . g$7039$f3xia)
        (cddar . g$7038$f3xia)
        (cdadr . g$7037$f3xia)
        (cdaar . g$7036$f3xia)
        (caddr . g$7035$f3xia)
        (cadar . g$7034$f3xia)
        (caadr . g$7033$f3xia)
        (caaar . g$7032$f3xia)
        (cddr . g$7031$f3xia)
        (cdar . g$7030$f3xia)
        (cadr . g$7029$f3xia)
        (caar . g$7028$f3xia)
        (cdr . g$13888$f3xia)
        (car . g$13887$f3xia)
        (boolean? . g$6992$f3xia)
        (boolean=? . g$7074$f3xia)
        (atan . g$7782$f3xia)
        (assertion-violation . g$5585$f3xia)
        (asin . g$7775$f3xia)
        (apply . g$13886$f3xia)
        (append . g$6821$f3xia)
        (angle . g$7762$f3xia)
        (acos . g$7778$f3xia)
        (abs . g$7785$f3xia)
        (/ . g$13885$f3xia)
        (* . g$13884$f3xia)
        (- . g$13883$f3xia)
        (+ . g$13882$f3xia)
        (>= . g$7759$f3xia)
        (> . g$7758$f3xia)
        (= . g$7755$f3xia)
        (<= . g$7757$f3xia)
        (< . g$7756$f3xia)
        (deserialize-port . g$13843$f3xia)
        (serialize-port . g$13842$f3xia)
        (enum-set? . g$9048$f3xia)
        (load/unload . g$13644$f3xia)
        (load/args . g$13643$f3xia)
        (printf . g$9157$f3xia)
        (fprintf . g$9158$f3xia)
        (format . g$9159$f3xia)
        (procedure-form . g$13841$f3xia)
        (procedure-environment . g$13840$f3xia)
        (procedure-name . g$13839$f3xia)
        (procedure-arity . g$13838$f3xia)
        (gc-collect . g$13837$f3xia)
        (typeof . g$13836$f3xia)
        (clr-type? . g$13835$f3xia)
        (get-clr-type . g$13834$f3xia)
        (vector-append . g$13832$f3xia)
        (vector-filter . g$13831$f3xia)
        (vector-reverse! . g$13830$f3xia)
        (vector-contains? . g$13829$f3xia)
        (vector-index-of . g$13828$f3xia)
        (vector-copy . g$13827$f3xia)
        (vector-binary-search . g$13826$f3xia)
        (string-ci-compare . g$13825$f3xia)
        (string-compare . g$13824$f3xia)
        (string-format . g$13823$f3xia)
        (trace-printer . g$13638$f3xia)
        (time-it . g$13821$f3xia)
        (make-parameter . g$9282$f3xia)
        (open-tcp-input/output-port . g$13818$f3xia)
        (hashtable-for-each . g$13817$f3xia)
        (hashtable-map . g$13816$f3xia)
        (environment-bindings . g$10591$f3xia)
        (environment-symbols . g$10594$f3xia)
        (interaction-environment-symbols . g$10590$f3xia)
        (optimization-level . g$13815$f3xia)
        (library-path . g$9920$f3xia)
        (make-compile-time-value . g$10299$f3xia)
        (expand->core . g$10600$f3xia)
        (expand . g$10598$f3xia)
        (emacs-mode? . g$13641$f3xia)
        (syntax-transpose . g$10537$f3xia)
        (convert->cps . g$9601$f3xia)
        (condition-stacktrace . g$5321$f3xia)
        (stacktrace-condition? . g$5320$f3xia)
        (stacktrace-enable? . g$13639$f3xia)
        (make-stacktrace-condition . g$5318$f3xia)
        (condition-where . g$5306$f3xia)
        (where-condition? . g$5305$f3xia)
        (make-where-condition . g$5303$f3xia)
        (installed-libraries . g$9941$f3xia)
        (uninstall-library . g$9932$f3xia)
        (pretty-gensyms . g$9365$f3xia)
        (pretty-width . g$9362$f3xia)
        (pretty-print . g$9367$f3xia)
        (pointer+ . g$13808$f3xia)
        (&stacktrace . g$13807$f3xia)
        (&where . g$13806$f3xia)
        (&no-nans . g$13805$f3xia)
        (&no-infinities . g$13804$f3xia)
        (&i/o-encoding . g$13803$f3xia)
        (&i/o-decoding . g$13802$f3xia)
        (&i/o-port . g$13801$f3xia)
        (&i/o-file-does-not-exist . g$13800$f3xia)
        (&i/o-file-already-exists . g$13799$f3xia)
        (&i/o-file-is-read-only . g$13798$f3xia)
        (&i/o-file-protection . g$13797$f3xia)
        (&i/o-filename . g$13796$f3xia)
        (&i/o-invalid-position . g$13795$f3xia)
        (&i/o-write . g$13794$f3xia)
        (&i/o-read . g$13793$f3xia)
        (&i/o . g$13792$f3xia)
        (&non-continuable . g$13791$f3xia)
        (&undefined . g$13790$f3xia)
        (&syntax . g$13789$f3xia)
        (&lexical . g$13788$f3xia)
        (&implementation-restriction . g$13787$f3xia)
        (&who . g$13786$f3xia)
        (&irritants . g$13785$f3xia)
        (&assertion . g$13784$f3xia)
        (&violation . g$13783$f3xia)
        (&error . g$13782$f3xia)
        (&serious . g$13781$f3xia)
        (&warning . g$13780$f3xia)
        (&message . g$13779$f3xia)
        (&condition . g$13778$f3xia)
        (define-condition-type . g$13777$f3xia)
        (define-enumeration . g$13776$f3xia)
        (define-record-type . g$13775$f3xia)
        (parent-rtd . g$13774$f3xia)
        (nongenerative . g$13773$f3xia)
        (opaque . g$13772$f3xia)
        (sealed . g$13771$f3xia)
        (protocol . g$13770$f3xia)
        (parent . g$13769$f3xia)
        (immutable . g$13768$f3xia)
        (mutable . g$13767$f3xia)
        (fields . g$13766$f3xia)
        (error-handling-mode . g$13765$f3xia)
        (file-options . g$13764$f3xia)
        (buffer-mode . g$13763$f3xia)
        (eol-style . g$13762$f3xia)
        (guard . g$13761$f3xia)
        (trace-letrec-syntax . g$13760$f3xia)
        (trace-let-syntax . g$13759$f3xia)
        (trace-define-syntax . g$13758$f3xia)
        (trace-define . g$13757$f3xia)
        (trace-lambda . g$13756$f3xia)
        (unsyntax-splicing . g$13755$f3xia)
        (unsyntax . g$13754$f3xia)
        (unquote-splicing . g$13753$f3xia)
        (unquote . g$13752$f3xia)
        (_ . g$13751$f3xia)
        (else . g$13750$f3xia)
        (=> . g$13749$f3xia)
        (... . g$13748$f3xia)
        (assert . g$13747$f3xia)
        (endianness . g$13746$f3xia)
        (delay . g$13745$f3xia)
        (time . g$13744$f3xia)
        (or . g$13743$f3xia)
        (and . g$13742$f3xia)
        (do . g$13741$f3xia)
        (cond . g$13740$f3xia)
        (let* . g$13739$f3xia)
        (let . g$13738$f3xia)
        (identifier-syntax . g$13737$f3xia)
        (with-syntax . g$13736$f3xia)
        (quasisyntax . g$13735$f3xia)
        (quasiquote . g$13734$f3xia)
        (syntax-rules . g$13733$f3xia)
        (include-into . g$13732$f3xia)
        (include . g$13731$f3xia)
        (let-values . g$13729$f3xia)
        (let*-values . g$13728$f3xia)
        (record-constructor-descriptor . g$13727$f3xia)
        (record-type-descriptor . g$13726$f3xia)
        (fluid-let-syntax . g$13725$f3xia)
        (case . g$13724$f3xia)
        (parameterize . g$13723$f3xia)
        (unless . g$13722$f3xia)
        (when . g$13721$f3xia)
        (if . g$13720$f3xia)
        (letrec* . g$13719$f3xia)
        (letrec . g$13718$f3xia)
        (case-lambda . g$13716$f3xia)
        (lambda . g$13715$f3xia)
        (syntax . g$13714$f3xia)
        (syntax-case . g$13713$f3xia)
        (quote . g$13712$f3xia)
        (letrec-syntax . g$13710$f3xia)
        (let-syntax . g$13709$f3xia)
        (set! . g$13708$f3xia)
        (export . g$13707$f3xia)
        (import . g$13706$f3xia)
        (library . g$13705$f3xia)
        (begin . g$13704$f3xia)
        (module . g$13703$f3xia)
        (define-syntax . g$13702$f3xia)
        (define . g$13701$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14042$f3xia
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$13819$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$20513$f3xia
      'g$14043$f3xia
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$14039$f3xia)
        (annotation-source . g$14038$f3xia)
        (annotation-expression . g$14037$f3xia)
        (annotation? . g$14036$f3xia)
        (read-annotated . g$14035$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$20513$f3xia
      'g$14044$f3xia
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$14007$f3xia)
        (serialize-library . g$14006$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$20513$f3xia
      'g$14045$f3xia
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((string-normalize . g$14005$f3xia)
        (variable-transformer-procedure . g$10301$f3xia)
        (variable-transformer? . g$10300$f3xia)
        (eqv-hash . g$13845$f3xia)
        (reverse! . g$13844$f3xia)
        (make-promise . g$8059$f3xia)
        (format . g$9159$f3xia)
        (get-command-line . g$13833$f3xia)
        (make-traced-procedure . g$13822$f3xia)
        (make-traced-macro . g$9179$f3xia)
        (assertion-error . g$10614$f3xia)
        (library-locator . g$13820$f3xia)
        (get-library-paths . g$13819$f3xia)
        (library-path . g$9920$f3xia)
        (inexact=? . g$13814$f3xia)
        (bignum-sqrt-exact . g$13813$f3xia)
        (bignum-sqrt . g$13812$f3xia)
        (flonum->string . g$13811$f3xia)
        (inexact-compare . g$13810$f3xia)
        (exact-compare . g$13809$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$20513$f3xia
      'g$14046$f3xia
      '(ironscheme unsafe)
      '()
      '()
      '()
      '()
      '(($bytevector-set! . g$13881$f3xia)
        ($bytevector-ref . g$13880$f3xia)
        ($fl>=? . g$13879$f3xia)
        ($fl>? . g$13878$f3xia)
        ($fl<=? . g$13877$f3xia)
        ($fl<? . g$13876$f3xia)
        ($fl- . g$13875$f3xia)
        ($fl/ . g$13874$f3xia)
        ($fl* . g$13873$f3xia)
        ($fl+ . g$13872$f3xia)
        ($fl=? . g$13871$f3xia)
        ($try . g$13870$f3xia)
        ($fxarithmetic-shift-right . g$13869$f3xia)
        ($fxarithmetic-shift-left . g$13868$f3xia)
        ($$fx- . g$13867$f3xia)
        ($$fx* . g$13866$f3xia)
        ($$fx+ . g$13865$f3xia)
        ($fxnot . g$13864$f3xia)
        ($fxxor . g$13863$f3xia)
        ($fxior . g$13862$f3xia)
        ($fxand . g$13861$f3xia)
        ($fx>=? . g$13860$f3xia)
        ($fx>? . g$13859$f3xia)
        ($fx<=? . g$13858$f3xia)
        ($fx<? . g$13857$f3xia)
        ($fx- . g$13856$f3xia)
        ($fxmod0 . g$13855$f3xia)
        ($fxdiv0 . g$13854$f3xia)
        ($fx* . g$13853$f3xia)
        ($fx+ . g$13852$f3xia)
        ($fx=? . g$13851$f3xia)
        ($vector-set! . g$13850$f3xia)
        ($vector-ref . g$13849$f3xia)
        ($cdr . g$13848$f3xia)
        ($car . g$13847$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$20513$f3xia
      'g$14047$f3xia
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$13846$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14048$f3xia
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((pinvoke-call-internal . g$14029$f3xia)
        (ffi-callback-internal . g$14028$f3xia)
        (ffi-callout-internal . g$14027$f3xia)
        (define-clr-class-internal . g$14026$f3xia)
        (clr-field-set!-internal . g$14025$f3xia)
        (clr-field-get-internal . g$14024$f3xia)
        (clr-cast-internal . g$14023$f3xia)
        (clr-call-internal . g$14022$f3xia)
        (clr-new-internal . g$14021$f3xia)
        (clr-new-array-internal . g$14020$f3xia)
        (clr-is-internal . g$14019$f3xia)
        (clr-reference-internal . g$14018$f3xia)
        (clr-using-internal . g$14017$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14049$f3xia
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$13753$f3xia)
        (unquote . g$13752$f3xia)
        (else . g$13750$f3xia)
        (=> . g$13749$f3xia)
        (delay . g$13745$f3xia)
        (or . g$13743$f3xia)
        (and . g$13742$f3xia)
        (do . g$13741$f3xia)
        (cond . g$13740$f3xia)
        (let* . g$13739$f3xia)
        (let . g$13738$f3xia)
        (quasiquote . g$13734$f3xia)
        (syntax-rules . g$13733$f3xia)
        (case . g$13724$f3xia)
        (if . g$13720$f3xia)
        (letrec . g$13718$f3xia)
        (lambda . g$13715$f3xia)
        (quote . g$13712$f3xia)
        (letrec-syntax . g$13710$f3xia)
        (let-syntax . g$13709$f3xia)
        (set! . g$13708$f3xia)
        (begin . g$13704$f3xia)
        (define-syntax . g$13702$f3xia)
        (define . g$13701$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$20513$f3xia
      'g$14050$f3xia
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((char-ready? . g$14004$f3xia)
        (string-ci>? . g$8134$f3xia)
        (string-ci>=? . g$8136$f3xia)
        (string-ci=? . g$8132$f3xia)
        (string-ci<? . g$8133$f3xia)
        (string-ci<=? . g$8135$f3xia)
        (char-whitespace? . g$8114$f3xia)
        (char-upper-case? . g$8115$f3xia)
        (char-numeric? . g$8113$f3xia)
        (char-lower-case? . g$8116$f3xia)
        (char-upcase . g$8108$f3xia)
        (char-downcase . g$8109$f3xia)
        (char-ci>? . g$8146$f3xia)
        (char-ci>=? . g$8148$f3xia)
        (char-ci=? . g$8144$f3xia)
        (char-ci<? . g$8145$f3xia)
        (char-ci<=? . g$8147$f3xia)
        (char-alphabetic? . g$8112$f3xia)
        (call-with-output-file . g$9010$f3xia)
        (call-with-input-file . g$9009$f3xia)
        (write-char . g$9001$f3xia)
        (write . g$13976$f3xia)
        (with-output-to-file . g$9008$f3xia)
        (with-input-from-file . g$9007$f3xia)
        (read-char . g$9000$f3xia)
        (read . g$13975$f3xia)
        (peek-char . g$8999$f3xia)
        (open-output-file . g$13974$f3xia)
        (open-input-file . g$13973$f3xia)
        (newline . g$9011$f3xia)
        (display . g$13972$f3xia)
        (close-output-port . g$13971$f3xia)
        (close-input-port . g$13970$f3xia)
        (eof-object? . g$13969$f3xia)
        (current-error-port . g$13967$f3xia)
        (current-output-port . g$13966$f3xia)
        (current-input-port . g$13965$f3xia)
        (output-port? . g$13964$f3xia)
        (input-port? . g$13963$f3xia)
        (scheme-report-environment . g$10597$f3xia)
        (quotient . g$8056$f3xia)
        (null-environment . g$10596$f3xia)
        (remainder . g$8057$f3xia)
        (modulo . g$8058$f3xia)
        (inexact->exact . g$8053$f3xia)
        (force . g$8060$f3xia)
        (exact->inexact . g$8054$f3xia)
        (string-fill! . g$7002$f3xia)
        (string-set! . g$7001$f3xia)
        (set-cdr! . g$8045$f3xia)
        (set-car! . g$8044$f3xia)
        (memv . g$6804$f3xia)
        (memq . g$6803$f3xia)
        (member . g$6805$f3xia)
        (assv . g$6800$f3xia)
        (assq . g$6799$f3xia)
        (assoc . g$6801$f3xia)
        (eval . g$10599$f3xia)
        (zero? . g$7736$f3xia)
        (vector? . g$6989$f3xia)
        (vector-set! . g$7021$f3xia)
        (vector-ref . g$7020$f3xia)
        (vector-length . g$7023$f3xia)
        (vector-fill! . g$7024$f3xia)
        (vector->list . g$7025$f3xia)
        (vector . g$13902$f3xia)
        (values . g$13901$f3xia)
        (truncate . g$7788$f3xia)
        (tan . g$7780$f3xia)
        (symbol? . g$6991$f3xia)
        (symbol->string . g$7011$f3xia)
        (substring . g$7008$f3xia)
        (string? . g$6987$f3xia)
        (string>? . g$7070$f3xia)
        (string>=? . g$7072$f3xia)
        (string=? . g$7068$f3xia)
        (string<? . g$7069$f3xia)
        (string<=? . g$7071$f3xia)
        (string-ref . g$7000$f3xia)
        (string-length . g$7003$f3xia)
        (string-copy . g$7007$f3xia)
        (string-append . g$7009$f3xia)
        (string->symbol . g$7012$f3xia)
        (string->number . g$13900$f3xia)
        (string->list . g$7006$f3xia)
        (string . g$7005$f3xia)
        (sqrt . g$7790$f3xia)
        (sin . g$7774$f3xia)
        (round . g$7789$f3xia)
        (reverse . g$7027$f3xia)
        (real? . g$7730$f3xia)
        (real-part . g$7767$f3xia)
        (rationalize . g$7085$f3xia)
        (rational? . g$7731$f3xia)
        (procedure? . g$6993$f3xia)
        (positive? . g$7737$f3xia)
        (pair? . g$13899$f3xia)
        (odd? . g$7057$f3xia)
        (numerator . g$7765$f3xia)
        (number? . g$7723$f3xia)
        (number->string . g$7744$f3xia)
        (null? . g$13898$f3xia)
        (not . g$13897$f3xia)
        (negative? . g$7738$f3xia)
        (min . g$7059$f3xia)
        (max . g$7058$f3xia)
        (map . g$6815$f3xia)
        (make-vector . g$7022$f3xia)
        (make-string . g$6999$f3xia)
        (make-rectangular . g$7760$f3xia)
        (make-polar . g$7761$f3xia)
        (magnitude . g$7763$f3xia)
        (log . g$7783$f3xia)
        (list? . g$6810$f3xia)
        (list-tail . g$6791$f3xia)
        (list-ref . g$6792$f3xia)
        (list->vector . g$7018$f3xia)
        (list->string . g$7019$f3xia)
        (list . g$13896$f3xia)
        (length . g$6812$f3xia)
        (lcm . g$7061$f3xia)
        (integer? . g$7732$f3xia)
        (integer->char . g$6998$f3xia)
        (inexact? . g$7728$f3xia)
        (imag-part . g$7768$f3xia)
        (gcd . g$7060$f3xia)
        (for-each . g$6816$f3xia)
        (floor . g$7786$f3xia)
        (expt . g$7792$f3xia)
        (exp . g$7773$f3xia)
        (exact? . g$7727$f3xia)
        (even? . g$7056$f3xia)
        (eqv? . g$13895$f3xia)
        (equal? . g$9203$f3xia)
        (eq? . g$13894$f3xia)
        (dynamic-wind . g$13893$f3xia)
        (denominator . g$7766$f3xia)
        (cos . g$7777$f3xia)
        (cons . g$13892$f3xia)
        (complex? . g$7729$f3xia)
        (char? . g$6988$f3xia)
        (char>? . g$7082$f3xia)
        (char>=? . g$7084$f3xia)
        (char=? . g$7080$f3xia)
        (char<? . g$7081$f3xia)
        (char<=? . g$7083$f3xia)
        (char->integer . g$6997$f3xia)
        (ceiling . g$7787$f3xia)
        (call-with-values . g$13891$f3xia)
        (call-with-current-continuation . g$13889$f3xia)
        (cddddr . g$7055$f3xia)
        (cdddar . g$7054$f3xia)
        (cddadr . g$7053$f3xia)
        (cddaar . g$7052$f3xia)
        (cdaddr . g$7051$f3xia)
        (cdadar . g$7050$f3xia)
        (cdaadr . g$7049$f3xia)
        (cdaaar . g$7048$f3xia)
        (cadddr . g$7047$f3xia)
        (caddar . g$7046$f3xia)
        (cadadr . g$7045$f3xia)
        (cadaar . g$7044$f3xia)
        (caaddr . g$7043$f3xia)
        (caadar . g$7042$f3xia)
        (caaadr . g$7041$f3xia)
        (caaaar . g$7040$f3xia)
        (cdddr . g$7039$f3xia)
        (cddar . g$7038$f3xia)
        (cdadr . g$7037$f3xia)
        (cdaar . g$7036$f3xia)
        (caddr . g$7035$f3xia)
        (cadar . g$7034$f3xia)
        (caadr . g$7033$f3xia)
        (caaar . g$7032$f3xia)
        (cddr . g$7031$f3xia)
        (cdar . g$7030$f3xia)
        (cadr . g$7029$f3xia)
        (caar . g$7028$f3xia)
        (cdr . g$13888$f3xia)
        (car . g$13887$f3xia)
        (boolean? . g$6992$f3xia)
        (atan . g$7782$f3xia)
        (asin . g$7775$f3xia)
        (apply . g$13886$f3xia)
        (append . g$6821$f3xia)
        (angle . g$7762$f3xia)
        (acos . g$7778$f3xia)
        (abs . g$7785$f3xia)
        (/ . g$13885$f3xia)
        (* . g$13884$f3xia)
        (- . g$13883$f3xia)
        (+ . g$13882$f3xia)
        (>= . g$7759$f3xia)
        (> . g$7758$f3xia)
        (= . g$7755$f3xia)
        (<= . g$7757$f3xia)
        (< . g$7756$f3xia)
        (unquote-splicing . g$13753$f3xia)
        (unquote . g$13752$f3xia)
        (else . g$13750$f3xia)
        (=> . g$13749$f3xia)
        (... . g$13748$f3xia)
        (delay . g$13745$f3xia)
        (or . g$13743$f3xia)
        (and . g$13742$f3xia)
        (do . g$13741$f3xia)
        (cond . g$13740$f3xia)
        (let* . g$13739$f3xia)
        (let . g$13738$f3xia)
        (quasiquote . g$13734$f3xia)
        (syntax-rules . g$13733$f3xia)
        (case . g$13724$f3xia)
        (if . g$13720$f3xia)
        (letrec . g$13718$f3xia)
        (lambda . g$13715$f3xia)
        (quote . g$13712$f3xia)
        (letrec-syntax . g$13710$f3xia)
        (let-syntax . g$13709$f3xia)
        (set! . g$13708$f3xia)
        (begin . g$13704$f3xia)
        (define-syntax . g$13702$f3xia)
        (define . g$13701$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$20513$f3xia
      'g$14051$f3xia
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$8149$f3xia)
        (string-titlecase . g$8137$f3xia)
        (string-normalize-nfkd . g$8158$f3xia)
        (string-normalize-nfkc . g$8157$f3xia)
        (string-normalize-nfd . g$8156$f3xia)
        (string-normalize-nfc . g$8155$f3xia)
        (string-foldcase . g$8138$f3xia)
        (string-downcase . g$14003$f3xia)
        (string-ci>? . g$8134$f3xia)
        (string-ci>=? . g$8136$f3xia)
        (string-ci=? . g$8132$f3xia)
        (string-ci<? . g$8133$f3xia)
        (string-ci<=? . g$8135$f3xia)
        (char-whitespace? . g$8114$f3xia)
        (char-upper-case? . g$8115$f3xia)
        (char-title-case? . g$8117$f3xia)
        (char-numeric? . g$8113$f3xia)
        (char-lower-case? . g$8116$f3xia)
        (char-general-category . g$8118$f3xia)
        (char-upcase . g$8108$f3xia)
        (char-titlecase . g$8110$f3xia)
        (char-foldcase . g$8111$f3xia)
        (char-downcase . g$8109$f3xia)
        (char-ci>? . g$8146$f3xia)
        (char-ci>=? . g$8148$f3xia)
        (char-ci=? . g$8144$f3xia)
        (char-ci<? . g$8145$f3xia)
        (char-ci<=? . g$8147$f3xia)
        (char-alphabetic? . g$8112$f3xia)
        (make-variable-transformer . g$10298$f3xia)
        (identifier? . g$10619$f3xia)
        (generate-temporaries . g$10607$f3xia)
        (free-identifier=? . g$10608$f3xia)
        (syntax->datum . g$10621$f3xia)
        (datum->syntax . g$10620$f3xia)
        (bound-identifier=? . g$10609$f3xia)
        (record-type-descriptor? . g$14002$f3xia)
        (record-predicate . g$14001$f3xia)
        (record-mutator . g$14000$f3xia)
        (record-constructor . g$13999$f3xia)
        (record-accessor . g$13998$f3xia)
        (make-record-type-descriptor . g$13997$f3xia)
        (make-record-constructor-descriptor . g$13996$f3xia)
        (record? . g$13995$f3xia)
        (record-type-uid . g$13994$f3xia)
        (record-type-sealed? . g$13993$f3xia)
        (record-type-parent . g$13992$f3xia)
        (record-type-opaque? . g$13991$f3xia)
        (record-type-name . g$13990$f3xia)
        (record-type-generative? . g$13989$f3xia)
        (record-type-field-names . g$13988$f3xia)
        (record-rtd . g$13987$f3xia)
        (record-field-mutable? . g$13986$f3xia)
        (delete-file . g$7370$f3xia)
        (file-exists? . g$7369$f3xia)
        (vector-sort! . g$13985$f3xia)
        (vector-sort . g$8078$f3xia)
        (list-sort . g$8077$f3xia)
        (symbol-hash . g$7340$f3xia)
        (string-ci-hash . g$7339$f3xia)
        (string-hash . g$7338$f3xia)
        (equal-hash . g$13984$f3xia)
        (hashtable-equivalence-function . g$13983$f3xia)
        (make-hashtable . g$13982$f3xia)
        (hashtable-hash-function . g$13981$f3xia)
        (make-eqv-hashtable . g$7330$f3xia)
        (make-eq-hashtable . g$7329$f3xia)
        (hashtable? . g$7328$f3xia)
        (hashtable-update! . g$7336$f3xia)
        (hashtable-size . g$7331$f3xia)
        (hashtable-set! . g$7333$f3xia)
        (hashtable-ref . g$7332$f3xia)
        (hashtable-mutable? . g$13980$f3xia)
        (hashtable-keys . g$13979$f3xia)
        (hashtable-entries . g$13978$f3xia)
        (hashtable-delete! . g$7334$f3xia)
        (hashtable-copy . g$13977$f3xia)
        (hashtable-contains? . g$7335$f3xia)
        (hashtable-clear! . g$7337$f3xia)
        (call-with-output-file . g$9010$f3xia)
        (call-with-input-file . g$9009$f3xia)
        (write-char . g$9001$f3xia)
        (write . g$13976$f3xia)
        (with-output-to-file . g$9008$f3xia)
        (with-input-from-file . g$9007$f3xia)
        (read-char . g$9000$f3xia)
        (read . g$13975$f3xia)
        (peek-char . g$8999$f3xia)
        (open-output-file . g$13974$f3xia)
        (open-input-file . g$13973$f3xia)
        (newline . g$9011$f3xia)
        (display . g$13972$f3xia)
        (close-output-port . g$13971$f3xia)
        (close-input-port . g$13970$f3xia)
        (eof-object? . g$13969$f3xia)
        (eof-object . g$13968$f3xia)
        (current-error-port . g$13967$f3xia)
        (current-output-port . g$13966$f3xia)
        (current-input-port . g$13965$f3xia)
        (output-port? . g$13964$f3xia)
        (input-port? . g$13963$f3xia)
        (utf-8-codec . g$13962$f3xia)
        (utf-16-codec . g$13961$f3xia)
        (transcoder-error-handling-mode . g$13960$f3xia)
        (transcoder-eol-style . g$13959$f3xia)
        (transcoder-codec . g$13958$f3xia)
        (transcoded-port . g$13957$f3xia)
        (textual-port? . g$13956$f3xia)
        (string->bytevector . g$13955$f3xia)
        (standard-output-port . g$8975$f3xia)
        (standard-input-port . g$8974$f3xia)
        (standard-error-port . g$8973$f3xia)
        (set-port-position! . g$13954$f3xia)
        (put-u8 . g$13953$f3xia)
        (put-string . g$13952$f3xia)
        (put-datum . g$8978$f3xia)
        (put-char . g$13951$f3xia)
        (put-bytevector . g$13950$f3xia)
        (port? . g$8983$f3xia)
        (port-transcoder . g$13949$f3xia)
        (port-position . g$13948$f3xia)
        (port-has-set-port-position!? . g$13947$f3xia)
        (port-has-port-position? . g$13946$f3xia)
        (port-eof? . g$13945$f3xia)
        (output-port-buffer-mode . g$13944$f3xia)
        (open-string-output-port . g$8982$f3xia)
        (open-string-input-port . g$13943$f3xia)
        (open-file-output-port . g$13942$f3xia)
        (open-file-input/output-port . g$13941$f3xia)
        (open-file-input-port . g$13940$f3xia)
        (open-bytevector-output-port . g$13939$f3xia)
        (open-bytevector-input-port . g$13938$f3xia)
        (native-transcoder . g$13937$f3xia)
        (native-eol-style . g$8976$f3xia)
        (make-transcoder . g$13936$f3xia)
        (latin-1-codec . g$13935$f3xia)
        (make-i/o-write-error . g$5428$f3xia)
        (make-i/o-read-error . g$5415$f3xia)
        (make-i/o-port-error . g$5523$f3xia)
        (make-i/o-invalid-position-error . g$5441$f3xia)
        (make-i/o-filename-error . g$5456$f3xia)
        (make-i/o-file-protection-error . g$5471$f3xia)
        (make-i/o-file-is-read-only-error . g$5484$f3xia)
        (make-i/o-file-does-not-exist-error . g$5510$f3xia)
        (make-i/o-file-already-exists-error . g$5497$f3xia)
        (make-i/o-error . g$5402$f3xia)
        (make-i/o-encoding-error . g$5551$f3xia)
        (make-i/o-decoding-error . g$5538$f3xia)
        (make-custom-textual-output-port . g$13934$f3xia)
        (make-custom-textual-input/output-port . g$13933$f3xia)
        (make-custom-textual-input-port . g$13932$f3xia)
        (make-custom-binary-output-port . g$13931$f3xia)
        (make-custom-binary-input/output-port . g$13930$f3xia)
        (make-custom-binary-input-port . g$13929$f3xia)
        (make-bytevector . g$7389$f3xia)
        (lookahead-u8 . g$13928$f3xia)
        (lookahead-char . g$13927$f3xia)
        (i/o-write-error? . g$5429$f3xia)
        (i/o-read-error? . g$5416$f3xia)
        (i/o-port-error? . g$5525$f3xia)
        (i/o-invalid-position-error? . g$5443$f3xia)
        (i/o-error-position . g$5444$f3xia)
        (i/o-filename-error? . g$5458$f3xia)
        (i/o-file-protection-error? . g$5472$f3xia)
        (i/o-file-is-read-only-error? . g$5485$f3xia)
        (i/o-file-does-not-exist-error? . g$5511$f3xia)
        (i/o-file-already-exists-error? . g$5498$f3xia)
        (i/o-error? . g$5403$f3xia)
        (i/o-error-port . g$5526$f3xia)
        (i/o-error-filename . g$5459$f3xia)
        (i/o-encoding-error? . g$5553$f3xia)
        (i/o-encoding-error-char . g$5554$f3xia)
        (i/o-decoding-error? . g$5539$f3xia)
        (get-u8 . g$13926$f3xia)
        (get-string-n! . g$13925$f3xia)
        (get-string-n . g$13924$f3xia)
        (get-string-all . g$13923$f3xia)
        (get-line . g$13922$f3xia)
        (get-datum . g$8979$f3xia)
        (get-char . g$13921$f3xia)
        (get-bytevector-some . g$13920$f3xia)
        (get-bytevector-n! . g$13919$f3xia)
        (get-bytevector-n . g$13918$f3xia)
        (get-bytevector-all . g$13917$f3xia)
        (flush-output-port . g$13916$f3xia)
        (close-port . g$13915$f3xia)
        (call-with-string-output-port . g$8984$f3xia)
        (call-with-port . g$8985$f3xia)
        (call-with-bytevector-output-port . g$13914$f3xia)
        (bytevector->string . g$13913$f3xia)
        (buffer-mode? . g$8977$f3xia)
        (binary-port? . g$13912$f3xia)
        (exit . g$13911$f3xia)
        (command-line . g$13640$f3xia)
        (remove . g$6824$f3xia)
        (remv . g$6825$f3xia)
        (remp . g$6797$f3xia)
        (remq . g$6826$f3xia)
        (partition . g$6796$f3xia)
        (memv . g$6804$f3xia)
        (memq . g$6803$f3xia)
        (memp . g$6806$f3xia)
        (member . g$6805$f3xia)
        (exists . g$6814$f3xia)
        (for-all . g$6813$f3xia)
        (fold-right . g$6823$f3xia)
        (fold-left . g$6822$f3xia)
        (find . g$6795$f3xia)
        (filter . g$6798$f3xia)
        (cons* . g$6817$f3xia)
        (assv . g$6800$f3xia)
        (assq . g$6799$f3xia)
        (assp . g$6802$f3xia)
        (assoc . g$6801$f3xia)
        (with-exception-handler . g$13910$f3xia)
        (raise-continuable . g$13909$f3xia)
        (raise . g$13908$f3xia)
        (make-enumeration . g$9071$f3xia)
        (enum-set=? . g$9078$f3xia)
        (enum-set-universe . g$9072$f3xia)
        (enum-set-union . g$9079$f3xia)
        (enum-set-subset? . g$9077$f3xia)
        (enum-set-projection . g$9083$f3xia)
        (enum-set-member? . g$9076$f3xia)
        (enum-set-intersection . g$9080$f3xia)
        (enum-set-indexer . g$9073$f3xia)
        (enum-set-difference . g$9081$f3xia)
        (enum-set-constructor . g$9074$f3xia)
        (enum-set-complement . g$9082$f3xia)
        (enum-set->list . g$9075$f3xia)
        (who-condition? . g$5290$f3xia)
        (warning? . g$5209$f3xia)
        (violation? . g$5248$f3xia)
        (undefined-violation? . g$5390$f3xia)
        (syntax-violation? . g$5375$f3xia)
        (syntax-violation-subform . g$5377$f3xia)
        (syntax-violation-form . g$5376$f3xia)
        (syntax-violation . g$10618$f3xia)
        (simple-conditions . g$13907$f3xia)
        (serious-condition? . g$5222$f3xia)
        (non-continuable-violation? . g$5334$f3xia)
        (message-condition? . g$5195$f3xia)
        (make-who-condition . g$5288$f3xia)
        (make-warning . g$5208$f3xia)
        (make-violation . g$5247$f3xia)
        (make-undefined-violation . g$5389$f3xia)
        (make-syntax-violation . g$5372$f3xia)
        (make-serious-condition . g$5221$f3xia)
        (make-non-continuable-violation . g$5333$f3xia)
        (make-message-condition . g$5193$f3xia)
        (make-lexical-violation . g$5359$f3xia)
        (make-irritants-condition . g$5273$f3xia)
        (make-implementation-restriction-violation . g$5346$f3xia)
        (make-error . g$5234$f3xia)
        (make-assertion-violation . g$5260$f3xia)
        (lexical-violation? . g$5360$f3xia)
        (irritants-condition? . g$5275$f3xia)
        (implementation-restriction-violation? . g$5347$f3xia)
        (error? . g$5235$f3xia)
        (condition-who . g$5291$f3xia)
        (condition-predicate . g$13906$f3xia)
        (condition-message . g$5196$f3xia)
        (condition-irritants . g$5276$f3xia)
        (condition-accessor . g$13905$f3xia)
        (condition . g$13904$f3xia)
        (assertion-violation? . g$5261$f3xia)
        (condition? . g$13903$f3xia)
        (utf32->string . g$7411$f3xia)
        (utf16->string . g$7410$f3xia)
        (utf8->string . g$7408$f3xia)
        (uint-list->bytevector . g$7412$f3xia)
        (u8-list->bytevector . g$7400$f3xia)
        (string->utf8 . g$7405$f3xia)
        (string->utf32 . g$7407$f3xia)
        (string->utf16 . g$7406$f3xia)
        (sint-list->bytevector . g$7413$f3xia)
        (native-endianness . g$7376$f3xia)
        (bytevector? . g$6990$f3xia)
        (bytevector=? . g$7391$f3xia)
        (bytevector-uint-set! . g$7403$f3xia)
        (bytevector-uint-ref . g$7401$f3xia)
        (bytevector-u8-set! . g$7396$f3xia)
        (bytevector-u8-ref . g$7395$f3xia)
        (bytevector-u64-set! . g$7441$f3xia)
        (bytevector-u64-ref . g$7437$f3xia)
        (bytevector-u64-native-set! . g$7443$f3xia)
        (bytevector-u64-native-ref . g$7439$f3xia)
        (bytevector-u32-set! . g$7433$f3xia)
        (bytevector-u32-ref . g$7429$f3xia)
        (bytevector-u32-native-set! . g$7435$f3xia)
        (bytevector-u32-native-ref . g$7431$f3xia)
        (bytevector-u16-set! . g$7425$f3xia)
        (bytevector-u16-ref . g$7421$f3xia)
        (bytevector-u16-native-set! . g$7427$f3xia)
        (bytevector-u16-native-ref . g$7423$f3xia)
        (bytevector-sint-set! . g$7404$f3xia)
        (bytevector-sint-ref . g$7402$f3xia)
        (bytevector-s8-set! . g$7398$f3xia)
        (bytevector-s8-ref . g$7397$f3xia)
        (bytevector-s64-set! . g$7442$f3xia)
        (bytevector-s64-ref . g$7438$f3xia)
        (bytevector-s64-native-set! . g$7444$f3xia)
        (bytevector-s64-native-ref . g$7440$f3xia)
        (bytevector-s32-set! . g$7434$f3xia)
        (bytevector-s32-ref . g$7430$f3xia)
        (bytevector-s32-native-set! . g$7436$f3xia)
        (bytevector-s32-native-ref . g$7432$f3xia)
        (bytevector-s16-set! . g$7426$f3xia)
        (bytevector-s16-ref . g$7422$f3xia)
        (bytevector-s16-native-set! . g$7428$f3xia)
        (bytevector-s16-native-ref . g$7424$f3xia)
        (bytevector-length . g$7390$f3xia)
        (bytevector-ieee-single-set! . g$7419$f3xia)
        (bytevector-ieee-single-ref . g$7417$f3xia)
        (bytevector-ieee-single-native-set! . g$7447$f3xia)
        (bytevector-ieee-single-native-ref . g$7445$f3xia)
        (bytevector-ieee-double-set! . g$7420$f3xia)
        (bytevector-ieee-double-ref . g$7418$f3xia)
        (bytevector-ieee-double-native-set! . g$7448$f3xia)
        (bytevector-ieee-double-native-ref . g$7446$f3xia)
        (bytevector-fill! . g$7392$f3xia)
        (bytevector-copy! . g$7393$f3xia)
        (bytevector-copy . g$7394$f3xia)
        (bytevector->uint-list . g$7414$f3xia)
        (bytevector->u8-list . g$7399$f3xia)
        (bytevector->sint-list . g$7415$f3xia)
        (no-nans-violation? . g$5580$f3xia)
        (no-infinities-violation? . g$5567$f3xia)
        (make-no-nans-violation . g$5579$f3xia)
        (make-no-infinities-violation . g$5566$f3xia)
        (real->flonum . g$7721$f3xia)
        (flzero? . g$8415$f3xia)
        (fltruncate . g$8410$f3xia)
        (fltan . g$8396$f3xia)
        (flsqrt . g$8401$f3xia)
        (flsin . g$8394$f3xia)
        (flround . g$8411$f3xia)
        (flpositive? . g$8413$f3xia)
        (flonum? . g$6995$f3xia)
        (flodd? . g$8417$f3xia)
        (flnumerator . g$8360$f3xia)
        (flnegative? . g$8414$f3xia)
        (flnan? . g$8393$f3xia)
        (flmod0 . g$8378$f3xia)
        (flmod . g$8377$f3xia)
        (flmin . g$8419$f3xia)
        (flmax . g$8418$f3xia)
        (fllog . g$8400$f3xia)
        (flinteger? . g$8386$f3xia)
        (flinfinite? . g$8392$f3xia)
        (flfloor . g$8409$f3xia)
        (flfinite? . g$8387$f3xia)
        (flexpt . g$8403$f3xia)
        (flexp . g$8402$f3xia)
        (fleven? . g$8416$f3xia)
        (fldiv0-and-mod0 . g$8385$f3xia)
        (fldiv0 . g$8372$f3xia)
        (fldiv-and-mod . g$8379$f3xia)
        (fldiv . g$8384$f3xia)
        (fldenominator . g$8359$f3xia)
        (flcos . g$8395$f3xia)
        (flceiling . g$8404$f3xia)
        (flatan . g$8399$f3xia)
        (flasin . g$8397$f3xia)
        (flacos . g$8398$f3xia)
        (flabs . g$8412$f3xia)
        (fl>? . g$8366$f3xia)
        (fl>=? . g$8367$f3xia)
        (fl=? . g$8363$f3xia)
        (fl<? . g$8364$f3xia)
        (fl<=? . g$8365$f3xia)
        (fl/ . g$8362$f3xia)
        (fl- . g$8361$f3xia)
        (fl+ . g$8357$f3xia)
        (fl* . g$8358$f3xia)
        (fixnum->flonum . g$7722$f3xia)
        (fxzero? . g$5924$f3xia)
        (fxxor . g$5887$f3xia)
        (fxrotate-bit-field . g$5962$f3xia)
        (fxreverse-bit-field . g$5963$f3xia)
        (fxpositive? . g$5914$f3xia)
        (fxodd? . g$5934$f3xia)
        (fxnot . g$5868$f3xia)
        (fxnegative? . g$5919$f3xia)
        (fxmod0 . g$5898$f3xia)
        (fxmod . g$5897$f3xia)
        (fxmin . g$5936$f3xia)
        (fxmax . g$5935$f3xia)
        (fxlength . g$5865$f3xia)
        (fxior . g$5886$f3xia)
        (fxif . g$5944$f3xia)
        (fxfirst-bit-set . g$5866$f3xia)
        (fxeven? . g$5929$f3xia)
        (fxdiv0-and-mod0 . g$5909$f3xia)
        (fxdiv0 . g$5904$f3xia)
        (fxdiv-and-mod . g$5899$f3xia)
        (fxdiv . g$5892$f3xia)
        (fxcopy-bit-field . g$5959$f3xia)
        (fxcopy-bit . g$5949$f3xia)
        (fxbit-set? . g$5867$f3xia)
        (fxbit-field . g$5954$f3xia)
        (fxbit-count . g$5860$f3xia)
        (fxarithmetic-shift-right . g$5961$f3xia)
        (fxarithmetic-shift-left . g$5960$f3xia)
        (fxarithmetic-shift . g$5855$f3xia)
        (fxand . g$5885$f3xia)
        (fx>? . g$5877$f3xia)
        (fx>=? . g$5878$f3xia)
        (fx=? . g$5874$f3xia)
        (fx<? . g$5875$f3xia)
        (fx<=? . g$5876$f3xia)
        (fx-/carry . g$5938$f3xia)
        (fx- . g$5849$f3xia)
        (fx+/carry . g$5939$f3xia)
        (fx+ . g$5847$f3xia)
        (fx*/carry . g$5937$f3xia)
        (fx* . g$5848$f3xia)
        (greatest-fixnum . g$5818$f3xia)
        (least-fixnum . g$5819$f3xia)
        (fixnum-width . g$6996$f3xia)
        (fixnum? . g$6994$f3xia)
        (bitwise-rotate-bit-field . g$8255$f3xia)
        (bitwise-reverse-bit-field . g$8256$f3xia)
        (bitwise-length . g$8245$f3xia)
        (bitwise-if . g$8248$f3xia)
        (bitwise-first-bit-set . g$8246$f3xia)
        (bitwise-copy-bit-field . g$8251$f3xia)
        (bitwise-copy-bit . g$8249$f3xia)
        (bitwise-bit-set? . g$8247$f3xia)
        (bitwise-bit-field . g$8250$f3xia)
        (bitwise-bit-count . g$8244$f3xia)
        (bitwise-xor . g$8243$f3xia)
        (bitwise-ior . g$8242$f3xia)
        (bitwise-and . g$8241$f3xia)
        (bitwise-not . g$8240$f3xia)
        (bitwise-arithmetic-shift-right . g$8254$f3xia)
        (bitwise-arithmetic-shift-left . g$8253$f3xia)
        (bitwise-arithmetic-shift . g$8252$f3xia)
        (zero? . g$7736$f3xia)
        (vector? . g$6989$f3xia)
        (vector-set! . g$7021$f3xia)
        (vector-ref . g$7020$f3xia)
        (vector-map . g$7088$f3xia)
        (vector-length . g$7023$f3xia)
        (vector-for-each . g$7089$f3xia)
        (vector-fill! . g$7024$f3xia)
        (vector->list . g$7025$f3xia)
        (vector . g$13902$f3xia)
        (values . g$13901$f3xia)
        (truncate . g$7788$f3xia)
        (tan . g$7780$f3xia)
        (symbol? . g$6991$f3xia)
        (symbol=? . g$7073$f3xia)
        (symbol->string . g$7011$f3xia)
        (substring . g$7008$f3xia)
        (string? . g$6987$f3xia)
        (string>? . g$7070$f3xia)
        (string>=? . g$7072$f3xia)
        (string=? . g$7068$f3xia)
        (string<? . g$7069$f3xia)
        (string<=? . g$7071$f3xia)
        (string-ref . g$7000$f3xia)
        (string-length . g$7003$f3xia)
        (string-for-each . g$7090$f3xia)
        (string-copy . g$7007$f3xia)
        (string-append . g$7009$f3xia)
        (string->symbol . g$7012$f3xia)
        (string->number . g$13900$f3xia)
        (string->list . g$7006$f3xia)
        (string . g$7005$f3xia)
        (sqrt . g$7790$f3xia)
        (sin . g$7774$f3xia)
        (round . g$7789$f3xia)
        (reverse . g$7027$f3xia)
        (real? . g$7730$f3xia)
        (real-valued? . g$7733$f3xia)
        (real-part . g$7767$f3xia)
        (rationalize . g$7085$f3xia)
        (rational? . g$7731$f3xia)
        (rational-valued? . g$7734$f3xia)
        (procedure? . g$6993$f3xia)
        (positive? . g$7737$f3xia)
        (pair? . g$13899$f3xia)
        (odd? . g$7057$f3xia)
        (numerator . g$7765$f3xia)
        (number? . g$7723$f3xia)
        (number->string . g$7744$f3xia)
        (null? . g$13898$f3xia)
        (not . g$13897$f3xia)
        (negative? . g$7738$f3xia)
        (nan? . g$7724$f3xia)
        (min . g$7059$f3xia)
        (max . g$7058$f3xia)
        (map . g$6815$f3xia)
        (make-vector . g$7022$f3xia)
        (make-string . g$6999$f3xia)
        (make-rectangular . g$7760$f3xia)
        (make-polar . g$7761$f3xia)
        (magnitude . g$7763$f3xia)
        (log . g$7783$f3xia)
        (list? . g$6810$f3xia)
        (list-tail . g$6791$f3xia)
        (list-ref . g$6792$f3xia)
        (list->vector . g$7018$f3xia)
        (list->string . g$7019$f3xia)
        (list . g$13896$f3xia)
        (length . g$6812$f3xia)
        (lcm . g$7061$f3xia)
        (integer? . g$7732$f3xia)
        (integer-valued? . g$7735$f3xia)
        (integer->char . g$6998$f3xia)
        (infinite? . g$7726$f3xia)
        (inexact? . g$7728$f3xia)
        (inexact . g$7739$f3xia)
        (imag-part . g$7768$f3xia)
        (gcd . g$7060$f3xia)
        (for-each . g$6816$f3xia)
        (floor . g$7786$f3xia)
        (finite? . g$7725$f3xia)
        (expt . g$7792$f3xia)
        (exp . g$7773$f3xia)
        (exact? . g$7727$f3xia)
        (exact-integer-sqrt . g$7791$f3xia)
        (exact . g$7740$f3xia)
        (even? . g$7056$f3xia)
        (error . g$5586$f3xia)
        (eqv? . g$13895$f3xia)
        (equal? . g$9203$f3xia)
        (eq? . g$13894$f3xia)
        (dynamic-wind . g$13893$f3xia)
        (div0-and-mod0 . g$7017$f3xia)
        (mod0 . g$7015$f3xia)
        (div0 . g$7013$f3xia)
        (div-and-mod . g$7016$f3xia)
        (mod . g$7014$f3xia)
        (div . g$7784$f3xia)
        (denominator . g$7766$f3xia)
        (cos . g$7777$f3xia)
        (cons . g$13892$f3xia)
        (complex? . g$7729$f3xia)
        (char? . g$6988$f3xia)
        (char>? . g$7082$f3xia)
        (char>=? . g$7084$f3xia)
        (char=? . g$7080$f3xia)
        (char<? . g$7081$f3xia)
        (char<=? . g$7083$f3xia)
        (char->integer . g$6997$f3xia)
        (ceiling . g$7787$f3xia)
        (call-with-values . g$13891$f3xia)
        (call/cc . g$13890$f3xia)
        (call-with-current-continuation . g$13889$f3xia)
        (cddddr . g$7055$f3xia)
        (cdddar . g$7054$f3xia)
        (cddadr . g$7053$f3xia)
        (cddaar . g$7052$f3xia)
        (cdaddr . g$7051$f3xia)
        (cdadar . g$7050$f3xia)
        (cdaadr . g$7049$f3xia)
        (cdaaar . g$7048$f3xia)
        (cadddr . g$7047$f3xia)
        (caddar . g$7046$f3xia)
        (cadadr . g$7045$f3xia)
        (cadaar . g$7044$f3xia)
        (caaddr . g$7043$f3xia)
        (caadar . g$7042$f3xia)
        (caaadr . g$7041$f3xia)
        (caaaar . g$7040$f3xia)
        (cdddr . g$7039$f3xia)
        (cddar . g$7038$f3xia)
        (cdadr . g$7037$f3xia)
        (cdaar . g$7036$f3xia)
        (caddr . g$7035$f3xia)
        (cadar . g$7034$f3xia)
        (caadr . g$7033$f3xia)
        (caaar . g$7032$f3xia)
        (cddr . g$7031$f3xia)
        (cdar . g$7030$f3xia)
        (cadr . g$7029$f3xia)
        (caar . g$7028$f3xia)
        (cdr . g$13888$f3xia)
        (car . g$13887$f3xia)
        (boolean? . g$6992$f3xia)
        (boolean=? . g$7074$f3xia)
        (atan . g$7782$f3xia)
        (assertion-violation . g$5585$f3xia)
        (asin . g$7775$f3xia)
        (apply . g$13886$f3xia)
        (append . g$6821$f3xia)
        (angle . g$7762$f3xia)
        (acos . g$7778$f3xia)
        (abs . g$7785$f3xia)
        (/ . g$13885$f3xia)
        (* . g$13884$f3xia)
        (- . g$13883$f3xia)
        (+ . g$13882$f3xia)
        (>= . g$7759$f3xia)
        (> . g$7758$f3xia)
        (= . g$7755$f3xia)
        (<= . g$7757$f3xia)
        (< . g$7756$f3xia)
        (&no-nans . g$13805$f3xia)
        (&no-infinities . g$13804$f3xia)
        (&i/o-encoding . g$13803$f3xia)
        (&i/o-decoding . g$13802$f3xia)
        (&i/o-port . g$13801$f3xia)
        (&i/o-file-does-not-exist . g$13800$f3xia)
        (&i/o-file-already-exists . g$13799$f3xia)
        (&i/o-file-is-read-only . g$13798$f3xia)
        (&i/o-file-protection . g$13797$f3xia)
        (&i/o-filename . g$13796$f3xia)
        (&i/o-invalid-position . g$13795$f3xia)
        (&i/o-write . g$13794$f3xia)
        (&i/o-read . g$13793$f3xia)
        (&i/o . g$13792$f3xia)
        (&non-continuable . g$13791$f3xia)
        (&undefined . g$13790$f3xia)
        (&syntax . g$13789$f3xia)
        (&lexical . g$13788$f3xia)
        (&implementation-restriction . g$13787$f3xia)
        (&who . g$13786$f3xia)
        (&irritants . g$13785$f3xia)
        (&assertion . g$13784$f3xia)
        (&violation . g$13783$f3xia)
        (&error . g$13782$f3xia)
        (&serious . g$13781$f3xia)
        (&warning . g$13780$f3xia)
        (&message . g$13779$f3xia)
        (&condition . g$13778$f3xia)
        (define-condition-type . g$13777$f3xia)
        (define-enumeration . g$13776$f3xia)
        (define-record-type . g$13775$f3xia)
        (parent-rtd . g$13774$f3xia)
        (nongenerative . g$13773$f3xia)
        (opaque . g$13772$f3xia)
        (sealed . g$13771$f3xia)
        (protocol . g$13770$f3xia)
        (parent . g$13769$f3xia)
        (immutable . g$13768$f3xia)
        (mutable . g$13767$f3xia)
        (fields . g$13766$f3xia)
        (error-handling-mode . g$13765$f3xia)
        (file-options . g$13764$f3xia)
        (buffer-mode . g$13763$f3xia)
        (eol-style . g$13762$f3xia)
        (guard . g$13761$f3xia)
        (unsyntax-splicing . g$13755$f3xia)
        (unsyntax . g$13754$f3xia)
        (unquote-splicing . g$13753$f3xia)
        (unquote . g$13752$f3xia)
        (_ . g$13751$f3xia)
        (else . g$13750$f3xia)
        (=> . g$13749$f3xia)
        (... . g$13748$f3xia)
        (assert . g$13747$f3xia)
        (endianness . g$13746$f3xia)
        (or . g$13743$f3xia)
        (and . g$13742$f3xia)
        (do . g$13741$f3xia)
        (cond . g$13740$f3xia)
        (let* . g$13739$f3xia)
        (let . g$13738$f3xia)
        (identifier-syntax . g$13737$f3xia)
        (with-syntax . g$13736$f3xia)
        (quasisyntax . g$13735$f3xia)
        (quasiquote . g$13734$f3xia)
        (syntax-rules . g$13733$f3xia)
        (let-values . g$13729$f3xia)
        (let*-values . g$13728$f3xia)
        (record-constructor-descriptor . g$13727$f3xia)
        (record-type-descriptor . g$13726$f3xia)
        (case . g$13724$f3xia)
        (unless . g$13722$f3xia)
        (when . g$13721$f3xia)
        (if . g$13720$f3xia)
        (letrec* . g$13719$f3xia)
        (letrec . g$13718$f3xia)
        (case-lambda . g$13716$f3xia)
        (lambda . g$13715$f3xia)
        (syntax . g$13714$f3xia)
        (syntax-case . g$13713$f3xia)
        (quote . g$13712$f3xia)
        (letrec-syntax . g$13710$f3xia)
        (let-syntax . g$13709$f3xia)
        (set! . g$13708$f3xia)
        (begin . g$13704$f3xia)
        (define-syntax . g$13702$f3xia)
        (define . g$13701$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14052$f3xia
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((scheme-report-environment . g$10597$f3xia)
        (quotient . g$8056$f3xia)
        (null-environment . g$10596$f3xia)
        (remainder . g$8057$f3xia)
        (modulo . g$8058$f3xia)
        (inexact->exact . g$8053$f3xia)
        (force . g$8060$f3xia)
        (exact->inexact . g$8054$f3xia)
        (delay . g$13745$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14053$f3xia
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$13741$f3xia)
        (unless . g$13722$f3xia)
        (when . g$13721$f3xia)
        (case-lambda . g$13716$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14054$f3xia
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$10599$f3xia) (environment . g$10595$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14055$f3xia
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$8045$f3xia) (set-car! . g$8044$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14056$f3xia
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$7002$f3xia) (string-set! . g$7001$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14057$f3xia
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$13911$f3xia) (command-line . g$13640$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14058$f3xia
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$10298$f3xia)
        (identifier? . g$10619$f3xia)
        (generate-temporaries . g$10607$f3xia)
        (free-identifier=? . g$10608$f3xia)
        (syntax->datum . g$10621$f3xia)
        (datum->syntax . g$10620$f3xia)
        (bound-identifier=? . g$10609$f3xia)
        (syntax-violation . g$10618$f3xia)
        (unsyntax-splicing . g$13755$f3xia)
        (unsyntax . g$13754$f3xia)
        (_ . g$13751$f3xia)
        (... . g$13748$f3xia)
        (with-syntax . g$13736$f3xia)
        (quasisyntax . g$13735$f3xia)
        (syntax . g$13714$f3xia)
        (syntax-case . g$13713$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14059$f3xia
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$7370$f3xia)
        (file-exists? . g$7369$f3xia)
        (make-i/o-write-error . g$5428$f3xia)
        (make-i/o-read-error . g$5415$f3xia)
        (make-i/o-port-error . g$5523$f3xia)
        (make-i/o-invalid-position-error . g$5441$f3xia)
        (make-i/o-filename-error . g$5456$f3xia)
        (make-i/o-file-protection-error . g$5471$f3xia)
        (make-i/o-file-is-read-only-error . g$5484$f3xia)
        (make-i/o-file-does-not-exist-error . g$5510$f3xia)
        (make-i/o-file-already-exists-error . g$5497$f3xia)
        (make-i/o-error . g$5402$f3xia)
        (i/o-write-error? . g$5429$f3xia)
        (i/o-read-error? . g$5416$f3xia)
        (i/o-port-error? . g$5525$f3xia)
        (i/o-invalid-position-error? . g$5443$f3xia)
        (i/o-error-position . g$5444$f3xia)
        (i/o-filename-error? . g$5458$f3xia)
        (i/o-file-protection-error? . g$5472$f3xia)
        (i/o-file-is-read-only-error? . g$5485$f3xia)
        (i/o-file-does-not-exist-error? . g$5511$f3xia)
        (i/o-file-already-exists-error? . g$5498$f3xia)
        (i/o-error? . g$5403$f3xia)
        (i/o-error-port . g$5526$f3xia)
        (i/o-error-filename . g$5459$f3xia)
        (&i/o-port . g$13801$f3xia)
        (&i/o-file-does-not-exist . g$13800$f3xia)
        (&i/o-file-already-exists . g$13799$f3xia)
        (&i/o-file-is-read-only . g$13798$f3xia)
        (&i/o-file-protection . g$13797$f3xia)
        (&i/o-filename . g$13796$f3xia)
        (&i/o-invalid-position . g$13795$f3xia)
        (&i/o-write . g$13794$f3xia)
        (&i/o-read . g$13793$f3xia)
        (&i/o . g$13792$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14060$f3xia
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$13985$f3xia)
        (vector-sort . g$8078$f3xia)
        (list-sort . g$8077$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14061$f3xia
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$7736$f3xia)
        (vector? . g$6989$f3xia)
        (vector-set! . g$7021$f3xia)
        (vector-ref . g$7020$f3xia)
        (vector-map . g$7088$f3xia)
        (vector-length . g$7023$f3xia)
        (vector-for-each . g$7089$f3xia)
        (vector-fill! . g$7024$f3xia)
        (vector->list . g$7025$f3xia)
        (vector . g$13902$f3xia)
        (values . g$13901$f3xia)
        (truncate . g$7788$f3xia)
        (tan . g$7780$f3xia)
        (symbol? . g$6991$f3xia)
        (symbol=? . g$7073$f3xia)
        (symbol->string . g$7011$f3xia)
        (substring . g$7008$f3xia)
        (string? . g$6987$f3xia)
        (string>? . g$7070$f3xia)
        (string>=? . g$7072$f3xia)
        (string=? . g$7068$f3xia)
        (string<? . g$7069$f3xia)
        (string<=? . g$7071$f3xia)
        (string-ref . g$7000$f3xia)
        (string-length . g$7003$f3xia)
        (string-for-each . g$7090$f3xia)
        (string-copy . g$7007$f3xia)
        (string-append . g$7009$f3xia)
        (string->symbol . g$7012$f3xia)
        (string->number . g$13900$f3xia)
        (string->list . g$7006$f3xia)
        (string . g$7005$f3xia)
        (sqrt . g$7790$f3xia)
        (sin . g$7774$f3xia)
        (round . g$7789$f3xia)
        (reverse . g$7027$f3xia)
        (real? . g$7730$f3xia)
        (real-valued? . g$7733$f3xia)
        (real-part . g$7767$f3xia)
        (rationalize . g$7085$f3xia)
        (rational? . g$7731$f3xia)
        (rational-valued? . g$7734$f3xia)
        (procedure? . g$6993$f3xia)
        (positive? . g$7737$f3xia)
        (pair? . g$13899$f3xia)
        (odd? . g$7057$f3xia)
        (numerator . g$7765$f3xia)
        (number? . g$7723$f3xia)
        (number->string . g$7744$f3xia)
        (null? . g$13898$f3xia)
        (not . g$13897$f3xia)
        (negative? . g$7738$f3xia)
        (nan? . g$7724$f3xia)
        (min . g$7059$f3xia)
        (max . g$7058$f3xia)
        (map . g$6815$f3xia)
        (make-vector . g$7022$f3xia)
        (make-string . g$6999$f3xia)
        (make-rectangular . g$7760$f3xia)
        (make-polar . g$7761$f3xia)
        (magnitude . g$7763$f3xia)
        (log . g$7783$f3xia)
        (list? . g$6810$f3xia)
        (list-tail . g$6791$f3xia)
        (list-ref . g$6792$f3xia)
        (list->vector . g$7018$f3xia)
        (list->string . g$7019$f3xia)
        (list . g$13896$f3xia)
        (length . g$6812$f3xia)
        (lcm . g$7061$f3xia)
        (integer? . g$7732$f3xia)
        (integer-valued? . g$7735$f3xia)
        (integer->char . g$6998$f3xia)
        (infinite? . g$7726$f3xia)
        (inexact? . g$7728$f3xia)
        (inexact . g$7739$f3xia)
        (imag-part . g$7768$f3xia)
        (gcd . g$7060$f3xia)
        (for-each . g$6816$f3xia)
        (floor . g$7786$f3xia)
        (finite? . g$7725$f3xia)
        (expt . g$7792$f3xia)
        (exp . g$7773$f3xia)
        (exact? . g$7727$f3xia)
        (exact-integer-sqrt . g$7791$f3xia)
        (exact . g$7740$f3xia)
        (even? . g$7056$f3xia)
        (error . g$5586$f3xia)
        (eqv? . g$13895$f3xia)
        (equal? . g$9203$f3xia)
        (eq? . g$13894$f3xia)
        (dynamic-wind . g$13893$f3xia)
        (div0-and-mod0 . g$7017$f3xia)
        (mod0 . g$7015$f3xia)
        (div0 . g$7013$f3xia)
        (div-and-mod . g$7016$f3xia)
        (mod . g$7014$f3xia)
        (div . g$7784$f3xia)
        (denominator . g$7766$f3xia)
        (cos . g$7777$f3xia)
        (cons . g$13892$f3xia)
        (complex? . g$7729$f3xia)
        (char? . g$6988$f3xia)
        (char>? . g$7082$f3xia)
        (char>=? . g$7084$f3xia)
        (char=? . g$7080$f3xia)
        (char<? . g$7081$f3xia)
        (char<=? . g$7083$f3xia)
        (char->integer . g$6997$f3xia)
        (ceiling . g$7787$f3xia)
        (call-with-values . g$13891$f3xia)
        (call/cc . g$13890$f3xia)
        (call-with-current-continuation . g$13889$f3xia)
        (cddddr . g$7055$f3xia)
        (cdddar . g$7054$f3xia)
        (cddadr . g$7053$f3xia)
        (cddaar . g$7052$f3xia)
        (cdaddr . g$7051$f3xia)
        (cdadar . g$7050$f3xia)
        (cdaadr . g$7049$f3xia)
        (cdaaar . g$7048$f3xia)
        (cadddr . g$7047$f3xia)
        (caddar . g$7046$f3xia)
        (cadadr . g$7045$f3xia)
        (cadaar . g$7044$f3xia)
        (caaddr . g$7043$f3xia)
        (caadar . g$7042$f3xia)
        (caaadr . g$7041$f3xia)
        (caaaar . g$7040$f3xia)
        (cdddr . g$7039$f3xia)
        (cddar . g$7038$f3xia)
        (cdadr . g$7037$f3xia)
        (cdaar . g$7036$f3xia)
        (caddr . g$7035$f3xia)
        (cadar . g$7034$f3xia)
        (caadr . g$7033$f3xia)
        (caaar . g$7032$f3xia)
        (cddr . g$7031$f3xia)
        (cdar . g$7030$f3xia)
        (cadr . g$7029$f3xia)
        (caar . g$7028$f3xia)
        (cdr . g$13888$f3xia)
        (car . g$13887$f3xia)
        (boolean? . g$6992$f3xia)
        (boolean=? . g$7074$f3xia)
        (atan . g$7782$f3xia)
        (assertion-violation . g$5585$f3xia)
        (asin . g$7775$f3xia)
        (apply . g$13886$f3xia)
        (append . g$6821$f3xia)
        (angle . g$7762$f3xia)
        (acos . g$7778$f3xia)
        (abs . g$7785$f3xia)
        (/ . g$13885$f3xia)
        (* . g$13884$f3xia)
        (- . g$13883$f3xia)
        (+ . g$13882$f3xia)
        (>= . g$7759$f3xia)
        (> . g$7758$f3xia)
        (= . g$7755$f3xia)
        (<= . g$7757$f3xia)
        (< . g$7756$f3xia)
        (unquote-splicing . g$13753$f3xia)
        (unquote . g$13752$f3xia)
        (_ . g$13751$f3xia)
        (else . g$13750$f3xia)
        (=> . g$13749$f3xia)
        (... . g$13748$f3xia)
        (assert . g$13747$f3xia)
        (or . g$13743$f3xia)
        (and . g$13742$f3xia)
        (cond . g$13740$f3xia)
        (let* . g$13739$f3xia)
        (let . g$13738$f3xia)
        (identifier-syntax . g$13737$f3xia)
        (quasiquote . g$13734$f3xia)
        (syntax-rules . g$13733$f3xia)
        (let-values . g$13729$f3xia)
        (let*-values . g$13728$f3xia)
        (case . g$13724$f3xia)
        (if . g$13720$f3xia)
        (letrec* . g$13719$f3xia)
        (letrec . g$13718$f3xia)
        (lambda . g$13715$f3xia)
        (quote . g$13712$f3xia)
        (letrec-syntax . g$13710$f3xia)
        (let-syntax . g$13709$f3xia)
        (set! . g$13708$f3xia)
        (begin . g$13704$f3xia)
        (define-syntax . g$13702$f3xia)
        (define . g$13701$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14062$f3xia
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6824$f3xia)
        (remv . g$6825$f3xia)
        (remp . g$6797$f3xia)
        (remq . g$6826$f3xia)
        (partition . g$6796$f3xia)
        (memv . g$6804$f3xia)
        (memq . g$6803$f3xia)
        (memp . g$6806$f3xia)
        (member . g$6805$f3xia)
        (exists . g$6814$f3xia)
        (for-all . g$6813$f3xia)
        (fold-right . g$6823$f3xia)
        (fold-left . g$6822$f3xia)
        (find . g$6795$f3xia)
        (filter . g$6798$f3xia)
        (cons* . g$6817$f3xia)
        (assv . g$6800$f3xia)
        (assq . g$6799$f3xia)
        (assp . g$6802$f3xia)
        (assoc . g$6801$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14063$f3xia
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$9010$f3xia)
        (call-with-input-file . g$9009$f3xia)
        (write-char . g$9001$f3xia)
        (write . g$13976$f3xia)
        (with-output-to-file . g$9008$f3xia)
        (with-input-from-file . g$9007$f3xia)
        (read-char . g$9000$f3xia)
        (read . g$13975$f3xia)
        (peek-char . g$8999$f3xia)
        (open-output-file . g$13974$f3xia)
        (open-input-file . g$13973$f3xia)
        (newline . g$9011$f3xia)
        (display . g$13972$f3xia)
        (close-output-port . g$13971$f3xia)
        (close-input-port . g$13970$f3xia)
        (eof-object? . g$13969$f3xia)
        (eof-object . g$13968$f3xia)
        (current-error-port . g$13967$f3xia)
        (current-output-port . g$13966$f3xia)
        (current-input-port . g$13965$f3xia)
        (output-port? . g$13964$f3xia)
        (input-port? . g$13963$f3xia)
        (make-i/o-write-error . g$5428$f3xia)
        (make-i/o-read-error . g$5415$f3xia)
        (make-i/o-port-error . g$5523$f3xia)
        (make-i/o-invalid-position-error . g$5441$f3xia)
        (make-i/o-filename-error . g$5456$f3xia)
        (make-i/o-file-protection-error . g$5471$f3xia)
        (make-i/o-file-is-read-only-error . g$5484$f3xia)
        (make-i/o-file-does-not-exist-error . g$5510$f3xia)
        (make-i/o-file-already-exists-error . g$5497$f3xia)
        (make-i/o-error . g$5402$f3xia)
        (i/o-write-error? . g$5429$f3xia)
        (i/o-read-error? . g$5416$f3xia)
        (i/o-port-error? . g$5525$f3xia)
        (i/o-invalid-position-error? . g$5443$f3xia)
        (i/o-error-position . g$5444$f3xia)
        (i/o-filename-error? . g$5458$f3xia)
        (i/o-file-protection-error? . g$5472$f3xia)
        (i/o-file-is-read-only-error? . g$5485$f3xia)
        (i/o-file-does-not-exist-error? . g$5511$f3xia)
        (i/o-file-already-exists-error? . g$5498$f3xia)
        (i/o-error? . g$5403$f3xia)
        (i/o-error-port . g$5526$f3xia)
        (i/o-error-filename . g$5459$f3xia)
        (&i/o-port . g$13801$f3xia)
        (&i/o-file-does-not-exist . g$13800$f3xia)
        (&i/o-file-already-exists . g$13799$f3xia)
        (&i/o-file-is-read-only . g$13798$f3xia)
        (&i/o-file-protection . g$13797$f3xia)
        (&i/o-filename . g$13796$f3xia)
        (&i/o-invalid-position . g$13795$f3xia)
        (&i/o-write . g$13794$f3xia)
        (&i/o-read . g$13793$f3xia)
        (&i/o . g$13792$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14064$f3xia
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$7389$f3xia)
        (utf32->string . g$7411$f3xia)
        (utf16->string . g$7410$f3xia)
        (utf8->string . g$7408$f3xia)
        (uint-list->bytevector . g$7412$f3xia)
        (u8-list->bytevector . g$7400$f3xia)
        (string->utf8 . g$7405$f3xia)
        (string->utf32 . g$7407$f3xia)
        (string->utf16 . g$7406$f3xia)
        (sint-list->bytevector . g$7413$f3xia)
        (native-endianness . g$7376$f3xia)
        (bytevector? . g$6990$f3xia)
        (bytevector=? . g$7391$f3xia)
        (bytevector-uint-set! . g$7403$f3xia)
        (bytevector-uint-ref . g$7401$f3xia)
        (bytevector-u8-set! . g$7396$f3xia)
        (bytevector-u8-ref . g$7395$f3xia)
        (bytevector-u64-set! . g$7441$f3xia)
        (bytevector-u64-ref . g$7437$f3xia)
        (bytevector-u64-native-set! . g$7443$f3xia)
        (bytevector-u64-native-ref . g$7439$f3xia)
        (bytevector-u32-set! . g$7433$f3xia)
        (bytevector-u32-ref . g$7429$f3xia)
        (bytevector-u32-native-set! . g$7435$f3xia)
        (bytevector-u32-native-ref . g$7431$f3xia)
        (bytevector-u16-set! . g$7425$f3xia)
        (bytevector-u16-ref . g$7421$f3xia)
        (bytevector-u16-native-set! . g$7427$f3xia)
        (bytevector-u16-native-ref . g$7423$f3xia)
        (bytevector-sint-set! . g$7404$f3xia)
        (bytevector-sint-ref . g$7402$f3xia)
        (bytevector-s8-set! . g$7398$f3xia)
        (bytevector-s8-ref . g$7397$f3xia)
        (bytevector-s64-set! . g$7442$f3xia)
        (bytevector-s64-ref . g$7438$f3xia)
        (bytevector-s64-native-set! . g$7444$f3xia)
        (bytevector-s64-native-ref . g$7440$f3xia)
        (bytevector-s32-set! . g$7434$f3xia)
        (bytevector-s32-ref . g$7430$f3xia)
        (bytevector-s32-native-set! . g$7436$f3xia)
        (bytevector-s32-native-ref . g$7432$f3xia)
        (bytevector-s16-set! . g$7426$f3xia)
        (bytevector-s16-ref . g$7422$f3xia)
        (bytevector-s16-native-set! . g$7428$f3xia)
        (bytevector-s16-native-ref . g$7424$f3xia)
        (bytevector-length . g$7390$f3xia)
        (bytevector-ieee-single-set! . g$7419$f3xia)
        (bytevector-ieee-single-ref . g$7417$f3xia)
        (bytevector-ieee-single-native-set! . g$7447$f3xia)
        (bytevector-ieee-single-native-ref . g$7445$f3xia)
        (bytevector-ieee-double-set! . g$7420$f3xia)
        (bytevector-ieee-double-ref . g$7418$f3xia)
        (bytevector-ieee-double-native-set! . g$7448$f3xia)
        (bytevector-ieee-double-native-ref . g$7446$f3xia)
        (bytevector-fill! . g$7392$f3xia)
        (bytevector-copy! . g$7393$f3xia)
        (bytevector-copy . g$7394$f3xia)
        (bytevector->uint-list . g$7414$f3xia)
        (bytevector->u8-list . g$7399$f3xia)
        (bytevector->sint-list . g$7415$f3xia)
        (endianness . g$13746$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14065$f3xia
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$8149$f3xia)
        (string-titlecase . g$8137$f3xia)
        (string-normalize-nfkd . g$8158$f3xia)
        (string-normalize-nfkc . g$8157$f3xia)
        (string-normalize-nfd . g$8156$f3xia)
        (string-normalize-nfc . g$8155$f3xia)
        (string-foldcase . g$8138$f3xia)
        (string-downcase . g$14003$f3xia)
        (string-ci>? . g$8134$f3xia)
        (string-ci>=? . g$8136$f3xia)
        (string-ci=? . g$8132$f3xia)
        (string-ci<? . g$8133$f3xia)
        (string-ci<=? . g$8135$f3xia)
        (char-whitespace? . g$8114$f3xia)
        (char-upper-case? . g$8115$f3xia)
        (char-title-case? . g$8117$f3xia)
        (char-numeric? . g$8113$f3xia)
        (char-lower-case? . g$8116$f3xia)
        (char-general-category . g$8118$f3xia)
        (char-upcase . g$8108$f3xia)
        (char-titlecase . g$8110$f3xia)
        (char-foldcase . g$8111$f3xia)
        (char-downcase . g$8109$f3xia)
        (char-ci>? . g$8146$f3xia)
        (char-ci>=? . g$8148$f3xia)
        (char-ci=? . g$8144$f3xia)
        (char-ci<? . g$8145$f3xia)
        (char-ci<=? . g$8147$f3xia)
        (char-alphabetic? . g$8112$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14066$f3xia
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$13910$f3xia)
        (raise-continuable . g$13909$f3xia)
        (raise . g$13908$f3xia)
        (guard . g$13761$f3xia)
        (else . g$13750$f3xia)
        (=> . g$13749$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14067$f3xia
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$8255$f3xia)
        (bitwise-reverse-bit-field . g$8256$f3xia)
        (bitwise-length . g$8245$f3xia)
        (bitwise-if . g$8248$f3xia)
        (bitwise-first-bit-set . g$8246$f3xia)
        (bitwise-copy-bit-field . g$8251$f3xia)
        (bitwise-copy-bit . g$8249$f3xia)
        (bitwise-bit-set? . g$8247$f3xia)
        (bitwise-bit-field . g$8250$f3xia)
        (bitwise-bit-count . g$8244$f3xia)
        (bitwise-xor . g$8243$f3xia)
        (bitwise-ior . g$8242$f3xia)
        (bitwise-and . g$8241$f3xia)
        (bitwise-not . g$8240$f3xia)
        (bitwise-arithmetic-shift-right . g$8254$f3xia)
        (bitwise-arithmetic-shift-left . g$8253$f3xia)
        (bitwise-arithmetic-shift . g$8252$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14068$f3xia
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$5924$f3xia)
        (fxxor . g$5887$f3xia)
        (fxrotate-bit-field . g$5962$f3xia)
        (fxreverse-bit-field . g$5963$f3xia)
        (fxpositive? . g$5914$f3xia)
        (fxodd? . g$5934$f3xia)
        (fxnot . g$5868$f3xia)
        (fxnegative? . g$5919$f3xia)
        (fxmod0 . g$5898$f3xia)
        (fxmod . g$5897$f3xia)
        (fxmin . g$5936$f3xia)
        (fxmax . g$5935$f3xia)
        (fxlength . g$5865$f3xia)
        (fxior . g$5886$f3xia)
        (fxif . g$5944$f3xia)
        (fxfirst-bit-set . g$5866$f3xia)
        (fxeven? . g$5929$f3xia)
        (fxdiv0-and-mod0 . g$5909$f3xia)
        (fxdiv0 . g$5904$f3xia)
        (fxdiv-and-mod . g$5899$f3xia)
        (fxdiv . g$5892$f3xia)
        (fxcopy-bit-field . g$5959$f3xia)
        (fxcopy-bit . g$5949$f3xia)
        (fxbit-set? . g$5867$f3xia)
        (fxbit-field . g$5954$f3xia)
        (fxbit-count . g$5860$f3xia)
        (fxarithmetic-shift-right . g$5961$f3xia)
        (fxarithmetic-shift-left . g$5960$f3xia)
        (fxarithmetic-shift . g$5855$f3xia)
        (fxand . g$5885$f3xia)
        (fx>? . g$5877$f3xia)
        (fx>=? . g$5878$f3xia)
        (fx=? . g$5874$f3xia)
        (fx<? . g$5875$f3xia)
        (fx<=? . g$5876$f3xia)
        (fx-/carry . g$5938$f3xia)
        (fx- . g$5849$f3xia)
        (fx+/carry . g$5939$f3xia)
        (fx+ . g$5847$f3xia)
        (fx*/carry . g$5937$f3xia)
        (fx* . g$5848$f3xia)
        (greatest-fixnum . g$5818$f3xia)
        (least-fixnum . g$5819$f3xia)
        (fixnum-width . g$6996$f3xia)
        (fixnum? . g$6994$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14069$f3xia
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$5580$f3xia)
        (no-infinities-violation? . g$5567$f3xia)
        (make-no-nans-violation . g$5579$f3xia)
        (make-no-infinities-violation . g$5566$f3xia)
        (real->flonum . g$7721$f3xia)
        (flzero? . g$8415$f3xia)
        (fltruncate . g$8410$f3xia)
        (fltan . g$8396$f3xia)
        (flsqrt . g$8401$f3xia)
        (flsin . g$8394$f3xia)
        (flround . g$8411$f3xia)
        (flpositive? . g$8413$f3xia)
        (flonum? . g$6995$f3xia)
        (flodd? . g$8417$f3xia)
        (flnumerator . g$8360$f3xia)
        (flnegative? . g$8414$f3xia)
        (flnan? . g$8393$f3xia)
        (flmod0 . g$8378$f3xia)
        (flmod . g$8377$f3xia)
        (flmin . g$8419$f3xia)
        (flmax . g$8418$f3xia)
        (fllog . g$8400$f3xia)
        (flinteger? . g$8386$f3xia)
        (flinfinite? . g$8392$f3xia)
        (flfloor . g$8409$f3xia)
        (flfinite? . g$8387$f3xia)
        (flexpt . g$8403$f3xia)
        (flexp . g$8402$f3xia)
        (fleven? . g$8416$f3xia)
        (fldiv0-and-mod0 . g$8385$f3xia)
        (fldiv0 . g$8372$f3xia)
        (fldiv-and-mod . g$8379$f3xia)
        (fldiv . g$8384$f3xia)
        (fldenominator . g$8359$f3xia)
        (flcos . g$8395$f3xia)
        (flceiling . g$8404$f3xia)
        (flatan . g$8399$f3xia)
        (flasin . g$8397$f3xia)
        (flacos . g$8398$f3xia)
        (flabs . g$8412$f3xia)
        (fl>? . g$8366$f3xia)
        (fl>=? . g$8367$f3xia)
        (fl=? . g$8363$f3xia)
        (fl<? . g$8364$f3xia)
        (fl<=? . g$8365$f3xia)
        (fl/ . g$8362$f3xia)
        (fl- . g$8361$f3xia)
        (fl+ . g$8357$f3xia)
        (fl* . g$8358$f3xia)
        (fixnum->flonum . g$7722$f3xia)
        (&no-nans . g$13805$f3xia)
        (&no-infinities . g$13804$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14070$f3xia
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$7340$f3xia)
        (string-ci-hash . g$7339$f3xia)
        (string-hash . g$7338$f3xia)
        (equal-hash . g$13984$f3xia)
        (hashtable-equivalence-function . g$13983$f3xia)
        (make-hashtable . g$13982$f3xia)
        (hashtable-hash-function . g$13981$f3xia)
        (make-eqv-hashtable . g$7330$f3xia)
        (make-eq-hashtable . g$7329$f3xia)
        (hashtable? . g$7328$f3xia)
        (hashtable-update! . g$7336$f3xia)
        (hashtable-size . g$7331$f3xia)
        (hashtable-set! . g$7333$f3xia)
        (hashtable-ref . g$7332$f3xia)
        (hashtable-mutable? . g$13980$f3xia)
        (hashtable-keys . g$13979$f3xia)
        (hashtable-entries . g$13978$f3xia)
        (hashtable-delete! . g$7334$f3xia)
        (hashtable-copy . g$13977$f3xia)
        (hashtable-contains? . g$7335$f3xia)
        (hashtable-clear! . g$7337$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14071$f3xia
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$13969$f3xia)
        (eof-object . g$13968$f3xia)
        (current-error-port . g$13967$f3xia)
        (current-output-port . g$13966$f3xia)
        (current-input-port . g$13965$f3xia)
        (output-port? . g$13964$f3xia)
        (input-port? . g$13963$f3xia)
        (utf-8-codec . g$13962$f3xia)
        (utf-16-codec . g$13961$f3xia)
        (transcoder-error-handling-mode . g$13960$f3xia)
        (transcoder-eol-style . g$13959$f3xia)
        (transcoder-codec . g$13958$f3xia)
        (transcoded-port . g$13957$f3xia)
        (textual-port? . g$13956$f3xia)
        (string->bytevector . g$13955$f3xia)
        (standard-output-port . g$8975$f3xia)
        (standard-input-port . g$8974$f3xia)
        (standard-error-port . g$8973$f3xia)
        (set-port-position! . g$13954$f3xia)
        (put-u8 . g$13953$f3xia)
        (put-string . g$13952$f3xia)
        (put-datum . g$8978$f3xia)
        (put-char . g$13951$f3xia)
        (put-bytevector . g$13950$f3xia)
        (port? . g$8983$f3xia)
        (port-transcoder . g$13949$f3xia)
        (port-position . g$13948$f3xia)
        (port-has-set-port-position!? . g$13947$f3xia)
        (port-has-port-position? . g$13946$f3xia)
        (port-eof? . g$13945$f3xia)
        (output-port-buffer-mode . g$13944$f3xia)
        (open-string-output-port . g$8982$f3xia)
        (open-string-input-port . g$13943$f3xia)
        (open-file-output-port . g$13942$f3xia)
        (open-file-input/output-port . g$13941$f3xia)
        (open-file-input-port . g$13940$f3xia)
        (open-bytevector-output-port . g$13939$f3xia)
        (open-bytevector-input-port . g$13938$f3xia)
        (native-transcoder . g$13937$f3xia)
        (native-eol-style . g$8976$f3xia)
        (make-transcoder . g$13936$f3xia)
        (latin-1-codec . g$13935$f3xia)
        (make-i/o-write-error . g$5428$f3xia)
        (make-i/o-read-error . g$5415$f3xia)
        (make-i/o-port-error . g$5523$f3xia)
        (make-i/o-invalid-position-error . g$5441$f3xia)
        (make-i/o-filename-error . g$5456$f3xia)
        (make-i/o-file-protection-error . g$5471$f3xia)
        (make-i/o-file-is-read-only-error . g$5484$f3xia)
        (make-i/o-file-does-not-exist-error . g$5510$f3xia)
        (make-i/o-file-already-exists-error . g$5497$f3xia)
        (make-i/o-error . g$5402$f3xia)
        (make-i/o-encoding-error . g$5551$f3xia)
        (make-i/o-decoding-error . g$5538$f3xia)
        (make-custom-textual-output-port . g$13934$f3xia)
        (make-custom-textual-input/output-port . g$13933$f3xia)
        (make-custom-textual-input-port . g$13932$f3xia)
        (make-custom-binary-output-port . g$13931$f3xia)
        (make-custom-binary-input/output-port . g$13930$f3xia)
        (make-custom-binary-input-port . g$13929$f3xia)
        (lookahead-u8 . g$13928$f3xia)
        (lookahead-char . g$13927$f3xia)
        (i/o-write-error? . g$5429$f3xia)
        (i/o-read-error? . g$5416$f3xia)
        (i/o-port-error? . g$5525$f3xia)
        (i/o-invalid-position-error? . g$5443$f3xia)
        (i/o-error-position . g$5444$f3xia)
        (i/o-filename-error? . g$5458$f3xia)
        (i/o-file-protection-error? . g$5472$f3xia)
        (i/o-file-is-read-only-error? . g$5485$f3xia)
        (i/o-file-does-not-exist-error? . g$5511$f3xia)
        (i/o-file-already-exists-error? . g$5498$f3xia)
        (i/o-error? . g$5403$f3xia)
        (i/o-error-port . g$5526$f3xia)
        (i/o-error-filename . g$5459$f3xia)
        (i/o-encoding-error? . g$5553$f3xia)
        (i/o-encoding-error-char . g$5554$f3xia)
        (i/o-decoding-error? . g$5539$f3xia)
        (get-u8 . g$13926$f3xia)
        (get-string-n! . g$13925$f3xia)
        (get-string-n . g$13924$f3xia)
        (get-string-all . g$13923$f3xia)
        (get-line . g$13922$f3xia)
        (get-datum . g$8979$f3xia)
        (get-char . g$13921$f3xia)
        (get-bytevector-some . g$13920$f3xia)
        (get-bytevector-n! . g$13919$f3xia)
        (get-bytevector-n . g$13918$f3xia)
        (get-bytevector-all . g$13917$f3xia)
        (flush-output-port . g$13916$f3xia)
        (close-port . g$13915$f3xia)
        (call-with-string-output-port . g$8984$f3xia)
        (call-with-port . g$8985$f3xia)
        (call-with-bytevector-output-port . g$13914$f3xia)
        (bytevector->string . g$13913$f3xia)
        (buffer-mode? . g$8977$f3xia)
        (binary-port? . g$13912$f3xia)
        (&i/o-encoding . g$13803$f3xia)
        (&i/o-decoding . g$13802$f3xia)
        (&i/o-port . g$13801$f3xia)
        (&i/o-file-does-not-exist . g$13800$f3xia)
        (&i/o-file-already-exists . g$13799$f3xia)
        (&i/o-file-is-read-only . g$13798$f3xia)
        (&i/o-file-protection . g$13797$f3xia)
        (&i/o-filename . g$13796$f3xia)
        (&i/o-invalid-position . g$13795$f3xia)
        (&i/o-write . g$13794$f3xia)
        (&i/o-read . g$13793$f3xia)
        (&i/o . g$13792$f3xia)
        (error-handling-mode . g$13765$f3xia)
        (file-options . g$13764$f3xia)
        (buffer-mode . g$13763$f3xia)
        (eol-style . g$13762$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14072$f3xia
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$9071$f3xia)
        (enum-set=? . g$9078$f3xia)
        (enum-set-universe . g$9072$f3xia)
        (enum-set-union . g$9079$f3xia)
        (enum-set-subset? . g$9077$f3xia)
        (enum-set-projection . g$9083$f3xia)
        (enum-set-member? . g$9076$f3xia)
        (enum-set-intersection . g$9080$f3xia)
        (enum-set-indexer . g$9073$f3xia)
        (enum-set-difference . g$9081$f3xia)
        (enum-set-constructor . g$9074$f3xia)
        (enum-set-complement . g$9082$f3xia)
        (enum-set->list . g$9075$f3xia)
        (define-enumeration . g$13776$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14073$f3xia
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$5290$f3xia)
        (warning? . g$5209$f3xia)
        (violation? . g$5248$f3xia)
        (undefined-violation? . g$5390$f3xia)
        (syntax-violation? . g$5375$f3xia)
        (syntax-violation-subform . g$5377$f3xia)
        (syntax-violation-form . g$5376$f3xia)
        (simple-conditions . g$13907$f3xia)
        (serious-condition? . g$5222$f3xia)
        (non-continuable-violation? . g$5334$f3xia)
        (message-condition? . g$5195$f3xia)
        (make-who-condition . g$5288$f3xia)
        (make-warning . g$5208$f3xia)
        (make-violation . g$5247$f3xia)
        (make-undefined-violation . g$5389$f3xia)
        (make-syntax-violation . g$5372$f3xia)
        (make-serious-condition . g$5221$f3xia)
        (make-non-continuable-violation . g$5333$f3xia)
        (make-message-condition . g$5193$f3xia)
        (make-lexical-violation . g$5359$f3xia)
        (make-irritants-condition . g$5273$f3xia)
        (make-implementation-restriction-violation . g$5346$f3xia)
        (make-error . g$5234$f3xia)
        (make-assertion-violation . g$5260$f3xia)
        (lexical-violation? . g$5360$f3xia)
        (irritants-condition? . g$5275$f3xia)
        (implementation-restriction-violation? . g$5347$f3xia)
        (error? . g$5235$f3xia)
        (condition-who . g$5291$f3xia)
        (condition-predicate . g$13906$f3xia)
        (condition-message . g$5196$f3xia)
        (condition-irritants . g$5276$f3xia)
        (condition-accessor . g$13905$f3xia)
        (condition . g$13904$f3xia)
        (assertion-violation? . g$5261$f3xia)
        (condition? . g$13903$f3xia)
        (&non-continuable . g$13791$f3xia)
        (&undefined . g$13790$f3xia)
        (&syntax . g$13789$f3xia)
        (&lexical . g$13788$f3xia)
        (&implementation-restriction . g$13787$f3xia)
        (&who . g$13786$f3xia)
        (&irritants . g$13785$f3xia)
        (&assertion . g$13784$f3xia)
        (&violation . g$13783$f3xia)
        (&error . g$13782$f3xia)
        (&serious . g$13781$f3xia)
        (&warning . g$13780$f3xia)
        (&message . g$13779$f3xia)
        (&condition . g$13778$f3xia)
        (define-condition-type . g$13777$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14074$f3xia
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$13995$f3xia)
        (record-type-uid . g$13994$f3xia)
        (record-type-sealed? . g$13993$f3xia)
        (record-type-parent . g$13992$f3xia)
        (record-type-opaque? . g$13991$f3xia)
        (record-type-name . g$13990$f3xia)
        (record-type-generative? . g$13989$f3xia)
        (record-type-field-names . g$13988$f3xia)
        (record-rtd . g$13987$f3xia)
        (record-field-mutable? . g$13986$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14075$f3xia
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$14002$f3xia)
        (record-predicate . g$14001$f3xia)
        (record-mutator . g$14000$f3xia)
        (record-constructor . g$13999$f3xia)
        (record-accessor . g$13998$f3xia)
        (make-record-type-descriptor . g$13997$f3xia)
        (make-record-constructor-descriptor . g$13996$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14076$f3xia
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$13775$f3xia)
        (parent-rtd . g$13774$f3xia)
        (nongenerative . g$13773$f3xia)
        (opaque . g$13772$f3xia)
        (sealed . g$13771$f3xia)
        (protocol . g$13770$f3xia)
        (parent . g$13769$f3xia)
        (immutable . g$13768$f3xia)
        (mutable . g$13767$f3xia)
        (fields . g$13766$f3xia)
        (record-constructor-descriptor . g$13727$f3xia)
        (record-type-descriptor . g$13726$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$20513$f3xia
      'g$14077$f3xia
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$10494$f3xia)
        (&stacktrace-rcd . g$5323$f3xia)
        (&stacktrace-rtd . g$5322$f3xia)
        (&where-rcd . g$5308$f3xia)
        (&where-rtd . g$5307$f3xia)
        (&no-nans-rcd . g$5582$f3xia)
        (&no-nans-rtd . g$5581$f3xia)
        (&no-infinities-rcd . g$5569$f3xia)
        (&no-infinities-rtd . g$5568$f3xia)
        (&i/o-encoding-rcd . g$5556$f3xia)
        (&i/o-encoding-rtd . g$5555$f3xia)
        (&i/o-decoding-rcd . g$5541$f3xia)
        (&i/o-decoding-rtd . g$5540$f3xia)
        (&i/o-port-rcd . g$5528$f3xia)
        (&i/o-port-rtd . g$5527$f3xia)
        (&i/o-file-does-not-exist-rcd . g$5513$f3xia)
        (&i/o-file-does-not-exist-rtd . g$5512$f3xia)
        (&i/o-file-already-exists-rcd . g$5500$f3xia)
        (&i/o-file-already-exists-rtd . g$5499$f3xia)
        (&i/o-file-is-read-only-rcd . g$5487$f3xia)
        (&i/o-file-is-read-only-rtd . g$5486$f3xia)
        (&i/o-file-protection-rcd . g$5474$f3xia)
        (&i/o-file-protection-rtd . g$5473$f3xia)
        (&i/o-filename-rcd . g$5461$f3xia)
        (&i/o-filename-rtd . g$5460$f3xia)
        (&i/o-invalid-position-rcd . g$5446$f3xia)
        (&i/o-invalid-position-rtd . g$5445$f3xia)
        (&i/o-write-rcd . g$5431$f3xia)
        (&i/o-write-rtd . g$5430$f3xia)
        (&i/o-read-rcd . g$5418$f3xia)
        (&i/o-read-rtd . g$5417$f3xia)
        (&i/o-rcd . g$5405$f3xia)
        (&i/o-rtd . g$5404$f3xia)
        (&undefined-rcd . g$5392$f3xia)
        (&undefined-rtd . g$5391$f3xia)
        (&syntax-rcd . g$5379$f3xia)
        (&syntax-rtd . g$5378$f3xia)
        (&lexical-rcd . g$5362$f3xia)
        (&lexical-rtd . g$5361$f3xia)
        (&implementation-restriction-rcd . g$5349$f3xia)
        (&implementation-restriction-rtd . g$5348$f3xia)
        (&non-continuable-rcd . g$5336$f3xia)
        (&non-continuable-rtd . g$5335$f3xia)
        (&who-rcd . g$5293$f3xia)
        (&who-rtd . g$5292$f3xia)
        (&irritants-rcd . g$5278$f3xia)
        (&irritants-rtd . g$5277$f3xia)
        (&assertion-rcd . g$5263$f3xia)
        (&assertion-rtd . g$5262$f3xia)
        (&violation-rcd . g$5250$f3xia)
        (&violation-rtd . g$5249$f3xia)
        (&error-rcd . g$5237$f3xia)
        (&error-rtd . g$5236$f3xia)
        (&serious-rcd . g$5224$f3xia)
        (&serious-rtd . g$5223$f3xia)
        (&warning-rcd . g$5211$f3xia)
        (&warning-rtd . g$5210$f3xia)
        (&message-rcd . g$5198$f3xia)
        (&message-rtd . g$5197$f3xia)
        (&condition-rcd . g$5158$f3xia)
        (&condition-rtd . g$5157$f3xia)
        (library-letrec* . g$14040$f3xia)
        (annotation-stripped . g$14039$f3xia)
        (annotation-source . g$14038$f3xia)
        (annotation-expression . g$14037$f3xia)
        (annotation? . g$14036$f3xia)
        (read-annotated . g$14035$f3xia)
        (tanh . g$7781$f3xia)
        (cosh . g$7779$f3xia)
        (sinh . g$7776$f3xia)
        (make-guid . g$14034$f3xia)
        (unspecified? . g$14033$f3xia)
        (make-list . g$6794$f3xia)
        (last-pair . g$6793$f3xia)
        (load-r5rs . g$14032$f3xia)
        (license . g$14031$f3xia)
        (stacktrace . g$14030$f3xia)
        (ironscheme-test . g$13646$f3xia)
        (ironscheme-build . g$13647$f3xia)
        (pinvoke-call-internal . g$14029$f3xia)
        (ffi-callback-internal . g$14028$f3xia)
        (ffi-callout-internal . g$14027$f3xia)
        (define-clr-class-internal . g$14026$f3xia)
        (clr-field-set!-internal . g$14025$f3xia)
        (clr-field-get-internal . g$14024$f3xia)
        (clr-cast-internal . g$14023$f3xia)
        (clr-call-internal . g$14022$f3xia)
        (clr-new-internal . g$14021$f3xia)
        (clr-new-array-internal . g$14020$f3xia)
        (clr-is-internal . g$14019$f3xia)
        (clr-reference-internal . g$14018$f3xia)
        (clr-using-internal . g$14017$f3xia)
        (syntax-error . g$10615$f3xia)
        (syntax-dispatch . g$10489$f3xia)
        (compile-core . g$14016$f3xia)
        (eval-core . g$14015$f3xia)
        (remove-location . g$14014$f3xia)
        (set-symbol-value! . g$14013$f3xia)
        (symbol-value . g$14012$f3xia)
        (symbol-bound? . g$14011$f3xia)
        (ungensym . g$14010$f3xia)
        (gensym . g$14009$f3xia)
        (void . g$14008$f3xia)
        (load-serialized-library . g$14007$f3xia)
        (serialize-library . g$14006$f3xia)
        (compile-system-libraries . g$13652$f3xia)
        (compile->closure . g$13654$f3xia)
        (compile . g$13653$f3xia)
        (load . g$13645$f3xia)
        (string-normalize . g$14005$f3xia)
        (new-interaction-environment . g$10624$f3xia)
        (interaction-environment . g$10625$f3xia)
        (char-ready? . g$14004$f3xia)
        (string-upcase . g$8149$f3xia)
        (string-titlecase . g$8137$f3xia)
        (string-normalize-nfkd . g$8158$f3xia)
        (string-normalize-nfkc . g$8157$f3xia)
        (string-normalize-nfd . g$8156$f3xia)
        (string-normalize-nfc . g$8155$f3xia)
        (string-foldcase . g$8138$f3xia)
        (string-downcase . g$14003$f3xia)
        (string-ci>? . g$8134$f3xia)
        (string-ci>=? . g$8136$f3xia)
        (string-ci=? . g$8132$f3xia)
        (string-ci<? . g$8133$f3xia)
        (string-ci<=? . g$8135$f3xia)
        (char-whitespace? . g$8114$f3xia)
        (char-upper-case? . g$8115$f3xia)
        (char-title-case? . g$8117$f3xia)
        (char-numeric? . g$8113$f3xia)
        (char-lower-case? . g$8116$f3xia)
        (char-general-category . g$8118$f3xia)
        (char-upcase . g$8108$f3xia)
        (char-titlecase . g$8110$f3xia)
        (char-foldcase . g$8111$f3xia)
        (char-downcase . g$8109$f3xia)
        (char-ci>? . g$8146$f3xia)
        (char-ci>=? . g$8148$f3xia)
        (char-ci=? . g$8144$f3xia)
        (char-ci<? . g$8145$f3xia)
        (char-ci<=? . g$8147$f3xia)
        (char-alphabetic? . g$8112$f3xia)
        (variable-transformer-procedure . g$10301$f3xia)
        (variable-transformer? . g$10300$f3xia)
        (make-variable-transformer . g$10298$f3xia)
        (identifier? . g$10619$f3xia)
        (generate-temporaries . g$10607$f3xia)
        (free-identifier=? . g$10608$f3xia)
        (syntax->datum . g$10621$f3xia)
        (datum->syntax . g$10620$f3xia)
        (bound-identifier=? . g$10609$f3xia)
        (record-type-descriptor? . g$14002$f3xia)
        (record-predicate . g$14001$f3xia)
        (record-mutator . g$14000$f3xia)
        (record-constructor . g$13999$f3xia)
        (record-accessor . g$13998$f3xia)
        (make-record-type-descriptor . g$13997$f3xia)
        (make-record-constructor-descriptor . g$13996$f3xia)
        (record? . g$13995$f3xia)
        (record-type-uid . g$13994$f3xia)
        (record-type-sealed? . g$13993$f3xia)
        (record-type-parent . g$13992$f3xia)
        (record-type-opaque? . g$13991$f3xia)
        (record-type-name . g$13990$f3xia)
        (record-type-generative? . g$13989$f3xia)
        (record-type-field-names . g$13988$f3xia)
        (record-rtd . g$13987$f3xia)
        (record-field-mutable? . g$13986$f3xia)
        (delete-file . g$7370$f3xia)
        (file-exists? . g$7369$f3xia)
        (vector-sort! . g$13985$f3xia)
        (vector-sort . g$8078$f3xia)
        (list-sort . g$8077$f3xia)
        (symbol-hash . g$7340$f3xia)
        (string-ci-hash . g$7339$f3xia)
        (string-hash . g$7338$f3xia)
        (equal-hash . g$13984$f3xia)
        (hashtable-equivalence-function . g$13983$f3xia)
        (make-hashtable . g$13982$f3xia)
        (hashtable-hash-function . g$13981$f3xia)
        (make-eqv-hashtable . g$7330$f3xia)
        (make-eq-hashtable . g$7329$f3xia)
        (hashtable? . g$7328$f3xia)
        (hashtable-update! . g$7336$f3xia)
        (hashtable-size . g$7331$f3xia)
        (hashtable-set! . g$7333$f3xia)
        (hashtable-ref . g$7332$f3xia)
        (hashtable-mutable? . g$13980$f3xia)
        (hashtable-keys . g$13979$f3xia)
        (hashtable-entries . g$13978$f3xia)
        (hashtable-delete! . g$7334$f3xia)
        (hashtable-copy . g$13977$f3xia)
        (hashtable-contains? . g$7335$f3xia)
        (hashtable-clear! . g$7337$f3xia)
        (call-with-output-file . g$9010$f3xia)
        (call-with-input-file . g$9009$f3xia)
        (write-char . g$9001$f3xia)
        (write . g$13976$f3xia)
        (with-output-to-file . g$9008$f3xia)
        (with-input-from-file . g$9007$f3xia)
        (read-char . g$9000$f3xia)
        (read . g$13975$f3xia)
        (peek-char . g$8999$f3xia)
        (open-output-file . g$13974$f3xia)
        (open-input-file . g$13973$f3xia)
        (newline . g$9011$f3xia)
        (display . g$13972$f3xia)
        (close-output-port . g$13971$f3xia)
        (close-input-port . g$13970$f3xia)
        (eof-object? . g$13969$f3xia)
        (eof-object . g$13968$f3xia)
        (current-error-port . g$13967$f3xia)
        (current-output-port . g$13966$f3xia)
        (current-input-port . g$13965$f3xia)
        (output-port? . g$13964$f3xia)
        (input-port? . g$13963$f3xia)
        (utf-8-codec . g$13962$f3xia)
        (utf-16-codec . g$13961$f3xia)
        (transcoder-error-handling-mode . g$13960$f3xia)
        (transcoder-eol-style . g$13959$f3xia)
        (transcoder-codec . g$13958$f3xia)
        (transcoded-port . g$13957$f3xia)
        (textual-port? . g$13956$f3xia)
        (string->bytevector . g$13955$f3xia)
        (standard-output-port . g$8975$f3xia)
        (standard-input-port . g$8974$f3xia)
        (standard-error-port . g$8973$f3xia)
        (set-port-position! . g$13954$f3xia)
        (put-u8 . g$13953$f3xia)
        (put-string . g$13952$f3xia)
        (put-datum . g$8978$f3xia)
        (put-char . g$13951$f3xia)
        (put-bytevector . g$13950$f3xia)
        (port? . g$8983$f3xia)
        (port-transcoder . g$13949$f3xia)
        (port-position . g$13948$f3xia)
        (port-has-set-port-position!? . g$13947$f3xia)
        (port-has-port-position? . g$13946$f3xia)
        (port-eof? . g$13945$f3xia)
        (output-port-buffer-mode . g$13944$f3xia)
        (open-string-output-port . g$8982$f3xia)
        (open-string-input-port . g$13943$f3xia)
        (open-file-output-port . g$13942$f3xia)
        (open-file-input/output-port . g$13941$f3xia)
        (open-file-input-port . g$13940$f3xia)
        (open-bytevector-output-port . g$13939$f3xia)
        (open-bytevector-input-port . g$13938$f3xia)
        (native-transcoder . g$13937$f3xia)
        (native-eol-style . g$8976$f3xia)
        (make-transcoder . g$13936$f3xia)
        (latin-1-codec . g$13935$f3xia)
        (make-i/o-write-error . g$5428$f3xia)
        (make-i/o-read-error . g$5415$f3xia)
        (make-i/o-port-error . g$5523$f3xia)
        (make-i/o-invalid-position-error . g$5441$f3xia)
        (make-i/o-filename-error . g$5456$f3xia)
        (make-i/o-file-protection-error . g$5471$f3xia)
        (make-i/o-file-is-read-only-error . g$5484$f3xia)
        (make-i/o-file-does-not-exist-error . g$5510$f3xia)
        (make-i/o-file-already-exists-error . g$5497$f3xia)
        (make-i/o-error . g$5402$f3xia)
        (make-i/o-encoding-error . g$5551$f3xia)
        (make-i/o-decoding-error . g$5538$f3xia)
        (make-custom-textual-output-port . g$13934$f3xia)
        (make-custom-textual-input/output-port . g$13933$f3xia)
        (make-custom-textual-input-port . g$13932$f3xia)
        (make-custom-binary-output-port . g$13931$f3xia)
        (make-custom-binary-input/output-port . g$13930$f3xia)
        (make-custom-binary-input-port . g$13929$f3xia)
        (make-bytevector . g$7389$f3xia)
        (lookahead-u8 . g$13928$f3xia)
        (lookahead-char . g$13927$f3xia)
        (i/o-write-error? . g$5429$f3xia)
        (i/o-read-error? . g$5416$f3xia)
        (i/o-port-error? . g$5525$f3xia)
        (i/o-invalid-position-error? . g$5443$f3xia)
        (i/o-error-position . g$5444$f3xia)
        (i/o-filename-error? . g$5458$f3xia)
        (i/o-file-protection-error? . g$5472$f3xia)
        (i/o-file-is-read-only-error? . g$5485$f3xia)
        (i/o-file-does-not-exist-error? . g$5511$f3xia)
        (i/o-file-already-exists-error? . g$5498$f3xia)
        (i/o-error? . g$5403$f3xia)
        (i/o-error-port . g$5526$f3xia)
        (i/o-error-filename . g$5459$f3xia)
        (i/o-encoding-error? . g$5553$f3xia)
        (i/o-encoding-error-char . g$5554$f3xia)
        (i/o-decoding-error? . g$5539$f3xia)
        (get-u8 . g$13926$f3xia)
        (get-string-n! . g$13925$f3xia)
        (get-string-n . g$13924$f3xia)
        (get-string-all . g$13923$f3xia)
        (get-line . g$13922$f3xia)
        (get-datum . g$8979$f3xia)
        (get-char . g$13921$f3xia)
        (get-bytevector-some . g$13920$f3xia)
        (get-bytevector-n! . g$13919$f3xia)
        (get-bytevector-n . g$13918$f3xia)
        (get-bytevector-all . g$13917$f3xia)
        (flush-output-port . g$13916$f3xia)
        (close-port . g$13915$f3xia)
        (call-with-string-output-port . g$8984$f3xia)
        (call-with-port . g$8985$f3xia)
        (call-with-bytevector-output-port . g$13914$f3xia)
        (bytevector->string . g$13913$f3xia)
        (buffer-mode? . g$8977$f3xia)
        (binary-port? . g$13912$f3xia)
        (scheme-report-environment . g$10597$f3xia)
        (quotient . g$8056$f3xia)
        (null-environment . g$10596$f3xia)
        (remainder . g$8057$f3xia)
        (modulo . g$8058$f3xia)
        (inexact->exact . g$8053$f3xia)
        (force . g$8060$f3xia)
        (exact->inexact . g$8054$f3xia)
        (exit . g$13911$f3xia)
        (command-line . g$13640$f3xia)
        (string-fill! . g$7002$f3xia)
        (string-set! . g$7001$f3xia)
        (set-cdr! . g$8045$f3xia)
        (set-car! . g$8044$f3xia)
        (remove . g$6824$f3xia)
        (remv . g$6825$f3xia)
        (remp . g$6797$f3xia)
        (remq . g$6826$f3xia)
        (partition . g$6796$f3xia)
        (memv . g$6804$f3xia)
        (memq . g$6803$f3xia)
        (memp . g$6806$f3xia)
        (member . g$6805$f3xia)
        (exists . g$6814$f3xia)
        (for-all . g$6813$f3xia)
        (fold-right . g$6823$f3xia)
        (fold-left . g$6822$f3xia)
        (find . g$6795$f3xia)
        (filter . g$6798$f3xia)
        (cons* . g$6817$f3xia)
        (assv . g$6800$f3xia)
        (assq . g$6799$f3xia)
        (assp . g$6802$f3xia)
        (assoc . g$6801$f3xia)
        (with-exception-handler . g$13910$f3xia)
        (raise-continuable . g$13909$f3xia)
        (raise . g$13908$f3xia)
        (eval . g$10599$f3xia)
        (environment . g$10595$f3xia)
        (make-enumeration . g$9071$f3xia)
        (enum-set=? . g$9078$f3xia)
        (enum-set-universe . g$9072$f3xia)
        (enum-set-union . g$9079$f3xia)
        (enum-set-subset? . g$9077$f3xia)
        (enum-set-projection . g$9083$f3xia)
        (enum-set-member? . g$9076$f3xia)
        (enum-set-intersection . g$9080$f3xia)
        (enum-set-indexer . g$9073$f3xia)
        (enum-set-difference . g$9081$f3xia)
        (enum-set-constructor . g$9074$f3xia)
        (enum-set-complement . g$9082$f3xia)
        (enum-set->list . g$9075$f3xia)
        (who-condition? . g$5290$f3xia)
        (warning? . g$5209$f3xia)
        (violation? . g$5248$f3xia)
        (undefined-violation? . g$5390$f3xia)
        (syntax-violation? . g$5375$f3xia)
        (syntax-violation-subform . g$5377$f3xia)
        (syntax-violation-form . g$5376$f3xia)
        (syntax-violation . g$10618$f3xia)
        (simple-conditions . g$13907$f3xia)
        (serious-condition? . g$5222$f3xia)
        (non-continuable-violation? . g$5334$f3xia)
        (message-condition? . g$5195$f3xia)
        (make-who-condition . g$5288$f3xia)
        (make-warning . g$5208$f3xia)
        (make-violation . g$5247$f3xia)
        (make-undefined-violation . g$5389$f3xia)
        (make-syntax-violation . g$5372$f3xia)
        (make-serious-condition . g$5221$f3xia)
        (make-non-continuable-violation . g$5333$f3xia)
        (make-message-condition . g$5193$f3xia)
        (make-lexical-violation . g$5359$f3xia)
        (make-irritants-condition . g$5273$f3xia)
        (make-implementation-restriction-violation . g$5346$f3xia)
        (make-error . g$5234$f3xia)
        (make-assertion-violation . g$5260$f3xia)
        (lexical-violation? . g$5360$f3xia)
        (irritants-condition? . g$5275$f3xia)
        (implementation-restriction-violation? . g$5347$f3xia)
        (error? . g$5235$f3xia)
        (condition-who . g$5291$f3xia)
        (condition-predicate . g$13906$f3xia)
        (condition-message . g$5196$f3xia)
        (condition-irritants . g$5276$f3xia)
        (condition-accessor . g$13905$f3xia)
        (condition . g$13904$f3xia)
        (assertion-violation? . g$5261$f3xia)
        (condition? . g$13903$f3xia)
        (utf32->string . g$7411$f3xia)
        (utf16->string . g$7410$f3xia)
        (utf8->string . g$7408$f3xia)
        (uint-list->bytevector . g$7412$f3xia)
        (u8-list->bytevector . g$7400$f3xia)
        (string->utf8 . g$7405$f3xia)
        (string->utf32 . g$7407$f3xia)
        (string->utf16 . g$7406$f3xia)
        (sint-list->bytevector . g$7413$f3xia)
        (native-endianness . g$7376$f3xia)
        (bytevector? . g$6990$f3xia)
        (bytevector=? . g$7391$f3xia)
        (bytevector-uint-set! . g$7403$f3xia)
        (bytevector-uint-ref . g$7401$f3xia)
        (bytevector-u8-set! . g$7396$f3xia)
        (bytevector-u8-ref . g$7395$f3xia)
        (bytevector-u64-set! . g$7441$f3xia)
        (bytevector-u64-ref . g$7437$f3xia)
        (bytevector-u64-native-set! . g$7443$f3xia)
        (bytevector-u64-native-ref . g$7439$f3xia)
        (bytevector-u32-set! . g$7433$f3xia)
        (bytevector-u32-ref . g$7429$f3xia)
        (bytevector-u32-native-set! . g$7435$f3xia)
        (bytevector-u32-native-ref . g$7431$f3xia)
        (bytevector-u16-set! . g$7425$f3xia)
        (bytevector-u16-ref . g$7421$f3xia)
        (bytevector-u16-native-set! . g$7427$f3xia)
        (bytevector-u16-native-ref . g$7423$f3xia)
        (bytevector-sint-set! . g$7404$f3xia)
        (bytevector-sint-ref . g$7402$f3xia)
        (bytevector-s8-set! . g$7398$f3xia)
        (bytevector-s8-ref . g$7397$f3xia)
        (bytevector-s64-set! . g$7442$f3xia)
        (bytevector-s64-ref . g$7438$f3xia)
        (bytevector-s64-native-set! . g$7444$f3xia)
        (bytevector-s64-native-ref . g$7440$f3xia)
        (bytevector-s32-set! . g$7434$f3xia)
        (bytevector-s32-ref . g$7430$f3xia)
        (bytevector-s32-native-set! . g$7436$f3xia)
        (bytevector-s32-native-ref . g$7432$f3xia)
        (bytevector-s16-set! . g$7426$f3xia)
        (bytevector-s16-ref . g$7422$f3xia)
        (bytevector-s16-native-set! . g$7428$f3xia)
        (bytevector-s16-native-ref . g$7424$f3xia)
        (bytevector-length . g$7390$f3xia)
        (bytevector-ieee-single-set! . g$7419$f3xia)
        (bytevector-ieee-single-ref . g$7417$f3xia)
        (bytevector-ieee-single-native-set! . g$7447$f3xia)
        (bytevector-ieee-single-native-ref . g$7445$f3xia)
        (bytevector-ieee-double-set! . g$7420$f3xia)
        (bytevector-ieee-double-ref . g$7418$f3xia)
        (bytevector-ieee-double-native-set! . g$7448$f3xia)
        (bytevector-ieee-double-native-ref . g$7446$f3xia)
        (bytevector-fill! . g$7392$f3xia)
        (bytevector-copy! . g$7393$f3xia)
        (bytevector-copy . g$7394$f3xia)
        (bytevector->uint-list . g$7414$f3xia)
        (bytevector->u8-list . g$7399$f3xia)
        (bytevector->sint-list . g$7415$f3xia)
        (no-nans-violation? . g$5580$f3xia)
        (no-infinities-violation? . g$5567$f3xia)
        (make-no-nans-violation . g$5579$f3xia)
        (make-no-infinities-violation . g$5566$f3xia)
        (real->flonum . g$7721$f3xia)
        (flzero? . g$8415$f3xia)
        (fltruncate . g$8410$f3xia)
        (fltan . g$8396$f3xia)
        (flsqrt . g$8401$f3xia)
        (flsin . g$8394$f3xia)
        (flround . g$8411$f3xia)
        (flpositive? . g$8413$f3xia)
        (flonum? . g$6995$f3xia)
        (flodd? . g$8417$f3xia)
        (flnumerator . g$8360$f3xia)
        (flnegative? . g$8414$f3xia)
        (flnan? . g$8393$f3xia)
        (flmod0 . g$8378$f3xia)
        (flmod . g$8377$f3xia)
        (flmin . g$8419$f3xia)
        (flmax . g$8418$f3xia)
        (fllog . g$8400$f3xia)
        (flinteger? . g$8386$f3xia)
        (flinfinite? . g$8392$f3xia)
        (flfloor . g$8409$f3xia)
        (flfinite? . g$8387$f3xia)
        (flexpt . g$8403$f3xia)
        (flexp . g$8402$f3xia)
        (fleven? . g$8416$f3xia)
        (fldiv0-and-mod0 . g$8385$f3xia)
        (fldiv0 . g$8372$f3xia)
        (fldiv-and-mod . g$8379$f3xia)
        (fldiv . g$8384$f3xia)
        (fldenominator . g$8359$f3xia)
        (flcos . g$8395$f3xia)
        (flceiling . g$8404$f3xia)
        (flatan . g$8399$f3xia)
        (flasin . g$8397$f3xia)
        (flacos . g$8398$f3xia)
        (flabs . g$8412$f3xia)
        (fl>? . g$8366$f3xia)
        (fl>=? . g$8367$f3xia)
        (fl=? . g$8363$f3xia)
        (fl<? . g$8364$f3xia)
        (fl<=? . g$8365$f3xia)
        (fl/ . g$8362$f3xia)
        (fl- . g$8361$f3xia)
        (fl+ . g$8357$f3xia)
        (fl* . g$8358$f3xia)
        (fixnum->flonum . g$7722$f3xia)
        (fxzero? . g$5924$f3xia)
        (fxxor . g$5887$f3xia)
        (fxrotate-bit-field . g$5962$f3xia)
        (fxreverse-bit-field . g$5963$f3xia)
        (fxpositive? . g$5914$f3xia)
        (fxodd? . g$5934$f3xia)
        (fxnot . g$5868$f3xia)
        (fxnegative? . g$5919$f3xia)
        (fxmod0 . g$5898$f3xia)
        (fxmod . g$5897$f3xia)
        (fxmin . g$5936$f3xia)
        (fxmax . g$5935$f3xia)
        (fxlength . g$5865$f3xia)
        (fxior . g$5886$f3xia)
        (fxif . g$5944$f3xia)
        (fxfirst-bit-set . g$5866$f3xia)
        (fxeven? . g$5929$f3xia)
        (fxdiv0-and-mod0 . g$5909$f3xia)
        (fxdiv0 . g$5904$f3xia)
        (fxdiv-and-mod . g$5899$f3xia)
        (fxdiv . g$5892$f3xia)
        (fxcopy-bit-field . g$5959$f3xia)
        (fxcopy-bit . g$5949$f3xia)
        (fxbit-set? . g$5867$f3xia)
        (fxbit-field . g$5954$f3xia)
        (fxbit-count . g$5860$f3xia)
        (fxarithmetic-shift-right . g$5961$f3xia)
        (fxarithmetic-shift-left . g$5960$f3xia)
        (fxarithmetic-shift . g$5855$f3xia)
        (fxand . g$5885$f3xia)
        (fx>? . g$5877$f3xia)
        (fx>=? . g$5878$f3xia)
        (fx=? . g$5874$f3xia)
        (fx<? . g$5875$f3xia)
        (fx<=? . g$5876$f3xia)
        (fx-/carry . g$5938$f3xia)
        (fx- . g$5849$f3xia)
        (fx+/carry . g$5939$f3xia)
        (fx+ . g$5847$f3xia)
        (fx*/carry . g$5937$f3xia)
        (fx* . g$5848$f3xia)
        (greatest-fixnum . g$5818$f3xia)
        (least-fixnum . g$5819$f3xia)
        (fixnum-width . g$6996$f3xia)
        (fixnum? . g$6994$f3xia)
        (bitwise-rotate-bit-field . g$8255$f3xia)
        (bitwise-reverse-bit-field . g$8256$f3xia)
        (bitwise-length . g$8245$f3xia)
        (bitwise-if . g$8248$f3xia)
        (bitwise-first-bit-set . g$8246$f3xia)
        (bitwise-copy-bit-field . g$8251$f3xia)
        (bitwise-copy-bit . g$8249$f3xia)
        (bitwise-bit-set? . g$8247$f3xia)
        (bitwise-bit-field . g$8250$f3xia)
        (bitwise-bit-count . g$8244$f3xia)
        (bitwise-xor . g$8243$f3xia)
        (bitwise-ior . g$8242$f3xia)
        (bitwise-and . g$8241$f3xia)
        (bitwise-not . g$8240$f3xia)
        (bitwise-arithmetic-shift-right . g$8254$f3xia)
        (bitwise-arithmetic-shift-left . g$8253$f3xia)
        (bitwise-arithmetic-shift . g$8252$f3xia)
        (zero? . g$7736$f3xia)
        (vector? . g$6989$f3xia)
        (vector-set! . g$7021$f3xia)
        (vector-ref . g$7020$f3xia)
        (vector-map . g$7088$f3xia)
        (vector-length . g$7023$f3xia)
        (vector-for-each . g$7089$f3xia)
        (vector-fill! . g$7024$f3xia)
        (vector->list . g$7025$f3xia)
        (vector . g$13902$f3xia)
        (values . g$13901$f3xia)
        (truncate . g$7788$f3xia)
        (tan . g$7780$f3xia)
        (symbol? . g$6991$f3xia)
        (symbol=? . g$7073$f3xia)
        (symbol->string . g$7011$f3xia)
        (substring . g$7008$f3xia)
        (string? . g$6987$f3xia)
        (string>? . g$7070$f3xia)
        (string>=? . g$7072$f3xia)
        (string=? . g$7068$f3xia)
        (string<? . g$7069$f3xia)
        (string<=? . g$7071$f3xia)
        (string-ref . g$7000$f3xia)
        (string-length . g$7003$f3xia)
        (string-for-each . g$7090$f3xia)
        (string-copy . g$7007$f3xia)
        (string-append . g$7009$f3xia)
        (string->symbol . g$7012$f3xia)
        (string->number . g$13900$f3xia)
        (string->list . g$7006$f3xia)
        (string . g$7005$f3xia)
        (sqrt . g$7790$f3xia)
        (sin . g$7774$f3xia)
        (round . g$7789$f3xia)
        (reverse . g$7027$f3xia)
        (real? . g$7730$f3xia)
        (real-valued? . g$7733$f3xia)
        (real-part . g$7767$f3xia)
        (rationalize . g$7085$f3xia)
        (rational? . g$7731$f3xia)
        (rational-valued? . g$7734$f3xia)
        (procedure? . g$6993$f3xia)
        (positive? . g$7737$f3xia)
        (pair? . g$13899$f3xia)
        (odd? . g$7057$f3xia)
        (numerator . g$7765$f3xia)
        (number? . g$7723$f3xia)
        (number->string . g$7744$f3xia)
        (null? . g$13898$f3xia)
        (not . g$13897$f3xia)
        (negative? . g$7738$f3xia)
        (nan? . g$7724$f3xia)
        (min . g$7059$f3xia)
        (max . g$7058$f3xia)
        (map . g$6815$f3xia)
        (make-vector . g$7022$f3xia)
        (make-string . g$6999$f3xia)
        (make-rectangular . g$7760$f3xia)
        (make-polar . g$7761$f3xia)
        (magnitude . g$7763$f3xia)
        (log . g$7783$f3xia)
        (list? . g$6810$f3xia)
        (list-tail . g$6791$f3xia)
        (list-ref . g$6792$f3xia)
        (list->vector . g$7018$f3xia)
        (list->string . g$7019$f3xia)
        (list . g$13896$f3xia)
        (length . g$6812$f3xia)
        (lcm . g$7061$f3xia)
        (integer? . g$7732$f3xia)
        (integer-valued? . g$7735$f3xia)
        (integer->char . g$6998$f3xia)
        (infinite? . g$7726$f3xia)
        (inexact? . g$7728$f3xia)
        (inexact . g$7739$f3xia)
        (imag-part . g$7768$f3xia)
        (gcd . g$7060$f3xia)
        (for-each . g$6816$f3xia)
        (floor . g$7786$f3xia)
        (finite? . g$7725$f3xia)
        (expt . g$7792$f3xia)
        (exp . g$7773$f3xia)
        (exact? . g$7727$f3xia)
        (exact-integer-sqrt . g$7791$f3xia)
        (exact . g$7740$f3xia)
        (even? . g$7056$f3xia)
        (error . g$5586$f3xia)
        (eqv? . g$13895$f3xia)
        (equal? . g$9203$f3xia)
        (eq? . g$13894$f3xia)
        (dynamic-wind . g$13893$f3xia)
        (div0-and-mod0 . g$7017$f3xia)
        (mod0 . g$7015$f3xia)
        (div0 . g$7013$f3xia)
        (div-and-mod . g$7016$f3xia)
        (mod . g$7014$f3xia)
        (div . g$7784$f3xia)
        (denominator . g$7766$f3xia)
        (cos . g$7777$f3xia)
        (cons . g$13892$f3xia)
        (complex? . g$7729$f3xia)
        (char? . g$6988$f3xia)
        (char>? . g$7082$f3xia)
        (char>=? . g$7084$f3xia)
        (char=? . g$7080$f3xia)
        (char<? . g$7081$f3xia)
        (char<=? . g$7083$f3xia)
        (char->integer . g$6997$f3xia)
        (ceiling . g$7787$f3xia)
        (call-with-values . g$13891$f3xia)
        (call/cc . g$13890$f3xia)
        (call-with-current-continuation . g$13889$f3xia)
        (cddddr . g$7055$f3xia)
        (cdddar . g$7054$f3xia)
        (cddadr . g$7053$f3xia)
        (cddaar . g$7052$f3xia)
        (cdaddr . g$7051$f3xia)
        (cdadar . g$7050$f3xia)
        (cdaadr . g$7049$f3xia)
        (cdaaar . g$7048$f3xia)
        (cadddr . g$7047$f3xia)
        (caddar . g$7046$f3xia)
        (cadadr . g$7045$f3xia)
        (cadaar . g$7044$f3xia)
        (caaddr . g$7043$f3xia)
        (caadar . g$7042$f3xia)
        (caaadr . g$7041$f3xia)
        (caaaar . g$7040$f3xia)
        (cdddr . g$7039$f3xia)
        (cddar . g$7038$f3xia)
        (cdadr . g$7037$f3xia)
        (cdaar . g$7036$f3xia)
        (caddr . g$7035$f3xia)
        (cadar . g$7034$f3xia)
        (caadr . g$7033$f3xia)
        (caaar . g$7032$f3xia)
        (cddr . g$7031$f3xia)
        (cdar . g$7030$f3xia)
        (cadr . g$7029$f3xia)
        (caar . g$7028$f3xia)
        (cdr . g$13888$f3xia)
        (car . g$13887$f3xia)
        (boolean? . g$6992$f3xia)
        (boolean=? . g$7074$f3xia)
        (atan . g$7782$f3xia)
        (assertion-violation . g$5585$f3xia)
        (asin . g$7775$f3xia)
        (apply . g$13886$f3xia)
        (append . g$6821$f3xia)
        (angle . g$7762$f3xia)
        (acos . g$7778$f3xia)
        (abs . g$7785$f3xia)
        (/ . g$13885$f3xia)
        (* . g$13884$f3xia)
        (- . g$13883$f3xia)
        (+ . g$13882$f3xia)
        (>= . g$7759$f3xia)
        (> . g$7758$f3xia)
        (= . g$7755$f3xia)
        (<= . g$7757$f3xia)
        (< . g$7756$f3xia)
        ($bytevector-set! . g$13881$f3xia)
        ($bytevector-ref . g$13880$f3xia)
        ($fl>=? . g$13879$f3xia)
        ($fl>? . g$13878$f3xia)
        ($fl<=? . g$13877$f3xia)
        ($fl<? . g$13876$f3xia)
        ($fl- . g$13875$f3xia)
        ($fl/ . g$13874$f3xia)
        ($fl* . g$13873$f3xia)
        ($fl+ . g$13872$f3xia)
        ($fl=? . g$13871$f3xia)
        ($try . g$13870$f3xia)
        ($fxarithmetic-shift-right . g$13869$f3xia)
        ($fxarithmetic-shift-left . g$13868$f3xia)
        ($$fx- . g$13867$f3xia)
        ($$fx* . g$13866$f3xia)
        ($$fx+ . g$13865$f3xia)
        ($fxnot . g$13864$f3xia)
        ($fxxor . g$13863$f3xia)
        ($fxior . g$13862$f3xia)
        ($fxand . g$13861$f3xia)
        ($fx>=? . g$13860$f3xia)
        ($fx>? . g$13859$f3xia)
        ($fx<=? . g$13858$f3xia)
        ($fx<? . g$13857$f3xia)
        ($fx- . g$13856$f3xia)
        ($fxmod0 . g$13855$f3xia)
        ($fxdiv0 . g$13854$f3xia)
        ($fx* . g$13853$f3xia)
        ($fx+ . g$13852$f3xia)
        ($fx=? . g$13851$f3xia)
        ($vector-set! . g$13850$f3xia)
        ($vector-ref . g$13849$f3xia)
        ($cdr . g$13848$f3xia)
        ($car . g$13847$f3xia)
        (make-record-printer . g$13846$f3xia)
        (eqv-hash . g$13845$f3xia)
        (reverse! . g$13844$f3xia)
        (deserialize-port . g$13843$f3xia)
        (serialize-port . g$13842$f3xia)
        (enum-set? . g$9048$f3xia)
        (make-promise . g$8059$f3xia)
        (load/unload . g$13644$f3xia)
        (load/args . g$13643$f3xia)
        (printf . g$9157$f3xia)
        (fprintf . g$9158$f3xia)
        (format . g$9159$f3xia)
        (procedure-form . g$13841$f3xia)
        (procedure-environment . g$13840$f3xia)
        (procedure-name . g$13839$f3xia)
        (procedure-arity . g$13838$f3xia)
        (gc-collect . g$13837$f3xia)
        (typeof . g$13836$f3xia)
        (clr-type? . g$13835$f3xia)
        (get-clr-type . g$13834$f3xia)
        (get-command-line . g$13833$f3xia)
        (vector-append . g$13832$f3xia)
        (vector-filter . g$13831$f3xia)
        (vector-reverse! . g$13830$f3xia)
        (vector-contains? . g$13829$f3xia)
        (vector-index-of . g$13828$f3xia)
        (vector-copy . g$13827$f3xia)
        (vector-binary-search . g$13826$f3xia)
        (string-ci-compare . g$13825$f3xia)
        (string-compare . g$13824$f3xia)
        (string-format . g$13823$f3xia)
        (trace-printer . g$13638$f3xia)
        (make-traced-procedure . g$13822$f3xia)
        (make-traced-macro . g$9179$f3xia)
        (assertion-error . g$10614$f3xia)
        (time-it . g$13821$f3xia)
        (make-parameter . g$9282$f3xia)
        (library-locator . g$13820$f3xia)
        (get-library-paths . g$13819$f3xia)
        (open-tcp-input/output-port . g$13818$f3xia)
        (hashtable-for-each . g$13817$f3xia)
        (hashtable-map . g$13816$f3xia)
        (environment-bindings . g$10591$f3xia)
        (environment-symbols . g$10594$f3xia)
        (interaction-environment-symbols . g$10590$f3xia)
        (optimization-level . g$13815$f3xia)
        (library-path . g$9920$f3xia)
        (make-compile-time-value . g$10299$f3xia)
        (expand->core . g$10600$f3xia)
        (expand . g$10598$f3xia)
        (emacs-mode? . g$13641$f3xia)
        (syntax-transpose . g$10537$f3xia)
        (convert->cps . g$9601$f3xia)
        (inexact=? . g$13814$f3xia)
        (bignum-sqrt-exact . g$13813$f3xia)
        (bignum-sqrt . g$13812$f3xia)
        (flonum->string . g$13811$f3xia)
        (inexact-compare . g$13810$f3xia)
        (exact-compare . g$13809$f3xia)
        (condition-stacktrace . g$5321$f3xia)
        (stacktrace-condition? . g$5320$f3xia)
        (stacktrace-enable? . g$13639$f3xia)
        (make-stacktrace-condition . g$5318$f3xia)
        (condition-where . g$5306$f3xia)
        (where-condition? . g$5305$f3xia)
        (make-where-condition . g$5303$f3xia)
        (installed-libraries . g$9941$f3xia)
        (uninstall-library . g$9932$f3xia)
        (pretty-gensyms . g$9365$f3xia)
        (pretty-width . g$9362$f3xia)
        (pretty-print . g$9367$f3xia)
        (pointer+ . g$13808$f3xia)
        (&stacktrace . g$13807$f3xia)
        (&where . g$13806$f3xia)
        (&no-nans . g$13805$f3xia)
        (&no-infinities . g$13804$f3xia)
        (&i/o-encoding . g$13803$f3xia)
        (&i/o-decoding . g$13802$f3xia)
        (&i/o-port . g$13801$f3xia)
        (&i/o-file-does-not-exist . g$13800$f3xia)
        (&i/o-file-already-exists . g$13799$f3xia)
        (&i/o-file-is-read-only . g$13798$f3xia)
        (&i/o-file-protection . g$13797$f3xia)
        (&i/o-filename . g$13796$f3xia)
        (&i/o-invalid-position . g$13795$f3xia)
        (&i/o-write . g$13794$f3xia)
        (&i/o-read . g$13793$f3xia)
        (&i/o . g$13792$f3xia)
        (&non-continuable . g$13791$f3xia)
        (&undefined . g$13790$f3xia)
        (&syntax . g$13789$f3xia)
        (&lexical . g$13788$f3xia)
        (&implementation-restriction . g$13787$f3xia)
        (&who . g$13786$f3xia)
        (&irritants . g$13785$f3xia)
        (&assertion . g$13784$f3xia)
        (&violation . g$13783$f3xia)
        (&error . g$13782$f3xia)
        (&serious . g$13781$f3xia)
        (&warning . g$13780$f3xia)
        (&message . g$13779$f3xia)
        (&condition . g$13778$f3xia)
        (define-condition-type . g$13777$f3xia)
        (define-enumeration . g$13776$f3xia)
        (define-record-type . g$13775$f3xia)
        (parent-rtd . g$13774$f3xia)
        (nongenerative . g$13773$f3xia)
        (opaque . g$13772$f3xia)
        (sealed . g$13771$f3xia)
        (protocol . g$13770$f3xia)
        (parent . g$13769$f3xia)
        (immutable . g$13768$f3xia)
        (mutable . g$13767$f3xia)
        (fields . g$13766$f3xia)
        (error-handling-mode . g$13765$f3xia)
        (file-options . g$13764$f3xia)
        (buffer-mode . g$13763$f3xia)
        (eol-style . g$13762$f3xia)
        (guard . g$13761$f3xia)
        (trace-letrec-syntax . g$13760$f3xia)
        (trace-let-syntax . g$13759$f3xia)
        (trace-define-syntax . g$13758$f3xia)
        (trace-define . g$13757$f3xia)
        (trace-lambda . g$13756$f3xia)
        (unsyntax-splicing . g$13755$f3xia)
        (unsyntax . g$13754$f3xia)
        (unquote-splicing . g$13753$f3xia)
        (unquote . g$13752$f3xia)
        (_ . g$13751$f3xia)
        (else . g$13750$f3xia)
        (=> . g$13749$f3xia)
        (... . g$13748$f3xia)
        (assert . g$13747$f3xia)
        (endianness . g$13746$f3xia)
        (delay . g$13745$f3xia)
        (time . g$13744$f3xia)
        (or . g$13743$f3xia)
        (and . g$13742$f3xia)
        (do . g$13741$f3xia)
        (cond . g$13740$f3xia)
        (let* . g$13739$f3xia)
        (let . g$13738$f3xia)
        (identifier-syntax . g$13737$f3xia)
        (with-syntax . g$13736$f3xia)
        (quasisyntax . g$13735$f3xia)
        (quasiquote . g$13734$f3xia)
        (syntax-rules . g$13733$f3xia)
        (include-into . g$13732$f3xia)
        (include . g$13731$f3xia)
        (define-struct . g$13730$f3xia)
        (let-values . g$13729$f3xia)
        (let*-values . g$13728$f3xia)
        (record-constructor-descriptor . g$13727$f3xia)
        (record-type-descriptor . g$13726$f3xia)
        (fluid-let-syntax . g$13725$f3xia)
        (case . g$13724$f3xia)
        (parameterize . g$13723$f3xia)
        (unless . g$13722$f3xia)
        (when . g$13721$f3xia)
        (if . g$13720$f3xia)
        (letrec* . g$13719$f3xia)
        (letrec . g$13718$f3xia)
        (type-descriptor . g$13717$f3xia)
        (case-lambda . g$13716$f3xia)
        (lambda . g$13715$f3xia)
        (syntax . g$13714$f3xia)
        (syntax-case . g$13713$f3xia)
        (quote . g$13712$f3xia)
        (foreign-call . g$13711$f3xia)
        (letrec-syntax . g$13710$f3xia)
        (let-syntax . g$13709$f3xia)
        (set! . g$13708$f3xia)
        (export . g$13707$f3xia)
        (import . g$13706$f3xia)
        (library . g$13705$f3xia)
        (begin . g$13704$f3xia)
        (module . g$13703$f3xia)
        (define-syntax . g$13702$f3xia)
        (define . g$13701$f3xia))
      '((g$10494$f3xia core-prim . ellipsis-map)
        (g$5323$f3xia core-prim . &stacktrace-rcd)
        (g$5322$f3xia core-prim . &stacktrace-rtd)
        (g$5308$f3xia core-prim . &where-rcd)
        (g$5307$f3xia core-prim . &where-rtd)
        (g$5582$f3xia core-prim . &no-nans-rcd)
        (g$5581$f3xia core-prim . &no-nans-rtd)
        (g$5569$f3xia core-prim . &no-infinities-rcd)
        (g$5568$f3xia core-prim . &no-infinities-rtd)
        (g$5556$f3xia core-prim . &i/o-encoding-rcd)
        (g$5555$f3xia core-prim . &i/o-encoding-rtd)
        (g$5541$f3xia core-prim . &i/o-decoding-rcd)
        (g$5540$f3xia core-prim . &i/o-decoding-rtd)
        (g$5528$f3xia core-prim . &i/o-port-rcd)
        (g$5527$f3xia core-prim . &i/o-port-rtd)
        (g$5513$f3xia core-prim . &i/o-file-does-not-exist-rcd)
        (g$5512$f3xia core-prim . &i/o-file-does-not-exist-rtd)
        (g$5500$f3xia core-prim . &i/o-file-already-exists-rcd)
        (g$5499$f3xia core-prim . &i/o-file-already-exists-rtd)
        (g$5487$f3xia core-prim . &i/o-file-is-read-only-rcd)
        (g$5486$f3xia core-prim . &i/o-file-is-read-only-rtd)
        (g$5474$f3xia core-prim . &i/o-file-protection-rcd)
        (g$5473$f3xia core-prim . &i/o-file-protection-rtd)
        (g$5461$f3xia core-prim . &i/o-filename-rcd)
        (g$5460$f3xia core-prim . &i/o-filename-rtd)
        (g$5446$f3xia core-prim . &i/o-invalid-position-rcd)
        (g$5445$f3xia core-prim . &i/o-invalid-position-rtd)
        (g$5431$f3xia core-prim . &i/o-write-rcd)
        (g$5430$f3xia core-prim . &i/o-write-rtd)
        (g$5418$f3xia core-prim . &i/o-read-rcd)
        (g$5417$f3xia core-prim . &i/o-read-rtd)
        (g$5405$f3xia core-prim . &i/o-rcd)
        (g$5404$f3xia core-prim . &i/o-rtd)
        (g$5392$f3xia core-prim . &undefined-rcd)
        (g$5391$f3xia core-prim . &undefined-rtd)
        (g$5379$f3xia core-prim . &syntax-rcd)
        (g$5378$f3xia core-prim . &syntax-rtd)
        (g$5362$f3xia core-prim . &lexical-rcd)
        (g$5361$f3xia core-prim . &lexical-rtd)
        (g$5349$f3xia core-prim . &implementation-restriction-rcd)
        (g$5348$f3xia core-prim . &implementation-restriction-rtd)
        (g$5336$f3xia core-prim . &non-continuable-rcd)
        (g$5335$f3xia core-prim . &non-continuable-rtd)
        (g$5293$f3xia core-prim . &who-rcd)
        (g$5292$f3xia core-prim . &who-rtd)
        (g$5278$f3xia core-prim . &irritants-rcd)
        (g$5277$f3xia core-prim . &irritants-rtd)
        (g$5263$f3xia core-prim . &assertion-rcd)
        (g$5262$f3xia core-prim . &assertion-rtd)
        (g$5250$f3xia core-prim . &violation-rcd)
        (g$5249$f3xia core-prim . &violation-rtd)
        (g$5237$f3xia core-prim . &error-rcd)
        (g$5236$f3xia core-prim . &error-rtd)
        (g$5224$f3xia core-prim . &serious-rcd)
        (g$5223$f3xia core-prim . &serious-rtd)
        (g$5211$f3xia core-prim . &warning-rcd)
        (g$5210$f3xia core-prim . &warning-rtd)
        (g$5198$f3xia core-prim . &message-rcd)
        (g$5197$f3xia core-prim . &message-rtd)
        (g$5158$f3xia core-prim . &condition-rcd)
        (g$5157$f3xia core-prim . &condition-rtd)
        (g$14040$f3xia core-prim . library-letrec*)
        (g$14039$f3xia core-prim . annotation-stripped)
        (g$14038$f3xia core-prim . annotation-source)
        (g$14037$f3xia core-prim . annotation-expression)
        (g$14036$f3xia core-prim . annotation?)
        (g$14035$f3xia core-prim . read-annotated)
        (g$7781$f3xia core-prim . tanh)
        (g$7779$f3xia core-prim . cosh)
        (g$7776$f3xia core-prim . sinh)
        (g$14034$f3xia core-prim . make-guid)
        (g$14033$f3xia core-prim . unspecified?)
        (g$6794$f3xia core-prim . make-list)
        (g$6793$f3xia core-prim . last-pair)
        (g$14032$f3xia core-prim . load-r5rs)
        (g$14031$f3xia core-prim . license)
        (g$14030$f3xia core-prim . stacktrace)
        (g$13646$f3xia core-prim . ironscheme-test)
        (g$13647$f3xia core-prim . ironscheme-build)
        (g$14029$f3xia core-prim . pinvoke-call-internal)
        (g$14028$f3xia core-prim . ffi-callback-internal)
        (g$14027$f3xia core-prim . ffi-callout-internal)
        (g$14026$f3xia core-prim . define-clr-class-internal)
        (g$14025$f3xia core-prim . clr-field-set!-internal)
        (g$14024$f3xia core-prim . clr-field-get-internal)
        (g$14023$f3xia core-prim . clr-cast-internal)
        (g$14022$f3xia core-prim . clr-call-internal)
        (g$14021$f3xia core-prim . clr-new-internal)
        (g$14020$f3xia core-prim . clr-new-array-internal)
        (g$14019$f3xia core-prim . clr-is-internal)
        (g$14018$f3xia core-prim . clr-reference-internal)
        (g$14017$f3xia core-prim . clr-using-internal)
        (g$10615$f3xia core-prim . syntax-error)
        (g$10489$f3xia core-prim . syntax-dispatch)
        (g$14016$f3xia core-prim . compile-core)
        (g$14015$f3xia core-prim . eval-core)
        (g$14014$f3xia core-prim . remove-location)
        (g$14013$f3xia core-prim . set-symbol-value!)
        (g$14012$f3xia core-prim . symbol-value)
        (g$14011$f3xia core-prim . symbol-bound?)
        (g$14010$f3xia core-prim . ungensym)
        (g$14009$f3xia core-prim . gensym)
        (g$14008$f3xia core-prim . void)
        (g$14007$f3xia core-prim . load-serialized-library)
        (g$14006$f3xia core-prim . serialize-library)
        (g$13652$f3xia core-prim . compile-system-libraries)
        (g$13654$f3xia core-prim . compile->closure)
        (g$13653$f3xia core-prim . compile)
        (g$13645$f3xia core-prim . load)
        (g$14005$f3xia core-prim . string-normalize)
        (g$10624$f3xia core-prim . new-interaction-environment)
        (g$10625$f3xia core-prim . interaction-environment)
        (g$14004$f3xia core-prim . char-ready?)
        (g$8149$f3xia core-prim . string-upcase)
        (g$8137$f3xia core-prim . string-titlecase)
        (g$8158$f3xia core-prim . string-normalize-nfkd)
        (g$8157$f3xia core-prim . string-normalize-nfkc)
        (g$8156$f3xia core-prim . string-normalize-nfd)
        (g$8155$f3xia core-prim . string-normalize-nfc)
        (g$8138$f3xia core-prim . string-foldcase)
        (g$14003$f3xia core-prim . string-downcase)
        (g$8134$f3xia core-prim . string-ci>?)
        (g$8136$f3xia core-prim . string-ci>=?)
        (g$8132$f3xia core-prim . string-ci=?)
        (g$8133$f3xia core-prim . string-ci<?)
        (g$8135$f3xia core-prim . string-ci<=?)
        (g$8114$f3xia core-prim . char-whitespace?)
        (g$8115$f3xia core-prim . char-upper-case?)
        (g$8117$f3xia core-prim . char-title-case?)
        (g$8113$f3xia core-prim . char-numeric?)
        (g$8116$f3xia core-prim . char-lower-case?)
        (g$8118$f3xia core-prim . char-general-category)
        (g$8108$f3xia core-prim . char-upcase)
        (g$8110$f3xia core-prim . char-titlecase)
        (g$8111$f3xia core-prim . char-foldcase)
        (g$8109$f3xia core-prim . char-downcase)
        (g$8146$f3xia core-prim . char-ci>?)
        (g$8148$f3xia core-prim . char-ci>=?)
        (g$8144$f3xia core-prim . char-ci=?)
        (g$8145$f3xia core-prim . char-ci<?)
        (g$8147$f3xia core-prim . char-ci<=?)
        (g$8112$f3xia core-prim . char-alphabetic?)
        (g$10301$f3xia core-prim . variable-transformer-procedure)
        (g$10300$f3xia core-prim . variable-transformer?)
        (g$10298$f3xia core-prim . make-variable-transformer)
        (g$10619$f3xia core-prim . identifier?)
        (g$10607$f3xia core-prim . generate-temporaries)
        (g$10608$f3xia core-prim . free-identifier=?)
        (g$10621$f3xia core-prim . syntax->datum)
        (g$10620$f3xia core-prim . datum->syntax)
        (g$10609$f3xia core-prim . bound-identifier=?)
        (g$14002$f3xia core-prim . record-type-descriptor?)
        (g$14001$f3xia core-prim . record-predicate)
        (g$14000$f3xia core-prim . record-mutator)
        (g$13999$f3xia core-prim . record-constructor)
        (g$13998$f3xia core-prim . record-accessor)
        (g$13997$f3xia core-prim . make-record-type-descriptor)
        (g$13996$f3xia core-prim . make-record-constructor-descriptor)
        (g$13995$f3xia core-prim . record?)
        (g$13994$f3xia core-prim . record-type-uid)
        (g$13993$f3xia core-prim . record-type-sealed?)
        (g$13992$f3xia core-prim . record-type-parent)
        (g$13991$f3xia core-prim . record-type-opaque?)
        (g$13990$f3xia core-prim . record-type-name)
        (g$13989$f3xia core-prim . record-type-generative?)
        (g$13988$f3xia core-prim . record-type-field-names)
        (g$13987$f3xia core-prim . record-rtd)
        (g$13986$f3xia core-prim . record-field-mutable?)
        (g$7370$f3xia core-prim . delete-file)
        (g$7369$f3xia core-prim . file-exists?)
        (g$13985$f3xia core-prim . vector-sort!)
        (g$8078$f3xia core-prim . vector-sort)
        (g$8077$f3xia core-prim . list-sort)
        (g$7340$f3xia core-prim . symbol-hash)
        (g$7339$f3xia core-prim . string-ci-hash)
        (g$7338$f3xia core-prim . string-hash)
        (g$13984$f3xia core-prim . equal-hash)
        (g$13983$f3xia core-prim . hashtable-equivalence-function)
        (g$13982$f3xia core-prim . make-hashtable)
        (g$13981$f3xia core-prim . hashtable-hash-function)
        (g$7330$f3xia core-prim . make-eqv-hashtable)
        (g$7329$f3xia core-prim . make-eq-hashtable)
        (g$7328$f3xia core-prim . hashtable?)
        (g$7336$f3xia core-prim . hashtable-update!)
        (g$7331$f3xia core-prim . hashtable-size)
        (g$7333$f3xia core-prim . hashtable-set!)
        (g$7332$f3xia core-prim . hashtable-ref)
        (g$13980$f3xia core-prim . hashtable-mutable?)
        (g$13979$f3xia core-prim . hashtable-keys)
        (g$13978$f3xia core-prim . hashtable-entries)
        (g$7334$f3xia core-prim . hashtable-delete!)
        (g$13977$f3xia core-prim . hashtable-copy)
        (g$7335$f3xia core-prim . hashtable-contains?)
        (g$7337$f3xia core-prim . hashtable-clear!)
        (g$9010$f3xia core-prim . call-with-output-file)
        (g$9009$f3xia core-prim . call-with-input-file)
        (g$9001$f3xia core-prim . write-char)
        (g$13976$f3xia core-prim . write)
        (g$9008$f3xia core-prim . with-output-to-file)
        (g$9007$f3xia core-prim . with-input-from-file)
        (g$9000$f3xia core-prim . read-char)
        (g$13975$f3xia core-prim . read)
        (g$8999$f3xia core-prim . peek-char)
        (g$13974$f3xia core-prim . open-output-file)
        (g$13973$f3xia core-prim . open-input-file)
        (g$9011$f3xia core-prim . newline)
        (g$13972$f3xia core-prim . display)
        (g$13971$f3xia core-prim . close-output-port)
        (g$13970$f3xia core-prim . close-input-port)
        (g$13969$f3xia core-prim . eof-object?)
        (g$13968$f3xia core-prim . eof-object)
        (g$13967$f3xia core-prim . current-error-port)
        (g$13966$f3xia core-prim . current-output-port)
        (g$13965$f3xia core-prim . current-input-port)
        (g$13964$f3xia core-prim . output-port?)
        (g$13963$f3xia core-prim . input-port?)
        (g$13962$f3xia core-prim . utf-8-codec)
        (g$13961$f3xia core-prim . utf-16-codec)
        (g$13960$f3xia core-prim . transcoder-error-handling-mode)
        (g$13959$f3xia core-prim . transcoder-eol-style)
        (g$13958$f3xia core-prim . transcoder-codec)
        (g$13957$f3xia core-prim . transcoded-port)
        (g$13956$f3xia core-prim . textual-port?)
        (g$13955$f3xia core-prim . string->bytevector)
        (g$8975$f3xia core-prim . standard-output-port)
        (g$8974$f3xia core-prim . standard-input-port)
        (g$8973$f3xia core-prim . standard-error-port)
        (g$13954$f3xia core-prim . set-port-position!)
        (g$13953$f3xia core-prim . put-u8)
        (g$13952$f3xia core-prim . put-string)
        (g$8978$f3xia core-prim . put-datum)
        (g$13951$f3xia core-prim . put-char)
        (g$13950$f3xia core-prim . put-bytevector)
        (g$8983$f3xia core-prim . port?)
        (g$13949$f3xia core-prim . port-transcoder)
        (g$13948$f3xia core-prim . port-position)
        (g$13947$f3xia core-prim . port-has-set-port-position!?)
        (g$13946$f3xia core-prim . port-has-port-position?)
        (g$13945$f3xia core-prim . port-eof?)
        (g$13944$f3xia core-prim . output-port-buffer-mode)
        (g$8982$f3xia core-prim . open-string-output-port)
        (g$13943$f3xia core-prim . open-string-input-port)
        (g$13942$f3xia core-prim . open-file-output-port)
        (g$13941$f3xia core-prim . open-file-input/output-port)
        (g$13940$f3xia core-prim . open-file-input-port)
        (g$13939$f3xia core-prim . open-bytevector-output-port)
        (g$13938$f3xia core-prim . open-bytevector-input-port)
        (g$13937$f3xia core-prim . native-transcoder)
        (g$8976$f3xia core-prim . native-eol-style)
        (g$13936$f3xia core-prim . make-transcoder)
        (g$13935$f3xia core-prim . latin-1-codec)
        (g$5428$f3xia core-prim . make-i/o-write-error)
        (g$5415$f3xia core-prim . make-i/o-read-error)
        (g$5523$f3xia core-prim . make-i/o-port-error)
        (g$5441$f3xia core-prim . make-i/o-invalid-position-error)
        (g$5456$f3xia core-prim . make-i/o-filename-error)
        (g$5471$f3xia core-prim . make-i/o-file-protection-error)
        (g$5484$f3xia core-prim . make-i/o-file-is-read-only-error)
        (g$5510$f3xia core-prim . make-i/o-file-does-not-exist-error)
        (g$5497$f3xia core-prim . make-i/o-file-already-exists-error)
        (g$5402$f3xia core-prim . make-i/o-error)
        (g$5551$f3xia core-prim . make-i/o-encoding-error)
        (g$5538$f3xia core-prim . make-i/o-decoding-error)
        (g$13934$f3xia core-prim . make-custom-textual-output-port)
        (g$13933$f3xia
          core-prim
          .
          make-custom-textual-input/output-port)
        (g$13932$f3xia core-prim . make-custom-textual-input-port)
        (g$13931$f3xia core-prim . make-custom-binary-output-port)
        (g$13930$f3xia core-prim . make-custom-binary-input/output-port)
        (g$13929$f3xia core-prim . make-custom-binary-input-port)
        (g$7389$f3xia core-prim . make-bytevector)
        (g$13928$f3xia core-prim . lookahead-u8)
        (g$13927$f3xia core-prim . lookahead-char)
        (g$5429$f3xia core-prim . i/o-write-error?)
        (g$5416$f3xia core-prim . i/o-read-error?)
        (g$5525$f3xia core-prim . i/o-port-error?)
        (g$5443$f3xia core-prim . i/o-invalid-position-error?)
        (g$5444$f3xia core-prim . i/o-error-position)
        (g$5458$f3xia core-prim . i/o-filename-error?)
        (g$5472$f3xia core-prim . i/o-file-protection-error?)
        (g$5485$f3xia core-prim . i/o-file-is-read-only-error?)
        (g$5511$f3xia core-prim . i/o-file-does-not-exist-error?)
        (g$5498$f3xia core-prim . i/o-file-already-exists-error?)
        (g$5403$f3xia core-prim . i/o-error?)
        (g$5526$f3xia core-prim . i/o-error-port)
        (g$5459$f3xia core-prim . i/o-error-filename)
        (g$5553$f3xia core-prim . i/o-encoding-error?)
        (g$5554$f3xia core-prim . i/o-encoding-error-char)
        (g$5539$f3xia core-prim . i/o-decoding-error?)
        (g$13926$f3xia core-prim . get-u8)
        (g$13925$f3xia core-prim . get-string-n!)
        (g$13924$f3xia core-prim . get-string-n)
        (g$13923$f3xia core-prim . get-string-all)
        (g$13922$f3xia core-prim . get-line)
        (g$8979$f3xia core-prim . get-datum)
        (g$13921$f3xia core-prim . get-char)
        (g$13920$f3xia core-prim . get-bytevector-some)
        (g$13919$f3xia core-prim . get-bytevector-n!)
        (g$13918$f3xia core-prim . get-bytevector-n)
        (g$13917$f3xia core-prim . get-bytevector-all)
        (g$13916$f3xia core-prim . flush-output-port)
        (g$13915$f3xia core-prim . close-port)
        (g$8984$f3xia core-prim . call-with-string-output-port)
        (g$8985$f3xia core-prim . call-with-port)
        (g$13914$f3xia core-prim . call-with-bytevector-output-port)
        (g$13913$f3xia core-prim . bytevector->string)
        (g$8977$f3xia core-prim . buffer-mode?)
        (g$13912$f3xia core-prim . binary-port?)
        (g$10597$f3xia core-prim . scheme-report-environment)
        (g$8056$f3xia core-prim . quotient)
        (g$10596$f3xia core-prim . null-environment)
        (g$8057$f3xia core-prim . remainder)
        (g$8058$f3xia core-prim . modulo)
        (g$8053$f3xia core-prim . inexact->exact)
        (g$8060$f3xia core-prim . force)
        (g$8054$f3xia core-prim . exact->inexact)
        (g$13911$f3xia core-prim . exit)
        (g$13640$f3xia core-prim . command-line)
        (g$7002$f3xia core-prim . string-fill!)
        (g$7001$f3xia core-prim . string-set!)
        (g$8045$f3xia core-prim . set-cdr!)
        (g$8044$f3xia core-prim . set-car!)
        (g$6824$f3xia core-prim . remove)
        (g$6825$f3xia core-prim . remv)
        (g$6797$f3xia core-prim . remp)
        (g$6826$f3xia core-prim . remq)
        (g$6796$f3xia core-prim . partition)
        (g$6804$f3xia core-prim . memv)
        (g$6803$f3xia core-prim . memq)
        (g$6806$f3xia core-prim . memp)
        (g$6805$f3xia core-prim . member)
        (g$6814$f3xia core-prim . exists)
        (g$6813$f3xia core-prim . for-all)
        (g$6823$f3xia core-prim . fold-right)
        (g$6822$f3xia core-prim . fold-left)
        (g$6795$f3xia core-prim . find)
        (g$6798$f3xia core-prim . filter)
        (g$6817$f3xia core-prim . cons*)
        (g$6800$f3xia core-prim . assv)
        (g$6799$f3xia core-prim . assq)
        (g$6802$f3xia core-prim . assp)
        (g$6801$f3xia core-prim . assoc)
        (g$13910$f3xia core-prim . with-exception-handler)
        (g$13909$f3xia core-prim . raise-continuable)
        (g$13908$f3xia core-prim . raise)
        (g$10599$f3xia core-prim . eval)
        (g$10595$f3xia core-prim . environment)
        (g$9071$f3xia core-prim . make-enumeration)
        (g$9078$f3xia core-prim . enum-set=?)
        (g$9072$f3xia core-prim . enum-set-universe)
        (g$9079$f3xia core-prim . enum-set-union)
        (g$9077$f3xia core-prim . enum-set-subset?)
        (g$9083$f3xia core-prim . enum-set-projection)
        (g$9076$f3xia core-prim . enum-set-member?)
        (g$9080$f3xia core-prim . enum-set-intersection)
        (g$9073$f3xia core-prim . enum-set-indexer)
        (g$9081$f3xia core-prim . enum-set-difference)
        (g$9074$f3xia core-prim . enum-set-constructor)
        (g$9082$f3xia core-prim . enum-set-complement)
        (g$9075$f3xia core-prim . enum-set->list)
        (g$5290$f3xia core-prim . who-condition?)
        (g$5209$f3xia core-prim . warning?)
        (g$5248$f3xia core-prim . violation?)
        (g$5390$f3xia core-prim . undefined-violation?)
        (g$5375$f3xia core-prim . syntax-violation?)
        (g$5377$f3xia core-prim . syntax-violation-subform)
        (g$5376$f3xia core-prim . syntax-violation-form)
        (g$10618$f3xia core-prim . syntax-violation)
        (g$13907$f3xia core-prim . simple-conditions)
        (g$5222$f3xia core-prim . serious-condition?)
        (g$5334$f3xia core-prim . non-continuable-violation?)
        (g$5195$f3xia core-prim . message-condition?)
        (g$5288$f3xia core-prim . make-who-condition)
        (g$5208$f3xia core-prim . make-warning)
        (g$5247$f3xia core-prim . make-violation)
        (g$5389$f3xia core-prim . make-undefined-violation)
        (g$5372$f3xia core-prim . make-syntax-violation)
        (g$5221$f3xia core-prim . make-serious-condition)
        (g$5333$f3xia core-prim . make-non-continuable-violation)
        (g$5193$f3xia core-prim . make-message-condition)
        (g$5359$f3xia core-prim . make-lexical-violation)
        (g$5273$f3xia core-prim . make-irritants-condition)
        (g$5346$f3xia
          core-prim
          .
          make-implementation-restriction-violation)
        (g$5234$f3xia core-prim . make-error)
        (g$5260$f3xia core-prim . make-assertion-violation)
        (g$5360$f3xia core-prim . lexical-violation?)
        (g$5275$f3xia core-prim . irritants-condition?)
        (g$5347$f3xia core-prim . implementation-restriction-violation?)
        (g$5235$f3xia core-prim . error?)
        (g$5291$f3xia core-prim . condition-who)
        (g$13906$f3xia core-prim . condition-predicate)
        (g$5196$f3xia core-prim . condition-message)
        (g$5276$f3xia core-prim . condition-irritants)
        (g$13905$f3xia core-prim . condition-accessor)
        (g$13904$f3xia core-prim . condition)
        (g$5261$f3xia core-prim . assertion-violation?)
        (g$13903$f3xia core-prim . condition?)
        (g$7411$f3xia core-prim . utf32->string)
        (g$7410$f3xia core-prim . utf16->string)
        (g$7408$f3xia core-prim . utf8->string)
        (g$7412$f3xia core-prim . uint-list->bytevector)
        (g$7400$f3xia core-prim . u8-list->bytevector)
        (g$7405$f3xia core-prim . string->utf8)
        (g$7407$f3xia core-prim . string->utf32)
        (g$7406$f3xia core-prim . string->utf16)
        (g$7413$f3xia core-prim . sint-list->bytevector)
        (g$7376$f3xia core-prim . native-endianness)
        (g$6990$f3xia core-prim . bytevector?)
        (g$7391$f3xia core-prim . bytevector=?)
        (g$7403$f3xia core-prim . bytevector-uint-set!)
        (g$7401$f3xia core-prim . bytevector-uint-ref)
        (g$7396$f3xia core-prim . bytevector-u8-set!)
        (g$7395$f3xia core-prim . bytevector-u8-ref)
        (g$7441$f3xia core-prim . bytevector-u64-set!)
        (g$7437$f3xia core-prim . bytevector-u64-ref)
        (g$7443$f3xia core-prim . bytevector-u64-native-set!)
        (g$7439$f3xia core-prim . bytevector-u64-native-ref)
        (g$7433$f3xia core-prim . bytevector-u32-set!)
        (g$7429$f3xia core-prim . bytevector-u32-ref)
        (g$7435$f3xia core-prim . bytevector-u32-native-set!)
        (g$7431$f3xia core-prim . bytevector-u32-native-ref)
        (g$7425$f3xia core-prim . bytevector-u16-set!)
        (g$7421$f3xia core-prim . bytevector-u16-ref)
        (g$7427$f3xia core-prim . bytevector-u16-native-set!)
        (g$7423$f3xia core-prim . bytevector-u16-native-ref)
        (g$7404$f3xia core-prim . bytevector-sint-set!)
        (g$7402$f3xia core-prim . bytevector-sint-ref)
        (g$7398$f3xia core-prim . bytevector-s8-set!)
        (g$7397$f3xia core-prim . bytevector-s8-ref)
        (g$7442$f3xia core-prim . bytevector-s64-set!)
        (g$7438$f3xia core-prim . bytevector-s64-ref)
        (g$7444$f3xia core-prim . bytevector-s64-native-set!)
        (g$7440$f3xia core-prim . bytevector-s64-native-ref)
        (g$7434$f3xia core-prim . bytevector-s32-set!)
        (g$7430$f3xia core-prim . bytevector-s32-ref)
        (g$7436$f3xia core-prim . bytevector-s32-native-set!)
        (g$7432$f3xia core-prim . bytevector-s32-native-ref)
        (g$7426$f3xia core-prim . bytevector-s16-set!)
        (g$7422$f3xia core-prim . bytevector-s16-ref)
        (g$7428$f3xia core-prim . bytevector-s16-native-set!)
        (g$7424$f3xia core-prim . bytevector-s16-native-ref)
        (g$7390$f3xia core-prim . bytevector-length)
        (g$7419$f3xia core-prim . bytevector-ieee-single-set!)
        (g$7417$f3xia core-prim . bytevector-ieee-single-ref)
        (g$7447$f3xia core-prim . bytevector-ieee-single-native-set!)
        (g$7445$f3xia core-prim . bytevector-ieee-single-native-ref)
        (g$7420$f3xia core-prim . bytevector-ieee-double-set!)
        (g$7418$f3xia core-prim . bytevector-ieee-double-ref)
        (g$7448$f3xia core-prim . bytevector-ieee-double-native-set!)
        (g$7446$f3xia core-prim . bytevector-ieee-double-native-ref)
        (g$7392$f3xia core-prim . bytevector-fill!)
        (g$7393$f3xia core-prim . bytevector-copy!)
        (g$7394$f3xia core-prim . bytevector-copy)
        (g$7414$f3xia core-prim . bytevector->uint-list)
        (g$7399$f3xia core-prim . bytevector->u8-list)
        (g$7415$f3xia core-prim . bytevector->sint-list)
        (g$5580$f3xia core-prim . no-nans-violation?)
        (g$5567$f3xia core-prim . no-infinities-violation?)
        (g$5579$f3xia core-prim . make-no-nans-violation)
        (g$5566$f3xia core-prim . make-no-infinities-violation)
        (g$7721$f3xia core-prim . real->flonum)
        (g$8415$f3xia core-prim . flzero?)
        (g$8410$f3xia core-prim . fltruncate)
        (g$8396$f3xia core-prim . fltan)
        (g$8401$f3xia core-prim . flsqrt)
        (g$8394$f3xia core-prim . flsin)
        (g$8411$f3xia core-prim . flround)
        (g$8413$f3xia core-prim . flpositive?)
        (g$6995$f3xia core-prim . flonum?)
        (g$8417$f3xia core-prim . flodd?)
        (g$8360$f3xia core-prim . flnumerator)
        (g$8414$f3xia core-prim . flnegative?)
        (g$8393$f3xia core-prim . flnan?)
        (g$8378$f3xia core-prim . flmod0)
        (g$8377$f3xia core-prim . flmod)
        (g$8419$f3xia core-prim . flmin)
        (g$8418$f3xia core-prim . flmax)
        (g$8400$f3xia core-prim . fllog)
        (g$8386$f3xia core-prim . flinteger?)
        (g$8392$f3xia core-prim . flinfinite?)
        (g$8409$f3xia core-prim . flfloor)
        (g$8387$f3xia core-prim . flfinite?)
        (g$8403$f3xia core-prim . flexpt)
        (g$8402$f3xia core-prim . flexp)
        (g$8416$f3xia core-prim . fleven?)
        (g$8385$f3xia core-prim . fldiv0-and-mod0)
        (g$8372$f3xia core-prim . fldiv0)
        (g$8379$f3xia core-prim . fldiv-and-mod)
        (g$8384$f3xia core-prim . fldiv)
        (g$8359$f3xia core-prim . fldenominator)
        (g$8395$f3xia core-prim . flcos)
        (g$8404$f3xia core-prim . flceiling)
        (g$8399$f3xia core-prim . flatan)
        (g$8397$f3xia core-prim . flasin)
        (g$8398$f3xia core-prim . flacos)
        (g$8412$f3xia core-prim . flabs)
        (g$8366$f3xia core-prim . fl>?)
        (g$8367$f3xia core-prim . fl>=?)
        (g$8363$f3xia core-prim . fl=?)
        (g$8364$f3xia core-prim . fl<?)
        (g$8365$f3xia core-prim . fl<=?)
        (g$8362$f3xia core-prim . fl/)
        (g$8361$f3xia core-prim . fl-)
        (g$8357$f3xia core-prim . fl+)
        (g$8358$f3xia core-prim . fl*)
        (g$7722$f3xia core-prim . fixnum->flonum)
        (g$5924$f3xia core-prim . fxzero?)
        (g$5887$f3xia core-prim . fxxor)
        (g$5962$f3xia core-prim . fxrotate-bit-field)
        (g$5963$f3xia core-prim . fxreverse-bit-field)
        (g$5914$f3xia core-prim . fxpositive?)
        (g$5934$f3xia core-prim . fxodd?)
        (g$5868$f3xia core-prim . fxnot)
        (g$5919$f3xia core-prim . fxnegative?)
        (g$5898$f3xia core-prim . fxmod0)
        (g$5897$f3xia core-prim . fxmod)
        (g$5936$f3xia core-prim . fxmin)
        (g$5935$f3xia core-prim . fxmax)
        (g$5865$f3xia core-prim . fxlength)
        (g$5886$f3xia core-prim . fxior)
        (g$5944$f3xia core-prim . fxif)
        (g$5866$f3xia core-prim . fxfirst-bit-set)
        (g$5929$f3xia core-prim . fxeven?)
        (g$5909$f3xia core-prim . fxdiv0-and-mod0)
        (g$5904$f3xia core-prim . fxdiv0)
        (g$5899$f3xia core-prim . fxdiv-and-mod)
        (g$5892$f3xia core-prim . fxdiv)
        (g$5959$f3xia core-prim . fxcopy-bit-field)
        (g$5949$f3xia core-prim . fxcopy-bit)
        (g$5867$f3xia core-prim . fxbit-set?)
        (g$5954$f3xia core-prim . fxbit-field)
        (g$5860$f3xia core-prim . fxbit-count)
        (g$5961$f3xia core-prim . fxarithmetic-shift-right)
        (g$5960$f3xia core-prim . fxarithmetic-shift-left)
        (g$5855$f3xia core-prim . fxarithmetic-shift)
        (g$5885$f3xia core-prim . fxand)
        (g$5877$f3xia core-prim . fx>?)
        (g$5878$f3xia core-prim . fx>=?)
        (g$5874$f3xia core-prim . fx=?)
        (g$5875$f3xia core-prim . fx<?)
        (g$5876$f3xia core-prim . fx<=?)
        (g$5938$f3xia core-prim . fx-/carry)
        (g$5849$f3xia core-prim . fx-)
        (g$5939$f3xia core-prim . fx+/carry)
        (g$5847$f3xia core-prim . fx+)
        (g$5937$f3xia core-prim . fx*/carry)
        (g$5848$f3xia core-prim . fx*)
        (g$5818$f3xia core-prim . greatest-fixnum)
        (g$5819$f3xia core-prim . least-fixnum)
        (g$6996$f3xia core-prim . fixnum-width)
        (g$6994$f3xia core-prim . fixnum?)
        (g$8255$f3xia core-prim . bitwise-rotate-bit-field)
        (g$8256$f3xia core-prim . bitwise-reverse-bit-field)
        (g$8245$f3xia core-prim . bitwise-length)
        (g$8248$f3xia core-prim . bitwise-if)
        (g$8246$f3xia core-prim . bitwise-first-bit-set)
        (g$8251$f3xia core-prim . bitwise-copy-bit-field)
        (g$8249$f3xia core-prim . bitwise-copy-bit)
        (g$8247$f3xia core-prim . bitwise-bit-set?)
        (g$8250$f3xia core-prim . bitwise-bit-field)
        (g$8244$f3xia core-prim . bitwise-bit-count)
        (g$8243$f3xia core-prim . bitwise-xor)
        (g$8242$f3xia core-prim . bitwise-ior)
        (g$8241$f3xia core-prim . bitwise-and)
        (g$8240$f3xia core-prim . bitwise-not)
        (g$8254$f3xia core-prim . bitwise-arithmetic-shift-right)
        (g$8253$f3xia core-prim . bitwise-arithmetic-shift-left)
        (g$8252$f3xia core-prim . bitwise-arithmetic-shift)
        (g$7736$f3xia core-prim . zero?)
        (g$6989$f3xia core-prim . vector?)
        (g$7021$f3xia core-prim . vector-set!)
        (g$7020$f3xia core-prim . vector-ref)
        (g$7088$f3xia core-prim . vector-map)
        (g$7023$f3xia core-prim . vector-length)
        (g$7089$f3xia core-prim . vector-for-each)
        (g$7024$f3xia core-prim . vector-fill!)
        (g$7025$f3xia core-prim . vector->list)
        (g$13902$f3xia core-prim . vector)
        (g$13901$f3xia core-prim . values)
        (g$7788$f3xia core-prim . truncate)
        (g$7780$f3xia core-prim . tan)
        (g$6991$f3xia core-prim . symbol?)
        (g$7073$f3xia core-prim . symbol=?)
        (g$7011$f3xia core-prim . symbol->string)
        (g$7008$f3xia core-prim . substring)
        (g$6987$f3xia core-prim . string?)
        (g$7070$f3xia core-prim . string>?)
        (g$7072$f3xia core-prim . string>=?)
        (g$7068$f3xia core-prim . string=?)
        (g$7069$f3xia core-prim . string<?)
        (g$7071$f3xia core-prim . string<=?)
        (g$7000$f3xia core-prim . string-ref)
        (g$7003$f3xia core-prim . string-length)
        (g$7090$f3xia core-prim . string-for-each)
        (g$7007$f3xia core-prim . string-copy)
        (g$7009$f3xia core-prim . string-append)
        (g$7012$f3xia core-prim . string->symbol)
        (g$13900$f3xia core-prim . string->number)
        (g$7006$f3xia core-prim . string->list)
        (g$7005$f3xia core-prim . string)
        (g$7790$f3xia core-prim . sqrt)
        (g$7774$f3xia core-prim . sin)
        (g$7789$f3xia core-prim . round)
        (g$7027$f3xia core-prim . reverse)
        (g$7730$f3xia core-prim . real?)
        (g$7733$f3xia core-prim . real-valued?)
        (g$7767$f3xia core-prim . real-part)
        (g$7085$f3xia core-prim . rationalize)
        (g$7731$f3xia core-prim . rational?)
        (g$7734$f3xia core-prim . rational-valued?)
        (g$6993$f3xia core-prim . procedure?)
        (g$7737$f3xia core-prim . positive?)
        (g$13899$f3xia core-prim . pair?)
        (g$7057$f3xia core-prim . odd?)
        (g$7765$f3xia core-prim . numerator)
        (g$7723$f3xia core-prim . number?)
        (g$7744$f3xia core-prim . number->string)
        (g$13898$f3xia core-prim . null?)
        (g$13897$f3xia core-prim . not)
        (g$7738$f3xia core-prim . negative?)
        (g$7724$f3xia core-prim . nan?)
        (g$7059$f3xia core-prim . min)
        (g$7058$f3xia core-prim . max)
        (g$6815$f3xia core-prim . map)
        (g$7022$f3xia core-prim . make-vector)
        (g$6999$f3xia core-prim . make-string)
        (g$7760$f3xia core-prim . make-rectangular)
        (g$7761$f3xia core-prim . make-polar)
        (g$7763$f3xia core-prim . magnitude)
        (g$7783$f3xia core-prim . log)
        (g$6810$f3xia core-prim . list?)
        (g$6791$f3xia core-prim . list-tail)
        (g$6792$f3xia core-prim . list-ref)
        (g$7018$f3xia core-prim . list->vector)
        (g$7019$f3xia core-prim . list->string)
        (g$13896$f3xia core-prim . list)
        (g$6812$f3xia core-prim . length)
        (g$7061$f3xia core-prim . lcm)
        (g$7732$f3xia core-prim . integer?)
        (g$7735$f3xia core-prim . integer-valued?)
        (g$6998$f3xia core-prim . integer->char)
        (g$7726$f3xia core-prim . infinite?)
        (g$7728$f3xia core-prim . inexact?)
        (g$7739$f3xia core-prim . inexact)
        (g$7768$f3xia core-prim . imag-part)
        (g$7060$f3xia core-prim . gcd)
        (g$6816$f3xia core-prim . for-each)
        (g$7786$f3xia core-prim . floor)
        (g$7725$f3xia core-prim . finite?)
        (g$7792$f3xia core-prim . expt)
        (g$7773$f3xia core-prim . exp)
        (g$7727$f3xia core-prim . exact?)
        (g$7791$f3xia core-prim . exact-integer-sqrt)
        (g$7740$f3xia core-prim . exact)
        (g$7056$f3xia core-prim . even?)
        (g$5586$f3xia core-prim . error)
        (g$13895$f3xia core-prim . eqv?)
        (g$9203$f3xia core-prim . equal?)
        (g$13894$f3xia core-prim . eq?)
        (g$13893$f3xia core-prim . dynamic-wind)
        (g$7017$f3xia core-prim . div0-and-mod0)
        (g$7015$f3xia core-prim . mod0)
        (g$7013$f3xia core-prim . div0)
        (g$7016$f3xia core-prim . div-and-mod)
        (g$7014$f3xia core-prim . mod)
        (g$7784$f3xia core-prim . div)
        (g$7766$f3xia core-prim . denominator)
        (g$7777$f3xia core-prim . cos)
        (g$13892$f3xia core-prim . cons)
        (g$7729$f3xia core-prim . complex?)
        (g$6988$f3xia core-prim . char?)
        (g$7082$f3xia core-prim . char>?)
        (g$7084$f3xia core-prim . char>=?)
        (g$7080$f3xia core-prim . char=?)
        (g$7081$f3xia core-prim . char<?)
        (g$7083$f3xia core-prim . char<=?)
        (g$6997$f3xia core-prim . char->integer)
        (g$7787$f3xia core-prim . ceiling)
        (g$13891$f3xia core-prim . call-with-values)
        (g$13890$f3xia core-prim . call/cc)
        (g$13889$f3xia core-prim . call-with-current-continuation)
        (g$7055$f3xia core-prim . cddddr)
        (g$7054$f3xia core-prim . cdddar)
        (g$7053$f3xia core-prim . cddadr)
        (g$7052$f3xia core-prim . cddaar)
        (g$7051$f3xia core-prim . cdaddr)
        (g$7050$f3xia core-prim . cdadar)
        (g$7049$f3xia core-prim . cdaadr)
        (g$7048$f3xia core-prim . cdaaar)
        (g$7047$f3xia core-prim . cadddr)
        (g$7046$f3xia core-prim . caddar)
        (g$7045$f3xia core-prim . cadadr)
        (g$7044$f3xia core-prim . cadaar)
        (g$7043$f3xia core-prim . caaddr)
        (g$7042$f3xia core-prim . caadar)
        (g$7041$f3xia core-prim . caaadr)
        (g$7040$f3xia core-prim . caaaar)
        (g$7039$f3xia core-prim . cdddr)
        (g$7038$f3xia core-prim . cddar)
        (g$7037$f3xia core-prim . cdadr)
        (g$7036$f3xia core-prim . cdaar)
        (g$7035$f3xia core-prim . caddr)
        (g$7034$f3xia core-prim . cadar)
        (g$7033$f3xia core-prim . caadr)
        (g$7032$f3xia core-prim . caaar)
        (g$7031$f3xia core-prim . cddr)
        (g$7030$f3xia core-prim . cdar)
        (g$7029$f3xia core-prim . cadr)
        (g$7028$f3xia core-prim . caar)
        (g$13888$f3xia core-prim . cdr)
        (g$13887$f3xia core-prim . car)
        (g$6992$f3xia core-prim . boolean?)
        (g$7074$f3xia core-prim . boolean=?)
        (g$7782$f3xia core-prim . atan)
        (g$5585$f3xia core-prim . assertion-violation)
        (g$7775$f3xia core-prim . asin)
        (g$13886$f3xia core-prim . apply)
        (g$6821$f3xia core-prim . append)
        (g$7762$f3xia core-prim . angle)
        (g$7778$f3xia core-prim . acos)
        (g$7785$f3xia core-prim . abs)
        (g$13885$f3xia core-prim . /)
        (g$13884$f3xia core-prim . *)
        (g$13883$f3xia core-prim . -)
        (g$13882$f3xia core-prim . +)
        (g$7759$f3xia core-prim . >=)
        (g$7758$f3xia core-prim . >)
        (g$7755$f3xia core-prim . =)
        (g$7757$f3xia core-prim . <=)
        (g$7756$f3xia core-prim . <)
        (g$13881$f3xia core-prim . $bytevector-set!)
        (g$13880$f3xia core-prim . $bytevector-ref)
        (g$13879$f3xia core-prim . $fl>=?)
        (g$13878$f3xia core-prim . $fl>?)
        (g$13877$f3xia core-prim . $fl<=?)
        (g$13876$f3xia core-prim . $fl<?)
        (g$13875$f3xia core-prim . $fl-)
        (g$13874$f3xia core-prim . $fl/)
        (g$13873$f3xia core-prim . $fl*)
        (g$13872$f3xia core-prim . $fl+)
        (g$13871$f3xia core-prim . $fl=?)
        (g$13870$f3xia core-prim . $try)
        (g$13869$f3xia core-prim . $fxarithmetic-shift-right)
        (g$13868$f3xia core-prim . $fxarithmetic-shift-left)
        (g$13867$f3xia core-prim . $$fx-)
        (g$13866$f3xia core-prim . $$fx*)
        (g$13865$f3xia core-prim . $$fx+)
        (g$13864$f3xia core-prim . $fxnot)
        (g$13863$f3xia core-prim . $fxxor)
        (g$13862$f3xia core-prim . $fxior)
        (g$13861$f3xia core-prim . $fxand)
        (g$13860$f3xia core-prim . $fx>=?)
        (g$13859$f3xia core-prim . $fx>?)
        (g$13858$f3xia core-prim . $fx<=?)
        (g$13857$f3xia core-prim . $fx<?)
        (g$13856$f3xia core-prim . $fx-)
        (g$13855$f3xia core-prim . $fxmod0)
        (g$13854$f3xia core-prim . $fxdiv0)
        (g$13853$f3xia core-prim . $fx*)
        (g$13852$f3xia core-prim . $fx+)
        (g$13851$f3xia core-prim . $fx=?)
        (g$13850$f3xia core-prim . $vector-set!)
        (g$13849$f3xia core-prim . $vector-ref)
        (g$13848$f3xia core-prim . $cdr)
        (g$13847$f3xia core-prim . $car)
        (g$13846$f3xia core-prim . make-record-printer)
        (g$13845$f3xia core-prim . eqv-hash)
        (g$13844$f3xia core-prim . reverse!)
        (g$13843$f3xia core-prim . deserialize-port)
        (g$13842$f3xia core-prim . serialize-port)
        (g$9048$f3xia core-prim . enum-set?)
        (g$8059$f3xia core-prim . make-promise)
        (g$13644$f3xia core-prim . load/unload)
        (g$13643$f3xia core-prim . load/args)
        (g$9157$f3xia core-prim . printf)
        (g$9158$f3xia core-prim . fprintf)
        (g$9159$f3xia core-prim . format)
        (g$13841$f3xia core-prim . procedure-form)
        (g$13840$f3xia core-prim . procedure-environment)
        (g$13839$f3xia core-prim . procedure-name)
        (g$13838$f3xia core-prim . procedure-arity)
        (g$13837$f3xia core-prim . gc-collect)
        (g$13836$f3xia core-prim . typeof)
        (g$13835$f3xia core-prim . clr-type?)
        (g$13834$f3xia core-prim . get-clr-type)
        (g$13833$f3xia core-prim . get-command-line)
        (g$13832$f3xia core-prim . vector-append)
        (g$13831$f3xia core-prim . vector-filter)
        (g$13830$f3xia core-prim . vector-reverse!)
        (g$13829$f3xia core-prim . vector-contains?)
        (g$13828$f3xia core-prim . vector-index-of)
        (g$13827$f3xia core-prim . vector-copy)
        (g$13826$f3xia core-prim . vector-binary-search)
        (g$13825$f3xia core-prim . string-ci-compare)
        (g$13824$f3xia core-prim . string-compare)
        (g$13823$f3xia core-prim . string-format)
        (g$13638$f3xia core-prim . trace-printer)
        (g$13822$f3xia core-prim . make-traced-procedure)
        (g$9179$f3xia core-prim . make-traced-macro)
        (g$10614$f3xia core-prim . assertion-error)
        (g$13821$f3xia core-prim . time-it)
        (g$9282$f3xia core-prim . make-parameter)
        (g$13820$f3xia core-prim . library-locator)
        (g$13819$f3xia core-prim . get-library-paths)
        (g$13818$f3xia core-prim . open-tcp-input/output-port)
        (g$13817$f3xia core-prim . hashtable-for-each)
        (g$13816$f3xia core-prim . hashtable-map)
        (g$10591$f3xia core-prim . environment-bindings)
        (g$10594$f3xia core-prim . environment-symbols)
        (g$10590$f3xia core-prim . interaction-environment-symbols)
        (g$13815$f3xia core-prim . optimization-level)
        (g$9920$f3xia core-prim . library-path)
        (g$10299$f3xia core-prim . make-compile-time-value)
        (g$10600$f3xia core-prim . expand->core)
        (g$10598$f3xia core-prim . expand)
        (g$13641$f3xia core-prim . emacs-mode?)
        (g$10537$f3xia core-prim . syntax-transpose)
        (g$9601$f3xia core-prim . convert->cps)
        (g$13814$f3xia core-prim . inexact=?)
        (g$13813$f3xia core-prim . bignum-sqrt-exact)
        (g$13812$f3xia core-prim . bignum-sqrt)
        (g$13811$f3xia core-prim . flonum->string)
        (g$13810$f3xia core-prim . inexact-compare)
        (g$13809$f3xia core-prim . exact-compare)
        (g$5321$f3xia core-prim . condition-stacktrace)
        (g$5320$f3xia core-prim . stacktrace-condition?)
        (g$13639$f3xia core-prim . stacktrace-enable?)
        (g$5318$f3xia core-prim . make-stacktrace-condition)
        (g$5306$f3xia core-prim . condition-where)
        (g$5305$f3xia core-prim . where-condition?)
        (g$5303$f3xia core-prim . make-where-condition)
        (g$9941$f3xia core-prim . installed-libraries)
        (g$9932$f3xia core-prim . uninstall-library)
        (g$9365$f3xia core-prim . pretty-gensyms)
        (g$9362$f3xia core-prim . pretty-width)
        (g$9367$f3xia core-prim . pretty-print)
        (g$13808$f3xia core-prim . pointer+)
        (g$13807$f3xia $core-rtd &stacktrace-rtd &stacktrace-rcd)
        (g$13806$f3xia $core-rtd &where-rtd &where-rcd)
        (g$13805$f3xia $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$13804$f3xia $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$13803$f3xia $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$13802$f3xia $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$13801$f3xia $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$13800$f3xia
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$13799$f3xia
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$13798$f3xia
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$13797$f3xia
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$13796$f3xia $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$13795$f3xia
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$13794$f3xia $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$13793$f3xia $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$13792$f3xia $core-rtd &i/o-rtd &i/o-rcd)
        (g$13791$f3xia
          $core-rtd
          &non-continuable-rtd
          &non-continuable-rcd)
        (g$13790$f3xia $core-rtd &undefined-rtd &undefined-rcd)
        (g$13789$f3xia $core-rtd &syntax-rtd &syntax-rcd)
        (g$13788$f3xia $core-rtd &lexical-rtd &lexical-rcd)
        (g$13787$f3xia
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$13786$f3xia $core-rtd &who-rtd &who-rcd)
        (g$13785$f3xia $core-rtd &irritants-rtd &irritants-rcd)
        (g$13784$f3xia $core-rtd &assertion-rtd &assertion-rcd)
        (g$13783$f3xia $core-rtd &violation-rtd &violation-rcd)
        (g$13782$f3xia $core-rtd &error-rtd &error-rcd)
        (g$13781$f3xia $core-rtd &serious-rtd &serious-rcd)
        (g$13780$f3xia $core-rtd &warning-rtd &warning-rcd)
        (g$13779$f3xia $core-rtd &message-rtd &message-rcd)
        (g$13778$f3xia $core-rtd &condition-rtd &condition-rcd)
        (g$13777$f3xia macro . define-condition-type)
        (g$13776$f3xia macro . define-enumeration)
        (g$13775$f3xia macro . define-record-type)
        (g$13774$f3xia macro . parent-rtd)
        (g$13773$f3xia macro . nongenerative)
        (g$13772$f3xia macro . opaque)
        (g$13771$f3xia macro . sealed)
        (g$13770$f3xia macro . protocol)
        (g$13769$f3xia macro . parent)
        (g$13768$f3xia macro . immutable)
        (g$13767$f3xia macro . mutable)
        (g$13766$f3xia macro . fields)
        (g$13765$f3xia macro . error-handling-mode)
        (g$13764$f3xia macro . file-options)
        (g$13763$f3xia macro . buffer-mode)
        (g$13762$f3xia macro . eol-style)
        (g$13761$f3xia macro . guard)
        (g$13760$f3xia macro . trace-letrec-syntax)
        (g$13759$f3xia macro . trace-let-syntax)
        (g$13758$f3xia macro . trace-define-syntax)
        (g$13757$f3xia macro . trace-define)
        (g$13756$f3xia macro . trace-lambda)
        (g$13755$f3xia macro . unsyntax-splicing)
        (g$13754$f3xia macro . unsyntax)
        (g$13753$f3xia macro . unquote-splicing)
        (g$13752$f3xia macro . unquote)
        (g$13751$f3xia macro . _)
        (g$13750$f3xia macro . else)
        (g$13749$f3xia macro . =>)
        (g$13748$f3xia macro . ...)
        (g$13747$f3xia macro . assert)
        (g$13746$f3xia macro . endianness)
        (g$13745$f3xia macro . delay)
        (g$13744$f3xia macro . time)
        (g$13743$f3xia macro . or)
        (g$13742$f3xia macro . and)
        (g$13741$f3xia macro . do)
        (g$13740$f3xia macro . cond)
        (g$13739$f3xia macro . let*)
        (g$13738$f3xia macro . let)
        (g$13737$f3xia macro . identifier-syntax)
        (g$13736$f3xia macro . with-syntax)
        (g$13735$f3xia macro . quasisyntax)
        (g$13734$f3xia macro . quasiquote)
        (g$13733$f3xia macro . syntax-rules)
        (g$13732$f3xia macro . include-into)
        (g$13731$f3xia macro . include)
        (g$13730$f3xia macro . define-struct)
        (g$13729$f3xia macro . let-values)
        (g$13728$f3xia macro . let*-values)
        (g$13727$f3xia core-macro . record-constructor-descriptor)
        (g$13726$f3xia core-macro . record-type-descriptor)
        (g$13725$f3xia core-macro . fluid-let-syntax)
        (g$13724$f3xia macro . case)
        (g$13723$f3xia macro . parameterize)
        (g$13722$f3xia macro . unless)
        (g$13721$f3xia macro . when)
        (g$13720$f3xia core-macro . if)
        (g$13719$f3xia core-macro . letrec*)
        (g$13718$f3xia core-macro . letrec)
        (g$13717$f3xia core-macro . type-descriptor)
        (g$13716$f3xia core-macro . case-lambda)
        (g$13715$f3xia core-macro . lambda)
        (g$13714$f3xia core-macro . syntax)
        (g$13713$f3xia core-macro . syntax-case)
        (g$13712$f3xia core-macro . quote)
        (g$13711$f3xia core-macro . foreign-call)
        (g$13710$f3xia letrec-syntax)
        (g$13709$f3xia let-syntax)
        (g$13708$f3xia set!)
        (g$13707$f3xia export)
        (g$13706$f3xia import)
        (g$13705$f3xia library)
        (g$13704$f3xia begin)
        (g$13703$f3xia module)
        (g$13702$f3xia define-syntax)
        (g$13701$f3xia define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$20513$f3xia
      'g$14078$f3xia
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$14016$f3xia)
        (eval-core . g$14015$f3xia)
        (set-symbol-value! . g$14013$f3xia)
        (symbol-value . g$14012$f3xia)
        (gensym . g$14009$f3xia)
        (void . g$14008$f3xia))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$25029$f3xia
     g$trace-printer$25099$f3xia
     (g$make-parameter$19650$f3xia g$pretty-print$19860$f3xia))
   (g$stacktrace-enable?$25030$f3xia
     g$stacktrace-enable?$25100$f3xia
     (g$make-parameter$19650$f3xia '#t))
   (g$command-line$25031$f3xia
     g$command-line$25101$f3xia
     (g$make-parameter$19650$f3xia (get-command-line)))
   (g$emacs-mode?$25032$f3xia
     g$emacs-mode?$25102$f3xia
     (g$make-parameter$19650$f3xia '#f))
   (g$local-library-path$25033$f3xia
     g$local-library-path$25103$f3xia
     (case-lambda
       ((g$filename$25049$f3xia)
        (cons
          (g$get-directory-name$16135$f3xia g$filename$25049$f3xia)
          (g$library-path$20497$f3xia)))))
   (g$load/args$25034$f3xia
     g$load/args$25104$f3xia
     (case-lambda
       ((g$filename$25050$f3xia . g$args$25051$f3xia)
        (begin
          (apply
            g$load-r6rs-top-level$25046$f3xia
            g$filename$25050$f3xia
            'load
            g$args$25051$f3xia)
          (void)))))
   (g$load/unload$25035$f3xia
     g$load/unload$25105$f3xia
     (case-lambda
       ((g$filename$25052$f3xia)
        ((case-lambda
           ((g$libs$25053$f3xia)
            (begin
              (g$load$25036$f3xia g$filename$25052$f3xia)
              (g$for-each$15551$f3xia
                (case-lambda
                  ((g$lib$25054$f3xia)
                   (if (not (g$memq$15538$f3xia
                              g$lib$25054$f3xia
                              g$libs$25053$f3xia))
                     (g$uninstall-library$20509$f3xia g$lib$25054$f3xia)
                     (void))))
                (g$installed-libraries$20518$f3xia)))))
         (g$installed-libraries$20518$f3xia)))))
   (g$load$25036$f3xia
     g$load$25106$f3xia
     (case-lambda
       ((g$filename$25055$f3xia)
        (begin
          (apply
            g$load-r6rs-top-level$25046$f3xia
            g$filename$25055$f3xia
            'load
            (cdr (g$command-line$25031$f3xia)))
          (void)))))
   (g$ironscheme-test$25037$f3xia
     g$ironscheme-test$25107$f3xia
     (case-lambda (() (g$load$25036$f3xia '"tests/r6rs/run.sps"))))
   (g$ironscheme-build$25038$f3xia
     g$ironscheme-build$25108$f3xia
     (case-lambda
       (() (g$ironscheme-build$25038$f3xia '#f))
       ((g$cps?$25056$f3xia)
        (begin
          (g$call-with-output-file$19156$f3xia
            '"build-options.ss"
            (case-lambda
              ((g$p$25057$f3xia)
               (begin
                 (write
                   (list 'define-option 'cps-mode g$cps?$25056$f3xia)
                   g$p$25057$f3xia)
                 (write
                   (list
                     'define-option
                     'if-wants-letrec*
                     (not g$cps?$25056$f3xia))
                   g$p$25057$f3xia)
                 (g$newline$19157$f3xia g$p$25057$f3xia)))))
          (g$load$25036$f3xia '"ironscheme-buildscript.ss")))))
   (g$foreground-color$25039$f3xia
     g$foreground-color$25109$f3xia
     (case-lambda
       (()
        (if (not (g$emacs-mode?$25032$f3xia))
          (begin
            '#f
            (clr-call-internal 'console 'get_foregroundcolor '()))
          '#f))
       ((g$color$25058$f3xia)
        (if (not (g$emacs-mode?$25032$f3xia))
          (begin
            '#f
            (clr-call-internal
              'console
              'set_foregroundcolor
              '()
              g$color$25058$f3xia))
          '#f))))
   (g$system-exception?$25040$f3xia
     g$system-exception?$25110$f3xia
     (case-lambda
       ((g$e$25059$f3xia)
        (clr-is-internal 'SystemException g$e$25059$f3xia))))
   (g$eval-top-level$25041$f3xia
     g$eval-top-level$25111$f3xia
     (case-lambda
       ((g$x$25060$f3xia)
        (call/cc
          (case-lambda
            ((g$k$25061$f3xia)
             (with-exception-handler
               (case-lambda
                 ((g$e$25062$f3xia)
                  ((case-lambda
                     ((g$serious?$25063$f3xia)
                      (begin
                        ((case-lambda
                           ((g$foreground-color$25068$f3xia
                              g$current-output-port$25069$f3xia
                              g$foreground-color$25070$f3xia
                              g$current-output-port$25071$f3xia)
                            ((case-lambda
                               ((g$swap$25072$f3xia)
                                (dynamic-wind
                                  g$swap$25072$f3xia
                                  (case-lambda
                                    (()
                                     (begin
                                       (if g$serious?$25063$f3xia
                                         (display
                                           '"Unhandled exception during evaluation:
")
                                         (void))
                                       (display g$e$25062$f3xia)
                                       (g$newline$19157$f3xia))))
                                  g$swap$25072$f3xia)))
                             (case-lambda
                               (()
                                (begin
                                  ((case-lambda
                                     ((g$t$25073$f3xia)
                                      (begin
                                        (g$foreground-color$25068$f3xia
                                          g$foreground-color$25070$f3xia)
                                        (set! g$foreground-color$25070$f3xia
                                          g$t$25073$f3xia))))
                                   (g$foreground-color$25068$f3xia))
                                  ((case-lambda
                                     ((g$t$25074$f3xia)
                                      (begin
                                        (g$current-output-port$25069$f3xia
                                          g$current-output-port$25071$f3xia)
                                        (set! g$current-output-port$25071$f3xia
                                          g$t$25074$f3xia))))
                                   (g$current-output-port$25069$f3xia))))))))
                         g$foreground-color$25039$f3xia
                         current-output-port
                         (if g$serious?$25063$f3xia 'red 'yellow)
                         (current-error-port))
                        (if g$serious?$25063$f3xia
                          (g$k$25061$f3xia)
                          (void)))))
                   ((case-lambda
                      ((g$t$25075$f3xia)
                       (if g$t$25075$f3xia
                         g$t$25075$f3xia
                         (begin
                           '#f
                           (g$system-exception?$25040$f3xia
                             g$e$25062$f3xia)))))
                    (g$serious-condition?$12220$f3xia
                      g$e$25062$f3xia)))))
               (case-lambda
                 (()
                  (g$eval$25001$f3xia
                    g$x$25060$f3xia
                    (g$interaction-environment$25027$f3xia)))))))))))
   (g$eval-embedded$25042$f3xia
     g$eval-embedded$25112$f3xia
     (case-lambda
       ((g$x$25076$f3xia)
        (g$eval$25001$f3xia
          g$x$25076$f3xia
          (g$interaction-environment$25027$f3xia)))))
   (g$compile-system-libraries$25043$f3xia
     g$compile-system-libraries$25113$f3xia
     (case-lambda
       (()
        (g$eval-top-level$25041$f3xia
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$25044$f3xia
     g$compile$25114$f3xia
     (case-lambda
       ((g$filename$25077$f3xia)
        (g$load-r6rs-top-level$25046$f3xia
          g$filename$25077$f3xia
          'compile))))
   (g$compile->closure$25045$f3xia
     g$compile->closure$25115$f3xia
     (case-lambda
       ((g$filename$25078$f3xia)
        (g$load-r6rs-top-level$25046$f3xia
          g$filename$25078$f3xia
          'closure))))
   (g$load-r6rs-top-level$25046$f3xia
     g$load-r6rs-top-level$25116$f3xia
     (case-lambda
       ((g$filename$25079$f3xia g$how$25080$f3xia . g$args$25081$f3xia)
        ((case-lambda
           ((g$library-path$25084$f3xia g$library-path$25085$f3xia)
            ((case-lambda
               ((g$swap$25086$f3xia)
                (dynamic-wind
                  g$swap$25086$f3xia
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$25087$f3xia)
                         ((case-lambda
                            ((g$t$25088$f3xia)
                             (if (eqv? g$t$25088$f3xia 'closure)
                               (g$pre-compile-r6rs-top-level$25025$f3xia
                                 g$x*$25087$f3xia)
                               (if (eqv? g$t$25088$f3xia 'load)
                                 ((case-lambda
                                    ((g$command-line$25091$f3xia
                                       g$command-line$25092$f3xia)
                                     ((case-lambda
                                        ((g$swap$25093$f3xia)
                                         (dynamic-wind
                                           g$swap$25093$f3xia
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$25024$f3xia
                                                 g$x*$25087$f3xia))))
                                           g$swap$25093$f3xia)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$25094$f3xia)
                                             (begin
                                               (g$command-line$25091$f3xia
                                                 g$command-line$25092$f3xia)
                                               (set! g$command-line$25092$f3xia
                                                 g$t$25094$f3xia))))
                                          (g$command-line$25091$f3xia)))))))
                                  g$command-line$25031$f3xia
                                  (cons
                                    g$filename$25079$f3xia
                                    (g$map$15550$f3xia
                                      (case-lambda
                                        ((g$x$25095$f3xia)
                                         (g$format$19331$f3xia
                                           '"~a"
                                           g$x$25095$f3xia)))
                                      g$args$25081$f3xia)))
                                 (if (eqv? g$t$25088$f3xia 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$25024$f3xia
                                       g$x*$25087$f3xia)
                                     (g$serialize-all$20501$f3xia
                                       serialize-library
                                       g$compile-core-expr$20248$f3xia))
                                   (if '#f '#f (void)))))))
                          g$how$25080$f3xia)))
                      (g$with-input-from-file$19153$f3xia
                        g$filename$25079$f3xia
                        (case-lambda
                          (()
                           ((letrec ((g$f$25096$f3xia
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$25097$f3xia)
                                              (if (eof-object?
                                                    g$x$25097$f3xia)
                                                '()
                                                (cons
                                                  g$x$25097$f3xia
                                                  (g$f$25096$f3xia)))))
                                           (read-annotated))))))
                              g$f$25096$f3xia))))))))
                  g$swap$25086$f3xia)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$25098$f3xia)
                    (begin
                      (g$library-path$25084$f3xia
                        g$library-path$25085$f3xia)
                      (set! g$library-path$25085$f3xia
                        g$t$25098$f3xia))))
                 (g$library-path$25084$f3xia)))))))
         g$library-path$20497$f3xia
         (g$local-library-path$25033$f3xia g$filename$25079$f3xia)))))
   (g$fo$25047$f3xia
     g$fo$25117$f3xia
     (g$make-enumeration$19293$f3xia '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$20502$f3xia
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$25048$f3xia)
         (if (g$serious-condition?$12220$f3xia g$ex$25048$f3xia)
           (raise g$ex$25048$f3xia)
           ((case-lambda
              (()
               (begin
                 '#f
                 (display g$ex$25048$f3xia)
                 (g$newline$19157$f3xia)))))))))
    (set-symbol-value! 'load g$load$25036$f3xia)
    (set-symbol-value! 'compile g$compile$25044$f3xia)
    (set-symbol-value! 'compile->closure g$compile->closure$25045$f3xia)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$25041$f3xia)
    (set-symbol-value! 'eval-embedded g$eval-embedded$25042$f3xia)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$24992$f3xia)
    (set-symbol-value! 'expanded2core g$expanded->core$20247$f3xia)
    (set-symbol-value! 'trace-printer g$trace-printer$25029$f3xia)
    (set-symbol-value! 'pretty-print g$pretty-print$19860$f3xia)
    (set-symbol-value! 'convert->cps g$convert->cps$20178$f3xia)
    (set-symbol-value!
      'assertion-violation
      g$assertion-violation$12459$f3xia)
    (set-symbol-value! 'raise raise)
    (set-symbol-value! 'emacs-mode? g$emacs-mode?$25032$f3xia)
    (set-symbol-value!
      'stacktrace-enable?
      g$stacktrace-enable?$25030$f3xia)
    (g$file-options-constructor$19651$f3xia
      (g$enum-set-constructor$19296$f3xia g$fo$25047$f3xia))
    (g$library-path$20497$f3xia (get-library-paths))
    (g$library-extensions$20498$f3xia
      (cons '".ironscheme.sls" (g$library-extensions$20498$f3xia)))
    (g$enable-constant-fold/env$20198$f3xia
      '(only
         (rnrs)
         =
         <
         >
         <=
         >=
         negative?
         positive?
         zero?
         exp
         expt
         div
         mod
         div0
         mod0)
      '(except
         (rnrs arithmetic fixnums)
         fx*/carry
         fx-/carry
         fx+/carry
         fxdiv0-and-mod0
         fxdiv-and-mod)
      '(except (rnrs arithmetic flonums) fldiv0-and-mod0 fldiv-and-mod)
      '(rnrs arithmetic bitwise))
    (g$interaction-environment$25027$f3xia
      (g$new-interaction-environment$25026$f3xia))))

