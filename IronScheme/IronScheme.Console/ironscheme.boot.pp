;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (psyntax config) () (void))

(library-letrec* (ironscheme lists)
  ((g$list-tail$19485$1XGIwa
     g$list-tail$19641$1XGIwa
     (case-lambda
       ((g$lst$19513$1XGIwa g$index$19514$1XGIwa)
        (if ((case-lambda
               ((g$t$19515$1XGIwa)
                (if g$t$19515$1XGIwa
                  g$t$19515$1XGIwa
                  (begin
                    '#f
                    (g$negative?$21618$1XGIwa g$index$19514$1XGIwa)))))
             (null? g$lst$19513$1XGIwa))
          (assertion-violation
            'list-tail
            '"index out of range"
            g$lst$19513$1XGIwa
            g$index$19514$1XGIwa)
          (if (g$zero?$21616$1XGIwa g$index$19514$1XGIwa)
            g$lst$19513$1XGIwa
            (begin
              '#f
              (g$list-tail$19485$1XGIwa
                (cdr g$lst$19513$1XGIwa)
                (- g$index$19514$1XGIwa '1))))))))
   (g$list-ref$19486$1XGIwa
     g$list-ref$19642$1XGIwa
     (case-lambda
       ((g$lst$19516$1XGIwa g$index$19517$1XGIwa)
        (car (g$list-tail$19485$1XGIwa
               g$lst$19516$1XGIwa
               g$index$19517$1XGIwa)))))
   (g$last-pair$19487$1XGIwa
     g$last-pair$19643$1XGIwa
     (case-lambda
       ((g$lst$19518$1XGIwa)
        (if (null? g$lst$19518$1XGIwa)
          g$lst$19518$1XGIwa
          (if (null? (cdr g$lst$19518$1XGIwa))
            g$lst$19518$1XGIwa
            (begin
              '#f
              (g$last-pair$19487$1XGIwa (cdr g$lst$19518$1XGIwa))))))))
   (g$make-list$19488$1XGIwa
     g$make-list$19644$1XGIwa
     (case-lambda
       ((g$n$19519$1XGIwa)
        (g$vector->list$20607$1XGIwa
          (g$make-vector$20604$1XGIwa g$n$19519$1XGIwa)))
       ((g$n$19520$1XGIwa g$fill$19521$1XGIwa)
        (g$vector->list$20607$1XGIwa
          (g$make-vector$20604$1XGIwa
            g$n$19520$1XGIwa
            g$fill$19521$1XGIwa)))))
   (g$find$19489$1XGIwa
     g$find$19645$1XGIwa
     (case-lambda
       ((g$proc$19522$1XGIwa g$l$19523$1XGIwa)
        (if (null? g$l$19523$1XGIwa)
          '#f
          ((case-lambda
             ((g$e$19524$1XGIwa g$r$19525$1XGIwa g$proc$19526$1XGIwa)
              (if (g$proc$19526$1XGIwa g$e$19524$1XGIwa)
                g$e$19524$1XGIwa
                (g$find$19489$1XGIwa
                  g$proc$19526$1XGIwa
                  g$r$19525$1XGIwa))))
           (car g$l$19523$1XGIwa)
           (cdr g$l$19523$1XGIwa)
           g$proc$19522$1XGIwa)))))
   (g$partition$19490$1XGIwa
     g$partition$19646$1XGIwa
     (case-lambda
       ((g$proc$19527$1XGIwa g$l$19528$1XGIwa)
        ((letrec ((g$f$19529$1XGIwa
                    (case-lambda
                      ((g$l$19530$1XGIwa
                         g$a$19531$1XGIwa
                         g$b$19532$1XGIwa)
                       (if (null? g$l$19530$1XGIwa)
                         (values
                           (reverse! g$a$19531$1XGIwa)
                           (reverse! g$b$19532$1XGIwa))
                         ((case-lambda
                            ((g$e$19533$1XGIwa)
                             (if (g$proc$19527$1XGIwa g$e$19533$1XGIwa)
                               (g$f$19529$1XGIwa
                                 (cdr g$l$19530$1XGIwa)
                                 (cons
                                   g$e$19533$1XGIwa
                                   g$a$19531$1XGIwa)
                                 g$b$19532$1XGIwa)
                               (g$f$19529$1XGIwa
                                 (cdr g$l$19530$1XGIwa)
                                 g$a$19531$1XGIwa
                                 (cons
                                   g$e$19533$1XGIwa
                                   g$b$19532$1XGIwa)))))
                          (car g$l$19530$1XGIwa)))))))
           g$f$19529$1XGIwa)
         g$l$19528$1XGIwa
         '()
         '()))))
   (g$remp$19491$1XGIwa
     g$remp$19647$1XGIwa
     (case-lambda
       ((g$proc$19534$1XGIwa g$l$19535$1XGIwa)
        ((letrec ((g$f$19536$1XGIwa
                    (case-lambda
                      ((g$l$19537$1XGIwa g$a$19538$1XGIwa)
                       (if (null? g$l$19537$1XGIwa)
                         (reverse! g$a$19538$1XGIwa)
                         ((case-lambda
                            ((g$e$19539$1XGIwa)
                             (if (g$proc$19534$1XGIwa g$e$19539$1XGIwa)
                               (g$f$19536$1XGIwa
                                 (cdr g$l$19537$1XGIwa)
                                 g$a$19538$1XGIwa)
                               (g$f$19536$1XGIwa
                                 (cdr g$l$19537$1XGIwa)
                                 (cons
                                   g$e$19539$1XGIwa
                                   g$a$19538$1XGIwa)))))
                          (car g$l$19537$1XGIwa)))))))
           g$f$19536$1XGIwa)
         g$l$19535$1XGIwa
         '()))))
   (g$filter$19492$1XGIwa
     g$filter$19648$1XGIwa
     (case-lambda
       ((g$proc$19540$1XGIwa g$l$19541$1XGIwa)
        ((letrec ((g$f$19542$1XGIwa
                    (case-lambda
                      ((g$l$19543$1XGIwa g$a$19544$1XGIwa)
                       (if (null? g$l$19543$1XGIwa)
                         (reverse! g$a$19544$1XGIwa)
                         ((case-lambda
                            ((g$e$19545$1XGIwa)
                             (if (g$proc$19540$1XGIwa g$e$19545$1XGIwa)
                               (g$f$19542$1XGIwa
                                 (cdr g$l$19543$1XGIwa)
                                 (cons
                                   g$e$19545$1XGIwa
                                   g$a$19544$1XGIwa))
                               (g$f$19542$1XGIwa
                                 (cdr g$l$19543$1XGIwa)
                                 g$a$19544$1XGIwa))))
                          (car g$l$19543$1XGIwa)))))))
           g$f$19542$1XGIwa)
         g$l$19541$1XGIwa
         '()))))
   (g$assq$19493$1XGIwa
     g$assq$19649$1XGIwa
     (case-lambda
       ((g$obj$19546$1XGIwa g$lst$19547$1XGIwa)
        (if (null? g$lst$19547$1XGIwa)
          '#f
          ((case-lambda
             ((g$obj$19548$1XGIwa g$t$19549$1XGIwa g$r$19550$1XGIwa)
              (if (eq? g$obj$19548$1XGIwa (car g$t$19549$1XGIwa))
                g$t$19549$1XGIwa
                (g$assq$19493$1XGIwa
                  g$obj$19548$1XGIwa
                  g$r$19550$1XGIwa))))
           g$obj$19546$1XGIwa
           (car g$lst$19547$1XGIwa)
           (cdr g$lst$19547$1XGIwa))))))
   (g$assv$19494$1XGIwa
     g$assv$19650$1XGIwa
     (case-lambda
       ((g$obj$19551$1XGIwa g$lst$19552$1XGIwa)
        (if (null? g$lst$19552$1XGIwa)
          '#f
          ((case-lambda
             ((g$obj$19553$1XGIwa g$t$19554$1XGIwa g$r$19555$1XGIwa)
              (if (eqv? g$obj$19553$1XGIwa (car g$t$19554$1XGIwa))
                g$t$19554$1XGIwa
                (g$assv$19494$1XGIwa
                  g$obj$19553$1XGIwa
                  g$r$19555$1XGIwa))))
           g$obj$19551$1XGIwa
           (car g$lst$19552$1XGIwa)
           (cdr g$lst$19552$1XGIwa))))))
   (g$assoc$19495$1XGIwa
     g$assoc$19651$1XGIwa
     (case-lambda
       ((g$obj$19556$1XGIwa g$lst$19557$1XGIwa)
        (if (null? g$lst$19557$1XGIwa)
          '#f
          ((case-lambda
             ((g$obj$19558$1XGIwa g$t$19559$1XGIwa g$r$19560$1XGIwa)
              (if (equal? g$obj$19558$1XGIwa (car g$t$19559$1XGIwa))
                g$t$19559$1XGIwa
                (g$assoc$19495$1XGIwa
                  g$obj$19558$1XGIwa
                  g$r$19560$1XGIwa))))
           g$obj$19556$1XGIwa
           (car g$lst$19557$1XGIwa)
           (cdr g$lst$19557$1XGIwa))))))
   (g$assp$19496$1XGIwa
     g$assp$19652$1XGIwa
     (case-lambda
       ((g$p?$19561$1XGIwa g$lst$19562$1XGIwa)
        (if (null? g$lst$19562$1XGIwa)
          '#f
          ((case-lambda
             ((g$p?$19563$1XGIwa g$t$19564$1XGIwa g$r$19565$1XGIwa)
              (if (g$p?$19563$1XGIwa (car g$t$19564$1XGIwa))
                g$t$19564$1XGIwa
                (g$assp$19496$1XGIwa
                  g$p?$19563$1XGIwa
                  g$r$19565$1XGIwa))))
           g$p?$19561$1XGIwa
           (car g$lst$19562$1XGIwa)
           (cdr g$lst$19562$1XGIwa))))))
   (g$memq$19497$1XGIwa
     g$memq$19653$1XGIwa
     (case-lambda
       ((g$obj$19566$1XGIwa g$lst$19567$1XGIwa)
        (if (null? g$lst$19567$1XGIwa)
          '#f
          (if (eq? g$obj$19566$1XGIwa (car g$lst$19567$1XGIwa))
            g$lst$19567$1XGIwa
            (g$memq$19497$1XGIwa
              g$obj$19566$1XGIwa
              (cdr g$lst$19567$1XGIwa)))))))
   (g$memv$19498$1XGIwa
     g$memv$19654$1XGIwa
     (case-lambda
       ((g$obj$19568$1XGIwa g$lst$19569$1XGIwa)
        (if (null? g$lst$19569$1XGIwa)
          '#f
          (if (eqv? g$obj$19568$1XGIwa (car g$lst$19569$1XGIwa))
            g$lst$19569$1XGIwa
            (g$memv$19498$1XGIwa
              g$obj$19568$1XGIwa
              (cdr g$lst$19569$1XGIwa)))))))
   (g$member$19499$1XGIwa
     g$member$19655$1XGIwa
     (case-lambda
       ((g$obj$19570$1XGIwa g$lst$19571$1XGIwa)
        (if (null? g$lst$19571$1XGIwa)
          '#f
          (if (equal? g$obj$19570$1XGIwa (car g$lst$19571$1XGIwa))
            g$lst$19571$1XGIwa
            (g$member$19499$1XGIwa
              g$obj$19570$1XGIwa
              (cdr g$lst$19571$1XGIwa)))))))
   (g$memp$19500$1XGIwa
     g$memp$19656$1XGIwa
     (case-lambda
       ((g$p?$19572$1XGIwa g$lst$19573$1XGIwa)
        (if (null? g$lst$19573$1XGIwa)
          '#f
          (if (g$p?$19572$1XGIwa (car g$lst$19573$1XGIwa))
            g$lst$19573$1XGIwa
            (g$memp$19500$1XGIwa
              g$p?$19572$1XGIwa
              (cdr g$lst$19573$1XGIwa)))))))
   (g$all-empty?$19501$1XGIwa
     g$all-empty?$19657$1XGIwa
     (case-lambda
       ((g$ls$19574$1XGIwa)
        ((case-lambda
           ((g$t$19575$1XGIwa)
            (if g$t$19575$1XGIwa
              g$t$19575$1XGIwa
              (begin
                '#f
                (if (null? (car g$ls$19574$1XGIwa))
                  (begin
                    '#f
                    (g$all-empty?$19501$1XGIwa (cdr g$ls$19574$1XGIwa)))
                  '#f)))))
         (null? g$ls$19574$1XGIwa)))))
   (g$split$19502$1XGIwa
     g$split$19658$1XGIwa
     (case-lambda
       ((g$ls$19576$1XGIwa)
        (if (null? g$ls$19576$1XGIwa)
          (values '() '())
          (begin
            '#f
            (call-with-values
              (case-lambda
                (() (g$split$19502$1XGIwa (cdr g$ls$19576$1XGIwa))))
              (case-lambda
                ((g$cars$19577$1XGIwa g$cdrs$19578$1XGIwa)
                 ((case-lambda
                    ((g$a$19579$1XGIwa)
                     (values
                       (cons (car g$a$19579$1XGIwa) g$cars$19577$1XGIwa)
                       (cons
                         (cdr g$a$19579$1XGIwa)
                         g$cdrs$19578$1XGIwa))))
                  (car g$ls$19576$1XGIwa))))))))))
   (g$for-all$19503$1XGIwa
     g$for-all$19659$1XGIwa
     (case-lambda
       ((g$f$19580$1XGIwa g$arg1$19581$1XGIwa)
        (if (null? g$arg1$19581$1XGIwa)
          '#t
          (if (null? (cdr g$arg1$19581$1XGIwa))
            (g$f$19580$1XGIwa (car g$arg1$19581$1XGIwa))
            (if (g$f$19580$1XGIwa (car g$arg1$19581$1XGIwa))
              (begin
                '#f
                (g$for-all$19503$1XGIwa
                  g$f$19580$1XGIwa
                  (cdr g$arg1$19581$1XGIwa)))
              '#f))))
       ((g$f$19582$1XGIwa g$arg1$19583$1XGIwa . g$args$19584$1XGIwa)
        ((case-lambda
           ((g$args$19585$1XGIwa)
            (if (g$all-empty?$19501$1XGIwa g$args$19585$1XGIwa)
              '#t
              (call-with-values
                (case-lambda
                  (() (g$split$19502$1XGIwa g$args$19585$1XGIwa)))
                (case-lambda
                  ((g$cars$19586$1XGIwa g$cdrs$19587$1XGIwa)
                   (if (g$all-empty?$19501$1XGIwa g$cdrs$19587$1XGIwa)
                     (apply g$f$19582$1XGIwa g$cars$19586$1XGIwa)
                     (if (apply g$f$19582$1XGIwa g$cars$19586$1XGIwa)
                       (begin
                         '#f
                         (apply
                           g$for-all$19503$1XGIwa
                           g$f$19582$1XGIwa
                           g$cdrs$19587$1XGIwa))
                       '#f))))))))
         (cons g$arg1$19583$1XGIwa g$args$19584$1XGIwa)))))
   (g$exists$19504$1XGIwa
     g$exists$19660$1XGIwa
     (case-lambda
       ((g$f$19588$1XGIwa g$arg1$19589$1XGIwa)
        (if (null? g$arg1$19589$1XGIwa)
          '#f
          ((case-lambda
             ((g$t$19590$1XGIwa)
              (if g$t$19590$1XGIwa
                g$t$19590$1XGIwa
                (begin
                  '#f
                  (g$exists$19504$1XGIwa
                    g$f$19588$1XGIwa
                    (cdr g$arg1$19589$1XGIwa))))))
           (g$f$19588$1XGIwa (car g$arg1$19589$1XGIwa)))))
       ((g$f$19591$1XGIwa g$arg1$19592$1XGIwa . g$args$19593$1XGIwa)
        ((case-lambda
           ((g$args$19594$1XGIwa)
            (if (g$all-empty?$19501$1XGIwa g$args$19594$1XGIwa)
              '#f
              (call-with-values
                (case-lambda
                  (() (g$split$19502$1XGIwa g$args$19594$1XGIwa)))
                (case-lambda
                  ((g$cars$19595$1XGIwa g$cdrs$19596$1XGIwa)
                   ((case-lambda
                      ((g$t$19597$1XGIwa)
                       (if g$t$19597$1XGIwa
                         g$t$19597$1XGIwa
                         (begin
                           '#f
                           (apply
                             g$exists$19504$1XGIwa
                             g$f$19591$1XGIwa
                             g$cdrs$19596$1XGIwa)))))
                    (apply g$f$19591$1XGIwa g$cars$19595$1XGIwa))))))))
         (cons g$arg1$19592$1XGIwa g$args$19593$1XGIwa)))))
   (g$map$19505$1XGIwa
     g$map$19661$1XGIwa
     (case-lambda
       ((g$proc$19598$1XGIwa g$list1$19599$1XGIwa)
        ((letrec ((g$f$19600$1XGIwa
                    (case-lambda
                      ((g$lst$19601$1XGIwa g$a$19602$1XGIwa)
                       (if (null? g$lst$19601$1XGIwa)
                         (reverse! g$a$19602$1XGIwa)
                         (g$f$19600$1XGIwa
                           (cdr g$lst$19601$1XGIwa)
                           (cons
                             (g$proc$19598$1XGIwa
                               (car g$lst$19601$1XGIwa))
                             g$a$19602$1XGIwa)))))))
           g$f$19600$1XGIwa)
         g$list1$19599$1XGIwa
         '()))
       ((g$proc$19603$1XGIwa
          g$list1$19604$1XGIwa
          .
          g$lists$19605$1XGIwa)
        ((letrec ((g$f$19606$1XGIwa
                    (case-lambda
                      ((g$lists$19607$1XGIwa g$a$19608$1XGIwa)
                       (if (g$all-empty?$19501$1XGIwa
                             g$lists$19607$1XGIwa)
                         (reverse! g$a$19608$1XGIwa)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$split$19502$1XGIwa
                                g$lists$19607$1XGIwa)))
                           (case-lambda
                             ((g$cars$19609$1XGIwa g$cdrs$19610$1XGIwa)
                              (g$f$19606$1XGIwa
                                g$cdrs$19610$1XGIwa
                                (cons
                                  (apply
                                    g$proc$19603$1XGIwa
                                    g$cars$19609$1XGIwa)
                                  g$a$19608$1XGIwa))))))))))
           g$f$19606$1XGIwa)
         (cons g$list1$19604$1XGIwa g$lists$19605$1XGIwa)
         '()))))
   (g$for-each$19506$1XGIwa
     g$for-each$19662$1XGIwa
     (case-lambda
       ((g$f$19611$1XGIwa g$arg1$19612$1XGIwa)
        (if (not (null? g$arg1$19612$1XGIwa))
          (begin
            (g$f$19611$1XGIwa (car g$arg1$19612$1XGIwa))
            (g$for-each$19506$1XGIwa
              g$f$19611$1XGIwa
              (cdr g$arg1$19612$1XGIwa)))
          (void)))
       ((g$f$19613$1XGIwa g$arg1$19614$1XGIwa . g$args$19615$1XGIwa)
        ((case-lambda
           ((g$args$19616$1XGIwa)
            (if (not (g$all-empty?$19501$1XGIwa g$args$19616$1XGIwa))
              (call-with-values
                (case-lambda
                  (() (g$split$19502$1XGIwa g$args$19616$1XGIwa)))
                (case-lambda
                  ((g$cars$19617$1XGIwa g$cdrs$19618$1XGIwa)
                   (begin
                     (apply g$f$19613$1XGIwa g$cars$19617$1XGIwa)
                     (apply
                       g$for-each$19506$1XGIwa
                       g$f$19613$1XGIwa
                       g$cdrs$19618$1XGIwa)))))
              (void))))
         (cons g$arg1$19614$1XGIwa g$args$19615$1XGIwa)))))
   (g$cons*$19507$1XGIwa
     g$cons*$19663$1XGIwa
     (case-lambda
       ((g$a$19619$1XGIwa . g$rest$19620$1XGIwa)
        ((letrec ((g$f$19621$1XGIwa
                    (case-lambda
                      ((g$a$19622$1XGIwa g$rest$19623$1XGIwa)
                       (if (null? g$rest$19623$1XGIwa)
                         g$a$19622$1XGIwa
                         (cons
                           g$a$19622$1XGIwa
                           (g$f$19621$1XGIwa
                             (car g$rest$19623$1XGIwa)
                             (cdr g$rest$19623$1XGIwa))))))))
           g$f$19621$1XGIwa)
         g$a$19619$1XGIwa
         g$rest$19620$1XGIwa))))
   (g$fold-left$19508$1XGIwa
     g$fold-left$19664$1XGIwa
     (case-lambda
       ((g$combine$19624$1XGIwa
          g$nil$19625$1XGIwa
          g$list1$19626$1XGIwa
          .
          g$lists$19627$1XGIwa)
        (if (null? g$list1$19626$1XGIwa)
          g$nil$19625$1XGIwa
          (if (null? g$lists$19627$1XGIwa)
            (g$fold-left$19508$1XGIwa
              g$combine$19624$1XGIwa
              (g$combine$19624$1XGIwa
                g$nil$19625$1XGIwa
                (car g$list1$19626$1XGIwa))
              (cdr g$list1$19626$1XGIwa))
            (begin
              '#f
              (apply
                g$fold-left$19508$1XGIwa
                (g$cons*$19507$1XGIwa
                  g$combine$19624$1XGIwa
                  (apply
                    g$combine$19624$1XGIwa
                    (g$cons*$19507$1XGIwa
                      g$nil$19625$1XGIwa
                      (car g$list1$19626$1XGIwa)
                      (g$map$19505$1XGIwa car g$lists$19627$1XGIwa)))
                  (cdr g$list1$19626$1XGIwa)
                  (g$map$19505$1XGIwa cdr g$lists$19627$1XGIwa)))))))))
   (g$fold-right$19509$1XGIwa
     g$fold-right$19665$1XGIwa
     (case-lambda
       ((g$combine$19628$1XGIwa
          g$nil$19629$1XGIwa
          g$list1$19630$1XGIwa
          .
          g$lists$19631$1XGIwa)
        (if (null? g$list1$19630$1XGIwa)
          g$nil$19629$1XGIwa
          (if (null? g$lists$19631$1XGIwa)
            (g$combine$19628$1XGIwa
              (car g$list1$19630$1XGIwa)
              (g$fold-right$19509$1XGIwa
                g$combine$19628$1XGIwa
                g$nil$19629$1XGIwa
                (cdr g$list1$19630$1XGIwa)))
            (begin
              '#f
              (apply
                g$combine$19628$1XGIwa
                (append
                  (list (car g$list1$19630$1XGIwa))
                  (g$map$19505$1XGIwa car g$lists$19631$1XGIwa)
                  (list
                    (apply
                      g$fold-right$19509$1XGIwa
                      (g$cons*$19507$1XGIwa
                        g$combine$19628$1XGIwa
                        g$nil$19629$1XGIwa
                        (cdr g$list1$19630$1XGIwa)
                        (g$map$19505$1XGIwa
                          cdr
                          g$lists$19631$1XGIwa))))))))))))
   (g$remove$19510$1XGIwa
     g$remove$19666$1XGIwa
     (case-lambda
       ((g$obj$19632$1XGIwa g$list$19633$1XGIwa)
        (g$remp$19491$1XGIwa
          (case-lambda
            ((g$x$19634$1XGIwa)
             (equal? g$obj$19632$1XGIwa g$x$19634$1XGIwa)))
          g$list$19633$1XGIwa))))
   (g$remv$19511$1XGIwa
     g$remv$19667$1XGIwa
     (case-lambda
       ((g$obj$19635$1XGIwa g$list$19636$1XGIwa)
        (g$remp$19491$1XGIwa
          (case-lambda
            ((g$x$19637$1XGIwa)
             (eqv? g$obj$19635$1XGIwa g$x$19637$1XGIwa)))
          g$list$19636$1XGIwa))))
   (g$remq$19512$1XGIwa
     g$remq$19668$1XGIwa
     (case-lambda
       ((g$obj$19638$1XGIwa g$list$19639$1XGIwa)
        (g$remp$19491$1XGIwa
          (case-lambda
            ((g$x$19640$1XGIwa)
             (eq? g$obj$19638$1XGIwa g$x$19640$1XGIwa)))
          g$list$19639$1XGIwa)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$clr-string?$20153$1XGIwa
     g$clr-string?$20567$1XGIwa
     (case-lambda
       ((g$obj$20332$1XGIwa)
        (clr-is-internal 'System.String g$obj$20332$1XGIwa))))
   (g$stringbuilder?$20154$1XGIwa
     g$stringbuilder?$20568$1XGIwa
     (case-lambda
       ((g$obj$20333$1XGIwa)
        (clr-is-internal
          'System.Text.StringBuilder
          g$obj$20333$1XGIwa))))
   (g$string?$20155$1XGIwa
     g$string?$20569$1XGIwa
     (case-lambda
       ((g$obj$20334$1XGIwa)
        ((case-lambda
           ((g$t$20335$1XGIwa)
            (if g$t$20335$1XGIwa
              g$t$20335$1XGIwa
              (begin
                '#f
                (g$stringbuilder?$20154$1XGIwa g$obj$20334$1XGIwa)))))
         (g$clr-string?$20153$1XGIwa g$obj$20334$1XGIwa)))))
   (g$char?$20156$1XGIwa
     g$char?$20570$1XGIwa
     (case-lambda
       ((g$obj$20336$1XGIwa)
        (clr-is-internal 'system.char g$obj$20336$1XGIwa))))
   (g$vector?$20157$1XGIwa
     g$vector?$20571$1XGIwa
     (case-lambda
       ((g$obj$20337$1XGIwa)
        (clr-is-internal 'system.object[] g$obj$20337$1XGIwa))))
   (g$bytevector?$20158$1XGIwa
     g$bytevector?$20572$1XGIwa
     (case-lambda
       ((g$obj$20338$1XGIwa)
        (clr-is-internal 'system.byte[] g$obj$20338$1XGIwa))))
   (g$symbol?$20159$1XGIwa
     g$symbol?$20573$1XGIwa
     (case-lambda
       ((g$obj$20339$1XGIwa)
        (clr-is-internal
          'microsoft.scripting.symbolid
          g$obj$20339$1XGIwa))))
   (g$boolean?$20160$1XGIwa
     g$boolean?$20574$1XGIwa
     (case-lambda
       ((g$obj$20340$1XGIwa)
        (clr-is-internal 'system.boolean g$obj$20340$1XGIwa))))
   (g$procedure?$20161$1XGIwa
     g$procedure?$20575$1XGIwa
     (case-lambda
       ((g$obj$20341$1XGIwa)
        (clr-is-internal
          'ironscheme.runtime.icallable
          g$obj$20341$1XGIwa))))
   (g$fixnum?$20162$1XGIwa
     g$fixnum?$20576$1XGIwa
     (case-lambda
       ((g$obj$20342$1XGIwa)
        (clr-is-internal 'system.int32 g$obj$20342$1XGIwa))))
   (g$flonum?$20163$1XGIwa
     g$flonum?$20577$1XGIwa
     (case-lambda
       ((g$obj$20343$1XGIwa)
        (clr-is-internal 'system.double g$obj$20343$1XGIwa))))
   (g$fixnum-width$20164$1XGIwa
     g$fixnum-width$20578$1XGIwa
     (case-lambda (() '32)))
   (g$char->integer$20165$1XGIwa
     g$char->integer$20579$1XGIwa
     (case-lambda
       ((g$chr$20344$1XGIwa)
        (begin
          (if (not (g$char?$20156$1XGIwa g$chr$20344$1XGIwa))
            (assertion-violation
              'char->integer
              '"not a character"
              g$chr$20344$1XGIwa)
            (void))
          (clr-cast-internal
            'System.Int32
            (clr-cast-internal 'System.Char g$chr$20344$1XGIwa))))))
   (g$integer->char$20166$1XGIwa
     g$integer->char$20580$1XGIwa
     (case-lambda
       ((g$num$20345$1XGIwa)
        (begin
          (if (not (g$fixnum?$20162$1XGIwa g$num$20345$1XGIwa))
            (assertion-violation
              'integer->char
              '"not a integer"
              g$num$20345$1XGIwa)
            (void))
          (if ((case-lambda
                 ((g$t$20346$1XGIwa)
                  (if g$t$20346$1XGIwa
                    g$t$20346$1XGIwa
                    ((case-lambda
                       ((g$t$20347$1XGIwa)
                        (if g$t$20347$1XGIwa
                          g$t$20347$1XGIwa
                          (begin
                            '#f
                            (if (g$fx>?$25031$1XGIwa
                                  g$num$20345$1XGIwa
                                  '55295)
                              (begin
                                '#f
                                (g$fx<?$25029$1XGIwa
                                  g$num$20345$1XGIwa
                                  '57344))
                              '#f)))))
                     (g$fx>?$25031$1XGIwa
                       g$num$20345$1XGIwa
                       '1114111)))))
               (g$fxnegative?$25049$1XGIwa g$num$20345$1XGIwa))
            (assertion-violation
              'integer->char
              '"not a valid unicode value"
              g$num$20345$1XGIwa)
            (void))
          (g$string-ref$20168$1XGIwa
            (clr-call-internal
              'System.Char
              'ConvertFromUtf32
              '()
              g$num$20345$1XGIwa)
            '0)))))
   (g$make-string$20167$1XGIwa
     g$make-string$20581$1XGIwa
     (case-lambda
       ((g$k$20348$1XGIwa)
        (g$make-string$20167$1XGIwa g$k$20348$1XGIwa '#\nul))
       ((g$k$20349$1XGIwa g$fill$20350$1XGIwa)
        (begin
          (if (not (g$fixnum?$20162$1XGIwa g$k$20349$1XGIwa))
            (assertion-violation
              'make-string
              '"not a fixnum"
              g$k$20349$1XGIwa)
            (void))
          (if (g$negative?$21618$1XGIwa g$k$20349$1XGIwa)
            (assertion-violation
              'make-string
              '"cannot be negative"
              g$k$20349$1XGIwa)
            (void))
          (if (not (g$char?$20156$1XGIwa g$fill$20350$1XGIwa))
            (assertion-violation
              'make-string
              '"not a character"
              g$fill$20350$1XGIwa)
            (void))
          ((case-lambda
             ((g$str$20351$1XGIwa)
              ((letrec ((g$f$20352$1XGIwa
                          (case-lambda
                            ((g$i$20353$1XGIwa)
                             (if (g$fx=?$25028$1XGIwa
                                   g$i$20353$1XGIwa
                                   g$k$20349$1XGIwa)
                               g$str$20351$1XGIwa
                               (begin
                                 (clr-call-internal
                                   'System.Text.StringBuilder
                                   '"Append(Char)"
                                   g$str$20351$1XGIwa
                                   g$fill$20350$1XGIwa)
                                 (g$f$20352$1XGIwa
                                   (g$fx+$25015$1XGIwa
                                     g$i$20353$1XGIwa
                                     '1))))))))
                 g$f$20352$1XGIwa)
               '0)))
           (clr-new-internal
             'System.Text.StringBuilder
             (clr-cast-internal 'System.Int32 g$k$20349$1XGIwa)))))))
   (g$string-ref$20168$1XGIwa
     g$string-ref$20582$1XGIwa
     (case-lambda
       ((g$str$20354$1XGIwa g$k$20355$1XGIwa)
        (begin
          (if (not (if (g$fixnum?$20162$1XGIwa g$k$20355$1XGIwa)
                     (begin
                       '#f
                       (g$fx>=?$25032$1XGIwa g$k$20355$1XGIwa '0))
                     '#f))
            (assertion-violation
              'string-ref
              '"not a non-negative integer"
              g$k$20355$1XGIwa)
            (void))
          (if (g$clr-string?$20153$1XGIwa g$str$20354$1XGIwa)
            (clr-call-internal
              'System.String
              'get_Chars
              g$str$20354$1XGIwa
              g$k$20355$1XGIwa)
            (if (g$stringbuilder?$20154$1XGIwa g$str$20354$1XGIwa)
              (clr-call-internal
                'System.Text.StringBuilder
                'get_Chars
                g$str$20354$1XGIwa
                g$k$20355$1XGIwa)
              (begin
                '#f
                (assertion-violation
                  'string-set!
                  '"not a string"
                  g$str$20354$1XGIwa))))))))
   (g$string-set!$20169$1XGIwa
     g$string-set!$20583$1XGIwa
     (case-lambda
       ((g$str$20356$1XGIwa g$k$20357$1XGIwa g$val$20358$1XGIwa)
        (begin
          (if (not (g$stringbuilder?$20154$1XGIwa g$str$20356$1XGIwa))
            (assertion-violation
              'string-set!
              '"not a mutable string"
              g$str$20356$1XGIwa)
            (void))
          (if (not (if (g$fixnum?$20162$1XGIwa g$k$20357$1XGIwa)
                     (begin
                       '#f
                       (g$fx>=?$25032$1XGIwa g$k$20357$1XGIwa '0))
                     '#f))
            (assertion-violation
              'string-set!
              '"not a non-negative integer"
              g$k$20357$1XGIwa)
            (void))
          (clr-call-internal
            'System.Text.StringBuilder
            'set_Chars
            g$str$20356$1XGIwa
            g$k$20357$1XGIwa
            g$val$20358$1XGIwa)))))
   (g$string-fill!$20170$1XGIwa
     g$string-fill!$20584$1XGIwa
     (case-lambda
       ((g$str$20359$1XGIwa g$k$20360$1XGIwa g$fill$20361$1XGIwa)
        (begin
          (if (not (g$stringbuilder?$20154$1XGIwa g$str$20359$1XGIwa))
            (assertion-violation
              'string-fill!
              '"not a mutable string"
              g$str$20359$1XGIwa)
            (void))
          (if (not (if (g$fixnum?$20162$1XGIwa g$k$20360$1XGIwa)
                     (begin
                       '#f
                       (g$fx>=?$25032$1XGIwa g$k$20360$1XGIwa '0))
                     '#f))
            (assertion-violation
              'string-fill!
              '"not a non-negative integer"
              g$k$20360$1XGIwa)
            (void))
          (if (not (g$char?$20156$1XGIwa g$fill$20361$1XGIwa))
            (assertion-violation
              'string-fill!
              '"not a character"
              g$fill$20361$1XGIwa)
            (void))
          ((letrec ((g$f$20362$1XGIwa
                      (case-lambda
                        ((g$i$20363$1XGIwa)
                         (if (not (g$fx=?$25028$1XGIwa
                                    g$i$20363$1XGIwa
                                    g$k$20360$1XGIwa))
                           (begin
                             (clr-call-internal
                               'System.Text.StringBuilder
                               'set_Chars
                               g$str$20359$1XGIwa
                               g$i$20363$1XGIwa
                               g$fill$20361$1XGIwa)
                             (g$f$20362$1XGIwa
                               (g$fx+$25015$1XGIwa
                                 g$i$20363$1XGIwa
                                 '1)))
                           (void))))))
             g$f$20362$1XGIwa)
           '0)))))
   (g$string-length$20171$1XGIwa
     g$string-length$20585$1XGIwa
     (case-lambda
       ((g$str$20364$1XGIwa)
        (if (g$clr-string?$20153$1XGIwa g$str$20364$1XGIwa)
          (clr-call-internal
            'System.String
            'get_Length
            g$str$20364$1XGIwa)
          (if (g$stringbuilder?$20154$1XGIwa g$str$20364$1XGIwa)
            (clr-call-internal
              'System.Text.StringBuilder
              'get_Length
              g$str$20364$1XGIwa)
            (begin
              '#f
              (assertion-violation
                'string-length
                '"not a string"
                g$str$20364$1XGIwa)))))))
   (g$->string$20172$1XGIwa
     g$->string$20586$1XGIwa
     (case-lambda
       ((g$str$20365$1XGIwa)
        (if (g$clr-string?$20153$1XGIwa g$str$20365$1XGIwa)
          g$str$20365$1XGIwa
          (clr-call-internal 'Object 'ToString g$str$20365$1XGIwa)))))
   (g$string$20173$1XGIwa
     g$string$20587$1XGIwa
     (case-lambda
       (g$args$20366$1XGIwa
        (begin
          (if (not (g$for-all$19659$1XGIwa
                     g$char?$20156$1XGIwa
                     g$args$20366$1XGIwa))
            (assertion-violation
              'string
              '"not all char"
              g$args$20366$1XGIwa)
            (void))
          ((case-lambda
             ((g$str$20367$1XGIwa)
              ((letrec ((g$f$20368$1XGIwa
                          (case-lambda
                            ((g$args$20369$1XGIwa)
                             (if (null? g$args$20369$1XGIwa)
                               g$str$20367$1XGIwa
                               (begin
                                 (clr-call-internal
                                   'System.Text.StringBuilder
                                   '"Append(Char)"
                                   g$str$20367$1XGIwa
                                   (car g$args$20369$1XGIwa))
                                 (g$f$20368$1XGIwa
                                   (cdr g$args$20369$1XGIwa))))))))
                 g$f$20368$1XGIwa)
               g$args$20366$1XGIwa)))
           (clr-new-internal 'System.Text.StringBuilder))))))
   (g$string->list$20174$1XGIwa
     g$string->list$20588$1XGIwa
     (case-lambda
       ((g$str$20370$1XGIwa)
        (begin
          (if (not (g$string?$20155$1XGIwa g$str$20370$1XGIwa))
            (assertion-violation
              'string->list
              '"not a string"
              g$str$20370$1XGIwa)
            (void))
          (clr-call-internal
            'IronScheme.Runtime.Cons
            'FromList
            '()
            (g$->string$20172$1XGIwa g$str$20370$1XGIwa))))))
   (g$string-copy$20175$1XGIwa
     g$string-copy$20589$1XGIwa
     (case-lambda
       ((g$str$20371$1XGIwa)
        (if (g$clr-string?$20153$1XGIwa g$str$20371$1XGIwa)
          (clr-call-internal
            'System.String
            'Copy
            '()
            g$str$20371$1XGIwa)
          (if (g$stringbuilder?$20154$1XGIwa g$str$20371$1XGIwa)
            (clr-call-internal
              'System.Text.StringBuilder
              'ToString
              g$str$20371$1XGIwa)
            (begin
              '#f
              (assertion-violation
                'string-copy
                '"not a string"
                g$str$20371$1XGIwa)))))))
   (g$substring$20176$1XGIwa
     g$substring$20590$1XGIwa
     (case-lambda
       ((g$str$20372$1XGIwa g$start$20373$1XGIwa g$end$20374$1XGIwa)
        (begin
          (if (not (if (g$fixnum?$20162$1XGIwa g$start$20373$1XGIwa)
                     (begin
                       '#f
                       (g$fx>=?$25032$1XGIwa g$start$20373$1XGIwa '0))
                     '#f))
            (assertion-violation
              'substring
              '"not a non-negative integer"
              g$start$20373$1XGIwa)
            (void))
          (if (not (if (g$fixnum?$20162$1XGIwa g$end$20374$1XGIwa)
                     (begin
                       '#f
                       (g$fx>=?$25032$1XGIwa g$end$20374$1XGIwa '0))
                     '#f))
            (assertion-violation
              'substring
              '"not a non-negative integer"
              g$end$20374$1XGIwa)
            (void))
          (if (g$clr-string?$20153$1XGIwa g$str$20372$1XGIwa)
            (clr-call-internal
              'System.String
              'Substring
              g$str$20372$1XGIwa
              g$start$20373$1XGIwa
              (g$fx-$25017$1XGIwa
                g$end$20374$1XGIwa
                g$start$20373$1XGIwa))
            (if (g$stringbuilder?$20154$1XGIwa g$str$20372$1XGIwa)
              (clr-call-internal
                'System.Text.StringBuilder
                'ToString
                g$str$20372$1XGIwa
                g$start$20373$1XGIwa
                (g$fx-$25017$1XGIwa
                  g$end$20374$1XGIwa
                  g$start$20373$1XGIwa))
              (begin
                '#f
                (assertion-violation
                  'substring
                  '"not a string"
                  g$str$20372$1XGIwa))))))))
   (g$string-append$20177$1XGIwa
     g$string-append$20591$1XGIwa
     (case-lambda
       (g$args$20375$1XGIwa
        (begin
          (if (not (g$for-all$19659$1XGIwa
                     g$string?$20155$1XGIwa
                     g$args$20375$1XGIwa))
            (assertion-violation
              'string-append
              '"not strings"
              g$args$20375$1XGIwa)
            (void))
          (clr-call-internal
            'System.String
            '"Concat(String[])"
            '()
            (g$list->vector$20186$1XGIwa
              (g$map$19661$1XGIwa
                g$->string$20172$1XGIwa
                g$args$20375$1XGIwa)))))))
   (g$string-format$20178$1XGIwa
     g$string-format$20592$1XGIwa
     (case-lambda
       ((g$fmt$20376$1XGIwa . g$args$20377$1XGIwa)
        (clr-call-internal
          'System.String
          '"Format(String,Object[])"
          '()
          g$fmt$20376$1XGIwa
          (g$list->vector$20186$1XGIwa g$args$20377$1XGIwa)))))
   (g$symbol->string$20179$1XGIwa
     g$symbol->string$20593$1XGIwa
     (case-lambda
       ((g$sym$20378$1XGIwa)
        (begin
          (if (not (g$symbol?$20159$1XGIwa g$sym$20378$1XGIwa))
            (assertion-violation
              'symbol->string
              '"not a symbol"
              g$sym$20378$1XGIwa)
            (void))
          (clr-call-internal
            'Microsoft.Scripting.SymbolTable
            'IdToString
            '()
            g$sym$20378$1XGIwa)))))
   (g$string->symbol$20180$1XGIwa
     g$string->symbol$20594$1XGIwa
     (case-lambda
       ((g$str$20379$1XGIwa)
        (begin
          (if (not (g$string?$20155$1XGIwa g$str$20379$1XGIwa))
            (assertion-violation
              'string->symbol
              '"not a string"
              g$str$20379$1XGIwa)
            (void))
          (clr-call-internal
            'Microsoft.Scripting.SymbolTable
            'StringToObject
            '()
            g$str$20379$1XGIwa)))))
   (g$div0$20181$1XGIwa
     g$div0$20595$1XGIwa
     (case-lambda
       ((g$x1$20380$1XGIwa g$x2$20381$1XGIwa)
        ((case-lambda
           ((g$d$20382$1XGIwa)
            ((case-lambda
               ((g$m$20383$1XGIwa)
                (if (g$<$21626$1XGIwa
                      g$m$20383$1XGIwa
                      (g$magnitude$21633$1XGIwa
                        (/ g$x2$20381$1XGIwa '2)))
                  g$d$20382$1XGIwa
                  (if (g$positive?$21617$1XGIwa g$x2$20381$1XGIwa)
                    (+ g$d$20382$1XGIwa '1)
                    (begin '#f (- g$d$20382$1XGIwa '1))))))
             (- g$x1$20380$1XGIwa
                (* g$d$20382$1XGIwa g$x2$20381$1XGIwa)))))
         (g$div$21650$1XGIwa g$x1$20380$1XGIwa g$x2$20381$1XGIwa)))))
   (g$mod$20182$1XGIwa
     g$mod$20596$1XGIwa
     (case-lambda
       ((g$x1$20384$1XGIwa g$x2$20385$1XGIwa)
        (- g$x1$20384$1XGIwa
           (* (g$div$21650$1XGIwa g$x1$20384$1XGIwa g$x2$20385$1XGIwa)
              g$x2$20385$1XGIwa)))))
   (g$mod0$20183$1XGIwa
     g$mod0$20597$1XGIwa
     (case-lambda
       ((g$x1$20386$1XGIwa g$x2$20387$1XGIwa)
        (- g$x1$20386$1XGIwa
           (* (g$div0$20181$1XGIwa g$x1$20386$1XGIwa g$x2$20387$1XGIwa)
              g$x2$20387$1XGIwa)))))
   (g$div-and-mod$20184$1XGIwa
     g$div-and-mod$20598$1XGIwa
     (case-lambda
       ((g$x1$20388$1XGIwa g$x2$20389$1XGIwa)
        ((case-lambda
           ((g$d$20390$1XGIwa)
            (values
              g$d$20390$1XGIwa
              (- g$x1$20388$1XGIwa
                 (* g$d$20390$1XGIwa g$x2$20389$1XGIwa)))))
         (g$div$21650$1XGIwa g$x1$20388$1XGIwa g$x2$20389$1XGIwa)))))
   (g$div0-and-mod0$20185$1XGIwa
     g$div0-and-mod0$20599$1XGIwa
     (case-lambda
       ((g$x1$20391$1XGIwa g$x2$20392$1XGIwa)
        ((case-lambda
           ((g$d$20393$1XGIwa)
            (values
              g$d$20393$1XGIwa
              (- g$x1$20391$1XGIwa
                 (* g$d$20393$1XGIwa g$x2$20392$1XGIwa)))))
         (g$div0$20181$1XGIwa g$x1$20391$1XGIwa g$x2$20392$1XGIwa)))))
   (g$list->vector$20186$1XGIwa
     g$list->vector$20600$1XGIwa
     (case-lambda
       ((g$lst$20394$1XGIwa) (apply vector g$lst$20394$1XGIwa))))
   (g$list->string$20187$1XGIwa
     g$list->string$20601$1XGIwa
     (case-lambda
       ((g$lst$20395$1XGIwa)
        (apply g$string$20173$1XGIwa g$lst$20395$1XGIwa))))
   (g$vector-ref$20188$1XGIwa
     g$vector-ref$20602$1XGIwa
     (case-lambda
       ((g$x$20396$1XGIwa g$n$20397$1XGIwa)
        (begin
          (if (not (g$vector?$20157$1XGIwa g$x$20396$1XGIwa))
            (assertion-violation
              'vector-ref
              '"not a vector"
              g$x$20396$1XGIwa)
            (void))
          (if (not (g$integer?$21612$1XGIwa g$n$20397$1XGIwa))
            (assertion-violation
              'vector-ref
              '"not an integer"
              g$n$20397$1XGIwa)
            (void))
          (if (g$negative?$21618$1XGIwa g$n$20397$1XGIwa)
            (assertion-violation
              'vector-ref
              '"negative index"
              g$n$20397$1XGIwa)
            (void))
          ($vector-ref g$x$20396$1XGIwa g$n$20397$1XGIwa)))))
   (g$vector-set!$20189$1XGIwa
     g$vector-set!$20603$1XGIwa
     (case-lambda
       ((g$x$20398$1XGIwa g$n$20399$1XGIwa g$value$20400$1XGIwa)
        (begin
          (if (not (g$vector?$20157$1XGIwa g$x$20398$1XGIwa))
            (assertion-violation
              'vector-set!
              '"not a vector"
              g$x$20398$1XGIwa)
            (void))
          (if (not (g$integer?$21612$1XGIwa g$n$20399$1XGIwa))
            (assertion-violation
              'vector-set!
              '"not an integer"
              g$n$20399$1XGIwa)
            (void))
          (if (g$negative?$21618$1XGIwa g$n$20399$1XGIwa)
            (assertion-violation
              'vector-set!
              '"negative index"
              g$n$20399$1XGIwa)
            (void))
          ($vector-set!
            g$x$20398$1XGIwa
            g$n$20399$1XGIwa
            g$value$20400$1XGIwa)
          (void)))))
   (g$make-vector$20190$1XGIwa
     g$make-vector$20604$1XGIwa
     (case-lambda
       ((g$k$20401$1XGIwa)
        (begin
          (if (not (g$fixnum?$20162$1XGIwa g$k$20401$1XGIwa))
            (assertion-violation
              'make-vector
              '"not a fixnum"
              g$k$20401$1XGIwa)
            (void))
          (if (g$negative?$21618$1XGIwa g$k$20401$1XGIwa)
            (assertion-violation
              'make-vector
              '"cannot be negative"
              g$k$20401$1XGIwa)
            (void))
          (clr-new-array-internal 'System.Object g$k$20401$1XGIwa)))
       ((g$k$20402$1XGIwa g$fill$20403$1XGIwa)
        ((case-lambda
           ((g$vec$20404$1XGIwa)
            (begin
              (g$vector-fill!$20192$1XGIwa
                g$vec$20404$1XGIwa
                g$fill$20403$1XGIwa)
              g$vec$20404$1XGIwa)))
         (g$make-vector$20190$1XGIwa g$k$20402$1XGIwa)))))
   (g$vector-length$20191$1XGIwa
     g$vector-length$20605$1XGIwa
     (case-lambda
       ((g$vec$20405$1XGIwa)
        (begin
          (if (not (g$vector?$20157$1XGIwa g$vec$20405$1XGIwa))
            (assertion-violation
              'vector-length
              '"not a vector"
              g$vec$20405$1XGIwa)
            (void))
          (clr-call-internal
            'System.Array
            'get_Length
            g$vec$20405$1XGIwa)))))
   (g$vector-fill!$20192$1XGIwa
     g$vector-fill!$20606$1XGIwa
     (case-lambda
       ((g$vec$20406$1XGIwa g$val$20407$1XGIwa)
        ((case-lambda
           ((g$len$20408$1XGIwa)
            (letrec ((g$loop$20409$1XGIwa
                       (case-lambda
                         ((g$i$20410$1XGIwa)
                          (if (g$fx=?$25028$1XGIwa
                                g$i$20410$1XGIwa
                                g$len$20408$1XGIwa)
                            (if '#f '#f (void))
                            (begin
                              (g$vector-set!$20189$1XGIwa
                                g$vec$20406$1XGIwa
                                g$i$20410$1XGIwa
                                g$val$20407$1XGIwa)
                              (g$loop$20409$1XGIwa
                                (g$fx+$25015$1XGIwa
                                  g$i$20410$1XGIwa
                                  '1))))))))
              (g$loop$20409$1XGIwa '0))))
         (g$vector-length$20191$1XGIwa g$vec$20406$1XGIwa)))))
   (g$vector->list$20193$1XGIwa
     g$vector->list$20607$1XGIwa
     (case-lambda
       ((g$vec$20411$1XGIwa)
        (begin
          (if (not (g$vector?$20157$1XGIwa g$vec$20411$1XGIwa))
            (assertion-violation
              'vector->list
              '"not a vector"
              g$vec$20411$1XGIwa)
            (void))
          (clr-call-internal
            'IronScheme.Runtime.Cons
            'FromList
            '()
            g$vec$20411$1XGIwa)))))
   (g$xcons$20194$1XGIwa
     g$xcons$20608$1XGIwa
     (case-lambda
       ((g$x$20412$1XGIwa g$y$20413$1XGIwa)
        (cons g$y$20413$1XGIwa g$x$20412$1XGIwa))))
   (g$reverse$20195$1XGIwa
     g$reverse$20609$1XGIwa
     (case-lambda
       ((g$lst$20414$1XGIwa)
        (g$fold-left$19664$1XGIwa
          g$xcons$20194$1XGIwa
          '()
          g$lst$20414$1XGIwa))))
   (g$caar$20196$1XGIwa
     g$caar$20610$1XGIwa
     (case-lambda ((g$x$20415$1XGIwa) (car (car g$x$20415$1XGIwa)))))
   (g$cadr$20197$1XGIwa
     g$cadr$20611$1XGIwa
     (case-lambda ((g$x$20416$1XGIwa) (car (cdr g$x$20416$1XGIwa)))))
   (g$cdar$20198$1XGIwa
     g$cdar$20612$1XGIwa
     (case-lambda ((g$x$20417$1XGIwa) (cdr (car g$x$20417$1XGIwa)))))
   (g$cddr$20199$1XGIwa
     g$cddr$20613$1XGIwa
     (case-lambda ((g$x$20418$1XGIwa) (cdr (cdr g$x$20418$1XGIwa)))))
   (g$caaar$20200$1XGIwa
     g$caaar$20614$1XGIwa
     (case-lambda
       ((g$x$20419$1XGIwa)
        (g$caar$20196$1XGIwa (car g$x$20419$1XGIwa)))))
   (g$caadr$20201$1XGIwa
     g$caadr$20615$1XGIwa
     (case-lambda
       ((g$x$20420$1XGIwa)
        (g$caar$20196$1XGIwa (cdr g$x$20420$1XGIwa)))))
   (g$cadar$20202$1XGIwa
     g$cadar$20616$1XGIwa
     (case-lambda
       ((g$x$20421$1XGIwa)
        (g$cadr$20197$1XGIwa (car g$x$20421$1XGIwa)))))
   (g$caddr$20203$1XGIwa
     g$caddr$20617$1XGIwa
     (case-lambda
       ((g$x$20422$1XGIwa)
        (g$cadr$20197$1XGIwa (cdr g$x$20422$1XGIwa)))))
   (g$cdaar$20204$1XGIwa
     g$cdaar$20618$1XGIwa
     (case-lambda
       ((g$x$20423$1XGIwa)
        (g$cdar$20198$1XGIwa (car g$x$20423$1XGIwa)))))
   (g$cdadr$20205$1XGIwa
     g$cdadr$20619$1XGIwa
     (case-lambda
       ((g$x$20424$1XGIwa)
        (g$cdar$20198$1XGIwa (cdr g$x$20424$1XGIwa)))))
   (g$cddar$20206$1XGIwa
     g$cddar$20620$1XGIwa
     (case-lambda
       ((g$x$20425$1XGIwa)
        (g$cddr$20199$1XGIwa (car g$x$20425$1XGIwa)))))
   (g$cdddr$20207$1XGIwa
     g$cdddr$20621$1XGIwa
     (case-lambda
       ((g$x$20426$1XGIwa)
        (g$cddr$20199$1XGIwa (cdr g$x$20426$1XGIwa)))))
   (g$caaaar$20208$1XGIwa
     g$caaaar$20622$1XGIwa
     (case-lambda
       ((g$x$20427$1XGIwa)
        (g$caaar$20200$1XGIwa (car g$x$20427$1XGIwa)))))
   (g$caaadr$20209$1XGIwa
     g$caaadr$20623$1XGIwa
     (case-lambda
       ((g$x$20428$1XGIwa)
        (g$caaar$20200$1XGIwa (cdr g$x$20428$1XGIwa)))))
   (g$caadar$20210$1XGIwa
     g$caadar$20624$1XGIwa
     (case-lambda
       ((g$x$20429$1XGIwa)
        (g$caadr$20201$1XGIwa (car g$x$20429$1XGIwa)))))
   (g$caaddr$20211$1XGIwa
     g$caaddr$20625$1XGIwa
     (case-lambda
       ((g$x$20430$1XGIwa)
        (g$caadr$20201$1XGIwa (cdr g$x$20430$1XGIwa)))))
   (g$cadaar$20212$1XGIwa
     g$cadaar$20626$1XGIwa
     (case-lambda
       ((g$x$20431$1XGIwa)
        (g$cadar$20202$1XGIwa (car g$x$20431$1XGIwa)))))
   (g$cadadr$20213$1XGIwa
     g$cadadr$20627$1XGIwa
     (case-lambda
       ((g$x$20432$1XGIwa)
        (g$cadar$20202$1XGIwa (cdr g$x$20432$1XGIwa)))))
   (g$caddar$20214$1XGIwa
     g$caddar$20628$1XGIwa
     (case-lambda
       ((g$x$20433$1XGIwa)
        (g$caddr$20203$1XGIwa (car g$x$20433$1XGIwa)))))
   (g$cadddr$20215$1XGIwa
     g$cadddr$20629$1XGIwa
     (case-lambda
       ((g$x$20434$1XGIwa)
        (g$caddr$20203$1XGIwa (cdr g$x$20434$1XGIwa)))))
   (g$cdaaar$20216$1XGIwa
     g$cdaaar$20630$1XGIwa
     (case-lambda
       ((g$x$20435$1XGIwa)
        (g$cdaar$20204$1XGIwa (car g$x$20435$1XGIwa)))))
   (g$cdaadr$20217$1XGIwa
     g$cdaadr$20631$1XGIwa
     (case-lambda
       ((g$x$20436$1XGIwa)
        (g$cdaar$20204$1XGIwa (cdr g$x$20436$1XGIwa)))))
   (g$cdadar$20218$1XGIwa
     g$cdadar$20632$1XGIwa
     (case-lambda
       ((g$x$20437$1XGIwa)
        (g$cdadr$20205$1XGIwa (car g$x$20437$1XGIwa)))))
   (g$cdaddr$20219$1XGIwa
     g$cdaddr$20633$1XGIwa
     (case-lambda
       ((g$x$20438$1XGIwa)
        (g$cdadr$20205$1XGIwa (cdr g$x$20438$1XGIwa)))))
   (g$cddaar$20220$1XGIwa
     g$cddaar$20634$1XGIwa
     (case-lambda
       ((g$x$20439$1XGIwa)
        (g$cddar$20206$1XGIwa (car g$x$20439$1XGIwa)))))
   (g$cddadr$20221$1XGIwa
     g$cddadr$20635$1XGIwa
     (case-lambda
       ((g$x$20440$1XGIwa)
        (g$cddar$20206$1XGIwa (cdr g$x$20440$1XGIwa)))))
   (g$cdddar$20222$1XGIwa
     g$cdddar$20636$1XGIwa
     (case-lambda
       ((g$x$20441$1XGIwa)
        (g$cdddr$20207$1XGIwa (car g$x$20441$1XGIwa)))))
   (g$cddddr$20223$1XGIwa
     g$cddddr$20637$1XGIwa
     (case-lambda
       ((g$x$20442$1XGIwa)
        (g$cdddr$20207$1XGIwa (cdr g$x$20442$1XGIwa)))))
   (g$current-input-port$20224$1XGIwa
     g$current-input-port$20638$1XGIwa
     (case-lambda
       (() (clr-call-internal 'System.Console 'get_In '()))
       ((g$port$20443$1XGIwa)
        (begin
          (if (not (if (textual-port? g$port$20443$1XGIwa)
                     (begin '#f (input-port? g$port$20443$1XGIwa))
                     '#f))
            (assertion-violation
              'current-input-port
              '"not a textual input port"
              g$port$20443$1XGIwa)
            (void))
          (clr-call-internal
            'System.Console
            'SetIn
            '()
            g$port$20443$1XGIwa)))))
   (g$current-output-port$20225$1XGIwa
     g$current-output-port$20639$1XGIwa
     (case-lambda
       (() (clr-call-internal 'System.Console 'get_Out '()))
       ((g$port$20444$1XGIwa)
        (begin
          (if (not (if (textual-port? g$port$20444$1XGIwa)
                     (begin '#f (output-port? g$port$20444$1XGIwa))
                     '#f))
            (assertion-violation
              'current-output-port
              '"not a textual output port"
              g$port$20444$1XGIwa)
            (void))
          (clr-call-internal
            'System.Console
            'SetOut
            '()
            g$port$20444$1XGIwa)))))
   (g$current-error-port$20226$1XGIwa
     g$current-error-port$20640$1XGIwa
     (case-lambda
       (() (clr-call-internal 'System.Console 'get_Error '()))
       ((g$port$20445$1XGIwa)
        (begin
          (if (not (if (textual-port? g$port$20445$1XGIwa)
                     (begin '#f (output-port? g$port$20445$1XGIwa))
                     '#f))
            (assertion-violation
              'current-error-port
              '"not a textual output port"
              g$port$20445$1XGIwa)
            (void))
          (clr-call-internal
            'System.Console
            'SetError
            '()
            g$port$20445$1XGIwa)))))
   (g$even?$20227$1XGIwa
     g$even?$20641$1XGIwa
     (case-lambda
       ((g$n$20446$1XGIwa)
        (begin
          (if (not (g$integer-valued?$21615$1XGIwa g$n$20446$1XGIwa))
            (assertion-violation
              'even?
              '"not a integer"
              g$n$20446$1XGIwa)
            (void))
          (g$=$21625$1XGIwa
            '0
            (g$mod$20182$1XGIwa g$n$20446$1XGIwa '2))))))
   (g$odd?$20228$1XGIwa
     g$odd?$20642$1XGIwa
     (case-lambda
       ((g$n$20447$1XGIwa)
        (begin
          (if (not (g$integer-valued?$21615$1XGIwa g$n$20447$1XGIwa))
            (assertion-violation
              'odd?
              '"not a integer"
              g$n$20447$1XGIwa)
            (void))
          (g$=$21625$1XGIwa
            '1
            (g$mod$20182$1XGIwa g$n$20447$1XGIwa '2))))))
   (g$max$20229$1XGIwa
     g$max$20643$1XGIwa
     (case-lambda
       ((g$a$20448$1XGIwa . g$rest$20449$1XGIwa)
        (begin
          (if (not (g$real-valued?$21613$1XGIwa g$a$20448$1XGIwa))
            (assertion-violation 'max '"not a real" g$a$20448$1XGIwa)
            (void))
          (g$fold-left$19664$1XGIwa
            (case-lambda
              ((g$a$20450$1XGIwa g$b$20451$1XGIwa)
               ((case-lambda
                  ((g$r$20452$1XGIwa)
                   (if ((case-lambda
                          ((g$t$20453$1XGIwa)
                           (if g$t$20453$1XGIwa
                             g$t$20453$1XGIwa
                             (begin
                               '#f
                               (g$inexact?$21608$1XGIwa
                                 g$b$20451$1XGIwa)))))
                        (g$inexact?$21608$1XGIwa g$a$20450$1XGIwa))
                     (g$inexact$21619$1XGIwa g$r$20452$1XGIwa)
                     g$r$20452$1XGIwa)))
                (if (g$<$21626$1XGIwa g$a$20450$1XGIwa g$b$20451$1XGIwa)
                  g$b$20451$1XGIwa
                  g$a$20450$1XGIwa))))
            g$a$20448$1XGIwa
            g$rest$20449$1XGIwa)))))
   (g$min$20230$1XGIwa
     g$min$20644$1XGIwa
     (case-lambda
       ((g$a$20454$1XGIwa . g$rest$20455$1XGIwa)
        (begin
          (if (not (g$real-valued?$21613$1XGIwa g$a$20454$1XGIwa))
            (assertion-violation 'min '"not a real" g$a$20454$1XGIwa)
            (void))
          (g$fold-left$19664$1XGIwa
            (case-lambda
              ((g$a$20456$1XGIwa g$b$20457$1XGIwa)
               ((case-lambda
                  ((g$r$20458$1XGIwa)
                   (if ((case-lambda
                          ((g$t$20459$1XGIwa)
                           (if g$t$20459$1XGIwa
                             g$t$20459$1XGIwa
                             (begin
                               '#f
                               (g$inexact?$21608$1XGIwa
                                 g$b$20457$1XGIwa)))))
                        (g$inexact?$21608$1XGIwa g$a$20456$1XGIwa))
                     (g$inexact$21619$1XGIwa g$r$20458$1XGIwa)
                     g$r$20458$1XGIwa)))
                (if (g$>$21628$1XGIwa g$a$20456$1XGIwa g$b$20457$1XGIwa)
                  g$b$20457$1XGIwa
                  g$a$20456$1XGIwa))))
            g$a$20454$1XGIwa
            g$rest$20455$1XGIwa)))))
   (g$gcd$20231$1XGIwa
     g$gcd$20645$1XGIwa
     (case-lambda
       (g$nums$20460$1XGIwa
        ((case-lambda
           ((g$t$20461$1XGIwa)
            (if (eqv? g$t$20461$1XGIwa '0)
              '0
              (if (eqv? g$t$20461$1XGIwa '1)
                ((case-lambda
                   ((g$n$20462$1XGIwa)
                    (begin
                      (if (not (g$integer-valued?$21615$1XGIwa
                                 g$n$20462$1XGIwa))
                        (assertion-violation
                          'gcd
                          '"not an integer"
                          g$n$20462$1XGIwa)
                        (void))
                      (g$abs$21651$1XGIwa g$n$20462$1XGIwa))))
                 (car g$nums$20460$1XGIwa))
                (if (eqv? g$t$20461$1XGIwa '2)
                  ((case-lambda
                     ((g$a$20463$1XGIwa g$b$20464$1XGIwa)
                      (begin
                        (if (not (g$integer-valued?$21615$1XGIwa
                                   g$a$20463$1XGIwa))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$a$20463$1XGIwa)
                          (void))
                        (if (not (g$integer-valued?$21615$1XGIwa
                                   g$b$20464$1XGIwa))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$b$20464$1XGIwa)
                          (void))
                        (if (g$zero?$21616$1XGIwa g$b$20464$1XGIwa)
                          (g$abs$21651$1XGIwa g$a$20463$1XGIwa)
                          (g$abs$21651$1XGIwa
                            (g$gcd$20231$1XGIwa
                              g$b$20464$1XGIwa
                              (g$mod$20182$1XGIwa
                                g$a$20463$1XGIwa
                                g$b$20464$1XGIwa)))))))
                   (car g$nums$20460$1XGIwa)
                   (g$cadr$20197$1XGIwa g$nums$20460$1XGIwa))
                  (begin
                    '#f
                    (g$fold-left$19664$1XGIwa
                      g$gcd$20231$1XGIwa
                      (g$abs$21651$1XGIwa (car g$nums$20460$1XGIwa))
                      (cdr g$nums$20460$1XGIwa))))))))
         (length g$nums$20460$1XGIwa)))))
   (g$lcm$20232$1XGIwa
     g$lcm$20646$1XGIwa
     (case-lambda
       (g$nums$20465$1XGIwa
        ((case-lambda
           ((g$t$20466$1XGIwa)
            (if (eqv? g$t$20466$1XGIwa '0)
              '1
              (if (eqv? g$t$20466$1XGIwa '1)
                ((case-lambda
                   ((g$n$20467$1XGIwa)
                    (begin
                      (if (not (g$integer-valued?$21615$1XGIwa
                                 g$n$20467$1XGIwa))
                        (assertion-violation
                          'lcm
                          '"not an integer"
                          g$n$20467$1XGIwa)
                        (void))
                      (g$abs$21651$1XGIwa g$n$20467$1XGIwa))))
                 (car g$nums$20465$1XGIwa))
                (if (eqv? g$t$20466$1XGIwa '2)
                  ((case-lambda
                     ((g$a$20468$1XGIwa g$b$20469$1XGIwa)
                      (begin
                        (if (not (g$integer-valued?$21615$1XGIwa
                                   g$a$20468$1XGIwa))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$a$20468$1XGIwa)
                          (void))
                        (if (not (g$integer-valued?$21615$1XGIwa
                                   g$b$20469$1XGIwa))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$b$20469$1XGIwa)
                          (void))
                        (if ((case-lambda
                               ((g$t$20470$1XGIwa)
                                (if g$t$20470$1XGIwa
                                  g$t$20470$1XGIwa
                                  (begin
                                    '#f
                                    (g$zero?$21616$1XGIwa
                                      g$b$20469$1XGIwa)))))
                             (g$zero?$21616$1XGIwa g$a$20468$1XGIwa))
                          '0
                          (g$abs$21651$1XGIwa
                            (* (/ g$a$20468$1XGIwa
                                  (g$gcd$20231$1XGIwa
                                    g$a$20468$1XGIwa
                                    g$b$20469$1XGIwa))
                               g$b$20469$1XGIwa))))))
                   (car g$nums$20465$1XGIwa)
                   (g$cadr$20197$1XGIwa g$nums$20465$1XGIwa))
                  (begin
                    '#f
                    (g$fold-left$19664$1XGIwa
                      g$lcm$20232$1XGIwa
                      (g$abs$21651$1XGIwa (car g$nums$20465$1XGIwa))
                      (cdr g$nums$20465$1XGIwa))))))))
         (length g$nums$20465$1XGIwa)))))
   (g$string-compare$20233$1XGIwa
     g$string-compare$20647$1XGIwa
     (case-lambda
       ((g$a$20471$1XGIwa g$b$20472$1XGIwa)
        (clr-call-internal
          'System.String
          '"Compare(String,String,StringComparison)"
          '()
          g$a$20471$1XGIwa
          g$b$20472$1XGIwa
          'ordinal))))
   (g$string=?$20274$1XGIwa
     g$string=?$20648$1XGIwa
     (case-lambda
       ((g$a$20473$1XGIwa g$b$20474$1XGIwa . g$rest$20475$1XGIwa)
        (begin
          (if (not (g$string?$20155$1XGIwa g$a$20473$1XGIwa))
            (assertion-violation
              'string=?
              '"not a string"
              g$a$20473$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$20476$1XGIwa)
               (begin
                 (if (not (g$string?$20155$1XGIwa g$x$20476$1XGIwa))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$20476$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$20477$1XGIwa)
                     (begin
                       (set! g$a$20473$1XGIwa g$x$20476$1XGIwa)
                       g$r$20477$1XGIwa)))
                  (g$fx=?$25028$1XGIwa
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      g$a$20473$1XGIwa
                      g$x$20476$1XGIwa
                      'ordinal)
                    '0)))))
            (cons g$b$20474$1XGIwa g$rest$20475$1XGIwa))))))
   (g$string<?$20275$1XGIwa
     g$string<?$20649$1XGIwa
     (case-lambda
       ((g$a$20478$1XGIwa g$b$20479$1XGIwa . g$rest$20480$1XGIwa)
        (begin
          (if (not (g$string?$20155$1XGIwa g$a$20478$1XGIwa))
            (assertion-violation
              'string<?
              '"not a string"
              g$a$20478$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$20481$1XGIwa)
               (begin
                 (if (not (g$string?$20155$1XGIwa g$x$20481$1XGIwa))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$20481$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$20482$1XGIwa)
                     (begin
                       (set! g$a$20478$1XGIwa g$x$20481$1XGIwa)
                       g$r$20482$1XGIwa)))
                  (g$fx<?$25029$1XGIwa
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      g$a$20478$1XGIwa
                      g$x$20481$1XGIwa
                      'ordinal)
                    '0)))))
            (cons g$b$20479$1XGIwa g$rest$20480$1XGIwa))))))
   (g$string>?$20276$1XGIwa
     g$string>?$20650$1XGIwa
     (case-lambda
       ((g$a$20483$1XGIwa g$b$20484$1XGIwa . g$rest$20485$1XGIwa)
        (begin
          (if (not (g$string?$20155$1XGIwa g$a$20483$1XGIwa))
            (assertion-violation
              'string>?
              '"not a string"
              g$a$20483$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$20486$1XGIwa)
               (begin
                 (if (not (g$string?$20155$1XGIwa g$x$20486$1XGIwa))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$20486$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$20487$1XGIwa)
                     (begin
                       (set! g$a$20483$1XGIwa g$x$20486$1XGIwa)
                       g$r$20487$1XGIwa)))
                  (g$fx>?$25031$1XGIwa
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      g$a$20483$1XGIwa
                      g$x$20486$1XGIwa
                      'ordinal)
                    '0)))))
            (cons g$b$20484$1XGIwa g$rest$20485$1XGIwa))))))
   (g$string<=?$20277$1XGIwa
     g$string<=?$20651$1XGIwa
     (case-lambda
       ((g$a$20488$1XGIwa g$b$20489$1XGIwa . g$rest$20490$1XGIwa)
        (begin
          (if (not (g$string?$20155$1XGIwa g$a$20488$1XGIwa))
            (assertion-violation
              'string<=?
              '"not a string"
              g$a$20488$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$20491$1XGIwa)
               (begin
                 (if (not (g$string?$20155$1XGIwa g$x$20491$1XGIwa))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$20491$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$20492$1XGIwa)
                     (begin
                       (set! g$a$20488$1XGIwa g$x$20491$1XGIwa)
                       g$r$20492$1XGIwa)))
                  (g$fx<=?$25030$1XGIwa
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      g$a$20488$1XGIwa
                      g$x$20491$1XGIwa
                      'ordinal)
                    '0)))))
            (cons g$b$20489$1XGIwa g$rest$20490$1XGIwa))))))
   (g$string>=?$20278$1XGIwa
     g$string>=?$20652$1XGIwa
     (case-lambda
       ((g$a$20493$1XGIwa g$b$20494$1XGIwa . g$rest$20495$1XGIwa)
        (begin
          (if (not (g$string?$20155$1XGIwa g$a$20493$1XGIwa))
            (assertion-violation
              'string>=?
              '"not a string"
              g$a$20493$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$20496$1XGIwa)
               (begin
                 (if (not (g$string?$20155$1XGIwa g$x$20496$1XGIwa))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$20496$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$20497$1XGIwa)
                     (begin
                       (set! g$a$20493$1XGIwa g$x$20496$1XGIwa)
                       g$r$20497$1XGIwa)))
                  (g$fx>=?$25032$1XGIwa
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      g$a$20493$1XGIwa
                      g$x$20496$1XGIwa
                      'ordinal)
                    '0)))))
            (cons g$b$20494$1XGIwa g$rest$20495$1XGIwa))))))
   (g$symbol=?$20279$1XGIwa
     g$symbol=?$20653$1XGIwa
     (case-lambda
       ((g$a$20498$1XGIwa g$b$20499$1XGIwa . g$rest$20500$1XGIwa)
        (begin
          (if (not (g$symbol?$20159$1XGIwa g$a$20498$1XGIwa))
            (assertion-violation
              'symbol=?
              '"not a symbol"
              g$a$20498$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$20501$1XGIwa)
               (begin
                 (if (not (g$symbol?$20159$1XGIwa g$x$20501$1XGIwa))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$20501$1XGIwa)
                   (void))
                 (eq? g$a$20498$1XGIwa g$x$20501$1XGIwa))))
            (cons g$b$20499$1XGIwa g$rest$20500$1XGIwa))))))
   (g$boolean=?$20280$1XGIwa
     g$boolean=?$20654$1XGIwa
     (case-lambda
       ((g$a$20502$1XGIwa g$b$20503$1XGIwa . g$rest$20504$1XGIwa)
        (begin
          (if (not (g$boolean?$20160$1XGIwa g$a$20502$1XGIwa))
            (assertion-violation
              'boolean=?
              '"not a boolean"
              g$a$20502$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$20505$1XGIwa)
               (begin
                 (if (not (g$boolean?$20160$1XGIwa g$x$20505$1XGIwa))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$20505$1XGIwa)
                   (void))
                 (eq? g$a$20502$1XGIwa g$x$20505$1XGIwa))))
            (cons g$b$20503$1XGIwa g$rest$20504$1XGIwa))))))
   (g$char=?$20321$1XGIwa
     g$char=?$20655$1XGIwa
     (case-lambda
       ((g$a$20506$1XGIwa g$b$20507$1XGIwa . g$rest$20508$1XGIwa)
        (begin
          (if (not (g$char?$20156$1XGIwa g$a$20506$1XGIwa))
            (assertion-violation 'char=? '"not a char" g$a$20506$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$20509$1XGIwa)
               (begin
                 (if (not (g$char?$20156$1XGIwa g$x$20509$1XGIwa))
                   (assertion-violation
                     'char=?
                     '"not a char"
                     g$x$20509$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$20510$1XGIwa)
                     (begin
                       (set! g$a$20506$1XGIwa g$x$20509$1XGIwa)
                       g$r$20510$1XGIwa)))
                  (g$fx=?$25028$1XGIwa
                    (g$char->integer$20165$1XGIwa g$a$20506$1XGIwa)
                    (g$char->integer$20165$1XGIwa g$x$20509$1XGIwa))))))
            (cons g$b$20507$1XGIwa g$rest$20508$1XGIwa))))))
   (g$char<?$20322$1XGIwa
     g$char<?$20656$1XGIwa
     (case-lambda
       ((g$a$20511$1XGIwa g$b$20512$1XGIwa . g$rest$20513$1XGIwa)
        (begin
          (if (not (g$char?$20156$1XGIwa g$a$20511$1XGIwa))
            (assertion-violation 'char<? '"not a char" g$a$20511$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$20514$1XGIwa)
               (begin
                 (if (not (g$char?$20156$1XGIwa g$x$20514$1XGIwa))
                   (assertion-violation
                     'char<?
                     '"not a char"
                     g$x$20514$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$20515$1XGIwa)
                     (begin
                       (set! g$a$20511$1XGIwa g$x$20514$1XGIwa)
                       g$r$20515$1XGIwa)))
                  (g$fx<?$25029$1XGIwa
                    (g$char->integer$20165$1XGIwa g$a$20511$1XGIwa)
                    (g$char->integer$20165$1XGIwa g$x$20514$1XGIwa))))))
            (cons g$b$20512$1XGIwa g$rest$20513$1XGIwa))))))
   (g$char>?$20323$1XGIwa
     g$char>?$20657$1XGIwa
     (case-lambda
       ((g$a$20516$1XGIwa g$b$20517$1XGIwa . g$rest$20518$1XGIwa)
        (begin
          (if (not (g$char?$20156$1XGIwa g$a$20516$1XGIwa))
            (assertion-violation 'char>? '"not a char" g$a$20516$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$20519$1XGIwa)
               (begin
                 (if (not (g$char?$20156$1XGIwa g$x$20519$1XGIwa))
                   (assertion-violation
                     'char>?
                     '"not a char"
                     g$x$20519$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$20520$1XGIwa)
                     (begin
                       (set! g$a$20516$1XGIwa g$x$20519$1XGIwa)
                       g$r$20520$1XGIwa)))
                  (g$fx>?$25031$1XGIwa
                    (g$char->integer$20165$1XGIwa g$a$20516$1XGIwa)
                    (g$char->integer$20165$1XGIwa g$x$20519$1XGIwa))))))
            (cons g$b$20517$1XGIwa g$rest$20518$1XGIwa))))))
   (g$char<=?$20324$1XGIwa
     g$char<=?$20658$1XGIwa
     (case-lambda
       ((g$a$20521$1XGIwa g$b$20522$1XGIwa . g$rest$20523$1XGIwa)
        (begin
          (if (not (g$char?$20156$1XGIwa g$a$20521$1XGIwa))
            (assertion-violation
              'char<=?
              '"not a char"
              g$a$20521$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$20524$1XGIwa)
               (begin
                 (if (not (g$char?$20156$1XGIwa g$x$20524$1XGIwa))
                   (assertion-violation
                     'char<=?
                     '"not a char"
                     g$x$20524$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$20525$1XGIwa)
                     (begin
                       (set! g$a$20521$1XGIwa g$x$20524$1XGIwa)
                       g$r$20525$1XGIwa)))
                  (g$fx<=?$25030$1XGIwa
                    (g$char->integer$20165$1XGIwa g$a$20521$1XGIwa)
                    (g$char->integer$20165$1XGIwa g$x$20524$1XGIwa))))))
            (cons g$b$20522$1XGIwa g$rest$20523$1XGIwa))))))
   (g$char>=?$20325$1XGIwa
     g$char>=?$20659$1XGIwa
     (case-lambda
       ((g$a$20526$1XGIwa g$b$20527$1XGIwa . g$rest$20528$1XGIwa)
        (begin
          (if (not (g$char?$20156$1XGIwa g$a$20526$1XGIwa))
            (assertion-violation
              'char>=?
              '"not a char"
              g$a$20526$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$20529$1XGIwa)
               (begin
                 (if (not (g$char?$20156$1XGIwa g$x$20529$1XGIwa))
                   (assertion-violation
                     'char>=?
                     '"not a char"
                     g$x$20529$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$20530$1XGIwa)
                     (begin
                       (set! g$a$20526$1XGIwa g$x$20529$1XGIwa)
                       g$r$20530$1XGIwa)))
                  (g$fx>=?$25032$1XGIwa
                    (g$char->integer$20165$1XGIwa g$a$20526$1XGIwa)
                    (g$char->integer$20165$1XGIwa g$x$20529$1XGIwa))))))
            (cons g$b$20527$1XGIwa g$rest$20528$1XGIwa))))))
   (g$rationalize$20326$1XGIwa
     g$rationalize$20660$1XGIwa
     (case-lambda
       ((g$x$20531$1XGIwa g$e$20532$1XGIwa)
        (if (if (g$infinite?$21606$1XGIwa g$x$20531$1XGIwa)
              (begin '#f (g$infinite?$21606$1XGIwa g$e$20532$1XGIwa))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$20533$1XGIwa)
              (if (if (g$exact?$21607$1XGIwa g$x$20531$1XGIwa)
                    (begin '#f (g$exact?$21607$1XGIwa g$e$20532$1XGIwa))
                    '#f)
                g$r$20533$1XGIwa
                (g$inexact$21619$1XGIwa g$r$20533$1XGIwa))))
           (apply
             /
             (g$find-ratio$20327$1XGIwa
               g$x$20531$1XGIwa
               g$e$20532$1XGIwa)))))))
   (g$find-ratio$20327$1XGIwa
     g$find-ratio$20661$1XGIwa
     (case-lambda
       ((g$x$20534$1XGIwa g$e$20535$1XGIwa)
        (g$find-ratio-between$20328$1XGIwa
          (- g$x$20534$1XGIwa g$e$20535$1XGIwa)
          (+ g$x$20534$1XGIwa g$e$20535$1XGIwa)))))
   (g$find-ratio-between$20328$1XGIwa
     g$find-ratio-between$20662$1XGIwa
     (case-lambda
       ((g$x$20536$1XGIwa g$y$20537$1XGIwa)
        (letrec* ((g$sr$20538$1XGIwa
                    (case-lambda
                      ((g$x$20540$1XGIwa g$y$20541$1XGIwa)
                       ((case-lambda
                          ((g$fx$20542$1XGIwa g$fy$20543$1XGIwa)
                           (if (g$>=$21629$1XGIwa
                                 g$fx$20542$1XGIwa
                                 g$x$20540$1XGIwa)
                             (list g$fx$20542$1XGIwa '1)
                             (if (g$=$21625$1XGIwa
                                   g$fx$20542$1XGIwa
                                   g$fy$20543$1XGIwa)
                               ((case-lambda
                                  ((g$rat$20544$1XGIwa)
                                   (list
                                     (+ (g$cadr$20197$1XGIwa
                                          g$rat$20544$1XGIwa)
                                        (* g$fx$20542$1XGIwa
                                           (car g$rat$20544$1XGIwa)))
                                     (car g$rat$20544$1XGIwa))))
                                (g$sr$20538$1XGIwa
                                  (/ (- g$y$20541$1XGIwa
                                        g$fy$20543$1XGIwa))
                                  (/ (- g$x$20540$1XGIwa
                                        g$fx$20542$1XGIwa))))
                               (begin
                                 '#f
                                 (list (+ '1 g$fx$20542$1XGIwa) '1))))))
                        (g$exact$21620$1XGIwa
                          (g$floor$21652$1XGIwa g$x$20540$1XGIwa))
                        (g$exact$21620$1XGIwa
                          (g$floor$21652$1XGIwa g$y$20541$1XGIwa)))))))
          (if (g$<$21626$1XGIwa g$y$20537$1XGIwa g$x$20536$1XGIwa)
            (g$find-ratio-between$20328$1XGIwa
              g$y$20537$1XGIwa
              g$x$20536$1XGIwa)
            (if (g$>=$21629$1XGIwa g$x$20536$1XGIwa g$y$20537$1XGIwa)
              (list g$x$20536$1XGIwa '1)
              (if (g$positive?$21617$1XGIwa g$x$20536$1XGIwa)
                (g$sr$20538$1XGIwa g$x$20536$1XGIwa g$y$20537$1XGIwa)
                (if (g$negative?$21618$1XGIwa g$y$20537$1XGIwa)
                  ((case-lambda
                     ((g$rat$20539$1XGIwa)
                      (list
                        (- (car g$rat$20539$1XGIwa))
                        (g$cadr$20197$1XGIwa g$rat$20539$1XGIwa))))
                   (g$sr$20538$1XGIwa
                     (- g$y$20537$1XGIwa)
                     (- g$x$20536$1XGIwa)))
                  (begin '#f '(0 1))))))))))
   (g$vector-map$20329$1XGIwa
     g$vector-map$20663$1XGIwa
     (case-lambda
       ((g$p$20545$1XGIwa g$vec1$20546$1XGIwa . g$vecs$20547$1XGIwa)
        ((case-lambda
           ((g$len$20548$1XGIwa)
            ((case-lambda
               ((g$res$20549$1XGIwa)
                (letrec ((g$loop$20550$1XGIwa
                           (case-lambda
                             ((g$i$20551$1XGIwa)
                              (if (g$fx=?$25028$1XGIwa
                                    g$i$20551$1XGIwa
                                    g$len$20548$1XGIwa)
                                (begin
                                  (if '#f '#f (void))
                                  g$res$20549$1XGIwa)
                                (begin
                                  (g$vector-set!$20189$1XGIwa
                                    g$res$20549$1XGIwa
                                    g$i$20551$1XGIwa
                                    (if (null? g$vecs$20547$1XGIwa)
                                      (g$p$20545$1XGIwa
                                        (g$vector-ref$20188$1XGIwa
                                          g$vec1$20546$1XGIwa
                                          g$i$20551$1XGIwa))
                                      (call-with-values
                                        (case-lambda
                                          (()
                                           (apply
                                             values
                                             (g$map$19661$1XGIwa
                                               (case-lambda
                                                 ((g$x$20552$1XGIwa)
                                                  (g$vector-ref$20188$1XGIwa
                                                    g$x$20552$1XGIwa
                                                    g$i$20551$1XGIwa)))
                                               (cons
                                                 g$vec1$20546$1XGIwa
                                                 g$vecs$20547$1XGIwa)))))
                                        g$p$20545$1XGIwa)))
                                  (g$loop$20550$1XGIwa
                                    (g$fx+$25015$1XGIwa
                                      g$i$20551$1XGIwa
                                      '1))))))))
                  (g$loop$20550$1XGIwa '0))))
             (g$make-vector$20190$1XGIwa g$len$20548$1XGIwa '()))))
         (g$vector-length$20191$1XGIwa g$vec1$20546$1XGIwa)))))
   (g$vector-for-each$20330$1XGIwa
     g$vector-for-each$20664$1XGIwa
     (case-lambda
       ((g$p$20553$1XGIwa g$vec1$20554$1XGIwa . g$vecs$20555$1XGIwa)
        ((case-lambda
           ((g$len$20556$1XGIwa)
            (letrec ((g$loop$20557$1XGIwa
                       (case-lambda
                         ((g$i$20558$1XGIwa)
                          (if (g$fx=?$25028$1XGIwa
                                g$i$20558$1XGIwa
                                g$len$20556$1XGIwa)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$vecs$20555$1XGIwa)
                                (g$p$20553$1XGIwa
                                  (g$vector-ref$20188$1XGIwa
                                    g$vec1$20554$1XGIwa
                                    g$i$20558$1XGIwa))
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (apply
                                       values
                                       (g$map$19661$1XGIwa
                                         (case-lambda
                                           ((g$x$20559$1XGIwa)
                                            (g$vector-ref$20188$1XGIwa
                                              g$x$20559$1XGIwa
                                              g$i$20558$1XGIwa)))
                                         (cons
                                           g$vec1$20554$1XGIwa
                                           g$vecs$20555$1XGIwa)))))
                                  g$p$20553$1XGIwa))
                              (g$loop$20557$1XGIwa
                                (g$fx+$25015$1XGIwa
                                  g$i$20558$1XGIwa
                                  '1))))))))
              (g$loop$20557$1XGIwa '0))))
         (g$vector-length$20191$1XGIwa g$vec1$20554$1XGIwa)))))
   (g$string-for-each$20331$1XGIwa
     g$string-for-each$20665$1XGIwa
     (case-lambda
       ((g$p$20560$1XGIwa g$str1$20561$1XGIwa . g$strs$20562$1XGIwa)
        ((case-lambda
           ((g$len$20563$1XGIwa)
            (letrec ((g$loop$20564$1XGIwa
                       (case-lambda
                         ((g$i$20565$1XGIwa)
                          (if (g$fx=?$25028$1XGIwa
                                g$i$20565$1XGIwa
                                g$len$20563$1XGIwa)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$strs$20562$1XGIwa)
                                (g$p$20560$1XGIwa
                                  (g$string-ref$20168$1XGIwa
                                    g$str1$20561$1XGIwa
                                    g$i$20565$1XGIwa))
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (apply
                                       values
                                       (g$map$19661$1XGIwa
                                         (case-lambda
                                           ((g$x$20566$1XGIwa)
                                            (g$string-ref$20168$1XGIwa
                                              g$x$20566$1XGIwa
                                              g$i$20565$1XGIwa)))
                                         (cons
                                           g$str1$20561$1XGIwa
                                           g$strs$20562$1XGIwa)))))
                                  g$p$20560$1XGIwa))
                              (g$loop$20564$1XGIwa
                                (g$fx+$25015$1XGIwa
                                  g$i$20565$1XGIwa
                                  '1))))))))
              (g$loop$20564$1XGIwa '0))))
         (g$string-length$20171$1XGIwa g$str1$20561$1XGIwa))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$20667$1XGIwa
     g$using$20709$1XGIwa
     (clr-using-internal 'system))
   (g$using$20669$1XGIwa
     g$using$20710$1XGIwa
     (clr-using-internal 'system.collections))
   (g$hashtable?$20670$1XGIwa
     g$hashtable?$20711$1XGIwa
     (case-lambda
       ((g$obj$20683$1XGIwa)
        (clr-is-internal 'Hashtable g$obj$20683$1XGIwa))))
   (g$make-eq-hashtable$20671$1XGIwa
     g$make-eq-hashtable$20712$1XGIwa
     (case-lambda
       (() (g$make-eq-hashtable$20671$1XGIwa '32))
       ((g$k$20684$1XGIwa)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$20684$1XGIwa)))))
   (g$make-eqv-hashtable$20672$1XGIwa
     g$make-eqv-hashtable$20713$1XGIwa
     (case-lambda
       (() (g$make-eqv-hashtable$20672$1XGIwa '32))
       ((g$k$20685$1XGIwa)
        (make-hashtable eqv-hash eqv? g$k$20685$1XGIwa))))
   (g$hashtable-size$20673$1XGIwa
     g$hashtable-size$20714$1XGIwa
     (case-lambda
       ((g$ht$20686$1XGIwa)
        (clr-call-internal 'hashtable 'get_count g$ht$20686$1XGIwa))))
   (g$hashtable-ref$20674$1XGIwa
     g$hashtable-ref$20715$1XGIwa
     (case-lambda
       ((g$ht$20687$1XGIwa g$key$20688$1XGIwa g$default$20689$1XGIwa)
        ((case-lambda
           ((g$r$20690$1XGIwa)
            (if ((case-lambda
                   ((g$t$20691$1XGIwa)
                    (if g$t$20691$1XGIwa
                      g$t$20691$1XGIwa
                      (begin
                        '#f
                        (g$hashtable-contains?$20677$1XGIwa
                          g$ht$20687$1XGIwa
                          g$key$20688$1XGIwa)))))
                 (not (null? g$r$20690$1XGIwa)))
              g$r$20690$1XGIwa
              g$default$20689$1XGIwa)))
         (clr-call-internal
           'hashtable
           'get_item
           g$ht$20687$1XGIwa
           g$key$20688$1XGIwa)))))
   (g$hashtable-set!$20675$1XGIwa
     g$hashtable-set!$20716$1XGIwa
     (case-lambda
       ((g$ht$20692$1XGIwa g$key$20693$1XGIwa g$obj$20694$1XGIwa)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$20692$1XGIwa
          g$key$20693$1XGIwa
          g$obj$20694$1XGIwa))))
   (g$hashtable-delete!$20676$1XGIwa
     g$hashtable-delete!$20717$1XGIwa
     (case-lambda
       ((g$ht$20695$1XGIwa g$key$20696$1XGIwa)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$20695$1XGIwa
          g$key$20696$1XGIwa))))
   (g$hashtable-contains?$20677$1XGIwa
     g$hashtable-contains?$20718$1XGIwa
     (case-lambda
       ((g$ht$20697$1XGIwa g$key$20698$1XGIwa)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$20697$1XGIwa
          g$key$20698$1XGIwa))))
   (g$hashtable-update!$20678$1XGIwa
     g$hashtable-update!$20719$1XGIwa
     (case-lambda
       ((g$ht$20699$1XGIwa
          g$key$20700$1XGIwa
          g$proc$20701$1XGIwa
          g$default$20702$1XGIwa)
        (g$hashtable-set!$20675$1XGIwa
          g$ht$20699$1XGIwa
          g$key$20700$1XGIwa
          (g$proc$20701$1XGIwa
            (g$hashtable-ref$20674$1XGIwa
              g$ht$20699$1XGIwa
              g$key$20700$1XGIwa
              g$default$20702$1XGIwa))))))
   (g$hashtable-clear!$20679$1XGIwa
     g$hashtable-clear!$20720$1XGIwa
     (case-lambda
       ((g$ht$20703$1XGIwa)
        (g$hashtable-clear!$20679$1XGIwa g$ht$20703$1XGIwa '32))
       ((g$ht$20704$1XGIwa g$k$20705$1XGIwa)
        (clr-call-internal 'hashtable 'clear g$ht$20704$1XGIwa))))
   (g$string-hash$20680$1XGIwa
     g$string-hash$20721$1XGIwa
     (case-lambda
       ((g$str$20706$1XGIwa)
        (begin
          (if (not (g$string?$20569$1XGIwa g$str$20706$1XGIwa))
            (assertion-violation
              'string-hash
              '"not a string"
              g$str$20706$1XGIwa)
            (void))
          (clr-call-internal
            'StringComparer
            '"GetHashCode(String)"
            (clr-call-internal 'StringComparer 'get_Ordinal '())
            (clr-call-internal
              'Object
              'ToString
              g$str$20706$1XGIwa))))))
   (g$string-ci-hash$20681$1XGIwa
     g$string-ci-hash$20722$1XGIwa
     (case-lambda
       ((g$str$20707$1XGIwa)
        (begin
          (if (not (g$string?$20569$1XGIwa g$str$20707$1XGIwa))
            (assertion-violation
              'string-ci-hash
              '"not a string"
              g$str$20707$1XGIwa)
            (void))
          (clr-call-internal
            'StringComparer
            '"GetHashCode(String)"
            (clr-call-internal
              'StringComparer
              'get_InvariantCultureIgnoreCase
              '())
            (clr-call-internal
              'Object
              'ToString
              g$str$20707$1XGIwa))))))
   (g$symbol-hash$20682$1XGIwa
     g$symbol-hash$20723$1XGIwa
     (case-lambda
       ((g$sym$20708$1XGIwa)
        (begin
          (if (not (g$symbol?$20573$1XGIwa g$sym$20708$1XGIwa))
            (assertion-violation
              'symbol-hash
              '"not a symbol"
              g$sym$20708$1XGIwa)
            (void))
          (clr-call-internal
            'Object
            'GetHashCode
            g$sym$20708$1XGIwa))))))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$20725$1XGIwa
     g$using$20732$1XGIwa
     (clr-using-internal 'system.io))
   (g$file-exists?$20726$1XGIwa
     g$file-exists?$20733$1XGIwa
     (case-lambda
       ((g$fn$20729$1XGIwa)
        (clr-call-internal 'file 'exists '() g$fn$20729$1XGIwa))))
   (g$delete-file$20727$1XGIwa
     g$delete-file$20734$1XGIwa
     (case-lambda
       ((g$fn$20730$1XGIwa)
        (clr-call-internal 'file 'delete '() g$fn$20730$1XGIwa))))
   (g$get-directory-name$20728$1XGIwa
     g$get-directory-name$20735$1XGIwa
     (case-lambda
       ((g$path$20731$1XGIwa)
        (clr-call-internal
          'path
          'getdirectoryname
          '()
          g$path$20731$1XGIwa)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$20736$1XGIwa
     g$native-endianness$21048$1XGIwa
     (case-lambda (() 'little)))
   (g$utf8$20737$1XGIwa
     g$utf8$21049$1XGIwa
     (clr-call-internal 'System.Text.Encoding 'get_UTF8 '()))
   (g$utf16le$20738$1XGIwa
     g$utf16le$21050$1XGIwa
     (clr-new-internal 'System.Text.UnicodeEncoding '#f '#f))
   (g$utf16be$20739$1XGIwa
     g$utf16be$21051$1XGIwa
     (clr-new-internal 'System.Text.UnicodeEncoding '#t '#f))
   (g$utf32le$20740$1XGIwa
     g$utf32le$21052$1XGIwa
     (clr-new-internal 'System.Text.UTF32Encoding '#f '#f))
   (g$utf32be$20741$1XGIwa
     g$utf32be$21053$1XGIwa
     (clr-new-internal 'System.Text.UTF32Encoding '#t '#f))
   (g$get-bytes$20742$1XGIwa
     g$get-bytes$21054$1XGIwa
     (case-lambda
       ((g$enc$20818$1XGIwa g$str$20819$1XGIwa)
        (clr-call-internal
          'System.Text.Encoding
          '"GetBytes(String)"
          g$enc$20818$1XGIwa
          g$str$20819$1XGIwa))))
   (g$get-string$20743$1XGIwa
     g$get-string$21055$1XGIwa
     (case-lambda
       ((g$enc$20820$1XGIwa g$bv$20821$1XGIwa)
        (clr-call-internal
          'System.Text.Encoding
          '"GetString(Byte[])"
          g$enc$20820$1XGIwa
          g$bv$20821$1XGIwa))))
   (g$byte->sbyte$20744$1XGIwa
     g$byte->sbyte$21056$1XGIwa
     (case-lambda
       ((g$b$20822$1XGIwa)
        (clr-cast-internal
          'System.SByte
          (clr-cast-internal 'System.Byte g$b$20822$1XGIwa)))))
   (g$->byte$20745$1XGIwa
     g$->byte$21057$1XGIwa
     (case-lambda
       ((g$k$20823$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$k$20823$1XGIwa))
            (assertion-violation '#f '"not a fixnum" g$k$20823$1XGIwa)
            (void))
          (if ((case-lambda
                 ((g$t$20824$1XGIwa)
                  (if g$t$20824$1XGIwa
                    g$t$20824$1XGIwa
                    (begin
                      '#f
                      (g$fx>?$25031$1XGIwa g$k$20823$1XGIwa '255)))))
               (g$fx<?$25029$1XGIwa g$k$20823$1XGIwa '-128))
            (assertion-violation
              '#f
              '"too big or small for octect or byte"
              g$k$20823$1XGIwa)
            (void))
          (clr-cast-internal
            'System.Byte
            (clr-cast-internal 'System.Int32 g$k$20823$1XGIwa))))))
   (g$residual-->fixnum$20761$1XGIwa
     g$residual-->fixnum$21058$1XGIwa
     (case-lambda
       ((g$b$20845$1XGIwa)
        (clr-cast-internal
          'System.Int32
          (clr-cast-internal 'System.Byte g$b$20845$1XGIwa)))))
   (g$make-bytevector$20762$1XGIwa
     g$make-bytevector$21059$1XGIwa
     (case-lambda
       ((g$k$20846$1XGIwa)
        (clr-new-array-internal
          'System.Byte
          (clr-cast-internal 'System.Int32 g$k$20846$1XGIwa)))
       ((g$k$20847$1XGIwa g$fill$20848$1XGIwa)
        ((case-lambda
           ((g$bv$20849$1XGIwa)
            (begin
              (g$bytevector-fill!$20765$1XGIwa
                g$bv$20849$1XGIwa
                g$fill$20848$1XGIwa)
              g$bv$20849$1XGIwa)))
         (g$make-bytevector$20762$1XGIwa g$k$20847$1XGIwa)))))
   (g$bytevector-length$20763$1XGIwa
     g$bytevector-length$21060$1XGIwa
     (case-lambda
       ((g$bv$20850$1XGIwa)
        (begin
          (if (not (g$bytevector?$20572$1XGIwa g$bv$20850$1XGIwa))
            (assertion-violation
              'bytevector-length
              '"not a bytevector"
              g$bv$20850$1XGIwa)
            (void))
          (clr-call-internal
            'System.Array
            'get_Length
            g$bv$20850$1XGIwa)))))
   (g$bytevector=?$20764$1XGIwa
     g$bytevector=?$21061$1XGIwa
     (case-lambda
       ((g$bv1$20851$1XGIwa g$bv2$20852$1XGIwa)
        (begin
          (if (not (g$bytevector?$20572$1XGIwa g$bv1$20851$1XGIwa))
            (assertion-violation
              'bytevector=?
              '"not a bytevector"
              g$bv1$20851$1XGIwa)
            (void))
          (if (not (g$bytevector?$20572$1XGIwa g$bv2$20852$1XGIwa))
            (assertion-violation
              'bytevector=?
              '"not a bytevector"
              g$bv2$20852$1XGIwa)
            (void))
          (if (eq? g$bv1$20851$1XGIwa g$bv2$20852$1XGIwa)
            '#t
            ((case-lambda
               ((g$t$20853$1XGIwa)
                (if g$t$20853$1XGIwa
                  g$t$20853$1XGIwa
                  (begin '#f (begin '#f '#f)))))
             ((case-lambda
                ((g$bl$20854$1XGIwa)
                 (if (g$=$21625$1XGIwa
                       g$bl$20854$1XGIwa
                       (g$bytevector-length$20763$1XGIwa
                         g$bv2$20852$1XGIwa))
                   ((letrec ((g$f$20855$1XGIwa
                               (case-lambda
                                 ((g$i$20856$1XGIwa)
                                  (if (g$=$21625$1XGIwa
                                        g$i$20856$1XGIwa
                                        g$bl$20854$1XGIwa)
                                    '#t
                                    (if (g$=$21625$1XGIwa
                                          (g$bytevector-u8-ref$20768$1XGIwa
                                            g$bv1$20851$1XGIwa
                                            g$i$20856$1XGIwa)
                                          (g$bytevector-u8-ref$20768$1XGIwa
                                            g$bv2$20852$1XGIwa
                                            g$i$20856$1XGIwa))
                                      (g$f$20855$1XGIwa
                                        (+ g$i$20856$1XGIwa '1))
                                      (begin '#f '#f)))))))
                      g$f$20855$1XGIwa)
                    '0)
                   '#f)))
              (g$bytevector-length$20763$1XGIwa
                g$bv1$20851$1XGIwa))))))))
   (g$bytevector-fill!$20765$1XGIwa
     g$bytevector-fill!$21062$1XGIwa
     (case-lambda
       ((g$bv$20857$1XGIwa g$fill$20858$1XGIwa)
        (begin
          (if (not (g$bytevector?$20572$1XGIwa g$bv$20857$1XGIwa))
            (assertion-violation
              'bytevector-fill!
              '"not a bytevector"
              g$bv$20857$1XGIwa)
            (void))
          ((case-lambda
             ((g$fill$20859$1XGIwa g$k$20860$1XGIwa)
              ((letrec ((g$f$20861$1XGIwa
                          (case-lambda
                            ((g$i$20862$1XGIwa)
                             (if (not (g$=$21625$1XGIwa
                                        g$i$20862$1XGIwa
                                        g$k$20860$1XGIwa))
                               (begin
                                 (g$bytevector-u8-set!$20769$1XGIwa
                                   g$bv$20857$1XGIwa
                                   g$i$20862$1XGIwa
                                   g$fill$20859$1XGIwa)
                                 (g$f$20861$1XGIwa
                                   (+ g$i$20862$1XGIwa '1)))
                               (void))))))
                 g$f$20861$1XGIwa)
               '0)))
           (g$->byte$20745$1XGIwa g$fill$20858$1XGIwa)
           (g$bytevector-length$20763$1XGIwa g$bv$20857$1XGIwa))))))
   (g$bytevector-copy!$20766$1XGIwa
     g$bytevector-copy!$21063$1XGIwa
     (case-lambda
       ((g$bv1$20863$1XGIwa
          g$s1$20864$1XGIwa
          g$bv2$20865$1XGIwa
          g$s2$20866$1XGIwa
          g$len$20867$1XGIwa)
        (begin
          (if (not (g$bytevector?$20572$1XGIwa g$bv1$20863$1XGIwa))
            (assertion-violation
              'bytevector-copy!
              '"not a bytevector"
              g$bv1$20863$1XGIwa)
            (void))
          (if (not (g$bytevector?$20572$1XGIwa g$bv2$20865$1XGIwa))
            (assertion-violation
              'bytevector-copy!
              '"not a bytevector"
              g$bv2$20865$1XGIwa)
            (void))
          (clr-call-internal
            'System.Buffer
            'BlockCopy
            '()
            g$bv1$20863$1XGIwa
            g$s1$20864$1XGIwa
            g$bv2$20865$1XGIwa
            g$s2$20866$1XGIwa
            g$len$20867$1XGIwa)))))
   (g$bytevector-copy$20767$1XGIwa
     g$bytevector-copy$21064$1XGIwa
     (case-lambda
       ((g$bv$20868$1XGIwa)
        (begin
          (if (not (g$bytevector?$20572$1XGIwa g$bv$20868$1XGIwa))
            (assertion-violation
              'bytevector-copy
              '"not a bytevector"
              g$bv$20868$1XGIwa)
            (void))
          (clr-call-internal 'System.Array 'Clone g$bv$20868$1XGIwa)))))
   (g$bytevector-u8-ref$20768$1XGIwa
     g$bytevector-u8-ref$21065$1XGIwa
     (case-lambda
       ((g$bv$20869$1XGIwa g$k$20870$1XGIwa)
        (begin
          (if (not (g$bytevector?$20572$1XGIwa g$bv$20869$1XGIwa))
            (assertion-violation
              'bytevector-u8-ref
              '"not a bytevector"
              g$bv$20869$1XGIwa)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToInt32(Byte)"
            '()
            ($bytevector-ref g$bv$20869$1XGIwa g$k$20870$1XGIwa))))))
   (g$bytevector-u8-set!$20769$1XGIwa
     g$bytevector-u8-set!$21066$1XGIwa
     (case-lambda
       ((g$bv$20871$1XGIwa g$k$20872$1XGIwa g$value$20873$1XGIwa)
        (begin
          (if (not (g$bytevector?$20572$1XGIwa g$bv$20871$1XGIwa))
            (assertion-violation
              'bytevector-u8-set!
              '"not a bytevector"
              g$bv$20871$1XGIwa)
            (void))
          ($bytevector-set!
            g$bv$20871$1XGIwa
            g$k$20872$1XGIwa
            (clr-call-internal
              'System.Convert
              '"ToByte(Object)"
              '()
              g$value$20873$1XGIwa))))))
   (g$bytevector-s8-ref$20770$1XGIwa
     g$bytevector-s8-ref$21067$1XGIwa
     (case-lambda
       ((g$bv$20874$1XGIwa g$k$20875$1XGIwa)
        (begin
          (if (not (g$bytevector?$20572$1XGIwa g$bv$20874$1XGIwa))
            (assertion-violation
              'bytevector-s8-ref
              '"not a bytevector"
              g$bv$20874$1XGIwa)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToInt32(SByte)"
            '()
            (g$byte->sbyte$20744$1XGIwa
              ($bytevector-ref g$bv$20874$1XGIwa g$k$20875$1XGIwa)))))))
   (g$bytevector-s8-set!$20771$1XGIwa
     g$bytevector-s8-set!$21068$1XGIwa
     (case-lambda
       ((g$bv$20876$1XGIwa g$k$20877$1XGIwa g$value$20878$1XGIwa)
        (begin
          (if (not (g$bytevector?$20572$1XGIwa g$bv$20876$1XGIwa))
            (assertion-violation
              'bytevector-s8-set!
              '"not a bytevector"
              g$bv$20876$1XGIwa)
            (void))
          ($bytevector-set!
            g$bv$20876$1XGIwa
            g$k$20877$1XGIwa
            (g$->byte$20745$1XGIwa g$value$20878$1XGIwa))))))
   (g$bytevector->u8-list$20772$1XGIwa
     g$bytevector->u8-list$21069$1XGIwa
     (case-lambda
       ((g$bv$20879$1XGIwa)
        (begin
          (if (not (g$bytevector?$20572$1XGIwa g$bv$20879$1XGIwa))
            (assertion-violation
              'bytevector->u8-list
              '"not a bytevector"
              g$bv$20879$1XGIwa)
            (void))
          ((case-lambda
             ((g$l$20880$1XGIwa)
              ((letrec ((g$f$20881$1XGIwa
                          (case-lambda
                            ((g$i$20882$1XGIwa g$a$20883$1XGIwa)
                             (if (g$negative?$21618$1XGIwa
                                   g$i$20882$1XGIwa)
                               g$a$20883$1XGIwa
                               (g$f$20881$1XGIwa
                                 (- g$i$20882$1XGIwa '1)
                                 (cons
                                   (g$bytevector-u8-ref$20768$1XGIwa
                                     g$bv$20879$1XGIwa
                                     g$i$20882$1XGIwa)
                                   g$a$20883$1XGIwa)))))))
                 g$f$20881$1XGIwa)
               (- g$l$20880$1XGIwa '1)
               '())))
           (g$bytevector-length$20763$1XGIwa g$bv$20879$1XGIwa))))))
   (g$u8-list->bytevector$20773$1XGIwa
     g$u8-list->bytevector$21070$1XGIwa
     (case-lambda
       ((g$lst$20884$1XGIwa)
        (begin
          (if (not (list? g$lst$20884$1XGIwa))
            (assertion-violation
              'u8-list->bytevector
              '"not a list"
              g$lst$20884$1XGIwa)
            (void))
          ((case-lambda
             ((g$l$20885$1XGIwa)
              ((case-lambda
                 ((g$bv$20886$1XGIwa)
                  ((letrec ((g$f$20887$1XGIwa
                              (case-lambda
                                ((g$i$20888$1XGIwa g$lst$20889$1XGIwa)
                                 (if (g$=$21625$1XGIwa
                                       g$i$20888$1XGIwa
                                       g$l$20885$1XGIwa)
                                   g$bv$20886$1XGIwa
                                   (begin
                                     (g$bytevector-u8-set!$20769$1XGIwa
                                       g$bv$20886$1XGIwa
                                       g$i$20888$1XGIwa
                                       (car g$lst$20889$1XGIwa))
                                     (g$f$20887$1XGIwa
                                       (+ g$i$20888$1XGIwa '1)
                                       (cdr g$lst$20889$1XGIwa))))))))
                     g$f$20887$1XGIwa)
                   '0
                   g$lst$20884$1XGIwa)))
               (g$make-bytevector$20762$1XGIwa g$l$20885$1XGIwa))))
           (length g$lst$20884$1XGIwa))))))
   (g$string->utf8$20774$1XGIwa
     g$string->utf8$21071$1XGIwa
     (case-lambda
       ((g$s$20890$1XGIwa)
        (begin
          (if (not (g$string?$20569$1XGIwa g$s$20890$1XGIwa))
            (assertion-violation
              'string->utf8
              '"not a string"
              g$s$20890$1XGIwa)
            (void))
          (g$get-bytes$20742$1XGIwa
            g$utf8$20737$1XGIwa
            g$s$20890$1XGIwa)))))
   (g$string->utf16$20775$1XGIwa
     g$string->utf16$21072$1XGIwa
     (case-lambda
       ((g$s$20891$1XGIwa)
        (g$string->utf16$20775$1XGIwa g$s$20891$1XGIwa 'big))
       ((g$s$20892$1XGIwa g$end$20893$1XGIwa)
        (begin
          (if (not (g$string?$20569$1XGIwa g$s$20892$1XGIwa))
            (assertion-violation
              'string->utf16
              '"not a string"
              g$s$20892$1XGIwa)
            (void))
          ((case-lambda
             ((g$t$20894$1XGIwa)
              (if (eqv? g$t$20894$1XGIwa 'big)
                (g$get-bytes$20742$1XGIwa
                  g$utf16be$20739$1XGIwa
                  g$s$20892$1XGIwa)
                (if (eqv? g$t$20894$1XGIwa 'little)
                  (g$get-bytes$20742$1XGIwa
                    g$utf16le$20738$1XGIwa
                    g$s$20892$1XGIwa)
                  (begin
                    '#f
                    (assertion-violation
                      'string->utf16
                      '"unknown endianness"
                      g$end$20893$1XGIwa))))))
           g$end$20893$1XGIwa)))))
   (g$string->utf32$20776$1XGIwa
     g$string->utf32$21073$1XGIwa
     (case-lambda
       ((g$s$20895$1XGIwa)
        (g$string->utf32$20776$1XGIwa g$s$20895$1XGIwa 'big))
       ((g$s$20896$1XGIwa g$end$20897$1XGIwa)
        (begin
          (if (not (g$string?$20569$1XGIwa g$s$20896$1XGIwa))
            (assertion-violation
              'string->utf32
              '"not a string"
              g$s$20896$1XGIwa)
            (void))
          ((case-lambda
             ((g$t$20898$1XGIwa)
              (if (eqv? g$t$20898$1XGIwa 'big)
                (g$get-bytes$20742$1XGIwa
                  g$utf32be$20741$1XGIwa
                  g$s$20896$1XGIwa)
                (if (eqv? g$t$20898$1XGIwa 'little)
                  (g$get-bytes$20742$1XGIwa
                    g$utf32le$20740$1XGIwa
                    g$s$20896$1XGIwa)
                  (begin
                    '#f
                    (assertion-violation
                      'string->utf32
                      '"unknown endianness"
                      g$end$20897$1XGIwa))))))
           g$end$20897$1XGIwa)))))
   (g$utf8->string$20777$1XGIwa
     g$utf8->string$21074$1XGIwa
     (case-lambda
       ((g$bv$20899$1XGIwa)
        (begin
          (if (not (g$bytevector?$20572$1XGIwa g$bv$20899$1XGIwa))
            (assertion-violation
              'utf8->string
              '"not a bytevector"
              g$bv$20899$1XGIwa)
            (void))
          (g$get-string$20743$1XGIwa
            g$utf8$20737$1XGIwa
            g$bv$20899$1XGIwa)))))
   (g$trim-front$20778$1XGIwa
     g$trim-front$21075$1XGIwa
     (case-lambda
       ((g$bv$20900$1XGIwa g$k$20901$1XGIwa)
        ((case-lambda
           ((g$d$20902$1XGIwa)
            (begin
              (g$bytevector-copy!$20766$1XGIwa
                g$bv$20900$1XGIwa
                g$k$20901$1XGIwa
                g$d$20902$1XGIwa
                '0
                (g$bytevector-length$20763$1XGIwa g$d$20902$1XGIwa))
              g$d$20902$1XGIwa)))
         (g$make-bytevector$20762$1XGIwa
           (- (g$bytevector-length$20763$1XGIwa g$bv$20900$1XGIwa)
              g$k$20901$1XGIwa))))))
   (g$utf16->string$20779$1XGIwa
     g$utf16->string$21076$1XGIwa
     (case-lambda
       ((g$bv$20903$1XGIwa g$end$20904$1XGIwa)
        (g$utf16->string$20779$1XGIwa
          g$bv$20903$1XGIwa
          g$end$20904$1XGIwa
          '#f))
       ((g$bv$20905$1XGIwa g$end$20906$1XGIwa g$endman?$20907$1XGIwa)
        (if g$endman?$20907$1XGIwa
          (if (eq? g$end$20906$1XGIwa 'big)
            (g$get-string$20743$1XGIwa
              g$utf16be$20739$1XGIwa
              g$bv$20905$1XGIwa)
            (g$get-string$20743$1XGIwa
              g$utf16le$20738$1XGIwa
              g$bv$20905$1XGIwa))
          ((case-lambda
             ((g$b0$20908$1XGIwa g$b1$20909$1XGIwa)
              (if (if (g$=$21625$1XGIwa '255 g$b0$20908$1XGIwa)
                    (begin
                      '#f
                      (g$=$21625$1XGIwa g$b1$20909$1XGIwa '254))
                    '#f)
                (g$utf16->string$20779$1XGIwa
                  (g$trim-front$20778$1XGIwa g$bv$20905$1XGIwa '2)
                  'little
                  '#t)
                (if (if (g$=$21625$1XGIwa '254 g$b0$20908$1XGIwa)
                      (begin
                        '#f
                        (g$=$21625$1XGIwa g$b1$20909$1XGIwa '255))
                      '#f)
                  (g$utf16->string$20779$1XGIwa
                    (g$trim-front$20778$1XGIwa g$bv$20905$1XGIwa '2)
                    'big
                    '#t)
                  (begin
                    '#f
                    (g$utf16->string$20779$1XGIwa
                      g$bv$20905$1XGIwa
                      g$end$20906$1XGIwa
                      '#t))))))
           (g$bytevector-u8-ref$20768$1XGIwa g$bv$20905$1XGIwa '0)
           (g$bytevector-u8-ref$20768$1XGIwa g$bv$20905$1XGIwa '1))))))
   (g$utf32->string$20780$1XGIwa
     g$utf32->string$21077$1XGIwa
     (case-lambda
       ((g$bv$20910$1XGIwa g$end$20911$1XGIwa)
        (g$utf32->string$20780$1XGIwa
          g$bv$20910$1XGIwa
          g$end$20911$1XGIwa
          '#f))
       ((g$bv$20912$1XGIwa g$end$20913$1XGIwa g$endman?$20914$1XGIwa)
        (if g$endman?$20914$1XGIwa
          (if (eq? g$end$20913$1XGIwa 'big)
            (g$get-string$20743$1XGIwa
              g$utf32be$20741$1XGIwa
              g$bv$20912$1XGIwa)
            (g$get-string$20743$1XGIwa
              g$utf32le$20740$1XGIwa
              g$bv$20912$1XGIwa))
          ((case-lambda
             ((g$b0$20915$1XGIwa
                g$b1$20916$1XGIwa
                g$b2$20917$1XGIwa
                g$b3$20918$1XGIwa)
              (if (if (g$=$21625$1XGIwa '255 g$b0$20915$1XGIwa)
                    (if (g$=$21625$1XGIwa g$b1$20916$1XGIwa '254)
                      (if (g$zero?$21616$1XGIwa g$b2$20917$1XGIwa)
                        (begin
                          '#f
                          (g$zero?$21616$1XGIwa g$b3$20918$1XGIwa))
                        '#f)
                      '#f)
                    '#f)
                (g$utf32->string$20780$1XGIwa
                  (g$trim-front$20778$1XGIwa g$bv$20912$1XGIwa '4)
                  'little
                  '#t)
                (if (if (g$zero?$21616$1XGIwa g$b0$20915$1XGIwa)
                      (if (g$zero?$21616$1XGIwa g$b1$20916$1XGIwa)
                        (if (g$=$21625$1XGIwa '254 g$b2$20917$1XGIwa)
                          (begin
                            '#f
                            (g$=$21625$1XGIwa g$b3$20918$1XGIwa '255))
                          '#f)
                        '#f)
                      '#f)
                  (g$utf32->string$20780$1XGIwa
                    (g$trim-front$20778$1XGIwa g$bv$20912$1XGIwa '4)
                    'big
                    '#t)
                  (begin
                    '#f
                    (g$utf32->string$20780$1XGIwa
                      g$bv$20912$1XGIwa
                      g$end$20913$1XGIwa
                      '#t))))))
           (g$bytevector-u8-ref$20768$1XGIwa g$bv$20912$1XGIwa '0)
           (g$bytevector-u8-ref$20768$1XGIwa g$bv$20912$1XGIwa '1)
           (g$bytevector-u8-ref$20768$1XGIwa g$bv$20912$1XGIwa '2)
           (g$bytevector-u8-ref$20768$1XGIwa g$bv$20912$1XGIwa '3))))))
   (g$uint-list->bytevector$20781$1XGIwa
     g$uint-list->bytevector$21078$1XGIwa
     (case-lambda
       ((g$lst$20919$1XGIwa g$end$20920$1XGIwa g$size$20921$1XGIwa)
        (begin
          (if (g$negative?$21618$1XGIwa g$size$20921$1XGIwa)
            (assertion-violation
              'uint-list->bytevector
              '"invalid size"
              g$size$20921$1XGIwa)
            (void))
          ((case-lambda
             ((g$bv$20922$1XGIwa)
              ((letrec ((g$f$20923$1XGIwa
                          (case-lambda
                            ((g$i$20924$1XGIwa g$lst$20925$1XGIwa)
                             (if (null? g$lst$20925$1XGIwa)
                               g$bv$20922$1XGIwa
                               (begin
                                 (bytevector-uint-set!
                                   g$bv$20922$1XGIwa
                                   g$i$20924$1XGIwa
                                   (car g$lst$20925$1XGIwa)
                                   g$end$20920$1XGIwa
                                   g$size$20921$1XGIwa)
                                 (g$f$20923$1XGIwa
                                   (+ g$i$20924$1XGIwa
                                      g$size$20921$1XGIwa)
                                   (cdr g$lst$20925$1XGIwa))))))))
                 g$f$20923$1XGIwa)
               '0
               g$lst$20919$1XGIwa)))
           (g$make-bytevector$20762$1XGIwa
             (* (length g$lst$20919$1XGIwa) g$size$20921$1XGIwa)))))))
   (g$sint-list->bytevector$20782$1XGIwa
     g$sint-list->bytevector$21079$1XGIwa
     (case-lambda
       ((g$lst$20926$1XGIwa g$end$20927$1XGIwa g$size$20928$1XGIwa)
        (begin
          (if (g$negative?$21618$1XGIwa g$size$20928$1XGIwa)
            (assertion-violation
              'sint-list->bytevector
              '"invalid size"
              g$size$20928$1XGIwa)
            (void))
          ((case-lambda
             ((g$bv$20929$1XGIwa)
              ((letrec ((g$f$20930$1XGIwa
                          (case-lambda
                            ((g$i$20931$1XGIwa g$lst$20932$1XGIwa)
                             (if (null? g$lst$20932$1XGIwa)
                               g$bv$20929$1XGIwa
                               (begin
                                 (bytevector-sint-set!
                                   g$bv$20929$1XGIwa
                                   g$i$20931$1XGIwa
                                   (car g$lst$20932$1XGIwa)
                                   g$end$20927$1XGIwa
                                   g$size$20928$1XGIwa)
                                 (g$f$20930$1XGIwa
                                   (+ g$i$20931$1XGIwa
                                      g$size$20928$1XGIwa)
                                   (cdr g$lst$20932$1XGIwa))))))))
                 g$f$20930$1XGIwa)
               '0
               g$lst$20926$1XGIwa)))
           (g$make-bytevector$20762$1XGIwa
             (* (length g$lst$20926$1XGIwa) g$size$20928$1XGIwa)))))))
   (g$bytevector->uint-list$20783$1XGIwa
     g$bytevector->uint-list$21080$1XGIwa
     (case-lambda
       ((g$bv$20933$1XGIwa g$end$20934$1XGIwa g$size$20935$1XGIwa)
        (begin
          (if (g$negative?$21618$1XGIwa g$size$20935$1XGIwa)
            (assertion-violation
              'bytevector->uint-list
              '"invalid size"
              g$size$20935$1XGIwa)
            (void))
          ((letrec ((g$f$20936$1XGIwa
                      (case-lambda
                        ((g$l$20937$1XGIwa g$a$20938$1XGIwa)
                         (if (g$zero?$21616$1XGIwa g$l$20937$1XGIwa)
                           g$a$20938$1XGIwa
                           (g$f$20936$1XGIwa
                             (- g$l$20937$1XGIwa g$size$20935$1XGIwa)
                             (cons
                               (bytevector-uint-ref
                                 g$bv$20933$1XGIwa
                                 (- g$l$20937$1XGIwa
                                    g$size$20935$1XGIwa)
                                 g$end$20934$1XGIwa
                                 g$size$20935$1XGIwa)
                               g$a$20938$1XGIwa)))))))
             g$f$20936$1XGIwa)
           (g$bytevector-length$20763$1XGIwa g$bv$20933$1XGIwa)
           '())))))
   (g$bytevector->sint-list$20784$1XGIwa
     g$bytevector->sint-list$21081$1XGIwa
     (case-lambda
       ((g$bv$20939$1XGIwa g$end$20940$1XGIwa g$size$20941$1XGIwa)
        (begin
          (if (g$negative?$21618$1XGIwa g$size$20941$1XGIwa)
            (assertion-violation
              'bytevector->sint-list
              '"invalid size"
              g$size$20941$1XGIwa)
            (void))
          ((letrec ((g$f$20942$1XGIwa
                      (case-lambda
                        ((g$l$20943$1XGIwa g$a$20944$1XGIwa)
                         (if (g$zero?$21616$1XGIwa g$l$20943$1XGIwa)
                           g$a$20944$1XGIwa
                           (g$f$20942$1XGIwa
                             (- g$l$20943$1XGIwa g$size$20941$1XGIwa)
                             (cons
                               (bytevector-sint-ref
                                 g$bv$20939$1XGIwa
                                 (- g$l$20943$1XGIwa
                                    g$size$20941$1XGIwa)
                                 g$end$20940$1XGIwa
                                 g$size$20941$1XGIwa)
                               g$a$20944$1XGIwa)))))))
             g$f$20942$1XGIwa)
           (g$bytevector-length$20763$1XGIwa g$bv$20939$1XGIwa)
           '())))))
   (g$single->double$20785$1XGIwa
     g$single->double$21082$1XGIwa
     (case-lambda
       ((g$s$20945$1XGIwa)
        (clr-call-internal
          'System.Convert
          '"ToDouble(Single)"
          '()
          g$s$20945$1XGIwa))))
   (g$bytevector-ieee-single-ref$20786$1XGIwa
     g$bytevector-ieee-single-ref$21083$1XGIwa
     (case-lambda
       ((g$bv$20946$1XGIwa g$k$20947$1XGIwa g$end$20948$1XGIwa)
        ((case-lambda
           ((g$d$20949$1XGIwa)
            (begin
              (g$bytevector-copy!$20766$1XGIwa
                g$bv$20946$1XGIwa
                g$k$20947$1XGIwa
                g$d$20949$1XGIwa
                '0
                '4)
              (if (eq? g$end$20948$1XGIwa 'big)
                (clr-call-internal
                  'System.Array
                  'Reverse
                  '()
                  g$d$20949$1XGIwa)
                (void))
              (g$single->double$20785$1XGIwa
                (clr-call-internal
                  'System.BitConverter
                  'ToSingle
                  '()
                  g$d$20949$1XGIwa
                  '0)))))
         (g$make-bytevector$20762$1XGIwa '4)))))
   (g$bytevector-ieee-double-ref$20787$1XGIwa
     g$bytevector-ieee-double-ref$21084$1XGIwa
     (case-lambda
       ((g$bv$20950$1XGIwa g$k$20951$1XGIwa g$end$20952$1XGIwa)
        ((case-lambda
           ((g$d$20953$1XGIwa)
            (begin
              (g$bytevector-copy!$20766$1XGIwa
                g$bv$20950$1XGIwa
                g$k$20951$1XGIwa
                g$d$20953$1XGIwa
                '0
                '8)
              (if (eq? g$end$20952$1XGIwa 'big)
                (clr-call-internal
                  'System.Array
                  'Reverse
                  '()
                  g$d$20953$1XGIwa)
                (void))
              (clr-call-internal
                'System.BitConverter
                'ToDouble
                '()
                g$d$20953$1XGIwa
                '0))))
         (g$make-bytevector$20762$1XGIwa '8)))))
   (g$bytevector-ieee-single-set!$20788$1XGIwa
     g$bytevector-ieee-single-set!$21085$1XGIwa
     (case-lambda
       ((g$bv$20954$1XGIwa
          g$k$20955$1XGIwa
          g$value$20956$1XGIwa
          g$end$20957$1XGIwa)
        ((case-lambda
           ((g$value$20958$1XGIwa)
            ((case-lambda
               ((g$data$20959$1XGIwa)
                (begin
                  (if (eq? g$end$20957$1XGIwa 'big)
                    (clr-call-internal
                      'System.Array
                      'Reverse
                      '()
                      g$data$20959$1XGIwa)
                    (void))
                  (g$bytevector-copy!$20766$1XGIwa
                    g$data$20959$1XGIwa
                    '0
                    g$bv$20954$1XGIwa
                    g$k$20955$1XGIwa
                    '4))))
             (clr-call-internal
               'System.BitConverter
               '"GetBytes(Single)"
               '()
               g$value$20958$1XGIwa))))
         (clr-call-internal
           'System.Convert
           '"ToSingle(Object)"
           '()
           g$value$20956$1XGIwa)))))
   (g$bytevector-ieee-double-set!$20789$1XGIwa
     g$bytevector-ieee-double-set!$21086$1XGIwa
     (case-lambda
       ((g$bv$20960$1XGIwa
          g$k$20961$1XGIwa
          g$value$20962$1XGIwa
          g$end$20963$1XGIwa)
        ((case-lambda
           ((g$value$20964$1XGIwa)
            ((case-lambda
               ((g$data$20965$1XGIwa)
                (begin
                  (if (eq? g$end$20963$1XGIwa 'big)
                    (clr-call-internal
                      'System.Array
                      'Reverse
                      '()
                      g$data$20965$1XGIwa)
                    (void))
                  (g$bytevector-copy!$20766$1XGIwa
                    g$data$20965$1XGIwa
                    '0
                    g$bv$20960$1XGIwa
                    g$k$20961$1XGIwa
                    '8))))
             (clr-call-internal
               'System.BitConverter
               '"GetBytes(Double)"
               '()
               g$value$20964$1XGIwa))))
         (clr-call-internal
           'System.Convert
           '"ToDouble(Object)"
           '()
           g$value$20962$1XGIwa)))))
   (g$bytevector-u16-ref$20790$1XGIwa
     g$bytevector-u16-ref$21087$1XGIwa
     (case-lambda
       ((g$bytevector$20966$1XGIwa
          g$k$20967$1XGIwa
          g$endianness$20968$1XGIwa)
        (bytevector-uint-ref
          g$bytevector$20966$1XGIwa
          g$k$20967$1XGIwa
          g$endianness$20968$1XGIwa
          '2))))
   (g$bytevector-s16-ref$20791$1XGIwa
     g$bytevector-s16-ref$21088$1XGIwa
     (case-lambda
       ((g$bytevector$20969$1XGIwa
          g$k$20970$1XGIwa
          g$endianness$20971$1XGIwa)
        (bytevector-sint-ref
          g$bytevector$20969$1XGIwa
          g$k$20970$1XGIwa
          g$endianness$20971$1XGIwa
          '2))))
   (g$bytevector-u16-native-ref$20792$1XGIwa
     g$bytevector-u16-native-ref$21089$1XGIwa
     (case-lambda
       ((g$bytevector$20972$1XGIwa g$k$20973$1XGIwa)
        (bytevector-uint-ref
          g$bytevector$20972$1XGIwa
          g$k$20973$1XGIwa
          (g$native-endianness$20736$1XGIwa)
          '2))))
   (g$bytevector-s16-native-ref$20793$1XGIwa
     g$bytevector-s16-native-ref$21090$1XGIwa
     (case-lambda
       ((g$bytevector$20974$1XGIwa g$k$20975$1XGIwa)
        (bytevector-sint-ref
          g$bytevector$20974$1XGIwa
          g$k$20975$1XGIwa
          (g$native-endianness$20736$1XGIwa)
          '2))))
   (g$bytevector-u16-set!$20794$1XGIwa
     g$bytevector-u16-set!$21091$1XGIwa
     (case-lambda
       ((g$bytevector$20976$1XGIwa
          g$k$20977$1XGIwa
          g$n$20978$1XGIwa
          g$endianness$20979$1XGIwa)
        (bytevector-uint-set!
          g$bytevector$20976$1XGIwa
          g$k$20977$1XGIwa
          g$n$20978$1XGIwa
          g$endianness$20979$1XGIwa
          '2))))
   (g$bytevector-s16-set!$20795$1XGIwa
     g$bytevector-s16-set!$21092$1XGIwa
     (case-lambda
       ((g$bytevector$20980$1XGIwa
          g$k$20981$1XGIwa
          g$n$20982$1XGIwa
          g$endianness$20983$1XGIwa)
        (bytevector-sint-set!
          g$bytevector$20980$1XGIwa
          g$k$20981$1XGIwa
          g$n$20982$1XGIwa
          g$endianness$20983$1XGIwa
          '2))))
   (g$bytevector-u16-native-set!$20796$1XGIwa
     g$bytevector-u16-native-set!$21093$1XGIwa
     (case-lambda
       ((g$bytevector$20984$1XGIwa g$k$20985$1XGIwa g$n$20986$1XGIwa)
        (bytevector-uint-set!
          g$bytevector$20984$1XGIwa
          g$k$20985$1XGIwa
          g$n$20986$1XGIwa
          (g$native-endianness$20736$1XGIwa)
          '2))))
   (g$bytevector-s16-native-set!$20797$1XGIwa
     g$bytevector-s16-native-set!$21094$1XGIwa
     (case-lambda
       ((g$bytevector$20987$1XGIwa g$k$20988$1XGIwa g$n$20989$1XGIwa)
        (bytevector-sint-set!
          g$bytevector$20987$1XGIwa
          g$k$20988$1XGIwa
          g$n$20989$1XGIwa
          (g$native-endianness$20736$1XGIwa)
          '2))))
   (g$bytevector-u32-ref$20798$1XGIwa
     g$bytevector-u32-ref$21095$1XGIwa
     (case-lambda
       ((g$bytevector$20990$1XGIwa
          g$k$20991$1XGIwa
          g$endianness$20992$1XGIwa)
        (bytevector-uint-ref
          g$bytevector$20990$1XGIwa
          g$k$20991$1XGIwa
          g$endianness$20992$1XGIwa
          '4))))
   (g$bytevector-s32-ref$20799$1XGIwa
     g$bytevector-s32-ref$21096$1XGIwa
     (case-lambda
       ((g$bytevector$20993$1XGIwa
          g$k$20994$1XGIwa
          g$endianness$20995$1XGIwa)
        (bytevector-sint-ref
          g$bytevector$20993$1XGIwa
          g$k$20994$1XGIwa
          g$endianness$20995$1XGIwa
          '4))))
   (g$bytevector-u32-native-ref$20800$1XGIwa
     g$bytevector-u32-native-ref$21097$1XGIwa
     (case-lambda
       ((g$bytevector$20996$1XGIwa g$k$20997$1XGIwa)
        (bytevector-uint-ref
          g$bytevector$20996$1XGIwa
          g$k$20997$1XGIwa
          (g$native-endianness$20736$1XGIwa)
          '4))))
   (g$bytevector-s32-native-ref$20801$1XGIwa
     g$bytevector-s32-native-ref$21098$1XGIwa
     (case-lambda
       ((g$bytevector$20998$1XGIwa g$k$20999$1XGIwa)
        (bytevector-sint-ref
          g$bytevector$20998$1XGIwa
          g$k$20999$1XGIwa
          (g$native-endianness$20736$1XGIwa)
          '4))))
   (g$bytevector-u32-set!$20802$1XGIwa
     g$bytevector-u32-set!$21099$1XGIwa
     (case-lambda
       ((g$bytevector$21000$1XGIwa
          g$k$21001$1XGIwa
          g$n$21002$1XGIwa
          g$endianness$21003$1XGIwa)
        (bytevector-uint-set!
          g$bytevector$21000$1XGIwa
          g$k$21001$1XGIwa
          g$n$21002$1XGIwa
          g$endianness$21003$1XGIwa
          '4))))
   (g$bytevector-s32-set!$20803$1XGIwa
     g$bytevector-s32-set!$21100$1XGIwa
     (case-lambda
       ((g$bytevector$21004$1XGIwa
          g$k$21005$1XGIwa
          g$n$21006$1XGIwa
          g$endianness$21007$1XGIwa)
        (bytevector-sint-set!
          g$bytevector$21004$1XGIwa
          g$k$21005$1XGIwa
          g$n$21006$1XGIwa
          g$endianness$21007$1XGIwa
          '4))))
   (g$bytevector-u32-native-set!$20804$1XGIwa
     g$bytevector-u32-native-set!$21101$1XGIwa
     (case-lambda
       ((g$bytevector$21008$1XGIwa g$k$21009$1XGIwa g$n$21010$1XGIwa)
        (bytevector-uint-set!
          g$bytevector$21008$1XGIwa
          g$k$21009$1XGIwa
          g$n$21010$1XGIwa
          (g$native-endianness$20736$1XGIwa)
          '4))))
   (g$bytevector-s32-native-set!$20805$1XGIwa
     g$bytevector-s32-native-set!$21102$1XGIwa
     (case-lambda
       ((g$bytevector$21011$1XGIwa g$k$21012$1XGIwa g$n$21013$1XGIwa)
        (bytevector-sint-set!
          g$bytevector$21011$1XGIwa
          g$k$21012$1XGIwa
          g$n$21013$1XGIwa
          (g$native-endianness$20736$1XGIwa)
          '4))))
   (g$bytevector-u64-ref$20806$1XGIwa
     g$bytevector-u64-ref$21103$1XGIwa
     (case-lambda
       ((g$bytevector$21014$1XGIwa
          g$k$21015$1XGIwa
          g$endianness$21016$1XGIwa)
        (bytevector-uint-ref
          g$bytevector$21014$1XGIwa
          g$k$21015$1XGIwa
          g$endianness$21016$1XGIwa
          '8))))
   (g$bytevector-s64-ref$20807$1XGIwa
     g$bytevector-s64-ref$21104$1XGIwa
     (case-lambda
       ((g$bytevector$21017$1XGIwa
          g$k$21018$1XGIwa
          g$endianness$21019$1XGIwa)
        (bytevector-sint-ref
          g$bytevector$21017$1XGIwa
          g$k$21018$1XGIwa
          g$endianness$21019$1XGIwa
          '8))))
   (g$bytevector-u64-native-ref$20808$1XGIwa
     g$bytevector-u64-native-ref$21105$1XGIwa
     (case-lambda
       ((g$bytevector$21020$1XGIwa g$k$21021$1XGIwa)
        (bytevector-uint-ref
          g$bytevector$21020$1XGIwa
          g$k$21021$1XGIwa
          (g$native-endianness$20736$1XGIwa)
          '8))))
   (g$bytevector-s64-native-ref$20809$1XGIwa
     g$bytevector-s64-native-ref$21106$1XGIwa
     (case-lambda
       ((g$bytevector$21022$1XGIwa g$k$21023$1XGIwa)
        (bytevector-sint-ref
          g$bytevector$21022$1XGIwa
          g$k$21023$1XGIwa
          (g$native-endianness$20736$1XGIwa)
          '8))))
   (g$bytevector-u64-set!$20810$1XGIwa
     g$bytevector-u64-set!$21107$1XGIwa
     (case-lambda
       ((g$bytevector$21024$1XGIwa
          g$k$21025$1XGIwa
          g$n$21026$1XGIwa
          g$endianness$21027$1XGIwa)
        (bytevector-uint-set!
          g$bytevector$21024$1XGIwa
          g$k$21025$1XGIwa
          g$n$21026$1XGIwa
          g$endianness$21027$1XGIwa
          '8))))
   (g$bytevector-s64-set!$20811$1XGIwa
     g$bytevector-s64-set!$21108$1XGIwa
     (case-lambda
       ((g$bytevector$21028$1XGIwa
          g$k$21029$1XGIwa
          g$n$21030$1XGIwa
          g$endianness$21031$1XGIwa)
        (bytevector-sint-set!
          g$bytevector$21028$1XGIwa
          g$k$21029$1XGIwa
          g$n$21030$1XGIwa
          g$endianness$21031$1XGIwa
          '8))))
   (g$bytevector-u64-native-set!$20812$1XGIwa
     g$bytevector-u64-native-set!$21109$1XGIwa
     (case-lambda
       ((g$bytevector$21032$1XGIwa g$k$21033$1XGIwa g$n$21034$1XGIwa)
        (bytevector-uint-set!
          g$bytevector$21032$1XGIwa
          g$k$21033$1XGIwa
          g$n$21034$1XGIwa
          (g$native-endianness$20736$1XGIwa)
          '8))))
   (g$bytevector-s64-native-set!$20813$1XGIwa
     g$bytevector-s64-native-set!$21110$1XGIwa
     (case-lambda
       ((g$bytevector$21035$1XGIwa g$k$21036$1XGIwa g$n$21037$1XGIwa)
        (bytevector-sint-set!
          g$bytevector$21035$1XGIwa
          g$k$21036$1XGIwa
          g$n$21037$1XGIwa
          (g$native-endianness$20736$1XGIwa)
          '8))))
   (g$bytevector-ieee-single-native-ref$20814$1XGIwa
     g$bytevector-ieee-single-native-ref$21111$1XGIwa
     (case-lambda
       ((g$bytevector$21038$1XGIwa g$k$21039$1XGIwa)
        (if (not (g$zero?$21616$1XGIwa
                   (g$mod$20596$1XGIwa g$k$21039$1XGIwa '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$21039$1XGIwa)
          (g$bytevector-ieee-single-ref$20786$1XGIwa
            g$bytevector$21038$1XGIwa
            g$k$21039$1XGIwa
            (g$native-endianness$20736$1XGIwa))))))
   (g$bytevector-ieee-double-native-ref$20815$1XGIwa
     g$bytevector-ieee-double-native-ref$21112$1XGIwa
     (case-lambda
       ((g$bytevector$21040$1XGIwa g$k$21041$1XGIwa)
        (if (not (g$zero?$21616$1XGIwa
                   (g$mod$20596$1XGIwa g$k$21041$1XGIwa '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$21041$1XGIwa)
          (g$bytevector-ieee-double-ref$20787$1XGIwa
            g$bytevector$21040$1XGIwa
            g$k$21041$1XGIwa
            (g$native-endianness$20736$1XGIwa))))))
   (g$bytevector-ieee-single-native-set!$20816$1XGIwa
     g$bytevector-ieee-single-native-set!$21113$1XGIwa
     (case-lambda
       ((g$bytevector$21042$1XGIwa g$k$21043$1XGIwa g$x$21044$1XGIwa)
        (if (not (g$zero?$21616$1XGIwa
                   (g$mod$20596$1XGIwa g$k$21043$1XGIwa '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$21043$1XGIwa)
          (g$bytevector-ieee-single-set!$20788$1XGIwa
            g$bytevector$21042$1XGIwa
            g$k$21043$1XGIwa
            g$x$21044$1XGIwa
            (g$native-endianness$20736$1XGIwa))))))
   (g$bytevector-ieee-double-native-set!$20817$1XGIwa
     g$bytevector-ieee-double-native-set!$21114$1XGIwa
     (case-lambda
       ((g$bytevector$21045$1XGIwa g$k$21046$1XGIwa g$x$21047$1XGIwa)
        (if (not (g$zero?$21616$1XGIwa
                   (g$mod$20596$1XGIwa g$k$21046$1XGIwa '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$21046$1XGIwa)
          (g$bytevector-ieee-double-set!$20789$1XGIwa
            g$bytevector$21045$1XGIwa
            g$k$21046$1XGIwa
            g$x$21047$1XGIwa
            (g$native-endianness$20736$1XGIwa)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme numbers)
  ((g$bignum?$21115$1XGIwa
     g$bignum?$21577$1XGIwa
     (case-lambda
       ((g$obj$21328$1XGIwa)
        (clr-is-internal
          'Microsoft.Scripting.Math.BigInteger
          g$obj$21328$1XGIwa))))
   (g$rectnum?$21116$1XGIwa
     g$rectnum?$21578$1XGIwa
     (case-lambda
       ((g$obj$21329$1XGIwa)
        (clr-is-internal
          'IronScheme.Runtime.ComplexFraction
          g$obj$21329$1XGIwa))))
   (g$make-rectnum$21117$1XGIwa
     g$make-rectnum$21579$1XGIwa
     (case-lambda
       ((g$r1$21330$1XGIwa g$r2$21331$1XGIwa)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'Make
          '()
          g$r1$21330$1XGIwa
          g$r2$21331$1XGIwa))))
   (g$rectnum-imag-part$21118$1XGIwa
     g$rectnum-imag-part$21580$1XGIwa
     (case-lambda
       ((g$c$21332$1XGIwa)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'get_Imag
          g$c$21332$1XGIwa))))
   (g$rectnum-real-part$21119$1XGIwa
     g$rectnum-real-part$21581$1XGIwa
     (case-lambda
       ((g$c$21333$1XGIwa)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'get_Real
          g$c$21333$1XGIwa))))
   (g$ratnum?$21120$1XGIwa
     g$ratnum?$21582$1XGIwa
     (case-lambda
       ((g$obj$21334$1XGIwa)
        (clr-is-internal
          'IronScheme.Runtime.Fraction
          g$obj$21334$1XGIwa))))
   (g$ratnum-denominator$21121$1XGIwa
     g$ratnum-denominator$21583$1XGIwa
     (case-lambda
       ((g$rat$21335$1XGIwa)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'get_Denominator
          g$rat$21335$1XGIwa))))
   (g$ratnum-numerator$21122$1XGIwa
     g$ratnum-numerator$21584$1XGIwa
     (case-lambda
       ((g$rat$21336$1XGIwa)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'get_Numerator
          g$rat$21336$1XGIwa))))
   (g$complexnum?$21123$1XGIwa
     g$complexnum?$21585$1XGIwa
     (case-lambda
       ((g$obj$21337$1XGIwa)
        (clr-is-internal
          'Microsoft.Scripting.Math.Complex64
          g$obj$21337$1XGIwa))))
   (g$make-complexnum$21124$1XGIwa
     g$make-complexnum$21586$1XGIwa
     (case-lambda
       ((g$r1$21338$1XGIwa g$r2$21339$1XGIwa)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'Make
          '()
          g$r1$21338$1XGIwa
          g$r2$21339$1XGIwa))))
   (g$complexnum-imag-part$21125$1XGIwa
     g$complexnum-imag-part$21587$1XGIwa
     (case-lambda
       ((g$c$21340$1XGIwa)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'get_Imag
          g$c$21340$1XGIwa))))
   (g$complexnum-real-part$21126$1XGIwa
     g$complexnum-real-part$21588$1XGIwa
     (case-lambda
       ((g$c$21341$1XGIwa)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'get_Real
          g$c$21341$1XGIwa))))
   (g$bignum/$21127$1XGIwa
     g$bignum/$21589$1XGIwa
     (case-lambda
       ((g$a$21342$1XGIwa g$b$21343$1XGIwa)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'op_Division
          '()
          g$a$21342$1XGIwa
          g$b$21343$1XGIwa))))
   (g$bignum%$21128$1XGIwa
     g$bignum%$21590$1XGIwa
     (case-lambda
       ((g$a$21344$1XGIwa g$b$21345$1XGIwa)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'op_Modulus
          '()
          g$a$21344$1XGIwa
          g$b$21345$1XGIwa))))
   (g$bignum->fixnum$21129$1XGIwa
     g$bignum->fixnum$21591$1XGIwa
     (case-lambda
       ((g$b$21346$1XGIwa)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'ToInt32
          g$b$21346$1XGIwa))))
   (g$flonum->ratnum$21130$1XGIwa
     g$flonum->ratnum$21592$1XGIwa
     (case-lambda
       ((g$f$21347$1XGIwa)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          '"op_Implicit(System.Double)"
          '()
          g$f$21347$1XGIwa))))
   (g$ratnum->flonum$21131$1XGIwa
     g$ratnum->flonum$21593$1XGIwa
     (case-lambda
       ((g$r$21348$1XGIwa)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'ToDouble
          g$r$21348$1XGIwa
          '()))))
   (g$fixnum->bignum$21132$1XGIwa
     g$fixnum->bignum$21594$1XGIwa
     (case-lambda
       ((g$f$21349$1XGIwa)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          '"Create(System.Int32)"
          '()
          g$f$21349$1XGIwa))))
   (g$real->complexnum$21133$1XGIwa
     g$real->complexnum$21595$1XGIwa
     (case-lambda
       ((g$num$21350$1XGIwa)
        (if (g$complexnum?$21123$1XGIwa g$num$21350$1XGIwa)
          g$num$21350$1XGIwa
          (g$make-complexnum$21124$1XGIwa
            (g$inexact$21157$1XGIwa g$num$21350$1XGIwa)
            '0.0)))))
   (g$complexnum->rectnum$21134$1XGIwa
     g$complexnum->rectnum$21596$1XGIwa
     (case-lambda
       ((g$num$21351$1XGIwa)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          '"op_Implicit(Microsoft.Scripting.Math.Complex64)"
          '()
          g$num$21351$1XGIwa))))
   (g$rectnum->complexnum$21135$1XGIwa
     g$rectnum->complexnum$21597$1XGIwa
     (case-lambda
       ((g$num$21352$1XGIwa)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'ToComplex64
          g$num$21352$1XGIwa))))
   (g$->fixnum$21136$1XGIwa
     g$->fixnum$21598$1XGIwa
     (case-lambda
       ((g$num$21353$1XGIwa)
        (if (g$fixnum?$20576$1XGIwa g$num$21353$1XGIwa)
          g$num$21353$1XGIwa
          (clr-call-internal
            'System.Convert
            '"ToInt32(Object)"
            '()
            g$num$21353$1XGIwa)))))
   (g$->ratnum$21137$1XGIwa
     g$->ratnum$21599$1XGIwa
     (case-lambda
       ((g$num$21354$1XGIwa)
        (if (g$ratnum?$21120$1XGIwa g$num$21354$1XGIwa)
          g$num$21354$1XGIwa
          (if (g$real?$21148$1XGIwa g$num$21354$1XGIwa)
            (g$flonum->ratnum$21130$1XGIwa
              (g$real->flonum$21139$1XGIwa g$num$21354$1XGIwa))
            (begin
              '#f
              (assertion-violation
                '->ratnum
                '"not a real"
                g$num$21354$1XGIwa)))))))
   (g$->bignum$21138$1XGIwa
     g$->bignum$21600$1XGIwa
     (case-lambda
       ((g$num$21355$1XGIwa)
        (if (g$bignum?$21115$1XGIwa g$num$21355$1XGIwa)
          g$num$21355$1XGIwa
          (if (g$fixnum?$20576$1XGIwa g$num$21355$1XGIwa)
            (g$fixnum->bignum$21132$1XGIwa g$num$21355$1XGIwa)
            (begin
              '#f
              (assertion-violation
                '->bignum
                '"not an integer"
                g$num$21355$1XGIwa)))))))
   (g$real->flonum$21139$1XGIwa
     g$real->flonum$21601$1XGIwa
     (case-lambda
       ((g$x$21356$1XGIwa)
        (begin
          (if (not (g$real?$21148$1XGIwa g$x$21356$1XGIwa))
            (assertion-violation
              'real->flonum
              '"not a real"
              g$x$21356$1XGIwa)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToDouble(System.Object)"
            '()
            g$x$21356$1XGIwa)))))
   (g$fixnum->flonum$21140$1XGIwa
     g$fixnum->flonum$21602$1XGIwa
     (case-lambda
       ((g$x$21357$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x$21357$1XGIwa))
            (assertion-violation
              'fixnum->flonum
              '"not a fixnum"
              g$x$21357$1XGIwa)
            (void))
          (clr-cast-internal
            'System.Double
            (clr-cast-internal 'System.Int32 g$x$21357$1XGIwa))))))
   (g$number?$21141$1XGIwa
     g$number?$21603$1XGIwa
     (case-lambda
       ((g$obj$21358$1XGIwa)
        ((case-lambda
           ((g$t$21359$1XGIwa)
            (if g$t$21359$1XGIwa
              g$t$21359$1XGIwa
              ((case-lambda
                 ((g$t$21360$1XGIwa)
                  (if g$t$21360$1XGIwa
                    g$t$21360$1XGIwa
                    ((case-lambda
                       ((g$t$21361$1XGIwa)
                        (if g$t$21361$1XGIwa
                          g$t$21361$1XGIwa
                          ((case-lambda
                             ((g$t$21362$1XGIwa)
                              (if g$t$21362$1XGIwa
                                g$t$21362$1XGIwa
                                ((case-lambda
                                   ((g$t$21363$1XGIwa)
                                    (if g$t$21363$1XGIwa
                                      g$t$21363$1XGIwa
                                      (begin
                                        '#f
                                        (g$rectnum?$21116$1XGIwa
                                          g$obj$21358$1XGIwa)))))
                                 (g$complexnum?$21123$1XGIwa
                                   g$obj$21358$1XGIwa)))))
                           (g$ratnum?$21120$1XGIwa
                             g$obj$21358$1XGIwa)))))
                     (g$bignum?$21115$1XGIwa g$obj$21358$1XGIwa)))))
               (g$flonum?$20577$1XGIwa g$obj$21358$1XGIwa)))))
         (g$fixnum?$20576$1XGIwa g$obj$21358$1XGIwa)))))
   (g$nan?$21142$1XGIwa
     g$nan?$21604$1XGIwa
     (case-lambda
       ((g$num$21364$1XGIwa)
        (if ((case-lambda
               ((g$t$21365$1XGIwa)
                (if g$t$21365$1XGIwa
                  g$t$21365$1XGIwa
                  ((case-lambda
                     ((g$t$21366$1XGIwa)
                      (if g$t$21366$1XGIwa
                        g$t$21366$1XGIwa
                        ((case-lambda
                           ((g$t$21367$1XGIwa)
                            (if g$t$21367$1XGIwa
                              g$t$21367$1XGIwa
                              (begin
                                '#f
                                (g$rectnum?$21116$1XGIwa
                                  g$num$21364$1XGIwa)))))
                         (g$ratnum?$21120$1XGIwa g$num$21364$1XGIwa)))))
                   (g$bignum?$21115$1XGIwa g$num$21364$1XGIwa)))))
             (g$fixnum?$20576$1XGIwa g$num$21364$1XGIwa))
          '#f
          (if (g$flonum?$20577$1XGIwa g$num$21364$1XGIwa)
            (g$flnan?$26590$1XGIwa g$num$21364$1XGIwa)
            (if (g$complexnum?$21123$1XGIwa g$num$21364$1XGIwa)
              ((case-lambda
                 ((g$t$21368$1XGIwa)
                  (if g$t$21368$1XGIwa
                    g$t$21368$1XGIwa
                    (begin
                      '#f
                      (g$flnan?$26590$1XGIwa
                        (g$complexnum-imag-part$21125$1XGIwa
                          g$num$21364$1XGIwa))))))
               (g$flnan?$26590$1XGIwa
                 (g$complexnum-real-part$21126$1XGIwa
                   g$num$21364$1XGIwa)))
              (begin
                '#f
                (assertion-violation
                  'nan?
                  '"not a number"
                  g$num$21364$1XGIwa))))))))
   (g$finite?$21143$1XGIwa
     g$finite?$21605$1XGIwa
     (case-lambda
       ((g$num$21369$1XGIwa)
        (if ((case-lambda
               ((g$t$21370$1XGIwa)
                (if g$t$21370$1XGIwa
                  g$t$21370$1XGIwa
                  ((case-lambda
                     ((g$t$21371$1XGIwa)
                      (if g$t$21371$1XGIwa
                        g$t$21371$1XGIwa
                        ((case-lambda
                           ((g$t$21372$1XGIwa)
                            (if g$t$21372$1XGIwa
                              g$t$21372$1XGIwa
                              (begin
                                '#f
                                (g$rectnum?$21116$1XGIwa
                                  g$num$21369$1XGIwa)))))
                         (g$ratnum?$21120$1XGIwa g$num$21369$1XGIwa)))))
                   (g$bignum?$21115$1XGIwa g$num$21369$1XGIwa)))))
             (g$fixnum?$20576$1XGIwa g$num$21369$1XGIwa))
          '#t
          (if (g$flonum?$20577$1XGIwa g$num$21369$1XGIwa)
            (g$flfinite?$26587$1XGIwa g$num$21369$1XGIwa)
            (if (g$complexnum?$21123$1XGIwa g$num$21369$1XGIwa)
              (if (g$flfinite?$26587$1XGIwa
                    (g$complexnum-real-part$21126$1XGIwa
                      g$num$21369$1XGIwa))
                (begin
                  '#f
                  (g$flfinite?$26587$1XGIwa
                    (g$complexnum-imag-part$21125$1XGIwa
                      g$num$21369$1XGIwa)))
                '#f)
              (begin
                '#f
                (assertion-violation
                  'finite?
                  '"not a number"
                  g$num$21369$1XGIwa))))))))
   (g$infinite?$21144$1XGIwa
     g$infinite?$21606$1XGIwa
     (case-lambda
       ((g$num$21373$1XGIwa)
        (if ((case-lambda
               ((g$t$21374$1XGIwa)
                (if g$t$21374$1XGIwa
                  g$t$21374$1XGIwa
                  ((case-lambda
                     ((g$t$21375$1XGIwa)
                      (if g$t$21375$1XGIwa
                        g$t$21375$1XGIwa
                        ((case-lambda
                           ((g$t$21376$1XGIwa)
                            (if g$t$21376$1XGIwa
                              g$t$21376$1XGIwa
                              (begin
                                '#f
                                (g$rectnum?$21116$1XGIwa
                                  g$num$21373$1XGIwa)))))
                         (g$ratnum?$21120$1XGIwa g$num$21373$1XGIwa)))))
                   (g$bignum?$21115$1XGIwa g$num$21373$1XGIwa)))))
             (g$fixnum?$20576$1XGIwa g$num$21373$1XGIwa))
          '#f
          (if (g$flonum?$20577$1XGIwa g$num$21373$1XGIwa)
            (g$flinfinite?$26589$1XGIwa g$num$21373$1XGIwa)
            (if (g$complexnum?$21123$1XGIwa g$num$21373$1XGIwa)
              ((case-lambda
                 ((g$t$21377$1XGIwa)
                  (if g$t$21377$1XGIwa
                    g$t$21377$1XGIwa
                    (begin
                      '#f
                      (g$flinfinite?$26589$1XGIwa
                        (g$complexnum-imag-part$21125$1XGIwa
                          g$num$21373$1XGIwa))))))
               (g$flinfinite?$26589$1XGIwa
                 (g$complexnum-real-part$21126$1XGIwa
                   g$num$21373$1XGIwa)))
              (begin
                '#f
                (assertion-violation
                  'infinite?
                  '"not a number"
                  g$num$21373$1XGIwa))))))))
   (g$exact?$21145$1XGIwa
     g$exact?$21607$1XGIwa
     (case-lambda
       ((g$obj$21378$1XGIwa)
        (if ((case-lambda
               ((g$t$21379$1XGIwa)
                (if g$t$21379$1XGIwa
                  g$t$21379$1XGIwa
                  ((case-lambda
                     ((g$t$21380$1XGIwa)
                      (if g$t$21380$1XGIwa
                        g$t$21380$1XGIwa
                        ((case-lambda
                           ((g$t$21381$1XGIwa)
                            (if g$t$21381$1XGIwa
                              g$t$21381$1XGIwa
                              (begin
                                '#f
                                (g$rectnum?$21116$1XGIwa
                                  g$obj$21378$1XGIwa)))))
                         (g$ratnum?$21120$1XGIwa g$obj$21378$1XGIwa)))))
                   (g$bignum?$21115$1XGIwa g$obj$21378$1XGIwa)))))
             (g$fixnum?$20576$1XGIwa g$obj$21378$1XGIwa))
          '#t
          (if ((case-lambda
                 ((g$t$21382$1XGIwa)
                  (if g$t$21382$1XGIwa
                    g$t$21382$1XGIwa
                    (begin
                      '#f
                      (g$complexnum?$21123$1XGIwa
                        g$obj$21378$1XGIwa)))))
               (g$flonum?$20577$1XGIwa g$obj$21378$1XGIwa))
            '#f
            (begin
              '#f
              (assertion-violation
                'exact
                '"not a number"
                g$obj$21378$1XGIwa)))))))
   (g$inexact?$21146$1XGIwa
     g$inexact?$21608$1XGIwa
     (case-lambda
       ((g$obj$21383$1XGIwa)
        (if ((case-lambda
               ((g$t$21384$1XGIwa)
                (if g$t$21384$1XGIwa
                  g$t$21384$1XGIwa
                  ((case-lambda
                     ((g$t$21385$1XGIwa)
                      (if g$t$21385$1XGIwa
                        g$t$21385$1XGIwa
                        ((case-lambda
                           ((g$t$21386$1XGIwa)
                            (if g$t$21386$1XGIwa
                              g$t$21386$1XGIwa
                              (begin
                                '#f
                                (g$rectnum?$21116$1XGIwa
                                  g$obj$21383$1XGIwa)))))
                         (g$ratnum?$21120$1XGIwa g$obj$21383$1XGIwa)))))
                   (g$bignum?$21115$1XGIwa g$obj$21383$1XGIwa)))))
             (g$fixnum?$20576$1XGIwa g$obj$21383$1XGIwa))
          '#f
          (if ((case-lambda
                 ((g$t$21387$1XGIwa)
                  (if g$t$21387$1XGIwa
                    g$t$21387$1XGIwa
                    (begin
                      '#f
                      (g$complexnum?$21123$1XGIwa
                        g$obj$21383$1XGIwa)))))
               (g$flonum?$20577$1XGIwa g$obj$21383$1XGIwa))
            '#t
            (begin
              '#f
              (assertion-violation
                'inexact
                '"not a number"
                g$obj$21383$1XGIwa)))))))
   (g$complex?$21147$1XGIwa
     g$complex?$21609$1XGIwa
     (case-lambda
       ((g$obj$21388$1XGIwa)
        (g$number?$21141$1XGIwa g$obj$21388$1XGIwa))))
   (g$real?$21148$1XGIwa
     g$real?$21610$1XGIwa
     (case-lambda
       ((g$obj$21389$1XGIwa)
        (if ((case-lambda
               ((g$t$21390$1XGIwa)
                (if g$t$21390$1XGIwa
                  g$t$21390$1XGIwa
                  ((case-lambda
                     ((g$t$21391$1XGIwa)
                      (if g$t$21391$1XGIwa
                        g$t$21391$1XGIwa
                        ((case-lambda
                           ((g$t$21392$1XGIwa)
                            (if g$t$21392$1XGIwa
                              g$t$21392$1XGIwa
                              (begin
                                '#f
                                (g$flonum?$20577$1XGIwa
                                  g$obj$21389$1XGIwa)))))
                         (g$ratnum?$21120$1XGIwa g$obj$21389$1XGIwa)))))
                   (g$bignum?$21115$1XGIwa g$obj$21389$1XGIwa)))))
             (g$fixnum?$20576$1XGIwa g$obj$21389$1XGIwa))
          '#t
          (if ((case-lambda
                 ((g$t$21393$1XGIwa)
                  (if g$t$21393$1XGIwa
                    g$t$21393$1XGIwa
                    (begin
                      '#f
                      (g$rectnum?$21116$1XGIwa g$obj$21389$1XGIwa)))))
               (g$complexnum?$21123$1XGIwa g$obj$21389$1XGIwa))
            ((case-lambda
               ((g$i$21394$1XGIwa)
                (if (g$zero?$21154$1XGIwa g$i$21394$1XGIwa)
                  (begin '#f (g$exact?$21145$1XGIwa g$i$21394$1XGIwa))
                  '#f)))
             (g$imag-part$21274$1XGIwa g$obj$21389$1XGIwa))
            (begin '#f '#f))))))
   (g$rational?$21149$1XGIwa
     g$rational?$21611$1XGIwa
     (case-lambda
       ((g$obj$21395$1XGIwa)
        (if ((case-lambda
               ((g$t$21396$1XGIwa)
                (if g$t$21396$1XGIwa
                  g$t$21396$1XGIwa
                  ((case-lambda
                     ((g$t$21397$1XGIwa)
                      (if g$t$21397$1XGIwa
                        g$t$21397$1XGIwa
                        (begin
                          '#f
                          (g$ratnum?$21120$1XGIwa
                            g$obj$21395$1XGIwa)))))
                   (g$bignum?$21115$1XGIwa g$obj$21395$1XGIwa)))))
             (g$fixnum?$20576$1XGIwa g$obj$21395$1XGIwa))
          '#t
          (if (if ((case-lambda
                     ((g$t$21398$1XGIwa)
                      (if g$t$21398$1XGIwa
                        g$t$21398$1XGIwa
                        ((case-lambda
                           ((g$t$21399$1XGIwa)
                            (if g$t$21399$1XGIwa
                              g$t$21399$1XGIwa
                              (begin
                                '#f
                                (g$flonum?$20577$1XGIwa
                                  g$obj$21395$1XGIwa)))))
                         (g$rectnum?$21116$1XGIwa
                           g$obj$21395$1XGIwa)))))
                   (g$complexnum?$21123$1XGIwa g$obj$21395$1XGIwa))
                (if (g$finite?$21143$1XGIwa g$obj$21395$1XGIwa)
                  (begin
                    '#f
                    (not (g$nan?$21142$1XGIwa g$obj$21395$1XGIwa)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$21400$1XGIwa)
                (if (g$exact?$21145$1XGIwa g$i$21400$1XGIwa)
                  (begin '#f (g$zero?$21154$1XGIwa g$i$21400$1XGIwa))
                  '#f)))
             (g$imag-part$21274$1XGIwa g$obj$21395$1XGIwa))
            (begin '#f '#f))))))
   (g$integer?$21150$1XGIwa
     g$integer?$21612$1XGIwa
     (case-lambda
       ((g$obj$21401$1XGIwa)
        (if ((case-lambda
               ((g$t$21402$1XGIwa)
                (if g$t$21402$1XGIwa
                  g$t$21402$1XGIwa
                  (begin
                    '#f
                    (g$bignum?$21115$1XGIwa g$obj$21401$1XGIwa)))))
             (g$fixnum?$20576$1XGIwa g$obj$21401$1XGIwa))
          '#t
          (if (if ((case-lambda
                     ((g$t$21403$1XGIwa)
                      (if g$t$21403$1XGIwa
                        g$t$21403$1XGIwa
                        ((case-lambda
                           ((g$t$21404$1XGIwa)
                            (if g$t$21404$1XGIwa
                              g$t$21404$1XGIwa
                              ((case-lambda
                                 ((g$t$21405$1XGIwa)
                                  (if g$t$21405$1XGIwa
                                    g$t$21405$1XGIwa
                                    (begin
                                      '#f
                                      (g$flonum?$20577$1XGIwa
                                        g$obj$21401$1XGIwa)))))
                               (g$rectnum?$21116$1XGIwa
                                 g$obj$21401$1XGIwa)))))
                         (g$complexnum?$21123$1XGIwa
                           g$obj$21401$1XGIwa)))))
                   (g$ratnum?$21120$1XGIwa g$obj$21401$1XGIwa))
                (if (g$finite?$21143$1XGIwa g$obj$21401$1XGIwa)
                  (begin
                    '#f
                    (not (g$nan?$21142$1XGIwa g$obj$21401$1XGIwa)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$21406$1XGIwa)
                (if (g$exact?$21145$1XGIwa g$i$21406$1XGIwa)
                  (if (g$zero?$21154$1XGIwa g$i$21406$1XGIwa)
                    (begin
                      '#f
                      (g$=$21261$1XGIwa
                        (g$denominator$21272$1XGIwa
                          (g$real-part$21273$1XGIwa g$obj$21401$1XGIwa))
                        '1))
                    '#f)
                  '#f)))
             (g$imag-part$21274$1XGIwa g$obj$21401$1XGIwa))
            (begin '#f '#f))))))
   (g$real-valued?$21151$1XGIwa
     g$real-valued?$21613$1XGIwa
     (case-lambda
       ((g$obj$21407$1XGIwa)
        (if ((case-lambda
               ((g$t$21408$1XGIwa)
                (if g$t$21408$1XGIwa
                  g$t$21408$1XGIwa
                  ((case-lambda
                     ((g$t$21409$1XGIwa)
                      (if g$t$21409$1XGIwa
                        g$t$21409$1XGIwa
                        ((case-lambda
                           ((g$t$21410$1XGIwa)
                            (if g$t$21410$1XGIwa
                              g$t$21410$1XGIwa
                              (begin
                                '#f
                                (g$flonum?$20577$1XGIwa
                                  g$obj$21407$1XGIwa)))))
                         (g$ratnum?$21120$1XGIwa g$obj$21407$1XGIwa)))))
                   (g$bignum?$21115$1XGIwa g$obj$21407$1XGIwa)))))
             (g$fixnum?$20576$1XGIwa g$obj$21407$1XGIwa))
          '#t
          (if ((case-lambda
                 ((g$t$21411$1XGIwa)
                  (if g$t$21411$1XGIwa
                    g$t$21411$1XGIwa
                    (begin
                      '#f
                      (g$rectnum?$21116$1XGIwa g$obj$21407$1XGIwa)))))
               (g$complexnum?$21123$1XGIwa g$obj$21407$1XGIwa))
            ((case-lambda
               ((g$i$21412$1XGIwa)
                (g$zero?$21154$1XGIwa g$i$21412$1XGIwa)))
             (g$imag-part$21274$1XGIwa g$obj$21407$1XGIwa))
            (begin '#f '#f))))))
   (g$rational-valued?$21152$1XGIwa
     g$rational-valued?$21614$1XGIwa
     (case-lambda
       ((g$obj$21413$1XGIwa)
        (if ((case-lambda
               ((g$t$21414$1XGIwa)
                (if g$t$21414$1XGIwa
                  g$t$21414$1XGIwa
                  ((case-lambda
                     ((g$t$21415$1XGIwa)
                      (if g$t$21415$1XGIwa
                        g$t$21415$1XGIwa
                        (begin
                          '#f
                          (g$ratnum?$21120$1XGIwa
                            g$obj$21413$1XGIwa)))))
                   (g$bignum?$21115$1XGIwa g$obj$21413$1XGIwa)))))
             (g$fixnum?$20576$1XGIwa g$obj$21413$1XGIwa))
          '#t
          (if (if ((case-lambda
                     ((g$t$21416$1XGIwa)
                      (if g$t$21416$1XGIwa
                        g$t$21416$1XGIwa
                        ((case-lambda
                           ((g$t$21417$1XGIwa)
                            (if g$t$21417$1XGIwa
                              g$t$21417$1XGIwa
                              (begin
                                '#f
                                (g$flonum?$20577$1XGIwa
                                  g$obj$21413$1XGIwa)))))
                         (g$rectnum?$21116$1XGIwa
                           g$obj$21413$1XGIwa)))))
                   (g$complexnum?$21123$1XGIwa g$obj$21413$1XGIwa))
                (if (g$finite?$21143$1XGIwa g$obj$21413$1XGIwa)
                  (begin
                    '#f
                    (not (g$nan?$21142$1XGIwa g$obj$21413$1XGIwa)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$21418$1XGIwa)
                (g$zero?$21154$1XGIwa g$i$21418$1XGIwa)))
             (g$imag-part$21274$1XGIwa g$obj$21413$1XGIwa))
            (begin '#f '#f))))))
   (g$integer-valued?$21153$1XGIwa
     g$integer-valued?$21615$1XGIwa
     (case-lambda
       ((g$obj$21419$1XGIwa)
        (if ((case-lambda
               ((g$t$21420$1XGIwa)
                (if g$t$21420$1XGIwa
                  g$t$21420$1XGIwa
                  (begin
                    '#f
                    (g$bignum?$21115$1XGIwa g$obj$21419$1XGIwa)))))
             (g$fixnum?$20576$1XGIwa g$obj$21419$1XGIwa))
          '#t
          (if (if ((case-lambda
                     ((g$t$21421$1XGIwa)
                      (if g$t$21421$1XGIwa
                        g$t$21421$1XGIwa
                        ((case-lambda
                           ((g$t$21422$1XGIwa)
                            (if g$t$21422$1XGIwa
                              g$t$21422$1XGIwa
                              ((case-lambda
                                 ((g$t$21423$1XGIwa)
                                  (if g$t$21423$1XGIwa
                                    g$t$21423$1XGIwa
                                    (begin
                                      '#f
                                      (g$flonum?$20577$1XGIwa
                                        g$obj$21419$1XGIwa)))))
                               (g$rectnum?$21116$1XGIwa
                                 g$obj$21419$1XGIwa)))))
                         (g$complexnum?$21123$1XGIwa
                           g$obj$21419$1XGIwa)))))
                   (g$ratnum?$21120$1XGIwa g$obj$21419$1XGIwa))
                (if (g$finite?$21143$1XGIwa g$obj$21419$1XGIwa)
                  (begin
                    '#f
                    (not (g$nan?$21142$1XGIwa g$obj$21419$1XGIwa)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$21424$1XGIwa)
                (if (g$zero?$21154$1XGIwa g$i$21424$1XGIwa)
                  (begin
                    '#f
                    (g$=$21261$1XGIwa
                      (g$denominator$21272$1XGIwa
                        (g$real-part$21273$1XGIwa g$obj$21419$1XGIwa))
                      '1))
                  '#f)))
             (g$imag-part$21274$1XGIwa g$obj$21419$1XGIwa))
            (begin '#f '#f))))))
   (g$zero?$21154$1XGIwa
     g$zero?$21616$1XGIwa
     (case-lambda
       ((g$num$21425$1XGIwa)
        (begin
          (if (not (g$number?$21141$1XGIwa g$num$21425$1XGIwa))
            (assertion-violation
              'zero?
              '"not a number"
              g$num$21425$1XGIwa)
            (void))
          (g$=$21261$1XGIwa g$num$21425$1XGIwa '0)))))
   (g$positive?$21155$1XGIwa
     g$positive?$21617$1XGIwa
     (case-lambda
       ((g$num$21426$1XGIwa)
        (begin
          (if (not (g$number?$21141$1XGIwa g$num$21426$1XGIwa))
            (assertion-violation
              'positive?
              '"not a number"
              g$num$21426$1XGIwa)
            (void))
          (g$>$21264$1XGIwa g$num$21426$1XGIwa '0)))))
   (g$negative?$21156$1XGIwa
     g$negative?$21618$1XGIwa
     (case-lambda
       ((g$num$21427$1XGIwa)
        (begin
          (if (not (g$number?$21141$1XGIwa g$num$21427$1XGIwa))
            (assertion-violation
              'negative?
              '"not a number"
              g$num$21427$1XGIwa)
            (void))
          (g$<$21262$1XGIwa g$num$21427$1XGIwa '0)))))
   (g$inexact$21157$1XGIwa
     g$inexact$21619$1XGIwa
     (case-lambda
       ((g$num$21428$1XGIwa)
        (if ((case-lambda
               ((g$t$21429$1XGIwa)
                (if g$t$21429$1XGIwa
                  g$t$21429$1XGIwa
                  (begin
                    '#f
                    (g$flonum?$20577$1XGIwa g$num$21428$1XGIwa)))))
             (g$complexnum?$21123$1XGIwa g$num$21428$1XGIwa))
          g$num$21428$1XGIwa
          (if ((case-lambda
                 ((g$t$21430$1XGIwa)
                  (if g$t$21430$1XGIwa
                    g$t$21430$1XGIwa
                    (begin
                      '#f
                      (g$ratnum?$21120$1XGIwa g$num$21428$1XGIwa)))))
               (g$exact-integer?$21270$1XGIwa g$num$21428$1XGIwa))
            (g$real->flonum$21139$1XGIwa g$num$21428$1XGIwa)
            (if (g$rectnum?$21116$1XGIwa g$num$21428$1XGIwa)
              (g$rectnum->complexnum$21135$1XGIwa g$num$21428$1XGIwa)
              (begin
                '#f
                (assertion-violation
                  'inexact
                  '"not a number"
                  g$num$21428$1XGIwa))))))))
   (g$exact$21158$1XGIwa
     g$exact$21620$1XGIwa
     (case-lambda
       ((g$num$21431$1XGIwa)
        (if (g$complexnum?$21123$1XGIwa g$num$21431$1XGIwa)
          (if (g$zero?$21154$1XGIwa
                (g$complexnum-imag-part$21125$1XGIwa
                  g$num$21431$1XGIwa))
            (g$exact$21158$1XGIwa
              (g$complexnum-real-part$21126$1XGIwa g$num$21431$1XGIwa))
            ((case-lambda
               ((g$t$21432$1XGIwa)
                (if g$t$21432$1XGIwa
                  g$t$21432$1XGIwa
                  (begin
                    '#f
                    (begin
                      '#f
                      (assertion-violation
                        'exact
                        '"no exact equivalent"
                        g$num$21431$1XGIwa))))))
             ((case-lambda
                ((g$i$21433$1XGIwa g$r$21434$1XGIwa)
                 (if (g$rational?$21149$1XGIwa g$r$21434$1XGIwa)
                   (if (g$rational?$21149$1XGIwa g$i$21433$1XGIwa)
                     (begin
                       '#f
                       (g$make-rectnum$21117$1XGIwa
                         (g$flonum->ratnum$21130$1XGIwa
                           g$r$21434$1XGIwa)
                         (g$flonum->ratnum$21130$1XGIwa
                           g$i$21433$1XGIwa)))
                     '#f)
                   '#f)))
              (g$complexnum-imag-part$21125$1XGIwa g$num$21431$1XGIwa)
              (g$complexnum-real-part$21126$1XGIwa
                g$num$21431$1XGIwa))))
          (if (g$flonum?$20577$1XGIwa g$num$21431$1XGIwa)
            (if ((case-lambda
                   ((g$t$21435$1XGIwa)
                    (if g$t$21435$1XGIwa
                      g$t$21435$1XGIwa
                      (begin
                        '#f
                        (g$flinfinite?$26589$1XGIwa
                          g$num$21431$1XGIwa)))))
                 (g$flnan?$26590$1XGIwa g$num$21431$1XGIwa))
              (assertion-violation
                'exact
                '"no exact equivalent"
                g$num$21431$1XGIwa)
              (g$flonum->ratnum$21130$1XGIwa g$num$21431$1XGIwa))
            (if (g$bignum?$21115$1XGIwa g$num$21431$1XGIwa)
              (if (g$fx<=?$25030$1XGIwa
                    (g$fixnum-width$20578$1XGIwa)
                    (g$bitwise-length$22773$1XGIwa g$num$21431$1XGIwa))
                g$num$21431$1XGIwa
                (g$bignum->fixnum$21129$1XGIwa g$num$21431$1XGIwa))
              (if (g$ratnum?$21120$1XGIwa g$num$21431$1XGIwa)
                (if (g$=$21261$1XGIwa
                      (g$ratnum-denominator$21121$1XGIwa
                        g$num$21431$1XGIwa)
                      '1)
                  (g$exact$21158$1XGIwa
                    (g$ratnum-numerator$21122$1XGIwa
                      g$num$21431$1XGIwa))
                  g$num$21431$1XGIwa)
                (if (g$rectnum?$21116$1XGIwa g$num$21431$1XGIwa)
                  (if (g$zero?$21154$1XGIwa
                        (g$rectnum-imag-part$21118$1XGIwa
                          g$num$21431$1XGIwa))
                    (g$exact$21158$1XGIwa
                      (g$rectnum-real-part$21119$1XGIwa
                        g$num$21431$1XGIwa))
                    g$num$21431$1XGIwa)
                  (if (g$fixnum?$20576$1XGIwa g$num$21431$1XGIwa)
                    g$num$21431$1XGIwa
                    (begin
                      '#f
                      (assertion-violation
                        'exact
                        '"not a number"
                        g$num$21431$1XGIwa)))))))))))
   (g$hex-char$21159$1XGIwa
     g$hex-char$21621$1XGIwa
     (case-lambda
       ((g$num$21436$1XGIwa)
        (g$integer->char$20580$1XGIwa
          (+ g$num$21436$1XGIwa
             (g$char->integer$20579$1XGIwa
               (if (g$fx<?$25029$1XGIwa g$num$21436$1XGIwa '10)
                 '#\0
                 '#\W)))))))
   (g$fixnum->string$21160$1XGIwa
     g$fixnum->string$21622$1XGIwa
     (case-lambda
       ((g$num$21437$1XGIwa g$radix$21438$1XGIwa)
        (if (g$fxnegative?$25049$1XGIwa g$num$21437$1XGIwa)
          (g$string-append$20591$1XGIwa
            '"-"
            (g$number->string$21162$1XGIwa
              (g$abs$21320$1XGIwa g$num$21437$1XGIwa)
              g$radix$21438$1XGIwa))
          (clr-call-internal
            'System.Convert
            '"ToString(Int32,Int32)"
            '()
            g$num$21437$1XGIwa
            g$radix$21438$1XGIwa)))))
   (g$bignum->string$21161$1XGIwa
     g$bignum->string$21623$1XGIwa
     (case-lambda
       ((g$num$21439$1XGIwa g$radix$21440$1XGIwa)
        ((case-lambda
           ((g$neg?$21441$1XGIwa)
            ((case-lambda
               ((g$num$21442$1XGIwa)
                ((case-lambda
                   ((g$out$21443$1XGIwa)
                    (if g$neg?$21441$1XGIwa
                      (g$string-append$20591$1XGIwa
                        '"-"
                        g$out$21443$1XGIwa)
                      g$out$21443$1XGIwa)))
                 ((letrec ((g$f$21444$1XGIwa
                             (case-lambda
                               ((g$num$21445$1XGIwa g$a$21446$1XGIwa)
                                (if (g$zero?$21154$1XGIwa
                                      g$num$21445$1XGIwa)
                                  (apply
                                    g$string$20587$1XGIwa
                                    g$a$21446$1XGIwa)
                                  (g$f$21444$1XGIwa
                                    (g$div$21319$1XGIwa
                                      g$num$21445$1XGIwa
                                      g$radix$21440$1XGIwa)
                                    (cons
                                      (g$hex-char$21159$1XGIwa
                                        (g$mod$20596$1XGIwa
                                          g$num$21445$1XGIwa
                                          g$radix$21440$1XGIwa))
                                      g$a$21446$1XGIwa)))))))
                    g$f$21444$1XGIwa)
                  g$num$21442$1XGIwa
                  '()))))
             (g$abs$21320$1XGIwa g$num$21439$1XGIwa))))
         (g$negative?$21156$1XGIwa g$num$21439$1XGIwa)))))
   (g$number->string$21162$1XGIwa
     g$number->string$21624$1XGIwa
     (case-lambda
       ((g$num$21447$1XGIwa)
        (g$number->string$21162$1XGIwa g$num$21447$1XGIwa '10))
       ((g$num$21448$1XGIwa g$radix$21449$1XGIwa g$prec$21450$1XGIwa)
        (g$number->string$21162$1XGIwa
          g$num$21448$1XGIwa
          g$radix$21449$1XGIwa))
       ((g$num$21451$1XGIwa g$radix$21452$1XGIwa)
        (if (g$fixnum?$20576$1XGIwa g$num$21451$1XGIwa)
          (g$fixnum->string$21160$1XGIwa
            g$num$21451$1XGIwa
            g$radix$21452$1XGIwa)
          (if (g$flonum?$20577$1XGIwa g$num$21451$1XGIwa)
            (begin
              (if (not (g$=$21261$1XGIwa g$radix$21452$1XGIwa '10))
                (assertion-violation
                  'number->string
                  '"invalid radix"
                  g$radix$21452$1XGIwa)
                (void))
              (flonum->string g$num$21451$1XGIwa))
            (if (g$ratnum?$21120$1XGIwa g$num$21451$1XGIwa)
              (g$string-append$20591$1XGIwa
                (if (g$negative?$21156$1XGIwa g$num$21451$1XGIwa)
                  '"-"
                  '"")
                (g$number->string$21162$1XGIwa
                  (g$abs$21320$1XGIwa
                    (g$ratnum-numerator$21122$1XGIwa
                      g$num$21451$1XGIwa))
                  g$radix$21452$1XGIwa)
                '"/"
                (g$number->string$21162$1XGIwa
                  (g$abs$21320$1XGIwa
                    (g$ratnum-denominator$21121$1XGIwa
                      g$num$21451$1XGIwa))
                  g$radix$21452$1XGIwa))
              (if (g$bignum?$21115$1XGIwa g$num$21451$1XGIwa)
                (g$bignum->string$21161$1XGIwa
                  g$num$21451$1XGIwa
                  g$radix$21452$1XGIwa)
                (if (g$complexnum?$21123$1XGIwa g$num$21451$1XGIwa)
                  (begin
                    (if (not (g$=$21261$1XGIwa
                               g$radix$21452$1XGIwa
                               '10))
                      (assertion-violation
                        'number->string
                        '"invalid radix"
                        g$radix$21452$1XGIwa)
                      (void))
                    (g$string-append$20591$1XGIwa
                      (if (g$zero?$21154$1XGIwa
                            (g$real-part$21273$1XGIwa
                              g$num$21451$1XGIwa))
                        '""
                        (g$number->string$21162$1XGIwa
                          (g$real-part$21273$1XGIwa g$num$21451$1XGIwa)
                          g$radix$21452$1XGIwa))
                      (if ((case-lambda
                             ((g$i$21453$1XGIwa)
                              ((case-lambda
                                 ((g$t$21454$1XGIwa)
                                  (if g$t$21454$1XGIwa
                                    g$t$21454$1XGIwa
                                    ((case-lambda
                                       ((g$t$21455$1XGIwa)
                                        (if g$t$21455$1XGIwa
                                          g$t$21455$1XGIwa
                                          (begin
                                            '#f
                                            (g$infinite?$21144$1XGIwa
                                              g$i$21453$1XGIwa)))))
                                     (g$nan?$21142$1XGIwa
                                       g$i$21453$1XGIwa)))))
                               (g$negative?$21156$1XGIwa
                                 g$i$21453$1XGIwa))))
                           (g$imag-part$21274$1XGIwa
                             g$num$21451$1XGIwa))
                        '""
                        '"+")
                      (if (g$=$21261$1XGIwa
                            '1.0
                            (g$imag-part$21274$1XGIwa
                              g$num$21451$1XGIwa))
                        '""
                        (g$number->string$21162$1XGIwa
                          (g$imag-part$21274$1XGIwa g$num$21451$1XGIwa)
                          g$radix$21452$1XGIwa))
                      '"i"))
                  (if (g$rectnum?$21116$1XGIwa g$num$21451$1XGIwa)
                    (g$string-append$20591$1XGIwa
                      (if (g$zero?$21154$1XGIwa
                            (g$real-part$21273$1XGIwa
                              g$num$21451$1XGIwa))
                        '""
                        (g$number->string$21162$1XGIwa
                          (g$real-part$21273$1XGIwa g$num$21451$1XGIwa)
                          g$radix$21452$1XGIwa))
                      (if (g$negative?$21156$1XGIwa
                            (g$imag-part$21274$1XGIwa
                              g$num$21451$1XGIwa))
                        '""
                        '"+")
                      (if (g$=$21261$1XGIwa
                            '1
                            (g$imag-part$21274$1XGIwa
                              g$num$21451$1XGIwa))
                        '""
                        (g$number->string$21162$1XGIwa
                          (g$imag-part$21274$1XGIwa g$num$21451$1XGIwa)
                          g$radix$21452$1XGIwa))
                      '"i")
                    (begin
                      '#f
                      (assertion-violation
                        'number->string
                        '"not a number"
                        g$num$21451$1XGIwa)))))))))))
   (g$=$21261$1XGIwa
     g$=$21625$1XGIwa
     (case-lambda
       ((g$a$21456$1XGIwa g$b$21457$1XGIwa)
        (if (if (g$real?$21148$1XGIwa g$a$21456$1XGIwa)
              (if (g$real?$21148$1XGIwa g$b$21457$1XGIwa)
                (if (g$finite?$21143$1XGIwa g$a$21456$1XGIwa)
                  (if (g$finite?$21143$1XGIwa g$b$21457$1XGIwa)
                    (if (not (g$nan?$21142$1XGIwa g$a$21456$1XGIwa))
                      (begin
                        '#f
                        (not (g$nan?$21142$1XGIwa g$b$21457$1XGIwa)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx=?
            (exact-compare
              (g$exact$21158$1XGIwa g$a$21456$1XGIwa)
              (g$exact$21158$1XGIwa g$b$21457$1XGIwa))
            '0)
          (if ((case-lambda
                 ((g$t$21458$1XGIwa)
                  (if g$t$21458$1XGIwa
                    g$t$21458$1XGIwa
                    (begin
                      '#f
                      (if (g$real?$21148$1XGIwa g$b$21457$1XGIwa)
                        (begin
                          '#f
                          (g$nan?$21142$1XGIwa g$b$21457$1XGIwa))
                        '#f)))))
               (if (g$real?$21148$1XGIwa g$a$21456$1XGIwa)
                 (begin '#f (g$nan?$21142$1XGIwa g$a$21456$1XGIwa))
                 '#f))
            '#f
            (if (if (g$number?$21141$1XGIwa g$a$21456$1XGIwa)
                  (begin '#f (g$number?$21141$1XGIwa g$b$21457$1XGIwa))
                  '#f)
              (inexact=?
                (g$inexact$21157$1XGIwa g$a$21456$1XGIwa)
                (g$inexact$21157$1XGIwa g$b$21457$1XGIwa))
              (begin
                '#f
                (assertion-violation
                  '=
                  '"not number arguments"
                  g$a$21456$1XGIwa
                  g$b$21457$1XGIwa))))))
       ((g$x1$21459$1XGIwa g$x2$21460$1XGIwa . g$rest$21461$1XGIwa)
        ((letrec ((g$f$21462$1XGIwa
                    (case-lambda
                      ((g$a$21463$1XGIwa g$b$21464$1XGIwa)
                       (if (null? g$b$21464$1XGIwa)
                         '#t
                         (if (g$=$21261$1XGIwa
                               g$a$21463$1XGIwa
                               ($car g$b$21464$1XGIwa))
                           (g$f$21462$1XGIwa
                             ($car g$b$21464$1XGIwa)
                             ($cdr g$b$21464$1XGIwa))
                           (begin '#f '#f)))))))
           g$f$21462$1XGIwa)
         g$x1$21459$1XGIwa
         (cons g$x2$21460$1XGIwa g$rest$21461$1XGIwa)))))
   (g$<$21262$1XGIwa
     g$<$21626$1XGIwa
     (case-lambda
       ((g$a$21465$1XGIwa g$b$21466$1XGIwa)
        (if (if (g$real?$21148$1XGIwa g$a$21465$1XGIwa)
              (if (g$real?$21148$1XGIwa g$b$21466$1XGIwa)
                (if (g$finite?$21143$1XGIwa g$a$21465$1XGIwa)
                  (if (g$finite?$21143$1XGIwa g$b$21466$1XGIwa)
                    (if (not (g$nan?$21142$1XGIwa g$a$21465$1XGIwa))
                      (begin
                        '#f
                        (not (g$nan?$21142$1XGIwa g$b$21466$1XGIwa)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx<?
            (exact-compare
              (g$exact$21158$1XGIwa g$a$21465$1XGIwa)
              (g$exact$21158$1XGIwa g$b$21466$1XGIwa))
            '0)
          (if ((case-lambda
                 ((g$t$21467$1XGIwa)
                  (if g$t$21467$1XGIwa
                    g$t$21467$1XGIwa
                    (begin
                      '#f
                      (if (g$real?$21148$1XGIwa g$b$21466$1XGIwa)
                        (begin
                          '#f
                          (g$nan?$21142$1XGIwa g$b$21466$1XGIwa))
                        '#f)))))
               (if (g$real?$21148$1XGIwa g$a$21465$1XGIwa)
                 (begin '#f (g$nan?$21142$1XGIwa g$a$21465$1XGIwa))
                 '#f))
            '#f
            (if (if (g$real?$21148$1XGIwa g$a$21465$1XGIwa)
                  (begin '#f (g$real?$21148$1XGIwa g$b$21466$1XGIwa))
                  '#f)
              ($fx<?
                (inexact-compare
                  (g$inexact$21157$1XGIwa g$a$21465$1XGIwa)
                  (g$inexact$21157$1XGIwa g$b$21466$1XGIwa))
                '0)
              (begin
                '#f
                (assertion-violation
                  '<
                  '"not real arguments"
                  g$a$21465$1XGIwa
                  g$b$21466$1XGIwa))))))
       ((g$x1$21468$1XGIwa g$x2$21469$1XGIwa . g$rest$21470$1XGIwa)
        ((letrec ((g$f$21471$1XGIwa
                    (case-lambda
                      ((g$a$21472$1XGIwa g$b$21473$1XGIwa)
                       (if (null? g$b$21473$1XGIwa)
                         '#t
                         (if (g$<$21262$1XGIwa
                               g$a$21472$1XGIwa
                               ($car g$b$21473$1XGIwa))
                           (g$f$21471$1XGIwa
                             ($car g$b$21473$1XGIwa)
                             ($cdr g$b$21473$1XGIwa))
                           (begin '#f '#f)))))))
           g$f$21471$1XGIwa)
         g$x1$21468$1XGIwa
         (cons g$x2$21469$1XGIwa g$rest$21470$1XGIwa)))))
   (g$<=$21263$1XGIwa
     g$<=$21627$1XGIwa
     (case-lambda
       ((g$a$21474$1XGIwa g$b$21475$1XGIwa)
        (if (if (g$real?$21148$1XGIwa g$a$21474$1XGIwa)
              (if (g$real?$21148$1XGIwa g$b$21475$1XGIwa)
                (if (g$finite?$21143$1XGIwa g$a$21474$1XGIwa)
                  (if (g$finite?$21143$1XGIwa g$b$21475$1XGIwa)
                    (if (not (g$nan?$21142$1XGIwa g$a$21474$1XGIwa))
                      (begin
                        '#f
                        (not (g$nan?$21142$1XGIwa g$b$21475$1XGIwa)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx<=?
            (exact-compare
              (g$exact$21158$1XGIwa g$a$21474$1XGIwa)
              (g$exact$21158$1XGIwa g$b$21475$1XGIwa))
            '0)
          (if ((case-lambda
                 ((g$t$21476$1XGIwa)
                  (if g$t$21476$1XGIwa
                    g$t$21476$1XGIwa
                    (begin
                      '#f
                      (if (g$real?$21148$1XGIwa g$b$21475$1XGIwa)
                        (begin
                          '#f
                          (g$nan?$21142$1XGIwa g$b$21475$1XGIwa))
                        '#f)))))
               (if (g$real?$21148$1XGIwa g$a$21474$1XGIwa)
                 (begin '#f (g$nan?$21142$1XGIwa g$a$21474$1XGIwa))
                 '#f))
            '#f
            (if (if (g$real?$21148$1XGIwa g$a$21474$1XGIwa)
                  (begin '#f (g$real?$21148$1XGIwa g$b$21475$1XGIwa))
                  '#f)
              ($fx<=?
                (inexact-compare
                  (g$inexact$21157$1XGIwa g$a$21474$1XGIwa)
                  (g$inexact$21157$1XGIwa g$b$21475$1XGIwa))
                '0)
              (begin
                '#f
                (assertion-violation
                  '<=
                  '"not real arguments"
                  g$a$21474$1XGIwa
                  g$b$21475$1XGIwa))))))
       ((g$x1$21477$1XGIwa g$x2$21478$1XGIwa . g$rest$21479$1XGIwa)
        ((letrec ((g$f$21480$1XGIwa
                    (case-lambda
                      ((g$a$21481$1XGIwa g$b$21482$1XGIwa)
                       (if (null? g$b$21482$1XGIwa)
                         '#t
                         (if (g$<=$21263$1XGIwa
                               g$a$21481$1XGIwa
                               ($car g$b$21482$1XGIwa))
                           (g$f$21480$1XGIwa
                             ($car g$b$21482$1XGIwa)
                             ($cdr g$b$21482$1XGIwa))
                           (begin '#f '#f)))))))
           g$f$21480$1XGIwa)
         g$x1$21477$1XGIwa
         (cons g$x2$21478$1XGIwa g$rest$21479$1XGIwa)))))
   (g$>$21264$1XGIwa
     g$>$21628$1XGIwa
     (case-lambda
       ((g$a$21483$1XGIwa g$b$21484$1XGIwa)
        (if (if (g$real?$21148$1XGIwa g$a$21483$1XGIwa)
              (if (g$real?$21148$1XGIwa g$b$21484$1XGIwa)
                (if (g$finite?$21143$1XGIwa g$a$21483$1XGIwa)
                  (if (g$finite?$21143$1XGIwa g$b$21484$1XGIwa)
                    (if (not (g$nan?$21142$1XGIwa g$a$21483$1XGIwa))
                      (begin
                        '#f
                        (not (g$nan?$21142$1XGIwa g$b$21484$1XGIwa)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx>?
            (exact-compare
              (g$exact$21158$1XGIwa g$a$21483$1XGIwa)
              (g$exact$21158$1XGIwa g$b$21484$1XGIwa))
            '0)
          (if ((case-lambda
                 ((g$t$21485$1XGIwa)
                  (if g$t$21485$1XGIwa
                    g$t$21485$1XGIwa
                    (begin
                      '#f
                      (if (g$real?$21148$1XGIwa g$b$21484$1XGIwa)
                        (begin
                          '#f
                          (g$nan?$21142$1XGIwa g$b$21484$1XGIwa))
                        '#f)))))
               (if (g$real?$21148$1XGIwa g$a$21483$1XGIwa)
                 (begin '#f (g$nan?$21142$1XGIwa g$a$21483$1XGIwa))
                 '#f))
            '#f
            (if (if (g$real?$21148$1XGIwa g$a$21483$1XGIwa)
                  (begin '#f (g$real?$21148$1XGIwa g$b$21484$1XGIwa))
                  '#f)
              ($fx>?
                (inexact-compare
                  (g$inexact$21157$1XGIwa g$a$21483$1XGIwa)
                  (g$inexact$21157$1XGIwa g$b$21484$1XGIwa))
                '0)
              (begin
                '#f
                (assertion-violation
                  '>
                  '"not real arguments"
                  g$a$21483$1XGIwa
                  g$b$21484$1XGIwa))))))
       ((g$x1$21486$1XGIwa g$x2$21487$1XGIwa . g$rest$21488$1XGIwa)
        ((letrec ((g$f$21489$1XGIwa
                    (case-lambda
                      ((g$a$21490$1XGIwa g$b$21491$1XGIwa)
                       (if (null? g$b$21491$1XGIwa)
                         '#t
                         (if (g$>$21264$1XGIwa
                               g$a$21490$1XGIwa
                               ($car g$b$21491$1XGIwa))
                           (g$f$21489$1XGIwa
                             ($car g$b$21491$1XGIwa)
                             ($cdr g$b$21491$1XGIwa))
                           (begin '#f '#f)))))))
           g$f$21489$1XGIwa)
         g$x1$21486$1XGIwa
         (cons g$x2$21487$1XGIwa g$rest$21488$1XGIwa)))))
   (g$>=$21265$1XGIwa
     g$>=$21629$1XGIwa
     (case-lambda
       ((g$a$21492$1XGIwa g$b$21493$1XGIwa)
        (if (if (g$real?$21148$1XGIwa g$a$21492$1XGIwa)
              (if (g$real?$21148$1XGIwa g$b$21493$1XGIwa)
                (if (g$finite?$21143$1XGIwa g$a$21492$1XGIwa)
                  (if (g$finite?$21143$1XGIwa g$b$21493$1XGIwa)
                    (if (not (g$nan?$21142$1XGIwa g$a$21492$1XGIwa))
                      (begin
                        '#f
                        (not (g$nan?$21142$1XGIwa g$b$21493$1XGIwa)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx>=?
            (exact-compare
              (g$exact$21158$1XGIwa g$a$21492$1XGIwa)
              (g$exact$21158$1XGIwa g$b$21493$1XGIwa))
            '0)
          (if ((case-lambda
                 ((g$t$21494$1XGIwa)
                  (if g$t$21494$1XGIwa
                    g$t$21494$1XGIwa
                    (begin
                      '#f
                      (if (g$real?$21148$1XGIwa g$b$21493$1XGIwa)
                        (begin
                          '#f
                          (g$nan?$21142$1XGIwa g$b$21493$1XGIwa))
                        '#f)))))
               (if (g$real?$21148$1XGIwa g$a$21492$1XGIwa)
                 (begin '#f (g$nan?$21142$1XGIwa g$a$21492$1XGIwa))
                 '#f))
            '#f
            (if (if (g$real?$21148$1XGIwa g$a$21492$1XGIwa)
                  (begin '#f (g$real?$21148$1XGIwa g$b$21493$1XGIwa))
                  '#f)
              ($fx>=?
                (inexact-compare
                  (g$inexact$21157$1XGIwa g$a$21492$1XGIwa)
                  (g$inexact$21157$1XGIwa g$b$21493$1XGIwa))
                '0)
              (begin
                '#f
                (assertion-violation
                  '>=
                  '"not real arguments"
                  g$a$21492$1XGIwa
                  g$b$21493$1XGIwa))))))
       ((g$x1$21495$1XGIwa g$x2$21496$1XGIwa . g$rest$21497$1XGIwa)
        ((letrec ((g$f$21498$1XGIwa
                    (case-lambda
                      ((g$a$21499$1XGIwa g$b$21500$1XGIwa)
                       (if (null? g$b$21500$1XGIwa)
                         '#t
                         (if (g$>=$21265$1XGIwa
                               g$a$21499$1XGIwa
                               ($car g$b$21500$1XGIwa))
                           (g$f$21498$1XGIwa
                             ($car g$b$21500$1XGIwa)
                             ($cdr g$b$21500$1XGIwa))
                           (begin '#f '#f)))))))
           g$f$21498$1XGIwa)
         g$x1$21495$1XGIwa
         (cons g$x2$21496$1XGIwa g$rest$21497$1XGIwa)))))
   (g$make-rectangular$21266$1XGIwa
     g$make-rectangular$21630$1XGIwa
     (case-lambda
       ((g$r1$21501$1XGIwa g$r2$21502$1XGIwa)
        (begin
          (if (not (g$real?$21148$1XGIwa g$r1$21501$1XGIwa))
            (assertion-violation
              'make-rectangular
              '"not a real"
              g$r1$21501$1XGIwa)
            (void))
          (if (not (g$real?$21148$1XGIwa g$r2$21502$1XGIwa))
            (assertion-violation
              'make-rectangular
              '"not a real"
              g$r2$21502$1XGIwa)
            (void))
          (if (if (g$exact?$21145$1XGIwa g$r1$21501$1XGIwa)
                (begin '#f (g$exact?$21145$1XGIwa g$r2$21502$1XGIwa))
                '#f)
            (g$make-rectnum$21117$1XGIwa
              (g$->ratnum$21137$1XGIwa g$r1$21501$1XGIwa)
              (g$->ratnum$21137$1XGIwa g$r2$21502$1XGIwa))
            (if (if (g$exact?$21145$1XGIwa g$r2$21502$1XGIwa)
                  (begin '#f (g$zero?$21154$1XGIwa g$r2$21502$1XGIwa))
                  '#f)
              g$r1$21501$1XGIwa
              (begin
                '#f
                (g$make-complexnum$21124$1XGIwa
                  (g$inexact$21157$1XGIwa g$r1$21501$1XGIwa)
                  (g$inexact$21157$1XGIwa g$r2$21502$1XGIwa)))))))))
   (g$make-polar$21267$1XGIwa
     g$make-polar$21631$1XGIwa
     (case-lambda
       ((g$r1$21503$1XGIwa g$r2$21504$1XGIwa)
        (begin
          (if (not (g$real?$21148$1XGIwa g$r1$21503$1XGIwa))
            (assertion-violation
              'make-polar
              '"not a real"
              g$r1$21503$1XGIwa)
            (void))
          (if (not (g$real?$21148$1XGIwa g$r2$21504$1XGIwa))
            (assertion-violation
              'make-polar
              '"not a real"
              g$r2$21504$1XGIwa)
            (void))
          (if (if (g$exact?$21145$1XGIwa g$r2$21504$1XGIwa)
                (begin '#f (g$zero?$21154$1XGIwa g$r2$21504$1XGIwa))
                '#f)
            g$r1$21503$1XGIwa
            (* g$r1$21503$1XGIwa
               (g$make-rectangular$21266$1XGIwa
                 (g$cos$21312$1XGIwa g$r2$21504$1XGIwa)
                 (g$sin$21309$1XGIwa g$r2$21504$1XGIwa))))))))
   (g$angle$21268$1XGIwa
     g$angle$21632$1XGIwa
     (case-lambda
       ((g$num$21505$1XGIwa)
        (begin
          (if (not (g$number?$21141$1XGIwa g$num$21505$1XGIwa))
            (assertion-violation
              'angle
              '"not a number"
              g$num$21505$1XGIwa)
            (void))
          (if (g$rectnum?$21116$1XGIwa g$num$21505$1XGIwa)
            (g$angle$21268$1XGIwa
              (g$inexact$21157$1XGIwa g$num$21505$1XGIwa))
            (g$atan$21317$1XGIwa
              (g$imag-part$21274$1XGIwa g$num$21505$1XGIwa)
              (g$real-part$21273$1XGIwa g$num$21505$1XGIwa)))))))
   (g$magnitude$21269$1XGIwa
     g$magnitude$21633$1XGIwa
     (case-lambda
       ((g$num$21506$1XGIwa)
        (if (g$rectnum?$21116$1XGIwa g$num$21506$1XGIwa)
          (g$magnitude$21269$1XGIwa
            (g$inexact$21157$1XGIwa g$num$21506$1XGIwa))
          (if (g$complexnum?$21123$1XGIwa g$num$21506$1XGIwa)
            ((case-lambda
               ((g$i$21507$1XGIwa g$r$21508$1XGIwa)
                (g$sqrt$21325$1XGIwa
                  (+ (* g$i$21507$1XGIwa g$i$21507$1XGIwa)
                     (* g$r$21508$1XGIwa g$r$21508$1XGIwa)))))
             (g$imag-part$21274$1XGIwa g$num$21506$1XGIwa)
             (g$real-part$21273$1XGIwa g$num$21506$1XGIwa))
            (if (g$real?$21148$1XGIwa g$num$21506$1XGIwa)
              (g$abs$21320$1XGIwa g$num$21506$1XGIwa)
              (begin
                '#f
                (assertion-violation
                  'magnitude
                  '"not a number"
                  g$num$21506$1XGIwa))))))))
   (g$exact-integer?$21270$1XGIwa
     g$exact-integer?$21634$1XGIwa
     (case-lambda
       ((g$obj$21509$1XGIwa)
        ((case-lambda
           ((g$t$21510$1XGIwa)
            (if g$t$21510$1XGIwa
              g$t$21510$1XGIwa
              (begin '#f (g$bignum?$21115$1XGIwa g$obj$21509$1XGIwa)))))
         (g$fixnum?$20576$1XGIwa g$obj$21509$1XGIwa)))))
   (g$numerator$21271$1XGIwa
     g$numerator$21635$1XGIwa
     (case-lambda
       ((g$num$21511$1XGIwa)
        (if (g$exact-integer?$21270$1XGIwa g$num$21511$1XGIwa)
          g$num$21511$1XGIwa
          (if (g$ratnum?$21120$1XGIwa g$num$21511$1XGIwa)
            (g$exact$21158$1XGIwa
              (g$ratnum-numerator$21122$1XGIwa g$num$21511$1XGIwa))
            (if (if (g$real?$21148$1XGIwa g$num$21511$1XGIwa)
                  (if (g$finite?$21143$1XGIwa g$num$21511$1XGIwa)
                    (begin
                      '#f
                      (not (g$nan?$21142$1XGIwa g$num$21511$1XGIwa)))
                    '#f)
                  '#f)
              (g$inexact$21157$1XGIwa
                (g$numerator$21271$1XGIwa
                  (g$exact$21158$1XGIwa g$num$21511$1XGIwa)))
              (begin
                '#f
                (assertion-violation
                  'numerator
                  '"not a real"
                  g$num$21511$1XGIwa))))))))
   (g$denominator$21272$1XGIwa
     g$denominator$21636$1XGIwa
     (case-lambda
       ((g$num$21512$1XGIwa)
        (if (g$exact-integer?$21270$1XGIwa g$num$21512$1XGIwa)
          '1
          (if (g$ratnum?$21120$1XGIwa g$num$21512$1XGIwa)
            (g$exact$21158$1XGIwa
              (g$ratnum-denominator$21121$1XGIwa g$num$21512$1XGIwa))
            (if (if (g$real?$21148$1XGIwa g$num$21512$1XGIwa)
                  (if (g$finite?$21143$1XGIwa g$num$21512$1XGIwa)
                    (begin
                      '#f
                      (not (g$nan?$21142$1XGIwa g$num$21512$1XGIwa)))
                    '#f)
                  '#f)
              (g$inexact$21157$1XGIwa
                (g$denominator$21272$1XGIwa
                  (g$exact$21158$1XGIwa g$num$21512$1XGIwa)))
              (begin
                '#f
                (assertion-violation
                  'denominator
                  '"not a real"
                  g$num$21512$1XGIwa))))))))
   (g$real-part$21273$1XGIwa
     g$real-part$21637$1XGIwa
     (case-lambda
       ((g$num$21513$1XGIwa)
        (if (g$complexnum?$21123$1XGIwa g$num$21513$1XGIwa)
          (g$complexnum-real-part$21126$1XGIwa g$num$21513$1XGIwa)
          (if (g$rectnum?$21116$1XGIwa g$num$21513$1XGIwa)
            (g$exact$21158$1XGIwa
              (g$rectnum-real-part$21119$1XGIwa g$num$21513$1XGIwa))
            (if (g$real?$21148$1XGIwa g$num$21513$1XGIwa)
              g$num$21513$1XGIwa
              (begin
                '#f
                (assertion-violation
                  'real-part
                  '"not a number"
                  g$num$21513$1XGIwa))))))))
   (g$imag-part$21274$1XGIwa
     g$imag-part$21638$1XGIwa
     (case-lambda
       ((g$num$21514$1XGIwa)
        (if (g$complexnum?$21123$1XGIwa g$num$21514$1XGIwa)
          (g$complexnum-imag-part$21125$1XGIwa g$num$21514$1XGIwa)
          (if (g$rectnum?$21116$1XGIwa g$num$21514$1XGIwa)
            (g$exact$21158$1XGIwa
              (g$rectnum-imag-part$21118$1XGIwa g$num$21514$1XGIwa))
            (if (g$real?$21148$1XGIwa g$num$21514$1XGIwa)
              '0
              (begin
                '#f
                (assertion-violation
                  'imag-part
                  '"not a number"
                  g$num$21514$1XGIwa))))))))
   (g$exp$21308$1XGIwa
     g$exp$21639$1XGIwa
     (case-lambda
       ((g$num$21515$1XGIwa)
        (if (g$rectnum?$21116$1XGIwa g$num$21515$1XGIwa)
          (g$exp$21308$1XGIwa
            (g$rectnum->complexnum$21135$1XGIwa g$num$21515$1XGIwa))
          (if (g$complexnum?$21123$1XGIwa g$num$21515$1XGIwa)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'exp
              '()
              g$num$21515$1XGIwa)
            (if (g$real?$21148$1XGIwa g$num$21515$1XGIwa)
              (clr-call-internal
                'System.Math
                'exp
                '()
                (g$inexact$21157$1XGIwa g$num$21515$1XGIwa))
              (begin
                '#f
                (assertion-violation
                  'exp
                  '"not a number"
                  g$num$21515$1XGIwa))))))))
   (g$sin$21309$1XGIwa
     g$sin$21640$1XGIwa
     (case-lambda
       ((g$num$21516$1XGIwa)
        (if (g$rectnum?$21116$1XGIwa g$num$21516$1XGIwa)
          (g$sin$21309$1XGIwa
            (g$rectnum->complexnum$21135$1XGIwa g$num$21516$1XGIwa))
          (if (g$complexnum?$21123$1XGIwa g$num$21516$1XGIwa)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'sin
              '()
              g$num$21516$1XGIwa)
            (if (g$real?$21148$1XGIwa g$num$21516$1XGIwa)
              (clr-call-internal
                'System.Math
                'sin
                '()
                (g$inexact$21157$1XGIwa g$num$21516$1XGIwa))
              (begin
                '#f
                (assertion-violation
                  'sin
                  '"not a number"
                  g$num$21516$1XGIwa))))))))
   (g$asin$21310$1XGIwa
     g$asin$21641$1XGIwa
     (case-lambda
       ((g$num$21517$1XGIwa)
        (if (g$rectnum?$21116$1XGIwa g$num$21517$1XGIwa)
          (g$asin$21310$1XGIwa
            (g$rectnum->complexnum$21135$1XGIwa g$num$21517$1XGIwa))
          (if (g$complexnum?$21123$1XGIwa g$num$21517$1XGIwa)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'asin
              '()
              g$num$21517$1XGIwa)
            (if (g$real?$21148$1XGIwa g$num$21517$1XGIwa)
              (clr-call-internal
                'System.Math
                'asin
                '()
                (g$inexact$21157$1XGIwa g$num$21517$1XGIwa))
              (begin
                '#f
                (assertion-violation
                  'asin
                  '"not a number"
                  g$num$21517$1XGIwa))))))))
   (g$sinh$21311$1XGIwa
     g$sinh$21642$1XGIwa
     (case-lambda
       ((g$num$21518$1XGIwa)
        (if (g$rectnum?$21116$1XGIwa g$num$21518$1XGIwa)
          (g$sinh$21311$1XGIwa
            (g$rectnum->complexnum$21135$1XGIwa g$num$21518$1XGIwa))
          (if (g$complexnum?$21123$1XGIwa g$num$21518$1XGIwa)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'sinh
              '()
              g$num$21518$1XGIwa)
            (if (g$real?$21148$1XGIwa g$num$21518$1XGIwa)
              (clr-call-internal
                'System.Math
                'sinh
                '()
                (g$inexact$21157$1XGIwa g$num$21518$1XGIwa))
              (begin
                '#f
                (assertion-violation
                  'sinh
                  '"not a number"
                  g$num$21518$1XGIwa))))))))
   (g$cos$21312$1XGIwa
     g$cos$21643$1XGIwa
     (case-lambda
       ((g$num$21519$1XGIwa)
        (if (g$rectnum?$21116$1XGIwa g$num$21519$1XGIwa)
          (g$cos$21312$1XGIwa
            (g$rectnum->complexnum$21135$1XGIwa g$num$21519$1XGIwa))
          (if (g$complexnum?$21123$1XGIwa g$num$21519$1XGIwa)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'cos
              '()
              g$num$21519$1XGIwa)
            (if (g$real?$21148$1XGIwa g$num$21519$1XGIwa)
              (clr-call-internal
                'System.Math
                'cos
                '()
                (g$inexact$21157$1XGIwa g$num$21519$1XGIwa))
              (begin
                '#f
                (assertion-violation
                  'cos
                  '"not a number"
                  g$num$21519$1XGIwa))))))))
   (g$acos$21313$1XGIwa
     g$acos$21644$1XGIwa
     (case-lambda
       ((g$num$21520$1XGIwa)
        (if (g$rectnum?$21116$1XGIwa g$num$21520$1XGIwa)
          (g$acos$21313$1XGIwa
            (g$rectnum->complexnum$21135$1XGIwa g$num$21520$1XGIwa))
          (if (g$complexnum?$21123$1XGIwa g$num$21520$1XGIwa)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'acos
              '()
              g$num$21520$1XGIwa)
            (if (g$real?$21148$1XGIwa g$num$21520$1XGIwa)
              (clr-call-internal
                'System.Math
                'acos
                '()
                (g$inexact$21157$1XGIwa g$num$21520$1XGIwa))
              (begin
                '#f
                (assertion-violation
                  'acos
                  '"not a number"
                  g$num$21520$1XGIwa))))))))
   (g$cosh$21314$1XGIwa
     g$cosh$21645$1XGIwa
     (case-lambda
       ((g$num$21521$1XGIwa)
        (if (g$rectnum?$21116$1XGIwa g$num$21521$1XGIwa)
          (g$cosh$21314$1XGIwa
            (g$rectnum->complexnum$21135$1XGIwa g$num$21521$1XGIwa))
          (if (g$complexnum?$21123$1XGIwa g$num$21521$1XGIwa)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'cosh
              '()
              g$num$21521$1XGIwa)
            (if (g$real?$21148$1XGIwa g$num$21521$1XGIwa)
              (clr-call-internal
                'System.Math
                'cosh
                '()
                (g$inexact$21157$1XGIwa g$num$21521$1XGIwa))
              (begin
                '#f
                (assertion-violation
                  'cosh
                  '"not a number"
                  g$num$21521$1XGIwa))))))))
   (g$tan$21315$1XGIwa
     g$tan$21646$1XGIwa
     (case-lambda
       ((g$num$21522$1XGIwa)
        (if (g$rectnum?$21116$1XGIwa g$num$21522$1XGIwa)
          (g$tan$21315$1XGIwa
            (g$rectnum->complexnum$21135$1XGIwa g$num$21522$1XGIwa))
          (if (g$complexnum?$21123$1XGIwa g$num$21522$1XGIwa)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'tan
              '()
              g$num$21522$1XGIwa)
            (if (g$real?$21148$1XGIwa g$num$21522$1XGIwa)
              (clr-call-internal
                'System.Math
                'tan
                '()
                (g$inexact$21157$1XGIwa g$num$21522$1XGIwa))
              (begin
                '#f
                (assertion-violation
                  'tan
                  '"not a number"
                  g$num$21522$1XGIwa))))))))
   (g$tanh$21316$1XGIwa
     g$tanh$21647$1XGIwa
     (case-lambda
       ((g$num$21523$1XGIwa)
        (if (g$rectnum?$21116$1XGIwa g$num$21523$1XGIwa)
          (g$tanh$21316$1XGIwa
            (g$rectnum->complexnum$21135$1XGIwa g$num$21523$1XGIwa))
          (if (g$complexnum?$21123$1XGIwa g$num$21523$1XGIwa)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'tanh
              '()
              g$num$21523$1XGIwa)
            (if (g$real?$21148$1XGIwa g$num$21523$1XGIwa)
              (clr-call-internal
                'System.Math
                'tanh
                '()
                (g$inexact$21157$1XGIwa g$num$21523$1XGIwa))
              (begin
                '#f
                (assertion-violation
                  'tanh
                  '"not a number"
                  g$num$21523$1XGIwa))))))))
   (g$atan$21317$1XGIwa
     g$atan$21648$1XGIwa
     (case-lambda
       ((g$num$21524$1XGIwa)
        (if (g$rectnum?$21116$1XGIwa g$num$21524$1XGIwa)
          (g$atan$21317$1XGIwa
            (g$rectnum->complexnum$21135$1XGIwa g$num$21524$1XGIwa))
          (if (g$complexnum?$21123$1XGIwa g$num$21524$1XGIwa)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'Atan
              '()
              g$num$21524$1XGIwa)
            (if (g$real?$21148$1XGIwa g$num$21524$1XGIwa)
              (clr-call-internal
                'System.Math
                'Atan
                '()
                (g$inexact$21157$1XGIwa g$num$21524$1XGIwa))
              (begin
                '#f
                (assertion-violation
                  'atan
                  '"not a number"
                  g$num$21524$1XGIwa))))))
       ((g$num1$21525$1XGIwa g$num2$21526$1XGIwa)
        (begin
          (if (not (g$real?$21148$1XGIwa g$num1$21525$1XGIwa))
            (assertion-violation
              'atan
              '"not a real"
              g$num1$21525$1XGIwa)
            (void))
          (if (not (g$real?$21148$1XGIwa g$num2$21526$1XGIwa))
            (assertion-violation
              'atan
              '"not a real"
              g$num2$21526$1XGIwa)
            (void))
          (clr-call-internal
            'System.Math
            'Atan2
            '()
            (g$inexact$21157$1XGIwa g$num1$21525$1XGIwa)
            (g$inexact$21157$1XGIwa g$num2$21526$1XGIwa))))))
   (g$log$21318$1XGIwa
     g$log$21649$1XGIwa
     (case-lambda
       ((g$num$21527$1XGIwa)
        (begin
          (if (not (g$number?$21141$1XGIwa g$num$21527$1XGIwa))
            (assertion-violation
              'atan
              '"not a number"
              g$num$21527$1XGIwa)
            (void))
          (if (g$rectnum?$21116$1XGIwa g$num$21527$1XGIwa)
            (g$log$21318$1XGIwa
              (g$rectnum->complexnum$21135$1XGIwa g$num$21527$1XGIwa))
            (if (g$complexnum?$21123$1XGIwa g$num$21527$1XGIwa)
              (clr-call-internal
                'Microsoft.Scripting.Math.Complex64
                'Log
                '()
                g$num$21527$1XGIwa)
              (if (g$negative?$21156$1XGIwa g$num$21527$1XGIwa)
                (clr-call-internal
                  'Microsoft.Scripting.Math.Complex64
                  'Log
                  '()
                  (g$make-complexnum$21124$1XGIwa
                    (g$inexact$21157$1XGIwa g$num$21527$1XGIwa)
                    '0.0))
                (if (g$zero?$21154$1XGIwa g$num$21527$1XGIwa)
                  (if (g$exact?$21145$1XGIwa g$num$21527$1XGIwa)
                    (assertion-violation
                      'log
                      '"not possible"
                      g$num$21527$1XGIwa)
                    '-inf.0)
                  (if (g$infinite?$21144$1XGIwa g$num$21527$1XGIwa)
                    (if (g$negative?$21156$1XGIwa g$num$21527$1XGIwa)
                      (g$make-complexnum$21124$1XGIwa
                        (g$inexact$21157$1XGIwa
                          (g$abs$21320$1XGIwa g$num$21527$1XGIwa))
                        '0)
                      g$num$21527$1XGIwa)
                    (begin
                      '#f
                      (clr-call-internal
                        'System.Math
                        'Log
                        '()
                        (g$inexact$21157$1XGIwa
                          g$num$21527$1XGIwa))))))))))
       ((g$num1$21528$1XGIwa g$num2$21529$1XGIwa)
        (/ (g$log$21318$1XGIwa g$num1$21528$1XGIwa)
           (g$log$21318$1XGIwa g$num2$21529$1XGIwa)))))
   (g$div$21319$1XGIwa
     g$div$21650$1XGIwa
     (case-lambda
       ((g$x1$21530$1XGIwa g$x2$21531$1XGIwa)
        (begin
          (if (not (g$real?$21148$1XGIwa g$x1$21530$1XGIwa))
            (assertion-violation 'div '"not a real" g$x1$21530$1XGIwa)
            (void))
          (if (not (g$real?$21148$1XGIwa g$x2$21531$1XGIwa))
            (assertion-violation 'div '"not a real" g$x2$21531$1XGIwa)
            (void))
          (if (g$zero?$21154$1XGIwa g$x2$21531$1XGIwa)
            (assertion-violation
              'div
              '"divide by zero"
              g$x1$21530$1XGIwa
              g$x2$21531$1XGIwa)
            (void))
          (if ((case-lambda
                 ((g$t$21532$1XGIwa)
                  (if g$t$21532$1XGIwa
                    g$t$21532$1XGIwa
                    (begin
                      '#f
                      (g$infinite?$21144$1XGIwa g$x1$21530$1XGIwa)))))
               (g$nan?$21142$1XGIwa g$x1$21530$1XGIwa))
            (assertion-violation
              'div
              '"cannot be nan or infinite"
              g$x1$21530$1XGIwa
              g$x2$21531$1XGIwa)
            (void))
          (call-with-values
            (case-lambda
              (()
               (if (if (g$exact?$21145$1XGIwa g$x1$21530$1XGIwa)
                     (begin
                       '#f
                       (g$exact?$21145$1XGIwa g$x2$21531$1XGIwa))
                     '#f)
                 ((case-lambda
                    ((g$scale$21536$1XGIwa)
                     (values
                       (* g$x1$21530$1XGIwa g$scale$21536$1XGIwa)
                       (* g$x2$21531$1XGIwa g$scale$21536$1XGIwa)
                       '#t)))
                  (* (g$denominator$21272$1XGIwa g$x1$21530$1XGIwa)
                     (g$denominator$21272$1XGIwa g$x2$21531$1XGIwa)))
                 (values g$x1$21530$1XGIwa g$x2$21531$1XGIwa '#f))))
            (case-lambda
              ((g$x1$21537$1XGIwa
                 g$x2$21538$1XGIwa
                 g$exact-args?$21539$1XGIwa)
               ((case-lambda
                  ((g$exact-args?$21540$1XGIwa
                     g$x2$21541$1XGIwa
                     g$x1$21542$1XGIwa)
                   ((case-lambda
                      ((g$d$21543$1XGIwa)
                       (if (if g$exact-args?$21540$1XGIwa
                             (begin
                               '#f
                               (g$rational-valued?$21152$1XGIwa
                                 g$d$21543$1XGIwa))
                             '#f)
                         (g$exact$21158$1XGIwa g$d$21543$1XGIwa)
                         g$d$21543$1XGIwa)))
                    (if (g$positive?$21155$1XGIwa g$x2$21541$1XGIwa)
                      (g$floor$21321$1XGIwa
                        (/ g$x1$21542$1XGIwa g$x2$21541$1XGIwa))
                      (- (g$floor$21321$1XGIwa
                           (/ g$x1$21542$1XGIwa
                              (- g$x2$21541$1XGIwa))))))))
                g$exact-args?$21539$1XGIwa
                g$x2$21538$1XGIwa
                g$x1$21537$1XGIwa))))))))
   (g$abs$21320$1XGIwa
     g$abs$21651$1XGIwa
     (case-lambda
       ((g$x1$21544$1XGIwa)
        (begin
          (if (not (g$real?$21148$1XGIwa g$x1$21544$1XGIwa))
            (assertion-violation 'abs '"not a real" g$x1$21544$1XGIwa)
            (void))
          (if (g$negative?$21156$1XGIwa g$x1$21544$1XGIwa)
            (- g$x1$21544$1XGIwa)
            g$x1$21544$1XGIwa)))))
   (g$floor$21321$1XGIwa
     g$floor$21652$1XGIwa
     (case-lambda
       ((g$x$21545$1XGIwa)
        (begin
          (if (not (g$real?$21148$1XGIwa g$x$21545$1XGIwa))
            (assertion-violation 'floor '"not a real" g$x$21545$1XGIwa)
            (void))
          (if (g$exact-integer?$21270$1XGIwa g$x$21545$1XGIwa)
            g$x$21545$1XGIwa
            (if (g$ratnum?$21120$1XGIwa g$x$21545$1XGIwa)
              ((case-lambda
                 ((g$r$21546$1XGIwa)
                  (g$exact$21158$1XGIwa
                    (if (g$negative?$21156$1XGIwa g$x$21545$1XGIwa)
                      (- g$r$21546$1XGIwa '1)
                      g$r$21546$1XGIwa))))
               (g$bignum/$21127$1XGIwa
                 (g$ratnum-numerator$21122$1XGIwa g$x$21545$1XGIwa)
                 (g$ratnum-denominator$21121$1XGIwa g$x$21545$1XGIwa)))
              (begin
                '#f
                (clr-call-internal
                  'System.Math
                  '"Floor(System.Double)"
                  '()
                  (g$inexact$21157$1XGIwa g$x$21545$1XGIwa)))))))))
   (g$ceiling$21322$1XGIwa
     g$ceiling$21653$1XGIwa
     (case-lambda
       ((g$x$21547$1XGIwa)
        (begin
          (if (not (g$real?$21148$1XGIwa g$x$21547$1XGIwa))
            (assertion-violation
              'ceiling
              '"not a real"
              g$x$21547$1XGIwa)
            (void))
          (if (g$exact-integer?$21270$1XGIwa g$x$21547$1XGIwa)
            g$x$21547$1XGIwa
            (if (g$ratnum?$21120$1XGIwa g$x$21547$1XGIwa)
              ((case-lambda
                 ((g$r$21548$1XGIwa)
                  (g$exact$21158$1XGIwa
                    (if (g$positive?$21155$1XGIwa g$r$21548$1XGIwa)
                      (+ g$r$21548$1XGIwa '1)
                      g$r$21548$1XGIwa))))
               (g$bignum/$21127$1XGIwa
                 (g$ratnum-numerator$21122$1XGIwa g$x$21547$1XGIwa)
                 (g$ratnum-denominator$21121$1XGIwa g$x$21547$1XGIwa)))
              (begin
                '#f
                (clr-call-internal
                  'System.Math
                  '"Ceiling(System.Double)"
                  '()
                  (g$inexact$21157$1XGIwa g$x$21547$1XGIwa)))))))))
   (g$truncate$21323$1XGIwa
     g$truncate$21654$1XGIwa
     (case-lambda
       ((g$x$21549$1XGIwa)
        (begin
          (if (not (g$real?$21148$1XGIwa g$x$21549$1XGIwa))
            (assertion-violation
              'truncate
              '"not a real"
              g$x$21549$1XGIwa)
            (void))
          (if (g$exact-integer?$21270$1XGIwa g$x$21549$1XGIwa)
            g$x$21549$1XGIwa
            (begin
              '#f
              ((case-lambda
                 ((g$r$21550$1XGIwa)
                  (if (g$exact?$21145$1XGIwa g$x$21549$1XGIwa)
                    (g$exact$21158$1XGIwa g$r$21550$1XGIwa)
                    g$r$21550$1XGIwa)))
               (clr-call-internal
                 'System.Math
                 '"Truncate(System.Double)"
                 '()
                 (g$inexact$21157$1XGIwa g$x$21549$1XGIwa)))))))))
   (g$round$21324$1XGIwa
     g$round$21655$1XGIwa
     (case-lambda
       ((g$x$21551$1XGIwa)
        (begin
          (if (not (g$real?$21148$1XGIwa g$x$21551$1XGIwa))
            (assertion-violation 'round '"not a real" g$x$21551$1XGIwa)
            (void))
          (if (g$exact-integer?$21270$1XGIwa g$x$21551$1XGIwa)
            g$x$21551$1XGIwa
            (if (g$ratnum?$21120$1XGIwa g$x$21551$1XGIwa)
              ((case-lambda
                 ((g$num$21552$1XGIwa)
                  ((case-lambda
                     ((g$den$21553$1XGIwa)
                      ((case-lambda
                         ((g$d$21554$1XGIwa)
                          ((case-lambda
                             ((g$r$21555$1XGIwa)
                              ((case-lambda
                                 ((g$hd$21556$1XGIwa)
                                  (if (g$negative?$21156$1XGIwa
                                        g$r$21555$1XGIwa)
                                    (g$exact$21158$1XGIwa
                                      (if (g$>$21264$1XGIwa
                                            (- g$r$21555$1XGIwa)
                                            g$hd$21556$1XGIwa)
                                        (- g$d$21554$1XGIwa '1)
                                        (if (g$<$21262$1XGIwa
                                              (- g$r$21555$1XGIwa)
                                              g$hd$21556$1XGIwa)
                                          g$d$21554$1XGIwa
                                          (if (g$even?$20641$1XGIwa
                                                g$d$21554$1XGIwa)
                                            g$d$21554$1XGIwa
                                            (begin
                                              '#f
                                              (+ g$d$21554$1XGIwa
                                                 '1))))))
                                    (if (g$positive?$21155$1XGIwa
                                          g$r$21555$1XGIwa)
                                      (g$exact$21158$1XGIwa
                                        (if (g$>$21264$1XGIwa
                                              g$r$21555$1XGIwa
                                              g$hd$21556$1XGIwa)
                                          (+ g$d$21554$1XGIwa '1)
                                          (if (g$<$21262$1XGIwa
                                                g$r$21555$1XGIwa
                                                g$hd$21556$1XGIwa)
                                            g$d$21554$1XGIwa
                                            (if (g$even?$20641$1XGIwa
                                                  g$d$21554$1XGIwa)
                                              g$d$21554$1XGIwa
                                              (begin
                                                '#f
                                                (+ g$d$21554$1XGIwa
                                                   '1))))))
                                      (begin '#f g$d$21554$1XGIwa)))))
                               (g$div$21319$1XGIwa
                                 g$d$21554$1XGIwa
                                 '2))))
                           (g$bignum%$21128$1XGIwa
                             g$num$21552$1XGIwa
                             g$den$21553$1XGIwa))))
                       (g$bignum/$21127$1XGIwa
                         g$num$21552$1XGIwa
                         g$den$21553$1XGIwa))))
                   (g$ratnum-denominator$21121$1XGIwa
                     g$x$21551$1XGIwa))))
               (g$ratnum-numerator$21122$1XGIwa g$x$21551$1XGIwa))
              (begin
                '#f
                (clr-call-internal
                  'System.Math
                  '"Round(System.Double)"
                  '()
                  (g$inexact$21157$1XGIwa g$x$21551$1XGIwa)))))))))
   (g$sqrt$21325$1XGIwa
     g$sqrt$21656$1XGIwa
     (case-lambda
       ((g$num$21557$1XGIwa)
        (if (g$rectnum?$21116$1XGIwa g$num$21557$1XGIwa)
          (g$sqrt$21325$1XGIwa
            (g$rectnum->complexnum$21135$1XGIwa g$num$21557$1XGIwa))
          (if (g$complexnum?$21123$1XGIwa g$num$21557$1XGIwa)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'Sqrt
              '()
              g$num$21557$1XGIwa)
            (if (g$negative?$21156$1XGIwa g$num$21557$1XGIwa)
              (g$make-rectangular$21266$1XGIwa
                '0
                (g$sqrt$21325$1XGIwa (- g$num$21557$1XGIwa)))
              (if (g$bignum?$21115$1XGIwa g$num$21557$1XGIwa)
                (bignum-sqrt g$num$21557$1XGIwa)
                (if (g$infinite?$21144$1XGIwa g$num$21557$1XGIwa)
                  g$num$21557$1XGIwa
                  (begin
                    '#f
                    ((case-lambda
                       ((g$r$21558$1XGIwa)
                        (if (g$exact?$21145$1XGIwa g$num$21557$1XGIwa)
                          (g$exact$21158$1XGIwa g$r$21558$1XGIwa)
                          g$r$21558$1XGIwa)))
                     (clr-call-internal
                       'System.Math
                       'Sqrt
                       '()
                       (g$inexact$21157$1XGIwa
                         g$num$21557$1XGIwa))))))))))))
   (g$exact-integer-sqrt$21326$1XGIwa
     g$exact-integer-sqrt$21657$1XGIwa
     (case-lambda
       ((g$num$21559$1XGIwa)
        (if (g$bignum?$21115$1XGIwa g$num$21559$1XGIwa)
          (bignum-sqrt-exact g$num$21559$1XGIwa)
          ((case-lambda
             ((g$r$21560$1XGIwa)
              ((case-lambda
                 ((g$rf$21561$1XGIwa)
                  ((case-lambda
                     ((g$rest$21562$1XGIwa)
                      (values g$rf$21561$1XGIwa g$rest$21562$1XGIwa)))
                   (- g$num$21559$1XGIwa
                      (* g$rf$21561$1XGIwa g$rf$21561$1XGIwa)))))
               (g$exact$21158$1XGIwa
                 (g$floor$21321$1XGIwa g$r$21560$1XGIwa)))))
           (g$sqrt$21325$1XGIwa g$num$21559$1XGIwa))))))
   (g$expt$21327$1XGIwa
     g$expt$21658$1XGIwa
     (case-lambda
       ((g$obj1$21563$1XGIwa g$obj2$21564$1XGIwa)
        (letrec* ((g$make-restriction-violation$21565$1XGIwa
                    (case-lambda
                      (()
                       (condition
                         (g$make-implementation-restriction-violation$22196$1XGIwa)
                         (g$make-who-condition$22158$1XGIwa 'expt)
                         (g$make-message-condition$22098$1XGIwa
                           '"not supported")
                         (g$make-irritants-condition$22148$1XGIwa
                           g$obj1$21563$1XGIwa
                           g$obj2$21564$1XGIwa))))))
          (if (g$rectnum?$21116$1XGIwa g$obj1$21563$1XGIwa)
            (g$expt$21327$1XGIwa
              (g$rectnum->complexnum$21135$1XGIwa g$obj1$21563$1XGIwa)
              g$obj2$21564$1XGIwa)
            (if ((case-lambda
                   ((g$t$21566$1XGIwa)
                    (if g$t$21566$1XGIwa
                      g$t$21566$1XGIwa
                      (begin
                        '#f
                        (g$negative?$21156$1XGIwa
                          g$obj1$21563$1XGIwa)))))
                 (g$complexnum?$21123$1XGIwa g$obj1$21563$1XGIwa))
              (clr-call-internal
                'Microsoft.Scripting.Math.Complex64
                'Pow
                '()
                (g$real->complexnum$21133$1XGIwa g$obj1$21563$1XGIwa)
                (g$real->complexnum$21133$1XGIwa g$obj2$21564$1XGIwa))
              (begin
                '#f
                ((case-lambda
                   ((g$e$21567$1XGIwa
                      g$z1$21568$1XGIwa
                      g$z2$21569$1XGIwa)
                    (if (if g$z1$21568$1XGIwa
                          (begin '#f (not g$z2$21569$1XGIwa))
                          '#f)
                      (if g$e$21567$1XGIwa '0 '0.0)
                      (if ((case-lambda
                             ((g$t$21570$1XGIwa)
                              (if g$t$21570$1XGIwa
                                g$t$21570$1XGIwa
                                (begin
                                  '#f
                                  (g$=$21261$1XGIwa
                                    g$obj1$21563$1XGIwa
                                    '1)))))
                           g$z2$21569$1XGIwa)
                        (if g$e$21567$1XGIwa '1 '1.0)
                        (if (g$=$21261$1XGIwa g$obj2$21564$1XGIwa '1)
                          (if g$e$21567$1XGIwa
                            g$obj1$21563$1XGIwa
                            (g$inexact$21157$1XGIwa
                              g$obj1$21563$1XGIwa))
                          (begin
                            '#f
                            ((case-lambda
                               ((g$neg?$21571$1XGIwa)
                                ((case-lambda
                                   ((g$obj2$21572$1XGIwa)
                                    (if (if (g$integer?$21150$1XGIwa
                                              g$obj1$21563$1XGIwa)
                                          (begin
                                            '#f
                                            (g$integer?$21150$1XGIwa
                                              g$obj2$21572$1XGIwa))
                                          '#f)
                                      ((case-lambda
                                         ((g$a$21573$1XGIwa)
                                          ((case-lambda
                                             ((g$r$21574$1XGIwa)
                                              (if g$neg?$21571$1XGIwa
                                                (if (g$zero?$21154$1XGIwa
                                                      g$r$21574$1XGIwa)
                                                  (raise
                                                    (g$make-restriction-violation$21565$1XGIwa))
                                                  (/ '1
                                                     g$r$21574$1XGIwa))
                                                (g$exact$21158$1XGIwa
                                                  g$r$21574$1XGIwa))))
                                           (clr-call-internal
                                             'Microsoft.Scripting.Math.BigInteger
                                             'Power
                                             g$a$21573$1XGIwa
                                             (g$->fixnum$21136$1XGIwa
                                               g$obj2$21572$1XGIwa)))))
                                       (g$->bignum$21138$1XGIwa
                                         g$obj1$21563$1XGIwa))
                                      (if (if (g$rational?$21149$1XGIwa
                                                g$obj1$21563$1XGIwa)
                                            (begin
                                              '#f
                                              (g$integer?$21150$1XGIwa
                                                g$obj2$21572$1XGIwa))
                                            '#f)
                                        ((case-lambda
                                           ((g$f$21575$1XGIwa)
                                            (if g$neg?$21571$1XGIwa
                                              (/ (g$expt$21327$1XGIwa
                                                   (g$denominator$21272$1XGIwa
                                                     g$f$21575$1XGIwa)
                                                   g$obj2$21572$1XGIwa)
                                                 (g$expt$21327$1XGIwa
                                                   (g$numerator$21271$1XGIwa
                                                     g$f$21575$1XGIwa)
                                                   g$obj2$21572$1XGIwa))
                                              (/ (g$expt$21327$1XGIwa
                                                   (g$numerator$21271$1XGIwa
                                                     g$f$21575$1XGIwa)
                                                   g$obj2$21572$1XGIwa)
                                                 (g$expt$21327$1XGIwa
                                                   (g$denominator$21272$1XGIwa
                                                     g$f$21575$1XGIwa)
                                                   g$obj2$21572$1XGIwa)))))
                                         (g$->ratnum$21137$1XGIwa
                                           g$obj1$21563$1XGIwa))
                                        (if (if (g$real?$21148$1XGIwa
                                                  g$obj1$21563$1XGIwa)
                                              (begin
                                                '#f
                                                (g$real?$21148$1XGIwa
                                                  g$obj2$21572$1XGIwa))
                                              '#f)
                                          ((case-lambda
                                             ((g$r$21576$1XGIwa)
                                              (if g$neg?$21571$1XGIwa
                                                (/ '1 g$r$21576$1XGIwa)
                                                g$r$21576$1XGIwa)))
                                           (clr-call-internal
                                             'System.Math
                                             'Pow
                                             '()
                                             (g$inexact$21157$1XGIwa
                                               g$obj1$21563$1XGIwa)
                                             (g$inexact$21157$1XGIwa
                                               g$obj2$21572$1XGIwa)))
                                          (begin
                                            '#f
                                            (raise
                                              (g$make-restriction-violation$21565$1XGIwa))))))))
                                 (if g$neg?$21571$1XGIwa
                                   (g$abs$21320$1XGIwa
                                     g$obj2$21564$1XGIwa)
                                   g$obj2$21564$1XGIwa))))
                             (g$negative?$21156$1XGIwa
                               g$obj2$21564$1XGIwa))))))))
                 (if (g$exact?$21145$1XGIwa g$obj1$21563$1XGIwa)
                   (begin
                     '#f
                     (g$exact?$21145$1XGIwa g$obj2$21564$1XGIwa))
                   '#f)
                 (g$zero?$21154$1XGIwa g$obj1$21563$1XGIwa)
                 (g$zero?$21154$1XGIwa g$obj2$21564$1XGIwa))))))))))
  (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6559$21659$1XGIwa
     g$6559$22087$1XGIwa
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6562$1XGIwa
       '#f
       '#f
       '#()))
   (g$6561$21660$1XGIwa g$6561$22088$1XGIwa '#f)
   (g$6560$21661$1XGIwa
     g$6560$22089$1XGIwa
     (make-record-constructor-descriptor
       g$6559$21659$1XGIwa
       '#f
       g$6561$21660$1XGIwa))
   (g$&condition?$21664$1XGIwa
     g$&condition?$22090$1XGIwa
     (record-predicate g$6559$21659$1XGIwa))
   (g$make-&condition$21665$1XGIwa
     g$make-&condition$22091$1XGIwa
     (record-constructor g$6560$21661$1XGIwa))
   (g$&condition-rtd$21666$1XGIwa
     g$&condition-rtd$22092$1XGIwa
     g$6559$21659$1XGIwa)
   (g$&condition-rcd$21667$1XGIwa
     g$&condition-rcd$22093$1XGIwa
     g$6560$21661$1XGIwa)
   (g$6596$21765$1XGIwa
     g$6596$22094$1XGIwa
     (make-record-type-descriptor
       '&message
       g$6559$21659$1XGIwa
       'g$6599$1XGIwa
       '#f
       '#f
       '#((immutable message))))
   (g$6598$21766$1XGIwa g$6598$22095$1XGIwa '#f)
   (g$6597$21767$1XGIwa
     g$6597$22096$1XGIwa
     (make-record-constructor-descriptor
       g$6596$21765$1XGIwa
       g$6560$21661$1XGIwa
       g$6598$21766$1XGIwa))
   (g$p?$21770$1XGIwa
     g$p?$22097$1XGIwa
     (record-predicate g$6596$21765$1XGIwa))
   (g$make-message-condition$21771$1XGIwa
     g$make-message-condition$22098$1XGIwa
     (record-constructor g$6597$21767$1XGIwa))
   (g$condition-message$21772$1XGIwa
     g$condition-message$22099$1XGIwa
     (record-accessor g$6596$21765$1XGIwa '0))
   (g$message-condition?$21773$1XGIwa
     g$message-condition?$22100$1XGIwa
     (condition-predicate g$6596$21765$1XGIwa))
   (g$condition-message$21774$1XGIwa
     g$condition-message$22101$1XGIwa
     (condition-accessor
       g$6596$21765$1XGIwa
       g$condition-message$21772$1XGIwa))
   (g$&message-rtd$21775$1XGIwa
     g$&message-rtd$22102$1XGIwa
     g$6596$21765$1XGIwa)
   (g$&message-rcd$21776$1XGIwa
     g$&message-rcd$22103$1XGIwa
     g$6597$21767$1XGIwa)
   (g$6611$21777$1XGIwa
     g$6611$22104$1XGIwa
     (make-record-type-descriptor
       '&warning
       g$6559$21659$1XGIwa
       'g$6614$1XGIwa
       '#f
       '#f
       '#()))
   (g$6613$21778$1XGIwa g$6613$22105$1XGIwa '#f)
   (g$6612$21779$1XGIwa
     g$6612$22106$1XGIwa
     (make-record-constructor-descriptor
       g$6611$21777$1XGIwa
       g$6560$21661$1XGIwa
       g$6613$21778$1XGIwa))
   (g$p?$21782$1XGIwa
     g$p?$22107$1XGIwa
     (record-predicate g$6611$21777$1XGIwa))
   (g$make-warning$21783$1XGIwa
     g$make-warning$22108$1XGIwa
     (record-constructor g$6612$21779$1XGIwa))
   (g$warning?$21784$1XGIwa
     g$warning?$22109$1XGIwa
     (condition-predicate g$6611$21777$1XGIwa))
   (g$&warning-rtd$21785$1XGIwa
     g$&warning-rtd$22110$1XGIwa
     g$6611$21777$1XGIwa)
   (g$&warning-rcd$21786$1XGIwa
     g$&warning-rcd$22111$1XGIwa
     g$6612$21779$1XGIwa)
   (g$6624$21787$1XGIwa
     g$6624$22112$1XGIwa
     (make-record-type-descriptor
       '&serious
       g$6559$21659$1XGIwa
       'g$6627$1XGIwa
       '#f
       '#f
       '#()))
   (g$6626$21788$1XGIwa g$6626$22113$1XGIwa '#f)
   (g$6625$21789$1XGIwa
     g$6625$22114$1XGIwa
     (make-record-constructor-descriptor
       g$6624$21787$1XGIwa
       g$6560$21661$1XGIwa
       g$6626$21788$1XGIwa))
   (g$p?$21792$1XGIwa
     g$p?$22115$1XGIwa
     (record-predicate g$6624$21787$1XGIwa))
   (g$make-serious-condition$21793$1XGIwa
     g$make-serious-condition$22116$1XGIwa
     (record-constructor g$6625$21789$1XGIwa))
   (g$serious-condition?$21794$1XGIwa
     g$serious-condition?$22117$1XGIwa
     (condition-predicate g$6624$21787$1XGIwa))
   (g$&serious-rtd$21795$1XGIwa
     g$&serious-rtd$22118$1XGIwa
     g$6624$21787$1XGIwa)
   (g$&serious-rcd$21796$1XGIwa
     g$&serious-rcd$22119$1XGIwa
     g$6625$21789$1XGIwa)
   (g$6637$21797$1XGIwa
     g$6637$22120$1XGIwa
     (make-record-type-descriptor
       '&error
       g$6624$21787$1XGIwa
       'g$6640$1XGIwa
       '#f
       '#f
       '#()))
   (g$6639$21798$1XGIwa g$6639$22121$1XGIwa '#f)
   (g$6638$21799$1XGIwa
     g$6638$22122$1XGIwa
     (make-record-constructor-descriptor
       g$6637$21797$1XGIwa
       g$6625$21789$1XGIwa
       g$6639$21798$1XGIwa))
   (g$p?$21802$1XGIwa
     g$p?$22123$1XGIwa
     (record-predicate g$6637$21797$1XGIwa))
   (g$make-error$21803$1XGIwa
     g$make-error$22124$1XGIwa
     (record-constructor g$6638$21799$1XGIwa))
   (g$error?$21804$1XGIwa
     g$error?$22125$1XGIwa
     (condition-predicate g$6637$21797$1XGIwa))
   (g$&error-rtd$21805$1XGIwa
     g$&error-rtd$22126$1XGIwa
     g$6637$21797$1XGIwa)
   (g$&error-rcd$21806$1XGIwa
     g$&error-rcd$22127$1XGIwa
     g$6638$21799$1XGIwa)
   (g$6650$21807$1XGIwa
     g$6650$22128$1XGIwa
     (make-record-type-descriptor
       '&violation
       g$6624$21787$1XGIwa
       'g$6653$1XGIwa
       '#f
       '#f
       '#()))
   (g$6652$21808$1XGIwa g$6652$22129$1XGIwa '#f)
   (g$6651$21809$1XGIwa
     g$6651$22130$1XGIwa
     (make-record-constructor-descriptor
       g$6650$21807$1XGIwa
       g$6625$21789$1XGIwa
       g$6652$21808$1XGIwa))
   (g$p?$21812$1XGIwa
     g$p?$22131$1XGIwa
     (record-predicate g$6650$21807$1XGIwa))
   (g$make-violation$21813$1XGIwa
     g$make-violation$22132$1XGIwa
     (record-constructor g$6651$21809$1XGIwa))
   (g$violation?$21814$1XGIwa
     g$violation?$22133$1XGIwa
     (condition-predicate g$6650$21807$1XGIwa))
   (g$&violation-rtd$21815$1XGIwa
     g$&violation-rtd$22134$1XGIwa
     g$6650$21807$1XGIwa)
   (g$&violation-rcd$21816$1XGIwa
     g$&violation-rcd$22135$1XGIwa
     g$6651$21809$1XGIwa)
   (g$6663$21817$1XGIwa
     g$6663$22136$1XGIwa
     (make-record-type-descriptor
       '&assertion
       g$6650$21807$1XGIwa
       'g$6666$1XGIwa
       '#f
       '#f
       '#()))
   (g$6665$21818$1XGIwa g$6665$22137$1XGIwa '#f)
   (g$6664$21819$1XGIwa
     g$6664$22138$1XGIwa
     (make-record-constructor-descriptor
       g$6663$21817$1XGIwa
       g$6651$21809$1XGIwa
       g$6665$21818$1XGIwa))
   (g$p?$21822$1XGIwa
     g$p?$22139$1XGIwa
     (record-predicate g$6663$21817$1XGIwa))
   (g$make-assertion-violation$21823$1XGIwa
     g$make-assertion-violation$22140$1XGIwa
     (record-constructor g$6664$21819$1XGIwa))
   (g$assertion-violation?$21824$1XGIwa
     g$assertion-violation?$22141$1XGIwa
     (condition-predicate g$6663$21817$1XGIwa))
   (g$&assertion-rtd$21825$1XGIwa
     g$&assertion-rtd$22142$1XGIwa
     g$6663$21817$1XGIwa)
   (g$&assertion-rcd$21826$1XGIwa
     g$&assertion-rcd$22143$1XGIwa
     g$6664$21819$1XGIwa)
   (g$6676$21828$1XGIwa
     g$6676$22144$1XGIwa
     (make-record-type-descriptor
       '&irritants
       g$6559$21659$1XGIwa
       'g$6679$1XGIwa
       '#f
       '#f
       '#((immutable irritants))))
   (g$6678$21829$1XGIwa g$6678$22145$1XGIwa '#f)
   (g$6677$21830$1XGIwa
     g$6677$22146$1XGIwa
     (make-record-constructor-descriptor
       g$6676$21828$1XGIwa
       g$6560$21661$1XGIwa
       g$6678$21829$1XGIwa))
   (g$p?$21833$1XGIwa
     g$p?$22147$1XGIwa
     (record-predicate g$6676$21828$1XGIwa))
   (g$make-irritants-condition$21834$1XGIwa
     g$make-irritants-condition$22148$1XGIwa
     (record-constructor g$6677$21830$1XGIwa))
   (g$condition-irritants$21835$1XGIwa
     g$condition-irritants$22149$1XGIwa
     (record-accessor g$6676$21828$1XGIwa '0))
   (g$irritants-condition?$21836$1XGIwa
     g$irritants-condition?$22150$1XGIwa
     (condition-predicate g$6676$21828$1XGIwa))
   (g$condition-irritants$21837$1XGIwa
     g$condition-irritants$22151$1XGIwa
     (condition-accessor
       g$6676$21828$1XGIwa
       g$condition-irritants$21835$1XGIwa))
   (g$&irritants-rtd$21838$1XGIwa
     g$&irritants-rtd$22152$1XGIwa
     g$6676$21828$1XGIwa)
   (g$&irritants-rcd$21839$1XGIwa
     g$&irritants-rcd$22153$1XGIwa
     g$6677$21830$1XGIwa)
   (g$6691$21841$1XGIwa
     g$6691$22154$1XGIwa
     (make-record-type-descriptor
       '&who
       g$6559$21659$1XGIwa
       'g$6694$1XGIwa
       '#f
       '#f
       '#((immutable who))))
   (g$6693$21842$1XGIwa g$6693$22155$1XGIwa '#f)
   (g$6692$21843$1XGIwa
     g$6692$22156$1XGIwa
     (make-record-constructor-descriptor
       g$6691$21841$1XGIwa
       g$6560$21661$1XGIwa
       g$6693$21842$1XGIwa))
   (g$p?$21846$1XGIwa
     g$p?$22157$1XGIwa
     (record-predicate g$6691$21841$1XGIwa))
   (g$make-who-condition$21847$1XGIwa
     g$make-who-condition$22158$1XGIwa
     (record-constructor g$6692$21843$1XGIwa))
   (g$condition-who$21848$1XGIwa
     g$condition-who$22159$1XGIwa
     (record-accessor g$6691$21841$1XGIwa '0))
   (g$who-condition?$21849$1XGIwa
     g$who-condition?$22160$1XGIwa
     (condition-predicate g$6691$21841$1XGIwa))
   (g$condition-who$21850$1XGIwa
     g$condition-who$22161$1XGIwa
     (condition-accessor
       g$6691$21841$1XGIwa
       g$condition-who$21848$1XGIwa))
   (g$&who-rtd$21851$1XGIwa g$&who-rtd$22162$1XGIwa g$6691$21841$1XGIwa)
   (g$&who-rcd$21852$1XGIwa g$&who-rcd$22163$1XGIwa g$6692$21843$1XGIwa)
   (g$6706$21854$1XGIwa
     g$6706$22164$1XGIwa
     (make-record-type-descriptor
       '&where
       g$6559$21659$1XGIwa
       'g$6709$1XGIwa
       '#f
       '#f
       '#((immutable where))))
   (g$6708$21855$1XGIwa g$6708$22165$1XGIwa '#f)
   (g$6707$21856$1XGIwa
     g$6707$22166$1XGIwa
     (make-record-constructor-descriptor
       g$6706$21854$1XGIwa
       g$6560$21661$1XGIwa
       g$6708$21855$1XGIwa))
   (g$p?$21859$1XGIwa
     g$p?$22167$1XGIwa
     (record-predicate g$6706$21854$1XGIwa))
   (g$make-where-condition$21860$1XGIwa
     g$make-where-condition$22168$1XGIwa
     (record-constructor g$6707$21856$1XGIwa))
   (g$condition-where$21861$1XGIwa
     g$condition-where$22169$1XGIwa
     (record-accessor g$6706$21854$1XGIwa '0))
   (g$where-condition?$21862$1XGIwa
     g$where-condition?$22170$1XGIwa
     (condition-predicate g$6706$21854$1XGIwa))
   (g$condition-where$21863$1XGIwa
     g$condition-where$22171$1XGIwa
     (condition-accessor
       g$6706$21854$1XGIwa
       g$condition-where$21861$1XGIwa))
   (g$&where-rtd$21864$1XGIwa
     g$&where-rtd$22172$1XGIwa
     g$6706$21854$1XGIwa)
   (g$&where-rcd$21865$1XGIwa
     g$&where-rcd$22173$1XGIwa
     g$6707$21856$1XGIwa)
   (g$6721$21867$1XGIwa
     g$6721$22174$1XGIwa
     (make-record-type-descriptor
       '&stacktrace
       g$6559$21659$1XGIwa
       'g$6724$1XGIwa
       '#f
       '#f
       '#((immutable stacktrace))))
   (g$6723$21868$1XGIwa g$6723$22175$1XGIwa '#f)
   (g$6722$21869$1XGIwa
     g$6722$22176$1XGIwa
     (make-record-constructor-descriptor
       g$6721$21867$1XGIwa
       g$6560$21661$1XGIwa
       g$6723$21868$1XGIwa))
   (g$p?$21872$1XGIwa
     g$p?$22177$1XGIwa
     (record-predicate g$6721$21867$1XGIwa))
   (g$make-stacktrace-condition$21873$1XGIwa
     g$make-stacktrace-condition$22178$1XGIwa
     (record-constructor g$6722$21869$1XGIwa))
   (g$condition-stacktrace$21874$1XGIwa
     g$condition-stacktrace$22179$1XGIwa
     (record-accessor g$6721$21867$1XGIwa '0))
   (g$stacktrace-condition?$21875$1XGIwa
     g$stacktrace-condition?$22180$1XGIwa
     (condition-predicate g$6721$21867$1XGIwa))
   (g$condition-stacktrace$21876$1XGIwa
     g$condition-stacktrace$22181$1XGIwa
     (condition-accessor
       g$6721$21867$1XGIwa
       g$condition-stacktrace$21874$1XGIwa))
   (g$&stacktrace-rtd$21877$1XGIwa
     g$&stacktrace-rtd$22182$1XGIwa
     g$6721$21867$1XGIwa)
   (g$&stacktrace-rcd$21878$1XGIwa
     g$&stacktrace-rcd$22183$1XGIwa
     g$6722$21869$1XGIwa)
   (g$6736$21879$1XGIwa
     g$6736$22184$1XGIwa
     (make-record-type-descriptor
       '&non-continuable
       g$6650$21807$1XGIwa
       'g$6739$1XGIwa
       '#f
       '#f
       '#()))
   (g$6738$21880$1XGIwa g$6738$22185$1XGIwa '#f)
   (g$6737$21881$1XGIwa
     g$6737$22186$1XGIwa
     (make-record-constructor-descriptor
       g$6736$21879$1XGIwa
       g$6651$21809$1XGIwa
       g$6738$21880$1XGIwa))
   (g$p?$21884$1XGIwa
     g$p?$22187$1XGIwa
     (record-predicate g$6736$21879$1XGIwa))
   (g$make-non-continuable-violation$21885$1XGIwa
     g$make-non-continuable-violation$22188$1XGIwa
     (record-constructor g$6737$21881$1XGIwa))
   (g$non-continuable-violation?$21886$1XGIwa
     g$non-continuable-violation?$22189$1XGIwa
     (condition-predicate g$6736$21879$1XGIwa))
   (g$&non-continuable-rtd$21887$1XGIwa
     g$&non-continuable-rtd$22190$1XGIwa
     g$6736$21879$1XGIwa)
   (g$&non-continuable-rcd$21888$1XGIwa
     g$&non-continuable-rcd$22191$1XGIwa
     g$6737$21881$1XGIwa)
   (g$6749$21889$1XGIwa
     g$6749$22192$1XGIwa
     (make-record-type-descriptor
       '&implementation-restriction
       g$6650$21807$1XGIwa
       'g$6752$1XGIwa
       '#f
       '#f
       '#()))
   (g$6751$21890$1XGIwa g$6751$22193$1XGIwa '#f)
   (g$6750$21891$1XGIwa
     g$6750$22194$1XGIwa
     (make-record-constructor-descriptor
       g$6749$21889$1XGIwa
       g$6651$21809$1XGIwa
       g$6751$21890$1XGIwa))
   (g$p?$21894$1XGIwa
     g$p?$22195$1XGIwa
     (record-predicate g$6749$21889$1XGIwa))
   (g$make-implementation-restriction-violation$21895$1XGIwa
     g$make-implementation-restriction-violation$22196$1XGIwa
     (record-constructor g$6750$21891$1XGIwa))
   (g$implementation-restriction-violation?$21896$1XGIwa
     g$implementation-restriction-violation?$22197$1XGIwa
     (condition-predicate g$6749$21889$1XGIwa))
   (g$&implementation-restriction-rtd$21897$1XGIwa
     g$&implementation-restriction-rtd$22198$1XGIwa
     g$6749$21889$1XGIwa)
   (g$&implementation-restriction-rcd$21898$1XGIwa
     g$&implementation-restriction-rcd$22199$1XGIwa
     g$6750$21891$1XGIwa)
   (g$6762$21899$1XGIwa
     g$6762$22200$1XGIwa
     (make-record-type-descriptor
       '&lexical
       g$6650$21807$1XGIwa
       'g$6765$1XGIwa
       '#f
       '#f
       '#()))
   (g$6764$21900$1XGIwa g$6764$22201$1XGIwa '#f)
   (g$6763$21901$1XGIwa
     g$6763$22202$1XGIwa
     (make-record-constructor-descriptor
       g$6762$21899$1XGIwa
       g$6651$21809$1XGIwa
       g$6764$21900$1XGIwa))
   (g$p?$21904$1XGIwa
     g$p?$22203$1XGIwa
     (record-predicate g$6762$21899$1XGIwa))
   (g$make-lexical-violation$21905$1XGIwa
     g$make-lexical-violation$22204$1XGIwa
     (record-constructor g$6763$21901$1XGIwa))
   (g$lexical-violation?$21906$1XGIwa
     g$lexical-violation?$22205$1XGIwa
     (condition-predicate g$6762$21899$1XGIwa))
   (g$&lexical-rtd$21907$1XGIwa
     g$&lexical-rtd$22206$1XGIwa
     g$6762$21899$1XGIwa)
   (g$&lexical-rcd$21908$1XGIwa
     g$&lexical-rcd$22207$1XGIwa
     g$6763$21901$1XGIwa)
   (g$6775$21911$1XGIwa
     g$6775$22208$1XGIwa
     (make-record-type-descriptor
       '&syntax
       g$6650$21807$1XGIwa
       'g$6778$1XGIwa
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6777$21912$1XGIwa g$6777$22209$1XGIwa '#f)
   (g$6776$21913$1XGIwa
     g$6776$22210$1XGIwa
     (make-record-constructor-descriptor
       g$6775$21911$1XGIwa
       g$6651$21809$1XGIwa
       g$6777$21912$1XGIwa))
   (g$p?$21916$1XGIwa
     g$p?$22211$1XGIwa
     (record-predicate g$6775$21911$1XGIwa))
   (g$make-syntax-violation$21917$1XGIwa
     g$make-syntax-violation$22212$1XGIwa
     (record-constructor g$6776$21913$1XGIwa))
   (g$syntax-violation-form$21918$1XGIwa
     g$syntax-violation-form$22213$1XGIwa
     (record-accessor g$6775$21911$1XGIwa '0))
   (g$syntax-violation-subform$21919$1XGIwa
     g$syntax-violation-subform$22214$1XGIwa
     (record-accessor g$6775$21911$1XGIwa '1))
   (g$syntax-violation?$21920$1XGIwa
     g$syntax-violation?$22215$1XGIwa
     (condition-predicate g$6775$21911$1XGIwa))
   (g$syntax-violation-form$21921$1XGIwa
     g$syntax-violation-form$22216$1XGIwa
     (condition-accessor
       g$6775$21911$1XGIwa
       g$syntax-violation-form$21918$1XGIwa))
   (g$syntax-violation-subform$21922$1XGIwa
     g$syntax-violation-subform$22217$1XGIwa
     (condition-accessor
       g$6775$21911$1XGIwa
       g$syntax-violation-subform$21919$1XGIwa))
   (g$&syntax-rtd$21923$1XGIwa
     g$&syntax-rtd$22218$1XGIwa
     g$6775$21911$1XGIwa)
   (g$&syntax-rcd$21924$1XGIwa
     g$&syntax-rcd$22219$1XGIwa
     g$6776$21913$1XGIwa)
   (g$6792$21925$1XGIwa
     g$6792$22220$1XGIwa
     (make-record-type-descriptor
       '&undefined
       g$6650$21807$1XGIwa
       'g$6795$1XGIwa
       '#f
       '#f
       '#()))
   (g$6794$21926$1XGIwa g$6794$22221$1XGIwa '#f)
   (g$6793$21927$1XGIwa
     g$6793$22222$1XGIwa
     (make-record-constructor-descriptor
       g$6792$21925$1XGIwa
       g$6651$21809$1XGIwa
       g$6794$21926$1XGIwa))
   (g$p?$21930$1XGIwa
     g$p?$22223$1XGIwa
     (record-predicate g$6792$21925$1XGIwa))
   (g$make-undefined-violation$21931$1XGIwa
     g$make-undefined-violation$22224$1XGIwa
     (record-constructor g$6793$21927$1XGIwa))
   (g$undefined-violation?$21932$1XGIwa
     g$undefined-violation?$22225$1XGIwa
     (condition-predicate g$6792$21925$1XGIwa))
   (g$&undefined-rtd$21933$1XGIwa
     g$&undefined-rtd$22226$1XGIwa
     g$6792$21925$1XGIwa)
   (g$&undefined-rcd$21934$1XGIwa
     g$&undefined-rcd$22227$1XGIwa
     g$6793$21927$1XGIwa)
   (g$6805$21935$1XGIwa
     g$6805$22228$1XGIwa
     (make-record-type-descriptor
       '&i/o
       g$6637$21797$1XGIwa
       'g$6808$1XGIwa
       '#f
       '#f
       '#()))
   (g$6807$21936$1XGIwa g$6807$22229$1XGIwa '#f)
   (g$6806$21937$1XGIwa
     g$6806$22230$1XGIwa
     (make-record-constructor-descriptor
       g$6805$21935$1XGIwa
       g$6638$21799$1XGIwa
       g$6807$21936$1XGIwa))
   (g$p?$21940$1XGIwa
     g$p?$22231$1XGIwa
     (record-predicate g$6805$21935$1XGIwa))
   (g$make-i/o-error$21941$1XGIwa
     g$make-i/o-error$22232$1XGIwa
     (record-constructor g$6806$21937$1XGIwa))
   (g$i/o-error?$21942$1XGIwa
     g$i/o-error?$22233$1XGIwa
     (condition-predicate g$6805$21935$1XGIwa))
   (g$&i/o-rtd$21943$1XGIwa g$&i/o-rtd$22234$1XGIwa g$6805$21935$1XGIwa)
   (g$&i/o-rcd$21944$1XGIwa g$&i/o-rcd$22235$1XGIwa g$6806$21937$1XGIwa)
   (g$6818$21945$1XGIwa
     g$6818$22236$1XGIwa
     (make-record-type-descriptor
       '&i/o-read
       g$6805$21935$1XGIwa
       'g$6821$1XGIwa
       '#f
       '#f
       '#()))
   (g$6820$21946$1XGIwa g$6820$22237$1XGIwa '#f)
   (g$6819$21947$1XGIwa
     g$6819$22238$1XGIwa
     (make-record-constructor-descriptor
       g$6818$21945$1XGIwa
       g$6806$21937$1XGIwa
       g$6820$21946$1XGIwa))
   (g$p?$21950$1XGIwa
     g$p?$22239$1XGIwa
     (record-predicate g$6818$21945$1XGIwa))
   (g$make-i/o-read-error$21951$1XGIwa
     g$make-i/o-read-error$22240$1XGIwa
     (record-constructor g$6819$21947$1XGIwa))
   (g$i/o-read-error?$21952$1XGIwa
     g$i/o-read-error?$22241$1XGIwa
     (condition-predicate g$6818$21945$1XGIwa))
   (g$&i/o-read-rtd$21953$1XGIwa
     g$&i/o-read-rtd$22242$1XGIwa
     g$6818$21945$1XGIwa)
   (g$&i/o-read-rcd$21954$1XGIwa
     g$&i/o-read-rcd$22243$1XGIwa
     g$6819$21947$1XGIwa)
   (g$6831$21955$1XGIwa
     g$6831$22244$1XGIwa
     (make-record-type-descriptor
       '&i/o-write
       g$6805$21935$1XGIwa
       'g$6834$1XGIwa
       '#f
       '#f
       '#()))
   (g$6833$21956$1XGIwa g$6833$22245$1XGIwa '#f)
   (g$6832$21957$1XGIwa
     g$6832$22246$1XGIwa
     (make-record-constructor-descriptor
       g$6831$21955$1XGIwa
       g$6806$21937$1XGIwa
       g$6833$21956$1XGIwa))
   (g$p?$21960$1XGIwa
     g$p?$22247$1XGIwa
     (record-predicate g$6831$21955$1XGIwa))
   (g$make-i/o-write-error$21961$1XGIwa
     g$make-i/o-write-error$22248$1XGIwa
     (record-constructor g$6832$21957$1XGIwa))
   (g$i/o-write-error?$21962$1XGIwa
     g$i/o-write-error?$22249$1XGIwa
     (condition-predicate g$6831$21955$1XGIwa))
   (g$&i/o-write-rtd$21963$1XGIwa
     g$&i/o-write-rtd$22250$1XGIwa
     g$6831$21955$1XGIwa)
   (g$&i/o-write-rcd$21964$1XGIwa
     g$&i/o-write-rcd$22251$1XGIwa
     g$6832$21957$1XGIwa)
   (g$6844$21966$1XGIwa
     g$6844$22252$1XGIwa
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$6805$21935$1XGIwa
       'g$6847$1XGIwa
       '#f
       '#f
       '#((immutable position))))
   (g$6846$21967$1XGIwa g$6846$22253$1XGIwa '#f)
   (g$6845$21968$1XGIwa
     g$6845$22254$1XGIwa
     (make-record-constructor-descriptor
       g$6844$21966$1XGIwa
       g$6806$21937$1XGIwa
       g$6846$21967$1XGIwa))
   (g$p?$21971$1XGIwa
     g$p?$22255$1XGIwa
     (record-predicate g$6844$21966$1XGIwa))
   (g$make-i/o-invalid-position-error$21972$1XGIwa
     g$make-i/o-invalid-position-error$22256$1XGIwa
     (record-constructor g$6845$21968$1XGIwa))
   (g$i/o-error-position$21973$1XGIwa
     g$i/o-error-position$22257$1XGIwa
     (record-accessor g$6844$21966$1XGIwa '0))
   (g$i/o-invalid-position-error?$21974$1XGIwa
     g$i/o-invalid-position-error?$22258$1XGIwa
     (condition-predicate g$6844$21966$1XGIwa))
   (g$i/o-error-position$21975$1XGIwa
     g$i/o-error-position$22259$1XGIwa
     (condition-accessor
       g$6844$21966$1XGIwa
       g$i/o-error-position$21973$1XGIwa))
   (g$&i/o-invalid-position-rtd$21976$1XGIwa
     g$&i/o-invalid-position-rtd$22260$1XGIwa
     g$6844$21966$1XGIwa)
   (g$&i/o-invalid-position-rcd$21977$1XGIwa
     g$&i/o-invalid-position-rcd$22261$1XGIwa
     g$6845$21968$1XGIwa)
   (g$6859$21979$1XGIwa
     g$6859$22262$1XGIwa
     (make-record-type-descriptor
       '&i/o-filename
       g$6805$21935$1XGIwa
       'g$6862$1XGIwa
       '#f
       '#f
       '#((immutable filename))))
   (g$6861$21980$1XGIwa g$6861$22263$1XGIwa '#f)
   (g$6860$21981$1XGIwa
     g$6860$22264$1XGIwa
     (make-record-constructor-descriptor
       g$6859$21979$1XGIwa
       g$6806$21937$1XGIwa
       g$6861$21980$1XGIwa))
   (g$p?$21984$1XGIwa
     g$p?$22265$1XGIwa
     (record-predicate g$6859$21979$1XGIwa))
   (g$make-i/o-filename-error$21985$1XGIwa
     g$make-i/o-filename-error$22266$1XGIwa
     (record-constructor g$6860$21981$1XGIwa))
   (g$i/o-error-filename$21986$1XGIwa
     g$i/o-error-filename$22267$1XGIwa
     (record-accessor g$6859$21979$1XGIwa '0))
   (g$i/o-filename-error?$21987$1XGIwa
     g$i/o-filename-error?$22268$1XGIwa
     (condition-predicate g$6859$21979$1XGIwa))
   (g$i/o-error-filename$21988$1XGIwa
     g$i/o-error-filename$22269$1XGIwa
     (condition-accessor
       g$6859$21979$1XGIwa
       g$i/o-error-filename$21986$1XGIwa))
   (g$&i/o-filename-rtd$21989$1XGIwa
     g$&i/o-filename-rtd$22270$1XGIwa
     g$6859$21979$1XGIwa)
   (g$&i/o-filename-rcd$21990$1XGIwa
     g$&i/o-filename-rcd$22271$1XGIwa
     g$6860$21981$1XGIwa)
   (g$6874$21991$1XGIwa
     g$6874$22272$1XGIwa
     (make-record-type-descriptor
       '&i/o-file-protection
       g$6859$21979$1XGIwa
       'g$6877$1XGIwa
       '#f
       '#f
       '#()))
   (g$6876$21992$1XGIwa g$6876$22273$1XGIwa '#f)
   (g$6875$21993$1XGIwa
     g$6875$22274$1XGIwa
     (make-record-constructor-descriptor
       g$6874$21991$1XGIwa
       g$6860$21981$1XGIwa
       g$6876$21992$1XGIwa))
   (g$p?$21996$1XGIwa
     g$p?$22275$1XGIwa
     (record-predicate g$6874$21991$1XGIwa))
   (g$make-i/o-file-protection-error$21997$1XGIwa
     g$make-i/o-file-protection-error$22276$1XGIwa
     (record-constructor g$6875$21993$1XGIwa))
   (g$i/o-file-protection-error?$21998$1XGIwa
     g$i/o-file-protection-error?$22277$1XGIwa
     (condition-predicate g$6874$21991$1XGIwa))
   (g$&i/o-file-protection-rtd$21999$1XGIwa
     g$&i/o-file-protection-rtd$22278$1XGIwa
     g$6874$21991$1XGIwa)
   (g$&i/o-file-protection-rcd$22000$1XGIwa
     g$&i/o-file-protection-rcd$22279$1XGIwa
     g$6875$21993$1XGIwa)
   (g$6887$22001$1XGIwa
     g$6887$22280$1XGIwa
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$6874$21991$1XGIwa
       'g$6890$1XGIwa
       '#f
       '#f
       '#()))
   (g$6889$22002$1XGIwa g$6889$22281$1XGIwa '#f)
   (g$6888$22003$1XGIwa
     g$6888$22282$1XGIwa
     (make-record-constructor-descriptor
       g$6887$22001$1XGIwa
       g$6875$21993$1XGIwa
       g$6889$22002$1XGIwa))
   (g$p?$22006$1XGIwa
     g$p?$22283$1XGIwa
     (record-predicate g$6887$22001$1XGIwa))
   (g$make-i/o-file-is-read-only-error$22007$1XGIwa
     g$make-i/o-file-is-read-only-error$22284$1XGIwa
     (record-constructor g$6888$22003$1XGIwa))
   (g$i/o-file-is-read-only-error?$22008$1XGIwa
     g$i/o-file-is-read-only-error?$22285$1XGIwa
     (condition-predicate g$6887$22001$1XGIwa))
   (g$&i/o-file-is-read-only-rtd$22009$1XGIwa
     g$&i/o-file-is-read-only-rtd$22286$1XGIwa
     g$6887$22001$1XGIwa)
   (g$&i/o-file-is-read-only-rcd$22010$1XGIwa
     g$&i/o-file-is-read-only-rcd$22287$1XGIwa
     g$6888$22003$1XGIwa)
   (g$6900$22011$1XGIwa
     g$6900$22288$1XGIwa
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$6859$21979$1XGIwa
       'g$6903$1XGIwa
       '#f
       '#f
       '#()))
   (g$6902$22012$1XGIwa g$6902$22289$1XGIwa '#f)
   (g$6901$22013$1XGIwa
     g$6901$22290$1XGIwa
     (make-record-constructor-descriptor
       g$6900$22011$1XGIwa
       g$6860$21981$1XGIwa
       g$6902$22012$1XGIwa))
   (g$p?$22016$1XGIwa
     g$p?$22291$1XGIwa
     (record-predicate g$6900$22011$1XGIwa))
   (g$make-i/o-file-already-exists-error$22017$1XGIwa
     g$make-i/o-file-already-exists-error$22292$1XGIwa
     (record-constructor g$6901$22013$1XGIwa))
   (g$i/o-file-already-exists-error?$22018$1XGIwa
     g$i/o-file-already-exists-error?$22293$1XGIwa
     (condition-predicate g$6900$22011$1XGIwa))
   (g$&i/o-file-already-exists-rtd$22019$1XGIwa
     g$&i/o-file-already-exists-rtd$22294$1XGIwa
     g$6900$22011$1XGIwa)
   (g$&i/o-file-already-exists-rcd$22020$1XGIwa
     g$&i/o-file-already-exists-rcd$22295$1XGIwa
     g$6901$22013$1XGIwa)
   (g$6913$22021$1XGIwa
     g$6913$22296$1XGIwa
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$6859$21979$1XGIwa
       'g$6916$1XGIwa
       '#f
       '#f
       '#()))
   (g$6915$22022$1XGIwa g$6915$22297$1XGIwa '#f)
   (g$6914$22023$1XGIwa
     g$6914$22298$1XGIwa
     (make-record-constructor-descriptor
       g$6913$22021$1XGIwa
       g$6860$21981$1XGIwa
       g$6915$22022$1XGIwa))
   (g$p?$22026$1XGIwa
     g$p?$22299$1XGIwa
     (record-predicate g$6913$22021$1XGIwa))
   (g$make-i/o-file-does-not-exist-error$22027$1XGIwa
     g$make-i/o-file-does-not-exist-error$22300$1XGIwa
     (record-constructor g$6914$22023$1XGIwa))
   (g$i/o-file-does-not-exist-error?$22028$1XGIwa
     g$i/o-file-does-not-exist-error?$22301$1XGIwa
     (condition-predicate g$6913$22021$1XGIwa))
   (g$&i/o-file-does-not-exist-rtd$22029$1XGIwa
     g$&i/o-file-does-not-exist-rtd$22302$1XGIwa
     g$6913$22021$1XGIwa)
   (g$&i/o-file-does-not-exist-rcd$22030$1XGIwa
     g$&i/o-file-does-not-exist-rcd$22303$1XGIwa
     g$6914$22023$1XGIwa)
   (g$6926$22032$1XGIwa
     g$6926$22304$1XGIwa
     (make-record-type-descriptor
       '&i/o-port
       g$6805$21935$1XGIwa
       'g$6929$1XGIwa
       '#f
       '#f
       '#((immutable port))))
   (g$6928$22033$1XGIwa g$6928$22305$1XGIwa '#f)
   (g$6927$22034$1XGIwa
     g$6927$22306$1XGIwa
     (make-record-constructor-descriptor
       g$6926$22032$1XGIwa
       g$6806$21937$1XGIwa
       g$6928$22033$1XGIwa))
   (g$p?$22037$1XGIwa
     g$p?$22307$1XGIwa
     (record-predicate g$6926$22032$1XGIwa))
   (g$make-i/o-port-error$22038$1XGIwa
     g$make-i/o-port-error$22308$1XGIwa
     (record-constructor g$6927$22034$1XGIwa))
   (g$i/o-error-port$22039$1XGIwa
     g$i/o-error-port$22309$1XGIwa
     (record-accessor g$6926$22032$1XGIwa '0))
   (g$i/o-port-error?$22040$1XGIwa
     g$i/o-port-error?$22310$1XGIwa
     (condition-predicate g$6926$22032$1XGIwa))
   (g$i/o-error-port$22041$1XGIwa
     g$i/o-error-port$22311$1XGIwa
     (condition-accessor
       g$6926$22032$1XGIwa
       g$i/o-error-port$22039$1XGIwa))
   (g$&i/o-port-rtd$22042$1XGIwa
     g$&i/o-port-rtd$22312$1XGIwa
     g$6926$22032$1XGIwa)
   (g$&i/o-port-rcd$22043$1XGIwa
     g$&i/o-port-rcd$22313$1XGIwa
     g$6927$22034$1XGIwa)
   (g$6941$22044$1XGIwa
     g$6941$22314$1XGIwa
     (make-record-type-descriptor
       '&i/o-decoding
       g$6926$22032$1XGIwa
       'g$6944$1XGIwa
       '#f
       '#f
       '#()))
   (g$6943$22045$1XGIwa g$6943$22315$1XGIwa '#f)
   (g$6942$22046$1XGIwa
     g$6942$22316$1XGIwa
     (make-record-constructor-descriptor
       g$6941$22044$1XGIwa
       g$6927$22034$1XGIwa
       g$6943$22045$1XGIwa))
   (g$p?$22049$1XGIwa
     g$p?$22317$1XGIwa
     (record-predicate g$6941$22044$1XGIwa))
   (g$make-i/o-decoding-error$22050$1XGIwa
     g$make-i/o-decoding-error$22318$1XGIwa
     (record-constructor g$6942$22046$1XGIwa))
   (g$i/o-decoding-error?$22051$1XGIwa
     g$i/o-decoding-error?$22319$1XGIwa
     (condition-predicate g$6941$22044$1XGIwa))
   (g$&i/o-decoding-rtd$22052$1XGIwa
     g$&i/o-decoding-rtd$22320$1XGIwa
     g$6941$22044$1XGIwa)
   (g$&i/o-decoding-rcd$22053$1XGIwa
     g$&i/o-decoding-rcd$22321$1XGIwa
     g$6942$22046$1XGIwa)
   (g$6954$22055$1XGIwa
     g$6954$22322$1XGIwa
     (make-record-type-descriptor
       '&i/o-encoding
       g$6926$22032$1XGIwa
       'g$6957$1XGIwa
       '#f
       '#f
       '#((immutable char))))
   (g$6956$22056$1XGIwa g$6956$22323$1XGIwa '#f)
   (g$6955$22057$1XGIwa
     g$6955$22324$1XGIwa
     (make-record-constructor-descriptor
       g$6954$22055$1XGIwa
       g$6927$22034$1XGIwa
       g$6956$22056$1XGIwa))
   (g$p?$22060$1XGIwa
     g$p?$22325$1XGIwa
     (record-predicate g$6954$22055$1XGIwa))
   (g$make-i/o-encoding-error$22061$1XGIwa
     g$make-i/o-encoding-error$22326$1XGIwa
     (record-constructor g$6955$22057$1XGIwa))
   (g$i/o-encoding-error-char$22062$1XGIwa
     g$i/o-encoding-error-char$22327$1XGIwa
     (record-accessor g$6954$22055$1XGIwa '0))
   (g$i/o-encoding-error?$22063$1XGIwa
     g$i/o-encoding-error?$22328$1XGIwa
     (condition-predicate g$6954$22055$1XGIwa))
   (g$i/o-encoding-error-char$22064$1XGIwa
     g$i/o-encoding-error-char$22329$1XGIwa
     (condition-accessor
       g$6954$22055$1XGIwa
       g$i/o-encoding-error-char$22062$1XGIwa))
   (g$&i/o-encoding-rtd$22065$1XGIwa
     g$&i/o-encoding-rtd$22330$1XGIwa
     g$6954$22055$1XGIwa)
   (g$&i/o-encoding-rcd$22066$1XGIwa
     g$&i/o-encoding-rcd$22331$1XGIwa
     g$6955$22057$1XGIwa)
   (g$6969$22067$1XGIwa
     g$6969$22332$1XGIwa
     (make-record-type-descriptor
       '&no-infinities
       g$6749$21889$1XGIwa
       'g$6972$1XGIwa
       '#f
       '#f
       '#()))
   (g$6971$22068$1XGIwa g$6971$22333$1XGIwa '#f)
   (g$6970$22069$1XGIwa
     g$6970$22334$1XGIwa
     (make-record-constructor-descriptor
       g$6969$22067$1XGIwa
       g$6750$21891$1XGIwa
       g$6971$22068$1XGIwa))
   (g$p?$22072$1XGIwa
     g$p?$22335$1XGIwa
     (record-predicate g$6969$22067$1XGIwa))
   (g$make-no-infinities-violation$22073$1XGIwa
     g$make-no-infinities-violation$22336$1XGIwa
     (record-constructor g$6970$22069$1XGIwa))
   (g$no-infinities-violation?$22074$1XGIwa
     g$no-infinities-violation?$22337$1XGIwa
     (condition-predicate g$6969$22067$1XGIwa))
   (g$&no-infinities-rtd$22075$1XGIwa
     g$&no-infinities-rtd$22338$1XGIwa
     g$6969$22067$1XGIwa)
   (g$&no-infinities-rcd$22076$1XGIwa
     g$&no-infinities-rcd$22339$1XGIwa
     g$6970$22069$1XGIwa)
   (g$6982$22077$1XGIwa
     g$6982$22340$1XGIwa
     (make-record-type-descriptor
       '&no-nans
       g$6749$21889$1XGIwa
       'g$6985$1XGIwa
       '#f
       '#f
       '#()))
   (g$6984$22078$1XGIwa g$6984$22341$1XGIwa '#f)
   (g$6983$22079$1XGIwa
     g$6983$22342$1XGIwa
     (make-record-constructor-descriptor
       g$6982$22077$1XGIwa
       g$6750$21891$1XGIwa
       g$6984$22078$1XGIwa))
   (g$p?$22082$1XGIwa
     g$p?$22343$1XGIwa
     (record-predicate g$6982$22077$1XGIwa))
   (g$make-no-nans-violation$22083$1XGIwa
     g$make-no-nans-violation$22344$1XGIwa
     (record-constructor g$6983$22079$1XGIwa))
   (g$no-nans-violation?$22084$1XGIwa
     g$no-nans-violation?$22345$1XGIwa
     (condition-predicate g$6982$22077$1XGIwa))
   (g$&no-nans-rtd$22085$1XGIwa
     g$&no-nans-rtd$22346$1XGIwa
     g$6982$22077$1XGIwa)
   (g$&no-nans-rcd$22086$1XGIwa
     g$&no-nans-rcd$22347$1XGIwa
     g$6983$22079$1XGIwa))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$set-car!$22348$1XGIwa
     g$set-car!$22360$1XGIwa
     (case-lambda
       ((g$lst$22351$1XGIwa g$val$22352$1XGIwa)
        (begin
          (if (not (pair? g$lst$22351$1XGIwa))
            (assertion-violation
              'set-car!
              '"not a pair"
              g$val$22352$1XGIwa)
            (void))
          (clr-field-set!-internal
            'IronScheme.Runtime.Cons
            'car
            g$lst$22351$1XGIwa
            g$val$22352$1XGIwa)))))
   (g$set-cdr!$22349$1XGIwa
     g$set-cdr!$22361$1XGIwa
     (case-lambda
       ((g$lst$22353$1XGIwa g$val$22354$1XGIwa)
        (begin
          (if (not (pair? g$lst$22353$1XGIwa))
            (assertion-violation
              'set-cdr!
              '"not a pair"
              g$val$22354$1XGIwa)
            (void))
          (clr-field-set!-internal
            'IronScheme.Runtime.Cons
            'cdr
            g$lst$22353$1XGIwa
            g$val$22354$1XGIwa)))))
   (g$append!$22350$1XGIwa
     g$append!$22362$1XGIwa
     (case-lambda
       ((g$a$22355$1XGIwa . g$b$22356$1XGIwa)
        (if (null? g$a$22355$1XGIwa)
          g$b$22356$1XGIwa
          (if (null? g$b$22356$1XGIwa)
            g$a$22355$1XGIwa
            (begin
              '#f
              ((letrec ((g$f$22357$1XGIwa
                          (case-lambda
                            ((g$a$22358$1XGIwa)
                             ((case-lambda
                                ((g$n$22359$1XGIwa)
                                 (if (null? g$n$22359$1XGIwa)
                                   (g$set-cdr!$22349$1XGIwa
                                     g$a$22358$1XGIwa
                                     g$b$22356$1XGIwa)
                                   (g$f$22357$1XGIwa
                                     g$n$22359$1XGIwa))))
                              (cdr g$a$22358$1XGIwa))))))
                 g$f$22357$1XGIwa)
               g$a$22355$1XGIwa)
              g$a$22355$1XGIwa)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$inexact->exact$22363$1XGIwa
     g$inexact->exact$22383$1XGIwa
     g$exact$21620$1XGIwa)
   (g$exact->inexact$22364$1XGIwa
     g$exact->inexact$22384$1XGIwa
     g$inexact$21619$1XGIwa)
   (g$sign$22365$1XGIwa
     g$sign$22385$1XGIwa
     (case-lambda
       ((g$n$22371$1XGIwa)
        (if (g$>$21628$1XGIwa g$n$22371$1XGIwa '0)
          '1
          (if (g$<$21626$1XGIwa g$n$22371$1XGIwa '0)
            '-1
            (begin '#f '0))))))
   (g$quotient$22366$1XGIwa
     g$quotient$22386$1XGIwa
     (case-lambda
       ((g$n1$22372$1XGIwa g$n2$22373$1XGIwa)
        (begin
          (if (not (g$integer-valued?$21615$1XGIwa g$n1$22372$1XGIwa))
            (assertion-violation
              'quotient
              '"not an integer"
              g$n1$22372$1XGIwa)
            (void))
          (if (not (g$integer-valued?$21615$1XGIwa g$n2$22373$1XGIwa))
            (assertion-violation
              'quotient
              '"not an integer"
              g$n2$22373$1XGIwa)
            (void))
          (* (g$sign$22365$1XGIwa g$n1$22372$1XGIwa)
             (g$sign$22365$1XGIwa g$n2$22373$1XGIwa)
             (g$div$21650$1XGIwa
               (g$abs$21651$1XGIwa g$n1$22372$1XGIwa)
               (g$abs$21651$1XGIwa g$n2$22373$1XGIwa)))))))
   (g$remainder$22367$1XGIwa
     g$remainder$22387$1XGIwa
     (case-lambda
       ((g$n1$22374$1XGIwa g$n2$22375$1XGIwa)
        (begin
          (if (not (g$integer-valued?$21615$1XGIwa g$n1$22374$1XGIwa))
            (assertion-violation
              'remainder
              '"not an integer"
              g$n1$22374$1XGIwa)
            (void))
          (if (not (g$integer-valued?$21615$1XGIwa g$n2$22375$1XGIwa))
            (assertion-violation
              'remainder
              '"not an integer"
              g$n2$22375$1XGIwa)
            (void))
          (* (g$sign$22365$1XGIwa g$n1$22374$1XGIwa)
             (g$mod$20596$1XGIwa
               (g$abs$21651$1XGIwa g$n1$22374$1XGIwa)
               (g$abs$21651$1XGIwa g$n2$22375$1XGIwa)))))))
   (g$modulo$22368$1XGIwa
     g$modulo$22388$1XGIwa
     (case-lambda
       ((g$n1$22376$1XGIwa g$n2$22377$1XGIwa)
        (begin
          (if (not (g$integer-valued?$21615$1XGIwa g$n1$22376$1XGIwa))
            (assertion-violation
              'modulo
              '"not an integer"
              g$n1$22376$1XGIwa)
            (void))
          (if (not (g$integer-valued?$21615$1XGIwa g$n2$22377$1XGIwa))
            (assertion-violation
              'modulo
              '"not an integer"
              g$n2$22377$1XGIwa)
            (void))
          (* (g$sign$22365$1XGIwa g$n2$22377$1XGIwa)
             (g$mod$20596$1XGIwa
               (* (g$sign$22365$1XGIwa g$n2$22377$1XGIwa)
                  g$n1$22376$1XGIwa)
               (g$abs$21651$1XGIwa g$n2$22377$1XGIwa)))))))
   (g$make-promise$22369$1XGIwa
     g$make-promise$22389$1XGIwa
     (case-lambda
       ((g$proc$22378$1XGIwa)
        ((case-lambda
           ((g$result-ready?$22379$1XGIwa g$result$22380$1XGIwa)
            (case-lambda
              (()
               (if g$result-ready?$22379$1XGIwa
                 g$result$22380$1XGIwa
                 ((case-lambda
                    ((g$x$22381$1XGIwa)
                     (if g$result-ready?$22379$1XGIwa
                       g$result$22380$1XGIwa
                       (begin
                         (set! g$result-ready?$22379$1XGIwa '#t)
                         (set! g$result$22380$1XGIwa g$x$22381$1XGIwa)
                         g$result$22380$1XGIwa))))
                  (g$proc$22378$1XGIwa)))))))
         '#f
         '#f))))
   (g$force$22370$1XGIwa
     g$force$22390$1XGIwa
     (case-lambda ((g$object$22382$1XGIwa) (g$object$22382$1XGIwa)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$22391$1XGIwa
     g$split$22416$1XGIwa
     (case-lambda
       ((g$ls$22395$1XGIwa)
        ((letrec ((g$loop$22396$1XGIwa
                    (case-lambda
                      ((g$rest$22397$1XGIwa
                         g$left$22398$1XGIwa
                         g$right$22399$1XGIwa)
                       (if (null? g$rest$22397$1XGIwa)
                         (cons g$left$22398$1XGIwa g$right$22399$1XGIwa)
                         (if (null? (cdr g$rest$22397$1XGIwa))
                           (cons
                             (cons
                               (car g$rest$22397$1XGIwa)
                               g$left$22398$1XGIwa)
                             g$right$22399$1XGIwa)
                           (begin
                             '#f
                             (g$loop$22396$1XGIwa
                               (g$cddr$20613$1XGIwa g$rest$22397$1XGIwa)
                               (cons
                                 (car g$rest$22397$1XGIwa)
                                 g$left$22398$1XGIwa)
                               (cons
                                 (g$cadr$20611$1XGIwa
                                   g$rest$22397$1XGIwa)
                                 g$right$22399$1XGIwa)))))))))
           g$loop$22396$1XGIwa)
         g$ls$22395$1XGIwa
         '()
         '()))))
   (g$reverse-it$22392$1XGIwa
     g$reverse-it$22417$1XGIwa
     (case-lambda
       ((g$head$22400$1XGIwa g$tail$22401$1XGIwa)
        (if (null? g$head$22400$1XGIwa)
          g$tail$22401$1XGIwa
          (g$reverse-it$22392$1XGIwa
            (cdr g$head$22400$1XGIwa)
            (cons (car g$head$22400$1XGIwa) g$tail$22401$1XGIwa))))))
   (g$merge$22393$1XGIwa
     g$merge$22418$1XGIwa
     (case-lambda
       ((g$list-1$22402$1XGIwa
          g$list-2$22403$1XGIwa
          g$precedes?$22404$1XGIwa)
        ((letrec ((g$loop$22405$1XGIwa
                    (case-lambda
                      ((g$source-1$22406$1XGIwa
                         g$source-2$22407$1XGIwa
                         g$so-far$22408$1XGIwa)
                       (if (null? g$source-1$22406$1XGIwa)
                         (g$reverse-it$22392$1XGIwa
                           g$so-far$22408$1XGIwa
                           g$source-2$22407$1XGIwa)
                         (if (null? g$source-2$22407$1XGIwa)
                           (g$reverse-it$22392$1XGIwa
                             g$so-far$22408$1XGIwa
                             g$source-1$22406$1XGIwa)
                           (begin
                             '#f
                             ((case-lambda
                                ((g$car-1$22409$1XGIwa
                                   g$car-2$22410$1XGIwa)
                                 (if (g$precedes?$22404$1XGIwa
                                       g$car-2$22410$1XGIwa
                                       g$car-1$22409$1XGIwa)
                                   (g$loop$22405$1XGIwa
                                     g$source-1$22406$1XGIwa
                                     (cdr g$source-2$22407$1XGIwa)
                                     (cons
                                       g$car-2$22410$1XGIwa
                                       g$so-far$22408$1XGIwa))
                                   (g$loop$22405$1XGIwa
                                     g$source-2$22407$1XGIwa
                                     (cdr g$source-1$22406$1XGIwa)
                                     (cons
                                       g$car-1$22409$1XGIwa
                                       g$so-far$22408$1XGIwa)))))
                              (car g$source-1$22406$1XGIwa)
                              (car g$source-2$22407$1XGIwa)))))))))
           g$loop$22405$1XGIwa)
         g$list-1$22402$1XGIwa
         g$list-2$22403$1XGIwa
         '()))))
   (g$list-sort$22394$1XGIwa
     g$list-sort$22419$1XGIwa
     (case-lambda
       ((g$precedes?$22411$1XGIwa g$ls$22412$1XGIwa)
        (if (null? g$ls$22412$1XGIwa)
          '()
          ((letrec ((g$helper$22413$1XGIwa
                      (case-lambda
                        ((g$piece$22414$1XGIwa)
                         (if (null? (cdr g$piece$22414$1XGIwa))
                           g$piece$22414$1XGIwa
                           ((case-lambda
                              ((g$parts$22415$1XGIwa)
                               (g$merge$22393$1XGIwa
                                 (g$helper$22413$1XGIwa
                                   (car g$parts$22415$1XGIwa))
                                 (g$helper$22413$1XGIwa
                                   (cdr g$parts$22415$1XGIwa))
                                 g$precedes?$22411$1XGIwa)))
                            (g$split$22391$1XGIwa
                              g$piece$22414$1XGIwa)))))))
             g$helper$22413$1XGIwa)
           g$ls$22412$1XGIwa))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$using$22421$1XGIwa
     g$using$22648$1XGIwa
     (clr-using-internal 'System.Globalization))
   (g$compare-info$22422$1XGIwa
     g$compare-info$22649$1XGIwa
     (clr-call-internal
       'CultureInfo
       'get_CompareInfo
       (clr-call-internal 'CultureInfo 'get_InvariantCulture '())))
   (g$text-info$22423$1XGIwa
     g$text-info$22650$1XGIwa
     (clr-call-internal
       'CultureInfo
       'get_TextInfo
       (clr-call-internal 'CultureInfo 'get_InvariantCulture '())))
   (g$char-upcase$22424$1XGIwa
     g$char-upcase$22651$1XGIwa
     (case-lambda
       ((g$chr$22575$1XGIwa)
        (begin
          (if (not (g$char?$20570$1XGIwa g$chr$22575$1XGIwa))
            (assertion-violation
              'char-upcase
              '"not a character"
              g$chr$22575$1XGIwa)
            (void))
          (clr-call-internal
            'System.Char
            'ToUpper
            '()
            g$chr$22575$1XGIwa)))))
   (g$char-downcase$22425$1XGIwa
     g$char-downcase$22652$1XGIwa
     (case-lambda
       ((g$chr$22576$1XGIwa)
        (begin
          (if (not (g$char?$20570$1XGIwa g$chr$22576$1XGIwa))
            (assertion-violation
              'char-downcase
              '"not a character"
              g$chr$22576$1XGIwa)
            (void))
          (clr-call-internal
            'System.Char
            'ToLower
            '()
            g$chr$22576$1XGIwa)))))
   (g$char-titlecase$22426$1XGIwa
     g$char-titlecase$22653$1XGIwa
     (case-lambda
       ((g$chr$22577$1XGIwa)
        (begin
          (if (not (g$char?$20570$1XGIwa g$chr$22577$1XGIwa))
            (assertion-violation
              'char-titlecase
              '"not a character"
              g$chr$22577$1XGIwa)
            (void))
          (g$string-ref$20582$1XGIwa
            (clr-call-internal
              'TextInfo
              'ToTitleCase
              g$text-info$22423$1XGIwa
              (g$->string$22436$1XGIwa
                (g$string$20587$1XGIwa g$chr$22577$1XGIwa)))
            '0)))))
   (g$char-foldcase$22427$1XGIwa
     g$char-foldcase$22654$1XGIwa
     (case-lambda
       ((g$chr$22578$1XGIwa)
        (begin
          (if (not (g$char?$20570$1XGIwa g$chr$22578$1XGIwa))
            (assertion-violation
              'char-foldcase
              '"not a character"
              g$chr$22578$1XGIwa)
            (void))
          (clr-call-internal
            'System.Char
            'ToLowerInvariant
            '()
            (clr-call-internal
              'System.Char
              'ToUpperInvariant
              '()
              g$chr$22578$1XGIwa))))))
   (g$char-alphabetic?$22428$1XGIwa
     g$char-alphabetic?$22655$1XGIwa
     (case-lambda
       ((g$chr$22579$1XGIwa)
        (begin
          (if (not (g$char?$20570$1XGIwa g$chr$22579$1XGIwa))
            (assertion-violation
              'char-alphabetic?
              '"not a character"
              g$chr$22579$1XGIwa)
            (void))
          (clr-call-internal
            'System.Char
            '"IsLetter(Char)"
            '()
            g$chr$22579$1XGIwa)))))
   (g$char-numeric?$22429$1XGIwa
     g$char-numeric?$22656$1XGIwa
     (case-lambda
       ((g$chr$22580$1XGIwa)
        (begin
          (if (not (g$char?$20570$1XGIwa g$chr$22580$1XGIwa))
            (assertion-violation
              'char-numeric?
              '"not a character"
              g$chr$22580$1XGIwa)
            (void))
          (clr-call-internal
            'System.Char
            '"IsDigit(Char)"
            '()
            g$chr$22580$1XGIwa)))))
   (g$char-whitespace?$22430$1XGIwa
     g$char-whitespace?$22657$1XGIwa
     (case-lambda
       ((g$chr$22581$1XGIwa)
        (begin
          (if (not (g$char?$20570$1XGIwa g$chr$22581$1XGIwa))
            (assertion-violation
              'char-whitespace?
              '"not a character"
              g$chr$22581$1XGIwa)
            (void))
          (clr-call-internal
            'System.Char
            '"IsWhiteSpace(Char)"
            '()
            g$chr$22581$1XGIwa)))))
   (g$char-upper-case?$22431$1XGIwa
     g$char-upper-case?$22658$1XGIwa
     (case-lambda
       ((g$chr$22582$1XGIwa)
        (begin
          (if (not (g$char?$20570$1XGIwa g$chr$22582$1XGIwa))
            (assertion-violation
              'char-upper-case?
              '"not a character"
              g$chr$22582$1XGIwa)
            (void))
          (clr-call-internal
            'System.Char
            '"IsUpper(Char)"
            '()
            g$chr$22582$1XGIwa)))))
   (g$char-lower-case?$22432$1XGIwa
     g$char-lower-case?$22659$1XGIwa
     (case-lambda
       ((g$chr$22583$1XGIwa)
        (begin
          (if (not (g$char?$20570$1XGIwa g$chr$22583$1XGIwa))
            (assertion-violation
              'char-lower-case?
              '"not a character"
              g$chr$22583$1XGIwa)
            (void))
          (clr-call-internal
            'System.Char
            '"IsLower(Char)"
            '()
            g$chr$22583$1XGIwa)))))
   (g$char-title-case?$22433$1XGIwa
     g$char-title-case?$22660$1XGIwa
     (case-lambda
       ((g$chr$22584$1XGIwa)
        (begin
          (if (not (g$char?$20570$1XGIwa g$chr$22584$1XGIwa))
            (assertion-violation
              'char-title-case?
              '"not a character"
              g$chr$22584$1XGIwa)
            (void))
          ((case-lambda
             ((g$t$22585$1XGIwa)
              (if (g$memv$19654$1XGIwa g$t$22585$1XGIwa '(#\I #\A))
                '#f
                (begin
                  '#f
                  (eqv?
                    g$chr$22584$1XGIwa
                    (g$char-titlecase$22426$1XGIwa
                      g$chr$22584$1XGIwa))))))
           g$chr$22584$1XGIwa)))))
   (g$char-general-category$22434$1XGIwa
     g$char-general-category$22661$1XGIwa
     (case-lambda
       ((g$chr$22586$1XGIwa)
        (begin
          (if (not (g$char?$20570$1XGIwa g$chr$22586$1XGIwa))
            (assertion-violation
              'char-general-category
              '"not a character"
              g$chr$22586$1XGIwa)
            (void))
          ((case-lambda
             ((g$t$22587$1XGIwa)
              (if (eqv? g$t$22587$1XGIwa 'closepunctuation)
                'Pe
                (if (eqv? g$t$22587$1XGIwa 'connectorpunctuation)
                  'Pc
                  (if (eqv? g$t$22587$1XGIwa 'control)
                    'Cc
                    (if (eqv? g$t$22587$1XGIwa 'currencysymbol)
                      'Sc
                      (if (eqv? g$t$22587$1XGIwa 'dashpunctuation)
                        'Pd
                        (if (eqv? g$t$22587$1XGIwa 'decimaldigitnumber)
                          'Nd
                          (if (eqv? g$t$22587$1XGIwa 'enclosingmark)
                            'Me
                            (if (eqv?
                                  g$t$22587$1XGIwa
                                  'finalquotepunctuation)
                              'Pf
                              (if (eqv? g$t$22587$1XGIwa 'format)
                                'Cf
                                (if (eqv?
                                      g$t$22587$1XGIwa
                                      'initialquotepunctuation)
                                  'Pi
                                  (if (eqv?
                                        g$t$22587$1XGIwa
                                        'letternumber)
                                    'Nl
                                    (if (eqv?
                                          g$t$22587$1XGIwa
                                          'lineseparator)
                                      'Zl
                                      (if (eqv?
                                            g$t$22587$1XGIwa
                                            'lowercaseletter)
                                        'Ll
                                        (if (eqv?
                                              g$t$22587$1XGIwa
                                              'mathsymbol)
                                          'Sm
                                          (if (eqv?
                                                g$t$22587$1XGIwa
                                                'modifierletter)
                                            'Lm
                                            (if (eqv?
                                                  g$t$22587$1XGIwa
                                                  'modifiersymbol)
                                              'Sk
                                              (if (eqv?
                                                    g$t$22587$1XGIwa
                                                    'nonspacingmark)
                                                'Mn
                                                (if (eqv?
                                                      g$t$22587$1XGIwa
                                                      'openpunctuation)
                                                  'Ps
                                                  (if (eqv?
                                                        g$t$22587$1XGIwa
                                                        'otherletter)
                                                    'Lo
                                                    (if (eqv?
                                                          g$t$22587$1XGIwa
                                                          'othernotassigned)
                                                      'Cn
                                                      (if (eqv?
                                                            g$t$22587$1XGIwa
                                                            'othernumber)
                                                        'No
                                                        (if (eqv?
                                                              g$t$22587$1XGIwa
                                                              'otherpunctuation)
                                                          'Po
                                                          (if (eqv?
                                                                g$t$22587$1XGIwa
                                                                'othersymbol)
                                                            'So
                                                            (if (eqv?
                                                                  g$t$22587$1XGIwa
                                                                  'paragraphseparator)
                                                              'Zp
                                                              (if (eqv?
                                                                    g$t$22587$1XGIwa
                                                                    'privateuse)
                                                                'Co
                                                                (if (eqv?
                                                                      g$t$22587$1XGIwa
                                                                      'spaceseparator)
                                                                  'Zs
                                                                  (if (eqv?
                                                                        g$t$22587$1XGIwa
                                                                        'spacingcombiningmark)
                                                                    'Mc
                                                                    (if (eqv?
                                                                          g$t$22587$1XGIwa
                                                                          'surrogate)
                                                                      'Cs
                                                                      (if (eqv?
                                                                            g$t$22587$1XGIwa
                                                                            'titlecaseletter)
                                                                        'Lt
                                                                        (if (eqv?
                                                                              g$t$22587$1XGIwa
                                                                              'uppercaseletter)
                                                                          'Lu
                                                                          (begin
                                                                            '#f
                                                                            '#f)))))))))))))))))))))))))))))))))
           (clr-call-internal
             'System.Char
             '"GetUnicodeCategory(Char)"
             '()
             g$chr$22586$1XGIwa))))))
   (g$clr-string?$22435$1XGIwa
     g$clr-string?$22662$1XGIwa
     (case-lambda
       ((g$obj$22588$1XGIwa)
        (clr-is-internal 'System.String g$obj$22588$1XGIwa))))
   (g$->string$22436$1XGIwa
     g$->string$22663$1XGIwa
     (case-lambda
       ((g$str$22589$1XGIwa)
        (if (g$clr-string?$22435$1XGIwa g$str$22589$1XGIwa)
          g$str$22589$1XGIwa
          (clr-call-internal 'Object 'ToString g$str$22589$1XGIwa)))))
   (g$string-ci-compare$22456$1XGIwa
     g$string-ci-compare$22664$1XGIwa
     (case-lambda
       ((g$a$22590$1XGIwa g$b$22591$1XGIwa)
        (begin
          (if (not (g$string?$20569$1XGIwa g$a$22590$1XGIwa))
            (assertion-violation
              'string-ci-compare
              '"not a string"
              g$a$22590$1XGIwa)
            (void))
          (if (not (g$string?$20569$1XGIwa g$b$22591$1XGIwa))
            (assertion-violation
              'string-ci-compare
              '"not a string"
              g$b$22591$1XGIwa)
            (void))
          (clr-call-internal
            'CompareInfo
            '"Compare(String,String,CompareOptions)"
            g$compare-info$22422$1XGIwa
            (g$->string$22436$1XGIwa g$a$22590$1XGIwa)
            (g$->string$22436$1XGIwa g$b$22591$1XGIwa)
            'IgnoreCase)))))
   (g$string-ci=?$22495$1XGIwa
     g$string-ci=?$22665$1XGIwa
     (case-lambda
       ((g$a$22592$1XGIwa g$b$22593$1XGIwa . g$rest$22594$1XGIwa)
        (begin
          (if (not (g$string?$20569$1XGIwa g$a$22592$1XGIwa))
            (assertion-violation
              'string-ci=?
              '"not a string"
              g$a$22592$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$22595$1XGIwa)
               (begin
                 (if (not (g$string?$20569$1XGIwa g$x$22595$1XGIwa))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$22595$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$22596$1XGIwa)
                     (begin
                       (set! g$a$22592$1XGIwa g$x$22595$1XGIwa)
                       g$r$22596$1XGIwa)))
                  (g$fx=?$25028$1XGIwa
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$22422$1XGIwa
                      (g$->string$22436$1XGIwa g$a$22592$1XGIwa)
                      (g$->string$22436$1XGIwa g$x$22595$1XGIwa)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$22593$1XGIwa g$rest$22594$1XGIwa))))))
   (g$string-ci<?$22496$1XGIwa
     g$string-ci<?$22666$1XGIwa
     (case-lambda
       ((g$a$22597$1XGIwa g$b$22598$1XGIwa . g$rest$22599$1XGIwa)
        (begin
          (if (not (g$string?$20569$1XGIwa g$a$22597$1XGIwa))
            (assertion-violation
              'string-ci<?
              '"not a string"
              g$a$22597$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$22600$1XGIwa)
               (begin
                 (if (not (g$string?$20569$1XGIwa g$x$22600$1XGIwa))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$22600$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$22601$1XGIwa)
                     (begin
                       (set! g$a$22597$1XGIwa g$x$22600$1XGIwa)
                       g$r$22601$1XGIwa)))
                  (g$fx<?$25029$1XGIwa
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$22422$1XGIwa
                      (g$->string$22436$1XGIwa g$a$22597$1XGIwa)
                      (g$->string$22436$1XGIwa g$x$22600$1XGIwa)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$22598$1XGIwa g$rest$22599$1XGIwa))))))
   (g$string-ci>?$22497$1XGIwa
     g$string-ci>?$22667$1XGIwa
     (case-lambda
       ((g$a$22602$1XGIwa g$b$22603$1XGIwa . g$rest$22604$1XGIwa)
        (begin
          (if (not (g$string?$20569$1XGIwa g$a$22602$1XGIwa))
            (assertion-violation
              'string-ci>?
              '"not a string"
              g$a$22602$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$22605$1XGIwa)
               (begin
                 (if (not (g$string?$20569$1XGIwa g$x$22605$1XGIwa))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$22605$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$22606$1XGIwa)
                     (begin
                       (set! g$a$22602$1XGIwa g$x$22605$1XGIwa)
                       g$r$22606$1XGIwa)))
                  (g$fx>?$25031$1XGIwa
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$22422$1XGIwa
                      (g$->string$22436$1XGIwa g$a$22602$1XGIwa)
                      (g$->string$22436$1XGIwa g$x$22605$1XGIwa)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$22603$1XGIwa g$rest$22604$1XGIwa))))))
   (g$string-ci<=?$22498$1XGIwa
     g$string-ci<=?$22668$1XGIwa
     (case-lambda
       ((g$a$22607$1XGIwa g$b$22608$1XGIwa . g$rest$22609$1XGIwa)
        (begin
          (if (not (g$string?$20569$1XGIwa g$a$22607$1XGIwa))
            (assertion-violation
              'string-ci<=?
              '"not a string"
              g$a$22607$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$22610$1XGIwa)
               (begin
                 (if (not (g$string?$20569$1XGIwa g$x$22610$1XGIwa))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$22610$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$22611$1XGIwa)
                     (begin
                       (set! g$a$22607$1XGIwa g$x$22610$1XGIwa)
                       g$r$22611$1XGIwa)))
                  (g$fx<=?$25030$1XGIwa
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$22422$1XGIwa
                      (g$->string$22436$1XGIwa g$a$22607$1XGIwa)
                      (g$->string$22436$1XGIwa g$x$22610$1XGIwa)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$22608$1XGIwa g$rest$22609$1XGIwa))))))
   (g$string-ci>=?$22499$1XGIwa
     g$string-ci>=?$22669$1XGIwa
     (case-lambda
       ((g$a$22612$1XGIwa g$b$22613$1XGIwa . g$rest$22614$1XGIwa)
        (begin
          (if (not (g$string?$20569$1XGIwa g$a$22612$1XGIwa))
            (assertion-violation
              'string-ci>=?
              '"not a string"
              g$a$22612$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$22615$1XGIwa)
               (begin
                 (if (not (g$string?$20569$1XGIwa g$x$22615$1XGIwa))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$22615$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$22616$1XGIwa)
                     (begin
                       (set! g$a$22612$1XGIwa g$x$22615$1XGIwa)
                       g$r$22616$1XGIwa)))
                  (g$fx>=?$25032$1XGIwa
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$22422$1XGIwa
                      (g$->string$22436$1XGIwa g$a$22612$1XGIwa)
                      (g$->string$22436$1XGIwa g$x$22615$1XGIwa)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$22613$1XGIwa g$rest$22614$1XGIwa))))))
   (g$string-titlecase$22500$1XGIwa
     g$string-titlecase$22670$1XGIwa
     (case-lambda
       ((g$str$22617$1XGIwa)
        (begin
          (if (not (g$string?$20569$1XGIwa g$str$22617$1XGIwa))
            (assertion-violation
              'string-titlecase
              '"not a string"
              g$str$22617$1XGIwa)
            (void))
          (clr-call-internal
            'TextInfo
            'ToTitleCase
            g$text-info$22423$1XGIwa
            (string-downcase g$str$22617$1XGIwa))))))
   (g$string-foldcase$22501$1XGIwa
     g$string-foldcase$22671$1XGIwa
     (case-lambda
       ((g$str$22618$1XGIwa)
        (begin
          (if (not (g$string?$20569$1XGIwa g$str$22618$1XGIwa))
            (assertion-violation
              'string-foldcase
              '"not a string"
              g$str$22618$1XGIwa)
            (void))
          (clr-call-internal
            'System.String
            'ToLowerInvariant
            (string-upcase g$str$22618$1XGIwa))))))
   (g$char-ci=?$22540$1XGIwa
     g$char-ci=?$22672$1XGIwa
     (case-lambda
       ((g$a$22619$1XGIwa g$b$22620$1XGIwa . g$rest$22621$1XGIwa)
        (begin
          (if (not (g$char?$20570$1XGIwa g$a$22619$1XGIwa))
            (assertion-violation
              'char-ci=?
              '"not a char"
              g$a$22619$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$22622$1XGIwa)
               (begin
                 (if (not (g$char?$20570$1XGIwa g$x$22622$1XGIwa))
                   (assertion-violation
                     'char-ci=?
                     '"not a char"
                     g$x$22622$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$22623$1XGIwa)
                     (begin
                       (set! g$a$22619$1XGIwa g$x$22622$1XGIwa)
                       g$r$22623$1XGIwa)))
                  (g$fx=?$25028$1XGIwa
                    (g$char->integer$20579$1XGIwa
                      (g$char-upcase$22424$1XGIwa g$a$22619$1XGIwa))
                    (g$char->integer$20579$1XGIwa
                      (g$char-upcase$22424$1XGIwa
                        g$x$22622$1XGIwa)))))))
            (cons g$b$22620$1XGIwa g$rest$22621$1XGIwa))))))
   (g$char-ci<?$22541$1XGIwa
     g$char-ci<?$22673$1XGIwa
     (case-lambda
       ((g$a$22624$1XGIwa g$b$22625$1XGIwa . g$rest$22626$1XGIwa)
        (begin
          (if (not (g$char?$20570$1XGIwa g$a$22624$1XGIwa))
            (assertion-violation
              'char-ci<?
              '"not a char"
              g$a$22624$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$22627$1XGIwa)
               (begin
                 (if (not (g$char?$20570$1XGIwa g$x$22627$1XGIwa))
                   (assertion-violation
                     'char-ci<?
                     '"not a char"
                     g$x$22627$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$22628$1XGIwa)
                     (begin
                       (set! g$a$22624$1XGIwa g$x$22627$1XGIwa)
                       g$r$22628$1XGIwa)))
                  (g$fx<?$25029$1XGIwa
                    (g$char->integer$20579$1XGIwa
                      (g$char-upcase$22424$1XGIwa g$a$22624$1XGIwa))
                    (g$char->integer$20579$1XGIwa
                      (g$char-upcase$22424$1XGIwa
                        g$x$22627$1XGIwa)))))))
            (cons g$b$22625$1XGIwa g$rest$22626$1XGIwa))))))
   (g$char-ci>?$22542$1XGIwa
     g$char-ci>?$22674$1XGIwa
     (case-lambda
       ((g$a$22629$1XGIwa g$b$22630$1XGIwa . g$rest$22631$1XGIwa)
        (begin
          (if (not (g$char?$20570$1XGIwa g$a$22629$1XGIwa))
            (assertion-violation
              'char-ci>?
              '"not a char"
              g$a$22629$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$22632$1XGIwa)
               (begin
                 (if (not (g$char?$20570$1XGIwa g$x$22632$1XGIwa))
                   (assertion-violation
                     'char-ci>?
                     '"not a char"
                     g$x$22632$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$22633$1XGIwa)
                     (begin
                       (set! g$a$22629$1XGIwa g$x$22632$1XGIwa)
                       g$r$22633$1XGIwa)))
                  (g$fx>?$25031$1XGIwa
                    (g$char->integer$20579$1XGIwa
                      (g$char-upcase$22424$1XGIwa g$a$22629$1XGIwa))
                    (g$char->integer$20579$1XGIwa
                      (g$char-upcase$22424$1XGIwa
                        g$x$22632$1XGIwa)))))))
            (cons g$b$22630$1XGIwa g$rest$22631$1XGIwa))))))
   (g$char-ci<=?$22543$1XGIwa
     g$char-ci<=?$22675$1XGIwa
     (case-lambda
       ((g$a$22634$1XGIwa g$b$22635$1XGIwa . g$rest$22636$1XGIwa)
        (begin
          (if (not (g$char?$20570$1XGIwa g$a$22634$1XGIwa))
            (assertion-violation
              'char-ci<=?
              '"not a char"
              g$a$22634$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$22637$1XGIwa)
               (begin
                 (if (not (g$char?$20570$1XGIwa g$x$22637$1XGIwa))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$22637$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$22638$1XGIwa)
                     (begin
                       (set! g$a$22634$1XGIwa g$x$22637$1XGIwa)
                       g$r$22638$1XGIwa)))
                  (g$fx<=?$25030$1XGIwa
                    (g$char->integer$20579$1XGIwa
                      (g$char-upcase$22424$1XGIwa g$a$22634$1XGIwa))
                    (g$char->integer$20579$1XGIwa
                      (g$char-upcase$22424$1XGIwa
                        g$x$22637$1XGIwa)))))))
            (cons g$b$22635$1XGIwa g$rest$22636$1XGIwa))))))
   (g$char-ci>=?$22544$1XGIwa
     g$char-ci>=?$22676$1XGIwa
     (case-lambda
       ((g$a$22639$1XGIwa g$b$22640$1XGIwa . g$rest$22641$1XGIwa)
        (begin
          (if (not (g$char?$20570$1XGIwa g$a$22639$1XGIwa))
            (assertion-violation
              'char-ci>=?
              '"not a char"
              g$a$22639$1XGIwa)
            (void))
          (g$for-all$19659$1XGIwa
            (case-lambda
              ((g$x$22642$1XGIwa)
               (begin
                 (if (not (g$char?$20570$1XGIwa g$x$22642$1XGIwa))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$22642$1XGIwa)
                   (void))
                 ((case-lambda
                    ((g$r$22643$1XGIwa)
                     (begin
                       (set! g$a$22639$1XGIwa g$x$22642$1XGIwa)
                       g$r$22643$1XGIwa)))
                  (g$fx>=?$25032$1XGIwa
                    (g$char->integer$20579$1XGIwa
                      (g$char-upcase$22424$1XGIwa g$a$22639$1XGIwa))
                    (g$char->integer$20579$1XGIwa
                      (g$char-upcase$22424$1XGIwa
                        g$x$22642$1XGIwa)))))))
            (cons g$b$22640$1XGIwa g$rest$22641$1XGIwa))))))
   (g$string-normalize-nfc$22571$1XGIwa
     g$string-normalize-nfc$22677$1XGIwa
     (case-lambda
       ((g$s$22644$1XGIwa)
        (if (g$string?$20569$1XGIwa g$s$22644$1XGIwa)
          (clr-call-internal
            'System.String
            'Normalize
            (g$->string$22436$1XGIwa g$s$22644$1XGIwa)
            'formc)
          (assertion-violation
            'string-normalize
            '"not a string"
            g$s$22644$1XGIwa)))))
   (g$string-normalize-nfd$22572$1XGIwa
     g$string-normalize-nfd$22678$1XGIwa
     (case-lambda
       ((g$s$22645$1XGIwa)
        (if (g$string?$20569$1XGIwa g$s$22645$1XGIwa)
          (clr-call-internal
            'System.String
            'Normalize
            (g$->string$22436$1XGIwa g$s$22645$1XGIwa)
            'formd)
          (assertion-violation
            'string-normalize
            '"not a string"
            g$s$22645$1XGIwa)))))
   (g$string-normalize-nfkc$22573$1XGIwa
     g$string-normalize-nfkc$22679$1XGIwa
     (case-lambda
       ((g$s$22646$1XGIwa)
        (if (g$string?$20569$1XGIwa g$s$22646$1XGIwa)
          (clr-call-internal
            'System.String
            'Normalize
            (g$->string$22436$1XGIwa g$s$22646$1XGIwa)
            'formkc)
          (assertion-violation
            'string-normalize
            '"not a string"
            g$s$22646$1XGIwa)))))
   (g$string-normalize-nfkd$22574$1XGIwa
     g$string-normalize-nfkd$22680$1XGIwa
     (case-lambda
       ((g$s$22647$1XGIwa)
        (if (g$string?$20569$1XGIwa g$s$22647$1XGIwa)
          (clr-call-internal
            'System.String
            'Normalize
            (g$->string$22436$1XGIwa g$s$22647$1XGIwa)
            'formkd)
          (assertion-violation
            'string-normalize
            '"not a string"
            g$s$22647$1XGIwa))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bignum?$22681$1XGIwa
     g$bignum?$22766$1XGIwa
     (case-lambda
       ((g$obj$22699$1XGIwa)
        (clr-is-internal
          'Microsoft.Scripting.Math.BigInteger
          g$obj$22699$1XGIwa))))
   (g$->bignum$22682$1XGIwa
     g$->bignum$22767$1XGIwa
     (case-lambda
       ((g$ei$22700$1XGIwa)
        (if (g$bignum?$22681$1XGIwa g$ei$22700$1XGIwa)
          g$ei$22700$1XGIwa
          (if (g$fixnum?$20576$1XGIwa g$ei$22700$1XGIwa)
            (clr-call-internal
              'Microsoft.Scripting.Math.BigInteger
              '"Create(System.Int32)"
              '()
              g$ei$22700$1XGIwa)
            (begin
              '#f
              (assertion-violation
                '#f
                '"not a exact integer"
                g$ei$22700$1XGIwa)))))))
   (g$bitwise-not$22683$1XGIwa
     g$bitwise-not$22768$1XGIwa
     (case-lambda
       ((g$ei$22701$1XGIwa)
        (g$exact$21620$1XGIwa
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_OnesComplement
            '()
            (g$->bignum$22682$1XGIwa g$ei$22701$1XGIwa))))))
   (g$bitwise-and$22684$1XGIwa
     g$bitwise-and$22769$1XGIwa
     (case-lambda
       (() '-1)
       ((g$ei$22702$1XGIwa) (g$->bignum$22682$1XGIwa g$ei$22702$1XGIwa))
       ((g$ei1$22703$1XGIwa g$ei2$22704$1XGIwa)
        (g$exact$21620$1XGIwa
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_BitwiseAnd
            '()
            (g$->bignum$22682$1XGIwa g$ei1$22703$1XGIwa)
            (g$->bignum$22682$1XGIwa g$ei2$22704$1XGIwa))))
       ((g$ei1$22705$1XGIwa g$ei2$22706$1XGIwa . g$rest$22707$1XGIwa)
        (g$fold-left$19664$1XGIwa
          g$bitwise-and$22684$1XGIwa
          (g$->bignum$22682$1XGIwa g$ei1$22705$1XGIwa)
          (cons g$ei2$22706$1XGIwa g$rest$22707$1XGIwa)))))
   (g$bitwise-ior$22685$1XGIwa
     g$bitwise-ior$22770$1XGIwa
     (case-lambda
       (() '0)
       ((g$ei$22708$1XGIwa) (g$->bignum$22682$1XGIwa g$ei$22708$1XGIwa))
       ((g$ei1$22709$1XGIwa g$ei2$22710$1XGIwa)
        (g$exact$21620$1XGIwa
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_BitwiseOr
            '()
            (g$->bignum$22682$1XGIwa g$ei1$22709$1XGIwa)
            (g$->bignum$22682$1XGIwa g$ei2$22710$1XGIwa))))
       ((g$ei1$22711$1XGIwa g$ei2$22712$1XGIwa . g$rest$22713$1XGIwa)
        (g$fold-left$19664$1XGIwa
          g$bitwise-ior$22685$1XGIwa
          (g$->bignum$22682$1XGIwa g$ei1$22711$1XGIwa)
          (cons g$ei2$22712$1XGIwa g$rest$22713$1XGIwa)))))
   (g$bitwise-xor$22686$1XGIwa
     g$bitwise-xor$22771$1XGIwa
     (case-lambda
       (() '0)
       ((g$ei$22714$1XGIwa) (g$->bignum$22682$1XGIwa g$ei$22714$1XGIwa))
       ((g$ei1$22715$1XGIwa g$ei2$22716$1XGIwa)
        (g$exact$21620$1XGIwa
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_ExclusiveOr
            '()
            (g$->bignum$22682$1XGIwa g$ei1$22715$1XGIwa)
            (g$->bignum$22682$1XGIwa g$ei2$22716$1XGIwa))))
       ((g$ei1$22717$1XGIwa g$ei2$22718$1XGIwa . g$rest$22719$1XGIwa)
        (g$fold-left$19664$1XGIwa
          g$bitwise-xor$22686$1XGIwa
          (g$->bignum$22682$1XGIwa g$ei1$22717$1XGIwa)
          (cons g$ei2$22718$1XGIwa g$rest$22719$1XGIwa)))))
   (g$bitwise-bit-count$22687$1XGIwa
     g$bitwise-bit-count$22772$1XGIwa
     (case-lambda
       ((g$ei$22720$1XGIwa)
        (if (g$positive?$21617$1XGIwa g$ei$22720$1XGIwa)
          ((letrec ((g$f$22721$1XGIwa
                      (case-lambda
                        ((g$c$22722$1XGIwa g$ei$22723$1XGIwa)
                         (if (g$positive?$21617$1XGIwa
                               g$ei$22723$1XGIwa)
                           (g$f$22721$1XGIwa
                             (+ g$c$22722$1XGIwa
                                (g$bitwise-and$22684$1XGIwa
                                  g$ei$22723$1XGIwa
                                  '1))
                             (g$bitwise-arithmetic-shift-right$22696$1XGIwa
                               g$ei$22723$1XGIwa
                               '1))
                           g$c$22722$1XGIwa)))))
             g$f$22721$1XGIwa)
           '0
           (g$->bignum$22682$1XGIwa g$ei$22720$1XGIwa))
          (g$bitwise-not$22683$1XGIwa
            (g$bitwise-bit-count$22687$1XGIwa
              (g$bitwise-not$22683$1XGIwa g$ei$22720$1XGIwa)))))))
   (g$bitwise-length$22688$1XGIwa
     g$bitwise-length$22773$1XGIwa
     (case-lambda
       ((g$ei$22724$1XGIwa)
        ((case-lambda
           ((g$ei$22725$1XGIwa)
            (if (clr-call-internal
                  'Microsoft.Scripting.Math.BigInteger
                  'op_LessThan
                  '()
                  g$ei$22725$1XGIwa
                  (g$->bignum$22682$1XGIwa '0))
              (g$bitwise-length$22688$1XGIwa
                (g$bitwise-not$22683$1XGIwa g$ei$22725$1XGIwa))
              (clr-call-internal
                'Microsoft.Scripting.Math.BigInteger
                'get_BitLength
                g$ei$22725$1XGIwa))))
         (g$->bignum$22682$1XGIwa g$ei$22724$1XGIwa)))))
   (g$bitwise-first-bit-set$22689$1XGIwa
     g$bitwise-first-bit-set$22774$1XGIwa
     (case-lambda
       ((g$ei$22726$1XGIwa)
        ((case-lambda
           ((g$ei$22727$1XGIwa)
            (if (g$zero?$21616$1XGIwa g$ei$22727$1XGIwa)
              '-1
              ((letrec ((g$f$22728$1XGIwa
                          (case-lambda
                            ((g$c$22729$1XGIwa g$ei$22730$1XGIwa)
                             (if (g$=$21625$1XGIwa
                                   '1
                                   (g$bitwise-and$22684$1XGIwa
                                     g$ei$22730$1XGIwa
                                     '1))
                               g$c$22729$1XGIwa
                               (g$f$22728$1XGIwa
                                 (+ g$c$22729$1XGIwa '1)
                                 (g$bitwise-arithmetic-shift-right$22696$1XGIwa
                                   g$ei$22730$1XGIwa
                                   '1)))))))
                 g$f$22728$1XGIwa)
               '0
               g$ei$22727$1XGIwa))))
         (g$->bignum$22682$1XGIwa g$ei$22726$1XGIwa)))))
   (g$bitwise-bit-set?$22690$1XGIwa
     g$bitwise-bit-set?$22775$1XGIwa
     (case-lambda
       ((g$ei$22731$1XGIwa g$k$22732$1XGIwa)
        ((case-lambda
           ((g$ei$22733$1XGIwa g$k$22734$1XGIwa)
            (begin
              (if (g$negative?$21618$1XGIwa g$k$22734$1XGIwa)
                (assertion-violation
                  'bitwise-bit-set?
                  '"cannot be negative"
                  g$k$22734$1XGIwa)
                (void))
              (if (g$=$21625$1XGIwa '-1 g$ei$22733$1XGIwa)
                '#t
                (begin
                  '#f
                  (g$=$21625$1XGIwa
                    '1
                    (g$bitwise-and$22684$1XGIwa
                      '1
                      (g$bitwise-arithmetic-shift-right$22696$1XGIwa
                        g$ei$22733$1XGIwa
                        g$k$22734$1XGIwa))))))))
         (g$->bignum$22682$1XGIwa g$ei$22731$1XGIwa)
         (g$->bignum$22682$1XGIwa g$k$22732$1XGIwa)))))
   (g$bitwise-if$22691$1XGIwa
     g$bitwise-if$22776$1XGIwa
     (case-lambda
       ((g$ei1$22735$1XGIwa g$ei2$22736$1XGIwa g$ei3$22737$1XGIwa)
        (g$bitwise-ior$22685$1XGIwa
          (g$bitwise-and$22684$1XGIwa
            g$ei1$22735$1XGIwa
            g$ei2$22736$1XGIwa)
          (g$bitwise-and$22684$1XGIwa
            (g$bitwise-not$22683$1XGIwa g$ei1$22735$1XGIwa)
            g$ei3$22737$1XGIwa)))))
   (g$bitwise-copy-bit$22692$1XGIwa
     g$bitwise-copy-bit$22777$1XGIwa
     (case-lambda
       ((g$ei1$22738$1XGIwa g$ei2$22739$1XGIwa g$ei3$22740$1XGIwa)
        (g$bitwise-if$22691$1XGIwa
          (g$bitwise-arithmetic-shift-left$22695$1XGIwa
            '1
            g$ei2$22739$1XGIwa)
          (g$bitwise-arithmetic-shift-left$22695$1XGIwa
            g$ei3$22740$1XGIwa
            g$ei2$22739$1XGIwa)
          g$ei1$22738$1XGIwa))))
   (g$bitwise-bit-field$22693$1XGIwa
     g$bitwise-bit-field$22778$1XGIwa
     (case-lambda
       ((g$ei1$22741$1XGIwa g$ei2$22742$1XGIwa g$ei3$22743$1XGIwa)
        (g$bitwise-arithmetic-shift-right$22696$1XGIwa
          (g$bitwise-and$22684$1XGIwa
            g$ei1$22741$1XGIwa
            (g$bitwise-not$22683$1XGIwa
              (g$bitwise-arithmetic-shift-left$22695$1XGIwa
                '-1
                g$ei3$22743$1XGIwa)))
          g$ei2$22742$1XGIwa))))
   (g$bitwise-copy-bit-field$22694$1XGIwa
     g$bitwise-copy-bit-field$22779$1XGIwa
     (case-lambda
       ((g$to$22744$1XGIwa
          g$start$22745$1XGIwa
          g$end$22746$1XGIwa
          g$from$22747$1XGIwa)
        (g$bitwise-if$22691$1XGIwa
          (g$bitwise-and$22684$1XGIwa
            (g$bitwise-arithmetic-shift-left$22695$1XGIwa
              '-1
              g$start$22745$1XGIwa)
            (g$bitwise-not$22683$1XGIwa
              (g$bitwise-arithmetic-shift-left$22695$1XGIwa
                '-1
                g$end$22746$1XGIwa)))
          (g$bitwise-arithmetic-shift-left$22695$1XGIwa
            g$from$22747$1XGIwa
            g$start$22745$1XGIwa)
          g$to$22744$1XGIwa))))
   (g$bitwise-arithmetic-shift-left$22695$1XGIwa
     g$bitwise-arithmetic-shift-left$22780$1XGIwa
     (case-lambda
       ((g$ei1$22748$1XGIwa g$ei2$22749$1XGIwa)
        (bitwise-arithmetic-shift
          g$ei1$22748$1XGIwa
          g$ei2$22749$1XGIwa))))
   (g$bitwise-arithmetic-shift-right$22696$1XGIwa
     g$bitwise-arithmetic-shift-right$22781$1XGIwa
     (case-lambda
       ((g$ei1$22750$1XGIwa g$ei2$22751$1XGIwa)
        (bitwise-arithmetic-shift
          g$ei1$22750$1XGIwa
          (- g$ei2$22751$1XGIwa)))))
   (g$bitwise-rotate-bit-field$22697$1XGIwa
     g$bitwise-rotate-bit-field$22782$1XGIwa
     (case-lambda
       ((g$n$22752$1XGIwa
          g$start$22753$1XGIwa
          g$end$22754$1XGIwa
          g$count$22755$1XGIwa)
        ((case-lambda
           ((g$width$22756$1XGIwa)
            (if (g$positive?$21617$1XGIwa g$width$22756$1XGIwa)
              ((case-lambda
                 ((g$count$22757$1XGIwa g$field$22758$1XGIwa)
                  (g$bitwise-copy-bit-field$22694$1XGIwa
                    g$n$22752$1XGIwa
                    g$start$22753$1XGIwa
                    g$end$22754$1XGIwa
                    (g$bitwise-ior$22685$1XGIwa
                      (g$bitwise-arithmetic-shift-left$22695$1XGIwa
                        g$field$22758$1XGIwa
                        g$count$22757$1XGIwa)
                      (g$bitwise-arithmetic-shift-right$22696$1XGIwa
                        g$field$22758$1XGIwa
                        (- g$width$22756$1XGIwa
                           g$count$22757$1XGIwa))))))
               (g$mod$20596$1XGIwa
                 g$count$22755$1XGIwa
                 g$width$22756$1XGIwa)
               (g$bitwise-bit-field$22693$1XGIwa
                 g$n$22752$1XGIwa
                 g$start$22753$1XGIwa
                 g$end$22754$1XGIwa))
              g$n$22752$1XGIwa)))
         (- g$end$22754$1XGIwa g$start$22753$1XGIwa)))))
   (g$bitwise-reverse-bit-field$22698$1XGIwa
     g$bitwise-reverse-bit-field$22783$1XGIwa
     (case-lambda
       ((g$x1$22759$1XGIwa g$start$22760$1XGIwa g$end$22761$1XGIwa)
        (begin
          (if (not (g$<$21626$1XGIwa
                     g$start$22760$1XGIwa
                     g$end$22761$1XGIwa))
            (assertion-violation
              'bitwise-reverse-bit-field
              '"start must be less than end"
              g$start$22760$1XGIwa
              g$end$22761$1XGIwa)
            (void))
          (letrec ((g$loop$22762$1XGIwa
                     (case-lambda
                       ((g$width$22763$1XGIwa
                          g$bits$22764$1XGIwa
                          g$rbits$22765$1XGIwa)
                        (if (g$=$21625$1XGIwa g$width$22763$1XGIwa '0)
                          (begin
                            (if '#f '#f (void))
                            (g$bitwise-copy-bit-field$22694$1XGIwa
                              g$x1$22759$1XGIwa
                              g$start$22760$1XGIwa
                              g$end$22761$1XGIwa
                              g$rbits$22765$1XGIwa))
                          (g$loop$22762$1XGIwa
                            (- g$width$22763$1XGIwa '1)
                            (g$bitwise-arithmetic-shift-right$22696$1XGIwa
                              g$bits$22764$1XGIwa
                              '1)
                            (g$bitwise-ior$22685$1XGIwa
                              (g$bitwise-arithmetic-shift-left$22695$1XGIwa
                                g$rbits$22765$1XGIwa
                                '1)
                              (g$bitwise-and$22684$1XGIwa
                                g$bits$22764$1XGIwa
                                '1))))))))
            (g$loop$22762$1XGIwa
              (- g$end$22761$1XGIwa g$start$22760$1XGIwa)
              (g$bitwise-bit-field$22693$1XGIwa
                g$x1$22759$1XGIwa
                g$start$22760$1XGIwa
                g$end$22761$1XGIwa)
              '0)))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$greatest-fixnum$22784$1XGIwa
     g$greatest-fixnum$25013$1XGIwa
     (case-lambda (() '2147483647)))
   (g$least-fixnum$22785$1XGIwa
     g$least-fixnum$25014$1XGIwa
     (case-lambda (() '-2147483648)))
   (g$fx+$22891$1XGIwa
     g$fx+$25015$1XGIwa
     (case-lambda
       ((g$x1$23286$1XGIwa g$x2$23287$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$23286$1XGIwa))
            (assertion-violation 'fx+ '"not a fixnum" g$x1$23286$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$x2$23287$1XGIwa))
            (assertion-violation 'fx+ '"not a fixnum" g$x2$23287$1XGIwa)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx+ g$x1$23286$1XGIwa g$x2$23287$1XGIwa)
                (g$overflow-error$22894$1XGIwa '#f)))))))))
   (g$fx*$22892$1XGIwa
     g$fx*$25016$1XGIwa
     (case-lambda
       ((g$x1$23288$1XGIwa g$x2$23289$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$23288$1XGIwa))
            (assertion-violation 'fx* '"not a fixnum" g$x1$23288$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$x2$23289$1XGIwa))
            (assertion-violation 'fx* '"not a fixnum" g$x2$23289$1XGIwa)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx* g$x1$23288$1XGIwa g$x2$23289$1XGIwa)
                (g$overflow-error$22894$1XGIwa '#f)))))))))
   (g$fx-$22893$1XGIwa
     g$fx-$25017$1XGIwa
     (case-lambda
       ((g$x1$23290$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$23290$1XGIwa))
            (assertion-violation 'fx- '"not a fixnum" g$x1$23290$1XGIwa)
            (void))
          (if ($fx=? (g$least-fixnum$22785$1XGIwa) g$x1$23290$1XGIwa)
            (g$overflow-error$22894$1XGIwa 'fx- g$x1$23290$1XGIwa)
            (void))
          ($$fx- g$x1$23290$1XGIwa)))
       ((g$x1$23291$1XGIwa g$x2$23292$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$23291$1XGIwa))
            (assertion-violation 'fx- '"not a fixnum" g$x1$23291$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$x2$23292$1XGIwa))
            (assertion-violation 'fx- '"not a fixnum" g$x2$23292$1XGIwa)
            (void))
          ($try
            ($fx- g$x1$23291$1XGIwa g$x2$23292$1XGIwa)
            (g$overflow-error$22894$1XGIwa '#f))))))
   (g$overflow-error$22894$1XGIwa
     g$overflow-error$25018$1XGIwa
     (case-lambda
       ((g$name$23293$1XGIwa . g$irritants$23294$1XGIwa)
        (raise
          (condition
            (g$make-implementation-restriction-violation$22196$1XGIwa)
            (g$make-who-condition$22158$1XGIwa g$name$23293$1XGIwa)
            (g$make-message-condition$22098$1XGIwa
              '"arithmetic overflow")
            (g$make-irritants-condition$22148$1XGIwa
              g$irritants$23294$1XGIwa))))))
   (g$residual-fxarithmetic-shift*$22910$1XGIwa
     g$residual-fxarithmetic-shift*$25019$1XGIwa
     (case-lambda
       ((g$x$23315$1XGIwa g$k$23316$1XGIwa)
        (if ($fx=? g$k$23316$1XGIwa '0)
          g$x$23315$1XGIwa
          (if ($fx<? g$k$23316$1XGIwa '0)
            ($fxarithmetic-shift-right
              g$x$23315$1XGIwa
              ($$fx- g$k$23316$1XGIwa))
            (begin
              '#f
              ((case-lambda
                 ((g$i$23317$1XGIwa)
                  (begin
                    (if ($fx>?
                          (clr-call-internal
                            'System.Math
                            '"abs(int32)"
                            '()
                            g$x$23315$1XGIwa)
                          (clr-call-internal
                            'System.Math
                            '"abs(int32)"
                            '()
                            g$i$23317$1XGIwa))
                      (g$overflow-error$22894$1XGIwa
                        'fxarithmetic-shift
                        g$x$23315$1XGIwa
                        g$k$23316$1XGIwa)
                      (void))
                    g$i$23317$1XGIwa)))
               ($fxarithmetic-shift-left
                 g$x$23315$1XGIwa
                 g$k$23316$1XGIwa))))))))
   (g$fxarithmetic-shift$22911$1XGIwa
     g$fxarithmetic-shift$25020$1XGIwa
     (case-lambda
       ((g$x$23318$1XGIwa g$k$23319$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x$23318$1XGIwa))
            (assertion-violation
              'fxarithmetic-shift
              '"not a fixnum"
              g$x$23318$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$k$23319$1XGIwa))
            (assertion-violation
              'fxarithmetic-shift
              '"not a fixnum"
              g$k$23319$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$23340$1XGIwa g$k$23341$1XGIwa)
                  (if ($fx=? g$k$23341$1XGIwa '0)
                    g$x$23340$1XGIwa
                    (if ($fx<? g$k$23341$1XGIwa '0)
                      ($fxarithmetic-shift-right
                        g$x$23340$1XGIwa
                        ($$fx- g$k$23341$1XGIwa))
                      (begin
                        '#f
                        ((case-lambda
                           ((g$i$23342$1XGIwa)
                            (begin
                              (if ($fx>?
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$x$23340$1XGIwa)
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$i$23342$1XGIwa))
                                (g$overflow-error$22894$1XGIwa
                                  'fxarithmetic-shift
                                  g$x$23340$1XGIwa
                                  g$k$23341$1XGIwa)
                                (void))
                              g$i$23342$1XGIwa)))
                         ($fxarithmetic-shift-left
                           g$x$23340$1XGIwa
                           g$k$23341$1XGIwa)))))))
               g$x$23318$1XGIwa
               g$k$23319$1XGIwa))))))))
   (g$residual-fxbit-count*$22927$1XGIwa
     g$residual-fxbit-count*$25021$1XGIwa
     (case-lambda
       ((g$x$23363$1XGIwa)
        (if ($fx<=? g$x$23363$1XGIwa '0)
          ($fxnot
            (g$residual-fxbit-count*$22927$1XGIwa
              ($fxnot g$x$23363$1XGIwa)))
          ((letrec ((g$f$23364$1XGIwa
                      (case-lambda
                        ((g$count$23365$1XGIwa g$x$23366$1XGIwa)
                         (if ($fx<? '0 g$x$23366$1XGIwa)
                           (g$f$23364$1XGIwa
                             ($$fx+
                               g$count$23365$1XGIwa
                               ($fxand g$x$23366$1XGIwa '1))
                             ($fxarithmetic-shift-right
                               g$x$23366$1XGIwa
                               '1))
                           g$count$23365$1XGIwa)))))
             g$f$23364$1XGIwa)
           '0
           g$x$23363$1XGIwa)))))
   (g$fxbit-count$22928$1XGIwa
     g$fxbit-count$25022$1XGIwa
     (case-lambda
       ((g$x$23367$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x$23367$1XGIwa))
            (assertion-violation
              'fxbit-count
              '"not a fixnum"
              g$x$23367$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$23388$1XGIwa)
                  (if ($fx<=? g$x$23388$1XGIwa '0)
                    ($fxnot
                      (g$residual-fxbit-count*$22927$1XGIwa
                        ($fxnot g$x$23388$1XGIwa)))
                    ((letrec ((g$f$23389$1XGIwa
                                (case-lambda
                                  ((g$count$23390$1XGIwa
                                     g$x$23391$1XGIwa)
                                   (if ($fx<? '0 g$x$23391$1XGIwa)
                                     (g$f$23389$1XGIwa
                                       ($$fx+
                                         g$count$23390$1XGIwa
                                         ($fxand g$x$23391$1XGIwa '1))
                                       ($fxarithmetic-shift-right
                                         g$x$23391$1XGIwa
                                         '1))
                                     g$count$23390$1XGIwa)))))
                       g$f$23389$1XGIwa)
                     '0
                     g$x$23388$1XGIwa))))
               g$x$23367$1XGIwa))))))))
   (g$residual-fxlength*$22944$1XGIwa
     g$residual-fxlength*$25023$1XGIwa
     (case-lambda
       ((g$x$23412$1XGIwa)
        (if ($fx<? g$x$23412$1XGIwa '0)
          (g$residual-fxlength*$22944$1XGIwa ($fxnot g$x$23412$1XGIwa))
          ((letrec ((g$f$23413$1XGIwa
                      (case-lambda
                        ((g$count$23414$1XGIwa g$x$23415$1XGIwa)
                         (if ($fx<? '0 g$x$23415$1XGIwa)
                           (g$f$23413$1XGIwa
                             ($$fx+ g$count$23414$1XGIwa '1)
                             ($fxarithmetic-shift-right
                               g$x$23415$1XGIwa
                               '1))
                           g$count$23414$1XGIwa)))))
             g$f$23413$1XGIwa)
           '0
           g$x$23412$1XGIwa)))))
   (g$fxlength$22945$1XGIwa
     g$fxlength$25024$1XGIwa
     (case-lambda
       ((g$x$23416$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x$23416$1XGIwa))
            (assertion-violation
              'fxlength
              '"not a fixnum"
              g$x$23416$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$23437$1XGIwa)
                  (if ($fx<? g$x$23437$1XGIwa '0)
                    (g$residual-fxlength*$22944$1XGIwa
                      ($fxnot g$x$23437$1XGIwa))
                    ((letrec ((g$f$23438$1XGIwa
                                (case-lambda
                                  ((g$count$23439$1XGIwa
                                     g$x$23440$1XGIwa)
                                   (if ($fx<? '0 g$x$23440$1XGIwa)
                                     (g$f$23438$1XGIwa
                                       ($$fx+ g$count$23439$1XGIwa '1)
                                       ($fxarithmetic-shift-right
                                         g$x$23440$1XGIwa
                                         '1))
                                     g$count$23439$1XGIwa)))))
                       g$f$23438$1XGIwa)
                     '0
                     g$x$23437$1XGIwa))))
               g$x$23416$1XGIwa))))))))
   (g$fxfirst-bit-set$22946$1XGIwa
     g$fxfirst-bit-set$25025$1XGIwa
     (case-lambda
       ((g$x$23441$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x$23441$1XGIwa))
            (assertion-violation
              'fxfirst-bit-set
              '"not a fixnum"
              g$x$23441$1XGIwa)
            (void))
          ((case-lambda
             (()
              (if ($fx=? g$x$23441$1XGIwa '0)
                '-1
                ((letrec ((g$f$23442$1XGIwa
                            (case-lambda
                              ((g$count$23443$1XGIwa g$x$23444$1XGIwa)
                               (if (not ($fx=? '0 g$x$23444$1XGIwa))
                                 (if ($fx=?
                                       '1
                                       ($fxand '1 g$x$23444$1XGIwa))
                                   g$count$23443$1XGIwa
                                   (g$f$23442$1XGIwa
                                     ($$fx+ g$count$23443$1XGIwa '1)
                                     ($fxarithmetic-shift-right
                                       g$x$23444$1XGIwa
                                       '1)))
                                 g$count$23443$1XGIwa)))))
                   g$f$23442$1XGIwa)
                 '0
                 g$x$23441$1XGIwa)))))))))
   (g$fxbit-set?$22947$1XGIwa
     g$fxbit-set?$25026$1XGIwa
     (case-lambda
       ((g$x$23445$1XGIwa g$k$23446$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x$23445$1XGIwa))
            (assertion-violation
              'fxbit-set?
              '"not a fixnum"
              g$x$23445$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$k$23446$1XGIwa))
            (assertion-violation
              'fxbit-set?
              '"not a fixnum"
              g$k$23446$1XGIwa)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx<? g$k$23446$1XGIwa '0)
                  (assertion-violation
                    'fxbit-set?
                    '"cannot be negative"
                    g$k$23446$1XGIwa)
                  (void))
                (if ($fx>=? g$k$23446$1XGIwa '32)
                  (assertion-violation
                    'fxbit-set?
                    '"cannot be larger than 31"
                    g$k$23446$1XGIwa)
                  (void))
                (if ($fx=? '0 g$x$23445$1XGIwa)
                  '#f
                  ($fx=?
                    '1
                    ($fxand
                      '1
                      ($fxarithmetic-shift-right
                        g$x$23445$1XGIwa
                        g$k$23446$1XGIwa))))))))))))
   (g$fxnot$22948$1XGIwa
     g$fxnot$25027$1XGIwa
     (case-lambda
       ((g$x1$23447$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$23447$1XGIwa))
            (assertion-violation
              'fxnot
              '"not a fixnum"
              g$x1$23447$1XGIwa)
            (void))
          ((case-lambda (() ($fxnot g$x1$23447$1XGIwa))))))))
   (g$fx=?$22999$1XGIwa
     g$fx=?$25028$1XGIwa
     (case-lambda
       ((g$x1$23448$1XGIwa g$x2$23449$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$23448$1XGIwa))
            (assertion-violation
              'fx=?
              '"not a fixnum"
              g$x1$23448$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$x2$23449$1XGIwa))
            (assertion-violation
              'fx=?
              '"not a fixnum"
              g$x2$23449$1XGIwa)
            (void))
          ($fx=? g$x1$23448$1XGIwa g$x2$23449$1XGIwa)))
       ((g$x1$23450$1XGIwa g$x2$23451$1XGIwa . g$rest$23452$1XGIwa)
        ((letrec ((g$f$23453$1XGIwa
                    (case-lambda
                      ((g$a$23454$1XGIwa g$b$23455$1XGIwa)
                       (if (null? g$b$23455$1XGIwa)
                         '#t
                         (if (g$fx=?$22999$1XGIwa
                               g$a$23454$1XGIwa
                               ($car g$b$23455$1XGIwa))
                           (g$f$23453$1XGIwa
                             ($car g$b$23455$1XGIwa)
                             ($cdr g$b$23455$1XGIwa))
                           (begin '#f '#f)))))))
           g$f$23453$1XGIwa)
         g$x1$23450$1XGIwa
         (cons g$x2$23451$1XGIwa g$rest$23452$1XGIwa)))))
   (g$fx<?$23000$1XGIwa
     g$fx<?$25029$1XGIwa
     (case-lambda
       ((g$x1$23456$1XGIwa g$x2$23457$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$23456$1XGIwa))
            (assertion-violation
              'fx<?
              '"not a fixnum"
              g$x1$23456$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$x2$23457$1XGIwa))
            (assertion-violation
              'fx<?
              '"not a fixnum"
              g$x2$23457$1XGIwa)
            (void))
          ($fx<? g$x1$23456$1XGIwa g$x2$23457$1XGIwa)))
       ((g$x1$23458$1XGIwa g$x2$23459$1XGIwa . g$rest$23460$1XGIwa)
        ((letrec ((g$f$23461$1XGIwa
                    (case-lambda
                      ((g$a$23462$1XGIwa g$b$23463$1XGIwa)
                       (if (null? g$b$23463$1XGIwa)
                         '#t
                         (if (g$fx<?$23000$1XGIwa
                               g$a$23462$1XGIwa
                               ($car g$b$23463$1XGIwa))
                           (g$f$23461$1XGIwa
                             ($car g$b$23463$1XGIwa)
                             ($cdr g$b$23463$1XGIwa))
                           (begin '#f '#f)))))))
           g$f$23461$1XGIwa)
         g$x1$23458$1XGIwa
         (cons g$x2$23459$1XGIwa g$rest$23460$1XGIwa)))))
   (g$fx<=?$23001$1XGIwa
     g$fx<=?$25030$1XGIwa
     (case-lambda
       ((g$x1$23464$1XGIwa g$x2$23465$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$23464$1XGIwa))
            (assertion-violation
              'fx<=?
              '"not a fixnum"
              g$x1$23464$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$x2$23465$1XGIwa))
            (assertion-violation
              'fx<=?
              '"not a fixnum"
              g$x2$23465$1XGIwa)
            (void))
          ($fx<=? g$x1$23464$1XGIwa g$x2$23465$1XGIwa)))
       ((g$x1$23466$1XGIwa g$x2$23467$1XGIwa . g$rest$23468$1XGIwa)
        ((letrec ((g$f$23469$1XGIwa
                    (case-lambda
                      ((g$a$23470$1XGIwa g$b$23471$1XGIwa)
                       (if (null? g$b$23471$1XGIwa)
                         '#t
                         (if (g$fx<=?$23001$1XGIwa
                               g$a$23470$1XGIwa
                               ($car g$b$23471$1XGIwa))
                           (g$f$23469$1XGIwa
                             ($car g$b$23471$1XGIwa)
                             ($cdr g$b$23471$1XGIwa))
                           (begin '#f '#f)))))))
           g$f$23469$1XGIwa)
         g$x1$23466$1XGIwa
         (cons g$x2$23467$1XGIwa g$rest$23468$1XGIwa)))))
   (g$fx>?$23002$1XGIwa
     g$fx>?$25031$1XGIwa
     (case-lambda
       ((g$x1$23472$1XGIwa g$x2$23473$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$23472$1XGIwa))
            (assertion-violation
              'fx>?
              '"not a fixnum"
              g$x1$23472$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$x2$23473$1XGIwa))
            (assertion-violation
              'fx>?
              '"not a fixnum"
              g$x2$23473$1XGIwa)
            (void))
          ($fx>? g$x1$23472$1XGIwa g$x2$23473$1XGIwa)))
       ((g$x1$23474$1XGIwa g$x2$23475$1XGIwa . g$rest$23476$1XGIwa)
        ((letrec ((g$f$23477$1XGIwa
                    (case-lambda
                      ((g$a$23478$1XGIwa g$b$23479$1XGIwa)
                       (if (null? g$b$23479$1XGIwa)
                         '#t
                         (if (g$fx>?$23002$1XGIwa
                               g$a$23478$1XGIwa
                               ($car g$b$23479$1XGIwa))
                           (g$f$23477$1XGIwa
                             ($car g$b$23479$1XGIwa)
                             ($cdr g$b$23479$1XGIwa))
                           (begin '#f '#f)))))))
           g$f$23477$1XGIwa)
         g$x1$23474$1XGIwa
         (cons g$x2$23475$1XGIwa g$rest$23476$1XGIwa)))))
   (g$fx>=?$23003$1XGIwa
     g$fx>=?$25032$1XGIwa
     (case-lambda
       ((g$x1$23480$1XGIwa g$x2$23481$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$23480$1XGIwa))
            (assertion-violation
              'fx>=?
              '"not a fixnum"
              g$x1$23480$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$x2$23481$1XGIwa))
            (assertion-violation
              'fx>=?
              '"not a fixnum"
              g$x2$23481$1XGIwa)
            (void))
          ($fx>=? g$x1$23480$1XGIwa g$x2$23481$1XGIwa)))
       ((g$x1$23482$1XGIwa g$x2$23483$1XGIwa . g$rest$23484$1XGIwa)
        ((letrec ((g$f$23485$1XGIwa
                    (case-lambda
                      ((g$a$23486$1XGIwa g$b$23487$1XGIwa)
                       (if (null? g$b$23487$1XGIwa)
                         '#t
                         (if (g$fx>=?$23003$1XGIwa
                               g$a$23486$1XGIwa
                               ($car g$b$23487$1XGIwa))
                           (g$f$23485$1XGIwa
                             ($car g$b$23487$1XGIwa)
                             ($cdr g$b$23487$1XGIwa))
                           (begin '#f '#f)))))))
           g$f$23485$1XGIwa)
         g$x1$23482$1XGIwa
         (cons g$x2$23483$1XGIwa g$rest$23484$1XGIwa)))))
   (g$fxand$23051$1XGIwa
     g$fxand$25033$1XGIwa
     (case-lambda
       (() '-1)
       ((g$x1$23488$1XGIwa g$x2$23489$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$23488$1XGIwa))
            (assertion-violation
              'fxand
              '"not a fixnum"
              g$x1$23488$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$x2$23489$1XGIwa))
            (assertion-violation
              'fxand
              '"not a fixnum"
              g$x2$23489$1XGIwa)
            (void))
          ($fxand g$x1$23488$1XGIwa g$x2$23489$1XGIwa)))
       (g$args$23490$1XGIwa
        (g$fold-left$19664$1XGIwa
          g$fxand$23051$1XGIwa
          (g$fxand$23051$1XGIwa)
          g$args$23490$1XGIwa))))
   (g$fxior$23052$1XGIwa
     g$fxior$25034$1XGIwa
     (case-lambda
       (() '0)
       ((g$x1$23491$1XGIwa g$x2$23492$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$23491$1XGIwa))
            (assertion-violation
              'fxior
              '"not a fixnum"
              g$x1$23491$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$x2$23492$1XGIwa))
            (assertion-violation
              'fxior
              '"not a fixnum"
              g$x2$23492$1XGIwa)
            (void))
          ($fxior g$x1$23491$1XGIwa g$x2$23492$1XGIwa)))
       (g$args$23493$1XGIwa
        (g$fold-left$19664$1XGIwa
          g$fxior$23052$1XGIwa
          (g$fxior$23052$1XGIwa)
          g$args$23493$1XGIwa))))
   (g$fxxor$23053$1XGIwa
     g$fxxor$25035$1XGIwa
     (case-lambda
       (() '0)
       ((g$x1$23494$1XGIwa g$x2$23495$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$23494$1XGIwa))
            (assertion-violation
              'fxxor
              '"not a fixnum"
              g$x1$23494$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$x2$23495$1XGIwa))
            (assertion-violation
              'fxxor
              '"not a fixnum"
              g$x2$23495$1XGIwa)
            (void))
          ($fxxor g$x1$23494$1XGIwa g$x2$23495$1XGIwa)))
       (g$args$23496$1XGIwa
        (g$fold-left$19664$1XGIwa
          g$fxxor$23053$1XGIwa
          (g$fxxor$23053$1XGIwa)
          g$args$23496$1XGIwa))))
   (g$residual-fxdiv*$23069$1XGIwa
     g$residual-fxdiv*$25036$1XGIwa
     (case-lambda
       ((g$x1$23517$1XGIwa g$x2$23518$1XGIwa)
        (begin
          (if ($fx=? '0 g$x2$23518$1XGIwa)
            (assertion-violation
              'fxdiv
              '"divide by zero"
              g$x1$23517$1XGIwa
              g$x2$23518$1XGIwa)
            (void))
          (if (if ($fx=? '-1 g$x2$23518$1XGIwa)
                (begin
                  '#f
                  ($fx=?
                    (g$least-fixnum$22785$1XGIwa)
                    g$x1$23517$1XGIwa))
                '#f)
            (g$overflow-error$22894$1XGIwa
              'fxdiv
              g$x1$23517$1XGIwa
              g$x2$23518$1XGIwa)
            (void))
          (if ($fx=? '0 g$x1$23517$1XGIwa)
            '0
            (if ($fx<? '0 g$x1$23517$1XGIwa)
              ((case-lambda
                 ((g$x1$23539$1XGIwa g$x2$23540$1XGIwa)
                  ($fxdiv0 g$x1$23539$1XGIwa g$x2$23540$1XGIwa)))
               g$x1$23517$1XGIwa
               g$x2$23518$1XGIwa)
              (if ($fx<? '0 g$x2$23518$1XGIwa)
                ((case-lambda
                   ((g$x1$23561$1XGIwa g$x2$23562$1XGIwa)
                    ($fxdiv0 g$x1$23561$1XGIwa g$x2$23562$1XGIwa)))
                 ($$fx- g$x1$23517$1XGIwa ($$fx- g$x2$23518$1XGIwa '1))
                 g$x2$23518$1XGIwa)
                (begin
                  '#f
                  ((case-lambda
                     ((g$x1$23583$1XGIwa g$x2$23584$1XGIwa)
                      ($fxdiv0 g$x1$23583$1XGIwa g$x2$23584$1XGIwa)))
                   ($$fx+
                     g$x1$23517$1XGIwa
                     ($$fx+ g$x2$23518$1XGIwa '1))
                   g$x2$23518$1XGIwa)))))))))
   (g$fxdiv$23070$1XGIwa
     g$fxdiv$25037$1XGIwa
     (case-lambda
       ((g$x1$23585$1XGIwa g$x2$23586$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$23585$1XGIwa))
            (assertion-violation
              'fxdiv
              '"not a fixnum"
              g$x1$23585$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$x2$23586$1XGIwa))
            (assertion-violation
              'fxdiv
              '"not a fixnum"
              g$x2$23586$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$23607$1XGIwa g$x2$23608$1XGIwa)
                  (begin
                    (if ($fx=? '0 g$x2$23608$1XGIwa)
                      (assertion-violation
                        'fxdiv
                        '"divide by zero"
                        g$x1$23607$1XGIwa
                        g$x2$23608$1XGIwa)
                      (void))
                    (if (if ($fx=? '-1 g$x2$23608$1XGIwa)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$22785$1XGIwa)
                              g$x1$23607$1XGIwa))
                          '#f)
                      (g$overflow-error$22894$1XGIwa
                        'fxdiv
                        g$x1$23607$1XGIwa
                        g$x2$23608$1XGIwa)
                      (void))
                    (if ($fx=? '0 g$x1$23607$1XGIwa)
                      '0
                      (if ($fx<? '0 g$x1$23607$1XGIwa)
                        ((case-lambda
                           ((g$x1$23629$1XGIwa g$x2$23630$1XGIwa)
                            ($fxdiv0
                              g$x1$23629$1XGIwa
                              g$x2$23630$1XGIwa)))
                         g$x1$23607$1XGIwa
                         g$x2$23608$1XGIwa)
                        (if ($fx<? '0 g$x2$23608$1XGIwa)
                          ((case-lambda
                             ((g$x1$23651$1XGIwa g$x2$23652$1XGIwa)
                              ($fxdiv0
                                g$x1$23651$1XGIwa
                                g$x2$23652$1XGIwa)))
                           ($$fx-
                             g$x1$23607$1XGIwa
                             ($$fx- g$x2$23608$1XGIwa '1))
                           g$x2$23608$1XGIwa)
                          (begin
                            '#f
                            ((case-lambda
                               ((g$x1$23673$1XGIwa g$x2$23674$1XGIwa)
                                ($fxdiv0
                                  g$x1$23673$1XGIwa
                                  g$x2$23674$1XGIwa)))
                             ($$fx+
                               g$x1$23607$1XGIwa
                               ($$fx+ g$x2$23608$1XGIwa '1))
                             g$x2$23608$1XGIwa))))))))
               g$x1$23585$1XGIwa
               g$x2$23586$1XGIwa))))))))
   (g$residual-fxmod*$23086$1XGIwa
     g$residual-fxmod*$25038$1XGIwa
     (case-lambda
       ((g$x1$23695$1XGIwa g$x2$23696$1XGIwa)
        ($$fx-
          g$x1$23695$1XGIwa
          ($$fx*
            ((case-lambda
               ((g$x1$23717$1XGIwa g$x2$23718$1XGIwa)
                (begin
                  (if ($fx=? '0 g$x2$23718$1XGIwa)
                    (assertion-violation
                      'fxdiv
                      '"divide by zero"
                      g$x1$23717$1XGIwa
                      g$x2$23718$1XGIwa)
                    (void))
                  (if (if ($fx=? '-1 g$x2$23718$1XGIwa)
                        (begin
                          '#f
                          ($fx=?
                            (g$least-fixnum$22785$1XGIwa)
                            g$x1$23717$1XGIwa))
                        '#f)
                    (g$overflow-error$22894$1XGIwa
                      'fxdiv
                      g$x1$23717$1XGIwa
                      g$x2$23718$1XGIwa)
                    (void))
                  (if ($fx=? '0 g$x1$23717$1XGIwa)
                    '0
                    (if ($fx<? '0 g$x1$23717$1XGIwa)
                      ((case-lambda
                         ((g$x1$23739$1XGIwa g$x2$23740$1XGIwa)
                          ($fxdiv0
                            g$x1$23739$1XGIwa
                            g$x2$23740$1XGIwa)))
                       g$x1$23717$1XGIwa
                       g$x2$23718$1XGIwa)
                      (if ($fx<? '0 g$x2$23718$1XGIwa)
                        ((case-lambda
                           ((g$x1$23761$1XGIwa g$x2$23762$1XGIwa)
                            ($fxdiv0
                              g$x1$23761$1XGIwa
                              g$x2$23762$1XGIwa)))
                         ($$fx-
                           g$x1$23717$1XGIwa
                           ($$fx- g$x2$23718$1XGIwa '1))
                         g$x2$23718$1XGIwa)
                        (begin
                          '#f
                          ((case-lambda
                             ((g$x1$23783$1XGIwa g$x2$23784$1XGIwa)
                              ($fxdiv0
                                g$x1$23783$1XGIwa
                                g$x2$23784$1XGIwa)))
                           ($$fx+
                             g$x1$23717$1XGIwa
                             ($$fx+ g$x2$23718$1XGIwa '1))
                           g$x2$23718$1XGIwa))))))))
             g$x1$23695$1XGIwa
             g$x2$23696$1XGIwa)
            g$x2$23696$1XGIwa)))))
   (g$fxmod$23087$1XGIwa
     g$fxmod$25039$1XGIwa
     (case-lambda
       ((g$x1$23785$1XGIwa g$x2$23786$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$23785$1XGIwa))
            (assertion-violation
              'fxmod
              '"not a fixnum"
              g$x1$23785$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$x2$23786$1XGIwa))
            (assertion-violation
              'fxmod
              '"not a fixnum"
              g$x2$23786$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$23807$1XGIwa g$x2$23808$1XGIwa)
                  ($$fx-
                    g$x1$23807$1XGIwa
                    ($$fx*
                      ((case-lambda
                         ((g$x1$23829$1XGIwa g$x2$23830$1XGIwa)
                          (begin
                            (if ($fx=? '0 g$x2$23830$1XGIwa)
                              (assertion-violation
                                'fxdiv
                                '"divide by zero"
                                g$x1$23829$1XGIwa
                                g$x2$23830$1XGIwa)
                              (void))
                            (if (if ($fx=? '-1 g$x2$23830$1XGIwa)
                                  (begin
                                    '#f
                                    ($fx=?
                                      (g$least-fixnum$22785$1XGIwa)
                                      g$x1$23829$1XGIwa))
                                  '#f)
                              (g$overflow-error$22894$1XGIwa
                                'fxdiv
                                g$x1$23829$1XGIwa
                                g$x2$23830$1XGIwa)
                              (void))
                            (if ($fx=? '0 g$x1$23829$1XGIwa)
                              '0
                              (if ($fx<? '0 g$x1$23829$1XGIwa)
                                ((case-lambda
                                   ((g$x1$23851$1XGIwa
                                      g$x2$23852$1XGIwa)
                                    ($fxdiv0
                                      g$x1$23851$1XGIwa
                                      g$x2$23852$1XGIwa)))
                                 g$x1$23829$1XGIwa
                                 g$x2$23830$1XGIwa)
                                (if ($fx<? '0 g$x2$23830$1XGIwa)
                                  ((case-lambda
                                     ((g$x1$23873$1XGIwa
                                        g$x2$23874$1XGIwa)
                                      ($fxdiv0
                                        g$x1$23873$1XGIwa
                                        g$x2$23874$1XGIwa)))
                                   ($$fx-
                                     g$x1$23829$1XGIwa
                                     ($$fx- g$x2$23830$1XGIwa '1))
                                   g$x2$23830$1XGIwa)
                                  (begin
                                    '#f
                                    ((case-lambda
                                       ((g$x1$23895$1XGIwa
                                          g$x2$23896$1XGIwa)
                                        ($fxdiv0
                                          g$x1$23895$1XGIwa
                                          g$x2$23896$1XGIwa)))
                                     ($$fx+
                                       g$x1$23829$1XGIwa
                                       ($$fx+ g$x2$23830$1XGIwa '1))
                                     g$x2$23830$1XGIwa))))))))
                       g$x1$23807$1XGIwa
                       g$x2$23808$1XGIwa)
                      g$x2$23808$1XGIwa))))
               g$x1$23785$1XGIwa
               g$x2$23786$1XGIwa))))))))
   (g$fxmod0$23088$1XGIwa
     g$fxmod0$25040$1XGIwa
     (case-lambda
       ((g$x1$23897$1XGIwa g$x2$23898$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$23897$1XGIwa))
            (assertion-violation
              'fxmod0
              '"not a fixnum"
              g$x1$23897$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$x2$23898$1XGIwa))
            (assertion-violation
              'fxmod0
              '"not a fixnum"
              g$x2$23898$1XGIwa)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx=? '0 g$x2$23898$1XGIwa)
                  (assertion-violation
                    'fxmod0
                    '"divide by zero"
                    g$x1$23897$1XGIwa
                    g$x2$23898$1XGIwa)
                  (void))
                (if (if ($fx=? '-1 g$x2$23898$1XGIwa)
                      (begin
                        '#f
                        ($fx=?
                          (g$least-fixnum$22785$1XGIwa)
                          g$x1$23897$1XGIwa))
                      '#f)
                  (g$overflow-error$22894$1XGIwa
                    'fxmod0
                    g$x1$23897$1XGIwa
                    g$x2$23898$1XGIwa)
                  (void))
                ($fxmod0 g$x1$23897$1XGIwa g$x2$23898$1XGIwa)))))))))
   (g$fxdiv-and-mod$23089$1XGIwa
     g$fxdiv-and-mod$25041$1XGIwa
     (case-lambda
       ((g$x1$23899$1XGIwa g$x2$23900$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$23899$1XGIwa))
            (assertion-violation
              'fxdiv-and-mod
              '"not a fixnum"
              g$x1$23899$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$x2$23900$1XGIwa))
            (assertion-violation
              'fxdiv-and-mod
              '"not a fixnum"
              g$x2$23900$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$23901$1XGIwa)
                  (values
                    g$d$23901$1XGIwa
                    ($$fx-
                      g$x1$23899$1XGIwa
                      ($$fx* g$d$23901$1XGIwa g$x2$23900$1XGIwa)))))
               ((case-lambda
                  ((g$x1$23922$1XGIwa g$x2$23923$1XGIwa)
                   (begin
                     (if ($fx=? '0 g$x2$23923$1XGIwa)
                       (assertion-violation
                         'fxdiv
                         '"divide by zero"
                         g$x1$23922$1XGIwa
                         g$x2$23923$1XGIwa)
                       (void))
                     (if (if ($fx=? '-1 g$x2$23923$1XGIwa)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$22785$1XGIwa)
                               g$x1$23922$1XGIwa))
                           '#f)
                       (g$overflow-error$22894$1XGIwa
                         'fxdiv
                         g$x1$23922$1XGIwa
                         g$x2$23923$1XGIwa)
                       (void))
                     (if ($fx=? '0 g$x1$23922$1XGIwa)
                       '0
                       (if ($fx<? '0 g$x1$23922$1XGIwa)
                         ((case-lambda
                            ((g$x1$23944$1XGIwa g$x2$23945$1XGIwa)
                             ($fxdiv0
                               g$x1$23944$1XGIwa
                               g$x2$23945$1XGIwa)))
                          g$x1$23922$1XGIwa
                          g$x2$23923$1XGIwa)
                         (if ($fx<? '0 g$x2$23923$1XGIwa)
                           ((case-lambda
                              ((g$x1$23966$1XGIwa g$x2$23967$1XGIwa)
                               ($fxdiv0
                                 g$x1$23966$1XGIwa
                                 g$x2$23967$1XGIwa)))
                            ($$fx-
                              g$x1$23922$1XGIwa
                              ($$fx- g$x2$23923$1XGIwa '1))
                            g$x2$23923$1XGIwa)
                           (begin
                             '#f
                             ((case-lambda
                                ((g$x1$23988$1XGIwa g$x2$23989$1XGIwa)
                                 ($fxdiv0
                                   g$x1$23988$1XGIwa
                                   g$x2$23989$1XGIwa)))
                              ($$fx+
                                g$x1$23922$1XGIwa
                                ($$fx+ g$x2$23923$1XGIwa '1))
                              g$x2$23923$1XGIwa))))))))
                g$x1$23899$1XGIwa
                g$x2$23900$1XGIwa)))))))))
   (g$residual-fxdiv0*$23105$1XGIwa
     g$residual-fxdiv0*$25042$1XGIwa
     (case-lambda
       ((g$x1$24010$1XGIwa g$x2$24011$1XGIwa)
        (begin
          (if ($fx=? '0 g$x2$24011$1XGIwa)
            (assertion-violation
              'fxdiv0
              '"divide by zero"
              g$x1$24010$1XGIwa
              g$x2$24011$1XGIwa)
            (void))
          (if (if ($fx=? '-1 g$x2$24011$1XGIwa)
                (begin
                  '#f
                  ($fx=?
                    (g$least-fixnum$22785$1XGIwa)
                    g$x1$24010$1XGIwa))
                '#f)
            (g$overflow-error$22894$1XGIwa
              'fxdiv0
              g$x1$24010$1XGIwa
              g$x2$24011$1XGIwa)
            (void))
          ((case-lambda
             ((g$x1$24032$1XGIwa g$x2$24033$1XGIwa)
              ($fxdiv0 g$x1$24032$1XGIwa g$x2$24033$1XGIwa)))
           g$x1$24010$1XGIwa
           g$x2$24011$1XGIwa)))))
   (g$fxdiv0$23106$1XGIwa
     g$fxdiv0$25043$1XGIwa
     (case-lambda
       ((g$x1$24034$1XGIwa g$x2$24035$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$24034$1XGIwa))
            (assertion-violation
              'fxdiv0
              '"not a fixnum"
              g$x1$24034$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$x2$24035$1XGIwa))
            (assertion-violation
              'fxdiv0
              '"not a fixnum"
              g$x2$24035$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$24056$1XGIwa g$x2$24057$1XGIwa)
                  (begin
                    (if ($fx=? '0 g$x2$24057$1XGIwa)
                      (assertion-violation
                        'fxdiv0
                        '"divide by zero"
                        g$x1$24056$1XGIwa
                        g$x2$24057$1XGIwa)
                      (void))
                    (if (if ($fx=? '-1 g$x2$24057$1XGIwa)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$22785$1XGIwa)
                              g$x1$24056$1XGIwa))
                          '#f)
                      (g$overflow-error$22894$1XGIwa
                        'fxdiv0
                        g$x1$24056$1XGIwa
                        g$x2$24057$1XGIwa)
                      (void))
                    ((case-lambda
                       ((g$x1$24078$1XGIwa g$x2$24079$1XGIwa)
                        ($fxdiv0 g$x1$24078$1XGIwa g$x2$24079$1XGIwa)))
                     g$x1$24056$1XGIwa
                     g$x2$24057$1XGIwa))))
               g$x1$24034$1XGIwa
               g$x2$24035$1XGIwa))))))))
   (g$residual-%%fxdiv0$23122$1XGIwa
     g$residual-%%fxdiv0$25044$1XGIwa
     (case-lambda
       ((g$x1$24100$1XGIwa g$x2$24101$1XGIwa)
        ($fxdiv0 g$x1$24100$1XGIwa g$x2$24101$1XGIwa))))
   (g$fxdiv0-and-mod0$23123$1XGIwa
     g$fxdiv0-and-mod0$25045$1XGIwa
     (case-lambda
       ((g$x1$24102$1XGIwa g$x2$24103$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$24102$1XGIwa))
            (assertion-violation
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x1$24102$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$x2$24103$1XGIwa))
            (assertion-violation
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x2$24103$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$24104$1XGIwa)
                  (values
                    g$d$24104$1XGIwa
                    ($$fx-
                      g$x1$24102$1XGIwa
                      ($$fx* g$d$24104$1XGIwa g$x2$24103$1XGIwa)))))
               ((case-lambda
                  ((g$x1$24125$1XGIwa g$x2$24126$1XGIwa)
                   (begin
                     (if ($fx=? '0 g$x2$24126$1XGIwa)
                       (assertion-violation
                         'fxdiv0
                         '"divide by zero"
                         g$x1$24125$1XGIwa
                         g$x2$24126$1XGIwa)
                       (void))
                     (if (if ($fx=? '-1 g$x2$24126$1XGIwa)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$22785$1XGIwa)
                               g$x1$24125$1XGIwa))
                           '#f)
                       (g$overflow-error$22894$1XGIwa
                         'fxdiv0
                         g$x1$24125$1XGIwa
                         g$x2$24126$1XGIwa)
                       (void))
                     ((case-lambda
                        ((g$x1$24147$1XGIwa g$x2$24148$1XGIwa)
                         ($fxdiv0 g$x1$24147$1XGIwa g$x2$24148$1XGIwa)))
                      g$x1$24125$1XGIwa
                      g$x2$24126$1XGIwa))))
                g$x1$24102$1XGIwa
                g$x2$24103$1XGIwa)))))))))
   (g$residual-fxpositive?*$23139$1XGIwa
     g$residual-fxpositive?*$25046$1XGIwa
     (case-lambda ((g$r$24169$1XGIwa) ($fx<? '0 g$r$24169$1XGIwa))))
   (g$fxpositive?$23140$1XGIwa
     g$fxpositive?$25047$1XGIwa
     (case-lambda
       ((g$r$24170$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$r$24170$1XGIwa))
            (assertion-violation
              'fxpositive?
              '"not a fixnum"
              g$r$24170$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$24191$1XGIwa) ($fx<? '0 g$r$24191$1XGIwa)))
               g$r$24170$1XGIwa))))))))
   (g$residual-fxnegative?*$23156$1XGIwa
     g$residual-fxnegative?*$25048$1XGIwa
     (case-lambda ((g$r$24212$1XGIwa) ($fx>? '0 g$r$24212$1XGIwa))))
   (g$fxnegative?$23157$1XGIwa
     g$fxnegative?$25049$1XGIwa
     (case-lambda
       ((g$r$24213$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$r$24213$1XGIwa))
            (assertion-violation
              'fxnegative?
              '"not a fixnum"
              g$r$24213$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$24234$1XGIwa) ($fx>? '0 g$r$24234$1XGIwa)))
               g$r$24213$1XGIwa))))))))
   (g$residual-fxzero?*$23173$1XGIwa
     g$residual-fxzero?*$25050$1XGIwa
     (case-lambda ((g$r$24255$1XGIwa) ($fx=? '0 g$r$24255$1XGIwa))))
   (g$fxzero?$23174$1XGIwa
     g$fxzero?$25051$1XGIwa
     (case-lambda
       ((g$r$24256$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$r$24256$1XGIwa))
            (assertion-violation
              'fxzero?
              '"not a fixnum"
              g$r$24256$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$24277$1XGIwa) ($fx=? '0 g$r$24277$1XGIwa)))
               g$r$24256$1XGIwa))))))))
   (g$residual-fxeven?*$23190$1XGIwa
     g$residual-fxeven?*$25052$1XGIwa
     (case-lambda
       ((g$n$24298$1XGIwa) ($fx=? '0 ($fxand g$n$24298$1XGIwa '1)))))
   (g$fxeven?$23191$1XGIwa
     g$fxeven?$25053$1XGIwa
     (case-lambda
       ((g$n$24299$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$n$24299$1XGIwa))
            (assertion-violation
              'fxeven?
              '"not a fixnum"
              g$n$24299$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$24320$1XGIwa)
                  ($fx=? '0 ($fxand g$n$24320$1XGIwa '1))))
               g$n$24299$1XGIwa))))))))
   (g$residual-fxodd?*$23207$1XGIwa
     g$residual-fxodd?*$25054$1XGIwa
     (case-lambda
       ((g$n$24341$1XGIwa) ($fx=? '1 ($fxand g$n$24341$1XGIwa '1)))))
   (g$fxodd?$23208$1XGIwa
     g$fxodd?$25055$1XGIwa
     (case-lambda
       ((g$n$24342$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$n$24342$1XGIwa))
            (assertion-violation
              'fxodd?
              '"not a fixnum"
              g$n$24342$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$24363$1XGIwa)
                  ($fx=? '1 ($fxand g$n$24363$1XGIwa '1))))
               g$n$24342$1XGIwa))))))))
   (g$fxmax$23209$1XGIwa
     g$fxmax$25056$1XGIwa
     (case-lambda
       ((g$a$24364$1XGIwa . g$rest$24365$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$a$24364$1XGIwa))
            (assertion-violation
              'fxmax
              '"not a fixnum"
              g$a$24364$1XGIwa)
            (void))
          (g$fold-left$19664$1XGIwa
            (case-lambda
              ((g$a$24366$1XGIwa g$b$24367$1XGIwa)
               (if (g$fx<?$23000$1XGIwa
                     g$a$24366$1XGIwa
                     g$b$24367$1XGIwa)
                 g$b$24367$1XGIwa
                 g$a$24366$1XGIwa)))
            g$a$24364$1XGIwa
            g$rest$24365$1XGIwa)))))
   (g$fxmin$23210$1XGIwa
     g$fxmin$25057$1XGIwa
     (case-lambda
       ((g$a$24368$1XGIwa . g$rest$24369$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$a$24368$1XGIwa))
            (assertion-violation
              'fxmin
              '"not a fixnum"
              g$a$24368$1XGIwa)
            (void))
          (g$fold-left$19664$1XGIwa
            (case-lambda
              ((g$a$24370$1XGIwa g$b$24371$1XGIwa)
               (if (g$fx>?$23002$1XGIwa
                     g$a$24370$1XGIwa
                     g$b$24371$1XGIwa)
                 g$b$24371$1XGIwa
                 g$a$24370$1XGIwa)))
            g$a$24368$1XGIwa
            g$rest$24369$1XGIwa)))))
   (g$fx*/carry$23211$1XGIwa
     g$fx*/carry$25058$1XGIwa
     (case-lambda
       ((g$fx1$24372$1XGIwa g$fx2$24373$1XGIwa g$fx3$24374$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$fx1$24372$1XGIwa))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx1$24372$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$fx2$24373$1XGIwa))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx2$24373$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$fx3$24374$1XGIwa))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx3$24374$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$24375$1XGIwa g$e$24376$1XGIwa)
                  (values
                    (g$mod0$20597$1XGIwa
                      g$s$24375$1XGIwa
                      g$e$24376$1XGIwa)
                    (g$div0$20595$1XGIwa
                      g$s$24375$1XGIwa
                      g$e$24376$1XGIwa))))
               (+ (* g$fx1$24372$1XGIwa g$fx2$24373$1XGIwa)
                  g$fx3$24374$1XGIwa)
               (g$expt$21658$1XGIwa
                 '2
                 (g$fixnum-width$20578$1XGIwa))))))))))
   (g$fx-/carry$23212$1XGIwa
     g$fx-/carry$25059$1XGIwa
     (case-lambda
       ((g$fx1$24377$1XGIwa g$fx2$24378$1XGIwa g$fx3$24379$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$fx1$24377$1XGIwa))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx1$24377$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$fx2$24378$1XGIwa))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx2$24378$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$fx3$24379$1XGIwa))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx3$24379$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$24380$1XGIwa g$e$24381$1XGIwa)
                  (values
                    (g$mod0$20597$1XGIwa
                      g$s$24380$1XGIwa
                      g$e$24381$1XGIwa)
                    (g$div0$20595$1XGIwa
                      g$s$24380$1XGIwa
                      g$e$24381$1XGIwa))))
               (- g$fx1$24377$1XGIwa
                  g$fx2$24378$1XGIwa
                  g$fx3$24379$1XGIwa)
               (g$expt$21658$1XGIwa
                 '2
                 (g$fixnum-width$20578$1XGIwa))))))))))
   (g$fx+/carry$23213$1XGIwa
     g$fx+/carry$25060$1XGIwa
     (case-lambda
       ((g$fx1$24382$1XGIwa g$fx2$24383$1XGIwa g$fx3$24384$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$fx1$24382$1XGIwa))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx1$24382$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$fx2$24383$1XGIwa))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx2$24383$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$fx3$24384$1XGIwa))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx3$24384$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$24385$1XGIwa g$e$24386$1XGIwa)
                  (values
                    (g$mod0$20597$1XGIwa
                      g$s$24385$1XGIwa
                      g$e$24386$1XGIwa)
                    (g$div0$20595$1XGIwa
                      g$s$24385$1XGIwa
                      g$e$24386$1XGIwa))))
               (+ g$fx1$24382$1XGIwa
                  g$fx2$24383$1XGIwa
                  g$fx3$24384$1XGIwa)
               (g$expt$21658$1XGIwa
                 '2
                 (g$fixnum-width$20578$1XGIwa))))))))))
   (g$residual-fxif*$23229$1XGIwa
     g$residual-fxif*$25061$1XGIwa
     (case-lambda
       ((g$fx1$24407$1XGIwa g$fx2$24408$1XGIwa g$fx3$24409$1XGIwa)
        ($fxior
          ($fxand g$fx1$24407$1XGIwa g$fx2$24408$1XGIwa)
          ($fxand ($fxnot g$fx1$24407$1XGIwa) g$fx3$24409$1XGIwa)))))
   (g$fxif$23230$1XGIwa
     g$fxif$25062$1XGIwa
     (case-lambda
       ((g$fx1$24410$1XGIwa g$fx2$24411$1XGIwa g$fx3$24412$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$fx1$24410$1XGIwa))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx1$24410$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$fx2$24411$1XGIwa))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx2$24411$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$fx3$24412$1XGIwa))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx3$24412$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$24433$1XGIwa
                    g$fx2$24434$1XGIwa
                    g$fx3$24435$1XGIwa)
                  ($fxior
                    ($fxand g$fx1$24433$1XGIwa g$fx2$24434$1XGIwa)
                    ($fxand
                      ($fxnot g$fx1$24433$1XGIwa)
                      g$fx3$24435$1XGIwa))))
               g$fx1$24410$1XGIwa
               g$fx2$24411$1XGIwa
               g$fx3$24412$1XGIwa))))))))
   (g$residual-fxcopy-bit*$23246$1XGIwa
     g$residual-fxcopy-bit*$25063$1XGIwa
     (case-lambda
       ((g$fx1$24456$1XGIwa g$fx2$24457$1XGIwa g$fx3$24458$1XGIwa)
        ((case-lambda
           ((g$fx1$24479$1XGIwa g$fx2$24480$1XGIwa g$fx3$24481$1XGIwa)
            ($fxior
              ($fxand g$fx1$24479$1XGIwa g$fx2$24480$1XGIwa)
              ($fxand ($fxnot g$fx1$24479$1XGIwa) g$fx3$24481$1XGIwa))))
         ($fxarithmetic-shift-left '1 g$fx2$24457$1XGIwa)
         ($fxarithmetic-shift-left
           g$fx3$24458$1XGIwa
           g$fx2$24457$1XGIwa)
         g$fx1$24456$1XGIwa))))
   (g$fxcopy-bit$23247$1XGIwa
     g$fxcopy-bit$25064$1XGIwa
     (case-lambda
       ((g$fx1$24482$1XGIwa g$fx2$24483$1XGIwa g$fx3$24484$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$fx1$24482$1XGIwa))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx1$24482$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$fx2$24483$1XGIwa))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx2$24483$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$fx3$24484$1XGIwa))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx3$24484$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$24505$1XGIwa
                    g$fx2$24506$1XGIwa
                    g$fx3$24507$1XGIwa)
                  ((case-lambda
                     ((g$fx1$24528$1XGIwa
                        g$fx2$24529$1XGIwa
                        g$fx3$24530$1XGIwa)
                      ($fxior
                        ($fxand g$fx1$24528$1XGIwa g$fx2$24529$1XGIwa)
                        ($fxand
                          ($fxnot g$fx1$24528$1XGIwa)
                          g$fx3$24530$1XGIwa))))
                   ($fxarithmetic-shift-left '1 g$fx2$24506$1XGIwa)
                   ($fxarithmetic-shift-left
                     g$fx3$24507$1XGIwa
                     g$fx2$24506$1XGIwa)
                   g$fx1$24505$1XGIwa)))
               g$fx1$24482$1XGIwa
               g$fx2$24483$1XGIwa
               g$fx3$24484$1XGIwa))))))))
   (g$residual-fxbit-field*$23263$1XGIwa
     g$residual-fxbit-field*$25065$1XGIwa
     (case-lambda
       ((g$fx1$24551$1XGIwa g$fx2$24552$1XGIwa g$fx3$24553$1XGIwa)
        ($fxarithmetic-shift-right
          ($fxand
            g$fx1$24551$1XGIwa
            ($fxnot ($fxarithmetic-shift-left '-1 g$fx3$24553$1XGIwa)))
          g$fx2$24552$1XGIwa))))
   (g$fxbit-field$23264$1XGIwa
     g$fxbit-field$25066$1XGIwa
     (case-lambda
       ((g$fx1$24554$1XGIwa g$fx2$24555$1XGIwa g$fx3$24556$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$fx1$24554$1XGIwa))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx1$24554$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$fx2$24555$1XGIwa))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx2$24555$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$fx3$24556$1XGIwa))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx3$24556$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$24577$1XGIwa
                    g$fx2$24578$1XGIwa
                    g$fx3$24579$1XGIwa)
                  ($fxarithmetic-shift-right
                    ($fxand
                      g$fx1$24577$1XGIwa
                      ($fxnot
                        ($fxarithmetic-shift-left
                          '-1
                          g$fx3$24579$1XGIwa)))
                    g$fx2$24578$1XGIwa)))
               g$fx1$24554$1XGIwa
               g$fx2$24555$1XGIwa
               g$fx3$24556$1XGIwa))))))))
   (g$residual-fxcopy-bit-field*$23280$1XGIwa
     g$residual-fxcopy-bit-field*$25067$1XGIwa
     (case-lambda
       ((g$to$24600$1XGIwa
          g$start$24601$1XGIwa
          g$end$24602$1XGIwa
          g$from$24603$1XGIwa)
        ((case-lambda
           ((g$fx1$24624$1XGIwa g$fx2$24625$1XGIwa g$fx3$24626$1XGIwa)
            ($fxior
              ($fxand g$fx1$24624$1XGIwa g$fx2$24625$1XGIwa)
              ($fxand ($fxnot g$fx1$24624$1XGIwa) g$fx3$24626$1XGIwa))))
         ($fxand
           ($fxarithmetic-shift-left '-1 g$start$24601$1XGIwa)
           ($fxnot ($fxarithmetic-shift-left '-1 g$end$24602$1XGIwa)))
         ($fxarithmetic-shift-left
           g$from$24603$1XGIwa
           g$start$24601$1XGIwa)
         g$to$24600$1XGIwa))))
   (g$fxcopy-bit-field$23281$1XGIwa
     g$fxcopy-bit-field$25068$1XGIwa
     (case-lambda
       ((g$to$24627$1XGIwa
          g$start$24628$1XGIwa
          g$end$24629$1XGIwa
          g$from$24630$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$to$24627$1XGIwa))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$to$24627$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$start$24628$1XGIwa))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$start$24628$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$end$24629$1XGIwa))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$end$24629$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$from$24630$1XGIwa))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$from$24630$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$to$24651$1XGIwa
                    g$start$24652$1XGIwa
                    g$end$24653$1XGIwa
                    g$from$24654$1XGIwa)
                  ((case-lambda
                     ((g$fx1$24675$1XGIwa
                        g$fx2$24676$1XGIwa
                        g$fx3$24677$1XGIwa)
                      ($fxior
                        ($fxand g$fx1$24675$1XGIwa g$fx2$24676$1XGIwa)
                        ($fxand
                          ($fxnot g$fx1$24675$1XGIwa)
                          g$fx3$24677$1XGIwa))))
                   ($fxand
                     ($fxarithmetic-shift-left '-1 g$start$24652$1XGIwa)
                     ($fxnot
                       ($fxarithmetic-shift-left
                         '-1
                         g$end$24653$1XGIwa)))
                   ($fxarithmetic-shift-left
                     g$from$24654$1XGIwa
                     g$start$24652$1XGIwa)
                   g$to$24651$1XGIwa)))
               g$to$24627$1XGIwa
               g$start$24628$1XGIwa
               g$end$24629$1XGIwa
               g$from$24630$1XGIwa))))))))
   (g$fxarithmetic-shift-left$23282$1XGIwa
     g$fxarithmetic-shift-left$25069$1XGIwa
     (case-lambda
       ((g$fx1$24678$1XGIwa g$fx2$24679$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$fx1$24678$1XGIwa))
            (assertion-violation
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx1$24678$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$fx2$24679$1XGIwa))
            (assertion-violation
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx2$24679$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$24700$1XGIwa g$k$24701$1XGIwa)
                  (if ($fx=? g$k$24701$1XGIwa '0)
                    g$x$24700$1XGIwa
                    (if ($fx<? g$k$24701$1XGIwa '0)
                      ($fxarithmetic-shift-right
                        g$x$24700$1XGIwa
                        ($$fx- g$k$24701$1XGIwa))
                      (begin
                        '#f
                        ((case-lambda
                           ((g$i$24702$1XGIwa)
                            (begin
                              (if ($fx>?
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$x$24700$1XGIwa)
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$i$24702$1XGIwa))
                                (g$overflow-error$22894$1XGIwa
                                  'fxarithmetic-shift
                                  g$x$24700$1XGIwa
                                  g$k$24701$1XGIwa)
                                (void))
                              g$i$24702$1XGIwa)))
                         ($fxarithmetic-shift-left
                           g$x$24700$1XGIwa
                           g$k$24701$1XGIwa)))))))
               g$fx1$24678$1XGIwa
               g$fx2$24679$1XGIwa))))))))
   (g$fxarithmetic-shift-right$23283$1XGIwa
     g$fxarithmetic-shift-right$25070$1XGIwa
     (case-lambda
       ((g$fx1$24703$1XGIwa g$fx2$24704$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$fx1$24703$1XGIwa))
            (assertion-violation
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx1$24703$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$fx2$24704$1XGIwa))
            (assertion-violation
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx2$24704$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$24725$1XGIwa g$k$24726$1XGIwa)
                  (if ($fx=? g$k$24726$1XGIwa '0)
                    g$x$24725$1XGIwa
                    (if ($fx<? g$k$24726$1XGIwa '0)
                      ($fxarithmetic-shift-right
                        g$x$24725$1XGIwa
                        ($$fx- g$k$24726$1XGIwa))
                      (begin
                        '#f
                        ((case-lambda
                           ((g$i$24727$1XGIwa)
                            (begin
                              (if ($fx>?
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$x$24725$1XGIwa)
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$i$24727$1XGIwa))
                                (g$overflow-error$22894$1XGIwa
                                  'fxarithmetic-shift
                                  g$x$24725$1XGIwa
                                  g$k$24726$1XGIwa)
                                (void))
                              g$i$24727$1XGIwa)))
                         ($fxarithmetic-shift-left
                           g$x$24725$1XGIwa
                           g$k$24726$1XGIwa)))))))
               g$fx1$24703$1XGIwa
               ($$fx- g$fx2$24704$1XGIwa)))))))))
   (g$fxrotate-bit-field$23284$1XGIwa
     g$fxrotate-bit-field$25071$1XGIwa
     (case-lambda
       ((g$n$24728$1XGIwa
          g$start$24729$1XGIwa
          g$end$24730$1XGIwa
          g$count$24731$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$n$24728$1XGIwa))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$n$24728$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$start$24729$1XGIwa))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$start$24729$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$end$24730$1XGIwa))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$end$24730$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$count$24731$1XGIwa))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$count$24731$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$width$24732$1XGIwa)
                  (if ((case-lambda
                         ((g$r$24753$1XGIwa)
                          ($fx<? '0 g$r$24753$1XGIwa)))
                       g$width$24732$1XGIwa)
                    ((case-lambda
                       ((g$count$24754$1XGIwa g$field$24755$1XGIwa)
                        ((case-lambda
                           ((g$to$24776$1XGIwa
                              g$start$24777$1XGIwa
                              g$end$24778$1XGIwa
                              g$from$24779$1XGIwa)
                            ((case-lambda
                               ((g$fx1$24800$1XGIwa
                                  g$fx2$24801$1XGIwa
                                  g$fx3$24802$1XGIwa)
                                ($fxior
                                  ($fxand
                                    g$fx1$24800$1XGIwa
                                    g$fx2$24801$1XGIwa)
                                  ($fxand
                                    ($fxnot g$fx1$24800$1XGIwa)
                                    g$fx3$24802$1XGIwa))))
                             ($fxand
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$start$24777$1XGIwa)
                               ($fxnot
                                 ($fxarithmetic-shift-left
                                   '-1
                                   g$end$24778$1XGIwa)))
                             ($fxarithmetic-shift-left
                               g$from$24779$1XGIwa
                               g$start$24777$1XGIwa)
                             g$to$24776$1XGIwa)))
                         g$n$24728$1XGIwa
                         g$start$24729$1XGIwa
                         g$end$24730$1XGIwa
                         ($fxior
                           ($fxarithmetic-shift-left
                             g$field$24755$1XGIwa
                             g$count$24754$1XGIwa)
                           ($fxarithmetic-shift-right
                             g$field$24755$1XGIwa
                             ($$fx-
                               g$width$24732$1XGIwa
                               g$count$24754$1XGIwa))))))
                     ((case-lambda
                        ((g$x1$24823$1XGIwa g$x2$24824$1XGIwa)
                         ($$fx-
                           g$x1$24823$1XGIwa
                           ($$fx*
                             ((case-lambda
                                ((g$x1$24845$1XGIwa g$x2$24846$1XGIwa)
                                 (begin
                                   (if ($fx=? '0 g$x2$24846$1XGIwa)
                                     (assertion-violation
                                       'fxdiv
                                       '"divide by zero"
                                       g$x1$24845$1XGIwa
                                       g$x2$24846$1XGIwa)
                                     (void))
                                   (if (if ($fx=? '-1 g$x2$24846$1XGIwa)
                                         (begin
                                           '#f
                                           ($fx=?
                                             (g$least-fixnum$22785$1XGIwa)
                                             g$x1$24845$1XGIwa))
                                         '#f)
                                     (g$overflow-error$22894$1XGIwa
                                       'fxdiv
                                       g$x1$24845$1XGIwa
                                       g$x2$24846$1XGIwa)
                                     (void))
                                   (if ($fx=? '0 g$x1$24845$1XGIwa)
                                     '0
                                     (if ($fx<? '0 g$x1$24845$1XGIwa)
                                       ((case-lambda
                                          ((g$x1$24867$1XGIwa
                                             g$x2$24868$1XGIwa)
                                           ($fxdiv0
                                             g$x1$24867$1XGIwa
                                             g$x2$24868$1XGIwa)))
                                        g$x1$24845$1XGIwa
                                        g$x2$24846$1XGIwa)
                                       (if ($fx<? '0 g$x2$24846$1XGIwa)
                                         ((case-lambda
                                            ((g$x1$24889$1XGIwa
                                               g$x2$24890$1XGIwa)
                                             ($fxdiv0
                                               g$x1$24889$1XGIwa
                                               g$x2$24890$1XGIwa)))
                                          ($$fx-
                                            g$x1$24845$1XGIwa
                                            ($$fx-
                                              g$x2$24846$1XGIwa
                                              '1))
                                          g$x2$24846$1XGIwa)
                                         (begin
                                           '#f
                                           ((case-lambda
                                              ((g$x1$24911$1XGIwa
                                                 g$x2$24912$1XGIwa)
                                               ($fxdiv0
                                                 g$x1$24911$1XGIwa
                                                 g$x2$24912$1XGIwa)))
                                            ($$fx+
                                              g$x1$24845$1XGIwa
                                              ($$fx+
                                                g$x2$24846$1XGIwa
                                                '1))
                                            g$x2$24846$1XGIwa))))))))
                              g$x1$24823$1XGIwa
                              g$x2$24824$1XGIwa)
                             g$x2$24824$1XGIwa))))
                      g$count$24731$1XGIwa
                      g$width$24732$1XGIwa)
                     ((case-lambda
                        ((g$fx1$24933$1XGIwa
                           g$fx2$24934$1XGIwa
                           g$fx3$24935$1XGIwa)
                         ($fxarithmetic-shift-right
                           ($fxand
                             g$fx1$24933$1XGIwa
                             ($fxnot
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$fx3$24935$1XGIwa)))
                           g$fx2$24934$1XGIwa)))
                      g$n$24728$1XGIwa
                      g$start$24729$1XGIwa
                      g$end$24730$1XGIwa))
                    g$n$24728$1XGIwa)))
               ($$fx- g$end$24730$1XGIwa g$start$24729$1XGIwa)))))))))
   (g$fxreverse-bit-field$23285$1XGIwa
     g$fxreverse-bit-field$25072$1XGIwa
     (case-lambda
       ((g$x1$24936$1XGIwa g$start$24937$1XGIwa g$end$24938$1XGIwa)
        (begin
          (if (not (g$fixnum?$20576$1XGIwa g$x1$24936$1XGIwa))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$x1$24936$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$start$24937$1XGIwa))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$start$24937$1XGIwa)
            (void))
          (if (not (g$fixnum?$20576$1XGIwa g$end$24938$1XGIwa))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$end$24938$1XGIwa)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not ($fx<=?
                           g$start$24937$1XGIwa
                           g$end$24938$1XGIwa))
                  (assertion-violation
                    'fxreverse-bit-field
                    '"start must be less than end"
                    g$start$24937$1XGIwa
                    g$end$24938$1XGIwa)
                  (void))
                (letrec ((g$loop$24939$1XGIwa
                           (case-lambda
                             ((g$width$24963$1XGIwa
                                g$bits$24964$1XGIwa
                                g$rbits$24965$1XGIwa)
                              (if ($fx=? g$width$24963$1XGIwa '0)
                                (begin
                                  (if '#f '#f (void))
                                  ((case-lambda
                                     ((g$to$24986$1XGIwa
                                        g$start$24987$1XGIwa
                                        g$end$24988$1XGIwa
                                        g$from$24989$1XGIwa)
                                      ((case-lambda
                                         ((g$fx1$25010$1XGIwa
                                            g$fx2$25011$1XGIwa
                                            g$fx3$25012$1XGIwa)
                                          ($fxior
                                            ($fxand
                                              g$fx1$25010$1XGIwa
                                              g$fx2$25011$1XGIwa)
                                            ($fxand
                                              ($fxnot
                                                g$fx1$25010$1XGIwa)
                                              g$fx3$25012$1XGIwa))))
                                       ($fxand
                                         ($fxarithmetic-shift-left
                                           '-1
                                           g$start$24987$1XGIwa)
                                         ($fxnot
                                           ($fxarithmetic-shift-left
                                             '-1
                                             g$end$24988$1XGIwa)))
                                       ($fxarithmetic-shift-left
                                         g$from$24989$1XGIwa
                                         g$start$24987$1XGIwa)
                                       g$to$24986$1XGIwa)))
                                   g$x1$24936$1XGIwa
                                   g$start$24937$1XGIwa
                                   g$end$24938$1XGIwa
                                   g$rbits$24965$1XGIwa))
                                (g$loop$24939$1XGIwa
                                  ($$fx- g$width$24963$1XGIwa '1)
                                  ($fxarithmetic-shift-right
                                    g$bits$24964$1XGIwa
                                    '1)
                                  ($fxior
                                    ($fxarithmetic-shift-left
                                      g$rbits$24965$1XGIwa
                                      '1)
                                    ($fxand
                                      g$bits$24964$1XGIwa
                                      '1))))))))
                  (g$loop$24939$1XGIwa
                    ($$fx- g$end$24938$1XGIwa g$start$24937$1XGIwa)
                    ((case-lambda
                       ((g$fx1$24960$1XGIwa
                          g$fx2$24961$1XGIwa
                          g$fx3$24962$1XGIwa)
                        ($fxarithmetic-shift-right
                          ($fxand
                            g$fx1$24960$1XGIwa
                            ($fxnot
                              ($fxarithmetic-shift-left
                                '-1
                                g$fx3$24962$1XGIwa)))
                          g$fx2$24961$1XGIwa)))
                     g$x1$24936$1XGIwa
                     g$start$24937$1XGIwa
                     g$end$24938$1XGIwa)
                    '0)))))))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$fl+$25251$1XGIwa
     g$fl+$26566$1XGIwa
     (case-lambda
       (() '0.0)
       ((g$x1$25374$1XGIwa g$x2$25375$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$x1$25374$1XGIwa))
            (assertion-violation 'fl+ '"not a flonum" g$x1$25374$1XGIwa)
            (void))
          (if (not (g$flonum?$20577$1XGIwa g$x2$25375$1XGIwa))
            (assertion-violation 'fl+ '"not a flonum" g$x2$25375$1XGIwa)
            (void))
          ($fl+ g$x1$25374$1XGIwa g$x2$25375$1XGIwa)))
       (g$args$25376$1XGIwa
        (g$fold-left$19664$1XGIwa
          g$fl+$25251$1XGIwa
          (g$fl+$25251$1XGIwa)
          g$args$25376$1XGIwa))))
   (g$fl*$25252$1XGIwa
     g$fl*$26567$1XGIwa
     (case-lambda
       (() '1.0)
       ((g$x1$25377$1XGIwa g$x2$25378$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$x1$25377$1XGIwa))
            (assertion-violation 'fl* '"not a flonum" g$x1$25377$1XGIwa)
            (void))
          (if (not (g$flonum?$20577$1XGIwa g$x2$25378$1XGIwa))
            (assertion-violation 'fl* '"not a flonum" g$x2$25378$1XGIwa)
            (void))
          ($fl* g$x1$25377$1XGIwa g$x2$25378$1XGIwa)))
       (g$args$25379$1XGIwa
        (g$fold-left$19664$1XGIwa
          g$fl*$25252$1XGIwa
          (g$fl*$25252$1XGIwa)
          g$args$25379$1XGIwa))))
   (g$fldenominator$25253$1XGIwa
     g$fldenominator$26568$1XGIwa
     (case-lambda
       ((g$fl$25380$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$25380$1XGIwa))
            (assertion-violation
              'fldenominator
              '"not a flonum"
              g$fl$25380$1XGIwa)
            (void))
          ((case-lambda
             (()
              (if ((case-lambda
                     ((g$t$25381$1XGIwa)
                      (if g$t$25381$1XGIwa
                        g$t$25381$1XGIwa
                        (begin
                          '#f
                          (g$flinfinite?$25334$1XGIwa
                            g$fl$25380$1XGIwa)))))
                   (g$flnan?$25335$1XGIwa g$fl$25380$1XGIwa))
                '1.0
                (g$real->flonum$21601$1XGIwa
                  (g$denominator$21636$1XGIwa
                    g$fl$25380$1XGIwa))))))))))
   (g$flnumerator$25254$1XGIwa
     g$flnumerator$26569$1XGIwa
     (case-lambda
       ((g$fl$25382$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$25382$1XGIwa))
            (assertion-violation
              'flnumerator
              '"not a flonum"
              g$fl$25382$1XGIwa)
            (void))
          ((case-lambda
             (()
              (if ((case-lambda
                     ((g$t$25383$1XGIwa)
                      (if g$t$25383$1XGIwa
                        g$t$25383$1XGIwa
                        (begin
                          '#f
                          (g$flinfinite?$25334$1XGIwa
                            g$fl$25382$1XGIwa)))))
                   (g$flnan?$25335$1XGIwa g$fl$25382$1XGIwa))
                g$fl$25382$1XGIwa
                (g$real->flonum$21601$1XGIwa
                  (g$numerator$21635$1XGIwa g$fl$25382$1XGIwa))))))))))
   (g$fl-$25255$1XGIwa
     g$fl-$26570$1XGIwa
     (case-lambda
       ((g$x1$25384$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$x1$25384$1XGIwa))
            (assertion-violation 'fl- '"not a flonum" g$x1$25384$1XGIwa)
            (void))
          ($fl- g$x1$25384$1XGIwa)))
       ((g$x1$25385$1XGIwa g$x2$25386$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$x1$25385$1XGIwa))
            (assertion-violation 'fl- '"not a flonum" g$x1$25385$1XGIwa)
            (void))
          (if (not (g$flonum?$20577$1XGIwa g$x2$25386$1XGIwa))
            (assertion-violation 'fl- '"not a flonum" g$x2$25386$1XGIwa)
            (void))
          ($fl- g$x1$25385$1XGIwa g$x2$25386$1XGIwa)))
       ((g$x1$25387$1XGIwa g$x2$25388$1XGIwa . g$rest$25389$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$x1$25387$1XGIwa))
            (assertion-violation 'fl- '"not a flonum" g$x1$25387$1XGIwa)
            (void))
          (g$fold-left$19664$1XGIwa
            g$fl-$25255$1XGIwa
            g$x1$25387$1XGIwa
            (cons g$x2$25388$1XGIwa g$rest$25389$1XGIwa))))))
   (g$fl/$25256$1XGIwa
     g$fl/$26571$1XGIwa
     (case-lambda
       ((g$x1$25390$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$x1$25390$1XGIwa))
            (assertion-violation 'fl/ '"not a flonum" g$x1$25390$1XGIwa)
            (void))
          ($fl/ '1.0 g$x1$25390$1XGIwa)))
       ((g$x1$25391$1XGIwa g$x2$25392$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$x1$25391$1XGIwa))
            (assertion-violation 'fl/ '"not a flonum" g$x1$25391$1XGIwa)
            (void))
          (if (not (g$flonum?$20577$1XGIwa g$x2$25392$1XGIwa))
            (assertion-violation 'fl/ '"not a flonum" g$x2$25392$1XGIwa)
            (void))
          ($fl/ g$x1$25391$1XGIwa g$x2$25392$1XGIwa)))
       ((g$x1$25393$1XGIwa g$x2$25394$1XGIwa . g$rest$25395$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$x1$25393$1XGIwa))
            (assertion-violation 'fl/ '"not a flonum" g$x1$25393$1XGIwa)
            (void))
          (g$fold-left$19664$1XGIwa
            g$fl/$25256$1XGIwa
            g$x1$25393$1XGIwa
            (cons g$x2$25394$1XGIwa g$rest$25395$1XGIwa))))))
   (g$fl=?$25257$1XGIwa
     g$fl=?$26572$1XGIwa
     (case-lambda
       ((g$x1$25396$1XGIwa g$x2$25397$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$x1$25396$1XGIwa))
            (assertion-violation
              'fl=?
              '"not a flonum"
              g$x1$25396$1XGIwa)
            (void))
          (if (not (g$flonum?$20577$1XGIwa g$x2$25397$1XGIwa))
            (assertion-violation
              'fl=?
              '"not a flonum"
              g$x2$25397$1XGIwa)
            (void))
          ($fl=? g$x1$25396$1XGIwa g$x2$25397$1XGIwa)))
       ((g$x1$25398$1XGIwa g$x2$25399$1XGIwa . g$rest$25400$1XGIwa)
        ((letrec ((g$f$25401$1XGIwa
                    (case-lambda
                      ((g$a$25402$1XGIwa g$b$25403$1XGIwa)
                       (if (null? g$b$25403$1XGIwa)
                         '#t
                         (if (g$fl=?$25257$1XGIwa
                               g$a$25402$1XGIwa
                               ($car g$b$25403$1XGIwa))
                           (g$f$25401$1XGIwa
                             ($car g$b$25403$1XGIwa)
                             ($cdr g$b$25403$1XGIwa))
                           (begin '#f '#f)))))))
           g$f$25401$1XGIwa)
         g$x1$25398$1XGIwa
         (cons g$x2$25399$1XGIwa g$rest$25400$1XGIwa)))))
   (g$fl<?$25258$1XGIwa
     g$fl<?$26573$1XGIwa
     (case-lambda
       ((g$x1$25404$1XGIwa g$x2$25405$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$x1$25404$1XGIwa))
            (assertion-violation
              'fl<?
              '"not a flonum"
              g$x1$25404$1XGIwa)
            (void))
          (if (not (g$flonum?$20577$1XGIwa g$x2$25405$1XGIwa))
            (assertion-violation
              'fl<?
              '"not a flonum"
              g$x2$25405$1XGIwa)
            (void))
          ($fl<? g$x1$25404$1XGIwa g$x2$25405$1XGIwa)))
       ((g$x1$25406$1XGIwa g$x2$25407$1XGIwa . g$rest$25408$1XGIwa)
        ((letrec ((g$f$25409$1XGIwa
                    (case-lambda
                      ((g$a$25410$1XGIwa g$b$25411$1XGIwa)
                       (if (null? g$b$25411$1XGIwa)
                         '#t
                         (if (g$fl<?$25258$1XGIwa
                               g$a$25410$1XGIwa
                               ($car g$b$25411$1XGIwa))
                           (g$f$25409$1XGIwa
                             ($car g$b$25411$1XGIwa)
                             ($cdr g$b$25411$1XGIwa))
                           (begin '#f '#f)))))))
           g$f$25409$1XGIwa)
         g$x1$25406$1XGIwa
         (cons g$x2$25407$1XGIwa g$rest$25408$1XGIwa)))))
   (g$fl<=?$25259$1XGIwa
     g$fl<=?$26574$1XGIwa
     (case-lambda
       ((g$x1$25412$1XGIwa g$x2$25413$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$x1$25412$1XGIwa))
            (assertion-violation
              'fl<=?
              '"not a flonum"
              g$x1$25412$1XGIwa)
            (void))
          (if (not (g$flonum?$20577$1XGIwa g$x2$25413$1XGIwa))
            (assertion-violation
              'fl<=?
              '"not a flonum"
              g$x2$25413$1XGIwa)
            (void))
          ($fl<=? g$x1$25412$1XGIwa g$x2$25413$1XGIwa)))
       ((g$x1$25414$1XGIwa g$x2$25415$1XGIwa . g$rest$25416$1XGIwa)
        ((letrec ((g$f$25417$1XGIwa
                    (case-lambda
                      ((g$a$25418$1XGIwa g$b$25419$1XGIwa)
                       (if (null? g$b$25419$1XGIwa)
                         '#t
                         (if (g$fl<=?$25259$1XGIwa
                               g$a$25418$1XGIwa
                               ($car g$b$25419$1XGIwa))
                           (g$f$25417$1XGIwa
                             ($car g$b$25419$1XGIwa)
                             ($cdr g$b$25419$1XGIwa))
                           (begin '#f '#f)))))))
           g$f$25417$1XGIwa)
         g$x1$25414$1XGIwa
         (cons g$x2$25415$1XGIwa g$rest$25416$1XGIwa)))))
   (g$fl>?$25260$1XGIwa
     g$fl>?$26575$1XGIwa
     (case-lambda
       ((g$x1$25420$1XGIwa g$x2$25421$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$x1$25420$1XGIwa))
            (assertion-violation
              'fl>?
              '"not a flonum"
              g$x1$25420$1XGIwa)
            (void))
          (if (not (g$flonum?$20577$1XGIwa g$x2$25421$1XGIwa))
            (assertion-violation
              'fl>?
              '"not a flonum"
              g$x2$25421$1XGIwa)
            (void))
          ($fl>? g$x1$25420$1XGIwa g$x2$25421$1XGIwa)))
       ((g$x1$25422$1XGIwa g$x2$25423$1XGIwa . g$rest$25424$1XGIwa)
        ((letrec ((g$f$25425$1XGIwa
                    (case-lambda
                      ((g$a$25426$1XGIwa g$b$25427$1XGIwa)
                       (if (null? g$b$25427$1XGIwa)
                         '#t
                         (if (g$fl>?$25260$1XGIwa
                               g$a$25426$1XGIwa
                               ($car g$b$25427$1XGIwa))
                           (g$f$25425$1XGIwa
                             ($car g$b$25427$1XGIwa)
                             ($cdr g$b$25427$1XGIwa))
                           (begin '#f '#f)))))))
           g$f$25425$1XGIwa)
         g$x1$25422$1XGIwa
         (cons g$x2$25423$1XGIwa g$rest$25424$1XGIwa)))))
   (g$fl>=?$25261$1XGIwa
     g$fl>=?$26576$1XGIwa
     (case-lambda
       ((g$x1$25428$1XGIwa g$x2$25429$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$x1$25428$1XGIwa))
            (assertion-violation
              'fl>=?
              '"not a flonum"
              g$x1$25428$1XGIwa)
            (void))
          (if (not (g$flonum?$20577$1XGIwa g$x2$25429$1XGIwa))
            (assertion-violation
              'fl>=?
              '"not a flonum"
              g$x2$25429$1XGIwa)
            (void))
          ($fl>=? g$x1$25428$1XGIwa g$x2$25429$1XGIwa)))
       ((g$x1$25430$1XGIwa g$x2$25431$1XGIwa . g$rest$25432$1XGIwa)
        ((letrec ((g$f$25433$1XGIwa
                    (case-lambda
                      ((g$a$25434$1XGIwa g$b$25435$1XGIwa)
                       (if (null? g$b$25435$1XGIwa)
                         '#t
                         (if (g$fl>=?$25261$1XGIwa
                               g$a$25434$1XGIwa
                               ($car g$b$25435$1XGIwa))
                           (g$f$25433$1XGIwa
                             ($car g$b$25435$1XGIwa)
                             ($cdr g$b$25435$1XGIwa))
                           (begin '#f '#f)))))))
           g$f$25433$1XGIwa)
         g$x1$25430$1XGIwa
         (cons g$x2$25431$1XGIwa g$rest$25432$1XGIwa)))))
   (g$residual-fldiv0*$25277$1XGIwa
     g$residual-fldiv0*$26577$1XGIwa
     (case-lambda
       ((g$x1$25456$1XGIwa g$x2$25457$1XGIwa)
        ((case-lambda
           ((g$d$25458$1XGIwa)
            ((case-lambda
               ((g$m$25459$1XGIwa)
                (if ($fl<?
                      g$m$25459$1XGIwa
                      (g$magnitude$21633$1XGIwa
                        ($fl/ g$x2$25457$1XGIwa '2.0)))
                  g$d$25458$1XGIwa
                  (if ($fl<? '0.0 g$x2$25457$1XGIwa)
                    ($fl+ g$d$25458$1XGIwa '1.0)
                    (begin '#f ($fl- g$d$25458$1XGIwa '1.0))))))
             ($fl-
               g$x1$25456$1XGIwa
               ($fl* g$d$25458$1XGIwa g$x2$25457$1XGIwa)))))
         ((case-lambda
            ((g$x1$25480$1XGIwa g$x2$25481$1XGIwa)
             (if ($fl<? '0.0 g$x2$25481$1XGIwa)
               ((case-lambda
                  ((g$fl$25502$1XGIwa)
                   (clr-call-internal
                     'system.math
                     '"floor(double)"
                     '()
                     g$fl$25502$1XGIwa)))
                ($fl/ g$x1$25480$1XGIwa g$x2$25481$1XGIwa))
               ($fl-
                 ((case-lambda
                    ((g$fl$25523$1XGIwa)
                     (clr-call-internal
                       'system.math
                       '"floor(double)"
                       '()
                       g$fl$25523$1XGIwa)))
                  ($fl/ g$x1$25480$1XGIwa ($fl- g$x2$25481$1XGIwa)))))))
          g$x1$25456$1XGIwa
          g$x2$25457$1XGIwa)))))
   (g$fldiv0$25278$1XGIwa
     g$fldiv0$26578$1XGIwa
     (case-lambda
       ((g$x1$25524$1XGIwa g$x2$25525$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$x1$25524$1XGIwa))
            (assertion-violation
              'fldiv0
              '"not a flonum"
              g$x1$25524$1XGIwa)
            (void))
          (if (not (g$flonum?$20577$1XGIwa g$x2$25525$1XGIwa))
            (assertion-violation
              'fldiv0
              '"not a flonum"
              g$x2$25525$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$25546$1XGIwa g$x2$25547$1XGIwa)
                  ((case-lambda
                     ((g$d$25548$1XGIwa)
                      ((case-lambda
                         ((g$m$25549$1XGIwa)
                          (if ($fl<?
                                g$m$25549$1XGIwa
                                (g$magnitude$21633$1XGIwa
                                  ($fl/ g$x2$25547$1XGIwa '2.0)))
                            g$d$25548$1XGIwa
                            (if ($fl<? '0.0 g$x2$25547$1XGIwa)
                              ($fl+ g$d$25548$1XGIwa '1.0)
                              (begin
                                '#f
                                ($fl- g$d$25548$1XGIwa '1.0))))))
                       ($fl-
                         g$x1$25546$1XGIwa
                         ($fl* g$d$25548$1XGIwa g$x2$25547$1XGIwa)))))
                   ((case-lambda
                      ((g$x1$25570$1XGIwa g$x2$25571$1XGIwa)
                       (if ($fl<? '0.0 g$x2$25571$1XGIwa)
                         ((case-lambda
                            ((g$fl$25592$1XGIwa)
                             (clr-call-internal
                               'system.math
                               '"floor(double)"
                               '()
                               g$fl$25592$1XGIwa)))
                          ($fl/ g$x1$25570$1XGIwa g$x2$25571$1XGIwa))
                         ($fl-
                           ((case-lambda
                              ((g$fl$25613$1XGIwa)
                               (clr-call-internal
                                 'system.math
                                 '"floor(double)"
                                 '()
                                 g$fl$25613$1XGIwa)))
                            ($fl/
                              g$x1$25570$1XGIwa
                              ($fl- g$x2$25571$1XGIwa)))))))
                    g$x1$25546$1XGIwa
                    g$x2$25547$1XGIwa))))
               g$x1$25524$1XGIwa
               g$x2$25525$1XGIwa))))))))
   (g$residual-flmod*$25294$1XGIwa
     g$residual-flmod*$26579$1XGIwa
     (case-lambda
       ((g$x1$25634$1XGIwa g$x2$25635$1XGIwa)
        ($fl-
          g$x1$25634$1XGIwa
          ($fl*
            ((case-lambda
               ((g$x1$25656$1XGIwa g$x2$25657$1XGIwa)
                (if ($fl<? '0.0 g$x2$25657$1XGIwa)
                  ((case-lambda
                     ((g$fl$25678$1XGIwa)
                      (clr-call-internal
                        'system.math
                        '"floor(double)"
                        '()
                        g$fl$25678$1XGIwa)))
                   ($fl/ g$x1$25656$1XGIwa g$x2$25657$1XGIwa))
                  ($fl-
                    ((case-lambda
                       ((g$fl$25699$1XGIwa)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$25699$1XGIwa)))
                     ($fl/
                       g$x1$25656$1XGIwa
                       ($fl- g$x2$25657$1XGIwa)))))))
             g$x1$25634$1XGIwa
             g$x2$25635$1XGIwa)
            g$x2$25635$1XGIwa)))))
   (g$flmod$25295$1XGIwa
     g$flmod$26580$1XGIwa
     (case-lambda
       ((g$x1$25700$1XGIwa g$x2$25701$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$x1$25700$1XGIwa))
            (assertion-violation
              'flmod
              '"not a flonum"
              g$x1$25700$1XGIwa)
            (void))
          (if (not (g$flonum?$20577$1XGIwa g$x2$25701$1XGIwa))
            (assertion-violation
              'flmod
              '"not a flonum"
              g$x2$25701$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$25722$1XGIwa g$x2$25723$1XGIwa)
                  ($fl-
                    g$x1$25722$1XGIwa
                    ($fl*
                      ((case-lambda
                         ((g$x1$25744$1XGIwa g$x2$25745$1XGIwa)
                          (if ($fl<? '0.0 g$x2$25745$1XGIwa)
                            ((case-lambda
                               ((g$fl$25766$1XGIwa)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$25766$1XGIwa)))
                             ($fl/ g$x1$25744$1XGIwa g$x2$25745$1XGIwa))
                            ($fl-
                              ((case-lambda
                                 ((g$fl$25787$1XGIwa)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$25787$1XGIwa)))
                               ($fl/
                                 g$x1$25744$1XGIwa
                                 ($fl- g$x2$25745$1XGIwa)))))))
                       g$x1$25722$1XGIwa
                       g$x2$25723$1XGIwa)
                      g$x2$25723$1XGIwa))))
               g$x1$25700$1XGIwa
               g$x2$25701$1XGIwa))))))))
   (g$flmod0$25296$1XGIwa
     g$flmod0$26581$1XGIwa
     (case-lambda
       ((g$x1$25788$1XGIwa g$x2$25789$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$x1$25788$1XGIwa))
            (assertion-violation
              'flmod0
              '"not a flonum"
              g$x1$25788$1XGIwa)
            (void))
          (if (not (g$flonum?$20577$1XGIwa g$x2$25789$1XGIwa))
            (assertion-violation
              'flmod0
              '"not a flonum"
              g$x2$25789$1XGIwa)
            (void))
          ((case-lambda
             (()
              ($fl-
                g$x1$25788$1XGIwa
                ($fl*
                  ((case-lambda
                     ((g$x1$25810$1XGIwa g$x2$25811$1XGIwa)
                      ((case-lambda
                         ((g$d$25812$1XGIwa)
                          ((case-lambda
                             ((g$m$25813$1XGIwa)
                              (if ($fl<?
                                    g$m$25813$1XGIwa
                                    (g$magnitude$21633$1XGIwa
                                      ($fl/ g$x2$25811$1XGIwa '2.0)))
                                g$d$25812$1XGIwa
                                (if ($fl<? '0.0 g$x2$25811$1XGIwa)
                                  ($fl+ g$d$25812$1XGIwa '1.0)
                                  (begin
                                    '#f
                                    ($fl- g$d$25812$1XGIwa '1.0))))))
                           ($fl-
                             g$x1$25810$1XGIwa
                             ($fl*
                               g$d$25812$1XGIwa
                               g$x2$25811$1XGIwa)))))
                       ((case-lambda
                          ((g$x1$25834$1XGIwa g$x2$25835$1XGIwa)
                           (if ($fl<? '0.0 g$x2$25835$1XGIwa)
                             ((case-lambda
                                ((g$fl$25856$1XGIwa)
                                 (clr-call-internal
                                   'system.math
                                   '"floor(double)"
                                   '()
                                   g$fl$25856$1XGIwa)))
                              ($fl/
                                g$x1$25834$1XGIwa
                                g$x2$25835$1XGIwa))
                             ($fl-
                               ((case-lambda
                                  ((g$fl$25877$1XGIwa)
                                   (clr-call-internal
                                     'system.math
                                     '"floor(double)"
                                     '()
                                     g$fl$25877$1XGIwa)))
                                ($fl/
                                  g$x1$25834$1XGIwa
                                  ($fl- g$x2$25835$1XGIwa)))))))
                        g$x1$25810$1XGIwa
                        g$x2$25811$1XGIwa))))
                   g$x1$25788$1XGIwa
                   g$x2$25789$1XGIwa)
                  g$x2$25789$1XGIwa)))))))))
   (g$fldiv-and-mod$25297$1XGIwa
     g$fldiv-and-mod$26582$1XGIwa
     (case-lambda
       ((g$x1$25878$1XGIwa g$x2$25879$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$x1$25878$1XGIwa))
            (assertion-violation
              'fldiv-and-mod
              '"not a flonum"
              g$x1$25878$1XGIwa)
            (void))
          (if (not (g$flonum?$20577$1XGIwa g$x2$25879$1XGIwa))
            (assertion-violation
              'fldiv-and-mod
              '"not a flonum"
              g$x2$25879$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$25880$1XGIwa)
                  (values
                    g$d$25880$1XGIwa
                    ($fl-
                      g$x1$25878$1XGIwa
                      ($fl* g$d$25880$1XGIwa g$x2$25879$1XGIwa)))))
               ((case-lambda
                  ((g$x1$25901$1XGIwa g$x2$25902$1XGIwa)
                   (if ($fl<? '0.0 g$x2$25902$1XGIwa)
                     ((case-lambda
                        ((g$fl$25923$1XGIwa)
                         (clr-call-internal
                           'system.math
                           '"floor(double)"
                           '()
                           g$fl$25923$1XGIwa)))
                      ($fl/ g$x1$25901$1XGIwa g$x2$25902$1XGIwa))
                     ($fl-
                       ((case-lambda
                          ((g$fl$25944$1XGIwa)
                           (clr-call-internal
                             'system.math
                             '"floor(double)"
                             '()
                             g$fl$25944$1XGIwa)))
                        ($fl/
                          g$x1$25901$1XGIwa
                          ($fl- g$x2$25902$1XGIwa)))))))
                g$x1$25878$1XGIwa
                g$x2$25879$1XGIwa)))))))))
   (g$residual-fldiv*$25313$1XGIwa
     g$residual-fldiv*$26583$1XGIwa
     (case-lambda
       ((g$x1$25965$1XGIwa g$x2$25966$1XGIwa)
        (if ($fl<? '0.0 g$x2$25966$1XGIwa)
          ((case-lambda
             ((g$fl$25987$1XGIwa)
              (clr-call-internal
                'system.math
                '"floor(double)"
                '()
                g$fl$25987$1XGIwa)))
           ($fl/ g$x1$25965$1XGIwa g$x2$25966$1XGIwa))
          ($fl-
            ((case-lambda
               ((g$fl$26008$1XGIwa)
                (clr-call-internal
                  'system.math
                  '"floor(double)"
                  '()
                  g$fl$26008$1XGIwa)))
             ($fl/ g$x1$25965$1XGIwa ($fl- g$x2$25966$1XGIwa))))))))
   (g$fldiv$25314$1XGIwa
     g$fldiv$26584$1XGIwa
     (case-lambda
       ((g$x1$26009$1XGIwa g$x2$26010$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$x1$26009$1XGIwa))
            (assertion-violation
              'fldiv
              '"not a flonum"
              g$x1$26009$1XGIwa)
            (void))
          (if (not (g$flonum?$20577$1XGIwa g$x2$26010$1XGIwa))
            (assertion-violation
              'fldiv
              '"not a flonum"
              g$x2$26010$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$26031$1XGIwa g$x2$26032$1XGIwa)
                  (if ($fl<? '0.0 g$x2$26032$1XGIwa)
                    ((case-lambda
                       ((g$fl$26053$1XGIwa)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$26053$1XGIwa)))
                     ($fl/ g$x1$26031$1XGIwa g$x2$26032$1XGIwa))
                    ($fl-
                      ((case-lambda
                         ((g$fl$26074$1XGIwa)
                          (clr-call-internal
                            'system.math
                            '"floor(double)"
                            '()
                            g$fl$26074$1XGIwa)))
                       ($fl/
                         g$x1$26031$1XGIwa
                         ($fl- g$x2$26032$1XGIwa)))))))
               g$x1$26009$1XGIwa
               g$x2$26010$1XGIwa))))))))
   (g$fldiv0-and-mod0$25315$1XGIwa
     g$fldiv0-and-mod0$26585$1XGIwa
     (case-lambda
       ((g$x1$26075$1XGIwa g$x2$26076$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$x1$26075$1XGIwa))
            (assertion-violation
              'fldiv0-and-mod0
              '"not a flonum"
              g$x1$26075$1XGIwa)
            (void))
          (if (not (g$flonum?$20577$1XGIwa g$x2$26076$1XGIwa))
            (assertion-violation
              'fldiv0-and-mod0
              '"not a flonum"
              g$x2$26076$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$26077$1XGIwa)
                  (values
                    g$d$26077$1XGIwa
                    ($fl-
                      g$x1$26075$1XGIwa
                      ($fl* g$d$26077$1XGIwa g$x2$26076$1XGIwa)))))
               ((case-lambda
                  ((g$x1$26098$1XGIwa g$x2$26099$1XGIwa)
                   ((case-lambda
                      ((g$d$26100$1XGIwa)
                       ((case-lambda
                          ((g$m$26101$1XGIwa)
                           (if ($fl<?
                                 g$m$26101$1XGIwa
                                 (g$magnitude$21633$1XGIwa
                                   ($fl/ g$x2$26099$1XGIwa '2.0)))
                             g$d$26100$1XGIwa
                             (if ($fl<? '0.0 g$x2$26099$1XGIwa)
                               ($fl+ g$d$26100$1XGIwa '1.0)
                               (begin
                                 '#f
                                 ($fl- g$d$26100$1XGIwa '1.0))))))
                        ($fl-
                          g$x1$26098$1XGIwa
                          ($fl* g$d$26100$1XGIwa g$x2$26099$1XGIwa)))))
                    ((case-lambda
                       ((g$x1$26122$1XGIwa g$x2$26123$1XGIwa)
                        (if ($fl<? '0.0 g$x2$26123$1XGIwa)
                          ((case-lambda
                             ((g$fl$26144$1XGIwa)
                              (clr-call-internal
                                'system.math
                                '"floor(double)"
                                '()
                                g$fl$26144$1XGIwa)))
                           ($fl/ g$x1$26122$1XGIwa g$x2$26123$1XGIwa))
                          ($fl-
                            ((case-lambda
                               ((g$fl$26165$1XGIwa)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$26165$1XGIwa)))
                             ($fl/
                               g$x1$26122$1XGIwa
                               ($fl- g$x2$26123$1XGIwa)))))))
                     g$x1$26098$1XGIwa
                     g$x2$26099$1XGIwa))))
                g$x1$26075$1XGIwa
                g$x2$26076$1XGIwa)))))))))
   (g$flinteger?$25316$1XGIwa
     g$flinteger?$26586$1XGIwa
     (case-lambda
       ((g$fl$26166$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$26166$1XGIwa))
            (assertion-violation
              'flinteger?
              '"not a flonum"
              g$fl$26166$1XGIwa)
            (void))
          ((case-lambda
             (()
              ($fl=?
                '0.0
                ((case-lambda
                   ((g$x1$26187$1XGIwa g$x2$26188$1XGIwa)
                    ($fl-
                      g$x1$26187$1XGIwa
                      ($fl*
                        ((case-lambda
                           ((g$x1$26209$1XGIwa g$x2$26210$1XGIwa)
                            (if ($fl<? '0.0 g$x2$26210$1XGIwa)
                              ((case-lambda
                                 ((g$fl$26231$1XGIwa)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$26231$1XGIwa)))
                               ($fl/
                                 g$x1$26209$1XGIwa
                                 g$x2$26210$1XGIwa))
                              ($fl-
                                ((case-lambda
                                   ((g$fl$26252$1XGIwa)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$26252$1XGIwa)))
                                 ($fl/
                                   g$x1$26209$1XGIwa
                                   ($fl- g$x2$26210$1XGIwa)))))))
                         g$x1$26187$1XGIwa
                         g$x2$26188$1XGIwa)
                        g$x2$26188$1XGIwa))))
                 g$fl$26166$1XGIwa
                 '1.0)))))))))
   (g$flfinite?$25317$1XGIwa
     g$flfinite?$26587$1XGIwa
     (case-lambda
       ((g$fl$26253$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$26253$1XGIwa))
            (assertion-violation
              'flfinite?
              '"not a flonum"
              g$fl$26253$1XGIwa)
            (void))
          ((case-lambda
             (()
              (not ((case-lambda
                      ((g$fl$26274$1XGIwa)
                       (clr-call-internal
                         'system.double
                         'isinfinity
                         '()
                         g$fl$26274$1XGIwa)))
                    g$fl$26253$1XGIwa)))))))))
   (g$residual-flinfinite?*$25333$1XGIwa
     g$residual-flinfinite?*$26588$1XGIwa
     (case-lambda
       ((g$fl$26295$1XGIwa)
        (clr-call-internal
          'system.double
          'isinfinity
          '()
          g$fl$26295$1XGIwa))))
   (g$flinfinite?$25334$1XGIwa
     g$flinfinite?$26589$1XGIwa
     (case-lambda
       ((g$fl$26296$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$26296$1XGIwa))
            (assertion-violation
              'flinfinite?
              '"not a flonum"
              g$fl$26296$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$26317$1XGIwa)
                  (clr-call-internal
                    'system.double
                    'isinfinity
                    '()
                    g$fl$26317$1XGIwa)))
               g$fl$26296$1XGIwa))))))))
   (g$flnan?$25335$1XGIwa
     g$flnan?$26590$1XGIwa
     (case-lambda
       ((g$fl$26318$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$26318$1XGIwa))
            (assertion-violation
              'flnan?
              '"not a flonum"
              g$fl$26318$1XGIwa)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.double
                'isnan
                '()
                g$fl$26318$1XGIwa))))))))
   (g$flsin$25336$1XGIwa
     g$flsin$26591$1XGIwa
     (case-lambda
       ((g$fl$26319$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$26319$1XGIwa))
            (assertion-violation
              'flsin
              '"not a flonum"
              g$fl$26319$1XGIwa)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sin
                '()
                g$fl$26319$1XGIwa))))))))
   (g$flcos$25337$1XGIwa
     g$flcos$26592$1XGIwa
     (case-lambda
       ((g$fl$26320$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$26320$1XGIwa))
            (assertion-violation
              'flcos
              '"not a flonum"
              g$fl$26320$1XGIwa)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'cos
                '()
                g$fl$26320$1XGIwa))))))))
   (g$fltan$25338$1XGIwa
     g$fltan$26593$1XGIwa
     (case-lambda
       ((g$fl$26321$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$26321$1XGIwa))
            (assertion-violation
              'fltan
              '"not a flonum"
              g$fl$26321$1XGIwa)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'tan
                '()
                g$fl$26321$1XGIwa))))))))
   (g$flasin$25339$1XGIwa
     g$flasin$26594$1XGIwa
     (case-lambda
       ((g$fl$26322$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$26322$1XGIwa))
            (assertion-violation
              'flasin
              '"not a flonum"
              g$fl$26322$1XGIwa)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'asin
                '()
                g$fl$26322$1XGIwa))))))))
   (g$flacos$25340$1XGIwa
     g$flacos$26595$1XGIwa
     (case-lambda
       ((g$fl$26323$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$26323$1XGIwa))
            (assertion-violation
              'flacos
              '"not a flonum"
              g$fl$26323$1XGIwa)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'acos
                '()
                g$fl$26323$1XGIwa))))))))
   (g$flatan$25341$1XGIwa
     g$flatan$26596$1XGIwa
     (case-lambda
       ((g$fl$26324$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$26324$1XGIwa))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl$26324$1XGIwa)
            (void))
          (clr-call-internal 'system.math 'atan '() g$fl$26324$1XGIwa)))
       ((g$fl1$26325$1XGIwa g$fl2$26326$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl1$26325$1XGIwa))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl1$26325$1XGIwa)
            (void))
          (if (not (g$flonum?$20577$1XGIwa g$fl2$26326$1XGIwa))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl2$26326$1XGIwa)
            (void))
          (clr-call-internal
            'system.math
            'atan2
            '()
            g$fl1$26325$1XGIwa
            g$fl2$26326$1XGIwa)))))
   (g$fllog$25342$1XGIwa
     g$fllog$26597$1XGIwa
     (case-lambda
       ((g$fl$26327$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$26327$1XGIwa))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl$26327$1XGIwa)
            (void))
          (clr-call-internal 'system.math 'log '() g$fl$26327$1XGIwa)))
       ((g$fl1$26328$1XGIwa g$fl2$26329$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl1$26328$1XGIwa))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl1$26328$1XGIwa)
            (void))
          (if (not (g$flonum?$20577$1XGIwa g$fl2$26329$1XGIwa))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl2$26329$1XGIwa)
            (void))
          (clr-call-internal
            'system.math
            'log
            '()
            g$fl1$26328$1XGIwa
            g$fl2$26329$1XGIwa)))))
   (g$flsqrt$25343$1XGIwa
     g$flsqrt$26598$1XGIwa
     (case-lambda
       ((g$fl$26330$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$26330$1XGIwa))
            (assertion-violation
              'flsqrt
              '"not a flonum"
              g$fl$26330$1XGIwa)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sqrt
                '()
                g$fl$26330$1XGIwa))))))))
   (g$flexp$25344$1XGIwa
     g$flexp$26599$1XGIwa
     (case-lambda
       ((g$fl$26331$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$26331$1XGIwa))
            (assertion-violation
              'flexp
              '"not a flonum"
              g$fl$26331$1XGIwa)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'exp
                '()
                g$fl$26331$1XGIwa))))))))
   (g$flexpt$25345$1XGIwa
     g$flexpt$26600$1XGIwa
     (case-lambda
       ((g$fl$26332$1XGIwa g$n$26333$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$26332$1XGIwa))
            (assertion-violation
              'flexpt
              '"not a flonum"
              g$fl$26332$1XGIwa)
            (void))
          (if (not (g$flonum?$20577$1XGIwa g$n$26333$1XGIwa))
            (assertion-violation
              'flexpt
              '"not a flonum"
              g$n$26333$1XGIwa)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'pow
                '()
                g$fl$26332$1XGIwa
                g$n$26333$1XGIwa))))))))
   (g$flceiling$25346$1XGIwa
     g$flceiling$26601$1XGIwa
     (case-lambda
       ((g$fl$26334$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$26334$1XGIwa))
            (assertion-violation
              'flceiling
              '"not a flonum"
              g$fl$26334$1XGIwa)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"ceiling(double)"
                '()
                g$fl$26334$1XGIwa))))))))
   (g$residual-flfloor*$25362$1XGIwa
     g$residual-flfloor*$26602$1XGIwa
     (case-lambda
       ((g$fl$26355$1XGIwa)
        (clr-call-internal
          'system.math
          '"floor(double)"
          '()
          g$fl$26355$1XGIwa))))
   (g$flfloor$25363$1XGIwa
     g$flfloor$26603$1XGIwa
     (case-lambda
       ((g$fl$26356$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$26356$1XGIwa))
            (assertion-violation
              'flfloor
              '"not a flonum"
              g$fl$26356$1XGIwa)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$26377$1XGIwa)
                  (clr-call-internal
                    'system.math
                    '"floor(double)"
                    '()
                    g$fl$26377$1XGIwa)))
               g$fl$26356$1XGIwa))))))))
   (g$fltruncate$25364$1XGIwa
     g$fltruncate$26604$1XGIwa
     (case-lambda
       ((g$fl$26378$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$26378$1XGIwa))
            (assertion-violation
              'fltruncate
              '"not a flonum"
              g$fl$26378$1XGIwa)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"truncate(double)"
                '()
                g$fl$26378$1XGIwa))))))))
   (g$flround$25365$1XGIwa
     g$flround$26605$1XGIwa
     (case-lambda
       ((g$fl$26379$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$26379$1XGIwa))
            (assertion-violation
              'flround
              '"not a flonum"
              g$fl$26379$1XGIwa)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"round(double)"
                '()
                g$fl$26379$1XGIwa))))))))
   (g$flabs$25366$1XGIwa
     g$flabs$26606$1XGIwa
     (case-lambda
       ((g$fl$26380$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$fl$26380$1XGIwa))
            (assertion-violation
              'flabs
              '"not a flonum"
              g$fl$26380$1XGIwa)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"abs(double)"
                '()
                g$fl$26380$1XGIwa))))))))
   (g$flpositive?$25367$1XGIwa
     g$flpositive?$26607$1XGIwa
     (case-lambda
       ((g$r$26381$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$r$26381$1XGIwa))
            (assertion-violation
              'flpositive?
              '"not a flonum"
              g$r$26381$1XGIwa)
            (void))
          ((case-lambda (() ($fl<? '0.0 g$r$26381$1XGIwa))))))))
   (g$flnegative?$25368$1XGIwa
     g$flnegative?$26608$1XGIwa
     (case-lambda
       ((g$r$26382$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$r$26382$1XGIwa))
            (assertion-violation
              'flnegative?
              '"not a flonum"
              g$r$26382$1XGIwa)
            (void))
          ((case-lambda (() ($fl>? '0.0 g$r$26382$1XGIwa))))))))
   (g$flzero?$25369$1XGIwa
     g$flzero?$26609$1XGIwa
     (case-lambda
       ((g$r$26383$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$r$26383$1XGIwa))
            (assertion-violation
              'flzero?
              '"not a flonum"
              g$r$26383$1XGIwa)
            (void))
          ((case-lambda (() ($fl=? '0.0 g$r$26383$1XGIwa))))))))
   (g$fleven?$25370$1XGIwa
     g$fleven?$26610$1XGIwa
     (case-lambda
       ((g$n$26384$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$n$26384$1XGIwa))
            (assertion-violation
              'fleven?
              '"not a flonum"
              g$n$26384$1XGIwa)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (g$integer-valued?$21615$1XGIwa
                           g$n$26384$1XGIwa))
                  (assertion-violation
                    'fleven?
                    '"not integer valued"
                    g$n$26384$1XGIwa)
                  (void))
                ($fl=?
                  '0.0
                  ((case-lambda
                     ((g$x1$26405$1XGIwa g$x2$26406$1XGIwa)
                      ($fl-
                        g$x1$26405$1XGIwa
                        ($fl*
                          ((case-lambda
                             ((g$x1$26427$1XGIwa g$x2$26428$1XGIwa)
                              (if ($fl<? '0.0 g$x2$26428$1XGIwa)
                                ((case-lambda
                                   ((g$fl$26449$1XGIwa)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$26449$1XGIwa)))
                                 ($fl/
                                   g$x1$26427$1XGIwa
                                   g$x2$26428$1XGIwa))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$26470$1XGIwa)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$26470$1XGIwa)))
                                   ($fl/
                                     g$x1$26427$1XGIwa
                                     ($fl- g$x2$26428$1XGIwa)))))))
                           g$x1$26405$1XGIwa
                           g$x2$26406$1XGIwa)
                          g$x2$26406$1XGIwa))))
                   g$n$26384$1XGIwa
                   '2.0))))))))))
   (g$flodd?$25371$1XGIwa
     g$flodd?$26611$1XGIwa
     (case-lambda
       ((g$n$26471$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$n$26471$1XGIwa))
            (assertion-violation
              'flodd?
              '"not a flonum"
              g$n$26471$1XGIwa)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (g$integer-valued?$21615$1XGIwa
                           g$n$26471$1XGIwa))
                  (assertion-violation
                    'flodd?
                    '"not integer valued"
                    g$n$26471$1XGIwa)
                  (void))
                ($fl=?
                  '1.0
                  ((case-lambda
                     ((g$x1$26492$1XGIwa g$x2$26493$1XGIwa)
                      ($fl-
                        g$x1$26492$1XGIwa
                        ($fl*
                          ((case-lambda
                             ((g$x1$26514$1XGIwa g$x2$26515$1XGIwa)
                              (if ($fl<? '0.0 g$x2$26515$1XGIwa)
                                ((case-lambda
                                   ((g$fl$26536$1XGIwa)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$26536$1XGIwa)))
                                 ($fl/
                                   g$x1$26514$1XGIwa
                                   g$x2$26515$1XGIwa))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$26557$1XGIwa)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$26557$1XGIwa)))
                                   ($fl/
                                     g$x1$26514$1XGIwa
                                     ($fl- g$x2$26515$1XGIwa)))))))
                           g$x1$26492$1XGIwa
                           g$x2$26493$1XGIwa)
                          g$x2$26493$1XGIwa))))
                   g$n$26471$1XGIwa
                   '2.0))))))))))
   (g$flmax$25372$1XGIwa
     g$flmax$26612$1XGIwa
     (case-lambda
       ((g$a$26558$1XGIwa . g$rest$26559$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$a$26558$1XGIwa))
            (assertion-violation
              'flmax
              '"not a flonum"
              g$a$26558$1XGIwa)
            (void))
          (g$fold-left$19664$1XGIwa
            (case-lambda
              ((g$a$26560$1XGIwa g$b$26561$1XGIwa)
               (if (g$fl<?$25258$1XGIwa
                     g$a$26560$1XGIwa
                     g$b$26561$1XGIwa)
                 g$b$26561$1XGIwa
                 g$a$26560$1XGIwa)))
            g$a$26558$1XGIwa
            g$rest$26559$1XGIwa)))))
   (g$flmin$25373$1XGIwa
     g$flmin$26613$1XGIwa
     (case-lambda
       ((g$a$26562$1XGIwa . g$rest$26563$1XGIwa)
        (begin
          (if (not (g$flonum?$20577$1XGIwa g$a$26562$1XGIwa))
            (assertion-violation
              'flmin
              '"not a flonum"
              g$a$26562$1XGIwa)
            (void))
          (g$fold-left$19664$1XGIwa
            (case-lambda
              ((g$a$26564$1XGIwa g$b$26565$1XGIwa)
               (if (g$fl>?$25260$1XGIwa
                     g$a$26564$1XGIwa
                     g$b$26565$1XGIwa)
                 g$b$26565$1XGIwa
                 g$a$26564$1XGIwa)))
            g$a$26562$1XGIwa
            g$rest$26563$1XGIwa))))))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$using$26615$1XGIwa
     g$using$26641$1XGIwa
     (clr-using-internal 'ironscheme.runtime))
   (g$standard-error-port$26616$1XGIwa
     g$standard-error-port$26642$1XGIwa
     (case-lambda
       (() (clr-call-internal 'System.Console 'OpenStandardError '()))))
   (g$standard-input-port$26617$1XGIwa
     g$standard-input-port$26643$1XGIwa
     (case-lambda
       (() (clr-call-internal 'System.Console 'OpenStandardInput '()))))
   (g$standard-output-port$26618$1XGIwa
     g$standard-output-port$26644$1XGIwa
     (case-lambda
       (()
        (clr-call-internal 'System.Console 'OpenStandardOutput '()))))
   (g$native-eol-style$26619$1XGIwa
     g$native-eol-style$26645$1XGIwa
     (case-lambda (() 'crlf)))
   (g$buffer-mode?$26620$1XGIwa
     g$buffer-mode?$26646$1XGIwa
     (case-lambda
       ((g$obj$26629$1XGIwa)
        (if (g$symbol?$20573$1XGIwa g$obj$26629$1XGIwa)
          (if (g$memq$19653$1XGIwa
                g$obj$26629$1XGIwa
                '(none line block))
            (begin '#f '#t)
            '#f)
          '#f))))
   (g$put-datum$26621$1XGIwa
     g$put-datum$26647$1XGIwa
     (case-lambda
       ((g$p$26630$1XGIwa g$datum$26631$1XGIwa)
        (write g$datum$26631$1XGIwa g$p$26630$1XGIwa))))
   (g$get-datum$26622$1XGIwa g$get-datum$26648$1XGIwa read)
   (g$get-output-string$26623$1XGIwa
     g$get-output-string$26649$1XGIwa
     (case-lambda
       ((g$port$26632$1XGIwa)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$26632$1XGIwa))))
   (g$open-output-string$26624$1XGIwa
     g$open-output-string$26650$1XGIwa
     (case-lambda
       (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$26625$1XGIwa
     g$open-string-output-port$26651$1XGIwa
     (case-lambda
       (()
        ((case-lambda
           ((g$p$26633$1XGIwa)
            (values
              g$p$26633$1XGIwa
              (case-lambda
                (()
                 (g$get-output-string$26623$1XGIwa
                   g$p$26633$1XGIwa))))))
         (g$open-output-string$26624$1XGIwa)))))
   (g$port?$26626$1XGIwa
     g$port?$26652$1XGIwa
     (case-lambda
       ((g$obj$26634$1XGIwa)
        ((case-lambda
           ((g$t$26635$1XGIwa)
            (if g$t$26635$1XGIwa
              g$t$26635$1XGIwa
              (begin '#f (binary-port? g$obj$26634$1XGIwa)))))
         (textual-port? g$obj$26634$1XGIwa)))))
   (g$call-with-string-output-port$26627$1XGIwa
     g$call-with-string-output-port$26653$1XGIwa
     (case-lambda
       ((g$proc$26636$1XGIwa)
        ((case-lambda
           ((g$p$26637$1XGIwa)
            (begin
              (g$call-with-port$26628$1XGIwa
                g$p$26637$1XGIwa
                g$proc$26636$1XGIwa)
              (g$get-output-string$26623$1XGIwa g$p$26637$1XGIwa))))
         (g$open-output-string$26624$1XGIwa)))))
   (g$call-with-port$26628$1XGIwa
     g$call-with-port$26654$1XGIwa
     (case-lambda
       ((g$port$26638$1XGIwa g$proc$26639$1XGIwa)
        ((case-lambda
           ((g$r$26640$1XGIwa)
            (begin (close-port g$port$26638$1XGIwa) g$r$26640$1XGIwa)))
         (g$proc$26639$1XGIwa g$port$26638$1XGIwa))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$peek-char$26655$1XGIwa
     g$peek-char$26710$1XGIwa
     (case-lambda
       (() (g$peek-char$26655$1XGIwa (current-input-port)))
       ((g$port$26682$1XGIwa) (lookahead-char g$port$26682$1XGIwa))))
   (g$read-char$26656$1XGIwa
     g$read-char$26711$1XGIwa
     (case-lambda
       (() (g$read-char$26656$1XGIwa (current-input-port)))
       ((g$port$26683$1XGIwa) (get-char g$port$26683$1XGIwa))))
   (g$write-char$26657$1XGIwa
     g$write-char$26712$1XGIwa
     (case-lambda
       ((g$chr$26684$1XGIwa)
        (g$write-char$26657$1XGIwa
          g$chr$26684$1XGIwa
          (current-output-port)))
       ((g$chr$26685$1XGIwa g$port$26686$1XGIwa)
        (put-char g$port$26686$1XGIwa g$chr$26685$1XGIwa))))
   (g$with-input-from-file$26677$1XGIwa
     g$with-input-from-file$26713$1XGIwa
     (case-lambda
       ((g$filename$26687$1XGIwa g$thunk$26688$1XGIwa)
        ((case-lambda
           ((g$current-input-port$26691$1XGIwa g$t$26692$1XGIwa)
            ((case-lambda
               ((g$swap$26693$1XGIwa)
                (dynamic-wind
                  g$swap$26693$1XGIwa
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$26688$1XGIwa)))
                       (case-lambda
                         (()
                          (close-input-port (current-input-port)))))))
                  g$swap$26693$1XGIwa)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$26694$1XGIwa)
                    (begin
                      (g$current-input-port$26691$1XGIwa
                        g$t$26692$1XGIwa)
                      (set! g$t$26692$1XGIwa g$t$26694$1XGIwa))))
                 (g$current-input-port$26691$1XGIwa)))))))
         current-input-port
         (open-input-file g$filename$26687$1XGIwa)))))
   (g$with-output-to-file$26678$1XGIwa
     g$with-output-to-file$26714$1XGIwa
     (case-lambda
       ((g$filename$26695$1XGIwa g$thunk$26696$1XGIwa)
        ((case-lambda
           ((g$current-output-port$26699$1XGIwa g$t$26700$1XGIwa)
            ((case-lambda
               ((g$swap$26701$1XGIwa)
                (dynamic-wind
                  g$swap$26701$1XGIwa
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$26696$1XGIwa)))
                       (case-lambda
                         (()
                          (close-output-port (current-output-port)))))))
                  g$swap$26701$1XGIwa)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$26702$1XGIwa)
                    (begin
                      (g$current-output-port$26699$1XGIwa
                        g$t$26700$1XGIwa)
                      (set! g$t$26700$1XGIwa g$t$26702$1XGIwa))))
                 (g$current-output-port$26699$1XGIwa)))))))
         current-output-port
         (open-output-file g$filename$26695$1XGIwa)))))
   (g$call-with-input-file$26679$1XGIwa
     g$call-with-input-file$26715$1XGIwa
     (case-lambda
       ((g$filename$26703$1XGIwa g$proc$26704$1XGIwa)
        ((case-lambda
           ((g$p$26705$1XGIwa)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$26704$1XGIwa g$p$26705$1XGIwa)))
              (case-lambda (() (close-input-port g$p$26705$1XGIwa))))))
         (open-input-file g$filename$26703$1XGIwa)))))
   (g$call-with-output-file$26680$1XGIwa
     g$call-with-output-file$26716$1XGIwa
     (case-lambda
       ((g$filename$26706$1XGIwa g$proc$26707$1XGIwa)
        ((case-lambda
           ((g$p$26708$1XGIwa)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$26707$1XGIwa g$p$26708$1XGIwa)))
              (case-lambda (() (close-output-port g$p$26708$1XGIwa))))))
         (open-output-file g$filename$26706$1XGIwa)))))
   (g$newline$26681$1XGIwa
     g$newline$26717$1XGIwa
     (case-lambda
       (() (g$newline$26681$1XGIwa (current-output-port)))
       ((g$port$26709$1XGIwa) (display '"
" g$port$26709$1XGIwa)))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$8964$26718$1XGIwa
     g$8964$26831$1XGIwa
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$8966$26719$1XGIwa g$8966$26832$1XGIwa '#f)
   (g$8965$26720$1XGIwa
     g$8965$26833$1XGIwa
     (make-record-constructor-descriptor
       g$8964$26718$1XGIwa
       '#f
       g$8966$26719$1XGIwa))
   (g$enum?$26723$1XGIwa
     g$enum?$26834$1XGIwa
     (record-predicate g$8964$26718$1XGIwa))
   (g$make-enum$26724$1XGIwa
     g$make-enum$26835$1XGIwa
     (record-constructor g$8965$26720$1XGIwa))
   (g$enum-value$26725$1XGIwa
     g$enum-value$26836$1XGIwa
     (record-accessor g$8964$26718$1XGIwa '0))
   (g$enum-info$26726$1XGIwa
     g$enum-info$26837$1XGIwa
     (record-accessor g$8964$26718$1XGIwa '1))
   (g$8975$26727$1XGIwa
     g$8975$26838$1XGIwa
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$8977$26728$1XGIwa g$8977$26839$1XGIwa '#f)
   (g$8976$26729$1XGIwa
     g$8976$26840$1XGIwa
     (make-record-constructor-descriptor
       g$8975$26727$1XGIwa
       '#f
       g$8977$26728$1XGIwa))
   (g$enum-universe?$26732$1XGIwa
     g$enum-universe?$26841$1XGIwa
     (record-predicate g$8975$26727$1XGIwa))
   (g$make-enum-universe$26733$1XGIwa
     g$make-enum-universe$26842$1XGIwa
     (record-constructor g$8976$26729$1XGIwa))
   (g$enum-universe-id$26734$1XGIwa
     g$enum-universe-id$26843$1XGIwa
     (record-accessor g$8975$26727$1XGIwa '0))
   (g$enum-universe-symbols$26735$1XGIwa
     g$enum-universe-symbols$26844$1XGIwa
     (record-accessor g$8975$26727$1XGIwa '1))
   (g$enum-universe-mapping$26736$1XGIwa
     g$enum-universe-mapping$26845$1XGIwa
     (record-accessor g$8975$26727$1XGIwa '2))
   (g$enum-universe-value$26737$1XGIwa
     g$enum-universe-value$26846$1XGIwa
     (record-accessor g$8975$26727$1XGIwa '3))
   (g$enum-type=?$26738$1XGIwa
     g$enum-type=?$26847$1XGIwa
     (case-lambda
       ((g$enumset1$26760$1XGIwa g$enumset2$26761$1XGIwa)
        (eq? (g$enum-universe-id$26734$1XGIwa
               (g$enum-info$26726$1XGIwa g$enumset1$26760$1XGIwa))
             (g$enum-universe-id$26734$1XGIwa
               (g$enum-info$26726$1XGIwa g$enumset2$26761$1XGIwa))))))
   (g$get-symbols$26739$1XGIwa
     g$get-symbols$26848$1XGIwa
     (case-lambda
       ((g$enumset$26762$1XGIwa)
        (g$enum-universe-symbols$26735$1XGIwa
          (g$enum-info$26726$1XGIwa g$enumset$26762$1XGIwa)))))
   (g$get-value$26740$1XGIwa
     g$get-value$26849$1XGIwa
     (case-lambda
       ((g$enumset$26763$1XGIwa g$s$26764$1XGIwa)
        (g$hashtable-ref$20715$1XGIwa
          (g$enum-universe-mapping$26736$1XGIwa
            (g$enum-info$26726$1XGIwa g$enumset$26763$1XGIwa))
          g$s$26764$1XGIwa
          '#f))))
   (g$assert-enum$26741$1XGIwa
     g$assert-enum$26850$1XGIwa
     (case-lambda
       ((g$who$26765$1XGIwa g$enumset$26766$1XGIwa)
        (if (not (g$enum?$26723$1XGIwa g$enumset$26766$1XGIwa))
          (assertion-violation
            g$who$26765$1XGIwa
            '"not an enumeration"
            g$enumset$26766$1XGIwa)
          (void)))))
   (g$make-info$26742$1XGIwa
     g$make-info$26851$1XGIwa
     (case-lambda
       ((g$symbols$26767$1XGIwa)
        ((case-lambda
           ((g$ht$26768$1XGIwa)
            ((letrec ((g$f$26769$1XGIwa
                        (case-lambda
                          ((g$s$26770$1XGIwa
                             g$a$26771$1XGIwa
                             g$mask$26772$1XGIwa)
                           (if (null? g$s$26770$1XGIwa)
                             (values
                               (reverse! g$a$26771$1XGIwa)
                               g$ht$26768$1XGIwa
                               (- g$mask$26772$1XGIwa '1))
                             ((case-lambda
                                ((g$n$26773$1XGIwa)
                                 (if (g$symbol?$20573$1XGIwa
                                       g$n$26773$1XGIwa)
                                   (if (g$hashtable-contains?$20718$1XGIwa
                                         g$ht$26768$1XGIwa
                                         g$n$26773$1XGIwa)
                                     (g$f$26769$1XGIwa
                                       (cdr g$s$26770$1XGIwa)
                                       g$a$26771$1XGIwa
                                       g$mask$26772$1XGIwa)
                                     (begin
                                       (g$hashtable-set!$20716$1XGIwa
                                         g$ht$26768$1XGIwa
                                         g$n$26773$1XGIwa
                                         g$mask$26772$1XGIwa)
                                       (g$f$26769$1XGIwa
                                         (cdr g$s$26770$1XGIwa)
                                         (cons
                                           g$n$26773$1XGIwa
                                           g$a$26771$1XGIwa)
                                         (g$bitwise-arithmetic-shift-left$22780$1XGIwa
                                           g$mask$26772$1XGIwa
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$26773$1XGIwa))))
                              (car g$s$26770$1XGIwa)))))))
               g$f$26769$1XGIwa)
             g$symbols$26767$1XGIwa
             '()
             '1)))
         (g$make-eq-hashtable$20712$1XGIwa)))))
   (g$make-name$26743$1XGIwa
     g$make-name$26852$1XGIwa
     (case-lambda
       ((g$symbols$26774$1XGIwa)
        (g$string->symbol$20594$1XGIwa
          (g$format$26891$1XGIwa '"~a" g$symbols$26774$1XGIwa)))))
   (g$make-enumeration$26744$1XGIwa
     g$make-enumeration$26853$1XGIwa
     (case-lambda
       ((g$symbols$26775$1XGIwa)
        (call-with-values
          (case-lambda
            (() (g$make-info$26742$1XGIwa g$symbols$26775$1XGIwa)))
          (case-lambda
            ((g$s$26779$1XGIwa
               g$mapping$26780$1XGIwa
               g$mask$26781$1XGIwa)
             ((case-lambda
                ((g$mask$26782$1XGIwa
                   g$mapping$26783$1XGIwa
                   g$s$26784$1XGIwa)
                 (g$make-enum$26724$1XGIwa
                   g$mask$26782$1XGIwa
                   (g$make-enum-universe$26733$1XGIwa
                     (g$make-name$26743$1XGIwa g$s$26784$1XGIwa)
                     g$s$26784$1XGIwa
                     g$mapping$26783$1XGIwa
                     g$mask$26782$1XGIwa))))
              g$mask$26781$1XGIwa
              g$mapping$26780$1XGIwa
              g$s$26779$1XGIwa)))))))
   (g$enum-set-universe$26745$1XGIwa
     g$enum-set-universe$26854$1XGIwa
     (case-lambda
       ((g$enumset$26785$1XGIwa)
        (begin
          (g$assert-enum$26741$1XGIwa
            'enum-set-universe
            g$enumset$26785$1XGIwa)
          ((case-lambda
             ((g$ei$26786$1XGIwa)
              (g$make-enum$26724$1XGIwa
                (g$enum-universe-value$26737$1XGIwa g$ei$26786$1XGIwa)
                g$ei$26786$1XGIwa)))
           (g$enum-info$26726$1XGIwa g$enumset$26785$1XGIwa))))))
   (g$enum-set-indexer$26746$1XGIwa
     g$enum-set-indexer$26855$1XGIwa
     (case-lambda
       ((g$enumset$26787$1XGIwa)
        (begin
          (g$assert-enum$26741$1XGIwa
            'enum-set-indexer
            g$enumset$26787$1XGIwa)
          (case-lambda
            ((g$symbol$26788$1XGIwa)
             (begin
               (if (not (g$symbol?$20573$1XGIwa g$symbol$26788$1XGIwa))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$26788$1XGIwa)
                 (void))
               ((case-lambda
                  ((g$v$26789$1XGIwa)
                   (if g$v$26789$1XGIwa
                     (- (g$bitwise-length$22773$1XGIwa g$v$26789$1XGIwa)
                        '1)
                     '#f)))
                (g$get-value$26740$1XGIwa
                  g$enumset$26787$1XGIwa
                  g$symbol$26788$1XGIwa)))))))))
   (g$enum-set-constructor$26747$1XGIwa
     g$enum-set-constructor$26856$1XGIwa
     (case-lambda
       ((g$enumset$26790$1XGIwa)
        (begin
          (g$assert-enum$26741$1XGIwa
            'enum-set-constructor
            g$enumset$26790$1XGIwa)
          (case-lambda
            ((g$symbols$26791$1XGIwa)
             ((letrec ((g$f$26792$1XGIwa
                         (case-lambda
                           ((g$v$26793$1XGIwa g$s$26794$1XGIwa)
                            (if (null? g$s$26794$1XGIwa)
                              (g$make-enum$26724$1XGIwa
                                g$v$26793$1XGIwa
                                (g$enum-info$26726$1XGIwa
                                  g$enumset$26790$1XGIwa))
                              ((case-lambda
                                 ((g$n$26795$1XGIwa)
                                  (if (g$symbol?$20573$1XGIwa
                                        g$n$26795$1XGIwa)
                                    ((case-lambda
                                       ((g$v*$26796$1XGIwa)
                                        (if g$v*$26796$1XGIwa
                                          (g$f$26792$1XGIwa
                                            (g$bitwise-ior$22770$1XGIwa
                                              g$v$26793$1XGIwa
                                              g$v*$26796$1XGIwa)
                                            (cdr g$s$26794$1XGIwa))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$26795$1XGIwa))))
                                     (g$get-value$26740$1XGIwa
                                       g$enumset$26790$1XGIwa
                                       g$n$26795$1XGIwa))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$26795$1XGIwa))))
                               (car g$s$26794$1XGIwa)))))))
                g$f$26792$1XGIwa)
              '0
              g$symbols$26791$1XGIwa)))))))
   (g$enum-set->list$26748$1XGIwa
     g$enum-set->list$26857$1XGIwa
     (case-lambda
       ((g$enumset$26797$1XGIwa)
        (begin
          (g$assert-enum$26741$1XGIwa
            'enum-set->list
            g$enumset$26797$1XGIwa)
          ((case-lambda
             ((g$value$26798$1XGIwa)
              ((letrec ((g$f$26799$1XGIwa
                          (case-lambda
                            ((g$s$26800$1XGIwa g$l$26801$1XGIwa)
                             (if (null? g$s$26800$1XGIwa)
                               (reverse! g$l$26801$1XGIwa)
                               (if (g$zero?$21616$1XGIwa
                                     (g$bitwise-and$22769$1XGIwa
                                       (g$get-value$26740$1XGIwa
                                         g$enumset$26797$1XGIwa
                                         (car g$s$26800$1XGIwa))
                                       g$value$26798$1XGIwa))
                                 (g$f$26799$1XGIwa
                                   (cdr g$s$26800$1XGIwa)
                                   g$l$26801$1XGIwa)
                                 (g$f$26799$1XGIwa
                                   (cdr g$s$26800$1XGIwa)
                                   (cons
                                     (car g$s$26800$1XGIwa)
                                     g$l$26801$1XGIwa))))))))
                 g$f$26799$1XGIwa)
               (g$get-symbols$26739$1XGIwa g$enumset$26797$1XGIwa)
               '())))
           (g$enum-value$26725$1XGIwa g$enumset$26797$1XGIwa))))))
   (g$enum-set-member?$26749$1XGIwa
     g$enum-set-member?$26858$1XGIwa
     (case-lambda
       ((g$symbol$26802$1XGIwa g$enumset$26803$1XGIwa)
        (begin
          (if (not (g$symbol?$20573$1XGIwa g$symbol$26802$1XGIwa))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$26802$1XGIwa)
            (void))
          (g$assert-enum$26741$1XGIwa
            'enum-set-member?
            g$enumset$26803$1XGIwa)
          ((case-lambda
             ((g$v$26804$1XGIwa)
              (if g$v$26804$1XGIwa
                (not (g$zero?$21616$1XGIwa
                       (g$bitwise-and$22769$1XGIwa
                         g$v$26804$1XGIwa
                         (g$enum-value$26725$1XGIwa
                           g$enumset$26803$1XGIwa))))
                '#f)))
           (g$get-value$26740$1XGIwa
             g$enumset$26803$1XGIwa
             g$symbol$26802$1XGIwa))))))
   (g$enum-set-subset?$26750$1XGIwa
     g$enum-set-subset?$26859$1XGIwa
     (case-lambda
       ((g$enumset1$26805$1XGIwa g$enumset2$26806$1XGIwa)
        (begin
          (g$assert-enum$26741$1XGIwa
            'enum-set-subset?
            g$enumset1$26805$1XGIwa)
          (g$assert-enum$26741$1XGIwa
            'enum-set-subset?
            g$enumset2$26806$1XGIwa)
          ((case-lambda
             ((g$v1$26807$1XGIwa g$v2$26808$1XGIwa)
              (if (g$enum-type=?$26738$1XGIwa
                    g$enumset1$26805$1XGIwa
                    g$enumset2$26806$1XGIwa)
                (g$=$21625$1XGIwa
                  (g$bitwise-and$22769$1XGIwa
                    g$v1$26807$1XGIwa
                    g$v2$26808$1XGIwa)
                  g$v1$26807$1XGIwa)
                ((letrec ((g$f$26809$1XGIwa
                            (case-lambda
                              ((g$s$26810$1XGIwa)
                               (if (null? g$s$26810$1XGIwa)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$26811$1XGIwa
                                       g$v2*$26812$1XGIwa)
                                     (if g$v2*$26812$1XGIwa
                                       ((case-lambda
                                          ((g$has1$26813$1XGIwa
                                             g$has2$26814$1XGIwa)
                                           (if (if g$has1$26813$1XGIwa
                                                 (begin
                                                   '#f
                                                   (not g$has2$26814$1XGIwa))
                                                 '#f)
                                             '#f
                                             (g$f$26809$1XGIwa
                                               (cdr g$s$26810$1XGIwa)))))
                                        (not (g$zero?$21616$1XGIwa
                                               (g$bitwise-and$22769$1XGIwa
                                                 g$v1$26807$1XGIwa
                                                 g$v1*$26811$1XGIwa)))
                                        (not (g$zero?$21616$1XGIwa
                                               (g$bitwise-and$22769$1XGIwa
                                                 g$v2$26808$1XGIwa
                                                 g$v2*$26812$1XGIwa))))
                                       '#f)))
                                  (g$get-value$26740$1XGIwa
                                    g$enumset1$26805$1XGIwa
                                    (car g$s$26810$1XGIwa))
                                  (g$get-value$26740$1XGIwa
                                    g$enumset2$26806$1XGIwa
                                    (car g$s$26810$1XGIwa))))))))
                   g$f$26809$1XGIwa)
                 (g$get-symbols$26739$1XGIwa
                   g$enumset1$26805$1XGIwa)))))
           (g$enum-value$26725$1XGIwa g$enumset1$26805$1XGIwa)
           (g$enum-value$26725$1XGIwa g$enumset2$26806$1XGIwa))))))
   (g$enum-set=?$26751$1XGIwa
     g$enum-set=?$26860$1XGIwa
     (case-lambda
       ((g$enumset1$26815$1XGIwa g$enumset2$26816$1XGIwa)
        (begin
          (g$assert-enum$26741$1XGIwa
            'enum-set=?
            g$enumset1$26815$1XGIwa)
          (g$assert-enum$26741$1XGIwa
            'enum-set=?
            g$enumset2$26816$1XGIwa)
          (if (g$enum-set-subset?$26750$1XGIwa
                g$enumset1$26815$1XGIwa
                g$enumset2$26816$1XGIwa)
            (begin
              '#f
              (g$enum-set-subset?$26750$1XGIwa
                g$enumset2$26816$1XGIwa
                g$enumset1$26815$1XGIwa))
            '#f)))))
   (g$enum-set-union$26752$1XGIwa
     g$enum-set-union$26861$1XGIwa
     (case-lambda
       ((g$enumset1$26817$1XGIwa g$enumset2$26818$1XGIwa)
        (begin
          (g$assert-enum$26741$1XGIwa
            'enum-set-union
            g$enumset1$26817$1XGIwa)
          (g$assert-enum$26741$1XGIwa
            'enum-set-union
            g$enumset2$26818$1XGIwa)
          (if (g$enum-type=?$26738$1XGIwa
                g$enumset1$26817$1XGIwa
                g$enumset2$26818$1XGIwa)
            (g$make-enum$26724$1XGIwa
              (g$bitwise-ior$22770$1XGIwa
                (g$enum-value$26725$1XGIwa g$enumset1$26817$1XGIwa)
                (g$enum-value$26725$1XGIwa g$enumset2$26818$1XGIwa))
              (g$enum-info$26726$1XGIwa g$enumset1$26817$1XGIwa))
            '#f)))))
   (g$enum-set-intersection$26753$1XGIwa
     g$enum-set-intersection$26862$1XGIwa
     (case-lambda
       ((g$enumset1$26819$1XGIwa g$enumset2$26820$1XGIwa)
        (begin
          (g$assert-enum$26741$1XGIwa
            'enum-set-intersection
            g$enumset1$26819$1XGIwa)
          (g$assert-enum$26741$1XGIwa
            'enum-set-intersection
            g$enumset2$26820$1XGIwa)
          (if (g$enum-type=?$26738$1XGIwa
                g$enumset1$26819$1XGIwa
                g$enumset2$26820$1XGIwa)
            (g$make-enum$26724$1XGIwa
              (g$bitwise-and$22769$1XGIwa
                (g$enum-value$26725$1XGIwa g$enumset1$26819$1XGIwa)
                (g$enum-value$26725$1XGIwa g$enumset2$26820$1XGIwa))
              (g$enum-info$26726$1XGIwa g$enumset1$26819$1XGIwa))
            '#f)))))
   (g$enum-set-difference$26754$1XGIwa
     g$enum-set-difference$26863$1XGIwa
     (case-lambda
       ((g$enumset1$26821$1XGIwa g$enumset2$26822$1XGIwa)
        (begin
          (g$assert-enum$26741$1XGIwa
            'enum-set-difference
            g$enumset1$26821$1XGIwa)
          (g$assert-enum$26741$1XGIwa
            'enum-set-difference
            g$enumset2$26822$1XGIwa)
          (if (g$enum-type=?$26738$1XGIwa
                g$enumset1$26821$1XGIwa
                g$enumset2$26822$1XGIwa)
            (g$make-enum$26724$1XGIwa
              (g$bitwise-and$22769$1XGIwa
                (g$enum-value$26725$1XGIwa g$enumset1$26821$1XGIwa)
                (g$bitwise-not$22768$1XGIwa
                  (g$enum-value$26725$1XGIwa g$enumset2$26822$1XGIwa)))
              (g$enum-info$26726$1XGIwa g$enumset1$26821$1XGIwa))
            '#f)))))
   (g$enum-set-complement$26755$1XGIwa
     g$enum-set-complement$26864$1XGIwa
     (case-lambda
       ((g$enumset$26823$1XGIwa)
        (begin
          (g$assert-enum$26741$1XGIwa
            'enum-set-complement
            g$enumset$26823$1XGIwa)
          (g$make-enum$26724$1XGIwa
            (g$bitwise-not$22768$1XGIwa
              (g$enum-value$26725$1XGIwa g$enumset$26823$1XGIwa))
            (g$enum-info$26726$1XGIwa g$enumset$26823$1XGIwa))))))
   (g$enum-set-projection$26756$1XGIwa
     g$enum-set-projection$26865$1XGIwa
     (case-lambda
       ((g$enumset1$26824$1XGIwa g$enumset2$26825$1XGIwa)
        (begin
          (g$assert-enum$26741$1XGIwa
            'enum-set-projection
            g$enumset1$26824$1XGIwa)
          (g$assert-enum$26741$1XGIwa
            'enum-set-projection
            g$enumset2$26825$1XGIwa)
          ((case-lambda
             ((g$v1$26826$1XGIwa)
              ((letrec ((g$f$26827$1XGIwa
                          (case-lambda
                            ((g$s$26828$1XGIwa g$v$26829$1XGIwa)
                             (if (null? g$s$26828$1XGIwa)
                               (g$make-enum$26724$1XGIwa
                                 g$v$26829$1XGIwa
                                 (g$enum-info$26726$1XGIwa
                                   g$enumset2$26825$1XGIwa))
                               (if (g$zero?$21616$1XGIwa
                                     (g$bitwise-and$22769$1XGIwa
                                       g$v1$26826$1XGIwa
                                       (g$get-value$26740$1XGIwa
                                         g$enumset1$26824$1XGIwa
                                         (car g$s$26828$1XGIwa))))
                                 (g$f$26827$1XGIwa
                                   (cdr g$s$26828$1XGIwa)
                                   g$v$26829$1XGIwa)
                                 ((case-lambda
                                    ((g$v2$26830$1XGIwa)
                                     (if g$v2$26830$1XGIwa
                                       (g$f$26827$1XGIwa
                                         (cdr g$s$26828$1XGIwa)
                                         (g$bitwise-ior$22770$1XGIwa
                                           g$v$26829$1XGIwa
                                           g$v2$26830$1XGIwa))
                                       (g$f$26827$1XGIwa
                                         (cdr g$s$26828$1XGIwa)
                                         g$v$26829$1XGIwa))))
                                  (g$get-value$26740$1XGIwa
                                    g$enumset2$26825$1XGIwa
                                    (car g$s$26828$1XGIwa)))))))))
                 g$f$26827$1XGIwa)
               (g$get-symbols$26739$1XGIwa g$enumset1$26824$1XGIwa)
               '0)))
           (g$enum-value$26725$1XGIwa g$enumset1$26824$1XGIwa)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$26757$1XGIwa g$p$26758$1XGIwa g$wr$26759$1XGIwa)
       (g$fprintf$26890$1XGIwa
         g$p$26758$1XGIwa
         '"#[enum-set ~a]"
         (g$enum-set->list$26748$1XGIwa g$x$26757$1XGIwa))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$26866$1XGIwa
     g$dofmt$26888$1XGIwa
     (case-lambda
       ((g$p$26870$1XGIwa g$cntl$26871$1XGIwa g$args$26872$1XGIwa)
        ((case-lambda
           ((g$nmax$26873$1XGIwa)
            ((letrec ((g$loop$26874$1XGIwa
                        (case-lambda
                          ((g$n$26875$1XGIwa g$a$26876$1XGIwa)
                           (if (g$fx<=?$25030$1XGIwa
                                 g$n$26875$1XGIwa
                                 g$nmax$26873$1XGIwa)
                             ((case-lambda
                                ((g$c$26877$1XGIwa)
                                 (if (if (g$char=?$20655$1XGIwa
                                           g$c$26877$1XGIwa
                                           '#\~)
                                       (begin
                                         '#f
                                         (g$fx<?$25029$1XGIwa
                                           g$n$26875$1XGIwa
                                           g$nmax$26873$1XGIwa))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$26878$1XGIwa)
                                       (if (eqv? g$t$26878$1XGIwa '#\a)
                                         (begin
                                           (display
                                             (car g$a$26876$1XGIwa)
                                             g$p$26870$1XGIwa)
                                           (g$loop$26874$1XGIwa
                                             (g$fx+$25015$1XGIwa
                                               g$n$26875$1XGIwa
                                               '2)
                                             (cdr g$a$26876$1XGIwa)))
                                         (if (eqv?
                                               g$t$26878$1XGIwa
                                               '#\s)
                                           (begin
                                             (write
                                               (car g$a$26876$1XGIwa)
                                               g$p$26870$1XGIwa)
                                             (g$loop$26874$1XGIwa
                                               (g$fx+$25015$1XGIwa
                                                 g$n$26875$1XGIwa
                                                 '2)
                                               (cdr g$a$26876$1XGIwa)))
                                           (if (eqv?
                                                 g$t$26878$1XGIwa
                                                 '#\b)
                                             (begin
                                               (write
                                                 (g$number->string$21624$1XGIwa
                                                   (car g$a$26876$1XGIwa)
                                                   '2)
                                                 g$p$26870$1XGIwa)
                                               (g$loop$26874$1XGIwa
                                                 (g$fx+$25015$1XGIwa
                                                   g$n$26875$1XGIwa
                                                   '2)
                                                 (cdr g$a$26876$1XGIwa)))
                                             (if (eqv?
                                                   g$t$26878$1XGIwa
                                                   '#\o)
                                               (begin
                                                 (write
                                                   (g$number->string$21624$1XGIwa
                                                     (car g$a$26876$1XGIwa)
                                                     '8)
                                                   g$p$26870$1XGIwa)
                                                 (g$loop$26874$1XGIwa
                                                   (g$fx+$25015$1XGIwa
                                                     g$n$26875$1XGIwa
                                                     '2)
                                                   (cdr g$a$26876$1XGIwa)))
                                               (if (eqv?
                                                     g$t$26878$1XGIwa
                                                     '#\x)
                                                 (begin
                                                   (write
                                                     (g$number->string$21624$1XGIwa
                                                       (car g$a$26876$1XGIwa)
                                                       '16)
                                                     g$p$26870$1XGIwa)
                                                   (g$loop$26874$1XGIwa
                                                     (g$fx+$25015$1XGIwa
                                                       g$n$26875$1XGIwa
                                                       '2)
                                                     (cdr g$a$26876$1XGIwa)))
                                                 (if (eqv?
                                                       g$t$26878$1XGIwa
                                                       '#\d)
                                                   (begin
                                                     (write
                                                       (g$number->string$21624$1XGIwa
                                                         (car g$a$26876$1XGIwa)
                                                         '10)
                                                       g$p$26870$1XGIwa)
                                                     (g$loop$26874$1XGIwa
                                                       (g$fx+$25015$1XGIwa
                                                         g$n$26875$1XGIwa
                                                         '2)
                                                       (cdr g$a$26876$1XGIwa)))
                                                   (if (eqv?
                                                         g$t$26878$1XGIwa
                                                         '#\~)
                                                     (begin
                                                       (g$write-char$26712$1XGIwa
                                                         '#\~
                                                         g$p$26870$1XGIwa)
                                                       (g$loop$26874$1XGIwa
                                                         (g$fx+$25015$1XGIwa
                                                           g$n$26875$1XGIwa
                                                           '2)
                                                         g$a$26876$1XGIwa))
                                                     (begin
                                                       '#f
                                                       (g$write-char$26712$1XGIwa
                                                         g$c$26877$1XGIwa
                                                         g$p$26870$1XGIwa)
                                                       (g$loop$26874$1XGIwa
                                                         (g$fx+$25015$1XGIwa
                                                           g$n$26875$1XGIwa
                                                           '1)
                                                         g$a$26876$1XGIwa)))))))))))
                                    (g$string-ref$20582$1XGIwa
                                      g$cntl$26871$1XGIwa
                                      (g$fx+$25015$1XGIwa
                                        g$n$26875$1XGIwa
                                        '1)))
                                   (begin
                                     (g$write-char$26712$1XGIwa
                                       g$c$26877$1XGIwa
                                       g$p$26870$1XGIwa)
                                     (g$loop$26874$1XGIwa
                                       (g$fx+$25015$1XGIwa
                                         g$n$26875$1XGIwa
                                         '1)
                                       g$a$26876$1XGIwa)))))
                              (g$string-ref$20582$1XGIwa
                                g$cntl$26871$1XGIwa
                                g$n$26875$1XGIwa))
                             (void))))))
               g$loop$26874$1XGIwa)
             '0
             g$args$26872$1XGIwa)))
         (g$fx-$25017$1XGIwa
           (g$string-length$20585$1XGIwa g$cntl$26871$1XGIwa)
           '1)))))
   (g$printf$26867$1XGIwa
     g$printf$26889$1XGIwa
     (case-lambda
       ((g$control$26879$1XGIwa . g$args$26880$1XGIwa)
        (g$dofmt$26866$1XGIwa
          (current-output-port)
          g$control$26879$1XGIwa
          g$args$26880$1XGIwa))))
   (g$fprintf$26868$1XGIwa
     g$fprintf$26890$1XGIwa
     (case-lambda
       ((g$p$26881$1XGIwa g$control$26882$1XGIwa . g$args$26883$1XGIwa)
        (g$dofmt$26866$1XGIwa
          g$p$26881$1XGIwa
          g$control$26882$1XGIwa
          g$args$26883$1XGIwa))))
   (g$format$26869$1XGIwa
     g$format$26891$1XGIwa
     (case-lambda
       ((g$control$26884$1XGIwa . g$args$26885$1XGIwa)
        (call-with-values
          g$open-string-output-port$26651$1XGIwa
          (case-lambda
            ((g$p$26886$1XGIwa g$c$26887$1XGIwa)
             (begin
               (g$dofmt$26866$1XGIwa
                 g$p$26886$1XGIwa
                 g$control$26884$1XGIwa
                 g$args$26885$1XGIwa)
               (g$c$26887$1XGIwa)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$26892$1XGIwa
     g$make-traced-macro$26895$1XGIwa
     (case-lambda
       ((g$name$26893$1XGIwa g$x$26894$1XGIwa)
        (if (g$procedure?$20575$1XGIwa g$x$26894$1XGIwa)
          (make-traced-procedure
            g$name$26893$1XGIwa
            g$x$26894$1XGIwa
            g$syntax->datum$32468$1XGIwa)
          (if (g$variable-transformer?$32289$1XGIwa g$x$26894$1XGIwa)
            (g$make-variable-transformer$32287$1XGIwa
              (make-traced-procedure
                g$name$26893$1XGIwa
                (g$variable-transformer-procedure$32290$1XGIwa
                  g$x$26894$1XGIwa)
                g$syntax->datum$32468$1XGIwa))
            (begin '#f g$x$26894$1XGIwa)))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$26896$1XGIwa
     g$library-version-mismatch-warning$27097$1XGIwa
     (case-lambda
       ((g$name$27069$1XGIwa
          g$depname$27070$1XGIwa
          g$filename$27071$1XGIwa)
        (g$fprintf$26890$1XGIwa
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$27069$1XGIwa
          g$depname$27070$1XGIwa
          g$filename$27071$1XGIwa))))
   (g$file-locator-resolution-error$26897$1XGIwa
     g$file-locator-resolution-error$27098$1XGIwa
     (case-lambda
       ((g$libname$27072$1XGIwa g$failed-list$27073$1XGIwa)
        (letrec* ((g$9153$27074$1XGIwa
                    (make-record-type-descriptor
                      '&library-resolution
                      g$&condition-rtd$22092$1XGIwa
                      'g$9156$1XGIwa
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$9155$27075$1XGIwa '#f)
                  (g$9154$27076$1XGIwa
                    (make-record-constructor-descriptor
                      g$9153$27074$1XGIwa
                      g$&condition-rcd$22093$1XGIwa
                      g$9155$27075$1XGIwa))
                  (g$9152$27079$1XGIwa
                    (record-predicate g$9153$27074$1XGIwa))
                  (g$make-library-resolution-condition$27080$1XGIwa
                    (record-constructor g$9154$27076$1XGIwa))
                  (g$9150$27081$1XGIwa
                    (record-accessor g$9153$27074$1XGIwa '0))
                  (g$9151$27082$1XGIwa
                    (record-accessor g$9153$27074$1XGIwa '1))
                  (g$library-resolution-condition?$27083$1XGIwa
                    (condition-predicate g$9153$27074$1XGIwa))
                  (g$condition-library$27084$1XGIwa
                    (condition-accessor
                      g$9153$27074$1XGIwa
                      g$9150$27081$1XGIwa))
                  (g$condition-files$27085$1XGIwa
                    (condition-accessor
                      g$9153$27074$1XGIwa
                      g$9151$27082$1XGIwa)))
          (raise
            (condition
              (g$make-error$22124$1XGIwa)
              (g$make-who-condition$22158$1XGIwa 'expander)
              (g$make-message-condition$22098$1XGIwa
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$27080$1XGIwa
                g$libname$27072$1XGIwa
                g$failed-list$27073$1XGIwa)))))))
   (g$read-library-source-file$26898$1XGIwa
     g$read-library-source-file$27099$1XGIwa
     (case-lambda
       ((g$file-name$27086$1XGIwa)
        (g$with-input-from-file$26713$1XGIwa
          g$file-name$27086$1XGIwa
          read-annotated))))
   (g$make-parameter$26899$1XGIwa
     g$make-parameter$27100$1XGIwa
     (case-lambda
       ((g$x$27087$1XGIwa)
        (g$make-parameter$26899$1XGIwa
          g$x$27087$1XGIwa
          (case-lambda ((g$x$27088$1XGIwa) g$x$27088$1XGIwa))))
       ((g$x$27089$1XGIwa g$fender$27090$1XGIwa)
        (begin
          (if (not (g$procedure?$20575$1XGIwa g$fender$27090$1XGIwa))
            (g$assertion-error$32461$1XGIwa
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(90,8) - (90,36)"))
            (void))
          ((case-lambda
             ((g$x$27091$1XGIwa)
              (case-lambda
                (() g$x$27091$1XGIwa)
                ((g$v$27092$1XGIwa)
                 (set! g$x$27091$1XGIwa
                   (g$fender$27090$1XGIwa g$v$27092$1XGIwa))))))
           (g$fender$27090$1XGIwa g$x$27089$1XGIwa))))))
   (g$file-options-constructor$27065$1XGIwa
     g$file-options-constructor$27101$1XGIwa
     (g$make-parameter$26899$1XGIwa '#f))
   (g$file-options-spec$27066$1XGIwa
     g$file-options-spec$27102$1XGIwa
     (case-lambda
       ((g$x$27093$1XGIwa)
        ((g$file-options-constructor$27065$1XGIwa) g$x$27093$1XGIwa))))
   (g$set-label-binding!$27067$1XGIwa
     g$set-label-binding!$27103$1XGIwa
     (case-lambda
       ((g$label$27094$1XGIwa g$binding$27095$1XGIwa)
        (set-symbol-value!
          g$label$27094$1XGIwa
          g$binding$27095$1XGIwa))))
   (g$label-binding$27068$1XGIwa
     g$label-binding$27104$1XGIwa
     (case-lambda
       ((g$label$27096$1XGIwa)
        (if (symbol-bound? g$label$27096$1XGIwa)
          (begin '#f (symbol-value g$label$27096$1XGIwa))
          '#f)))))
  (void))

(library-letrec* (ironscheme pretty-print)
  ((g$genwrite:newline-str$27105$1XGIwa
     g$genwrite:newline-str$27298$1XGIwa
     (g$make-string$20581$1XGIwa '1 '#\newline))
   (g$symbol->string$27106$1XGIwa
     g$symbol->string$27299$1XGIwa
     (case-lambda
       ((g$s$27118$1XGIwa)
        (g$symbol->string$20593$1XGIwa
          (if (g$pretty-gensyms$27115$1XGIwa)
            (ungensym g$s$27118$1XGIwa)
            g$s$27118$1XGIwa)))))
   (g$read-macro-body$27107$1XGIwa
     g$read-macro-body$27300$1XGIwa
     (case-lambda
       ((g$l$27119$1XGIwa) (g$cadr$20611$1XGIwa g$l$27119$1XGIwa))))
   (g$read-macro-prefix$27108$1XGIwa
     g$read-macro-prefix$27301$1XGIwa
     (case-lambda
       ((g$l$27120$1XGIwa)
        ((case-lambda
           ((g$head$27121$1XGIwa g$tail$27122$1XGIwa)
            ((case-lambda
               ((g$t$27123$1XGIwa)
                (if (eqv? g$t$27123$1XGIwa 'syntax)
                  '"#'"
                  (if (eqv? g$t$27123$1XGIwa 'quasisyntax)
                    '"#`"
                    (if (eqv? g$t$27123$1XGIwa 'unsyntax)
                      '"#,"
                      (if (eqv? g$t$27123$1XGIwa 'unsyntax-splicing)
                        '"#,@"
                        (if (eqv? g$t$27123$1XGIwa 'quote)
                          '"'"
                          (if (eqv? g$t$27123$1XGIwa 'quasiquote)
                            '"`"
                            (if (eqv? g$t$27123$1XGIwa 'unquote)
                              '","
                              (if (eqv?
                                    g$t$27123$1XGIwa
                                    'unquote-splicing)
                                '",@"
                                (if '#f '#f (void))))))))))))
             g$head$27121$1XGIwa)))
         (car g$l$27120$1XGIwa)
         (cdr g$l$27120$1XGIwa)))))
   (g$length1?$27109$1XGIwa
     g$length1?$27302$1XGIwa
     (case-lambda
       ((g$l$27124$1XGIwa)
        (if (pair? g$l$27124$1XGIwa)
          (begin '#f (null? (cdr g$l$27124$1XGIwa)))
          '#f))))
   (g$read-macro?$27110$1XGIwa
     g$read-macro?$27303$1XGIwa
     (case-lambda
       ((g$l$27125$1XGIwa)
        ((case-lambda
           ((g$head$27126$1XGIwa g$tail$27127$1XGIwa)
            ((case-lambda
               ((g$t$27128$1XGIwa)
                (if (g$memv$19654$1XGIwa
                      g$t$27128$1XGIwa
                      '(quote
                         quasiquote
                         unquote
                         unquote-splicing
                         syntax
                         quasisyntax
                         unsyntax
                         unsyntax-splicing))
                  (g$length1?$27109$1XGIwa g$tail$27127$1XGIwa)
                  (begin '#f '#f))))
             g$head$27126$1XGIwa)))
         (car g$l$27125$1XGIwa)
         (cdr g$l$27125$1XGIwa)))))
   (g$generic-write$27111$1XGIwa
     g$generic-write$27304$1XGIwa
     (case-lambda
       ((g$obj$27129$1XGIwa
          g$display?$27130$1XGIwa
          g$width$27131$1XGIwa
          g$output$27132$1XGIwa)
        (letrec* ((g$out$27133$1XGIwa
                    (case-lambda
                      ((g$str$27282$1XGIwa g$col$27283$1XGIwa)
                       (if g$col$27283$1XGIwa
                         (if (g$output$27132$1XGIwa g$str$27282$1XGIwa)
                           (begin
                             '#f
                             (g$fx+$25015$1XGIwa
                               g$col$27283$1XGIwa
                               (g$string-length$20585$1XGIwa
                                 g$str$27282$1XGIwa)))
                           '#f)
                         '#f))))
                  (g$wr$27134$1XGIwa
                    (case-lambda
                      ((g$obj$27265$1XGIwa g$col$27266$1XGIwa)
                       (letrec* ((g$wr-expr$27267$1XGIwa
                                   (case-lambda
                                     ((g$expr$27280$1XGIwa
                                        g$col$27281$1XGIwa)
                                      (if (g$read-macro?$27110$1XGIwa
                                            g$expr$27280$1XGIwa)
                                        (g$wr$27134$1XGIwa
                                          (g$read-macro-body$27107$1XGIwa
                                            g$expr$27280$1XGIwa)
                                          (g$out$27133$1XGIwa
                                            (g$read-macro-prefix$27108$1XGIwa
                                              g$expr$27280$1XGIwa)
                                            g$col$27281$1XGIwa))
                                        (g$wr-lst$27268$1XGIwa
                                          g$expr$27280$1XGIwa
                                          g$col$27281$1XGIwa)))))
                                 (g$wr-lst$27268$1XGIwa
                                   (case-lambda
                                     ((g$l$27275$1XGIwa
                                        g$col$27276$1XGIwa)
                                      (if (pair? g$l$27275$1XGIwa)
                                        ((letrec ((g$loop$27277$1XGIwa
                                                    (case-lambda
                                                      ((g$l$27278$1XGIwa
                                                         g$col$27279$1XGIwa)
                                                       (if (not g$col$27279$1XGIwa)
                                                         g$col$27279$1XGIwa
                                                         (if (pair?
                                                               g$l$27278$1XGIwa)
                                                           (g$loop$27277$1XGIwa
                                                             (cdr g$l$27278$1XGIwa)
                                                             (g$wr$27134$1XGIwa
                                                               (car g$l$27278$1XGIwa)
                                                               (g$out$27133$1XGIwa
                                                                 '" "
                                                                 g$col$27279$1XGIwa)))
                                                           (if (null?
                                                                 g$l$27278$1XGIwa)
                                                             (g$out$27133$1XGIwa
                                                               '")"
                                                               g$col$27279$1XGIwa)
                                                             (begin
                                                               '#f
                                                               (g$out$27133$1XGIwa
                                                                 '")"
                                                                 (g$wr$27134$1XGIwa
                                                                   g$l$27278$1XGIwa
                                                                   (g$out$27133$1XGIwa
                                                                     '" . "
                                                                     g$col$27279$1XGIwa)))))))))))
                                           g$loop$27277$1XGIwa)
                                         (cdr g$l$27275$1XGIwa)
                                         (if g$col$27276$1XGIwa
                                           (begin
                                             '#f
                                             (g$wr$27134$1XGIwa
                                               (car g$l$27275$1XGIwa)
                                               (g$out$27133$1XGIwa
                                                 '"("
                                                 g$col$27276$1XGIwa)))
                                           '#f))
                                        (g$out$27133$1XGIwa
                                          '"()"
                                          g$col$27276$1XGIwa))))))
                         (if (pair? g$obj$27265$1XGIwa)
                           (g$wr-expr$27267$1XGIwa
                             g$obj$27265$1XGIwa
                             g$col$27266$1XGIwa)
                           (if (null? g$obj$27265$1XGIwa)
                             (g$wr-lst$27268$1XGIwa
                               g$obj$27265$1XGIwa
                               g$col$27266$1XGIwa)
                             (if (g$vector?$20571$1XGIwa
                                   g$obj$27265$1XGIwa)
                               (g$wr-lst$27268$1XGIwa
                                 (g$vector->list$20607$1XGIwa
                                   g$obj$27265$1XGIwa)
                                 (g$out$27133$1XGIwa
                                   '"#"
                                   g$col$27266$1XGIwa))
                               (if (g$boolean?$20574$1XGIwa
                                     g$obj$27265$1XGIwa)
                                 (g$out$27133$1XGIwa
                                   (if g$obj$27265$1XGIwa '"#t" '"#f")
                                   g$col$27266$1XGIwa)
                                 (if (g$number?$21603$1XGIwa
                                       g$obj$27265$1XGIwa)
                                   (g$out$27133$1XGIwa
                                     (g$number->string$21624$1XGIwa
                                       g$obj$27265$1XGIwa)
                                     g$col$27266$1XGIwa)
                                   (if (g$symbol?$20573$1XGIwa
                                         g$obj$27265$1XGIwa)
                                     (g$out$27133$1XGIwa
                                       (g$symbol->string$27106$1XGIwa
                                         g$obj$27265$1XGIwa)
                                       g$col$27266$1XGIwa)
                                     (if (g$string?$20569$1XGIwa
                                           g$obj$27265$1XGIwa)
                                       (if g$display?$27130$1XGIwa
                                         (g$out$27133$1XGIwa
                                           g$obj$27265$1XGIwa
                                           g$col$27266$1XGIwa)
                                         ((letrec ((g$loop$27269$1XGIwa
                                                     (case-lambda
                                                       ((g$i$27270$1XGIwa
                                                          g$j$27271$1XGIwa
                                                          g$col$27272$1XGIwa)
                                                        (if (if g$col$27272$1XGIwa
                                                              (begin
                                                                '#f
                                                                (g$fx<?$25029$1XGIwa
                                                                  g$j$27271$1XGIwa
                                                                  (g$string-length$20585$1XGIwa
                                                                    g$obj$27265$1XGIwa)))
                                                              '#f)
                                                          ((case-lambda
                                                             ((g$c$27273$1XGIwa)
                                                              (if ((case-lambda
                                                                     ((g$t$27274$1XGIwa)
                                                                      (if g$t$27274$1XGIwa
                                                                        g$t$27274$1XGIwa
                                                                        (begin
                                                                          '#f
                                                                          (g$char=?$20655$1XGIwa
                                                                            g$c$27273$1XGIwa
                                                                            '#\")))))
                                                                   (g$char=?$20655$1XGIwa
                                                                     g$c$27273$1XGIwa
                                                                     '#\\))
                                                                (g$loop$27269$1XGIwa
                                                                  g$j$27271$1XGIwa
                                                                  (g$fx+$25015$1XGIwa
                                                                    g$j$27271$1XGIwa
                                                                    '1)
                                                                  (g$out$27133$1XGIwa
                                                                    '"\\"
                                                                    (g$out$27133$1XGIwa
                                                                      (g$substring$20590$1XGIwa
                                                                        g$obj$27265$1XGIwa
                                                                        g$i$27270$1XGIwa
                                                                        g$j$27271$1XGIwa)
                                                                      g$col$27272$1XGIwa)))
                                                                (g$loop$27269$1XGIwa
                                                                  g$i$27270$1XGIwa
                                                                  (g$fx+$25015$1XGIwa
                                                                    g$j$27271$1XGIwa
                                                                    '1)
                                                                  g$col$27272$1XGIwa))))
                                                           (g$string-ref$20582$1XGIwa
                                                             g$obj$27265$1XGIwa
                                                             g$j$27271$1XGIwa))
                                                          (g$out$27133$1XGIwa
                                                            '"\""
                                                            (g$out$27133$1XGIwa
                                                              (g$substring$20590$1XGIwa
                                                                g$obj$27265$1XGIwa
                                                                g$i$27270$1XGIwa
                                                                g$j$27271$1XGIwa)
                                                              g$col$27272$1XGIwa)))))))
                                            g$loop$27269$1XGIwa)
                                          '0
                                          '0
                                          (g$out$27133$1XGIwa
                                            '"\""
                                            g$col$27266$1XGIwa)))
                                       (begin
                                         '#f
                                         (g$out$27133$1XGIwa
                                           (g$format$26891$1XGIwa
                                             (if g$display?$27130$1XGIwa
                                               '"~a"
                                               '"~s")
                                             g$obj$27265$1XGIwa)
                                           g$col$27266$1XGIwa)))))))))))))
                  (g$pp$27135$1XGIwa
                    (case-lambda
                      ((g$obj$27136$1XGIwa g$col$27137$1XGIwa)
                       (letrec* ((g$spaces$27138$1XGIwa
                                   (case-lambda
                                     ((g$n$27263$1XGIwa
                                        g$col$27264$1XGIwa)
                                      (if (g$fx>?$25031$1XGIwa
                                            g$n$27263$1XGIwa
                                            '0)
                                        (if (g$fx>?$25031$1XGIwa
                                              g$n$27263$1XGIwa
                                              '7)
                                          (g$spaces$27138$1XGIwa
                                            (g$fx-$25017$1XGIwa
                                              g$n$27263$1XGIwa
                                              '8)
                                            (g$out$27133$1XGIwa
                                              '"        "
                                              g$col$27264$1XGIwa))
                                          (g$out$27133$1XGIwa
                                            (g$substring$20590$1XGIwa
                                              '"        "
                                              '0
                                              g$n$27263$1XGIwa)
                                            g$col$27264$1XGIwa))
                                        g$col$27264$1XGIwa))))
                                 (g$indent$27139$1XGIwa
                                   (case-lambda
                                     ((g$to$27261$1XGIwa
                                        g$col$27262$1XGIwa)
                                      (if g$col$27262$1XGIwa
                                        (begin
                                          '#f
                                          (if (g$fx<?$25029$1XGIwa
                                                g$to$27261$1XGIwa
                                                g$col$27262$1XGIwa)
                                            (if (g$out$27133$1XGIwa
                                                  g$genwrite:newline-str$27105$1XGIwa
                                                  g$col$27262$1XGIwa)
                                              (begin
                                                '#f
                                                (g$spaces$27138$1XGIwa
                                                  g$to$27261$1XGIwa
                                                  '0))
                                              '#f)
                                            (g$spaces$27138$1XGIwa
                                              (g$fx-$25017$1XGIwa
                                                g$to$27261$1XGIwa
                                                g$col$27262$1XGIwa)
                                              g$col$27262$1XGIwa)))
                                        '#f))))
                                 (g$pr$27140$1XGIwa
                                   (case-lambda
                                     ((g$obj$27253$1XGIwa
                                        g$col$27254$1XGIwa
                                        g$extra$27255$1XGIwa
                                        g$pp-pair$27256$1XGIwa)
                                      (if ((case-lambda
                                             ((g$t$27257$1XGIwa)
                                              (if g$t$27257$1XGIwa
                                                g$t$27257$1XGIwa
                                                (begin
                                                  '#f
                                                  (g$vector?$20571$1XGIwa
                                                    g$obj$27253$1XGIwa)))))
                                           (pair? g$obj$27253$1XGIwa))
                                        ((case-lambda
                                           ((g$result$27258$1XGIwa
                                              g$left$27259$1XGIwa)
                                            (begin
                                              (g$generic-write$27111$1XGIwa
                                                g$obj$27253$1XGIwa
                                                g$display?$27130$1XGIwa
                                                '#f
                                                (case-lambda
                                                  ((g$str$27260$1XGIwa)
                                                   (begin
                                                     (set! g$result$27258$1XGIwa
                                                       (cons
                                                         g$str$27260$1XGIwa
                                                         g$result$27258$1XGIwa))
                                                     (set! g$left$27259$1XGIwa
                                                       (g$fx-$25017$1XGIwa
                                                         g$left$27259$1XGIwa
                                                         (g$string-length$20585$1XGIwa
                                                           g$str$27260$1XGIwa)))
                                                     (g$fx>?$25031$1XGIwa
                                                       g$left$27259$1XGIwa
                                                       '0)))))
                                              (if (g$fx>?$25031$1XGIwa
                                                    g$left$27259$1XGIwa
                                                    '0)
                                                (g$out$27133$1XGIwa
                                                  (g$reverse-string-append$27116$1XGIwa
                                                    g$result$27258$1XGIwa)
                                                  g$col$27254$1XGIwa)
                                                (if (pair?
                                                      g$obj$27253$1XGIwa)
                                                  (g$pp-pair$27256$1XGIwa
                                                    g$obj$27253$1XGIwa
                                                    g$col$27254$1XGIwa
                                                    g$extra$27255$1XGIwa)
                                                  (g$pp-list$27143$1XGIwa
                                                    (g$vector->list$20607$1XGIwa
                                                      g$obj$27253$1XGIwa)
                                                    (g$out$27133$1XGIwa
                                                      '"#"
                                                      g$col$27254$1XGIwa)
                                                    g$extra$27255$1XGIwa
                                                    g$pp-expr$27141$1XGIwa))))))
                                         '()
                                         (g$min$20644$1XGIwa
                                           (g$fx+$25015$1XGIwa
                                             (g$fx-$25017$1XGIwa
                                               (g$fx-$25017$1XGIwa
                                                 g$width$27131$1XGIwa
                                                 g$col$27254$1XGIwa)
                                               g$extra$27255$1XGIwa)
                                             '1)
                                           (g$pretty-width$27112$1XGIwa)))
                                        (g$wr$27134$1XGIwa
                                          g$obj$27253$1XGIwa
                                          g$col$27254$1XGIwa)))))
                                 (g$pp-expr$27141$1XGIwa
                                   (case-lambda
                                     ((g$expr$27248$1XGIwa
                                        g$col$27249$1XGIwa
                                        g$extra$27250$1XGIwa)
                                      (if (g$read-macro?$27110$1XGIwa
                                            g$expr$27248$1XGIwa)
                                        (g$pr$27140$1XGIwa
                                          (g$read-macro-body$27107$1XGIwa
                                            g$expr$27248$1XGIwa)
                                          (g$out$27133$1XGIwa
                                            (g$read-macro-prefix$27108$1XGIwa
                                              g$expr$27248$1XGIwa)
                                            g$col$27249$1XGIwa)
                                          g$extra$27250$1XGIwa
                                          g$pp-expr$27141$1XGIwa)
                                        ((case-lambda
                                           ((g$head$27251$1XGIwa)
                                            (if (g$symbol?$20573$1XGIwa
                                                  g$head$27251$1XGIwa)
                                              ((case-lambda
                                                 ((g$proc$27252$1XGIwa)
                                                  (if g$proc$27252$1XGIwa
                                                    (g$proc$27252$1XGIwa
                                                      g$expr$27248$1XGIwa
                                                      g$col$27249$1XGIwa
                                                      g$extra$27250$1XGIwa)
                                                    (if (g$fx>?$25031$1XGIwa
                                                          (g$string-length$20585$1XGIwa
                                                            (g$symbol->string$27106$1XGIwa
                                                              g$head$27251$1XGIwa))
                                                          (g$max-call-head-width$27114$1XGIwa))
                                                      (g$pp-general$27145$1XGIwa
                                                        g$expr$27248$1XGIwa
                                                        g$col$27249$1XGIwa
                                                        g$extra$27250$1XGIwa
                                                        '#f
                                                        '#f
                                                        '#f
                                                        g$pp-expr$27141$1XGIwa)
                                                      (g$pp-call$27142$1XGIwa
                                                        g$expr$27248$1XGIwa
                                                        g$col$27249$1XGIwa
                                                        g$extra$27250$1XGIwa
                                                        g$pp-expr$27141$1XGIwa)))))
                                               (g$style$27157$1XGIwa
                                                 g$head$27251$1XGIwa))
                                              (g$pp-list$27143$1XGIwa
                                                g$expr$27248$1XGIwa
                                                g$col$27249$1XGIwa
                                                g$extra$27250$1XGIwa
                                                g$pp-expr$27141$1XGIwa))))
                                         (car g$expr$27248$1XGIwa))))))
                                 (g$pp-call$27142$1XGIwa
                                   (case-lambda
                                     ((g$expr$27243$1XGIwa
                                        g$col$27244$1XGIwa
                                        g$extra$27245$1XGIwa
                                        g$pp-item$27246$1XGIwa)
                                      ((case-lambda
                                         ((g$col*$27247$1XGIwa)
                                          (if g$col$27244$1XGIwa
                                            (begin
                                              '#f
                                              (g$pp-down$27144$1XGIwa
                                                (cdr g$expr$27243$1XGIwa)
                                                g$col*$27247$1XGIwa
                                                (g$fx+$25015$1XGIwa
                                                  g$col*$27247$1XGIwa
                                                  '1)
                                                g$extra$27245$1XGIwa
                                                g$pp-item$27246$1XGIwa))
                                            '#f)))
                                       (g$wr$27134$1XGIwa
                                         (car g$expr$27243$1XGIwa)
                                         (g$out$27133$1XGIwa
                                           '"("
                                           g$col$27244$1XGIwa))))))
                                 (g$pp-list$27143$1XGIwa
                                   (case-lambda
                                     ((g$l$27238$1XGIwa
                                        g$col$27239$1XGIwa
                                        g$extra$27240$1XGIwa
                                        g$pp-item$27241$1XGIwa)
                                      ((case-lambda
                                         ((g$col$27242$1XGIwa)
                                          (g$pp-down$27144$1XGIwa
                                            g$l$27238$1XGIwa
                                            g$col$27242$1XGIwa
                                            g$col$27242$1XGIwa
                                            g$extra$27240$1XGIwa
                                            g$pp-item$27241$1XGIwa)))
                                       (g$out$27133$1XGIwa
                                         '"("
                                         g$col$27239$1XGIwa)))))
                                 (g$pp-down$27144$1XGIwa
                                   (case-lambda
                                     ((g$l$27228$1XGIwa
                                        g$col1$27229$1XGIwa
                                        g$col2$27230$1XGIwa
                                        g$extra$27231$1XGIwa
                                        g$pp-item$27232$1XGIwa)
                                      ((letrec ((g$loop$27233$1XGIwa
                                                  (case-lambda
                                                    ((g$l$27234$1XGIwa
                                                       g$col$27235$1XGIwa)
                                                     (if g$col$27235$1XGIwa
                                                       (begin
                                                         '#f
                                                         (if (pair?
                                                               g$l$27234$1XGIwa)
                                                           ((case-lambda
                                                              ((g$rest$27236$1XGIwa)
                                                               ((case-lambda
                                                                  ((g$extra$27237$1XGIwa)
                                                                   (g$loop$27233$1XGIwa
                                                                     g$rest$27236$1XGIwa
                                                                     (g$pr$27140$1XGIwa
                                                                       (car g$l$27234$1XGIwa)
                                                                       (g$indent$27139$1XGIwa
                                                                         g$col2$27230$1XGIwa
                                                                         g$col$27235$1XGIwa)
                                                                       g$extra$27237$1XGIwa
                                                                       g$pp-item$27232$1XGIwa))))
                                                                (if (null?
                                                                      g$rest$27236$1XGIwa)
                                                                  (g$fx+$25015$1XGIwa
                                                                    g$extra$27231$1XGIwa
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$l$27234$1XGIwa))
                                                           (if (null?
                                                                 g$l$27234$1XGIwa)
                                                             (g$out$27133$1XGIwa
                                                               '")"
                                                               g$col$27235$1XGIwa)
                                                             (begin
                                                               '#f
                                                               (g$out$27133$1XGIwa
                                                                 '")"
                                                                 (g$pr$27140$1XGIwa
                                                                   g$l$27234$1XGIwa
                                                                   (g$indent$27139$1XGIwa
                                                                     g$col2$27230$1XGIwa
                                                                     (g$out$27133$1XGIwa
                                                                       '"."
                                                                       (g$indent$27139$1XGIwa
                                                                         g$col2$27230$1XGIwa
                                                                         g$col$27235$1XGIwa)))
                                                                   (g$fx+$25015$1XGIwa
                                                                     g$extra$27231$1XGIwa
                                                                     '1)
                                                                   g$pp-item$27232$1XGIwa))))))
                                                       '#f)))))
                                         g$loop$27233$1XGIwa)
                                       g$l$27228$1XGIwa
                                       g$col1$27229$1XGIwa))))
                                 (g$pp-general$27145$1XGIwa
                                   (case-lambda
                                     ((g$expr$27195$1XGIwa
                                        g$col$27196$1XGIwa
                                        g$extra$27197$1XGIwa
                                        g$named?$27198$1XGIwa
                                        g$pp-1$27199$1XGIwa
                                        g$pp-2$27200$1XGIwa
                                        g$pp-3$27201$1XGIwa)
                                      (letrec* ((g$tail1$27202$1XGIwa
                                                  (case-lambda
                                                    ((g$rest$27221$1XGIwa
                                                       g$col1$27222$1XGIwa
                                                       g$col2$27223$1XGIwa
                                                       g$col3$27224$1XGIwa)
                                                     (if (if g$pp-1$27199$1XGIwa
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$27221$1XGIwa))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$27225$1XGIwa)
                                                           ((case-lambda
                                                              ((g$rest$27226$1XGIwa)
                                                               ((case-lambda
                                                                  ((g$extra$27227$1XGIwa)
                                                                   (g$tail2$27203$1XGIwa
                                                                     g$rest$27226$1XGIwa
                                                                     g$col1$27222$1XGIwa
                                                                     (g$pr$27140$1XGIwa
                                                                       g$val1$27225$1XGIwa
                                                                       (g$indent$27139$1XGIwa
                                                                         g$col3$27224$1XGIwa
                                                                         g$col2$27223$1XGIwa)
                                                                       g$extra$27227$1XGIwa
                                                                       g$pp-1$27199$1XGIwa)
                                                                     g$col3$27224$1XGIwa)))
                                                                (if (null?
                                                                      g$rest$27226$1XGIwa)
                                                                  (g$fx+$25015$1XGIwa
                                                                    g$extra$27197$1XGIwa
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$27221$1XGIwa))))
                                                        (car g$rest$27221$1XGIwa))
                                                       (g$tail2$27203$1XGIwa
                                                         g$rest$27221$1XGIwa
                                                         g$col1$27222$1XGIwa
                                                         g$col2$27223$1XGIwa
                                                         g$col3$27224$1XGIwa)))))
                                                (g$tail2$27203$1XGIwa
                                                  (case-lambda
                                                    ((g$rest$27214$1XGIwa
                                                       g$col1$27215$1XGIwa
                                                       g$col2$27216$1XGIwa
                                                       g$col3$27217$1XGIwa)
                                                     (if (if g$pp-2$27200$1XGIwa
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$27214$1XGIwa))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$27218$1XGIwa)
                                                           ((case-lambda
                                                              ((g$rest$27219$1XGIwa)
                                                               ((case-lambda
                                                                  ((g$extra$27220$1XGIwa)
                                                                   (g$tail3$27204$1XGIwa
                                                                     g$rest$27219$1XGIwa
                                                                     g$col1$27215$1XGIwa
                                                                     (g$pr$27140$1XGIwa
                                                                       g$val1$27218$1XGIwa
                                                                       (g$indent$27139$1XGIwa
                                                                         g$col3$27217$1XGIwa
                                                                         g$col2$27216$1XGIwa)
                                                                       g$extra$27220$1XGIwa
                                                                       g$pp-2$27200$1XGIwa))))
                                                                (if (null?
                                                                      g$rest$27219$1XGIwa)
                                                                  (g$fx+$25015$1XGIwa
                                                                    g$extra$27197$1XGIwa
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$27214$1XGIwa))))
                                                        (car g$rest$27214$1XGIwa))
                                                       (g$tail3$27204$1XGIwa
                                                         g$rest$27214$1XGIwa
                                                         g$col1$27215$1XGIwa
                                                         g$col2$27216$1XGIwa)))))
                                                (g$tail3$27204$1XGIwa
                                                  (case-lambda
                                                    ((g$rest$27211$1XGIwa
                                                       g$col1$27212$1XGIwa
                                                       g$col2$27213$1XGIwa)
                                                     (g$pp-down$27144$1XGIwa
                                                       g$rest$27211$1XGIwa
                                                       g$col2$27213$1XGIwa
                                                       g$col1$27212$1XGIwa
                                                       g$extra$27197$1XGIwa
                                                       g$pp-3$27201$1XGIwa)))))
                                        ((case-lambda
                                           ((g$head$27205$1XGIwa)
                                            ((case-lambda
                                               ((g$rest$27206$1XGIwa)
                                                ((case-lambda
                                                   ((g$col*$27207$1XGIwa)
                                                    (if (if g$named?$27198$1XGIwa
                                                          (begin
                                                            '#f
                                                            (pair?
                                                              g$rest$27206$1XGIwa))
                                                          '#f)
                                                      ((case-lambda
                                                         ((g$name$27208$1XGIwa)
                                                          ((case-lambda
                                                             ((g$rest$27209$1XGIwa)
                                                              ((case-lambda
                                                                 ((g$col**$27210$1XGIwa)
                                                                  (g$tail1$27202$1XGIwa
                                                                    g$rest$27209$1XGIwa
                                                                    (g$fx+$25015$1XGIwa
                                                                      g$col$27196$1XGIwa
                                                                      (g$indent-general$27113$1XGIwa))
                                                                    g$col**$27210$1XGIwa
                                                                    (g$fx+$25015$1XGIwa
                                                                      g$col**$27210$1XGIwa
                                                                      '1))))
                                                               (g$wr$27134$1XGIwa
                                                                 g$name$27208$1XGIwa
                                                                 (g$out$27133$1XGIwa
                                                                   '" "
                                                                   g$col*$27207$1XGIwa)))))
                                                           (cdr g$rest$27206$1XGIwa))))
                                                       (car g$rest$27206$1XGIwa))
                                                      (g$tail1$27202$1XGIwa
                                                        g$rest$27206$1XGIwa
                                                        (g$fx+$25015$1XGIwa
                                                          g$col$27196$1XGIwa
                                                          (g$indent-general$27113$1XGIwa))
                                                        g$col*$27207$1XGIwa
                                                        (g$fx+$25015$1XGIwa
                                                          g$col*$27207$1XGIwa
                                                          '1)))))
                                                 (g$wr$27134$1XGIwa
                                                   g$head$27205$1XGIwa
                                                   (g$out$27133$1XGIwa
                                                     '"("
                                                     g$col$27196$1XGIwa)))))
                                             (cdr g$expr$27195$1XGIwa))))
                                         (car g$expr$27195$1XGIwa))))))
                                 (g$pp-expr-list$27146$1XGIwa
                                   (case-lambda
                                     ((g$l$27192$1XGIwa
                                        g$col$27193$1XGIwa
                                        g$extra$27194$1XGIwa)
                                      (g$pp-list$27143$1XGIwa
                                        g$l$27192$1XGIwa
                                        g$col$27193$1XGIwa
                                        g$extra$27194$1XGIwa
                                        g$pp-expr$27141$1XGIwa))))
                                 (g$pp-SYNTAX-CASE$27147$1XGIwa
                                   (case-lambda
                                     ((g$expr$27189$1XGIwa
                                        g$col$27190$1XGIwa
                                        g$extra$27191$1XGIwa)
                                      (g$pp-general$27145$1XGIwa
                                        g$expr$27189$1XGIwa
                                        g$col$27190$1XGIwa
                                        g$extra$27191$1XGIwa
                                        '#t
                                        g$pp-expr-list$27146$1XGIwa
                                        '#f
                                        g$pp-expr$27141$1XGIwa))))
                                 (g$pp-LAMBDA$27148$1XGIwa
                                   (case-lambda
                                     ((g$expr$27186$1XGIwa
                                        g$col$27187$1XGIwa
                                        g$extra$27188$1XGIwa)
                                      (g$pp-general$27145$1XGIwa
                                        g$expr$27186$1XGIwa
                                        g$col$27187$1XGIwa
                                        g$extra$27188$1XGIwa
                                        '#f
                                        g$pp-expr-list$27146$1XGIwa
                                        '#f
                                        g$pp-expr$27141$1XGIwa))))
                                 (g$pp-IF$27149$1XGIwa
                                   (case-lambda
                                     ((g$expr$27183$1XGIwa
                                        g$col$27184$1XGIwa
                                        g$extra$27185$1XGIwa)
                                      (g$pp-general$27145$1XGIwa
                                        g$expr$27183$1XGIwa
                                        g$col$27184$1XGIwa
                                        g$extra$27185$1XGIwa
                                        '#f
                                        g$pp-expr$27141$1XGIwa
                                        '#f
                                        g$pp-expr$27141$1XGIwa))))
                                 (g$pp-COND$27150$1XGIwa
                                   (case-lambda
                                     ((g$expr$27180$1XGIwa
                                        g$col$27181$1XGIwa
                                        g$extra$27182$1XGIwa)
                                      (g$pp-call$27142$1XGIwa
                                        g$expr$27180$1XGIwa
                                        g$col$27181$1XGIwa
                                        g$extra$27182$1XGIwa
                                        g$pp-expr-list$27146$1XGIwa))))
                                 (g$pp-CASE$27151$1XGIwa
                                   (case-lambda
                                     ((g$expr$27177$1XGIwa
                                        g$col$27178$1XGIwa
                                        g$extra$27179$1XGIwa)
                                      (g$pp-general$27145$1XGIwa
                                        g$expr$27177$1XGIwa
                                        g$col$27178$1XGIwa
                                        g$extra$27179$1XGIwa
                                        '#f
                                        g$pp-expr$27141$1XGIwa
                                        '#f
                                        g$pp-expr-list$27146$1XGIwa))))
                                 (g$pp-CASE-LAMBDA$27152$1XGIwa
                                   (case-lambda
                                     ((g$expr$27174$1XGIwa
                                        g$col$27175$1XGIwa
                                        g$extra$27176$1XGIwa)
                                      (g$pp-general$27145$1XGIwa
                                        g$expr$27174$1XGIwa
                                        g$col$27175$1XGIwa
                                        g$extra$27176$1XGIwa
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr-list$27146$1XGIwa))))
                                 (g$pp-AND$27153$1XGIwa
                                   (case-lambda
                                     ((g$expr$27171$1XGIwa
                                        g$col$27172$1XGIwa
                                        g$extra$27173$1XGIwa)
                                      (g$pp-call$27142$1XGIwa
                                        g$expr$27171$1XGIwa
                                        g$col$27172$1XGIwa
                                        g$extra$27173$1XGIwa
                                        g$pp-expr$27141$1XGIwa))))
                                 (g$pp-LET$27154$1XGIwa
                                   (case-lambda
                                     ((g$expr$27166$1XGIwa
                                        g$col$27167$1XGIwa
                                        g$extra$27168$1XGIwa)
                                      ((case-lambda
                                         ((g$rest$27169$1XGIwa)
                                          ((case-lambda
                                             ((g$named?$27170$1XGIwa)
                                              (g$pp-general$27145$1XGIwa
                                                g$expr$27166$1XGIwa
                                                g$col$27167$1XGIwa
                                                g$extra$27168$1XGIwa
                                                g$named?$27170$1XGIwa
                                                g$pp-expr-list$27146$1XGIwa
                                                '#f
                                                g$pp-expr$27141$1XGIwa)))
                                           (if (pair?
                                                 g$rest$27169$1XGIwa)
                                             (begin
                                               '#f
                                               (g$symbol?$20573$1XGIwa
                                                 (car g$rest$27169$1XGIwa)))
                                             '#f))))
                                       (cdr g$expr$27166$1XGIwa)))))
                                 (g$pp-BEGIN$27155$1XGIwa
                                   (case-lambda
                                     ((g$expr$27163$1XGIwa
                                        g$col$27164$1XGIwa
                                        g$extra$27165$1XGIwa)
                                      (g$pp-general$27145$1XGIwa
                                        g$expr$27163$1XGIwa
                                        g$col$27164$1XGIwa
                                        g$extra$27165$1XGIwa
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr$27141$1XGIwa))))
                                 (g$pp-DO$27156$1XGIwa
                                   (case-lambda
                                     ((g$expr$27160$1XGIwa
                                        g$col$27161$1XGIwa
                                        g$extra$27162$1XGIwa)
                                      (g$pp-general$27145$1XGIwa
                                        g$expr$27160$1XGIwa
                                        g$col$27161$1XGIwa
                                        g$extra$27162$1XGIwa
                                        '#f
                                        g$pp-expr-list$27146$1XGIwa
                                        g$pp-expr-list$27146$1XGIwa
                                        g$pp-expr$27141$1XGIwa))))
                                 (g$style$27157$1XGIwa
                                   (case-lambda
                                     ((g$head$27158$1XGIwa)
                                      ((case-lambda
                                         ((g$t$27159$1XGIwa)
                                          (if (g$memv$19654$1XGIwa
                                                g$t$27159$1XGIwa
                                                '(lambda let*
                                                   letrec
                                                   letrec*
                                                   define
                                                   define-syntax
                                                   syntax-rules
                                                   let-syntax
                                                   letrec-syntax
                                                   with-syntax
                                                   library
                                                   library-letrec*))
                                            g$pp-LAMBDA$27148$1XGIwa
                                            (if (eqv?
                                                  g$t$27159$1XGIwa
                                                  'syntax-case)
                                              g$pp-SYNTAX-CASE$27147$1XGIwa
                                              (if (g$memv$19654$1XGIwa
                                                    g$t$27159$1XGIwa
                                                    '(if set!
                                                       when
                                                       unless))
                                                g$pp-IF$27149$1XGIwa
                                                (if (eqv?
                                                      g$t$27159$1XGIwa
                                                      'cond)
                                                  g$pp-COND$27150$1XGIwa
                                                  (if (eqv?
                                                        g$t$27159$1XGIwa
                                                        'case-lambda)
                                                    g$pp-CASE-LAMBDA$27152$1XGIwa
                                                    (if (eqv?
                                                          g$t$27159$1XGIwa
                                                          'case)
                                                      g$pp-CASE$27151$1XGIwa
                                                      (if (g$memv$19654$1XGIwa
                                                            g$t$27159$1XGIwa
                                                            '(and or
                                                                  import
                                                                  export))
                                                        g$pp-AND$27153$1XGIwa
                                                        (if (eqv?
                                                              g$t$27159$1XGIwa
                                                              'let)
                                                          g$pp-LET$27154$1XGIwa
                                                          (if (eqv?
                                                                g$t$27159$1XGIwa
                                                                'begin)
                                                            g$pp-BEGIN$27155$1XGIwa
                                                            (if (eqv?
                                                                  g$t$27159$1XGIwa
                                                                  'do)
                                                              g$pp-DO$27156$1XGIwa
                                                              (begin
                                                                '#f
                                                                '#f)))))))))))))
                                       g$head$27158$1XGIwa)))))
                         (g$pr$27140$1XGIwa
                           g$obj$27136$1XGIwa
                           g$col$27137$1XGIwa
                           '0
                           g$pp-expr$27141$1XGIwa))))))
          (if g$width$27131$1XGIwa
            (g$out$27133$1XGIwa
              g$genwrite:newline-str$27105$1XGIwa
              (g$pp$27135$1XGIwa g$obj$27129$1XGIwa '0))
            (g$wr$27134$1XGIwa g$obj$27129$1XGIwa '0))))))
   (g$pretty-width$27112$1XGIwa
     g$pretty-width$27305$1XGIwa
     (g$make-parameter$27100$1XGIwa '72))
   (g$indent-general$27113$1XGIwa
     g$indent-general$27306$1XGIwa
     (g$make-parameter$27100$1XGIwa '2))
   (g$max-call-head-width$27114$1XGIwa
     g$max-call-head-width$27307$1XGIwa
     (g$make-parameter$27100$1XGIwa '3))
   (g$pretty-gensyms$27115$1XGIwa
     g$pretty-gensyms$27308$1XGIwa
     (g$make-parameter$27100$1XGIwa '#f))
   (g$reverse-string-append$27116$1XGIwa
     g$reverse-string-append$27309$1XGIwa
     (case-lambda
       ((g$l$27284$1XGIwa)
        (letrec* ((g$rev-string-append$27285$1XGIwa
                    (case-lambda
                      ((g$l$27286$1XGIwa g$i$27287$1XGIwa)
                       (if (pair? g$l$27286$1XGIwa)
                         ((case-lambda
                            ((g$str$27288$1XGIwa)
                             ((case-lambda
                                ((g$len$27289$1XGIwa)
                                 ((case-lambda
                                    ((g$result$27290$1XGIwa)
                                     ((letrec ((g$loop$27291$1XGIwa
                                                 (case-lambda
                                                   ((g$j$27292$1XGIwa
                                                      g$k$27293$1XGIwa)
                                                    (if (g$fx<?$25029$1XGIwa
                                                          g$j$27292$1XGIwa
                                                          g$len$27289$1XGIwa)
                                                      (begin
                                                        (g$string-set!$20583$1XGIwa
                                                          g$result$27290$1XGIwa
                                                          g$k$27293$1XGIwa
                                                          (g$string-ref$20582$1XGIwa
                                                            g$str$27288$1XGIwa
                                                            g$j$27292$1XGIwa))
                                                        (g$loop$27291$1XGIwa
                                                          (g$fx+$25015$1XGIwa
                                                            g$j$27292$1XGIwa
                                                            '1)
                                                          (g$fx+$25015$1XGIwa
                                                            g$k$27293$1XGIwa
                                                            '1)))
                                                      g$result$27290$1XGIwa)))))
                                        g$loop$27291$1XGIwa)
                                      '0
                                      (g$fx-$25017$1XGIwa
                                        (g$fx-$25017$1XGIwa
                                          (g$string-length$20585$1XGIwa
                                            g$result$27290$1XGIwa)
                                          g$i$27287$1XGIwa)
                                        g$len$27289$1XGIwa))))
                                  (g$rev-string-append$27285$1XGIwa
                                    (cdr g$l$27286$1XGIwa)
                                    (g$fx+$25015$1XGIwa
                                      g$i$27287$1XGIwa
                                      g$len$27289$1XGIwa)))))
                              (g$string-length$20585$1XGIwa
                                g$str$27288$1XGIwa))))
                          (car g$l$27286$1XGIwa))
                         (g$make-string$20581$1XGIwa
                           g$i$27287$1XGIwa))))))
          (g$rev-string-append$27285$1XGIwa g$l$27284$1XGIwa '0)))))
   (g$pretty-print$27117$1XGIwa
     g$pretty-print$27310$1XGIwa
     (case-lambda
       ((g$obj$27294$1XGIwa . g$opt$27295$1XGIwa)
        ((case-lambda
           ((g$port$27296$1XGIwa)
            (g$generic-write$27111$1XGIwa
              g$obj$27294$1XGIwa
              '#f
              (g$pretty-width$27112$1XGIwa)
              (case-lambda
                ((g$s$27297$1XGIwa)
                 (begin
                   (display g$s$27297$1XGIwa g$port$27296$1XGIwa)
                   '#t))))))
         (if (pair? g$opt$27295$1XGIwa)
           (car g$opt$27295$1XGIwa)
           (current-output-port)))))))
  (void))

(library-letrec* (ironscheme cps)
  ((g$cps/generate-reference$27311$1XGIwa
     g$cps/generate-reference$27576$1XGIwa
     (case-lambda
       ((g$variable$27364$1XGIwa)
        (g$cps/generate-operand$27315$1XGIwa
          (g$make-reference$27341$1XGIwa g$variable$27364$1XGIwa)))))
   (g$cps/generate-literal$27312$1XGIwa
     g$cps/generate-literal$27577$1XGIwa
     (case-lambda
       ((g$datum$27365$1XGIwa)
        (g$cps/generate-operand$27315$1XGIwa
          (g$make-literal$27340$1XGIwa g$datum$27365$1XGIwa)))))
   (g$cps/generate-abstraction$27313$1XGIwa
     g$cps/generate-abstraction$27578$1XGIwa
     (case-lambda
       ((g$bvl$27366$1XGIwa g$body-generator$27367$1XGIwa)
        (g$cps/generate-operand$27315$1XGIwa
          (g$make-user-abstraction$27342$1XGIwa
            g$bvl$27366$1XGIwa
            (case-lambda
              ((g$continuation-variable$27368$1XGIwa)
               (g$body-generator$27367$1XGIwa
                 (g$variable-continuator$27328$1XGIwa
                   g$continuation-variable$27368$1XGIwa)))))))))
   (g$cps/generate-abstractions$27314$1XGIwa
     g$cps/generate-abstractions$27579$1XGIwa
     (case-lambda
       ((g$bvls$27369$1XGIwa g$body-generators$27370$1XGIwa)
        (g$cps/generate-operand$27315$1XGIwa
          (g$make-user-abstractions$27343$1XGIwa
            g$bvls$27369$1XGIwa
            (g$map$19661$1XGIwa
              (case-lambda
                ((g$body-generator$27371$1XGIwa)
                 (case-lambda
                   ((g$continuation-variable$27372$1XGIwa)
                    (g$body-generator$27371$1XGIwa
                      (g$variable-continuator$27328$1XGIwa
                        g$continuation-variable$27372$1XGIwa))))))
              g$body-generators$27370$1XGIwa))))))
   (g$cps/generate-operand$27315$1XGIwa
     g$cps/generate-operand$27580$1XGIwa
     (case-lambda
       ((g$operand$27373$1XGIwa)
        (case-lambda
          ((g$continuator$27374$1XGIwa)
           (g$continue-with-operand$27331$1XGIwa
             g$continuator$27374$1XGIwa
             g$operand$27373$1XGIwa))))))
   (g$cps/generate-conditional$27316$1XGIwa
     g$cps/generate-conditional$27581$1XGIwa
     (case-lambda
       ((g$condition-generator$27375$1XGIwa
          g$consequent-generator$27376$1XGIwa
          g$alternative-generator$27377$1XGIwa)
        (case-lambda
          ((g$continuator$27378$1XGIwa)
           (letrec* ((g$if-variable$27379$1XGIwa
                       (case-lambda
                         ((g$continuation-variable$27381$1XGIwa)
                          ((case-lambda
                             ((g$continuator*$27382$1XGIwa)
                              (g$condition-generator$27375$1XGIwa
                                (g$conditional-continuator$27327$1XGIwa
                                  (case-lambda
                                    ((g$condition$27383$1XGIwa)
                                     (g$make-conditional$27350$1XGIwa
                                       g$condition$27383$1XGIwa
                                       (g$consequent-generator$27376$1XGIwa
                                         g$continuator*$27382$1XGIwa)
                                       (g$alternative-generator$27377$1XGIwa
                                         g$continuator*$27382$1XGIwa))))))))
                           (g$variable-continuator$27328$1XGIwa
                             g$continuation-variable$27381$1XGIwa))))))
             (g$reify-continuation*$27333$1XGIwa
               g$continuator$27378$1XGIwa
               g$if-variable$27379$1XGIwa
               (case-lambda
                 ((g$continuation-abstraction$27380$1XGIwa)
                  (g$make-conditional-join$27351$1XGIwa
                    g$continuation-abstraction$27380$1XGIwa
                    g$if-variable$27379$1XGIwa))))))))))
   (g$cps/generate-recursive-bind$27317$1XGIwa
     g$cps/generate-recursive-bind$27582$1XGIwa
     (case-lambda
       ((g$variables$27384$1XGIwa
          g$generators$27385$1XGIwa
          g$body-generator$27386$1XGIwa)
        (case-lambda
          ((g$continuator$27387$1XGIwa)
           (g$make-recursive-bind$27345$1XGIwa
             g$variables$27384$1XGIwa
             (g$map$19661$1XGIwa
               (case-lambda
                 ((g$generator$27388$1XGIwa)
                  (case-lambda
                    ((g$continuation-variable$27389$1XGIwa)
                     (g$generator$27388$1XGIwa
                       (g$variable-continuator$27328$1XGIwa
                         g$continuation-variable$27389$1XGIwa))))))
               g$generators$27385$1XGIwa)
             (g$body-generator$27386$1XGIwa
               (g$reified-continuator$27330$1XGIwa
                 g$continuator$27387$1XGIwa))))))))
   (g$cps/generate-recursive*-bind$27318$1XGIwa
     g$cps/generate-recursive*-bind$27583$1XGIwa
     (case-lambda
       ((g$variables$27390$1XGIwa
          g$generators$27391$1XGIwa
          g$body-generator$27392$1XGIwa)
        (case-lambda
          ((g$continuator$27393$1XGIwa)
           (g$make-recursive*-bind$27346$1XGIwa
             g$variables$27390$1XGIwa
             (g$map$19661$1XGIwa
               (case-lambda
                 ((g$generator$27394$1XGIwa)
                  (case-lambda
                    ((g$continuation-variable$27395$1XGIwa)
                     (g$generator$27394$1XGIwa
                       (g$variable-continuator$27328$1XGIwa
                         g$continuation-variable$27395$1XGIwa))))))
               g$generators$27391$1XGIwa)
             (g$body-generator$27392$1XGIwa
               (g$reified-continuator$27330$1XGIwa
                 g$continuator$27393$1XGIwa))))))))
   (g$cps/generate-recursive*-library-bind$27319$1XGIwa
     g$cps/generate-recursive*-library-bind$27584$1XGIwa
     (case-lambda
       ((g$name$27396$1XGIwa
          g$variables$27397$1XGIwa
          g$variables*$27398$1XGIwa
          g$generators$27399$1XGIwa
          g$body-generator$27400$1XGIwa)
        (case-lambda
          ((g$continuator$27401$1XGIwa)
           (g$make-recursive*-library-bind$27347$1XGIwa
             g$name$27396$1XGIwa
             g$variables$27397$1XGIwa
             g$variables*$27398$1XGIwa
             (g$map$19661$1XGIwa
               (case-lambda
                 ((g$generator$27402$1XGIwa)
                  (case-lambda
                    ((g$continuation-variable$27403$1XGIwa)
                     (g$generator$27402$1XGIwa
                       (g$variable-continuator$27328$1XGIwa
                         g$continuation-variable$27403$1XGIwa))))))
               g$generators$27399$1XGIwa)
             (g$body-generator$27400$1XGIwa
               (g$reified-continuator$27330$1XGIwa
                 g$continuator$27401$1XGIwa))))))))
   (g$cps/generate-sequence$27320$1XGIwa
     g$cps/generate-sequence$27585$1XGIwa
     (case-lambda
       ((g$generators$27404$1XGIwa)
        (case-lambda
          ((g$continuator$27405$1XGIwa)
           ((letrec ((g$recur$27406$1XGIwa
                       (case-lambda
                         ((g$generators$27407$1XGIwa)
                          ((car g$generators$27407$1XGIwa)
                           ((case-lambda
                              ((g$generators$27408$1XGIwa)
                               (if (pair? g$generators$27408$1XGIwa)
                                 (g$effect-continuator$27326$1XGIwa
                                   (case-lambda
                                     (()
                                      (g$recur$27406$1XGIwa
                                        g$generators$27408$1XGIwa))))
                                 g$continuator$27405$1XGIwa)))
                            (cdr g$generators$27407$1XGIwa)))))))
              g$recur$27406$1XGIwa)
            g$generators$27404$1XGIwa))))))
   (g$cps/generate-assignment$27321$1XGIwa
     g$cps/generate-assignment$27586$1XGIwa
     (case-lambda
       ((g$location$27409$1XGIwa g$expression-generator$27410$1XGIwa)
        (case-lambda
          ((g$continuator$27411$1XGIwa)
           (g$expression-generator$27410$1XGIwa
             (g$operand-continuator$27325$1XGIwa
               (case-lambda
                 ((g$operand$27412$1XGIwa)
                  (g$make-assignment$27353$1XGIwa
                    g$location$27409$1XGIwa
                    g$operand$27412$1XGIwa
                    (g$continue-with-operand$27331$1XGIwa
                      g$continuator$27411$1XGIwa
                      '(cps-void))))))))))))
   (g$cps/generate-declaration$27322$1XGIwa
     g$cps/generate-declaration$27587$1XGIwa
     (case-lambda
       ((g$location$27413$1XGIwa g$expression-generator$27414$1XGIwa)
        (case-lambda
          ((g$continuator$27415$1XGIwa)
           (g$expression-generator$27414$1XGIwa
             (g$operand-continuator$27325$1XGIwa
               (case-lambda
                 ((g$operand$27416$1XGIwa)
                  (g$make-declaration$27354$1XGIwa
                    g$location$27413$1XGIwa
                    g$operand$27416$1XGIwa
                    (g$continue-with-operand$27331$1XGIwa
                      g$continuator$27415$1XGIwa
                      '(cps-void))))))))))))
   (g$cps/generate-combination$27323$1XGIwa
     g$cps/generate-combination$27588$1XGIwa
     (case-lambda
       ((g$operator-generator$27417$1XGIwa
          g$operand-generators$27418$1XGIwa)
        (g$cps/generate-subproblems$27324$1XGIwa
          (g$reverse$20609$1XGIwa
            (cons
              g$operator-generator$27417$1XGIwa
              g$operand-generators$27418$1XGIwa))
          (case-lambda
            ((g$operands$27419$1XGIwa g$continuator$27420$1XGIwa)
             (g$make-combination$27348$1XGIwa
               (car g$operands$27419$1XGIwa)
               (g$reify-continuation$27332$1XGIwa
                 g$continuator$27420$1XGIwa)
               (cdr g$operands$27419$1XGIwa))))))))
   (g$cps/generate-subproblems$27324$1XGIwa
     g$cps/generate-subproblems$27589$1XGIwa
     (case-lambda
       ((g$generators$27421$1XGIwa g$combiner$27422$1XGIwa)
        (case-lambda
          ((g$continuator$27423$1XGIwa)
           ((letrec ((g$recur$27424$1XGIwa
                       (case-lambda
                         ((g$generators$27425$1XGIwa
                            g$operands$27426$1XGIwa)
                          (if (pair? g$generators$27425$1XGIwa)
                            ((car g$generators$27425$1XGIwa)
                             ((case-lambda
                                ((g$generators$27427$1XGIwa)
                                 (g$operand-continuator$27325$1XGIwa
                                   (case-lambda
                                     ((g$operand$27428$1XGIwa)
                                      (g$recur$27424$1XGIwa
                                        g$generators$27427$1XGIwa
                                        (cons
                                          g$operand$27428$1XGIwa
                                          g$operands$27426$1XGIwa)))))))
                              (cdr g$generators$27425$1XGIwa)))
                            (g$combiner$27422$1XGIwa
                              g$operands$27426$1XGIwa
                              g$continuator$27423$1XGIwa))))))
              g$recur$27424$1XGIwa)
            g$generators$27421$1XGIwa
            '()))))))
   (g$operand-continuator$27325$1XGIwa
     g$operand-continuator$27590$1XGIwa
     (case-lambda
       ((g$generator$27429$1XGIwa)
        (case-lambda
          ((g$if-operand$27430$1XGIwa
             g$if-effect$27431$1XGIwa
             g$if-conditional$27432$1XGIwa
             g$if-variable$27433$1XGIwa
             g$if-inline$27434$1XGIwa)
           (begin
             g$if-effect$27431$1XGIwa
             g$if-conditional$27432$1XGIwa
             g$if-variable$27433$1XGIwa
             g$if-inline$27434$1XGIwa
             (g$if-operand$27430$1XGIwa g$generator$27429$1XGIwa)))))))
   (g$effect-continuator$27326$1XGIwa
     g$effect-continuator$27591$1XGIwa
     (case-lambda
       ((g$generator$27435$1XGIwa)
        (case-lambda
          ((g$if-operand$27436$1XGIwa
             g$if-effect$27437$1XGIwa
             g$if-conditional$27438$1XGIwa
             g$if-variable$27439$1XGIwa
             g$if-inline$27440$1XGIwa)
           (begin
             g$if-operand$27436$1XGIwa
             g$if-conditional$27438$1XGIwa
             g$if-variable$27439$1XGIwa
             g$if-inline$27440$1XGIwa
             (g$if-effect$27437$1XGIwa g$generator$27435$1XGIwa)))))))
   (g$conditional-continuator$27327$1XGIwa
     g$conditional-continuator$27592$1XGIwa
     (case-lambda
       ((g$generator$27441$1XGIwa)
        (case-lambda
          ((g$if-operand$27442$1XGIwa
             g$if-effect$27443$1XGIwa
             g$if-conditional$27444$1XGIwa
             g$if-variable$27445$1XGIwa
             g$if-inline$27446$1XGIwa)
           (begin
             g$if-operand$27442$1XGIwa
             g$if-effect$27443$1XGIwa
             g$if-variable$27445$1XGIwa
             g$if-inline$27446$1XGIwa
             (g$if-conditional$27444$1XGIwa
               g$generator$27441$1XGIwa)))))))
   (g$variable-continuator$27328$1XGIwa
     g$variable-continuator$27593$1XGIwa
     (case-lambda
       ((g$variable$27447$1XGIwa)
        (case-lambda
          ((g$if-operand$27448$1XGIwa
             g$if-effect$27449$1XGIwa
             g$if-conditional$27450$1XGIwa
             g$if-variable$27451$1XGIwa
             g$if-inline$27452$1XGIwa)
           (begin
             g$if-operand$27448$1XGIwa
             g$if-effect$27449$1XGIwa
             g$if-variable$27451$1XGIwa
             g$if-inline$27452$1XGIwa
             (g$if-variable$27451$1XGIwa g$variable$27447$1XGIwa)))))))
   (g$inline-continuator$27329$1XGIwa
     g$inline-continuator$27594$1XGIwa
     (case-lambda
       ((g$continuation$27453$1XGIwa)
        (case-lambda
          ((g$if-operand$27454$1XGIwa
             g$if-effect$27455$1XGIwa
             g$if-conditional$27456$1XGIwa
             g$if-variable$27457$1XGIwa
             g$if-inline$27458$1XGIwa)
           (begin
             g$if-operand$27454$1XGIwa
             g$if-effect$27455$1XGIwa
             g$if-conditional$27456$1XGIwa
             g$if-variable$27457$1XGIwa
             (g$if-inline$27458$1XGIwa
               g$continuation$27453$1XGIwa)))))))
   (g$reified-continuator$27330$1XGIwa
     g$reified-continuator$27595$1XGIwa
     (case-lambda
       ((g$continuator$27459$1XGIwa)
        (case-lambda
          ((g$if-operand$27460$1XGIwa
             g$if-effect$27461$1XGIwa
             g$if-conditional$27462$1XGIwa
             g$if-variable$27463$1XGIwa
             g$if-inline$27464$1XGIwa)
           (begin
             g$if-operand$27460$1XGIwa
             g$if-effect$27461$1XGIwa
             g$if-conditional$27462$1XGIwa
             (g$reify-continuation*$27333$1XGIwa
               g$continuator$27459$1XGIwa
               g$if-variable$27463$1XGIwa
               g$if-inline$27464$1XGIwa)))))))
   (g$continue-with-operand$27331$1XGIwa
     g$continue-with-operand$27596$1XGIwa
     (case-lambda
       ((g$continuator$27465$1XGIwa g$operand$27466$1XGIwa)
        (g$continuator$27465$1XGIwa
          (case-lambda
            ((g$generator$27467$1XGIwa)
             (g$generator$27467$1XGIwa g$operand$27466$1XGIwa)))
          (case-lambda
            ((g$generator$27468$1XGIwa) (g$generator$27468$1XGIwa)))
          (case-lambda
            ((g$generator$27469$1XGIwa)
             (g$generator$27469$1XGIwa
               (g$make-truth-test$27355$1XGIwa
                 g$operand$27466$1XGIwa))))
          (case-lambda
            ((g$continuation-variable$27470$1XGIwa)
             (g$make-return$27349$1XGIwa
               (g$make-reference$27341$1XGIwa
                 g$continuation-variable$27470$1XGIwa)
               (list g$operand$27466$1XGIwa))))
          (case-lambda
            ((g$continuation-abstraction$27471$1XGIwa)
             (g$make-return$27349$1XGIwa
               g$continuation-abstraction$27471$1XGIwa
               (list g$operand$27466$1XGIwa))))))))
   (g$reify-continuation$27332$1XGIwa
     g$reify-continuation$27597$1XGIwa
     (case-lambda
       ((g$continuator$27472$1XGIwa)
        (g$continuator$27472$1XGIwa
          g$operand-continuation-reifier$27335$1XGIwa
          g$effect-continuation-reifier$27337$1XGIwa
          g$conditional-continuation-reifier$27339$1XGIwa
          (case-lambda
            ((g$variable$27473$1XGIwa)
             (g$make-reference$27341$1XGIwa g$variable$27473$1XGIwa)))
          (case-lambda
            ((g$continuation$27474$1XGIwa)
             g$continuation$27474$1XGIwa))))))
   (g$reify-continuation*$27333$1XGIwa
     g$reify-continuation*$27598$1XGIwa
     (case-lambda
       ((g$continuator$27475$1XGIwa
          g$if-variable$27476$1XGIwa
          g$if-inline$27477$1XGIwa)
        (g$continuator$27475$1XGIwa
          (g$operand-continuation-reifier*$27334$1XGIwa
            g$if-inline$27477$1XGIwa)
          (g$effect-continuation-reifier*$27336$1XGIwa
            g$if-inline$27477$1XGIwa)
          (g$conditional-continuation-reifier*$27338$1XGIwa
            g$if-inline$27477$1XGIwa)
          g$if-variable$27476$1XGIwa
          g$if-inline$27477$1XGIwa))))
   (g$operand-continuation-reifier*$27334$1XGIwa
     g$operand-continuation-reifier*$27599$1XGIwa
     (case-lambda
       ((g$receiver$27478$1XGIwa)
        (case-lambda
          ((g$generator$27479$1XGIwa)
           (g$receiver$27478$1XGIwa
             ((case-lambda
                ((g$variable$27480$1XGIwa)
                 (g$make-continuation-abstraction$27344$1XGIwa
                   (list g$variable$27480$1XGIwa)
                   (g$generator$27479$1XGIwa
                     (g$make-reference$27341$1XGIwa
                       g$variable$27480$1XGIwa)))))
              (g$generate-variable$27356$1XGIwa 'V))))))))
   (g$operand-continuation-reifier$27335$1XGIwa
     g$operand-continuation-reifier$27600$1XGIwa
     (g$operand-continuation-reifier*$27334$1XGIwa values))
   (g$effect-continuation-reifier*$27336$1XGIwa
     g$effect-continuation-reifier*$27601$1XGIwa
     (case-lambda
       ((g$receiver$27481$1XGIwa)
        (case-lambda
          ((g$generator$27482$1XGIwa)
           (g$receiver$27481$1XGIwa
             ((case-lambda
                ((g$variable$27483$1XGIwa)
                 (g$make-continuation-abstraction$27344$1XGIwa
                   g$variable$27483$1XGIwa
                   (g$generator$27482$1XGIwa))))
              (g$generate-variable$27356$1XGIwa 'IGNORE))))))))
   (g$effect-continuation-reifier$27337$1XGIwa
     g$effect-continuation-reifier$27602$1XGIwa
     (g$effect-continuation-reifier*$27336$1XGIwa values))
   (g$conditional-continuation-reifier*$27338$1XGIwa
     g$conditional-continuation-reifier*$27603$1XGIwa
     (case-lambda
       ((g$receiver$27484$1XGIwa)
        (case-lambda
          ((g$generator$27485$1XGIwa)
           (g$receiver$27484$1XGIwa
             ((case-lambda
                ((g$variable$27486$1XGIwa)
                 (g$make-continuation-abstraction$27344$1XGIwa
                   (list g$variable$27486$1XGIwa)
                   (g$generator$27485$1XGIwa
                     (g$make-truth-test$27355$1XGIwa
                       (g$make-reference$27341$1XGIwa
                         g$variable$27486$1XGIwa))))))
              (g$generate-variable$27356$1XGIwa 'T))))))))
   (g$conditional-continuation-reifier$27339$1XGIwa
     g$conditional-continuation-reifier$27604$1XGIwa
     (g$conditional-continuation-reifier*$27338$1XGIwa values))
   (g$make-literal$27340$1XGIwa
     g$make-literal$27605$1XGIwa
     (case-lambda
       ((g$datum$27487$1XGIwa) (list 'quote g$datum$27487$1XGIwa))))
   (g$make-reference$27341$1XGIwa
     g$make-reference$27606$1XGIwa
     (case-lambda ((g$variable$27488$1XGIwa) g$variable$27488$1XGIwa)))
   (g$make-user-abstraction$27342$1XGIwa
     g$make-user-abstraction$27607$1XGIwa
     (case-lambda
       ((g$bvl$27489$1XGIwa g$body-constructor$27490$1XGIwa)
        ((case-lambda
           ((g$continuation$27491$1XGIwa)
            (list
              'case-lambda
              (list
                (cons g$continuation$27491$1XGIwa g$bvl$27489$1XGIwa)
                (g$body-constructor$27490$1XGIwa
                  g$continuation$27491$1XGIwa)))))
         (g$generate-variable$27356$1XGIwa 'C)))))
   (g$make-user-abstractions$27343$1XGIwa
     g$make-user-abstractions$27608$1XGIwa
     (case-lambda
       ((g$bvls$27492$1XGIwa g$body-constructors$27493$1XGIwa)
        ((case-lambda
           ((g$continuation$27494$1XGIwa)
            (cons
              'case-lambda
              (g$map$19661$1XGIwa
                (case-lambda
                  ((g$bvl$27495$1XGIwa g$body-constructor$27496$1XGIwa)
                   (list
                     (cons
                       g$continuation$27494$1XGIwa
                       g$bvl$27495$1XGIwa)
                     (g$body-constructor$27496$1XGIwa
                       g$continuation$27494$1XGIwa))))
                g$bvls$27492$1XGIwa
                g$body-constructors$27493$1XGIwa))))
         (g$generate-variable$27356$1XGIwa 'C)))))
   (g$make-continuation-abstraction$27344$1XGIwa
     g$make-continuation-abstraction$27609$1XGIwa
     (case-lambda
       ((g$bvl$27497$1XGIwa g$body$27498$1XGIwa)
        (list
          'case-lambda
          (list g$bvl$27497$1XGIwa g$body$27498$1XGIwa)))))
   (g$make-recursive-bind$27345$1XGIwa
     g$make-recursive-bind$27610$1XGIwa
     (case-lambda
       ((g$variables$27499$1XGIwa
          g$constructors$27500$1XGIwa
          g$body$27501$1XGIwa)
        (list
          'letrec
          (g$map$19661$1XGIwa
            (case-lambda
              ((g$variable$27502$1XGIwa g$constructor$27503$1XGIwa)
               (list
                 g$variable$27502$1XGIwa
                 (list
                   (g$make-user-abstraction$27342$1XGIwa
                     '()
                     g$constructor$27503$1XGIwa)
                   (list
                     'letrec-identity
                     (list 'quote g$variable$27502$1XGIwa))))))
            g$variables$27499$1XGIwa
            g$constructors$27500$1XGIwa)
          g$body$27501$1XGIwa))))
   (g$make-recursive*-bind$27346$1XGIwa
     g$make-recursive*-bind$27611$1XGIwa
     (case-lambda
       ((g$variables$27504$1XGIwa
          g$constructors$27505$1XGIwa
          g$body$27506$1XGIwa)
        (list
          'letrec*
          (g$map$19661$1XGIwa
            (case-lambda
              ((g$variable$27507$1XGIwa g$constructor$27508$1XGIwa)
               (list
                 g$variable$27507$1XGIwa
                 (list
                   (g$make-user-abstraction$27342$1XGIwa
                     '()
                     g$constructor$27508$1XGIwa)
                   (list
                     'letrec*-identity
                     (list 'quote g$variable$27507$1XGIwa))))))
            g$variables$27504$1XGIwa
            g$constructors$27505$1XGIwa)
          g$body$27506$1XGIwa))))
   (g$make-recursive*-library-bind$27347$1XGIwa
     g$make-recursive*-library-bind$27612$1XGIwa
     (case-lambda
       ((g$name$27509$1XGIwa
          g$variables$27510$1XGIwa
          g$variables*$27511$1XGIwa
          g$constructors$27512$1XGIwa
          g$body$27513$1XGIwa)
        (list
          'library-letrec*
          g$name$27509$1XGIwa
          (g$map$19661$1XGIwa
            (case-lambda
              ((g$variable$27514$1XGIwa
                 g$variable*$27515$1XGIwa
                 g$constructor$27516$1XGIwa)
               (list
                 g$variable$27514$1XGIwa
                 g$variable*$27515$1XGIwa
                 (list
                   (g$make-user-abstraction$27342$1XGIwa
                     '()
                     g$constructor$27516$1XGIwa)
                   (list
                     'library-letrec*-identity
                     (list 'quote g$variable$27514$1XGIwa))))))
            g$variables$27510$1XGIwa
            g$variables*$27511$1XGIwa
            g$constructors$27512$1XGIwa)
          g$body$27513$1XGIwa))))
   (g$make-combination$27348$1XGIwa
     g$make-combination$27613$1XGIwa
     (case-lambda
       ((g$operator$27517$1XGIwa
          g$continuation$27518$1XGIwa
          g$operands$27519$1XGIwa)
        (cons
          g$operator$27517$1XGIwa
          (cons g$continuation$27518$1XGIwa g$operands$27519$1XGIwa)))))
   (g$make-return$27349$1XGIwa
     g$make-return$27614$1XGIwa
     (case-lambda
       ((g$continuation$27520$1XGIwa g$operands$27521$1XGIwa)
        (cons g$continuation$27520$1XGIwa g$operands$27521$1XGIwa))))
   (g$make-conditional$27350$1XGIwa
     g$make-conditional$27615$1XGIwa
     (case-lambda
       ((g$condition$27522$1XGIwa
          g$consequent$27523$1XGIwa
          g$alternative$27524$1XGIwa)
        (list
          'if
          g$condition$27522$1XGIwa
          g$consequent$27523$1XGIwa
          g$alternative$27524$1XGIwa))))
   (g$make-conditional-join$27351$1XGIwa
     g$make-conditional-join$27616$1XGIwa
     (case-lambda
       ((g$continuation$27525$1XGIwa g$constructor$27526$1XGIwa)
        ((case-lambda
           ((g$variable$27527$1XGIwa)
            (g$make-let$27352$1XGIwa
              (list g$variable$27527$1XGIwa)
              (list g$continuation$27525$1XGIwa)
              (g$constructor$27526$1XGIwa g$variable$27527$1XGIwa))))
         (g$generate-variable$27356$1XGIwa 'J)))))
   (g$make-let$27352$1XGIwa
     g$make-let$27617$1XGIwa
     (case-lambda
       ((g$variables$27528$1XGIwa
          g$expressions$27529$1XGIwa
          g$body$27530$1XGIwa)
        (cons
          (list
            'case-lambda
            (list g$variables$27528$1XGIwa g$body$27530$1XGIwa))
          g$expressions$27529$1XGIwa))))
   (g$make-assignment$27353$1XGIwa
     g$make-assignment$27618$1XGIwa
     (case-lambda
       ((g$location$27531$1XGIwa
          g$operand$27532$1XGIwa
          g$expression$27533$1XGIwa)
        (list
          'begin
          (list 'set! g$location$27531$1XGIwa g$operand$27532$1XGIwa)
          g$expression$27533$1XGIwa))))
   (g$make-declaration$27354$1XGIwa
     g$make-declaration$27619$1XGIwa
     (case-lambda
       ((g$location$27534$1XGIwa
          g$operand$27535$1XGIwa
          g$expression$27536$1XGIwa)
        (list
          'begin
          (list 'define g$location$27534$1XGIwa g$operand$27535$1XGIwa)
          g$expression$27536$1XGIwa))))
   (g$make-truth-test$27355$1XGIwa
     g$make-truth-test$27620$1XGIwa
     (case-lambda ((g$operand$27537$1XGIwa) g$operand$27537$1XGIwa)))
   (g$generate-variable$27356$1XGIwa
     g$generate-variable$27621$1XGIwa
     (case-lambda ((g$name$27538$1XGIwa) (gensym g$name$27538$1XGIwa))))
   (g$parse$27357$1XGIwa
     g$parse$27622$1XGIwa
     (case-lambda
       ((g$x$27539$1XGIwa)
        (if (pair? g$x$27539$1XGIwa)
          ((case-lambda
             ((g$t$27540$1XGIwa)
              (if (eqv? g$t$27540$1XGIwa 'quote)
                (g$cps/generate-literal$27312$1XGIwa
                  (g$cadr$20611$1XGIwa g$x$27539$1XGIwa))
                (if (eqv? g$t$27540$1XGIwa 'if)
                  (g$cps/generate-conditional$27316$1XGIwa
                    (g$parse$27357$1XGIwa
                      (g$cadr$20611$1XGIwa g$x$27539$1XGIwa))
                    (g$parse$27357$1XGIwa
                      (g$caddr$20617$1XGIwa g$x$27539$1XGIwa))
                    (g$parse$27357$1XGIwa
                      (g$cadddr$20629$1XGIwa g$x$27539$1XGIwa)))
                  (if (eqv? g$t$27540$1XGIwa 'case-lambda)
                    ((case-lambda
                       ((g$d$27541$1XGIwa)
                        (g$cps/generate-abstractions$27314$1XGIwa
                          (g$map$19661$1XGIwa car g$d$27541$1XGIwa)
                          (g$map$19661$1XGIwa
                            (case-lambda
                              ((g$e$27542$1XGIwa)
                               (g$cps/generate-sequence$27320$1XGIwa
                                 (g$map$19661$1XGIwa
                                   g$parse$27357$1XGIwa
                                   (cdr g$e$27542$1XGIwa)))))
                            g$d$27541$1XGIwa))))
                     (cdr g$x$27539$1XGIwa))
                    (if (eqv? g$t$27540$1XGIwa 'letrec)
                      ((case-lambda
                         ((g$bindings$27543$1XGIwa g$body*$27544$1XGIwa)
                          ((case-lambda
                             ((g$lhs*$27545$1XGIwa g$rhs*$27546$1XGIwa)
                              ((case-lambda
                                 ((g$t*$27547$1XGIwa
                                    g$tmps$27548$1XGIwa)
                                  ((case-lambda
                                     ((g$s*$27549$1XGIwa)
                                      (g$parse$27357$1XGIwa
                                        (cons
                                          (list
                                            'case-lambda
                                            (list
                                              g$lhs*$27545$1XGIwa
                                              (cons
                                                (list
                                                  'case-lambda
                                                  (cons
                                                    g$t*$27547$1XGIwa
                                                    (append
                                                      g$s*$27549$1XGIwa
                                                      g$body*$27544$1XGIwa)))
                                                g$rhs*$27546$1XGIwa)))
                                          g$tmps$27548$1XGIwa))))
                                   (g$map$19661$1XGIwa
                                     (case-lambda
                                       ((g$i$27550$1XGIwa
                                          g$t$27551$1XGIwa)
                                        (list
                                          'set!
                                          g$i$27550$1XGIwa
                                          g$t$27551$1XGIwa)))
                                     g$lhs*$27545$1XGIwa
                                     g$t*$27547$1XGIwa))))
                               (g$map$19661$1XGIwa
                                 gensym
                                 g$lhs*$27545$1XGIwa)
                               (g$map$19661$1XGIwa
                                 (case-lambda
                                   ((g$x$27552$1XGIwa) 'uninitialized))
                                 g$lhs*$27545$1XGIwa))))
                           (g$map$19661$1XGIwa
                             car
                             g$bindings$27543$1XGIwa)
                           (g$map$19661$1XGIwa
                             g$cadr$20611$1XGIwa
                             g$bindings$27543$1XGIwa))))
                       (g$cadr$20611$1XGIwa g$x$27539$1XGIwa)
                       (g$cddr$20613$1XGIwa g$x$27539$1XGIwa))
                      (if (eqv? g$t$27540$1XGIwa 'letrec*)
                        ((case-lambda
                           ((g$bindings$27553$1XGIwa
                              g$body*$27554$1XGIwa)
                            ((case-lambda
                               ((g$lhs*$27555$1XGIwa
                                  g$rhs*$27556$1XGIwa)
                                (g$cps/generate-recursive*-bind$27318$1XGIwa
                                  g$lhs*$27555$1XGIwa
                                  (g$map$19661$1XGIwa
                                    g$parse$27357$1XGIwa
                                    g$rhs*$27556$1XGIwa)
                                  (g$parse$27357$1XGIwa
                                    (cons
                                      'begin
                                      g$body*$27554$1XGIwa)))))
                             (g$map$19661$1XGIwa
                               car
                               g$bindings$27553$1XGIwa)
                             (g$map$19661$1XGIwa
                               g$cadr$20611$1XGIwa
                               g$bindings$27553$1XGIwa))))
                         (g$cadr$20611$1XGIwa g$x$27539$1XGIwa)
                         (g$cddr$20613$1XGIwa g$x$27539$1XGIwa))
                        (if (eqv? g$t$27540$1XGIwa 'library-letrec*)
                          ((case-lambda
                             ((g$name$27557$1XGIwa g$x$27558$1XGIwa)
                              ((case-lambda
                                 ((g$bindings$27559$1XGIwa
                                    g$body*$27560$1XGIwa)
                                  ((case-lambda
                                     ((g$lhs*$27561$1XGIwa
                                        g$lhs**$27562$1XGIwa
                                        g$rhs*$27563$1XGIwa)
                                      (g$cps/generate-recursive*-library-bind$27319$1XGIwa
                                        g$name$27557$1XGIwa
                                        g$lhs*$27561$1XGIwa
                                        g$lhs**$27562$1XGIwa
                                        (g$map$19661$1XGIwa
                                          g$parse$27357$1XGIwa
                                          g$rhs*$27563$1XGIwa)
                                        (g$parse$27357$1XGIwa
                                          (cons
                                            'begin
                                            g$body*$27560$1XGIwa)))))
                                   (g$map$19661$1XGIwa
                                     car
                                     g$bindings$27559$1XGIwa)
                                   (g$map$19661$1XGIwa
                                     g$cadr$20611$1XGIwa
                                     g$bindings$27559$1XGIwa)
                                   (g$map$19661$1XGIwa
                                     g$caddr$20617$1XGIwa
                                     g$bindings$27559$1XGIwa))))
                               (g$cadr$20611$1XGIwa g$x$27558$1XGIwa)
                               (g$cddr$20613$1XGIwa g$x$27558$1XGIwa))))
                           (g$cadr$20611$1XGIwa g$x$27539$1XGIwa)
                           (cdr g$x$27539$1XGIwa))
                          (if (eqv? g$t$27540$1XGIwa 'begin)
                            (g$cps/generate-sequence$27320$1XGIwa
                              (g$map$19661$1XGIwa
                                g$parse$27357$1XGIwa
                                (cdr g$x$27539$1XGIwa)))
                            (if (eqv? g$t$27540$1XGIwa 'set!)
                              (g$cps/generate-assignment$27321$1XGIwa
                                (g$cadr$20611$1XGIwa g$x$27539$1XGIwa)
                                (g$parse$27357$1XGIwa
                                  (g$caddr$20617$1XGIwa
                                    g$x$27539$1XGIwa)))
                              (if (eqv? g$t$27540$1XGIwa 'define)
                                (g$cps/generate-declaration$27322$1XGIwa
                                  (g$cadr$20611$1XGIwa g$x$27539$1XGIwa)
                                  (g$parse$27357$1XGIwa
                                    (g$caddr$20617$1XGIwa
                                      g$x$27539$1XGIwa)))
                                (begin
                                  '#f
                                  (if (list? g$x$27539$1XGIwa)
                                    (g$cps/generate-combination$27323$1XGIwa
                                      (g$parse$27357$1XGIwa
                                        (car g$x$27539$1XGIwa))
                                      (g$map$19661$1XGIwa
                                        g$parse$27357$1XGIwa
                                        (cdr g$x$27539$1XGIwa)))
                                    (error
                                      'rewrite
                                      '"invalid form ~s ~s"
                                      g$x$27539$1XGIwa
                                      (list?
                                        g$x$27539$1XGIwa)))))))))))))))
           (car g$x$27539$1XGIwa))
          (if (g$symbol?$20573$1XGIwa g$x$27539$1XGIwa)
            (g$cps/generate-reference$27311$1XGIwa g$x$27539$1XGIwa)
            (begin
              '#f
              (g$cps/generate-literal$27312$1XGIwa
                g$x$27539$1XGIwa)))))))
   (g$starts-with?$27358$1XGIwa
     g$starts-with?$27623$1XGIwa
     (case-lambda
       ((g$str$27564$1XGIwa g$sub$27565$1XGIwa)
        (clr-call-internal
          'system.string
          'startswith
          g$str$27564$1XGIwa
          g$sub$27565$1XGIwa))))
   (g$ends-with?$27359$1XGIwa
     g$ends-with?$27624$1XGIwa
     (case-lambda
       ((g$str$27566$1XGIwa g$sub$27567$1XGIwa)
        (clr-call-internal
          'system.string
          'endswith
          g$str$27566$1XGIwa
          g$sub$27567$1XGIwa))))
   (g$clr-generator?$27360$1XGIwa
     g$clr-generator?$27625$1XGIwa
     (case-lambda
       ((g$o$27568$1XGIwa)
        (if (g$symbol?$20573$1XGIwa g$o$27568$1XGIwa)
          (begin
            '#f
            ((case-lambda
               ((g$o$27569$1XGIwa)
                (if (g$starts-with?$27358$1XGIwa
                      g$o$27569$1XGIwa
                      '"clr-")
                  (begin
                    '#f
                    (g$ends-with?$27359$1XGIwa
                      g$o$27569$1XGIwa
                      '"-internal"))
                  '#f)))
             (g$symbol->string$20593$1XGIwa g$o$27568$1XGIwa)))
          '#f))))
   (g$fix-primitives$27361$1XGIwa
     g$fix-primitives$27626$1XGIwa
     (case-lambda
       ((g$e$27570$1XGIwa)
        (if (if (pair? g$e$27570$1XGIwa)
              (begin '#f (list? g$e$27570$1XGIwa))
              '#f)
          ((case-lambda
             ((g$o$27571$1XGIwa)
              (if (eq? g$o$27571$1XGIwa 'quote)
                g$e$27570$1XGIwa
                (if (begin
                      '#f
                      (g$clr-generator?$27360$1XGIwa g$o$27571$1XGIwa))
                  (if (pair? (cdr g$e$27570$1XGIwa))
                    (list
                      (g$fix-primitives$27361$1XGIwa
                        (g$cadr$20611$1XGIwa g$e$27570$1XGIwa))
                      (cons
                        g$o$27571$1XGIwa
                        (g$map$19661$1XGIwa
                          g$fix-primitives$27361$1XGIwa
                          (g$cddr$20613$1XGIwa g$e$27570$1XGIwa))))
                    g$e$27570$1XGIwa)
                  (begin
                    '#f
                    (cons
                      (g$fix-primitives$27361$1XGIwa g$o$27571$1XGIwa)
                      (g$map$19661$1XGIwa
                        g$fix-primitives$27361$1XGIwa
                        (cdr g$e$27570$1XGIwa))))))))
           (car g$e$27570$1XGIwa))
          g$e$27570$1XGIwa))))
   (g$parse->cps$27362$1XGIwa
     g$parse->cps$27627$1XGIwa
     (case-lambda
       ((g$e$27572$1XGIwa g$var$27573$1XGIwa)
        ((g$parse$27357$1XGIwa g$e$27572$1XGIwa)
         (g$variable-continuator$27328$1XGIwa g$var$27573$1XGIwa)))))
   (g$convert->cps$27363$1XGIwa
     g$convert->cps$27628$1XGIwa
     (case-lambda
       ((g$e$27574$1XGIwa g$var$27575$1XGIwa)
        (g$fix-primitives$27361$1XGIwa
          (g$parse->cps$27362$1XGIwa
            g$e$27574$1XGIwa
            g$var$27575$1XGIwa))))))
  (void))

(library-letrec* (ironscheme constant-fold)
  ((g$allow-constant-fold?$27629$1XGIwa
     g$allow-constant-fold?$27644$1XGIwa
     (case-lambda
       ((g$proc$27634$1XGIwa)
        (clr-call-internal
          'IronScheme.Runtime.ICallable
          'get_AllowConstantFold
          g$proc$27634$1XGIwa))))
   (g$set-allow-constant-fold!$27630$1XGIwa
     g$set-allow-constant-fold!$27645$1XGIwa
     (case-lambda
       ((g$proc$27635$1XGIwa g$bool$27636$1XGIwa)
        (clr-call-internal
          'IronScheme.Runtime.ICallable
          'set_AllowConstantFold
          g$proc$27635$1XGIwa
          g$bool$27636$1XGIwa))))
   (g$enable-constant-fold$27631$1XGIwa
     g$enable-constant-fold$27646$1XGIwa
     (case-lambda
       (g$procs$27637$1XGIwa
        (g$for-each$19662$1XGIwa
          (case-lambda
            ((g$proc$27638$1XGIwa)
             (g$set-allow-constant-fold!$27630$1XGIwa
               g$proc$27638$1XGIwa
               '#t)))
          g$procs$27637$1XGIwa))))
   (g$proc-filter$27632$1XGIwa
     g$proc-filter$27647$1XGIwa
     (case-lambda
       ((g$b$27639$1XGIwa) (eq? 'procedure (cdr g$b$27639$1XGIwa)))))
   (g$enable-constant-fold/env$27633$1XGIwa
     g$enable-constant-fold/env$27648$1XGIwa
     (case-lambda
       (g$import-spec$27640$1XGIwa
        ((case-lambda
           ((g$env$27641$1XGIwa g$env*$27642$1XGIwa)
            ((case-lambda
               ((g$b$27643$1XGIwa)
                (apply
                  g$enable-constant-fold$27631$1XGIwa
                  (g$eval$32447$1XGIwa
                    (cons 'list g$b$27643$1XGIwa)
                    g$env*$27642$1XGIwa))))
             (g$map$19661$1XGIwa
               car
               (g$filter$19648$1XGIwa
                 g$proc-filter$27632$1XGIwa
                 (g$environment-bindings$32439$1XGIwa
                   g$env$27641$1XGIwa))))))
         (apply g$environment$32443$1XGIwa g$import-spec$27640$1XGIwa)
         (apply
           g$environment$32443$1XGIwa
           '(only (rnrs) list)
           g$import-spec$27640$1XGIwa))))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$27649$1XGIwa
     g$current-primitive-locations$27694$1XGIwa
     (g$make-parameter$27100$1XGIwa
       (case-lambda ((g$x$27655$1XGIwa) '#f))
       (case-lambda
         ((g$p$27656$1XGIwa)
          (begin
            (if (not (g$procedure?$20575$1XGIwa g$p$27656$1XGIwa))
              (g$assertion-error$32461$1XGIwa
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$27656$1XGIwa)))))
   (g$mutable?$27650$1XGIwa
     g$mutable?$27695$1XGIwa
     (case-lambda
       ((g$x$27657$1XGIwa)
        (letrec* ((g$simple?$27658$1XGIwa
                    (case-lambda
                      ((g$x$27659$1XGIwa)
                       ((case-lambda
                          ((g$t$27660$1XGIwa)
                           (if g$t$27660$1XGIwa
                             g$t$27660$1XGIwa
                             ((case-lambda
                                ((g$t$27661$1XGIwa)
                                 (if g$t$27661$1XGIwa
                                   g$t$27661$1XGIwa
                                   ((case-lambda
                                      ((g$t$27662$1XGIwa)
                                       (if g$t$27662$1XGIwa
                                         g$t$27662$1XGIwa
                                         ((case-lambda
                                            ((g$t$27663$1XGIwa)
                                             (if g$t$27663$1XGIwa
                                               g$t$27663$1XGIwa
                                               ((case-lambda
                                                  ((g$t$27664$1XGIwa)
                                                   (if g$t$27664$1XGIwa
                                                     g$t$27664$1XGIwa
                                                     ((case-lambda
                                                        ((g$t$27665$1XGIwa)
                                                         (if g$t$27665$1XGIwa
                                                           g$t$27665$1XGIwa
                                                           (begin
                                                             '#f
                                                             (g$number?$21603$1XGIwa
                                                               g$x$27659$1XGIwa)))))
                                                      (g$bytevector?$20572$1XGIwa
                                                        g$x$27659$1XGIwa)))))
                                                (g$string?$20569$1XGIwa
                                                  g$x$27659$1XGIwa)))))
                                          (g$boolean?$20574$1XGIwa
                                            g$x$27659$1XGIwa)))))
                                    (g$symbol?$20573$1XGIwa
                                      g$x$27659$1XGIwa)))))
                              (g$char?$20570$1XGIwa
                                g$x$27659$1XGIwa)))))
                        (null? g$x$27659$1XGIwa))))))
          (not (g$simple?$27658$1XGIwa g$x$27657$1XGIwa))))))
   (g$rewriter$27651$1XGIwa
     g$rewriter$27696$1XGIwa
     (case-lambda
       ((g$quote-hack?$27666$1XGIwa)
        (letrec* ((g$f$27667$1XGIwa
                    (case-lambda
                      ((g$x$27668$1XGIwa)
                       (if (pair? g$x$27668$1XGIwa)
                         ((case-lambda
                            ((g$t$27669$1XGIwa)
                             (if (eqv? g$t$27669$1XGIwa 'quote)
                               (if (if g$quote-hack?$27666$1XGIwa
                                     (begin
                                       '#f
                                       (g$mutable?$27650$1XGIwa
                                         (g$cadr$20611$1XGIwa
                                           g$x$27668$1XGIwa)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$27670$1XGIwa)
                                     (begin
                                       (set-symbol-value!
                                         g$g$27670$1XGIwa
                                         (g$cadr$20611$1XGIwa
                                           g$x$27668$1XGIwa))
                                       g$g$27670$1XGIwa)))
                                  (gensym 'weak-temp))
                                 (begin '#f g$x$27668$1XGIwa))
                               (if (eqv? g$t$27669$1XGIwa 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (g$map$19661$1XGIwa
                                     (case-lambda
                                       ((g$x$27671$1XGIwa)
                                        (cons
                                          (car g$x$27671$1XGIwa)
                                          (g$map$19661$1XGIwa
                                            g$f$27667$1XGIwa
                                            (cdr g$x$27671$1XGIwa)))))
                                     (cdr g$x$27668$1XGIwa)))
                                 (if (eqv? g$t$27669$1XGIwa 'lambda)
                                   (g$cons*$19663$1XGIwa
                                     'lambda
                                     (g$cadr$20611$1XGIwa
                                       g$x$27668$1XGIwa)
                                     (g$map$19661$1XGIwa
                                       g$f$27667$1XGIwa
                                       (g$cddr$20613$1XGIwa
                                         g$x$27668$1XGIwa)))
                                   (if (eqv? g$t$27669$1XGIwa 'letrec)
                                     ((case-lambda
                                        ((g$bindings$27672$1XGIwa
                                           g$body*$27673$1XGIwa)
                                         ((case-lambda
                                            ((g$lhs*$27674$1XGIwa
                                               g$rhs*$27675$1XGIwa)
                                             (g$cons*$19663$1XGIwa
                                               'letrec
                                               (g$map$19661$1XGIwa
                                                 list
                                                 g$lhs*$27674$1XGIwa
                                                 (g$map$19661$1XGIwa
                                                   g$f$27667$1XGIwa
                                                   g$rhs*$27675$1XGIwa))
                                               (g$map$19661$1XGIwa
                                                 g$f$27667$1XGIwa
                                                 g$body*$27673$1XGIwa))))
                                          (g$map$19661$1XGIwa
                                            car
                                            g$bindings$27672$1XGIwa)
                                          (g$map$19661$1XGIwa
                                            g$cadr$20611$1XGIwa
                                            g$bindings$27672$1XGIwa))))
                                      (g$cadr$20611$1XGIwa
                                        g$x$27668$1XGIwa)
                                      (g$cddr$20613$1XGIwa
                                        g$x$27668$1XGIwa))
                                     (if (eqv?
                                           g$t$27669$1XGIwa
                                           'letrec*)
                                       ((case-lambda
                                          ((g$bindings$27676$1XGIwa
                                             g$body*$27677$1XGIwa)
                                           ((case-lambda
                                              ((g$lhs*$27678$1XGIwa
                                                 g$rhs*$27679$1XGIwa)
                                               (g$cons*$19663$1XGIwa
                                                 'letrec*
                                                 (g$map$19661$1XGIwa
                                                   list
                                                   g$lhs*$27678$1XGIwa
                                                   (g$map$19661$1XGIwa
                                                     g$f$27667$1XGIwa
                                                     g$rhs*$27679$1XGIwa))
                                                 (g$map$19661$1XGIwa
                                                   g$f$27667$1XGIwa
                                                   g$body*$27677$1XGIwa))))
                                            (g$map$19661$1XGIwa
                                              car
                                              g$bindings$27676$1XGIwa)
                                            (g$map$19661$1XGIwa
                                              g$cadr$20611$1XGIwa
                                              g$bindings$27676$1XGIwa))))
                                        (g$cadr$20611$1XGIwa
                                          g$x$27668$1XGIwa)
                                        (g$cddr$20613$1XGIwa
                                          g$x$27668$1XGIwa))
                                       (if (eqv?
                                             g$t$27669$1XGIwa
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$27680$1XGIwa
                                               g$x$27681$1XGIwa)
                                             ((case-lambda
                                                ((g$bindings$27682$1XGIwa
                                                   g$body*$27683$1XGIwa)
                                                 ((case-lambda
                                                    ((g$lhs*$27684$1XGIwa
                                                       g$lhs**$27685$1XGIwa
                                                       g$rhs*$27686$1XGIwa)
                                                     (g$cons*$19663$1XGIwa
                                                       'library-letrec*
                                                       g$name$27680$1XGIwa
                                                       (g$map$19661$1XGIwa
                                                         list
                                                         g$lhs*$27684$1XGIwa
                                                         g$lhs**$27685$1XGIwa
                                                         (g$map$19661$1XGIwa
                                                           g$f$27667$1XGIwa
                                                           g$rhs*$27686$1XGIwa))
                                                       (g$map$19661$1XGIwa
                                                         g$f$27667$1XGIwa
                                                         g$body*$27683$1XGIwa))))
                                                  (g$map$19661$1XGIwa
                                                    car
                                                    g$bindings$27682$1XGIwa)
                                                  (g$map$19661$1XGIwa
                                                    g$cadr$20611$1XGIwa
                                                    g$bindings$27682$1XGIwa)
                                                  (g$map$19661$1XGIwa
                                                    g$caddr$20617$1XGIwa
                                                    g$bindings$27682$1XGIwa))))
                                              (g$cadr$20611$1XGIwa
                                                g$x$27681$1XGIwa)
                                              (g$cddr$20613$1XGIwa
                                                g$x$27681$1XGIwa))))
                                          (g$cadr$20611$1XGIwa
                                            g$x$27668$1XGIwa)
                                          (cdr g$x$27668$1XGIwa))
                                         (if (eqv?
                                               g$t$27669$1XGIwa
                                               'begin)
                                           (cons
                                             'begin
                                             (g$map$19661$1XGIwa
                                               g$f$27667$1XGIwa
                                               (cdr g$x$27668$1XGIwa)))
                                           (if (eqv?
                                                 g$t$27669$1XGIwa
                                                 'set!)
                                             (list
                                               'set!
                                               (g$cadr$20611$1XGIwa
                                                 g$x$27668$1XGIwa)
                                               (g$f$27667$1XGIwa
                                                 (g$caddr$20617$1XGIwa
                                                   g$x$27668$1XGIwa)))
                                             (if (eqv?
                                                   g$t$27669$1XGIwa
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$27687$1XGIwa)
                                                   ((case-lambda
                                                      ((g$t$27688$1XGIwa)
                                                       (if g$t$27688$1XGIwa
                                                         ((case-lambda
                                                            ((g$loc$27689$1XGIwa)
                                                             g$loc$27689$1XGIwa))
                                                          g$t$27688$1XGIwa)
                                                         (begin
                                                           '#f
                                                           g$op$27687$1XGIwa))))
                                                    ((g$current-primitive-locations$27649$1XGIwa)
                                                     g$op$27687$1XGIwa))))
                                                (g$cadr$20611$1XGIwa
                                                  g$x$27668$1XGIwa))
                                               (if (eqv?
                                                     g$t$27669$1XGIwa
                                                     'define)
                                                 g$x$27668$1XGIwa
                                                 (begin
                                                   '#f
                                                   (if (list?
                                                         g$x$27668$1XGIwa)
                                                     (g$map$19661$1XGIwa
                                                       g$f$27667$1XGIwa
                                                       g$x$27668$1XGIwa)
                                                     (error
                                                       'rewrite
                                                       '"invalid form ~s ~s"
                                                       g$x$27668$1XGIwa
                                                       (list?
                                                         g$x$27668$1XGIwa))))))))))))))))
                          (car g$x$27668$1XGIwa))
                         (begin '#f g$x$27668$1XGIwa))))))
          g$f$27667$1XGIwa))))
   (g$expanded->core$27652$1XGIwa
     g$expanded->core$27697$1XGIwa
     (case-lambda
       ((g$x$27690$1XGIwa)
        ((g$rewriter$27651$1XGIwa '#t) g$x$27690$1XGIwa))))
   (g$compile-core-expr$27653$1XGIwa
     g$compile-core-expr$27698$1XGIwa
     (case-lambda
       ((g$x$27691$1XGIwa)
        ((g$rewriter$27651$1XGIwa '#f) g$x$27691$1XGIwa))))
   (g$compile-core-expr-to-port$27654$1XGIwa
     g$compile-core-expr-to-port$27699$1XGIwa
     (case-lambda
       ((g$x$27692$1XGIwa g$p$27693$1XGIwa)
        (g$pretty-print$27310$1XGIwa
          ((g$rewriter$27651$1XGIwa '#f) g$x$27692$1XGIwa)
          g$p$27693$1XGIwa)))))
  (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$27700$1XGIwa
     g$make-collection$27909$1XGIwa
     (case-lambda
       (()
        ((case-lambda
           ((g$set$27763$1XGIwa)
            (letrec* ((g$set-cons$27764$1XGIwa
                        (case-lambda
                          ((g$x$27768$1XGIwa g$ls$27769$1XGIwa)
                           (if (g$memq$19653$1XGIwa
                                 g$x$27768$1XGIwa
                                 g$ls$27769$1XGIwa)
                             g$ls$27769$1XGIwa
                             (begin
                               '#f
                               (cons
                                 g$x$27768$1XGIwa
                                 g$ls$27769$1XGIwa)))))))
              (case-lambda
                (() g$set$27763$1XGIwa)
                ((g$x$27765$1XGIwa)
                 (set! g$set$27763$1XGIwa
                   (g$set-cons$27764$1XGIwa
                     g$x$27765$1XGIwa
                     g$set$27763$1XGIwa)))
                ((g$x$27766$1XGIwa g$del?$27767$1XGIwa)
                 (if g$del?$27767$1XGIwa
                   (set! g$set$27763$1XGIwa
                     (g$remq$19668$1XGIwa
                       g$x$27766$1XGIwa
                       g$set$27763$1XGIwa))
                   (set! g$set$27763$1XGIwa
                     (g$set-cons$27764$1XGIwa
                       g$x$27766$1XGIwa
                       g$set$27763$1XGIwa))))))))
         '()))))
   (g$current-library-collection$27701$1XGIwa
     g$current-library-collection$27910$1XGIwa
     (g$make-parameter$27100$1XGIwa
       (g$make-collection$27700$1XGIwa)
       (case-lambda
         ((g$x$27770$1XGIwa)
          (begin
            (if (not (g$procedure?$20575$1XGIwa g$x$27770$1XGIwa))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$27770$1XGIwa)
              (void))
            g$x$27770$1XGIwa)))))
   (g$9706$27702$1XGIwa
     g$9706$27911$1XGIwa
     (make-record-type-descriptor
       'library
       '#f
       'g$9709$1XGIwa
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$9708$27703$1XGIwa g$9708$27912$1XGIwa '#f)
   (g$9707$27704$1XGIwa
     g$9707$27913$1XGIwa
     (make-record-constructor-descriptor
       g$9706$27702$1XGIwa
       '#f
       g$9708$27703$1XGIwa))
   (g$library?$27707$1XGIwa
     g$library?$27914$1XGIwa
     (record-predicate g$9706$27702$1XGIwa))
   (g$make-library$27708$1XGIwa
     g$make-library$27915$1XGIwa
     (record-constructor g$9707$27704$1XGIwa))
   (g$library-id$27709$1XGIwa
     g$library-id$27916$1XGIwa
     (record-accessor g$9706$27702$1XGIwa '0))
   (g$library-name$27710$1XGIwa
     g$library-name$27917$1XGIwa
     (record-accessor g$9706$27702$1XGIwa '1))
   (g$library-version$27711$1XGIwa
     g$library-version$27918$1XGIwa
     (record-accessor g$9706$27702$1XGIwa '2))
   (g$library-imp*$27712$1XGIwa
     g$library-imp*$27919$1XGIwa
     (record-accessor g$9706$27702$1XGIwa '3))
   (g$library-vis*$27713$1XGIwa
     g$library-vis*$27920$1XGIwa
     (record-accessor g$9706$27702$1XGIwa '4))
   (g$library-inv*$27714$1XGIwa
     g$library-inv*$27921$1XGIwa
     (record-accessor g$9706$27702$1XGIwa '5))
   (g$library-subst$27715$1XGIwa
     g$library-subst$27922$1XGIwa
     (record-accessor g$9706$27702$1XGIwa '6))
   (g$library-env$27716$1XGIwa
     g$library-env$27923$1XGIwa
     (record-accessor g$9706$27702$1XGIwa '7))
   (g$library-visit-state$27717$1XGIwa
     g$library-visit-state$27924$1XGIwa
     (record-accessor g$9706$27702$1XGIwa '8))
   (g$library-invoke-state$27718$1XGIwa
     g$library-invoke-state$27925$1XGIwa
     (record-accessor g$9706$27702$1XGIwa '9))
   (g$library-visit-code$27719$1XGIwa
     g$library-visit-code$27926$1XGIwa
     (record-accessor g$9706$27702$1XGIwa '10))
   (g$library-invoke-code$27720$1XGIwa
     g$library-invoke-code$27927$1XGIwa
     (record-accessor g$9706$27702$1XGIwa '11))
   (g$library-visible?$27721$1XGIwa
     g$library-visible?$27928$1XGIwa
     (record-accessor g$9706$27702$1XGIwa '12))
   (g$library-source-file-name$27722$1XGIwa
     g$library-source-file-name$27929$1XGIwa
     (record-accessor g$9706$27702$1XGIwa '13))
   (g$set-library-id!$27723$1XGIwa
     g$set-library-id!$27930$1XGIwa
     (record-mutator g$9706$27702$1XGIwa '0))
   (g$set-library-name!$27724$1XGIwa
     g$set-library-name!$27931$1XGIwa
     (record-mutator g$9706$27702$1XGIwa '1))
   (g$set-library-version!$27725$1XGIwa
     g$set-library-version!$27932$1XGIwa
     (record-mutator g$9706$27702$1XGIwa '2))
   (g$set-library-imp*!$27726$1XGIwa
     g$set-library-imp*!$27933$1XGIwa
     (record-mutator g$9706$27702$1XGIwa '3))
   (g$set-library-vis*!$27727$1XGIwa
     g$set-library-vis*!$27934$1XGIwa
     (record-mutator g$9706$27702$1XGIwa '4))
   (g$set-library-inv*!$27728$1XGIwa
     g$set-library-inv*!$27935$1XGIwa
     (record-mutator g$9706$27702$1XGIwa '5))
   (g$set-library-subst!$27729$1XGIwa
     g$set-library-subst!$27936$1XGIwa
     (record-mutator g$9706$27702$1XGIwa '6))
   (g$set-library-env!$27730$1XGIwa
     g$set-library-env!$27937$1XGIwa
     (record-mutator g$9706$27702$1XGIwa '7))
   (g$set-library-visit-state!$27731$1XGIwa
     g$set-library-visit-state!$27938$1XGIwa
     (record-mutator g$9706$27702$1XGIwa '8))
   (g$set-library-invoke-state!$27732$1XGIwa
     g$set-library-invoke-state!$27939$1XGIwa
     (record-mutator g$9706$27702$1XGIwa '9))
   (g$set-library-visit-code!$27733$1XGIwa
     g$set-library-visit-code!$27940$1XGIwa
     (record-mutator g$9706$27702$1XGIwa '10))
   (g$set-library-invoke-code!$27734$1XGIwa
     g$set-library-invoke-code!$27941$1XGIwa
     (record-mutator g$9706$27702$1XGIwa '11))
   (g$set-library-visible?!$27735$1XGIwa
     g$set-library-visible?!$27942$1XGIwa
     (record-mutator g$9706$27702$1XGIwa '12))
   (g$set-library-source-file-name!$27736$1XGIwa
     g$set-library-source-file-name!$27943$1XGIwa
     (record-mutator g$9706$27702$1XGIwa '13))
   (g$rp$27737$1XGIwa
     g$rp$27944$1XGIwa
     (make-record-printer
       'library
       (case-lambda
         ((g$x$27771$1XGIwa g$p$27772$1XGIwa g$wr$27773$1XGIwa)
          (begin
            (if (not (g$library?$27707$1XGIwa g$x$27771$1XGIwa))
              (assertion-violation
                'record-type-printer
                '"not a library")
              (void))
            (display
              (g$format$26891$1XGIwa
                '"#<library ~s>"
                (if (null?
                      (g$library-version$27711$1XGIwa g$x$27771$1XGIwa))
                  (g$library-name$27710$1XGIwa g$x$27771$1XGIwa)
                  (append
                    (g$library-name$27710$1XGIwa g$x$27771$1XGIwa)
                    (list
                      (g$library-version$27711$1XGIwa
                        g$x$27771$1XGIwa)))))
              g$p$27772$1XGIwa))))))
   (g$find-dependencies$27738$1XGIwa
     g$find-dependencies$27945$1XGIwa
     (case-lambda
       ((g$ls$27774$1XGIwa)
        (if (null? g$ls$27774$1XGIwa)
          '()
          (begin
            '#f
            (assertion-violation
              'find-dependencies
              '"cannot handle deps yet"))))))
   (g$find-library-by$27739$1XGIwa
     g$find-library-by$27946$1XGIwa
     (case-lambda
       ((g$pred$27775$1XGIwa)
        ((letrec ((g$f$27776$1XGIwa
                    (case-lambda
                      ((g$ls$27777$1XGIwa)
                       (if (null? g$ls$27777$1XGIwa)
                         '#f
                         (if (g$pred$27775$1XGIwa
                               (car g$ls$27777$1XGIwa))
                           (car g$ls$27777$1XGIwa)
                           (begin
                             '#f
                             (g$f$27776$1XGIwa
                               (cdr g$ls$27777$1XGIwa)))))))))
           g$f$27776$1XGIwa)
         ((g$current-library-collection$27701$1XGIwa))))))
   (g$library-path$27740$1XGIwa
     g$library-path$27947$1XGIwa
     (g$make-parameter$27100$1XGIwa
       '(".")
       (case-lambda
         ((g$x$27778$1XGIwa)
          (if (if (list? g$x$27778$1XGIwa)
                (begin
                  '#f
                  (g$for-all$19659$1XGIwa
                    g$string?$20569$1XGIwa
                    g$x$27778$1XGIwa))
                '#f)
            (g$map$19661$1XGIwa
              (case-lambda ((g$x$27779$1XGIwa) g$x$27779$1XGIwa))
              g$x$27778$1XGIwa)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$27778$1XGIwa))))))
   (g$library-extensions$27741$1XGIwa
     g$library-extensions$27948$1XGIwa
     (g$make-parameter$27100$1XGIwa
       '(".sls" ".ss")
       (case-lambda
         ((g$x$27780$1XGIwa)
          (if (if (list? g$x$27780$1XGIwa)
                (begin
                  '#f
                  (g$for-all$19659$1XGIwa
                    g$string?$20569$1XGIwa
                    g$x$27780$1XGIwa))
                '#f)
            (g$map$19661$1XGIwa
              (case-lambda ((g$x$27781$1XGIwa) g$x$27781$1XGIwa))
              g$x$27780$1XGIwa)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$27780$1XGIwa))))))
   (g$library-name->file-name$27742$1XGIwa
     g$library-name->file-name$27949$1XGIwa
     (case-lambda
       ((g$x$27782$1XGIwa)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$26651$1XGIwa)))
          (case-lambda
            ((g$p$27785$1XGIwa g$extract$27786$1XGIwa)
             ((case-lambda
                ((g$extract$27787$1XGIwa g$p$27788$1XGIwa)
                 (letrec* ((g$display-hex$27789$1XGIwa
                             (case-lambda
                               ((g$n$27797$1XGIwa)
                                (if (g$<=$21627$1XGIwa
                                      '0
                                      g$n$27797$1XGIwa
                                      '9)
                                  (display
                                    g$n$27797$1XGIwa
                                    g$p$27788$1XGIwa)
                                  (begin
                                    '#f
                                    (display
                                      (g$integer->char$20580$1XGIwa
                                        (+ (g$char->integer$20579$1XGIwa
                                             '#\A)
                                           (- g$n$27797$1XGIwa '10)))
                                      g$p$27788$1XGIwa)))))))
                   (begin
                     ((letrec ((g$f$27790$1XGIwa
                                 (case-lambda
                                   ((g$ls$27791$1XGIwa)
                                    (if (not (null? g$ls$27791$1XGIwa))
                                      (begin
                                        (display '"/" g$p$27788$1XGIwa)
                                        (g$for-each$19662$1XGIwa
                                          (case-lambda
                                            ((g$c$27792$1XGIwa)
                                             (if ((case-lambda
                                                    ((g$t$27793$1XGIwa)
                                                     (if g$t$27793$1XGIwa
                                                       g$t$27793$1XGIwa
                                                       ((case-lambda
                                                          ((g$t$27794$1XGIwa)
                                                           (if g$t$27794$1XGIwa
                                                             g$t$27794$1XGIwa
                                                             ((case-lambda
                                                                ((g$t$27795$1XGIwa)
                                                                 (if g$t$27795$1XGIwa
                                                                   g$t$27795$1XGIwa
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$19654$1XGIwa
                                                                       g$c$27792$1XGIwa
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$20658$1XGIwa
                                                                '#\0
                                                                g$c$27792$1XGIwa
                                                                '#\9)))))
                                                        (g$char<=?$20658$1XGIwa
                                                          '#\A
                                                          g$c$27792$1XGIwa
                                                          '#\Z)))))
                                                  (g$char<=?$20658$1XGIwa
                                                    '#\a
                                                    g$c$27792$1XGIwa
                                                    '#\z))
                                               (display
                                                 g$c$27792$1XGIwa
                                                 g$p$27788$1XGIwa)
                                               (begin
                                                 '#f
                                                 (display
                                                   '"%"
                                                   g$p$27788$1XGIwa)
                                                 ((case-lambda
                                                    ((g$n$27796$1XGIwa)
                                                     (begin
                                                       (g$display-hex$27789$1XGIwa
                                                         (g$quotient$22386$1XGIwa
                                                           g$n$27796$1XGIwa
                                                           '16))
                                                       (g$display-hex$27789$1XGIwa
                                                         (g$remainder$22387$1XGIwa
                                                           g$n$27796$1XGIwa
                                                           '16)))))
                                                  (g$char->integer$20579$1XGIwa
                                                    g$c$27792$1XGIwa))))))
                                          (g$string->list$20588$1XGIwa
                                            (g$symbol->string$20593$1XGIwa
                                              (car g$ls$27791$1XGIwa))))
                                        (g$f$27790$1XGIwa
                                          (cdr g$ls$27791$1XGIwa)))
                                      (void))))))
                        g$f$27790$1XGIwa)
                      g$x$27782$1XGIwa)
                     (g$extract$27787$1XGIwa)))))
              g$extract$27786$1XGIwa
              g$p$27785$1XGIwa)))))))
   (g$file-locator$27743$1XGIwa
     g$file-locator$27950$1XGIwa
     (g$make-parameter$27100$1XGIwa
       (case-lambda
         ((g$x$27798$1XGIwa)
          ((case-lambda
             ((g$str$27799$1XGIwa)
              ((letrec ((g$f$27800$1XGIwa
                          (case-lambda
                            ((g$ls$27801$1XGIwa
                               g$exts$27802$1XGIwa
                               g$failed-list$27803$1XGIwa)
                             (if (null? g$ls$27801$1XGIwa)
                               (g$file-locator-resolution-error$27098$1XGIwa
                                 g$x$27798$1XGIwa
                                 (g$reverse$20609$1XGIwa
                                   g$failed-list$27803$1XGIwa)
                                 ((case-lambda
                                    ((g$ls$27804$1XGIwa)
                                     (if (null? g$ls$27804$1XGIwa)
                                       (error 'library-manager '"BUG")
                                       (cdr g$ls$27804$1XGIwa))))
                                  (g$external-pending-libraries$27749$1XGIwa)))
                               (if (null? g$exts$27802$1XGIwa)
                                 (g$f$27800$1XGIwa
                                   (cdr g$ls$27801$1XGIwa)
                                   (g$library-extensions$27741$1XGIwa)
                                   g$failed-list$27803$1XGIwa)
                                 (begin
                                   '#f
                                   ((case-lambda
                                      ((g$name$27805$1XGIwa)
                                       (if (g$file-exists?$20733$1XGIwa
                                             g$name$27805$1XGIwa)
                                         g$name$27805$1XGIwa
                                         (g$f$27800$1XGIwa
                                           g$ls$27801$1XGIwa
                                           (cdr g$exts$27802$1XGIwa)
                                           (cons
                                             g$name$27805$1XGIwa
                                             g$failed-list$27803$1XGIwa)))))
                                    (g$string-append$20591$1XGIwa
                                      (car g$ls$27801$1XGIwa)
                                      g$str$27799$1XGIwa
                                      (car g$exts$27802$1XGIwa))))))))))
                 g$f$27800$1XGIwa)
               (g$library-path$27740$1XGIwa)
               (g$library-extensions$27741$1XGIwa)
               '())))
           (g$library-name->file-name$27742$1XGIwa g$x$27798$1XGIwa))))
       (case-lambda
         ((g$f$27806$1XGIwa)
          (if (g$procedure?$20575$1XGIwa g$f$27806$1XGIwa)
            g$f$27806$1XGIwa
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$27806$1XGIwa))))))
   (g$serialize-all$27744$1XGIwa
     g$serialize-all$27951$1XGIwa
     (case-lambda
       ((g$serialize$27807$1XGIwa g$compile$27808$1XGIwa)
        (letrec* ((g$library-desc$27809$1XGIwa
                    (case-lambda
                      ((g$x$27811$1XGIwa)
                       (list
                         (g$library-id$27709$1XGIwa g$x$27811$1XGIwa)
                         (g$library-name$27710$1XGIwa
                           g$x$27811$1XGIwa))))))
          (g$for-each$19662$1XGIwa
            (case-lambda
              ((g$x$27810$1XGIwa)
               (if (g$library-source-file-name$27722$1XGIwa
                     g$x$27810$1XGIwa)
                 (g$serialize$27807$1XGIwa
                   (g$library-source-file-name$27722$1XGIwa
                     g$x$27810$1XGIwa)
                   (list
                     (g$library-id$27709$1XGIwa g$x$27810$1XGIwa)
                     (g$library-name$27710$1XGIwa g$x$27810$1XGIwa)
                     (g$library-version$27711$1XGIwa g$x$27810$1XGIwa)
                     (g$map$19661$1XGIwa
                       g$library-desc$27809$1XGIwa
                       (g$library-imp*$27712$1XGIwa g$x$27810$1XGIwa))
                     (g$map$19661$1XGIwa
                       g$library-desc$27809$1XGIwa
                       (g$library-vis*$27713$1XGIwa g$x$27810$1XGIwa))
                     (g$map$19661$1XGIwa
                       g$library-desc$27809$1XGIwa
                       (g$library-inv*$27714$1XGIwa g$x$27810$1XGIwa))
                     (g$library-subst$27715$1XGIwa g$x$27810$1XGIwa)
                     (g$library-env$27716$1XGIwa g$x$27810$1XGIwa)
                     (g$compile$27808$1XGIwa
                       (g$library-visit-code$27719$1XGIwa
                         g$x$27810$1XGIwa))
                     (g$compile$27808$1XGIwa
                       (g$library-invoke-code$27720$1XGIwa
                         g$x$27810$1XGIwa))
                     (g$library-visible?$27721$1XGIwa
                       g$x$27810$1XGIwa)))
                 (void))))
            ((g$current-library-collection$27701$1XGIwa)))))))
   (g$current-precompiled-library-loader$27745$1XGIwa
     g$current-precompiled-library-loader$27952$1XGIwa
     (g$make-parameter$27100$1XGIwa
       (case-lambda ((g$filename$27812$1XGIwa g$sk$27813$1XGIwa) '#f))))
   (g$try-load-from-file$27746$1XGIwa
     g$try-load-from-file$27953$1XGIwa
     (case-lambda
       ((g$filename$27814$1XGIwa)
        ((g$current-precompiled-library-loader$27745$1XGIwa)
         g$filename$27814$1XGIwa
         (case-lambda
           ((g$id$27815$1XGIwa
              g$name$27816$1XGIwa
              g$ver$27817$1XGIwa
              g$imp*$27818$1XGIwa
              g$vis*$27819$1XGIwa
              g$inv*$27820$1XGIwa
              g$exp-subst$27821$1XGIwa
              g$exp-env$27822$1XGIwa
              g$visit-proc$27823$1XGIwa
              g$invoke-proc$27824$1XGIwa
              g$visible?$27825$1XGIwa)
            ((letrec ((g$f$27826$1XGIwa
                        (case-lambda
                          ((g$deps$27827$1XGIwa)
                           (if (null? g$deps$27827$1XGIwa)
                             (begin
                               (g$install-library$27756$1XGIwa
                                 g$id$27815$1XGIwa
                                 g$name$27816$1XGIwa
                                 g$ver$27817$1XGIwa
                                 g$imp*$27818$1XGIwa
                                 g$vis*$27819$1XGIwa
                                 g$inv*$27820$1XGIwa
                                 g$exp-subst$27821$1XGIwa
                                 g$exp-env$27822$1XGIwa
                                 g$visit-proc$27823$1XGIwa
                                 g$invoke-proc$27824$1XGIwa
                                 '#f
                                 '#f
                                 g$visible?$27825$1XGIwa
                                 '#f)
                               '#t)
                             (begin
                               '#f
                               ((case-lambda
                                  ((g$d$27828$1XGIwa)
                                   ((case-lambda
                                      ((g$label$27829$1XGIwa
                                         g$dname$27830$1XGIwa)
                                       ((case-lambda
                                          ((g$l$27831$1XGIwa)
                                           (if (if (g$library?$27707$1XGIwa
                                                     g$l$27831$1XGIwa)
                                                 (begin
                                                   '#f
                                                   (eq? g$label$27829$1XGIwa
                                                        (g$library-id$27709$1XGIwa
                                                          g$l$27831$1XGIwa)))
                                                 '#f)
                                             (g$f$27826$1XGIwa
                                               (cdr g$deps$27827$1XGIwa))
                                             (begin
                                               '#f
                                               (g$library-version-mismatch-warning$27097$1XGIwa
                                                 g$name$27816$1XGIwa
                                                 g$dname$27830$1XGIwa
                                                 g$filename$27814$1XGIwa)
                                               '#f))))
                                        (g$find-library-by-name$27751$1XGIwa
                                          g$dname$27830$1XGIwa))))
                                    (car g$d$27828$1XGIwa)
                                    (g$cadr$20611$1XGIwa
                                      g$d$27828$1XGIwa))))
                                (car g$deps$27827$1XGIwa))))))))
               g$f$27826$1XGIwa)
             (append
               g$imp*$27818$1XGIwa
               g$vis*$27819$1XGIwa
               g$inv*$27820$1XGIwa)))
           (g$others$27832$1XGIwa '#f))))))
   (g$library-loader$27747$1XGIwa
     g$library-loader$27954$1XGIwa
     (g$make-parameter$27100$1XGIwa
       (case-lambda
         ((g$x$27833$1XGIwa)
          ((case-lambda
             ((g$file-name$27834$1XGIwa)
              (if (not g$file-name$27834$1XGIwa)
                (assertion-violation
                  '#f
                  '"cannot find library"
                  g$x$27833$1XGIwa)
                ((case-lambda
                   ((g$t$27835$1XGIwa)
                    (if g$t$27835$1XGIwa
                      g$t$27835$1XGIwa
                      (begin
                        '#f
                        (begin
                          '#f
                          ((g$current-library-expander$27748$1XGIwa)
                           (g$read-library-source-file$27099$1XGIwa
                             g$file-name$27834$1XGIwa)
                           g$file-name$27834$1XGIwa
                           (case-lambda
                             ((g$name$27836$1XGIwa)
                              (if (not (equal?
                                         g$name$27836$1XGIwa
                                         g$x$27833$1XGIwa))
                                (assertion-violation
                                  'import
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$open-string-output-port$26651$1XGIwa)))
                                    (case-lambda
                                      ((g$p$27839$1XGIwa
                                         g$e$27840$1XGIwa)
                                       ((case-lambda
                                          ((g$e$27841$1XGIwa
                                             g$p$27842$1XGIwa)
                                           (begin
                                             (display
                                               '"expected to find library "
                                               g$p$27842$1XGIwa)
                                             (write
                                               g$x$27833$1XGIwa
                                               g$p$27842$1XGIwa)
                                             (display
                                               '" in file "
                                               g$p$27842$1XGIwa)
                                             (display
                                               g$file-name$27834$1XGIwa
                                               g$p$27842$1XGIwa)
                                             (display
                                               '", found "
                                               g$p$27842$1XGIwa)
                                             (write
                                               g$name$27836$1XGIwa
                                               g$p$27842$1XGIwa)
                                             (display
                                               '" instead"
                                               g$p$27842$1XGIwa)
                                             (g$e$27841$1XGIwa))))
                                        g$e$27840$1XGIwa
                                        g$p$27839$1XGIwa)))))
                                (void))))))))))
                 (g$try-load-from-file$27746$1XGIwa
                   g$file-name$27834$1XGIwa)))))
           ((g$file-locator$27743$1XGIwa) g$x$27833$1XGIwa))))
       (case-lambda
         ((g$f$27843$1XGIwa)
          (if (g$procedure?$20575$1XGIwa g$f$27843$1XGIwa)
            g$f$27843$1XGIwa
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$27843$1XGIwa))))))
   (g$current-library-expander$27748$1XGIwa
     g$current-library-expander$27955$1XGIwa
     (g$make-parameter$27100$1XGIwa
       (case-lambda
         ((g$x$27844$1XGIwa)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$27845$1XGIwa)
          (if (g$procedure?$20575$1XGIwa g$f$27845$1XGIwa)
            g$f$27845$1XGIwa
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$27845$1XGIwa))))))
   (g$external-pending-libraries$27749$1XGIwa
     g$external-pending-libraries$27956$1XGIwa
     (g$make-parameter$27100$1XGIwa '()))
   (g$find-external-library$27750$1XGIwa
     g$find-external-library$27957$1XGIwa
     (case-lambda
       ((g$name$27846$1XGIwa)
        (begin
          (if (g$member$19655$1XGIwa
                g$name$27846$1XGIwa
                (g$external-pending-libraries$27749$1XGIwa))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$27846$1XGIwa)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$27849$1XGIwa
                g$external-pending-libraries$27850$1XGIwa)
              ((case-lambda
                 ((g$swap$27851$1XGIwa)
                  (dynamic-wind
                    g$swap$27851$1XGIwa
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$27747$1XGIwa)
                          g$name$27846$1XGIwa)
                         ((case-lambda
                            ((g$t$27852$1XGIwa)
                             (if g$t$27852$1XGIwa
                               g$t$27852$1XGIwa
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$27846$1XGIwa)))))
                          (g$find-library-by$27739$1XGIwa
                            (case-lambda
                              ((g$x$27853$1XGIwa)
                               (equal?
                                 (g$library-name$27710$1XGIwa
                                   g$x$27853$1XGIwa)
                                 g$name$27846$1XGIwa))))))))
                    g$swap$27851$1XGIwa)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$27854$1XGIwa)
                      (begin
                        (g$external-pending-libraries$27849$1XGIwa
                          g$external-pending-libraries$27850$1XGIwa)
                        (set! g$external-pending-libraries$27850$1XGIwa
                          g$t$27854$1XGIwa))))
                   (g$external-pending-libraries$27849$1XGIwa)))))))
           g$external-pending-libraries$27749$1XGIwa
           (cons
             g$name$27846$1XGIwa
             (g$external-pending-libraries$27749$1XGIwa)))))))
   (g$find-library-by-name$27751$1XGIwa
     g$find-library-by-name$27958$1XGIwa
     (case-lambda
       ((g$name$27855$1XGIwa)
        ((case-lambda
           ((g$t$27856$1XGIwa)
            (if g$t$27856$1XGIwa
              g$t$27856$1XGIwa
              (begin
                '#f
                (g$find-external-library$27750$1XGIwa
                  g$name$27855$1XGIwa)))))
         (g$find-library-by$27739$1XGIwa
           (case-lambda
             ((g$x$27857$1XGIwa)
              (equal?
                (g$library-name$27710$1XGIwa g$x$27857$1XGIwa)
                g$name$27855$1XGIwa))))))))
   (g$uninstall-library$27752$1XGIwa
     g$uninstall-library$27959$1XGIwa
     (case-lambda
       ((g$name$27858$1XGIwa g$err?$27859$1XGIwa)
        (letrec* ((g$who$27860$1XGIwa 'uninstall-library))
          ((case-lambda
             ((g$lib$27861$1XGIwa)
              (begin
                (if (if g$err?$27859$1XGIwa
                      (begin '#f (not g$lib$27861$1XGIwa))
                      '#f)
                  (assertion-violation
                    g$who$27860$1XGIwa
                    '"library not installed"
                    g$name$27858$1XGIwa)
                  (void))
                ((g$current-library-collection$27701$1XGIwa)
                 g$lib$27861$1XGIwa
                 '#t)
                (g$for-each$19662$1XGIwa
                  (case-lambda
                    ((g$x$27862$1XGIwa)
                     ((case-lambda
                        ((g$label$27863$1XGIwa g$binding$27864$1XGIwa)
                         (begin
                           (remove-location g$label$27863$1XGIwa)
                           (if (g$memq$19653$1XGIwa
                                 (car g$binding$27864$1XGIwa)
                                 '(global
                                    global-macro
                                    global-macro!
                                    global-ctv))
                             (remove-location
                               (cdr g$binding$27864$1XGIwa))
                             (void)))))
                      (car g$x$27862$1XGIwa)
                      (cdr g$x$27862$1XGIwa))))
                  (g$library-env$27716$1XGIwa g$lib$27861$1XGIwa)))))
           (g$find-library-by$27739$1XGIwa
             (case-lambda
               ((g$x$27865$1XGIwa)
                (equal?
                  (g$library-name$27710$1XGIwa g$x$27865$1XGIwa)
                  g$name$27858$1XGIwa)))))))
       ((g$name$27866$1XGIwa)
        (g$uninstall-library$27752$1XGIwa g$name$27866$1XGIwa '#t))))
   (g$library-exists?$27753$1XGIwa
     g$library-exists?$27960$1XGIwa
     (case-lambda
       ((g$name$27867$1XGIwa)
        (if (g$find-library-by$27739$1XGIwa
              (case-lambda
                ((g$x$27868$1XGIwa)
                 (equal?
                   (g$library-name$27710$1XGIwa g$x$27868$1XGIwa)
                   g$name$27867$1XGIwa))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$27754$1XGIwa
     g$find-library-by-spec/die$27961$1XGIwa
     (case-lambda
       ((g$spec$27869$1XGIwa)
        ((case-lambda
           ((g$id$27870$1XGIwa)
            ((case-lambda
               ((g$t$27871$1XGIwa)
                (if g$t$27871$1XGIwa
                  g$t$27871$1XGIwa
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$27869$1XGIwa)))))
             (g$find-library-by$27739$1XGIwa
               (case-lambda
                 ((g$x$27872$1XGIwa)
                  (eq? g$id$27870$1XGIwa
                       (g$library-id$27709$1XGIwa
                         g$x$27872$1XGIwa))))))))
         (car g$spec$27869$1XGIwa)))))
   (g$install-library-record$27755$1XGIwa
     g$install-library-record$27962$1XGIwa
     (case-lambda
       ((g$lib$27873$1XGIwa)
        (begin
          ((case-lambda
             ((g$exp-env$27874$1XGIwa)
              (g$for-each$19662$1XGIwa
                (case-lambda
                  ((g$x$27875$1XGIwa)
                   ((case-lambda
                      ((g$label$27876$1XGIwa g$binding$27877$1XGIwa)
                       ((case-lambda
                          ((g$binding$27878$1XGIwa)
                           (g$set-label-binding!$27103$1XGIwa
                             g$label$27876$1XGIwa
                             g$binding$27878$1XGIwa)))
                        ((case-lambda
                           ((g$t$27879$1XGIwa)
                            (if (eqv? g$t$27879$1XGIwa 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$27873$1XGIwa
                                  (cdr g$binding$27877$1XGIwa)))
                              (if (eqv? g$t$27879$1XGIwa 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$27873$1XGIwa
                                    (cdr g$binding$27877$1XGIwa)))
                                (if (eqv?
                                      g$t$27879$1XGIwa
                                      'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$27873$1XGIwa
                                      (cdr g$binding$27877$1XGIwa)))
                                  (if (eqv?
                                        g$t$27879$1XGIwa
                                        'global-ctv)
                                    (cons
                                      'global-ctv
                                      (cons
                                        g$lib$27873$1XGIwa
                                        (cdr g$binding$27877$1XGIwa)))
                                    (begin
                                      '#f
                                      g$binding$27877$1XGIwa)))))))
                         (car g$binding$27877$1XGIwa)))))
                    (car g$x$27875$1XGIwa)
                    (cdr g$x$27875$1XGIwa))))
                g$exp-env$27874$1XGIwa)))
           (g$library-env$27716$1XGIwa g$lib$27873$1XGIwa))
          ((g$current-library-collection$27701$1XGIwa)
           g$lib$27873$1XGIwa)))))
   (g$install-library$27756$1XGIwa
     g$install-library$27963$1XGIwa
     (case-lambda
       ((g$id$27880$1XGIwa
          g$name$27881$1XGIwa
          g$ver$27882$1XGIwa
          g$imp*$27883$1XGIwa
          g$vis*$27884$1XGIwa
          g$inv*$27885$1XGIwa
          g$exp-subst$27886$1XGIwa
          g$exp-env$27887$1XGIwa
          g$visit-proc$27888$1XGIwa
          g$invoke-proc$27889$1XGIwa
          g$visit-code$27890$1XGIwa
          g$invoke-code$27891$1XGIwa
          g$visible?$27892$1XGIwa
          g$source-file-name$27893$1XGIwa)
        ((case-lambda
           ((g$imp-lib*$27894$1XGIwa
              g$vis-lib*$27895$1XGIwa
              g$inv-lib*$27896$1XGIwa)
            (begin
              (if (not (if (g$symbol?$20573$1XGIwa g$id$27880$1XGIwa)
                         (if (list? g$name$27881$1XGIwa)
                           (begin '#f (list? g$ver$27882$1XGIwa))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$27880$1XGIwa
                  g$name$27881$1XGIwa
                  g$ver$27882$1XGIwa)
                (void))
              (if (g$library-exists?$27753$1XGIwa g$name$27881$1XGIwa)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$27881$1XGIwa)
                (void))
              ((case-lambda
                 ((g$lib$27897$1XGIwa)
                  (g$install-library-record$27755$1XGIwa
                    g$lib$27897$1XGIwa)))
               (g$make-library$27708$1XGIwa
                 g$id$27880$1XGIwa
                 g$name$27881$1XGIwa
                 g$ver$27882$1XGIwa
                 g$imp-lib*$27894$1XGIwa
                 g$vis-lib*$27895$1XGIwa
                 g$inv-lib*$27896$1XGIwa
                 g$exp-subst$27886$1XGIwa
                 g$exp-env$27887$1XGIwa
                 g$visit-proc$27888$1XGIwa
                 g$invoke-proc$27889$1XGIwa
                 g$visit-code$27890$1XGIwa
                 g$invoke-code$27891$1XGIwa
                 g$visible?$27892$1XGIwa
                 g$source-file-name$27893$1XGIwa)))))
         (g$map$19661$1XGIwa
           g$find-library-by-spec/die$27754$1XGIwa
           g$imp*$27883$1XGIwa)
         (g$map$19661$1XGIwa
           g$find-library-by-spec/die$27754$1XGIwa
           g$vis*$27884$1XGIwa)
         (g$map$19661$1XGIwa
           g$find-library-by-spec/die$27754$1XGIwa
           g$inv*$27885$1XGIwa)))))
   (g$imported-label->binding$27757$1XGIwa
     g$imported-label->binding$27964$1XGIwa
     (case-lambda
       ((g$lab$27898$1XGIwa)
        (g$label-binding$27104$1XGIwa g$lab$27898$1XGIwa))))
   (g$invoke-library$27758$1XGIwa
     g$invoke-library$27965$1XGIwa
     (case-lambda
       ((g$lib$27899$1XGIwa)
        ((case-lambda
           ((g$invoke$27900$1XGIwa)
            (if (g$procedure?$20575$1XGIwa g$invoke$27900$1XGIwa)
              (begin
                (g$set-library-invoke-state!$27732$1XGIwa
                  g$lib$27899$1XGIwa
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$27899$1XGIwa))))
                (g$for-each$19662$1XGIwa
                  g$invoke-library$27758$1XGIwa
                  (g$library-inv*$27714$1XGIwa g$lib$27899$1XGIwa))
                (g$set-library-invoke-state!$27732$1XGIwa
                  g$lib$27899$1XGIwa
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$27899$1XGIwa))))
                (g$invoke$27900$1XGIwa)
                (g$set-library-invoke-state!$27732$1XGIwa
                  g$lib$27899$1XGIwa
                  '#t))
              (void))))
         (g$library-invoke-state$27718$1XGIwa g$lib$27899$1XGIwa)))))
   (g$visit-library$27759$1XGIwa
     g$visit-library$27966$1XGIwa
     (case-lambda
       ((g$lib$27901$1XGIwa)
        ((case-lambda
           ((g$visit$27902$1XGIwa)
            (if (g$procedure?$20575$1XGIwa g$visit$27902$1XGIwa)
              (begin
                (g$set-library-visit-state!$27731$1XGIwa
                  g$lib$27901$1XGIwa
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$27901$1XGIwa))))
                (g$for-each$19662$1XGIwa
                  g$invoke-library$27758$1XGIwa
                  (g$library-vis*$27713$1XGIwa g$lib$27901$1XGIwa))
                (g$set-library-visit-state!$27731$1XGIwa
                  g$lib$27901$1XGIwa
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$27901$1XGIwa))))
                (g$visit$27902$1XGIwa)
                (g$set-library-visit-state!$27731$1XGIwa
                  g$lib$27901$1XGIwa
                  '#t))
              (void))))
         (g$library-visit-state$27717$1XGIwa g$lib$27901$1XGIwa)))))
   (g$invoke-library-by-spec$27760$1XGIwa
     g$invoke-library-by-spec$27967$1XGIwa
     (case-lambda
       ((g$spec$27903$1XGIwa)
        (g$invoke-library$27758$1XGIwa
          (g$find-library-by-spec/die$27754$1XGIwa
            g$spec$27903$1XGIwa)))))
   (g$installed-libraries$27761$1XGIwa
     g$installed-libraries$27968$1XGIwa
     (case-lambda
       ((g$all?$27904$1XGIwa)
        ((letrec ((g$f$27905$1XGIwa
                    (case-lambda
                      ((g$ls$27906$1XGIwa)
                       (if (null? g$ls$27906$1XGIwa)
                         '()
                         (if ((case-lambda
                                ((g$t$27907$1XGIwa)
                                 (if g$t$27907$1XGIwa
                                   g$t$27907$1XGIwa
                                   (begin
                                     '#f
                                     (g$library-visible?$27721$1XGIwa
                                       (car g$ls$27906$1XGIwa))))))
                              g$all?$27904$1XGIwa)
                           (cons
                             (g$library-name$27710$1XGIwa
                               (car g$ls$27906$1XGIwa))
                             (g$f$27905$1XGIwa (cdr g$ls$27906$1XGIwa)))
                           (begin
                             '#f
                             (g$f$27905$1XGIwa
                               (cdr g$ls$27906$1XGIwa)))))))))
           g$f$27905$1XGIwa)
         ((g$current-library-collection$27701$1XGIwa))))
       (() (g$installed-libraries$27761$1XGIwa '#f))))
   (g$library-spec$27762$1XGIwa
     g$library-spec$27969$1XGIwa
     (case-lambda
       ((g$x$27908$1XGIwa)
        (begin
          (if (not (g$library?$27707$1XGIwa g$x$27908$1XGIwa))
            (assertion-violation
              'library-spec
              '"not a library"
              g$x$27908$1XGIwa)
            (void))
          (list
            (g$library-id$27709$1XGIwa g$x$27908$1XGIwa)
            (g$library-name$27710$1XGIwa g$x$27908$1XGIwa)
            (g$library-version$27711$1XGIwa g$x$27908$1XGIwa)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$27970$1XGIwa
     g$build-global-define$28180$1XGIwa
     (case-lambda ((g$x$28151$1XGIwa) (g$build-void$28147$1XGIwa))))
   (g$build-lambda$28081$1XGIwa
     g$build-lambda$28181$1XGIwa
     (case-lambda
       ((g$ae$28152$1XGIwa g$vars$28153$1XGIwa g$exp$28154$1XGIwa)
        (list
          'case-lambda
          (list g$vars$28153$1XGIwa g$exp$28154$1XGIwa)))))
   (g$build-case-lambda$28082$1XGIwa
     g$build-case-lambda$28182$1XGIwa
     (case-lambda
       ((g$ae$28155$1XGIwa g$vars*$28156$1XGIwa g$exp*$28157$1XGIwa)
        (cons
          'case-lambda
          (g$map$19661$1XGIwa
            list
            g$vars*$28156$1XGIwa
            g$exp*$28157$1XGIwa)))))
   (g$build-let$28083$1XGIwa
     g$build-let$28183$1XGIwa
     (case-lambda
       ((g$ae$28158$1XGIwa
          g$lhs*$28159$1XGIwa
          g$rhs*$28160$1XGIwa
          g$body$28161$1XGIwa)
        (cons
          (g$build-lambda$28081$1XGIwa
            g$ae$28158$1XGIwa
            g$lhs*$28159$1XGIwa
            g$body$28161$1XGIwa)
          g$rhs*$28160$1XGIwa))))
   (g$build-sequence$28146$1XGIwa
     g$build-sequence$28184$1XGIwa
     (case-lambda
       ((g$ae$28162$1XGIwa g$exps$28163$1XGIwa)
        ((letrec ((g$loop$28164$1XGIwa
                    (case-lambda
                      ((g$exps$28165$1XGIwa)
                       (if (null? (cdr g$exps$28165$1XGIwa))
                         (car g$exps$28165$1XGIwa)
                         (if (equal?
                               (car g$exps$28165$1XGIwa)
                               (g$build-void$28147$1XGIwa))
                           (g$loop$28164$1XGIwa
                             (cdr g$exps$28165$1XGIwa))
                           (cons 'begin g$exps$28165$1XGIwa)))))))
           g$loop$28164$1XGIwa)
         g$exps$28163$1XGIwa))))
   (g$build-void$28147$1XGIwa
     g$build-void$28185$1XGIwa
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$28148$1XGIwa
     g$build-letrec$28186$1XGIwa
     (case-lambda
       ((g$ae$28166$1XGIwa
          g$vars$28167$1XGIwa
          g$val-exps$28168$1XGIwa
          g$body-exp$28169$1XGIwa)
        (if (null? g$vars$28167$1XGIwa)
          g$body-exp$28169$1XGIwa
          (list
            'letrec
            (g$map$19661$1XGIwa
              list
              g$vars$28167$1XGIwa
              g$val-exps$28168$1XGIwa)
            g$body-exp$28169$1XGIwa)))))
   (g$build-letrec*$28149$1XGIwa
     g$build-letrec*$28187$1XGIwa
     (case-lambda
       ((g$ae$28170$1XGIwa
          g$vars$28171$1XGIwa
          g$val-exps$28172$1XGIwa
          g$body-exp$28173$1XGIwa)
        (if (null? g$vars$28171$1XGIwa)
          g$body-exp$28173$1XGIwa
          (begin
            '#f
            (list
              'letrec*
              (g$map$19661$1XGIwa
                list
                g$vars$28171$1XGIwa
                g$val-exps$28172$1XGIwa)
              g$body-exp$28173$1XGIwa))))))
   (g$build-library-letrec*$28150$1XGIwa
     g$build-library-letrec*$28188$1XGIwa
     (case-lambda
       ((g$ae$28174$1XGIwa
          g$name$28175$1XGIwa
          g$vars$28176$1XGIwa
          g$locs$28177$1XGIwa
          g$val-exps$28178$1XGIwa
          g$body-exp$28179$1XGIwa)
        (list
          'library-letrec*
          g$name$28175$1XGIwa
          (g$map$19661$1XGIwa
            list
            g$vars$28176$1XGIwa
            g$locs$28177$1XGIwa
            g$val-exps$28178$1XGIwa)
          g$body-exp$28179$1XGIwa)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$28189$1XGIwa
     g$set-cons$32200$1XGIwa
     (case-lambda
       ((g$x$28885$1XGIwa g$ls$28886$1XGIwa)
        (if (g$memq$19653$1XGIwa g$x$28885$1XGIwa g$ls$28886$1XGIwa)
          g$ls$28886$1XGIwa
          (begin '#f (cons g$x$28885$1XGIwa g$ls$28886$1XGIwa))))))
   (g$set-union$28190$1XGIwa
     g$set-union$32201$1XGIwa
     (case-lambda
       ((g$ls1$28887$1XGIwa g$ls2$28888$1XGIwa)
        (if (null? g$ls1$28887$1XGIwa)
          g$ls2$28888$1XGIwa
          (if (g$memq$19653$1XGIwa
                (car g$ls1$28887$1XGIwa)
                g$ls2$28888$1XGIwa)
            (g$set-union$28190$1XGIwa
              (cdr g$ls1$28887$1XGIwa)
              g$ls2$28888$1XGIwa)
            (begin
              '#f
              (cons
                (car g$ls1$28887$1XGIwa)
                (g$set-union$28190$1XGIwa
                  (cdr g$ls1$28887$1XGIwa)
                  g$ls2$28888$1XGIwa))))))))
   (g$top-mark*$28192$1XGIwa g$top-mark*$32202$1XGIwa '(top))
   (g$top-marked?$28193$1XGIwa
     g$top-marked?$32203$1XGIwa
     (case-lambda
       ((g$m*$28889$1XGIwa)
        (g$memq$19653$1XGIwa 'top g$m*$28889$1XGIwa))))
   (g$gen-lexical$28194$1XGIwa
     g$gen-lexical$32204$1XGIwa
     (case-lambda
       ((g$sym$28890$1XGIwa)
        (if (g$symbol?$20573$1XGIwa g$sym$28890$1XGIwa)
          (gensym g$sym$28890$1XGIwa)
          (if (g$stx?$28231$1XGIwa g$sym$28890$1XGIwa)
            (g$gen-lexical$28194$1XGIwa
              (g$id->sym$28260$1XGIwa g$sym$28890$1XGIwa))
            (begin
              '#f
              (assertion-violation
                'gen-lexical
                '"BUG: invalid arg"
                g$sym$28890$1XGIwa)))))))
   (g$gen-global$28195$1XGIwa
     g$gen-global$32205$1XGIwa
     (case-lambda
       ((g$x$28891$1XGIwa)
        (g$gen-lexical$28194$1XGIwa g$x$28891$1XGIwa))))
   (g$gen-label$28196$1XGIwa
     g$gen-label$32206$1XGIwa
     (case-lambda ((g$_$28892$1XGIwa) (gensym))))
   (g$gen-top-level-label$28197$1XGIwa
     g$gen-top-level-label$32207$1XGIwa
     (case-lambda
       ((g$id$28893$1XGIwa g$rib$28894$1XGIwa)
        (letrec* ((g$find$28895$1XGIwa
                    (case-lambda
                      ((g$sym$28901$1XGIwa
                         g$mark*$28902$1XGIwa
                         g$sym*$28903$1XGIwa
                         g$mark**$28904$1XGIwa
                         g$label*$28905$1XGIwa)
                       (if (pair? g$sym*$28903$1XGIwa)
                         (begin
                           '#f
                           (if (if (eq? g$sym$28901$1XGIwa
                                        (car g$sym*$28903$1XGIwa))
                                 (begin
                                   '#f
                                   (g$same-marks?$28261$1XGIwa
                                     g$mark*$28902$1XGIwa
                                     (car g$mark**$28904$1XGIwa)))
                                 '#f)
                             (car g$label*$28905$1XGIwa)
                             (g$find$28895$1XGIwa
                               g$sym$28901$1XGIwa
                               g$mark*$28902$1XGIwa
                               (cdr g$sym*$28903$1XGIwa)
                               (cdr g$mark**$28904$1XGIwa)
                               (cdr g$label*$28905$1XGIwa))))
                         '#f)))))
          ((case-lambda
             ((g$sym$28896$1XGIwa g$mark*$28897$1XGIwa)
              ((case-lambda
                 ((g$sym*$28898$1XGIwa)
                  ((case-lambda
                     ((g$t$28899$1XGIwa)
                      (if g$t$28899$1XGIwa
                        ((case-lambda
                           ((g$label$28900$1XGIwa)
                            (if (g$imported-label->binding$27964$1XGIwa
                                  g$label$28900$1XGIwa)
                              (gensym)
                              (begin '#f g$label$28900$1XGIwa))))
                         g$t$28899$1XGIwa)
                        (begin '#f (gensym)))))
                   (if (g$memq$19653$1XGIwa
                         g$sym$28896$1XGIwa
                         (g$rib-sym*$28207$1XGIwa g$rib$28894$1XGIwa))
                     (begin
                       '#f
                       (g$find$28895$1XGIwa
                         g$sym$28896$1XGIwa
                         g$mark*$28897$1XGIwa
                         g$sym*$28898$1XGIwa
                         (g$rib-mark**$28208$1XGIwa g$rib$28894$1XGIwa)
                         (g$rib-label*$28209$1XGIwa
                           g$rib$28894$1XGIwa)))
                     '#f))))
               (g$rib-sym*$28207$1XGIwa g$rib$28894$1XGIwa))))
           (g$id->sym$28260$1XGIwa g$id$28893$1XGIwa)
           (g$stx-mark*$28234$1XGIwa g$id$28893$1XGIwa))))))
   (g$gen-define-label+loc$28198$1XGIwa
     g$gen-define-label+loc$32208$1XGIwa
     (case-lambda
       ((g$id$28906$1XGIwa g$rib$28907$1XGIwa g$sd?$28908$1XGIwa)
        (if g$sd?$28908$1XGIwa
          (values
            (gensym)
            (g$gen-lexical$28194$1XGIwa g$id$28906$1XGIwa))
          ((case-lambda
             ((g$env$28909$1XGIwa)
              ((case-lambda
                 ((g$label$28910$1XGIwa g$locs$28911$1XGIwa)
                  (values
                    g$label$28910$1XGIwa
                    ((case-lambda
                       ((g$t$28912$1XGIwa)
                        (if g$t$28912$1XGIwa
                          (cdr g$t$28912$1XGIwa)
                          (begin
                            '#f
                            ((case-lambda
                               ((g$loc$28913$1XGIwa)
                                (begin
                                  (g$set-interaction-env-locs!$28847$1XGIwa
                                    g$env$28909$1XGIwa
                                    (cons
                                      (cons
                                        g$label$28910$1XGIwa
                                        g$loc$28913$1XGIwa)
                                      g$locs$28911$1XGIwa))
                                  g$loc$28913$1XGIwa)))
                             (g$gen-lexical$28194$1XGIwa
                               g$id$28906$1XGIwa))))))
                     (g$assq$19649$1XGIwa
                       g$label$28910$1XGIwa
                       g$locs$28911$1XGIwa)))))
               (g$gen-top-level-label$28197$1XGIwa
                 g$id$28906$1XGIwa
                 g$rib$28907$1XGIwa)
               (g$interaction-env-locs$28844$1XGIwa
                 g$env$28909$1XGIwa))))
           (g$top-level-context$28884$1XGIwa))))))
   (g$gen-define-label$28199$1XGIwa
     g$gen-define-label$32209$1XGIwa
     (case-lambda
       ((g$id$28914$1XGIwa g$rib$28915$1XGIwa g$sd?$28916$1XGIwa)
        (if g$sd?$28916$1XGIwa
          (gensym)
          (g$gen-top-level-label$28197$1XGIwa
            g$id$28914$1XGIwa
            g$rib$28915$1XGIwa)))))
   (g$10033$28200$1XGIwa
     g$10033$32210$1XGIwa
     (make-record-type-descriptor
       'rib
       '#f
       'g$10036$1XGIwa
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$10035$28201$1XGIwa g$10035$32211$1XGIwa '#f)
   (g$10034$28202$1XGIwa
     g$10034$32212$1XGIwa
     (make-record-constructor-descriptor
       g$10033$28200$1XGIwa
       '#f
       g$10035$28201$1XGIwa))
   (g$rib?$28205$1XGIwa
     g$rib?$32213$1XGIwa
     (record-predicate g$10033$28200$1XGIwa))
   (g$make-rib$28206$1XGIwa
     g$make-rib$32214$1XGIwa
     (record-constructor g$10034$28202$1XGIwa))
   (g$rib-sym*$28207$1XGIwa
     g$rib-sym*$32215$1XGIwa
     (record-accessor g$10033$28200$1XGIwa '0))
   (g$rib-mark**$28208$1XGIwa
     g$rib-mark**$32216$1XGIwa
     (record-accessor g$10033$28200$1XGIwa '1))
   (g$rib-label*$28209$1XGIwa
     g$rib-label*$32217$1XGIwa
     (record-accessor g$10033$28200$1XGIwa '2))
   (g$rib-sealed/freq$28210$1XGIwa
     g$rib-sealed/freq$32218$1XGIwa
     (record-accessor g$10033$28200$1XGIwa '3))
   (g$rib-cache$28211$1XGIwa
     g$rib-cache$32219$1XGIwa
     (record-accessor g$10033$28200$1XGIwa '4))
   (g$set-rib-sym*!$28212$1XGIwa
     g$set-rib-sym*!$32220$1XGIwa
     (record-mutator g$10033$28200$1XGIwa '0))
   (g$set-rib-mark**!$28213$1XGIwa
     g$set-rib-mark**!$32221$1XGIwa
     (record-mutator g$10033$28200$1XGIwa '1))
   (g$set-rib-label*!$28214$1XGIwa
     g$set-rib-label*!$32222$1XGIwa
     (record-mutator g$10033$28200$1XGIwa '2))
   (g$set-rib-sealed/freq!$28215$1XGIwa
     g$set-rib-sealed/freq!$32223$1XGIwa
     (record-mutator g$10033$28200$1XGIwa '3))
   (g$set-rib-cache!$28216$1XGIwa
     g$set-rib-cache!$32224$1XGIwa
     (record-mutator g$10033$28200$1XGIwa '4))
   (g$make-empty-rib$28217$1XGIwa
     g$make-empty-rib$32225$1XGIwa
     (case-lambda (() (g$make-rib$28206$1XGIwa '() '() '() '#f '#f))))
   (g$make-cache-rib$28218$1XGIwa
     g$make-cache-rib$32226$1XGIwa
     (case-lambda
       (()
        (g$make-rib$28206$1XGIwa
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$20712$1XGIwa)))))
   (g$find-label$28219$1XGIwa
     g$find-label$32227$1XGIwa
     (case-lambda
       ((g$rib$28917$1XGIwa g$sym$28918$1XGIwa g$mark*$28919$1XGIwa)
        ((case-lambda
           ((g$ht$28920$1XGIwa)
            (if g$ht$28920$1XGIwa
              (begin
                '#f
                ((case-lambda
                   ((g$cv$28921$1XGIwa)
                    ((case-lambda
                       ((g$t$28922$1XGIwa)
                        (if g$t$28922$1XGIwa
                          (cdr g$t$28922$1XGIwa)
                          (begin '#f '#f))))
                     (if g$cv$28921$1XGIwa
                       (begin
                         '#f
                         (g$assp$19652$1XGIwa
                           (case-lambda
                             ((g$m$28923$1XGIwa)
                              (g$same-marks?$28261$1XGIwa
                                g$mark*$28919$1XGIwa
                                g$m$28923$1XGIwa)))
                           g$cv$28921$1XGIwa))
                       '#f))))
                 (g$hashtable-ref$20715$1XGIwa
                   g$ht$28920$1XGIwa
                   g$sym$28918$1XGIwa
                   '#f)))
              '#f)))
         (g$rib-cache$28211$1XGIwa g$rib$28917$1XGIwa)))))
   (g$extend-rib!$28220$1XGIwa
     g$extend-rib!$32228$1XGIwa
     (case-lambda
       ((g$rib$28924$1XGIwa
          g$id$28925$1XGIwa
          g$label$28926$1XGIwa
          g$sd?$28927$1XGIwa)
        (letrec* ((g$find$28928$1XGIwa
                    (case-lambda
                      ((g$sym$28937$1XGIwa
                         g$mark*$28938$1XGIwa
                         g$sym*$28939$1XGIwa
                         g$mark**$28940$1XGIwa
                         g$label*$28941$1XGIwa)
                       (if (pair? g$sym*$28939$1XGIwa)
                         (begin
                           '#f
                           (if (if (eq? g$sym$28937$1XGIwa
                                        (car g$sym*$28939$1XGIwa))
                                 (begin
                                   '#f
                                   (g$same-marks?$28261$1XGIwa
                                     g$mark*$28938$1XGIwa
                                     (car g$mark**$28940$1XGIwa)))
                                 '#f)
                             g$label*$28941$1XGIwa
                             (g$find$28928$1XGIwa
                               g$sym$28937$1XGIwa
                               g$mark*$28938$1XGIwa
                               (cdr g$sym*$28939$1XGIwa)
                               (cdr g$mark**$28940$1XGIwa)
                               (cdr g$label*$28941$1XGIwa))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$28210$1XGIwa g$rib$28924$1XGIwa)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$28924$1XGIwa)
              (void))
            ((case-lambda
               ((g$sym$28929$1XGIwa g$mark*$28930$1XGIwa)
                ((case-lambda
                   ((g$sym*$28931$1XGIwa)
                    ((case-lambda
                       ((g$t$28932$1XGIwa)
                        (if g$t$28932$1XGIwa
                          ((case-lambda
                             ((g$p$28933$1XGIwa)
                              (if (not (eq? g$label$28926$1XGIwa
                                            g$p$28933$1XGIwa))
                                (g$syntax-violation$28876$1XGIwa
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$28925$1XGIwa)
                                (void))))
                           g$t$28932$1XGIwa)
                          ((case-lambda
                             ((g$t$28934$1XGIwa)
                              (if g$t$28934$1XGIwa
                                ((case-lambda
                                   ((g$p$28935$1XGIwa)
                                    (if (not (eq? g$label$28926$1XGIwa
                                                  (car g$p$28935$1XGIwa)))
                                      (if (not g$sd?$28927$1XGIwa)
                                        (g$set-car!$22360$1XGIwa
                                          g$p$28935$1XGIwa
                                          g$label$28926$1XGIwa)
                                        (begin
                                          '#f
                                          (g$syntax-violation$28876$1XGIwa
                                            '#f
                                            '"multiple definitions of identifier"
                                            g$id$28925$1XGIwa)))
                                      (void))))
                                 g$t$28934$1XGIwa)
                                (begin
                                  '#f
                                  (if (g$rib-cache$28211$1XGIwa
                                        g$rib$28924$1XGIwa)
                                    (g$hashtable-update!$20719$1XGIwa
                                      (g$rib-cache$28211$1XGIwa
                                        g$rib$28924$1XGIwa)
                                      g$sym$28929$1XGIwa
                                      (case-lambda
                                        ((g$e$28936$1XGIwa)
                                         (cons
                                           (cons
                                             g$mark*$28930$1XGIwa
                                             g$label$28926$1XGIwa)
                                           g$e$28936$1XGIwa)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$28212$1XGIwa
                                    g$rib$28924$1XGIwa
                                    (cons
                                      g$sym$28929$1XGIwa
                                      g$sym*$28931$1XGIwa))
                                  (g$set-rib-mark**!$28213$1XGIwa
                                    g$rib$28924$1XGIwa
                                    (cons
                                      g$mark*$28930$1XGIwa
                                      (g$rib-mark**$28208$1XGIwa
                                        g$rib$28924$1XGIwa)))
                                  (g$set-rib-label*!$28214$1XGIwa
                                    g$rib$28924$1XGIwa
                                    (cons
                                      g$label$28926$1XGIwa
                                      (g$rib-label*$28209$1XGIwa
                                        g$rib$28924$1XGIwa)))))))
                           (if (g$memq$19653$1XGIwa
                                 g$sym$28929$1XGIwa
                                 (g$rib-sym*$28207$1XGIwa
                                   g$rib$28924$1XGIwa))
                             (begin
                               '#f
                               (g$find$28928$1XGIwa
                                 g$sym$28929$1XGIwa
                                 g$mark*$28930$1XGIwa
                                 g$sym*$28931$1XGIwa
                                 (g$rib-mark**$28208$1XGIwa
                                   g$rib$28924$1XGIwa)
                                 (g$rib-label*$28209$1XGIwa
                                   g$rib$28924$1XGIwa)))
                             '#f)))))
                     (g$find-label$28219$1XGIwa
                       g$rib$28924$1XGIwa
                       g$sym$28929$1XGIwa
                       g$mark*$28930$1XGIwa))))
                 (g$rib-sym*$28207$1XGIwa g$rib$28924$1XGIwa))))
             (g$id->sym$28260$1XGIwa g$id$28925$1XGIwa)
             (g$stx-mark*$28234$1XGIwa g$id$28925$1XGIwa)))))))
   (g$extend-rib/nc!$28221$1XGIwa
     g$extend-rib/nc!$32229$1XGIwa
     (case-lambda
       ((g$rib$28942$1XGIwa g$id$28943$1XGIwa g$label$28944$1XGIwa)
        ((case-lambda
           ((g$sym$28945$1XGIwa g$mark*$28946$1XGIwa)
            ((case-lambda
               ((g$sym*$28947$1XGIwa)
                (begin
                  (if (g$rib-cache$28211$1XGIwa g$rib$28942$1XGIwa)
                    (g$hashtable-update!$20719$1XGIwa
                      (g$rib-cache$28211$1XGIwa g$rib$28942$1XGIwa)
                      g$sym$28945$1XGIwa
                      (case-lambda
                        ((g$e$28948$1XGIwa)
                         (cons
                           (cons
                             g$mark*$28946$1XGIwa
                             g$label$28944$1XGIwa)
                           g$e$28948$1XGIwa)))
                      '())
                    (void))
                  (g$set-rib-sym*!$28212$1XGIwa
                    g$rib$28942$1XGIwa
                    (cons g$sym$28945$1XGIwa g$sym*$28947$1XGIwa))
                  (g$set-rib-mark**!$28213$1XGIwa
                    g$rib$28942$1XGIwa
                    (cons
                      g$mark*$28946$1XGIwa
                      (g$rib-mark**$28208$1XGIwa g$rib$28942$1XGIwa)))
                  (g$set-rib-label*!$28214$1XGIwa
                    g$rib$28942$1XGIwa
                    (cons
                      g$label$28944$1XGIwa
                      (g$rib-label*$28209$1XGIwa
                        g$rib$28942$1XGIwa))))))
             (g$rib-sym*$28207$1XGIwa g$rib$28942$1XGIwa))))
         (g$id->sym$28260$1XGIwa g$id$28943$1XGIwa)
         (g$stx-mark*$28234$1XGIwa g$id$28943$1XGIwa)))))
   (g$make-rib-map$28222$1XGIwa
     g$make-rib-map$32230$1XGIwa
     (case-lambda
       ((g$sym*$28949$1XGIwa)
        ((case-lambda
           ((g$ht$28950$1XGIwa)
            ((letrec ((g$f$28951$1XGIwa
                        (case-lambda
                          ((g$i$28952$1XGIwa g$sym*$28953$1XGIwa)
                           (if (null? g$sym*$28953$1XGIwa)
                             g$ht$28950$1XGIwa
                             (begin
                               (g$hashtable-update!$20719$1XGIwa
                                 g$ht$28950$1XGIwa
                                 (car g$sym*$28953$1XGIwa)
                                 (case-lambda
                                   ((g$x$28954$1XGIwa)
                                    (cons
                                      g$i$28952$1XGIwa
                                      g$x$28954$1XGIwa)))
                                 '())
                               (g$f$28951$1XGIwa
                                 (+ g$i$28952$1XGIwa '1)
                                 (cdr g$sym*$28953$1XGIwa))))))))
               g$f$28951$1XGIwa)
             '0
             g$sym*$28949$1XGIwa)))
         (g$make-eq-hashtable$20712$1XGIwa)))))
   (g$seal-rib!$28223$1XGIwa
     g$seal-rib!$32231$1XGIwa
     (case-lambda
       ((g$rib$28955$1XGIwa)
        ((case-lambda
           ((g$sym*$28956$1XGIwa)
            (if (not (null? g$sym*$28956$1XGIwa))
              (begin
                (g$set-rib-sym*!$28212$1XGIwa
                  g$rib$28955$1XGIwa
                  (g$list->vector$20600$1XGIwa g$sym*$28956$1XGIwa))
                (g$set-rib-mark**!$28213$1XGIwa
                  g$rib$28955$1XGIwa
                  (g$list->vector$20600$1XGIwa
                    (g$rib-mark**$28208$1XGIwa g$rib$28955$1XGIwa)))
                (g$set-rib-label*!$28214$1XGIwa
                  g$rib$28955$1XGIwa
                  (g$list->vector$20600$1XGIwa
                    (g$rib-label*$28209$1XGIwa g$rib$28955$1XGIwa)))
                (g$set-rib-sealed/freq!$28215$1XGIwa
                  g$rib$28955$1XGIwa
                  (g$make-rib-map$28222$1XGIwa g$sym*$28956$1XGIwa)))
              (void))))
         (g$rib-sym*$28207$1XGIwa g$rib$28955$1XGIwa)))))
   (g$unseal-rib!$28224$1XGIwa
     g$unseal-rib!$32232$1XGIwa
     (case-lambda
       ((g$rib$28957$1XGIwa)
        (if (g$rib-sealed/freq$28210$1XGIwa g$rib$28957$1XGIwa)
          (begin
            (g$set-rib-sealed/freq!$28215$1XGIwa g$rib$28957$1XGIwa '#f)
            (g$set-rib-sym*!$28212$1XGIwa
              g$rib$28957$1XGIwa
              (g$vector->list$20607$1XGIwa
                (g$rib-sym*$28207$1XGIwa g$rib$28957$1XGIwa)))
            (g$set-rib-mark**!$28213$1XGIwa
              g$rib$28957$1XGIwa
              (g$vector->list$20607$1XGIwa
                (g$rib-mark**$28208$1XGIwa g$rib$28957$1XGIwa)))
            (g$set-rib-label*!$28214$1XGIwa
              g$rib$28957$1XGIwa
              (g$vector->list$20607$1XGIwa
                (g$rib-label*$28209$1XGIwa g$rib$28957$1XGIwa))))
          (void)))))
   (g$make-full-rib$28225$1XGIwa
     g$make-full-rib$32233$1XGIwa
     (case-lambda
       ((g$id*$28958$1XGIwa g$label*$28959$1XGIwa)
        ((case-lambda
           ((g$r$28960$1XGIwa)
            (begin
              (g$seal-rib!$28223$1XGIwa g$r$28960$1XGIwa)
              g$r$28960$1XGIwa)))
         (g$make-rib$28206$1XGIwa
           (g$map$19661$1XGIwa
             g$id->sym$28260$1XGIwa
             g$id*$28958$1XGIwa)
           (g$map$19661$1XGIwa
             g$stx-mark*$28234$1XGIwa
             g$id*$28958$1XGIwa)
           g$label*$28959$1XGIwa
           '#f
           '#f)))))
   (g$10062$28226$1XGIwa
     g$10062$32234$1XGIwa
     (make-record-type-descriptor
       'stx
       '#f
       'g$10065$1XGIwa
       '#t
       '#t
       '#((mutable expr)
          (mutable mark*)
          (mutable subst*)
          (mutable ae*))))
   (g$10064$28227$1XGIwa g$10064$32235$1XGIwa '#f)
   (g$10063$28228$1XGIwa
     g$10063$32236$1XGIwa
     (make-record-constructor-descriptor
       g$10062$28226$1XGIwa
       '#f
       g$10064$28227$1XGIwa))
   (g$stx?$28231$1XGIwa
     g$stx?$32237$1XGIwa
     (record-predicate g$10062$28226$1XGIwa))
   (g$make-stx$28232$1XGIwa
     g$make-stx$32238$1XGIwa
     (record-constructor g$10063$28228$1XGIwa))
   (g$stx-expr$28233$1XGIwa
     g$stx-expr$32239$1XGIwa
     (record-accessor g$10062$28226$1XGIwa '0))
   (g$stx-mark*$28234$1XGIwa
     g$stx-mark*$32240$1XGIwa
     (record-accessor g$10062$28226$1XGIwa '1))
   (g$stx-subst*$28235$1XGIwa
     g$stx-subst*$32241$1XGIwa
     (record-accessor g$10062$28226$1XGIwa '2))
   (g$stx-ae*$28236$1XGIwa
     g$stx-ae*$32242$1XGIwa
     (record-accessor g$10062$28226$1XGIwa '3))
   (g$set-stx-expr!$28237$1XGIwa
     g$set-stx-expr!$32243$1XGIwa
     (record-mutator g$10062$28226$1XGIwa '0))
   (g$set-stx-mark*!$28238$1XGIwa
     g$set-stx-mark*!$32244$1XGIwa
     (record-mutator g$10062$28226$1XGIwa '1))
   (g$set-stx-subst*!$28239$1XGIwa
     g$set-stx-subst*!$32245$1XGIwa
     (record-mutator g$10062$28226$1XGIwa '2))
   (g$set-stx-ae*!$28240$1XGIwa
     g$set-stx-ae*!$32246$1XGIwa
     (record-mutator g$10062$28226$1XGIwa '3))
   (g$rp$28241$1XGIwa
     g$rp$32247$1XGIwa
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$28961$1XGIwa g$p$28962$1XGIwa g$wr$28963$1XGIwa)
          (begin
            (display '"#<syntax " g$p$28962$1XGIwa)
            (write
              (g$stx->datum$28270$1XGIwa g$x$28961$1XGIwa)
              g$p$28962$1XGIwa)
            ((case-lambda
               ((g$expr$28964$1XGIwa)
                (if (annotation? g$expr$28964$1XGIwa)
                  ((case-lambda
                     ((g$src$28965$1XGIwa)
                      (if (pair? g$src$28965$1XGIwa)
                        (begin
                          (display '" (" g$p$28962$1XGIwa)
                          (display
                            (cdr g$src$28965$1XGIwa)
                            g$p$28962$1XGIwa)
                          (display '" of " g$p$28962$1XGIwa)
                          (display
                            (car g$src$28965$1XGIwa)
                            g$p$28962$1XGIwa)
                          (display '")" g$p$28962$1XGIwa))
                        (void))))
                   (annotation-source g$expr$28964$1XGIwa))
                  (void))))
             (g$stx-expr$28233$1XGIwa g$x$28961$1XGIwa))
            (display '">" g$p$28962$1XGIwa))))))
   (g$datum->stx$28242$1XGIwa
     g$datum->stx$32248$1XGIwa
     (case-lambda
       ((g$id$28966$1XGIwa g$datum$28967$1XGIwa)
        (g$make-stx$28232$1XGIwa
          g$datum$28967$1XGIwa
          (g$stx-mark*$28234$1XGIwa g$id$28966$1XGIwa)
          (g$stx-subst*$28235$1XGIwa g$id$28966$1XGIwa)
          (g$stx-ae*$28236$1XGIwa g$id$28966$1XGIwa)))))
   (g$gen-mark$28243$1XGIwa
     g$gen-mark$32249$1XGIwa
     (case-lambda (() (g$string$20587$1XGIwa '#\m))))
   (g$anti-mark$28244$1XGIwa g$anti-mark$32250$1XGIwa '#f)
   (g$anti-mark?$28245$1XGIwa g$anti-mark?$32251$1XGIwa not)
   (g$join-wraps$28246$1XGIwa
     g$join-wraps$32252$1XGIwa
     (case-lambda
       ((g$m1*$28968$1XGIwa
          g$s1*$28969$1XGIwa
          g$ae1*$28970$1XGIwa
          g$e$28971$1XGIwa)
        (letrec* ((g$cancel$28972$1XGIwa
                    (case-lambda
                      ((g$ls1$28976$1XGIwa g$ls2$28977$1XGIwa)
                       ((letrec ((g$f$28978$1XGIwa
                                   (case-lambda
                                     ((g$x$28979$1XGIwa
                                        g$ls1$28980$1XGIwa)
                                      (if (null? g$ls1$28980$1XGIwa)
                                        (cdr g$ls2$28977$1XGIwa)
                                        (cons
                                          g$x$28979$1XGIwa
                                          (g$f$28978$1XGIwa
                                            (car g$ls1$28980$1XGIwa)
                                            (cdr g$ls1$28980$1XGIwa))))))))
                          g$f$28978$1XGIwa)
                        (car g$ls1$28976$1XGIwa)
                        (cdr g$ls1$28976$1XGIwa))))))
          ((case-lambda
             ((g$m2*$28973$1XGIwa
                g$s2*$28974$1XGIwa
                g$ae2*$28975$1XGIwa)
              (if (if (not (null? g$m1*$28968$1XGIwa))
                    (if (not (null? g$m2*$28973$1XGIwa))
                      (begin
                        '#f
                        (g$anti-mark?$28245$1XGIwa
                          (car g$m2*$28973$1XGIwa)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$28972$1XGIwa
                    g$m1*$28968$1XGIwa
                    g$m2*$28973$1XGIwa)
                  (g$cancel$28972$1XGIwa
                    g$s1*$28969$1XGIwa
                    g$s2*$28974$1XGIwa)
                  (g$cancel$28972$1XGIwa
                    g$ae1*$28970$1XGIwa
                    g$ae2*$28975$1XGIwa))
                (values
                  (append g$m1*$28968$1XGIwa g$m2*$28973$1XGIwa)
                  (append g$s1*$28969$1XGIwa g$s2*$28974$1XGIwa)
                  (append g$ae1*$28970$1XGIwa g$ae2*$28975$1XGIwa)))))
           (g$stx-mark*$28234$1XGIwa g$e$28971$1XGIwa)
           (g$stx-subst*$28235$1XGIwa g$e$28971$1XGIwa)
           (g$stx-ae*$28236$1XGIwa g$e$28971$1XGIwa))))))
   (g$mkstx$28247$1XGIwa
     g$mkstx$32253$1XGIwa
     (case-lambda
       ((g$e$28981$1XGIwa
          g$m*$28982$1XGIwa
          g$s*$28983$1XGIwa
          g$ae*$28984$1XGIwa)
        (if (if (g$stx?$28231$1XGIwa g$e$28981$1XGIwa)
              (begin
                '#f
                (not (g$top-marked?$28193$1XGIwa g$m*$28982$1XGIwa)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$28246$1XGIwa
                 g$m*$28982$1XGIwa
                 g$s*$28983$1XGIwa
                 g$ae*$28984$1XGIwa
                 g$e$28981$1XGIwa)))
            (case-lambda
              ((g$m*$28988$1XGIwa g$s*$28989$1XGIwa g$ae*$28990$1XGIwa)
               ((case-lambda
                  ((g$ae*$28991$1XGIwa
                     g$s*$28992$1XGIwa
                     g$m*$28993$1XGIwa)
                   (g$make-stx$28232$1XGIwa
                     (g$stx-expr$28233$1XGIwa g$e$28981$1XGIwa)
                     g$m*$28993$1XGIwa
                     g$s*$28992$1XGIwa
                     g$ae*$28991$1XGIwa)))
                g$ae*$28990$1XGIwa
                g$s*$28989$1XGIwa
                g$m*$28988$1XGIwa))))
          (g$make-stx$28232$1XGIwa
            g$e$28981$1XGIwa
            g$m*$28982$1XGIwa
            g$s*$28983$1XGIwa
            g$ae*$28984$1XGIwa)))))
   (g$add-mark$28248$1XGIwa
     g$add-mark$32254$1XGIwa
     (case-lambda
       ((g$m$28994$1XGIwa g$e$28995$1XGIwa g$ae$28996$1XGIwa)
        (g$mkstx$28247$1XGIwa
          g$e$28995$1XGIwa
          (list g$m$28994$1XGIwa)
          '(shift)
          (list g$ae$28996$1XGIwa)))))
   (g$add-subst$28249$1XGIwa
     g$add-subst$32255$1XGIwa
     (case-lambda
       ((g$subst$28997$1XGIwa g$e$28998$1XGIwa)
        (g$mkstx$28247$1XGIwa
          g$e$28998$1XGIwa
          '()
          (list g$subst$28997$1XGIwa)
          '()))))
   (g$syntax-kind?$28250$1XGIwa
     g$syntax-kind?$32256$1XGIwa
     (case-lambda
       ((g$x$28999$1XGIwa g$p?$29000$1XGIwa)
        (if (g$stx?$28231$1XGIwa g$x$28999$1XGIwa)
          (g$syntax-kind?$28250$1XGIwa
            (g$stx-expr$28233$1XGIwa g$x$28999$1XGIwa)
            g$p?$29000$1XGIwa)
          (if (annotation? g$x$28999$1XGIwa)
            (g$syntax-kind?$28250$1XGIwa
              (annotation-expression g$x$28999$1XGIwa)
              g$p?$29000$1XGIwa)
            (begin '#f (g$p?$29000$1XGIwa g$x$28999$1XGIwa)))))))
   (g$syntax-vector->list$28251$1XGIwa
     g$syntax-vector->list$32257$1XGIwa
     (case-lambda
       ((g$x$29001$1XGIwa)
        (if (g$stx?$28231$1XGIwa g$x$29001$1XGIwa)
          ((case-lambda
             ((g$ls$29002$1XGIwa
                g$m*$29003$1XGIwa
                g$s*$29004$1XGIwa
                g$ae*$29005$1XGIwa)
              (g$map$19661$1XGIwa
                (case-lambda
                  ((g$x$29006$1XGIwa)
                   (g$mkstx$28247$1XGIwa
                     g$x$29006$1XGIwa
                     g$m*$29003$1XGIwa
                     g$s*$29004$1XGIwa
                     g$ae*$29005$1XGIwa)))
                g$ls$29002$1XGIwa)))
           (g$syntax-vector->list$28251$1XGIwa
             (g$stx-expr$28233$1XGIwa g$x$29001$1XGIwa))
           (g$stx-mark*$28234$1XGIwa g$x$29001$1XGIwa)
           (g$stx-subst*$28235$1XGIwa g$x$29001$1XGIwa)
           (g$stx-ae*$28236$1XGIwa g$x$29001$1XGIwa))
          (if (annotation? g$x$29001$1XGIwa)
            (g$syntax-vector->list$28251$1XGIwa
              (annotation-expression g$x$29001$1XGIwa))
            (if (g$vector?$20571$1XGIwa g$x$29001$1XGIwa)
              (g$vector->list$20607$1XGIwa g$x$29001$1XGIwa)
              (begin
                '#f
                (assertion-violation
                  'syntax-vector->list
                  '"BUG: not a syntax vector"
                  g$x$29001$1XGIwa))))))))
   (g$syntax-pair?$28252$1XGIwa
     g$syntax-pair?$32258$1XGIwa
     (case-lambda
       ((g$x$29007$1XGIwa)
        (g$syntax-kind?$28250$1XGIwa g$x$29007$1XGIwa pair?))))
   (g$syntax-vector?$28253$1XGIwa
     g$syntax-vector?$32259$1XGIwa
     (case-lambda
       ((g$x$29008$1XGIwa)
        (g$syntax-kind?$28250$1XGIwa
          g$x$29008$1XGIwa
          g$vector?$20571$1XGIwa))))
   (g$syntax-null?$28254$1XGIwa
     g$syntax-null?$32260$1XGIwa
     (case-lambda
       ((g$x$29009$1XGIwa)
        (g$syntax-kind?$28250$1XGIwa g$x$29009$1XGIwa null?))))
   (g$syntax-list?$28255$1XGIwa
     g$syntax-list?$32261$1XGIwa
     (case-lambda
       ((g$x$29010$1XGIwa)
        ((case-lambda
           ((g$t$29011$1XGIwa)
            (if g$t$29011$1XGIwa
              g$t$29011$1XGIwa
              (begin
                '#f
                (if (g$syntax-pair?$28252$1XGIwa g$x$29010$1XGIwa)
                  (begin
                    '#f
                    (g$syntax-list?$28255$1XGIwa
                      (g$syntax-cdr$28257$1XGIwa g$x$29010$1XGIwa)))
                  '#f)))))
         (g$syntax-null?$28254$1XGIwa g$x$29010$1XGIwa)))))
   (g$syntax-car$28256$1XGIwa
     g$syntax-car$32262$1XGIwa
     (case-lambda
       ((g$x$29012$1XGIwa)
        (if (g$stx?$28231$1XGIwa g$x$29012$1XGIwa)
          (g$mkstx$28247$1XGIwa
            (g$syntax-car$28256$1XGIwa
              (g$stx-expr$28233$1XGIwa g$x$29012$1XGIwa))
            (g$stx-mark*$28234$1XGIwa g$x$29012$1XGIwa)
            (g$stx-subst*$28235$1XGIwa g$x$29012$1XGIwa)
            (g$stx-ae*$28236$1XGIwa g$x$29012$1XGIwa))
          (if (annotation? g$x$29012$1XGIwa)
            (g$syntax-car$28256$1XGIwa
              (annotation-expression g$x$29012$1XGIwa))
            (if (pair? g$x$29012$1XGIwa)
              (car g$x$29012$1XGIwa)
              (begin
                '#f
                (assertion-violation
                  'syntax-car
                  '"BUG: not a pair"
                  g$x$29012$1XGIwa))))))))
   (g$syntax-cdr$28257$1XGIwa
     g$syntax-cdr$32263$1XGIwa
     (case-lambda
       ((g$x$29013$1XGIwa)
        (if (g$stx?$28231$1XGIwa g$x$29013$1XGIwa)
          (g$mkstx$28247$1XGIwa
            (g$syntax-cdr$28257$1XGIwa
              (g$stx-expr$28233$1XGIwa g$x$29013$1XGIwa))
            (g$stx-mark*$28234$1XGIwa g$x$29013$1XGIwa)
            (g$stx-subst*$28235$1XGIwa g$x$29013$1XGIwa)
            (g$stx-ae*$28236$1XGIwa g$x$29013$1XGIwa))
          (if (annotation? g$x$29013$1XGIwa)
            (g$syntax-cdr$28257$1XGIwa
              (annotation-expression g$x$29013$1XGIwa))
            (if (pair? g$x$29013$1XGIwa)
              (cdr g$x$29013$1XGIwa)
              (begin
                '#f
                (assertion-violation
                  'syntax-cdr
                  '"BUG: not a pair"
                  g$x$29013$1XGIwa))))))))
   (g$syntax->list$28258$1XGIwa
     g$syntax->list$32264$1XGIwa
     (case-lambda
       ((g$x$29014$1XGIwa)
        (if (g$syntax-pair?$28252$1XGIwa g$x$29014$1XGIwa)
          (cons
            (g$syntax-car$28256$1XGIwa g$x$29014$1XGIwa)
            (g$syntax->list$28258$1XGIwa
              (g$syntax-cdr$28257$1XGIwa g$x$29014$1XGIwa)))
          (if (g$syntax-null?$28254$1XGIwa g$x$29014$1XGIwa)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$29014$1XGIwa))))))
   (g$id?$28259$1XGIwa
     g$id?$32265$1XGIwa
     (case-lambda
       ((g$x$29015$1XGIwa)
        (if (g$stx?$28231$1XGIwa g$x$29015$1XGIwa)
          (begin
            '#f
            ((case-lambda
               ((g$expr$29016$1XGIwa)
                (g$symbol?$20573$1XGIwa
                  (if (annotation? g$expr$29016$1XGIwa)
                    (annotation-stripped g$expr$29016$1XGIwa)
                    g$expr$29016$1XGIwa))))
             (g$stx-expr$28233$1XGIwa g$x$29015$1XGIwa)))
          '#f))))
   (g$id->sym$28260$1XGIwa
     g$id->sym$32266$1XGIwa
     (case-lambda
       ((g$x$29017$1XGIwa)
        (begin
          (if (not (g$stx?$28231$1XGIwa g$x$29017$1XGIwa))
            (error
              'id->sym
              '"BUG in ikarus: not an id"
              g$x$29017$1XGIwa)
            (void))
          ((case-lambda
             ((g$expr$29018$1XGIwa)
              ((case-lambda
                 ((g$sym$29019$1XGIwa)
                  (if (g$symbol?$20573$1XGIwa g$sym$29019$1XGIwa)
                    g$sym$29019$1XGIwa
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$29017$1XGIwa))))
               (if (annotation? g$expr$29018$1XGIwa)
                 (annotation-stripped g$expr$29018$1XGIwa)
                 g$expr$29018$1XGIwa))))
           (g$stx-expr$28233$1XGIwa g$x$29017$1XGIwa))))))
   (g$same-marks?$28261$1XGIwa
     g$same-marks?$32267$1XGIwa
     (case-lambda
       ((g$x$29020$1XGIwa g$y$29021$1XGIwa)
        ((case-lambda
           ((g$t$29022$1XGIwa)
            (if g$t$29022$1XGIwa
              g$t$29022$1XGIwa
              (begin
                '#f
                (if (pair? g$x$29020$1XGIwa)
                  (if (pair? g$y$29021$1XGIwa)
                    (if (eq? (car g$x$29020$1XGIwa)
                             (car g$y$29021$1XGIwa))
                      (begin
                        '#f
                        (g$same-marks?$28261$1XGIwa
                          (cdr g$x$29020$1XGIwa)
                          (cdr g$y$29021$1XGIwa)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$29020$1XGIwa)
           (begin '#f (null? g$y$29021$1XGIwa))
           '#f)))))
   (g$bound-id=?$28262$1XGIwa
     g$bound-id=?$32268$1XGIwa
     (case-lambda
       ((g$x$29023$1XGIwa g$y$29024$1XGIwa)
        (if (eq? (g$id->sym$28260$1XGIwa g$x$29023$1XGIwa)
                 (g$id->sym$28260$1XGIwa g$y$29024$1XGIwa))
          (begin
            '#f
            (g$same-marks?$28261$1XGIwa
              (g$stx-mark*$28234$1XGIwa g$x$29023$1XGIwa)
              (g$stx-mark*$28234$1XGIwa g$y$29024$1XGIwa)))
          '#f))))
   (g$free-id=?$28263$1XGIwa
     g$free-id=?$32269$1XGIwa
     (case-lambda
       ((g$i$29025$1XGIwa g$j$29026$1XGIwa)
        ((case-lambda
           ((g$t0$29027$1XGIwa g$t1$29028$1XGIwa)
            (if ((case-lambda
                   ((g$t$29029$1XGIwa)
                    (if g$t$29029$1XGIwa
                      g$t$29029$1XGIwa
                      (begin '#f g$t1$29028$1XGIwa))))
                 g$t0$29027$1XGIwa)
              (eq? g$t0$29027$1XGIwa g$t1$29028$1XGIwa)
              (eq? (g$id->sym$28260$1XGIwa g$i$29025$1XGIwa)
                   (g$id->sym$28260$1XGIwa g$j$29026$1XGIwa)))))
         (g$id->real-label$28273$1XGIwa g$i$29025$1XGIwa)
         (g$id->real-label$28273$1XGIwa g$j$29026$1XGIwa)))))
   (g$valid-bound-ids?$28264$1XGIwa
     g$valid-bound-ids?$32270$1XGIwa
     (case-lambda
       ((g$id*$29030$1XGIwa)
        (if (g$for-all$19659$1XGIwa
              g$id?$28259$1XGIwa
              g$id*$29030$1XGIwa)
          (begin
            '#f
            (g$distinct-bound-ids?$28265$1XGIwa g$id*$29030$1XGIwa))
          '#f))))
   (g$distinct-bound-ids?$28265$1XGIwa
     g$distinct-bound-ids?$32271$1XGIwa
     (case-lambda
       ((g$id*$29031$1XGIwa)
        ((case-lambda
           ((g$t$29032$1XGIwa)
            (if g$t$29032$1XGIwa
              g$t$29032$1XGIwa
              (begin
                '#f
                (if (not (g$bound-id-member?$28266$1XGIwa
                           (car g$id*$29031$1XGIwa)
                           (cdr g$id*$29031$1XGIwa)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$28265$1XGIwa
                      (cdr g$id*$29031$1XGIwa)))
                  '#f)))))
         (null? g$id*$29031$1XGIwa)))))
   (g$bound-id-member?$28266$1XGIwa
     g$bound-id-member?$32272$1XGIwa
     (case-lambda
       ((g$id$29033$1XGIwa g$id*$29034$1XGIwa)
        (if (pair? g$id*$29034$1XGIwa)
          (begin
            '#f
            ((case-lambda
               ((g$t$29035$1XGIwa)
                (if g$t$29035$1XGIwa
                  g$t$29035$1XGIwa
                  (begin
                    '#f
                    (g$bound-id-member?$28266$1XGIwa
                      g$id$29033$1XGIwa
                      (cdr g$id*$29034$1XGIwa))))))
             (g$bound-id=?$28262$1XGIwa
               g$id$29033$1XGIwa
               (car g$id*$29034$1XGIwa))))
          '#f))))
   (g$self-evaluating?$28267$1XGIwa
     g$self-evaluating?$32273$1XGIwa
     (case-lambda
       ((g$x$29036$1XGIwa)
        ((case-lambda
           ((g$t$29037$1XGIwa)
            (if g$t$29037$1XGIwa
              g$t$29037$1XGIwa
              ((case-lambda
                 ((g$t$29038$1XGIwa)
                  (if g$t$29038$1XGIwa
                    g$t$29038$1XGIwa
                    ((case-lambda
                       ((g$t$29039$1XGIwa)
                        (if g$t$29039$1XGIwa
                          g$t$29039$1XGIwa
                          ((case-lambda
                             ((g$t$29040$1XGIwa)
                              (if g$t$29040$1XGIwa
                                g$t$29040$1XGIwa
                                (begin
                                  '#f
                                  (g$bytevector?$20572$1XGIwa
                                    g$x$29036$1XGIwa)))))
                           (g$boolean?$20574$1XGIwa
                             g$x$29036$1XGIwa)))))
                     (g$char?$20570$1XGIwa g$x$29036$1XGIwa)))))
               (g$string?$20569$1XGIwa g$x$29036$1XGIwa)))))
         (g$number?$21603$1XGIwa g$x$29036$1XGIwa)))))
   (g$strip-annotations$28268$1XGIwa
     g$strip-annotations$32274$1XGIwa
     (case-lambda
       ((g$x$29041$1XGIwa)
        (if (pair? g$x$29041$1XGIwa)
          (cons
            (g$strip-annotations$28268$1XGIwa (car g$x$29041$1XGIwa))
            (g$strip-annotations$28268$1XGIwa (cdr g$x$29041$1XGIwa)))
          (if (g$vector?$20571$1XGIwa g$x$29041$1XGIwa)
            (g$vector-map$20663$1XGIwa
              g$strip-annotations$28268$1XGIwa
              g$x$29041$1XGIwa)
            (if (annotation? g$x$29041$1XGIwa)
              (annotation-stripped g$x$29041$1XGIwa)
              (begin '#f g$x$29041$1XGIwa)))))))
   (g$strip$28269$1XGIwa
     g$strip$32275$1XGIwa
     (case-lambda
       ((g$x$29042$1XGIwa g$m*$29043$1XGIwa)
        (if (g$top-marked?$28193$1XGIwa g$m*$29043$1XGIwa)
          (if ((case-lambda
                 ((g$t$29044$1XGIwa)
                  (if g$t$29044$1XGIwa
                    g$t$29044$1XGIwa
                    ((case-lambda
                       ((g$t$29045$1XGIwa)
                        (if g$t$29045$1XGIwa
                          g$t$29045$1XGIwa
                          (begin
                            '#f
                            (if (g$vector?$20571$1XGIwa
                                  g$x$29042$1XGIwa)
                              (if (g$>$21628$1XGIwa
                                    (g$vector-length$20605$1XGIwa
                                      g$x$29042$1XGIwa)
                                    '0)
                                (begin
                                  '#f
                                  (annotation?
                                    (g$vector-ref$20602$1XGIwa
                                      g$x$29042$1XGIwa
                                      '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$29042$1XGIwa)
                       (begin '#f (annotation? (car g$x$29042$1XGIwa)))
                       '#f)))))
               (annotation? g$x$29042$1XGIwa))
            (g$strip-annotations$28268$1XGIwa g$x$29042$1XGIwa)
            g$x$29042$1XGIwa)
          ((letrec ((g$f$29046$1XGIwa
                      (case-lambda
                        ((g$x$29047$1XGIwa)
                         (if (g$stx?$28231$1XGIwa g$x$29047$1XGIwa)
                           (g$strip$28269$1XGIwa
                             (g$stx-expr$28233$1XGIwa g$x$29047$1XGIwa)
                             (g$stx-mark*$28234$1XGIwa
                               g$x$29047$1XGIwa))
                           (if (annotation? g$x$29047$1XGIwa)
                             (annotation-stripped g$x$29047$1XGIwa)
                             (if (pair? g$x$29047$1XGIwa)
                               ((case-lambda
                                  ((g$a$29048$1XGIwa g$d$29049$1XGIwa)
                                   (if (if (eq? g$a$29048$1XGIwa
                                                (car g$x$29047$1XGIwa))
                                         (begin
                                           '#f
                                           (eq? g$d$29049$1XGIwa
                                                (cdr g$x$29047$1XGIwa)))
                                         '#f)
                                     g$x$29047$1XGIwa
                                     (cons
                                       g$a$29048$1XGIwa
                                       g$d$29049$1XGIwa))))
                                (g$f$29046$1XGIwa
                                  (car g$x$29047$1XGIwa))
                                (g$f$29046$1XGIwa
                                  (cdr g$x$29047$1XGIwa)))
                               (if (g$vector?$20571$1XGIwa
                                     g$x$29047$1XGIwa)
                                 ((case-lambda
                                    ((g$old$29050$1XGIwa)
                                     ((case-lambda
                                        ((g$new$29051$1XGIwa)
                                         (if (g$for-all$19659$1XGIwa
                                               eq?
                                               g$old$29050$1XGIwa
                                               g$new$29051$1XGIwa)
                                           g$x$29047$1XGIwa
                                           (g$list->vector$20600$1XGIwa
                                             g$new$29051$1XGIwa))))
                                      (g$map$19661$1XGIwa
                                        g$f$29046$1XGIwa
                                        g$old$29050$1XGIwa))))
                                  (g$vector->list$20607$1XGIwa
                                    g$x$29047$1XGIwa))
                                 (begin '#f g$x$29047$1XGIwa)))))))))
             g$f$29046$1XGIwa)
           g$x$29042$1XGIwa)))))
   (g$stx->datum$28270$1XGIwa
     g$stx->datum$32276$1XGIwa
     (case-lambda
       ((g$x$29052$1XGIwa)
        (g$strip$28269$1XGIwa g$x$29052$1XGIwa '()))))
   (g$same-marks*?$28271$1XGIwa
     g$same-marks*?$32277$1XGIwa
     (case-lambda
       ((g$mark*$29053$1XGIwa g$mark**$29054$1XGIwa g$si$29055$1XGIwa)
        (if (null? g$si$29055$1XGIwa)
          '#f
          (if (g$same-marks?$28261$1XGIwa
                g$mark*$29053$1XGIwa
                (g$vector-ref$20602$1XGIwa
                  g$mark**$29054$1XGIwa
                  (car g$si$29055$1XGIwa)))
            (car g$si$29055$1XGIwa)
            (g$same-marks*?$28271$1XGIwa
              g$mark*$29053$1XGIwa
              g$mark**$29054$1XGIwa
              (cdr g$si$29055$1XGIwa)))))))
   (g$id->label$28272$1XGIwa
     g$id->label$32278$1XGIwa
     (case-lambda
       ((g$id$29056$1XGIwa)
        ((case-lambda
           ((g$t$29057$1XGIwa)
            (if g$t$29057$1XGIwa
              g$t$29057$1XGIwa
              (begin
                '#f
                ((case-lambda
                   ((g$t$29058$1XGIwa)
                    (if g$t$29058$1XGIwa
                      ((case-lambda
                         ((g$env$29059$1XGIwa)
                          ((case-lambda
                             ((g$rib$29060$1XGIwa)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$28198$1XGIwa
                                     g$id$29056$1XGIwa
                                     g$rib$29060$1XGIwa
                                     '#f)))
                                (case-lambda
                                  ((g$lab$29063$1XGIwa
                                     g$_loc$29064$1XGIwa)
                                   ((case-lambda
                                      ((g$_loc$29065$1XGIwa
                                         g$lab$29066$1XGIwa)
                                       (begin
                                         (g$extend-rib!$28220$1XGIwa
                                           g$rib$29060$1XGIwa
                                           g$id$29056$1XGIwa
                                           g$lab$29066$1XGIwa
                                           '#t)
                                         g$lab$29066$1XGIwa)))
                                    g$_loc$29064$1XGIwa
                                    g$lab$29063$1XGIwa))))))
                           (g$interaction-env-rib$28842$1XGIwa
                             g$env$29059$1XGIwa))))
                       g$t$29058$1XGIwa)
                      (begin '#f '#f))))
                 (g$top-level-context$28884$1XGIwa))))))
         (g$id->real-label$28273$1XGIwa g$id$29056$1XGIwa)))))
   (g$id->real-label$28273$1XGIwa
     g$id->real-label$32279$1XGIwa
     (case-lambda
       ((g$id$29067$1XGIwa)
        ((case-lambda
           ((g$sym$29068$1XGIwa)
            ((letrec ((g$search$29069$1XGIwa
                        (case-lambda
                          ((g$subst*$29070$1XGIwa g$mark*$29071$1XGIwa)
                           (if (null? g$subst*$29070$1XGIwa)
                             '#f
                             (if (eq? (car g$subst*$29070$1XGIwa)
                                      'shift)
                               (g$search$29069$1XGIwa
                                 (cdr g$subst*$29070$1XGIwa)
                                 (cdr g$mark*$29071$1XGIwa))
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rib$29072$1XGIwa)
                                     ((case-lambda
                                        ((g$t$29073$1XGIwa)
                                         (if g$t$29073$1XGIwa
                                           ((case-lambda
                                              ((g$ht$29074$1XGIwa)
                                               ((case-lambda
                                                  ((g$si$29075$1XGIwa)
                                                   ((case-lambda
                                                      ((g$i$29076$1XGIwa)
                                                       (if g$i$29076$1XGIwa
                                                         (g$vector-ref$20602$1XGIwa
                                                           (g$rib-label*$28209$1XGIwa
                                                             g$rib$29072$1XGIwa)
                                                           g$i$29076$1XGIwa)
                                                         (g$search$29069$1XGIwa
                                                           (cdr g$subst*$29070$1XGIwa)
                                                           g$mark*$29071$1XGIwa))))
                                                    (if g$si$29075$1XGIwa
                                                      (begin
                                                        '#f
                                                        (g$same-marks*?$28271$1XGIwa
                                                          g$mark*$29071$1XGIwa
                                                          (g$rib-mark**$28208$1XGIwa
                                                            g$rib$29072$1XGIwa)
                                                          (g$reverse$20609$1XGIwa
                                                            g$si$29075$1XGIwa)))
                                                      '#f))))
                                                (g$hashtable-ref$20715$1XGIwa
                                                  g$ht$29074$1XGIwa
                                                  g$sym$29068$1XGIwa
                                                  '#f))))
                                            g$t$29073$1XGIwa)
                                           ((case-lambda
                                              ((g$t$29077$1XGIwa)
                                               (if g$t$29077$1XGIwa
                                                 g$t$29077$1XGIwa
                                                 (begin
                                                   '#f
                                                   (begin
                                                     '#f
                                                     ((letrec ((g$f$29078$1XGIwa
                                                                 (case-lambda
                                                                   ((g$sym*$29079$1XGIwa
                                                                      g$mark**$29080$1XGIwa
                                                                      g$label*$29081$1XGIwa)
                                                                    (if (null?
                                                                          g$sym*$29079$1XGIwa)
                                                                      (g$search$29069$1XGIwa
                                                                        (cdr g$subst*$29070$1XGIwa)
                                                                        g$mark*$29071$1XGIwa)
                                                                      (if (if (eq? (car g$sym*$29079$1XGIwa)
                                                                                   g$sym$29068$1XGIwa)
                                                                            (begin
                                                                              '#f
                                                                              (g$same-marks?$28261$1XGIwa
                                                                                (car g$mark**$29080$1XGIwa)
                                                                                g$mark*$29071$1XGIwa))
                                                                            '#f)
                                                                        (car g$label*$29081$1XGIwa)
                                                                        (begin
                                                                          '#f
                                                                          (g$f$29078$1XGIwa
                                                                            (cdr g$sym*$29079$1XGIwa)
                                                                            (cdr g$mark**$29080$1XGIwa)
                                                                            (cdr g$label*$29081$1XGIwa)))))))))
                                                        g$f$29078$1XGIwa)
                                                      (g$rib-sym*$28207$1XGIwa
                                                        g$rib$29072$1XGIwa)
                                                      (g$rib-mark**$28208$1XGIwa
                                                        g$rib$29072$1XGIwa)
                                                      (g$rib-label*$28209$1XGIwa
                                                        g$rib$29072$1XGIwa)))))))
                                            (g$find-label$28219$1XGIwa
                                              g$rib$29072$1XGIwa
                                              g$sym$29068$1XGIwa
                                              g$mark*$29071$1XGIwa)))))
                                      (g$rib-sealed/freq$28210$1XGIwa
                                        g$rib$29072$1XGIwa))))
                                  (car g$subst*$29070$1XGIwa)))))))))
               g$search$29069$1XGIwa)
             (g$stx-subst*$28235$1XGIwa g$id$29067$1XGIwa)
             (g$stx-mark*$28234$1XGIwa g$id$29067$1XGIwa))))
         (g$id->sym$28260$1XGIwa g$id$29067$1XGIwa)))))
   (g$label->binding$28274$1XGIwa
     g$label->binding$32280$1XGIwa
     (case-lambda
       ((g$x$29082$1XGIwa g$r$29083$1XGIwa)
        (if (not g$x$29082$1XGIwa)
          '(displaced-lexical)
          ((case-lambda
             ((g$t$29084$1XGIwa)
              (if g$t$29084$1XGIwa
                ((case-lambda
                   ((g$b$29085$1XGIwa)
                    (if (if (pair? g$b$29085$1XGIwa)
                          (begin
                            '#f
                            (eq? (car g$b$29085$1XGIwa) '$core-rtd))
                          '#f)
                      (cons
                        '$rtd
                        (g$map$19661$1XGIwa
                          g$bless$28720$1XGIwa
                          (cdr g$b$29085$1XGIwa)))
                      (if (if (pair? g$b$29085$1XGIwa)
                            (begin
                              '#f
                              (eq? (car g$b$29085$1XGIwa) 'global-rtd))
                            '#f)
                        ((case-lambda
                           ((g$lib$29086$1XGIwa g$loc$29087$1XGIwa)
                            (cons
                              '$rtd
                              (symbol-value g$loc$29087$1XGIwa))))
                         (g$cadr$20611$1XGIwa g$b$29085$1XGIwa)
                         (g$cddr$20613$1XGIwa g$b$29085$1XGIwa))
                        (begin '#f g$b$29085$1XGIwa)))))
                 g$t$29084$1XGIwa)
                ((case-lambda
                   ((g$t$29088$1XGIwa)
                    (if g$t$29088$1XGIwa
                      (cdr g$t$29088$1XGIwa)
                      ((case-lambda
                         ((g$t$29089$1XGIwa)
                          (if g$t$29089$1XGIwa
                            ((case-lambda
                               ((g$env$29090$1XGIwa)
                                ((case-lambda
                                   ((g$t$29091$1XGIwa)
                                    (if g$t$29091$1XGIwa
                                      ((case-lambda
                                         ((g$p$29092$1XGIwa)
                                          (g$cons*$19663$1XGIwa
                                            'lexical
                                            (cdr g$p$29092$1XGIwa)
                                            '#f)))
                                       g$t$29091$1XGIwa)
                                      (begin
                                        '#f
                                        '(displaced-lexical . #f)))))
                                 (g$assq$19649$1XGIwa
                                   g$x$29082$1XGIwa
                                   (g$interaction-env-locs$28844$1XGIwa
                                     g$env$29090$1XGIwa)))))
                             g$t$29089$1XGIwa)
                            (begin '#f '(displaced-lexical . #f)))))
                       (g$top-level-context$28884$1XGIwa)))))
                 (g$assq$19649$1XGIwa
                   g$x$29082$1XGIwa
                   g$r$29083$1XGIwa)))))
           (g$imported-label->binding$27964$1XGIwa
             g$x$29082$1XGIwa))))))
   (g$make-binding$28275$1XGIwa g$make-binding$32281$1XGIwa cons)
   (g$binding-type$28276$1XGIwa g$binding-type$32282$1XGIwa car)
   (g$binding-value$28277$1XGIwa g$binding-value$32283$1XGIwa cdr)
   (g$raise-unbound-error$28278$1XGIwa
     g$raise-unbound-error$32284$1XGIwa
     (case-lambda
       ((g$id$29093$1XGIwa)
        (g$syntax-violation*$28875$1XGIwa
          '#f
          '"unbound identifier"
          g$id$29093$1XGIwa
          (g$make-undefined-violation$22224$1XGIwa)))))
   (g$syntax-type$28279$1XGIwa
     g$syntax-type$32285$1XGIwa
     (case-lambda
       ((g$e$29094$1XGIwa g$r$29095$1XGIwa)
        (if (g$id?$28259$1XGIwa g$e$29094$1XGIwa)
          ((case-lambda
             ((g$id$29096$1XGIwa)
              ((case-lambda
                 ((g$label$29097$1XGIwa)
                  ((case-lambda
                     ((g$b$29098$1XGIwa)
                      ((case-lambda
                         ((g$type$29099$1XGIwa)
                          (begin
                            (if (not g$label$29097$1XGIwa)
                              (g$raise-unbound-error$28278$1XGIwa
                                g$id$29096$1XGIwa)
                              (void))
                            ((case-lambda
                               ((g$t$29100$1XGIwa)
                                (if (g$memv$19654$1XGIwa
                                      g$t$29100$1XGIwa
                                      '(lexical
                                         core-prim
                                         macro
                                         macro!
                                         global
                                         local-macro
                                         local-macro!
                                         global-macro
                                         global-macro!
                                         displaced-lexical
                                         syntax
                                         import
                                         export
                                         $module
                                         $core-rtd
                                         library
                                         mutable
                                         ctv
                                         local-ctv
                                         global-ctv))
                                  (values
                                    g$type$29099$1XGIwa
                                    (g$binding-value$28277$1XGIwa
                                      g$b$29098$1XGIwa)
                                    g$id$29096$1XGIwa)
                                  (begin '#f (values 'other '#f '#f)))))
                             g$type$29099$1XGIwa))))
                       (g$binding-type$28276$1XGIwa g$b$29098$1XGIwa))))
                   (g$label->binding$28274$1XGIwa
                     g$label$29097$1XGIwa
                     g$r$29095$1XGIwa))))
               (g$id->label$28272$1XGIwa g$id$29096$1XGIwa))))
           g$e$29094$1XGIwa)
          (if (g$syntax-pair?$28252$1XGIwa g$e$29094$1XGIwa)
            ((case-lambda
               ((g$id$29101$1XGIwa)
                (if (g$id?$28259$1XGIwa g$id$29101$1XGIwa)
                  ((case-lambda
                     ((g$label$29102$1XGIwa)
                      ((case-lambda
                         ((g$b$29103$1XGIwa)
                          ((case-lambda
                             ((g$type$29104$1XGIwa)
                              (begin
                                (if (not g$label$29102$1XGIwa)
                                  (g$raise-unbound-error$28278$1XGIwa
                                    g$id$29101$1XGIwa)
                                  (void))
                                ((case-lambda
                                   ((g$t$29105$1XGIwa)
                                    (if (g$memv$19654$1XGIwa
                                          g$t$29105$1XGIwa
                                          '(define define-syntax
                                             core-macro
                                             begin
                                             macro
                                             macro!
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             module
                                             library
                                             set!
                                             let-syntax
                                             letrec-syntax
                                             import
                                             export
                                             $core-rtd
                                             ctv
                                             local-ctv
                                             global-ctv))
                                      (values
                                        g$type$29104$1XGIwa
                                        (g$binding-value$28277$1XGIwa
                                          g$b$29103$1XGIwa)
                                        g$id$29101$1XGIwa)
                                      (begin
                                        '#f
                                        (values 'call '#f '#f)))))
                                 g$type$29104$1XGIwa))))
                           (g$binding-type$28276$1XGIwa
                             g$b$29103$1XGIwa))))
                       (g$label->binding$28274$1XGIwa
                         g$label$29102$1XGIwa
                         g$r$29095$1XGIwa))))
                   (g$id->label$28272$1XGIwa g$id$29101$1XGIwa))
                  (values 'call '#f '#f))))
             (g$syntax-car$28256$1XGIwa g$e$29094$1XGIwa))
            (begin
              '#f
              ((case-lambda
                 ((g$d$29106$1XGIwa)
                  (if (g$self-evaluating?$28267$1XGIwa g$d$29106$1XGIwa)
                    (values 'constant g$d$29106$1XGIwa '#f)
                    (values 'other '#f '#f))))
               (g$stx->datum$28270$1XGIwa g$e$29094$1XGIwa))))))))
   (g$sanitize-binding$28302$1XGIwa
     g$sanitize-binding$32286$1XGIwa
     (case-lambda
       ((g$x$29107$1XGIwa g$src$29108$1XGIwa)
        (if (g$procedure?$20575$1XGIwa g$x$29107$1XGIwa)
          (g$cons*$19663$1XGIwa
            'local-macro
            g$x$29107$1XGIwa
            g$src$29108$1XGIwa)
          (if (if (pair? g$x$29107$1XGIwa)
                (if (eq? (car g$x$29107$1XGIwa) 'macro!)
                  (begin
                    '#f
                    (g$procedure?$20575$1XGIwa (cdr g$x$29107$1XGIwa)))
                  '#f)
                '#f)
            (g$cons*$19663$1XGIwa
              'local-macro!
              (cdr g$x$29107$1XGIwa)
              g$src$29108$1XGIwa)
            (if (if (pair? g$x$29107$1XGIwa)
                  (begin '#f (eq? (car g$x$29107$1XGIwa) '$rtd))
                  '#f)
              g$x$29107$1XGIwa
              (if (if (pair? g$x$29107$1XGIwa)
                    (begin '#f (eq? (car g$x$29107$1XGIwa) 'ctv))
                    '#f)
                (g$cons*$19663$1XGIwa
                  'local-ctv
                  (cdr g$x$29107$1XGIwa)
                  g$src$29108$1XGIwa)
                (begin
                  '#f
                  (assertion-violation
                    'expand
                    '"invalid transformer"
                    g$x$29107$1XGIwa)))))))))
   (g$make-variable-transformer$28303$1XGIwa
     g$make-variable-transformer$32287$1XGIwa
     (case-lambda
       ((g$x$29109$1XGIwa)
        (if (g$procedure?$20575$1XGIwa g$x$29109$1XGIwa)
          (cons 'macro! g$x$29109$1XGIwa)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$29109$1XGIwa)))))
   (g$make-compile-time-value$28304$1XGIwa
     g$make-compile-time-value$32288$1XGIwa
     (case-lambda ((g$x$29110$1XGIwa) (cons 'ctv g$x$29110$1XGIwa))))
   (g$variable-transformer?$28305$1XGIwa
     g$variable-transformer?$32289$1XGIwa
     (case-lambda
       ((g$x$29111$1XGIwa)
        (if (pair? g$x$29111$1XGIwa)
          (if (eq? (car g$x$29111$1XGIwa) 'macro!)
            (begin
              '#f
              (g$procedure?$20575$1XGIwa (cdr g$x$29111$1XGIwa)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$28306$1XGIwa
     g$variable-transformer-procedure$32290$1XGIwa
     (case-lambda
       ((g$x$29112$1XGIwa)
        (if (g$variable-transformer?$28305$1XGIwa g$x$29112$1XGIwa)
          (cdr g$x$29112$1XGIwa)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$29112$1XGIwa)))))
   (g$make-eval-transformer$28307$1XGIwa
     g$make-eval-transformer$32291$1XGIwa
     (case-lambda
       ((g$x$29113$1XGIwa)
        (g$sanitize-binding$28302$1XGIwa
          (eval-core (g$expanded->core$27697$1XGIwa g$x$29113$1XGIwa))
          g$x$29113$1XGIwa))))
   (g$parse-define$28697$1XGIwa
     g$parse-define$32292$1XGIwa
     (case-lambda
       ((g$x$29114$1XGIwa)
        ((case-lambda
           ((g$t$29115$1XGIwa)
            ((case-lambda
               ((g$ls/false$29116$1XGIwa)
                (if (if g$ls/false$29116$1XGIwa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29117$1XGIwa
                               g$fmls$29118$1XGIwa
                               g$b$29119$1XGIwa
                               g$b*$29120$1XGIwa)
                             (g$id?$28259$1XGIwa g$id$29117$1XGIwa)))
                          g$ls/false$29116$1XGIwa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29121$1XGIwa
                         g$fmls$29122$1XGIwa
                         g$b$29123$1XGIwa
                         g$b*$29124$1XGIwa)
                       (begin
                         (g$verify-formals$28777$1XGIwa
                           g$fmls$29122$1XGIwa
                           g$x$29114$1XGIwa)
                         (values
                           g$id$29121$1XGIwa
                           (cons
                             'defun
                             (cons
                               g$fmls$29122$1XGIwa
                               (cons
                                 g$b$29123$1XGIwa
                                 g$b*$29124$1XGIwa)))))))
                    g$ls/false$29116$1XGIwa)
                  ((case-lambda
                     ((g$t$29125$1XGIwa)
                      ((case-lambda
                         ((g$ls/false$29126$1XGIwa)
                          (if (if g$ls/false$29126$1XGIwa
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$29127$1XGIwa
                                         g$val$29128$1XGIwa)
                                       (g$id?$28259$1XGIwa
                                         g$id$29127$1XGIwa)))
                                    g$ls/false$29126$1XGIwa))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$29129$1XGIwa g$val$29130$1XGIwa)
                                 (values
                                   g$id$29129$1XGIwa
                                   (cons 'expr g$val$29130$1XGIwa))))
                              g$ls/false$29126$1XGIwa)
                            ((case-lambda
                               ((g$t$29131$1XGIwa)
                                ((case-lambda
                                   ((g$ls/false$29132$1XGIwa)
                                    (if (if g$ls/false$29132$1XGIwa
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$29133$1XGIwa)
                                                 (g$id?$28259$1XGIwa
                                                   g$id$29133$1XGIwa)))
                                              g$ls/false$29132$1XGIwa))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$29134$1XGIwa)
                                           (values
                                             g$id$29134$1XGIwa
                                             (cons
                                               'expr
                                               (g$bless$28720$1XGIwa
                                                 '(void))))))
                                        g$ls/false$29132$1XGIwa)
                                      (g$syntax-violation$28876$1XGIwa
                                        '#f
                                        '"invalid syntax"
                                        g$t$29131$1XGIwa))))
                                 (g$syntax-dispatch$28757$1XGIwa
                                   g$t$29131$1XGIwa
                                   '(_ any)))))
                             g$t$29125$1XGIwa))))
                       (g$syntax-dispatch$28757$1XGIwa
                         g$t$29125$1XGIwa
                         '(_ any any)))))
                   g$t$29115$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29115$1XGIwa
               '(_ (any . any) any . each-any)))))
         g$x$29114$1XGIwa))))
   (g$parse-define-syntax$28698$1XGIwa
     g$parse-define-syntax$32293$1XGIwa
     (case-lambda
       ((g$x$29135$1XGIwa)
        ((case-lambda
           ((g$t$29136$1XGIwa)
            ((case-lambda
               ((g$ls/false$29137$1XGIwa)
                (if (if g$ls/false$29137$1XGIwa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29138$1XGIwa g$val$29139$1XGIwa)
                             (g$id?$28259$1XGIwa g$id$29138$1XGIwa)))
                          g$ls/false$29137$1XGIwa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29140$1XGIwa g$val$29141$1XGIwa)
                       (values g$id$29140$1XGIwa g$val$29141$1XGIwa)))
                    g$ls/false$29137$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29136$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29136$1XGIwa
               '(_ any any)))))
         g$x$29135$1XGIwa))))
   (g$scheme-stx-hashtable$28699$1XGIwa
     g$scheme-stx-hashtable$32294$1XGIwa
     (g$make-eq-hashtable$20712$1XGIwa))
   (g$scheme-stx$28700$1XGIwa
     g$scheme-stx$32295$1XGIwa
     (case-lambda
       ((g$sym$29142$1XGIwa)
        ((case-lambda
           ((g$t$29143$1XGIwa)
            (if g$t$29143$1XGIwa
              g$t$29143$1XGIwa
              (begin
                '#f
                ((case-lambda
                   ((g$subst$29144$1XGIwa)
                    ((case-lambda
                       ((g$stx$29145$1XGIwa)
                        ((case-lambda
                           ((g$stx$29146$1XGIwa)
                            (begin
                              (g$hashtable-set!$20716$1XGIwa
                                g$scheme-stx-hashtable$28699$1XGIwa
                                g$sym$29142$1XGIwa
                                g$stx$29146$1XGIwa)
                              g$stx$29146$1XGIwa)))
                         ((case-lambda
                            ((g$t$29147$1XGIwa)
                             (if g$t$29147$1XGIwa
                               ((case-lambda
                                  ((g$x$29148$1XGIwa)
                                   ((case-lambda
                                      ((g$name$29149$1XGIwa
                                         g$label$29150$1XGIwa)
                                       (g$add-subst$28249$1XGIwa
                                         (g$make-rib$28206$1XGIwa
                                           (list g$name$29149$1XGIwa)
                                           (list
                                             g$top-mark*$28192$1XGIwa)
                                           (list g$label$29150$1XGIwa)
                                           '#f
                                           '#f)
                                         g$stx$29145$1XGIwa)))
                                    (car g$x$29148$1XGIwa)
                                    (cdr g$x$29148$1XGIwa))))
                                g$t$29147$1XGIwa)
                               (begin '#f g$stx$29145$1XGIwa))))
                          (g$assq$19649$1XGIwa
                            g$sym$29142$1XGIwa
                            g$subst$29144$1XGIwa)))))
                     (g$make-stx$28232$1XGIwa
                       g$sym$29142$1XGIwa
                       g$top-mark*$28192$1XGIwa
                       '()
                       '()))))
                 (g$library-subst$27922$1XGIwa
                   (g$find-library-by-name$27958$1XGIwa
                     '(psyntax system $all))))))))
         (g$hashtable-ref$20715$1XGIwa
           g$scheme-stx-hashtable$28699$1XGIwa
           g$sym$29142$1XGIwa
           '#f)))))
   (g$lexical-var$28701$1XGIwa g$lexical-var$32296$1XGIwa car)
   (g$lexical-mutable?$28702$1XGIwa g$lexical-mutable?$32297$1XGIwa cdr)
   (g$set-lexical-mutable!$28703$1XGIwa
     g$set-lexical-mutable!$32298$1XGIwa
     g$set-cdr!$22361$1XGIwa)
   (g$add-lexical$28704$1XGIwa
     g$add-lexical$32299$1XGIwa
     (case-lambda
       ((g$lab$29151$1XGIwa g$lex$29152$1XGIwa g$r$29153$1XGIwa)
        (cons
          (g$cons*$19663$1XGIwa
            g$lab$29151$1XGIwa
            'lexical
            g$lex$29152$1XGIwa
            '#f)
          g$r$29153$1XGIwa))))
   (g$add-lexicals$28705$1XGIwa
     g$add-lexicals$32300$1XGIwa
     (case-lambda
       ((g$lab*$29154$1XGIwa g$lex*$29155$1XGIwa g$r$29156$1XGIwa)
        (if (null? g$lab*$29154$1XGIwa)
          g$r$29156$1XGIwa
          (begin
            '#f
            (g$add-lexicals$28705$1XGIwa
              (cdr g$lab*$29154$1XGIwa)
              (cdr g$lex*$29155$1XGIwa)
              (g$add-lexical$28704$1XGIwa
                (car g$lab*$29154$1XGIwa)
                (car g$lex*$29155$1XGIwa)
                g$r$29156$1XGIwa)))))))
   (g$letrec-helper$28706$1XGIwa
     g$letrec-helper$32301$1XGIwa
     (case-lambda
       ((g$e$29157$1XGIwa
          g$r$29158$1XGIwa
          g$mr$29159$1XGIwa
          g$build$29160$1XGIwa)
        ((case-lambda
           ((g$t$29161$1XGIwa)
            ((case-lambda
               ((g$ls/false$29162$1XGIwa)
                (if g$ls/false$29162$1XGIwa
                  (apply
                    (case-lambda
                      ((g$lhs*$29163$1XGIwa
                         g$rhs*$29164$1XGIwa
                         g$b$29165$1XGIwa
                         g$b*$29166$1XGIwa)
                       (if (not (g$valid-bound-ids?$28264$1XGIwa
                                  g$lhs*$29163$1XGIwa))
                         (g$invalid-fmls-error$28722$1XGIwa
                           g$e$29157$1XGIwa
                           g$lhs*$29163$1XGIwa)
                         ((case-lambda
                            ((g$lex*$29167$1XGIwa g$lab*$29168$1XGIwa)
                             ((case-lambda
                                ((g$rib$29169$1XGIwa g$r$29170$1XGIwa)
                                 ((case-lambda
                                    ((g$body$29171$1XGIwa
                                       g$rhs*$29172$1XGIwa)
                                     (g$build$29160$1XGIwa
                                       '#f
                                       g$lex*$29167$1XGIwa
                                       g$rhs*$29172$1XGIwa
                                       g$body$29171$1XGIwa)))
                                  (g$chi-internal$28786$1XGIwa
                                    (g$add-subst$28249$1XGIwa
                                      g$rib$29169$1XGIwa
                                      (cons
                                        g$b$29165$1XGIwa
                                        g$b*$29166$1XGIwa))
                                    g$r$29170$1XGIwa
                                    g$mr$29159$1XGIwa)
                                  (g$chi-expr*$28773$1XGIwa
                                    (g$map$19661$1XGIwa
                                      (case-lambda
                                        ((g$x$29173$1XGIwa)
                                         (g$add-subst$28249$1XGIwa
                                           g$rib$29169$1XGIwa
                                           g$x$29173$1XGIwa)))
                                      g$rhs*$29164$1XGIwa)
                                    g$r$29170$1XGIwa
                                    g$mr$29159$1XGIwa))))
                              (g$make-full-rib$28225$1XGIwa
                                g$lhs*$29163$1XGIwa
                                g$lab*$29168$1XGIwa)
                              (g$add-lexicals$28705$1XGIwa
                                g$lab*$29168$1XGIwa
                                g$lex*$29167$1XGIwa
                                g$r$29158$1XGIwa))))
                          (g$map$19661$1XGIwa
                            g$gen-lexical$28194$1XGIwa
                            g$lhs*$29163$1XGIwa)
                          (g$map$19661$1XGIwa
                            g$gen-label$28196$1XGIwa
                            g$lhs*$29163$1XGIwa)))))
                    g$ls/false$29162$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29161$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29161$1XGIwa
               '(_ #(each (any any)) any . each-any)))))
         g$e$29157$1XGIwa))))
   (g$letrec-transformer$28707$1XGIwa
     g$letrec-transformer$32302$1XGIwa
     (case-lambda
       ((g$e$29174$1XGIwa g$r$29175$1XGIwa g$mr$29176$1XGIwa)
        (g$letrec-helper$28706$1XGIwa
          g$e$29174$1XGIwa
          g$r$29175$1XGIwa
          g$mr$29176$1XGIwa
          g$build-letrec$28186$1XGIwa))))
   (g$letrec*-transformer$28708$1XGIwa
     g$letrec*-transformer$32303$1XGIwa
     (case-lambda
       ((g$e$29177$1XGIwa g$r$29178$1XGIwa g$mr$29179$1XGIwa)
        (g$letrec-helper$28706$1XGIwa
          g$e$29177$1XGIwa
          g$r$29178$1XGIwa
          g$mr$29179$1XGIwa
          g$build-letrec*$28187$1XGIwa))))
   (g$fluid-let-syntax-transformer$28709$1XGIwa
     g$fluid-let-syntax-transformer$32304$1XGIwa
     (case-lambda
       ((g$e$29180$1XGIwa g$r$29181$1XGIwa g$mr$29182$1XGIwa)
        (letrec* ((g$lookup$29183$1XGIwa
                    (case-lambda
                      ((g$x$29193$1XGIwa)
                       ((case-lambda
                          ((g$t$29194$1XGIwa)
                           (if g$t$29194$1XGIwa
                             g$t$29194$1XGIwa
                             (begin
                               '#f
                               (g$syntax-violation$28876$1XGIwa
                                 '#f
                                 '"unbound identifier"
                                 g$e$29180$1XGIwa
                                 g$x$29193$1XGIwa)))))
                        (g$id->label$28272$1XGIwa g$x$29193$1XGIwa))))))
          ((case-lambda
             ((g$t$29184$1XGIwa)
              ((case-lambda
                 ((g$ls/false$29185$1XGIwa)
                  (if g$ls/false$29185$1XGIwa
                    (apply
                      (case-lambda
                        ((g$lhs*$29186$1XGIwa
                           g$rhs*$29187$1XGIwa
                           g$b$29188$1XGIwa
                           g$b*$29189$1XGIwa)
                         (if (not (g$valid-bound-ids?$28264$1XGIwa
                                    g$lhs*$29186$1XGIwa))
                           (g$invalid-fmls-error$28722$1XGIwa
                             g$e$29180$1XGIwa
                             g$lhs*$29186$1XGIwa)
                           ((case-lambda
                              ((g$lab*$29190$1XGIwa g$rhs*$29191$1XGIwa)
                               (g$chi-internal$28786$1XGIwa
                                 (cons
                                   g$b$29188$1XGIwa
                                   g$b*$29189$1XGIwa)
                                 (append
                                   (g$map$19661$1XGIwa
                                     cons
                                     g$lab*$29190$1XGIwa
                                     g$rhs*$29191$1XGIwa)
                                   g$r$29181$1XGIwa)
                                 (append
                                   (g$map$19661$1XGIwa
                                     cons
                                     g$lab*$29190$1XGIwa
                                     g$rhs*$29191$1XGIwa)
                                   g$mr$29182$1XGIwa))))
                            (g$map$19661$1XGIwa
                              g$lookup$29183$1XGIwa
                              g$lhs*$29186$1XGIwa)
                            (g$map$19661$1XGIwa
                              (case-lambda
                                ((g$x$29192$1XGIwa)
                                 (g$make-eval-transformer$28307$1XGIwa
                                   (g$expand-transformer$28805$1XGIwa
                                     g$x$29192$1XGIwa
                                     g$mr$29182$1XGIwa))))
                              g$rhs*$29187$1XGIwa)))))
                      g$ls/false$29185$1XGIwa)
                    (g$syntax-violation$28876$1XGIwa
                      '#f
                      '"invalid syntax"
                      g$t$29184$1XGIwa))))
               (g$syntax-dispatch$28757$1XGIwa
                 g$t$29184$1XGIwa
                 '(_ #(each (any any)) any . each-any)))))
           g$e$29180$1XGIwa)))))
   (g$type-descriptor-transformer$28710$1XGIwa
     g$type-descriptor-transformer$32305$1XGIwa
     (case-lambda
       ((g$e$29195$1XGIwa g$r$29196$1XGIwa g$mr$29197$1XGIwa)
        ((case-lambda
           ((g$t$29198$1XGIwa)
            ((case-lambda
               ((g$ls/false$29199$1XGIwa)
                (if (if g$ls/false$29199$1XGIwa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29200$1XGIwa)
                             (g$id?$28259$1XGIwa g$id$29200$1XGIwa)))
                          g$ls/false$29199$1XGIwa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29201$1XGIwa)
                       ((case-lambda
                          ((g$lab$29202$1XGIwa)
                           ((case-lambda
                              ((g$b$29203$1XGIwa)
                               ((case-lambda
                                  ((g$type$29204$1XGIwa)
                                   (begin
                                     (if (not g$lab$29202$1XGIwa)
                                       (g$raise-unbound-error$28278$1XGIwa
                                         g$id$29201$1XGIwa)
                                       (void))
                                     (if (not (if (eq? g$type$29204$1XGIwa
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (not (list?
                                                         (g$binding-value$28277$1XGIwa
                                                           g$b$29203$1XGIwa))))
                                                '#f))
                                       (g$syntax-violation$28876$1XGIwa
                                         '#f
                                         '"not a record type"
                                         g$e$29195$1XGIwa)
                                       (void))
                                     (list
                                       'quote
                                       (g$binding-value$28277$1XGIwa
                                         g$b$29203$1XGIwa)))))
                                (g$binding-type$28276$1XGIwa
                                  g$b$29203$1XGIwa))))
                            (g$label->binding$28274$1XGIwa
                              g$lab$29202$1XGIwa
                              g$r$29196$1XGIwa))))
                        (g$id->label$28272$1XGIwa g$id$29201$1XGIwa))))
                    g$ls/false$29199$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29198$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29198$1XGIwa
               '(_ any)))))
         g$e$29195$1XGIwa))))
   (g$record-type-descriptor-transformer$28711$1XGIwa
     g$record-type-descriptor-transformer$32306$1XGIwa
     (case-lambda
       ((g$e$29205$1XGIwa g$r$29206$1XGIwa g$mr$29207$1XGIwa)
        ((case-lambda
           ((g$t$29208$1XGIwa)
            ((case-lambda
               ((g$ls/false$29209$1XGIwa)
                (if (if g$ls/false$29209$1XGIwa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29210$1XGIwa)
                             (g$id?$28259$1XGIwa g$id$29210$1XGIwa)))
                          g$ls/false$29209$1XGIwa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29211$1XGIwa)
                       ((case-lambda
                          ((g$lab$29212$1XGIwa)
                           ((case-lambda
                              ((g$b$29213$1XGIwa)
                               ((case-lambda
                                  ((g$type$29214$1XGIwa)
                                   (begin
                                     (if (not g$lab$29212$1XGIwa)
                                       (g$raise-unbound-error$28278$1XGIwa
                                         g$id$29211$1XGIwa)
                                       (void))
                                     (if (not (if (eq? g$type$29214$1XGIwa
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$28277$1XGIwa
                                                      g$b$29213$1XGIwa)))
                                                '#f))
                                       (g$syntax-violation$28876$1XGIwa
                                         '#f
                                         '"not a record type"
                                         g$e$29205$1XGIwa)
                                       (void))
                                     (g$chi-expr$28775$1XGIwa
                                       (car (g$binding-value$28277$1XGIwa
                                              g$b$29213$1XGIwa))
                                       g$r$29206$1XGIwa
                                       g$mr$29207$1XGIwa))))
                                (g$binding-type$28276$1XGIwa
                                  g$b$29213$1XGIwa))))
                            (g$label->binding$28274$1XGIwa
                              g$lab$29212$1XGIwa
                              g$r$29206$1XGIwa))))
                        (g$id->label$28272$1XGIwa g$id$29211$1XGIwa))))
                    g$ls/false$29209$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29208$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29208$1XGIwa
               '(_ any)))))
         g$e$29205$1XGIwa))))
   (g$record-constructor-descriptor-transformer$28712$1XGIwa
     g$record-constructor-descriptor-transformer$32307$1XGIwa
     (case-lambda
       ((g$e$29215$1XGIwa g$r$29216$1XGIwa g$mr$29217$1XGIwa)
        ((case-lambda
           ((g$t$29218$1XGIwa)
            ((case-lambda
               ((g$ls/false$29219$1XGIwa)
                (if (if g$ls/false$29219$1XGIwa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29220$1XGIwa)
                             (g$id?$28259$1XGIwa g$id$29220$1XGIwa)))
                          g$ls/false$29219$1XGIwa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29221$1XGIwa)
                       ((case-lambda
                          ((g$lab$29222$1XGIwa)
                           ((case-lambda
                              ((g$b$29223$1XGIwa)
                               ((case-lambda
                                  ((g$type$29224$1XGIwa)
                                   (begin
                                     (if (not g$lab$29222$1XGIwa)
                                       (g$raise-unbound-error$28278$1XGIwa
                                         g$id$29221$1XGIwa)
                                       (void))
                                     (if (not (if (eq? g$type$29224$1XGIwa
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$28277$1XGIwa
                                                      g$b$29223$1XGIwa)))
                                                '#f))
                                       (g$syntax-violation$28876$1XGIwa
                                         '#f
                                         '"invalid type"
                                         g$e$29215$1XGIwa)
                                       (void))
                                     (g$chi-expr$28775$1XGIwa
                                       (g$cadr$20611$1XGIwa
                                         (g$binding-value$28277$1XGIwa
                                           g$b$29223$1XGIwa))
                                       g$r$29216$1XGIwa
                                       g$mr$29217$1XGIwa))))
                                (g$binding-type$28276$1XGIwa
                                  g$b$29223$1XGIwa))))
                            (g$label->binding$28274$1XGIwa
                              g$lab$29222$1XGIwa
                              g$r$29216$1XGIwa))))
                        (g$id->label$28272$1XGIwa g$id$29221$1XGIwa))))
                    g$ls/false$29219$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29218$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29218$1XGIwa
               '(_ any)))))
         g$e$29215$1XGIwa))))
   (g$when-macro$28713$1XGIwa
     g$when-macro$32308$1XGIwa
     (case-lambda
       ((g$e$29225$1XGIwa)
        ((case-lambda
           ((g$t$29226$1XGIwa)
            ((case-lambda
               ((g$ls/false$29227$1XGIwa)
                (if g$ls/false$29227$1XGIwa
                  (apply
                    (case-lambda
                      ((g$test$29228$1XGIwa
                         g$e$29229$1XGIwa
                         g$e*$29230$1XGIwa)
                       (g$bless$28720$1XGIwa
                         (list
                           'if
                           g$test$29228$1XGIwa
                           (cons
                             'begin
                             (cons
                               g$e$29229$1XGIwa
                               g$e*$29230$1XGIwa))))))
                    g$ls/false$29227$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29226$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29226$1XGIwa
               '(_ any any . each-any)))))
         g$e$29225$1XGIwa))))
   (g$unless-macro$28714$1XGIwa
     g$unless-macro$32309$1XGIwa
     (case-lambda
       ((g$e$29231$1XGIwa)
        ((case-lambda
           ((g$t$29232$1XGIwa)
            ((case-lambda
               ((g$ls/false$29233$1XGIwa)
                (if g$ls/false$29233$1XGIwa
                  (apply
                    (case-lambda
                      ((g$test$29234$1XGIwa
                         g$e$29235$1XGIwa
                         g$e*$29236$1XGIwa)
                       (g$bless$28720$1XGIwa
                         (list
                           'if
                           (list 'not g$test$29234$1XGIwa)
                           (cons
                             'begin
                             (cons
                               g$e$29235$1XGIwa
                               g$e*$29236$1XGIwa))))))
                    g$ls/false$29233$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29232$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29232$1XGIwa
               '(_ any any . each-any)))))
         g$e$29231$1XGIwa))))
   (g$if-transformer$28715$1XGIwa
     g$if-transformer$32310$1XGIwa
     (case-lambda
       ((g$e$29237$1XGIwa g$r$29238$1XGIwa g$mr$29239$1XGIwa)
        ((case-lambda
           ((g$t$29240$1XGIwa)
            ((case-lambda
               ((g$ls/false$29241$1XGIwa)
                (if g$ls/false$29241$1XGIwa
                  (apply
                    (case-lambda
                      ((g$e0$29242$1XGIwa
                         g$e1$29243$1XGIwa
                         g$e2$29244$1XGIwa)
                       (list
                         'if
                         (g$chi-expr$28775$1XGIwa
                           g$e0$29242$1XGIwa
                           g$r$29238$1XGIwa
                           g$mr$29239$1XGIwa)
                         (g$chi-expr$28775$1XGIwa
                           g$e1$29243$1XGIwa
                           g$r$29238$1XGIwa
                           g$mr$29239$1XGIwa)
                         (g$chi-expr$28775$1XGIwa
                           g$e2$29244$1XGIwa
                           g$r$29238$1XGIwa
                           g$mr$29239$1XGIwa))))
                    g$ls/false$29241$1XGIwa)
                  ((case-lambda
                     ((g$t$29245$1XGIwa)
                      ((case-lambda
                         ((g$ls/false$29246$1XGIwa)
                          (if g$ls/false$29246$1XGIwa
                            (apply
                              (case-lambda
                                ((g$e0$29247$1XGIwa g$e1$29248$1XGIwa)
                                 (list
                                   'if
                                   (g$chi-expr$28775$1XGIwa
                                     g$e0$29247$1XGIwa
                                     g$r$29238$1XGIwa
                                     g$mr$29239$1XGIwa)
                                   (g$chi-expr$28775$1XGIwa
                                     g$e1$29248$1XGIwa
                                     g$r$29238$1XGIwa
                                     g$mr$29239$1XGIwa)
                                   (g$build-void$28185$1XGIwa))))
                              g$ls/false$29246$1XGIwa)
                            (g$syntax-violation$28876$1XGIwa
                              '#f
                              '"invalid syntax"
                              g$t$29245$1XGIwa))))
                       (g$syntax-dispatch$28757$1XGIwa
                         g$t$29245$1XGIwa
                         '(_ any any)))))
                   g$t$29240$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29240$1XGIwa
               '(_ any any any)))))
         g$e$29237$1XGIwa))))
   (g$case-macro$28716$1XGIwa
     g$case-macro$32311$1XGIwa
     (case-lambda
       ((g$e$29249$1XGIwa)
        (letrec* ((g$build-last$29250$1XGIwa
                    (case-lambda
                      ((g$cls$29270$1XGIwa)
                       ((case-lambda
                          ((g$t$29271$1XGIwa)
                           ((case-lambda
                              ((g$ls/false$29272$1XGIwa)
                               (if g$ls/false$29272$1XGIwa
                                 (apply
                                   (case-lambda
                                     ((g$e$29273$1XGIwa
                                        g$e*$29274$1XGIwa)
                                      (cons
                                        'begin
                                        (cons
                                          '#f
                                          (cons
                                            g$e$29273$1XGIwa
                                            g$e*$29274$1XGIwa)))))
                                   g$ls/false$29272$1XGIwa)
                                 ((case-lambda
                                    ((g$t$29275$1XGIwa)
                                     ((case-lambda
                                        ((g$ls/false$29276$1XGIwa)
                                         (if g$ls/false$29276$1XGIwa
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$29251$1XGIwa
                                                  g$cls$29270$1XGIwa
                                                  '(if #f #f))))
                                             g$ls/false$29276$1XGIwa)
                                           (g$syntax-violation$28876$1XGIwa
                                             '#f
                                             '"invalid syntax"
                                             g$t$29275$1XGIwa))))
                                      (g$syntax-dispatch$28757$1XGIwa
                                        g$t$29275$1XGIwa
                                        '_))))
                                  g$t$29271$1XGIwa))))
                            (g$syntax-dispatch$28757$1XGIwa
                              g$t$29271$1XGIwa
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$29270$1XGIwa))))
                  (g$build-one$29251$1XGIwa
                    (case-lambda
                      ((g$cls$29263$1XGIwa g$k$29264$1XGIwa)
                       ((case-lambda
                          ((g$t$29265$1XGIwa)
                           ((case-lambda
                              ((g$ls/false$29266$1XGIwa)
                               (if g$ls/false$29266$1XGIwa
                                 (apply
                                   (case-lambda
                                     ((g$d*$29267$1XGIwa
                                        g$e$29268$1XGIwa
                                        g$e*$29269$1XGIwa)
                                      (if (g$=$21625$1XGIwa
                                            '1
                                            (length g$d*$29267$1XGIwa))
                                        (list
                                          'if
                                          (list
                                            'eqv?
                                            't
                                            (list
                                              'quote
                                              (car g$d*$29267$1XGIwa)))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$29268$1XGIwa
                                              g$e*$29269$1XGIwa))
                                          g$k$29264$1XGIwa)
                                        (list
                                          'if
                                          (list
                                            'memv
                                            't
                                            (list
                                              'quote
                                              g$d*$29267$1XGIwa))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$29268$1XGIwa
                                              g$e*$29269$1XGIwa))
                                          g$k$29264$1XGIwa))))
                                   g$ls/false$29266$1XGIwa)
                                 (g$syntax-violation$28876$1XGIwa
                                   '#f
                                   '"invalid syntax"
                                   g$t$29265$1XGIwa))))
                            (g$syntax-dispatch$28757$1XGIwa
                              g$t$29265$1XGIwa
                              '(each-any any . each-any)))))
                        g$cls$29263$1XGIwa)))))
          ((case-lambda
             ((g$t$29252$1XGIwa)
              ((case-lambda
                 ((g$ls/false$29253$1XGIwa)
                  (if g$ls/false$29253$1XGIwa
                    (apply
                      (case-lambda
                        ((g$expr$29254$1XGIwa)
                         (g$bless$28720$1XGIwa
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$29254$1XGIwa))
                               '((if #f #f)))))))
                      g$ls/false$29253$1XGIwa)
                    ((case-lambda
                       ((g$t$29255$1XGIwa)
                        ((case-lambda
                           ((g$ls/false$29256$1XGIwa)
                            (if g$ls/false$29256$1XGIwa
                              (apply
                                (case-lambda
                                  ((g$expr$29257$1XGIwa
                                     g$cls$29258$1XGIwa
                                     g$cls*$29259$1XGIwa)
                                   (g$bless$28720$1XGIwa
                                     (list
                                       'let
                                       (list
                                         (list 't g$expr$29257$1XGIwa))
                                       ((letrec ((g$f$29260$1XGIwa
                                                   (case-lambda
                                                     ((g$cls$29261$1XGIwa
                                                        g$cls*$29262$1XGIwa)
                                                      (if (null?
                                                            g$cls*$29262$1XGIwa)
                                                        (g$build-last$29250$1XGIwa
                                                          g$cls$29261$1XGIwa)
                                                        (g$build-one$29251$1XGIwa
                                                          g$cls$29261$1XGIwa
                                                          (g$f$29260$1XGIwa
                                                            (car g$cls*$29262$1XGIwa)
                                                            (cdr g$cls*$29262$1XGIwa))))))))
                                          g$f$29260$1XGIwa)
                                        g$cls$29258$1XGIwa
                                        g$cls*$29259$1XGIwa)))))
                                g$ls/false$29256$1XGIwa)
                              (g$syntax-violation$28876$1XGIwa
                                '#f
                                '"invalid syntax"
                                g$t$29255$1XGIwa))))
                         (g$syntax-dispatch$28757$1XGIwa
                           g$t$29255$1XGIwa
                           '(_ any any . each-any)))))
                     g$t$29252$1XGIwa))))
               (g$syntax-dispatch$28757$1XGIwa
                 g$t$29252$1XGIwa
                 '(_ any)))))
           g$e$29249$1XGIwa)))))
   (g$quote-transformer$28717$1XGIwa
     g$quote-transformer$32312$1XGIwa
     (case-lambda
       ((g$e$29277$1XGIwa g$r$29278$1XGIwa g$mr$29279$1XGIwa)
        ((case-lambda
           ((g$t$29280$1XGIwa)
            ((case-lambda
               ((g$ls/false$29281$1XGIwa)
                (if g$ls/false$29281$1XGIwa
                  (apply
                    (case-lambda
                      ((g$datum$29282$1XGIwa)
                       (list
                         'quote
                         (g$stx->datum$28270$1XGIwa
                           g$datum$29282$1XGIwa))))
                    g$ls/false$29281$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29280$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29280$1XGIwa
               '(_ any)))))
         g$e$29277$1XGIwa))))
   (g$case-lambda-transformer$28718$1XGIwa
     g$case-lambda-transformer$32313$1XGIwa
     (case-lambda
       ((g$e$29283$1XGIwa g$r$29284$1XGIwa g$mr$29285$1XGIwa)
        ((case-lambda
           ((g$t$29286$1XGIwa)
            ((case-lambda
               ((g$ls/false$29287$1XGIwa)
                (if g$ls/false$29287$1XGIwa
                  (apply
                    (case-lambda
                      ((g$fmls*$29288$1XGIwa
                         g$b*$29289$1XGIwa
                         g$b**$29290$1XGIwa)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$28779$1XGIwa
                              g$e$29283$1XGIwa
                              g$fmls*$29288$1XGIwa
                              (g$map$19661$1XGIwa
                                cons
                                g$b*$29289$1XGIwa
                                g$b**$29290$1XGIwa)
                              g$r$29284$1XGIwa
                              g$mr$29285$1XGIwa)))
                         (case-lambda
                           ((g$fmls*$29293$1XGIwa g$body*$29294$1XGIwa)
                            ((case-lambda
                               ((g$body*$29295$1XGIwa
                                  g$fmls*$29296$1XGIwa)
                                (g$build-case-lambda$28182$1XGIwa
                                  '#f
                                  g$fmls*$29296$1XGIwa
                                  g$body*$29295$1XGIwa)))
                             g$body*$29294$1XGIwa
                             g$fmls*$29293$1XGIwa))))))
                    g$ls/false$29287$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29286$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29286$1XGIwa
               '(_ . #(each (any any . each-any)))))))
         g$e$29283$1XGIwa))))
   (g$lambda-transformer$28719$1XGIwa
     g$lambda-transformer$32314$1XGIwa
     (case-lambda
       ((g$e$29297$1XGIwa g$r$29298$1XGIwa g$mr$29299$1XGIwa)
        ((case-lambda
           ((g$t$29300$1XGIwa)
            ((case-lambda
               ((g$ls/false$29301$1XGIwa)
                (if g$ls/false$29301$1XGIwa
                  (apply
                    (case-lambda
                      ((g$fmls$29302$1XGIwa
                         g$b$29303$1XGIwa
                         g$b*$29304$1XGIwa)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$28778$1XGIwa
                              g$e$29297$1XGIwa
                              g$fmls$29302$1XGIwa
                              (cons g$b$29303$1XGIwa g$b*$29304$1XGIwa)
                              g$r$29298$1XGIwa
                              g$mr$29299$1XGIwa)))
                         (case-lambda
                           ((g$fmls$29307$1XGIwa g$body$29308$1XGIwa)
                            ((case-lambda
                               ((g$body$29309$1XGIwa
                                  g$fmls$29310$1XGIwa)
                                (g$build-lambda$28181$1XGIwa
                                  '#f
                                  g$fmls$29310$1XGIwa
                                  g$body$29309$1XGIwa)))
                             g$body$29308$1XGIwa
                             g$fmls$29307$1XGIwa))))))
                    g$ls/false$29301$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29300$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29300$1XGIwa
               '(_ any any . each-any)))))
         g$e$29297$1XGIwa))))
   (g$bless$28720$1XGIwa
     g$bless$32315$1XGIwa
     (case-lambda
       ((g$x$29311$1XGIwa)
        (g$mkstx$28247$1XGIwa
          ((letrec ((g$f$29312$1XGIwa
                      (case-lambda
                        ((g$x$29313$1XGIwa)
                         (if (g$stx?$28231$1XGIwa g$x$29313$1XGIwa)
                           g$x$29313$1XGIwa
                           (if (pair? g$x$29313$1XGIwa)
                             (cons
                               (g$f$29312$1XGIwa (car g$x$29313$1XGIwa))
                               (g$f$29312$1XGIwa
                                 (cdr g$x$29313$1XGIwa)))
                             (if (g$symbol?$20573$1XGIwa
                                   g$x$29313$1XGIwa)
                               (g$scheme-stx$28700$1XGIwa
                                 g$x$29313$1XGIwa)
                               (if (g$vector?$20571$1XGIwa
                                     g$x$29313$1XGIwa)
                                 (g$vector-map$20663$1XGIwa
                                   g$f$29312$1XGIwa
                                   g$x$29313$1XGIwa)
                                 (begin '#f g$x$29313$1XGIwa)))))))))
             g$f$29312$1XGIwa)
           g$x$29311$1XGIwa)
          '()
          '()
          '()))))
   (g$with-syntax-macro$28721$1XGIwa
     g$with-syntax-macro$32316$1XGIwa
     (case-lambda
       ((g$e$29314$1XGIwa)
        ((case-lambda
           ((g$t$29315$1XGIwa)
            ((case-lambda
               ((g$ls/false$29316$1XGIwa)
                (if g$ls/false$29316$1XGIwa
                  (apply
                    (case-lambda
                      ((g$pat*$29317$1XGIwa
                         g$expr*$29318$1XGIwa
                         g$b$29319$1XGIwa
                         g$b*$29320$1XGIwa)
                       ((case-lambda
                          ((g$idn*$29321$1XGIwa)
                           (begin
                             (g$verify-formals$28777$1XGIwa
                               (g$map$19661$1XGIwa
                                 car
                                 g$idn*$29321$1XGIwa)
                               g$e$29314$1XGIwa)
                             ((case-lambda
                                ((g$t*$29322$1XGIwa)
                                 (g$bless$28720$1XGIwa
                                   (list
                                     'let
                                     (g$map$19661$1XGIwa
                                       list
                                       g$t*$29322$1XGIwa
                                       g$expr*$29318$1XGIwa)
                                     ((letrec ((g$f$29323$1XGIwa
                                                 (case-lambda
                                                   ((g$pat*$29324$1XGIwa
                                                      g$t*$29325$1XGIwa)
                                                    (if (null?
                                                          g$pat*$29324$1XGIwa)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$29319$1XGIwa
                                                          g$b*$29320$1XGIwa))
                                                      (begin
                                                        '#f
                                                        (list
                                                          'syntax-case
                                                          (car g$t*$29325$1XGIwa)
                                                          '()
                                                          (list
                                                            (car g$pat*$29324$1XGIwa)
                                                            (g$f$29323$1XGIwa
                                                              (cdr g$pat*$29324$1XGIwa)
                                                              (cdr g$t*$29325$1XGIwa)))
                                                          (list
                                                            '_
                                                            (list
                                                              'assertion-violation
                                                              ''with-syntax
                                                              '"pattern does not match value"
                                                              (list
                                                                'quote
                                                                (car g$pat*$29324$1XGIwa))
                                                              (car g$t*$29325$1XGIwa))))))))))
                                        g$f$29323$1XGIwa)
                                      g$pat*$29317$1XGIwa
                                      g$t*$29322$1XGIwa)))))
                              (g$generate-temporaries$28866$1XGIwa
                                g$expr*$29318$1XGIwa)))))
                        ((letrec ((g$f$29326$1XGIwa
                                    (case-lambda
                                      ((g$pat*$29327$1XGIwa)
                                       (if (null? g$pat*$29327$1XGIwa)
                                         '()
                                         (begin
                                           '#f
                                           (call-with-values
                                             (case-lambda
                                               (()
                                                (g$convert-pattern$28756$1XGIwa
                                                  (car g$pat*$29327$1XGIwa)
                                                  '())))
                                             (case-lambda
                                               ((g$pat$29330$1XGIwa
                                                  g$idn*$29331$1XGIwa)
                                                ((case-lambda
                                                   ((g$idn*$29332$1XGIwa
                                                      g$pat$29333$1XGIwa)
                                                    (append
                                                      g$idn*$29332$1XGIwa
                                                      (g$f$29326$1XGIwa
                                                        (cdr g$pat*$29327$1XGIwa)))))
                                                 g$idn*$29331$1XGIwa
                                                 g$pat$29330$1XGIwa))))))))))
                           g$f$29326$1XGIwa)
                         g$pat*$29317$1XGIwa))))
                    g$ls/false$29316$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29315$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29315$1XGIwa
               '(_ #(each (any any)) any . each-any)))))
         g$e$29314$1XGIwa))))
   (g$invalid-fmls-error$28722$1XGIwa
     g$invalid-fmls-error$32317$1XGIwa
     (case-lambda
       ((g$stx$29334$1XGIwa g$fmls$29335$1XGIwa)
        ((case-lambda
           ((g$t$29336$1XGIwa)
            ((case-lambda
               ((g$ls/false$29337$1XGIwa)
                (if g$ls/false$29337$1XGIwa
                  (apply
                    (case-lambda
                      ((g$id*$29338$1XGIwa g$last$29339$1XGIwa)
                       ((letrec ((g$f$29340$1XGIwa
                                   (case-lambda
                                     ((g$id*$29341$1XGIwa)
                                      (if (null? g$id*$29341$1XGIwa)
                                        (values)
                                        (if (not (g$id?$28259$1XGIwa
                                                   (car g$id*$29341$1XGIwa)))
                                          (g$syntax-violation$28876$1XGIwa
                                            '#f
                                            '"not an identifier"
                                            g$stx$29334$1XGIwa
                                            (car g$id*$29341$1XGIwa))
                                          (begin
                                            '#f
                                            (g$f$29340$1XGIwa
                                              (cdr g$id*$29341$1XGIwa))
                                            (if (g$bound-id-member?$28266$1XGIwa
                                                  (car g$id*$29341$1XGIwa)
                                                  (cdr g$id*$29341$1XGIwa))
                                              (g$syntax-violation$28876$1XGIwa
                                                '#f
                                                '"duplicate binding"
                                                g$stx$29334$1XGIwa
                                                (car g$id*$29341$1XGIwa))
                                              (void)))))))))
                          g$f$29340$1XGIwa)
                        (if (g$id?$28259$1XGIwa g$last$29339$1XGIwa)
                          (cons g$last$29339$1XGIwa g$id*$29338$1XGIwa)
                          (if (g$syntax-null?$28254$1XGIwa
                                g$last$29339$1XGIwa)
                            g$id*$29338$1XGIwa
                            (begin
                              '#f
                              (g$syntax-violation$28876$1XGIwa
                                '#f
                                '"not an identifier"
                                g$stx$29334$1XGIwa
                                g$last$29339$1XGIwa)))))))
                    g$ls/false$29337$1XGIwa)
                  ((case-lambda
                     ((g$t$29342$1XGIwa)
                      ((case-lambda
                         ((g$ls/false$29343$1XGIwa)
                          (if g$ls/false$29343$1XGIwa
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$28876$1XGIwa
                                   '#f
                                   '"malformed binding form"
                                   g$stx$29334$1XGIwa
                                   g$fmls$29335$1XGIwa)))
                              g$ls/false$29343$1XGIwa)
                            (g$syntax-violation$28876$1XGIwa
                              '#f
                              '"invalid syntax"
                              g$t$29342$1XGIwa))))
                       (g$syntax-dispatch$28757$1XGIwa
                         g$t$29342$1XGIwa
                         '_))))
                   g$t$29336$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29336$1XGIwa
               '#(each+ any () any)))))
         g$fmls$29335$1XGIwa))))
   (g$let-macro$28723$1XGIwa
     g$let-macro$32318$1XGIwa
     (case-lambda
       ((g$stx$29344$1XGIwa)
        ((case-lambda
           ((g$t$29345$1XGIwa)
            ((case-lambda
               ((g$ls/false$29346$1XGIwa)
                (if g$ls/false$29346$1XGIwa
                  (apply
                    (case-lambda
                      ((g$lhs*$29347$1XGIwa
                         g$rhs*$29348$1XGIwa
                         g$b$29349$1XGIwa
                         g$b*$29350$1XGIwa)
                       (if (g$valid-bound-ids?$28264$1XGIwa
                             g$lhs*$29347$1XGIwa)
                         (g$bless$28720$1XGIwa
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$29347$1XGIwa
                                 (cons
                                   g$b$29349$1XGIwa
                                   g$b*$29350$1XGIwa)))
                             g$rhs*$29348$1XGIwa))
                         (g$invalid-fmls-error$28722$1XGIwa
                           g$stx$29344$1XGIwa
                           g$lhs*$29347$1XGIwa))))
                    g$ls/false$29346$1XGIwa)
                  ((case-lambda
                     ((g$t$29351$1XGIwa)
                      ((case-lambda
                         ((g$ls/false$29352$1XGIwa)
                          (if (if g$ls/false$29352$1XGIwa
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$29353$1XGIwa
                                         g$lhs*$29354$1XGIwa
                                         g$rhs*$29355$1XGIwa
                                         g$b$29356$1XGIwa
                                         g$b*$29357$1XGIwa)
                                       (g$id?$28259$1XGIwa
                                         g$f$29353$1XGIwa)))
                                    g$ls/false$29352$1XGIwa))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$29358$1XGIwa
                                   g$lhs*$29359$1XGIwa
                                   g$rhs*$29360$1XGIwa
                                   g$b$29361$1XGIwa
                                   g$b*$29362$1XGIwa)
                                 (if (g$valid-bound-ids?$28264$1XGIwa
                                       g$lhs*$29359$1XGIwa)
                                   (g$bless$28720$1XGIwa
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$29358$1XGIwa
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$29359$1XGIwa
                                                 (cons
                                                   g$b$29361$1XGIwa
                                                   g$b*$29362$1XGIwa)))))
                                         g$f$29358$1XGIwa)
                                       g$rhs*$29360$1XGIwa))
                                   (g$invalid-fmls-error$28722$1XGIwa
                                     g$stx$29344$1XGIwa
                                     g$lhs*$29359$1XGIwa))))
                              g$ls/false$29352$1XGIwa)
                            (g$syntax-violation$28876$1XGIwa
                              '#f
                              '"invalid syntax"
                              g$t$29351$1XGIwa))))
                       (g$syntax-dispatch$28757$1XGIwa
                         g$t$29351$1XGIwa
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$29345$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29345$1XGIwa
               '(_ #(each (any any)) any . each-any)))))
         g$stx$29344$1XGIwa))))
   (g$let-values-macro$28724$1XGIwa
     g$let-values-macro$32319$1XGIwa
     (case-lambda
       ((g$stx$29363$1XGIwa)
        (letrec* ((g$rename$29364$1XGIwa
                    (case-lambda
                      ((g$x$29415$1XGIwa
                         g$old*$29416$1XGIwa
                         g$new*$29417$1XGIwa)
                       (begin
                         (if (not (g$id?$28259$1XGIwa g$x$29415$1XGIwa))
                           (g$syntax-violation$28876$1XGIwa
                             '#f
                             '"not an indentifier"
                             g$stx$29363$1XGIwa
                             g$x$29415$1XGIwa)
                           (void))
                         (if (g$bound-id-member?$28266$1XGIwa
                               g$x$29415$1XGIwa
                               g$old*$29416$1XGIwa)
                           (g$syntax-violation$28876$1XGIwa
                             '#f
                             '"duplicate binding"
                             g$stx$29363$1XGIwa
                             g$x$29415$1XGIwa)
                           (void))
                         ((case-lambda
                            ((g$y$29418$1XGIwa)
                             (values
                               g$y$29418$1XGIwa
                               (cons
                                 g$x$29415$1XGIwa
                                 g$old*$29416$1XGIwa)
                               (cons
                                 g$y$29418$1XGIwa
                                 g$new*$29417$1XGIwa))))
                          (gensym
                            (g$syntax->datum$28879$1XGIwa
                              g$x$29415$1XGIwa)))))))
                  (g$rename*$29365$1XGIwa
                    (case-lambda
                      ((g$x*$29406$1XGIwa
                         g$old*$29407$1XGIwa
                         g$new*$29408$1XGIwa)
                       (if (null? g$x*$29406$1XGIwa)
                         (values
                           '()
                           g$old*$29407$1XGIwa
                           g$new*$29408$1XGIwa)
                         (begin
                           '#f
                           (call-with-values
                             (case-lambda
                               (()
                                (g$rename$29364$1XGIwa
                                  (car g$x*$29406$1XGIwa)
                                  g$old*$29407$1XGIwa
                                  g$new*$29408$1XGIwa)))
                             (case-lambda
                               ((g$x$29409$1XGIwa
                                  g$old*$29410$1XGIwa
                                  g$new*$29411$1XGIwa)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$rename*$29365$1XGIwa
                                       (cdr g$x*$29406$1XGIwa)
                                       g$old*$29410$1XGIwa
                                       g$new*$29411$1XGIwa)))
                                  (case-lambda
                                    ((g$x*$29412$1XGIwa
                                       g$old*$29413$1XGIwa
                                       g$new*$29414$1XGIwa)
                                     (values
                                       (cons
                                         g$x$29409$1XGIwa
                                         g$x*$29412$1XGIwa)
                                       g$old*$29413$1XGIwa
                                       g$new*$29414$1XGIwa)))))))))))))
          ((case-lambda
             ((g$t$29366$1XGIwa)
              ((case-lambda
                 ((g$ls/false$29367$1XGIwa)
                  (if g$ls/false$29367$1XGIwa
                    (apply
                      (case-lambda
                        ((g$b$29368$1XGIwa g$b*$29369$1XGIwa)
                         (g$cons*$19663$1XGIwa
                           (g$bless$28720$1XGIwa 'let)
                           '()
                           g$b$29368$1XGIwa
                           g$b*$29369$1XGIwa)))
                      g$ls/false$29367$1XGIwa)
                    ((case-lambda
                       ((g$t$29370$1XGIwa)
                        ((case-lambda
                           ((g$ls/false$29371$1XGIwa)
                            (if g$ls/false$29371$1XGIwa
                              (apply
                                (case-lambda
                                  ((g$lhs*$29372$1XGIwa
                                     g$rhs*$29373$1XGIwa
                                     g$b$29374$1XGIwa
                                     g$b*$29375$1XGIwa)
                                   (g$bless$28720$1XGIwa
                                     ((letrec ((g$f$29376$1XGIwa
                                                 (case-lambda
                                                   ((g$lhs*$29377$1XGIwa
                                                      g$rhs*$29378$1XGIwa
                                                      g$old*$29379$1XGIwa
                                                      g$new*$29380$1XGIwa)
                                                    (if (null?
                                                          g$lhs*$29377$1XGIwa)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$19661$1XGIwa
                                                            list
                                                            g$old*$29379$1XGIwa
                                                            g$new*$29380$1XGIwa)
                                                          (cons
                                                            g$b$29374$1XGIwa
                                                            g$b*$29375$1XGIwa)))
                                                      (begin
                                                        '#f
                                                        ((case-lambda
                                                           ((g$t$29381$1XGIwa)
                                                            ((case-lambda
                                                               ((g$ls/false$29382$1XGIwa)
                                                                (if g$ls/false$29382$1XGIwa
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x*$29383$1XGIwa)
                                                                       (call-with-values
                                                                         (case-lambda
                                                                           (()
                                                                            (g$rename*$29365$1XGIwa
                                                                              g$x*$29383$1XGIwa
                                                                              g$old*$29379$1XGIwa
                                                                              g$new*$29380$1XGIwa)))
                                                                         (case-lambda
                                                                           ((g$y*$29387$1XGIwa
                                                                              g$old*$29388$1XGIwa
                                                                              g$new*$29389$1XGIwa)
                                                                            ((case-lambda
                                                                               ((g$new*$29390$1XGIwa
                                                                                  g$old*$29391$1XGIwa
                                                                                  g$y*$29392$1XGIwa)
                                                                                (list
                                                                                  'call-with-values
                                                                                  (list
                                                                                    'lambda
                                                                                    '()
                                                                                    (car g$rhs*$29378$1XGIwa))
                                                                                  (list
                                                                                    'lambda
                                                                                    g$y*$29392$1XGIwa
                                                                                    (g$f$29376$1XGIwa
                                                                                      (cdr g$lhs*$29377$1XGIwa)
                                                                                      (cdr g$rhs*$29378$1XGIwa)
                                                                                      g$old*$29391$1XGIwa
                                                                                      g$new*$29390$1XGIwa)))))
                                                                             g$new*$29389$1XGIwa
                                                                             g$old*$29388$1XGIwa
                                                                             g$y*$29387$1XGIwa))))))
                                                                    g$ls/false$29382$1XGIwa)
                                                                  ((case-lambda
                                                                     ((g$t$29393$1XGIwa)
                                                                      ((case-lambda
                                                                         ((g$ls/false$29394$1XGIwa)
                                                                          (if g$ls/false$29394$1XGIwa
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$x*$29395$1XGIwa
                                                                                   g$x$29396$1XGIwa)
                                                                                 (call-with-values
                                                                                   (case-lambda
                                                                                     (()
                                                                                      (g$rename$29364$1XGIwa
                                                                                        g$x$29396$1XGIwa
                                                                                        g$old*$29379$1XGIwa
                                                                                        g$new*$29380$1XGIwa)))
                                                                                   (case-lambda
                                                                                     ((g$y$29397$1XGIwa
                                                                                        g$old*$29398$1XGIwa
                                                                                        g$new*$29399$1XGIwa)
                                                                                      (call-with-values
                                                                                        (case-lambda
                                                                                          (()
                                                                                           (g$rename*$29365$1XGIwa
                                                                                             g$x*$29395$1XGIwa
                                                                                             g$old*$29398$1XGIwa
                                                                                             g$new*$29399$1XGIwa)))
                                                                                        (case-lambda
                                                                                          ((g$y*$29400$1XGIwa
                                                                                             g$old*$29401$1XGIwa
                                                                                             g$new*$29402$1XGIwa)
                                                                                           (list
                                                                                             'call-with-values
                                                                                             (list
                                                                                               'lambda
                                                                                               '()
                                                                                               (car g$rhs*$29378$1XGIwa))
                                                                                             (list
                                                                                               'lambda
                                                                                               (append
                                                                                                 g$y*$29400$1XGIwa
                                                                                                 g$y$29397$1XGIwa)
                                                                                               (g$f$29376$1XGIwa
                                                                                                 (cdr g$lhs*$29377$1XGIwa)
                                                                                                 (cdr g$rhs*$29378$1XGIwa)
                                                                                                 g$old*$29401$1XGIwa
                                                                                                 g$new*$29402$1XGIwa)))))))))))
                                                                              g$ls/false$29394$1XGIwa)
                                                                            ((case-lambda
                                                                               ((g$t$29403$1XGIwa)
                                                                                ((case-lambda
                                                                                   ((g$ls/false$29404$1XGIwa)
                                                                                    (if g$ls/false$29404$1XGIwa
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$others$29405$1XGIwa)
                                                                                           (g$syntax-violation$28876$1XGIwa
                                                                                             '#f
                                                                                             '"malformed bindings"
                                                                                             g$stx$29363$1XGIwa
                                                                                             g$others$29405$1XGIwa)))
                                                                                        g$ls/false$29404$1XGIwa)
                                                                                      (g$syntax-violation$28876$1XGIwa
                                                                                        '#f
                                                                                        '"invalid syntax"
                                                                                        g$t$29403$1XGIwa))))
                                                                                 (g$syntax-dispatch$28757$1XGIwa
                                                                                   g$t$29403$1XGIwa
                                                                                   'any))))
                                                                             g$t$29393$1XGIwa))))
                                                                       (g$syntax-dispatch$28757$1XGIwa
                                                                         g$t$29393$1XGIwa
                                                                         '#(each+
                                                                            any
                                                                            ()
                                                                            any)))))
                                                                   g$t$29381$1XGIwa))))
                                                             (g$syntax-dispatch$28757$1XGIwa
                                                               g$t$29381$1XGIwa
                                                               'each-any))))
                                                         (car g$lhs*$29377$1XGIwa))))))))
                                        g$f$29376$1XGIwa)
                                      g$lhs*$29372$1XGIwa
                                      g$rhs*$29373$1XGIwa
                                      '()
                                      '()))))
                                g$ls/false$29371$1XGIwa)
                              (g$syntax-violation$28876$1XGIwa
                                '#f
                                '"invalid syntax"
                                g$t$29370$1XGIwa))))
                         (g$syntax-dispatch$28757$1XGIwa
                           g$t$29370$1XGIwa
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$29366$1XGIwa))))
               (g$syntax-dispatch$28757$1XGIwa
                 g$t$29366$1XGIwa
                 '(_ () any . each-any)))))
           g$stx$29363$1XGIwa)))))
   (g$let*-values-macro$28725$1XGIwa
     g$let*-values-macro$32320$1XGIwa
     (case-lambda
       ((g$stx$29419$1XGIwa)
        (letrec* ((g$check$29420$1XGIwa
                    (case-lambda
                      ((g$x*$29444$1XGIwa)
                       (if (not (null? g$x*$29444$1XGIwa))
                         ((case-lambda
                            ((g$x$29445$1XGIwa)
                             (begin
                               (if (not (g$id?$28259$1XGIwa
                                          g$x$29445$1XGIwa))
                                 (g$syntax-violation$28876$1XGIwa
                                   '#f
                                   '"not an identifier"
                                   g$stx$29419$1XGIwa
                                   g$x$29445$1XGIwa)
                                 (void))
                               (g$check$29420$1XGIwa
                                 (cdr g$x*$29444$1XGIwa))
                               (if (g$bound-id-member?$28266$1XGIwa
                                     g$x$29445$1XGIwa
                                     (cdr g$x*$29444$1XGIwa))
                                 (g$syntax-violation$28876$1XGIwa
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$29419$1XGIwa
                                   g$x$29445$1XGIwa)
                                 (void)))))
                          (car g$x*$29444$1XGIwa))
                         (void))))))
          ((case-lambda
             ((g$t$29421$1XGIwa)
              ((case-lambda
                 ((g$ls/false$29422$1XGIwa)
                  (if g$ls/false$29422$1XGIwa
                    (apply
                      (case-lambda
                        ((g$b$29423$1XGIwa g$b*$29424$1XGIwa)
                         (g$cons*$19663$1XGIwa
                           (g$bless$28720$1XGIwa 'let)
                           '()
                           g$b$29423$1XGIwa
                           g$b*$29424$1XGIwa)))
                      g$ls/false$29422$1XGIwa)
                    ((case-lambda
                       ((g$t$29425$1XGIwa)
                        ((case-lambda
                           ((g$ls/false$29426$1XGIwa)
                            (if g$ls/false$29426$1XGIwa
                              (apply
                                (case-lambda
                                  ((g$lhs*$29427$1XGIwa
                                     g$rhs*$29428$1XGIwa
                                     g$b$29429$1XGIwa
                                     g$b*$29430$1XGIwa)
                                   (g$bless$28720$1XGIwa
                                     ((letrec ((g$f$29431$1XGIwa
                                                 (case-lambda
                                                   ((g$lhs*$29432$1XGIwa
                                                      g$rhs*$29433$1XGIwa)
                                                    (if (null?
                                                          g$lhs*$29432$1XGIwa)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$29429$1XGIwa
                                                          g$b*$29430$1XGIwa))
                                                      (begin
                                                        '#f
                                                        ((case-lambda
                                                           ((g$t$29434$1XGIwa)
                                                            ((case-lambda
                                                               ((g$ls/false$29435$1XGIwa)
                                                                (if g$ls/false$29435$1XGIwa
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x*$29436$1XGIwa)
                                                                       (begin
                                                                         (g$check$29420$1XGIwa
                                                                           g$x*$29436$1XGIwa)
                                                                         (list
                                                                           'call-with-values
                                                                           (list
                                                                             'lambda
                                                                             '()
                                                                             (car g$rhs*$29433$1XGIwa))
                                                                           (list
                                                                             'lambda
                                                                             g$x*$29436$1XGIwa
                                                                             (g$f$29431$1XGIwa
                                                                               (cdr g$lhs*$29432$1XGIwa)
                                                                               (cdr g$rhs*$29433$1XGIwa)))))))
                                                                    g$ls/false$29435$1XGIwa)
                                                                  ((case-lambda
                                                                     ((g$t$29437$1XGIwa)
                                                                      ((case-lambda
                                                                         ((g$ls/false$29438$1XGIwa)
                                                                          (if g$ls/false$29438$1XGIwa
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$x*$29439$1XGIwa
                                                                                   g$x$29440$1XGIwa)
                                                                                 (begin
                                                                                   (g$check$29420$1XGIwa
                                                                                     (cons
                                                                                       g$x$29440$1XGIwa
                                                                                       g$x*$29439$1XGIwa))
                                                                                   (list
                                                                                     'call-with-values
                                                                                     (list
                                                                                       'lambda
                                                                                       '()
                                                                                       (car g$rhs*$29433$1XGIwa))
                                                                                     (list
                                                                                       'lambda
                                                                                       (append
                                                                                         g$x*$29439$1XGIwa
                                                                                         g$x$29440$1XGIwa)
                                                                                       (g$f$29431$1XGIwa
                                                                                         (cdr g$lhs*$29432$1XGIwa)
                                                                                         (cdr g$rhs*$29433$1XGIwa)))))))
                                                                              g$ls/false$29438$1XGIwa)
                                                                            ((case-lambda
                                                                               ((g$t$29441$1XGIwa)
                                                                                ((case-lambda
                                                                                   ((g$ls/false$29442$1XGIwa)
                                                                                    (if g$ls/false$29442$1XGIwa
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$others$29443$1XGIwa)
                                                                                           (g$syntax-violation$28876$1XGIwa
                                                                                             '#f
                                                                                             '"malformed bindings"
                                                                                             g$stx$29419$1XGIwa
                                                                                             g$others$29443$1XGIwa)))
                                                                                        g$ls/false$29442$1XGIwa)
                                                                                      (g$syntax-violation$28876$1XGIwa
                                                                                        '#f
                                                                                        '"invalid syntax"
                                                                                        g$t$29441$1XGIwa))))
                                                                                 (g$syntax-dispatch$28757$1XGIwa
                                                                                   g$t$29441$1XGIwa
                                                                                   'any))))
                                                                             g$t$29437$1XGIwa))))
                                                                       (g$syntax-dispatch$28757$1XGIwa
                                                                         g$t$29437$1XGIwa
                                                                         '#(each+
                                                                            any
                                                                            ()
                                                                            any)))))
                                                                   g$t$29434$1XGIwa))))
                                                             (g$syntax-dispatch$28757$1XGIwa
                                                               g$t$29434$1XGIwa
                                                               'each-any))))
                                                         (car g$lhs*$29432$1XGIwa))))))))
                                        g$f$29431$1XGIwa)
                                      g$lhs*$29427$1XGIwa
                                      g$rhs*$29428$1XGIwa))))
                                g$ls/false$29426$1XGIwa)
                              (g$syntax-violation$28876$1XGIwa
                                '#f
                                '"invalid syntax"
                                g$t$29425$1XGIwa))))
                         (g$syntax-dispatch$28757$1XGIwa
                           g$t$29425$1XGIwa
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$29421$1XGIwa))))
               (g$syntax-dispatch$28757$1XGIwa
                 g$t$29421$1XGIwa
                 '(_ () any . each-any)))))
           g$stx$29419$1XGIwa)))))
   (g$trace-lambda-macro$28726$1XGIwa
     g$trace-lambda-macro$32321$1XGIwa
     (case-lambda
       ((g$stx$29446$1XGIwa)
        ((case-lambda
           ((g$t$29447$1XGIwa)
            ((case-lambda
               ((g$ls/false$29448$1XGIwa)
                (if g$ls/false$29448$1XGIwa
                  (apply
                    (case-lambda
                      ((g$who$29449$1XGIwa
                         g$fmls$29450$1XGIwa
                         g$b$29451$1XGIwa
                         g$b*$29452$1XGIwa)
                       (if (g$valid-bound-ids?$28264$1XGIwa
                             g$fmls$29450$1XGIwa)
                         (g$bless$28720$1XGIwa
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$29449$1XGIwa)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$29450$1XGIwa
                                 (cons
                                   g$b$29451$1XGIwa
                                   g$b*$29452$1XGIwa)))))
                         (g$invalid-fmls-error$28722$1XGIwa
                           g$stx$29446$1XGIwa
                           g$fmls$29450$1XGIwa))))
                    g$ls/false$29448$1XGIwa)
                  ((case-lambda
                     ((g$t$29453$1XGIwa)
                      ((case-lambda
                         ((g$ls/false$29454$1XGIwa)
                          (if g$ls/false$29454$1XGIwa
                            (apply
                              (case-lambda
                                ((g$who$29455$1XGIwa
                                   g$fmls$29456$1XGIwa
                                   g$last$29457$1XGIwa
                                   g$b$29458$1XGIwa
                                   g$b*$29459$1XGIwa)
                                 (if (g$valid-bound-ids?$28264$1XGIwa
                                       (cons
                                         g$last$29457$1XGIwa
                                         g$fmls$29456$1XGIwa))
                                   (g$bless$28720$1XGIwa
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$29455$1XGIwa)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$29456$1XGIwa
                                             g$last$29457$1XGIwa)
                                           (cons
                                             g$b$29458$1XGIwa
                                             g$b*$29459$1XGIwa)))))
                                   (g$invalid-fmls-error$28722$1XGIwa
                                     g$stx$29446$1XGIwa
                                     (append
                                       g$fmls$29456$1XGIwa
                                       g$last$29457$1XGIwa)))))
                              g$ls/false$29454$1XGIwa)
                            (g$syntax-violation$28876$1XGIwa
                              '#f
                              '"invalid syntax"
                              g$t$29453$1XGIwa))))
                       (g$syntax-dispatch$28757$1XGIwa
                         g$t$29453$1XGIwa
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$29447$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29447$1XGIwa
               '(_ any each-any any . each-any)))))
         g$stx$29446$1XGIwa))))
   (g$trace-define-macro$28727$1XGIwa
     g$trace-define-macro$32322$1XGIwa
     (case-lambda
       ((g$stx$29460$1XGIwa)
        ((case-lambda
           ((g$t$29461$1XGIwa)
            ((case-lambda
               ((g$ls/false$29462$1XGIwa)
                (if g$ls/false$29462$1XGIwa
                  (apply
                    (case-lambda
                      ((g$who$29463$1XGIwa
                         g$fmls$29464$1XGIwa
                         g$b$29465$1XGIwa
                         g$b*$29466$1XGIwa)
                       (if (g$valid-bound-ids?$28264$1XGIwa
                             g$fmls$29464$1XGIwa)
                         (g$bless$28720$1XGIwa
                           (list
                             'define
                             g$who$29463$1XGIwa
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$29463$1XGIwa)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$29464$1XGIwa
                                   (cons
                                     g$b$29465$1XGIwa
                                     g$b*$29466$1XGIwa))))))
                         (g$invalid-fmls-error$28722$1XGIwa
                           g$stx$29460$1XGIwa
                           g$fmls$29464$1XGIwa))))
                    g$ls/false$29462$1XGIwa)
                  ((case-lambda
                     ((g$t$29467$1XGIwa)
                      ((case-lambda
                         ((g$ls/false$29468$1XGIwa)
                          (if g$ls/false$29468$1XGIwa
                            (apply
                              (case-lambda
                                ((g$who$29469$1XGIwa
                                   g$fmls$29470$1XGIwa
                                   g$last$29471$1XGIwa
                                   g$b$29472$1XGIwa
                                   g$b*$29473$1XGIwa)
                                 (if (g$valid-bound-ids?$28264$1XGIwa
                                       (cons
                                         g$last$29471$1XGIwa
                                         g$fmls$29470$1XGIwa))
                                   (g$bless$28720$1XGIwa
                                     (list
                                       'define
                                       g$who$29469$1XGIwa
                                       (list
                                         'make-traced-procedure
                                         (list
                                           'quote
                                           g$who$29469$1XGIwa)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$29470$1XGIwa
                                               g$last$29471$1XGIwa)
                                             (cons
                                               g$b$29472$1XGIwa
                                               g$b*$29473$1XGIwa))))))
                                   (g$invalid-fmls-error$28722$1XGIwa
                                     g$stx$29460$1XGIwa
                                     (append
                                       g$fmls$29470$1XGIwa
                                       g$last$29471$1XGIwa)))))
                              g$ls/false$29468$1XGIwa)
                            ((case-lambda
                               ((g$t$29474$1XGIwa)
                                ((case-lambda
                                   ((g$ls/false$29475$1XGIwa)
                                    (if g$ls/false$29475$1XGIwa
                                      (apply
                                        (case-lambda
                                          ((g$who$29476$1XGIwa
                                             g$expr$29477$1XGIwa)
                                           (if (g$id?$28259$1XGIwa
                                                 g$who$29476$1XGIwa)
                                             (g$bless$28720$1XGIwa
                                               (list
                                                 'define
                                                 g$who$29476$1XGIwa
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$29477$1XGIwa))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$29476$1XGIwa)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$28876$1XGIwa
                                               '#f
                                               '"invalid name"
                                               g$stx$29460$1XGIwa))))
                                        g$ls/false$29475$1XGIwa)
                                      (g$syntax-violation$28876$1XGIwa
                                        '#f
                                        '"invalid syntax"
                                        g$t$29474$1XGIwa))))
                                 (g$syntax-dispatch$28757$1XGIwa
                                   g$t$29474$1XGIwa
                                   '(_ any any)))))
                             g$t$29467$1XGIwa))))
                       (g$syntax-dispatch$28757$1XGIwa
                         g$t$29467$1XGIwa
                         '(_ (any . #(each+ any () any))
                             any
                             .
                             each-any)))))
                   g$t$29461$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29461$1XGIwa
               '(_ (any . each-any) any . each-any)))))
         g$stx$29460$1XGIwa))))
   (g$trace-define-syntax-macro$28728$1XGIwa
     g$trace-define-syntax-macro$32323$1XGIwa
     (case-lambda
       ((g$stx$29478$1XGIwa)
        ((case-lambda
           ((g$t$29479$1XGIwa)
            ((case-lambda
               ((g$ls/false$29480$1XGIwa)
                (if g$ls/false$29480$1XGIwa
                  (apply
                    (case-lambda
                      ((g$who$29481$1XGIwa g$expr$29482$1XGIwa)
                       (if (g$id?$28259$1XGIwa g$who$29481$1XGIwa)
                         (g$bless$28720$1XGIwa
                           (list
                             'define-syntax
                             g$who$29481$1XGIwa
                             (list
                               'make-traced-macro
                               (list 'quote g$who$29481$1XGIwa)
                               g$expr$29482$1XGIwa)))
                         (g$syntax-violation$28876$1XGIwa
                           '#f
                           '"invalid name"
                           g$stx$29478$1XGIwa))))
                    g$ls/false$29480$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29479$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29479$1XGIwa
               '(_ any any)))))
         g$stx$29478$1XGIwa))))
   (g$trace-let/rec-syntax$28729$1XGIwa
     g$trace-let/rec-syntax$32324$1XGIwa
     (case-lambda
       ((g$who$29483$1XGIwa)
        (case-lambda
          ((g$stx$29484$1XGIwa)
           ((case-lambda
              ((g$t$29485$1XGIwa)
               ((case-lambda
                  ((g$ls/false$29486$1XGIwa)
                   (if g$ls/false$29486$1XGIwa
                     (apply
                       (case-lambda
                         ((g$lhs*$29487$1XGIwa
                            g$rhs*$29488$1XGIwa
                            g$b$29489$1XGIwa
                            g$b*$29490$1XGIwa)
                          (if (g$valid-bound-ids?$28264$1XGIwa
                                g$lhs*$29487$1XGIwa)
                            ((case-lambda
                               ((g$rhs*$29491$1XGIwa)
                                (g$bless$28720$1XGIwa
                                  (cons
                                    g$who$29483$1XGIwa
                                    (cons
                                      (g$map$19661$1XGIwa
                                        list
                                        g$lhs*$29487$1XGIwa
                                        g$rhs*$29491$1XGIwa)
                                      (cons
                                        g$b$29489$1XGIwa
                                        g$b*$29490$1XGIwa))))))
                             (g$map$19661$1XGIwa
                               (case-lambda
                                 ((g$lhs$29492$1XGIwa
                                    g$rhs$29493$1XGIwa)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$29492$1XGIwa)
                                    g$rhs$29493$1XGIwa)))
                               g$lhs*$29487$1XGIwa
                               g$rhs*$29488$1XGIwa))
                            (g$invalid-fmls-error$28722$1XGIwa
                              g$stx$29484$1XGIwa
                              g$lhs*$29487$1XGIwa))))
                       g$ls/false$29486$1XGIwa)
                     (g$syntax-violation$28876$1XGIwa
                       '#f
                       '"invalid syntax"
                       g$t$29485$1XGIwa))))
                (g$syntax-dispatch$28757$1XGIwa
                  g$t$29485$1XGIwa
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$29484$1XGIwa))))))
   (g$trace-let-syntax-macro$28730$1XGIwa
     g$trace-let-syntax-macro$32325$1XGIwa
     (g$trace-let/rec-syntax$28729$1XGIwa 'let-syntax))
   (g$trace-letrec-syntax-macro$28731$1XGIwa
     g$trace-letrec-syntax-macro$32326$1XGIwa
     (g$trace-let/rec-syntax$28729$1XGIwa 'letrec-syntax))
   (g$guard-macro$28732$1XGIwa
     g$guard-macro$32327$1XGIwa
     (case-lambda
       ((g$x$29494$1XGIwa)
        (letrec* ((g$gen-clauses$29495$1XGIwa
                    (case-lambda
                      ((g$con$29507$1XGIwa
                         g$outerk$29508$1XGIwa
                         g$clause*$29509$1XGIwa)
                       (letrec* ((g$f$29510$1XGIwa
                                   (case-lambda
                                     ((g$x$29538$1XGIwa
                                        g$k$29539$1XGIwa)
                                      ((case-lambda
                                         ((g$t$29540$1XGIwa)
                                          ((case-lambda
                                             ((g$ls/false$29541$1XGIwa)
                                              (if g$ls/false$29541$1XGIwa
                                                (apply
                                                  (case-lambda
                                                    ((g$e$29542$1XGIwa
                                                       g$p$29543$1XGIwa)
                                                     ((case-lambda
                                                        ((g$t$29544$1XGIwa)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$29544$1XGIwa
                                                               g$e$29542$1XGIwa))
                                                           (list
                                                             'if
                                                             g$t$29544$1XGIwa
                                                             (list
                                                               g$p$29543$1XGIwa
                                                               g$t$29544$1XGIwa)
                                                             g$k$29539$1XGIwa))))
                                                      (gensym))))
                                                  g$ls/false$29541$1XGIwa)
                                                ((case-lambda
                                                   ((g$t$29545$1XGIwa)
                                                    ((case-lambda
                                                       ((g$ls/false$29546$1XGIwa)
                                                        (if g$ls/false$29546$1XGIwa
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$29547$1XGIwa)
                                                               ((case-lambda
                                                                  ((g$t$29548$1XGIwa)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$29548$1XGIwa
                                                                         g$e$29547$1XGIwa))
                                                                     (list
                                                                       'if
                                                                       g$t$29548$1XGIwa
                                                                       g$t$29548$1XGIwa
                                                                       g$k$29539$1XGIwa))))
                                                                (gensym))))
                                                            g$ls/false$29546$1XGIwa)
                                                          ((case-lambda
                                                             ((g$t$29549$1XGIwa)
                                                              ((case-lambda
                                                                 ((g$ls/false$29550$1XGIwa)
                                                                  (if g$ls/false$29550$1XGIwa
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$29551$1XGIwa
                                                                           g$v$29552$1XGIwa
                                                                           g$v*$29553$1XGIwa)
                                                                         (list
                                                                           'if
                                                                           g$e$29551$1XGIwa
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$29552$1XGIwa
                                                                               g$v*$29553$1XGIwa))
                                                                           g$k$29539$1XGIwa)))
                                                                      g$ls/false$29550$1XGIwa)
                                                                    ((case-lambda
                                                                       ((g$t$29554$1XGIwa)
                                                                        ((case-lambda
                                                                           ((g$ls/false$29555$1XGIwa)
                                                                            (if g$ls/false$29555$1XGIwa
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$28876$1XGIwa
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$29538$1XGIwa)))
                                                                                g$ls/false$29555$1XGIwa)
                                                                              (g$syntax-violation$28876$1XGIwa
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$29554$1XGIwa))))
                                                                         (g$syntax-dispatch$28757$1XGIwa
                                                                           g$t$29554$1XGIwa
                                                                           '_))))
                                                                     g$t$29549$1XGIwa))))
                                                               (g$syntax-dispatch$28757$1XGIwa
                                                                 g$t$29549$1XGIwa
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$29545$1XGIwa))))
                                                     (g$syntax-dispatch$28757$1XGIwa
                                                       g$t$29545$1XGIwa
                                                       '(any)))))
                                                 g$t$29540$1XGIwa))))
                                           (g$syntax-dispatch$28757$1XGIwa
                                             g$t$29540$1XGIwa
                                             '(any #(scheme-id =>)
                                                   any)))))
                                       g$x$29538$1XGIwa))))
                                 (g$f*$29511$1XGIwa
                                   (case-lambda
                                     ((g$x*$29518$1XGIwa)
                                      ((case-lambda
                                         ((g$t$29519$1XGIwa)
                                          ((case-lambda
                                             ((g$ls/false$29520$1XGIwa)
                                              (if g$ls/false$29520$1XGIwa
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$29507$1XGIwa)
                                                       '#t)))
                                                  g$ls/false$29520$1XGIwa)
                                                ((case-lambda
                                                   ((g$t$29521$1XGIwa)
                                                    ((case-lambda
                                                       ((g$ls/false$29522$1XGIwa)
                                                        (if g$ls/false$29522$1XGIwa
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$29523$1XGIwa
                                                                 g$e*$29524$1XGIwa)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$29523$1XGIwa
                                                                     g$e*$29524$1XGIwa))
                                                                 '#f)))
                                                            g$ls/false$29522$1XGIwa)
                                                          ((case-lambda
                                                             ((g$t$29525$1XGIwa)
                                                              ((case-lambda
                                                                 ((g$ls/false$29526$1XGIwa)
                                                                  (if g$ls/false$29526$1XGIwa
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$29527$1XGIwa
                                                                           g$cls*$29528$1XGIwa)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$29511$1XGIwa
                                                                                g$cls*$29528$1XGIwa)))
                                                                           (case-lambda
                                                                             ((g$e$29531$1XGIwa
                                                                                g$g$29532$1XGIwa)
                                                                              ((case-lambda
                                                                                 ((g$g$29533$1XGIwa
                                                                                    g$e$29534$1XGIwa)
                                                                                  (values
                                                                                    (g$f$29510$1XGIwa
                                                                                      g$cls$29527$1XGIwa
                                                                                      g$e$29534$1XGIwa)
                                                                                    g$g$29533$1XGIwa)))
                                                                               g$g$29532$1XGIwa
                                                                               g$e$29531$1XGIwa))))))
                                                                      g$ls/false$29526$1XGIwa)
                                                                    ((case-lambda
                                                                       ((g$t$29535$1XGIwa)
                                                                        ((case-lambda
                                                                           ((g$ls/false$29536$1XGIwa)
                                                                            (if g$ls/false$29536$1XGIwa
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$29537$1XGIwa)
                                                                                   (g$syntax-violation$28876$1XGIwa
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$29537$1XGIwa)))
                                                                                g$ls/false$29536$1XGIwa)
                                                                              (g$syntax-violation$28876$1XGIwa
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$29535$1XGIwa))))
                                                                         (g$syntax-dispatch$28757$1XGIwa
                                                                           g$t$29535$1XGIwa
                                                                           'any))))
                                                                     g$t$29525$1XGIwa))))
                                                               (g$syntax-dispatch$28757$1XGIwa
                                                                 g$t$29525$1XGIwa
                                                                 '(any .
                                                                       any)))))
                                                           g$t$29521$1XGIwa))))
                                                     (g$syntax-dispatch$28757$1XGIwa
                                                       g$t$29521$1XGIwa
                                                       '((#(scheme-id
                                                            else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$29519$1XGIwa))))
                                           (g$syntax-dispatch$28757$1XGIwa
                                             g$t$29519$1XGIwa
                                             '()))))
                                       g$x*$29518$1XGIwa)))))
                         (call-with-values
                           (case-lambda
                             (()
                              (g$f*$29511$1XGIwa
                                g$clause*$29509$1XGIwa)))
                           (case-lambda
                             ((g$code$29514$1XGIwa
                                g$raisek$29515$1XGIwa)
                              ((case-lambda
                                 ((g$raisek$29516$1XGIwa
                                    g$code$29517$1XGIwa)
                                  (if g$raisek$29516$1XGIwa
                                    (list
                                      g$outerk$29508$1XGIwa
                                      g$code$29517$1XGIwa)
                                    g$code$29517$1XGIwa)))
                               g$raisek$29515$1XGIwa
                               g$code$29514$1XGIwa)))))))))
          ((case-lambda
             ((g$t$29496$1XGIwa)
              ((case-lambda
                 ((g$ls/false$29497$1XGIwa)
                  (if (if g$ls/false$29497$1XGIwa
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$29498$1XGIwa
                                 g$clause*$29499$1XGIwa
                                 g$b$29500$1XGIwa
                                 g$b*$29501$1XGIwa)
                               (g$id?$28259$1XGIwa g$con$29498$1XGIwa)))
                            g$ls/false$29497$1XGIwa))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$29502$1XGIwa
                           g$clause*$29503$1XGIwa
                           g$b$29504$1XGIwa
                           g$b*$29505$1XGIwa)
                         ((case-lambda
                            ((g$outerk$29506$1XGIwa)
                             (g$bless$28720$1XGIwa
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$29506$1XGIwa)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$29502$1XGIwa)
                                           (g$gen-clauses$29495$1XGIwa
                                             g$con$29502$1XGIwa
                                             g$outerk$29506$1XGIwa
                                             g$clause*$29503$1XGIwa))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               g$b$29504$1XGIwa
                                               g$b*$29505$1XGIwa)))))))))))
                          (gensym))))
                      g$ls/false$29497$1XGIwa)
                    (g$syntax-violation$28876$1XGIwa
                      '#f
                      '"invalid syntax"
                      g$t$29496$1XGIwa))))
               (g$syntax-dispatch$28757$1XGIwa
                 g$t$29496$1XGIwa
                 '(_ (any . each-any) any . each-any)))))
           g$x$29494$1XGIwa)))))
   (g$define-enumeration-macro$28733$1XGIwa
     g$define-enumeration-macro$32328$1XGIwa
     (case-lambda
       ((g$stx$29556$1XGIwa)
        (letrec* ((g$set?$29557$1XGIwa
                    (case-lambda
                      ((g$x$29570$1XGIwa)
                       ((case-lambda
                          ((g$t$29571$1XGIwa)
                           (if g$t$29571$1XGIwa
                             g$t$29571$1XGIwa
                             (begin
                               '#f
                               (if (not (g$memq$19653$1XGIwa
                                          (car g$x$29570$1XGIwa)
                                          (cdr g$x$29570$1XGIwa)))
                                 (begin
                                   '#f
                                   (g$set?$29557$1XGIwa
                                     (cdr g$x$29570$1XGIwa)))
                                 '#f)))))
                        (null? g$x$29570$1XGIwa)))))
                  (g$remove-dups$29558$1XGIwa
                    (case-lambda
                      ((g$ls$29569$1XGIwa)
                       (if (null? g$ls$29569$1XGIwa)
                         '()
                         (begin
                           '#f
                           (cons
                             (car g$ls$29569$1XGIwa)
                             (g$remove-dups$29558$1XGIwa
                               (g$remq$19668$1XGIwa
                                 (car g$ls$29569$1XGIwa)
                                 (cdr g$ls$29569$1XGIwa))))))))))
          ((case-lambda
             ((g$t$29559$1XGIwa)
              ((case-lambda
                 ((g$ls/false$29560$1XGIwa)
                  (if (if g$ls/false$29560$1XGIwa
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$29561$1XGIwa
                                 g$id*$29562$1XGIwa
                                 g$maker$29563$1XGIwa)
                               (if (g$id?$28259$1XGIwa
                                     g$name$29561$1XGIwa)
                                 (if (g$id?$28259$1XGIwa
                                       g$maker$29563$1XGIwa)
                                   (begin
                                     '#f
                                     (g$for-all$19659$1XGIwa
                                       g$id?$28259$1XGIwa
                                       g$id*$29562$1XGIwa))
                                   '#f)
                                 '#f)))
                            g$ls/false$29560$1XGIwa))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$29564$1XGIwa
                           g$id*$29565$1XGIwa
                           g$maker$29566$1XGIwa)
                         ((case-lambda
                            ((g$name*$29567$1XGIwa g$mk$29568$1XGIwa)
                             (g$bless$28720$1XGIwa
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$29568$1XGIwa
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list
                                         'quote
                                         g$name*$29567$1XGIwa))))
                                 (list
                                   'define-syntax
                                   g$name$29564$1XGIwa
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list
                                               'quote
                                               g$name*$29567$1XGIwa))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list
                                                 'quote
                                                 g$name$29564$1XGIwa)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$29566$1XGIwa
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$29566$1XGIwa)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$29567$1XGIwa))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$29566$1XGIwa)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$29568$1XGIwa
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$29558$1XGIwa
                            (g$syntax->datum$28879$1XGIwa
                              g$id*$29565$1XGIwa))
                          (gensym))))
                      g$ls/false$29560$1XGIwa)
                    (g$syntax-violation$28876$1XGIwa
                      '#f
                      '"invalid syntax"
                      g$t$29559$1XGIwa))))
               (g$syntax-dispatch$28757$1XGIwa
                 g$t$29559$1XGIwa
                 '(_ any each-any any)))))
           g$stx$29556$1XGIwa)))))
   (g$time-macro$28734$1XGIwa
     g$time-macro$32329$1XGIwa
     (case-lambda
       ((g$stx$29572$1XGIwa)
        ((case-lambda
           ((g$t$29573$1XGIwa)
            ((case-lambda
               ((g$ls/false$29574$1XGIwa)
                (if g$ls/false$29574$1XGIwa
                  (apply
                    (case-lambda
                      ((g$expr$29575$1XGIwa)
                       ((case-lambda
                          ((g$str$29576$1XGIwa)
                           (g$bless$28720$1XGIwa
                             (list
                               'time-it
                               g$str$29576$1XGIwa
                               (list
                                 'lambda
                                 '()
                                 g$expr$29575$1XGIwa)))))
                        (call-with-values
                          (case-lambda
                            (()
                             (g$open-string-output-port$26651$1XGIwa)))
                          (case-lambda
                            ((g$p$29579$1XGIwa g$e$29580$1XGIwa)
                             ((case-lambda
                                ((g$e$29581$1XGIwa g$p$29582$1XGIwa)
                                 (begin
                                   (write
                                     (g$syntax->datum$28879$1XGIwa
                                       g$expr$29575$1XGIwa)
                                     g$p$29582$1XGIwa)
                                   (g$e$29581$1XGIwa))))
                              g$e$29580$1XGIwa
                              g$p$29579$1XGIwa)))))))
                    g$ls/false$29574$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29573$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29573$1XGIwa
               '(_ any)))))
         g$stx$29572$1XGIwa))))
   (g$delay-macro$28735$1XGIwa
     g$delay-macro$32330$1XGIwa
     (case-lambda
       ((g$stx$29583$1XGIwa)
        ((case-lambda
           ((g$t$29584$1XGIwa)
            ((case-lambda
               ((g$ls/false$29585$1XGIwa)
                (if g$ls/false$29585$1XGIwa
                  (apply
                    (case-lambda
                      ((g$expr$29586$1XGIwa)
                       (g$bless$28720$1XGIwa
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$29586$1XGIwa)))))
                    g$ls/false$29585$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29584$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29584$1XGIwa
               '(_ any)))))
         g$stx$29583$1XGIwa))))
   (g$assert-macro$28736$1XGIwa
     g$assert-macro$32331$1XGIwa
     (case-lambda
       ((g$stx$29587$1XGIwa)
        ((case-lambda
           ((g$t$29588$1XGIwa)
            ((case-lambda
               ((g$ls/false$29589$1XGIwa)
                (if g$ls/false$29589$1XGIwa
                  (apply
                    (case-lambda
                      ((g$expr$29590$1XGIwa)
                       ((case-lambda
                          ((g$pos$29591$1XGIwa)
                           (g$bless$28720$1XGIwa
                             (list
                               'unless
                               g$expr$29590$1XGIwa
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$29590$1XGIwa)
                                 (list 'quote g$pos$29591$1XGIwa))))))
                        ((case-lambda
                           ((g$t$29592$1XGIwa)
                            (if g$t$29592$1XGIwa
                              g$t$29592$1XGIwa
                              (begin
                                '#f
                                (g$expression-position$28871$1XGIwa
                                  g$expr$29590$1XGIwa)))))
                         (g$expression-position$28871$1XGIwa
                           g$stx$29587$1XGIwa)))))
                    g$ls/false$29589$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29588$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29588$1XGIwa
               '(_ any)))))
         g$stx$29587$1XGIwa))))
   (g$endianness-macro$28737$1XGIwa
     g$endianness-macro$32332$1XGIwa
     (case-lambda
       ((g$stx$29593$1XGIwa)
        ((case-lambda
           ((g$t$29594$1XGIwa)
            ((case-lambda
               ((g$ls/false$29595$1XGIwa)
                (if g$ls/false$29595$1XGIwa
                  (apply
                    (case-lambda
                      ((g$e$29596$1XGIwa)
                       ((case-lambda
                          ((g$t$29597$1XGIwa)
                           (if (eqv? g$t$29597$1XGIwa 'little)
                             (g$bless$28720$1XGIwa ''little)
                             (if (eqv? g$t$29597$1XGIwa 'big)
                               (g$bless$28720$1XGIwa ''big)
                               (begin
                                 '#f
                                 (g$syntax-violation$28876$1XGIwa
                                   '#f
                                   '"endianness must be big or little"
                                   g$stx$29593$1XGIwa))))))
                        (g$syntax->datum$28879$1XGIwa
                          g$e$29596$1XGIwa))))
                    g$ls/false$29595$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29594$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29594$1XGIwa
               '(_ any)))))
         g$stx$29593$1XGIwa))))
   (g$identifier-syntax-macro$28738$1XGIwa
     g$identifier-syntax-macro$32333$1XGIwa
     (case-lambda
       ((g$stx$29598$1XGIwa)
        ((case-lambda
           ((g$t$29599$1XGIwa)
            ((case-lambda
               ((g$ls/false$29600$1XGIwa)
                (if g$ls/false$29600$1XGIwa
                  (apply
                    (case-lambda
                      ((g$expr$29601$1XGIwa)
                       (g$bless$28720$1XGIwa
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$29601$1XGIwa))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$29601$1XGIwa)
                                   '(#'(e* ...))))))))))
                    g$ls/false$29600$1XGIwa)
                  ((case-lambda
                     ((g$t$29602$1XGIwa)
                      ((case-lambda
                         ((g$ls/false$29603$1XGIwa)
                          (if (if g$ls/false$29603$1XGIwa
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$29604$1XGIwa
                                         g$expr1$29605$1XGIwa
                                         g$id2$29606$1XGIwa
                                         g$expr2$29607$1XGIwa
                                         g$expr3$29608$1XGIwa)
                                       (if (g$id?$28259$1XGIwa
                                             g$id1$29604$1XGIwa)
                                         (if (g$id?$28259$1XGIwa
                                               g$id2$29606$1XGIwa)
                                           (begin
                                             '#f
                                             (g$id?$28259$1XGIwa
                                               g$expr2$29607$1XGIwa))
                                           '#f)
                                         '#f)))
                                    g$ls/false$29603$1XGIwa))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$29609$1XGIwa
                                   g$expr1$29610$1XGIwa
                                   g$id2$29611$1XGIwa
                                   g$expr2$29612$1XGIwa
                                   g$expr3$29613$1XGIwa)
                                 (g$bless$28720$1XGIwa
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             g$expr1$29610$1XGIwa))
                                         (list
                                           (list
                                             'set!
                                             'id
                                             g$expr2$29612$1XGIwa)
                                           (list
                                             'syntax
                                             g$expr3$29613$1XGIwa))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$29610$1XGIwa
                                               '(e* ...))))))))))
                              g$ls/false$29603$1XGIwa)
                            (g$syntax-violation$28876$1XGIwa
                              '#f
                              '"invalid syntax"
                              g$t$29602$1XGIwa))))
                       (g$syntax-dispatch$28757$1XGIwa
                         g$t$29602$1XGIwa
                         '(_ (any any)
                             ((#(scheme-id set!) any any) any))))))
                   g$t$29599$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29599$1XGIwa
               '(_ any)))))
         g$stx$29598$1XGIwa))))
   (g$do-macro$28739$1XGIwa
     g$do-macro$32334$1XGIwa
     (case-lambda
       ((g$stx$29614$1XGIwa)
        (letrec* ((g$bind$29615$1XGIwa
                    (case-lambda
                      ((g$x$29627$1XGIwa)
                       ((case-lambda
                          ((g$t$29628$1XGIwa)
                           ((case-lambda
                              ((g$ls/false$29629$1XGIwa)
                               (if g$ls/false$29629$1XGIwa
                                 (apply
                                   (case-lambda
                                     ((g$x$29630$1XGIwa
                                        g$init$29631$1XGIwa)
                                      (list
                                        g$x$29630$1XGIwa
                                        g$init$29631$1XGIwa
                                        g$x$29630$1XGIwa)))
                                   g$ls/false$29629$1XGIwa)
                                 ((case-lambda
                                    ((g$t$29632$1XGIwa)
                                     ((case-lambda
                                        ((g$ls/false$29633$1XGIwa)
                                         (if g$ls/false$29633$1XGIwa
                                           (apply
                                             (case-lambda
                                               ((g$x$29634$1XGIwa
                                                  g$init$29635$1XGIwa
                                                  g$step$29636$1XGIwa)
                                                (list
                                                  g$x$29634$1XGIwa
                                                  g$init$29635$1XGIwa
                                                  g$step$29636$1XGIwa)))
                                             g$ls/false$29633$1XGIwa)
                                           ((case-lambda
                                              ((g$t$29637$1XGIwa)
                                               ((case-lambda
                                                  ((g$ls/false$29638$1XGIwa)
                                                   (if g$ls/false$29638$1XGIwa
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$28876$1XGIwa
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$29614$1XGIwa)))
                                                       g$ls/false$29638$1XGIwa)
                                                     (g$syntax-violation$28876$1XGIwa
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$29637$1XGIwa))))
                                                (g$syntax-dispatch$28757$1XGIwa
                                                  g$t$29637$1XGIwa
                                                  '_))))
                                            g$t$29632$1XGIwa))))
                                      (g$syntax-dispatch$28757$1XGIwa
                                        g$t$29632$1XGIwa
                                        '(any any any)))))
                                  g$t$29628$1XGIwa))))
                            (g$syntax-dispatch$28757$1XGIwa
                              g$t$29628$1XGIwa
                              '(any any)))))
                        g$x$29627$1XGIwa)))))
          ((case-lambda
             ((g$t$29616$1XGIwa)
              ((case-lambda
                 ((g$ls/false$29617$1XGIwa)
                  (if g$ls/false$29617$1XGIwa
                    (apply
                      (case-lambda
                        ((g$binding*$29618$1XGIwa
                           g$test$29619$1XGIwa
                           g$expr*$29620$1XGIwa
                           g$command*$29621$1XGIwa)
                         ((case-lambda
                            ((g$t$29622$1XGIwa)
                             ((case-lambda
                                ((g$ls/false$29623$1XGIwa)
                                 (if g$ls/false$29623$1XGIwa
                                   (apply
                                     (case-lambda
                                       ((g$x*$29624$1XGIwa
                                          g$init*$29625$1XGIwa
                                          g$step*$29626$1XGIwa)
                                        (if (g$valid-bound-ids?$28264$1XGIwa
                                              g$x*$29624$1XGIwa)
                                          (g$bless$28720$1XGIwa
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$29624$1XGIwa
                                                    (list
                                                      'if
                                                      g$test$29619$1XGIwa
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$29620$1XGIwa))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$29621$1XGIwa
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$29626$1XGIwa))))))))
                                              (cons
                                                'loop
                                                g$init*$29625$1XGIwa)))
                                          (g$syntax-violation$28876$1XGIwa
                                            '#f
                                            '"invalid bindings"
                                            g$stx$29614$1XGIwa))))
                                     g$ls/false$29623$1XGIwa)
                                   (g$syntax-violation$28876$1XGIwa
                                     '#f
                                     '"invalid syntax"
                                     g$t$29622$1XGIwa))))
                              (g$syntax-dispatch$28757$1XGIwa
                                g$t$29622$1XGIwa
                                '#(each (any any any))))))
                          (g$map$19661$1XGIwa
                            g$bind$29615$1XGIwa
                            g$binding*$29618$1XGIwa))))
                      g$ls/false$29617$1XGIwa)
                    (g$syntax-violation$28876$1XGIwa
                      '#f
                      '"invalid syntax"
                      g$t$29616$1XGIwa))))
               (g$syntax-dispatch$28757$1XGIwa
                 g$t$29616$1XGIwa
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$29614$1XGIwa)))))
   (g$let*-macro$28740$1XGIwa
     g$let*-macro$32335$1XGIwa
     (case-lambda
       ((g$stx$29639$1XGIwa)
        ((case-lambda
           ((g$t$29640$1XGIwa)
            ((case-lambda
               ((g$ls/false$29641$1XGIwa)
                (if (if g$ls/false$29641$1XGIwa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$29642$1XGIwa
                               g$rhs*$29643$1XGIwa
                               g$b$29644$1XGIwa
                               g$b*$29645$1XGIwa)
                             (g$for-all$19659$1XGIwa
                               g$id?$28259$1XGIwa
                               g$lhs*$29642$1XGIwa)))
                          g$ls/false$29641$1XGIwa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$29646$1XGIwa
                         g$rhs*$29647$1XGIwa
                         g$b$29648$1XGIwa
                         g$b*$29649$1XGIwa)
                       (g$bless$28720$1XGIwa
                         ((letrec ((g$f$29650$1XGIwa
                                     (case-lambda
                                       ((g$x*$29651$1XGIwa)
                                        (if (null? g$x*$29651$1XGIwa)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$29648$1XGIwa
                                                g$b*$29649$1XGIwa)))
                                          (if (null?
                                                (cdr g$x*$29651$1XGIwa))
                                            (cons
                                              'let
                                              (cons
                                                (list
                                                  (car g$x*$29651$1XGIwa))
                                                (cons
                                                  g$b$29648$1XGIwa
                                                  g$b*$29649$1XGIwa)))
                                            (begin
                                              '#f
                                              (list
                                                'let
                                                (list
                                                  (car g$x*$29651$1XGIwa))
                                                (g$f$29650$1XGIwa
                                                  (cdr g$x*$29651$1XGIwa))))))))))
                            g$f$29650$1XGIwa)
                          (g$map$19661$1XGIwa
                            list
                            g$lhs*$29646$1XGIwa
                            g$rhs*$29647$1XGIwa)))))
                    g$ls/false$29641$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29640$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29640$1XGIwa
               '(_ #(each (any any)) any . each-any)))))
         g$stx$29639$1XGIwa))))
   (g$or-macro$28741$1XGIwa
     g$or-macro$32336$1XGIwa
     (case-lambda
       ((g$stx$29652$1XGIwa)
        ((case-lambda
           ((g$t$29653$1XGIwa)
            ((case-lambda
               ((g$ls/false$29654$1XGIwa)
                (if g$ls/false$29654$1XGIwa
                  (apply (case-lambda (() '#f)) g$ls/false$29654$1XGIwa)
                  ((case-lambda
                     ((g$t$29655$1XGIwa)
                      ((case-lambda
                         ((g$ls/false$29656$1XGIwa)
                          (if g$ls/false$29656$1XGIwa
                            (apply
                              (case-lambda
                                ((g$e$29657$1XGIwa g$e*$29658$1XGIwa)
                                 (g$bless$28720$1XGIwa
                                   ((letrec ((g$f$29659$1XGIwa
                                               (case-lambda
                                                 ((g$e$29660$1XGIwa
                                                    g$e*$29661$1XGIwa)
                                                  (if (null?
                                                        g$e*$29661$1XGIwa)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$29660$1XGIwa)
                                                    (begin
                                                      '#f
                                                      (list
                                                        'let
                                                        (list
                                                          (list
                                                            't
                                                            g$e$29660$1XGIwa))
                                                        (list
                                                          'if
                                                          't
                                                          't
                                                          (g$f$29659$1XGIwa
                                                            (car g$e*$29661$1XGIwa)
                                                            (cdr g$e*$29661$1XGIwa))))))))))
                                      g$f$29659$1XGIwa)
                                    g$e$29657$1XGIwa
                                    g$e*$29658$1XGIwa))))
                              g$ls/false$29656$1XGIwa)
                            (g$syntax-violation$28876$1XGIwa
                              '#f
                              '"invalid syntax"
                              g$t$29655$1XGIwa))))
                       (g$syntax-dispatch$28757$1XGIwa
                         g$t$29655$1XGIwa
                         '(_ any . each-any)))))
                   g$t$29653$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa g$t$29653$1XGIwa '(_)))))
         g$stx$29652$1XGIwa))))
   (g$and-macro$28742$1XGIwa
     g$and-macro$32337$1XGIwa
     (case-lambda
       ((g$stx$29662$1XGIwa)
        ((case-lambda
           ((g$t$29663$1XGIwa)
            ((case-lambda
               ((g$ls/false$29664$1XGIwa)
                (if g$ls/false$29664$1XGIwa
                  (apply (case-lambda (() '#t)) g$ls/false$29664$1XGIwa)
                  ((case-lambda
                     ((g$t$29665$1XGIwa)
                      ((case-lambda
                         ((g$ls/false$29666$1XGIwa)
                          (if g$ls/false$29666$1XGIwa
                            (apply
                              (case-lambda
                                ((g$e$29667$1XGIwa g$e*$29668$1XGIwa)
                                 (g$bless$28720$1XGIwa
                                   ((letrec ((g$f$29669$1XGIwa
                                               (case-lambda
                                                 ((g$e$29670$1XGIwa
                                                    g$e*$29671$1XGIwa)
                                                  (if (null?
                                                        g$e*$29671$1XGIwa)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$29670$1XGIwa)
                                                    (begin
                                                      '#f
                                                      (cons
                                                        'if
                                                        (cons
                                                          g$e$29670$1XGIwa
                                                          (cons
                                                            (g$f$29669$1XGIwa
                                                              (car g$e*$29671$1XGIwa)
                                                              (cdr g$e*$29671$1XGIwa))
                                                            '(#f))))))))))
                                      g$f$29669$1XGIwa)
                                    g$e$29667$1XGIwa
                                    g$e*$29668$1XGIwa))))
                              g$ls/false$29666$1XGIwa)
                            (g$syntax-violation$28876$1XGIwa
                              '#f
                              '"invalid syntax"
                              g$t$29665$1XGIwa))))
                       (g$syntax-dispatch$28757$1XGIwa
                         g$t$29665$1XGIwa
                         '(_ any . each-any)))))
                   g$t$29663$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa g$t$29663$1XGIwa '(_)))))
         g$stx$29662$1XGIwa))))
   (g$cond-macro$28743$1XGIwa
     g$cond-macro$32338$1XGIwa
     (case-lambda
       ((g$stx$29672$1XGIwa)
        ((case-lambda
           ((g$t$29673$1XGIwa)
            ((case-lambda
               ((g$ls/false$29674$1XGIwa)
                (if g$ls/false$29674$1XGIwa
                  (apply
                    (case-lambda
                      ((g$cls$29675$1XGIwa g$cls*$29676$1XGIwa)
                       (g$bless$28720$1XGIwa
                         ((letrec ((g$f$29677$1XGIwa
                                     (case-lambda
                                       ((g$cls$29678$1XGIwa
                                          g$cls*$29679$1XGIwa)
                                        (if (null? g$cls*$29679$1XGIwa)
                                          ((case-lambda
                                             ((g$t$29680$1XGIwa)
                                              ((case-lambda
                                                 ((g$ls/false$29681$1XGIwa)
                                                  (if g$ls/false$29681$1XGIwa
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$29682$1XGIwa
                                                           g$e*$29683$1XGIwa)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             '#f
                                                             (cons
                                                               g$e$29682$1XGIwa
                                                               g$e*$29683$1XGIwa)))))
                                                      g$ls/false$29681$1XGIwa)
                                                    ((case-lambda
                                                       ((g$t$29684$1XGIwa)
                                                        ((case-lambda
                                                           ((g$ls/false$29685$1XGIwa)
                                                            (if g$ls/false$29685$1XGIwa
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$29686$1XGIwa
                                                                     g$p$29687$1XGIwa)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$29686$1XGIwa))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$29687$1XGIwa
                                                                         '(t))))))
                                                                g$ls/false$29685$1XGIwa)
                                                              ((case-lambda
                                                                 ((g$t$29688$1XGIwa)
                                                                  ((case-lambda
                                                                     ((g$ls/false$29689$1XGIwa)
                                                                      (if g$ls/false$29689$1XGIwa
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$29690$1XGIwa)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$29690$1XGIwa
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$29689$1XGIwa)
                                                                        ((case-lambda
                                                                           ((g$t$29691$1XGIwa)
                                                                            ((case-lambda
                                                                               ((g$ls/false$29692$1XGIwa)
                                                                                (if g$ls/false$29692$1XGIwa
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$29693$1XGIwa
                                                                                         g$e*$29694$1XGIwa)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$29693$1XGIwa
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$29694$1XGIwa))))
                                                                                    g$ls/false$29692$1XGIwa)
                                                                                  ((case-lambda
                                                                                     ((g$t$29695$1XGIwa)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$29696$1XGIwa)
                                                                                          (if g$ls/false$29696$1XGIwa
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$28876$1XGIwa
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$29672$1XGIwa)))
                                                                                              g$ls/false$29696$1XGIwa)
                                                                                            (g$syntax-violation$28876$1XGIwa
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$29695$1XGIwa))))
                                                                                       (g$syntax-dispatch$28757$1XGIwa
                                                                                         g$t$29695$1XGIwa
                                                                                         '_))))
                                                                                   g$t$29691$1XGIwa))))
                                                                             (g$syntax-dispatch$28757$1XGIwa
                                                                               g$t$29691$1XGIwa
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$29688$1XGIwa))))
                                                                   (g$syntax-dispatch$28757$1XGIwa
                                                                     g$t$29688$1XGIwa
                                                                     '(any)))))
                                                               g$t$29684$1XGIwa))))
                                                         (g$syntax-dispatch$28757$1XGIwa
                                                           g$t$29684$1XGIwa
                                                           '(any #(scheme-id
                                                                   =>)
                                                                 any)))))
                                                     g$t$29680$1XGIwa))))
                                               (g$syntax-dispatch$28757$1XGIwa
                                                 g$t$29680$1XGIwa
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$29678$1XGIwa)
                                          (begin
                                            '#f
                                            ((case-lambda
                                               ((g$t$29697$1XGIwa)
                                                ((case-lambda
                                                   ((g$ls/false$29698$1XGIwa)
                                                    (if g$ls/false$29698$1XGIwa
                                                      (apply
                                                        (case-lambda
                                                          ((g$e$29699$1XGIwa
                                                             g$e*$29700$1XGIwa)
                                                           (g$syntax-violation$28876$1XGIwa
                                                             '#f
                                                             '"incorrect position of keyword else"
                                                             g$stx$29672$1XGIwa)))
                                                        g$ls/false$29698$1XGIwa)
                                                      ((case-lambda
                                                         ((g$t$29701$1XGIwa)
                                                          ((case-lambda
                                                             ((g$ls/false$29702$1XGIwa)
                                                              (if g$ls/false$29702$1XGIwa
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$e$29703$1XGIwa
                                                                       g$p$29704$1XGIwa)
                                                                     (list
                                                                       'let
                                                                       (list
                                                                         (list
                                                                           't
                                                                           g$e$29703$1XGIwa))
                                                                       (list
                                                                         'if
                                                                         't
                                                                         (cons
                                                                           g$p$29704$1XGIwa
                                                                           '(t))
                                                                         (g$f$29677$1XGIwa
                                                                           (car g$cls*$29679$1XGIwa)
                                                                           (cdr g$cls*$29679$1XGIwa))))))
                                                                  g$ls/false$29702$1XGIwa)
                                                                ((case-lambda
                                                                   ((g$t$29705$1XGIwa)
                                                                    ((case-lambda
                                                                       ((g$ls/false$29706$1XGIwa)
                                                                        (if g$ls/false$29706$1XGIwa
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$e$29707$1XGIwa)
                                                                               (list
                                                                                 'or
                                                                                 g$e$29707$1XGIwa
                                                                                 (g$f$29677$1XGIwa
                                                                                   (car g$cls*$29679$1XGIwa)
                                                                                   (cdr g$cls*$29679$1XGIwa)))))
                                                                            g$ls/false$29706$1XGIwa)
                                                                          ((case-lambda
                                                                             ((g$t$29708$1XGIwa)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$29709$1XGIwa)
                                                                                  (if g$ls/false$29709$1XGIwa
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$e$29710$1XGIwa
                                                                                           g$e*$29711$1XGIwa)
                                                                                         (list
                                                                                           'if
                                                                                           g$e$29710$1XGIwa
                                                                                           (cons
                                                                                             'begin
                                                                                             g$e*$29711$1XGIwa)
                                                                                           (g$f$29677$1XGIwa
                                                                                             (car g$cls*$29679$1XGIwa)
                                                                                             (cdr g$cls*$29679$1XGIwa)))))
                                                                                      g$ls/false$29709$1XGIwa)
                                                                                    ((case-lambda
                                                                                       ((g$t$29712$1XGIwa)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$29713$1XGIwa)
                                                                                            (if g$ls/false$29713$1XGIwa
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$syntax-violation$28876$1XGIwa
                                                                                                     '#f
                                                                                                     '"invalid last clause"
                                                                                                     g$stx$29672$1XGIwa)))
                                                                                                g$ls/false$29713$1XGIwa)
                                                                                              (g$syntax-violation$28876$1XGIwa
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$29712$1XGIwa))))
                                                                                         (g$syntax-dispatch$28757$1XGIwa
                                                                                           g$t$29712$1XGIwa
                                                                                           '_))))
                                                                                     g$t$29708$1XGIwa))))
                                                                               (g$syntax-dispatch$28757$1XGIwa
                                                                                 g$t$29708$1XGIwa
                                                                                 '(any .
                                                                                       each-any)))))
                                                                           g$t$29705$1XGIwa))))
                                                                     (g$syntax-dispatch$28757$1XGIwa
                                                                       g$t$29705$1XGIwa
                                                                       '(any)))))
                                                                 g$t$29701$1XGIwa))))
                                                           (g$syntax-dispatch$28757$1XGIwa
                                                             g$t$29701$1XGIwa
                                                             '(any #(scheme-id
                                                                     =>)
                                                                   any)))))
                                                       g$t$29697$1XGIwa))))
                                                 (g$syntax-dispatch$28757$1XGIwa
                                                   g$t$29697$1XGIwa
                                                   '(#(scheme-id else)
                                                     any
                                                     .
                                                     each-any)))))
                                             g$cls$29678$1XGIwa)))))))
                            g$f$29677$1XGIwa)
                          g$cls$29675$1XGIwa
                          g$cls*$29676$1XGIwa))))
                    g$ls/false$29674$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29673$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29673$1XGIwa
               '(_ any . each-any)))))
         g$stx$29672$1XGIwa))))
   (g$do-include$28744$1XGIwa
     g$do-include$32339$1XGIwa
     (case-lambda
       ((g$stx$29714$1XGIwa g$id$29715$1XGIwa g$filename$29716$1XGIwa)
        ((case-lambda
           ((g$filename$29717$1XGIwa)
            (begin
              (if (not (if (g$string?$20569$1XGIwa
                             g$filename$29717$1XGIwa)
                         (begin
                           '#f
                           (g$id?$28259$1XGIwa g$id$29715$1XGIwa))
                         '#f))
                (g$syntax-violation$28876$1XGIwa
                  '#f
                  '"invalid syntax"
                  g$stx$29714$1XGIwa)
                (void))
              (cons
                (g$bless$28720$1XGIwa 'begin)
                (g$with-input-from-file$26713$1XGIwa
                  g$filename$29717$1XGIwa
                  (case-lambda
                    (()
                     ((letrec ((g$f$29718$1XGIwa
                                 (case-lambda
                                   ((g$ls$29719$1XGIwa)
                                    ((case-lambda
                                       ((g$x$29720$1XGIwa)
                                        (if (eof-object?
                                              g$x$29720$1XGIwa)
                                          (g$reverse$20609$1XGIwa
                                            g$ls$29719$1XGIwa)
                                          (begin
                                            '#f
                                            (g$f$29718$1XGIwa
                                              (cons
                                                (g$datum->stx$28242$1XGIwa
                                                  g$id$29715$1XGIwa
                                                  g$x$29720$1XGIwa)
                                                g$ls$29719$1XGIwa))))))
                                     (read-annotated))))))
                        g$f$29718$1XGIwa)
                      '()))))))))
         (g$stx->datum$28270$1XGIwa g$filename$29716$1XGIwa)))))
   (g$include-macro$28745$1XGIwa
     g$include-macro$32340$1XGIwa
     (case-lambda
       ((g$e$29721$1XGIwa)
        ((case-lambda
           ((g$t$29722$1XGIwa)
            ((case-lambda
               ((g$ls/false$29723$1XGIwa)
                (if g$ls/false$29723$1XGIwa
                  (apply
                    (case-lambda
                      ((g$id$29724$1XGIwa g$filename$29725$1XGIwa)
                       (g$do-include$28744$1XGIwa
                         g$e$29721$1XGIwa
                         g$id$29724$1XGIwa
                         g$filename$29725$1XGIwa)))
                    g$ls/false$29723$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29722$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29722$1XGIwa
               '(any any)))))
         g$e$29721$1XGIwa))))
   (g$include-into-macro$28746$1XGIwa
     g$include-into-macro$32341$1XGIwa
     (case-lambda
       ((g$e$29726$1XGIwa)
        ((case-lambda
           ((g$t$29727$1XGIwa)
            ((case-lambda
               ((g$ls/false$29728$1XGIwa)
                (if g$ls/false$29728$1XGIwa
                  (apply
                    (case-lambda
                      ((g$id$29729$1XGIwa g$filename$29730$1XGIwa)
                       (g$do-include$28744$1XGIwa
                         g$e$29726$1XGIwa
                         g$id$29729$1XGIwa
                         g$filename$29730$1XGIwa)))
                    g$ls/false$29728$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29727$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29727$1XGIwa
               '(_ any any)))))
         g$e$29726$1XGIwa))))
   (g$syntax-rules-macro$28747$1XGIwa
     g$syntax-rules-macro$32342$1XGIwa
     (case-lambda
       ((g$e$29731$1XGIwa)
        ((case-lambda
           ((g$t$29732$1XGIwa)
            ((case-lambda
               ((g$ls/false$29733$1XGIwa)
                (if g$ls/false$29733$1XGIwa
                  (apply
                    (case-lambda
                      ((g$lits$29734$1XGIwa
                         g$pat*$29735$1XGIwa
                         g$tmp*$29736$1XGIwa)
                       (begin
                         (g$verify-literals$28760$1XGIwa
                           g$lits$29734$1XGIwa
                           g$e$29731$1XGIwa)
                         (g$bless$28720$1XGIwa
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$29734$1XGIwa
                                   (g$map$19661$1XGIwa
                                     (case-lambda
                                       ((g$pat$29737$1XGIwa
                                          g$tmp$29738$1XGIwa)
                                        ((case-lambda
                                           ((g$t$29739$1XGIwa)
                                            ((case-lambda
                                               ((g$ls/false$29740$1XGIwa)
                                                (if g$ls/false$29740$1XGIwa
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$29741$1XGIwa)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$29741$1XGIwa)
                                                         (list
                                                           'syntax
                                                           g$tmp$29738$1XGIwa))))
                                                    g$ls/false$29740$1XGIwa)
                                                  ((case-lambda
                                                     ((g$t$29742$1XGIwa)
                                                      ((case-lambda
                                                         ((g$ls/false$29743$1XGIwa)
                                                          (if g$ls/false$29743$1XGIwa
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$28876$1XGIwa
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$29731$1XGIwa
                                                                   g$pat$29737$1XGIwa)))
                                                              g$ls/false$29743$1XGIwa)
                                                            (g$syntax-violation$28876$1XGIwa
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$29742$1XGIwa))))
                                                       (g$syntax-dispatch$28757$1XGIwa
                                                         g$t$29742$1XGIwa
                                                         '_))))
                                                   g$t$29739$1XGIwa))))
                                             (g$syntax-dispatch$28757$1XGIwa
                                               g$t$29739$1XGIwa
                                               '(_ . any)))))
                                         g$pat$29737$1XGIwa)))
                                     g$pat*$29735$1XGIwa
                                     g$tmp*$29736$1XGIwa)))))))))
                    g$ls/false$29733$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$29732$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$29732$1XGIwa
               '(_ each-any . #(each (any any)))))))
         g$e$29731$1XGIwa))))
   (g$quasiquote-macro$28748$1XGIwa
     g$quasiquote-macro$32343$1XGIwa
     ((case-lambda
        (()
         (letrec* ((g$datum$29744$1XGIwa
                     (case-lambda
                       ((g$x$29894$1XGIwa)
                        (list
                          (g$scheme-stx$28700$1XGIwa 'quote)
                          (g$mkstx$28247$1XGIwa
                            g$x$29894$1XGIwa
                            '()
                            '()
                            '())))))
                   (g$quasicons*$29779$1XGIwa
                     (case-lambda
                       ((g$x$29890$1XGIwa g$y$29891$1XGIwa)
                        ((letrec ((g$f$29892$1XGIwa
                                    (case-lambda
                                      ((g$x$29893$1XGIwa)
                                       (if (null? g$x$29893$1XGIwa)
                                         g$y$29891$1XGIwa
                                         (g$quasicons$29780$1XGIwa
                                           (car g$x$29893$1XGIwa)
                                           (g$f$29892$1XGIwa
                                             (cdr g$x$29893$1XGIwa))))))))
                           g$f$29892$1XGIwa)
                         g$x$29890$1XGIwa))))
                   (g$quasicons$29780$1XGIwa
                     (case-lambda
                       ((g$x$29871$1XGIwa g$y$29872$1XGIwa)
                        ((case-lambda
                           ((g$t$29873$1XGIwa)
                            ((case-lambda
                               ((g$ls/false$29874$1XGIwa)
                                (if g$ls/false$29874$1XGIwa
                                  (apply
                                    (case-lambda
                                      ((g$dy$29875$1XGIwa)
                                       ((case-lambda
                                          ((g$t$29876$1XGIwa)
                                           ((case-lambda
                                              ((g$ls/false$29877$1XGIwa)
                                               (if g$ls/false$29877$1XGIwa
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$29878$1XGIwa)
                                                      (list
                                                        (g$scheme-stx$28700$1XGIwa
                                                          'quote)
                                                        (cons
                                                          g$dx$29878$1XGIwa
                                                          g$dy$29875$1XGIwa))))
                                                   g$ls/false$29877$1XGIwa)
                                                 ((case-lambda
                                                    ((g$t$29879$1XGIwa)
                                                     ((case-lambda
                                                        ((g$ls/false$29880$1XGIwa)
                                                         (if g$ls/false$29880$1XGIwa
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$29881$1XGIwa)
                                                                    ((case-lambda
                                                                       ((g$ls/false$29882$1XGIwa)
                                                                        (if g$ls/false$29882$1XGIwa
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$28700$1XGIwa
                                                                                   'list)
                                                                                 g$x$29871$1XGIwa)))
                                                                            g$ls/false$29882$1XGIwa)
                                                                          ((case-lambda
                                                                             ((g$t$29883$1XGIwa)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$29884$1XGIwa)
                                                                                  (if g$ls/false$29884$1XGIwa
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$28700$1XGIwa
                                                                                             'cons)
                                                                                           g$x$29871$1XGIwa
                                                                                           g$y$29872$1XGIwa)))
                                                                                      g$ls/false$29884$1XGIwa)
                                                                                    (g$syntax-violation$28876$1XGIwa
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$29883$1XGIwa))))
                                                                               (g$syntax-dispatch$28757$1XGIwa
                                                                                 g$t$29883$1XGIwa
                                                                                 '_))))
                                                                           g$t$29881$1XGIwa))))
                                                                     (g$syntax-dispatch$28757$1XGIwa
                                                                       g$t$29881$1XGIwa
                                                                       '()))))
                                                                 g$dy$29875$1XGIwa)))
                                                             g$ls/false$29880$1XGIwa)
                                                           (g$syntax-violation$28876$1XGIwa
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$29879$1XGIwa))))
                                                      (g$syntax-dispatch$28757$1XGIwa
                                                        g$t$29879$1XGIwa
                                                        '_))))
                                                  g$t$29876$1XGIwa))))
                                            (g$syntax-dispatch$28757$1XGIwa
                                              g$t$29876$1XGIwa
                                              '(#(scheme-id quote)
                                                any)))))
                                        g$x$29871$1XGIwa)))
                                    g$ls/false$29874$1XGIwa)
                                  ((case-lambda
                                     ((g$t$29885$1XGIwa)
                                      ((case-lambda
                                         ((g$ls/false$29886$1XGIwa)
                                          (if g$ls/false$29886$1XGIwa
                                            (apply
                                              (case-lambda
                                                ((g$stuff$29887$1XGIwa)
                                                 (g$cons*$19663$1XGIwa
                                                   (g$scheme-stx$28700$1XGIwa
                                                     'list)
                                                   g$x$29871$1XGIwa
                                                   g$stuff$29887$1XGIwa)))
                                              g$ls/false$29886$1XGIwa)
                                            ((case-lambda
                                               ((g$t$29888$1XGIwa)
                                                ((case-lambda
                                                   ((g$ls/false$29889$1XGIwa)
                                                    (if g$ls/false$29889$1XGIwa
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$28700$1XGIwa
                                                               'cons)
                                                             g$x$29871$1XGIwa
                                                             g$y$29872$1XGIwa)))
                                                        g$ls/false$29889$1XGIwa)
                                                      (g$syntax-violation$28876$1XGIwa
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$29888$1XGIwa))))
                                                 (g$syntax-dispatch$28757$1XGIwa
                                                   g$t$29888$1XGIwa
                                                   '_))))
                                             g$t$29885$1XGIwa))))
                                       (g$syntax-dispatch$28757$1XGIwa
                                         g$t$29885$1XGIwa
                                         '(#(scheme-id list)
                                           .
                                           each-any)))))
                                   g$t$29873$1XGIwa))))
                             (g$syntax-dispatch$28757$1XGIwa
                               g$t$29873$1XGIwa
                               '(#(scheme-id quote) any)))))
                         g$y$29872$1XGIwa))))
                   (g$quasiappend$29781$1XGIwa
                     (case-lambda
                       ((g$x$29858$1XGIwa g$y$29859$1XGIwa)
                        ((case-lambda
                           ((g$ls$29860$1XGIwa)
                            (if (null? g$ls$29860$1XGIwa)
                              (list
                                (g$scheme-stx$28700$1XGIwa 'quote)
                                '())
                              (if (null? (cdr g$ls$29860$1XGIwa))
                                (car g$ls$29860$1XGIwa)
                                (begin
                                  '#f
                                  (g$cons*$19663$1XGIwa
                                    (g$scheme-stx$28700$1XGIwa 'append)
                                    g$ls$29860$1XGIwa))))))
                         ((letrec ((g$f$29861$1XGIwa
                                     (case-lambda
                                       ((g$x$29862$1XGIwa)
                                        (if (null? g$x$29862$1XGIwa)
                                          ((case-lambda
                                             ((g$t$29863$1XGIwa)
                                              ((case-lambda
                                                 ((g$ls/false$29864$1XGIwa)
                                                  (if g$ls/false$29864$1XGIwa
                                                    (apply
                                                      (case-lambda
                                                        (() '()))
                                                      g$ls/false$29864$1XGIwa)
                                                    ((case-lambda
                                                       ((g$t$29865$1XGIwa)
                                                        ((case-lambda
                                                           ((g$ls/false$29866$1XGIwa)
                                                            (if g$ls/false$29866$1XGIwa
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$29859$1XGIwa)))
                                                                g$ls/false$29866$1XGIwa)
                                                              (g$syntax-violation$28876$1XGIwa
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$29865$1XGIwa))))
                                                         (g$syntax-dispatch$28757$1XGIwa
                                                           g$t$29865$1XGIwa
                                                           '_))))
                                                     g$t$29863$1XGIwa))))
                                               (g$syntax-dispatch$28757$1XGIwa
                                                 g$t$29863$1XGIwa
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           g$y$29859$1XGIwa)
                                          ((case-lambda
                                             ((g$t$29867$1XGIwa)
                                              ((case-lambda
                                                 ((g$ls/false$29868$1XGIwa)
                                                  (if g$ls/false$29868$1XGIwa
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$29861$1XGIwa
                                                           (cdr g$x$29862$1XGIwa))))
                                                      g$ls/false$29868$1XGIwa)
                                                    ((case-lambda
                                                       ((g$t$29869$1XGIwa)
                                                        ((case-lambda
                                                           ((g$ls/false$29870$1XGIwa)
                                                            (if g$ls/false$29870$1XGIwa
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$29862$1XGIwa)
                                                                     (g$f$29861$1XGIwa
                                                                       (cdr g$x$29862$1XGIwa)))))
                                                                g$ls/false$29870$1XGIwa)
                                                              (g$syntax-violation$28876$1XGIwa
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$29869$1XGIwa))))
                                                         (g$syntax-dispatch$28757$1XGIwa
                                                           g$t$29869$1XGIwa
                                                           '_))))
                                                     g$t$29867$1XGIwa))))
                                               (g$syntax-dispatch$28757$1XGIwa
                                                 g$t$29867$1XGIwa
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           (car g$x$29862$1XGIwa)))))))
                            g$f$29861$1XGIwa)
                          g$x$29858$1XGIwa)))))
                   (g$quasivector$29782$1XGIwa
                     (case-lambda
                       ((g$x$29833$1XGIwa)
                        ((case-lambda
                           ((g$pat-x$29834$1XGIwa)
                            ((case-lambda
                               ((g$t$29835$1XGIwa)
                                ((case-lambda
                                   ((g$ls/false$29836$1XGIwa)
                                    (if g$ls/false$29836$1XGIwa
                                      (apply
                                        (case-lambda
                                          ((g$x*$29837$1XGIwa)
                                           (list
                                             (g$scheme-stx$28700$1XGIwa
                                               'quote)
                                             (g$list->vector$20600$1XGIwa
                                               g$x*$29837$1XGIwa))))
                                        g$ls/false$29836$1XGIwa)
                                      ((case-lambda
                                         ((g$t$29838$1XGIwa)
                                          ((case-lambda
                                             ((g$ls/false$29839$1XGIwa)
                                              (if g$ls/false$29839$1XGIwa
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$29840$1XGIwa
                                                                 (case-lambda
                                                                   ((g$x$29841$1XGIwa
                                                                      g$k$29842$1XGIwa)
                                                                    ((case-lambda
                                                                       ((g$t$29843$1XGIwa)
                                                                        ((case-lambda
                                                                           ((g$ls/false$29844$1XGIwa)
                                                                            (if g$ls/false$29844$1XGIwa
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$29845$1XGIwa)
                                                                                   (g$k$29842$1XGIwa
                                                                                     (g$map$19661$1XGIwa
                                                                                       (case-lambda
                                                                                         ((g$x$29846$1XGIwa)
                                                                                          (list
                                                                                            (g$scheme-stx$28700$1XGIwa
                                                                                              'quote)
                                                                                            g$x$29846$1XGIwa)))
                                                                                       g$x*$29845$1XGIwa))))
                                                                                g$ls/false$29844$1XGIwa)
                                                                              ((case-lambda
                                                                                 ((g$t$29847$1XGIwa)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$29848$1XGIwa)
                                                                                      (if g$ls/false$29848$1XGIwa
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$29849$1XGIwa)
                                                                                             (g$k$29842$1XGIwa
                                                                                               g$x*$29849$1XGIwa)))
                                                                                          g$ls/false$29848$1XGIwa)
                                                                                        ((case-lambda
                                                                                           ((g$t$29850$1XGIwa)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$29851$1XGIwa)
                                                                                                (if g$ls/false$29851$1XGIwa
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$29852$1XGIwa
                                                                                                         g$y$29853$1XGIwa)
                                                                                                       (g$f$29840$1XGIwa
                                                                                                         g$y$29853$1XGIwa
                                                                                                         (case-lambda
                                                                                                           ((g$ls$29854$1XGIwa)
                                                                                                            (g$k$29842$1XGIwa
                                                                                                              (cons
                                                                                                                g$x$29852$1XGIwa
                                                                                                                g$ls$29854$1XGIwa)))))))
                                                                                                    g$ls/false$29851$1XGIwa)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$29855$1XGIwa)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$29856$1XGIwa)
                                                                                                          (if g$ls/false$29856$1XGIwa
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$28700$1XGIwa
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$29834$1XGIwa)))
                                                                                                              g$ls/false$29856$1XGIwa)
                                                                                                            (g$syntax-violation$28876$1XGIwa
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$29855$1XGIwa))))
                                                                                                       (g$syntax-dispatch$28757$1XGIwa
                                                                                                         g$t$29855$1XGIwa
                                                                                                         '_))))
                                                                                                   g$t$29850$1XGIwa))))
                                                                                             (g$syntax-dispatch$28757$1XGIwa
                                                                                               g$t$29850$1XGIwa
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$29847$1XGIwa))))
                                                                                   (g$syntax-dispatch$28757$1XGIwa
                                                                                     g$t$29847$1XGIwa
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$29843$1XGIwa))))
                                                                         (g$syntax-dispatch$28757$1XGIwa
                                                                           g$t$29843$1XGIwa
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$29841$1XGIwa)))))
                                                        g$f$29840$1XGIwa)
                                                      g$x$29833$1XGIwa
                                                      (case-lambda
                                                        ((g$ls$29857$1XGIwa)
                                                         (g$cons*$19663$1XGIwa
                                                           (g$scheme-stx$28700$1XGIwa
                                                             'vector)
                                                           g$ls$29857$1XGIwa))))))
                                                  g$ls/false$29839$1XGIwa)
                                                (g$syntax-violation$28876$1XGIwa
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$29838$1XGIwa))))
                                           (g$syntax-dispatch$28757$1XGIwa
                                             g$t$29838$1XGIwa
                                             '_))))
                                       g$t$29835$1XGIwa))))
                                 (g$syntax-dispatch$28757$1XGIwa
                                   g$t$29835$1XGIwa
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$29834$1XGIwa)))
                         g$x$29833$1XGIwa))))
                   (g$vquasi$29783$1XGIwa
                     (case-lambda
                       ((g$p$29816$1XGIwa g$lev$29817$1XGIwa)
                        ((case-lambda
                           ((g$t$29818$1XGIwa)
                            ((case-lambda
                               ((g$ls/false$29819$1XGIwa)
                                (if g$ls/false$29819$1XGIwa
                                  (apply
                                    (case-lambda
                                      ((g$p$29820$1XGIwa
                                         g$q$29821$1XGIwa)
                                       ((case-lambda
                                          ((g$t$29822$1XGIwa)
                                           ((case-lambda
                                              ((g$ls/false$29823$1XGIwa)
                                               (if g$ls/false$29823$1XGIwa
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$29824$1XGIwa)
                                                      (if (g$=$21625$1XGIwa
                                                            g$lev$29817$1XGIwa
                                                            '0)
                                                        (g$quasicons*$29779$1XGIwa
                                                          g$p$29824$1XGIwa
                                                          (g$vquasi$29783$1XGIwa
                                                            g$q$29821$1XGIwa
                                                            g$lev$29817$1XGIwa))
                                                        (g$quasicons$29780$1XGIwa
                                                          (g$quasicons$29780$1XGIwa
                                                            (g$datum$29744$1XGIwa
                                                              'unquote)
                                                            (g$quasi$29784$1XGIwa
                                                              g$p$29824$1XGIwa
                                                              (- g$lev$29817$1XGIwa
                                                                 '1)))
                                                          (g$vquasi$29783$1XGIwa
                                                            g$q$29821$1XGIwa
                                                            g$lev$29817$1XGIwa)))))
                                                   g$ls/false$29823$1XGIwa)
                                                 ((case-lambda
                                                    ((g$t$29825$1XGIwa)
                                                     ((case-lambda
                                                        ((g$ls/false$29826$1XGIwa)
                                                         (if g$ls/false$29826$1XGIwa
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$29827$1XGIwa)
                                                                (if (g$=$21625$1XGIwa
                                                                      g$lev$29817$1XGIwa
                                                                      '0)
                                                                  (g$quasiappend$29781$1XGIwa
                                                                    g$p$29827$1XGIwa
                                                                    (g$vquasi$29783$1XGIwa
                                                                      g$q$29821$1XGIwa
                                                                      g$lev$29817$1XGIwa))
                                                                  (g$quasicons$29780$1XGIwa
                                                                    (g$quasicons$29780$1XGIwa
                                                                      (g$datum$29744$1XGIwa
                                                                        'unquote-splicing)
                                                                      (g$quasi$29784$1XGIwa
                                                                        g$p$29827$1XGIwa
                                                                        (- g$lev$29817$1XGIwa
                                                                           '1)))
                                                                    (g$vquasi$29783$1XGIwa
                                                                      g$q$29821$1XGIwa
                                                                      g$lev$29817$1XGIwa)))))
                                                             g$ls/false$29826$1XGIwa)
                                                           ((case-lambda
                                                              ((g$t$29828$1XGIwa)
                                                               ((case-lambda
                                                                  ((g$ls/false$29829$1XGIwa)
                                                                   (if g$ls/false$29829$1XGIwa
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$29830$1XGIwa)
                                                                          (g$quasicons$29780$1XGIwa
                                                                            (g$quasi$29784$1XGIwa
                                                                              g$p$29830$1XGIwa
                                                                              g$lev$29817$1XGIwa)
                                                                            (g$vquasi$29783$1XGIwa
                                                                              g$q$29821$1XGIwa
                                                                              g$lev$29817$1XGIwa))))
                                                                       g$ls/false$29829$1XGIwa)
                                                                     (g$syntax-violation$28876$1XGIwa
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$29828$1XGIwa))))
                                                                (g$syntax-dispatch$28757$1XGIwa
                                                                  g$t$29828$1XGIwa
                                                                  'any))))
                                                            g$t$29825$1XGIwa))))
                                                      (g$syntax-dispatch$28757$1XGIwa
                                                        g$t$29825$1XGIwa
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$29822$1XGIwa))))
                                            (g$syntax-dispatch$28757$1XGIwa
                                              g$t$29822$1XGIwa
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$29820$1XGIwa)))
                                    g$ls/false$29819$1XGIwa)
                                  ((case-lambda
                                     ((g$t$29831$1XGIwa)
                                      ((case-lambda
                                         ((g$ls/false$29832$1XGIwa)
                                          (if g$ls/false$29832$1XGIwa
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$28700$1XGIwa
                                                     'quote)
                                                   '())))
                                              g$ls/false$29832$1XGIwa)
                                            (g$syntax-violation$28876$1XGIwa
                                              '#f
                                              '"invalid syntax"
                                              g$t$29831$1XGIwa))))
                                       (g$syntax-dispatch$28757$1XGIwa
                                         g$t$29831$1XGIwa
                                         '()))))
                                   g$t$29818$1XGIwa))))
                             (g$syntax-dispatch$28757$1XGIwa
                               g$t$29818$1XGIwa
                               '(any . any)))))
                         g$p$29816$1XGIwa))))
                   (g$quasi$29784$1XGIwa
                     (case-lambda
                       ((g$p$29789$1XGIwa g$lev$29790$1XGIwa)
                        ((case-lambda
                           ((g$t$29791$1XGIwa)
                            ((case-lambda
                               ((g$ls/false$29792$1XGIwa)
                                (if g$ls/false$29792$1XGIwa
                                  (apply
                                    (case-lambda
                                      ((g$p$29793$1XGIwa)
                                       (if (g$=$21625$1XGIwa
                                             g$lev$29790$1XGIwa
                                             '0)
                                         g$p$29793$1XGIwa
                                         (g$quasicons$29780$1XGIwa
                                           (g$datum$29744$1XGIwa
                                             'unquote)
                                           (g$quasi$29784$1XGIwa
                                             (list g$p$29793$1XGIwa)
                                             (- g$lev$29790$1XGIwa
                                                '1))))))
                                    g$ls/false$29792$1XGIwa)
                                  ((case-lambda
                                     ((g$t$29794$1XGIwa)
                                      ((case-lambda
                                         ((g$ls/false$29795$1XGIwa)
                                          (if g$ls/false$29795$1XGIwa
                                            (apply
                                              (case-lambda
                                                ((g$p$29796$1XGIwa
                                                   g$q$29797$1XGIwa)
                                                 (if (g$=$21625$1XGIwa
                                                       g$lev$29790$1XGIwa
                                                       '0)
                                                   (g$quasicons*$29779$1XGIwa
                                                     g$p$29796$1XGIwa
                                                     (g$quasi$29784$1XGIwa
                                                       g$q$29797$1XGIwa
                                                       g$lev$29790$1XGIwa))
                                                   (g$quasicons$29780$1XGIwa
                                                     (g$quasicons$29780$1XGIwa
                                                       (g$datum$29744$1XGIwa
                                                         'unquote)
                                                       (g$quasi$29784$1XGIwa
                                                         g$p$29796$1XGIwa
                                                         (- g$lev$29790$1XGIwa
                                                            '1)))
                                                     (g$quasi$29784$1XGIwa
                                                       g$q$29797$1XGIwa
                                                       g$lev$29790$1XGIwa)))))
                                              g$ls/false$29795$1XGIwa)
                                            ((case-lambda
                                               ((g$t$29798$1XGIwa)
                                                ((case-lambda
                                                   ((g$ls/false$29799$1XGIwa)
                                                    (if g$ls/false$29799$1XGIwa
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$29800$1XGIwa
                                                             g$q$29801$1XGIwa)
                                                           (if (g$=$21625$1XGIwa
                                                                 g$lev$29790$1XGIwa
                                                                 '0)
                                                             (g$quasiappend$29781$1XGIwa
                                                               g$p$29800$1XGIwa
                                                               (g$quasi$29784$1XGIwa
                                                                 g$q$29801$1XGIwa
                                                                 g$lev$29790$1XGIwa))
                                                             (g$quasicons$29780$1XGIwa
                                                               (g$quasicons$29780$1XGIwa
                                                                 (g$datum$29744$1XGIwa
                                                                   'unquote-splicing)
                                                                 (g$quasi$29784$1XGIwa
                                                                   g$p$29800$1XGIwa
                                                                   (- g$lev$29790$1XGIwa
                                                                      '1)))
                                                               (g$quasi$29784$1XGIwa
                                                                 g$q$29801$1XGIwa
                                                                 g$lev$29790$1XGIwa)))))
                                                        g$ls/false$29799$1XGIwa)
                                                      ((case-lambda
                                                         ((g$t$29802$1XGIwa)
                                                          ((case-lambda
                                                             ((g$ls/false$29803$1XGIwa)
                                                              (if g$ls/false$29803$1XGIwa
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$29804$1XGIwa)
                                                                     (g$quasicons$29780$1XGIwa
                                                                       (g$datum$29744$1XGIwa
                                                                         'quasiquote)
                                                                       (g$quasi$29784$1XGIwa
                                                                         (list
                                                                           g$p$29804$1XGIwa)
                                                                         (+ g$lev$29790$1XGIwa
                                                                            '1)))))
                                                                  g$ls/false$29803$1XGIwa)
                                                                ((case-lambda
                                                                   ((g$t$29805$1XGIwa)
                                                                    ((case-lambda
                                                                       ((g$ls/false$29806$1XGIwa)
                                                                        (if g$ls/false$29806$1XGIwa
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$29807$1XGIwa
                                                                                 g$q$29808$1XGIwa)
                                                                               (g$quasicons$29780$1XGIwa
                                                                                 (g$quasi$29784$1XGIwa
                                                                                   g$p$29807$1XGIwa
                                                                                   g$lev$29790$1XGIwa)
                                                                                 (g$quasi$29784$1XGIwa
                                                                                   g$q$29808$1XGIwa
                                                                                   g$lev$29790$1XGIwa))))
                                                                            g$ls/false$29806$1XGIwa)
                                                                          ((case-lambda
                                                                             ((g$t$29809$1XGIwa)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$29810$1XGIwa)
                                                                                  (if (if g$ls/false$29810$1XGIwa
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$29811$1XGIwa)
                                                                                               (not (g$stx?$28231$1XGIwa
                                                                                                      g$x$29811$1XGIwa))))
                                                                                            g$ls/false$29810$1XGIwa))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$29812$1XGIwa)
                                                                                         (g$quasivector$29782$1XGIwa
                                                                                           (g$vquasi$29783$1XGIwa
                                                                                             g$x$29812$1XGIwa
                                                                                             g$lev$29790$1XGIwa))))
                                                                                      g$ls/false$29810$1XGIwa)
                                                                                    ((case-lambda
                                                                                       ((g$t$29813$1XGIwa)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$29814$1XGIwa)
                                                                                            (if g$ls/false$29814$1XGIwa
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$29815$1XGIwa)
                                                                                                   (list
                                                                                                     (g$scheme-stx$28700$1XGIwa
                                                                                                       'quote)
                                                                                                     g$p$29815$1XGIwa)))
                                                                                                g$ls/false$29814$1XGIwa)
                                                                                              (g$syntax-violation$28876$1XGIwa
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$29813$1XGIwa))))
                                                                                         (g$syntax-dispatch$28757$1XGIwa
                                                                                           g$t$29813$1XGIwa
                                                                                           'any))))
                                                                                     g$t$29809$1XGIwa))))
                                                                               (g$syntax-dispatch$28757$1XGIwa
                                                                                 g$t$29809$1XGIwa
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$29805$1XGIwa))))
                                                                     (g$syntax-dispatch$28757$1XGIwa
                                                                       g$t$29805$1XGIwa
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$29802$1XGIwa))))
                                                           (g$syntax-dispatch$28757$1XGIwa
                                                             g$t$29802$1XGIwa
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$29798$1XGIwa))))
                                                 (g$syntax-dispatch$28757$1XGIwa
                                                   g$t$29798$1XGIwa
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$29794$1XGIwa))))
                                       (g$syntax-dispatch$28757$1XGIwa
                                         g$t$29794$1XGIwa
                                         '((#(scheme-id unquote)
                                            .
                                            each-any)
                                           .
                                           any)))))
                                   g$t$29791$1XGIwa))))
                             (g$syntax-dispatch$28757$1XGIwa
                               g$t$29791$1XGIwa
                               '(#(scheme-id unquote) any)))))
                         g$p$29789$1XGIwa)))))
           (case-lambda
             ((g$x$29785$1XGIwa)
              ((case-lambda
                 ((g$t$29786$1XGIwa)
                  ((case-lambda
                     ((g$ls/false$29787$1XGIwa)
                      (if g$ls/false$29787$1XGIwa
                        (apply
                          (case-lambda
                            ((g$e$29788$1XGIwa)
                             (g$quasi$29784$1XGIwa
                               g$e$29788$1XGIwa
                               '0)))
                          g$ls/false$29787$1XGIwa)
                        (g$syntax-violation$28876$1XGIwa
                          '#f
                          '"invalid syntax"
                          g$t$29786$1XGIwa))))
                   (g$syntax-dispatch$28757$1XGIwa
                     g$t$29786$1XGIwa
                     '(_ any)))))
               g$x$29785$1XGIwa))))))))
   (g$quasisyntax-macro$28749$1XGIwa
     g$quasisyntax-macro$32344$1XGIwa
     ((case-lambda
        (()
         (letrec* ((g$quasi$29895$1XGIwa
                     (case-lambda
                       ((g$p$29909$1XGIwa g$lev$29910$1XGIwa)
                        ((case-lambda
                           ((g$t$29911$1XGIwa)
                            ((case-lambda
                               ((g$ls/false$29912$1XGIwa)
                                (if g$ls/false$29912$1XGIwa
                                  (apply
                                    (case-lambda
                                      ((g$p$29913$1XGIwa)
                                       (if (g$=$21625$1XGIwa
                                             g$lev$29910$1XGIwa
                                             '0)
                                         ((case-lambda
                                            ((g$g$29914$1XGIwa)
                                             (values
                                               (list g$g$29914$1XGIwa)
                                               (list g$p$29913$1XGIwa)
                                               g$g$29914$1XGIwa)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$29895$1XGIwa
                                                g$p$29913$1XGIwa
                                                (- g$lev$29910$1XGIwa
                                                   '1))))
                                           (case-lambda
                                             ((g$lhs*$29918$1XGIwa
                                                g$rhs*$29919$1XGIwa
                                                g$p$29920$1XGIwa)
                                              ((case-lambda
                                                 ((g$p$29921$1XGIwa
                                                    g$rhs*$29922$1XGIwa
                                                    g$lhs*$29923$1XGIwa)
                                                  (values
                                                    g$lhs*$29923$1XGIwa
                                                    g$rhs*$29922$1XGIwa
                                                    (list
                                                      'unsyntax
                                                      g$p$29921$1XGIwa))))
                                               g$p$29920$1XGIwa
                                               g$rhs*$29919$1XGIwa
                                               g$lhs*$29918$1XGIwa)))))))
                                    g$ls/false$29912$1XGIwa)
                                  ((case-lambda
                                     ((g$t$29924$1XGIwa)
                                      ((case-lambda
                                         ((g$ls/false$29925$1XGIwa)
                                          (if (if g$ls/false$29925$1XGIwa
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (g$=$21625$1XGIwa
                                                         g$lev$29910$1XGIwa
                                                         '0)))
                                                    g$ls/false$29925$1XGIwa))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$28876$1XGIwa
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$29909$1XGIwa)))
                                              g$ls/false$29925$1XGIwa)
                                            ((case-lambda
                                               ((g$t$29926$1XGIwa)
                                                ((case-lambda
                                                   ((g$ls/false$29927$1XGIwa)
                                                    (if g$ls/false$29927$1XGIwa
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$29928$1XGIwa
                                                             g$q$29929$1XGIwa)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$29895$1XGIwa
                                                                  g$q$29929$1XGIwa
                                                                  g$lev$29910$1XGIwa)))
                                                             (case-lambda
                                                               ((g$lhs*$29933$1XGIwa
                                                                  g$rhs*$29934$1XGIwa
                                                                  g$q$29935$1XGIwa)
                                                                ((case-lambda
                                                                   ((g$q$29936$1XGIwa
                                                                      g$rhs*$29937$1XGIwa
                                                                      g$lhs*$29938$1XGIwa)
                                                                    (if (g$=$21625$1XGIwa
                                                                          g$lev$29910$1XGIwa
                                                                          '0)
                                                                      ((case-lambda
                                                                         ((g$g*$29939$1XGIwa)
                                                                          (values
                                                                            (append
                                                                              g$g*$29939$1XGIwa
                                                                              g$lhs*$29938$1XGIwa)
                                                                            (append
                                                                              g$p*$29928$1XGIwa
                                                                              g$rhs*$29937$1XGIwa)
                                                                            (append
                                                                              g$g*$29939$1XGIwa
                                                                              g$q$29936$1XGIwa))))
                                                                       (g$map$19661$1XGIwa
                                                                         (case-lambda
                                                                           ((g$x$29940$1XGIwa)
                                                                            (gensym)))
                                                                         g$p*$29928$1XGIwa))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$29895$1XGIwa
                                                                             g$p*$29928$1XGIwa
                                                                             (- g$lev$29910$1XGIwa
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$29944$1XGIwa
                                                                             g$rhs2*$29945$1XGIwa
                                                                             g$p*$29946$1XGIwa)
                                                                           ((case-lambda
                                                                              ((g$p*$29947$1XGIwa
                                                                                 g$rhs2*$29948$1XGIwa
                                                                                 g$lhs2*$29949$1XGIwa)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$29949$1XGIwa
                                                                                   g$lhs*$29938$1XGIwa)
                                                                                 (append
                                                                                   g$rhs2*$29948$1XGIwa
                                                                                   g$rhs*$29937$1XGIwa)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$29947$1XGIwa)
                                                                                   g$q$29936$1XGIwa))))
                                                                            g$p*$29946$1XGIwa
                                                                            g$rhs2*$29945$1XGIwa
                                                                            g$lhs2*$29944$1XGIwa)))))))
                                                                 g$q$29935$1XGIwa
                                                                 g$rhs*$29934$1XGIwa
                                                                 g$lhs*$29933$1XGIwa))))))
                                                        g$ls/false$29927$1XGIwa)
                                                      ((case-lambda
                                                         ((g$t$29950$1XGIwa)
                                                          ((case-lambda
                                                             ((g$ls/false$29951$1XGIwa)
                                                              (if g$ls/false$29951$1XGIwa
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$29952$1XGIwa
                                                                       g$q$29953$1XGIwa)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$29895$1XGIwa
                                                                            g$q$29953$1XGIwa
                                                                            g$lev$29910$1XGIwa)))
                                                                       (case-lambda
                                                                         ((g$lhs*$29957$1XGIwa
                                                                            g$rhs*$29958$1XGIwa
                                                                            g$q$29959$1XGIwa)
                                                                          ((case-lambda
                                                                             ((g$q$29960$1XGIwa
                                                                                g$rhs*$29961$1XGIwa
                                                                                g$lhs*$29962$1XGIwa)
                                                                              (if (g$=$21625$1XGIwa
                                                                                    g$lev$29910$1XGIwa
                                                                                    '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$29963$1XGIwa)
                                                                                    (values
                                                                                      (append
                                                                                        (g$map$19661$1XGIwa
                                                                                          (case-lambda
                                                                                            ((g$g$29964$1XGIwa)
                                                                                             (cons
                                                                                               g$g$29964$1XGIwa
                                                                                               '(...))))
                                                                                          g$g*$29963$1XGIwa)
                                                                                        g$lhs*$29962$1XGIwa)
                                                                                      (append
                                                                                        g$p*$29952$1XGIwa
                                                                                        g$rhs*$29961$1XGIwa)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (g$map$19661$1XGIwa
                                                                                            (case-lambda
                                                                                              ((g$g$29965$1XGIwa)
                                                                                               (cons
                                                                                                 g$g$29965$1XGIwa
                                                                                                 '(...))))
                                                                                            g$g*$29963$1XGIwa))
                                                                                        g$q$29960$1XGIwa))))
                                                                                 (g$map$19661$1XGIwa
                                                                                   (case-lambda
                                                                                     ((g$x$29966$1XGIwa)
                                                                                      (gensym)))
                                                                                   g$p*$29952$1XGIwa))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$29895$1XGIwa
                                                                                       g$p*$29952$1XGIwa
                                                                                       (- g$lev$29910$1XGIwa
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$29970$1XGIwa
                                                                                       g$rhs2*$29971$1XGIwa
                                                                                       g$p*$29972$1XGIwa)
                                                                                     ((case-lambda
                                                                                        ((g$p*$29973$1XGIwa
                                                                                           g$rhs2*$29974$1XGIwa
                                                                                           g$lhs2*$29975$1XGIwa)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$29975$1XGIwa
                                                                                             g$lhs*$29962$1XGIwa)
                                                                                           (append
                                                                                             g$rhs2*$29974$1XGIwa
                                                                                             g$rhs*$29961$1XGIwa)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$29973$1XGIwa)
                                                                                             g$q$29960$1XGIwa))))
                                                                                      g$p*$29972$1XGIwa
                                                                                      g$rhs2*$29971$1XGIwa
                                                                                      g$lhs2*$29970$1XGIwa)))))))
                                                                           g$q$29959$1XGIwa
                                                                           g$rhs*$29958$1XGIwa
                                                                           g$lhs*$29957$1XGIwa))))))
                                                                  g$ls/false$29951$1XGIwa)
                                                                ((case-lambda
                                                                   ((g$t$29976$1XGIwa)
                                                                    ((case-lambda
                                                                       ((g$ls/false$29977$1XGIwa)
                                                                        (if (if g$ls/false$29977$1XGIwa
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$=$21625$1XGIwa
                                                                                       g$lev$29910$1XGIwa
                                                                                       '0)))
                                                                                  g$ls/false$29977$1XGIwa))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$28876$1XGIwa
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$29909$1XGIwa)))
                                                                            g$ls/false$29977$1XGIwa)
                                                                          ((case-lambda
                                                                             ((g$t$29978$1XGIwa)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$29979$1XGIwa)
                                                                                  (if g$ls/false$29979$1XGIwa
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$29980$1XGIwa)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$29895$1XGIwa
                                                                                                g$p$29980$1XGIwa
                                                                                                (+ g$lev$29910$1XGIwa
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$29984$1XGIwa
                                                                                                g$rhs*$29985$1XGIwa
                                                                                                g$p$29986$1XGIwa)
                                                                                              ((case-lambda
                                                                                                 ((g$p$29987$1XGIwa
                                                                                                    g$rhs*$29988$1XGIwa
                                                                                                    g$lhs*$29989$1XGIwa)
                                                                                                  (values
                                                                                                    g$lhs*$29989$1XGIwa
                                                                                                    g$rhs*$29988$1XGIwa
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$29987$1XGIwa))))
                                                                                               g$p$29986$1XGIwa
                                                                                               g$rhs*$29985$1XGIwa
                                                                                               g$lhs*$29984$1XGIwa))))))
                                                                                      g$ls/false$29979$1XGIwa)
                                                                                    ((case-lambda
                                                                                       ((g$t$29990$1XGIwa)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$29991$1XGIwa)
                                                                                            (if g$ls/false$29991$1XGIwa
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$29992$1XGIwa
                                                                                                     g$q$29993$1XGIwa)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$29895$1XGIwa
                                                                                                          g$p$29992$1XGIwa
                                                                                                          g$lev$29910$1XGIwa)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$30000$1XGIwa
                                                                                                          g$rhs*$30001$1XGIwa
                                                                                                          g$p$30002$1XGIwa)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$29895$1XGIwa
                                                                                                               g$q$29993$1XGIwa
                                                                                                               g$lev$29910$1XGIwa)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$30003$1XGIwa
                                                                                                               g$rhs2*$30004$1XGIwa
                                                                                                               g$q$30005$1XGIwa)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$30006$1XGIwa
                                                                                                                   g$rhs2*$30007$1XGIwa
                                                                                                                   g$lhs2*$30008$1XGIwa
                                                                                                                   g$p$30009$1XGIwa
                                                                                                                   g$rhs*$30010$1XGIwa
                                                                                                                   g$lhs*$30011$1XGIwa)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$30008$1XGIwa
                                                                                                                     g$lhs*$30011$1XGIwa)
                                                                                                                   (append
                                                                                                                     g$rhs2*$30007$1XGIwa
                                                                                                                     g$rhs*$30010$1XGIwa)
                                                                                                                   (cons
                                                                                                                     g$p$30009$1XGIwa
                                                                                                                     g$q$30006$1XGIwa))))
                                                                                                              g$q$30005$1XGIwa
                                                                                                              g$rhs2*$30004$1XGIwa
                                                                                                              g$lhs2*$30003$1XGIwa
                                                                                                              g$p$30002$1XGIwa
                                                                                                              g$rhs*$30001$1XGIwa
                                                                                                              g$lhs*$30000$1XGIwa)))))))))
                                                                                                g$ls/false$29991$1XGIwa)
                                                                                              ((case-lambda
                                                                                                 ((g$t$30012$1XGIwa)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$30013$1XGIwa)
                                                                                                      (if g$ls/false$30013$1XGIwa
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$30014$1XGIwa)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$29895$1XGIwa
                                                                                                                    g$x*$30014$1XGIwa
                                                                                                                    g$lev$29910$1XGIwa)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$30018$1XGIwa
                                                                                                                    g$rhs*$30019$1XGIwa
                                                                                                                    g$x*$30020$1XGIwa)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$30021$1XGIwa
                                                                                                                        g$rhs*$30022$1XGIwa
                                                                                                                        g$lhs*$30023$1XGIwa)
                                                                                                                      (values
                                                                                                                        g$lhs*$30023$1XGIwa
                                                                                                                        g$rhs*$30022$1XGIwa
                                                                                                                        (g$list->vector$20600$1XGIwa
                                                                                                                          g$x*$30021$1XGIwa))))
                                                                                                                   g$x*$30020$1XGIwa
                                                                                                                   g$rhs*$30019$1XGIwa
                                                                                                                   g$lhs*$30018$1XGIwa))))))
                                                                                                          g$ls/false$30013$1XGIwa)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$30024$1XGIwa)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$30025$1XGIwa)
                                                                                                                (if g$ls/false$30025$1XGIwa
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$29909$1XGIwa)))
                                                                                                                    g$ls/false$30025$1XGIwa)
                                                                                                                  (g$syntax-violation$28876$1XGIwa
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$30024$1XGIwa))))
                                                                                                             (g$syntax-dispatch$28757$1XGIwa
                                                                                                               g$t$30024$1XGIwa
                                                                                                               '_))))
                                                                                                         g$t$30012$1XGIwa))))
                                                                                                   (g$syntax-dispatch$28757$1XGIwa
                                                                                                     g$t$30012$1XGIwa
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$29990$1XGIwa))))
                                                                                         (g$syntax-dispatch$28757$1XGIwa
                                                                                           g$t$29990$1XGIwa
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$29978$1XGIwa))))
                                                                               (g$syntax-dispatch$28757$1XGIwa
                                                                                 g$t$29978$1XGIwa
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$29976$1XGIwa))))
                                                                     (g$syntax-dispatch$28757$1XGIwa
                                                                       g$t$29976$1XGIwa
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$29950$1XGIwa))))
                                                           (g$syntax-dispatch$28757$1XGIwa
                                                             g$t$29950$1XGIwa
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$29926$1XGIwa))))
                                                 (g$syntax-dispatch$28757$1XGIwa
                                                   g$t$29926$1XGIwa
                                                   '((#(scheme-id
                                                        unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$29924$1XGIwa))))
                                       (g$syntax-dispatch$28757$1XGIwa
                                         g$t$29924$1XGIwa
                                         '#(scheme-id unsyntax)))))
                                   g$t$29911$1XGIwa))))
                             (g$syntax-dispatch$28757$1XGIwa
                               g$t$29911$1XGIwa
                               '(#(scheme-id unsyntax) any)))))
                         g$p$29909$1XGIwa)))))
           (case-lambda
             ((g$x$29896$1XGIwa)
              ((case-lambda
                 ((g$t$29897$1XGIwa)
                  ((case-lambda
                     ((g$ls/false$29898$1XGIwa)
                      (if g$ls/false$29898$1XGIwa
                        (apply
                          (case-lambda
                            ((g$e$29899$1XGIwa)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$quasi$29895$1XGIwa
                                    g$e$29899$1XGIwa
                                    '0)))
                               (case-lambda
                                 ((g$lhs*$29903$1XGIwa
                                    g$rhs*$29904$1XGIwa
                                    g$v$29905$1XGIwa)
                                  ((case-lambda
                                     ((g$v$29906$1XGIwa
                                        g$rhs*$29907$1XGIwa
                                        g$lhs*$29908$1XGIwa)
                                      (g$bless$28720$1XGIwa
                                        (list
                                          'syntax-case
                                          (cons
                                            'list
                                            g$rhs*$29907$1XGIwa)
                                          '()
                                          (list
                                            g$lhs*$29908$1XGIwa
                                            (list
                                              'syntax
                                              g$v$29906$1XGIwa))))))
                                   g$v$29905$1XGIwa
                                   g$rhs*$29904$1XGIwa
                                   g$lhs*$29903$1XGIwa))))))
                          g$ls/false$29898$1XGIwa)
                        (g$syntax-violation$28876$1XGIwa
                          '#f
                          '"invalid syntax"
                          g$t$29897$1XGIwa))))
                   (g$syntax-dispatch$28757$1XGIwa
                     g$t$29897$1XGIwa
                     '(_ any)))))
               g$x$29896$1XGIwa))))))))
   (g$define-struct-macro$28750$1XGIwa
     g$define-struct-macro$32345$1XGIwa
     (case-lambda
       ((g$stx$30026$1XGIwa)
        (g$syntax-violation$28876$1XGIwa
          '#f
          '"define-struct not supported"
          g$stx$30026$1XGIwa))))
   (g$define-record-type-macro$28751$1XGIwa
     g$define-record-type-macro$32346$1XGIwa
     (case-lambda
       ((g$x$30027$1XGIwa)
        (letrec* ((g$id$30028$1XGIwa
                    (case-lambda
                      ((g$ctxt$30280$1XGIwa . g$str*$30281$1XGIwa)
                       (g$datum->syntax$28878$1XGIwa
                         g$ctxt$30280$1XGIwa
                         (g$string->symbol$20594$1XGIwa
                           (apply
                             g$string-append$20591$1XGIwa
                             (g$map$19661$1XGIwa
                               (case-lambda
                                 ((g$x$30282$1XGIwa)
                                  (if (g$symbol?$20573$1XGIwa
                                        g$x$30282$1XGIwa)
                                    (g$symbol->string$20593$1XGIwa
                                      g$x$30282$1XGIwa)
                                    (if (g$string?$20569$1XGIwa
                                          g$x$30282$1XGIwa)
                                      g$x$30282$1XGIwa
                                      (begin
                                        '#f
                                        (assertion-violation
                                          'define-record-type
                                          '"BUG"))))))
                               g$str*$30281$1XGIwa)))))))
                  (g$get-record-name$30029$1XGIwa
                    (case-lambda
                      ((g$spec$30271$1XGIwa)
                       ((case-lambda
                          ((g$t$30272$1XGIwa)
                           ((case-lambda
                              ((g$ls/false$30273$1XGIwa)
                               (if g$ls/false$30273$1XGIwa
                                 (apply
                                   (case-lambda
                                     ((g$foo$30274$1XGIwa
                                        g$make-foo$30275$1XGIwa
                                        g$foo?$30276$1XGIwa)
                                      g$foo$30274$1XGIwa))
                                   g$ls/false$30273$1XGIwa)
                                 ((case-lambda
                                    ((g$t$30277$1XGIwa)
                                     ((case-lambda
                                        ((g$ls/false$30278$1XGIwa)
                                         (if g$ls/false$30278$1XGIwa
                                           (apply
                                             (case-lambda
                                               ((g$foo$30279$1XGIwa)
                                                g$foo$30279$1XGIwa))
                                             g$ls/false$30278$1XGIwa)
                                           (g$syntax-violation$28876$1XGIwa
                                             '#f
                                             '"invalid syntax"
                                             g$t$30277$1XGIwa))))
                                      (g$syntax-dispatch$28757$1XGIwa
                                        g$t$30277$1XGIwa
                                        'any))))
                                  g$t$30272$1XGIwa))))
                            (g$syntax-dispatch$28757$1XGIwa
                              g$t$30272$1XGIwa
                              '(any any any)))))
                        g$spec$30271$1XGIwa))))
                  (g$get-record-constructor-name$30030$1XGIwa
                    (case-lambda
                      ((g$spec$30261$1XGIwa)
                       ((case-lambda
                          ((g$t$30262$1XGIwa)
                           ((case-lambda
                              ((g$ls/false$30263$1XGIwa)
                               (if g$ls/false$30263$1XGIwa
                                 (apply
                                   (case-lambda
                                     ((g$foo$30264$1XGIwa
                                        g$make-foo$30265$1XGIwa
                                        g$foo?$30266$1XGIwa)
                                      g$make-foo$30265$1XGIwa))
                                   g$ls/false$30263$1XGIwa)
                                 ((case-lambda
                                    ((g$t$30267$1XGIwa)
                                     ((case-lambda
                                        ((g$ls/false$30268$1XGIwa)
                                         (if (if g$ls/false$30268$1XGIwa
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$30269$1XGIwa)
                                                      (g$id?$28259$1XGIwa
                                                        g$foo$30269$1XGIwa)))
                                                   g$ls/false$30268$1XGIwa))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$30270$1XGIwa)
                                                (g$id$30028$1XGIwa
                                                  g$foo$30270$1XGIwa
                                                  '"make-"
                                                  (g$stx->datum$28270$1XGIwa
                                                    g$foo$30270$1XGIwa))))
                                             g$ls/false$30268$1XGIwa)
                                           (g$syntax-violation$28876$1XGIwa
                                             '#f
                                             '"invalid syntax"
                                             g$t$30267$1XGIwa))))
                                      (g$syntax-dispatch$28757$1XGIwa
                                        g$t$30267$1XGIwa
                                        'any))))
                                  g$t$30262$1XGIwa))))
                            (g$syntax-dispatch$28757$1XGIwa
                              g$t$30262$1XGIwa
                              '(any any any)))))
                        g$spec$30261$1XGIwa))))
                  (g$get-record-predicate-name$30031$1XGIwa
                    (case-lambda
                      ((g$spec$30251$1XGIwa)
                       ((case-lambda
                          ((g$t$30252$1XGIwa)
                           ((case-lambda
                              ((g$ls/false$30253$1XGIwa)
                               (if g$ls/false$30253$1XGIwa
                                 (apply
                                   (case-lambda
                                     ((g$foo$30254$1XGIwa
                                        g$make-foo$30255$1XGIwa
                                        g$foo?$30256$1XGIwa)
                                      g$foo?$30256$1XGIwa))
                                   g$ls/false$30253$1XGIwa)
                                 ((case-lambda
                                    ((g$t$30257$1XGIwa)
                                     ((case-lambda
                                        ((g$ls/false$30258$1XGIwa)
                                         (if (if g$ls/false$30258$1XGIwa
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$30259$1XGIwa)
                                                      (g$id?$28259$1XGIwa
                                                        g$foo$30259$1XGIwa)))
                                                   g$ls/false$30258$1XGIwa))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$30260$1XGIwa)
                                                (g$id$30028$1XGIwa
                                                  g$foo$30260$1XGIwa
                                                  (g$stx->datum$28270$1XGIwa
                                                    g$foo$30260$1XGIwa)
                                                  '"?")))
                                             g$ls/false$30258$1XGIwa)
                                           (g$syntax-violation$28876$1XGIwa
                                             '#f
                                             '"invalid syntax"
                                             g$t$30257$1XGIwa))))
                                      (g$syntax-dispatch$28757$1XGIwa
                                        g$t$30257$1XGIwa
                                        'any))))
                                  g$t$30252$1XGIwa))))
                            (g$syntax-dispatch$28757$1XGIwa
                              g$t$30252$1XGIwa
                              '(any any any)))))
                        g$spec$30251$1XGIwa))))
                  (g$get-clause$30032$1XGIwa
                    (case-lambda
                      ((g$id$30242$1XGIwa g$ls$30243$1XGIwa)
                       ((case-lambda
                          ((g$t$30244$1XGIwa)
                           ((case-lambda
                              ((g$ls/false$30245$1XGIwa)
                               (if g$ls/false$30245$1XGIwa
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$30245$1XGIwa)
                                 ((case-lambda
                                    ((g$t$30246$1XGIwa)
                                     ((case-lambda
                                        ((g$ls/false$30247$1XGIwa)
                                         (if g$ls/false$30247$1XGIwa
                                           (apply
                                             (case-lambda
                                               ((g$x$30248$1XGIwa
                                                  g$rest$30249$1XGIwa
                                                  g$ls$30250$1XGIwa)
                                                (if (g$free-id=?$28263$1XGIwa
                                                      (g$bless$28720$1XGIwa
                                                        g$id$30242$1XGIwa)
                                                      g$x$30248$1XGIwa)
                                                  (cons
                                                    g$x$30248$1XGIwa
                                                    g$rest$30249$1XGIwa)
                                                  (g$get-clause$30032$1XGIwa
                                                    g$id$30242$1XGIwa
                                                    g$ls$30250$1XGIwa))))
                                             g$ls/false$30247$1XGIwa)
                                           (g$syntax-violation$28876$1XGIwa
                                             '#f
                                             '"invalid syntax"
                                             g$t$30246$1XGIwa))))
                                      (g$syntax-dispatch$28757$1XGIwa
                                        g$t$30246$1XGIwa
                                        '((any . any) . any)))))
                                  g$t$30244$1XGIwa))))
                            (g$syntax-dispatch$28757$1XGIwa
                              g$t$30244$1XGIwa
                              '()))))
                        g$ls$30243$1XGIwa))))
                  (g$foo-rtd-code$30033$1XGIwa
                    (case-lambda
                      ((g$name$30201$1XGIwa
                         g$clause*$30202$1XGIwa
                         g$parent-rtd-code$30203$1XGIwa)
                       (letrec* ((g$convert-field-spec*$30204$1XGIwa
                                   (case-lambda
                                     ((g$ls$30229$1XGIwa)
                                      (g$list->vector$20600$1XGIwa
                                        (g$map$19661$1XGIwa
                                          (case-lambda
                                            ((g$x$30230$1XGIwa)
                                             ((case-lambda
                                                ((g$t$30231$1XGIwa)
                                                 ((case-lambda
                                                    ((g$ls/false$30232$1XGIwa)
                                                     (if g$ls/false$30232$1XGIwa
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$30233$1XGIwa
                                                              g$rest$30234$1XGIwa)
                                                            (list
                                                              'mutable
                                                              g$name$30233$1XGIwa)))
                                                         g$ls/false$30232$1XGIwa)
                                                       ((case-lambda
                                                          ((g$t$30235$1XGIwa)
                                                           ((case-lambda
                                                              ((g$ls/false$30236$1XGIwa)
                                                               (if g$ls/false$30236$1XGIwa
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$30237$1XGIwa
                                                                        g$rest$30238$1XGIwa)
                                                                      (list
                                                                        'immutable
                                                                        g$name$30237$1XGIwa)))
                                                                   g$ls/false$30236$1XGIwa)
                                                                 ((case-lambda
                                                                    ((g$t$30239$1XGIwa)
                                                                     ((case-lambda
                                                                        ((g$ls/false$30240$1XGIwa)
                                                                         (if g$ls/false$30240$1XGIwa
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$30241$1XGIwa)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$30241$1XGIwa)))
                                                                             g$ls/false$30240$1XGIwa)
                                                                           (g$syntax-violation$28876$1XGIwa
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$30239$1XGIwa))))
                                                                      (g$syntax-dispatch$28757$1XGIwa
                                                                        g$t$30239$1XGIwa
                                                                        'any))))
                                                                  g$t$30235$1XGIwa))))
                                                            (g$syntax-dispatch$28757$1XGIwa
                                                              g$t$30235$1XGIwa
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$30231$1XGIwa))))
                                                  (g$syntax-dispatch$28757$1XGIwa
                                                    g$t$30231$1XGIwa
                                                    '(#(scheme-id
                                                        mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$30230$1XGIwa)))
                                          g$ls$30229$1XGIwa))))))
                         ((case-lambda
                            ((g$uid-code$30205$1XGIwa
                               g$sealed?$30206$1XGIwa
                               g$opaque?$30207$1XGIwa
                               g$fields$30208$1XGIwa)
                             (g$bless$28720$1XGIwa
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$30201$1XGIwa)
                                 g$parent-rtd-code$30203$1XGIwa
                                 g$uid-code$30205$1XGIwa
                                 g$sealed?$30206$1XGIwa
                                 g$opaque?$30207$1XGIwa
                                 g$fields$30208$1XGIwa))))
                          ((case-lambda
                             ((g$t$30209$1XGIwa)
                              ((case-lambda
                                 ((g$ls/false$30210$1XGIwa)
                                  (if g$ls/false$30210$1XGIwa
                                    (apply
                                      (case-lambda
                                        (() (list 'quote (gensym))))
                                      g$ls/false$30210$1XGIwa)
                                    ((case-lambda
                                       ((g$t$30211$1XGIwa)
                                        ((case-lambda
                                           ((g$ls/false$30212$1XGIwa)
                                            (if g$ls/false$30212$1XGIwa
                                              (apply
                                                (case-lambda
                                                  ((g$uid$30213$1XGIwa)
                                                   (list
                                                     'quote
                                                     g$uid$30213$1XGIwa)))
                                                g$ls/false$30212$1XGIwa)
                                              ((case-lambda
                                                 ((g$t$30214$1XGIwa)
                                                  ((case-lambda
                                                     ((g$ls/false$30215$1XGIwa)
                                                      (if g$ls/false$30215$1XGIwa
                                                        (apply
                                                          (case-lambda
                                                            (() '#f))
                                                          g$ls/false$30215$1XGIwa)
                                                        (g$syntax-violation$28876$1XGIwa
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$30214$1XGIwa))))
                                                   (g$syntax-dispatch$28757$1XGIwa
                                                     g$t$30214$1XGIwa
                                                     '_))))
                                               g$t$30211$1XGIwa))))
                                         (g$syntax-dispatch$28757$1XGIwa
                                           g$t$30211$1XGIwa
                                           '(_ any)))))
                                     g$t$30209$1XGIwa))))
                               (g$syntax-dispatch$28757$1XGIwa
                                 g$t$30209$1XGIwa
                                 '(_)))))
                           (g$get-clause$30032$1XGIwa
                             'nongenerative
                             g$clause*$30202$1XGIwa))
                          ((case-lambda
                             ((g$t$30216$1XGIwa)
                              ((case-lambda
                                 ((g$ls/false$30217$1XGIwa)
                                  (if g$ls/false$30217$1XGIwa
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$30217$1XGIwa)
                                    ((case-lambda
                                       ((g$t$30218$1XGIwa)
                                        ((case-lambda
                                           ((g$ls/false$30219$1XGIwa)
                                            (if g$ls/false$30219$1XGIwa
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$30219$1XGIwa)
                                              (g$syntax-violation$28876$1XGIwa
                                                '#f
                                                '"invalid syntax"
                                                g$t$30218$1XGIwa))))
                                         (g$syntax-dispatch$28757$1XGIwa
                                           g$t$30218$1XGIwa
                                           '_))))
                                     g$t$30216$1XGIwa))))
                               (g$syntax-dispatch$28757$1XGIwa
                                 g$t$30216$1XGIwa
                                 '(_ #(atom #t))))))
                           (g$get-clause$30032$1XGIwa
                             'sealed
                             g$clause*$30202$1XGIwa))
                          ((case-lambda
                             ((g$t$30220$1XGIwa)
                              ((case-lambda
                                 ((g$ls/false$30221$1XGIwa)
                                  (if g$ls/false$30221$1XGIwa
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$30221$1XGIwa)
                                    ((case-lambda
                                       ((g$t$30222$1XGIwa)
                                        ((case-lambda
                                           ((g$ls/false$30223$1XGIwa)
                                            (if g$ls/false$30223$1XGIwa
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$30223$1XGIwa)
                                              (g$syntax-violation$28876$1XGIwa
                                                '#f
                                                '"invalid syntax"
                                                g$t$30222$1XGIwa))))
                                         (g$syntax-dispatch$28757$1XGIwa
                                           g$t$30222$1XGIwa
                                           '_))))
                                     g$t$30220$1XGIwa))))
                               (g$syntax-dispatch$28757$1XGIwa
                                 g$t$30220$1XGIwa
                                 '(_ #(atom #t))))))
                           (g$get-clause$30032$1XGIwa
                             'opaque
                             g$clause*$30202$1XGIwa))
                          ((case-lambda
                             ((g$t$30224$1XGIwa)
                              ((case-lambda
                                 ((g$ls/false$30225$1XGIwa)
                                  (if g$ls/false$30225$1XGIwa
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$30226$1XGIwa)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$30204$1XGIwa
                                             g$field-spec*$30226$1XGIwa))))
                                      g$ls/false$30225$1XGIwa)
                                    ((case-lambda
                                       ((g$t$30227$1XGIwa)
                                        ((case-lambda
                                           ((g$ls/false$30228$1XGIwa)
                                            (if g$ls/false$30228$1XGIwa
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$30228$1XGIwa)
                                              (g$syntax-violation$28876$1XGIwa
                                                '#f
                                                '"invalid syntax"
                                                g$t$30227$1XGIwa))))
                                         (g$syntax-dispatch$28757$1XGIwa
                                           g$t$30227$1XGIwa
                                           '_))))
                                     g$t$30224$1XGIwa))))
                               (g$syntax-dispatch$28757$1XGIwa
                                 g$t$30224$1XGIwa
                                 '(_ . each-any)))))
                           (g$get-clause$30032$1XGIwa
                             'fields
                             g$clause*$30202$1XGIwa)))))))
                  (g$parent-rtd-code$30034$1XGIwa
                    (case-lambda
                      ((g$clause*$30189$1XGIwa)
                       ((case-lambda
                          ((g$t$30190$1XGIwa)
                           ((case-lambda
                              ((g$ls/false$30191$1XGIwa)
                               (if g$ls/false$30191$1XGIwa
                                 (apply
                                   (case-lambda
                                     ((g$name$30192$1XGIwa)
                                      (list
                                        'record-type-descriptor
                                        g$name$30192$1XGIwa)))
                                   g$ls/false$30191$1XGIwa)
                                 ((case-lambda
                                    ((g$t$30193$1XGIwa)
                                     ((case-lambda
                                        ((g$ls/false$30194$1XGIwa)
                                         (if g$ls/false$30194$1XGIwa
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$30195$1XGIwa)
                                                    ((case-lambda
                                                       ((g$ls/false$30196$1XGIwa)
                                                        (if g$ls/false$30196$1XGIwa
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$30197$1XGIwa
                                                                 g$rcd$30198$1XGIwa)
                                                               g$rtd$30197$1XGIwa))
                                                            g$ls/false$30196$1XGIwa)
                                                          ((case-lambda
                                                             ((g$t$30199$1XGIwa)
                                                              ((case-lambda
                                                                 ((g$ls/false$30200$1XGIwa)
                                                                  (if g$ls/false$30200$1XGIwa
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$30200$1XGIwa)
                                                                    (g$syntax-violation$28876$1XGIwa
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$30199$1XGIwa))))
                                                               (g$syntax-dispatch$28757$1XGIwa
                                                                 g$t$30199$1XGIwa
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$30195$1XGIwa))))
                                                     (g$syntax-dispatch$28757$1XGIwa
                                                       g$t$30195$1XGIwa
                                                       '(_ any any)))))
                                                 (g$get-clause$30032$1XGIwa
                                                   'parent-rtd
                                                   g$clause*$30189$1XGIwa))))
                                             g$ls/false$30194$1XGIwa)
                                           (g$syntax-violation$28876$1XGIwa
                                             '#f
                                             '"invalid syntax"
                                             g$t$30193$1XGIwa))))
                                      (g$syntax-dispatch$28757$1XGIwa
                                        g$t$30193$1XGIwa
                                        '#(atom #f)))))
                                  g$t$30190$1XGIwa))))
                            (g$syntax-dispatch$28757$1XGIwa
                              g$t$30190$1XGIwa
                              '(_ any)))))
                        (g$get-clause$30032$1XGIwa
                          'parent
                          g$clause*$30189$1XGIwa)))))
                  (g$parent-rcd-code$30035$1XGIwa
                    (case-lambda
                      ((g$clause*$30177$1XGIwa)
                       ((case-lambda
                          ((g$t$30178$1XGIwa)
                           ((case-lambda
                              ((g$ls/false$30179$1XGIwa)
                               (if g$ls/false$30179$1XGIwa
                                 (apply
                                   (case-lambda
                                     ((g$name$30180$1XGIwa)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$30180$1XGIwa)))
                                   g$ls/false$30179$1XGIwa)
                                 ((case-lambda
                                    ((g$t$30181$1XGIwa)
                                     ((case-lambda
                                        ((g$ls/false$30182$1XGIwa)
                                         (if g$ls/false$30182$1XGIwa
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$30183$1XGIwa)
                                                    ((case-lambda
                                                       ((g$ls/false$30184$1XGIwa)
                                                        (if g$ls/false$30184$1XGIwa
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$30185$1XGIwa
                                                                 g$rcd$30186$1XGIwa)
                                                               g$rcd$30186$1XGIwa))
                                                            g$ls/false$30184$1XGIwa)
                                                          ((case-lambda
                                                             ((g$t$30187$1XGIwa)
                                                              ((case-lambda
                                                                 ((g$ls/false$30188$1XGIwa)
                                                                  (if g$ls/false$30188$1XGIwa
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$30188$1XGIwa)
                                                                    (g$syntax-violation$28876$1XGIwa
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$30187$1XGIwa))))
                                                               (g$syntax-dispatch$28757$1XGIwa
                                                                 g$t$30187$1XGIwa
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$30183$1XGIwa))))
                                                     (g$syntax-dispatch$28757$1XGIwa
                                                       g$t$30183$1XGIwa
                                                       '(_ any any)))))
                                                 (g$get-clause$30032$1XGIwa
                                                   'parent-rtd
                                                   g$clause*$30177$1XGIwa))))
                                             g$ls/false$30182$1XGIwa)
                                           (g$syntax-violation$28876$1XGIwa
                                             '#f
                                             '"invalid syntax"
                                             g$t$30181$1XGIwa))))
                                      (g$syntax-dispatch$28757$1XGIwa
                                        g$t$30181$1XGIwa
                                        '#(atom #f)))))
                                  g$t$30178$1XGIwa))))
                            (g$syntax-dispatch$28757$1XGIwa
                              g$t$30178$1XGIwa
                              '(_ any)))))
                        (g$get-clause$30032$1XGIwa
                          'parent
                          g$clause*$30177$1XGIwa)))))
                  (g$foo-rcd-code$30036$1XGIwa
                    (case-lambda
                      ((g$clause*$30173$1XGIwa
                         g$foo-rtd$30174$1XGIwa
                         g$protocol$30175$1XGIwa
                         g$parent-rcd-code$30176$1XGIwa)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$30174$1XGIwa
                         g$parent-rcd-code$30176$1XGIwa
                         g$protocol$30175$1XGIwa))))
                  (g$get-protocol-code$30037$1XGIwa
                    (case-lambda
                      ((g$clause*$30167$1XGIwa)
                       ((case-lambda
                          ((g$t$30168$1XGIwa)
                           ((case-lambda
                              ((g$ls/false$30169$1XGIwa)
                               (if g$ls/false$30169$1XGIwa
                                 (apply
                                   (case-lambda
                                     ((g$expr$30170$1XGIwa)
                                      g$expr$30170$1XGIwa))
                                   g$ls/false$30169$1XGIwa)
                                 ((case-lambda
                                    ((g$t$30171$1XGIwa)
                                     ((case-lambda
                                        ((g$ls/false$30172$1XGIwa)
                                         (if g$ls/false$30172$1XGIwa
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$30172$1XGIwa)
                                           (g$syntax-violation$28876$1XGIwa
                                             '#f
                                             '"invalid syntax"
                                             g$t$30171$1XGIwa))))
                                      (g$syntax-dispatch$28757$1XGIwa
                                        g$t$30171$1XGIwa
                                        '_))))
                                  g$t$30168$1XGIwa))))
                            (g$syntax-dispatch$28757$1XGIwa
                              g$t$30168$1XGIwa
                              '(_ any)))))
                        (g$get-clause$30032$1XGIwa
                          'protocol
                          g$clause*$30167$1XGIwa)))))
                  (g$get-fields$30038$1XGIwa
                    (case-lambda
                      ((g$clause*$30158$1XGIwa)
                       ((case-lambda
                          ((g$t$30159$1XGIwa)
                           ((case-lambda
                              ((g$ls/false$30160$1XGIwa)
                               (if g$ls/false$30160$1XGIwa
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$30160$1XGIwa)
                                 ((case-lambda
                                    ((g$t$30161$1XGIwa)
                                     ((case-lambda
                                        ((g$ls/false$30162$1XGIwa)
                                         (if g$ls/false$30162$1XGIwa
                                           (apply
                                             (case-lambda
                                               ((g$f*$30163$1XGIwa)
                                                g$f*$30163$1XGIwa))
                                             g$ls/false$30162$1XGIwa)
                                           ((case-lambda
                                              ((g$t$30164$1XGIwa)
                                               ((case-lambda
                                                  ((g$ls/false$30165$1XGIwa)
                                                   (if g$ls/false$30165$1XGIwa
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$30166$1XGIwa)
                                                          (g$get-fields$30038$1XGIwa
                                                            g$rest$30166$1XGIwa)))
                                                       g$ls/false$30165$1XGIwa)
                                                     (g$syntax-violation$28876$1XGIwa
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$30164$1XGIwa))))
                                                (g$syntax-dispatch$28757$1XGIwa
                                                  g$t$30164$1XGIwa
                                                  '(_ . any)))))
                                            g$t$30161$1XGIwa))))
                                      (g$syntax-dispatch$28757$1XGIwa
                                        g$t$30161$1XGIwa
                                        '((#(scheme-id fields)
                                           .
                                           each-any)
                                          .
                                          _)))))
                                  g$t$30159$1XGIwa))))
                            (g$syntax-dispatch$28757$1XGIwa
                              g$t$30159$1XGIwa
                              '()))))
                        g$clause*$30158$1XGIwa))))
                  (g$get-mutator-indices$30039$1XGIwa
                    (case-lambda
                      ((g$fields$30146$1XGIwa)
                       ((letrec ((g$f$30147$1XGIwa
                                   (case-lambda
                                     ((g$fields$30148$1XGIwa
                                        g$i$30149$1XGIwa)
                                      ((case-lambda
                                         ((g$t$30150$1XGIwa)
                                          ((case-lambda
                                             ((g$ls/false$30151$1XGIwa)
                                              (if g$ls/false$30151$1XGIwa
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$30151$1XGIwa)
                                                ((case-lambda
                                                   ((g$t$30152$1XGIwa)
                                                    ((case-lambda
                                                       ((g$ls/false$30153$1XGIwa)
                                                        (if g$ls/false$30153$1XGIwa
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$30154$1XGIwa)
                                                               (cons
                                                                 g$i$30149$1XGIwa
                                                                 (g$f$30147$1XGIwa
                                                                   g$rest$30154$1XGIwa
                                                                   (+ g$i$30149$1XGIwa
                                                                      '1)))))
                                                            g$ls/false$30153$1XGIwa)
                                                          ((case-lambda
                                                             ((g$t$30155$1XGIwa)
                                                              ((case-lambda
                                                                 ((g$ls/false$30156$1XGIwa)
                                                                  (if g$ls/false$30156$1XGIwa
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$30157$1XGIwa)
                                                                         (g$f$30147$1XGIwa
                                                                           g$rest$30157$1XGIwa
                                                                           (+ g$i$30149$1XGIwa
                                                                              '1))))
                                                                      g$ls/false$30156$1XGIwa)
                                                                    (g$syntax-violation$28876$1XGIwa
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$30155$1XGIwa))))
                                                               (g$syntax-dispatch$28757$1XGIwa
                                                                 g$t$30155$1XGIwa
                                                                 '(_ .
                                                                     any)))))
                                                           g$t$30152$1XGIwa))))
                                                     (g$syntax-dispatch$28757$1XGIwa
                                                       g$t$30152$1XGIwa
                                                       '((#(scheme-id
                                                            mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$30150$1XGIwa))))
                                           (g$syntax-dispatch$28757$1XGIwa
                                             g$t$30150$1XGIwa
                                             '()))))
                                       g$fields$30148$1XGIwa)))))
                          g$f$30147$1XGIwa)
                        g$fields$30146$1XGIwa
                        '0))))
                  (g$get-mutators$30040$1XGIwa
                    (case-lambda
                      ((g$foo$30125$1XGIwa g$fields$30126$1XGIwa)
                       (letrec* ((g$gen-name$30127$1XGIwa
                                   (case-lambda
                                     ((g$x$30145$1XGIwa)
                                      (g$datum->syntax$28878$1XGIwa
                                        g$foo$30125$1XGIwa
                                        (g$string->symbol$20594$1XGIwa
                                          (g$string-append$20591$1XGIwa
                                            (g$symbol->string$20593$1XGIwa
                                              (g$syntax->datum$28879$1XGIwa
                                                g$foo$30125$1XGIwa))
                                            '"-"
                                            (g$symbol->string$20593$1XGIwa
                                              (g$syntax->datum$28879$1XGIwa
                                                g$x$30145$1XGIwa))
                                            '"-set!")))))))
                         ((letrec ((g$f$30128$1XGIwa
                                     (case-lambda
                                       ((g$fields$30129$1XGIwa)
                                        ((case-lambda
                                           ((g$t$30130$1XGIwa)
                                            ((case-lambda
                                               ((g$ls/false$30131$1XGIwa)
                                                (if g$ls/false$30131$1XGIwa
                                                  (apply
                                                    (case-lambda
                                                      (() '()))
                                                    g$ls/false$30131$1XGIwa)
                                                  ((case-lambda
                                                     ((g$t$30132$1XGIwa)
                                                      ((case-lambda
                                                         ((g$ls/false$30133$1XGIwa)
                                                          (if g$ls/false$30133$1XGIwa
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$30134$1XGIwa
                                                                   g$accessor$30135$1XGIwa
                                                                   g$mutator$30136$1XGIwa
                                                                   g$rest$30137$1XGIwa)
                                                                 (cons
                                                                   g$mutator$30136$1XGIwa
                                                                   (g$f$30128$1XGIwa
                                                                     g$rest$30137$1XGIwa))))
                                                              g$ls/false$30133$1XGIwa)
                                                            ((case-lambda
                                                               ((g$t$30138$1XGIwa)
                                                                ((case-lambda
                                                                   ((g$ls/false$30139$1XGIwa)
                                                                    (if g$ls/false$30139$1XGIwa
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$30140$1XGIwa
                                                                             g$rest$30141$1XGIwa)
                                                                           (cons
                                                                             (g$gen-name$30127$1XGIwa
                                                                               g$name$30140$1XGIwa)
                                                                             (g$f$30128$1XGIwa
                                                                               g$rest$30141$1XGIwa))))
                                                                        g$ls/false$30139$1XGIwa)
                                                                      ((case-lambda
                                                                         ((g$t$30142$1XGIwa)
                                                                          ((case-lambda
                                                                             ((g$ls/false$30143$1XGIwa)
                                                                              (if g$ls/false$30143$1XGIwa
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$30144$1XGIwa)
                                                                                     (g$f$30128$1XGIwa
                                                                                       g$rest$30144$1XGIwa)))
                                                                                  g$ls/false$30143$1XGIwa)
                                                                                (g$syntax-violation$28876$1XGIwa
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$30142$1XGIwa))))
                                                                           (g$syntax-dispatch$28757$1XGIwa
                                                                             g$t$30142$1XGIwa
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$30138$1XGIwa))))
                                                                 (g$syntax-dispatch$28757$1XGIwa
                                                                   g$t$30138$1XGIwa
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$30132$1XGIwa))))
                                                       (g$syntax-dispatch$28757$1XGIwa
                                                         g$t$30132$1XGIwa
                                                         '((#(scheme-id
                                                              mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$30130$1XGIwa))))
                                             (g$syntax-dispatch$28757$1XGIwa
                                               g$t$30130$1XGIwa
                                               '()))))
                                         g$fields$30129$1XGIwa)))))
                            g$f$30128$1XGIwa)
                          g$fields$30126$1XGIwa)))))
                  (g$get-accessors$30041$1XGIwa
                    (case-lambda
                      ((g$foo$30091$1XGIwa g$fields$30092$1XGIwa)
                       (letrec* ((g$gen-name$30093$1XGIwa
                                   (case-lambda
                                     ((g$x$30124$1XGIwa)
                                      (g$datum->syntax$28878$1XGIwa
                                        g$foo$30091$1XGIwa
                                        (g$string->symbol$20594$1XGIwa
                                          (g$string-append$20591$1XGIwa
                                            (g$symbol->string$20593$1XGIwa
                                              (g$syntax->datum$28879$1XGIwa
                                                g$foo$30091$1XGIwa))
                                            '"-"
                                            (g$symbol->string$20593$1XGIwa
                                              (g$syntax->datum$28879$1XGIwa
                                                g$x$30124$1XGIwa)))))))))
                         (g$map$19661$1XGIwa
                           (case-lambda
                             ((g$field$30094$1XGIwa)
                              ((case-lambda
                                 ((g$t$30095$1XGIwa)
                                  ((case-lambda
                                     ((g$ls/false$30096$1XGIwa)
                                      (if (if g$ls/false$30096$1XGIwa
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$30097$1XGIwa
                                                     g$accessor$30098$1XGIwa
                                                     g$mutator$30099$1XGIwa)
                                                   (g$id?$28259$1XGIwa
                                                     g$accessor$30098$1XGIwa)))
                                                g$ls/false$30096$1XGIwa))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$30100$1XGIwa
                                               g$accessor$30101$1XGIwa
                                               g$mutator$30102$1XGIwa)
                                             g$accessor$30101$1XGIwa))
                                          g$ls/false$30096$1XGIwa)
                                        ((case-lambda
                                           ((g$t$30103$1XGIwa)
                                            ((case-lambda
                                               ((g$ls/false$30104$1XGIwa)
                                                (if (if g$ls/false$30104$1XGIwa
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$30105$1XGIwa
                                                               g$accessor$30106$1XGIwa)
                                                             (g$id?$28259$1XGIwa
                                                               g$accessor$30106$1XGIwa)))
                                                          g$ls/false$30104$1XGIwa))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$30107$1XGIwa
                                                         g$accessor$30108$1XGIwa)
                                                       g$accessor$30108$1XGIwa))
                                                    g$ls/false$30104$1XGIwa)
                                                  ((case-lambda
                                                     ((g$t$30109$1XGIwa)
                                                      ((case-lambda
                                                         ((g$ls/false$30110$1XGIwa)
                                                          (if (if g$ls/false$30110$1XGIwa
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$30111$1XGIwa)
                                                                       (g$id?$28259$1XGIwa
                                                                         g$name$30111$1XGIwa)))
                                                                    g$ls/false$30110$1XGIwa))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$30112$1XGIwa)
                                                                 (g$gen-name$30093$1XGIwa
                                                                   g$name$30112$1XGIwa)))
                                                              g$ls/false$30110$1XGIwa)
                                                            ((case-lambda
                                                               ((g$t$30113$1XGIwa)
                                                                ((case-lambda
                                                                   ((g$ls/false$30114$1XGIwa)
                                                                    (if (if g$ls/false$30114$1XGIwa
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$30115$1XGIwa)
                                                                                 (g$id?$28259$1XGIwa
                                                                                   g$name$30115$1XGIwa)))
                                                                              g$ls/false$30114$1XGIwa))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$30116$1XGIwa)
                                                                           (g$gen-name$30093$1XGIwa
                                                                             g$name$30116$1XGIwa)))
                                                                        g$ls/false$30114$1XGIwa)
                                                                      ((case-lambda
                                                                         ((g$t$30117$1XGIwa)
                                                                          ((case-lambda
                                                                             ((g$ls/false$30118$1XGIwa)
                                                                              (if (if g$ls/false$30118$1XGIwa
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$30119$1XGIwa)
                                                                                           (g$id?$28259$1XGIwa
                                                                                             g$name$30119$1XGIwa)))
                                                                                        g$ls/false$30118$1XGIwa))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$30120$1XGIwa)
                                                                                     (g$gen-name$30093$1XGIwa
                                                                                       g$name$30120$1XGIwa)))
                                                                                  g$ls/false$30118$1XGIwa)
                                                                                ((case-lambda
                                                                                   ((g$t$30121$1XGIwa)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$30122$1XGIwa)
                                                                                        (if g$ls/false$30122$1XGIwa
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$30123$1XGIwa)
                                                                                               (g$syntax-violation$28876$1XGIwa
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$30094$1XGIwa)))
                                                                                            g$ls/false$30122$1XGIwa)
                                                                                          (g$syntax-violation$28876$1XGIwa
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$30121$1XGIwa))))
                                                                                     (g$syntax-dispatch$28757$1XGIwa
                                                                                       g$t$30121$1XGIwa
                                                                                       'any))))
                                                                                 g$t$30117$1XGIwa))))
                                                                           (g$syntax-dispatch$28757$1XGIwa
                                                                             g$t$30117$1XGIwa
                                                                             'any))))
                                                                       g$t$30113$1XGIwa))))
                                                                 (g$syntax-dispatch$28757$1XGIwa
                                                                   g$t$30113$1XGIwa
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$30109$1XGIwa))))
                                                       (g$syntax-dispatch$28757$1XGIwa
                                                         g$t$30109$1XGIwa
                                                         '(#(scheme-id
                                                             mutable)
                                                           any)))))
                                                   g$t$30103$1XGIwa))))
                                             (g$syntax-dispatch$28757$1XGIwa
                                               g$t$30103$1XGIwa
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$30095$1XGIwa))))
                                   (g$syntax-dispatch$28757$1XGIwa
                                     g$t$30095$1XGIwa
                                     '(#(scheme-id mutable)
                                       any
                                       any
                                       any)))))
                               g$field$30094$1XGIwa)))
                           g$fields$30092$1XGIwa)))))
                  (g$enumerate$30042$1XGIwa
                    (case-lambda
                      ((g$ls$30087$1XGIwa)
                       ((letrec ((g$f$30088$1XGIwa
                                   (case-lambda
                                     ((g$ls$30089$1XGIwa
                                        g$i$30090$1XGIwa)
                                      (if (null? g$ls$30089$1XGIwa)
                                        '()
                                        (begin
                                          '#f
                                          (cons
                                            g$i$30090$1XGIwa
                                            (g$f$30088$1XGIwa
                                              (cdr g$ls$30089$1XGIwa)
                                              (+ g$i$30090$1XGIwa
                                                 '1)))))))))
                          g$f$30088$1XGIwa)
                        g$ls$30087$1XGIwa
                        '0))))
                  (g$do-define-record$30043$1XGIwa
                    (case-lambda
                      ((g$namespec$30067$1XGIwa g$clause*$30068$1XGIwa)
                       ((case-lambda
                          ((g$foo$30069$1XGIwa)
                           ((case-lambda
                              ((g$foo-rtd$30070$1XGIwa)
                               ((case-lambda
                                  ((g$foo-rcd$30071$1XGIwa)
                                   ((case-lambda
                                      ((g$protocol$30072$1XGIwa)
                                       ((case-lambda
                                          ((g$make-foo$30073$1XGIwa)
                                           ((case-lambda
                                              ((g$fields$30074$1XGIwa)
                                               ((case-lambda
                                                  ((g$idx*$30075$1XGIwa)
                                                   ((case-lambda
                                                      ((g$foo-x*$30076$1XGIwa)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$30077$1XGIwa)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$30078$1XGIwa)
                                                               ((case-lambda
                                                                  ((g$foo?$30079$1XGIwa)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$30080$1XGIwa)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$30081$1XGIwa)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$30082$1XGIwa)
                                                                               (g$bless$28720$1XGIwa
                                                                                 (cons
                                                                                   'begin
                                                                                   (cons
                                                                                     (list
                                                                                       'define
                                                                                       g$foo-rtd$30070$1XGIwa
                                                                                       g$foo-rtd-code$30080$1XGIwa)
                                                                                     (cons
                                                                                       (list
                                                                                         'define
                                                                                         g$protocol$30072$1XGIwa
                                                                                         g$protocol-code$30082$1XGIwa)
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rcd$30071$1XGIwa
                                                                                           g$foo-rcd-code$30081$1XGIwa)
                                                                                         (cons
                                                                                           (list
                                                                                             'define-syntax
                                                                                             g$foo$30069$1XGIwa
                                                                                             (list
                                                                                               'list
                                                                                               ''$rtd
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rtd$30070$1XGIwa)
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rcd$30071$1XGIwa)))
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo?$30079$1XGIwa
                                                                                               (list
                                                                                                 'record-predicate
                                                                                                 g$foo-rtd$30070$1XGIwa))
                                                                                             (cons
                                                                                               (list
                                                                                                 'define
                                                                                                 g$make-foo$30073$1XGIwa
                                                                                                 (list
                                                                                                   'record-constructor
                                                                                                   g$foo-rcd$30071$1XGIwa))
                                                                                               (append
                                                                                                 (g$map$19661$1XGIwa
                                                                                                   (case-lambda
                                                                                                     ((g$foo-x$30083$1XGIwa
                                                                                                        g$idx$30084$1XGIwa)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$foo-x$30083$1XGIwa
                                                                                                        (list
                                                                                                          'record-accessor
                                                                                                          g$foo-rtd$30070$1XGIwa
                                                                                                          g$idx$30084$1XGIwa))))
                                                                                                   g$foo-x*$30076$1XGIwa
                                                                                                   g$idx*$30075$1XGIwa)
                                                                                                 (g$map$19661$1XGIwa
                                                                                                   (case-lambda
                                                                                                     ((g$set-foo-x!$30085$1XGIwa
                                                                                                        g$idx$30086$1XGIwa)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$set-foo-x!$30085$1XGIwa
                                                                                                        (list
                                                                                                          'record-mutator
                                                                                                          g$foo-rtd$30070$1XGIwa
                                                                                                          g$idx$30086$1XGIwa))))
                                                                                                   g$set-foo-x!*$30077$1XGIwa
                                                                                                   g$set-foo-idx*$30078$1XGIwa))))))))))))
                                                                            (g$get-protocol-code$30037$1XGIwa
                                                                              g$clause*$30068$1XGIwa))))
                                                                        (g$foo-rcd-code$30036$1XGIwa
                                                                          g$clause*$30068$1XGIwa
                                                                          g$foo-rtd$30070$1XGIwa
                                                                          g$protocol$30072$1XGIwa
                                                                          (g$parent-rcd-code$30035$1XGIwa
                                                                            g$clause*$30068$1XGIwa)))))
                                                                    (g$foo-rtd-code$30033$1XGIwa
                                                                      g$foo$30069$1XGIwa
                                                                      g$clause*$30068$1XGIwa
                                                                      (g$parent-rtd-code$30034$1XGIwa
                                                                        g$clause*$30068$1XGIwa)))))
                                                                (g$get-record-predicate-name$30031$1XGIwa
                                                                  g$namespec$30067$1XGIwa))))
                                                            (g$get-mutator-indices$30039$1XGIwa
                                                              g$fields$30074$1XGIwa))))
                                                        (g$get-mutators$30040$1XGIwa
                                                          g$foo$30069$1XGIwa
                                                          g$fields$30074$1XGIwa))))
                                                    (g$get-accessors$30041$1XGIwa
                                                      g$foo$30069$1XGIwa
                                                      g$fields$30074$1XGIwa))))
                                                (g$enumerate$30042$1XGIwa
                                                  g$fields$30074$1XGIwa))))
                                            (g$get-fields$30038$1XGIwa
                                              g$clause*$30068$1XGIwa))))
                                        (g$get-record-constructor-name$30030$1XGIwa
                                          g$namespec$30067$1XGIwa))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$30029$1XGIwa
                          g$namespec$30067$1XGIwa)))))
                  (g$verify-clauses$30044$1XGIwa
                    (case-lambda
                      ((g$x$30049$1XGIwa g$cls*$30050$1XGIwa)
                       (letrec* ((g$valid-kwds$30051$1XGIwa
                                   (g$map$19661$1XGIwa
                                     g$bless$28720$1XGIwa
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$30052$1XGIwa
                                   (case-lambda
                                     ((g$x$30064$1XGIwa
                                        g$ls$30065$1XGIwa)
                                      (if (pair? g$ls$30065$1XGIwa)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$30066$1XGIwa)
                                              (if g$t$30066$1XGIwa
                                                g$t$30066$1XGIwa
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$30052$1XGIwa
                                                    g$x$30064$1XGIwa
                                                    (cdr g$ls$30065$1XGIwa))))))
                                           (g$free-id=?$28263$1XGIwa
                                             g$x$30064$1XGIwa
                                             (car g$ls$30065$1XGIwa))))
                                        '#f)))))
                         ((letrec ((g$f$30053$1XGIwa
                                     (case-lambda
                                       ((g$cls*$30054$1XGIwa
                                          g$seen*$30055$1XGIwa)
                                        (if (not (null?
                                                   g$cls*$30054$1XGIwa))
                                          ((case-lambda
                                             ((g$t$30056$1XGIwa)
                                              ((case-lambda
                                                 ((g$ls/false$30057$1XGIwa)
                                                  (if g$ls/false$30057$1XGIwa
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$30058$1XGIwa
                                                           g$rest$30059$1XGIwa)
                                                         (if ((case-lambda
                                                                ((g$t$30060$1XGIwa)
                                                                 (if g$t$30060$1XGIwa
                                                                   g$t$30060$1XGIwa
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$30052$1XGIwa
                                                                            g$kwd$30058$1XGIwa
                                                                            g$valid-kwds$30051$1XGIwa))))))
                                                              (not (g$id?$28259$1XGIwa
                                                                     g$kwd$30058$1XGIwa)))
                                                           (g$syntax-violation$28876$1XGIwa
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$30058$1XGIwa)
                                                           (if (g$bound-id-member?$28266$1XGIwa
                                                                 g$kwd$30058$1XGIwa
                                                                 g$seen*$30055$1XGIwa)
                                                             (g$syntax-violation$28876$1XGIwa
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$30049$1XGIwa
                                                               g$kwd$30058$1XGIwa)
                                                             (begin
                                                               '#f
                                                               (g$f$30053$1XGIwa
                                                                 (cdr g$cls*$30054$1XGIwa)
                                                                 (cons
                                                                   g$kwd$30058$1XGIwa
                                                                   g$seen*$30055$1XGIwa)))))))
                                                      g$ls/false$30057$1XGIwa)
                                                    ((case-lambda
                                                       ((g$t$30061$1XGIwa)
                                                        ((case-lambda
                                                           ((g$ls/false$30062$1XGIwa)
                                                            (if g$ls/false$30062$1XGIwa
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$30063$1XGIwa)
                                                                   (g$syntax-violation$28876$1XGIwa
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$30063$1XGIwa)))
                                                                g$ls/false$30062$1XGIwa)
                                                              (g$syntax-violation$28876$1XGIwa
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$30061$1XGIwa))))
                                                         (g$syntax-dispatch$28757$1XGIwa
                                                           g$t$30061$1XGIwa
                                                           'any))))
                                                     g$t$30056$1XGIwa))))
                                               (g$syntax-dispatch$28757$1XGIwa
                                                 g$t$30056$1XGIwa
                                                 '(any . any)))))
                                           (car g$cls*$30054$1XGIwa))
                                          (void))))))
                            g$f$30053$1XGIwa)
                          g$cls*$30050$1XGIwa
                          '()))))))
          ((case-lambda
             ((g$t$30045$1XGIwa)
              ((case-lambda
                 ((g$ls/false$30046$1XGIwa)
                  (if g$ls/false$30046$1XGIwa
                    (apply
                      (case-lambda
                        ((g$namespec$30047$1XGIwa
                           g$clause*$30048$1XGIwa)
                         (begin
                           (g$verify-clauses$30044$1XGIwa
                             g$x$30027$1XGIwa
                             g$clause*$30048$1XGIwa)
                           (g$do-define-record$30043$1XGIwa
                             g$namespec$30047$1XGIwa
                             g$clause*$30048$1XGIwa))))
                      g$ls/false$30046$1XGIwa)
                    (g$syntax-violation$28876$1XGIwa
                      '#f
                      '"invalid syntax"
                      g$t$30045$1XGIwa))))
               (g$syntax-dispatch$28757$1XGIwa
                 g$t$30045$1XGIwa
                 '(_ any . each-any)))))
           g$x$30027$1XGIwa)))))
   (g$define-condition-type-macro$28752$1XGIwa
     g$define-condition-type-macro$32347$1XGIwa
     (case-lambda
       ((g$x$30283$1XGIwa)
        (letrec* ((g$mkname$30284$1XGIwa
                    (case-lambda
                      ((g$name$30307$1XGIwa g$suffix$30308$1XGIwa)
                       (g$datum->syntax$28878$1XGIwa
                         g$name$30307$1XGIwa
                         (g$string->symbol$20594$1XGIwa
                           (g$string-append$20591$1XGIwa
                             (g$symbol->string$20593$1XGIwa
                               (g$syntax->datum$28879$1XGIwa
                                 g$name$30307$1XGIwa))
                             g$suffix$30308$1XGIwa)))))))
          ((case-lambda
             ((g$t$30285$1XGIwa)
              ((case-lambda
                 ((g$ls/false$30286$1XGIwa)
                  (if (if g$ls/false$30286$1XGIwa
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$30287$1XGIwa
                                 g$name$30288$1XGIwa
                                 g$super$30289$1XGIwa
                                 g$constructor$30290$1XGIwa
                                 g$predicate$30291$1XGIwa
                                 g$field*$30292$1XGIwa
                                 g$accessor*$30293$1XGIwa)
                               (if (g$id?$28259$1XGIwa
                                     g$name$30288$1XGIwa)
                                 (if (g$id?$28259$1XGIwa
                                       g$super$30289$1XGIwa)
                                   (if (g$id?$28259$1XGIwa
                                         g$constructor$30290$1XGIwa)
                                     (if (g$id?$28259$1XGIwa
                                           g$predicate$30291$1XGIwa)
                                       (if (g$for-all$19659$1XGIwa
                                             g$id?$28259$1XGIwa
                                             g$field*$30292$1XGIwa)
                                         (begin
                                           '#f
                                           (g$for-all$19659$1XGIwa
                                             g$id?$28259$1XGIwa
                                             g$accessor*$30293$1XGIwa))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$30286$1XGIwa))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$30294$1XGIwa
                           g$name$30295$1XGIwa
                           g$super$30296$1XGIwa
                           g$constructor$30297$1XGIwa
                           g$predicate$30298$1XGIwa
                           g$field*$30299$1XGIwa
                           g$accessor*$30300$1XGIwa)
                         ((case-lambda
                            ((g$aux-accessor*$30301$1XGIwa)
                             (g$bless$28720$1XGIwa
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$30295$1XGIwa
                                         g$constructor$30297$1XGIwa
                                         (gensym))
                                       (cons
                                         (list
                                           'parent
                                           g$super$30296$1XGIwa)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$19661$1XGIwa
                                               (case-lambda
                                                 ((g$field$30302$1XGIwa
                                                    g$aux$30303$1XGIwa)
                                                  (list
                                                    'immutable
                                                    g$field$30302$1XGIwa
                                                    g$aux$30303$1XGIwa)))
                                               g$field*$30299$1XGIwa
                                               g$aux-accessor*$30301$1XGIwa))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$30298$1XGIwa
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$30295$1XGIwa)))
                                     (g$map$19661$1XGIwa
                                       (case-lambda
                                         ((g$accessor$30304$1XGIwa
                                            g$aux$30305$1XGIwa)
                                          (list
                                            'define
                                            g$accessor$30304$1XGIwa
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$30295$1XGIwa)
                                              g$aux$30305$1XGIwa))))
                                       g$accessor*$30300$1XGIwa
                                       g$aux-accessor*$30301$1XGIwa)))))))
                          (g$map$19661$1XGIwa
                            (case-lambda ((g$x$30306$1XGIwa) (gensym)))
                            g$accessor*$30300$1XGIwa))))
                      g$ls/false$30286$1XGIwa)
                    (g$syntax-violation$28876$1XGIwa
                      '#f
                      '"invalid syntax"
                      g$t$30285$1XGIwa))))
               (g$syntax-dispatch$28757$1XGIwa
                 g$t$30285$1XGIwa
                 '(any any any any any . #(each (any any)))))))
           g$x$30283$1XGIwa)))))
   (g$incorrect-usage-macro$28753$1XGIwa
     g$incorrect-usage-macro$32348$1XGIwa
     (case-lambda
       ((g$e$30309$1XGIwa)
        (g$syntax-violation$28876$1XGIwa
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$30309$1XGIwa))))
   (g$parameterize-macro$28754$1XGIwa
     g$parameterize-macro$32349$1XGIwa
     (case-lambda
       ((g$e$30310$1XGIwa)
        ((case-lambda
           ((g$t$30311$1XGIwa)
            ((case-lambda
               ((g$ls/false$30312$1XGIwa)
                (if g$ls/false$30312$1XGIwa
                  (apply
                    (case-lambda
                      ((g$b$30313$1XGIwa g$b*$30314$1XGIwa)
                       (g$bless$28720$1XGIwa
                         (cons
                           'let
                           (cons
                             '()
                             (cons
                               g$b$30313$1XGIwa
                               g$b*$30314$1XGIwa))))))
                    g$ls/false$30312$1XGIwa)
                  ((case-lambda
                     ((g$t$30315$1XGIwa)
                      ((case-lambda
                         ((g$ls/false$30316$1XGIwa)
                          (if g$ls/false$30316$1XGIwa
                            (apply
                              (case-lambda
                                ((g$olhs*$30317$1XGIwa
                                   g$orhs*$30318$1XGIwa
                                   g$b$30319$1XGIwa
                                   g$b*$30320$1XGIwa)
                                 ((case-lambda
                                    ((g$lhs*$30321$1XGIwa
                                       g$rhs*$30322$1XGIwa)
                                     (g$bless$28720$1XGIwa
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$30321$1XGIwa
                                             g$rhs*$30322$1XGIwa)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$19661$1XGIwa
                                                       (case-lambda
                                                         ((g$lhs$30323$1XGIwa
                                                            g$rhs$30324$1XGIwa)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$30323$1XGIwa)))
                                                            (list
                                                              g$lhs$30323$1XGIwa
                                                              g$rhs$30324$1XGIwa)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$30324$1XGIwa
                                                                '(t))))))
                                                       g$lhs*$30321$1XGIwa
                                                       g$rhs*$30322$1XGIwa)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$30319$1XGIwa
                                                         g$b*$30320$1XGIwa)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$30317$1XGIwa
                                           g$orhs*$30318$1XGIwa)))))
                                  (g$generate-temporaries$28866$1XGIwa
                                    g$olhs*$30317$1XGIwa)
                                  (g$generate-temporaries$28866$1XGIwa
                                    g$orhs*$30318$1XGIwa))))
                              g$ls/false$30316$1XGIwa)
                            (g$syntax-violation$28876$1XGIwa
                              '#f
                              '"invalid syntax"
                              g$t$30315$1XGIwa))))
                       (g$syntax-dispatch$28757$1XGIwa
                         g$t$30315$1XGIwa
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$30311$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$30311$1XGIwa
               '(_ () any . each-any)))))
         g$e$30310$1XGIwa))))
   (g$foreign-call-transformer$28755$1XGIwa
     g$foreign-call-transformer$32350$1XGIwa
     (case-lambda
       ((g$e$30325$1XGIwa g$r$30326$1XGIwa g$mr$30327$1XGIwa)
        ((case-lambda
           ((g$t$30328$1XGIwa)
            ((case-lambda
               ((g$ls/false$30329$1XGIwa)
                (if g$ls/false$30329$1XGIwa
                  (apply
                    (case-lambda
                      ((g$name$30330$1XGIwa g$arg*$30331$1XGIwa)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$28775$1XGIwa
                             g$name$30330$1XGIwa
                             g$r$30326$1XGIwa
                             g$mr$30327$1XGIwa)
                           (g$chi-expr*$28773$1XGIwa
                             g$arg*$30331$1XGIwa
                             g$r$30326$1XGIwa
                             g$mr$30327$1XGIwa)))))
                    g$ls/false$30329$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$30328$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$30328$1XGIwa
               '(_ any . each-any)))))
         g$e$30325$1XGIwa))))
   (g$convert-pattern$28756$1XGIwa
     g$convert-pattern$32351$1XGIwa
     (case-lambda
       ((g$pattern$30332$1XGIwa g$keys$30333$1XGIwa)
        (letrec* ((g$cvt*$30334$1XGIwa
                    (case-lambda
                      ((g$p*$30414$1XGIwa
                         g$n$30415$1XGIwa
                         g$ids$30416$1XGIwa)
                       (if (null? g$p*$30414$1XGIwa)
                         (values '() g$ids$30416$1XGIwa)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$30334$1XGIwa
                                (cdr g$p*$30414$1XGIwa)
                                g$n$30415$1XGIwa
                                g$ids$30416$1XGIwa)))
                           (case-lambda
                             ((g$y$30419$1XGIwa g$ids$30420$1XGIwa)
                              ((case-lambda
                                 ((g$ids$30421$1XGIwa g$y$30422$1XGIwa)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$30335$1XGIwa
                                         (car g$p*$30414$1XGIwa)
                                         g$n$30415$1XGIwa
                                         g$ids$30421$1XGIwa)))
                                    (case-lambda
                                      ((g$x$30425$1XGIwa
                                         g$ids$30426$1XGIwa)
                                       ((case-lambda
                                          ((g$ids$30427$1XGIwa
                                             g$x$30428$1XGIwa)
                                           (values
                                             (cons
                                               g$x$30428$1XGIwa
                                               g$y$30422$1XGIwa)
                                             g$ids$30427$1XGIwa)))
                                        g$ids$30426$1XGIwa
                                        g$x$30425$1XGIwa))))))
                               g$ids$30420$1XGIwa
                               g$y$30419$1XGIwa))))))))
                  (g$cvt$30335$1XGIwa
                    (case-lambda
                      ((g$p$30336$1XGIwa
                         g$n$30337$1XGIwa
                         g$ids$30338$1XGIwa)
                       ((case-lambda
                          ((g$t$30339$1XGIwa)
                           ((case-lambda
                              ((g$ls/false$30340$1XGIwa)
                               (if (if g$ls/false$30340$1XGIwa
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$30341$1XGIwa)
                                            (g$id?$28259$1XGIwa
                                              g$id$30341$1XGIwa)))
                                         g$ls/false$30340$1XGIwa))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$30342$1XGIwa)
                                      (if (g$bound-id-member?$28266$1XGIwa
                                            g$p$30336$1XGIwa
                                            g$keys$30333$1XGIwa)
                                        (values
                                          (vector
                                            'free-id
                                            g$p$30336$1XGIwa)
                                          g$ids$30338$1XGIwa)
                                        (if (g$free-id=?$28263$1XGIwa
                                              g$p$30336$1XGIwa
                                              (g$scheme-stx$28700$1XGIwa
                                                '_))
                                          (values '_ g$ids$30338$1XGIwa)
                                          (begin
                                            '#f
                                            (values
                                              'any
                                              (cons
                                                (cons
                                                  g$p$30336$1XGIwa
                                                  g$n$30337$1XGIwa)
                                                g$ids$30338$1XGIwa)))))))
                                   g$ls/false$30340$1XGIwa)
                                 ((case-lambda
                                    ((g$t$30343$1XGIwa)
                                     ((case-lambda
                                        ((g$ls/false$30344$1XGIwa)
                                         (if (if g$ls/false$30344$1XGIwa
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$30345$1XGIwa
                                                        g$dots$30346$1XGIwa)
                                                      (g$ellipsis?$28758$1XGIwa
                                                        g$dots$30346$1XGIwa)))
                                                   g$ls/false$30344$1XGIwa))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$30347$1XGIwa
                                                  g$dots$30348$1XGIwa)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$30335$1XGIwa
                                                       g$p$30347$1XGIwa
                                                       (+ g$n$30337$1XGIwa
                                                          '1)
                                                       g$ids$30338$1XGIwa)))
                                                  (case-lambda
                                                    ((g$p$30351$1XGIwa
                                                       g$ids$30352$1XGIwa)
                                                     ((case-lambda
                                                        ((g$ids$30353$1XGIwa
                                                           g$p$30354$1XGIwa)
                                                         (values
                                                           (if (eq? g$p$30354$1XGIwa
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$30354$1XGIwa))
                                                           g$ids$30353$1XGIwa)))
                                                      g$ids$30352$1XGIwa
                                                      g$p$30351$1XGIwa))))))
                                             g$ls/false$30344$1XGIwa)
                                           ((case-lambda
                                              ((g$t$30355$1XGIwa)
                                               ((case-lambda
                                                  ((g$ls/false$30356$1XGIwa)
                                                   (if (if g$ls/false$30356$1XGIwa
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$30357$1XGIwa
                                                                  g$dots$30358$1XGIwa
                                                                  g$ys$30359$1XGIwa
                                                                  g$z$30360$1XGIwa)
                                                                (g$ellipsis?$28758$1XGIwa
                                                                  g$dots$30358$1XGIwa)))
                                                             g$ls/false$30356$1XGIwa))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$30361$1XGIwa
                                                            g$dots$30362$1XGIwa
                                                            g$ys$30363$1XGIwa
                                                            g$z$30364$1XGIwa)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$30335$1XGIwa
                                                                 g$z$30364$1XGIwa
                                                                 g$n$30337$1XGIwa
                                                                 g$ids$30338$1XGIwa)))
                                                            (case-lambda
                                                              ((g$z$30367$1XGIwa
                                                                 g$ids$30368$1XGIwa)
                                                               ((case-lambda
                                                                  ((g$ids$30369$1XGIwa
                                                                     g$z$30370$1XGIwa)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$30334$1XGIwa
                                                                          g$ys$30363$1XGIwa
                                                                          g$n$30337$1XGIwa
                                                                          g$ids$30369$1XGIwa)))
                                                                     (case-lambda
                                                                       ((g$ys$30373$1XGIwa
                                                                          g$ids$30374$1XGIwa)
                                                                        ((case-lambda
                                                                           ((g$ids$30375$1XGIwa
                                                                              g$ys$30376$1XGIwa)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$30335$1XGIwa
                                                                                   g$x$30361$1XGIwa
                                                                                   (+ g$n$30337$1XGIwa
                                                                                      '1)
                                                                                   g$ids$30375$1XGIwa)))
                                                                              (case-lambda
                                                                                ((g$x$30379$1XGIwa
                                                                                   g$ids$30380$1XGIwa)
                                                                                 ((case-lambda
                                                                                    ((g$ids$30381$1XGIwa
                                                                                       g$x$30382$1XGIwa)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$30382$1XGIwa
                                                                                         (g$reverse$20609$1XGIwa
                                                                                           g$ys$30376$1XGIwa)
                                                                                         g$z$30370$1XGIwa)
                                                                                       g$ids$30381$1XGIwa)))
                                                                                  g$ids$30380$1XGIwa
                                                                                  g$x$30379$1XGIwa))))))
                                                                         g$ids$30374$1XGIwa
                                                                         g$ys$30373$1XGIwa))))))
                                                                g$ids$30368$1XGIwa
                                                                g$z$30367$1XGIwa))))))
                                                       g$ls/false$30356$1XGIwa)
                                                     ((case-lambda
                                                        ((g$t$30383$1XGIwa)
                                                         ((case-lambda
                                                            ((g$ls/false$30384$1XGIwa)
                                                             (if g$ls/false$30384$1XGIwa
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$30385$1XGIwa
                                                                      g$y$30386$1XGIwa)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$30335$1XGIwa
                                                                           g$y$30386$1XGIwa
                                                                           g$n$30337$1XGIwa
                                                                           g$ids$30338$1XGIwa)))
                                                                      (case-lambda
                                                                        ((g$y$30389$1XGIwa
                                                                           g$ids$30390$1XGIwa)
                                                                         ((case-lambda
                                                                            ((g$ids$30391$1XGIwa
                                                                               g$y$30392$1XGIwa)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$30335$1XGIwa
                                                                                    g$x$30385$1XGIwa
                                                                                    g$n$30337$1XGIwa
                                                                                    g$ids$30391$1XGIwa)))
                                                                               (case-lambda
                                                                                 ((g$x$30395$1XGIwa
                                                                                    g$ids$30396$1XGIwa)
                                                                                  ((case-lambda
                                                                                     ((g$ids$30397$1XGIwa
                                                                                        g$x$30398$1XGIwa)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$30398$1XGIwa
                                                                                          g$y$30392$1XGIwa)
                                                                                        g$ids$30397$1XGIwa)))
                                                                                   g$ids$30396$1XGIwa
                                                                                   g$x$30395$1XGIwa))))))
                                                                          g$ids$30390$1XGIwa
                                                                          g$y$30389$1XGIwa))))))
                                                                 g$ls/false$30384$1XGIwa)
                                                               ((case-lambda
                                                                  ((g$t$30399$1XGIwa)
                                                                   ((case-lambda
                                                                      ((g$ls/false$30400$1XGIwa)
                                                                       (if g$ls/false$30400$1XGIwa
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$30338$1XGIwa)))
                                                                           g$ls/false$30400$1XGIwa)
                                                                         ((case-lambda
                                                                            ((g$t$30401$1XGIwa)
                                                                             ((case-lambda
                                                                                ((g$ls/false$30402$1XGIwa)
                                                                                 (if (if g$ls/false$30402$1XGIwa
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$30403$1XGIwa)
                                                                                              (not (g$stx?$28231$1XGIwa
                                                                                                     g$p$30403$1XGIwa))))
                                                                                           g$ls/false$30402$1XGIwa))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$30404$1XGIwa)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$30335$1XGIwa
                                                                                               g$p$30404$1XGIwa
                                                                                               g$n$30337$1XGIwa
                                                                                               g$ids$30338$1XGIwa)))
                                                                                          (case-lambda
                                                                                            ((g$p$30407$1XGIwa
                                                                                               g$ids$30408$1XGIwa)
                                                                                             ((case-lambda
                                                                                                ((g$ids$30409$1XGIwa
                                                                                                   g$p$30410$1XGIwa)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$30410$1XGIwa)
                                                                                                   g$ids$30409$1XGIwa)))
                                                                                              g$ids$30408$1XGIwa
                                                                                              g$p$30407$1XGIwa))))))
                                                                                     g$ls/false$30402$1XGIwa)
                                                                                   ((case-lambda
                                                                                      ((g$t$30411$1XGIwa)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$30412$1XGIwa)
                                                                                           (if g$ls/false$30412$1XGIwa
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$30413$1XGIwa)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$28270$1XGIwa
                                                                                                        g$datum$30413$1XGIwa))
                                                                                                    g$ids$30338$1XGIwa)))
                                                                                               g$ls/false$30412$1XGIwa)
                                                                                             (g$syntax-violation$28876$1XGIwa
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$30411$1XGIwa))))
                                                                                        (g$syntax-dispatch$28757$1XGIwa
                                                                                          g$t$30411$1XGIwa
                                                                                          'any))))
                                                                                    g$t$30401$1XGIwa))))
                                                                              (g$syntax-dispatch$28757$1XGIwa
                                                                                g$t$30401$1XGIwa
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$30399$1XGIwa))))
                                                                    (g$syntax-dispatch$28757$1XGIwa
                                                                      g$t$30399$1XGIwa
                                                                      '()))))
                                                                g$t$30383$1XGIwa))))
                                                          (g$syntax-dispatch$28757$1XGIwa
                                                            g$t$30383$1XGIwa
                                                            '(any .
                                                                  any)))))
                                                      g$t$30355$1XGIwa))))
                                                (g$syntax-dispatch$28757$1XGIwa
                                                  g$t$30355$1XGIwa
                                                  '(any any
                                                        .
                                                        #(each+
                                                          any
                                                          ()
                                                          any))))))
                                            g$t$30343$1XGIwa))))
                                      (g$syntax-dispatch$28757$1XGIwa
                                        g$t$30343$1XGIwa
                                        '(any any)))))
                                  g$t$30339$1XGIwa))))
                            (g$syntax-dispatch$28757$1XGIwa
                              g$t$30339$1XGIwa
                              'any))))
                        g$p$30336$1XGIwa)))))
          (g$cvt$30335$1XGIwa g$pattern$30332$1XGIwa '0 '())))))
   (g$syntax-dispatch$28757$1XGIwa
     g$syntax-dispatch$32352$1XGIwa
     (case-lambda
       ((g$e$30429$1XGIwa g$p$30430$1XGIwa)
        (letrec* ((g$stx^$30431$1XGIwa
                    (case-lambda
                      ((g$e$30539$1XGIwa
                         g$m*$30540$1XGIwa
                         g$s*$30541$1XGIwa
                         g$ae*$30542$1XGIwa)
                       (if (if (null? g$m*$30540$1XGIwa)
                             (if (null? g$s*$30541$1XGIwa)
                               (begin '#f (null? g$ae*$30542$1XGIwa))
                               '#f)
                             '#f)
                         g$e$30539$1XGIwa
                         (g$mkstx$28247$1XGIwa
                           g$e$30539$1XGIwa
                           g$m*$30540$1XGIwa
                           g$s*$30541$1XGIwa
                           g$ae*$30542$1XGIwa)))))
                  (g$match-each$30432$1XGIwa
                    (case-lambda
                      ((g$e$30523$1XGIwa
                         g$p$30524$1XGIwa
                         g$m*$30525$1XGIwa
                         g$s*$30526$1XGIwa
                         g$ae*$30527$1XGIwa)
                       (if (pair? g$e$30523$1XGIwa)
                         ((case-lambda
                            ((g$first$30528$1XGIwa)
                             (if g$first$30528$1XGIwa
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$30529$1XGIwa)
                                     (if g$rest$30529$1XGIwa
                                       (begin
                                         '#f
                                         (cons
                                           g$first$30528$1XGIwa
                                           g$rest$30529$1XGIwa))
                                       '#f)))
                                  (g$match-each$30432$1XGIwa
                                    (cdr g$e$30523$1XGIwa)
                                    g$p$30524$1XGIwa
                                    g$m*$30525$1XGIwa
                                    g$s*$30526$1XGIwa
                                    g$ae*$30527$1XGIwa)))
                               '#f)))
                          (g$match$30438$1XGIwa
                            (car g$e$30523$1XGIwa)
                            g$p$30524$1XGIwa
                            g$m*$30525$1XGIwa
                            g$s*$30526$1XGIwa
                            g$ae*$30527$1XGIwa
                            '()))
                         (if (null? g$e$30523$1XGIwa)
                           '()
                           (if (g$stx?$28231$1XGIwa g$e$30523$1XGIwa)
                             (if (not (g$top-marked?$28193$1XGIwa
                                        g$m*$30525$1XGIwa))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$28246$1XGIwa
                                        g$m*$30525$1XGIwa
                                        g$s*$30526$1XGIwa
                                        g$ae*$30527$1XGIwa
                                        g$e$30523$1XGIwa)))
                                   (case-lambda
                                     ((g$m*$30533$1XGIwa
                                        g$s*$30534$1XGIwa
                                        g$ae*$30535$1XGIwa)
                                      ((case-lambda
                                         ((g$ae*$30536$1XGIwa
                                            g$s*$30537$1XGIwa
                                            g$m*$30538$1XGIwa)
                                          (g$match-each$30432$1XGIwa
                                            (g$stx-expr$28233$1XGIwa
                                              g$e$30523$1XGIwa)
                                            g$p$30524$1XGIwa
                                            g$m*$30538$1XGIwa
                                            g$s*$30537$1XGIwa
                                            g$ae*$30536$1XGIwa)))
                                       g$ae*$30535$1XGIwa
                                       g$s*$30534$1XGIwa
                                       g$m*$30533$1XGIwa)))))
                               '#f)
                             (if (annotation? g$e$30523$1XGIwa)
                               (g$match-each$30432$1XGIwa
                                 (annotation-expression
                                   g$e$30523$1XGIwa)
                                 g$p$30524$1XGIwa
                                 g$m*$30525$1XGIwa
                                 g$s*$30526$1XGIwa
                                 g$ae*$30527$1XGIwa)
                               (begin '#f '#f))))))))
                  (g$match-each+$30433$1XGIwa
                    (case-lambda
                      ((g$e$30491$1XGIwa
                         g$x-pat$30492$1XGIwa
                         g$y-pat$30493$1XGIwa
                         g$z-pat$30494$1XGIwa
                         g$m*$30495$1XGIwa
                         g$s*$30496$1XGIwa
                         g$ae*$30497$1XGIwa
                         g$r$30498$1XGIwa)
                       ((letrec ((g$f$30499$1XGIwa
                                   (case-lambda
                                     ((g$e$30500$1XGIwa
                                        g$m*$30501$1XGIwa
                                        g$s*$30502$1XGIwa
                                        g$ae*$30503$1XGIwa)
                                      (if (pair? g$e$30500$1XGIwa)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$30499$1XGIwa
                                               (cdr g$e$30500$1XGIwa)
                                               g$m*$30501$1XGIwa
                                               g$s*$30502$1XGIwa
                                               g$ae*$30503$1XGIwa)))
                                          (case-lambda
                                            ((g$xr*$30507$1XGIwa
                                               g$y-pat$30508$1XGIwa
                                               g$r$30509$1XGIwa)
                                             ((case-lambda
                                                ((g$r$30510$1XGIwa
                                                   g$y-pat$30511$1XGIwa
                                                   g$xr*$30512$1XGIwa)
                                                 (if g$r$30510$1XGIwa
                                                   (if (null?
                                                         g$y-pat$30511$1XGIwa)
                                                     ((case-lambda
                                                        ((g$xr$30513$1XGIwa)
                                                         (if g$xr$30513$1XGIwa
                                                           (values
                                                             (cons
                                                               g$xr$30513$1XGIwa
                                                               g$xr*$30512$1XGIwa)
                                                             g$y-pat$30511$1XGIwa
                                                             g$r$30510$1XGIwa)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$30438$1XGIwa
                                                        (car g$e$30500$1XGIwa)
                                                        g$x-pat$30492$1XGIwa
                                                        g$m*$30501$1XGIwa
                                                        g$s*$30502$1XGIwa
                                                        g$ae*$30503$1XGIwa
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$30511$1XGIwa)
                                                       (g$match$30438$1XGIwa
                                                         (car g$e$30500$1XGIwa)
                                                         (car g$y-pat$30511$1XGIwa)
                                                         g$m*$30501$1XGIwa
                                                         g$s*$30502$1XGIwa
                                                         g$ae*$30503$1XGIwa
                                                         g$r$30510$1XGIwa)))
                                                   (values
                                                     '#f
                                                     '#f
                                                     '#f))))
                                              g$r$30509$1XGIwa
                                              g$y-pat$30508$1XGIwa
                                              g$xr*$30507$1XGIwa))))
                                        (if (g$stx?$28231$1XGIwa
                                              g$e$30500$1XGIwa)
                                          (if (g$top-marked?$28193$1XGIwa
                                                g$m*$30501$1XGIwa)
                                            (values
                                              '()
                                              g$y-pat$30493$1XGIwa
                                              (g$match$30438$1XGIwa
                                                g$e$30500$1XGIwa
                                                g$z-pat$30494$1XGIwa
                                                g$m*$30501$1XGIwa
                                                g$s*$30502$1XGIwa
                                                g$ae*$30503$1XGIwa
                                                g$r$30498$1XGIwa))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$28246$1XGIwa
                                                   g$m*$30501$1XGIwa
                                                   g$s*$30502$1XGIwa
                                                   g$ae*$30503$1XGIwa
                                                   g$e$30500$1XGIwa)))
                                              (case-lambda
                                                ((g$m*$30517$1XGIwa
                                                   g$s*$30518$1XGIwa
                                                   g$ae*$30519$1XGIwa)
                                                 ((case-lambda
                                                    ((g$ae*$30520$1XGIwa
                                                       g$s*$30521$1XGIwa
                                                       g$m*$30522$1XGIwa)
                                                     (g$f$30499$1XGIwa
                                                       (g$stx-expr$28233$1XGIwa
                                                         g$e$30500$1XGIwa)
                                                       g$m*$30522$1XGIwa
                                                       g$s*$30521$1XGIwa
                                                       g$ae*$30520$1XGIwa)))
                                                  g$ae*$30519$1XGIwa
                                                  g$s*$30518$1XGIwa
                                                  g$m*$30517$1XGIwa)))))
                                          (if (annotation?
                                                g$e$30500$1XGIwa)
                                            (g$f$30499$1XGIwa
                                              (annotation-expression
                                                g$e$30500$1XGIwa)
                                              g$m*$30501$1XGIwa
                                              g$s*$30502$1XGIwa
                                              g$ae*$30503$1XGIwa)
                                            (begin
                                              '#f
                                              (values
                                                '()
                                                g$y-pat$30493$1XGIwa
                                                (g$match$30438$1XGIwa
                                                  g$e$30500$1XGIwa
                                                  g$z-pat$30494$1XGIwa
                                                  g$m*$30501$1XGIwa
                                                  g$s*$30502$1XGIwa
                                                  g$ae*$30503$1XGIwa
                                                  g$r$30498$1XGIwa))))))))))
                          g$f$30499$1XGIwa)
                        g$e$30491$1XGIwa
                        g$m*$30495$1XGIwa
                        g$s*$30496$1XGIwa
                        g$ae*$30497$1XGIwa))))
                  (g$match-each-any$30434$1XGIwa
                    (case-lambda
                      ((g$e$30477$1XGIwa
                         g$m*$30478$1XGIwa
                         g$s*$30479$1XGIwa
                         g$ae*$30480$1XGIwa)
                       (if (pair? g$e$30477$1XGIwa)
                         ((case-lambda
                            ((g$l$30481$1XGIwa)
                             (if g$l$30481$1XGIwa
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$30431$1XGIwa
                                     (car g$e$30477$1XGIwa)
                                     g$m*$30478$1XGIwa
                                     g$s*$30479$1XGIwa
                                     g$ae*$30480$1XGIwa)
                                   g$l$30481$1XGIwa))
                               '#f)))
                          (g$match-each-any$30434$1XGIwa
                            (cdr g$e$30477$1XGIwa)
                            g$m*$30478$1XGIwa
                            g$s*$30479$1XGIwa
                            g$ae*$30480$1XGIwa))
                         (if (null? g$e$30477$1XGIwa)
                           '()
                           (if (g$stx?$28231$1XGIwa g$e$30477$1XGIwa)
                             (if (not (g$top-marked?$28193$1XGIwa
                                        g$m*$30478$1XGIwa))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$28246$1XGIwa
                                        g$m*$30478$1XGIwa
                                        g$s*$30479$1XGIwa
                                        g$ae*$30480$1XGIwa
                                        g$e$30477$1XGIwa)))
                                   (case-lambda
                                     ((g$m*$30485$1XGIwa
                                        g$s*$30486$1XGIwa
                                        g$ae*$30487$1XGIwa)
                                      ((case-lambda
                                         ((g$ae*$30488$1XGIwa
                                            g$s*$30489$1XGIwa
                                            g$m*$30490$1XGIwa)
                                          (g$match-each-any$30434$1XGIwa
                                            (g$stx-expr$28233$1XGIwa
                                              g$e$30477$1XGIwa)
                                            g$m*$30490$1XGIwa
                                            g$s*$30489$1XGIwa
                                            g$ae*$30488$1XGIwa)))
                                       g$ae*$30487$1XGIwa
                                       g$s*$30486$1XGIwa
                                       g$m*$30485$1XGIwa)))))
                               '#f)
                             (if (annotation? g$e$30477$1XGIwa)
                               (g$match-each-any$30434$1XGIwa
                                 (annotation-expression
                                   g$e$30477$1XGIwa)
                                 g$m*$30478$1XGIwa
                                 g$s*$30479$1XGIwa
                                 g$ae*$30480$1XGIwa)
                               (begin '#f '#f))))))))
                  (g$match-empty$30435$1XGIwa
                    (case-lambda
                      ((g$p$30474$1XGIwa g$r$30475$1XGIwa)
                       (if (null? g$p$30474$1XGIwa)
                         g$r$30475$1XGIwa
                         (if (eq? g$p$30474$1XGIwa '_)
                           g$r$30475$1XGIwa
                           (if (eq? g$p$30474$1XGIwa 'any)
                             (cons '() g$r$30475$1XGIwa)
                             (if (pair? g$p$30474$1XGIwa)
                               (g$match-empty$30435$1XGIwa
                                 (car g$p$30474$1XGIwa)
                                 (g$match-empty$30435$1XGIwa
                                   (cdr g$p$30474$1XGIwa)
                                   g$r$30475$1XGIwa))
                               (if (eq? g$p$30474$1XGIwa 'each-any)
                                 (cons '() g$r$30475$1XGIwa)
                                 (begin
                                   '#f
                                   ((case-lambda
                                      ((g$t$30476$1XGIwa)
                                       (if (eqv? g$t$30476$1XGIwa 'each)
                                         (g$match-empty$30435$1XGIwa
                                           (g$vector-ref$20602$1XGIwa
                                             g$p$30474$1XGIwa
                                             '1)
                                           g$r$30475$1XGIwa)
                                         (if (eqv?
                                               g$t$30476$1XGIwa
                                               'each+)
                                           (g$match-empty$30435$1XGIwa
                                             (g$vector-ref$20602$1XGIwa
                                               g$p$30474$1XGIwa
                                               '1)
                                             (g$match-empty$30435$1XGIwa
                                               (g$reverse$20609$1XGIwa
                                                 (g$vector-ref$20602$1XGIwa
                                                   g$p$30474$1XGIwa
                                                   '2))
                                               (g$match-empty$30435$1XGIwa
                                                 (g$vector-ref$20602$1XGIwa
                                                   g$p$30474$1XGIwa
                                                   '3)
                                                 g$r$30475$1XGIwa)))
                                           (if (g$memv$19654$1XGIwa
                                                 g$t$30476$1XGIwa
                                                 '(free-id atom))
                                             g$r$30475$1XGIwa
                                             (if (g$memv$19654$1XGIwa
                                                   g$t$30476$1XGIwa
                                                   '(scheme-id atom))
                                               g$r$30475$1XGIwa
                                               (if (eqv?
                                                     g$t$30476$1XGIwa
                                                     'vector)
                                                 (g$match-empty$30435$1XGIwa
                                                   (g$vector-ref$20602$1XGIwa
                                                     g$p$30474$1XGIwa
                                                     '1)
                                                   g$r$30475$1XGIwa)
                                                 (begin
                                                   '#f
                                                   (assertion-violation
                                                     'syntax-dispatch
                                                     '"invalid pattern"
                                                     g$p$30474$1XGIwa)))))))))
                                    (g$vector-ref$20602$1XGIwa
                                      g$p$30474$1XGIwa
                                      '0)))))))))))
                  (g$combine$30436$1XGIwa
                    (case-lambda
                      ((g$r*$30472$1XGIwa g$r$30473$1XGIwa)
                       (if (null? (car g$r*$30472$1XGIwa))
                         g$r$30473$1XGIwa
                         (cons
                           (g$map$19661$1XGIwa car g$r*$30472$1XGIwa)
                           (g$combine$30436$1XGIwa
                             (g$map$19661$1XGIwa cdr g$r*$30472$1XGIwa)
                             g$r$30473$1XGIwa))))))
                  (g$match*$30437$1XGIwa
                    (case-lambda
                      ((g$e$30454$1XGIwa
                         g$p$30455$1XGIwa
                         g$m*$30456$1XGIwa
                         g$s*$30457$1XGIwa
                         g$ae*$30458$1XGIwa
                         g$r$30459$1XGIwa)
                       (if (null? g$p$30455$1XGIwa)
                         (if (null? g$e$30454$1XGIwa)
                           (begin '#f g$r$30459$1XGIwa)
                           '#f)
                         (if (pair? g$p$30455$1XGIwa)
                           (if (pair? g$e$30454$1XGIwa)
                             (begin
                               '#f
                               (g$match$30438$1XGIwa
                                 (car g$e$30454$1XGIwa)
                                 (car g$p$30455$1XGIwa)
                                 g$m*$30456$1XGIwa
                                 g$s*$30457$1XGIwa
                                 g$ae*$30458$1XGIwa
                                 (g$match$30438$1XGIwa
                                   (cdr g$e$30454$1XGIwa)
                                   (cdr g$p$30455$1XGIwa)
                                   g$m*$30456$1XGIwa
                                   g$s*$30457$1XGIwa
                                   g$ae*$30458$1XGIwa
                                   g$r$30459$1XGIwa)))
                             '#f)
                           (if (eq? g$p$30455$1XGIwa 'each-any)
                             ((case-lambda
                                ((g$l$30460$1XGIwa)
                                 (if g$l$30460$1XGIwa
                                   (begin
                                     '#f
                                     (cons
                                       g$l$30460$1XGIwa
                                       g$r$30459$1XGIwa))
                                   '#f)))
                              (g$match-each-any$30434$1XGIwa
                                g$e$30454$1XGIwa
                                g$m*$30456$1XGIwa
                                g$s*$30457$1XGIwa
                                g$ae*$30458$1XGIwa))
                             (begin
                               '#f
                               ((case-lambda
                                  ((g$t$30461$1XGIwa)
                                   (if (eqv? g$t$30461$1XGIwa 'each)
                                     (if (null? g$e$30454$1XGIwa)
                                       (g$match-empty$30435$1XGIwa
                                         (g$vector-ref$20602$1XGIwa
                                           g$p$30455$1XGIwa
                                           '1)
                                         g$r$30459$1XGIwa)
                                       ((case-lambda
                                          ((g$r*$30462$1XGIwa)
                                           (if g$r*$30462$1XGIwa
                                             (begin
                                               '#f
                                               (g$combine$30436$1XGIwa
                                                 g$r*$30462$1XGIwa
                                                 g$r$30459$1XGIwa))
                                             '#f)))
                                        (g$match-each$30432$1XGIwa
                                          g$e$30454$1XGIwa
                                          (g$vector-ref$20602$1XGIwa
                                            g$p$30455$1XGIwa
                                            '1)
                                          g$m*$30456$1XGIwa
                                          g$s*$30457$1XGIwa
                                          g$ae*$30458$1XGIwa)))
                                     (if (eqv?
                                           g$t$30461$1XGIwa
                                           'free-id)
                                       (if (g$symbol?$20573$1XGIwa
                                             g$e$30454$1XGIwa)
                                         (if (g$top-marked?$28193$1XGIwa
                                               g$m*$30456$1XGIwa)
                                           (if (g$free-id=?$28263$1XGIwa
                                                 (g$stx^$30431$1XGIwa
                                                   g$e$30454$1XGIwa
                                                   g$m*$30456$1XGIwa
                                                   g$s*$30457$1XGIwa
                                                   g$ae*$30458$1XGIwa)
                                                 (g$vector-ref$20602$1XGIwa
                                                   g$p$30455$1XGIwa
                                                   '1))
                                             (begin
                                               '#f
                                               g$r$30459$1XGIwa)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (eqv?
                                             g$t$30461$1XGIwa
                                             'scheme-id)
                                         (if (g$symbol?$20573$1XGIwa
                                               g$e$30454$1XGIwa)
                                           (if (g$top-marked?$28193$1XGIwa
                                                 g$m*$30456$1XGIwa)
                                             (if (g$free-id=?$28263$1XGIwa
                                                   (g$stx^$30431$1XGIwa
                                                     g$e$30454$1XGIwa
                                                     g$m*$30456$1XGIwa
                                                     g$s*$30457$1XGIwa
                                                     g$ae*$30458$1XGIwa)
                                                   (g$scheme-stx$28700$1XGIwa
                                                     (g$vector-ref$20602$1XGIwa
                                                       g$p$30455$1XGIwa
                                                       '1)))
                                               (begin
                                                 '#f
                                                 g$r$30459$1XGIwa)
                                               '#f)
                                             '#f)
                                           '#f)
                                         (if (eqv?
                                               g$t$30461$1XGIwa
                                               'each+)
                                           (call-with-values
                                             (case-lambda
                                               (()
                                                (g$match-each+$30433$1XGIwa
                                                  g$e$30454$1XGIwa
                                                  (g$vector-ref$20602$1XGIwa
                                                    g$p$30455$1XGIwa
                                                    '1)
                                                  (g$vector-ref$20602$1XGIwa
                                                    g$p$30455$1XGIwa
                                                    '2)
                                                  (g$vector-ref$20602$1XGIwa
                                                    g$p$30455$1XGIwa
                                                    '3)
                                                  g$m*$30456$1XGIwa
                                                  g$s*$30457$1XGIwa
                                                  g$ae*$30458$1XGIwa
                                                  g$r$30459$1XGIwa)))
                                             (case-lambda
                                               ((g$xr*$30466$1XGIwa
                                                  g$y-pat$30467$1XGIwa
                                                  g$r$30468$1XGIwa)
                                                ((case-lambda
                                                   ((g$r$30469$1XGIwa
                                                      g$y-pat$30470$1XGIwa
                                                      g$xr*$30471$1XGIwa)
                                                    (if g$r$30469$1XGIwa
                                                      (if (null?
                                                            g$y-pat$30470$1XGIwa)
                                                        (begin
                                                          '#f
                                                          (if (null?
                                                                g$xr*$30471$1XGIwa)
                                                            (g$match-empty$30435$1XGIwa
                                                              (g$vector-ref$20602$1XGIwa
                                                                g$p$30455$1XGIwa
                                                                '1)
                                                              g$r$30469$1XGIwa)
                                                            (g$combine$30436$1XGIwa
                                                              g$xr*$30471$1XGIwa
                                                              g$r$30469$1XGIwa)))
                                                        '#f)
                                                      '#f)))
                                                 g$r$30468$1XGIwa
                                                 g$y-pat$30467$1XGIwa
                                                 g$xr*$30466$1XGIwa))))
                                           (if (eqv?
                                                 g$t$30461$1XGIwa
                                                 'atom)
                                             (if (equal?
                                                   (g$vector-ref$20602$1XGIwa
                                                     g$p$30455$1XGIwa
                                                     '1)
                                                   (g$strip$28269$1XGIwa
                                                     g$e$30454$1XGIwa
                                                     g$m*$30456$1XGIwa))
                                               (begin
                                                 '#f
                                                 g$r$30459$1XGIwa)
                                               '#f)
                                             (if (eqv?
                                                   g$t$30461$1XGIwa
                                                   'vector)
                                               (if (g$vector?$20571$1XGIwa
                                                     g$e$30454$1XGIwa)
                                                 (begin
                                                   '#f
                                                   (g$match$30438$1XGIwa
                                                     (g$vector->list$20607$1XGIwa
                                                       g$e$30454$1XGIwa)
                                                     (g$vector-ref$20602$1XGIwa
                                                       g$p$30455$1XGIwa
                                                       '1)
                                                     g$m*$30456$1XGIwa
                                                     g$s*$30457$1XGIwa
                                                     g$ae*$30458$1XGIwa
                                                     g$r$30459$1XGIwa))
                                                 '#f)
                                               (begin
                                                 '#f
                                                 (assertion-violation
                                                   'syntax-dispatch
                                                   '"invalid pattern"
                                                   g$p$30455$1XGIwa))))))))))
                                (g$vector-ref$20602$1XGIwa
                                  g$p$30455$1XGIwa
                                  '0)))))))))
                  (g$match$30438$1XGIwa
                    (case-lambda
                      ((g$e$30439$1XGIwa
                         g$p$30440$1XGIwa
                         g$m*$30441$1XGIwa
                         g$s*$30442$1XGIwa
                         g$ae*$30443$1XGIwa
                         g$r$30444$1XGIwa)
                       (if (not g$r$30444$1XGIwa)
                         '#f
                         (if (eq? g$p$30440$1XGIwa '_)
                           g$r$30444$1XGIwa
                           (if (eq? g$p$30440$1XGIwa 'any)
                             (cons
                               (g$stx^$30431$1XGIwa
                                 g$e$30439$1XGIwa
                                 g$m*$30441$1XGIwa
                                 g$s*$30442$1XGIwa
                                 g$ae*$30443$1XGIwa)
                               g$r$30444$1XGIwa)
                             (if (g$stx?$28231$1XGIwa g$e$30439$1XGIwa)
                               (if (not (g$top-marked?$28193$1XGIwa
                                          g$m*$30441$1XGIwa))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$28246$1XGIwa
                                          g$m*$30441$1XGIwa
                                          g$s*$30442$1XGIwa
                                          g$ae*$30443$1XGIwa
                                          g$e$30439$1XGIwa)))
                                     (case-lambda
                                       ((g$m*$30448$1XGIwa
                                          g$s*$30449$1XGIwa
                                          g$ae*$30450$1XGIwa)
                                        ((case-lambda
                                           ((g$ae*$30451$1XGIwa
                                              g$s*$30452$1XGIwa
                                              g$m*$30453$1XGIwa)
                                            (g$match$30438$1XGIwa
                                              (g$stx-expr$28233$1XGIwa
                                                g$e$30439$1XGIwa)
                                              g$p$30440$1XGIwa
                                              g$m*$30453$1XGIwa
                                              g$s*$30452$1XGIwa
                                              g$ae*$30451$1XGIwa
                                              g$r$30444$1XGIwa)))
                                         g$ae*$30450$1XGIwa
                                         g$s*$30449$1XGIwa
                                         g$m*$30448$1XGIwa)))))
                                 '#f)
                               (if (annotation? g$e$30439$1XGIwa)
                                 (g$match$30438$1XGIwa
                                   (annotation-expression
                                     g$e$30439$1XGIwa)
                                   g$p$30440$1XGIwa
                                   g$m*$30441$1XGIwa
                                   g$s*$30442$1XGIwa
                                   g$ae*$30443$1XGIwa
                                   g$r$30444$1XGIwa)
                                 (begin
                                   '#f
                                   (g$match*$30437$1XGIwa
                                     g$e$30439$1XGIwa
                                     g$p$30440$1XGIwa
                                     g$m*$30441$1XGIwa
                                     g$s*$30442$1XGIwa
                                     g$ae*$30443$1XGIwa
                                     g$r$30444$1XGIwa)))))))))))
          (g$match$30438$1XGIwa
            g$e$30429$1XGIwa
            g$p$30430$1XGIwa
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$28758$1XGIwa
     g$ellipsis?$32353$1XGIwa
     (case-lambda
       ((g$x$30543$1XGIwa)
        (if (g$id?$28259$1XGIwa g$x$30543$1XGIwa)
          (begin
            '#f
            (g$free-id=?$28263$1XGIwa
              g$x$30543$1XGIwa
              (g$scheme-stx$28700$1XGIwa '...)))
          '#f))))
   (g$underscore?$28759$1XGIwa
     g$underscore?$32354$1XGIwa
     (case-lambda
       ((g$x$30544$1XGIwa)
        (if (g$id?$28259$1XGIwa g$x$30544$1XGIwa)
          (begin
            '#f
            (g$free-id=?$28263$1XGIwa
              g$x$30544$1XGIwa
              (g$scheme-stx$28700$1XGIwa '_)))
          '#f))))
   (g$verify-literals$28760$1XGIwa
     g$verify-literals$32355$1XGIwa
     (case-lambda
       ((g$lits$30545$1XGIwa g$expr$30546$1XGIwa)
        (g$for-each$19662$1XGIwa
          (case-lambda
            ((g$x$30547$1XGIwa)
             (if ((case-lambda
                    ((g$t$30548$1XGIwa)
                     (if g$t$30548$1XGIwa
                       g$t$30548$1XGIwa
                       ((case-lambda
                          ((g$t$30549$1XGIwa)
                           (if g$t$30549$1XGIwa
                             g$t$30549$1XGIwa
                             (begin
                               '#f
                               (g$underscore?$28759$1XGIwa
                                 g$x$30547$1XGIwa)))))
                        (g$ellipsis?$28758$1XGIwa g$x$30547$1XGIwa)))))
                  (not (g$id?$28259$1XGIwa g$x$30547$1XGIwa)))
               (g$syntax-violation$28876$1XGIwa
                 '#f
                 '"invalid literal"
                 g$expr$30546$1XGIwa
                 g$x$30547$1XGIwa)
               (void))))
          g$lits$30545$1XGIwa))))
   (g$syntax-case-transformer$28761$1XGIwa
     g$syntax-case-transformer$32356$1XGIwa
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$30550$1XGIwa
                     (case-lambda
                       ((g$pvars$30607$1XGIwa
                          g$expr$30608$1XGIwa
                          g$y$30609$1XGIwa
                          g$r$30610$1XGIwa
                          g$mr$30611$1XGIwa)
                        ((case-lambda
                           ((g$ids$30612$1XGIwa g$levels$30613$1XGIwa)
                            ((case-lambda
                               ((g$labels$30614$1XGIwa
                                  g$new-vars$30615$1XGIwa)
                                ((case-lambda
                                   ((g$body$30616$1XGIwa)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$28181$1XGIwa
                                        '#f
                                        g$new-vars$30615$1XGIwa
                                        g$body$30616$1XGIwa)
                                      g$y$30609$1XGIwa)))
                                 (g$chi-expr$28775$1XGIwa
                                   (g$add-subst$28249$1XGIwa
                                     (g$make-full-rib$28225$1XGIwa
                                       g$ids$30612$1XGIwa
                                       g$labels$30614$1XGIwa)
                                     g$expr$30608$1XGIwa)
                                   (append
                                     (g$map$19661$1XGIwa
                                       (case-lambda
                                         ((g$label$30617$1XGIwa
                                            g$var$30618$1XGIwa
                                            g$level$30619$1XGIwa)
                                          (cons
                                            g$label$30617$1XGIwa
                                            (g$make-binding$28275$1XGIwa
                                              'syntax
                                              (cons
                                                g$var$30618$1XGIwa
                                                g$level$30619$1XGIwa)))))
                                       g$labels$30614$1XGIwa
                                       g$new-vars$30615$1XGIwa
                                       (g$map$19661$1XGIwa
                                         cdr
                                         g$pvars$30607$1XGIwa))
                                     g$r$30610$1XGIwa)
                                   g$mr$30611$1XGIwa))))
                             (g$map$19661$1XGIwa
                               g$gen-label$28196$1XGIwa
                               g$ids$30612$1XGIwa)
                             (g$map$19661$1XGIwa
                               g$gen-lexical$28194$1XGIwa
                               g$ids$30612$1XGIwa))))
                         (g$map$19661$1XGIwa car g$pvars$30607$1XGIwa)
                         (g$map$19661$1XGIwa
                           cdr
                           g$pvars$30607$1XGIwa)))))
                   (g$invalid-ids-error$30551$1XGIwa
                     (case-lambda
                       ((g$id*$30601$1XGIwa
                          g$e$30602$1XGIwa
                          g$class$30603$1XGIwa)
                        ((letrec ((g$find$30604$1XGIwa
                                    (case-lambda
                                      ((g$id*$30605$1XGIwa
                                         g$ok*$30606$1XGIwa)
                                       (if (null? g$id*$30605$1XGIwa)
                                         (g$syntax-violation$28876$1XGIwa
                                           '#f
                                           '"invalid syntax"
                                           g$e$30602$1XGIwa)
                                         (if (g$id?$28259$1XGIwa
                                               (car g$id*$30605$1XGIwa))
                                           (if (g$bound-id-member?$28266$1XGIwa
                                                 (car g$id*$30605$1XGIwa)
                                                 g$ok*$30606$1XGIwa)
                                             (g$syntax-error$28873$1XGIwa
                                               (car g$id*$30605$1XGIwa)
                                               '"duplicate "
                                               g$class$30603$1XGIwa)
                                             (g$find$30604$1XGIwa
                                               (cdr g$id*$30605$1XGIwa)
                                               (cons
                                                 (car g$id*$30605$1XGIwa)
                                                 g$ok*$30606$1XGIwa)))
                                           (g$syntax-error$28873$1XGIwa
                                             (car g$id*$30605$1XGIwa)
                                             '"invalid "
                                             g$class$30603$1XGIwa)))))))
                           g$find$30604$1XGIwa)
                         g$id*$30601$1XGIwa
                         '()))))
                   (g$gen-clause$30552$1XGIwa
                     (case-lambda
                       ((g$x$30581$1XGIwa
                          g$keys$30582$1XGIwa
                          g$clauses$30583$1XGIwa
                          g$r$30584$1XGIwa
                          g$mr$30585$1XGIwa
                          g$pat$30586$1XGIwa
                          g$fender$30587$1XGIwa
                          g$expr$30588$1XGIwa)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$28756$1XGIwa
                               g$pat$30586$1XGIwa
                               g$keys$30582$1XGIwa)))
                          (case-lambda
                            ((g$p$30591$1XGIwa g$pvars$30592$1XGIwa)
                             ((case-lambda
                                ((g$pvars$30593$1XGIwa g$p$30594$1XGIwa)
                                 (if (not (g$distinct-bound-ids?$28265$1XGIwa
                                            (g$map$19661$1XGIwa
                                              car
                                              g$pvars$30593$1XGIwa)))
                                   (g$invalid-ids-error$30551$1XGIwa
                                     (g$map$19661$1XGIwa
                                       car
                                       g$pvars$30593$1XGIwa)
                                     g$pat$30586$1XGIwa
                                     '"pattern variable")
                                   (if (not (g$for-all$19659$1XGIwa
                                              (case-lambda
                                                ((g$x$30595$1XGIwa)
                                                 (not (g$ellipsis?$28758$1XGIwa
                                                        (car g$x$30595$1XGIwa)))))
                                              g$pvars$30593$1XGIwa))
                                     (g$syntax-violation$28876$1XGIwa
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$30586$1XGIwa)
                                     (begin
                                       '#f
                                       ((case-lambda
                                          ((g$y$30596$1XGIwa)
                                           ((case-lambda
                                              ((g$test$30597$1XGIwa)
                                               ((case-lambda
                                                  ((g$conseq$30598$1XGIwa)
                                                   ((case-lambda
                                                      ((g$altern$30599$1XGIwa)
                                                       (list
                                                         (g$build-lambda$28181$1XGIwa
                                                           '#f
                                                           (list
                                                             g$y$30596$1XGIwa)
                                                           (list
                                                             'if
                                                             g$test$30597$1XGIwa
                                                             g$conseq$30598$1XGIwa
                                                             g$altern$30599$1XGIwa))
                                                         (list
                                                           '(primitive
                                                              syntax-dispatch)
                                                           g$x$30581$1XGIwa
                                                           (list
                                                             'quote
                                                             g$p$30594$1XGIwa)))))
                                                    (g$gen-syntax-case$30553$1XGIwa
                                                      g$x$30581$1XGIwa
                                                      g$keys$30582$1XGIwa
                                                      g$clauses$30583$1XGIwa
                                                      g$r$30584$1XGIwa
                                                      g$mr$30585$1XGIwa))))
                                                (g$build-dispatch-call$30550$1XGIwa
                                                  g$pvars$30593$1XGIwa
                                                  g$expr$30588$1XGIwa
                                                  g$y$30596$1XGIwa
                                                  g$r$30584$1XGIwa
                                                  g$mr$30585$1XGIwa))))
                                            (if (eq? g$fender$30587$1XGIwa
                                                     '#t)
                                              g$y$30596$1XGIwa
                                              (begin
                                                '#f
                                                ((case-lambda
                                                   ((g$call$30600$1XGIwa)
                                                    (list
                                                      'if
                                                      g$y$30596$1XGIwa
                                                      g$call$30600$1XGIwa
                                                      (list
                                                        'quote
                                                        '#f))))
                                                 (g$build-dispatch-call$30550$1XGIwa
                                                   g$pvars$30593$1XGIwa
                                                   g$fender$30587$1XGIwa
                                                   g$y$30596$1XGIwa
                                                   g$r$30584$1XGIwa
                                                   g$mr$30585$1XGIwa)))))))
                                        (g$gen-lexical$28194$1XGIwa
                                          'tmp)))))))
                              g$pvars$30592$1XGIwa
                              g$p$30591$1XGIwa)))))))
                   (g$gen-syntax-case$30553$1XGIwa
                     (case-lambda
                       ((g$x$30564$1XGIwa
                          g$keys$30565$1XGIwa
                          g$clauses$30566$1XGIwa
                          g$r$30567$1XGIwa
                          g$mr$30568$1XGIwa)
                        (if (null? g$clauses$30566$1XGIwa)
                          (list
                            '(primitive syntax-error)
                            g$x$30564$1XGIwa)
                          ((case-lambda
                             ((g$t$30569$1XGIwa)
                              ((case-lambda
                                 ((g$ls/false$30570$1XGIwa)
                                  (if g$ls/false$30570$1XGIwa
                                    (apply
                                      (case-lambda
                                        ((g$pat$30571$1XGIwa
                                           g$expr$30572$1XGIwa)
                                         (if (if (g$id?$28259$1XGIwa
                                                   g$pat$30571$1XGIwa)
                                               (if (not (g$bound-id-member?$28266$1XGIwa
                                                          g$pat$30571$1XGIwa
                                                          g$keys$30565$1XGIwa))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$28758$1XGIwa
                                                          g$pat$30571$1XGIwa)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$28263$1XGIwa
                                                 g$pat$30571$1XGIwa
                                                 (g$scheme-stx$28700$1XGIwa
                                                   '_))
                                             (g$chi-expr$28775$1XGIwa
                                               g$expr$30572$1XGIwa
                                               g$r$30567$1XGIwa
                                               g$mr$30568$1XGIwa)
                                             ((case-lambda
                                                ((g$lab$30573$1XGIwa
                                                   g$lex$30574$1XGIwa)
                                                 ((case-lambda
                                                    ((g$body$30575$1XGIwa)
                                                     (list
                                                       (g$build-lambda$28181$1XGIwa
                                                         '#f
                                                         (list
                                                           g$lex$30574$1XGIwa)
                                                         g$body$30575$1XGIwa)
                                                       g$x$30564$1XGIwa)))
                                                  (g$chi-expr$28775$1XGIwa
                                                    (g$add-subst$28249$1XGIwa
                                                      (g$make-full-rib$28225$1XGIwa
                                                        (list
                                                          g$pat$30571$1XGIwa)
                                                        (list
                                                          g$lab$30573$1XGIwa))
                                                      g$expr$30572$1XGIwa)
                                                    (cons
                                                      (cons
                                                        g$lab$30573$1XGIwa
                                                        (g$make-binding$28275$1XGIwa
                                                          'syntax
                                                          (cons
                                                            g$lex$30574$1XGIwa
                                                            '0)))
                                                      g$r$30567$1XGIwa)
                                                    g$mr$30568$1XGIwa))))
                                              (g$gen-label$28196$1XGIwa
                                                g$pat$30571$1XGIwa)
                                              (g$gen-lexical$28194$1XGIwa
                                                g$pat$30571$1XGIwa)))
                                           (g$gen-clause$30552$1XGIwa
                                             g$x$30564$1XGIwa
                                             g$keys$30565$1XGIwa
                                             (cdr g$clauses$30566$1XGIwa)
                                             g$r$30567$1XGIwa
                                             g$mr$30568$1XGIwa
                                             g$pat$30571$1XGIwa
                                             '#t
                                             g$expr$30572$1XGIwa))))
                                      g$ls/false$30570$1XGIwa)
                                    ((case-lambda
                                       ((g$t$30576$1XGIwa)
                                        ((case-lambda
                                           ((g$ls/false$30577$1XGIwa)
                                            (if g$ls/false$30577$1XGIwa
                                              (apply
                                                (case-lambda
                                                  ((g$pat$30578$1XGIwa
                                                     g$fender$30579$1XGIwa
                                                     g$expr$30580$1XGIwa)
                                                   (g$gen-clause$30552$1XGIwa
                                                     g$x$30564$1XGIwa
                                                     g$keys$30565$1XGIwa
                                                     (cdr g$clauses$30566$1XGIwa)
                                                     g$r$30567$1XGIwa
                                                     g$mr$30568$1XGIwa
                                                     g$pat$30578$1XGIwa
                                                     g$fender$30579$1XGIwa
                                                     g$expr$30580$1XGIwa)))
                                                g$ls/false$30577$1XGIwa)
                                              (g$syntax-violation$28876$1XGIwa
                                                '#f
                                                '"invalid syntax"
                                                g$t$30576$1XGIwa))))
                                         (g$syntax-dispatch$28757$1XGIwa
                                           g$t$30576$1XGIwa
                                           '(any any any)))))
                                     g$t$30569$1XGIwa))))
                               (g$syntax-dispatch$28757$1XGIwa
                                 g$t$30569$1XGIwa
                                 '(any any)))))
                           (car g$clauses$30566$1XGIwa)))))))
           (case-lambda
             ((g$e$30554$1XGIwa g$r$30555$1XGIwa g$mr$30556$1XGIwa)
              ((case-lambda
                 ((g$t$30557$1XGIwa)
                  ((case-lambda
                     ((g$ls/false$30558$1XGIwa)
                      (if g$ls/false$30558$1XGIwa
                        (apply
                          (case-lambda
                            ((g$expr$30559$1XGIwa
                               g$keys$30560$1XGIwa
                               g$clauses$30561$1XGIwa)
                             (begin
                               (g$verify-literals$28760$1XGIwa
                                 g$keys$30560$1XGIwa
                                 g$e$30554$1XGIwa)
                               ((case-lambda
                                  ((g$x$30562$1XGIwa)
                                   ((case-lambda
                                      ((g$body$30563$1XGIwa)
                                       (list
                                         (g$build-lambda$28181$1XGIwa
                                           '#f
                                           (list g$x$30562$1XGIwa)
                                           g$body$30563$1XGIwa)
                                         (g$chi-expr$28775$1XGIwa
                                           g$expr$30559$1XGIwa
                                           g$r$30555$1XGIwa
                                           g$mr$30556$1XGIwa))))
                                    (g$gen-syntax-case$30553$1XGIwa
                                      g$x$30562$1XGIwa
                                      g$keys$30560$1XGIwa
                                      g$clauses$30561$1XGIwa
                                      g$r$30555$1XGIwa
                                      g$mr$30556$1XGIwa))))
                                (g$gen-lexical$28194$1XGIwa 'tmp)))))
                          g$ls/false$30558$1XGIwa)
                        (g$syntax-violation$28876$1XGIwa
                          '#f
                          '"invalid syntax"
                          g$t$30557$1XGIwa))))
                   (g$syntax-dispatch$28757$1XGIwa
                     g$t$30557$1XGIwa
                     '(_ any each-any . each-any)))))
               g$e$30554$1XGIwa))))))))
   (g$ellipsis-map$28762$1XGIwa
     g$ellipsis-map$32357$1XGIwa
     (case-lambda
       ((g$proc$30620$1XGIwa g$ls$30621$1XGIwa . g$ls*$30622$1XGIwa)
        (letrec* ((g$who$30623$1XGIwa '...))
          (begin
            (if (not (list? g$ls$30621$1XGIwa))
              (assertion-violation
                g$who$30623$1XGIwa
                '"not a list"
                g$ls$30621$1XGIwa)
              (void))
            (if (not (null? g$ls*$30622$1XGIwa))
              ((case-lambda
                 ((g$n$30624$1XGIwa)
                  (g$for-each$19662$1XGIwa
                    (case-lambda
                      ((g$x$30625$1XGIwa)
                       (begin
                         (if (not (list? g$x$30625$1XGIwa))
                           (assertion-violation
                             g$who$30623$1XGIwa
                             '"not a list"
                             g$x$30625$1XGIwa)
                           (void))
                         (if (not (g$=$21625$1XGIwa
                                    (length g$x$30625$1XGIwa)
                                    g$n$30624$1XGIwa))
                           (assertion-violation
                             g$who$30623$1XGIwa
                             '"length mismatch"
                             g$ls$30621$1XGIwa
                             g$x$30625$1XGIwa)
                           (void)))))
                    g$ls*$30622$1XGIwa)))
               (length g$ls$30621$1XGIwa))
              (void))
            (apply
              g$map$19661$1XGIwa
              g$proc$30620$1XGIwa
              g$ls$30621$1XGIwa
              g$ls*$30622$1XGIwa))))))
   (g$syntax-transformer$28763$1XGIwa
     g$syntax-transformer$32358$1XGIwa
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$30626$1XGIwa
                     (case-lambda
                       ((g$src$30686$1XGIwa
                          g$e$30687$1XGIwa
                          g$r$30688$1XGIwa
                          g$maps$30689$1XGIwa
                          g$ellipsis?$30690$1XGIwa
                          g$vec?$30691$1XGIwa)
                        ((case-lambda
                           ((g$t$30692$1XGIwa)
                            ((case-lambda
                               ((g$ls/false$30693$1XGIwa)
                                (if (if g$ls/false$30693$1XGIwa
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$30694$1XGIwa)
                                             (g$ellipsis?$30690$1XGIwa
                                               g$dots$30694$1XGIwa)))
                                          g$ls/false$30693$1XGIwa))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$30695$1XGIwa)
                                       (g$syntax-violation$28876$1XGIwa
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$30686$1XGIwa)))
                                    g$ls/false$30693$1XGIwa)
                                  ((case-lambda
                                     ((g$t$30696$1XGIwa)
                                      ((case-lambda
                                         ((g$ls/false$30697$1XGIwa)
                                          (if (if g$ls/false$30697$1XGIwa
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$30698$1XGIwa)
                                                       (g$id?$28259$1XGIwa
                                                         g$id$30698$1XGIwa)))
                                                    g$ls/false$30697$1XGIwa))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$30699$1XGIwa)
                                                 ((case-lambda
                                                    ((g$label$30700$1XGIwa)
                                                     ((case-lambda
                                                        ((g$b$30701$1XGIwa)
                                                         (if (eq? (g$binding-type$28276$1XGIwa
                                                                    g$b$30701$1XGIwa)
                                                                  'syntax)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$var.lev$30704$1XGIwa)
                                                                    (g$gen-ref$30627$1XGIwa
                                                                      g$src$30686$1XGIwa
                                                                      (car g$var.lev$30704$1XGIwa)
                                                                      (cdr g$var.lev$30704$1XGIwa)
                                                                      g$maps$30689$1XGIwa)))
                                                                 (g$binding-value$28277$1XGIwa
                                                                   g$b$30701$1XGIwa))))
                                                             (case-lambda
                                                               ((g$var$30705$1XGIwa
                                                                  g$maps$30706$1XGIwa)
                                                                ((case-lambda
                                                                   ((g$maps$30707$1XGIwa
                                                                      g$var$30708$1XGIwa)
                                                                    (values
                                                                      (list
                                                                        'ref
                                                                        g$var$30708$1XGIwa)
                                                                      g$maps$30707$1XGIwa)))
                                                                 g$maps$30706$1XGIwa
                                                                 g$var$30705$1XGIwa))))
                                                           (values
                                                             (list
                                                               'quote
                                                               g$e$30687$1XGIwa)
                                                             g$maps$30689$1XGIwa))))
                                                      (g$label->binding$28274$1XGIwa
                                                        g$label$30700$1XGIwa
                                                        g$r$30688$1XGIwa))))
                                                  (g$id->label$28272$1XGIwa
                                                    g$e$30687$1XGIwa))))
                                              g$ls/false$30697$1XGIwa)
                                            ((case-lambda
                                               ((g$t$30709$1XGIwa)
                                                ((case-lambda
                                                   ((g$ls/false$30710$1XGIwa)
                                                    (if (if g$ls/false$30710$1XGIwa
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$30711$1XGIwa
                                                                   g$e$30712$1XGIwa)
                                                                 (g$ellipsis?$30690$1XGIwa
                                                                   g$dots$30711$1XGIwa)))
                                                              g$ls/false$30710$1XGIwa))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$30713$1XGIwa
                                                             g$e$30714$1XGIwa)
                                                           (if g$vec?$30691$1XGIwa
                                                             (g$syntax-violation$28876$1XGIwa
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$30686$1XGIwa)
                                                             (g$gen-syntax$30626$1XGIwa
                                                               g$src$30686$1XGIwa
                                                               g$e$30714$1XGIwa
                                                               g$r$30688$1XGIwa
                                                               g$maps$30689$1XGIwa
                                                               (case-lambda
                                                                 ((g$x$30715$1XGIwa)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$30710$1XGIwa)
                                                      ((case-lambda
                                                         ((g$t$30716$1XGIwa)
                                                          ((case-lambda
                                                             ((g$ls/false$30717$1XGIwa)
                                                              (if (if g$ls/false$30717$1XGIwa
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$30718$1XGIwa
                                                                             g$dots$30719$1XGIwa
                                                                             g$y$30720$1XGIwa)
                                                                           (g$ellipsis?$30690$1XGIwa
                                                                             g$dots$30719$1XGIwa)))
                                                                        g$ls/false$30717$1XGIwa))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$30721$1XGIwa
                                                                       g$dots$30722$1XGIwa
                                                                       g$y$30723$1XGIwa)
                                                                     ((letrec ((g$f$30724$1XGIwa
                                                                                 (case-lambda
                                                                                   ((g$y$30725$1XGIwa
                                                                                      g$k$30726$1XGIwa)
                                                                                    ((case-lambda
                                                                                       ((g$t$30727$1XGIwa)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$30728$1XGIwa)
                                                                                            (if g$ls/false$30728$1XGIwa
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$30726$1XGIwa
                                                                                                     g$maps$30689$1XGIwa)))
                                                                                                g$ls/false$30728$1XGIwa)
                                                                                              ((case-lambda
                                                                                                 ((g$t$30729$1XGIwa)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$30730$1XGIwa)
                                                                                                      (if (if g$ls/false$30730$1XGIwa
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$30731$1XGIwa
                                                                                                                     g$y$30732$1XGIwa)
                                                                                                                   (g$ellipsis?$30690$1XGIwa
                                                                                                                     g$dots$30731$1XGIwa)))
                                                                                                                g$ls/false$30730$1XGIwa))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$30733$1XGIwa
                                                                                                               g$y$30734$1XGIwa)
                                                                                                             (g$f$30724$1XGIwa
                                                                                                               g$y$30734$1XGIwa
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$30735$1XGIwa)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$30726$1XGIwa
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$30735$1XGIwa))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$30738$1XGIwa
                                                                                                                         g$maps$30739$1XGIwa)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$30740$1XGIwa
                                                                                                                             g$x$30741$1XGIwa)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$30740$1XGIwa))
                                                                                                                             (g$syntax-violation$28876$1XGIwa
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$30686$1XGIwa)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$30629$1XGIwa
                                                                                                                                 g$x$30741$1XGIwa
                                                                                                                                 (car g$maps$30740$1XGIwa))
                                                                                                                               (cdr g$maps$30740$1XGIwa)))))
                                                                                                                        g$maps$30739$1XGIwa
                                                                                                                        g$x$30738$1XGIwa)))))))))
                                                                                                          g$ls/false$30730$1XGIwa)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$30742$1XGIwa)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$30743$1XGIwa)
                                                                                                                (if g$ls/false$30743$1XGIwa
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$30626$1XGIwa
                                                                                                                              g$src$30686$1XGIwa
                                                                                                                              g$y$30725$1XGIwa
                                                                                                                              g$r$30688$1XGIwa
                                                                                                                              g$maps$30689$1XGIwa
                                                                                                                              g$ellipsis?$30690$1XGIwa
                                                                                                                              g$vec?$30691$1XGIwa)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$30746$1XGIwa
                                                                                                                              g$maps$30747$1XGIwa)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$30748$1XGIwa
                                                                                                                                  g$y$30749$1XGIwa)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$30726$1XGIwa
                                                                                                                                       g$maps$30748$1XGIwa)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$30752$1XGIwa
                                                                                                                                       g$maps$30753$1XGIwa)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$30754$1XGIwa
                                                                                                                                           g$x$30755$1XGIwa)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$30628$1XGIwa
                                                                                                                                             g$x$30755$1XGIwa
                                                                                                                                             g$y$30749$1XGIwa)
                                                                                                                                           g$maps$30754$1XGIwa)))
                                                                                                                                      g$maps$30753$1XGIwa
                                                                                                                                      g$x$30752$1XGIwa))))))
                                                                                                                             g$maps$30747$1XGIwa
                                                                                                                             g$y$30746$1XGIwa))))))
                                                                                                                    g$ls/false$30743$1XGIwa)
                                                                                                                  (g$syntax-violation$28876$1XGIwa
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$30742$1XGIwa))))
                                                                                                             (g$syntax-dispatch$28757$1XGIwa
                                                                                                               g$t$30742$1XGIwa
                                                                                                               '_))))
                                                                                                         g$t$30729$1XGIwa))))
                                                                                                   (g$syntax-dispatch$28757$1XGIwa
                                                                                                     g$t$30729$1XGIwa
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$30727$1XGIwa))))
                                                                                         (g$syntax-dispatch$28757$1XGIwa
                                                                                           g$t$30727$1XGIwa
                                                                                           '()))))
                                                                                     g$y$30725$1XGIwa)))))
                                                                        g$f$30724$1XGIwa)
                                                                      g$y$30723$1XGIwa
                                                                      (case-lambda
                                                                        ((g$maps$30756$1XGIwa)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$30626$1XGIwa
                                                                                g$src$30686$1XGIwa
                                                                                g$x$30721$1XGIwa
                                                                                g$r$30688$1XGIwa
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$30756$1XGIwa)
                                                                                g$ellipsis?$30690$1XGIwa
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$30759$1XGIwa
                                                                                g$maps$30760$1XGIwa)
                                                                              ((case-lambda
                                                                                 ((g$maps$30761$1XGIwa
                                                                                    g$x$30762$1XGIwa)
                                                                                  (if (null?
                                                                                        (car g$maps$30761$1XGIwa))
                                                                                    (g$syntax-violation$28876$1XGIwa
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$30686$1XGIwa)
                                                                                    (values
                                                                                      (g$gen-map$30630$1XGIwa
                                                                                        g$x$30762$1XGIwa
                                                                                        (car g$maps$30761$1XGIwa))
                                                                                      (cdr g$maps$30761$1XGIwa)))))
                                                                               g$maps$30760$1XGIwa
                                                                               g$x$30759$1XGIwa)))))))))
                                                                  g$ls/false$30717$1XGIwa)
                                                                ((case-lambda
                                                                   ((g$t$30763$1XGIwa)
                                                                    ((case-lambda
                                                                       ((g$ls/false$30764$1XGIwa)
                                                                        (if g$ls/false$30764$1XGIwa
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$30765$1XGIwa
                                                                                 g$y$30766$1XGIwa)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$30626$1XGIwa
                                                                                      g$src$30686$1XGIwa
                                                                                      g$x$30765$1XGIwa
                                                                                      g$r$30688$1XGIwa
                                                                                      g$maps$30689$1XGIwa
                                                                                      g$ellipsis?$30690$1XGIwa
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$30769$1XGIwa
                                                                                      g$maps$30770$1XGIwa)
                                                                                    ((case-lambda
                                                                                       ((g$maps$30771$1XGIwa
                                                                                          g$xnew$30772$1XGIwa)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$30626$1XGIwa
                                                                                               g$src$30686$1XGIwa
                                                                                               g$y$30766$1XGIwa
                                                                                               g$r$30688$1XGIwa
                                                                                               g$maps$30771$1XGIwa
                                                                                               g$ellipsis?$30690$1XGIwa
                                                                                               g$vec?$30691$1XGIwa)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$30775$1XGIwa
                                                                                               g$maps$30776$1XGIwa)
                                                                                             ((case-lambda
                                                                                                ((g$maps$30777$1XGIwa
                                                                                                   g$ynew$30778$1XGIwa)
                                                                                                 (values
                                                                                                   (g$gen-cons$30631$1XGIwa
                                                                                                     g$e$30687$1XGIwa
                                                                                                     g$x$30765$1XGIwa
                                                                                                     g$y$30766$1XGIwa
                                                                                                     g$xnew$30772$1XGIwa
                                                                                                     g$ynew$30778$1XGIwa)
                                                                                                   g$maps$30777$1XGIwa)))
                                                                                              g$maps$30776$1XGIwa
                                                                                              g$ynew$30775$1XGIwa))))))
                                                                                     g$maps$30770$1XGIwa
                                                                                     g$xnew$30769$1XGIwa))))))
                                                                            g$ls/false$30764$1XGIwa)
                                                                          ((case-lambda
                                                                             ((g$t$30779$1XGIwa)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$30780$1XGIwa)
                                                                                  (if g$ls/false$30780$1XGIwa
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$30781$1XGIwa)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$30626$1XGIwa
                                                                                                g$src$30686$1XGIwa
                                                                                                g$ls$30781$1XGIwa
                                                                                                g$r$30688$1XGIwa
                                                                                                g$maps$30689$1XGIwa
                                                                                                g$ellipsis?$30690$1XGIwa
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$30784$1XGIwa
                                                                                                g$maps$30785$1XGIwa)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$30786$1XGIwa
                                                                                                    g$lsnew$30787$1XGIwa)
                                                                                                  (values
                                                                                                    (g$gen-vector$30632$1XGIwa
                                                                                                      g$e$30687$1XGIwa
                                                                                                      g$ls$30781$1XGIwa
                                                                                                      g$lsnew$30787$1XGIwa)
                                                                                                    g$maps$30786$1XGIwa)))
                                                                                               g$maps$30785$1XGIwa
                                                                                               g$lsnew$30784$1XGIwa))))))
                                                                                      g$ls/false$30780$1XGIwa)
                                                                                    ((case-lambda
                                                                                       ((g$t$30788$1XGIwa)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$30789$1XGIwa)
                                                                                            (if g$ls/false$30789$1XGIwa
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$30687$1XGIwa)
                                                                                                     g$maps$30689$1XGIwa)))
                                                                                                g$ls/false$30789$1XGIwa)
                                                                                              (g$syntax-violation$28876$1XGIwa
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$30788$1XGIwa))))
                                                                                         (g$syntax-dispatch$28757$1XGIwa
                                                                                           g$t$30788$1XGIwa
                                                                                           '_))))
                                                                                     g$t$30779$1XGIwa))))
                                                                               (g$syntax-dispatch$28757$1XGIwa
                                                                                 g$t$30779$1XGIwa
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$30763$1XGIwa))))
                                                                     (g$syntax-dispatch$28757$1XGIwa
                                                                       g$t$30763$1XGIwa
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$30716$1XGIwa))))
                                                           (g$syntax-dispatch$28757$1XGIwa
                                                             g$t$30716$1XGIwa
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$30709$1XGIwa))))
                                                 (g$syntax-dispatch$28757$1XGIwa
                                                   g$t$30709$1XGIwa
                                                   '(any any)))))
                                             g$t$30696$1XGIwa))))
                                       (g$syntax-dispatch$28757$1XGIwa
                                         g$t$30696$1XGIwa
                                         'any))))
                                   g$t$30692$1XGIwa))))
                             (g$syntax-dispatch$28757$1XGIwa
                               g$t$30692$1XGIwa
                               'any))))
                         g$e$30687$1XGIwa))))
                   (g$gen-ref$30627$1XGIwa
                     (case-lambda
                       ((g$src$30673$1XGIwa
                          g$var$30674$1XGIwa
                          g$level$30675$1XGIwa
                          g$maps$30676$1XGIwa)
                        (if (g$=$21625$1XGIwa g$level$30675$1XGIwa '0)
                          (values
                            g$var$30674$1XGIwa
                            g$maps$30676$1XGIwa)
                          (if (null? g$maps$30676$1XGIwa)
                            (g$syntax-violation$28876$1XGIwa
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$30673$1XGIwa)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$30627$1XGIwa
                                   g$src$30673$1XGIwa
                                   g$var$30674$1XGIwa
                                   (- g$level$30675$1XGIwa '1)
                                   (cdr g$maps$30676$1XGIwa))))
                              (case-lambda
                                ((g$outer-var$30679$1XGIwa
                                   g$outer-maps$30680$1XGIwa)
                                 ((case-lambda
                                    ((g$outer-maps$30681$1XGIwa
                                       g$outer-var$30682$1XGIwa)
                                     ((case-lambda
                                        ((g$t$30683$1XGIwa)
                                         (if g$t$30683$1XGIwa
                                           ((case-lambda
                                              ((g$b$30684$1XGIwa)
                                               (values
                                                 (cdr g$b$30684$1XGIwa)
                                                 g$maps$30676$1XGIwa)))
                                            g$t$30683$1XGIwa)
                                           (begin
                                             '#f
                                             ((case-lambda
                                                ((g$inner-var$30685$1XGIwa)
                                                 (values
                                                   g$inner-var$30685$1XGIwa
                                                   (cons
                                                     (cons
                                                       (cons
                                                         g$outer-var$30682$1XGIwa
                                                         g$inner-var$30685$1XGIwa)
                                                       (car g$maps$30676$1XGIwa))
                                                     g$outer-maps$30681$1XGIwa))))
                                              (g$gen-lexical$28194$1XGIwa
                                                'tmp))))))
                                      (g$assq$19649$1XGIwa
                                        g$outer-var$30682$1XGIwa
                                        (car g$maps$30676$1XGIwa)))))
                                  g$outer-maps$30680$1XGIwa
                                  g$outer-var$30679$1XGIwa)))))))))
                   (g$gen-append$30628$1XGIwa
                     (case-lambda
                       ((g$x$30671$1XGIwa g$y$30672$1XGIwa)
                        (if (equal? g$y$30672$1XGIwa ''())
                          g$x$30671$1XGIwa
                          (list
                            'append
                            g$x$30671$1XGIwa
                            g$y$30672$1XGIwa)))))
                   (g$gen-mappend$30629$1XGIwa
                     (case-lambda
                       ((g$e$30669$1XGIwa g$map-env$30670$1XGIwa)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$30630$1XGIwa
                            g$e$30669$1XGIwa
                            g$map-env$30670$1XGIwa)))))
                   (g$gen-map$30630$1XGIwa
                     (case-lambda
                       ((g$e$30660$1XGIwa g$map-env$30661$1XGIwa)
                        ((case-lambda
                           ((g$formals$30662$1XGIwa
                              g$actuals$30663$1XGIwa)
                            (if (eq? (car g$e$30660$1XGIwa) 'ref)
                              (car g$actuals$30663$1XGIwa)
                              (if (g$for-all$19659$1XGIwa
                                    (case-lambda
                                      ((g$x$30664$1XGIwa)
                                       (if (eq? (car g$x$30664$1XGIwa)
                                                'ref)
                                         (begin
                                           '#f
                                           (g$memq$19653$1XGIwa
                                             (g$cadr$20611$1XGIwa
                                               g$x$30664$1XGIwa)
                                             g$formals$30662$1XGIwa))
                                         '#f)))
                                    (cdr g$e$30660$1XGIwa))
                                ((case-lambda
                                   ((g$args$30665$1XGIwa)
                                    (cons
                                      'map
                                      (cons
                                        (list
                                          'primitive
                                          (car g$e$30660$1XGIwa))
                                        g$args$30665$1XGIwa))))
                                 (g$map$19661$1XGIwa
                                   ((case-lambda
                                      ((g$r$30666$1XGIwa)
                                       (case-lambda
                                         ((g$x$30667$1XGIwa)
                                          (cdr (g$assq$19649$1XGIwa
                                                 (g$cadr$20611$1XGIwa
                                                   g$x$30667$1XGIwa)
                                                 g$r$30666$1XGIwa))))))
                                    (g$map$19661$1XGIwa
                                      cons
                                      g$formals$30662$1XGIwa
                                      g$actuals$30663$1XGIwa))
                                   (cdr g$e$30660$1XGIwa)))
                                (begin
                                  '#f
                                  (g$cons*$19663$1XGIwa
                                    'map
                                    (list
                                      'lambda
                                      g$formals$30662$1XGIwa
                                      g$e$30660$1XGIwa)
                                    g$actuals$30663$1XGIwa))))))
                         (g$map$19661$1XGIwa cdr g$map-env$30661$1XGIwa)
                         (g$map$19661$1XGIwa
                           (case-lambda
                             ((g$x$30668$1XGIwa)
                              (list 'ref (car g$x$30668$1XGIwa))))
                           g$map-env$30661$1XGIwa)))))
                   (g$gen-cons$30631$1XGIwa
                     (case-lambda
                       ((g$e$30652$1XGIwa
                          g$x$30653$1XGIwa
                          g$y$30654$1XGIwa
                          g$xnew$30655$1XGIwa
                          g$ynew$30656$1XGIwa)
                        ((case-lambda
                           ((g$t$30657$1XGIwa)
                            (if (eqv? g$t$30657$1XGIwa 'quote)
                              (if (eq? (car g$xnew$30655$1XGIwa) 'quote)
                                ((case-lambda
                                   ((g$xnew$30658$1XGIwa
                                      g$ynew$30659$1XGIwa)
                                    (if (if (eq? g$xnew$30658$1XGIwa
                                                 g$x$30653$1XGIwa)
                                          (begin
                                            '#f
                                            (eq? g$ynew$30659$1XGIwa
                                                 g$y$30654$1XGIwa))
                                          '#f)
                                      (list 'quote g$e$30652$1XGIwa)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$30658$1XGIwa
                                          g$ynew$30659$1XGIwa)))))
                                 (g$cadr$20611$1XGIwa
                                   g$xnew$30655$1XGIwa)
                                 (g$cadr$20611$1XGIwa
                                   g$ynew$30656$1XGIwa))
                                (if (null?
                                      (g$cadr$20611$1XGIwa
                                        g$ynew$30656$1XGIwa))
                                  (list 'list g$xnew$30655$1XGIwa)
                                  (list
                                    'cons
                                    g$xnew$30655$1XGIwa
                                    g$ynew$30656$1XGIwa)))
                              (if (eqv? g$t$30657$1XGIwa 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$30655$1XGIwa
                                    (cdr g$ynew$30656$1XGIwa)))
                                (begin
                                  '#f
                                  (list
                                    'cons
                                    g$xnew$30655$1XGIwa
                                    g$ynew$30656$1XGIwa))))))
                         (car g$ynew$30656$1XGIwa)))))
                   (g$gen-vector$30632$1XGIwa
                     (case-lambda
                       ((g$e$30649$1XGIwa
                          g$ls$30650$1XGIwa
                          g$lsnew$30651$1XGIwa)
                        (if (eq? (car g$lsnew$30651$1XGIwa) 'quote)
                          (if (eq? (g$cadr$20611$1XGIwa
                                     g$lsnew$30651$1XGIwa)
                                   g$ls$30650$1XGIwa)
                            (list 'quote g$e$30649$1XGIwa)
                            (list
                              'quote
                              (g$list->vector$20600$1XGIwa
                                (g$cadr$20611$1XGIwa
                                  g$lsnew$30651$1XGIwa))))
                          (if (eq? (car g$lsnew$30651$1XGIwa) 'list)
                            (cons 'vector (cdr g$lsnew$30651$1XGIwa))
                            (begin
                              '#f
                              (list
                                'list->vector
                                g$lsnew$30651$1XGIwa)))))))
                   (g$regen$30633$1XGIwa
                     (case-lambda
                       ((g$x$30646$1XGIwa)
                        ((case-lambda
                           ((g$t$30647$1XGIwa)
                            (if (eqv? g$t$30647$1XGIwa 'ref)
                              (g$cadr$20611$1XGIwa g$x$30646$1XGIwa)
                              (if (eqv? g$t$30647$1XGIwa 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$20611$1XGIwa
                                    g$x$30646$1XGIwa))
                                (if (eqv? g$t$30647$1XGIwa 'quote)
                                  (list
                                    'quote
                                    (g$cadr$20611$1XGIwa
                                      g$x$30646$1XGIwa))
                                  (if (eqv? g$t$30647$1XGIwa 'lambda)
                                    (g$build-lambda$28181$1XGIwa
                                      '#f
                                      (g$cadr$20611$1XGIwa
                                        g$x$30646$1XGIwa)
                                      (g$regen$30633$1XGIwa
                                        (g$caddr$20617$1XGIwa
                                          g$x$30646$1XGIwa)))
                                    (if (eqv? g$t$30647$1XGIwa 'map)
                                      ((case-lambda
                                         ((g$ls$30648$1XGIwa)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$30648$1XGIwa)))
                                       (g$map$19661$1XGIwa
                                         g$regen$30633$1XGIwa
                                         (cdr g$x$30646$1XGIwa)))
                                      (begin
                                        '#f
                                        (cons
                                          (list
                                            'primitive
                                            (car g$x$30646$1XGIwa))
                                          (g$map$19661$1XGIwa
                                            g$regen$30633$1XGIwa
                                            (cdr g$x$30646$1XGIwa)))))))))))
                         (car g$x$30646$1XGIwa))))))
           (case-lambda
             ((g$e$30634$1XGIwa g$r$30635$1XGIwa g$mr$30636$1XGIwa)
              ((case-lambda
                 ((g$t$30637$1XGIwa)
                  ((case-lambda
                     ((g$ls/false$30638$1XGIwa)
                      (if g$ls/false$30638$1XGIwa
                        (apply
                          (case-lambda
                            ((g$x$30639$1XGIwa)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$30626$1XGIwa
                                    g$e$30634$1XGIwa
                                    g$x$30639$1XGIwa
                                    g$r$30635$1XGIwa
                                    '()
                                    g$ellipsis?$28758$1XGIwa
                                    '#f)))
                               (case-lambda
                                 ((g$e$30642$1XGIwa g$maps$30643$1XGIwa)
                                  ((case-lambda
                                     ((g$maps$30644$1XGIwa
                                        g$e$30645$1XGIwa)
                                      (g$regen$30633$1XGIwa
                                        g$e$30645$1XGIwa)))
                                   g$maps$30643$1XGIwa
                                   g$e$30642$1XGIwa))))))
                          g$ls/false$30638$1XGIwa)
                        (g$syntax-violation$28876$1XGIwa
                          '#f
                          '"invalid syntax"
                          g$t$30637$1XGIwa))))
                   (g$syntax-dispatch$28757$1XGIwa
                     g$t$30637$1XGIwa
                     '(_ any)))))
               g$e$30634$1XGIwa))))))))
   (g$core-macro-transformer$28764$1XGIwa
     g$core-macro-transformer$32359$1XGIwa
     (case-lambda
       ((g$name$30790$1XGIwa)
        ((case-lambda
           ((g$t$30791$1XGIwa)
            (if (eqv? g$t$30791$1XGIwa 'quote)
              g$quote-transformer$28717$1XGIwa
              (if (eqv? g$t$30791$1XGIwa 'lambda)
                g$lambda-transformer$28719$1XGIwa
                (if (eqv? g$t$30791$1XGIwa 'case-lambda)
                  g$case-lambda-transformer$28718$1XGIwa
                  (if (eqv? g$t$30791$1XGIwa 'letrec)
                    g$letrec-transformer$28707$1XGIwa
                    (if (eqv? g$t$30791$1XGIwa 'letrec*)
                      g$letrec*-transformer$28708$1XGIwa
                      (if (eqv? g$t$30791$1XGIwa 'if)
                        g$if-transformer$28715$1XGIwa
                        (if (eqv? g$t$30791$1XGIwa 'foreign-call)
                          g$foreign-call-transformer$28755$1XGIwa
                          (if (eqv? g$t$30791$1XGIwa 'syntax-case)
                            g$syntax-case-transformer$28761$1XGIwa
                            (if (eqv? g$t$30791$1XGIwa 'syntax)
                              g$syntax-transformer$28763$1XGIwa
                              (if (eqv?
                                    g$t$30791$1XGIwa
                                    'type-descriptor)
                                g$type-descriptor-transformer$28710$1XGIwa
                                (if (eqv?
                                      g$t$30791$1XGIwa
                                      'record-type-descriptor)
                                  g$record-type-descriptor-transformer$28711$1XGIwa
                                  (if (eqv?
                                        g$t$30791$1XGIwa
                                        'record-constructor-descriptor)
                                    g$record-constructor-descriptor-transformer$28712$1XGIwa
                                    (if (eqv?
                                          g$t$30791$1XGIwa
                                          'fluid-let-syntax)
                                      g$fluid-let-syntax-transformer$28709$1XGIwa
                                      (begin
                                        '#f
                                        (assertion-violation
                                          'macro-transformer
                                          '"BUG: cannot find transformer"
                                          g$name$30790$1XGIwa)))))))))))))))))
         g$name$30790$1XGIwa))))
   (g$file-options-macro$28765$1XGIwa
     g$file-options-macro$32360$1XGIwa
     (case-lambda
       ((g$x$30792$1XGIwa)
        (letrec* ((g$valid-option?$30793$1XGIwa
                    (case-lambda
                      ((g$x$30798$1XGIwa)
                       (if (g$id?$28259$1XGIwa g$x$30798$1XGIwa)
                         (begin
                           '#f
                           (g$memq$19653$1XGIwa
                             (g$id->sym$28260$1XGIwa g$x$30798$1XGIwa)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$30794$1XGIwa)
              ((case-lambda
                 ((g$ls/false$30795$1XGIwa)
                  (if (if g$ls/false$30795$1XGIwa
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$30796$1XGIwa)
                               (if (g$for-all$19659$1XGIwa
                                     g$valid-option?$30793$1XGIwa
                                     g$opt*$30796$1XGIwa)
                                 (begin
                                   '#f
                                   (g$file-options-spec$27102$1XGIwa
                                     (g$map$19661$1XGIwa
                                       g$id->sym$28260$1XGIwa
                                       g$opt*$30796$1XGIwa)))
                                 '#f)))
                            g$ls/false$30795$1XGIwa))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$30797$1XGIwa)
                         (g$bless$28720$1XGIwa
                           (list
                             'quote
                             (g$file-options-spec$27102$1XGIwa
                               (g$map$19661$1XGIwa
                                 g$id->sym$28260$1XGIwa
                                 g$opt*$30797$1XGIwa))))))
                      g$ls/false$30795$1XGIwa)
                    (g$syntax-violation$28876$1XGIwa
                      '#f
                      '"invalid syntax"
                      g$t$30794$1XGIwa))))
               (g$syntax-dispatch$28757$1XGIwa
                 g$t$30794$1XGIwa
                 '(_ . each-any)))))
           g$x$30792$1XGIwa)))))
   (g$symbol-macro$28766$1XGIwa
     g$symbol-macro$32361$1XGIwa
     (case-lambda
       ((g$x$30799$1XGIwa g$set$30800$1XGIwa)
        ((case-lambda
           ((g$t$30801$1XGIwa)
            ((case-lambda
               ((g$ls/false$30802$1XGIwa)
                (if (if g$ls/false$30802$1XGIwa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$30803$1XGIwa)
                             (if (g$id?$28259$1XGIwa
                                   g$name$30803$1XGIwa)
                               (begin
                                 '#f
                                 (g$memq$19653$1XGIwa
                                   (g$id->sym$28260$1XGIwa
                                     g$name$30803$1XGIwa)
                                   g$set$30800$1XGIwa))
                               '#f)))
                          g$ls/false$30802$1XGIwa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$30804$1XGIwa)
                       (g$bless$28720$1XGIwa
                         (list 'quote g$name$30804$1XGIwa))))
                    g$ls/false$30802$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$30801$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$30801$1XGIwa
               '(_ any)))))
         g$x$30799$1XGIwa))))
   (g$macro-transformer$28767$1XGIwa
     g$macro-transformer$32362$1XGIwa
     (case-lambda
       ((g$x$30805$1XGIwa)
        (if (g$procedure?$20575$1XGIwa g$x$30805$1XGIwa)
          g$x$30805$1XGIwa
          (if (g$symbol?$20573$1XGIwa g$x$30805$1XGIwa)
            ((case-lambda
               ((g$t$30806$1XGIwa)
                (if (eqv? g$t$30806$1XGIwa 'define-record-type)
                  g$define-record-type-macro$28751$1XGIwa
                  (if (eqv? g$t$30806$1XGIwa 'define-struct)
                    g$define-struct-macro$28750$1XGIwa
                    (if (eqv? g$t$30806$1XGIwa 'include)
                      g$include-macro$28745$1XGIwa
                      (if (eqv? g$t$30806$1XGIwa 'cond)
                        g$cond-macro$28743$1XGIwa
                        (if (eqv? g$t$30806$1XGIwa 'let)
                          g$let-macro$28723$1XGIwa
                          (if (eqv? g$t$30806$1XGIwa 'do)
                            g$do-macro$28739$1XGIwa
                            (if (eqv? g$t$30806$1XGIwa 'or)
                              g$or-macro$28741$1XGIwa
                              (if (eqv? g$t$30806$1XGIwa 'and)
                                g$and-macro$28742$1XGIwa
                                (if (eqv? g$t$30806$1XGIwa 'let*)
                                  g$let*-macro$28740$1XGIwa
                                  (if (eqv?
                                        g$t$30806$1XGIwa
                                        'let-values)
                                    g$let-values-macro$28724$1XGIwa
                                    (if (eqv?
                                          g$t$30806$1XGIwa
                                          'let*-values)
                                      g$let*-values-macro$28725$1XGIwa
                                      (if (eqv?
                                            g$t$30806$1XGIwa
                                            'syntax-rules)
                                        g$syntax-rules-macro$28747$1XGIwa
                                        (if (eqv?
                                              g$t$30806$1XGIwa
                                              'quasiquote)
                                          g$quasiquote-macro$28748$1XGIwa
                                          (if (eqv?
                                                g$t$30806$1XGIwa
                                                'quasisyntax)
                                            g$quasisyntax-macro$28749$1XGIwa
                                            (if (eqv?
                                                  g$t$30806$1XGIwa
                                                  'with-syntax)
                                              g$with-syntax-macro$28721$1XGIwa
                                              (if (eqv?
                                                    g$t$30806$1XGIwa
                                                    'when)
                                                g$when-macro$28713$1XGIwa
                                                (if (eqv?
                                                      g$t$30806$1XGIwa
                                                      'unless)
                                                  g$unless-macro$28714$1XGIwa
                                                  (if (eqv?
                                                        g$t$30806$1XGIwa
                                                        'case)
                                                    g$case-macro$28716$1XGIwa
                                                    (if (eqv?
                                                          g$t$30806$1XGIwa
                                                          'identifier-syntax)
                                                      g$identifier-syntax-macro$28738$1XGIwa
                                                      (if (eqv?
                                                            g$t$30806$1XGIwa
                                                            'time)
                                                        g$time-macro$28734$1XGIwa
                                                        (if (eqv?
                                                              g$t$30806$1XGIwa
                                                              'delay)
                                                          g$delay-macro$28735$1XGIwa
                                                          (if (eqv?
                                                                g$t$30806$1XGIwa
                                                                'assert)
                                                            g$assert-macro$28736$1XGIwa
                                                            (if (eqv?
                                                                  g$t$30806$1XGIwa
                                                                  'endianness)
                                                              g$endianness-macro$28737$1XGIwa
                                                              (if (eqv?
                                                                    g$t$30806$1XGIwa
                                                                    'guard)
                                                                g$guard-macro$28732$1XGIwa
                                                                (if (eqv?
                                                                      g$t$30806$1XGIwa
                                                                      'define-enumeration)
                                                                  g$define-enumeration-macro$28733$1XGIwa
                                                                  (if (eqv?
                                                                        g$t$30806$1XGIwa
                                                                        'trace-lambda)
                                                                    g$trace-lambda-macro$28726$1XGIwa
                                                                    (if (eqv?
                                                                          g$t$30806$1XGIwa
                                                                          'trace-define)
                                                                      g$trace-define-macro$28727$1XGIwa
                                                                      (if (eqv?
                                                                            g$t$30806$1XGIwa
                                                                            'trace-define-syntax)
                                                                        g$trace-define-syntax-macro$28728$1XGIwa
                                                                        (if (eqv?
                                                                              g$t$30806$1XGIwa
                                                                              'trace-let-syntax)
                                                                          g$trace-let-syntax-macro$28730$1XGIwa
                                                                          (if (eqv?
                                                                                g$t$30806$1XGIwa
                                                                                'trace-letrec-syntax)
                                                                            g$trace-letrec-syntax-macro$28731$1XGIwa
                                                                            (if (eqv?
                                                                                  g$t$30806$1XGIwa
                                                                                  'define-condition-type)
                                                                              g$define-condition-type-macro$28752$1XGIwa
                                                                              (if (eqv?
                                                                                    g$t$30806$1XGIwa
                                                                                    'parameterize)
                                                                                g$parameterize-macro$28754$1XGIwa
                                                                                (if (eqv?
                                                                                      g$t$30806$1XGIwa
                                                                                      'include-into)
                                                                                  g$include-into-macro$28746$1XGIwa
                                                                                  (if (eqv?
                                                                                        g$t$30806$1XGIwa
                                                                                        'eol-style)
                                                                                    (case-lambda
                                                                                      ((g$x$30807$1XGIwa)
                                                                                       (g$symbol-macro$28766$1XGIwa
                                                                                         g$x$30807$1XGIwa
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (eqv?
                                                                                          g$t$30806$1XGIwa
                                                                                          'error-handling-mode)
                                                                                      (case-lambda
                                                                                        ((g$x$30808$1XGIwa)
                                                                                         (g$symbol-macro$28766$1XGIwa
                                                                                           g$x$30808$1XGIwa
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (eqv?
                                                                                            g$t$30806$1XGIwa
                                                                                            'buffer-mode)
                                                                                        (case-lambda
                                                                                          ((g$x$30809$1XGIwa)
                                                                                           (g$symbol-macro$28766$1XGIwa
                                                                                             g$x$30809$1XGIwa
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (eqv?
                                                                                              g$t$30806$1XGIwa
                                                                                              'file-options)
                                                                                          g$file-options-macro$28765$1XGIwa
                                                                                          (if (g$memv$19654$1XGIwa
                                                                                                g$t$30806$1XGIwa
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$28753$1XGIwa
                                                                                            (begin
                                                                                              '#f
                                                                                              (error
                                                                                                'macro-transformer
                                                                                                '"BUG: invalid macro"
                                                                                                g$x$30805$1XGIwa))))))))))))))))))))))))))))))))))))))))))
             g$x$30805$1XGIwa)
            (begin
              '#f
              (error
                'core-macro-transformer
                '"BUG: invalid macro"
                g$x$30805$1XGIwa)))))))
   (g$local-macro-transformer$28768$1XGIwa
     g$local-macro-transformer$32363$1XGIwa
     (case-lambda ((g$x$30810$1XGIwa) (car g$x$30810$1XGIwa))))
   (g$do-macro-call$28769$1XGIwa
     g$do-macro-call$32364$1XGIwa
     (case-lambda
       ((g$transformer$30811$1XGIwa
          g$expr$30812$1XGIwa
          g$r$30813$1XGIwa)
        (letrec* ((g$return$30814$1XGIwa
                    (case-lambda
                      ((g$x$30822$1XGIwa)
                       (begin
                         ((letrec ((g$f$30823$1XGIwa
                                     (case-lambda
                                       ((g$x$30824$1XGIwa)
                                        (if (not (g$stx?$28231$1XGIwa
                                                   g$x$30824$1XGIwa))
                                          (if (pair? g$x$30824$1XGIwa)
                                            (begin
                                              (g$f$30823$1XGIwa
                                                (car g$x$30824$1XGIwa))
                                              (g$f$30823$1XGIwa
                                                (cdr g$x$30824$1XGIwa)))
                                            (if (g$vector?$20571$1XGIwa
                                                  g$x$30824$1XGIwa)
                                              (g$vector-for-each$20664$1XGIwa
                                                g$f$30823$1XGIwa
                                                g$x$30824$1XGIwa)
                                              (if (g$symbol?$20573$1XGIwa
                                                    g$x$30824$1XGIwa)
                                                (g$syntax-violation$28876$1XGIwa
                                                  '#f
                                                  '"raw symbol encountered in output of macro"
                                                  g$expr$30812$1XGIwa
                                                  g$x$30824$1XGIwa)
                                                (void))))
                                          (void))))))
                            g$f$30823$1XGIwa)
                          g$x$30822$1XGIwa)
                         (g$add-mark$28248$1XGIwa
                           (g$gen-mark$28243$1XGIwa)
                           g$x$30822$1XGIwa
                           g$expr$30812$1XGIwa))))))
          ((case-lambda
             ((g$x$30815$1XGIwa)
              (if (g$procedure?$20575$1XGIwa g$x$30815$1XGIwa)
                (g$return$30814$1XGIwa
                  (g$x$30815$1XGIwa
                    (case-lambda
                      ((g$id$30816$1XGIwa)
                       (begin
                         (if (not (g$id?$28259$1XGIwa
                                    g$id$30816$1XGIwa))
                           (assertion-violation
                             'rho
                             '"not an identifier"
                             g$id$30816$1XGIwa)
                           (void))
                         ((case-lambda
                            ((g$label$30817$1XGIwa)
                             ((case-lambda
                                ((g$binding$30818$1XGIwa)
                                 ((case-lambda
                                    ((g$t$30819$1XGIwa)
                                     (if (eqv?
                                           g$t$30819$1XGIwa
                                           'local-ctv)
                                       (g$cadr$20611$1XGIwa
                                         g$binding$30818$1XGIwa)
                                       (if (eqv?
                                             g$t$30819$1XGIwa
                                             'global-ctv)
                                         ((case-lambda
                                            ((g$lib$30820$1XGIwa
                                               g$loc$30821$1XGIwa)
                                             (begin
                                               (g$visit-library$27966$1XGIwa
                                                 g$lib$30820$1XGIwa)
                                               (symbol-value
                                                 g$loc$30821$1XGIwa))))
                                          (g$cadr$20611$1XGIwa
                                            g$binding$30818$1XGIwa)
                                          (g$cddr$20613$1XGIwa
                                            g$binding$30818$1XGIwa))
                                         (begin '#f '#f)))))
                                  (car g$binding$30818$1XGIwa))))
                              (g$label->binding$28274$1XGIwa
                                g$label$30817$1XGIwa
                                g$r$30813$1XGIwa))))
                          (g$id->label$28272$1XGIwa
                            g$id$30816$1XGIwa)))))))
                (g$return$30814$1XGIwa g$x$30815$1XGIwa))))
           (g$transformer$30811$1XGIwa
             (g$add-mark$28248$1XGIwa
               g$anti-mark$28244$1XGIwa
               g$expr$30812$1XGIwa
               '#f)))))))
   (g$chi-macro$28770$1XGIwa
     g$chi-macro$32365$1XGIwa
     (case-lambda
       ((g$p$30825$1XGIwa g$e$30826$1XGIwa g$r$30827$1XGIwa)
        (g$do-macro-call$28769$1XGIwa
          (g$macro-transformer$28767$1XGIwa g$p$30825$1XGIwa)
          g$e$30826$1XGIwa
          g$r$30827$1XGIwa))))
   (g$chi-local-macro$28771$1XGIwa
     g$chi-local-macro$32366$1XGIwa
     (case-lambda
       ((g$p$30828$1XGIwa g$e$30829$1XGIwa g$r$30830$1XGIwa)
        (g$do-macro-call$28769$1XGIwa
          (g$local-macro-transformer$28768$1XGIwa g$p$30828$1XGIwa)
          g$e$30829$1XGIwa
          g$r$30830$1XGIwa))))
   (g$chi-global-macro$28772$1XGIwa
     g$chi-global-macro$32367$1XGIwa
     (case-lambda
       ((g$p$30831$1XGIwa g$e$30832$1XGIwa g$r$30833$1XGIwa)
        ((case-lambda
           ((g$lib$30834$1XGIwa g$loc$30835$1XGIwa)
            (begin
              (g$visit-library$27966$1XGIwa g$lib$30834$1XGIwa)
              ((case-lambda
                 ((g$x$30836$1XGIwa)
                  ((case-lambda
                     ((g$transformer$30837$1XGIwa)
                      (g$do-macro-call$28769$1XGIwa
                        g$transformer$30837$1XGIwa
                        g$e$30832$1XGIwa
                        g$r$30833$1XGIwa)))
                   (if (g$procedure?$20575$1XGIwa g$x$30836$1XGIwa)
                     g$x$30836$1XGIwa
                     (begin
                       '#f
                       (assertion-violation
                         'chi-global-macro
                         '"BUG: not a procedure"
                         g$x$30836$1XGIwa))))))
               (symbol-value g$loc$30835$1XGIwa)))))
         (car g$p$30831$1XGIwa)
         (cdr g$p$30831$1XGIwa)))))
   (g$chi-expr*$28773$1XGIwa
     g$chi-expr*$32368$1XGIwa
     (case-lambda
       ((g$e*$30838$1XGIwa g$r$30839$1XGIwa g$mr$30840$1XGIwa)
        (if (null? g$e*$30838$1XGIwa)
          '()
          (begin
            '#f
            ((case-lambda
               ((g$e$30841$1XGIwa)
                (cons
                  g$e$30841$1XGIwa
                  (g$chi-expr*$28773$1XGIwa
                    (cdr g$e*$30838$1XGIwa)
                    g$r$30839$1XGIwa
                    g$mr$30840$1XGIwa))))
             (g$chi-expr$28775$1XGIwa
               (car g$e*$30838$1XGIwa)
               g$r$30839$1XGIwa
               g$mr$30840$1XGIwa)))))))
   (g$chi-application$28774$1XGIwa
     g$chi-application$32369$1XGIwa
     (case-lambda
       ((g$e$30842$1XGIwa g$r$30843$1XGIwa g$mr$30844$1XGIwa)
        ((case-lambda
           ((g$t$30845$1XGIwa)
            ((case-lambda
               ((g$ls/false$30846$1XGIwa)
                (if g$ls/false$30846$1XGIwa
                  (apply
                    (case-lambda
                      ((g$rator$30847$1XGIwa g$rands$30848$1XGIwa)
                       ((case-lambda
                          ((g$rator$30849$1XGIwa)
                           (cons
                             g$rator$30849$1XGIwa
                             (g$chi-expr*$28773$1XGIwa
                               g$rands$30848$1XGIwa
                               g$r$30843$1XGIwa
                               g$mr$30844$1XGIwa))))
                        (g$chi-expr$28775$1XGIwa
                          g$rator$30847$1XGIwa
                          g$r$30843$1XGIwa
                          g$mr$30844$1XGIwa))))
                    g$ls/false$30846$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$30845$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$30845$1XGIwa
               '(any . each-any)))))
         g$e$30842$1XGIwa))))
   (g$chi-expr$28775$1XGIwa
     g$chi-expr$32370$1XGIwa
     (case-lambda
       ((g$e$30850$1XGIwa g$r$30851$1XGIwa g$mr$30852$1XGIwa)
        (call-with-values
          (case-lambda
            (()
             (g$syntax-type$28279$1XGIwa
               g$e$30850$1XGIwa
               g$r$30851$1XGIwa)))
          (case-lambda
            ((g$type$30856$1XGIwa
               g$value$30857$1XGIwa
               g$kwd$30858$1XGIwa)
             ((case-lambda
                ((g$kwd$30859$1XGIwa
                   g$value$30860$1XGIwa
                   g$type$30861$1XGIwa)
                 ((case-lambda
                    ((g$t$30862$1XGIwa)
                     (if (eqv? g$t$30862$1XGIwa 'core-macro)
                       ((case-lambda
                          ((g$transformer$30863$1XGIwa)
                           (g$transformer$30863$1XGIwa
                             g$e$30850$1XGIwa
                             g$r$30851$1XGIwa
                             g$mr$30852$1XGIwa)))
                        (g$core-macro-transformer$28764$1XGIwa
                          g$value$30860$1XGIwa))
                       (if (eqv? g$t$30862$1XGIwa 'global)
                         ((case-lambda
                            ((g$lib$30864$1XGIwa)
                             ((case-lambda
                                ((g$loc$30865$1XGIwa)
                                 (begin
                                   ((g$inv-collector$28812$1XGIwa)
                                    g$lib$30864$1XGIwa)
                                   g$loc$30865$1XGIwa)))
                              (cdr g$value$30860$1XGIwa))))
                          (car g$value$30860$1XGIwa))
                         (if (eqv? g$t$30862$1XGIwa 'core-prim)
                           ((case-lambda
                              ((g$name$30866$1XGIwa)
                               (list 'primitive g$name$30866$1XGIwa)))
                            g$value$30860$1XGIwa)
                           (if (eqv? g$t$30862$1XGIwa 'call)
                             (g$chi-application$28774$1XGIwa
                               g$e$30850$1XGIwa
                               g$r$30851$1XGIwa
                               g$mr$30852$1XGIwa)
                             (if (eqv? g$t$30862$1XGIwa 'lexical)
                               ((case-lambda
                                  ((g$lex$30867$1XGIwa)
                                   g$lex$30867$1XGIwa))
                                (g$lexical-var$28701$1XGIwa
                                  g$value$30860$1XGIwa))
                               (if (g$memv$19654$1XGIwa
                                     g$t$30862$1XGIwa
                                     '(global-macro global-macro!))
                                 (g$chi-expr$28775$1XGIwa
                                   (g$chi-global-macro$28772$1XGIwa
                                     g$value$30860$1XGIwa
                                     g$e$30850$1XGIwa
                                     g$r$30851$1XGIwa)
                                   g$r$30851$1XGIwa
                                   g$mr$30852$1XGIwa)
                                 (if (g$memv$19654$1XGIwa
                                       g$t$30862$1XGIwa
                                       '(local-macro local-macro!))
                                   (g$chi-expr$28775$1XGIwa
                                     (g$chi-local-macro$28771$1XGIwa
                                       g$value$30860$1XGIwa
                                       g$e$30850$1XGIwa
                                       g$r$30851$1XGIwa)
                                     g$r$30851$1XGIwa
                                     g$mr$30852$1XGIwa)
                                   (if (g$memv$19654$1XGIwa
                                         g$t$30862$1XGIwa
                                         '(macro macro!))
                                     (g$chi-expr$28775$1XGIwa
                                       (g$chi-macro$28770$1XGIwa
                                         g$value$30860$1XGIwa
                                         g$e$30850$1XGIwa
                                         g$r$30851$1XGIwa)
                                       g$r$30851$1XGIwa
                                       g$mr$30852$1XGIwa)
                                     (if (eqv?
                                           g$t$30862$1XGIwa
                                           'constant)
                                       ((case-lambda
                                          ((g$datum$30868$1XGIwa)
                                           (list
                                             'quote
                                             g$datum$30868$1XGIwa)))
                                        g$value$30860$1XGIwa)
                                       (if (eqv? g$t$30862$1XGIwa 'set!)
                                         (g$chi-set!$28776$1XGIwa
                                           g$e$30850$1XGIwa
                                           g$r$30851$1XGIwa
                                           g$mr$30852$1XGIwa)
                                         (if (eqv?
                                               g$t$30862$1XGIwa
                                               'begin)
                                           ((case-lambda
                                              ((g$t$30869$1XGIwa)
                                               ((case-lambda
                                                  ((g$ls/false$30870$1XGIwa)
                                                   (if g$ls/false$30870$1XGIwa
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$30871$1XGIwa
                                                            g$x*$30872$1XGIwa)
                                                          (g$build-sequence$28184$1XGIwa
                                                            '#f
                                                            (g$chi-expr*$28773$1XGIwa
                                                              (cons
                                                                g$x$30871$1XGIwa
                                                                g$x*$30872$1XGIwa)
                                                              g$r$30851$1XGIwa
                                                              g$mr$30852$1XGIwa))))
                                                       g$ls/false$30870$1XGIwa)
                                                     (g$syntax-violation$28876$1XGIwa
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$30869$1XGIwa))))
                                                (g$syntax-dispatch$28757$1XGIwa
                                                  g$t$30869$1XGIwa
                                                  '(_ any
                                                      .
                                                      each-any)))))
                                            g$e$30850$1XGIwa)
                                           (if (g$memv$19654$1XGIwa
                                                 g$t$30862$1XGIwa
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$30873$1XGIwa)
                                                 ((case-lambda
                                                    ((g$ls/false$30874$1XGIwa)
                                                     (if (if g$ls/false$30874$1XGIwa
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$30875$1XGIwa
                                                                    g$xrhs*$30876$1XGIwa
                                                                    g$xbody$30877$1XGIwa
                                                                    g$xbody*$30878$1XGIwa)
                                                                  (if (not (g$valid-bound-ids?$28264$1XGIwa
                                                                             g$xlhs*$30875$1XGIwa))
                                                                    (g$syntax-violation$28876$1XGIwa
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$30850$1XGIwa)
                                                                    (void))))
                                                               g$ls/false$30874$1XGIwa))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$30879$1XGIwa
                                                              g$xrhs*$30880$1XGIwa
                                                              g$xbody$30881$1XGIwa
                                                              g$xbody*$30882$1XGIwa)
                                                            ((case-lambda
                                                               ((g$xlab*$30883$1XGIwa)
                                                                ((case-lambda
                                                                   ((g$xrib$30884$1XGIwa)
                                                                    ((case-lambda
                                                                       ((g$xb*$30885$1XGIwa)
                                                                        (g$build-sequence$28184$1XGIwa
                                                                          '#f
                                                                          (g$chi-expr*$28773$1XGIwa
                                                                            (g$map$19661$1XGIwa
                                                                              (case-lambda
                                                                                ((g$x$30886$1XGIwa)
                                                                                 (g$add-subst$28249$1XGIwa
                                                                                   g$xrib$30884$1XGIwa
                                                                                   g$x$30886$1XGIwa)))
                                                                              (cons
                                                                                g$xbody$30881$1XGIwa
                                                                                g$xbody*$30882$1XGIwa))
                                                                            (append
                                                                              (g$map$19661$1XGIwa
                                                                                cons
                                                                                g$xlab*$30883$1XGIwa
                                                                                g$xb*$30885$1XGIwa)
                                                                              g$r$30851$1XGIwa)
                                                                            (append
                                                                              (g$map$19661$1XGIwa
                                                                                cons
                                                                                g$xlab*$30883$1XGIwa
                                                                                g$xb*$30885$1XGIwa)
                                                                              g$mr$30852$1XGIwa)))))
                                                                     (g$map$19661$1XGIwa
                                                                       (case-lambda
                                                                         ((g$x$30887$1XGIwa)
                                                                          (g$make-eval-transformer$28307$1XGIwa
                                                                            (g$expand-transformer$28805$1XGIwa
                                                                              (if (eq? g$type$30861$1XGIwa
                                                                                       'let-syntax)
                                                                                g$x$30887$1XGIwa
                                                                                (g$add-subst$28249$1XGIwa
                                                                                  g$xrib$30884$1XGIwa
                                                                                  g$x$30887$1XGIwa))
                                                                              g$mr$30852$1XGIwa))))
                                                                       g$xrhs*$30880$1XGIwa))))
                                                                 (g$make-full-rib$28225$1XGIwa
                                                                   g$xlhs*$30879$1XGIwa
                                                                   g$xlab*$30883$1XGIwa))))
                                                             (g$map$19661$1XGIwa
                                                               g$gen-label$28196$1XGIwa
                                                               g$xlhs*$30879$1XGIwa))))
                                                         g$ls/false$30874$1XGIwa)
                                                       (g$syntax-violation$28876$1XGIwa
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$30873$1XGIwa))))
                                                  (g$syntax-dispatch$28757$1XGIwa
                                                    g$t$30873$1XGIwa
                                                    '(_ #(each
                                                          (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$30850$1XGIwa)
                                             (if (eqv?
                                                   g$t$30862$1XGIwa
                                                   'displaced-lexical)
                                               (g$syntax-violation$28876$1XGIwa
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$30850$1XGIwa)
                                               (if (eqv?
                                                     g$t$30862$1XGIwa
                                                     'syntax)
                                                 (g$syntax-violation$28876$1XGIwa
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$30850$1XGIwa)
                                                 (if (g$memv$19654$1XGIwa
                                                       g$t$30862$1XGIwa
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$28876$1XGIwa
                                                     '#f
                                                     (g$string-append$20591$1XGIwa
                                                       ((case-lambda
                                                          ((g$t$30888$1XGIwa)
                                                           (if (eqv?
                                                                 g$t$30888$1XGIwa
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$30888$1XGIwa
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$30888$1XGIwa
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$30888$1XGIwa
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$30888$1XGIwa
                                                                         'import)
                                                                     '"an import declaration"
                                                                     (if (eqv?
                                                                           g$t$30888$1XGIwa
                                                                           'export)
                                                                       '"an export declaration"
                                                                       (begin
                                                                         '#f
                                                                         '"a non-expression")))))))))
                                                        g$type$30861$1XGIwa)
                                                       '" was found where an expression was expected")
                                                     g$e$30850$1XGIwa)
                                                   (if (eqv?
                                                         g$t$30862$1XGIwa
                                                         'mutable)
                                                     (g$syntax-violation$28876$1XGIwa
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$30850$1XGIwa)
                                                     (begin
                                                       '#f
                                                       (g$syntax-violation$28876$1XGIwa
                                                         '#f
                                                         '"invalid expression"
                                                         g$e$30850$1XGIwa))))))))))))))))))))
                  g$type$30861$1XGIwa)))
              g$kwd$30858$1XGIwa
              g$value$30857$1XGIwa
              g$type$30856$1XGIwa)))))))
   (g$chi-set!$28776$1XGIwa
     g$chi-set!$32371$1XGIwa
     (case-lambda
       ((g$e$30889$1XGIwa g$r$30890$1XGIwa g$mr$30891$1XGIwa)
        ((case-lambda
           ((g$t$30892$1XGIwa)
            ((case-lambda
               ((g$ls/false$30893$1XGIwa)
                (if (if g$ls/false$30893$1XGIwa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$30894$1XGIwa g$v$30895$1XGIwa)
                             (g$id?$28259$1XGIwa g$x$30894$1XGIwa)))
                          g$ls/false$30893$1XGIwa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$30896$1XGIwa g$v$30897$1XGIwa)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$28279$1XGIwa
                              g$x$30896$1XGIwa
                              g$r$30890$1XGIwa)))
                         (case-lambda
                           ((g$type$30901$1XGIwa
                              g$value$30902$1XGIwa
                              g$kwd$30903$1XGIwa)
                            ((case-lambda
                               ((g$kwd$30904$1XGIwa
                                  g$value$30905$1XGIwa
                                  g$type$30906$1XGIwa)
                                ((case-lambda
                                   ((g$t$30907$1XGIwa)
                                    (if (eqv? g$t$30907$1XGIwa 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$28703$1XGIwa
                                          g$value$30905$1XGIwa
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$28701$1XGIwa
                                            g$value$30905$1XGIwa)
                                          (g$chi-expr$28775$1XGIwa
                                            g$v$30897$1XGIwa
                                            g$r$30890$1XGIwa
                                            g$mr$30891$1XGIwa)))
                                      (if (eqv?
                                            g$t$30907$1XGIwa
                                            'core-prim)
                                        (g$syntax-violation$28876$1XGIwa
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$30889$1XGIwa)
                                        (if (eqv?
                                              g$t$30907$1XGIwa
                                              'global)
                                          (g$syntax-violation$28876$1XGIwa
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$30889$1XGIwa)
                                          (if (eqv?
                                                g$t$30907$1XGIwa
                                                'global-macro!)
                                            (g$chi-expr$28775$1XGIwa
                                              (g$chi-global-macro$28772$1XGIwa
                                                g$value$30905$1XGIwa
                                                g$e$30889$1XGIwa
                                                g$r$30890$1XGIwa)
                                              g$r$30890$1XGIwa
                                              g$mr$30891$1XGIwa)
                                            (if (eqv?
                                                  g$t$30907$1XGIwa
                                                  'local-macro!)
                                              (g$chi-expr$28775$1XGIwa
                                                (g$chi-local-macro$28771$1XGIwa
                                                  g$value$30905$1XGIwa
                                                  g$e$30889$1XGIwa
                                                  g$r$30890$1XGIwa)
                                                g$r$30890$1XGIwa
                                                g$mr$30891$1XGIwa)
                                              (if (eqv?
                                                    g$t$30907$1XGIwa
                                                    'mutable)
                                                (g$syntax-violation$28876$1XGIwa
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$30889$1XGIwa)
                                                (begin
                                                  '#f
                                                  (g$syntax-violation$28876$1XGIwa
                                                    '#f
                                                    '"invalid syntax"
                                                    g$e$30889$1XGIwa))))))))))
                                 g$type$30906$1XGIwa)))
                             g$kwd$30903$1XGIwa
                             g$value$30902$1XGIwa
                             g$type$30901$1XGIwa))))))
                    g$ls/false$30893$1XGIwa)
                  (g$syntax-violation$28876$1XGIwa
                    '#f
                    '"invalid syntax"
                    g$t$30892$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$30892$1XGIwa
               '(_ any any)))))
         g$e$30889$1XGIwa))))
   (g$verify-formals$28777$1XGIwa
     g$verify-formals$32372$1XGIwa
     (case-lambda
       ((g$fmls$30908$1XGIwa g$stx$30909$1XGIwa)
        ((case-lambda
           ((g$t$30910$1XGIwa)
            ((case-lambda
               ((g$ls/false$30911$1XGIwa)
                (if g$ls/false$30911$1XGIwa
                  (apply
                    (case-lambda
                      ((g$x*$30912$1XGIwa)
                       (if (not (g$valid-bound-ids?$28264$1XGIwa
                                  g$x*$30912$1XGIwa))
                         (g$invalid-fmls-error$28722$1XGIwa
                           g$stx$30909$1XGIwa
                           g$fmls$30908$1XGIwa)
                         (void))))
                    g$ls/false$30911$1XGIwa)
                  ((case-lambda
                     ((g$t$30913$1XGIwa)
                      ((case-lambda
                         ((g$ls/false$30914$1XGIwa)
                          (if g$ls/false$30914$1XGIwa
                            (apply
                              (case-lambda
                                ((g$x*$30915$1XGIwa g$x$30916$1XGIwa)
                                 (if (not (g$valid-bound-ids?$28264$1XGIwa
                                            (cons
                                              g$x$30916$1XGIwa
                                              g$x*$30915$1XGIwa)))
                                   (g$invalid-fmls-error$28722$1XGIwa
                                     g$stx$30909$1XGIwa
                                     g$fmls$30908$1XGIwa)
                                   (void))))
                              g$ls/false$30914$1XGIwa)
                            ((case-lambda
                               ((g$t$30917$1XGIwa)
                                ((case-lambda
                                   ((g$ls/false$30918$1XGIwa)
                                    (if g$ls/false$30918$1XGIwa
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$28876$1XGIwa
                                             '#f
                                             '"invalid syntax"
                                             g$stx$30909$1XGIwa)))
                                        g$ls/false$30918$1XGIwa)
                                      (g$syntax-violation$28876$1XGIwa
                                        '#f
                                        '"invalid syntax"
                                        g$t$30917$1XGIwa))))
                                 (g$syntax-dispatch$28757$1XGIwa
                                   g$t$30917$1XGIwa
                                   '_))))
                             g$t$30913$1XGIwa))))
                       (g$syntax-dispatch$28757$1XGIwa
                         g$t$30913$1XGIwa
                         '#(each+ any () any)))))
                   g$t$30910$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$30910$1XGIwa
               'each-any))))
         g$fmls$30908$1XGIwa))))
   (g$chi-lambda-clause$28778$1XGIwa
     g$chi-lambda-clause$32373$1XGIwa
     (case-lambda
       ((g$stx$30919$1XGIwa
          g$fmls$30920$1XGIwa
          g$body*$30921$1XGIwa
          g$r$30922$1XGIwa
          g$mr$30923$1XGIwa)
        ((case-lambda
           ((g$t$30924$1XGIwa)
            ((case-lambda
               ((g$ls/false$30925$1XGIwa)
                (if g$ls/false$30925$1XGIwa
                  (apply
                    (case-lambda
                      ((g$x*$30926$1XGIwa)
                       (begin
                         (g$verify-formals$28777$1XGIwa
                           g$fmls$30920$1XGIwa
                           g$stx$30919$1XGIwa)
                         ((case-lambda
                            ((g$lex*$30927$1XGIwa g$lab*$30928$1XGIwa)
                             (values
                               g$lex*$30927$1XGIwa
                               (g$chi-internal$28786$1XGIwa
                                 (g$add-subst$28249$1XGIwa
                                   (g$make-full-rib$28225$1XGIwa
                                     g$x*$30926$1XGIwa
                                     g$lab*$30928$1XGIwa)
                                   g$body*$30921$1XGIwa)
                                 (g$add-lexicals$28705$1XGIwa
                                   g$lab*$30928$1XGIwa
                                   g$lex*$30927$1XGIwa
                                   g$r$30922$1XGIwa)
                                 g$mr$30923$1XGIwa))))
                          (g$map$19661$1XGIwa
                            g$gen-lexical$28194$1XGIwa
                            g$x*$30926$1XGIwa)
                          (g$map$19661$1XGIwa
                            g$gen-label$28196$1XGIwa
                            g$x*$30926$1XGIwa)))))
                    g$ls/false$30925$1XGIwa)
                  ((case-lambda
                     ((g$t$30929$1XGIwa)
                      ((case-lambda
                         ((g$ls/false$30930$1XGIwa)
                          (if g$ls/false$30930$1XGIwa
                            (apply
                              (case-lambda
                                ((g$x*$30931$1XGIwa g$x$30932$1XGIwa)
                                 (begin
                                   (g$verify-formals$28777$1XGIwa
                                     g$fmls$30920$1XGIwa
                                     g$stx$30919$1XGIwa)
                                   ((case-lambda
                                      ((g$lex*$30933$1XGIwa
                                         g$lab*$30934$1XGIwa
                                         g$lex$30935$1XGIwa
                                         g$lab$30936$1XGIwa)
                                       (values
                                         (append
                                           g$lex*$30933$1XGIwa
                                           g$lex$30935$1XGIwa)
                                         (g$chi-internal$28786$1XGIwa
                                           (g$add-subst$28249$1XGIwa
                                             (g$make-full-rib$28225$1XGIwa
                                               (cons
                                                 g$x$30932$1XGIwa
                                                 g$x*$30931$1XGIwa)
                                               (cons
                                                 g$lab$30936$1XGIwa
                                                 g$lab*$30934$1XGIwa))
                                             g$body*$30921$1XGIwa)
                                           (g$add-lexicals$28705$1XGIwa
                                             (cons
                                               g$lab$30936$1XGIwa
                                               g$lab*$30934$1XGIwa)
                                             (cons
                                               g$lex$30935$1XGIwa
                                               g$lex*$30933$1XGIwa)
                                             g$r$30922$1XGIwa)
                                           g$mr$30923$1XGIwa))))
                                    (g$map$19661$1XGIwa
                                      g$gen-lexical$28194$1XGIwa
                                      g$x*$30931$1XGIwa)
                                    (g$map$19661$1XGIwa
                                      g$gen-label$28196$1XGIwa
                                      g$x*$30931$1XGIwa)
                                    (g$gen-lexical$28194$1XGIwa
                                      g$x$30932$1XGIwa)
                                    (g$gen-label$28196$1XGIwa
                                      g$x$30932$1XGIwa)))))
                              g$ls/false$30930$1XGIwa)
                            ((case-lambda
                               ((g$t$30937$1XGIwa)
                                ((case-lambda
                                   ((g$ls/false$30938$1XGIwa)
                                    (if g$ls/false$30938$1XGIwa
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$28876$1XGIwa
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$30920$1XGIwa)))
                                        g$ls/false$30938$1XGIwa)
                                      (g$syntax-violation$28876$1XGIwa
                                        '#f
                                        '"invalid syntax"
                                        g$t$30937$1XGIwa))))
                                 (g$syntax-dispatch$28757$1XGIwa
                                   g$t$30937$1XGIwa
                                   '_))))
                             g$t$30929$1XGIwa))))
                       (g$syntax-dispatch$28757$1XGIwa
                         g$t$30929$1XGIwa
                         '#(each+ any () any)))))
                   g$t$30924$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$30924$1XGIwa
               'each-any))))
         g$fmls$30920$1XGIwa))))
   (g$chi-lambda-clause*$28779$1XGIwa
     g$chi-lambda-clause*$32374$1XGIwa
     (case-lambda
       ((g$stx$30939$1XGIwa
          g$fmls*$30940$1XGIwa
          g$body**$30941$1XGIwa
          g$r$30942$1XGIwa
          g$mr$30943$1XGIwa)
        (if (null? g$fmls*$30940$1XGIwa)
          (values '() '())
          (begin
            '#f
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$28778$1XGIwa
                   g$stx$30939$1XGIwa
                   (car g$fmls*$30940$1XGIwa)
                   (car g$body**$30941$1XGIwa)
                   g$r$30942$1XGIwa
                   g$mr$30943$1XGIwa)))
              (case-lambda
                ((g$a$30946$1XGIwa g$b$30947$1XGIwa)
                 ((case-lambda
                    ((g$b$30948$1XGIwa g$a$30949$1XGIwa)
                     (call-with-values
                       (case-lambda
                         (()
                          (g$chi-lambda-clause*$28779$1XGIwa
                            g$stx$30939$1XGIwa
                            (cdr g$fmls*$30940$1XGIwa)
                            (cdr g$body**$30941$1XGIwa)
                            g$r$30942$1XGIwa
                            g$mr$30943$1XGIwa)))
                       (case-lambda
                         ((g$a*$30952$1XGIwa g$b*$30953$1XGIwa)
                          ((case-lambda
                             ((g$b*$30954$1XGIwa g$a*$30955$1XGIwa)
                              (values
                                (cons
                                  g$a$30949$1XGIwa
                                  g$a*$30955$1XGIwa)
                                (cons
                                  g$b$30948$1XGIwa
                                  g$b*$30954$1XGIwa))))
                           g$b*$30953$1XGIwa
                           g$a*$30952$1XGIwa))))))
                  g$b$30947$1XGIwa
                  g$a$30946$1XGIwa)))))))))
   (g$chi-defun$28780$1XGIwa
     g$chi-defun$32375$1XGIwa
     (case-lambda
       ((g$x$30956$1XGIwa g$r$30957$1XGIwa g$mr$30958$1XGIwa)
        ((case-lambda
           ((g$fmls$30959$1XGIwa g$body*$30960$1XGIwa)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$28778$1XGIwa
                   g$fmls$30959$1XGIwa
                   g$fmls$30959$1XGIwa
                   g$body*$30960$1XGIwa
                   g$r$30957$1XGIwa
                   g$mr$30958$1XGIwa)))
              (case-lambda
                ((g$fmls$30963$1XGIwa g$body$30964$1XGIwa)
                 ((case-lambda
                    ((g$body$30965$1XGIwa g$fmls$30966$1XGIwa)
                     (g$build-lambda$28181$1XGIwa
                       '#f
                       g$fmls$30966$1XGIwa
                       g$body$30965$1XGIwa)))
                  g$body$30964$1XGIwa
                  g$fmls$30963$1XGIwa))))))
         (car g$x$30956$1XGIwa)
         (cdr g$x$30956$1XGIwa)))))
   (g$chi-rhs$28781$1XGIwa
     g$chi-rhs$32376$1XGIwa
     (case-lambda
       ((g$rhs$30967$1XGIwa g$r$30968$1XGIwa g$mr$30969$1XGIwa)
        ((case-lambda
           ((g$t$30970$1XGIwa)
            (if (eqv? g$t$30970$1XGIwa 'defun)
              (g$chi-defun$28780$1XGIwa
                (cdr g$rhs$30967$1XGIwa)
                g$r$30968$1XGIwa
                g$mr$30969$1XGIwa)
              (if (eqv? g$t$30970$1XGIwa 'expr)
                ((case-lambda
                   ((g$expr$30971$1XGIwa)
                    (g$chi-expr$28775$1XGIwa
                      g$expr$30971$1XGIwa
                      g$r$30968$1XGIwa
                      g$mr$30969$1XGIwa)))
                 (cdr g$rhs$30967$1XGIwa))
                (if (eqv? g$t$30970$1XGIwa 'top-expr)
                  ((case-lambda
                     ((g$expr$30972$1XGIwa)
                      (g$build-sequence$28184$1XGIwa
                        '#f
                        (list
                          (g$chi-expr$28775$1XGIwa
                            g$expr$30972$1XGIwa
                            g$r$30968$1XGIwa
                            g$mr$30969$1XGIwa)
                          (g$build-void$28185$1XGIwa)))))
                   (cdr g$rhs$30967$1XGIwa))
                  (begin
                    '#f
                    (assertion-violation
                      'chi-rhs
                      '"BUG: invalid rhs"
                      g$rhs$30967$1XGIwa)))))))
         (car g$rhs$30967$1XGIwa)))))
   (g$expand-interaction-rhs*/init*$28782$1XGIwa
     g$expand-interaction-rhs*/init*$32377$1XGIwa
     (case-lambda
       ((g$lhs*$30973$1XGIwa
          g$rhs*$30974$1XGIwa
          g$init*$30975$1XGIwa
          g$r$30976$1XGIwa
          g$mr$30977$1XGIwa)
        ((letrec ((g$f$30978$1XGIwa
                    (case-lambda
                      ((g$lhs*$30979$1XGIwa g$rhs*$30980$1XGIwa)
                       (if (null? g$lhs*$30979$1XGIwa)
                         (g$map$19661$1XGIwa
                           (case-lambda
                             ((g$x$30981$1XGIwa)
                              (g$chi-expr$28775$1XGIwa
                                g$x$30981$1XGIwa
                                g$r$30976$1XGIwa
                                g$mr$30977$1XGIwa)))
                           g$init*$30975$1XGIwa)
                         (begin
                           '#f
                           ((case-lambda
                              ((g$lhs$30982$1XGIwa g$rhs$30983$1XGIwa)
                               ((case-lambda
                                  ((g$t$30984$1XGIwa)
                                   (if (eqv? g$t$30984$1XGIwa 'defun)
                                     ((case-lambda
                                        ((g$rhs$30985$1XGIwa)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$30982$1XGIwa
                                             g$rhs$30985$1XGIwa)
                                           (g$f$30978$1XGIwa
                                             (cdr g$lhs*$30979$1XGIwa)
                                             (cdr g$rhs*$30980$1XGIwa)))))
                                      (g$chi-defun$28780$1XGIwa
                                        (cdr g$rhs$30983$1XGIwa)
                                        g$r$30976$1XGIwa
                                        g$mr$30977$1XGIwa))
                                     (if (eqv? g$t$30984$1XGIwa 'expr)
                                       ((case-lambda
                                          ((g$rhs$30986$1XGIwa)
                                           (cons
                                             (list
                                               'set!
                                               g$lhs$30982$1XGIwa
                                               g$rhs$30986$1XGIwa)
                                             (g$f$30978$1XGIwa
                                               (cdr g$lhs*$30979$1XGIwa)
                                               (cdr g$rhs*$30980$1XGIwa)))))
                                        (g$chi-expr$28775$1XGIwa
                                          (cdr g$rhs$30983$1XGIwa)
                                          g$r$30976$1XGIwa
                                          g$mr$30977$1XGIwa))
                                       (if (eqv?
                                             g$t$30984$1XGIwa
                                             'top-expr)
                                         ((case-lambda
                                            ((g$e$30987$1XGIwa)
                                             (cons
                                               g$e$30987$1XGIwa
                                               (g$f$30978$1XGIwa
                                                 (cdr g$lhs*$30979$1XGIwa)
                                                 (cdr g$rhs*$30980$1XGIwa)))))
                                          (g$chi-expr$28775$1XGIwa
                                            (cdr g$rhs$30983$1XGIwa)
                                            g$r$30976$1XGIwa
                                            g$mr$30977$1XGIwa))
                                         (begin
                                           '#f
                                           (error
                                             'expand-interaction
                                             '"invallid"
                                             g$rhs$30983$1XGIwa)))))))
                                (car g$rhs$30983$1XGIwa))))
                            (car g$lhs*$30979$1XGIwa)
                            (car g$rhs*$30980$1XGIwa))))))))
           g$f$30978$1XGIwa)
         g$lhs*$30973$1XGIwa
         g$rhs*$30974$1XGIwa))))
   (g$chi-rhs*$28783$1XGIwa
     g$chi-rhs*$32378$1XGIwa
     (case-lambda
       ((g$rhs*$30988$1XGIwa g$r$30989$1XGIwa g$mr$30990$1XGIwa)
        ((letrec ((g$f$30991$1XGIwa
                    (case-lambda
                      ((g$ls$30992$1XGIwa)
                       (if (null? g$ls$30992$1XGIwa)
                         '()
                         (begin
                           '#f
                           ((case-lambda
                              ((g$a$30993$1XGIwa)
                               (cons
                                 g$a$30993$1XGIwa
                                 (g$f$30991$1XGIwa
                                   (cdr g$ls$30992$1XGIwa)))))
                            (g$chi-rhs$28781$1XGIwa
                              (car g$ls$30992$1XGIwa)
                              g$r$30989$1XGIwa
                              g$mr$30990$1XGIwa))))))))
           g$f$30991$1XGIwa)
         g$rhs*$30988$1XGIwa))))
   (g$find-bound=?$28784$1XGIwa
     g$find-bound=?$32379$1XGIwa
     (case-lambda
       ((g$x$30994$1XGIwa g$lhs*$30995$1XGIwa g$rhs*$30996$1XGIwa)
        (if (null? g$lhs*$30995$1XGIwa)
          '#f
          (if (g$bound-id=?$28262$1XGIwa
                g$x$30994$1XGIwa
                (car g$lhs*$30995$1XGIwa))
            (car g$rhs*$30996$1XGIwa)
            (begin
              '#f
              (g$find-bound=?$28784$1XGIwa
                g$x$30994$1XGIwa
                (cdr g$lhs*$30995$1XGIwa)
                (cdr g$rhs*$30996$1XGIwa))))))))
   (g$find-dups$28785$1XGIwa
     g$find-dups$32380$1XGIwa
     (case-lambda
       ((g$ls$30997$1XGIwa)
        ((letrec ((g$f$30998$1XGIwa
                    (case-lambda
                      ((g$ls$30999$1XGIwa g$dups$31000$1XGIwa)
                       (if (null? g$ls$30999$1XGIwa)
                         g$dups$31000$1XGIwa
                         ((case-lambda
                            ((g$t$31001$1XGIwa)
                             (if g$t$31001$1XGIwa
                               ((case-lambda
                                  ((g$x$31002$1XGIwa)
                                   (g$f$30998$1XGIwa
                                     (cdr g$ls$30999$1XGIwa)
                                     (cons
                                       (list
                                         (car g$ls$30999$1XGIwa)
                                         g$x$31002$1XGIwa)
                                       g$dups$31000$1XGIwa))))
                                g$t$31001$1XGIwa)
                               (begin
                                 '#f
                                 (g$f$30998$1XGIwa
                                   (cdr g$ls$30999$1XGIwa)
                                   g$dups$31000$1XGIwa)))))
                          (g$find-bound=?$28784$1XGIwa
                            (car g$ls$30999$1XGIwa)
                            (cdr g$ls$30999$1XGIwa)
                            (cdr g$ls$30999$1XGIwa))))))))
           g$f$30998$1XGIwa)
         g$ls$30997$1XGIwa
         '()))))
   (g$chi-internal$28786$1XGIwa
     g$chi-internal$32381$1XGIwa
     (case-lambda
       ((g$e*$31003$1XGIwa g$r$31004$1XGIwa g$mr$31005$1XGIwa)
        ((case-lambda
           ((g$rib$31006$1XGIwa)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$28804$1XGIwa
                   (g$map$19661$1XGIwa
                     (case-lambda
                       ((g$x$31015$1XGIwa)
                        (g$add-subst$28249$1XGIwa
                          g$rib$31006$1XGIwa
                          g$x$31015$1XGIwa)))
                     (g$syntax->list$28258$1XGIwa g$e*$31003$1XGIwa))
                   g$r$31004$1XGIwa
                   g$mr$31005$1XGIwa
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$31006$1XGIwa
                   '#f
                   '#t)))
              (case-lambda
                ((g$e*$31016$1XGIwa
                   g$r$31017$1XGIwa
                   g$mr$31018$1XGIwa
                   g$lex*$31019$1XGIwa
                   g$rhs*$31020$1XGIwa
                   g$mod**$31021$1XGIwa
                   g$kwd*$31022$1XGIwa
                   g$_exp*$31023$1XGIwa)
                 ((case-lambda
                    ((g$_exp*$31024$1XGIwa
                       g$kwd*$31025$1XGIwa
                       g$mod**$31026$1XGIwa
                       g$rhs*$31027$1XGIwa
                       g$lex*$31028$1XGIwa
                       g$mr$31029$1XGIwa
                       g$r$31030$1XGIwa
                       g$e*$31031$1XGIwa)
                     (begin
                       (if (null? g$e*$31031$1XGIwa)
                         (g$syntax-violation$28876$1XGIwa
                           '#f
                           '"no expression in body"
                           g$e*$31031$1XGIwa)
                         (void))
                       ((case-lambda
                          ((g$init*$31032$1XGIwa)
                           ((case-lambda
                              ((g$rhs*$31033$1XGIwa)
                               (g$build-letrec*$28187$1XGIwa
                                 '#f
                                 (g$reverse$20609$1XGIwa
                                   g$lex*$31028$1XGIwa)
                                 (g$reverse$20609$1XGIwa
                                   g$rhs*$31033$1XGIwa)
                                 (g$build-sequence$28184$1XGIwa
                                   '#f
                                   g$init*$31032$1XGIwa))))
                            (g$chi-rhs*$28783$1XGIwa
                              g$rhs*$31027$1XGIwa
                              g$r$31030$1XGIwa
                              g$mr$31029$1XGIwa))))
                        (g$chi-expr*$28773$1XGIwa
                          (append
                            (apply
                              append
                              (g$reverse$20609$1XGIwa
                                g$mod**$31026$1XGIwa))
                            g$e*$31031$1XGIwa)
                          g$r$31030$1XGIwa
                          g$mr$31029$1XGIwa)))))
                  g$_exp*$31023$1XGIwa
                  g$kwd*$31022$1XGIwa
                  g$mod**$31021$1XGIwa
                  g$rhs*$31020$1XGIwa
                  g$lex*$31019$1XGIwa
                  g$mr$31018$1XGIwa
                  g$r$31017$1XGIwa
                  g$e*$31016$1XGIwa))))))
         (g$make-empty-rib$28217$1XGIwa)))))
   (g$parse-module$28787$1XGIwa
     g$parse-module$32382$1XGIwa
     (case-lambda
       ((g$e$31034$1XGIwa)
        ((case-lambda
           ((g$t$31035$1XGIwa)
            ((case-lambda
               ((g$ls/false$31036$1XGIwa)
                (if g$ls/false$31036$1XGIwa
                  (apply
                    (case-lambda
                      ((g$export*$31037$1XGIwa g$b*$31038$1XGIwa)
                       (begin
                         (if (not (g$for-all$19659$1XGIwa
                                    g$id?$28259$1XGIwa
                                    g$export*$31037$1XGIwa))
                           (g$syntax-violation$28876$1XGIwa
                             '#f
                             '"module exports must be identifiers"
                             g$e$31034$1XGIwa)
                           (void))
                         (values
                           '#f
                           (g$list->vector$20600$1XGIwa
                             g$export*$31037$1XGIwa)
                           g$b*$31038$1XGIwa))))
                    g$ls/false$31036$1XGIwa)
                  ((case-lambda
                     ((g$t$31039$1XGIwa)
                      ((case-lambda
                         ((g$ls/false$31040$1XGIwa)
                          (if g$ls/false$31040$1XGIwa
                            (apply
                              (case-lambda
                                ((g$name$31041$1XGIwa
                                   g$export*$31042$1XGIwa
                                   g$b*$31043$1XGIwa)
                                 (begin
                                   (if (not (g$id?$28259$1XGIwa
                                              g$name$31041$1XGIwa))
                                     (g$syntax-violation$28876$1XGIwa
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$31034$1XGIwa)
                                     (void))
                                   (if (not (g$for-all$19659$1XGIwa
                                              g$id?$28259$1XGIwa
                                              g$export*$31042$1XGIwa))
                                     (g$syntax-violation$28876$1XGIwa
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$31034$1XGIwa)
                                     (void))
                                   (values
                                     g$name$31041$1XGIwa
                                     (g$list->vector$20600$1XGIwa
                                       g$export*$31042$1XGIwa)
                                     g$b*$31043$1XGIwa))))
                              g$ls/false$31040$1XGIwa)
                            (g$syntax-violation$28876$1XGIwa
                              '#f
                              '"invalid syntax"
                              g$t$31039$1XGIwa))))
                       (g$syntax-dispatch$28757$1XGIwa
                         g$t$31039$1XGIwa
                         '(_ any each-any . each-any)))))
                   g$t$31035$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$31035$1XGIwa
               '(_ each-any . each-any)))))
         g$e$31034$1XGIwa))))
   (g$10347$28788$1XGIwa
     g$10347$32383$1XGIwa
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$10350$1XGIwa
       '#t
       '#t
       '#((mutable first-mark)
          (mutable exp-id-vec)
          (mutable exp-lab-vec))))
   (g$10349$28789$1XGIwa g$10349$32384$1XGIwa '#f)
   (g$10348$28790$1XGIwa
     g$10348$32385$1XGIwa
     (make-record-constructor-descriptor
       g$10347$28788$1XGIwa
       '#f
       g$10349$28789$1XGIwa))
   (g$module-interface?$28793$1XGIwa
     g$module-interface?$32386$1XGIwa
     (record-predicate g$10347$28788$1XGIwa))
   (g$make-module-interface$28794$1XGIwa
     g$make-module-interface$32387$1XGIwa
     (record-constructor g$10348$28790$1XGIwa))
   (g$module-interface-first-mark$28795$1XGIwa
     g$module-interface-first-mark$32388$1XGIwa
     (record-accessor g$10347$28788$1XGIwa '0))
   (g$module-interface-exp-id-vec$28796$1XGIwa
     g$module-interface-exp-id-vec$32389$1XGIwa
     (record-accessor g$10347$28788$1XGIwa '1))
   (g$module-interface-exp-lab-vec$28797$1XGIwa
     g$module-interface-exp-lab-vec$32390$1XGIwa
     (record-accessor g$10347$28788$1XGIwa '2))
   (g$set-module-interface-first-mark!$28798$1XGIwa
     g$set-module-interface-first-mark!$32391$1XGIwa
     (record-mutator g$10347$28788$1XGIwa '0))
   (g$set-module-interface-exp-id-vec!$28799$1XGIwa
     g$set-module-interface-exp-id-vec!$32392$1XGIwa
     (record-mutator g$10347$28788$1XGIwa '1))
   (g$set-module-interface-exp-lab-vec!$28800$1XGIwa
     g$set-module-interface-exp-lab-vec!$32393$1XGIwa
     (record-mutator g$10347$28788$1XGIwa '2))
   (g$module-interface-exp-id*$28801$1XGIwa
     g$module-interface-exp-id*$32394$1XGIwa
     (case-lambda
       ((g$iface$31044$1XGIwa g$id$31045$1XGIwa)
        (letrec* ((g$diff-marks$31046$1XGIwa
                    (case-lambda
                      ((g$ls$31050$1XGIwa g$x$31051$1XGIwa)
                       (begin
                         (if (null? g$ls$31050$1XGIwa)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$31052$1XGIwa)
                             (if (eq? g$a$31052$1XGIwa g$x$31051$1XGIwa)
                               '()
                               (cons
                                 g$a$31052$1XGIwa
                                 (g$diff-marks$31046$1XGIwa
                                   (cdr g$ls$31050$1XGIwa)
                                   g$x$31051$1XGIwa)))))
                          (car g$ls$31050$1XGIwa)))))))
          ((case-lambda
             ((g$diff$31047$1XGIwa g$id-vec$31048$1XGIwa)
              (if (null? g$diff$31047$1XGIwa)
                g$id-vec$31048$1XGIwa
                (g$vector-map$20663$1XGIwa
                  (case-lambda
                    ((g$x$31049$1XGIwa)
                     (g$make-stx$28232$1XGIwa
                       (g$stx-expr$28233$1XGIwa g$x$31049$1XGIwa)
                       (append
                         g$diff$31047$1XGIwa
                         (g$stx-mark*$28234$1XGIwa g$x$31049$1XGIwa))
                       '()
                       '())))
                  g$id-vec$31048$1XGIwa))))
           (g$diff-marks$31046$1XGIwa
             (g$stx-mark*$28234$1XGIwa g$id$31045$1XGIwa)
             (g$module-interface-first-mark$28795$1XGIwa
               g$iface$31044$1XGIwa))
           (g$module-interface-exp-id-vec$28796$1XGIwa
             g$iface$31044$1XGIwa))))))
   (g$syntax-transpose$28802$1XGIwa
     g$syntax-transpose$32395$1XGIwa
     (case-lambda
       ((g$object$31053$1XGIwa
          g$base-id$31054$1XGIwa
          g$new-id$31055$1XGIwa)
        (letrec* ((g$who$31056$1XGIwa 'syntax-transpose)
                  (g$err$31057$1XGIwa
                    (case-lambda
                      ((g$msg$31099$1XGIwa . g$args$31100$1XGIwa)
                       (apply
                         assertion-violation
                         g$who$31056$1XGIwa
                         g$msg$31099$1XGIwa
                         g$args$31100$1XGIwa))))
                  (g$split$31058$1XGIwa
                    (case-lambda
                      ((g$s*$31092$1XGIwa)
                       (if (eq? (car g$s*$31092$1XGIwa) 'shift)
                         (values (list 'shift) (cdr g$s*$31092$1XGIwa))
                         (begin
                           '#f
                           (call-with-values
                             (case-lambda
                               (()
                                (g$split$31058$1XGIwa
                                  (cdr g$s*$31092$1XGIwa))))
                             (case-lambda
                               ((g$s1*$31095$1XGIwa g$s2*$31096$1XGIwa)
                                ((case-lambda
                                   ((g$s2*$31097$1XGIwa
                                      g$s1*$31098$1XGIwa)
                                    (values
                                      (cons
                                        (car g$s*$31092$1XGIwa)
                                        g$s1*$31098$1XGIwa)
                                      g$s2*$31097$1XGIwa)))
                                 g$s2*$31096$1XGIwa
                                 g$s1*$31095$1XGIwa)))))))))
                  (g$final$31059$1XGIwa
                    (case-lambda
                      ((g$s*$31090$1XGIwa)
                       (if ((case-lambda
                              ((g$t$31091$1XGIwa)
                               (if g$t$31091$1XGIwa
                                 g$t$31091$1XGIwa
                                 (begin
                                   '#f
                                   (eq? (car g$s*$31090$1XGIwa)
                                        'shift)))))
                            (null? g$s*$31090$1XGIwa))
                         '()
                         (begin
                           '#f
                           (cons
                             (car g$s*$31090$1XGIwa)
                             (g$final$31059$1XGIwa
                               (cdr g$s*$31090$1XGIwa))))))))
                  (g$diff$31060$1XGIwa
                    (case-lambda
                      ((g$m$31070$1XGIwa
                         g$m*$31071$1XGIwa
                         g$s*$31072$1XGIwa
                         g$ae*$31073$1XGIwa)
                       (if (null? g$m*$31071$1XGIwa)
                         (g$err$31057$1XGIwa
                           '"unmatched identifiers"
                           g$base-id$31054$1XGIwa
                           g$new-id$31055$1XGIwa)
                         ((case-lambda
                            ((g$m1$31074$1XGIwa)
                             (if (eq? g$m$31070$1XGIwa
                                      g$m1$31074$1XGIwa)
                               (values
                                 '()
                                 (g$final$31059$1XGIwa
                                   g$s*$31072$1XGIwa)
                                 '())
                               (call-with-values
                                 (case-lambda
                                   (()
                                    (g$split$31058$1XGIwa
                                      g$s*$31072$1XGIwa)))
                                 (case-lambda
                                   ((g$s1*$31077$1XGIwa
                                      g$s2*$31078$1XGIwa)
                                    ((case-lambda
                                       ((g$s2*$31079$1XGIwa
                                          g$s1*$31080$1XGIwa)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$diff$31060$1XGIwa
                                               g$m$31070$1XGIwa
                                               (cdr g$m*$31071$1XGIwa)
                                               g$s2*$31079$1XGIwa
                                               (cdr g$ae*$31073$1XGIwa))))
                                          (case-lambda
                                            ((g$nm*$31084$1XGIwa
                                               g$ns*$31085$1XGIwa
                                               g$nae*$31086$1XGIwa)
                                             ((case-lambda
                                                ((g$nae*$31087$1XGIwa
                                                   g$ns*$31088$1XGIwa
                                                   g$nm*$31089$1XGIwa)
                                                 (values
                                                   (cons
                                                     g$m1$31074$1XGIwa
                                                     g$nm*$31089$1XGIwa)
                                                   (append
                                                     g$s1*$31080$1XGIwa
                                                     g$ns*$31088$1XGIwa)
                                                   (cons
                                                     (car g$ae*$31073$1XGIwa)
                                                     g$nae*$31087$1XGIwa))))
                                              g$nae*$31086$1XGIwa
                                              g$ns*$31085$1XGIwa
                                              g$nm*$31084$1XGIwa))))))
                                     g$s2*$31078$1XGIwa
                                     g$s1*$31077$1XGIwa)))))))
                          (car g$m*$31071$1XGIwa)))))))
          (begin
            (if (not (g$id?$28259$1XGIwa g$base-id$31054$1XGIwa))
              (g$err$31057$1XGIwa
                '"not an identifier"
                g$base-id$31054$1XGIwa)
              (void))
            (if (not (g$id?$28259$1XGIwa g$new-id$31055$1XGIwa))
              (g$err$31057$1XGIwa
                '"not an identifier"
                g$new-id$31055$1XGIwa)
              (void))
            (if (not (g$free-identifier=?$28867$1XGIwa
                       g$base-id$31054$1XGIwa
                       g$new-id$31055$1XGIwa))
              (g$err$31057$1XGIwa
                '"not the same identifier"
                g$base-id$31054$1XGIwa
                g$new-id$31055$1XGIwa)
              (void))
            (call-with-values
              (case-lambda
                (()
                 (g$diff$31060$1XGIwa
                   (car (g$stx-mark*$28234$1XGIwa
                          g$base-id$31054$1XGIwa))
                   (g$stx-mark*$28234$1XGIwa g$new-id$31055$1XGIwa)
                   (g$stx-subst*$28235$1XGIwa g$new-id$31055$1XGIwa)
                   (g$stx-ae*$28236$1XGIwa g$new-id$31055$1XGIwa))))
              (case-lambda
                ((g$m*$31064$1XGIwa
                   g$s*$31065$1XGIwa
                   g$ae*$31066$1XGIwa)
                 ((case-lambda
                    ((g$ae*$31067$1XGIwa
                       g$s*$31068$1XGIwa
                       g$m*$31069$1XGIwa)
                     (if (if (null? g$m*$31069$1XGIwa)
                           (begin '#f (null? g$s*$31068$1XGIwa))
                           '#f)
                       g$object$31053$1XGIwa
                       (g$mkstx$28247$1XGIwa
                         g$object$31053$1XGIwa
                         g$m*$31069$1XGIwa
                         g$s*$31068$1XGIwa
                         g$ae*$31067$1XGIwa))))
                  g$ae*$31066$1XGIwa
                  g$s*$31065$1XGIwa
                  g$m*$31064$1XGIwa)))))))))
   (g$chi-internal-module$28803$1XGIwa
     g$chi-internal-module$32396$1XGIwa
     (case-lambda
       ((g$e$31101$1XGIwa
          g$r$31102$1XGIwa
          g$mr$31103$1XGIwa
          g$lex*$31104$1XGIwa
          g$rhs*$31105$1XGIwa
          g$mod**$31106$1XGIwa
          g$kwd*$31107$1XGIwa)
        (call-with-values
          (case-lambda
            (() (g$parse-module$28787$1XGIwa g$e$31101$1XGIwa)))
          (case-lambda
            ((g$name$31111$1XGIwa
               g$exp-id*$31112$1XGIwa
               g$e*$31113$1XGIwa)
             ((case-lambda
                ((g$e*$31114$1XGIwa
                   g$exp-id*$31115$1XGIwa
                   g$name$31116$1XGIwa)
                 ((case-lambda
                    ((g$rib$31117$1XGIwa)
                     ((case-lambda
                        ((g$e*$31118$1XGIwa)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-body*$28804$1XGIwa
                                g$e*$31118$1XGIwa
                                g$r$31102$1XGIwa
                                g$mr$31103$1XGIwa
                                g$lex*$31104$1XGIwa
                                g$rhs*$31105$1XGIwa
                                g$mod**$31106$1XGIwa
                                g$kwd*$31107$1XGIwa
                                '()
                                g$rib$31117$1XGIwa
                                '#f
                                '#t)))
                           (case-lambda
                             ((g$e*$31127$1XGIwa
                                g$r$31128$1XGIwa
                                g$mr$31129$1XGIwa
                                g$lex*$31130$1XGIwa
                                g$rhs*$31131$1XGIwa
                                g$mod**$31132$1XGIwa
                                g$kwd*$31133$1XGIwa
                                g$_exp*$31134$1XGIwa)
                              ((case-lambda
                                 ((g$_exp*$31135$1XGIwa
                                    g$kwd*$31136$1XGIwa
                                    g$mod**$31137$1XGIwa
                                    g$rhs*$31138$1XGIwa
                                    g$lex*$31139$1XGIwa
                                    g$mr$31140$1XGIwa
                                    g$r$31141$1XGIwa
                                    g$e*$31142$1XGIwa)
                                  ((case-lambda
                                     ((g$exp-lab*$31143$1XGIwa
                                        g$mod**$31144$1XGIwa)
                                      (if (not g$name$31116$1XGIwa)
                                        (values
                                          g$lex*$31139$1XGIwa
                                          g$rhs*$31138$1XGIwa
                                          g$exp-id*$31115$1XGIwa
                                          g$exp-lab*$31143$1XGIwa
                                          g$r$31141$1XGIwa
                                          g$mr$31140$1XGIwa
                                          g$mod**$31144$1XGIwa
                                          g$kwd*$31136$1XGIwa)
                                        ((case-lambda
                                           ((g$lab$31145$1XGIwa
                                              g$iface$31146$1XGIwa)
                                            (values
                                              g$lex*$31139$1XGIwa
                                              g$rhs*$31138$1XGIwa
                                              (vector
                                                g$name$31116$1XGIwa)
                                              (vector
                                                g$lab$31145$1XGIwa)
                                              (cons
                                                (cons
                                                  g$lab$31145$1XGIwa
                                                  (cons
                                                    '$module
                                                    g$iface$31146$1XGIwa))
                                                g$r$31141$1XGIwa)
                                              (cons
                                                (cons
                                                  g$lab$31145$1XGIwa
                                                  (cons
                                                    '$module
                                                    g$iface$31146$1XGIwa))
                                                g$mr$31140$1XGIwa)
                                              g$mod**$31144$1XGIwa
                                              g$kwd*$31136$1XGIwa)))
                                         (g$gen-label$28196$1XGIwa
                                           'module)
                                         (g$make-module-interface$28794$1XGIwa
                                           (car (g$stx-mark*$28234$1XGIwa
                                                  g$name$31116$1XGIwa))
                                           (g$vector-map$20663$1XGIwa
                                             (case-lambda
                                               ((g$x$31147$1XGIwa)
                                                (g$make-stx$28232$1XGIwa
                                                  (g$stx-expr$28233$1XGIwa
                                                    g$x$31147$1XGIwa)
                                                  (g$stx-mark*$28234$1XGIwa
                                                    g$x$31147$1XGIwa)
                                                  '()
                                                  '())))
                                             g$exp-id*$31115$1XGIwa)
                                           g$exp-lab*$31143$1XGIwa)))))
                                   (g$vector-map$20663$1XGIwa
                                     (case-lambda
                                       ((g$x$31148$1XGIwa)
                                        ((case-lambda
                                           ((g$t$31149$1XGIwa)
                                            (if g$t$31149$1XGIwa
                                              g$t$31149$1XGIwa
                                              (begin
                                                '#f
                                                (g$syntax-violation$28876$1XGIwa
                                                  '#f
                                                  '"cannot find module export"
                                                  g$x$31148$1XGIwa)))))
                                         (g$id->label$28272$1XGIwa
                                           (g$make-stx$28232$1XGIwa
                                             (g$id->sym$28260$1XGIwa
                                               g$x$31148$1XGIwa)
                                             (g$stx-mark*$28234$1XGIwa
                                               g$x$31148$1XGIwa)
                                             (list g$rib$31117$1XGIwa)
                                             '())))))
                                     g$exp-id*$31115$1XGIwa)
                                   (cons
                                     g$e*$31142$1XGIwa
                                     g$mod**$31137$1XGIwa))))
                               g$_exp*$31134$1XGIwa
                               g$kwd*$31133$1XGIwa
                               g$mod**$31132$1XGIwa
                               g$rhs*$31131$1XGIwa
                               g$lex*$31130$1XGIwa
                               g$mr$31129$1XGIwa
                               g$r$31128$1XGIwa
                               g$e*$31127$1XGIwa))))))
                      (g$map$19661$1XGIwa
                        (case-lambda
                          ((g$x$31150$1XGIwa)
                           (g$add-subst$28249$1XGIwa
                             g$rib$31117$1XGIwa
                             g$x$31150$1XGIwa)))
                        (g$syntax->list$28258$1XGIwa
                          g$e*$31114$1XGIwa)))))
                  (g$make-empty-rib$28217$1XGIwa))))
              g$e*$31113$1XGIwa
              g$exp-id*$31112$1XGIwa
              g$name$31111$1XGIwa)))))))
   (g$chi-body*$28804$1XGIwa
     g$chi-body*$32397$1XGIwa
     (case-lambda
       ((g$e*$31151$1XGIwa
          g$r$31152$1XGIwa
          g$mr$31153$1XGIwa
          g$lex*$31154$1XGIwa
          g$rhs*$31155$1XGIwa
          g$mod**$31156$1XGIwa
          g$kwd*$31157$1XGIwa
          g$exp*$31158$1XGIwa
          g$rib$31159$1XGIwa
          g$mix?$31160$1XGIwa
          g$sd?$31161$1XGIwa)
        (if (null? g$e*$31151$1XGIwa)
          (values
            g$e*$31151$1XGIwa
            g$r$31152$1XGIwa
            g$mr$31153$1XGIwa
            g$lex*$31154$1XGIwa
            g$rhs*$31155$1XGIwa
            g$mod**$31156$1XGIwa
            g$kwd*$31157$1XGIwa
            g$exp*$31158$1XGIwa)
          (begin
            '#f
            ((case-lambda
               ((g$e$31162$1XGIwa)
                (call-with-values
                  (case-lambda
                    (()
                     (g$syntax-type$28279$1XGIwa
                       g$e$31162$1XGIwa
                       g$r$31152$1XGIwa)))
                  (case-lambda
                    ((g$type$31166$1XGIwa
                       g$value$31167$1XGIwa
                       g$kwd$31168$1XGIwa)
                     ((case-lambda
                        ((g$kwd$31169$1XGIwa
                           g$value$31170$1XGIwa
                           g$type$31171$1XGIwa)
                         ((case-lambda
                            ((g$kwd*$31172$1XGIwa)
                             ((case-lambda
                                ((g$t$31173$1XGIwa)
                                 (if (eqv? g$t$31173$1XGIwa 'define)
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define$28697$1XGIwa
                                          g$e$31162$1XGIwa)))
                                     (case-lambda
                                       ((g$id$31176$1XGIwa
                                          g$rhs$31177$1XGIwa)
                                        ((case-lambda
                                           ((g$rhs$31178$1XGIwa
                                              g$id$31179$1XGIwa)
                                            (begin
                                              (if (g$bound-id-member?$28266$1XGIwa
                                                    g$id$31179$1XGIwa
                                                    g$kwd*$31172$1XGIwa)
                                                (g$syntax-violation$28876$1XGIwa
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$31162$1XGIwa)
                                                (void))
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$gen-define-label+loc$28198$1XGIwa
                                                     g$id$31179$1XGIwa
                                                     g$rib$31159$1XGIwa
                                                     g$sd?$31161$1XGIwa)))
                                                (case-lambda
                                                  ((g$lab$31182$1XGIwa
                                                     g$lex$31183$1XGIwa)
                                                   ((case-lambda
                                                      ((g$lex$31184$1XGIwa
                                                         g$lab$31185$1XGIwa)
                                                       (begin
                                                         (g$extend-rib!$28220$1XGIwa
                                                           g$rib$31159$1XGIwa
                                                           g$id$31179$1XGIwa
                                                           g$lab$31185$1XGIwa
                                                           g$sd?$31161$1XGIwa)
                                                         (g$chi-body*$28804$1XGIwa
                                                           (cdr g$e*$31151$1XGIwa)
                                                           (g$add-lexical$28704$1XGIwa
                                                             g$lab$31185$1XGIwa
                                                             g$lex$31184$1XGIwa
                                                             g$r$31152$1XGIwa)
                                                           g$mr$31153$1XGIwa
                                                           (cons
                                                             g$lex$31184$1XGIwa
                                                             g$lex*$31154$1XGIwa)
                                                           (cons
                                                             g$rhs$31178$1XGIwa
                                                             g$rhs*$31155$1XGIwa)
                                                           g$mod**$31156$1XGIwa
                                                           g$kwd*$31172$1XGIwa
                                                           g$exp*$31158$1XGIwa
                                                           g$rib$31159$1XGIwa
                                                           g$mix?$31160$1XGIwa
                                                           g$sd?$31161$1XGIwa))))
                                                    g$lex$31183$1XGIwa
                                                    g$lab$31182$1XGIwa)))))))
                                         g$rhs$31177$1XGIwa
                                         g$id$31176$1XGIwa))))
                                   (if (eqv?
                                         g$t$31173$1XGIwa
                                         'define-syntax)
                                     (call-with-values
                                       (case-lambda
                                         (()
                                          (g$parse-define-syntax$28698$1XGIwa
                                            g$e$31162$1XGIwa)))
                                       (case-lambda
                                         ((g$id$31188$1XGIwa
                                            g$rhs$31189$1XGIwa)
                                          ((case-lambda
                                             ((g$rhs$31190$1XGIwa
                                                g$id$31191$1XGIwa)
                                              (begin
                                                (if (g$bound-id-member?$28266$1XGIwa
                                                      g$id$31191$1XGIwa
                                                      g$kwd*$31172$1XGIwa)
                                                  (g$syntax-violation$28876$1XGIwa
                                                    '#f
                                                    '"cannot redefine keyword"
                                                    g$e$31162$1XGIwa)
                                                  (void))
                                                ((case-lambda
                                                   ((g$lab$31192$1XGIwa)
                                                    ((case-lambda
                                                       ((g$expanded-rhs$31193$1XGIwa)
                                                        (begin
                                                          (g$extend-rib!$28220$1XGIwa
                                                            g$rib$31159$1XGIwa
                                                            g$id$31191$1XGIwa
                                                            g$lab$31192$1XGIwa
                                                            g$sd?$31161$1XGIwa)
                                                          ((case-lambda
                                                             ((g$b$31194$1XGIwa)
                                                              (g$chi-body*$28804$1XGIwa
                                                                (cdr g$e*$31151$1XGIwa)
                                                                (cons
                                                                  (cons
                                                                    g$lab$31192$1XGIwa
                                                                    g$b$31194$1XGIwa)
                                                                  g$r$31152$1XGIwa)
                                                                (cons
                                                                  (cons
                                                                    g$lab$31192$1XGIwa
                                                                    g$b$31194$1XGIwa)
                                                                  g$mr$31153$1XGIwa)
                                                                g$lex*$31154$1XGIwa
                                                                g$rhs*$31155$1XGIwa
                                                                g$mod**$31156$1XGIwa
                                                                g$kwd*$31172$1XGIwa
                                                                g$exp*$31158$1XGIwa
                                                                g$rib$31159$1XGIwa
                                                                g$mix?$31160$1XGIwa
                                                                g$sd?$31161$1XGIwa)))
                                                           (g$make-eval-transformer$28307$1XGIwa
                                                             g$expanded-rhs$31193$1XGIwa)))))
                                                     (g$expand-transformer$28805$1XGIwa
                                                       g$rhs$31190$1XGIwa
                                                       g$mr$31153$1XGIwa))))
                                                 (g$gen-define-label$28199$1XGIwa
                                                   g$id$31191$1XGIwa
                                                   g$rib$31159$1XGIwa
                                                   g$sd?$31161$1XGIwa)))))
                                           g$rhs$31189$1XGIwa
                                           g$id$31188$1XGIwa))))
                                     (if (g$memv$19654$1XGIwa
                                           g$t$31173$1XGIwa
                                           '(let-syntax letrec-syntax))
                                       ((case-lambda
                                          ((g$t$31195$1XGIwa)
                                           ((case-lambda
                                              ((g$ls/false$31196$1XGIwa)
                                               (if (if g$ls/false$31196$1XGIwa
                                                     (begin
                                                       '#f
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$31197$1XGIwa
                                                              g$xrhs*$31198$1XGIwa
                                                              g$xbody*$31199$1XGIwa)
                                                            (if (not (g$valid-bound-ids?$28264$1XGIwa
                                                                       g$xlhs*$31197$1XGIwa))
                                                              (g$syntax-violation$28876$1XGIwa
                                                                '#f
                                                                '"invalid identifiers"
                                                                g$e$31162$1XGIwa)
                                                              (void))))
                                                         g$ls/false$31196$1XGIwa))
                                                     '#f)
                                                 (apply
                                                   (case-lambda
                                                     ((g$xlhs*$31200$1XGIwa
                                                        g$xrhs*$31201$1XGIwa
                                                        g$xbody*$31202$1XGIwa)
                                                      ((case-lambda
                                                         ((g$xlab*$31203$1XGIwa)
                                                          ((case-lambda
                                                             ((g$xrib$31204$1XGIwa)
                                                              ((case-lambda
                                                                 ((g$xb*$31205$1XGIwa)
                                                                  (g$chi-body*$28804$1XGIwa
                                                                    (append
                                                                      (g$map$19661$1XGIwa
                                                                        (case-lambda
                                                                          ((g$x$31206$1XGIwa)
                                                                           (g$add-subst$28249$1XGIwa
                                                                             g$xrib$31204$1XGIwa
                                                                             g$x$31206$1XGIwa)))
                                                                        g$xbody*$31202$1XGIwa)
                                                                      (cdr g$e*$31151$1XGIwa))
                                                                    (append
                                                                      (g$map$19661$1XGIwa
                                                                        cons
                                                                        g$xlab*$31203$1XGIwa
                                                                        g$xb*$31205$1XGIwa)
                                                                      g$r$31152$1XGIwa)
                                                                    (append
                                                                      (g$map$19661$1XGIwa
                                                                        cons
                                                                        g$xlab*$31203$1XGIwa
                                                                        g$xb*$31205$1XGIwa)
                                                                      g$mr$31153$1XGIwa)
                                                                    g$lex*$31154$1XGIwa
                                                                    g$rhs*$31155$1XGIwa
                                                                    g$mod**$31156$1XGIwa
                                                                    g$kwd*$31172$1XGIwa
                                                                    g$exp*$31158$1XGIwa
                                                                    g$rib$31159$1XGIwa
                                                                    g$mix?$31160$1XGIwa
                                                                    g$sd?$31161$1XGIwa)))
                                                               (g$map$19661$1XGIwa
                                                                 (case-lambda
                                                                   ((g$x$31207$1XGIwa)
                                                                    (g$make-eval-transformer$28307$1XGIwa
                                                                      (g$expand-transformer$28805$1XGIwa
                                                                        (if (eq? g$type$31171$1XGIwa
                                                                                 'let-syntax)
                                                                          g$x$31207$1XGIwa
                                                                          (g$add-subst$28249$1XGIwa
                                                                            g$xrib$31204$1XGIwa
                                                                            g$x$31207$1XGIwa))
                                                                        g$mr$31153$1XGIwa))))
                                                                 g$xrhs*$31201$1XGIwa))))
                                                           (g$make-full-rib$28225$1XGIwa
                                                             g$xlhs*$31200$1XGIwa
                                                             g$xlab*$31203$1XGIwa))))
                                                       (g$map$19661$1XGIwa
                                                         g$gen-label$28196$1XGIwa
                                                         g$xlhs*$31200$1XGIwa))))
                                                   g$ls/false$31196$1XGIwa)
                                                 (g$syntax-violation$28876$1XGIwa
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$31195$1XGIwa))))
                                            (g$syntax-dispatch$28757$1XGIwa
                                              g$t$31195$1XGIwa
                                              '(_ #(each (any any))
                                                  .
                                                  each-any)))))
                                        g$e$31162$1XGIwa)
                                       (if (eqv?
                                             g$t$31173$1XGIwa
                                             'begin)
                                         ((case-lambda
                                            ((g$t$31208$1XGIwa)
                                             ((case-lambda
                                                ((g$ls/false$31209$1XGIwa)
                                                 (if g$ls/false$31209$1XGIwa
                                                   (apply
                                                     (case-lambda
                                                       ((g$x*$31210$1XGIwa)
                                                        (g$chi-body*$28804$1XGIwa
                                                          (append
                                                            g$x*$31210$1XGIwa
                                                            (cdr g$e*$31151$1XGIwa))
                                                          g$r$31152$1XGIwa
                                                          g$mr$31153$1XGIwa
                                                          g$lex*$31154$1XGIwa
                                                          g$rhs*$31155$1XGIwa
                                                          g$mod**$31156$1XGIwa
                                                          g$kwd*$31172$1XGIwa
                                                          g$exp*$31158$1XGIwa
                                                          g$rib$31159$1XGIwa
                                                          g$mix?$31160$1XGIwa
                                                          g$sd?$31161$1XGIwa)))
                                                     g$ls/false$31209$1XGIwa)
                                                   (g$syntax-violation$28876$1XGIwa
                                                     '#f
                                                     '"invalid syntax"
                                                     g$t$31208$1XGIwa))))
                                              (g$syntax-dispatch$28757$1XGIwa
                                                g$t$31208$1XGIwa
                                                '(_ . each-any)))))
                                          g$e$31162$1XGIwa)
                                         (if (g$memv$19654$1XGIwa
                                               g$t$31173$1XGIwa
                                               '(global-macro
                                                  global-macro!))
                                           (g$chi-body*$28804$1XGIwa
                                             (cons
                                               (g$add-subst$28249$1XGIwa
                                                 g$rib$31159$1XGIwa
                                                 (g$chi-global-macro$28772$1XGIwa
                                                   g$value$31170$1XGIwa
                                                   g$e$31162$1XGIwa
                                                   g$r$31152$1XGIwa))
                                               (cdr g$e*$31151$1XGIwa))
                                             g$r$31152$1XGIwa
                                             g$mr$31153$1XGIwa
                                             g$lex*$31154$1XGIwa
                                             g$rhs*$31155$1XGIwa
                                             g$mod**$31156$1XGIwa
                                             g$kwd*$31172$1XGIwa
                                             g$exp*$31158$1XGIwa
                                             g$rib$31159$1XGIwa
                                             g$mix?$31160$1XGIwa
                                             g$sd?$31161$1XGIwa)
                                           (if (g$memv$19654$1XGIwa
                                                 g$t$31173$1XGIwa
                                                 '(local-macro
                                                    local-macro!))
                                             (g$chi-body*$28804$1XGIwa
                                               (cons
                                                 (g$add-subst$28249$1XGIwa
                                                   g$rib$31159$1XGIwa
                                                   (g$chi-local-macro$28771$1XGIwa
                                                     g$value$31170$1XGIwa
                                                     g$e$31162$1XGIwa
                                                     g$r$31152$1XGIwa))
                                                 (cdr g$e*$31151$1XGIwa))
                                               g$r$31152$1XGIwa
                                               g$mr$31153$1XGIwa
                                               g$lex*$31154$1XGIwa
                                               g$rhs*$31155$1XGIwa
                                               g$mod**$31156$1XGIwa
                                               g$kwd*$31172$1XGIwa
                                               g$exp*$31158$1XGIwa
                                               g$rib$31159$1XGIwa
                                               g$mix?$31160$1XGIwa
                                               g$sd?$31161$1XGIwa)
                                             (if (g$memv$19654$1XGIwa
                                                   g$t$31173$1XGIwa
                                                   '(macro macro!))
                                               (g$chi-body*$28804$1XGIwa
                                                 (cons
                                                   (g$add-subst$28249$1XGIwa
                                                     g$rib$31159$1XGIwa
                                                     (g$chi-macro$28770$1XGIwa
                                                       g$value$31170$1XGIwa
                                                       g$e$31162$1XGIwa
                                                       g$r$31152$1XGIwa))
                                                   (cdr g$e*$31151$1XGIwa))
                                                 g$r$31152$1XGIwa
                                                 g$mr$31153$1XGIwa
                                                 g$lex*$31154$1XGIwa
                                                 g$rhs*$31155$1XGIwa
                                                 g$mod**$31156$1XGIwa
                                                 g$kwd*$31172$1XGIwa
                                                 g$exp*$31158$1XGIwa
                                                 g$rib$31159$1XGIwa
                                                 g$mix?$31160$1XGIwa
                                                 g$sd?$31161$1XGIwa)
                                               (if (eqv?
                                                     g$t$31173$1XGIwa
                                                     'module)
                                                 (call-with-values
                                                   (case-lambda
                                                     (()
                                                      (g$chi-internal-module$28803$1XGIwa
                                                        g$e$31162$1XGIwa
                                                        g$r$31152$1XGIwa
                                                        g$mr$31153$1XGIwa
                                                        g$lex*$31154$1XGIwa
                                                        g$rhs*$31155$1XGIwa
                                                        g$mod**$31156$1XGIwa
                                                        g$kwd*$31172$1XGIwa)))
                                                   (case-lambda
                                                     ((g$lex*$31219$1XGIwa
                                                        g$rhs*$31220$1XGIwa
                                                        g$m-exp-id*$31221$1XGIwa
                                                        g$m-exp-lab*$31222$1XGIwa
                                                        g$r$31223$1XGIwa
                                                        g$mr$31224$1XGIwa
                                                        g$mod**$31225$1XGIwa
                                                        g$kwd*$31226$1XGIwa)
                                                      ((case-lambda
                                                         ((g$kwd*$31227$1XGIwa
                                                            g$mod**$31228$1XGIwa
                                                            g$mr$31229$1XGIwa
                                                            g$r$31230$1XGIwa
                                                            g$m-exp-lab*$31231$1XGIwa
                                                            g$m-exp-id*$31232$1XGIwa
                                                            g$rhs*$31233$1XGIwa
                                                            g$lex*$31234$1XGIwa)
                                                          (begin
                                                            (g$vector-for-each$20664$1XGIwa
                                                              (case-lambda
                                                                ((g$id$31235$1XGIwa
                                                                   g$lab$31236$1XGIwa)
                                                                 (g$extend-rib!$28220$1XGIwa
                                                                   g$rib$31159$1XGIwa
                                                                   g$id$31235$1XGIwa
                                                                   g$lab$31236$1XGIwa
                                                                   g$sd?$31161$1XGIwa)))
                                                              g$m-exp-id*$31232$1XGIwa
                                                              g$m-exp-lab*$31231$1XGIwa)
                                                            (g$chi-body*$28804$1XGIwa
                                                              (cdr g$e*$31151$1XGIwa)
                                                              g$r$31230$1XGIwa
                                                              g$mr$31229$1XGIwa
                                                              g$lex*$31234$1XGIwa
                                                              g$rhs*$31233$1XGIwa
                                                              g$mod**$31228$1XGIwa
                                                              g$kwd*$31227$1XGIwa
                                                              g$exp*$31158$1XGIwa
                                                              g$rib$31159$1XGIwa
                                                              g$mix?$31160$1XGIwa
                                                              g$sd?$31161$1XGIwa))))
                                                       g$kwd*$31226$1XGIwa
                                                       g$mod**$31225$1XGIwa
                                                       g$mr$31224$1XGIwa
                                                       g$r$31223$1XGIwa
                                                       g$m-exp-lab*$31222$1XGIwa
                                                       g$m-exp-id*$31221$1XGIwa
                                                       g$rhs*$31220$1XGIwa
                                                       g$lex*$31219$1XGIwa))))
                                                 (if (eqv?
                                                       g$t$31173$1XGIwa
                                                       'library)
                                                   (begin
                                                     (g$library-expander$28860$1XGIwa
                                                       (g$stx->datum$28270$1XGIwa
                                                         g$e$31162$1XGIwa))
                                                     (g$chi-body*$28804$1XGIwa
                                                       (cdr g$e*$31151$1XGIwa)
                                                       g$r$31152$1XGIwa
                                                       g$mr$31153$1XGIwa
                                                       g$lex*$31154$1XGIwa
                                                       g$rhs*$31155$1XGIwa
                                                       g$mod**$31156$1XGIwa
                                                       g$kwd*$31172$1XGIwa
                                                       g$exp*$31158$1XGIwa
                                                       g$rib$31159$1XGIwa
                                                       g$mix?$31160$1XGIwa
                                                       g$sd?$31161$1XGIwa))
                                                   (if (eqv?
                                                         g$t$31173$1XGIwa
                                                         'export)
                                                     ((case-lambda
                                                        ((g$t$31237$1XGIwa)
                                                         ((case-lambda
                                                            ((g$ls/false$31238$1XGIwa)
                                                             (if g$ls/false$31238$1XGIwa
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$exp-decl*$31239$1XGIwa)
                                                                    (g$chi-body*$28804$1XGIwa
                                                                      (cdr g$e*$31151$1XGIwa)
                                                                      g$r$31152$1XGIwa
                                                                      g$mr$31153$1XGIwa
                                                                      g$lex*$31154$1XGIwa
                                                                      g$rhs*$31155$1XGIwa
                                                                      g$mod**$31156$1XGIwa
                                                                      g$kwd*$31172$1XGIwa
                                                                      (append
                                                                        g$exp-decl*$31239$1XGIwa
                                                                        g$exp*$31158$1XGIwa)
                                                                      g$rib$31159$1XGIwa
                                                                      g$mix?$31160$1XGIwa
                                                                      g$sd?$31161$1XGIwa)))
                                                                 g$ls/false$31238$1XGIwa)
                                                               (g$syntax-violation$28876$1XGIwa
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$31237$1XGIwa))))
                                                          (g$syntax-dispatch$28757$1XGIwa
                                                            g$t$31237$1XGIwa
                                                            '(_ .
                                                                each-any)))))
                                                      g$e$31162$1XGIwa)
                                                     (if (eqv?
                                                           g$t$31173$1XGIwa
                                                           'import)
                                                       ((case-lambda
                                                          (()
                                                           (letrec* ((g$module-import?$31240$1XGIwa
                                                                       (case-lambda
                                                                         ((g$e$31282$1XGIwa)
                                                                          ((case-lambda
                                                                             ((g$t$31283$1XGIwa)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$31284$1XGIwa)
                                                                                  (if (if g$ls/false$31284$1XGIwa
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$id$31285$1XGIwa)
                                                                                               (g$id?$28259$1XGIwa
                                                                                                 g$id$31285$1XGIwa)))
                                                                                            g$ls/false$31284$1XGIwa))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$id$31286$1XGIwa)
                                                                                         '#t))
                                                                                      g$ls/false$31284$1XGIwa)
                                                                                    ((case-lambda
                                                                                       ((g$t$31287$1XGIwa)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$31288$1XGIwa)
                                                                                            (if g$ls/false$31288$1XGIwa
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$imp*$31289$1XGIwa)
                                                                                                   '#f))
                                                                                                g$ls/false$31288$1XGIwa)
                                                                                              ((case-lambda
                                                                                                 ((g$t$31290$1XGIwa)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$31291$1XGIwa)
                                                                                                      (if g$ls/false$31291$1XGIwa
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$syntax-violation$28876$1XGIwa
                                                                                                               '#f
                                                                                                               '"malformed import form"
                                                                                                               g$e$31282$1XGIwa)))
                                                                                                          g$ls/false$31291$1XGIwa)
                                                                                                        (g$syntax-violation$28876$1XGIwa
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$31290$1XGIwa))))
                                                                                                   (g$syntax-dispatch$28757$1XGIwa
                                                                                                     g$t$31290$1XGIwa
                                                                                                     '_))))
                                                                                               g$t$31287$1XGIwa))))
                                                                                         (g$syntax-dispatch$28757$1XGIwa
                                                                                           g$t$31287$1XGIwa
                                                                                           '(_ .
                                                                                               each-any)))))
                                                                                     g$t$31283$1XGIwa))))
                                                                               (g$syntax-dispatch$28757$1XGIwa
                                                                                 g$t$31283$1XGIwa
                                                                                 '(_ any)))))
                                                                           g$e$31282$1XGIwa))))
                                                                     (g$module-import$31241$1XGIwa
                                                                       (case-lambda
                                                                         ((g$e$31265$1XGIwa
                                                                            g$r$31266$1XGIwa)
                                                                          ((case-lambda
                                                                             ((g$t$31267$1XGIwa)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$31268$1XGIwa)
                                                                                  (if (if g$ls/false$31268$1XGIwa
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$id$31269$1XGIwa)
                                                                                               (g$id?$28259$1XGIwa
                                                                                                 g$id$31269$1XGIwa)))
                                                                                            g$ls/false$31268$1XGIwa))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$id$31270$1XGIwa)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$syntax-type$28279$1XGIwa
                                                                                                g$id$31270$1XGIwa
                                                                                                g$r$31266$1XGIwa)))
                                                                                           (case-lambda
                                                                                             ((g$type$31274$1XGIwa
                                                                                                g$value$31275$1XGIwa
                                                                                                g$kwd$31276$1XGIwa)
                                                                                              ((case-lambda
                                                                                                 ((g$kwd$31277$1XGIwa
                                                                                                    g$value$31278$1XGIwa
                                                                                                    g$type$31279$1XGIwa)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$31280$1XGIwa)
                                                                                                      (if (eqv?
                                                                                                            g$t$31280$1XGIwa
                                                                                                            '$module)
                                                                                                        ((case-lambda
                                                                                                           ((g$iface$31281$1XGIwa)
                                                                                                            (values
                                                                                                              (g$module-interface-exp-id*$28801$1XGIwa
                                                                                                                g$iface$31281$1XGIwa
                                                                                                                g$id$31270$1XGIwa)
                                                                                                              (g$module-interface-exp-lab-vec$28797$1XGIwa
                                                                                                                g$iface$31281$1XGIwa))))
                                                                                                         g$value$31278$1XGIwa)
                                                                                                        (begin
                                                                                                          '#f
                                                                                                          (g$syntax-violation$28876$1XGIwa
                                                                                                            '#f
                                                                                                            '"invalid import"
                                                                                                            g$e$31265$1XGIwa)))))
                                                                                                   g$type$31279$1XGIwa)))
                                                                                               g$kwd$31276$1XGIwa
                                                                                               g$value$31275$1XGIwa
                                                                                               g$type$31274$1XGIwa))))))
                                                                                      g$ls/false$31268$1XGIwa)
                                                                                    (g$syntax-violation$28876$1XGIwa
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$31267$1XGIwa))))
                                                                               (g$syntax-dispatch$28757$1XGIwa
                                                                                 g$t$31267$1XGIwa
                                                                                 '(_ any)))))
                                                                           g$e$31265$1XGIwa))))
                                                                     (g$library-import$31242$1XGIwa
                                                                       (case-lambda
                                                                         ((g$e$31251$1XGIwa)
                                                                          ((case-lambda
                                                                             ((g$t$31252$1XGIwa)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$31253$1XGIwa)
                                                                                  (if g$ls/false$31253$1XGIwa
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ctxt$31254$1XGIwa
                                                                                           g$imp*$31255$1XGIwa)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$parse-import-spec*$28809$1XGIwa
                                                                                                (g$syntax->datum$28879$1XGIwa
                                                                                                  g$imp*$31255$1XGIwa))))
                                                                                           (case-lambda
                                                                                             ((g$subst-names$31258$1XGIwa
                                                                                                g$subst-labels$31259$1XGIwa)
                                                                                              ((case-lambda
                                                                                                 ((g$subst-labels$31260$1XGIwa
                                                                                                    g$subst-names$31261$1XGIwa)
                                                                                                  (values
                                                                                                    (g$vector-map$20663$1XGIwa
                                                                                                      (case-lambda
                                                                                                        ((g$name$31262$1XGIwa)
                                                                                                         (g$datum->stx$28242$1XGIwa
                                                                                                           g$ctxt$31254$1XGIwa
                                                                                                           g$name$31262$1XGIwa)))
                                                                                                      g$subst-names$31261$1XGIwa)
                                                                                                    g$subst-labels$31260$1XGIwa)))
                                                                                               g$subst-labels$31259$1XGIwa
                                                                                               g$subst-names$31258$1XGIwa))))))
                                                                                      g$ls/false$31253$1XGIwa)
                                                                                    ((case-lambda
                                                                                       ((g$t$31263$1XGIwa)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$31264$1XGIwa)
                                                                                            (if g$ls/false$31264$1XGIwa
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$syntax-violation$28876$1XGIwa
                                                                                                     '#f
                                                                                                     '"invalid import form"
                                                                                                     g$e$31251$1XGIwa)))
                                                                                                g$ls/false$31264$1XGIwa)
                                                                                              (g$syntax-violation$28876$1XGIwa
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$31263$1XGIwa))))
                                                                                         (g$syntax-dispatch$28757$1XGIwa
                                                                                           g$t$31263$1XGIwa
                                                                                           '_))))
                                                                                     g$t$31252$1XGIwa))))
                                                                               (g$syntax-dispatch$28757$1XGIwa
                                                                                 g$t$31252$1XGIwa
                                                                                 '(any .
                                                                                       each-any)))))
                                                                           g$e$31251$1XGIwa)))))
                                                             (begin
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    (if (g$module-import?$31240$1XGIwa
                                                                          g$e$31162$1XGIwa)
                                                                      (g$module-import$31241$1XGIwa
                                                                        g$e$31162$1XGIwa
                                                                        g$r$31152$1XGIwa)
                                                                      (g$library-import$31242$1XGIwa
                                                                        g$e$31162$1XGIwa))))
                                                                 (case-lambda
                                                                   ((g$id*$31245$1XGIwa
                                                                      g$lab*$31246$1XGIwa)
                                                                    ((case-lambda
                                                                       ((g$lab*$31247$1XGIwa
                                                                          g$id*$31248$1XGIwa)
                                                                        (g$vector-for-each$20664$1XGIwa
                                                                          (case-lambda
                                                                            ((g$id$31249$1XGIwa
                                                                               g$lab$31250$1XGIwa)
                                                                             (g$extend-rib!$28220$1XGIwa
                                                                               g$rib$31159$1XGIwa
                                                                               g$id$31249$1XGIwa
                                                                               g$lab$31250$1XGIwa
                                                                               g$sd?$31161$1XGIwa)))
                                                                          g$id*$31248$1XGIwa
                                                                          g$lab*$31247$1XGIwa)))
                                                                     g$lab*$31246$1XGIwa
                                                                     g$id*$31245$1XGIwa))))
                                                               (g$chi-body*$28804$1XGIwa
                                                                 (cdr g$e*$31151$1XGIwa)
                                                                 g$r$31152$1XGIwa
                                                                 g$mr$31153$1XGIwa
                                                                 g$lex*$31154$1XGIwa
                                                                 g$rhs*$31155$1XGIwa
                                                                 g$mod**$31156$1XGIwa
                                                                 g$kwd*$31172$1XGIwa
                                                                 g$exp*$31158$1XGIwa
                                                                 g$rib$31159$1XGIwa
                                                                 g$mix?$31160$1XGIwa
                                                                 g$sd?$31161$1XGIwa))))))
                                                       (begin
                                                         '#f
                                                         (if g$mix?$31160$1XGIwa
                                                           (g$chi-body*$28804$1XGIwa
                                                             (cdr g$e*$31151$1XGIwa)
                                                             g$r$31152$1XGIwa
                                                             g$mr$31153$1XGIwa
                                                             (cons
                                                               (g$gen-lexical$28194$1XGIwa
                                                                 'dummy)
                                                               g$lex*$31154$1XGIwa)
                                                             (cons
                                                               (cons
                                                                 'top-expr
                                                                 g$e$31162$1XGIwa)
                                                               g$rhs*$31155$1XGIwa)
                                                             g$mod**$31156$1XGIwa
                                                             g$kwd*$31172$1XGIwa
                                                             g$exp*$31158$1XGIwa
                                                             g$rib$31159$1XGIwa
                                                             '#t
                                                             g$sd?$31161$1XGIwa)
                                                           (values
                                                             g$e*$31151$1XGIwa
                                                             g$r$31152$1XGIwa
                                                             g$mr$31153$1XGIwa
                                                             g$lex*$31154$1XGIwa
                                                             g$rhs*$31155$1XGIwa
                                                             g$mod**$31156$1XGIwa
                                                             g$kwd*$31172$1XGIwa
                                                             g$exp*$31158$1XGIwa))))))))))))))))
                              g$type$31171$1XGIwa)))
                          (if (g$id?$28259$1XGIwa g$kwd$31169$1XGIwa)
                            (cons
                              g$kwd$31169$1XGIwa
                              g$kwd*$31157$1XGIwa)
                            g$kwd*$31157$1XGIwa))))
                      g$kwd$31168$1XGIwa
                      g$value$31167$1XGIwa
                      g$type$31166$1XGIwa))))))
             (car g$e*$31151$1XGIwa)))))))
   (g$expand-transformer$28805$1XGIwa
     g$expand-transformer$32398$1XGIwa
     (case-lambda
       ((g$expr$31292$1XGIwa g$r$31293$1XGIwa)
        ((case-lambda
           ((g$rtc$31294$1XGIwa)
            ((case-lambda
               ((g$expanded-rhs$31295$1XGIwa)
                (begin
                  (g$for-each$19662$1XGIwa
                    ((case-lambda
                       ((g$mark-visit$31296$1XGIwa)
                        (case-lambda
                          ((g$x$31297$1XGIwa)
                           (begin
                             (g$invoke-library$27965$1XGIwa
                               g$x$31297$1XGIwa)
                             (g$mark-visit$31296$1XGIwa
                               g$x$31297$1XGIwa))))))
                     (g$vis-collector$28813$1XGIwa))
                    (g$rtc$31294$1XGIwa))
                  g$expanded-rhs$31295$1XGIwa)))
             ((case-lambda
                ((g$inv-collector$31302$1XGIwa
                   g$vis-collector$31303$1XGIwa
                   g$inv-collector$31304$1XGIwa
                   g$vis-collector$31305$1XGIwa)
                 ((case-lambda
                    ((g$swap$31306$1XGIwa)
                     (dynamic-wind
                       g$swap$31306$1XGIwa
                       (case-lambda
                         (()
                          (g$chi-expr$28775$1XGIwa
                            g$expr$31292$1XGIwa
                            g$r$31293$1XGIwa
                            g$r$31293$1XGIwa)))
                       g$swap$31306$1XGIwa)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$31307$1XGIwa)
                           (begin
                             (g$inv-collector$31302$1XGIwa
                               g$inv-collector$31304$1XGIwa)
                             (set! g$inv-collector$31304$1XGIwa
                               g$t$31307$1XGIwa))))
                        (g$inv-collector$31302$1XGIwa))
                       ((case-lambda
                          ((g$t$31308$1XGIwa)
                           (begin
                             (g$vis-collector$31303$1XGIwa
                               g$vis-collector$31305$1XGIwa)
                             (set! g$vis-collector$31305$1XGIwa
                               g$t$31308$1XGIwa))))
                        (g$vis-collector$31303$1XGIwa))))))))
              g$inv-collector$28812$1XGIwa
              g$vis-collector$28813$1XGIwa
              g$rtc$31294$1XGIwa
              (case-lambda ((g$x$31309$1XGIwa) (values)))))))
         (g$make-collector$28811$1XGIwa)))))
   (g$parse-exports$28806$1XGIwa
     g$parse-exports$32399$1XGIwa
     (case-lambda
       ((g$exp*$31310$1XGIwa)
        ((letrec ((g$f$31311$1XGIwa
                    (case-lambda
                      ((g$exp*$31312$1XGIwa
                         g$int*$31313$1XGIwa
                         g$ext*$31314$1XGIwa)
                       (if (null? g$exp*$31312$1XGIwa)
                         (begin
                           (if (not (g$valid-bound-ids?$28264$1XGIwa
                                      g$ext*$31314$1XGIwa))
                             (g$syntax-violation$28876$1XGIwa
                               'export
                               '"invalid exports"
                               (g$find-dups$28785$1XGIwa
                                 g$ext*$31314$1XGIwa))
                             (void))
                           (values
                             (g$map$19661$1XGIwa
                               g$syntax->datum$28879$1XGIwa
                               g$ext*$31314$1XGIwa)
                             g$int*$31313$1XGIwa))
                         (begin
                           '#f
                           ((case-lambda
                              ((g$t$31315$1XGIwa)
                               ((case-lambda
                                  ((g$ls/false$31316$1XGIwa)
                                   (if g$ls/false$31316$1XGIwa
                                     (apply
                                       (case-lambda
                                         ((g$rename$31317$1XGIwa
                                            g$i*$31318$1XGIwa
                                            g$e*$31319$1XGIwa)
                                          (begin
                                            (if (not (if (eq? (g$syntax->datum$28879$1XGIwa
                                                                g$rename$31317$1XGIwa)
                                                              'rename)
                                                       (if (g$for-all$19659$1XGIwa
                                                             g$id?$28259$1XGIwa
                                                             g$i*$31318$1XGIwa)
                                                         (begin
                                                           '#f
                                                           (g$for-all$19659$1XGIwa
                                                             g$id?$28259$1XGIwa
                                                             g$e*$31319$1XGIwa))
                                                         '#f)
                                                       '#f))
                                              (g$syntax-violation$28876$1XGIwa
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$31312$1XGIwa))
                                              (void))
                                            (g$f$31311$1XGIwa
                                              (cdr g$exp*$31312$1XGIwa)
                                              (append
                                                g$i*$31318$1XGIwa
                                                g$int*$31313$1XGIwa)
                                              (append
                                                g$e*$31319$1XGIwa
                                                g$ext*$31314$1XGIwa)))))
                                       g$ls/false$31316$1XGIwa)
                                     ((case-lambda
                                        ((g$t$31320$1XGIwa)
                                         ((case-lambda
                                            ((g$ls/false$31321$1XGIwa)
                                             (if g$ls/false$31321$1XGIwa
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$31322$1XGIwa)
                                                    (begin
                                                      (if (not (g$id?$28259$1XGIwa
                                                                 g$ie$31322$1XGIwa))
                                                        (g$syntax-violation$28876$1XGIwa
                                                          'export
                                                          '"invalid export"
                                                          g$ie$31322$1XGIwa)
                                                        (void))
                                                      (g$f$31311$1XGIwa
                                                        (cdr g$exp*$31312$1XGIwa)
                                                        (cons
                                                          g$ie$31322$1XGIwa
                                                          g$int*$31313$1XGIwa)
                                                        (cons
                                                          g$ie$31322$1XGIwa
                                                          g$ext*$31314$1XGIwa)))))
                                                 g$ls/false$31321$1XGIwa)
                                               (g$syntax-violation$28876$1XGIwa
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$31320$1XGIwa))))
                                          (g$syntax-dispatch$28757$1XGIwa
                                            g$t$31320$1XGIwa
                                            'any))))
                                      g$t$31315$1XGIwa))))
                                (g$syntax-dispatch$28757$1XGIwa
                                  g$t$31315$1XGIwa
                                  '(any . #(each (any any)))))))
                            (car g$exp*$31312$1XGIwa))))))))
           g$f$31311$1XGIwa)
         g$exp*$31310$1XGIwa
         '()
         '()))))
   (g$parse-library-name$28807$1XGIwa
     g$parse-library-name$32400$1XGIwa
     (case-lambda
       ((g$spec$31323$1XGIwa)
        (letrec* ((g$parse$31324$1XGIwa
                    (case-lambda
                      ((g$x$31331$1XGIwa)
                       ((case-lambda
                          ((g$t$31332$1XGIwa)
                           ((case-lambda
                              ((g$ls/false$31333$1XGIwa)
                               (if (if g$ls/false$31333$1XGIwa
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$31334$1XGIwa)
                                            (g$for-all$19659$1XGIwa
                                              (case-lambda
                                                ((g$x$31335$1XGIwa)
                                                 ((case-lambda
                                                    ((g$x$31336$1XGIwa)
                                                     (if (g$integer?$21612$1XGIwa
                                                           g$x$31336$1XGIwa)
                                                       (begin
                                                         '#f
                                                         (g$exact?$21607$1XGIwa
                                                           g$x$31336$1XGIwa))
                                                       '#f)))
                                                  (g$syntax->datum$28879$1XGIwa
                                                    g$x$31335$1XGIwa))))
                                              g$v*$31334$1XGIwa)))
                                         g$ls/false$31333$1XGIwa))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$31337$1XGIwa)
                                      (values
                                        '()
                                        (g$map$19661$1XGIwa
                                          g$syntax->datum$28879$1XGIwa
                                          g$v*$31337$1XGIwa))))
                                   g$ls/false$31333$1XGIwa)
                                 ((case-lambda
                                    ((g$t$31338$1XGIwa)
                                     ((case-lambda
                                        ((g$ls/false$31339$1XGIwa)
                                         (if (if g$ls/false$31339$1XGIwa
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$31340$1XGIwa
                                                        g$rest$31341$1XGIwa)
                                                      (g$symbol?$20573$1XGIwa
                                                        (g$syntax->datum$28879$1XGIwa
                                                          g$x$31340$1XGIwa))))
                                                   g$ls/false$31339$1XGIwa))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$31342$1XGIwa
                                                  g$rest$31343$1XGIwa)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$31324$1XGIwa
                                                       g$rest$31343$1XGIwa)))
                                                  (case-lambda
                                                    ((g$x*$31346$1XGIwa
                                                       g$v*$31347$1XGIwa)
                                                     ((case-lambda
                                                        ((g$v*$31348$1XGIwa
                                                           g$x*$31349$1XGIwa)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$28879$1XGIwa
                                                               g$x$31342$1XGIwa)
                                                             g$x*$31349$1XGIwa)
                                                           g$v*$31348$1XGIwa)))
                                                      g$v*$31347$1XGIwa
                                                      g$x*$31346$1XGIwa))))))
                                             g$ls/false$31339$1XGIwa)
                                           ((case-lambda
                                              ((g$t$31350$1XGIwa)
                                               ((case-lambda
                                                  ((g$ls/false$31351$1XGIwa)
                                                   (if g$ls/false$31351$1XGIwa
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (values
                                                            '()
                                                            '())))
                                                       g$ls/false$31351$1XGIwa)
                                                     ((case-lambda
                                                        ((g$t$31352$1XGIwa)
                                                         ((case-lambda
                                                            ((g$ls/false$31353$1XGIwa)
                                                             (if g$ls/false$31353$1XGIwa
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$28876$1XGIwa
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$31323$1XGIwa)))
                                                                 g$ls/false$31353$1XGIwa)
                                                               (g$syntax-violation$28876$1XGIwa
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$31352$1XGIwa))))
                                                          (g$syntax-dispatch$28757$1XGIwa
                                                            g$t$31352$1XGIwa
                                                            '_))))
                                                      g$t$31350$1XGIwa))))
                                                (g$syntax-dispatch$28757$1XGIwa
                                                  g$t$31350$1XGIwa
                                                  '()))))
                                            g$t$31338$1XGIwa))))
                                      (g$syntax-dispatch$28757$1XGIwa
                                        g$t$31338$1XGIwa
                                        '(any . any)))))
                                  g$t$31332$1XGIwa))))
                            (g$syntax-dispatch$28757$1XGIwa
                              g$t$31332$1XGIwa
                              '(each-any)))))
                        g$x$31331$1XGIwa)))))
          (call-with-values
            (case-lambda
              (() (g$parse$31324$1XGIwa g$spec$31323$1XGIwa)))
            (case-lambda
              ((g$name*$31327$1XGIwa g$ver*$31328$1XGIwa)
               ((case-lambda
                  ((g$ver*$31329$1XGIwa g$name*$31330$1XGIwa)
                   (begin
                     (if (null? g$name*$31330$1XGIwa)
                       (g$syntax-violation$28876$1XGIwa
                         '#f
                         '"empty library name"
                         g$spec$31323$1XGIwa)
                       (void))
                     (values
                       g$name*$31330$1XGIwa
                       g$ver*$31329$1XGIwa))))
                g$ver*$31328$1XGIwa
                g$name*$31327$1XGIwa))))))))
   (g$parse-library$28808$1XGIwa
     g$parse-library$32401$1XGIwa
     (case-lambda
       ((g$e$31354$1XGIwa)
        ((case-lambda
           ((g$t$31355$1XGIwa)
            ((case-lambda
               ((g$ls/false$31356$1XGIwa)
                (if (if g$ls/false$31356$1XGIwa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$31357$1XGIwa
                               g$name*$31358$1XGIwa
                               g$export$31359$1XGIwa
                               g$exp*$31360$1XGIwa
                               g$import$31361$1XGIwa
                               g$imp*$31362$1XGIwa
                               g$b*$31363$1XGIwa)
                             (if (eq? (g$syntax->datum$28879$1XGIwa
                                        g$export$31359$1XGIwa)
                                      'export)
                               (if (eq? (g$syntax->datum$28879$1XGIwa
                                          g$import$31361$1XGIwa)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$28879$1XGIwa
                                          g$library$31357$1XGIwa)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$31356$1XGIwa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$31364$1XGIwa
                         g$name*$31365$1XGIwa
                         g$export$31366$1XGIwa
                         g$exp*$31367$1XGIwa
                         g$import$31368$1XGIwa
                         g$imp*$31369$1XGIwa
                         g$b*$31370$1XGIwa)
                       (values
                         g$name*$31365$1XGIwa
                         g$exp*$31367$1XGIwa
                         g$imp*$31369$1XGIwa
                         g$b*$31370$1XGIwa)))
                    g$ls/false$31356$1XGIwa)
                  ((case-lambda
                     ((g$t$31371$1XGIwa)
                      ((case-lambda
                         ((g$ls/false$31372$1XGIwa)
                          (if g$ls/false$31372$1XGIwa
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$28876$1XGIwa
                                   '#f
                                   '"malformed library"
                                   g$e$31354$1XGIwa)))
                              g$ls/false$31372$1XGIwa)
                            (g$syntax-violation$28876$1XGIwa
                              '#f
                              '"invalid syntax"
                              g$t$31371$1XGIwa))))
                       (g$syntax-dispatch$28757$1XGIwa
                         g$t$31371$1XGIwa
                         '_))))
                   g$t$31355$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$31355$1XGIwa
               '(any each-any
                     (any . each-any)
                     (any . each-any)
                     .
                     each-any)))))
         g$e$31354$1XGIwa))))
   (g$parse-import-spec*$28809$1XGIwa
     g$parse-import-spec*$32402$1XGIwa
     (case-lambda
       ((g$imp*$31373$1XGIwa)
        (letrec* ((g$idsyn?$31374$1XGIwa
                    (case-lambda
                      ((g$x$31634$1XGIwa)
                       (g$symbol?$20573$1XGIwa
                         (g$syntax->datum$28879$1XGIwa
                           g$x$31634$1XGIwa)))))
                  (g$dup-error$31375$1XGIwa
                    (case-lambda
                      ((g$name$31633$1XGIwa)
                       (g$syntax-violation$28876$1XGIwa
                         'import
                         '"two imports with different bindings"
                         g$name$31633$1XGIwa))))
                  (g$merge-substs$31376$1XGIwa
                    (case-lambda
                      ((g$s$31624$1XGIwa g$subst$31625$1XGIwa)
                       (letrec* ((g$insert-to-subst$31626$1XGIwa
                                   (case-lambda
                                     ((g$a$31627$1XGIwa
                                        g$subst$31628$1XGIwa)
                                      ((case-lambda
                                         ((g$name$31629$1XGIwa
                                            g$label$31630$1XGIwa)
                                          ((case-lambda
                                             ((g$t$31631$1XGIwa)
                                              (if g$t$31631$1XGIwa
                                                ((case-lambda
                                                   ((g$x$31632$1XGIwa)
                                                    (if (eq? (cdr g$x$31632$1XGIwa)
                                                             g$label$31630$1XGIwa)
                                                      g$subst$31628$1XGIwa
                                                      (begin
                                                        '#f
                                                        (g$dup-error$31375$1XGIwa
                                                          g$name$31629$1XGIwa)))))
                                                 g$t$31631$1XGIwa)
                                                (begin
                                                  '#f
                                                  (cons
                                                    g$a$31627$1XGIwa
                                                    g$subst$31628$1XGIwa)))))
                                           (g$assq$19649$1XGIwa
                                             g$name$31629$1XGIwa
                                             g$subst$31628$1XGIwa))))
                                       (car g$a$31627$1XGIwa)
                                       (cdr g$a$31627$1XGIwa))))))
                         (if (null? g$s$31624$1XGIwa)
                           g$subst$31625$1XGIwa
                           (begin
                             '#f
                             (g$insert-to-subst$31626$1XGIwa
                               (car g$s$31624$1XGIwa)
                               (g$merge-substs$31376$1XGIwa
                                 (cdr g$s$31624$1XGIwa)
                                 g$subst$31625$1XGIwa))))))))
                  (g$exclude*$31377$1XGIwa
                    (case-lambda
                      ((g$sym*$31600$1XGIwa g$subst$31601$1XGIwa)
                       (letrec* ((g$exclude$31602$1XGIwa
                                   (case-lambda
                                     ((g$sym$31615$1XGIwa
                                        g$subst$31616$1XGIwa)
                                      (if (null? g$subst$31616$1XGIwa)
                                        (g$syntax-violation$28876$1XGIwa
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$31615$1XGIwa)
                                        (if (eq? g$sym$31615$1XGIwa
                                                 (g$caar$20610$1XGIwa
                                                   g$subst$31616$1XGIwa))
                                          (values
                                            (g$cdar$20612$1XGIwa
                                              g$subst$31616$1XGIwa)
                                            (cdr g$subst$31616$1XGIwa))
                                          (begin
                                            '#f
                                            ((case-lambda
                                               ((g$a$31617$1XGIwa)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$exclude$31602$1XGIwa
                                                       g$sym$31615$1XGIwa
                                                       (cdr g$subst$31616$1XGIwa))))
                                                  (case-lambda
                                                    ((g$old$31620$1XGIwa
                                                       g$subst$31621$1XGIwa)
                                                     ((case-lambda
                                                        ((g$subst$31622$1XGIwa
                                                           g$old$31623$1XGIwa)
                                                         (values
                                                           g$old$31623$1XGIwa
                                                           (cons
                                                             g$a$31617$1XGIwa
                                                             g$subst$31622$1XGIwa))))
                                                      g$subst$31621$1XGIwa
                                                      g$old$31620$1XGIwa))))))
                                             (car g$subst$31616$1XGIwa)))))))))
                         (if (null? g$sym*$31600$1XGIwa)
                           (values '() g$subst$31601$1XGIwa)
                           (begin
                             '#f
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$exclude$31602$1XGIwa
                                    (car g$sym*$31600$1XGIwa)
                                    g$subst$31601$1XGIwa)))
                               (case-lambda
                                 ((g$old$31605$1XGIwa
                                    g$subst$31606$1XGIwa)
                                  ((case-lambda
                                     ((g$subst$31607$1XGIwa
                                        g$old$31608$1XGIwa)
                                      (call-with-values
                                        (case-lambda
                                          (()
                                           (g$exclude*$31377$1XGIwa
                                             (cdr g$sym*$31600$1XGIwa)
                                             g$subst$31607$1XGIwa)))
                                        (case-lambda
                                          ((g$old*$31611$1XGIwa
                                             g$subst$31612$1XGIwa)
                                           ((case-lambda
                                              ((g$subst$31613$1XGIwa
                                                 g$old*$31614$1XGIwa)
                                               (values
                                                 (cons
                                                   g$old$31608$1XGIwa
                                                   g$old*$31614$1XGIwa)
                                                 g$subst$31613$1XGIwa)))
                                            g$subst$31612$1XGIwa
                                            g$old*$31611$1XGIwa))))))
                                   g$subst$31606$1XGIwa
                                   g$old$31605$1XGIwa))))))))))
                  (g$find*$31378$1XGIwa
                    (case-lambda
                      ((g$sym*$31596$1XGIwa g$subst$31597$1XGIwa)
                       (g$map$19661$1XGIwa
                         (case-lambda
                           ((g$x$31598$1XGIwa)
                            ((case-lambda
                               ((g$t$31599$1XGIwa)
                                (if g$t$31599$1XGIwa
                                  (cdr g$t$31599$1XGIwa)
                                  (begin
                                    '#f
                                    (g$syntax-violation$28876$1XGIwa
                                      'import
                                      '"cannot find identifier"
                                      g$x$31598$1XGIwa)))))
                             (g$assq$19649$1XGIwa
                               g$x$31598$1XGIwa
                               g$subst$31597$1XGIwa))))
                         g$sym*$31596$1XGIwa))))
                  (g$rem*$31379$1XGIwa
                    (case-lambda
                      ((g$sym*$31592$1XGIwa g$subst$31593$1XGIwa)
                       ((letrec ((g$f$31594$1XGIwa
                                   (case-lambda
                                     ((g$subst$31595$1XGIwa)
                                      (if (null? g$subst$31595$1XGIwa)
                                        '()
                                        (if (g$memq$19653$1XGIwa
                                              (g$caar$20610$1XGIwa
                                                g$subst$31595$1XGIwa)
                                              g$sym*$31592$1XGIwa)
                                          (g$f$31594$1XGIwa
                                            (cdr g$subst$31595$1XGIwa))
                                          (begin
                                            '#f
                                            (cons
                                              (car g$subst$31595$1XGIwa)
                                              (g$f$31594$1XGIwa
                                                (cdr g$subst$31595$1XGIwa))))))))))
                          g$f$31594$1XGIwa)
                        g$subst$31593$1XGIwa))))
                  (g$remove-dups$31380$1XGIwa
                    (case-lambda
                      ((g$ls$31591$1XGIwa)
                       (if (null? g$ls$31591$1XGIwa)
                         '()
                         (if (g$memq$19653$1XGIwa
                               (car g$ls$31591$1XGIwa)
                               (cdr g$ls$31591$1XGIwa))
                           (g$remove-dups$31380$1XGIwa
                             (cdr g$ls$31591$1XGIwa))
                           (begin
                             '#f
                             (cons
                               (car g$ls$31591$1XGIwa)
                               (g$remove-dups$31380$1XGIwa
                                 (cdr g$ls$31591$1XGIwa)))))))))
                  (g$parse-library-name$31381$1XGIwa
                    (case-lambda
                      ((g$spec$31475$1XGIwa)
                       (letrec* ((g$subversion?$31476$1XGIwa
                                   (case-lambda
                                     ((g$x$31589$1XGIwa)
                                      ((case-lambda
                                         ((g$x$31590$1XGIwa)
                                          (if (g$integer?$21612$1XGIwa
                                                g$x$31590$1XGIwa)
                                            (if (g$exact?$21607$1XGIwa
                                                  g$x$31590$1XGIwa)
                                              (begin
                                                '#f
                                                (g$>=$21629$1XGIwa
                                                  g$x$31590$1XGIwa
                                                  '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$28879$1XGIwa
                                         g$x$31589$1XGIwa)))))
                                 (g$subversion-pred$31477$1XGIwa
                                   (case-lambda
                                     ((g$x*$31541$1XGIwa)
                                      ((case-lambda
                                         ((g$t$31542$1XGIwa)
                                          ((case-lambda
                                             ((g$ls/false$31543$1XGIwa)
                                              (if (if g$ls/false$31543$1XGIwa
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$31544$1XGIwa)
                                                           (g$subversion?$31476$1XGIwa
                                                             g$n$31544$1XGIwa)))
                                                        g$ls/false$31543$1XGIwa))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$31545$1XGIwa)
                                                     (case-lambda
                                                       ((g$x$31546$1XGIwa)
                                                        (g$=$21625$1XGIwa
                                                          g$x$31546$1XGIwa
                                                          (g$syntax->datum$28879$1XGIwa
                                                            g$n$31545$1XGIwa))))))
                                                  g$ls/false$31543$1XGIwa)
                                                ((case-lambda
                                                   ((g$t$31547$1XGIwa)
                                                    ((case-lambda
                                                       ((g$ls/false$31548$1XGIwa)
                                                        (if (if g$ls/false$31548$1XGIwa
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$31549$1XGIwa
                                                                       g$sub*$31550$1XGIwa)
                                                                     (eq? (g$syntax->datum$28879$1XGIwa
                                                                            g$p?$31549$1XGIwa)
                                                                          'and)))
                                                                  g$ls/false$31548$1XGIwa))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$31551$1XGIwa
                                                                 g$sub*$31552$1XGIwa)
                                                               ((case-lambda
                                                                  ((g$p*$31553$1XGIwa)
                                                                   (case-lambda
                                                                     ((g$x$31554$1XGIwa)
                                                                      (g$for-all$19659$1XGIwa
                                                                        (case-lambda
                                                                          ((g$p$31555$1XGIwa)
                                                                           (g$p$31555$1XGIwa
                                                                             g$x$31554$1XGIwa)))
                                                                        g$p*$31553$1XGIwa)))))
                                                                (g$map$19661$1XGIwa
                                                                  g$subversion-pred$31477$1XGIwa
                                                                  g$sub*$31552$1XGIwa))))
                                                            g$ls/false$31548$1XGIwa)
                                                          ((case-lambda
                                                             ((g$t$31556$1XGIwa)
                                                              ((case-lambda
                                                                 ((g$ls/false$31557$1XGIwa)
                                                                  (if (if g$ls/false$31557$1XGIwa
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$31558$1XGIwa
                                                                                 g$sub*$31559$1XGIwa)
                                                                               (eq? (g$syntax->datum$28879$1XGIwa
                                                                                      g$p?$31558$1XGIwa)
                                                                                    'or)))
                                                                            g$ls/false$31557$1XGIwa))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$31560$1XGIwa
                                                                           g$sub*$31561$1XGIwa)
                                                                         ((case-lambda
                                                                            ((g$p*$31562$1XGIwa)
                                                                             (case-lambda
                                                                               ((g$x$31563$1XGIwa)
                                                                                (g$exists$19660$1XGIwa
                                                                                  (case-lambda
                                                                                    ((g$p$31564$1XGIwa)
                                                                                     (g$p$31564$1XGIwa
                                                                                       g$x$31563$1XGIwa)))
                                                                                  g$p*$31562$1XGIwa)))))
                                                                          (g$map$19661$1XGIwa
                                                                            g$subversion-pred$31477$1XGIwa
                                                                            g$sub*$31561$1XGIwa))))
                                                                      g$ls/false$31557$1XGIwa)
                                                                    ((case-lambda
                                                                       ((g$t$31565$1XGIwa)
                                                                        ((case-lambda
                                                                           ((g$ls/false$31566$1XGIwa)
                                                                            (if (if g$ls/false$31566$1XGIwa
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$31567$1XGIwa
                                                                                           g$sub$31568$1XGIwa)
                                                                                         (eq? (g$syntax->datum$28879$1XGIwa
                                                                                                g$p?$31567$1XGIwa)
                                                                                              'not)))
                                                                                      g$ls/false$31566$1XGIwa))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$31569$1XGIwa
                                                                                     g$sub$31570$1XGIwa)
                                                                                   ((case-lambda
                                                                                      ((g$p$31571$1XGIwa)
                                                                                       (case-lambda
                                                                                         ((g$x$31572$1XGIwa)
                                                                                          (not (g$p$31571$1XGIwa
                                                                                                 g$x$31572$1XGIwa))))))
                                                                                    (g$subversion-pred$31477$1XGIwa
                                                                                      g$sub$31570$1XGIwa))))
                                                                                g$ls/false$31566$1XGIwa)
                                                                              ((case-lambda
                                                                                 ((g$t$31573$1XGIwa)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$31574$1XGIwa)
                                                                                      (if (if g$ls/false$31574$1XGIwa
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$31575$1XGIwa
                                                                                                     g$n$31576$1XGIwa)
                                                                                                   (if (eq? (g$syntax->datum$28879$1XGIwa
                                                                                                              g$p?$31575$1XGIwa)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$31476$1XGIwa
                                                                                                         g$n$31576$1XGIwa))
                                                                                                     '#f)))
                                                                                                g$ls/false$31574$1XGIwa))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$31577$1XGIwa
                                                                                               g$n$31578$1XGIwa)
                                                                                             (case-lambda
                                                                                               ((g$x$31579$1XGIwa)
                                                                                                (g$<=$21627$1XGIwa
                                                                                                  g$x$31579$1XGIwa
                                                                                                  (g$syntax->datum$28879$1XGIwa
                                                                                                    g$n$31578$1XGIwa))))))
                                                                                          g$ls/false$31574$1XGIwa)
                                                                                        ((case-lambda
                                                                                           ((g$t$31580$1XGIwa)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$31581$1XGIwa)
                                                                                                (if (if g$ls/false$31581$1XGIwa
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$31582$1XGIwa
                                                                                                               g$n$31583$1XGIwa)
                                                                                                             (if (eq? (g$syntax->datum$28879$1XGIwa
                                                                                                                        g$p?$31582$1XGIwa)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$31476$1XGIwa
                                                                                                                   g$n$31583$1XGIwa))
                                                                                                               '#f)))
                                                                                                          g$ls/false$31581$1XGIwa))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$31584$1XGIwa
                                                                                                         g$n$31585$1XGIwa)
                                                                                                       (case-lambda
                                                                                                         ((g$x$31586$1XGIwa)
                                                                                                          (g$>=$21629$1XGIwa
                                                                                                            g$x$31586$1XGIwa
                                                                                                            (g$syntax->datum$28879$1XGIwa
                                                                                                              g$n$31585$1XGIwa))))))
                                                                                                    g$ls/false$31581$1XGIwa)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$31587$1XGIwa)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$31588$1XGIwa)
                                                                                                          (if g$ls/false$31588$1XGIwa
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$28876$1XGIwa
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$31475$1XGIwa
                                                                                                                   g$x*$31541$1XGIwa)))
                                                                                                              g$ls/false$31588$1XGIwa)
                                                                                                            (g$syntax-violation$28876$1XGIwa
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$31587$1XGIwa))))
                                                                                                       (g$syntax-dispatch$28757$1XGIwa
                                                                                                         g$t$31587$1XGIwa
                                                                                                         '_))))
                                                                                                   g$t$31580$1XGIwa))))
                                                                                             (g$syntax-dispatch$28757$1XGIwa
                                                                                               g$t$31580$1XGIwa
                                                                                               '(any any)))))
                                                                                         g$t$31573$1XGIwa))))
                                                                                   (g$syntax-dispatch$28757$1XGIwa
                                                                                     g$t$31573$1XGIwa
                                                                                     '(any any)))))
                                                                               g$t$31565$1XGIwa))))
                                                                         (g$syntax-dispatch$28757$1XGIwa
                                                                           g$t$31565$1XGIwa
                                                                           '(any any)))))
                                                                     g$t$31556$1XGIwa))))
                                                               (g$syntax-dispatch$28757$1XGIwa
                                                                 g$t$31556$1XGIwa
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$31547$1XGIwa))))
                                                     (g$syntax-dispatch$28757$1XGIwa
                                                       g$t$31547$1XGIwa
                                                       '(any .
                                                             each-any)))))
                                                 g$t$31542$1XGIwa))))
                                           (g$syntax-dispatch$28757$1XGIwa
                                             g$t$31542$1XGIwa
                                             'any))))
                                       g$x*$31541$1XGIwa))))
                                 (g$version-pred$31478$1XGIwa
                                   (case-lambda
                                     ((g$x*$31501$1XGIwa)
                                      ((case-lambda
                                         ((g$t$31502$1XGIwa)
                                          ((case-lambda
                                             ((g$ls/false$31503$1XGIwa)
                                              (if g$ls/false$31503$1XGIwa
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$31504$1XGIwa)
                                                        '#t))))
                                                  g$ls/false$31503$1XGIwa)
                                                ((case-lambda
                                                   ((g$t$31505$1XGIwa)
                                                    ((case-lambda
                                                       ((g$ls/false$31506$1XGIwa)
                                                        (if (if g$ls/false$31506$1XGIwa
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$31507$1XGIwa
                                                                       g$ver*$31508$1XGIwa)
                                                                     (eq? (g$syntax->datum$28879$1XGIwa
                                                                            g$c$31507$1XGIwa)
                                                                          'and)))
                                                                  g$ls/false$31506$1XGIwa))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$31509$1XGIwa
                                                                 g$ver*$31510$1XGIwa)
                                                               ((case-lambda
                                                                  ((g$p*$31511$1XGIwa)
                                                                   (case-lambda
                                                                     ((g$x$31512$1XGIwa)
                                                                      (g$for-all$19659$1XGIwa
                                                                        (case-lambda
                                                                          ((g$p$31513$1XGIwa)
                                                                           (g$p$31513$1XGIwa
                                                                             g$x$31512$1XGIwa)))
                                                                        g$p*$31511$1XGIwa)))))
                                                                (g$map$19661$1XGIwa
                                                                  g$version-pred$31478$1XGIwa
                                                                  g$ver*$31510$1XGIwa))))
                                                            g$ls/false$31506$1XGIwa)
                                                          ((case-lambda
                                                             ((g$t$31514$1XGIwa)
                                                              ((case-lambda
                                                                 ((g$ls/false$31515$1XGIwa)
                                                                  (if (if g$ls/false$31515$1XGIwa
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$31516$1XGIwa
                                                                                 g$ver*$31517$1XGIwa)
                                                                               (eq? (g$syntax->datum$28879$1XGIwa
                                                                                      g$c$31516$1XGIwa)
                                                                                    'or)))
                                                                            g$ls/false$31515$1XGIwa))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$31518$1XGIwa
                                                                           g$ver*$31519$1XGIwa)
                                                                         ((case-lambda
                                                                            ((g$p*$31520$1XGIwa)
                                                                             (case-lambda
                                                                               ((g$x$31521$1XGIwa)
                                                                                (g$exists$19660$1XGIwa
                                                                                  (case-lambda
                                                                                    ((g$p$31522$1XGIwa)
                                                                                     (g$p$31522$1XGIwa
                                                                                       g$x$31521$1XGIwa)))
                                                                                  g$p*$31520$1XGIwa)))))
                                                                          (g$map$19661$1XGIwa
                                                                            g$version-pred$31478$1XGIwa
                                                                            g$ver*$31519$1XGIwa))))
                                                                      g$ls/false$31515$1XGIwa)
                                                                    ((case-lambda
                                                                       ((g$t$31523$1XGIwa)
                                                                        ((case-lambda
                                                                           ((g$ls/false$31524$1XGIwa)
                                                                            (if (if g$ls/false$31524$1XGIwa
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$31525$1XGIwa
                                                                                           g$ver$31526$1XGIwa)
                                                                                         (eq? (g$syntax->datum$28879$1XGIwa
                                                                                                g$c$31525$1XGIwa)
                                                                                              'not)))
                                                                                      g$ls/false$31524$1XGIwa))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$31527$1XGIwa
                                                                                     g$ver$31528$1XGIwa)
                                                                                   ((case-lambda
                                                                                      ((g$p$31529$1XGIwa)
                                                                                       (case-lambda
                                                                                         ((g$x$31530$1XGIwa)
                                                                                          (not (g$p$31529$1XGIwa
                                                                                                 g$x$31530$1XGIwa))))))
                                                                                    (g$version-pred$31478$1XGIwa
                                                                                      g$ver$31528$1XGIwa))))
                                                                                g$ls/false$31524$1XGIwa)
                                                                              ((case-lambda
                                                                                 ((g$t$31531$1XGIwa)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$31532$1XGIwa)
                                                                                      (if g$ls/false$31532$1XGIwa
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$31533$1XGIwa)
                                                                                             ((case-lambda
                                                                                                ((g$p*$31534$1XGIwa)
                                                                                                 (case-lambda
                                                                                                   ((g$x$31535$1XGIwa)
                                                                                                    ((letrec ((g$f$31536$1XGIwa
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$31537$1XGIwa
                                                                                                                     g$x$31538$1XGIwa)
                                                                                                                   (if (null?
                                                                                                                         g$p*$31537$1XGIwa)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$31538$1XGIwa)
                                                                                                                       '#f
                                                                                                                       (begin
                                                                                                                         '#f
                                                                                                                         (if ((car g$p*$31537$1XGIwa)
                                                                                                                              (car g$x$31538$1XGIwa))
                                                                                                                           (begin
                                                                                                                             '#f
                                                                                                                             (g$f$31536$1XGIwa
                                                                                                                               (cdr g$p*$31537$1XGIwa)
                                                                                                                               (cdr g$x$31538$1XGIwa)))
                                                                                                                           '#f))))))))
                                                                                                       g$f$31536$1XGIwa)
                                                                                                     g$p*$31534$1XGIwa
                                                                                                     g$x$31535$1XGIwa)))))
                                                                                              (g$map$19661$1XGIwa
                                                                                                g$subversion-pred$31477$1XGIwa
                                                                                                g$sub*$31533$1XGIwa))))
                                                                                          g$ls/false$31532$1XGIwa)
                                                                                        ((case-lambda
                                                                                           ((g$t$31539$1XGIwa)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$31540$1XGIwa)
                                                                                                (if g$ls/false$31540$1XGIwa
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$28876$1XGIwa
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$31475$1XGIwa
                                                                                                         g$x*$31501$1XGIwa)))
                                                                                                    g$ls/false$31540$1XGIwa)
                                                                                                  (g$syntax-violation$28876$1XGIwa
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$31539$1XGIwa))))
                                                                                             (g$syntax-dispatch$28757$1XGIwa
                                                                                               g$t$31539$1XGIwa
                                                                                               '_))))
                                                                                         g$t$31531$1XGIwa))))
                                                                                   (g$syntax-dispatch$28757$1XGIwa
                                                                                     g$t$31531$1XGIwa
                                                                                     'each-any))))
                                                                               g$t$31523$1XGIwa))))
                                                                         (g$syntax-dispatch$28757$1XGIwa
                                                                           g$t$31523$1XGIwa
                                                                           '(any any)))))
                                                                     g$t$31514$1XGIwa))))
                                                               (g$syntax-dispatch$28757$1XGIwa
                                                                 g$t$31514$1XGIwa
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$31505$1XGIwa))))
                                                     (g$syntax-dispatch$28757$1XGIwa
                                                       g$t$31505$1XGIwa
                                                       '(any .
                                                             each-any)))))
                                                 g$t$31502$1XGIwa))))
                                           (g$syntax-dispatch$28757$1XGIwa
                                             g$t$31502$1XGIwa
                                             '()))))
                                       g$x*$31501$1XGIwa)))))
                         ((letrec ((g$f$31479$1XGIwa
                                     (case-lambda
                                       ((g$x$31480$1XGIwa)
                                        ((case-lambda
                                           ((g$t$31481$1XGIwa)
                                            ((case-lambda
                                               ((g$ls/false$31482$1XGIwa)
                                                (if g$ls/false$31482$1XGIwa
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$31483$1XGIwa)
                                                       (values
                                                         '()
                                                         (g$version-pred$31478$1XGIwa
                                                           g$version-spec*$31483$1XGIwa))))
                                                    g$ls/false$31482$1XGIwa)
                                                  ((case-lambda
                                                     ((g$t$31484$1XGIwa)
                                                      ((case-lambda
                                                         ((g$ls/false$31485$1XGIwa)
                                                          (if (if g$ls/false$31485$1XGIwa
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$31486$1XGIwa
                                                                         g$x*$31487$1XGIwa)
                                                                       (g$idsyn?$31374$1XGIwa
                                                                         g$x$31486$1XGIwa)))
                                                                    g$ls/false$31485$1XGIwa))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$31488$1XGIwa
                                                                   g$x*$31489$1XGIwa)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$31479$1XGIwa
                                                                        g$x*$31489$1XGIwa)))
                                                                   (case-lambda
                                                                     ((g$name$31492$1XGIwa
                                                                        g$pred$31493$1XGIwa)
                                                                      ((case-lambda
                                                                         ((g$pred$31494$1XGIwa
                                                                            g$name$31495$1XGIwa)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$28879$1XGIwa
                                                                                g$x$31488$1XGIwa)
                                                                              g$name$31495$1XGIwa)
                                                                            g$pred$31494$1XGIwa)))
                                                                       g$pred$31493$1XGIwa
                                                                       g$name$31492$1XGIwa))))))
                                                              g$ls/false$31485$1XGIwa)
                                                            ((case-lambda
                                                               ((g$t$31496$1XGIwa)
                                                                ((case-lambda
                                                                   ((g$ls/false$31497$1XGIwa)
                                                                    (if g$ls/false$31497$1XGIwa
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$31498$1XGIwa)
                                                                                '#t)))))
                                                                        g$ls/false$31497$1XGIwa)
                                                                      ((case-lambda
                                                                         ((g$t$31499$1XGIwa)
                                                                          ((case-lambda
                                                                             ((g$ls/false$31500$1XGIwa)
                                                                              (if g$ls/false$31500$1XGIwa
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$28876$1XGIwa
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$31475$1XGIwa)))
                                                                                  g$ls/false$31500$1XGIwa)
                                                                                (g$syntax-violation$28876$1XGIwa
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$31499$1XGIwa))))
                                                                           (g$syntax-dispatch$28757$1XGIwa
                                                                             g$t$31499$1XGIwa
                                                                             '_))))
                                                                       g$t$31496$1XGIwa))))
                                                                 (g$syntax-dispatch$28757$1XGIwa
                                                                   g$t$31496$1XGIwa
                                                                   '()))))
                                                             g$t$31484$1XGIwa))))
                                                       (g$syntax-dispatch$28757$1XGIwa
                                                         g$t$31484$1XGIwa
                                                         '(any .
                                                               any)))))
                                                   g$t$31481$1XGIwa))))
                                             (g$syntax-dispatch$28757$1XGIwa
                                               g$t$31481$1XGIwa
                                               '(each-any)))))
                                         g$x$31480$1XGIwa)))))
                            g$f$31479$1XGIwa)
                          g$spec$31475$1XGIwa)))))
                  (g$import-library$31382$1XGIwa
                    (case-lambda
                      ((g$spec*$31467$1XGIwa)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$31381$1XGIwa
                              g$spec*$31467$1XGIwa)))
                         (case-lambda
                           ((g$name$31470$1XGIwa g$pred$31471$1XGIwa)
                            ((case-lambda
                               ((g$pred$31472$1XGIwa
                                  g$name$31473$1XGIwa)
                                (begin
                                  (if (null? g$name$31473$1XGIwa)
                                    (g$syntax-violation$28876$1XGIwa
                                      'import
                                      '"empty library name"
                                      g$spec*$31467$1XGIwa)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$31474$1XGIwa)
                                      (begin
                                        (if (not g$lib$31474$1XGIwa)
                                          (g$syntax-violation$28876$1XGIwa
                                            'import
                                            '"cannot find library with required name"
                                            g$name$31473$1XGIwa)
                                          (void))
                                        (if (not (g$pred$31472$1XGIwa
                                                   (g$library-version$27918$1XGIwa
                                                     g$lib$31474$1XGIwa)))
                                          (g$syntax-violation$28876$1XGIwa
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$31467$1XGIwa
                                            g$lib$31474$1XGIwa)
                                          (void))
                                        ((g$imp-collector$28814$1XGIwa)
                                         g$lib$31474$1XGIwa)
                                        (g$library-subst$27922$1XGIwa
                                          g$lib$31474$1XGIwa))))
                                   (g$find-library-by-name$27958$1XGIwa
                                     g$name$31473$1XGIwa)))))
                             g$pred$31471$1XGIwa
                             g$name$31470$1XGIwa)))))))
                  (g$get-import$31383$1XGIwa
                    (case-lambda
                      ((g$spec$31396$1XGIwa)
                       ((case-lambda
                          ((g$t$31397$1XGIwa)
                           ((case-lambda
                              ((g$ls/false$31398$1XGIwa)
                               (if (if g$ls/false$31398$1XGIwa
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$31399$1XGIwa
                                              g$x*$31400$1XGIwa)
                                            (not (g$memq$19653$1XGIwa
                                                   (g$syntax->datum$28879$1XGIwa
                                                     g$x$31399$1XGIwa)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$31398$1XGIwa))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$31401$1XGIwa
                                        g$x*$31402$1XGIwa)
                                      (g$import-library$31382$1XGIwa
                                        (cons
                                          g$x$31401$1XGIwa
                                          g$x*$31402$1XGIwa))))
                                   g$ls/false$31398$1XGIwa)
                                 ((case-lambda
                                    ((g$t$31403$1XGIwa)
                                     ((case-lambda
                                        ((g$ls/false$31404$1XGIwa)
                                         (if (if g$ls/false$31404$1XGIwa
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$31405$1XGIwa
                                                        g$isp$31406$1XGIwa
                                                        g$old*$31407$1XGIwa
                                                        g$new*$31408$1XGIwa)
                                                      (if (eq? (g$syntax->datum$28879$1XGIwa
                                                                 g$rename$31405$1XGIwa)
                                                               'rename)
                                                        (if (g$for-all$19659$1XGIwa
                                                              g$idsyn?$31374$1XGIwa
                                                              g$old*$31407$1XGIwa)
                                                          (begin
                                                            '#f
                                                            (g$for-all$19659$1XGIwa
                                                              g$idsyn?$31374$1XGIwa
                                                              g$new*$31408$1XGIwa))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$31404$1XGIwa))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$31409$1XGIwa
                                                  g$isp$31410$1XGIwa
                                                  g$old*$31411$1XGIwa
                                                  g$new*$31412$1XGIwa)
                                                ((case-lambda
                                                   ((g$subst$31413$1XGIwa
                                                      g$old*$31414$1XGIwa
                                                      g$new*$31415$1XGIwa)
                                                    ((case-lambda
                                                       ((g$old-label*$31416$1XGIwa)
                                                        ((case-lambda
                                                           ((g$subst$31417$1XGIwa)
                                                            (g$merge-substs$31376$1XGIwa
                                                              (g$map$19661$1XGIwa
                                                                cons
                                                                g$new*$31415$1XGIwa
                                                                g$old-label*$31416$1XGIwa)
                                                              g$subst$31417$1XGIwa)))
                                                         (g$rem*$31379$1XGIwa
                                                           g$old*$31414$1XGIwa
                                                           g$subst$31413$1XGIwa))))
                                                     (g$find*$31378$1XGIwa
                                                       g$old*$31414$1XGIwa
                                                       g$subst$31413$1XGIwa))))
                                                 (g$get-import$31383$1XGIwa
                                                   g$isp$31410$1XGIwa)
                                                 (g$map$19661$1XGIwa
                                                   g$syntax->datum$28879$1XGIwa
                                                   g$old*$31411$1XGIwa)
                                                 (g$map$19661$1XGIwa
                                                   g$syntax->datum$28879$1XGIwa
                                                   g$new*$31412$1XGIwa))))
                                             g$ls/false$31404$1XGIwa)
                                           ((case-lambda
                                              ((g$t$31418$1XGIwa)
                                               ((case-lambda
                                                  ((g$ls/false$31419$1XGIwa)
                                                   (if (if g$ls/false$31419$1XGIwa
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$31420$1XGIwa
                                                                  g$isp$31421$1XGIwa
                                                                  g$sym*$31422$1XGIwa)
                                                                (if (eq? (g$syntax->datum$28879$1XGIwa
                                                                           g$except$31420$1XGIwa)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$19659$1XGIwa
                                                                      g$idsyn?$31374$1XGIwa
                                                                      g$sym*$31422$1XGIwa))
                                                                  '#f)))
                                                             g$ls/false$31419$1XGIwa))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$31423$1XGIwa
                                                            g$isp$31424$1XGIwa
                                                            g$sym*$31425$1XGIwa)
                                                          ((case-lambda
                                                             ((g$subst$31426$1XGIwa)
                                                              (g$rem*$31379$1XGIwa
                                                                (g$map$19661$1XGIwa
                                                                  g$syntax->datum$28879$1XGIwa
                                                                  g$sym*$31425$1XGIwa)
                                                                g$subst$31426$1XGIwa)))
                                                           (g$get-import$31383$1XGIwa
                                                             g$isp$31424$1XGIwa))))
                                                       g$ls/false$31419$1XGIwa)
                                                     ((case-lambda
                                                        ((g$t$31427$1XGIwa)
                                                         ((case-lambda
                                                            ((g$ls/false$31428$1XGIwa)
                                                             (if (if g$ls/false$31428$1XGIwa
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$31429$1XGIwa
                                                                            g$isp$31430$1XGIwa
                                                                            g$sym*$31431$1XGIwa)
                                                                          (if (eq? (g$syntax->datum$28879$1XGIwa
                                                                                     g$only$31429$1XGIwa)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$19659$1XGIwa
                                                                                g$idsyn?$31374$1XGIwa
                                                                                g$sym*$31431$1XGIwa))
                                                                            '#f)))
                                                                       g$ls/false$31428$1XGIwa))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$31432$1XGIwa
                                                                      g$isp$31433$1XGIwa
                                                                      g$sym*$31434$1XGIwa)
                                                                    ((case-lambda
                                                                       ((g$subst$31435$1XGIwa
                                                                          g$sym*$31436$1XGIwa)
                                                                        ((case-lambda
                                                                           ((g$sym*$31437$1XGIwa)
                                                                            ((case-lambda
                                                                               ((g$lab*$31438$1XGIwa)
                                                                                (g$map$19661$1XGIwa
                                                                                  cons
                                                                                  g$sym*$31437$1XGIwa
                                                                                  g$lab*$31438$1XGIwa)))
                                                                             (g$find*$31378$1XGIwa
                                                                               g$sym*$31437$1XGIwa
                                                                               g$subst$31435$1XGIwa))))
                                                                         (g$remove-dups$31380$1XGIwa
                                                                           g$sym*$31436$1XGIwa))))
                                                                     (g$get-import$31383$1XGIwa
                                                                       g$isp$31433$1XGIwa)
                                                                     (g$map$19661$1XGIwa
                                                                       g$syntax->datum$28879$1XGIwa
                                                                       g$sym*$31434$1XGIwa))))
                                                                 g$ls/false$31428$1XGIwa)
                                                               ((case-lambda
                                                                  ((g$t$31439$1XGIwa)
                                                                   ((case-lambda
                                                                      ((g$ls/false$31440$1XGIwa)
                                                                       (if (if g$ls/false$31440$1XGIwa
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$31441$1XGIwa
                                                                                      g$isp$31442$1XGIwa
                                                                                      g$p$31443$1XGIwa)
                                                                                    (if (eq? (g$syntax->datum$28879$1XGIwa
                                                                                               g$prefix$31441$1XGIwa)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$31374$1XGIwa
                                                                                          g$p$31443$1XGIwa))
                                                                                      '#f)))
                                                                                 g$ls/false$31440$1XGIwa))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$31444$1XGIwa
                                                                                g$isp$31445$1XGIwa
                                                                                g$p$31446$1XGIwa)
                                                                              ((case-lambda
                                                                                 ((g$subst$31447$1XGIwa
                                                                                    g$prefix$31448$1XGIwa)
                                                                                  (g$map$19661$1XGIwa
                                                                                    (case-lambda
                                                                                      ((g$x$31449$1XGIwa)
                                                                                       (cons
                                                                                         (g$string->symbol$20594$1XGIwa
                                                                                           (g$string-append$20591$1XGIwa
                                                                                             g$prefix$31448$1XGIwa
                                                                                             (g$symbol->string$20593$1XGIwa
                                                                                               (car g$x$31449$1XGIwa))))
                                                                                         (cdr g$x$31449$1XGIwa))))
                                                                                    g$subst$31447$1XGIwa)))
                                                                               (g$get-import$31383$1XGIwa
                                                                                 g$isp$31445$1XGIwa)
                                                                               (g$symbol->string$20593$1XGIwa
                                                                                 (g$syntax->datum$28879$1XGIwa
                                                                                   g$p$31446$1XGIwa)))))
                                                                           g$ls/false$31440$1XGIwa)
                                                                         ((case-lambda
                                                                            ((g$t$31450$1XGIwa)
                                                                             ((case-lambda
                                                                                ((g$ls/false$31451$1XGIwa)
                                                                                 (if (if g$ls/false$31451$1XGIwa
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$31452$1XGIwa
                                                                                                g$spec*$31453$1XGIwa)
                                                                                              (eq? (g$syntax->datum$28879$1XGIwa
                                                                                                     g$library$31452$1XGIwa)
                                                                                                   'library)))
                                                                                           g$ls/false$31451$1XGIwa))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$31454$1XGIwa
                                                                                          g$spec*$31455$1XGIwa)
                                                                                        (g$import-library$31382$1XGIwa
                                                                                          g$spec*$31455$1XGIwa)))
                                                                                     g$ls/false$31451$1XGIwa)
                                                                                   ((case-lambda
                                                                                      ((g$t$31456$1XGIwa)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$31457$1XGIwa)
                                                                                           (if (if g$ls/false$31457$1XGIwa
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$31458$1XGIwa
                                                                                                          g$isp$31459$1XGIwa
                                                                                                          g$rest$31460$1XGIwa)
                                                                                                        (eq? (g$syntax->datum$28879$1XGIwa
                                                                                                               g$for$31458$1XGIwa)
                                                                                                             'for)))
                                                                                                     g$ls/false$31457$1XGIwa))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$31461$1XGIwa
                                                                                                    g$isp$31462$1XGIwa
                                                                                                    g$rest$31463$1XGIwa)
                                                                                                  (g$get-import$31383$1XGIwa
                                                                                                    g$isp$31462$1XGIwa)))
                                                                                               g$ls/false$31457$1XGIwa)
                                                                                             ((case-lambda
                                                                                                ((g$t$31464$1XGIwa)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$31465$1XGIwa)
                                                                                                     (if g$ls/false$31465$1XGIwa
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$31466$1XGIwa)
                                                                                                            (g$syntax-violation$28876$1XGIwa
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$31466$1XGIwa)))
                                                                                                         g$ls/false$31465$1XGIwa)
                                                                                                       (g$syntax-violation$28876$1XGIwa
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$31464$1XGIwa))))
                                                                                                  (g$syntax-dispatch$28757$1XGIwa
                                                                                                    g$t$31464$1XGIwa
                                                                                                    'any))))
                                                                                              g$t$31456$1XGIwa))))
                                                                                        (g$syntax-dispatch$28757$1XGIwa
                                                                                          g$t$31456$1XGIwa
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$31450$1XGIwa))))
                                                                              (g$syntax-dispatch$28757$1XGIwa
                                                                                g$t$31450$1XGIwa
                                                                                '(any each-any)))))
                                                                          g$t$31439$1XGIwa))))
                                                                    (g$syntax-dispatch$28757$1XGIwa
                                                                      g$t$31439$1XGIwa
                                                                      '(any any
                                                                            any)))))
                                                                g$t$31427$1XGIwa))))
                                                          (g$syntax-dispatch$28757$1XGIwa
                                                            g$t$31427$1XGIwa
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$31418$1XGIwa))))
                                                (g$syntax-dispatch$28757$1XGIwa
                                                  g$t$31418$1XGIwa
                                                  '(any any
                                                        .
                                                        each-any)))))
                                            g$t$31403$1XGIwa))))
                                      (g$syntax-dispatch$28757$1XGIwa
                                        g$t$31403$1XGIwa
                                        '(any any
                                              .
                                              #(each (any any)))))))
                                  g$t$31397$1XGIwa))))
                            (g$syntax-dispatch$28757$1XGIwa
                              g$t$31397$1XGIwa
                              '(any . each-any)))))
                        g$spec$31396$1XGIwa))))
                  (g$add-imports!$31384$1XGIwa
                    (case-lambda
                      ((g$imp$31388$1XGIwa g$h$31389$1XGIwa)
                       ((case-lambda
                          ((g$subst$31390$1XGIwa)
                           (g$for-each$19662$1XGIwa
                             (case-lambda
                               ((g$x$31391$1XGIwa)
                                ((case-lambda
                                   ((g$name$31392$1XGIwa
                                      g$label$31393$1XGIwa)
                                    ((case-lambda
                                       ((g$t$31394$1XGIwa)
                                        (if g$t$31394$1XGIwa
                                          ((case-lambda
                                             ((g$l$31395$1XGIwa)
                                              (if (not (eq? g$l$31395$1XGIwa
                                                            g$label$31393$1XGIwa))
                                                (g$dup-error$31375$1XGIwa
                                                  g$name$31392$1XGIwa)
                                                (void))))
                                           g$t$31394$1XGIwa)
                                          (begin
                                            '#f
                                            (g$hashtable-set!$20716$1XGIwa
                                              g$h$31389$1XGIwa
                                              g$name$31392$1XGIwa
                                              g$label$31393$1XGIwa)))))
                                     (g$hashtable-ref$20715$1XGIwa
                                       g$h$31389$1XGIwa
                                       g$name$31392$1XGIwa
                                       '#f))))
                                 (car g$x$31391$1XGIwa)
                                 (cdr g$x$31391$1XGIwa))))
                             g$subst$31390$1XGIwa)))
                        (g$get-import$31383$1XGIwa
                          g$imp$31388$1XGIwa))))))
          ((letrec ((g$f$31385$1XGIwa
                      (case-lambda
                        ((g$imp*$31386$1XGIwa g$h$31387$1XGIwa)
                         (if (null? g$imp*$31386$1XGIwa)
                           (hashtable-entries g$h$31387$1XGIwa)
                           (begin
                             '#f
                             (g$add-imports!$31384$1XGIwa
                               (car g$imp*$31386$1XGIwa)
                               g$h$31387$1XGIwa)
                             (g$f$31385$1XGIwa
                               (cdr g$imp*$31386$1XGIwa)
                               g$h$31387$1XGIwa)))))))
             g$f$31385$1XGIwa)
           g$imp*$31373$1XGIwa
           (g$make-eq-hashtable$20712$1XGIwa))))))
   (g$make-top-rib$28810$1XGIwa
     g$make-top-rib$32403$1XGIwa
     (case-lambda
       ((g$names$31635$1XGIwa g$labels$31636$1XGIwa)
        ((case-lambda
           ((g$rib$31637$1XGIwa)
            (begin
              (g$vector-for-each$20664$1XGIwa
                (case-lambda
                  ((g$name$31638$1XGIwa g$label$31639$1XGIwa)
                   (begin
                     (if (not (g$symbol?$20573$1XGIwa
                                g$name$31638$1XGIwa))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$31638$1XGIwa)
                       (void))
                     (g$extend-rib/nc!$28221$1XGIwa
                       g$rib$31637$1XGIwa
                       (g$make-stx$28232$1XGIwa
                         g$name$31638$1XGIwa
                         g$top-mark*$28192$1XGIwa
                         '()
                         '())
                       g$label$31639$1XGIwa))))
                g$names$31635$1XGIwa
                g$labels$31636$1XGIwa)
              g$rib$31637$1XGIwa)))
         (g$make-cache-rib$28218$1XGIwa)))))
   (g$make-collector$28811$1XGIwa
     g$make-collector$32404$1XGIwa
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$31640$1XGIwa)
            (case-lambda
              (() g$ls$31640$1XGIwa)
              ((g$x$31641$1XGIwa)
               (set! g$ls$31640$1XGIwa
                 (g$set-cons$28189$1XGIwa
                   g$x$31641$1XGIwa
                   g$ls$31640$1XGIwa))))))
         '()))))
   (g$inv-collector$28812$1XGIwa
     g$inv-collector$32405$1XGIwa
     (g$make-parameter$27100$1XGIwa
       (case-lambda
         (g$args$31642$1XGIwa
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$31643$1XGIwa)
          (begin
            (if (not (g$procedure?$20575$1XGIwa g$x$31643$1XGIwa))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$31643$1XGIwa)
              (void))
            g$x$31643$1XGIwa)))))
   (g$vis-collector$28813$1XGIwa
     g$vis-collector$32406$1XGIwa
     (g$make-parameter$27100$1XGIwa
       (case-lambda
         (g$args$31644$1XGIwa
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$31645$1XGIwa)
          (begin
            (if (not (g$procedure?$20575$1XGIwa g$x$31645$1XGIwa))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$31645$1XGIwa)
              (void))
            g$x$31645$1XGIwa)))))
   (g$imp-collector$28814$1XGIwa
     g$imp-collector$32407$1XGIwa
     (g$make-parameter$27100$1XGIwa
       (case-lambda
         (g$args$31646$1XGIwa
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$31647$1XGIwa)
          (begin
            (if (not (g$procedure?$20575$1XGIwa g$x$31647$1XGIwa))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$31647$1XGIwa)
              (void))
            g$x$31647$1XGIwa)))))
   (g$chi-library-internal$28815$1XGIwa
     g$chi-library-internal$32408$1XGIwa
     (case-lambda
       ((g$e*$31648$1XGIwa g$rib$31649$1XGIwa g$mix?$31650$1XGIwa)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$28804$1XGIwa
               g$e*$31648$1XGIwa
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$31649$1XGIwa
               g$mix?$31650$1XGIwa
               '#t)))
          (case-lambda
            ((g$e*$31659$1XGIwa
               g$r$31660$1XGIwa
               g$mr$31661$1XGIwa
               g$lex*$31662$1XGIwa
               g$rhs*$31663$1XGIwa
               g$mod**$31664$1XGIwa
               g$_kwd*$31665$1XGIwa
               g$exp*$31666$1XGIwa)
             ((case-lambda
                ((g$exp*$31667$1XGIwa
                   g$_kwd*$31668$1XGIwa
                   g$mod**$31669$1XGIwa
                   g$rhs*$31670$1XGIwa
                   g$lex*$31671$1XGIwa
                   g$mr$31672$1XGIwa
                   g$r$31673$1XGIwa
                   g$e*$31674$1XGIwa)
                 (values
                   (append
                     (apply
                       append
                       (g$reverse$20609$1XGIwa g$mod**$31669$1XGIwa))
                     g$e*$31674$1XGIwa)
                   g$r$31673$1XGIwa
                   g$mr$31672$1XGIwa
                   (g$reverse$20609$1XGIwa g$lex*$31671$1XGIwa)
                   (g$reverse$20609$1XGIwa g$rhs*$31670$1XGIwa)
                   g$exp*$31667$1XGIwa)))
              g$exp*$31666$1XGIwa
              g$_kwd*$31665$1XGIwa
              g$mod**$31664$1XGIwa
              g$rhs*$31663$1XGIwa
              g$lex*$31662$1XGIwa
              g$mr$31661$1XGIwa
              g$r$31660$1XGIwa
              g$e*$31659$1XGIwa)))))))
   (g$chi-interaction-expr$28816$1XGIwa
     g$chi-interaction-expr$32409$1XGIwa
     (case-lambda
       ((g$e$31675$1XGIwa g$rib$31676$1XGIwa g$r$31677$1XGIwa)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$28804$1XGIwa
               (list g$e$31675$1XGIwa)
               g$r$31677$1XGIwa
               g$r$31677$1XGIwa
               '()
               '()
               '()
               '()
               '()
               g$rib$31676$1XGIwa
               '#t
               '#f)))
          (case-lambda
            ((g$e*$31686$1XGIwa
               g$r$31687$1XGIwa
               g$mr$31688$1XGIwa
               g$lex*$31689$1XGIwa
               g$rhs*$31690$1XGIwa
               g$mod**$31691$1XGIwa
               g$_kwd*$31692$1XGIwa
               g$_exp*$31693$1XGIwa)
             ((case-lambda
                ((g$_exp*$31694$1XGIwa
                   g$_kwd*$31695$1XGIwa
                   g$mod**$31696$1XGIwa
                   g$rhs*$31697$1XGIwa
                   g$lex*$31698$1XGIwa
                   g$mr$31699$1XGIwa
                   g$r$31700$1XGIwa
                   g$e*$31701$1XGIwa)
                 ((case-lambda
                    ((g$e*$31702$1XGIwa)
                     ((case-lambda
                        ((g$e$31703$1XGIwa)
                         (values g$e$31703$1XGIwa g$r$31700$1XGIwa)))
                      (if (null? g$e*$31702$1XGIwa)
                        (g$build-void$28185$1XGIwa)
                        (if (null? (cdr g$e*$31702$1XGIwa))
                          (car g$e*$31702$1XGIwa)
                          (begin
                            '#f
                            (g$build-sequence$28184$1XGIwa
                              '#f
                              g$e*$31702$1XGIwa)))))))
                  (g$expand-interaction-rhs*/init*$28782$1XGIwa
                    (g$reverse$20609$1XGIwa g$lex*$31698$1XGIwa)
                    (g$reverse$20609$1XGIwa g$rhs*$31697$1XGIwa)
                    (append
                      (apply
                        append
                        (g$reverse$20609$1XGIwa g$mod**$31696$1XGIwa))
                      g$e*$31701$1XGIwa)
                    g$r$31700$1XGIwa
                    g$mr$31699$1XGIwa))))
              g$_exp*$31693$1XGIwa
              g$_kwd*$31692$1XGIwa
              g$mod**$31691$1XGIwa
              g$rhs*$31690$1XGIwa
              g$lex*$31689$1XGIwa
              g$mr$31688$1XGIwa
              g$r$31687$1XGIwa
              g$e*$31686$1XGIwa)))))))
   (g$library-body-expander$28817$1XGIwa
     g$library-body-expander$32410$1XGIwa
     (case-lambda
       ((g$name$31704$1XGIwa
          g$main-exp*$31705$1XGIwa
          g$imp*$31706$1XGIwa
          g$b*$31707$1XGIwa
          g$mix?$31708$1XGIwa)
        (letrec* ((g$itc$31709$1XGIwa (g$make-collector$28811$1XGIwa)))
          ((case-lambda
             ((g$imp-collector$31714$1XGIwa
                g$top-level-context$31715$1XGIwa
                g$imp-collector$31716$1XGIwa
                g$top-level-context$31717$1XGIwa)
              ((case-lambda
                 ((g$swap$31718$1XGIwa)
                  (dynamic-wind
                    g$swap$31718$1XGIwa
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$28809$1XGIwa
                              g$imp*$31706$1XGIwa)))
                         (case-lambda
                           ((g$subst-names$31721$1XGIwa
                              g$subst-labels$31722$1XGIwa)
                            ((case-lambda
                               ((g$subst-labels$31723$1XGIwa
                                  g$subst-names$31724$1XGIwa)
                                ((case-lambda
                                   ((g$rib$31725$1XGIwa)
                                    (letrec* ((g$wrap$31726$1XGIwa
                                                (case-lambda
                                                  ((g$x$31788$1XGIwa)
                                                   (g$make-stx$28232$1XGIwa
                                                     g$x$31788$1XGIwa
                                                     g$top-mark*$28192$1XGIwa
                                                     (list
                                                       g$rib$31725$1XGIwa)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$31727$1XGIwa
                                            g$main-exp*$31728$1XGIwa
                                            g$rtc$31729$1XGIwa
                                            g$vtc$31730$1XGIwa)
                                          ((case-lambda
                                             ((g$inv-collector$31735$1XGIwa
                                                g$vis-collector$31736$1XGIwa
                                                g$inv-collector$31737$1XGIwa
                                                g$vis-collector$31738$1XGIwa)
                                              ((case-lambda
                                                 ((g$swap$31739$1XGIwa)
                                                  (dynamic-wind
                                                    g$swap$31739$1XGIwa
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$28815$1XGIwa
                                                              g$b*$31727$1XGIwa
                                                              g$rib$31725$1XGIwa
                                                              g$mix?$31708$1XGIwa)))
                                                         (case-lambda
                                                           ((g$init*$31746$1XGIwa
                                                              g$r$31747$1XGIwa
                                                              g$mr$31748$1XGIwa
                                                              g$lex*$31749$1XGIwa
                                                              g$rhs*$31750$1XGIwa
                                                              g$internal-exp*$31751$1XGIwa)
                                                            ((case-lambda
                                                               ((g$internal-exp*$31752$1XGIwa
                                                                  g$rhs*$31753$1XGIwa
                                                                  g$lex*$31754$1XGIwa
                                                                  g$mr$31755$1XGIwa
                                                                  g$r$31756$1XGIwa
                                                                  g$init*$31757$1XGIwa)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$28806$1XGIwa
                                                                       (append
                                                                         g$main-exp*$31728$1XGIwa
                                                                         g$internal-exp*$31752$1XGIwa))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$31760$1XGIwa
                                                                       g$exp-id*$31761$1XGIwa)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$31762$1XGIwa
                                                                           g$exp-name*$31763$1XGIwa)
                                                                         (begin
                                                                           (g$seal-rib!$28223$1XGIwa
                                                                             g$rib$31725$1XGIwa)
                                                                           ((case-lambda
                                                                              ((g$init*$31764$1XGIwa)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$31765$1XGIwa)
                                                                                   (begin
                                                                                     (g$unseal-rib!$28224$1XGIwa
                                                                                       g$rib$31725$1XGIwa)
                                                                                     ((case-lambda
                                                                                        ((g$loc*$31766$1XGIwa
                                                                                           g$export-subst$31767$1XGIwa)
                                                                                         (letrec* ((g$errstr$31768$1XGIwa
                                                                                                     '"attempt to export mutated variable"))
                                                                                           (call-with-values
                                                                                             (case-lambda
                                                                                               (()
                                                                                                (g$make-export-env/macros$28865$1XGIwa
                                                                                                  g$lex*$31754$1XGIwa
                                                                                                  g$loc*$31766$1XGIwa
                                                                                                  g$r$31756$1XGIwa)))
                                                                                             (case-lambda
                                                                                               ((g$export-env$31772$1XGIwa
                                                                                                  g$global*$31773$1XGIwa
                                                                                                  g$macro*$31774$1XGIwa)
                                                                                                ((case-lambda
                                                                                                   ((g$macro*$31775$1XGIwa
                                                                                                      g$global*$31776$1XGIwa
                                                                                                      g$export-env$31777$1XGIwa)
                                                                                                    (begin
                                                                                                      (g$for-each$19662$1XGIwa
                                                                                                        (case-lambda
                                                                                                          ((g$s$31778$1XGIwa)
                                                                                                           ((case-lambda
                                                                                                              ((g$name$31779$1XGIwa
                                                                                                                 g$label$31780$1XGIwa)
                                                                                                               ((case-lambda
                                                                                                                  ((g$p$31781$1XGIwa)
                                                                                                                   (if g$p$31781$1XGIwa
                                                                                                                     ((case-lambda
                                                                                                                        ((g$b$31782$1XGIwa)
                                                                                                                         ((case-lambda
                                                                                                                            ((g$type$31783$1XGIwa)
                                                                                                                             (if (eq? g$type$31783$1XGIwa
                                                                                                                                      'mutable)
                                                                                                                               (g$syntax-violation$28876$1XGIwa
                                                                                                                                 'export
                                                                                                                                 g$errstr$31768$1XGIwa
                                                                                                                                 g$name$31779$1XGIwa)
                                                                                                                               (void))))
                                                                                                                          (car g$b$31782$1XGIwa))))
                                                                                                                      (cdr g$p$31781$1XGIwa))
                                                                                                                     (void))))
                                                                                                                (g$assq$19649$1XGIwa
                                                                                                                  g$label$31780$1XGIwa
                                                                                                                  g$export-env$31777$1XGIwa))))
                                                                                                            (car g$s$31778$1XGIwa)
                                                                                                            (cdr g$s$31778$1XGIwa))))
                                                                                                        g$export-subst$31767$1XGIwa)
                                                                                                      ((case-lambda
                                                                                                         ((g$invoke-body$31784$1XGIwa
                                                                                                            g$invoke-definitions$31785$1XGIwa)
                                                                                                          (values
                                                                                                            (g$itc$31709$1XGIwa)
                                                                                                            (g$rtc$31729$1XGIwa)
                                                                                                            (g$vtc$31730$1XGIwa)
                                                                                                            (g$build-sequence$28184$1XGIwa
                                                                                                              '#f
                                                                                                              (append
                                                                                                                g$invoke-definitions$31785$1XGIwa
                                                                                                                (list
                                                                                                                  g$invoke-body$31784$1XGIwa)))
                                                                                                            g$macro*$31775$1XGIwa
                                                                                                            g$export-subst$31767$1XGIwa
                                                                                                            g$export-env$31777$1XGIwa)))
                                                                                                       (g$build-library-letrec*$28188$1XGIwa
                                                                                                         '#f
                                                                                                         g$name$31704$1XGIwa
                                                                                                         g$lex*$31754$1XGIwa
                                                                                                         g$loc*$31766$1XGIwa
                                                                                                         g$rhs*$31765$1XGIwa
                                                                                                         (if (null?
                                                                                                               g$init*$31764$1XGIwa)
                                                                                                           (g$build-void$28185$1XGIwa)
                                                                                                           (g$build-sequence$28184$1XGIwa
                                                                                                             '#f
                                                                                                             g$init*$31764$1XGIwa)))
                                                                                                       (g$map$19661$1XGIwa
                                                                                                         g$build-global-define$28180$1XGIwa
                                                                                                         (g$map$19661$1XGIwa
                                                                                                           cdr
                                                                                                           g$global*$31776$1XGIwa))))))
                                                                                                 g$macro*$31774$1XGIwa
                                                                                                 g$global*$31773$1XGIwa
                                                                                                 g$export-env$31772$1XGIwa)))))))
                                                                                      (g$map$19661$1XGIwa
                                                                                        g$gen-global$28195$1XGIwa
                                                                                        g$lex*$31754$1XGIwa)
                                                                                      (g$make-export-subst$28864$1XGIwa
                                                                                        g$exp-name*$31763$1XGIwa
                                                                                        g$exp-id*$31762$1XGIwa)))))
                                                                                (g$chi-rhs*$28783$1XGIwa
                                                                                  g$rhs*$31753$1XGIwa
                                                                                  g$r$31756$1XGIwa
                                                                                  g$mr$31755$1XGIwa))))
                                                                            (g$chi-expr*$28773$1XGIwa
                                                                              g$init*$31757$1XGIwa
                                                                              g$r$31756$1XGIwa
                                                                              g$mr$31755$1XGIwa)))))
                                                                      g$exp-id*$31761$1XGIwa
                                                                      g$exp-name*$31760$1XGIwa))))))
                                                             g$internal-exp*$31751$1XGIwa
                                                             g$rhs*$31750$1XGIwa
                                                             g$lex*$31749$1XGIwa
                                                             g$mr$31748$1XGIwa
                                                             g$r$31747$1XGIwa
                                                             g$init*$31746$1XGIwa))))))
                                                    g$swap$31739$1XGIwa)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$31786$1XGIwa)
                                                        (begin
                                                          (g$inv-collector$31735$1XGIwa
                                                            g$inv-collector$31737$1XGIwa)
                                                          (set! g$inv-collector$31737$1XGIwa
                                                            g$t$31786$1XGIwa))))
                                                     (g$inv-collector$31735$1XGIwa))
                                                    ((case-lambda
                                                       ((g$t$31787$1XGIwa)
                                                        (begin
                                                          (g$vis-collector$31736$1XGIwa
                                                            g$vis-collector$31738$1XGIwa)
                                                          (set! g$vis-collector$31738$1XGIwa
                                                            g$t$31787$1XGIwa))))
                                                     (g$vis-collector$31736$1XGIwa))))))))
                                           g$inv-collector$28812$1XGIwa
                                           g$vis-collector$28813$1XGIwa
                                           g$rtc$31729$1XGIwa
                                           g$vtc$31730$1XGIwa)))
                                       (g$map$19661$1XGIwa
                                         g$wrap$31726$1XGIwa
                                         g$b*$31707$1XGIwa)
                                       (g$map$19661$1XGIwa
                                         g$wrap$31726$1XGIwa
                                         g$main-exp*$31705$1XGIwa)
                                       (g$make-collector$28811$1XGIwa)
                                       (g$make-collector$28811$1XGIwa)))))
                                 (g$make-top-rib$28810$1XGIwa
                                   g$subst-names$31724$1XGIwa
                                   g$subst-labels$31723$1XGIwa))))
                             g$subst-labels$31722$1XGIwa
                             g$subst-names$31721$1XGIwa))))))
                    g$swap$31718$1XGIwa)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$31789$1XGIwa)
                        (begin
                          (g$imp-collector$31714$1XGIwa
                            g$imp-collector$31716$1XGIwa)
                          (set! g$imp-collector$31716$1XGIwa
                            g$t$31789$1XGIwa))))
                     (g$imp-collector$31714$1XGIwa))
                    ((case-lambda
                       ((g$t$31790$1XGIwa)
                        (begin
                          (g$top-level-context$31715$1XGIwa
                            g$top-level-context$31717$1XGIwa)
                          (set! g$top-level-context$31717$1XGIwa
                            g$t$31790$1XGIwa))))
                     (g$top-level-context$31715$1XGIwa))))))))
           g$imp-collector$28814$1XGIwa
           g$top-level-context$28884$1XGIwa
           g$itc$31709$1XGIwa
           '#f)))))
   (g$core-library-expander$28818$1XGIwa
     g$core-library-expander$32411$1XGIwa
     (case-lambda
       ((g$e$31791$1XGIwa g$verify-name$31792$1XGIwa)
        (call-with-values
          (case-lambda
            (() (g$parse-library$28808$1XGIwa g$e$31791$1XGIwa)))
          (case-lambda
            ((g$name*$31797$1XGIwa
               g$exp*$31798$1XGIwa
               g$imp*$31799$1XGIwa
               g$b*$31800$1XGIwa)
             ((case-lambda
                ((g$b*$31801$1XGIwa
                   g$imp*$31802$1XGIwa
                   g$exp*$31803$1XGIwa
                   g$name*$31804$1XGIwa)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$28807$1XGIwa
                        g$name*$31804$1XGIwa)))
                   (case-lambda
                     ((g$name$31807$1XGIwa g$ver$31808$1XGIwa)
                      ((case-lambda
                         ((g$ver$31809$1XGIwa g$name$31810$1XGIwa)
                          (begin
                            (g$verify-name$31792$1XGIwa
                              g$name$31810$1XGIwa)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$28817$1XGIwa
                                   g$name$31810$1XGIwa
                                   g$exp*$31803$1XGIwa
                                   g$imp*$31802$1XGIwa
                                   g$b*$31801$1XGIwa
                                   '#f)))
                              (case-lambda
                                ((g$imp*$31818$1XGIwa
                                   g$invoke-req*$31819$1XGIwa
                                   g$visit-req*$31820$1XGIwa
                                   g$invoke-code$31821$1XGIwa
                                   g$visit-code$31822$1XGIwa
                                   g$export-subst$31823$1XGIwa
                                   g$export-env$31824$1XGIwa)
                                 ((case-lambda
                                    ((g$export-env$31825$1XGIwa
                                       g$export-subst$31826$1XGIwa
                                       g$visit-code$31827$1XGIwa
                                       g$invoke-code$31828$1XGIwa
                                       g$visit-req*$31829$1XGIwa
                                       g$invoke-req*$31830$1XGIwa
                                       g$imp*$31831$1XGIwa)
                                     (values
                                       g$name$31810$1XGIwa
                                       g$ver$31809$1XGIwa
                                       g$imp*$31831$1XGIwa
                                       g$invoke-req*$31830$1XGIwa
                                       g$visit-req*$31829$1XGIwa
                                       g$invoke-code$31828$1XGIwa
                                       g$visit-code$31827$1XGIwa
                                       g$export-subst$31826$1XGIwa
                                       g$export-env$31825$1XGIwa)))
                                  g$export-env$31824$1XGIwa
                                  g$export-subst$31823$1XGIwa
                                  g$visit-code$31822$1XGIwa
                                  g$invoke-code$31821$1XGIwa
                                  g$visit-req*$31820$1XGIwa
                                  g$invoke-req*$31819$1XGIwa
                                  g$imp*$31818$1XGIwa)))))))
                       g$ver$31808$1XGIwa
                       g$name$31807$1XGIwa))))))
              g$b*$31800$1XGIwa
              g$imp*$31799$1XGIwa
              g$exp*$31798$1XGIwa
              g$name*$31797$1XGIwa)))))))
   (g$parse-top-level-program$28819$1XGIwa
     g$parse-top-level-program$32412$1XGIwa
     (case-lambda
       ((g$e*$31832$1XGIwa)
        ((case-lambda
           ((g$t$31833$1XGIwa)
            ((case-lambda
               ((g$ls/false$31834$1XGIwa)
                (if (if g$ls/false$31834$1XGIwa
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$31835$1XGIwa
                               g$imp*$31836$1XGIwa
                               g$b*$31837$1XGIwa)
                             (eq? (g$syntax->datum$28879$1XGIwa
                                    g$import$31835$1XGIwa)
                                  'import)))
                          g$ls/false$31834$1XGIwa))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$31838$1XGIwa
                         g$imp*$31839$1XGIwa
                         g$b*$31840$1XGIwa)
                       (values g$imp*$31839$1XGIwa g$b*$31840$1XGIwa)))
                    g$ls/false$31834$1XGIwa)
                  ((case-lambda
                     ((g$t$31841$1XGIwa)
                      ((case-lambda
                         ((g$ls/false$31842$1XGIwa)
                          (if (if g$ls/false$31842$1XGIwa
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$31843$1XGIwa
                                         g$x$31844$1XGIwa
                                         g$y$31845$1XGIwa)
                                       (eq? (g$syntax->datum$28879$1XGIwa
                                              g$import$31843$1XGIwa)
                                            'import)))
                                    g$ls/false$31842$1XGIwa))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$31846$1XGIwa
                                   g$x$31847$1XGIwa
                                   g$y$31848$1XGIwa)
                                 (g$syntax-violation$28876$1XGIwa
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$28256$1XGIwa
                                     g$e*$31832$1XGIwa))))
                              g$ls/false$31842$1XGIwa)
                            ((case-lambda
                               ((g$t$31849$1XGIwa)
                                ((case-lambda
                                   ((g$ls/false$31850$1XGIwa)
                                    (if g$ls/false$31850$1XGIwa
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$31850$1XGIwa)
                                      (g$syntax-violation$28876$1XGIwa
                                        '#f
                                        '"invalid syntax"
                                        g$t$31849$1XGIwa))))
                                 (g$syntax-dispatch$28757$1XGIwa
                                   g$t$31849$1XGIwa
                                   '_))))
                             g$t$31841$1XGIwa))))
                       (g$syntax-dispatch$28757$1XGIwa
                         g$t$31841$1XGIwa
                         '((any . any) . any)))))
                   g$t$31833$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$31833$1XGIwa
               '((any . each-any) . each-any)))))
         g$e*$31832$1XGIwa))))
   (g$top-level-expander$28820$1XGIwa
     g$top-level-expander$32413$1XGIwa
     (case-lambda
       ((g$e*$31851$1XGIwa)
        (call-with-values
          (case-lambda
            (()
             (g$parse-top-level-program$28819$1XGIwa
               g$e*$31851$1XGIwa)))
          (case-lambda
            ((g$imp*$31854$1XGIwa g$b*$31855$1XGIwa)
             ((case-lambda
                ((g$b*$31856$1XGIwa g$imp*$31857$1XGIwa)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$28817$1XGIwa
                        '()
                        '()
                        g$imp*$31857$1XGIwa
                        g$b*$31856$1XGIwa
                        '#t)))
                   (case-lambda
                     ((g$imp*$31865$1XGIwa
                        g$invoke-req*$31866$1XGIwa
                        g$visit-req*$31867$1XGIwa
                        g$invoke-code$31868$1XGIwa
                        g$visit-code$31869$1XGIwa
                        g$export-subst$31870$1XGIwa
                        g$export-env$31871$1XGIwa)
                      ((case-lambda
                         ((g$export-env$31872$1XGIwa
                            g$export-subst$31873$1XGIwa
                            g$visit-code$31874$1XGIwa
                            g$invoke-code$31875$1XGIwa
                            g$visit-req*$31876$1XGIwa
                            g$invoke-req*$31877$1XGIwa
                            g$imp*$31878$1XGIwa)
                          (values
                            g$invoke-req*$31877$1XGIwa
                            g$invoke-code$31875$1XGIwa)))
                       g$export-env$31871$1XGIwa
                       g$export-subst$31870$1XGIwa
                       g$visit-code$31869$1XGIwa
                       g$invoke-code$31868$1XGIwa
                       g$visit-req*$31867$1XGIwa
                       g$invoke-req*$31866$1XGIwa
                       g$imp*$31865$1XGIwa))))))
              g$b*$31855$1XGIwa
              g$imp*$31854$1XGIwa)))))))
   (g$10383$28821$1XGIwa
     g$10383$32414$1XGIwa
     (make-record-type-descriptor
       'env
       '#f
       'g$10386$1XGIwa
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$10385$28822$1XGIwa g$10385$32415$1XGIwa '#f)
   (g$10384$28823$1XGIwa
     g$10384$32416$1XGIwa
     (make-record-constructor-descriptor
       g$10383$28821$1XGIwa
       '#f
       g$10385$28822$1XGIwa))
   (g$env?$28826$1XGIwa
     g$env?$32417$1XGIwa
     (record-predicate g$10383$28821$1XGIwa))
   (g$make-env$28827$1XGIwa
     g$make-env$32418$1XGIwa
     (record-constructor g$10384$28823$1XGIwa))
   (g$env-names$28828$1XGIwa
     g$env-names$32419$1XGIwa
     (record-accessor g$10383$28821$1XGIwa '0))
   (g$env-labels$28829$1XGIwa
     g$env-labels$32420$1XGIwa
     (record-accessor g$10383$28821$1XGIwa '1))
   (g$env-itc$28830$1XGIwa
     g$env-itc$32421$1XGIwa
     (record-accessor g$10383$28821$1XGIwa '2))
   (g$set-env-names!$28831$1XGIwa
     g$set-env-names!$32422$1XGIwa
     (record-mutator g$10383$28821$1XGIwa '0))
   (g$set-env-labels!$28832$1XGIwa
     g$set-env-labels!$32423$1XGIwa
     (record-mutator g$10383$28821$1XGIwa '1))
   (g$set-env-itc!$28833$1XGIwa
     g$set-env-itc!$32424$1XGIwa
     (record-mutator g$10383$28821$1XGIwa '2))
   (g$rp$28834$1XGIwa
     g$rp$32425$1XGIwa
     (make-record-printer
       'env
       (case-lambda
         ((g$x$31879$1XGIwa g$p$31880$1XGIwa g$wr$31881$1XGIwa)
          (display '"#<environment>" g$p$31880$1XGIwa)))))
   (g$10400$28835$1XGIwa
     g$10400$32426$1XGIwa
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$10403$1XGIwa
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$10402$28836$1XGIwa g$10402$32427$1XGIwa '#f)
   (g$10401$28837$1XGIwa
     g$10401$32428$1XGIwa
     (make-record-constructor-descriptor
       g$10400$28835$1XGIwa
       '#f
       g$10402$28836$1XGIwa))
   (g$interaction-env?$28840$1XGIwa
     g$interaction-env?$32429$1XGIwa
     (record-predicate g$10400$28835$1XGIwa))
   (g$make-interaction-env$28841$1XGIwa
     g$make-interaction-env$32430$1XGIwa
     (record-constructor g$10401$28837$1XGIwa))
   (g$interaction-env-rib$28842$1XGIwa
     g$interaction-env-rib$32431$1XGIwa
     (record-accessor g$10400$28835$1XGIwa '0))
   (g$interaction-env-r$28843$1XGIwa
     g$interaction-env-r$32432$1XGIwa
     (record-accessor g$10400$28835$1XGIwa '1))
   (g$interaction-env-locs$28844$1XGIwa
     g$interaction-env-locs$32433$1XGIwa
     (record-accessor g$10400$28835$1XGIwa '2))
   (g$set-interaction-env-rib!$28845$1XGIwa
     g$set-interaction-env-rib!$32434$1XGIwa
     (record-mutator g$10400$28835$1XGIwa '0))
   (g$set-interaction-env-r!$28846$1XGIwa
     g$set-interaction-env-r!$32435$1XGIwa
     (record-mutator g$10400$28835$1XGIwa '1))
   (g$set-interaction-env-locs!$28847$1XGIwa
     g$set-interaction-env-locs!$32436$1XGIwa
     (record-mutator g$10400$28835$1XGIwa '2))
   (g$rp$28848$1XGIwa
     g$rp$32437$1XGIwa
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$31882$1XGIwa g$p$31883$1XGIwa g$wr$31884$1XGIwa)
          (display '"#<environment>" g$p$31883$1XGIwa)))))
   (g$interaction-environment-symbols$28849$1XGIwa
     g$interaction-environment-symbols$32438$1XGIwa
     (case-lambda
       (()
        (g$environment-symbols$28853$1XGIwa
          (g$interaction-environment$28883$1XGIwa)))))
   (g$environment-bindings$28850$1XGIwa
     g$environment-bindings$32439$1XGIwa
     (case-lambda
       ((g$e$31885$1XGIwa)
        (g$vector->list$20607$1XGIwa
          (g$vector-map$20663$1XGIwa
            (case-lambda
              ((g$name$31886$1XGIwa g$label$31887$1XGIwa)
               (g$parse-binding$28851$1XGIwa
                 (cons
                   g$name$31886$1XGIwa
                   (g$imported-label->binding$27964$1XGIwa
                     g$label$31887$1XGIwa)))))
            (g$env-names$28828$1XGIwa g$e$31885$1XGIwa)
            (g$env-labels$28829$1XGIwa g$e$31885$1XGIwa))))))
   (g$parse-binding$28851$1XGIwa
     g$parse-binding$32440$1XGIwa
     (case-lambda
       ((g$b$31888$1XGIwa)
        (cons
          (car g$b$31888$1XGIwa)
          ((case-lambda
             ((g$t$31889$1XGIwa)
              (if (g$memv$19654$1XGIwa
                    g$t$31889$1XGIwa
                    '(core-prim global))
                'procedure
                (if (g$memv$19654$1XGIwa
                      g$t$31889$1XGIwa
                      '(core-macro macro global-macro))
                  'syntax
                  (if (eqv? g$t$31889$1XGIwa '$core-rtd)
                    'record
                    (begin
                      '#f
                      (if (eq? (car g$b$31888$1XGIwa)
                               (g$cadr$20611$1XGIwa g$b$31888$1XGIwa))
                        'syntax
                        'unknown)))))))
           (g$cadr$20611$1XGIwa g$b$31888$1XGIwa))))))
   (g$environment?$28852$1XGIwa
     g$environment?$32441$1XGIwa
     (case-lambda
       ((g$x$31890$1XGIwa)
        ((case-lambda
           ((g$t$31891$1XGIwa)
            (if g$t$31891$1XGIwa
              g$t$31891$1XGIwa
              (begin
                '#f
                (g$interaction-env?$28840$1XGIwa g$x$31890$1XGIwa)))))
         (g$env?$28826$1XGIwa g$x$31890$1XGIwa)))))
   (g$environment-symbols$28853$1XGIwa
     g$environment-symbols$32442$1XGIwa
     (case-lambda
       ((g$x$31892$1XGIwa)
        (if (g$env?$28826$1XGIwa g$x$31892$1XGIwa)
          (g$vector->list$20607$1XGIwa
            (g$env-names$28828$1XGIwa g$x$31892$1XGIwa))
          (if (g$interaction-env?$28840$1XGIwa g$x$31892$1XGIwa)
            (g$map$19661$1XGIwa
              values
              (g$rib-sym*$28207$1XGIwa
                (g$interaction-env-rib$28842$1XGIwa g$x$31892$1XGIwa)))
            (begin
              '#f
              (assertion-violation
                'environment-symbols
                '"not an environment"
                g$x$31892$1XGIwa)))))))
   (g$environment$28854$1XGIwa
     g$environment$32443$1XGIwa
     (case-lambda
       (g$imp*$31893$1XGIwa
        ((case-lambda
           ((g$itc$31894$1XGIwa)
            ((case-lambda
               ((g$imp-collector$31897$1XGIwa
                  g$imp-collector$31898$1XGIwa)
                ((case-lambda
                   ((g$swap$31899$1XGIwa)
                    (dynamic-wind
                      g$swap$31899$1XGIwa
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$28809$1XGIwa
                                g$imp*$31893$1XGIwa)))
                           (case-lambda
                             ((g$subst-names$31902$1XGIwa
                                g$subst-labels$31903$1XGIwa)
                              ((case-lambda
                                 ((g$subst-labels$31904$1XGIwa
                                    g$subst-names$31905$1XGIwa)
                                  (g$make-env$28827$1XGIwa
                                    g$subst-names$31905$1XGIwa
                                    g$subst-labels$31904$1XGIwa
                                    g$itc$31894$1XGIwa)))
                               g$subst-labels$31903$1XGIwa
                               g$subst-names$31902$1XGIwa))))))
                      g$swap$31899$1XGIwa)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$31906$1XGIwa)
                        (begin
                          (g$imp-collector$31897$1XGIwa
                            g$imp-collector$31898$1XGIwa)
                          (set! g$imp-collector$31898$1XGIwa
                            g$t$31906$1XGIwa))))
                     (g$imp-collector$31897$1XGIwa)))))))
             g$imp-collector$28814$1XGIwa
             g$itc$31894$1XGIwa)))
         (g$make-collector$28811$1XGIwa)))))
   (g$null-environment$28855$1XGIwa
     g$null-environment$32444$1XGIwa
     (case-lambda
       ((g$n$31907$1XGIwa)
        (begin
          (if (not (eqv? g$n$31907$1XGIwa '5))
            (assertion-violation
              'null-environment
              '"not 5"
              g$n$31907$1XGIwa)
            (void))
          (g$environment$28854$1XGIwa '(psyntax null-environment-5))))))
   (g$scheme-report-environment$28856$1XGIwa
     g$scheme-report-environment$32445$1XGIwa
     (case-lambda
       ((g$n$31908$1XGIwa)
        (begin
          (if (not (eqv? g$n$31908$1XGIwa '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$31908$1XGIwa)
            (void))
          (g$environment$28854$1XGIwa
            '(psyntax scheme-report-environment-5))))))
   (g$expand$28857$1XGIwa
     g$expand$32446$1XGIwa
     (case-lambda
       ((g$x$31909$1XGIwa g$env$31910$1XGIwa)
        (if (g$env?$28826$1XGIwa g$env$31910$1XGIwa)
          ((case-lambda
             ((g$rib$31911$1XGIwa)
              ((case-lambda
                 ((g$x$31912$1XGIwa
                    g$itc$31913$1XGIwa
                    g$rtc$31914$1XGIwa
                    g$vtc$31915$1XGIwa)
                  ((case-lambda
                     ((g$x$31916$1XGIwa)
                      (begin
                        (g$seal-rib!$28223$1XGIwa g$rib$31911$1XGIwa)
                        (values
                          g$x$31916$1XGIwa
                          (g$rtc$31914$1XGIwa)))))
                   ((case-lambda
                      ((g$top-level-context$31925$1XGIwa
                         g$inv-collector$31926$1XGIwa
                         g$vis-collector$31927$1XGIwa
                         g$imp-collector$31928$1XGIwa
                         g$top-level-context$31929$1XGIwa
                         g$inv-collector$31930$1XGIwa
                         g$vis-collector$31931$1XGIwa
                         g$imp-collector$31932$1XGIwa)
                       ((case-lambda
                          ((g$swap$31933$1XGIwa)
                           (dynamic-wind
                             g$swap$31933$1XGIwa
                             (case-lambda
                               (()
                                (g$chi-expr$28775$1XGIwa
                                  g$x$31912$1XGIwa
                                  '()
                                  '())))
                             g$swap$31933$1XGIwa)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$31934$1XGIwa)
                                 (begin
                                   (g$top-level-context$31925$1XGIwa
                                     g$top-level-context$31929$1XGIwa)
                                   (set! g$top-level-context$31929$1XGIwa
                                     g$t$31934$1XGIwa))))
                              (g$top-level-context$31925$1XGIwa))
                             ((case-lambda
                                ((g$t$31935$1XGIwa)
                                 (begin
                                   (g$inv-collector$31926$1XGIwa
                                     g$inv-collector$31930$1XGIwa)
                                   (set! g$inv-collector$31930$1XGIwa
                                     g$t$31935$1XGIwa))))
                              (g$inv-collector$31926$1XGIwa))
                             ((case-lambda
                                ((g$t$31936$1XGIwa)
                                 (begin
                                   (g$vis-collector$31927$1XGIwa
                                     g$vis-collector$31931$1XGIwa)
                                   (set! g$vis-collector$31931$1XGIwa
                                     g$t$31936$1XGIwa))))
                              (g$vis-collector$31927$1XGIwa))
                             ((case-lambda
                                ((g$t$31937$1XGIwa)
                                 (begin
                                   (g$imp-collector$31928$1XGIwa
                                     g$imp-collector$31932$1XGIwa)
                                   (set! g$imp-collector$31932$1XGIwa
                                     g$t$31937$1XGIwa))))
                              (g$imp-collector$31928$1XGIwa))))))))
                    g$top-level-context$28884$1XGIwa
                    g$inv-collector$28812$1XGIwa
                    g$vis-collector$28813$1XGIwa
                    g$imp-collector$28814$1XGIwa
                    '#f
                    g$rtc$31914$1XGIwa
                    g$vtc$31915$1XGIwa
                    g$itc$31913$1XGIwa))))
               (g$make-stx$28232$1XGIwa
                 g$x$31909$1XGIwa
                 g$top-mark*$28192$1XGIwa
                 (list g$rib$31911$1XGIwa)
                 '())
               (g$env-itc$28830$1XGIwa g$env$31910$1XGIwa)
               (g$make-collector$28811$1XGIwa)
               (g$make-collector$28811$1XGIwa))))
           (g$make-top-rib$28810$1XGIwa
             (g$env-names$28828$1XGIwa g$env$31910$1XGIwa)
             (g$env-labels$28829$1XGIwa g$env$31910$1XGIwa)))
          (if (g$interaction-env?$28840$1XGIwa g$env$31910$1XGIwa)
            ((case-lambda
               ((g$rib$31938$1XGIwa g$r$31939$1XGIwa g$rtc$31940$1XGIwa)
                ((case-lambda
                   ((g$x$31941$1XGIwa)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$31952$1XGIwa
                               g$inv-collector$31953$1XGIwa
                               g$vis-collector$31954$1XGIwa
                               g$imp-collector$31955$1XGIwa
                               g$top-level-context$31956$1XGIwa
                               g$inv-collector$31957$1XGIwa
                               g$vis-collector$31958$1XGIwa
                               g$imp-collector$31959$1XGIwa)
                             ((case-lambda
                                ((g$swap$31960$1XGIwa)
                                 (dynamic-wind
                                   g$swap$31960$1XGIwa
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$28816$1XGIwa
                                        g$x$31941$1XGIwa
                                        g$rib$31938$1XGIwa
                                        g$r$31939$1XGIwa)))
                                   g$swap$31960$1XGIwa)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$31961$1XGIwa)
                                       (begin
                                         (g$top-level-context$31952$1XGIwa
                                           g$top-level-context$31956$1XGIwa)
                                         (set! g$top-level-context$31956$1XGIwa
                                           g$t$31961$1XGIwa))))
                                    (g$top-level-context$31952$1XGIwa))
                                   ((case-lambda
                                      ((g$t$31962$1XGIwa)
                                       (begin
                                         (g$inv-collector$31953$1XGIwa
                                           g$inv-collector$31957$1XGIwa)
                                         (set! g$inv-collector$31957$1XGIwa
                                           g$t$31962$1XGIwa))))
                                    (g$inv-collector$31953$1XGIwa))
                                   ((case-lambda
                                      ((g$t$31963$1XGIwa)
                                       (begin
                                         (g$vis-collector$31954$1XGIwa
                                           g$vis-collector$31958$1XGIwa)
                                         (set! g$vis-collector$31958$1XGIwa
                                           g$t$31963$1XGIwa))))
                                    (g$vis-collector$31954$1XGIwa))
                                   ((case-lambda
                                      ((g$t$31964$1XGIwa)
                                       (begin
                                         (g$imp-collector$31955$1XGIwa
                                           g$imp-collector$31959$1XGIwa)
                                         (set! g$imp-collector$31959$1XGIwa
                                           g$t$31964$1XGIwa))))
                                    (g$imp-collector$31955$1XGIwa))))))))
                          g$top-level-context$28884$1XGIwa
                          g$inv-collector$28812$1XGIwa
                          g$vis-collector$28813$1XGIwa
                          g$imp-collector$28814$1XGIwa
                          g$env$31910$1XGIwa
                          g$rtc$31940$1XGIwa
                          (g$make-collector$28811$1XGIwa)
                          (g$make-collector$28811$1XGIwa))))
                      (case-lambda
                        ((g$e$31965$1XGIwa g$r^$31966$1XGIwa)
                         ((case-lambda
                            ((g$r^$31967$1XGIwa g$e$31968$1XGIwa)
                             (begin
                               (g$set-interaction-env-r!$28846$1XGIwa
                                 g$env$31910$1XGIwa
                                 g$r^$31967$1XGIwa)
                               (values
                                 g$e$31968$1XGIwa
                                 (g$rtc$31940$1XGIwa)))))
                          g$r^$31966$1XGIwa
                          g$e$31965$1XGIwa))))))
                 (g$make-stx$28232$1XGIwa
                   g$x$31909$1XGIwa
                   g$top-mark*$28192$1XGIwa
                   (list g$rib$31938$1XGIwa)
                   '()))))
             (g$interaction-env-rib$28842$1XGIwa g$env$31910$1XGIwa)
             (g$interaction-env-r$28843$1XGIwa g$env$31910$1XGIwa)
             (g$make-collector$28811$1XGIwa))
            (begin
              '#f
              (assertion-violation
                'expand
                '"not an environment"
                g$env$31910$1XGIwa)))))))
   (g$eval$28858$1XGIwa
     g$eval$32447$1XGIwa
     (case-lambda
       ((g$x$31969$1XGIwa g$env$31970$1XGIwa)
        (begin
          (if (not (g$environment?$28852$1XGIwa g$env$31970$1XGIwa))
            (error 'eval '"not an environment" g$env$31970$1XGIwa)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$28857$1XGIwa
                 g$x$31969$1XGIwa
                 g$env$31970$1XGIwa)))
            (case-lambda
              ((g$x$31973$1XGIwa g$invoke-req*$31974$1XGIwa)
               ((case-lambda
                  ((g$invoke-req*$31975$1XGIwa g$x$31976$1XGIwa)
                   (begin
                     (g$for-each$19662$1XGIwa
                       g$invoke-library$27965$1XGIwa
                       g$invoke-req*$31975$1XGIwa)
                     (eval-core
                       (g$expanded->core$27697$1XGIwa
                         g$x$31976$1XGIwa)))))
                g$invoke-req*$31974$1XGIwa
                g$x$31973$1XGIwa))))))))
   (g$expand->core$28859$1XGIwa
     g$expand->core$32448$1XGIwa
     (case-lambda
       ((g$x$31977$1XGIwa g$env$31978$1XGIwa)
        (begin
          (if (not (g$environment?$28852$1XGIwa g$env$31978$1XGIwa))
            (error 'eval '"not an environment" g$env$31978$1XGIwa)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$28857$1XGIwa
                 g$x$31977$1XGIwa
                 g$env$31978$1XGIwa)))
            (case-lambda
              ((g$x$31981$1XGIwa g$invoke-req*$31982$1XGIwa)
               ((case-lambda
                  ((g$invoke-req*$31983$1XGIwa g$x$31984$1XGIwa)
                   (begin
                     (g$for-each$19662$1XGIwa
                       g$invoke-library$27965$1XGIwa
                       g$invoke-req*$31983$1XGIwa)
                     (g$expanded->core$27697$1XGIwa g$x$31984$1XGIwa))))
                g$invoke-req*$31982$1XGIwa
                g$x$31981$1XGIwa))))))))
   (g$library-expander$28860$1XGIwa
     g$library-expander$32449$1XGIwa
     (case-lambda
       ((g$x$31985$1XGIwa
          g$filename$31986$1XGIwa
          g$verify-name$31987$1XGIwa)
        (letrec* ((g$build-visit-code$31988$1XGIwa
                    (case-lambda
                      ((g$macro*$32031$1XGIwa)
                       (if (null? g$macro*$32031$1XGIwa)
                         (g$build-void$28185$1XGIwa)
                         (g$build-sequence$28184$1XGIwa
                           '#f
                           (g$map$19661$1XGIwa
                             (case-lambda
                               ((g$x$32032$1XGIwa)
                                ((case-lambda
                                   ((g$loc$32033$1XGIwa
                                      g$src$32034$1XGIwa)
                                    (list
                                      'set!
                                      g$loc$32033$1XGIwa
                                      g$src$32034$1XGIwa)))
                                 (car g$x$32032$1XGIwa)
                                 (g$cddr$20613$1XGIwa
                                   g$x$32032$1XGIwa))))
                             g$macro*$32031$1XGIwa))))))
                  (g$visit!$31989$1XGIwa
                    (case-lambda
                      ((g$macro*$32027$1XGIwa)
                       (g$for-each$19662$1XGIwa
                         (case-lambda
                           ((g$x$32028$1XGIwa)
                            ((case-lambda
                               ((g$loc$32029$1XGIwa g$proc$32030$1XGIwa)
                                (set-symbol-value!
                                  g$loc$32029$1XGIwa
                                  g$proc$32030$1XGIwa)))
                             (car g$x$32028$1XGIwa)
                             (g$cadr$20611$1XGIwa g$x$32028$1XGIwa))))
                         g$macro*$32027$1XGIwa)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$28818$1XGIwa
                 g$x$31985$1XGIwa
                 g$verify-name$31987$1XGIwa)))
            (case-lambda
              ((g$name$31999$1XGIwa
                 g$ver$32000$1XGIwa
                 g$imp*$32001$1XGIwa
                 g$inv*$32002$1XGIwa
                 g$vis*$32003$1XGIwa
                 g$invoke-code$32004$1XGIwa
                 g$macro*$32005$1XGIwa
                 g$export-subst$32006$1XGIwa
                 g$export-env$32007$1XGIwa)
               ((case-lambda
                  ((g$export-env$32008$1XGIwa
                     g$export-subst$32009$1XGIwa
                     g$macro*$32010$1XGIwa
                     g$invoke-code$32011$1XGIwa
                     g$vis*$32012$1XGIwa
                     g$inv*$32013$1XGIwa
                     g$imp*$32014$1XGIwa
                     g$ver$32015$1XGIwa
                     g$name$32016$1XGIwa)
                   ((case-lambda
                      ((g$id$32017$1XGIwa
                         g$name$32018$1XGIwa
                         g$ver$32019$1XGIwa
                         g$imp*$32020$1XGIwa
                         g$vis*$32021$1XGIwa
                         g$inv*$32022$1XGIwa
                         g$visit-proc$32023$1XGIwa
                         g$invoke-proc$32024$1XGIwa
                         g$visit-code$32025$1XGIwa
                         g$invoke-code$32026$1XGIwa)
                       (begin
                         (g$install-library$27963$1XGIwa
                           g$id$32017$1XGIwa
                           g$name$32018$1XGIwa
                           g$ver$32019$1XGIwa
                           g$imp*$32020$1XGIwa
                           g$vis*$32021$1XGIwa
                           g$inv*$32022$1XGIwa
                           g$export-subst$32009$1XGIwa
                           g$export-env$32008$1XGIwa
                           g$visit-proc$32023$1XGIwa
                           g$invoke-proc$32024$1XGIwa
                           g$visit-code$32025$1XGIwa
                           g$invoke-code$32026$1XGIwa
                           '#t
                           g$filename$31986$1XGIwa)
                         (values
                           g$id$32017$1XGIwa
                           g$name$32018$1XGIwa
                           g$ver$32019$1XGIwa
                           g$imp*$32020$1XGIwa
                           g$vis*$32021$1XGIwa
                           g$inv*$32022$1XGIwa
                           g$invoke-code$32026$1XGIwa
                           g$visit-code$32025$1XGIwa
                           g$export-subst$32009$1XGIwa
                           g$export-env$32008$1XGIwa))))
                    (gensym)
                    g$name$32016$1XGIwa
                    g$ver$32015$1XGIwa
                    (g$map$19661$1XGIwa
                      g$library-spec$27969$1XGIwa
                      g$imp*$32014$1XGIwa)
                    (g$map$19661$1XGIwa
                      g$library-spec$27969$1XGIwa
                      g$vis*$32012$1XGIwa)
                    (g$map$19661$1XGIwa
                      g$library-spec$27969$1XGIwa
                      g$inv*$32013$1XGIwa)
                    (case-lambda
                      (()
                       (g$visit!$31989$1XGIwa g$macro*$32010$1XGIwa)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$27697$1XGIwa
                           g$invoke-code$32011$1XGIwa))))
                    (g$build-visit-code$31988$1XGIwa
                      g$macro*$32010$1XGIwa)
                    g$invoke-code$32011$1XGIwa)))
                g$export-env$32007$1XGIwa
                g$export-subst$32006$1XGIwa
                g$macro*$32005$1XGIwa
                g$invoke-code$32004$1XGIwa
                g$vis*$32003$1XGIwa
                g$inv*$32002$1XGIwa
                g$imp*$32001$1XGIwa
                g$ver$32000$1XGIwa
                g$name$31999$1XGIwa))))))
       ((g$x$32035$1XGIwa g$filename$32036$1XGIwa)
        (g$library-expander$28860$1XGIwa
          g$x$32035$1XGIwa
          g$filename$32036$1XGIwa
          (case-lambda ((g$x$32037$1XGIwa) (values)))))
       ((g$x$32038$1XGIwa)
        (g$library-expander$28860$1XGIwa
          g$x$32038$1XGIwa
          '#f
          (case-lambda ((g$x$32039$1XGIwa) (values)))))))
   (g$boot-library-expand$28861$1XGIwa
     g$boot-library-expand$32450$1XGIwa
     (case-lambda
       ((g$x$32040$1XGIwa)
        (call-with-values
          (case-lambda
            (() (g$library-expander$28860$1XGIwa g$x$32040$1XGIwa)))
          (case-lambda
            ((g$id$32051$1XGIwa
               g$name$32052$1XGIwa
               g$ver$32053$1XGIwa
               g$imp*$32054$1XGIwa
               g$vis*$32055$1XGIwa
               g$inv*$32056$1XGIwa
               g$invoke-code$32057$1XGIwa
               g$visit-code$32058$1XGIwa
               g$export-subst$32059$1XGIwa
               g$export-env$32060$1XGIwa)
             ((case-lambda
                ((g$export-env$32061$1XGIwa
                   g$export-subst$32062$1XGIwa
                   g$visit-code$32063$1XGIwa
                   g$invoke-code$32064$1XGIwa
                   g$inv*$32065$1XGIwa
                   g$vis*$32066$1XGIwa
                   g$imp*$32067$1XGIwa
                   g$ver$32068$1XGIwa
                   g$name$32069$1XGIwa
                   g$id$32070$1XGIwa)
                 (values
                   g$name$32069$1XGIwa
                   g$invoke-code$32064$1XGIwa
                   g$export-subst$32062$1XGIwa
                   g$export-env$32061$1XGIwa)))
              g$export-env$32060$1XGIwa
              g$export-subst$32059$1XGIwa
              g$visit-code$32058$1XGIwa
              g$invoke-code$32057$1XGIwa
              g$inv*$32056$1XGIwa
              g$vis*$32055$1XGIwa
              g$imp*$32054$1XGIwa
              g$ver$32053$1XGIwa
              g$name$32052$1XGIwa
              g$id$32051$1XGIwa)))))))
   (g$rev-map-append$28862$1XGIwa
     g$rev-map-append$32451$1XGIwa
     (case-lambda
       ((g$f$32071$1XGIwa g$ls$32072$1XGIwa g$ac$32073$1XGIwa)
        (if (null? g$ls$32072$1XGIwa)
          g$ac$32073$1XGIwa
          (begin
            '#f
            (g$rev-map-append$28862$1XGIwa
              g$f$32071$1XGIwa
              (cdr g$ls$32072$1XGIwa)
              (cons
                (g$f$32071$1XGIwa (car g$ls$32072$1XGIwa))
                g$ac$32073$1XGIwa)))))))
   (g$build-exports$28863$1XGIwa
     g$build-exports$32452$1XGIwa
     (case-lambda
       ((g$lex*+loc*$32074$1XGIwa g$init*$32075$1XGIwa)
        (g$build-sequence$28184$1XGIwa
          '#f
          (cons
            (g$build-void$28185$1XGIwa)
            (g$rev-map-append$28862$1XGIwa
              (case-lambda
                ((g$x$32076$1XGIwa)
                 (list
                   'set!
                   (cdr g$x$32076$1XGIwa)
                   (car g$x$32076$1XGIwa))))
              g$lex*+loc*$32074$1XGIwa
              g$init*$32075$1XGIwa))))))
   (g$make-export-subst$28864$1XGIwa
     g$make-export-subst$32453$1XGIwa
     (case-lambda
       ((g$name*$32077$1XGIwa g$id*$32078$1XGIwa)
        (g$map$19661$1XGIwa
          (case-lambda
            ((g$name$32079$1XGIwa g$id$32080$1XGIwa)
             ((case-lambda
                ((g$label$32081$1XGIwa)
                 (begin
                   (if (not g$label$32081$1XGIwa)
                     (g$syntax-violation$28876$1XGIwa
                       '#f
                       '"cannot export unbound identifier"
                       g$id$32080$1XGIwa)
                     (void))
                   (cons g$name$32079$1XGIwa g$label$32081$1XGIwa))))
              (g$id->label$28272$1XGIwa g$id$32080$1XGIwa))))
          g$name*$32077$1XGIwa
          g$id*$32078$1XGIwa))))
   (g$make-export-env/macros$28865$1XGIwa
     g$make-export-env/macros$32454$1XGIwa
     (case-lambda
       ((g$lex*$32082$1XGIwa g$loc*$32083$1XGIwa g$r$32084$1XGIwa)
        (letrec* ((g$lookup$32085$1XGIwa
                    (case-lambda
                      ((g$x$32101$1XGIwa)
                       ((letrec ((g$f$32102$1XGIwa
                                   (case-lambda
                                     ((g$x$32103$1XGIwa
                                        g$lex*$32104$1XGIwa
                                        g$loc*$32105$1XGIwa)
                                      (if (pair? g$lex*$32104$1XGIwa)
                                        (if (eq? g$x$32103$1XGIwa
                                                 (car g$lex*$32104$1XGIwa))
                                          (car g$loc*$32105$1XGIwa)
                                          (g$f$32102$1XGIwa
                                            g$x$32103$1XGIwa
                                            (cdr g$lex*$32104$1XGIwa)
                                            (cdr g$loc*$32105$1XGIwa)))
                                        (begin
                                          '#f
                                          (assertion-violation
                                            'lookup-make-export
                                            '"BUG")))))))
                          g$f$32102$1XGIwa)
                        g$x$32101$1XGIwa
                        g$lex*$32082$1XGIwa
                        g$loc*$32083$1XGIwa)))))
          ((letrec ((g$f$32086$1XGIwa
                      (case-lambda
                        ((g$r$32087$1XGIwa
                           g$env$32088$1XGIwa
                           g$global*$32089$1XGIwa
                           g$macro*$32090$1XGIwa)
                         (if (null? g$r$32087$1XGIwa)
                           (values
                             g$env$32088$1XGIwa
                             g$global*$32089$1XGIwa
                             g$macro*$32090$1XGIwa)
                           (begin
                             '#f
                             ((case-lambda
                                ((g$x$32091$1XGIwa)
                                 ((case-lambda
                                    ((g$label$32092$1XGIwa
                                       g$b$32093$1XGIwa)
                                     ((case-lambda
                                        ((g$t$32094$1XGIwa)
                                         (if (eqv?
                                               g$t$32094$1XGIwa
                                               'lexical)
                                           ((case-lambda
                                              ((g$v$32095$1XGIwa)
                                               ((case-lambda
                                                  ((g$loc$32096$1XGIwa
                                                     g$type$32097$1XGIwa)
                                                   (g$f$32086$1XGIwa
                                                     (cdr g$r$32087$1XGIwa)
                                                     (cons
                                                       (g$cons*$19663$1XGIwa
                                                         g$label$32092$1XGIwa
                                                         g$type$32097$1XGIwa
                                                         g$loc$32096$1XGIwa)
                                                       g$env$32088$1XGIwa)
                                                     (cons
                                                       (cons
                                                         (g$lexical-var$28701$1XGIwa
                                                           g$v$32095$1XGIwa)
                                                         g$loc$32096$1XGIwa)
                                                       g$global*$32089$1XGIwa)
                                                     g$macro*$32090$1XGIwa)))
                                                (g$lookup$32085$1XGIwa
                                                  (g$lexical-var$28701$1XGIwa
                                                    g$v$32095$1XGIwa))
                                                (if (g$lexical-mutable?$28702$1XGIwa
                                                      g$v$32095$1XGIwa)
                                                  'mutable
                                                  'global))))
                                            (g$binding-value$28277$1XGIwa
                                              g$b$32093$1XGIwa))
                                           (if (eqv?
                                                 g$t$32094$1XGIwa
                                                 'local-macro)
                                             ((case-lambda
                                                ((g$loc$32098$1XGIwa)
                                                 (g$f$32086$1XGIwa
                                                   (cdr g$r$32087$1XGIwa)
                                                   (cons
                                                     (g$cons*$19663$1XGIwa
                                                       g$label$32092$1XGIwa
                                                       'global-macro
                                                       g$loc$32098$1XGIwa)
                                                     g$env$32088$1XGIwa)
                                                   g$global*$32089$1XGIwa
                                                   (cons
                                                     (cons
                                                       g$loc$32098$1XGIwa
                                                       (g$binding-value$28277$1XGIwa
                                                         g$b$32093$1XGIwa))
                                                     g$macro*$32090$1XGIwa))))
                                              (gensym))
                                             (if (eqv?
                                                   g$t$32094$1XGIwa
                                                   'local-macro!)
                                               ((case-lambda
                                                  ((g$loc$32099$1XGIwa)
                                                   (g$f$32086$1XGIwa
                                                     (cdr g$r$32087$1XGIwa)
                                                     (cons
                                                       (g$cons*$19663$1XGIwa
                                                         g$label$32092$1XGIwa
                                                         'global-macro!
                                                         g$loc$32099$1XGIwa)
                                                       g$env$32088$1XGIwa)
                                                     g$global*$32089$1XGIwa
                                                     (cons
                                                       (cons
                                                         g$loc$32099$1XGIwa
                                                         (g$binding-value$28277$1XGIwa
                                                           g$b$32093$1XGIwa))
                                                       g$macro*$32090$1XGIwa))))
                                                (gensym))
                                               (if (eqv?
                                                     g$t$32094$1XGIwa
                                                     'local-ctv)
                                                 ((case-lambda
                                                    ((g$loc$32100$1XGIwa)
                                                     (g$f$32086$1XGIwa
                                                       (cdr g$r$32087$1XGIwa)
                                                       (cons
                                                         (g$cons*$19663$1XGIwa
                                                           g$label$32092$1XGIwa
                                                           'global-ctv
                                                           g$loc$32100$1XGIwa)
                                                         g$env$32088$1XGIwa)
                                                       g$global*$32089$1XGIwa
                                                       (cons
                                                         (cons
                                                           g$loc$32100$1XGIwa
                                                           (g$binding-value$28277$1XGIwa
                                                             g$b$32093$1XGIwa))
                                                         g$macro*$32090$1XGIwa))))
                                                  (gensym))
                                                 (if (g$memv$19654$1XGIwa
                                                       g$t$32094$1XGIwa
                                                       '($rtd $module))
                                                   (g$f$32086$1XGIwa
                                                     (cdr g$r$32087$1XGIwa)
                                                     (cons
                                                       g$x$32091$1XGIwa
                                                       g$env$32088$1XGIwa)
                                                     g$global*$32089$1XGIwa
                                                     g$macro*$32090$1XGIwa)
                                                   (begin
                                                     '#f
                                                     (assertion-violation
                                                       'expander
                                                       '"BUG: do not know how to export"
                                                       (g$binding-type$28276$1XGIwa
                                                         g$b$32093$1XGIwa)
                                                       (g$binding-value$28277$1XGIwa
                                                         g$b$32093$1XGIwa))))))))))
                                      (g$binding-type$28276$1XGIwa
                                        g$b$32093$1XGIwa))))
                                  (car g$x$32091$1XGIwa)
                                  (cdr g$x$32091$1XGIwa))))
                              (car g$r$32087$1XGIwa))))))))
             g$f$32086$1XGIwa)
           g$r$32084$1XGIwa
           '()
           '()
           '())))))
   (g$generate-temporaries$28866$1XGIwa
     g$generate-temporaries$32455$1XGIwa
     (case-lambda
       ((g$ls$32106$1XGIwa)
        ((case-lambda
           ((g$t$32107$1XGIwa)
            ((case-lambda
               ((g$ls/false$32108$1XGIwa)
                (if g$ls/false$32108$1XGIwa
                  (apply
                    (case-lambda
                      ((g$ls$32109$1XGIwa)
                       (g$map$19661$1XGIwa
                         (case-lambda
                           ((g$x$32110$1XGIwa)
                            (g$make-stx$28232$1XGIwa
                              ((case-lambda
                                 ((g$x$32111$1XGIwa)
                                  (if ((case-lambda
                                         ((g$t$32112$1XGIwa)
                                          (if g$t$32112$1XGIwa
                                            g$t$32112$1XGIwa
                                            (begin
                                              '#f
                                              (g$string?$20569$1XGIwa
                                                g$x$32111$1XGIwa)))))
                                       (g$symbol?$20573$1XGIwa
                                         g$x$32111$1XGIwa))
                                    (gensym g$x$32111$1XGIwa)
                                    (begin '#f (gensym 't)))))
                               (g$syntax->datum$28879$1XGIwa
                                 g$x$32110$1XGIwa))
                              g$top-mark*$28192$1XGIwa
                              '()
                              '())))
                         g$ls$32109$1XGIwa)))
                    g$ls/false$32108$1XGIwa)
                  ((case-lambda
                     ((g$t$32113$1XGIwa)
                      ((case-lambda
                         ((g$ls/false$32114$1XGIwa)
                          (if g$ls/false$32114$1XGIwa
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$32114$1XGIwa)
                            (g$syntax-violation$28876$1XGIwa
                              '#f
                              '"invalid syntax"
                              g$t$32113$1XGIwa))))
                       (g$syntax-dispatch$28757$1XGIwa
                         g$t$32113$1XGIwa
                         '_))))
                   g$t$32107$1XGIwa))))
             (g$syntax-dispatch$28757$1XGIwa
               g$t$32107$1XGIwa
               'each-any))))
         g$ls$32106$1XGIwa))))
   (g$free-identifier=?$28867$1XGIwa
     g$free-identifier=?$32456$1XGIwa
     (case-lambda
       ((g$x$32115$1XGIwa g$y$32116$1XGIwa)
        (if (g$id?$28259$1XGIwa g$x$32115$1XGIwa)
          (if (g$id?$28259$1XGIwa g$y$32116$1XGIwa)
            (g$free-id=?$28263$1XGIwa g$x$32115$1XGIwa g$y$32116$1XGIwa)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$32116$1XGIwa))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$32115$1XGIwa)))))
   (g$bound-identifier=?$28868$1XGIwa
     g$bound-identifier=?$32457$1XGIwa
     (case-lambda
       ((g$x$32117$1XGIwa g$y$32118$1XGIwa)
        (if (g$id?$28259$1XGIwa g$x$32117$1XGIwa)
          (if (g$id?$28259$1XGIwa g$y$32118$1XGIwa)
            (g$bound-id=?$28262$1XGIwa
              g$x$32117$1XGIwa
              g$y$32118$1XGIwa)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$32118$1XGIwa))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$32117$1XGIwa)))))
   (g$make-source-condition$28869$1XGIwa
     g$make-source-condition$32458$1XGIwa
     (case-lambda
       ((g$x$32119$1XGIwa)
        (letrec* ((g$13373$32120$1XGIwa
                    (make-record-type-descriptor
                      '&source-information
                      g$&condition-rtd$22092$1XGIwa
                      'g$13376$1XGIwa
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$13375$32121$1XGIwa '#f)
                  (g$13374$32122$1XGIwa
                    (make-record-constructor-descriptor
                      g$13373$32120$1XGIwa
                      g$&condition-rcd$22093$1XGIwa
                      g$13375$32121$1XGIwa))
                  (g$13372$32125$1XGIwa
                    (record-predicate g$13373$32120$1XGIwa))
                  (g$make-source-condition$32126$1XGIwa
                    (record-constructor g$13374$32122$1XGIwa))
                  (g$13370$32127$1XGIwa
                    (record-accessor g$13373$32120$1XGIwa '0))
                  (g$13371$32128$1XGIwa
                    (record-accessor g$13373$32120$1XGIwa '1))
                  (g$source-condition?$32129$1XGIwa
                    (condition-predicate g$13373$32120$1XGIwa))
                  (g$source-filename$32130$1XGIwa
                    (condition-accessor
                      g$13373$32120$1XGIwa
                      g$13370$32127$1XGIwa))
                  (g$source-character$32131$1XGIwa
                    (condition-accessor
                      g$13373$32120$1XGIwa
                      g$13371$32128$1XGIwa)))
          (if (pair? g$x$32119$1XGIwa)
            (g$make-source-condition$32126$1XGIwa
              (car g$x$32119$1XGIwa)
              (cdr g$x$32119$1XGIwa))
            (condition))))))
   (g$extract-position-condition$28870$1XGIwa
     g$extract-position-condition$32459$1XGIwa
     (case-lambda
       ((g$x$32132$1XGIwa)
        (g$make-source-condition$28869$1XGIwa
          (g$expression-position$28871$1XGIwa g$x$32132$1XGIwa)))))
   (g$expression-position$28871$1XGIwa
     g$expression-position$32460$1XGIwa
     (case-lambda
       ((g$x$32133$1XGIwa)
        (if (g$stx?$28231$1XGIwa g$x$32133$1XGIwa)
          (begin
            '#f
            ((case-lambda
               ((g$x$32134$1XGIwa)
                (if (annotation? g$x$32134$1XGIwa)
                  (begin '#f (annotation-source g$x$32134$1XGIwa))
                  '#f)))
             (g$stx-expr$28233$1XGIwa g$x$32133$1XGIwa)))
          '#f))))
   (g$assertion-error$28872$1XGIwa
     g$assertion-error$32461$1XGIwa
     (case-lambda
       ((g$expr$32135$1XGIwa g$pos$32136$1XGIwa)
        (raise
          (condition
            (g$make-assertion-violation$22140$1XGIwa)
            (g$make-who-condition$22158$1XGIwa 'assert)
            (g$make-message-condition$22098$1XGIwa '"assertion failed")
            (g$make-irritants-condition$22148$1XGIwa
              (list g$expr$32135$1XGIwa))
            (g$make-source-condition$28869$1XGIwa
              g$pos$32136$1XGIwa))))))
   (g$syntax-error$28873$1XGIwa
     g$syntax-error$32462$1XGIwa
     (case-lambda
       ((g$x$32137$1XGIwa . g$args$32138$1XGIwa)
        (begin
          (if (not (g$for-all$19659$1XGIwa
                     g$string?$20569$1XGIwa
                     g$args$32138$1XGIwa))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$32138$1XGIwa)
            (void))
          (raise
            (condition
              (g$make-message-condition$22098$1XGIwa
                (if (null? g$args$32138$1XGIwa)
                  '"invalid syntax"
                  (apply
                    g$string-append$20591$1XGIwa
                    g$args$32138$1XGIwa)))
              (g$make-syntax-violation$22212$1XGIwa
                (g$syntax->datum$28879$1XGIwa g$x$32137$1XGIwa)
                '#f)
              (g$extract-position-condition$28870$1XGIwa
                g$x$32137$1XGIwa)
              (g$extract-trace$28874$1XGIwa g$x$32137$1XGIwa)))))))
   (g$extract-trace$28874$1XGIwa
     g$extract-trace$32463$1XGIwa
     (case-lambda
       ((g$x$32139$1XGIwa)
        (letrec* ((g$13398$32140$1XGIwa
                    (make-record-type-descriptor
                      '&trace
                      g$&condition-rtd$22092$1XGIwa
                      'g$13401$1XGIwa
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$13400$32141$1XGIwa '#f)
                  (g$13399$32142$1XGIwa
                    (make-record-constructor-descriptor
                      g$13398$32140$1XGIwa
                      g$&condition-rcd$22093$1XGIwa
                      g$13400$32141$1XGIwa))
                  (g$13397$32145$1XGIwa
                    (record-predicate g$13398$32140$1XGIwa))
                  (g$make-trace$32146$1XGIwa
                    (record-constructor g$13399$32142$1XGIwa))
                  (g$13396$32147$1XGIwa
                    (record-accessor g$13398$32140$1XGIwa '0))
                  (g$trace?$32148$1XGIwa
                    (condition-predicate g$13398$32140$1XGIwa))
                  (g$trace-form$32149$1XGIwa
                    (condition-accessor
                      g$13398$32140$1XGIwa
                      g$13396$32147$1XGIwa)))
          ((letrec ((g$f$32150$1XGIwa
                      (case-lambda
                        ((g$x$32151$1XGIwa)
                         (if (g$stx?$28231$1XGIwa g$x$32151$1XGIwa)
                           (apply
                             condition
                             (g$make-trace$32146$1XGIwa
                               g$x$32151$1XGIwa)
                             (g$map$19661$1XGIwa
                               g$f$32150$1XGIwa
                               (g$stx-ae*$28236$1XGIwa
                                 g$x$32151$1XGIwa)))
                           (if (annotation? g$x$32151$1XGIwa)
                             (g$make-trace$32146$1XGIwa
                               (g$make-stx$28232$1XGIwa
                                 g$x$32151$1XGIwa
                                 '()
                                 '()
                                 '()))
                             (begin '#f (condition))))))))
             g$f$32150$1XGIwa)
           g$x$32139$1XGIwa)))))
   (g$syntax-violation*$28875$1XGIwa
     g$syntax-violation*$32464$1XGIwa
     (case-lambda
       ((g$who$32152$1XGIwa
          g$msg$32153$1XGIwa
          g$form$32154$1XGIwa
          g$condition-object$32155$1XGIwa)
        (begin
          (if (not (g$string?$20569$1XGIwa g$msg$32153$1XGIwa))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$32153$1XGIwa)
            (void))
          ((case-lambda
             ((g$who$32156$1XGIwa)
              (raise
                (condition
                  (if g$who$32156$1XGIwa
                    (g$make-who-condition$22158$1XGIwa
                      g$who$32156$1XGIwa)
                    (condition))
                  (g$make-message-condition$22098$1XGIwa
                    g$msg$32153$1XGIwa)
                  g$condition-object$32155$1XGIwa
                  (g$extract-position-condition$28870$1XGIwa
                    g$form$32154$1XGIwa)
                  (g$extract-trace$28874$1XGIwa g$form$32154$1XGIwa)))))
           (if ((case-lambda
                  ((g$t$32157$1XGIwa)
                   (if g$t$32157$1XGIwa
                     g$t$32157$1XGIwa
                     (begin
                       '#f
                       (g$symbol?$20573$1XGIwa g$who$32152$1XGIwa)))))
                (g$string?$20569$1XGIwa g$who$32152$1XGIwa))
             g$who$32152$1XGIwa
             (if (not g$who$32152$1XGIwa)
               ((case-lambda
                  ((g$t$32158$1XGIwa)
                   ((case-lambda
                      ((g$ls/false$32159$1XGIwa)
                       (if (if g$ls/false$32159$1XGIwa
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$32160$1XGIwa)
                                    (g$id?$28259$1XGIwa
                                      g$id$32160$1XGIwa)))
                                 g$ls/false$32159$1XGIwa))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$32161$1XGIwa)
                              (g$syntax->datum$28879$1XGIwa
                                g$id$32161$1XGIwa)))
                           g$ls/false$32159$1XGIwa)
                         ((case-lambda
                            ((g$t$32162$1XGIwa)
                             ((case-lambda
                                ((g$ls/false$32163$1XGIwa)
                                 (if (if g$ls/false$32163$1XGIwa
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$32164$1XGIwa
                                                g$rest$32165$1XGIwa)
                                              (g$id?$28259$1XGIwa
                                                g$id$32164$1XGIwa)))
                                           g$ls/false$32163$1XGIwa))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$32166$1XGIwa
                                          g$rest$32167$1XGIwa)
                                        (g$syntax->datum$28879$1XGIwa
                                          g$id$32166$1XGIwa)))
                                     g$ls/false$32163$1XGIwa)
                                   ((case-lambda
                                      ((g$t$32168$1XGIwa)
                                       ((case-lambda
                                          ((g$ls/false$32169$1XGIwa)
                                           (if g$ls/false$32169$1XGIwa
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$32169$1XGIwa)
                                             (g$syntax-violation$28876$1XGIwa
                                               '#f
                                               '"invalid syntax"
                                               g$t$32168$1XGIwa))))
                                        (g$syntax-dispatch$28757$1XGIwa
                                          g$t$32168$1XGIwa
                                          '_))))
                                    g$t$32162$1XGIwa))))
                              (g$syntax-dispatch$28757$1XGIwa
                                g$t$32162$1XGIwa
                                '(any . any)))))
                          g$t$32158$1XGIwa))))
                    (g$syntax-dispatch$28757$1XGIwa
                      g$t$32158$1XGIwa
                      'any))))
                g$form$32154$1XGIwa)
               (begin
                 '#f
                 (assertion-violation
                   'syntax-violation
                   '"invalid who argument"
                   g$who$32152$1XGIwa)))))))))
   (g$syntax-violation$28876$1XGIwa
     g$syntax-violation$32465$1XGIwa
     (case-lambda
       ((g$who$32170$1XGIwa g$msg$32171$1XGIwa g$form$32172$1XGIwa)
        (g$syntax-violation$28876$1XGIwa
          g$who$32170$1XGIwa
          g$msg$32171$1XGIwa
          g$form$32172$1XGIwa
          '#f))
       ((g$who$32173$1XGIwa
          g$msg$32174$1XGIwa
          g$form$32175$1XGIwa
          g$subform$32176$1XGIwa)
        (g$syntax-violation*$28875$1XGIwa
          g$who$32173$1XGIwa
          g$msg$32174$1XGIwa
          g$form$32175$1XGIwa
          (g$make-syntax-violation$22212$1XGIwa
            (g$syntax->datum$28879$1XGIwa g$form$32175$1XGIwa)
            (g$syntax->datum$28879$1XGIwa g$subform$32176$1XGIwa))))))
   (g$identifier?$28877$1XGIwa
     g$identifier?$32466$1XGIwa
     (case-lambda
       ((g$x$32177$1XGIwa) (g$id?$28259$1XGIwa g$x$32177$1XGIwa))))
   (g$datum->syntax$28878$1XGIwa
     g$datum->syntax$32467$1XGIwa
     (case-lambda
       ((g$id$32178$1XGIwa g$datum$32179$1XGIwa)
        (if (g$id?$28259$1XGIwa g$id$32178$1XGIwa)
          (g$datum->stx$28242$1XGIwa
            g$id$32178$1XGIwa
            g$datum$32179$1XGIwa)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$32178$1XGIwa)))))
   (g$syntax->datum$28879$1XGIwa
     g$syntax->datum$32468$1XGIwa
     (case-lambda
       ((g$x$32180$1XGIwa)
        (g$stx->datum$28270$1XGIwa g$x$32180$1XGIwa))))
   (g$compile-r6rs-top-level$28880$1XGIwa
     g$compile-r6rs-top-level$32469$1XGIwa
     (case-lambda
       ((g$x*$32181$1XGIwa)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$28820$1XGIwa g$x*$32181$1XGIwa)))
          (case-lambda
            ((g$lib*$32184$1XGIwa g$invoke-code$32185$1XGIwa)
             ((case-lambda
                ((g$invoke-code$32186$1XGIwa g$lib*$32187$1XGIwa)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$19662$1XGIwa
                        g$invoke-library$27965$1XGIwa
                        g$lib*$32187$1XGIwa)
                      (eval-core
                        (g$expanded->core$27697$1XGIwa
                          g$invoke-code$32186$1XGIwa)))))))
              g$invoke-code$32185$1XGIwa
              g$lib*$32184$1XGIwa)))))))
   (g$pre-compile-r6rs-top-level$28881$1XGIwa
     g$pre-compile-r6rs-top-level$32470$1XGIwa
     (case-lambda
       ((g$x*$32188$1XGIwa)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$28820$1XGIwa g$x*$32188$1XGIwa)))
          (case-lambda
            ((g$lib*$32191$1XGIwa g$invoke-code$32192$1XGIwa)
             ((case-lambda
                ((g$invoke-code$32193$1XGIwa g$lib*$32194$1XGIwa)
                 (begin
                   (g$for-each$19662$1XGIwa
                     g$invoke-library$27965$1XGIwa
                     g$lib*$32194$1XGIwa)
                   (compile-core
                     (g$expanded->core$27697$1XGIwa
                       g$invoke-code$32193$1XGIwa)))))
              g$invoke-code$32192$1XGIwa
              g$lib*$32191$1XGIwa)))))))
   (g$new-interaction-environment$28882$1XGIwa
     g$new-interaction-environment$32471$1XGIwa
     (case-lambda
       (() (g$new-interaction-environment$28882$1XGIwa '(ironscheme)))
       ((g$libname$32195$1XGIwa)
        ((case-lambda
           ((g$lib$32196$1XGIwa g$rib$32197$1XGIwa)
            (begin
              ((case-lambda
                 ((g$subst$32198$1XGIwa)
                  (begin
                    (g$set-rib-sym*!$28212$1XGIwa
                      g$rib$32197$1XGIwa
                      (g$map$19661$1XGIwa car g$subst$32198$1XGIwa))
                    (g$set-rib-mark**!$28213$1XGIwa
                      g$rib$32197$1XGIwa
                      (g$map$19661$1XGIwa
                        (case-lambda
                          ((g$x$32199$1XGIwa) g$top-mark*$28192$1XGIwa))
                        g$subst$32198$1XGIwa))
                    (g$set-rib-label*!$28214$1XGIwa
                      g$rib$32197$1XGIwa
                      (g$map$19661$1XGIwa cdr g$subst$32198$1XGIwa)))))
               (g$library-subst$27922$1XGIwa g$lib$32196$1XGIwa))
              (g$make-interaction-env$28841$1XGIwa
                g$rib$32197$1XGIwa
                '()
                '()))))
         (g$find-library-by-name$27958$1XGIwa g$libname$32195$1XGIwa)
         (g$make-empty-rib$28217$1XGIwa)))))
   (g$interaction-environment$28883$1XGIwa
     g$interaction-environment$32472$1XGIwa
     (g$make-parameter$27100$1XGIwa '#f))
   (g$top-level-context$28884$1XGIwa
     g$top-level-context$32473$1XGIwa
     (g$make-parameter$27100$1XGIwa '#f)))
  (g$current-library-expander$27955$1XGIwa
    g$library-expander$28860$1XGIwa))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$27694$1XGIwa
      (case-lambda
        ((g$x$32560$1XGIwa)
         ((case-lambda
            ((g$t$32561$1XGIwa)
             (if g$t$32561$1XGIwa
               (cdr g$t$32561$1XGIwa)
               (begin '#f '#f))))
          (g$assq$19649$1XGIwa
            g$x$32560$1XGIwa
            '((ellipsis-map . g$ellipsis-map$32357$1XGIwa)
              (&stacktrace-rcd . g$&stacktrace-rcd$22183$1XGIwa)
              (&stacktrace-rtd . g$&stacktrace-rtd$22182$1XGIwa)
              (&where-rcd . g$&where-rcd$22173$1XGIwa)
              (&where-rtd . g$&where-rtd$22172$1XGIwa)
              (&no-nans-rcd . g$&no-nans-rcd$22347$1XGIwa)
              (&no-nans-rtd . g$&no-nans-rtd$22346$1XGIwa)
              (&no-infinities-rcd . g$&no-infinities-rcd$22339$1XGIwa)
              (&no-infinities-rtd . g$&no-infinities-rtd$22338$1XGIwa)
              (&i/o-encoding-rcd . g$&i/o-encoding-rcd$22331$1XGIwa)
              (&i/o-encoding-rtd . g$&i/o-encoding-rtd$22330$1XGIwa)
              (&i/o-decoding-rcd . g$&i/o-decoding-rcd$22321$1XGIwa)
              (&i/o-decoding-rtd . g$&i/o-decoding-rtd$22320$1XGIwa)
              (&i/o-port-rcd . g$&i/o-port-rcd$22313$1XGIwa)
              (&i/o-port-rtd . g$&i/o-port-rtd$22312$1XGIwa)
              (&i/o-file-does-not-exist-rcd
                .
                g$&i/o-file-does-not-exist-rcd$22303$1XGIwa)
              (&i/o-file-does-not-exist-rtd
                .
                g$&i/o-file-does-not-exist-rtd$22302$1XGIwa)
              (&i/o-file-already-exists-rcd
                .
                g$&i/o-file-already-exists-rcd$22295$1XGIwa)
              (&i/o-file-already-exists-rtd
                .
                g$&i/o-file-already-exists-rtd$22294$1XGIwa)
              (&i/o-file-is-read-only-rcd
                .
                g$&i/o-file-is-read-only-rcd$22287$1XGIwa)
              (&i/o-file-is-read-only-rtd
                .
                g$&i/o-file-is-read-only-rtd$22286$1XGIwa)
              (&i/o-file-protection-rcd
                .
                g$&i/o-file-protection-rcd$22279$1XGIwa)
              (&i/o-file-protection-rtd
                .
                g$&i/o-file-protection-rtd$22278$1XGIwa)
              (&i/o-filename-rcd . g$&i/o-filename-rcd$22271$1XGIwa)
              (&i/o-filename-rtd . g$&i/o-filename-rtd$22270$1XGIwa)
              (&i/o-invalid-position-rcd
                .
                g$&i/o-invalid-position-rcd$22261$1XGIwa)
              (&i/o-invalid-position-rtd
                .
                g$&i/o-invalid-position-rtd$22260$1XGIwa)
              (&i/o-write-rcd . g$&i/o-write-rcd$22251$1XGIwa)
              (&i/o-write-rtd . g$&i/o-write-rtd$22250$1XGIwa)
              (&i/o-read-rcd . g$&i/o-read-rcd$22243$1XGIwa)
              (&i/o-read-rtd . g$&i/o-read-rtd$22242$1XGIwa)
              (&i/o-rcd . g$&i/o-rcd$22235$1XGIwa)
              (&i/o-rtd . g$&i/o-rtd$22234$1XGIwa)
              (&undefined-rcd . g$&undefined-rcd$22227$1XGIwa)
              (&undefined-rtd . g$&undefined-rtd$22226$1XGIwa)
              (&syntax-rcd . g$&syntax-rcd$22219$1XGIwa)
              (&syntax-rtd . g$&syntax-rtd$22218$1XGIwa)
              (&lexical-rcd . g$&lexical-rcd$22207$1XGIwa)
              (&lexical-rtd . g$&lexical-rtd$22206$1XGIwa)
              (&implementation-restriction-rcd
                .
                g$&implementation-restriction-rcd$22199$1XGIwa)
              (&implementation-restriction-rtd
                .
                g$&implementation-restriction-rtd$22198$1XGIwa)
              (&non-continuable-rcd
                .
                g$&non-continuable-rcd$22191$1XGIwa)
              (&non-continuable-rtd
                .
                g$&non-continuable-rtd$22190$1XGIwa)
              (&who-rcd . g$&who-rcd$22163$1XGIwa)
              (&who-rtd . g$&who-rtd$22162$1XGIwa)
              (&irritants-rcd . g$&irritants-rcd$22153$1XGIwa)
              (&irritants-rtd . g$&irritants-rtd$22152$1XGIwa)
              (&assertion-rcd . g$&assertion-rcd$22143$1XGIwa)
              (&assertion-rtd . g$&assertion-rtd$22142$1XGIwa)
              (&violation-rcd . g$&violation-rcd$22135$1XGIwa)
              (&violation-rtd . g$&violation-rtd$22134$1XGIwa)
              (&error-rcd . g$&error-rcd$22127$1XGIwa)
              (&error-rtd . g$&error-rtd$22126$1XGIwa)
              (&serious-rcd . g$&serious-rcd$22119$1XGIwa)
              (&serious-rtd . g$&serious-rtd$22118$1XGIwa)
              (&warning-rcd . g$&warning-rcd$22111$1XGIwa)
              (&warning-rtd . g$&warning-rtd$22110$1XGIwa)
              (&message-rcd . g$&message-rcd$22103$1XGIwa)
              (&message-rtd . g$&message-rtd$22102$1XGIwa)
              (&condition-rcd . g$&condition-rcd$22093$1XGIwa)
              (&condition-rtd . g$&condition-rtd$22092$1XGIwa)
              (tanh . g$tanh$21647$1XGIwa)
              (cosh . g$cosh$21645$1XGIwa)
              (sinh . g$sinh$21642$1XGIwa)
              (make-list . g$make-list$19644$1XGIwa)
              (last-pair . g$last-pair$19643$1XGIwa)
              (ironscheme-test . g$ironscheme-test$32550$1XGIwa)
              (ironscheme-build . g$ironscheme-build$32551$1XGIwa)
              (syntax-error . g$syntax-error$32462$1XGIwa)
              (syntax-dispatch . g$syntax-dispatch$32352$1XGIwa)
              (compile-system-libraries
                .
                g$compile-system-libraries$32555$1XGIwa)
              (compile->closure . g$compile->closure$32557$1XGIwa)
              (compile . g$compile$32556$1XGIwa)
              (load . g$load$32549$1XGIwa)
              (new-interaction-environment
                .
                g$new-interaction-environment$32471$1XGIwa)
              (interaction-environment
                .
                g$interaction-environment$32472$1XGIwa)
              (string-titlecase . g$string-titlecase$22670$1XGIwa)
              (string-normalize-nfkd
                .
                g$string-normalize-nfkd$22680$1XGIwa)
              (string-normalize-nfkc
                .
                g$string-normalize-nfkc$22679$1XGIwa)
              (string-normalize-nfd
                .
                g$string-normalize-nfd$22678$1XGIwa)
              (string-normalize-nfc
                .
                g$string-normalize-nfc$22677$1XGIwa)
              (string-foldcase . g$string-foldcase$22671$1XGIwa)
              (string-ci>? . g$string-ci>?$22667$1XGIwa)
              (string-ci>=? . g$string-ci>=?$22669$1XGIwa)
              (string-ci=? . g$string-ci=?$22665$1XGIwa)
              (string-ci<? . g$string-ci<?$22666$1XGIwa)
              (string-ci<=? . g$string-ci<=?$22668$1XGIwa)
              (char-whitespace? . g$char-whitespace?$22657$1XGIwa)
              (char-upper-case? . g$char-upper-case?$22658$1XGIwa)
              (char-title-case? . g$char-title-case?$22660$1XGIwa)
              (char-numeric? . g$char-numeric?$22656$1XGIwa)
              (char-lower-case? . g$char-lower-case?$22659$1XGIwa)
              (char-general-category
                .
                g$char-general-category$22661$1XGIwa)
              (char-upcase . g$char-upcase$22651$1XGIwa)
              (char-titlecase . g$char-titlecase$22653$1XGIwa)
              (char-foldcase . g$char-foldcase$22654$1XGIwa)
              (char-downcase . g$char-downcase$22652$1XGIwa)
              (char-ci>? . g$char-ci>?$22674$1XGIwa)
              (char-ci>=? . g$char-ci>=?$22676$1XGIwa)
              (char-ci=? . g$char-ci=?$22672$1XGIwa)
              (char-ci<? . g$char-ci<?$22673$1XGIwa)
              (char-ci<=? . g$char-ci<=?$22675$1XGIwa)
              (char-alphabetic? . g$char-alphabetic?$22655$1XGIwa)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$32290$1XGIwa)
              (variable-transformer?
                .
                g$variable-transformer?$32289$1XGIwa)
              (make-variable-transformer
                .
                g$make-variable-transformer$32287$1XGIwa)
              (identifier? . g$identifier?$32466$1XGIwa)
              (generate-temporaries
                .
                g$generate-temporaries$32455$1XGIwa)
              (free-identifier=? . g$free-identifier=?$32456$1XGIwa)
              (syntax->datum . g$syntax->datum$32468$1XGIwa)
              (datum->syntax . g$datum->syntax$32467$1XGIwa)
              (bound-identifier=? . g$bound-identifier=?$32457$1XGIwa)
              (delete-file . g$delete-file$20734$1XGIwa)
              (file-exists? . g$file-exists?$20733$1XGIwa)
              (list-sort . g$list-sort$22419$1XGIwa)
              (symbol-hash . g$symbol-hash$20723$1XGIwa)
              (string-ci-hash . g$string-ci-hash$20722$1XGIwa)
              (string-hash . g$string-hash$20721$1XGIwa)
              (make-eqv-hashtable . g$make-eqv-hashtable$20713$1XGIwa)
              (make-eq-hashtable . g$make-eq-hashtable$20712$1XGIwa)
              (hashtable? . g$hashtable?$20711$1XGIwa)
              (hashtable-update! . g$hashtable-update!$20719$1XGIwa)
              (hashtable-size . g$hashtable-size$20714$1XGIwa)
              (hashtable-set! . g$hashtable-set!$20716$1XGIwa)
              (hashtable-ref . g$hashtable-ref$20715$1XGIwa)
              (hashtable-delete! . g$hashtable-delete!$20717$1XGIwa)
              (hashtable-contains? . g$hashtable-contains?$20718$1XGIwa)
              (hashtable-clear! . g$hashtable-clear!$20720$1XGIwa)
              (call-with-output-file
                .
                g$call-with-output-file$26716$1XGIwa)
              (call-with-input-file
                .
                g$call-with-input-file$26715$1XGIwa)
              (write-char . g$write-char$26712$1XGIwa)
              (with-output-to-file . g$with-output-to-file$26714$1XGIwa)
              (with-input-from-file
                .
                g$with-input-from-file$26713$1XGIwa)
              (read-char . g$read-char$26711$1XGIwa)
              (peek-char . g$peek-char$26710$1XGIwa)
              (newline . g$newline$26717$1XGIwa)
              (standard-output-port
                .
                g$standard-output-port$26644$1XGIwa)
              (standard-input-port . g$standard-input-port$26643$1XGIwa)
              (standard-error-port . g$standard-error-port$26642$1XGIwa)
              (put-datum . g$put-datum$26647$1XGIwa)
              (port? . g$port?$26652$1XGIwa)
              (open-string-output-port
                .
                g$open-string-output-port$26651$1XGIwa)
              (native-eol-style . g$native-eol-style$26645$1XGIwa)
              (make-i/o-write-error
                .
                g$make-i/o-write-error$22248$1XGIwa)
              (make-i/o-read-error . g$make-i/o-read-error$22240$1XGIwa)
              (make-i/o-port-error . g$make-i/o-port-error$22308$1XGIwa)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$22256$1XGIwa)
              (make-i/o-filename-error
                .
                g$make-i/o-filename-error$22266$1XGIwa)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$22276$1XGIwa)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$22284$1XGIwa)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$22300$1XGIwa)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$22292$1XGIwa)
              (make-i/o-error . g$make-i/o-error$22232$1XGIwa)
              (make-i/o-encoding-error
                .
                g$make-i/o-encoding-error$22326$1XGIwa)
              (make-i/o-decoding-error
                .
                g$make-i/o-decoding-error$22318$1XGIwa)
              (make-bytevector . g$make-bytevector$21059$1XGIwa)
              (i/o-write-error? . g$i/o-write-error?$22249$1XGIwa)
              (i/o-read-error? . g$i/o-read-error?$22241$1XGIwa)
              (i/o-port-error? . g$i/o-port-error?$22310$1XGIwa)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$22258$1XGIwa)
              (i/o-error-position . g$i/o-error-position$22259$1XGIwa)
              (i/o-filename-error? . g$i/o-filename-error?$22268$1XGIwa)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$22277$1XGIwa)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$22285$1XGIwa)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$22301$1XGIwa)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$22293$1XGIwa)
              (i/o-error? . g$i/o-error?$22233$1XGIwa)
              (i/o-error-port . g$i/o-error-port$22311$1XGIwa)
              (i/o-error-filename . g$i/o-error-filename$22269$1XGIwa)
              (i/o-encoding-error? . g$i/o-encoding-error?$22328$1XGIwa)
              (i/o-encoding-error-char
                .
                g$i/o-encoding-error-char$22329$1XGIwa)
              (i/o-decoding-error? . g$i/o-decoding-error?$22319$1XGIwa)
              (get-datum . g$get-datum$26648$1XGIwa)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$26653$1XGIwa)
              (call-with-port . g$call-with-port$26654$1XGIwa)
              (buffer-mode? . g$buffer-mode?$26646$1XGIwa)
              (scheme-report-environment
                .
                g$scheme-report-environment$32445$1XGIwa)
              (quotient . g$quotient$22386$1XGIwa)
              (null-environment . g$null-environment$32444$1XGIwa)
              (remainder . g$remainder$22387$1XGIwa)
              (modulo . g$modulo$22388$1XGIwa)
              (inexact->exact . g$inexact->exact$22383$1XGIwa)
              (force . g$force$22390$1XGIwa)
              (exact->inexact . g$exact->inexact$22384$1XGIwa)
              (command-line . g$command-line$32544$1XGIwa)
              (string-fill! . g$string-fill!$20584$1XGIwa)
              (string-set! . g$string-set!$20583$1XGIwa)
              (set-cdr! . g$set-cdr!$22361$1XGIwa)
              (set-car! . g$set-car!$22360$1XGIwa)
              (remove . g$remove$19666$1XGIwa)
              (remv . g$remv$19667$1XGIwa)
              (remp . g$remp$19647$1XGIwa)
              (remq . g$remq$19668$1XGIwa)
              (partition . g$partition$19646$1XGIwa)
              (memv . g$memv$19654$1XGIwa)
              (memq . g$memq$19653$1XGIwa)
              (memp . g$memp$19656$1XGIwa)
              (member . g$member$19655$1XGIwa)
              (exists . g$exists$19660$1XGIwa)
              (for-all . g$for-all$19659$1XGIwa)
              (fold-right . g$fold-right$19665$1XGIwa)
              (fold-left . g$fold-left$19664$1XGIwa)
              (find . g$find$19645$1XGIwa)
              (filter . g$filter$19648$1XGIwa)
              (cons* . g$cons*$19663$1XGIwa)
              (assv . g$assv$19650$1XGIwa)
              (assq . g$assq$19649$1XGIwa)
              (assp . g$assp$19652$1XGIwa)
              (assoc . g$assoc$19651$1XGIwa)
              (eval . g$eval$32447$1XGIwa)
              (environment . g$environment$32443$1XGIwa)
              (make-enumeration . g$make-enumeration$26853$1XGIwa)
              (enum-set=? . g$enum-set=?$26860$1XGIwa)
              (enum-set-universe . g$enum-set-universe$26854$1XGIwa)
              (enum-set-union . g$enum-set-union$26861$1XGIwa)
              (enum-set-subset? . g$enum-set-subset?$26859$1XGIwa)
              (enum-set-projection . g$enum-set-projection$26865$1XGIwa)
              (enum-set-member? . g$enum-set-member?$26858$1XGIwa)
              (enum-set-intersection
                .
                g$enum-set-intersection$26862$1XGIwa)
              (enum-set-indexer . g$enum-set-indexer$26855$1XGIwa)
              (enum-set-difference . g$enum-set-difference$26863$1XGIwa)
              (enum-set-constructor
                .
                g$enum-set-constructor$26856$1XGIwa)
              (enum-set-complement . g$enum-set-complement$26864$1XGIwa)
              (enum-set->list . g$enum-set->list$26857$1XGIwa)
              (who-condition? . g$who-condition?$22160$1XGIwa)
              (warning? . g$warning?$22109$1XGIwa)
              (violation? . g$violation?$22133$1XGIwa)
              (undefined-violation?
                .
                g$undefined-violation?$22225$1XGIwa)
              (syntax-violation? . g$syntax-violation?$22215$1XGIwa)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$22217$1XGIwa)
              (syntax-violation-form
                .
                g$syntax-violation-form$22216$1XGIwa)
              (syntax-violation . g$syntax-violation$32465$1XGIwa)
              (serious-condition? . g$serious-condition?$22117$1XGIwa)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$22189$1XGIwa)
              (message-condition? . g$message-condition?$22100$1XGIwa)
              (make-who-condition . g$make-who-condition$22158$1XGIwa)
              (make-warning . g$make-warning$22108$1XGIwa)
              (make-violation . g$make-violation$22132$1XGIwa)
              (make-undefined-violation
                .
                g$make-undefined-violation$22224$1XGIwa)
              (make-syntax-violation
                .
                g$make-syntax-violation$22212$1XGIwa)
              (make-serious-condition
                .
                g$make-serious-condition$22116$1XGIwa)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$22188$1XGIwa)
              (make-message-condition
                .
                g$make-message-condition$22098$1XGIwa)
              (make-lexical-violation
                .
                g$make-lexical-violation$22204$1XGIwa)
              (make-irritants-condition
                .
                g$make-irritants-condition$22148$1XGIwa)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$22196$1XGIwa)
              (make-error . g$make-error$22124$1XGIwa)
              (make-assertion-violation
                .
                g$make-assertion-violation$22140$1XGIwa)
              (lexical-violation? . g$lexical-violation?$22205$1XGIwa)
              (irritants-condition?
                .
                g$irritants-condition?$22150$1XGIwa)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$22197$1XGIwa)
              (error? . g$error?$22125$1XGIwa)
              (condition-who . g$condition-who$22161$1XGIwa)
              (condition-message . g$condition-message$22101$1XGIwa)
              (condition-irritants . g$condition-irritants$22151$1XGIwa)
              (assertion-violation?
                .
                g$assertion-violation?$22141$1XGIwa)
              (utf32->string . g$utf32->string$21077$1XGIwa)
              (utf16->string . g$utf16->string$21076$1XGIwa)
              (utf8->string . g$utf8->string$21074$1XGIwa)
              (uint-list->bytevector
                .
                g$uint-list->bytevector$21078$1XGIwa)
              (u8-list->bytevector . g$u8-list->bytevector$21070$1XGIwa)
              (string->utf8 . g$string->utf8$21071$1XGIwa)
              (string->utf32 . g$string->utf32$21073$1XGIwa)
              (string->utf16 . g$string->utf16$21072$1XGIwa)
              (sint-list->bytevector
                .
                g$sint-list->bytevector$21079$1XGIwa)
              (native-endianness . g$native-endianness$21048$1XGIwa)
              (bytevector? . g$bytevector?$20572$1XGIwa)
              (bytevector=? . g$bytevector=?$21061$1XGIwa)
              (bytevector-u8-set! . g$bytevector-u8-set!$21066$1XGIwa)
              (bytevector-u8-ref . g$bytevector-u8-ref$21065$1XGIwa)
              (bytevector-u64-set! . g$bytevector-u64-set!$21107$1XGIwa)
              (bytevector-u64-ref . g$bytevector-u64-ref$21103$1XGIwa)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$21109$1XGIwa)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$21105$1XGIwa)
              (bytevector-u32-set! . g$bytevector-u32-set!$21099$1XGIwa)
              (bytevector-u32-ref . g$bytevector-u32-ref$21095$1XGIwa)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$21101$1XGIwa)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$21097$1XGIwa)
              (bytevector-u16-set! . g$bytevector-u16-set!$21091$1XGIwa)
              (bytevector-u16-ref . g$bytevector-u16-ref$21087$1XGIwa)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$21093$1XGIwa)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$21089$1XGIwa)
              (bytevector-s8-set! . g$bytevector-s8-set!$21068$1XGIwa)
              (bytevector-s8-ref . g$bytevector-s8-ref$21067$1XGIwa)
              (bytevector-s64-set! . g$bytevector-s64-set!$21108$1XGIwa)
              (bytevector-s64-ref . g$bytevector-s64-ref$21104$1XGIwa)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$21110$1XGIwa)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$21106$1XGIwa)
              (bytevector-s32-set! . g$bytevector-s32-set!$21100$1XGIwa)
              (bytevector-s32-ref . g$bytevector-s32-ref$21096$1XGIwa)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$21102$1XGIwa)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$21098$1XGIwa)
              (bytevector-s16-set! . g$bytevector-s16-set!$21092$1XGIwa)
              (bytevector-s16-ref . g$bytevector-s16-ref$21088$1XGIwa)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$21094$1XGIwa)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$21090$1XGIwa)
              (bytevector-length . g$bytevector-length$21060$1XGIwa)
              (bytevector-ieee-single-set!
                .
                g$bytevector-ieee-single-set!$21085$1XGIwa)
              (bytevector-ieee-single-ref
                .
                g$bytevector-ieee-single-ref$21083$1XGIwa)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$21113$1XGIwa)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$21111$1XGIwa)
              (bytevector-ieee-double-set!
                .
                g$bytevector-ieee-double-set!$21086$1XGIwa)
              (bytevector-ieee-double-ref
                .
                g$bytevector-ieee-double-ref$21084$1XGIwa)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$21114$1XGIwa)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$21112$1XGIwa)
              (bytevector-fill! . g$bytevector-fill!$21062$1XGIwa)
              (bytevector-copy! . g$bytevector-copy!$21063$1XGIwa)
              (bytevector-copy . g$bytevector-copy$21064$1XGIwa)
              (bytevector->uint-list
                .
                g$bytevector->uint-list$21080$1XGIwa)
              (bytevector->u8-list . g$bytevector->u8-list$21069$1XGIwa)
              (bytevector->sint-list
                .
                g$bytevector->sint-list$21081$1XGIwa)
              (no-nans-violation? . g$no-nans-violation?$22345$1XGIwa)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$22337$1XGIwa)
              (make-no-nans-violation
                .
                g$make-no-nans-violation$22344$1XGIwa)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$22336$1XGIwa)
              (real->flonum . g$real->flonum$21601$1XGIwa)
              (flzero? . g$flzero?$26609$1XGIwa)
              (fltruncate . g$fltruncate$26604$1XGIwa)
              (fltan . g$fltan$26593$1XGIwa)
              (flsqrt . g$flsqrt$26598$1XGIwa)
              (flsin . g$flsin$26591$1XGIwa)
              (flround . g$flround$26605$1XGIwa)
              (flpositive? . g$flpositive?$26607$1XGIwa)
              (flonum? . g$flonum?$20577$1XGIwa)
              (flodd? . g$flodd?$26611$1XGIwa)
              (flnumerator . g$flnumerator$26569$1XGIwa)
              (flnegative? . g$flnegative?$26608$1XGIwa)
              (flnan? . g$flnan?$26590$1XGIwa)
              (flmod0 . g$flmod0$26581$1XGIwa)
              (flmod . g$flmod$26580$1XGIwa)
              (flmin . g$flmin$26613$1XGIwa)
              (flmax . g$flmax$26612$1XGIwa)
              (fllog . g$fllog$26597$1XGIwa)
              (flinteger? . g$flinteger?$26586$1XGIwa)
              (flinfinite? . g$flinfinite?$26589$1XGIwa)
              (flfloor . g$flfloor$26603$1XGIwa)
              (flfinite? . g$flfinite?$26587$1XGIwa)
              (flexpt . g$flexpt$26600$1XGIwa)
              (flexp . g$flexp$26599$1XGIwa)
              (fleven? . g$fleven?$26610$1XGIwa)
              (fldiv0-and-mod0 . g$fldiv0-and-mod0$26585$1XGIwa)
              (fldiv0 . g$fldiv0$26578$1XGIwa)
              (fldiv-and-mod . g$fldiv-and-mod$26582$1XGIwa)
              (fldiv . g$fldiv$26584$1XGIwa)
              (fldenominator . g$fldenominator$26568$1XGIwa)
              (flcos . g$flcos$26592$1XGIwa)
              (flceiling . g$flceiling$26601$1XGIwa)
              (flatan . g$flatan$26596$1XGIwa)
              (flasin . g$flasin$26594$1XGIwa)
              (flacos . g$flacos$26595$1XGIwa)
              (flabs . g$flabs$26606$1XGIwa)
              (fl>? . g$fl>?$26575$1XGIwa)
              (fl>=? . g$fl>=?$26576$1XGIwa)
              (fl=? . g$fl=?$26572$1XGIwa)
              (fl<? . g$fl<?$26573$1XGIwa)
              (fl<=? . g$fl<=?$26574$1XGIwa)
              (fl/ . g$fl/$26571$1XGIwa)
              (fl- . g$fl-$26570$1XGIwa)
              (fl+ . g$fl+$26566$1XGIwa)
              (fl* . g$fl*$26567$1XGIwa)
              (fixnum->flonum . g$fixnum->flonum$21602$1XGIwa)
              (fxzero? . g$fxzero?$25051$1XGIwa)
              (fxxor . g$fxxor$25035$1XGIwa)
              (fxrotate-bit-field . g$fxrotate-bit-field$25071$1XGIwa)
              (fxreverse-bit-field . g$fxreverse-bit-field$25072$1XGIwa)
              (fxpositive? . g$fxpositive?$25047$1XGIwa)
              (fxodd? . g$fxodd?$25055$1XGIwa)
              (fxnot . g$fxnot$25027$1XGIwa)
              (fxnegative? . g$fxnegative?$25049$1XGIwa)
              (fxmod0 . g$fxmod0$25040$1XGIwa)
              (fxmod . g$fxmod$25039$1XGIwa)
              (fxmin . g$fxmin$25057$1XGIwa)
              (fxmax . g$fxmax$25056$1XGIwa)
              (fxlength . g$fxlength$25024$1XGIwa)
              (fxior . g$fxior$25034$1XGIwa)
              (fxif . g$fxif$25062$1XGIwa)
              (fxfirst-bit-set . g$fxfirst-bit-set$25025$1XGIwa)
              (fxeven? . g$fxeven?$25053$1XGIwa)
              (fxdiv0-and-mod0 . g$fxdiv0-and-mod0$25045$1XGIwa)
              (fxdiv0 . g$fxdiv0$25043$1XGIwa)
              (fxdiv-and-mod . g$fxdiv-and-mod$25041$1XGIwa)
              (fxdiv . g$fxdiv$25037$1XGIwa)
              (fxcopy-bit-field . g$fxcopy-bit-field$25068$1XGIwa)
              (fxcopy-bit . g$fxcopy-bit$25064$1XGIwa)
              (fxbit-set? . g$fxbit-set?$25026$1XGIwa)
              (fxbit-field . g$fxbit-field$25066$1XGIwa)
              (fxbit-count . g$fxbit-count$25022$1XGIwa)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$25070$1XGIwa)
              (fxarithmetic-shift-left
                .
                g$fxarithmetic-shift-left$25069$1XGIwa)
              (fxarithmetic-shift . g$fxarithmetic-shift$25020$1XGIwa)
              (fxand . g$fxand$25033$1XGIwa)
              (fx>? . g$fx>?$25031$1XGIwa)
              (fx>=? . g$fx>=?$25032$1XGIwa)
              (fx=? . g$fx=?$25028$1XGIwa)
              (fx<? . g$fx<?$25029$1XGIwa)
              (fx<=? . g$fx<=?$25030$1XGIwa)
              (fx-/carry . g$fx-/carry$25059$1XGIwa)
              (fx- . g$fx-$25017$1XGIwa)
              (fx+/carry . g$fx+/carry$25060$1XGIwa)
              (fx+ . g$fx+$25015$1XGIwa)
              (fx*/carry . g$fx*/carry$25058$1XGIwa)
              (fx* . g$fx*$25016$1XGIwa)
              (greatest-fixnum . g$greatest-fixnum$25013$1XGIwa)
              (least-fixnum . g$least-fixnum$25014$1XGIwa)
              (fixnum-width . g$fixnum-width$20578$1XGIwa)
              (fixnum? . g$fixnum?$20576$1XGIwa)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$22782$1XGIwa)
              (bitwise-reverse-bit-field
                .
                g$bitwise-reverse-bit-field$22783$1XGIwa)
              (bitwise-length . g$bitwise-length$22773$1XGIwa)
              (bitwise-if . g$bitwise-if$22776$1XGIwa)
              (bitwise-first-bit-set
                .
                g$bitwise-first-bit-set$22774$1XGIwa)
              (bitwise-copy-bit-field
                .
                g$bitwise-copy-bit-field$22779$1XGIwa)
              (bitwise-copy-bit . g$bitwise-copy-bit$22777$1XGIwa)
              (bitwise-bit-set? . g$bitwise-bit-set?$22775$1XGIwa)
              (bitwise-bit-field . g$bitwise-bit-field$22778$1XGIwa)
              (bitwise-bit-count . g$bitwise-bit-count$22772$1XGIwa)
              (bitwise-xor . g$bitwise-xor$22771$1XGIwa)
              (bitwise-ior . g$bitwise-ior$22770$1XGIwa)
              (bitwise-and . g$bitwise-and$22769$1XGIwa)
              (bitwise-not . g$bitwise-not$22768$1XGIwa)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$22781$1XGIwa)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$22780$1XGIwa)
              (zero? . g$zero?$21616$1XGIwa)
              (vector? . g$vector?$20571$1XGIwa)
              (vector-set! . g$vector-set!$20603$1XGIwa)
              (vector-ref . g$vector-ref$20602$1XGIwa)
              (vector-map . g$vector-map$20663$1XGIwa)
              (vector-length . g$vector-length$20605$1XGIwa)
              (vector-for-each . g$vector-for-each$20664$1XGIwa)
              (vector-fill! . g$vector-fill!$20606$1XGIwa)
              (vector->list . g$vector->list$20607$1XGIwa)
              (truncate . g$truncate$21654$1XGIwa)
              (tan . g$tan$21646$1XGIwa)
              (symbol? . g$symbol?$20573$1XGIwa)
              (symbol=? . g$symbol=?$20653$1XGIwa)
              (symbol->string . g$symbol->string$20593$1XGIwa)
              (substring . g$substring$20590$1XGIwa)
              (string? . g$string?$20569$1XGIwa)
              (string>? . g$string>?$20650$1XGIwa)
              (string>=? . g$string>=?$20652$1XGIwa)
              (string=? . g$string=?$20648$1XGIwa)
              (string<? . g$string<?$20649$1XGIwa)
              (string<=? . g$string<=?$20651$1XGIwa)
              (string-ref . g$string-ref$20582$1XGIwa)
              (string-length . g$string-length$20585$1XGIwa)
              (string-for-each . g$string-for-each$20665$1XGIwa)
              (string-copy . g$string-copy$20589$1XGIwa)
              (string-append . g$string-append$20591$1XGIwa)
              (string->symbol . g$string->symbol$20594$1XGIwa)
              (string->list . g$string->list$20588$1XGIwa)
              (string . g$string$20587$1XGIwa)
              (sqrt . g$sqrt$21656$1XGIwa)
              (sin . g$sin$21640$1XGIwa)
              (round . g$round$21655$1XGIwa)
              (reverse . g$reverse$20609$1XGIwa)
              (real? . g$real?$21610$1XGIwa)
              (real-valued? . g$real-valued?$21613$1XGIwa)
              (real-part . g$real-part$21637$1XGIwa)
              (rationalize . g$rationalize$20660$1XGIwa)
              (rational? . g$rational?$21611$1XGIwa)
              (rational-valued? . g$rational-valued?$21614$1XGIwa)
              (procedure? . g$procedure?$20575$1XGIwa)
              (positive? . g$positive?$21617$1XGIwa)
              (odd? . g$odd?$20642$1XGIwa)
              (numerator . g$numerator$21635$1XGIwa)
              (number? . g$number?$21603$1XGIwa)
              (number->string . g$number->string$21624$1XGIwa)
              (negative? . g$negative?$21618$1XGIwa)
              (nan? . g$nan?$21604$1XGIwa)
              (min . g$min$20644$1XGIwa)
              (max . g$max$20643$1XGIwa)
              (map . g$map$19661$1XGIwa)
              (make-vector . g$make-vector$20604$1XGIwa)
              (make-string . g$make-string$20581$1XGIwa)
              (make-rectangular . g$make-rectangular$21630$1XGIwa)
              (make-polar . g$make-polar$21631$1XGIwa)
              (magnitude . g$magnitude$21633$1XGIwa)
              (log . g$log$21649$1XGIwa)
              (list-tail . g$list-tail$19641$1XGIwa)
              (list-ref . g$list-ref$19642$1XGIwa)
              (list->vector . g$list->vector$20600$1XGIwa)
              (list->string . g$list->string$20601$1XGIwa)
              (lcm . g$lcm$20646$1XGIwa)
              (integer? . g$integer?$21612$1XGIwa)
              (integer-valued? . g$integer-valued?$21615$1XGIwa)
              (integer->char . g$integer->char$20580$1XGIwa)
              (infinite? . g$infinite?$21606$1XGIwa)
              (inexact? . g$inexact?$21608$1XGIwa)
              (inexact . g$inexact$21619$1XGIwa)
              (imag-part . g$imag-part$21638$1XGIwa)
              (gcd . g$gcd$20645$1XGIwa)
              (for-each . g$for-each$19662$1XGIwa)
              (floor . g$floor$21652$1XGIwa)
              (finite? . g$finite?$21605$1XGIwa)
              (expt . g$expt$21658$1XGIwa)
              (exp . g$exp$21639$1XGIwa)
              (exact? . g$exact?$21607$1XGIwa)
              (exact-integer-sqrt . g$exact-integer-sqrt$21657$1XGIwa)
              (exact . g$exact$21620$1XGIwa)
              (even? . g$even?$20641$1XGIwa)
              (div0-and-mod0 . g$div0-and-mod0$20599$1XGIwa)
              (mod0 . g$mod0$20597$1XGIwa)
              (div0 . g$div0$20595$1XGIwa)
              (div-and-mod . g$div-and-mod$20598$1XGIwa)
              (mod . g$mod$20596$1XGIwa)
              (div . g$div$21650$1XGIwa)
              (denominator . g$denominator$21636$1XGIwa)
              (cos . g$cos$21643$1XGIwa)
              (complex? . g$complex?$21609$1XGIwa)
              (char? . g$char?$20570$1XGIwa)
              (char>? . g$char>?$20657$1XGIwa)
              (char>=? . g$char>=?$20659$1XGIwa)
              (char=? . g$char=?$20655$1XGIwa)
              (char<? . g$char<?$20656$1XGIwa)
              (char<=? . g$char<=?$20658$1XGIwa)
              (char->integer . g$char->integer$20579$1XGIwa)
              (ceiling . g$ceiling$21653$1XGIwa)
              (cddddr . g$cddddr$20637$1XGIwa)
              (cdddar . g$cdddar$20636$1XGIwa)
              (cddadr . g$cddadr$20635$1XGIwa)
              (cddaar . g$cddaar$20634$1XGIwa)
              (cdaddr . g$cdaddr$20633$1XGIwa)
              (cdadar . g$cdadar$20632$1XGIwa)
              (cdaadr . g$cdaadr$20631$1XGIwa)
              (cdaaar . g$cdaaar$20630$1XGIwa)
              (cadddr . g$cadddr$20629$1XGIwa)
              (caddar . g$caddar$20628$1XGIwa)
              (cadadr . g$cadadr$20627$1XGIwa)
              (cadaar . g$cadaar$20626$1XGIwa)
              (caaddr . g$caaddr$20625$1XGIwa)
              (caadar . g$caadar$20624$1XGIwa)
              (caaadr . g$caaadr$20623$1XGIwa)
              (caaaar . g$caaaar$20622$1XGIwa)
              (cdddr . g$cdddr$20621$1XGIwa)
              (cddar . g$cddar$20620$1XGIwa)
              (cdadr . g$cdadr$20619$1XGIwa)
              (cdaar . g$cdaar$20618$1XGIwa)
              (caddr . g$caddr$20617$1XGIwa)
              (cadar . g$cadar$20616$1XGIwa)
              (caadr . g$caadr$20615$1XGIwa)
              (caaar . g$caaar$20614$1XGIwa)
              (cddr . g$cddr$20613$1XGIwa)
              (cdar . g$cdar$20612$1XGIwa)
              (cadr . g$cadr$20611$1XGIwa)
              (caar . g$caar$20610$1XGIwa)
              (boolean? . g$boolean?$20574$1XGIwa)
              (boolean=? . g$boolean=?$20654$1XGIwa)
              (atan . g$atan$21648$1XGIwa)
              (asin . g$asin$21641$1XGIwa)
              (angle . g$angle$21632$1XGIwa)
              (acos . g$acos$21644$1XGIwa)
              (abs . g$abs$21651$1XGIwa)
              (>= . g$>=$21629$1XGIwa)
              (> . g$>$21628$1XGIwa)
              (= . g$=$21625$1XGIwa)
              (<= . g$<=$21627$1XGIwa)
              (< . g$<$21626$1XGIwa)
              (enum-set? . g$enum?$26834$1XGIwa)
              (make-promise . g$make-promise$22389$1XGIwa)
              (load/unload . g$load/unload$32548$1XGIwa)
              (load/args . g$load/args$32547$1XGIwa)
              (printf . g$printf$26889$1XGIwa)
              (fprintf . g$fprintf$26890$1XGIwa)
              (format . g$format$26891$1XGIwa)
              (trace-printer . g$trace-printer$32542$1XGIwa)
              (make-traced-macro . g$make-traced-macro$26895$1XGIwa)
              (assertion-error . g$assertion-error$32461$1XGIwa)
              (make-parameter . g$make-parameter$27100$1XGIwa)
              (environment-bindings
                .
                g$environment-bindings$32439$1XGIwa)
              (environment-symbols . g$environment-symbols$32442$1XGIwa)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$32438$1XGIwa)
              (library-path . g$library-path$27947$1XGIwa)
              (make-compile-time-value
                .
                g$make-compile-time-value$32288$1XGIwa)
              (expand->core . g$expand->core$32448$1XGIwa)
              (expand . g$expand$32446$1XGIwa)
              (emacs-mode? . g$emacs-mode?$32545$1XGIwa)
              (syntax-transpose . g$syntax-transpose$32395$1XGIwa)
              (convert->cps . g$convert->cps$27628$1XGIwa)
              (condition-stacktrace
                .
                g$condition-stacktrace$22181$1XGIwa)
              (stacktrace-condition?
                .
                g$stacktrace-condition?$22180$1XGIwa)
              (stacktrace-enable? . g$stacktrace-enable?$32543$1XGIwa)
              (make-stacktrace-condition
                .
                g$make-stacktrace-condition$22178$1XGIwa)
              (condition-where . g$condition-where$22171$1XGIwa)
              (where-condition? . g$where-condition?$22170$1XGIwa)
              (make-where-condition
                .
                g$make-where-condition$22168$1XGIwa)
              (installed-libraries . g$installed-libraries$27968$1XGIwa)
              (uninstall-library . g$uninstall-library$27959$1XGIwa)
              (pretty-gensyms . g$pretty-gensyms$27308$1XGIwa)
              (pretty-width . g$pretty-width$27305$1XGIwa)
              (pretty-print . g$pretty-print$27310$1XGIwa)))))))
    (g$install-library$27963$1XGIwa
      'g$13875$1XGIwa
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$6295$1XGIwa)
        (cosh . g$6293$1XGIwa)
        (sinh . g$6290$1XGIwa)
        (make-guid . g$13868$1XGIwa)
        (unspecified? . g$13867$1XGIwa)
        (make-list . g$5170$1XGIwa)
        (last-pair . g$5169$1XGIwa)
        (load-r5rs . g$13866$1XGIwa)
        (license . g$13865$1XGIwa)
        (stacktrace . g$13864$1XGIwa)
        (ironscheme-test . g$13469$1XGIwa)
        (ironscheme-build . g$13470$1XGIwa)
        (remove-location . g$13848$1XGIwa)
        (set-symbol-value! . g$13847$1XGIwa)
        (symbol-value . g$13846$1XGIwa)
        (symbol-bound? . g$13845$1XGIwa)
        (ungensym . g$13844$1XGIwa)
        (gensym . g$13843$1XGIwa)
        (void . g$13842$1XGIwa)
        (compile-system-libraries . g$13474$1XGIwa)
        (compile->closure . g$13476$1XGIwa)
        (compile . g$13475$1XGIwa)
        (load . g$13468$1XGIwa)
        (new-interaction-environment . g$10450$1XGIwa)
        (interaction-environment . g$10451$1XGIwa)
        (string-upcase . g$13837$1XGIwa)
        (string-titlecase . g$7092$1XGIwa)
        (string-normalize-nfkd . g$7112$1XGIwa)
        (string-normalize-nfkc . g$7111$1XGIwa)
        (string-normalize-nfd . g$7110$1XGIwa)
        (string-normalize-nfc . g$7109$1XGIwa)
        (string-foldcase . g$7093$1XGIwa)
        (string-downcase . g$13836$1XGIwa)
        (string-ci>? . g$7089$1XGIwa)
        (string-ci>=? . g$7091$1XGIwa)
        (string-ci=? . g$7087$1XGIwa)
        (string-ci<? . g$7088$1XGIwa)
        (string-ci<=? . g$7090$1XGIwa)
        (char-whitespace? . g$7069$1XGIwa)
        (char-upper-case? . g$7070$1XGIwa)
        (char-title-case? . g$7072$1XGIwa)
        (char-numeric? . g$7068$1XGIwa)
        (char-lower-case? . g$7071$1XGIwa)
        (char-general-category . g$7073$1XGIwa)
        (char-upcase . g$7063$1XGIwa)
        (char-titlecase . g$7065$1XGIwa)
        (char-foldcase . g$7066$1XGIwa)
        (char-downcase . g$7064$1XGIwa)
        (char-ci>? . g$7101$1XGIwa)
        (char-ci>=? . g$7103$1XGIwa)
        (char-ci=? . g$7099$1XGIwa)
        (char-ci<? . g$7100$1XGIwa)
        (char-ci<=? . g$7102$1XGIwa)
        (char-alphabetic? . g$7067$1XGIwa)
        (make-variable-transformer . g$10125$1XGIwa)
        (identifier? . g$10445$1XGIwa)
        (generate-temporaries . g$10434$1XGIwa)
        (free-identifier=? . g$10435$1XGIwa)
        (syntax->datum . g$10447$1XGIwa)
        (datum->syntax . g$10446$1XGIwa)
        (bound-identifier=? . g$10436$1XGIwa)
        (record-type-descriptor? . g$13835$1XGIwa)
        (record-predicate . g$13834$1XGIwa)
        (record-mutator . g$13833$1XGIwa)
        (record-constructor . g$13832$1XGIwa)
        (record-accessor . g$13831$1XGIwa)
        (make-record-type-descriptor . g$13830$1XGIwa)
        (make-record-constructor-descriptor . g$13829$1XGIwa)
        (record? . g$13828$1XGIwa)
        (record-type-uid . g$13827$1XGIwa)
        (record-type-sealed? . g$13826$1XGIwa)
        (record-type-parent . g$13825$1XGIwa)
        (record-type-opaque? . g$13824$1XGIwa)
        (record-type-name . g$13823$1XGIwa)
        (record-type-generative? . g$13822$1XGIwa)
        (record-type-field-names . g$13821$1XGIwa)
        (record-rtd . g$13820$1XGIwa)
        (record-field-mutable? . g$13819$1XGIwa)
        (delete-file . g$5915$1XGIwa)
        (file-exists? . g$5914$1XGIwa)
        (vector-sort! . g$13818$1XGIwa)
        (vector-sort . g$13817$1XGIwa)
        (list-sort . g$7036$1XGIwa)
        (symbol-hash . g$5885$1XGIwa)
        (string-ci-hash . g$5884$1XGIwa)
        (string-hash . g$5883$1XGIwa)
        (equal-hash . g$13816$1XGIwa)
        (hashtable-equivalence-function . g$13815$1XGIwa)
        (make-hashtable . g$13814$1XGIwa)
        (hashtable-hash-function . g$13813$1XGIwa)
        (make-eqv-hashtable . g$5875$1XGIwa)
        (make-eq-hashtable . g$5874$1XGIwa)
        (hashtable? . g$5873$1XGIwa)
        (hashtable-update! . g$5881$1XGIwa)
        (hashtable-size . g$5876$1XGIwa)
        (hashtable-set! . g$5878$1XGIwa)
        (hashtable-ref . g$5877$1XGIwa)
        (hashtable-mutable? . g$13812$1XGIwa)
        (hashtable-keys . g$13811$1XGIwa)
        (hashtable-entries . g$13810$1XGIwa)
        (hashtable-delete! . g$5879$1XGIwa)
        (hashtable-copy . g$13809$1XGIwa)
        (hashtable-contains? . g$5880$1XGIwa)
        (hashtable-clear! . g$5882$1XGIwa)
        (call-with-output-file . g$8933$1XGIwa)
        (call-with-input-file . g$8932$1XGIwa)
        (write-char . g$8924$1XGIwa)
        (write . g$13808$1XGIwa)
        (with-output-to-file . g$8931$1XGIwa)
        (with-input-from-file . g$8930$1XGIwa)
        (read-char . g$8923$1XGIwa)
        (read . g$13807$1XGIwa)
        (peek-char . g$8922$1XGIwa)
        (open-output-file . g$13806$1XGIwa)
        (open-input-file . g$13805$1XGIwa)
        (newline . g$8934$1XGIwa)
        (display . g$13804$1XGIwa)
        (close-output-port . g$13803$1XGIwa)
        (close-input-port . g$13802$1XGIwa)
        (eof-object? . g$13801$1XGIwa)
        (eof-object . g$13800$1XGIwa)
        (current-error-port . g$13799$1XGIwa)
        (current-output-port . g$13798$1XGIwa)
        (current-input-port . g$13797$1XGIwa)
        (output-port? . g$13796$1XGIwa)
        (input-port? . g$13795$1XGIwa)
        (utf-8-codec . g$13794$1XGIwa)
        (utf-16-codec . g$13793$1XGIwa)
        (transcoder-error-handling-mode . g$13792$1XGIwa)
        (transcoder-eol-style . g$13791$1XGIwa)
        (transcoder-codec . g$13790$1XGIwa)
        (transcoded-port . g$13789$1XGIwa)
        (textual-port? . g$13788$1XGIwa)
        (string->bytevector . g$13787$1XGIwa)
        (standard-output-port . g$8898$1XGIwa)
        (standard-input-port . g$8897$1XGIwa)
        (standard-error-port . g$8896$1XGIwa)
        (set-port-position! . g$13786$1XGIwa)
        (put-u8 . g$13785$1XGIwa)
        (put-string . g$13784$1XGIwa)
        (put-datum . g$8901$1XGIwa)
        (put-char . g$13783$1XGIwa)
        (put-bytevector . g$13782$1XGIwa)
        (port? . g$8906$1XGIwa)
        (port-transcoder . g$13781$1XGIwa)
        (port-position . g$13780$1XGIwa)
        (port-has-set-port-position!? . g$13779$1XGIwa)
        (port-has-port-position? . g$13778$1XGIwa)
        (port-eof? . g$13777$1XGIwa)
        (output-port-buffer-mode . g$13776$1XGIwa)
        (open-string-output-port . g$8905$1XGIwa)
        (open-string-input-port . g$13775$1XGIwa)
        (open-file-output-port . g$13774$1XGIwa)
        (open-file-input/output-port . g$13773$1XGIwa)
        (open-file-input-port . g$13772$1XGIwa)
        (open-bytevector-output-port . g$13771$1XGIwa)
        (open-bytevector-input-port . g$13770$1XGIwa)
        (native-transcoder . g$13769$1XGIwa)
        (native-eol-style . g$8899$1XGIwa)
        (make-transcoder . g$13768$1XGIwa)
        (latin-1-codec . g$13767$1XGIwa)
        (make-i/o-write-error . g$6840$1XGIwa)
        (make-i/o-read-error . g$6827$1XGIwa)
        (make-i/o-port-error . g$6935$1XGIwa)
        (make-i/o-invalid-position-error . g$6853$1XGIwa)
        (make-i/o-filename-error . g$6868$1XGIwa)
        (make-i/o-file-protection-error . g$6883$1XGIwa)
        (make-i/o-file-is-read-only-error . g$6896$1XGIwa)
        (make-i/o-file-does-not-exist-error . g$6922$1XGIwa)
        (make-i/o-file-already-exists-error . g$6909$1XGIwa)
        (make-i/o-error . g$6814$1XGIwa)
        (make-i/o-encoding-error . g$6963$1XGIwa)
        (make-i/o-decoding-error . g$6950$1XGIwa)
        (make-custom-textual-output-port . g$13766$1XGIwa)
        (make-custom-textual-input/output-port . g$13765$1XGIwa)
        (make-custom-textual-input-port . g$13764$1XGIwa)
        (make-custom-binary-output-port . g$13763$1XGIwa)
        (make-custom-binary-input/output-port . g$13762$1XGIwa)
        (make-custom-binary-input-port . g$13761$1XGIwa)
        (make-bytevector . g$5935$1XGIwa)
        (lookahead-u8 . g$13760$1XGIwa)
        (lookahead-char . g$13759$1XGIwa)
        (i/o-write-error? . g$6841$1XGIwa)
        (i/o-read-error? . g$6828$1XGIwa)
        (i/o-port-error? . g$6937$1XGIwa)
        (i/o-invalid-position-error? . g$6855$1XGIwa)
        (i/o-error-position . g$6856$1XGIwa)
        (i/o-filename-error? . g$6870$1XGIwa)
        (i/o-file-protection-error? . g$6884$1XGIwa)
        (i/o-file-is-read-only-error? . g$6897$1XGIwa)
        (i/o-file-does-not-exist-error? . g$6923$1XGIwa)
        (i/o-file-already-exists-error? . g$6910$1XGIwa)
        (i/o-error? . g$6815$1XGIwa)
        (i/o-error-port . g$6938$1XGIwa)
        (i/o-error-filename . g$6871$1XGIwa)
        (i/o-encoding-error? . g$6965$1XGIwa)
        (i/o-encoding-error-char . g$6966$1XGIwa)
        (i/o-decoding-error? . g$6951$1XGIwa)
        (get-u8 . g$13758$1XGIwa)
        (get-string-n! . g$13757$1XGIwa)
        (get-string-n . g$13756$1XGIwa)
        (get-string-all . g$13755$1XGIwa)
        (get-line . g$13754$1XGIwa)
        (get-datum . g$8902$1XGIwa)
        (get-char . g$13753$1XGIwa)
        (get-bytevector-some . g$13752$1XGIwa)
        (get-bytevector-n! . g$13751$1XGIwa)
        (get-bytevector-n . g$13750$1XGIwa)
        (get-bytevector-all . g$13749$1XGIwa)
        (flush-output-port . g$13748$1XGIwa)
        (close-port . g$13747$1XGIwa)
        (call-with-string-output-port . g$8907$1XGIwa)
        (call-with-port . g$8908$1XGIwa)
        (call-with-bytevector-output-port . g$13746$1XGIwa)
        (bytevector->string . g$13745$1XGIwa)
        (buffer-mode? . g$8900$1XGIwa)
        (binary-port? . g$13744$1XGIwa)
        (scheme-report-environment . g$10424$1XGIwa)
        (quotient . g$7015$1XGIwa)
        (null-environment . g$10423$1XGIwa)
        (remainder . g$7016$1XGIwa)
        (modulo . g$7017$1XGIwa)
        (inexact->exact . g$7012$1XGIwa)
        (force . g$7019$1XGIwa)
        (exact->inexact . g$7013$1XGIwa)
        (exit . g$13743$1XGIwa)
        (command-line . g$13463$1XGIwa)
        (string-fill! . g$5541$1XGIwa)
        (string-set! . g$5540$1XGIwa)
        (set-cdr! . g$6998$1XGIwa)
        (set-car! . g$6997$1XGIwa)
        (remove . g$5192$1XGIwa)
        (remv . g$5193$1XGIwa)
        (remp . g$5173$1XGIwa)
        (remq . g$5194$1XGIwa)
        (partition . g$5172$1XGIwa)
        (memv . g$5180$1XGIwa)
        (memq . g$5179$1XGIwa)
        (memp . g$5182$1XGIwa)
        (member . g$5181$1XGIwa)
        (exists . g$5186$1XGIwa)
        (for-all . g$5185$1XGIwa)
        (fold-right . g$5191$1XGIwa)
        (fold-left . g$5190$1XGIwa)
        (find . g$5171$1XGIwa)
        (filter . g$5174$1XGIwa)
        (cons* . g$5189$1XGIwa)
        (assv . g$5176$1XGIwa)
        (assq . g$5175$1XGIwa)
        (assp . g$5178$1XGIwa)
        (assoc . g$5177$1XGIwa)
        (with-exception-handler . g$13742$1XGIwa)
        (raise-continuable . g$13741$1XGIwa)
        (raise . g$13740$1XGIwa)
        (eval . g$10426$1XGIwa)
        (environment . g$10422$1XGIwa)
        (make-enumeration . g$8994$1XGIwa)
        (enum-set=? . g$9001$1XGIwa)
        (enum-set-universe . g$8995$1XGIwa)
        (enum-set-union . g$9002$1XGIwa)
        (enum-set-subset? . g$9000$1XGIwa)
        (enum-set-projection . g$9006$1XGIwa)
        (enum-set-member? . g$8999$1XGIwa)
        (enum-set-intersection . g$9003$1XGIwa)
        (enum-set-indexer . g$8996$1XGIwa)
        (enum-set-difference . g$9004$1XGIwa)
        (enum-set-constructor . g$8997$1XGIwa)
        (enum-set-complement . g$9005$1XGIwa)
        (enum-set->list . g$8998$1XGIwa)
        (who-condition? . g$6702$1XGIwa)
        (warning? . g$6621$1XGIwa)
        (violation? . g$6660$1XGIwa)
        (undefined-violation? . g$6802$1XGIwa)
        (syntax-violation? . g$6787$1XGIwa)
        (syntax-violation-subform . g$6789$1XGIwa)
        (syntax-violation-form . g$6788$1XGIwa)
        (syntax-violation . g$10444$1XGIwa)
        (simple-conditions . g$13739$1XGIwa)
        (serious-condition? . g$6634$1XGIwa)
        (non-continuable-violation? . g$6746$1XGIwa)
        (message-condition? . g$6607$1XGIwa)
        (make-who-condition . g$6700$1XGIwa)
        (make-warning . g$6620$1XGIwa)
        (make-violation . g$6659$1XGIwa)
        (make-undefined-violation . g$6801$1XGIwa)
        (make-syntax-violation . g$6784$1XGIwa)
        (make-serious-condition . g$6633$1XGIwa)
        (make-non-continuable-violation . g$6745$1XGIwa)
        (make-message-condition . g$6605$1XGIwa)
        (make-lexical-violation . g$6771$1XGIwa)
        (make-irritants-condition . g$6685$1XGIwa)
        (make-implementation-restriction-violation . g$6758$1XGIwa)
        (make-error . g$6646$1XGIwa)
        (make-assertion-violation . g$6672$1XGIwa)
        (lexical-violation? . g$6772$1XGIwa)
        (irritants-condition? . g$6687$1XGIwa)
        (implementation-restriction-violation? . g$6759$1XGIwa)
        (error? . g$6647$1XGIwa)
        (condition-who . g$6703$1XGIwa)
        (condition-predicate . g$13738$1XGIwa)
        (condition-message . g$6608$1XGIwa)
        (condition-irritants . g$6688$1XGIwa)
        (condition-accessor . g$13737$1XGIwa)
        (condition . g$13736$1XGIwa)
        (assertion-violation? . g$6673$1XGIwa)
        (condition? . g$13735$1XGIwa)
        (utf32->string . g$5953$1XGIwa)
        (utf16->string . g$5952$1XGIwa)
        (utf8->string . g$5950$1XGIwa)
        (uint-list->bytevector . g$5954$1XGIwa)
        (u8-list->bytevector . g$5946$1XGIwa)
        (string->utf8 . g$5947$1XGIwa)
        (string->utf32 . g$5949$1XGIwa)
        (string->utf16 . g$5948$1XGIwa)
        (sint-list->bytevector . g$5955$1XGIwa)
        (native-endianness . g$5921$1XGIwa)
        (bytevector? . g$5529$1XGIwa)
        (bytevector=? . g$5937$1XGIwa)
        (bytevector-uint-set! . g$13734$1XGIwa)
        (bytevector-uint-ref . g$13733$1XGIwa)
        (bytevector-u8-set! . g$5942$1XGIwa)
        (bytevector-u8-ref . g$5941$1XGIwa)
        (bytevector-u64-set! . g$5983$1XGIwa)
        (bytevector-u64-ref . g$5979$1XGIwa)
        (bytevector-u64-native-set! . g$5985$1XGIwa)
        (bytevector-u64-native-ref . g$5981$1XGIwa)
        (bytevector-u32-set! . g$5975$1XGIwa)
        (bytevector-u32-ref . g$5971$1XGIwa)
        (bytevector-u32-native-set! . g$5977$1XGIwa)
        (bytevector-u32-native-ref . g$5973$1XGIwa)
        (bytevector-u16-set! . g$5967$1XGIwa)
        (bytevector-u16-ref . g$5963$1XGIwa)
        (bytevector-u16-native-set! . g$5969$1XGIwa)
        (bytevector-u16-native-ref . g$5965$1XGIwa)
        (bytevector-sint-set! . g$13732$1XGIwa)
        (bytevector-sint-ref . g$13731$1XGIwa)
        (bytevector-s8-set! . g$5944$1XGIwa)
        (bytevector-s8-ref . g$5943$1XGIwa)
        (bytevector-s64-set! . g$5984$1XGIwa)
        (bytevector-s64-ref . g$5980$1XGIwa)
        (bytevector-s64-native-set! . g$5986$1XGIwa)
        (bytevector-s64-native-ref . g$5982$1XGIwa)
        (bytevector-s32-set! . g$5976$1XGIwa)
        (bytevector-s32-ref . g$5972$1XGIwa)
        (bytevector-s32-native-set! . g$5978$1XGIwa)
        (bytevector-s32-native-ref . g$5974$1XGIwa)
        (bytevector-s16-set! . g$5968$1XGIwa)
        (bytevector-s16-ref . g$5964$1XGIwa)
        (bytevector-s16-native-set! . g$5970$1XGIwa)
        (bytevector-s16-native-ref . g$5966$1XGIwa)
        (bytevector-length . g$5936$1XGIwa)
        (bytevector-ieee-single-set! . g$5961$1XGIwa)
        (bytevector-ieee-single-ref . g$5959$1XGIwa)
        (bytevector-ieee-single-native-set! . g$5989$1XGIwa)
        (bytevector-ieee-single-native-ref . g$5987$1XGIwa)
        (bytevector-ieee-double-set! . g$5962$1XGIwa)
        (bytevector-ieee-double-ref . g$5960$1XGIwa)
        (bytevector-ieee-double-native-set! . g$5990$1XGIwa)
        (bytevector-ieee-double-native-ref . g$5988$1XGIwa)
        (bytevector-fill! . g$5938$1XGIwa)
        (bytevector-copy! . g$5939$1XGIwa)
        (bytevector-copy . g$5940$1XGIwa)
        (bytevector->uint-list . g$5956$1XGIwa)
        (bytevector->u8-list . g$5945$1XGIwa)
        (bytevector->sint-list . g$5957$1XGIwa)
        (no-nans-violation? . g$6992$1XGIwa)
        (no-infinities-violation? . g$6979$1XGIwa)
        (make-no-nans-violation . g$6991$1XGIwa)
        (make-no-infinities-violation . g$6978$1XGIwa)
        (real->flonum . g$6235$1XGIwa)
        (flzero? . g$8338$1XGIwa)
        (fltruncate . g$8333$1XGIwa)
        (fltan . g$8319$1XGIwa)
        (flsqrt . g$8324$1XGIwa)
        (flsin . g$8317$1XGIwa)
        (flround . g$8334$1XGIwa)
        (flpositive? . g$8336$1XGIwa)
        (flonum? . g$5534$1XGIwa)
        (flodd? . g$8340$1XGIwa)
        (flnumerator . g$8283$1XGIwa)
        (flnegative? . g$8337$1XGIwa)
        (flnan? . g$8316$1XGIwa)
        (flmod0 . g$8301$1XGIwa)
        (flmod . g$8300$1XGIwa)
        (flmin . g$8342$1XGIwa)
        (flmax . g$8341$1XGIwa)
        (fllog . g$8323$1XGIwa)
        (flinteger? . g$8309$1XGIwa)
        (flinfinite? . g$8315$1XGIwa)
        (flfloor . g$8332$1XGIwa)
        (flfinite? . g$8310$1XGIwa)
        (flexpt . g$8326$1XGIwa)
        (flexp . g$8325$1XGIwa)
        (fleven? . g$8339$1XGIwa)
        (fldiv0-and-mod0 . g$8308$1XGIwa)
        (fldiv0 . g$8295$1XGIwa)
        (fldiv-and-mod . g$8302$1XGIwa)
        (fldiv . g$8307$1XGIwa)
        (fldenominator . g$8282$1XGIwa)
        (flcos . g$8318$1XGIwa)
        (flceiling . g$8327$1XGIwa)
        (flatan . g$8322$1XGIwa)
        (flasin . g$8320$1XGIwa)
        (flacos . g$8321$1XGIwa)
        (flabs . g$8335$1XGIwa)
        (fl>? . g$8289$1XGIwa)
        (fl>=? . g$8290$1XGIwa)
        (fl=? . g$8286$1XGIwa)
        (fl<? . g$8287$1XGIwa)
        (fl<=? . g$8288$1XGIwa)
        (fl/ . g$8285$1XGIwa)
        (fl- . g$8284$1XGIwa)
        (fl+ . g$8280$1XGIwa)
        (fl* . g$8281$1XGIwa)
        (fixnum->flonum . g$6236$1XGIwa)
        (fxzero? . g$7383$1XGIwa)
        (fxxor . g$7346$1XGIwa)
        (fxrotate-bit-field . g$7421$1XGIwa)
        (fxreverse-bit-field . g$7422$1XGIwa)
        (fxpositive? . g$7373$1XGIwa)
        (fxodd? . g$7393$1XGIwa)
        (fxnot . g$7327$1XGIwa)
        (fxnegative? . g$7378$1XGIwa)
        (fxmod0 . g$7357$1XGIwa)
        (fxmod . g$7356$1XGIwa)
        (fxmin . g$7395$1XGIwa)
        (fxmax . g$7394$1XGIwa)
        (fxlength . g$7324$1XGIwa)
        (fxior . g$7345$1XGIwa)
        (fxif . g$7403$1XGIwa)
        (fxfirst-bit-set . g$7325$1XGIwa)
        (fxeven? . g$7388$1XGIwa)
        (fxdiv0-and-mod0 . g$7368$1XGIwa)
        (fxdiv0 . g$7363$1XGIwa)
        (fxdiv-and-mod . g$7358$1XGIwa)
        (fxdiv . g$7351$1XGIwa)
        (fxcopy-bit-field . g$7418$1XGIwa)
        (fxcopy-bit . g$7408$1XGIwa)
        (fxbit-set? . g$7326$1XGIwa)
        (fxbit-field . g$7413$1XGIwa)
        (fxbit-count . g$7319$1XGIwa)
        (fxarithmetic-shift-right . g$7420$1XGIwa)
        (fxarithmetic-shift-left . g$7419$1XGIwa)
        (fxarithmetic-shift . g$7314$1XGIwa)
        (fxand . g$7344$1XGIwa)
        (fx>? . g$7336$1XGIwa)
        (fx>=? . g$7337$1XGIwa)
        (fx=? . g$7333$1XGIwa)
        (fx<? . g$7334$1XGIwa)
        (fx<=? . g$7335$1XGIwa)
        (fx-/carry . g$7397$1XGIwa)
        (fx- . g$7308$1XGIwa)
        (fx+/carry . g$7398$1XGIwa)
        (fx+ . g$7306$1XGIwa)
        (fx*/carry . g$7396$1XGIwa)
        (fx* . g$7307$1XGIwa)
        (greatest-fixnum . g$7277$1XGIwa)
        (least-fixnum . g$7278$1XGIwa)
        (fixnum-width . g$5535$1XGIwa)
        (fixnum? . g$5533$1XGIwa)
        (bitwise-rotate-bit-field . g$7207$1XGIwa)
        (bitwise-reverse-bit-field . g$7208$1XGIwa)
        (bitwise-length . g$7198$1XGIwa)
        (bitwise-if . g$7201$1XGIwa)
        (bitwise-first-bit-set . g$7199$1XGIwa)
        (bitwise-copy-bit-field . g$7204$1XGIwa)
        (bitwise-copy-bit . g$7202$1XGIwa)
        (bitwise-bit-set? . g$7200$1XGIwa)
        (bitwise-bit-field . g$7203$1XGIwa)
        (bitwise-bit-count . g$7197$1XGIwa)
        (bitwise-xor . g$7196$1XGIwa)
        (bitwise-ior . g$7195$1XGIwa)
        (bitwise-and . g$7194$1XGIwa)
        (bitwise-not . g$7193$1XGIwa)
        (bitwise-arithmetic-shift-right . g$7206$1XGIwa)
        (bitwise-arithmetic-shift-left . g$7205$1XGIwa)
        (bitwise-arithmetic-shift . g$13730$1XGIwa)
        (zero? . g$6250$1XGIwa)
        (vector? . g$5528$1XGIwa)
        (vector-set! . g$5560$1XGIwa)
        (vector-ref . g$5559$1XGIwa)
        (vector-map . g$5630$1XGIwa)
        (vector-length . g$5562$1XGIwa)
        (vector-for-each . g$5631$1XGIwa)
        (vector-fill! . g$5563$1XGIwa)
        (vector->list . g$5564$1XGIwa)
        (vector . g$13729$1XGIwa)
        (values . g$13728$1XGIwa)
        (truncate . g$6302$1XGIwa)
        (tan . g$6294$1XGIwa)
        (symbol? . g$5530$1XGIwa)
        (symbol=? . g$5615$1XGIwa)
        (symbol->string . g$5550$1XGIwa)
        (substring . g$5547$1XGIwa)
        (string? . g$5526$1XGIwa)
        (string>? . g$5612$1XGIwa)
        (string>=? . g$5614$1XGIwa)
        (string=? . g$5610$1XGIwa)
        (string<? . g$5611$1XGIwa)
        (string<=? . g$5613$1XGIwa)
        (string-ref . g$5539$1XGIwa)
        (string-length . g$5542$1XGIwa)
        (string-for-each . g$5632$1XGIwa)
        (string-copy . g$5546$1XGIwa)
        (string-append . g$5548$1XGIwa)
        (string->symbol . g$5551$1XGIwa)
        (string->number . g$13727$1XGIwa)
        (string->list . g$5545$1XGIwa)
        (string . g$5544$1XGIwa)
        (sqrt . g$6304$1XGIwa)
        (sin . g$6288$1XGIwa)
        (round . g$6303$1XGIwa)
        (reverse . g$5566$1XGIwa)
        (real? . g$6244$1XGIwa)
        (real-valued? . g$6247$1XGIwa)
        (real-part . g$6281$1XGIwa)
        (rationalize . g$5627$1XGIwa)
        (rational? . g$6245$1XGIwa)
        (rational-valued? . g$6248$1XGIwa)
        (procedure? . g$5532$1XGIwa)
        (positive? . g$6251$1XGIwa)
        (pair? . g$13726$1XGIwa)
        (odd? . g$5599$1XGIwa)
        (numerator . g$6279$1XGIwa)
        (number? . g$6237$1XGIwa)
        (number->string . g$6258$1XGIwa)
        (null? . g$13725$1XGIwa)
        (not . g$13724$1XGIwa)
        (negative? . g$6252$1XGIwa)
        (nan? . g$6238$1XGIwa)
        (min . g$5601$1XGIwa)
        (max . g$5600$1XGIwa)
        (map . g$5187$1XGIwa)
        (make-vector . g$5561$1XGIwa)
        (make-string . g$5538$1XGIwa)
        (make-rectangular . g$6274$1XGIwa)
        (make-polar . g$6275$1XGIwa)
        (magnitude . g$6277$1XGIwa)
        (log . g$6297$1XGIwa)
        (list? . g$13723$1XGIwa)
        (list-tail . g$5167$1XGIwa)
        (list-ref . g$5168$1XGIwa)
        (list->vector . g$5557$1XGIwa)
        (list->string . g$5558$1XGIwa)
        (list . g$13722$1XGIwa)
        (length . g$13721$1XGIwa)
        (lcm . g$5603$1XGIwa)
        (integer? . g$6246$1XGIwa)
        (integer-valued? . g$6249$1XGIwa)
        (integer->char . g$5537$1XGIwa)
        (infinite? . g$6240$1XGIwa)
        (inexact? . g$6242$1XGIwa)
        (inexact . g$6253$1XGIwa)
        (imag-part . g$6282$1XGIwa)
        (gcd . g$5602$1XGIwa)
        (for-each . g$5188$1XGIwa)
        (floor . g$6300$1XGIwa)
        (finite? . g$6239$1XGIwa)
        (expt . g$6306$1XGIwa)
        (exp . g$6287$1XGIwa)
        (exact? . g$6241$1XGIwa)
        (exact-integer-sqrt . g$6305$1XGIwa)
        (exact . g$6254$1XGIwa)
        (even? . g$5598$1XGIwa)
        (error . g$13720$1XGIwa)
        (eqv? . g$13719$1XGIwa)
        (equal? . g$13718$1XGIwa)
        (eq? . g$13717$1XGIwa)
        (dynamic-wind . g$13716$1XGIwa)
        (div0-and-mod0 . g$5556$1XGIwa)
        (mod0 . g$5554$1XGIwa)
        (div0 . g$5552$1XGIwa)
        (div-and-mod . g$5555$1XGIwa)
        (mod . g$5553$1XGIwa)
        (div . g$6298$1XGIwa)
        (denominator . g$6280$1XGIwa)
        (cos . g$6291$1XGIwa)
        (cons . g$13715$1XGIwa)
        (complex? . g$6243$1XGIwa)
        (char? . g$5527$1XGIwa)
        (char>? . g$5624$1XGIwa)
        (char>=? . g$5626$1XGIwa)
        (char=? . g$5622$1XGIwa)
        (char<? . g$5623$1XGIwa)
        (char<=? . g$5625$1XGIwa)
        (char->integer . g$5536$1XGIwa)
        (ceiling . g$6301$1XGIwa)
        (call-with-values . g$13714$1XGIwa)
        (call/cc . g$13713$1XGIwa)
        (call-with-current-continuation . g$13712$1XGIwa)
        (cddddr . g$5594$1XGIwa)
        (cdddar . g$5593$1XGIwa)
        (cddadr . g$5592$1XGIwa)
        (cddaar . g$5591$1XGIwa)
        (cdaddr . g$5590$1XGIwa)
        (cdadar . g$5589$1XGIwa)
        (cdaadr . g$5588$1XGIwa)
        (cdaaar . g$5587$1XGIwa)
        (cadddr . g$5586$1XGIwa)
        (caddar . g$5585$1XGIwa)
        (cadadr . g$5584$1XGIwa)
        (cadaar . g$5583$1XGIwa)
        (caaddr . g$5582$1XGIwa)
        (caadar . g$5581$1XGIwa)
        (caaadr . g$5580$1XGIwa)
        (caaaar . g$5579$1XGIwa)
        (cdddr . g$5578$1XGIwa)
        (cddar . g$5577$1XGIwa)
        (cdadr . g$5576$1XGIwa)
        (cdaar . g$5575$1XGIwa)
        (caddr . g$5574$1XGIwa)
        (cadar . g$5573$1XGIwa)
        (caadr . g$5572$1XGIwa)
        (caaar . g$5571$1XGIwa)
        (cddr . g$5570$1XGIwa)
        (cdar . g$5569$1XGIwa)
        (cadr . g$5568$1XGIwa)
        (caar . g$5567$1XGIwa)
        (cdr . g$13711$1XGIwa)
        (car . g$13710$1XGIwa)
        (boolean? . g$5531$1XGIwa)
        (boolean=? . g$5616$1XGIwa)
        (atan . g$6296$1XGIwa)
        (assertion-violation . g$13709$1XGIwa)
        (asin . g$6289$1XGIwa)
        (apply . g$13708$1XGIwa)
        (append . g$13707$1XGIwa)
        (angle . g$6276$1XGIwa)
        (acos . g$6292$1XGIwa)
        (abs . g$6299$1XGIwa)
        (/ . g$13706$1XGIwa)
        (* . g$13705$1XGIwa)
        (- . g$13704$1XGIwa)
        (+ . g$13703$1XGIwa)
        (>= . g$6273$1XGIwa)
        (> . g$6272$1XGIwa)
        (= . g$6269$1XGIwa)
        (<= . g$6271$1XGIwa)
        (< . g$6270$1XGIwa)
        (deserialize-port . g$13664$1XGIwa)
        (serialize-port . g$13663$1XGIwa)
        (enum-set? . g$8971$1XGIwa)
        (load/unload . g$13467$1XGIwa)
        (load/args . g$13466$1XGIwa)
        (printf . g$9080$1XGIwa)
        (fprintf . g$9081$1XGIwa)
        (format . g$9082$1XGIwa)
        (procedure-form . g$13662$1XGIwa)
        (procedure-environment . g$13661$1XGIwa)
        (procedure-name . g$13660$1XGIwa)
        (procedure-arity . g$13659$1XGIwa)
        (gc-collect . g$13658$1XGIwa)
        (typeof . g$13657$1XGIwa)
        (clr-type? . g$13656$1XGIwa)
        (get-clr-type . g$13655$1XGIwa)
        (vector-append . g$13653$1XGIwa)
        (vector-filter . g$13652$1XGIwa)
        (vector-reverse! . g$13651$1XGIwa)
        (vector-contains? . g$13650$1XGIwa)
        (vector-index-of . g$13649$1XGIwa)
        (vector-copy . g$13648$1XGIwa)
        (vector-binary-search . g$13647$1XGIwa)
        (string-ci-compare . g$13646$1XGIwa)
        (string-compare . g$13645$1XGIwa)
        (string-format . g$13644$1XGIwa)
        (trace-printer . g$13461$1XGIwa)
        (time-it . g$13642$1XGIwa)
        (make-parameter . g$9109$1XGIwa)
        (open-tcp-input/output-port . g$13639$1XGIwa)
        (hashtable-for-each . g$13638$1XGIwa)
        (hashtable-map . g$13637$1XGIwa)
        (environment-bindings . g$10418$1XGIwa)
        (environment-symbols . g$10421$1XGIwa)
        (interaction-environment-symbols . g$10417$1XGIwa)
        (optimization-level . g$13636$1XGIwa)
        (library-path . g$9747$1XGIwa)
        (make-compile-time-value . g$10126$1XGIwa)
        (expand->core . g$10427$1XGIwa)
        (expand . g$10425$1XGIwa)
        (emacs-mode? . g$13464$1XGIwa)
        (syntax-transpose . g$10364$1XGIwa)
        (convert->cps . g$9428$1XGIwa)
        (condition-stacktrace . g$6733$1XGIwa)
        (stacktrace-condition? . g$6732$1XGIwa)
        (stacktrace-enable? . g$13462$1XGIwa)
        (make-stacktrace-condition . g$6730$1XGIwa)
        (condition-where . g$6718$1XGIwa)
        (where-condition? . g$6717$1XGIwa)
        (make-where-condition . g$6715$1XGIwa)
        (installed-libraries . g$9768$1XGIwa)
        (uninstall-library . g$9759$1XGIwa)
        (pretty-gensyms . g$9192$1XGIwa)
        (pretty-width . g$9189$1XGIwa)
        (pretty-print . g$9194$1XGIwa)
        (pointer+ . g$13629$1XGIwa)
        (&stacktrace . g$13628$1XGIwa)
        (&where . g$13627$1XGIwa)
        (&no-nans . g$13626$1XGIwa)
        (&no-infinities . g$13625$1XGIwa)
        (&i/o-encoding . g$13624$1XGIwa)
        (&i/o-decoding . g$13623$1XGIwa)
        (&i/o-port . g$13622$1XGIwa)
        (&i/o-file-does-not-exist . g$13621$1XGIwa)
        (&i/o-file-already-exists . g$13620$1XGIwa)
        (&i/o-file-is-read-only . g$13619$1XGIwa)
        (&i/o-file-protection . g$13618$1XGIwa)
        (&i/o-filename . g$13617$1XGIwa)
        (&i/o-invalid-position . g$13616$1XGIwa)
        (&i/o-write . g$13615$1XGIwa)
        (&i/o-read . g$13614$1XGIwa)
        (&i/o . g$13613$1XGIwa)
        (&non-continuable . g$13612$1XGIwa)
        (&undefined . g$13611$1XGIwa)
        (&syntax . g$13610$1XGIwa)
        (&lexical . g$13609$1XGIwa)
        (&implementation-restriction . g$13608$1XGIwa)
        (&who . g$13607$1XGIwa)
        (&irritants . g$13606$1XGIwa)
        (&assertion . g$13605$1XGIwa)
        (&violation . g$13604$1XGIwa)
        (&error . g$13603$1XGIwa)
        (&serious . g$13602$1XGIwa)
        (&warning . g$13601$1XGIwa)
        (&message . g$13600$1XGIwa)
        (&condition . g$13599$1XGIwa)
        (define-condition-type . g$13598$1XGIwa)
        (define-enumeration . g$13597$1XGIwa)
        (define-record-type . g$13596$1XGIwa)
        (parent-rtd . g$13595$1XGIwa)
        (nongenerative . g$13594$1XGIwa)
        (opaque . g$13593$1XGIwa)
        (sealed . g$13592$1XGIwa)
        (protocol . g$13591$1XGIwa)
        (parent . g$13590$1XGIwa)
        (immutable . g$13589$1XGIwa)
        (mutable . g$13588$1XGIwa)
        (fields . g$13587$1XGIwa)
        (error-handling-mode . g$13586$1XGIwa)
        (file-options . g$13585$1XGIwa)
        (buffer-mode . g$13584$1XGIwa)
        (eol-style . g$13583$1XGIwa)
        (guard . g$13582$1XGIwa)
        (trace-letrec-syntax . g$13581$1XGIwa)
        (trace-let-syntax . g$13580$1XGIwa)
        (trace-define-syntax . g$13579$1XGIwa)
        (trace-define . g$13578$1XGIwa)
        (trace-lambda . g$13577$1XGIwa)
        (unsyntax-splicing . g$13576$1XGIwa)
        (unsyntax . g$13575$1XGIwa)
        (unquote-splicing . g$13574$1XGIwa)
        (unquote . g$13573$1XGIwa)
        (_ . g$13572$1XGIwa)
        (else . g$13571$1XGIwa)
        (=> . g$13570$1XGIwa)
        (... . g$13569$1XGIwa)
        (assert . g$13568$1XGIwa)
        (endianness . g$13567$1XGIwa)
        (delay . g$13566$1XGIwa)
        (time . g$13565$1XGIwa)
        (or . g$13564$1XGIwa)
        (and . g$13563$1XGIwa)
        (do . g$13562$1XGIwa)
        (cond . g$13561$1XGIwa)
        (let* . g$13560$1XGIwa)
        (let . g$13559$1XGIwa)
        (identifier-syntax . g$13558$1XGIwa)
        (with-syntax . g$13557$1XGIwa)
        (quasisyntax . g$13556$1XGIwa)
        (quasiquote . g$13555$1XGIwa)
        (syntax-rules . g$13554$1XGIwa)
        (include-into . g$13553$1XGIwa)
        (include . g$13552$1XGIwa)
        (let-values . g$13550$1XGIwa)
        (let*-values . g$13549$1XGIwa)
        (record-constructor-descriptor . g$13548$1XGIwa)
        (record-type-descriptor . g$13547$1XGIwa)
        (fluid-let-syntax . g$13546$1XGIwa)
        (case . g$13545$1XGIwa)
        (parameterize . g$13544$1XGIwa)
        (unless . g$13543$1XGIwa)
        (when . g$13542$1XGIwa)
        (if . g$13541$1XGIwa)
        (letrec* . g$13540$1XGIwa)
        (letrec . g$13539$1XGIwa)
        (case-lambda . g$13537$1XGIwa)
        (lambda . g$13536$1XGIwa)
        (syntax . g$13535$1XGIwa)
        (syntax-case . g$13534$1XGIwa)
        (quote . g$13533$1XGIwa)
        (letrec-syntax . g$13531$1XGIwa)
        (let-syntax . g$13530$1XGIwa)
        (set! . g$13529$1XGIwa)
        (export . g$13528$1XGIwa)
        (import . g$13527$1XGIwa)
        (library . g$13526$1XGIwa)
        (begin . g$13525$1XGIwa)
        (module . g$13524$1XGIwa)
        (define-syntax . g$13523$1XGIwa)
        (define . g$13522$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13876$1XGIwa
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$13640$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13877$1XGIwa
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$13873$1XGIwa)
        (annotation-source . g$13872$1XGIwa)
        (annotation-expression . g$13871$1XGIwa)
        (annotation? . g$13870$1XGIwa)
        (read-annotated . g$13869$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13878$1XGIwa
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$13841$1XGIwa)
        (serialize-library . g$13840$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13879$1XGIwa
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((string-normalize . g$13839$1XGIwa)
        (variable-transformer-procedure . g$10128$1XGIwa)
        (variable-transformer? . g$10127$1XGIwa)
        (eqv-hash . g$13666$1XGIwa)
        (reverse! . g$13665$1XGIwa)
        (make-promise . g$7018$1XGIwa)
        (format . g$9082$1XGIwa)
        (get-command-line . g$13654$1XGIwa)
        (make-traced-procedure . g$13643$1XGIwa)
        (make-traced-macro . g$9102$1XGIwa)
        (assertion-error . g$10440$1XGIwa)
        (library-locator . g$13641$1XGIwa)
        (get-library-paths . g$13640$1XGIwa)
        (library-path . g$9747$1XGIwa)
        (inexact=? . g$13635$1XGIwa)
        (bignum-sqrt-exact . g$13634$1XGIwa)
        (bignum-sqrt . g$13633$1XGIwa)
        (flonum->string . g$13632$1XGIwa)
        (inexact-compare . g$13631$1XGIwa)
        (exact-compare . g$13630$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13880$1XGIwa
      '(ironscheme unsafe)
      '()
      '()
      '()
      '()
      '(($bytevector-set! . g$13702$1XGIwa)
        ($bytevector-ref . g$13701$1XGIwa)
        ($fl>=? . g$13700$1XGIwa)
        ($fl>? . g$13699$1XGIwa)
        ($fl<=? . g$13698$1XGIwa)
        ($fl<? . g$13697$1XGIwa)
        ($fl- . g$13696$1XGIwa)
        ($fl/ . g$13695$1XGIwa)
        ($fl* . g$13694$1XGIwa)
        ($fl+ . g$13693$1XGIwa)
        ($fl=? . g$13692$1XGIwa)
        ($try . g$13691$1XGIwa)
        ($fxarithmetic-shift-right . g$13690$1XGIwa)
        ($fxarithmetic-shift-left . g$13689$1XGIwa)
        ($$fx- . g$13688$1XGIwa)
        ($$fx* . g$13687$1XGIwa)
        ($$fx+ . g$13686$1XGIwa)
        ($fxnot . g$13685$1XGIwa)
        ($fxxor . g$13684$1XGIwa)
        ($fxior . g$13683$1XGIwa)
        ($fxand . g$13682$1XGIwa)
        ($fx>=? . g$13681$1XGIwa)
        ($fx>? . g$13680$1XGIwa)
        ($fx<=? . g$13679$1XGIwa)
        ($fx<? . g$13678$1XGIwa)
        ($fx- . g$13677$1XGIwa)
        ($fxmod0 . g$13676$1XGIwa)
        ($fxdiv0 . g$13675$1XGIwa)
        ($fx* . g$13674$1XGIwa)
        ($fx+ . g$13673$1XGIwa)
        ($fx=? . g$13672$1XGIwa)
        ($vector-set! . g$13671$1XGIwa)
        ($vector-ref . g$13670$1XGIwa)
        ($cdr . g$13669$1XGIwa)
        ($car . g$13668$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13881$1XGIwa
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$13667$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13882$1XGIwa
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((pinvoke-call-internal . g$13863$1XGIwa)
        (ffi-callback-internal . g$13862$1XGIwa)
        (ffi-callout-internal . g$13861$1XGIwa)
        (define-clr-class-internal . g$13860$1XGIwa)
        (clr-field-set!-internal . g$13859$1XGIwa)
        (clr-field-get-internal . g$13858$1XGIwa)
        (clr-cast-internal . g$13857$1XGIwa)
        (clr-call-internal . g$13856$1XGIwa)
        (clr-new-internal . g$13855$1XGIwa)
        (clr-new-array-internal . g$13854$1XGIwa)
        (clr-is-internal . g$13853$1XGIwa)
        (clr-reference-internal . g$13852$1XGIwa)
        (clr-using-internal . g$13851$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13883$1XGIwa
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$13574$1XGIwa)
        (unquote . g$13573$1XGIwa)
        (else . g$13571$1XGIwa)
        (=> . g$13570$1XGIwa)
        (delay . g$13566$1XGIwa)
        (or . g$13564$1XGIwa)
        (and . g$13563$1XGIwa)
        (do . g$13562$1XGIwa)
        (cond . g$13561$1XGIwa)
        (let* . g$13560$1XGIwa)
        (let . g$13559$1XGIwa)
        (quasiquote . g$13555$1XGIwa)
        (syntax-rules . g$13554$1XGIwa)
        (case . g$13545$1XGIwa)
        (if . g$13541$1XGIwa)
        (letrec . g$13539$1XGIwa)
        (lambda . g$13536$1XGIwa)
        (quote . g$13533$1XGIwa)
        (letrec-syntax . g$13531$1XGIwa)
        (let-syntax . g$13530$1XGIwa)
        (set! . g$13529$1XGIwa)
        (begin . g$13525$1XGIwa)
        (define-syntax . g$13523$1XGIwa)
        (define . g$13522$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13884$1XGIwa
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((char-ready? . g$13838$1XGIwa)
        (string-ci>? . g$7089$1XGIwa)
        (string-ci>=? . g$7091$1XGIwa)
        (string-ci=? . g$7087$1XGIwa)
        (string-ci<? . g$7088$1XGIwa)
        (string-ci<=? . g$7090$1XGIwa)
        (char-whitespace? . g$7069$1XGIwa)
        (char-upper-case? . g$7070$1XGIwa)
        (char-numeric? . g$7068$1XGIwa)
        (char-lower-case? . g$7071$1XGIwa)
        (char-upcase . g$7063$1XGIwa)
        (char-downcase . g$7064$1XGIwa)
        (char-ci>? . g$7101$1XGIwa)
        (char-ci>=? . g$7103$1XGIwa)
        (char-ci=? . g$7099$1XGIwa)
        (char-ci<? . g$7100$1XGIwa)
        (char-ci<=? . g$7102$1XGIwa)
        (char-alphabetic? . g$7067$1XGIwa)
        (call-with-output-file . g$8933$1XGIwa)
        (call-with-input-file . g$8932$1XGIwa)
        (write-char . g$8924$1XGIwa)
        (write . g$13808$1XGIwa)
        (with-output-to-file . g$8931$1XGIwa)
        (with-input-from-file . g$8930$1XGIwa)
        (read-char . g$8923$1XGIwa)
        (read . g$13807$1XGIwa)
        (peek-char . g$8922$1XGIwa)
        (open-output-file . g$13806$1XGIwa)
        (open-input-file . g$13805$1XGIwa)
        (newline . g$8934$1XGIwa)
        (display . g$13804$1XGIwa)
        (close-output-port . g$13803$1XGIwa)
        (close-input-port . g$13802$1XGIwa)
        (eof-object? . g$13801$1XGIwa)
        (current-error-port . g$13799$1XGIwa)
        (current-output-port . g$13798$1XGIwa)
        (current-input-port . g$13797$1XGIwa)
        (output-port? . g$13796$1XGIwa)
        (input-port? . g$13795$1XGIwa)
        (scheme-report-environment . g$10424$1XGIwa)
        (quotient . g$7015$1XGIwa)
        (null-environment . g$10423$1XGIwa)
        (remainder . g$7016$1XGIwa)
        (modulo . g$7017$1XGIwa)
        (inexact->exact . g$7012$1XGIwa)
        (force . g$7019$1XGIwa)
        (exact->inexact . g$7013$1XGIwa)
        (string-fill! . g$5541$1XGIwa)
        (string-set! . g$5540$1XGIwa)
        (set-cdr! . g$6998$1XGIwa)
        (set-car! . g$6997$1XGIwa)
        (memv . g$5180$1XGIwa)
        (memq . g$5179$1XGIwa)
        (member . g$5181$1XGIwa)
        (assv . g$5176$1XGIwa)
        (assq . g$5175$1XGIwa)
        (assoc . g$5177$1XGIwa)
        (eval . g$10426$1XGIwa)
        (zero? . g$6250$1XGIwa)
        (vector? . g$5528$1XGIwa)
        (vector-set! . g$5560$1XGIwa)
        (vector-ref . g$5559$1XGIwa)
        (vector-length . g$5562$1XGIwa)
        (vector-fill! . g$5563$1XGIwa)
        (vector->list . g$5564$1XGIwa)
        (vector . g$13729$1XGIwa)
        (values . g$13728$1XGIwa)
        (truncate . g$6302$1XGIwa)
        (tan . g$6294$1XGIwa)
        (symbol? . g$5530$1XGIwa)
        (symbol->string . g$5550$1XGIwa)
        (substring . g$5547$1XGIwa)
        (string? . g$5526$1XGIwa)
        (string>? . g$5612$1XGIwa)
        (string>=? . g$5614$1XGIwa)
        (string=? . g$5610$1XGIwa)
        (string<? . g$5611$1XGIwa)
        (string<=? . g$5613$1XGIwa)
        (string-ref . g$5539$1XGIwa)
        (string-length . g$5542$1XGIwa)
        (string-copy . g$5546$1XGIwa)
        (string-append . g$5548$1XGIwa)
        (string->symbol . g$5551$1XGIwa)
        (string->number . g$13727$1XGIwa)
        (string->list . g$5545$1XGIwa)
        (string . g$5544$1XGIwa)
        (sqrt . g$6304$1XGIwa)
        (sin . g$6288$1XGIwa)
        (round . g$6303$1XGIwa)
        (reverse . g$5566$1XGIwa)
        (real? . g$6244$1XGIwa)
        (real-part . g$6281$1XGIwa)
        (rationalize . g$5627$1XGIwa)
        (rational? . g$6245$1XGIwa)
        (procedure? . g$5532$1XGIwa)
        (positive? . g$6251$1XGIwa)
        (pair? . g$13726$1XGIwa)
        (odd? . g$5599$1XGIwa)
        (numerator . g$6279$1XGIwa)
        (number? . g$6237$1XGIwa)
        (number->string . g$6258$1XGIwa)
        (null? . g$13725$1XGIwa)
        (not . g$13724$1XGIwa)
        (negative? . g$6252$1XGIwa)
        (min . g$5601$1XGIwa)
        (max . g$5600$1XGIwa)
        (map . g$5187$1XGIwa)
        (make-vector . g$5561$1XGIwa)
        (make-string . g$5538$1XGIwa)
        (make-rectangular . g$6274$1XGIwa)
        (make-polar . g$6275$1XGIwa)
        (magnitude . g$6277$1XGIwa)
        (log . g$6297$1XGIwa)
        (list? . g$13723$1XGIwa)
        (list-tail . g$5167$1XGIwa)
        (list-ref . g$5168$1XGIwa)
        (list->vector . g$5557$1XGIwa)
        (list->string . g$5558$1XGIwa)
        (list . g$13722$1XGIwa)
        (length . g$13721$1XGIwa)
        (lcm . g$5603$1XGIwa)
        (integer? . g$6246$1XGIwa)
        (integer->char . g$5537$1XGIwa)
        (inexact? . g$6242$1XGIwa)
        (imag-part . g$6282$1XGIwa)
        (gcd . g$5602$1XGIwa)
        (for-each . g$5188$1XGIwa)
        (floor . g$6300$1XGIwa)
        (expt . g$6306$1XGIwa)
        (exp . g$6287$1XGIwa)
        (exact? . g$6241$1XGIwa)
        (even? . g$5598$1XGIwa)
        (eqv? . g$13719$1XGIwa)
        (equal? . g$13718$1XGIwa)
        (eq? . g$13717$1XGIwa)
        (dynamic-wind . g$13716$1XGIwa)
        (denominator . g$6280$1XGIwa)
        (cos . g$6291$1XGIwa)
        (cons . g$13715$1XGIwa)
        (complex? . g$6243$1XGIwa)
        (char? . g$5527$1XGIwa)
        (char>? . g$5624$1XGIwa)
        (char>=? . g$5626$1XGIwa)
        (char=? . g$5622$1XGIwa)
        (char<? . g$5623$1XGIwa)
        (char<=? . g$5625$1XGIwa)
        (char->integer . g$5536$1XGIwa)
        (ceiling . g$6301$1XGIwa)
        (call-with-values . g$13714$1XGIwa)
        (call-with-current-continuation . g$13712$1XGIwa)
        (cddddr . g$5594$1XGIwa)
        (cdddar . g$5593$1XGIwa)
        (cddadr . g$5592$1XGIwa)
        (cddaar . g$5591$1XGIwa)
        (cdaddr . g$5590$1XGIwa)
        (cdadar . g$5589$1XGIwa)
        (cdaadr . g$5588$1XGIwa)
        (cdaaar . g$5587$1XGIwa)
        (cadddr . g$5586$1XGIwa)
        (caddar . g$5585$1XGIwa)
        (cadadr . g$5584$1XGIwa)
        (cadaar . g$5583$1XGIwa)
        (caaddr . g$5582$1XGIwa)
        (caadar . g$5581$1XGIwa)
        (caaadr . g$5580$1XGIwa)
        (caaaar . g$5579$1XGIwa)
        (cdddr . g$5578$1XGIwa)
        (cddar . g$5577$1XGIwa)
        (cdadr . g$5576$1XGIwa)
        (cdaar . g$5575$1XGIwa)
        (caddr . g$5574$1XGIwa)
        (cadar . g$5573$1XGIwa)
        (caadr . g$5572$1XGIwa)
        (caaar . g$5571$1XGIwa)
        (cddr . g$5570$1XGIwa)
        (cdar . g$5569$1XGIwa)
        (cadr . g$5568$1XGIwa)
        (caar . g$5567$1XGIwa)
        (cdr . g$13711$1XGIwa)
        (car . g$13710$1XGIwa)
        (boolean? . g$5531$1XGIwa)
        (atan . g$6296$1XGIwa)
        (asin . g$6289$1XGIwa)
        (apply . g$13708$1XGIwa)
        (append . g$13707$1XGIwa)
        (angle . g$6276$1XGIwa)
        (acos . g$6292$1XGIwa)
        (abs . g$6299$1XGIwa)
        (/ . g$13706$1XGIwa)
        (* . g$13705$1XGIwa)
        (- . g$13704$1XGIwa)
        (+ . g$13703$1XGIwa)
        (>= . g$6273$1XGIwa)
        (> . g$6272$1XGIwa)
        (= . g$6269$1XGIwa)
        (<= . g$6271$1XGIwa)
        (< . g$6270$1XGIwa)
        (unquote-splicing . g$13574$1XGIwa)
        (unquote . g$13573$1XGIwa)
        (else . g$13571$1XGIwa)
        (=> . g$13570$1XGIwa)
        (... . g$13569$1XGIwa)
        (delay . g$13566$1XGIwa)
        (or . g$13564$1XGIwa)
        (and . g$13563$1XGIwa)
        (do . g$13562$1XGIwa)
        (cond . g$13561$1XGIwa)
        (let* . g$13560$1XGIwa)
        (let . g$13559$1XGIwa)
        (quasiquote . g$13555$1XGIwa)
        (syntax-rules . g$13554$1XGIwa)
        (case . g$13545$1XGIwa)
        (if . g$13541$1XGIwa)
        (letrec . g$13539$1XGIwa)
        (lambda . g$13536$1XGIwa)
        (quote . g$13533$1XGIwa)
        (letrec-syntax . g$13531$1XGIwa)
        (let-syntax . g$13530$1XGIwa)
        (set! . g$13529$1XGIwa)
        (begin . g$13525$1XGIwa)
        (define-syntax . g$13523$1XGIwa)
        (define . g$13522$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13885$1XGIwa
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13837$1XGIwa)
        (string-titlecase . g$7092$1XGIwa)
        (string-normalize-nfkd . g$7112$1XGIwa)
        (string-normalize-nfkc . g$7111$1XGIwa)
        (string-normalize-nfd . g$7110$1XGIwa)
        (string-normalize-nfc . g$7109$1XGIwa)
        (string-foldcase . g$7093$1XGIwa)
        (string-downcase . g$13836$1XGIwa)
        (string-ci>? . g$7089$1XGIwa)
        (string-ci>=? . g$7091$1XGIwa)
        (string-ci=? . g$7087$1XGIwa)
        (string-ci<? . g$7088$1XGIwa)
        (string-ci<=? . g$7090$1XGIwa)
        (char-whitespace? . g$7069$1XGIwa)
        (char-upper-case? . g$7070$1XGIwa)
        (char-title-case? . g$7072$1XGIwa)
        (char-numeric? . g$7068$1XGIwa)
        (char-lower-case? . g$7071$1XGIwa)
        (char-general-category . g$7073$1XGIwa)
        (char-upcase . g$7063$1XGIwa)
        (char-titlecase . g$7065$1XGIwa)
        (char-foldcase . g$7066$1XGIwa)
        (char-downcase . g$7064$1XGIwa)
        (char-ci>? . g$7101$1XGIwa)
        (char-ci>=? . g$7103$1XGIwa)
        (char-ci=? . g$7099$1XGIwa)
        (char-ci<? . g$7100$1XGIwa)
        (char-ci<=? . g$7102$1XGIwa)
        (char-alphabetic? . g$7067$1XGIwa)
        (make-variable-transformer . g$10125$1XGIwa)
        (identifier? . g$10445$1XGIwa)
        (generate-temporaries . g$10434$1XGIwa)
        (free-identifier=? . g$10435$1XGIwa)
        (syntax->datum . g$10447$1XGIwa)
        (datum->syntax . g$10446$1XGIwa)
        (bound-identifier=? . g$10436$1XGIwa)
        (record-type-descriptor? . g$13835$1XGIwa)
        (record-predicate . g$13834$1XGIwa)
        (record-mutator . g$13833$1XGIwa)
        (record-constructor . g$13832$1XGIwa)
        (record-accessor . g$13831$1XGIwa)
        (make-record-type-descriptor . g$13830$1XGIwa)
        (make-record-constructor-descriptor . g$13829$1XGIwa)
        (record? . g$13828$1XGIwa)
        (record-type-uid . g$13827$1XGIwa)
        (record-type-sealed? . g$13826$1XGIwa)
        (record-type-parent . g$13825$1XGIwa)
        (record-type-opaque? . g$13824$1XGIwa)
        (record-type-name . g$13823$1XGIwa)
        (record-type-generative? . g$13822$1XGIwa)
        (record-type-field-names . g$13821$1XGIwa)
        (record-rtd . g$13820$1XGIwa)
        (record-field-mutable? . g$13819$1XGIwa)
        (delete-file . g$5915$1XGIwa)
        (file-exists? . g$5914$1XGIwa)
        (vector-sort! . g$13818$1XGIwa)
        (vector-sort . g$13817$1XGIwa)
        (list-sort . g$7036$1XGIwa)
        (symbol-hash . g$5885$1XGIwa)
        (string-ci-hash . g$5884$1XGIwa)
        (string-hash . g$5883$1XGIwa)
        (equal-hash . g$13816$1XGIwa)
        (hashtable-equivalence-function . g$13815$1XGIwa)
        (make-hashtable . g$13814$1XGIwa)
        (hashtable-hash-function . g$13813$1XGIwa)
        (make-eqv-hashtable . g$5875$1XGIwa)
        (make-eq-hashtable . g$5874$1XGIwa)
        (hashtable? . g$5873$1XGIwa)
        (hashtable-update! . g$5881$1XGIwa)
        (hashtable-size . g$5876$1XGIwa)
        (hashtable-set! . g$5878$1XGIwa)
        (hashtable-ref . g$5877$1XGIwa)
        (hashtable-mutable? . g$13812$1XGIwa)
        (hashtable-keys . g$13811$1XGIwa)
        (hashtable-entries . g$13810$1XGIwa)
        (hashtable-delete! . g$5879$1XGIwa)
        (hashtable-copy . g$13809$1XGIwa)
        (hashtable-contains? . g$5880$1XGIwa)
        (hashtable-clear! . g$5882$1XGIwa)
        (call-with-output-file . g$8933$1XGIwa)
        (call-with-input-file . g$8932$1XGIwa)
        (write-char . g$8924$1XGIwa)
        (write . g$13808$1XGIwa)
        (with-output-to-file . g$8931$1XGIwa)
        (with-input-from-file . g$8930$1XGIwa)
        (read-char . g$8923$1XGIwa)
        (read . g$13807$1XGIwa)
        (peek-char . g$8922$1XGIwa)
        (open-output-file . g$13806$1XGIwa)
        (open-input-file . g$13805$1XGIwa)
        (newline . g$8934$1XGIwa)
        (display . g$13804$1XGIwa)
        (close-output-port . g$13803$1XGIwa)
        (close-input-port . g$13802$1XGIwa)
        (eof-object? . g$13801$1XGIwa)
        (eof-object . g$13800$1XGIwa)
        (current-error-port . g$13799$1XGIwa)
        (current-output-port . g$13798$1XGIwa)
        (current-input-port . g$13797$1XGIwa)
        (output-port? . g$13796$1XGIwa)
        (input-port? . g$13795$1XGIwa)
        (utf-8-codec . g$13794$1XGIwa)
        (utf-16-codec . g$13793$1XGIwa)
        (transcoder-error-handling-mode . g$13792$1XGIwa)
        (transcoder-eol-style . g$13791$1XGIwa)
        (transcoder-codec . g$13790$1XGIwa)
        (transcoded-port . g$13789$1XGIwa)
        (textual-port? . g$13788$1XGIwa)
        (string->bytevector . g$13787$1XGIwa)
        (standard-output-port . g$8898$1XGIwa)
        (standard-input-port . g$8897$1XGIwa)
        (standard-error-port . g$8896$1XGIwa)
        (set-port-position! . g$13786$1XGIwa)
        (put-u8 . g$13785$1XGIwa)
        (put-string . g$13784$1XGIwa)
        (put-datum . g$8901$1XGIwa)
        (put-char . g$13783$1XGIwa)
        (put-bytevector . g$13782$1XGIwa)
        (port? . g$8906$1XGIwa)
        (port-transcoder . g$13781$1XGIwa)
        (port-position . g$13780$1XGIwa)
        (port-has-set-port-position!? . g$13779$1XGIwa)
        (port-has-port-position? . g$13778$1XGIwa)
        (port-eof? . g$13777$1XGIwa)
        (output-port-buffer-mode . g$13776$1XGIwa)
        (open-string-output-port . g$8905$1XGIwa)
        (open-string-input-port . g$13775$1XGIwa)
        (open-file-output-port . g$13774$1XGIwa)
        (open-file-input/output-port . g$13773$1XGIwa)
        (open-file-input-port . g$13772$1XGIwa)
        (open-bytevector-output-port . g$13771$1XGIwa)
        (open-bytevector-input-port . g$13770$1XGIwa)
        (native-transcoder . g$13769$1XGIwa)
        (native-eol-style . g$8899$1XGIwa)
        (make-transcoder . g$13768$1XGIwa)
        (latin-1-codec . g$13767$1XGIwa)
        (make-i/o-write-error . g$6840$1XGIwa)
        (make-i/o-read-error . g$6827$1XGIwa)
        (make-i/o-port-error . g$6935$1XGIwa)
        (make-i/o-invalid-position-error . g$6853$1XGIwa)
        (make-i/o-filename-error . g$6868$1XGIwa)
        (make-i/o-file-protection-error . g$6883$1XGIwa)
        (make-i/o-file-is-read-only-error . g$6896$1XGIwa)
        (make-i/o-file-does-not-exist-error . g$6922$1XGIwa)
        (make-i/o-file-already-exists-error . g$6909$1XGIwa)
        (make-i/o-error . g$6814$1XGIwa)
        (make-i/o-encoding-error . g$6963$1XGIwa)
        (make-i/o-decoding-error . g$6950$1XGIwa)
        (make-custom-textual-output-port . g$13766$1XGIwa)
        (make-custom-textual-input/output-port . g$13765$1XGIwa)
        (make-custom-textual-input-port . g$13764$1XGIwa)
        (make-custom-binary-output-port . g$13763$1XGIwa)
        (make-custom-binary-input/output-port . g$13762$1XGIwa)
        (make-custom-binary-input-port . g$13761$1XGIwa)
        (make-bytevector . g$5935$1XGIwa)
        (lookahead-u8 . g$13760$1XGIwa)
        (lookahead-char . g$13759$1XGIwa)
        (i/o-write-error? . g$6841$1XGIwa)
        (i/o-read-error? . g$6828$1XGIwa)
        (i/o-port-error? . g$6937$1XGIwa)
        (i/o-invalid-position-error? . g$6855$1XGIwa)
        (i/o-error-position . g$6856$1XGIwa)
        (i/o-filename-error? . g$6870$1XGIwa)
        (i/o-file-protection-error? . g$6884$1XGIwa)
        (i/o-file-is-read-only-error? . g$6897$1XGIwa)
        (i/o-file-does-not-exist-error? . g$6923$1XGIwa)
        (i/o-file-already-exists-error? . g$6910$1XGIwa)
        (i/o-error? . g$6815$1XGIwa)
        (i/o-error-port . g$6938$1XGIwa)
        (i/o-error-filename . g$6871$1XGIwa)
        (i/o-encoding-error? . g$6965$1XGIwa)
        (i/o-encoding-error-char . g$6966$1XGIwa)
        (i/o-decoding-error? . g$6951$1XGIwa)
        (get-u8 . g$13758$1XGIwa)
        (get-string-n! . g$13757$1XGIwa)
        (get-string-n . g$13756$1XGIwa)
        (get-string-all . g$13755$1XGIwa)
        (get-line . g$13754$1XGIwa)
        (get-datum . g$8902$1XGIwa)
        (get-char . g$13753$1XGIwa)
        (get-bytevector-some . g$13752$1XGIwa)
        (get-bytevector-n! . g$13751$1XGIwa)
        (get-bytevector-n . g$13750$1XGIwa)
        (get-bytevector-all . g$13749$1XGIwa)
        (flush-output-port . g$13748$1XGIwa)
        (close-port . g$13747$1XGIwa)
        (call-with-string-output-port . g$8907$1XGIwa)
        (call-with-port . g$8908$1XGIwa)
        (call-with-bytevector-output-port . g$13746$1XGIwa)
        (bytevector->string . g$13745$1XGIwa)
        (buffer-mode? . g$8900$1XGIwa)
        (binary-port? . g$13744$1XGIwa)
        (exit . g$13743$1XGIwa)
        (command-line . g$13463$1XGIwa)
        (remove . g$5192$1XGIwa)
        (remv . g$5193$1XGIwa)
        (remp . g$5173$1XGIwa)
        (remq . g$5194$1XGIwa)
        (partition . g$5172$1XGIwa)
        (memv . g$5180$1XGIwa)
        (memq . g$5179$1XGIwa)
        (memp . g$5182$1XGIwa)
        (member . g$5181$1XGIwa)
        (exists . g$5186$1XGIwa)
        (for-all . g$5185$1XGIwa)
        (fold-right . g$5191$1XGIwa)
        (fold-left . g$5190$1XGIwa)
        (find . g$5171$1XGIwa)
        (filter . g$5174$1XGIwa)
        (cons* . g$5189$1XGIwa)
        (assv . g$5176$1XGIwa)
        (assq . g$5175$1XGIwa)
        (assp . g$5178$1XGIwa)
        (assoc . g$5177$1XGIwa)
        (with-exception-handler . g$13742$1XGIwa)
        (raise-continuable . g$13741$1XGIwa)
        (raise . g$13740$1XGIwa)
        (make-enumeration . g$8994$1XGIwa)
        (enum-set=? . g$9001$1XGIwa)
        (enum-set-universe . g$8995$1XGIwa)
        (enum-set-union . g$9002$1XGIwa)
        (enum-set-subset? . g$9000$1XGIwa)
        (enum-set-projection . g$9006$1XGIwa)
        (enum-set-member? . g$8999$1XGIwa)
        (enum-set-intersection . g$9003$1XGIwa)
        (enum-set-indexer . g$8996$1XGIwa)
        (enum-set-difference . g$9004$1XGIwa)
        (enum-set-constructor . g$8997$1XGIwa)
        (enum-set-complement . g$9005$1XGIwa)
        (enum-set->list . g$8998$1XGIwa)
        (who-condition? . g$6702$1XGIwa)
        (warning? . g$6621$1XGIwa)
        (violation? . g$6660$1XGIwa)
        (undefined-violation? . g$6802$1XGIwa)
        (syntax-violation? . g$6787$1XGIwa)
        (syntax-violation-subform . g$6789$1XGIwa)
        (syntax-violation-form . g$6788$1XGIwa)
        (syntax-violation . g$10444$1XGIwa)
        (simple-conditions . g$13739$1XGIwa)
        (serious-condition? . g$6634$1XGIwa)
        (non-continuable-violation? . g$6746$1XGIwa)
        (message-condition? . g$6607$1XGIwa)
        (make-who-condition . g$6700$1XGIwa)
        (make-warning . g$6620$1XGIwa)
        (make-violation . g$6659$1XGIwa)
        (make-undefined-violation . g$6801$1XGIwa)
        (make-syntax-violation . g$6784$1XGIwa)
        (make-serious-condition . g$6633$1XGIwa)
        (make-non-continuable-violation . g$6745$1XGIwa)
        (make-message-condition . g$6605$1XGIwa)
        (make-lexical-violation . g$6771$1XGIwa)
        (make-irritants-condition . g$6685$1XGIwa)
        (make-implementation-restriction-violation . g$6758$1XGIwa)
        (make-error . g$6646$1XGIwa)
        (make-assertion-violation . g$6672$1XGIwa)
        (lexical-violation? . g$6772$1XGIwa)
        (irritants-condition? . g$6687$1XGIwa)
        (implementation-restriction-violation? . g$6759$1XGIwa)
        (error? . g$6647$1XGIwa)
        (condition-who . g$6703$1XGIwa)
        (condition-predicate . g$13738$1XGIwa)
        (condition-message . g$6608$1XGIwa)
        (condition-irritants . g$6688$1XGIwa)
        (condition-accessor . g$13737$1XGIwa)
        (condition . g$13736$1XGIwa)
        (assertion-violation? . g$6673$1XGIwa)
        (condition? . g$13735$1XGIwa)
        (utf32->string . g$5953$1XGIwa)
        (utf16->string . g$5952$1XGIwa)
        (utf8->string . g$5950$1XGIwa)
        (uint-list->bytevector . g$5954$1XGIwa)
        (u8-list->bytevector . g$5946$1XGIwa)
        (string->utf8 . g$5947$1XGIwa)
        (string->utf32 . g$5949$1XGIwa)
        (string->utf16 . g$5948$1XGIwa)
        (sint-list->bytevector . g$5955$1XGIwa)
        (native-endianness . g$5921$1XGIwa)
        (bytevector? . g$5529$1XGIwa)
        (bytevector=? . g$5937$1XGIwa)
        (bytevector-uint-set! . g$13734$1XGIwa)
        (bytevector-uint-ref . g$13733$1XGIwa)
        (bytevector-u8-set! . g$5942$1XGIwa)
        (bytevector-u8-ref . g$5941$1XGIwa)
        (bytevector-u64-set! . g$5983$1XGIwa)
        (bytevector-u64-ref . g$5979$1XGIwa)
        (bytevector-u64-native-set! . g$5985$1XGIwa)
        (bytevector-u64-native-ref . g$5981$1XGIwa)
        (bytevector-u32-set! . g$5975$1XGIwa)
        (bytevector-u32-ref . g$5971$1XGIwa)
        (bytevector-u32-native-set! . g$5977$1XGIwa)
        (bytevector-u32-native-ref . g$5973$1XGIwa)
        (bytevector-u16-set! . g$5967$1XGIwa)
        (bytevector-u16-ref . g$5963$1XGIwa)
        (bytevector-u16-native-set! . g$5969$1XGIwa)
        (bytevector-u16-native-ref . g$5965$1XGIwa)
        (bytevector-sint-set! . g$13732$1XGIwa)
        (bytevector-sint-ref . g$13731$1XGIwa)
        (bytevector-s8-set! . g$5944$1XGIwa)
        (bytevector-s8-ref . g$5943$1XGIwa)
        (bytevector-s64-set! . g$5984$1XGIwa)
        (bytevector-s64-ref . g$5980$1XGIwa)
        (bytevector-s64-native-set! . g$5986$1XGIwa)
        (bytevector-s64-native-ref . g$5982$1XGIwa)
        (bytevector-s32-set! . g$5976$1XGIwa)
        (bytevector-s32-ref . g$5972$1XGIwa)
        (bytevector-s32-native-set! . g$5978$1XGIwa)
        (bytevector-s32-native-ref . g$5974$1XGIwa)
        (bytevector-s16-set! . g$5968$1XGIwa)
        (bytevector-s16-ref . g$5964$1XGIwa)
        (bytevector-s16-native-set! . g$5970$1XGIwa)
        (bytevector-s16-native-ref . g$5966$1XGIwa)
        (bytevector-length . g$5936$1XGIwa)
        (bytevector-ieee-single-set! . g$5961$1XGIwa)
        (bytevector-ieee-single-ref . g$5959$1XGIwa)
        (bytevector-ieee-single-native-set! . g$5989$1XGIwa)
        (bytevector-ieee-single-native-ref . g$5987$1XGIwa)
        (bytevector-ieee-double-set! . g$5962$1XGIwa)
        (bytevector-ieee-double-ref . g$5960$1XGIwa)
        (bytevector-ieee-double-native-set! . g$5990$1XGIwa)
        (bytevector-ieee-double-native-ref . g$5988$1XGIwa)
        (bytevector-fill! . g$5938$1XGIwa)
        (bytevector-copy! . g$5939$1XGIwa)
        (bytevector-copy . g$5940$1XGIwa)
        (bytevector->uint-list . g$5956$1XGIwa)
        (bytevector->u8-list . g$5945$1XGIwa)
        (bytevector->sint-list . g$5957$1XGIwa)
        (no-nans-violation? . g$6992$1XGIwa)
        (no-infinities-violation? . g$6979$1XGIwa)
        (make-no-nans-violation . g$6991$1XGIwa)
        (make-no-infinities-violation . g$6978$1XGIwa)
        (real->flonum . g$6235$1XGIwa)
        (flzero? . g$8338$1XGIwa)
        (fltruncate . g$8333$1XGIwa)
        (fltan . g$8319$1XGIwa)
        (flsqrt . g$8324$1XGIwa)
        (flsin . g$8317$1XGIwa)
        (flround . g$8334$1XGIwa)
        (flpositive? . g$8336$1XGIwa)
        (flonum? . g$5534$1XGIwa)
        (flodd? . g$8340$1XGIwa)
        (flnumerator . g$8283$1XGIwa)
        (flnegative? . g$8337$1XGIwa)
        (flnan? . g$8316$1XGIwa)
        (flmod0 . g$8301$1XGIwa)
        (flmod . g$8300$1XGIwa)
        (flmin . g$8342$1XGIwa)
        (flmax . g$8341$1XGIwa)
        (fllog . g$8323$1XGIwa)
        (flinteger? . g$8309$1XGIwa)
        (flinfinite? . g$8315$1XGIwa)
        (flfloor . g$8332$1XGIwa)
        (flfinite? . g$8310$1XGIwa)
        (flexpt . g$8326$1XGIwa)
        (flexp . g$8325$1XGIwa)
        (fleven? . g$8339$1XGIwa)
        (fldiv0-and-mod0 . g$8308$1XGIwa)
        (fldiv0 . g$8295$1XGIwa)
        (fldiv-and-mod . g$8302$1XGIwa)
        (fldiv . g$8307$1XGIwa)
        (fldenominator . g$8282$1XGIwa)
        (flcos . g$8318$1XGIwa)
        (flceiling . g$8327$1XGIwa)
        (flatan . g$8322$1XGIwa)
        (flasin . g$8320$1XGIwa)
        (flacos . g$8321$1XGIwa)
        (flabs . g$8335$1XGIwa)
        (fl>? . g$8289$1XGIwa)
        (fl>=? . g$8290$1XGIwa)
        (fl=? . g$8286$1XGIwa)
        (fl<? . g$8287$1XGIwa)
        (fl<=? . g$8288$1XGIwa)
        (fl/ . g$8285$1XGIwa)
        (fl- . g$8284$1XGIwa)
        (fl+ . g$8280$1XGIwa)
        (fl* . g$8281$1XGIwa)
        (fixnum->flonum . g$6236$1XGIwa)
        (fxzero? . g$7383$1XGIwa)
        (fxxor . g$7346$1XGIwa)
        (fxrotate-bit-field . g$7421$1XGIwa)
        (fxreverse-bit-field . g$7422$1XGIwa)
        (fxpositive? . g$7373$1XGIwa)
        (fxodd? . g$7393$1XGIwa)
        (fxnot . g$7327$1XGIwa)
        (fxnegative? . g$7378$1XGIwa)
        (fxmod0 . g$7357$1XGIwa)
        (fxmod . g$7356$1XGIwa)
        (fxmin . g$7395$1XGIwa)
        (fxmax . g$7394$1XGIwa)
        (fxlength . g$7324$1XGIwa)
        (fxior . g$7345$1XGIwa)
        (fxif . g$7403$1XGIwa)
        (fxfirst-bit-set . g$7325$1XGIwa)
        (fxeven? . g$7388$1XGIwa)
        (fxdiv0-and-mod0 . g$7368$1XGIwa)
        (fxdiv0 . g$7363$1XGIwa)
        (fxdiv-and-mod . g$7358$1XGIwa)
        (fxdiv . g$7351$1XGIwa)
        (fxcopy-bit-field . g$7418$1XGIwa)
        (fxcopy-bit . g$7408$1XGIwa)
        (fxbit-set? . g$7326$1XGIwa)
        (fxbit-field . g$7413$1XGIwa)
        (fxbit-count . g$7319$1XGIwa)
        (fxarithmetic-shift-right . g$7420$1XGIwa)
        (fxarithmetic-shift-left . g$7419$1XGIwa)
        (fxarithmetic-shift . g$7314$1XGIwa)
        (fxand . g$7344$1XGIwa)
        (fx>? . g$7336$1XGIwa)
        (fx>=? . g$7337$1XGIwa)
        (fx=? . g$7333$1XGIwa)
        (fx<? . g$7334$1XGIwa)
        (fx<=? . g$7335$1XGIwa)
        (fx-/carry . g$7397$1XGIwa)
        (fx- . g$7308$1XGIwa)
        (fx+/carry . g$7398$1XGIwa)
        (fx+ . g$7306$1XGIwa)
        (fx*/carry . g$7396$1XGIwa)
        (fx* . g$7307$1XGIwa)
        (greatest-fixnum . g$7277$1XGIwa)
        (least-fixnum . g$7278$1XGIwa)
        (fixnum-width . g$5535$1XGIwa)
        (fixnum? . g$5533$1XGIwa)
        (bitwise-rotate-bit-field . g$7207$1XGIwa)
        (bitwise-reverse-bit-field . g$7208$1XGIwa)
        (bitwise-length . g$7198$1XGIwa)
        (bitwise-if . g$7201$1XGIwa)
        (bitwise-first-bit-set . g$7199$1XGIwa)
        (bitwise-copy-bit-field . g$7204$1XGIwa)
        (bitwise-copy-bit . g$7202$1XGIwa)
        (bitwise-bit-set? . g$7200$1XGIwa)
        (bitwise-bit-field . g$7203$1XGIwa)
        (bitwise-bit-count . g$7197$1XGIwa)
        (bitwise-xor . g$7196$1XGIwa)
        (bitwise-ior . g$7195$1XGIwa)
        (bitwise-and . g$7194$1XGIwa)
        (bitwise-not . g$7193$1XGIwa)
        (bitwise-arithmetic-shift-right . g$7206$1XGIwa)
        (bitwise-arithmetic-shift-left . g$7205$1XGIwa)
        (bitwise-arithmetic-shift . g$13730$1XGIwa)
        (zero? . g$6250$1XGIwa)
        (vector? . g$5528$1XGIwa)
        (vector-set! . g$5560$1XGIwa)
        (vector-ref . g$5559$1XGIwa)
        (vector-map . g$5630$1XGIwa)
        (vector-length . g$5562$1XGIwa)
        (vector-for-each . g$5631$1XGIwa)
        (vector-fill! . g$5563$1XGIwa)
        (vector->list . g$5564$1XGIwa)
        (vector . g$13729$1XGIwa)
        (values . g$13728$1XGIwa)
        (truncate . g$6302$1XGIwa)
        (tan . g$6294$1XGIwa)
        (symbol? . g$5530$1XGIwa)
        (symbol=? . g$5615$1XGIwa)
        (symbol->string . g$5550$1XGIwa)
        (substring . g$5547$1XGIwa)
        (string? . g$5526$1XGIwa)
        (string>? . g$5612$1XGIwa)
        (string>=? . g$5614$1XGIwa)
        (string=? . g$5610$1XGIwa)
        (string<? . g$5611$1XGIwa)
        (string<=? . g$5613$1XGIwa)
        (string-ref . g$5539$1XGIwa)
        (string-length . g$5542$1XGIwa)
        (string-for-each . g$5632$1XGIwa)
        (string-copy . g$5546$1XGIwa)
        (string-append . g$5548$1XGIwa)
        (string->symbol . g$5551$1XGIwa)
        (string->number . g$13727$1XGIwa)
        (string->list . g$5545$1XGIwa)
        (string . g$5544$1XGIwa)
        (sqrt . g$6304$1XGIwa)
        (sin . g$6288$1XGIwa)
        (round . g$6303$1XGIwa)
        (reverse . g$5566$1XGIwa)
        (real? . g$6244$1XGIwa)
        (real-valued? . g$6247$1XGIwa)
        (real-part . g$6281$1XGIwa)
        (rationalize . g$5627$1XGIwa)
        (rational? . g$6245$1XGIwa)
        (rational-valued? . g$6248$1XGIwa)
        (procedure? . g$5532$1XGIwa)
        (positive? . g$6251$1XGIwa)
        (pair? . g$13726$1XGIwa)
        (odd? . g$5599$1XGIwa)
        (numerator . g$6279$1XGIwa)
        (number? . g$6237$1XGIwa)
        (number->string . g$6258$1XGIwa)
        (null? . g$13725$1XGIwa)
        (not . g$13724$1XGIwa)
        (negative? . g$6252$1XGIwa)
        (nan? . g$6238$1XGIwa)
        (min . g$5601$1XGIwa)
        (max . g$5600$1XGIwa)
        (map . g$5187$1XGIwa)
        (make-vector . g$5561$1XGIwa)
        (make-string . g$5538$1XGIwa)
        (make-rectangular . g$6274$1XGIwa)
        (make-polar . g$6275$1XGIwa)
        (magnitude . g$6277$1XGIwa)
        (log . g$6297$1XGIwa)
        (list? . g$13723$1XGIwa)
        (list-tail . g$5167$1XGIwa)
        (list-ref . g$5168$1XGIwa)
        (list->vector . g$5557$1XGIwa)
        (list->string . g$5558$1XGIwa)
        (list . g$13722$1XGIwa)
        (length . g$13721$1XGIwa)
        (lcm . g$5603$1XGIwa)
        (integer? . g$6246$1XGIwa)
        (integer-valued? . g$6249$1XGIwa)
        (integer->char . g$5537$1XGIwa)
        (infinite? . g$6240$1XGIwa)
        (inexact? . g$6242$1XGIwa)
        (inexact . g$6253$1XGIwa)
        (imag-part . g$6282$1XGIwa)
        (gcd . g$5602$1XGIwa)
        (for-each . g$5188$1XGIwa)
        (floor . g$6300$1XGIwa)
        (finite? . g$6239$1XGIwa)
        (expt . g$6306$1XGIwa)
        (exp . g$6287$1XGIwa)
        (exact? . g$6241$1XGIwa)
        (exact-integer-sqrt . g$6305$1XGIwa)
        (exact . g$6254$1XGIwa)
        (even? . g$5598$1XGIwa)
        (error . g$13720$1XGIwa)
        (eqv? . g$13719$1XGIwa)
        (equal? . g$13718$1XGIwa)
        (eq? . g$13717$1XGIwa)
        (dynamic-wind . g$13716$1XGIwa)
        (div0-and-mod0 . g$5556$1XGIwa)
        (mod0 . g$5554$1XGIwa)
        (div0 . g$5552$1XGIwa)
        (div-and-mod . g$5555$1XGIwa)
        (mod . g$5553$1XGIwa)
        (div . g$6298$1XGIwa)
        (denominator . g$6280$1XGIwa)
        (cos . g$6291$1XGIwa)
        (cons . g$13715$1XGIwa)
        (complex? . g$6243$1XGIwa)
        (char? . g$5527$1XGIwa)
        (char>? . g$5624$1XGIwa)
        (char>=? . g$5626$1XGIwa)
        (char=? . g$5622$1XGIwa)
        (char<? . g$5623$1XGIwa)
        (char<=? . g$5625$1XGIwa)
        (char->integer . g$5536$1XGIwa)
        (ceiling . g$6301$1XGIwa)
        (call-with-values . g$13714$1XGIwa)
        (call/cc . g$13713$1XGIwa)
        (call-with-current-continuation . g$13712$1XGIwa)
        (cddddr . g$5594$1XGIwa)
        (cdddar . g$5593$1XGIwa)
        (cddadr . g$5592$1XGIwa)
        (cddaar . g$5591$1XGIwa)
        (cdaddr . g$5590$1XGIwa)
        (cdadar . g$5589$1XGIwa)
        (cdaadr . g$5588$1XGIwa)
        (cdaaar . g$5587$1XGIwa)
        (cadddr . g$5586$1XGIwa)
        (caddar . g$5585$1XGIwa)
        (cadadr . g$5584$1XGIwa)
        (cadaar . g$5583$1XGIwa)
        (caaddr . g$5582$1XGIwa)
        (caadar . g$5581$1XGIwa)
        (caaadr . g$5580$1XGIwa)
        (caaaar . g$5579$1XGIwa)
        (cdddr . g$5578$1XGIwa)
        (cddar . g$5577$1XGIwa)
        (cdadr . g$5576$1XGIwa)
        (cdaar . g$5575$1XGIwa)
        (caddr . g$5574$1XGIwa)
        (cadar . g$5573$1XGIwa)
        (caadr . g$5572$1XGIwa)
        (caaar . g$5571$1XGIwa)
        (cddr . g$5570$1XGIwa)
        (cdar . g$5569$1XGIwa)
        (cadr . g$5568$1XGIwa)
        (caar . g$5567$1XGIwa)
        (cdr . g$13711$1XGIwa)
        (car . g$13710$1XGIwa)
        (boolean? . g$5531$1XGIwa)
        (boolean=? . g$5616$1XGIwa)
        (atan . g$6296$1XGIwa)
        (assertion-violation . g$13709$1XGIwa)
        (asin . g$6289$1XGIwa)
        (apply . g$13708$1XGIwa)
        (append . g$13707$1XGIwa)
        (angle . g$6276$1XGIwa)
        (acos . g$6292$1XGIwa)
        (abs . g$6299$1XGIwa)
        (/ . g$13706$1XGIwa)
        (* . g$13705$1XGIwa)
        (- . g$13704$1XGIwa)
        (+ . g$13703$1XGIwa)
        (>= . g$6273$1XGIwa)
        (> . g$6272$1XGIwa)
        (= . g$6269$1XGIwa)
        (<= . g$6271$1XGIwa)
        (< . g$6270$1XGIwa)
        (&no-nans . g$13626$1XGIwa)
        (&no-infinities . g$13625$1XGIwa)
        (&i/o-encoding . g$13624$1XGIwa)
        (&i/o-decoding . g$13623$1XGIwa)
        (&i/o-port . g$13622$1XGIwa)
        (&i/o-file-does-not-exist . g$13621$1XGIwa)
        (&i/o-file-already-exists . g$13620$1XGIwa)
        (&i/o-file-is-read-only . g$13619$1XGIwa)
        (&i/o-file-protection . g$13618$1XGIwa)
        (&i/o-filename . g$13617$1XGIwa)
        (&i/o-invalid-position . g$13616$1XGIwa)
        (&i/o-write . g$13615$1XGIwa)
        (&i/o-read . g$13614$1XGIwa)
        (&i/o . g$13613$1XGIwa)
        (&non-continuable . g$13612$1XGIwa)
        (&undefined . g$13611$1XGIwa)
        (&syntax . g$13610$1XGIwa)
        (&lexical . g$13609$1XGIwa)
        (&implementation-restriction . g$13608$1XGIwa)
        (&who . g$13607$1XGIwa)
        (&irritants . g$13606$1XGIwa)
        (&assertion . g$13605$1XGIwa)
        (&violation . g$13604$1XGIwa)
        (&error . g$13603$1XGIwa)
        (&serious . g$13602$1XGIwa)
        (&warning . g$13601$1XGIwa)
        (&message . g$13600$1XGIwa)
        (&condition . g$13599$1XGIwa)
        (define-condition-type . g$13598$1XGIwa)
        (define-enumeration . g$13597$1XGIwa)
        (define-record-type . g$13596$1XGIwa)
        (parent-rtd . g$13595$1XGIwa)
        (nongenerative . g$13594$1XGIwa)
        (opaque . g$13593$1XGIwa)
        (sealed . g$13592$1XGIwa)
        (protocol . g$13591$1XGIwa)
        (parent . g$13590$1XGIwa)
        (immutable . g$13589$1XGIwa)
        (mutable . g$13588$1XGIwa)
        (fields . g$13587$1XGIwa)
        (error-handling-mode . g$13586$1XGIwa)
        (file-options . g$13585$1XGIwa)
        (buffer-mode . g$13584$1XGIwa)
        (eol-style . g$13583$1XGIwa)
        (guard . g$13582$1XGIwa)
        (unsyntax-splicing . g$13576$1XGIwa)
        (unsyntax . g$13575$1XGIwa)
        (unquote-splicing . g$13574$1XGIwa)
        (unquote . g$13573$1XGIwa)
        (_ . g$13572$1XGIwa)
        (else . g$13571$1XGIwa)
        (=> . g$13570$1XGIwa)
        (... . g$13569$1XGIwa)
        (assert . g$13568$1XGIwa)
        (endianness . g$13567$1XGIwa)
        (or . g$13564$1XGIwa)
        (and . g$13563$1XGIwa)
        (do . g$13562$1XGIwa)
        (cond . g$13561$1XGIwa)
        (let* . g$13560$1XGIwa)
        (let . g$13559$1XGIwa)
        (identifier-syntax . g$13558$1XGIwa)
        (with-syntax . g$13557$1XGIwa)
        (quasisyntax . g$13556$1XGIwa)
        (quasiquote . g$13555$1XGIwa)
        (syntax-rules . g$13554$1XGIwa)
        (let-values . g$13550$1XGIwa)
        (let*-values . g$13549$1XGIwa)
        (record-constructor-descriptor . g$13548$1XGIwa)
        (record-type-descriptor . g$13547$1XGIwa)
        (case . g$13545$1XGIwa)
        (unless . g$13543$1XGIwa)
        (when . g$13542$1XGIwa)
        (if . g$13541$1XGIwa)
        (letrec* . g$13540$1XGIwa)
        (letrec . g$13539$1XGIwa)
        (case-lambda . g$13537$1XGIwa)
        (lambda . g$13536$1XGIwa)
        (syntax . g$13535$1XGIwa)
        (syntax-case . g$13534$1XGIwa)
        (quote . g$13533$1XGIwa)
        (letrec-syntax . g$13531$1XGIwa)
        (let-syntax . g$13530$1XGIwa)
        (set! . g$13529$1XGIwa)
        (begin . g$13525$1XGIwa)
        (define-syntax . g$13523$1XGIwa)
        (define . g$13522$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13886$1XGIwa
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((scheme-report-environment . g$10424$1XGIwa)
        (quotient . g$7015$1XGIwa)
        (null-environment . g$10423$1XGIwa)
        (remainder . g$7016$1XGIwa)
        (modulo . g$7017$1XGIwa)
        (inexact->exact . g$7012$1XGIwa)
        (force . g$7019$1XGIwa)
        (exact->inexact . g$7013$1XGIwa)
        (delay . g$13566$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13887$1XGIwa
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$13562$1XGIwa)
        (unless . g$13543$1XGIwa)
        (when . g$13542$1XGIwa)
        (case-lambda . g$13537$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13888$1XGIwa
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$10426$1XGIwa) (environment . g$10422$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13889$1XGIwa
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$6998$1XGIwa) (set-car! . g$6997$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13890$1XGIwa
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$5541$1XGIwa) (string-set! . g$5540$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13891$1XGIwa
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$13743$1XGIwa) (command-line . g$13463$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13892$1XGIwa
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$10125$1XGIwa)
        (identifier? . g$10445$1XGIwa)
        (generate-temporaries . g$10434$1XGIwa)
        (free-identifier=? . g$10435$1XGIwa)
        (syntax->datum . g$10447$1XGIwa)
        (datum->syntax . g$10446$1XGIwa)
        (bound-identifier=? . g$10436$1XGIwa)
        (syntax-violation . g$10444$1XGIwa)
        (unsyntax-splicing . g$13576$1XGIwa)
        (unsyntax . g$13575$1XGIwa)
        (_ . g$13572$1XGIwa)
        (... . g$13569$1XGIwa)
        (with-syntax . g$13557$1XGIwa)
        (quasisyntax . g$13556$1XGIwa)
        (syntax . g$13535$1XGIwa)
        (syntax-case . g$13534$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13893$1XGIwa
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$5915$1XGIwa)
        (file-exists? . g$5914$1XGIwa)
        (make-i/o-write-error . g$6840$1XGIwa)
        (make-i/o-read-error . g$6827$1XGIwa)
        (make-i/o-port-error . g$6935$1XGIwa)
        (make-i/o-invalid-position-error . g$6853$1XGIwa)
        (make-i/o-filename-error . g$6868$1XGIwa)
        (make-i/o-file-protection-error . g$6883$1XGIwa)
        (make-i/o-file-is-read-only-error . g$6896$1XGIwa)
        (make-i/o-file-does-not-exist-error . g$6922$1XGIwa)
        (make-i/o-file-already-exists-error . g$6909$1XGIwa)
        (make-i/o-error . g$6814$1XGIwa)
        (i/o-write-error? . g$6841$1XGIwa)
        (i/o-read-error? . g$6828$1XGIwa)
        (i/o-port-error? . g$6937$1XGIwa)
        (i/o-invalid-position-error? . g$6855$1XGIwa)
        (i/o-error-position . g$6856$1XGIwa)
        (i/o-filename-error? . g$6870$1XGIwa)
        (i/o-file-protection-error? . g$6884$1XGIwa)
        (i/o-file-is-read-only-error? . g$6897$1XGIwa)
        (i/o-file-does-not-exist-error? . g$6923$1XGIwa)
        (i/o-file-already-exists-error? . g$6910$1XGIwa)
        (i/o-error? . g$6815$1XGIwa)
        (i/o-error-port . g$6938$1XGIwa)
        (i/o-error-filename . g$6871$1XGIwa)
        (&i/o-port . g$13622$1XGIwa)
        (&i/o-file-does-not-exist . g$13621$1XGIwa)
        (&i/o-file-already-exists . g$13620$1XGIwa)
        (&i/o-file-is-read-only . g$13619$1XGIwa)
        (&i/o-file-protection . g$13618$1XGIwa)
        (&i/o-filename . g$13617$1XGIwa)
        (&i/o-invalid-position . g$13616$1XGIwa)
        (&i/o-write . g$13615$1XGIwa)
        (&i/o-read . g$13614$1XGIwa)
        (&i/o . g$13613$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13894$1XGIwa
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$13818$1XGIwa)
        (vector-sort . g$13817$1XGIwa)
        (list-sort . g$7036$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13895$1XGIwa
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$6250$1XGIwa)
        (vector? . g$5528$1XGIwa)
        (vector-set! . g$5560$1XGIwa)
        (vector-ref . g$5559$1XGIwa)
        (vector-map . g$5630$1XGIwa)
        (vector-length . g$5562$1XGIwa)
        (vector-for-each . g$5631$1XGIwa)
        (vector-fill! . g$5563$1XGIwa)
        (vector->list . g$5564$1XGIwa)
        (vector . g$13729$1XGIwa)
        (values . g$13728$1XGIwa)
        (truncate . g$6302$1XGIwa)
        (tan . g$6294$1XGIwa)
        (symbol? . g$5530$1XGIwa)
        (symbol=? . g$5615$1XGIwa)
        (symbol->string . g$5550$1XGIwa)
        (substring . g$5547$1XGIwa)
        (string? . g$5526$1XGIwa)
        (string>? . g$5612$1XGIwa)
        (string>=? . g$5614$1XGIwa)
        (string=? . g$5610$1XGIwa)
        (string<? . g$5611$1XGIwa)
        (string<=? . g$5613$1XGIwa)
        (string-ref . g$5539$1XGIwa)
        (string-length . g$5542$1XGIwa)
        (string-for-each . g$5632$1XGIwa)
        (string-copy . g$5546$1XGIwa)
        (string-append . g$5548$1XGIwa)
        (string->symbol . g$5551$1XGIwa)
        (string->number . g$13727$1XGIwa)
        (string->list . g$5545$1XGIwa)
        (string . g$5544$1XGIwa)
        (sqrt . g$6304$1XGIwa)
        (sin . g$6288$1XGIwa)
        (round . g$6303$1XGIwa)
        (reverse . g$5566$1XGIwa)
        (real? . g$6244$1XGIwa)
        (real-valued? . g$6247$1XGIwa)
        (real-part . g$6281$1XGIwa)
        (rationalize . g$5627$1XGIwa)
        (rational? . g$6245$1XGIwa)
        (rational-valued? . g$6248$1XGIwa)
        (procedure? . g$5532$1XGIwa)
        (positive? . g$6251$1XGIwa)
        (pair? . g$13726$1XGIwa)
        (odd? . g$5599$1XGIwa)
        (numerator . g$6279$1XGIwa)
        (number? . g$6237$1XGIwa)
        (number->string . g$6258$1XGIwa)
        (null? . g$13725$1XGIwa)
        (not . g$13724$1XGIwa)
        (negative? . g$6252$1XGIwa)
        (nan? . g$6238$1XGIwa)
        (min . g$5601$1XGIwa)
        (max . g$5600$1XGIwa)
        (map . g$5187$1XGIwa)
        (make-vector . g$5561$1XGIwa)
        (make-string . g$5538$1XGIwa)
        (make-rectangular . g$6274$1XGIwa)
        (make-polar . g$6275$1XGIwa)
        (magnitude . g$6277$1XGIwa)
        (log . g$6297$1XGIwa)
        (list? . g$13723$1XGIwa)
        (list-tail . g$5167$1XGIwa)
        (list-ref . g$5168$1XGIwa)
        (list->vector . g$5557$1XGIwa)
        (list->string . g$5558$1XGIwa)
        (list . g$13722$1XGIwa)
        (length . g$13721$1XGIwa)
        (lcm . g$5603$1XGIwa)
        (integer? . g$6246$1XGIwa)
        (integer-valued? . g$6249$1XGIwa)
        (integer->char . g$5537$1XGIwa)
        (infinite? . g$6240$1XGIwa)
        (inexact? . g$6242$1XGIwa)
        (inexact . g$6253$1XGIwa)
        (imag-part . g$6282$1XGIwa)
        (gcd . g$5602$1XGIwa)
        (for-each . g$5188$1XGIwa)
        (floor . g$6300$1XGIwa)
        (finite? . g$6239$1XGIwa)
        (expt . g$6306$1XGIwa)
        (exp . g$6287$1XGIwa)
        (exact? . g$6241$1XGIwa)
        (exact-integer-sqrt . g$6305$1XGIwa)
        (exact . g$6254$1XGIwa)
        (even? . g$5598$1XGIwa)
        (error . g$13720$1XGIwa)
        (eqv? . g$13719$1XGIwa)
        (equal? . g$13718$1XGIwa)
        (eq? . g$13717$1XGIwa)
        (dynamic-wind . g$13716$1XGIwa)
        (div0-and-mod0 . g$5556$1XGIwa)
        (mod0 . g$5554$1XGIwa)
        (div0 . g$5552$1XGIwa)
        (div-and-mod . g$5555$1XGIwa)
        (mod . g$5553$1XGIwa)
        (div . g$6298$1XGIwa)
        (denominator . g$6280$1XGIwa)
        (cos . g$6291$1XGIwa)
        (cons . g$13715$1XGIwa)
        (complex? . g$6243$1XGIwa)
        (char? . g$5527$1XGIwa)
        (char>? . g$5624$1XGIwa)
        (char>=? . g$5626$1XGIwa)
        (char=? . g$5622$1XGIwa)
        (char<? . g$5623$1XGIwa)
        (char<=? . g$5625$1XGIwa)
        (char->integer . g$5536$1XGIwa)
        (ceiling . g$6301$1XGIwa)
        (call-with-values . g$13714$1XGIwa)
        (call/cc . g$13713$1XGIwa)
        (call-with-current-continuation . g$13712$1XGIwa)
        (cddddr . g$5594$1XGIwa)
        (cdddar . g$5593$1XGIwa)
        (cddadr . g$5592$1XGIwa)
        (cddaar . g$5591$1XGIwa)
        (cdaddr . g$5590$1XGIwa)
        (cdadar . g$5589$1XGIwa)
        (cdaadr . g$5588$1XGIwa)
        (cdaaar . g$5587$1XGIwa)
        (cadddr . g$5586$1XGIwa)
        (caddar . g$5585$1XGIwa)
        (cadadr . g$5584$1XGIwa)
        (cadaar . g$5583$1XGIwa)
        (caaddr . g$5582$1XGIwa)
        (caadar . g$5581$1XGIwa)
        (caaadr . g$5580$1XGIwa)
        (caaaar . g$5579$1XGIwa)
        (cdddr . g$5578$1XGIwa)
        (cddar . g$5577$1XGIwa)
        (cdadr . g$5576$1XGIwa)
        (cdaar . g$5575$1XGIwa)
        (caddr . g$5574$1XGIwa)
        (cadar . g$5573$1XGIwa)
        (caadr . g$5572$1XGIwa)
        (caaar . g$5571$1XGIwa)
        (cddr . g$5570$1XGIwa)
        (cdar . g$5569$1XGIwa)
        (cadr . g$5568$1XGIwa)
        (caar . g$5567$1XGIwa)
        (cdr . g$13711$1XGIwa)
        (car . g$13710$1XGIwa)
        (boolean? . g$5531$1XGIwa)
        (boolean=? . g$5616$1XGIwa)
        (atan . g$6296$1XGIwa)
        (assertion-violation . g$13709$1XGIwa)
        (asin . g$6289$1XGIwa)
        (apply . g$13708$1XGIwa)
        (append . g$13707$1XGIwa)
        (angle . g$6276$1XGIwa)
        (acos . g$6292$1XGIwa)
        (abs . g$6299$1XGIwa)
        (/ . g$13706$1XGIwa)
        (* . g$13705$1XGIwa)
        (- . g$13704$1XGIwa)
        (+ . g$13703$1XGIwa)
        (>= . g$6273$1XGIwa)
        (> . g$6272$1XGIwa)
        (= . g$6269$1XGIwa)
        (<= . g$6271$1XGIwa)
        (< . g$6270$1XGIwa)
        (unquote-splicing . g$13574$1XGIwa)
        (unquote . g$13573$1XGIwa)
        (_ . g$13572$1XGIwa)
        (else . g$13571$1XGIwa)
        (=> . g$13570$1XGIwa)
        (... . g$13569$1XGIwa)
        (assert . g$13568$1XGIwa)
        (or . g$13564$1XGIwa)
        (and . g$13563$1XGIwa)
        (cond . g$13561$1XGIwa)
        (let* . g$13560$1XGIwa)
        (let . g$13559$1XGIwa)
        (identifier-syntax . g$13558$1XGIwa)
        (quasiquote . g$13555$1XGIwa)
        (syntax-rules . g$13554$1XGIwa)
        (let-values . g$13550$1XGIwa)
        (let*-values . g$13549$1XGIwa)
        (case . g$13545$1XGIwa)
        (if . g$13541$1XGIwa)
        (letrec* . g$13540$1XGIwa)
        (letrec . g$13539$1XGIwa)
        (lambda . g$13536$1XGIwa)
        (quote . g$13533$1XGIwa)
        (letrec-syntax . g$13531$1XGIwa)
        (let-syntax . g$13530$1XGIwa)
        (set! . g$13529$1XGIwa)
        (begin . g$13525$1XGIwa)
        (define-syntax . g$13523$1XGIwa)
        (define . g$13522$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13896$1XGIwa
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$5192$1XGIwa)
        (remv . g$5193$1XGIwa)
        (remp . g$5173$1XGIwa)
        (remq . g$5194$1XGIwa)
        (partition . g$5172$1XGIwa)
        (memv . g$5180$1XGIwa)
        (memq . g$5179$1XGIwa)
        (memp . g$5182$1XGIwa)
        (member . g$5181$1XGIwa)
        (exists . g$5186$1XGIwa)
        (for-all . g$5185$1XGIwa)
        (fold-right . g$5191$1XGIwa)
        (fold-left . g$5190$1XGIwa)
        (find . g$5171$1XGIwa)
        (filter . g$5174$1XGIwa)
        (cons* . g$5189$1XGIwa)
        (assv . g$5176$1XGIwa)
        (assq . g$5175$1XGIwa)
        (assp . g$5178$1XGIwa)
        (assoc . g$5177$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13897$1XGIwa
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$8933$1XGIwa)
        (call-with-input-file . g$8932$1XGIwa)
        (write-char . g$8924$1XGIwa)
        (write . g$13808$1XGIwa)
        (with-output-to-file . g$8931$1XGIwa)
        (with-input-from-file . g$8930$1XGIwa)
        (read-char . g$8923$1XGIwa)
        (read . g$13807$1XGIwa)
        (peek-char . g$8922$1XGIwa)
        (open-output-file . g$13806$1XGIwa)
        (open-input-file . g$13805$1XGIwa)
        (newline . g$8934$1XGIwa)
        (display . g$13804$1XGIwa)
        (close-output-port . g$13803$1XGIwa)
        (close-input-port . g$13802$1XGIwa)
        (eof-object? . g$13801$1XGIwa)
        (eof-object . g$13800$1XGIwa)
        (current-error-port . g$13799$1XGIwa)
        (current-output-port . g$13798$1XGIwa)
        (current-input-port . g$13797$1XGIwa)
        (output-port? . g$13796$1XGIwa)
        (input-port? . g$13795$1XGIwa)
        (make-i/o-write-error . g$6840$1XGIwa)
        (make-i/o-read-error . g$6827$1XGIwa)
        (make-i/o-port-error . g$6935$1XGIwa)
        (make-i/o-invalid-position-error . g$6853$1XGIwa)
        (make-i/o-filename-error . g$6868$1XGIwa)
        (make-i/o-file-protection-error . g$6883$1XGIwa)
        (make-i/o-file-is-read-only-error . g$6896$1XGIwa)
        (make-i/o-file-does-not-exist-error . g$6922$1XGIwa)
        (make-i/o-file-already-exists-error . g$6909$1XGIwa)
        (make-i/o-error . g$6814$1XGIwa)
        (i/o-write-error? . g$6841$1XGIwa)
        (i/o-read-error? . g$6828$1XGIwa)
        (i/o-port-error? . g$6937$1XGIwa)
        (i/o-invalid-position-error? . g$6855$1XGIwa)
        (i/o-error-position . g$6856$1XGIwa)
        (i/o-filename-error? . g$6870$1XGIwa)
        (i/o-file-protection-error? . g$6884$1XGIwa)
        (i/o-file-is-read-only-error? . g$6897$1XGIwa)
        (i/o-file-does-not-exist-error? . g$6923$1XGIwa)
        (i/o-file-already-exists-error? . g$6910$1XGIwa)
        (i/o-error? . g$6815$1XGIwa)
        (i/o-error-port . g$6938$1XGIwa)
        (i/o-error-filename . g$6871$1XGIwa)
        (&i/o-port . g$13622$1XGIwa)
        (&i/o-file-does-not-exist . g$13621$1XGIwa)
        (&i/o-file-already-exists . g$13620$1XGIwa)
        (&i/o-file-is-read-only . g$13619$1XGIwa)
        (&i/o-file-protection . g$13618$1XGIwa)
        (&i/o-filename . g$13617$1XGIwa)
        (&i/o-invalid-position . g$13616$1XGIwa)
        (&i/o-write . g$13615$1XGIwa)
        (&i/o-read . g$13614$1XGIwa)
        (&i/o . g$13613$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13898$1XGIwa
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$5935$1XGIwa)
        (utf32->string . g$5953$1XGIwa)
        (utf16->string . g$5952$1XGIwa)
        (utf8->string . g$5950$1XGIwa)
        (uint-list->bytevector . g$5954$1XGIwa)
        (u8-list->bytevector . g$5946$1XGIwa)
        (string->utf8 . g$5947$1XGIwa)
        (string->utf32 . g$5949$1XGIwa)
        (string->utf16 . g$5948$1XGIwa)
        (sint-list->bytevector . g$5955$1XGIwa)
        (native-endianness . g$5921$1XGIwa)
        (bytevector? . g$5529$1XGIwa)
        (bytevector=? . g$5937$1XGIwa)
        (bytevector-uint-set! . g$13734$1XGIwa)
        (bytevector-uint-ref . g$13733$1XGIwa)
        (bytevector-u8-set! . g$5942$1XGIwa)
        (bytevector-u8-ref . g$5941$1XGIwa)
        (bytevector-u64-set! . g$5983$1XGIwa)
        (bytevector-u64-ref . g$5979$1XGIwa)
        (bytevector-u64-native-set! . g$5985$1XGIwa)
        (bytevector-u64-native-ref . g$5981$1XGIwa)
        (bytevector-u32-set! . g$5975$1XGIwa)
        (bytevector-u32-ref . g$5971$1XGIwa)
        (bytevector-u32-native-set! . g$5977$1XGIwa)
        (bytevector-u32-native-ref . g$5973$1XGIwa)
        (bytevector-u16-set! . g$5967$1XGIwa)
        (bytevector-u16-ref . g$5963$1XGIwa)
        (bytevector-u16-native-set! . g$5969$1XGIwa)
        (bytevector-u16-native-ref . g$5965$1XGIwa)
        (bytevector-sint-set! . g$13732$1XGIwa)
        (bytevector-sint-ref . g$13731$1XGIwa)
        (bytevector-s8-set! . g$5944$1XGIwa)
        (bytevector-s8-ref . g$5943$1XGIwa)
        (bytevector-s64-set! . g$5984$1XGIwa)
        (bytevector-s64-ref . g$5980$1XGIwa)
        (bytevector-s64-native-set! . g$5986$1XGIwa)
        (bytevector-s64-native-ref . g$5982$1XGIwa)
        (bytevector-s32-set! . g$5976$1XGIwa)
        (bytevector-s32-ref . g$5972$1XGIwa)
        (bytevector-s32-native-set! . g$5978$1XGIwa)
        (bytevector-s32-native-ref . g$5974$1XGIwa)
        (bytevector-s16-set! . g$5968$1XGIwa)
        (bytevector-s16-ref . g$5964$1XGIwa)
        (bytevector-s16-native-set! . g$5970$1XGIwa)
        (bytevector-s16-native-ref . g$5966$1XGIwa)
        (bytevector-length . g$5936$1XGIwa)
        (bytevector-ieee-single-set! . g$5961$1XGIwa)
        (bytevector-ieee-single-ref . g$5959$1XGIwa)
        (bytevector-ieee-single-native-set! . g$5989$1XGIwa)
        (bytevector-ieee-single-native-ref . g$5987$1XGIwa)
        (bytevector-ieee-double-set! . g$5962$1XGIwa)
        (bytevector-ieee-double-ref . g$5960$1XGIwa)
        (bytevector-ieee-double-native-set! . g$5990$1XGIwa)
        (bytevector-ieee-double-native-ref . g$5988$1XGIwa)
        (bytevector-fill! . g$5938$1XGIwa)
        (bytevector-copy! . g$5939$1XGIwa)
        (bytevector-copy . g$5940$1XGIwa)
        (bytevector->uint-list . g$5956$1XGIwa)
        (bytevector->u8-list . g$5945$1XGIwa)
        (bytevector->sint-list . g$5957$1XGIwa)
        (endianness . g$13567$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13899$1XGIwa
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13837$1XGIwa)
        (string-titlecase . g$7092$1XGIwa)
        (string-normalize-nfkd . g$7112$1XGIwa)
        (string-normalize-nfkc . g$7111$1XGIwa)
        (string-normalize-nfd . g$7110$1XGIwa)
        (string-normalize-nfc . g$7109$1XGIwa)
        (string-foldcase . g$7093$1XGIwa)
        (string-downcase . g$13836$1XGIwa)
        (string-ci>? . g$7089$1XGIwa)
        (string-ci>=? . g$7091$1XGIwa)
        (string-ci=? . g$7087$1XGIwa)
        (string-ci<? . g$7088$1XGIwa)
        (string-ci<=? . g$7090$1XGIwa)
        (char-whitespace? . g$7069$1XGIwa)
        (char-upper-case? . g$7070$1XGIwa)
        (char-title-case? . g$7072$1XGIwa)
        (char-numeric? . g$7068$1XGIwa)
        (char-lower-case? . g$7071$1XGIwa)
        (char-general-category . g$7073$1XGIwa)
        (char-upcase . g$7063$1XGIwa)
        (char-titlecase . g$7065$1XGIwa)
        (char-foldcase . g$7066$1XGIwa)
        (char-downcase . g$7064$1XGIwa)
        (char-ci>? . g$7101$1XGIwa)
        (char-ci>=? . g$7103$1XGIwa)
        (char-ci=? . g$7099$1XGIwa)
        (char-ci<? . g$7100$1XGIwa)
        (char-ci<=? . g$7102$1XGIwa)
        (char-alphabetic? . g$7067$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13900$1XGIwa
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$13742$1XGIwa)
        (raise-continuable . g$13741$1XGIwa)
        (raise . g$13740$1XGIwa)
        (guard . g$13582$1XGIwa)
        (else . g$13571$1XGIwa)
        (=> . g$13570$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13901$1XGIwa
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7207$1XGIwa)
        (bitwise-reverse-bit-field . g$7208$1XGIwa)
        (bitwise-length . g$7198$1XGIwa)
        (bitwise-if . g$7201$1XGIwa)
        (bitwise-first-bit-set . g$7199$1XGIwa)
        (bitwise-copy-bit-field . g$7204$1XGIwa)
        (bitwise-copy-bit . g$7202$1XGIwa)
        (bitwise-bit-set? . g$7200$1XGIwa)
        (bitwise-bit-field . g$7203$1XGIwa)
        (bitwise-bit-count . g$7197$1XGIwa)
        (bitwise-xor . g$7196$1XGIwa)
        (bitwise-ior . g$7195$1XGIwa)
        (bitwise-and . g$7194$1XGIwa)
        (bitwise-not . g$7193$1XGIwa)
        (bitwise-arithmetic-shift-right . g$7206$1XGIwa)
        (bitwise-arithmetic-shift-left . g$7205$1XGIwa)
        (bitwise-arithmetic-shift . g$13730$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13902$1XGIwa
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$7383$1XGIwa)
        (fxxor . g$7346$1XGIwa)
        (fxrotate-bit-field . g$7421$1XGIwa)
        (fxreverse-bit-field . g$7422$1XGIwa)
        (fxpositive? . g$7373$1XGIwa)
        (fxodd? . g$7393$1XGIwa)
        (fxnot . g$7327$1XGIwa)
        (fxnegative? . g$7378$1XGIwa)
        (fxmod0 . g$7357$1XGIwa)
        (fxmod . g$7356$1XGIwa)
        (fxmin . g$7395$1XGIwa)
        (fxmax . g$7394$1XGIwa)
        (fxlength . g$7324$1XGIwa)
        (fxior . g$7345$1XGIwa)
        (fxif . g$7403$1XGIwa)
        (fxfirst-bit-set . g$7325$1XGIwa)
        (fxeven? . g$7388$1XGIwa)
        (fxdiv0-and-mod0 . g$7368$1XGIwa)
        (fxdiv0 . g$7363$1XGIwa)
        (fxdiv-and-mod . g$7358$1XGIwa)
        (fxdiv . g$7351$1XGIwa)
        (fxcopy-bit-field . g$7418$1XGIwa)
        (fxcopy-bit . g$7408$1XGIwa)
        (fxbit-set? . g$7326$1XGIwa)
        (fxbit-field . g$7413$1XGIwa)
        (fxbit-count . g$7319$1XGIwa)
        (fxarithmetic-shift-right . g$7420$1XGIwa)
        (fxarithmetic-shift-left . g$7419$1XGIwa)
        (fxarithmetic-shift . g$7314$1XGIwa)
        (fxand . g$7344$1XGIwa)
        (fx>? . g$7336$1XGIwa)
        (fx>=? . g$7337$1XGIwa)
        (fx=? . g$7333$1XGIwa)
        (fx<? . g$7334$1XGIwa)
        (fx<=? . g$7335$1XGIwa)
        (fx-/carry . g$7397$1XGIwa)
        (fx- . g$7308$1XGIwa)
        (fx+/carry . g$7398$1XGIwa)
        (fx+ . g$7306$1XGIwa)
        (fx*/carry . g$7396$1XGIwa)
        (fx* . g$7307$1XGIwa)
        (greatest-fixnum . g$7277$1XGIwa)
        (least-fixnum . g$7278$1XGIwa)
        (fixnum-width . g$5535$1XGIwa)
        (fixnum? . g$5533$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13903$1XGIwa
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$6992$1XGIwa)
        (no-infinities-violation? . g$6979$1XGIwa)
        (make-no-nans-violation . g$6991$1XGIwa)
        (make-no-infinities-violation . g$6978$1XGIwa)
        (real->flonum . g$6235$1XGIwa)
        (flzero? . g$8338$1XGIwa)
        (fltruncate . g$8333$1XGIwa)
        (fltan . g$8319$1XGIwa)
        (flsqrt . g$8324$1XGIwa)
        (flsin . g$8317$1XGIwa)
        (flround . g$8334$1XGIwa)
        (flpositive? . g$8336$1XGIwa)
        (flonum? . g$5534$1XGIwa)
        (flodd? . g$8340$1XGIwa)
        (flnumerator . g$8283$1XGIwa)
        (flnegative? . g$8337$1XGIwa)
        (flnan? . g$8316$1XGIwa)
        (flmod0 . g$8301$1XGIwa)
        (flmod . g$8300$1XGIwa)
        (flmin . g$8342$1XGIwa)
        (flmax . g$8341$1XGIwa)
        (fllog . g$8323$1XGIwa)
        (flinteger? . g$8309$1XGIwa)
        (flinfinite? . g$8315$1XGIwa)
        (flfloor . g$8332$1XGIwa)
        (flfinite? . g$8310$1XGIwa)
        (flexpt . g$8326$1XGIwa)
        (flexp . g$8325$1XGIwa)
        (fleven? . g$8339$1XGIwa)
        (fldiv0-and-mod0 . g$8308$1XGIwa)
        (fldiv0 . g$8295$1XGIwa)
        (fldiv-and-mod . g$8302$1XGIwa)
        (fldiv . g$8307$1XGIwa)
        (fldenominator . g$8282$1XGIwa)
        (flcos . g$8318$1XGIwa)
        (flceiling . g$8327$1XGIwa)
        (flatan . g$8322$1XGIwa)
        (flasin . g$8320$1XGIwa)
        (flacos . g$8321$1XGIwa)
        (flabs . g$8335$1XGIwa)
        (fl>? . g$8289$1XGIwa)
        (fl>=? . g$8290$1XGIwa)
        (fl=? . g$8286$1XGIwa)
        (fl<? . g$8287$1XGIwa)
        (fl<=? . g$8288$1XGIwa)
        (fl/ . g$8285$1XGIwa)
        (fl- . g$8284$1XGIwa)
        (fl+ . g$8280$1XGIwa)
        (fl* . g$8281$1XGIwa)
        (fixnum->flonum . g$6236$1XGIwa)
        (&no-nans . g$13626$1XGIwa)
        (&no-infinities . g$13625$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13904$1XGIwa
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$5885$1XGIwa)
        (string-ci-hash . g$5884$1XGIwa)
        (string-hash . g$5883$1XGIwa)
        (equal-hash . g$13816$1XGIwa)
        (hashtable-equivalence-function . g$13815$1XGIwa)
        (make-hashtable . g$13814$1XGIwa)
        (hashtable-hash-function . g$13813$1XGIwa)
        (make-eqv-hashtable . g$5875$1XGIwa)
        (make-eq-hashtable . g$5874$1XGIwa)
        (hashtable? . g$5873$1XGIwa)
        (hashtable-update! . g$5881$1XGIwa)
        (hashtable-size . g$5876$1XGIwa)
        (hashtable-set! . g$5878$1XGIwa)
        (hashtable-ref . g$5877$1XGIwa)
        (hashtable-mutable? . g$13812$1XGIwa)
        (hashtable-keys . g$13811$1XGIwa)
        (hashtable-entries . g$13810$1XGIwa)
        (hashtable-delete! . g$5879$1XGIwa)
        (hashtable-copy . g$13809$1XGIwa)
        (hashtable-contains? . g$5880$1XGIwa)
        (hashtable-clear! . g$5882$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13905$1XGIwa
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$13801$1XGIwa)
        (eof-object . g$13800$1XGIwa)
        (current-error-port . g$13799$1XGIwa)
        (current-output-port . g$13798$1XGIwa)
        (current-input-port . g$13797$1XGIwa)
        (output-port? . g$13796$1XGIwa)
        (input-port? . g$13795$1XGIwa)
        (utf-8-codec . g$13794$1XGIwa)
        (utf-16-codec . g$13793$1XGIwa)
        (transcoder-error-handling-mode . g$13792$1XGIwa)
        (transcoder-eol-style . g$13791$1XGIwa)
        (transcoder-codec . g$13790$1XGIwa)
        (transcoded-port . g$13789$1XGIwa)
        (textual-port? . g$13788$1XGIwa)
        (string->bytevector . g$13787$1XGIwa)
        (standard-output-port . g$8898$1XGIwa)
        (standard-input-port . g$8897$1XGIwa)
        (standard-error-port . g$8896$1XGIwa)
        (set-port-position! . g$13786$1XGIwa)
        (put-u8 . g$13785$1XGIwa)
        (put-string . g$13784$1XGIwa)
        (put-datum . g$8901$1XGIwa)
        (put-char . g$13783$1XGIwa)
        (put-bytevector . g$13782$1XGIwa)
        (port? . g$8906$1XGIwa)
        (port-transcoder . g$13781$1XGIwa)
        (port-position . g$13780$1XGIwa)
        (port-has-set-port-position!? . g$13779$1XGIwa)
        (port-has-port-position? . g$13778$1XGIwa)
        (port-eof? . g$13777$1XGIwa)
        (output-port-buffer-mode . g$13776$1XGIwa)
        (open-string-output-port . g$8905$1XGIwa)
        (open-string-input-port . g$13775$1XGIwa)
        (open-file-output-port . g$13774$1XGIwa)
        (open-file-input/output-port . g$13773$1XGIwa)
        (open-file-input-port . g$13772$1XGIwa)
        (open-bytevector-output-port . g$13771$1XGIwa)
        (open-bytevector-input-port . g$13770$1XGIwa)
        (native-transcoder . g$13769$1XGIwa)
        (native-eol-style . g$8899$1XGIwa)
        (make-transcoder . g$13768$1XGIwa)
        (latin-1-codec . g$13767$1XGIwa)
        (make-i/o-write-error . g$6840$1XGIwa)
        (make-i/o-read-error . g$6827$1XGIwa)
        (make-i/o-port-error . g$6935$1XGIwa)
        (make-i/o-invalid-position-error . g$6853$1XGIwa)
        (make-i/o-filename-error . g$6868$1XGIwa)
        (make-i/o-file-protection-error . g$6883$1XGIwa)
        (make-i/o-file-is-read-only-error . g$6896$1XGIwa)
        (make-i/o-file-does-not-exist-error . g$6922$1XGIwa)
        (make-i/o-file-already-exists-error . g$6909$1XGIwa)
        (make-i/o-error . g$6814$1XGIwa)
        (make-i/o-encoding-error . g$6963$1XGIwa)
        (make-i/o-decoding-error . g$6950$1XGIwa)
        (make-custom-textual-output-port . g$13766$1XGIwa)
        (make-custom-textual-input/output-port . g$13765$1XGIwa)
        (make-custom-textual-input-port . g$13764$1XGIwa)
        (make-custom-binary-output-port . g$13763$1XGIwa)
        (make-custom-binary-input/output-port . g$13762$1XGIwa)
        (make-custom-binary-input-port . g$13761$1XGIwa)
        (lookahead-u8 . g$13760$1XGIwa)
        (lookahead-char . g$13759$1XGIwa)
        (i/o-write-error? . g$6841$1XGIwa)
        (i/o-read-error? . g$6828$1XGIwa)
        (i/o-port-error? . g$6937$1XGIwa)
        (i/o-invalid-position-error? . g$6855$1XGIwa)
        (i/o-error-position . g$6856$1XGIwa)
        (i/o-filename-error? . g$6870$1XGIwa)
        (i/o-file-protection-error? . g$6884$1XGIwa)
        (i/o-file-is-read-only-error? . g$6897$1XGIwa)
        (i/o-file-does-not-exist-error? . g$6923$1XGIwa)
        (i/o-file-already-exists-error? . g$6910$1XGIwa)
        (i/o-error? . g$6815$1XGIwa)
        (i/o-error-port . g$6938$1XGIwa)
        (i/o-error-filename . g$6871$1XGIwa)
        (i/o-encoding-error? . g$6965$1XGIwa)
        (i/o-encoding-error-char . g$6966$1XGIwa)
        (i/o-decoding-error? . g$6951$1XGIwa)
        (get-u8 . g$13758$1XGIwa)
        (get-string-n! . g$13757$1XGIwa)
        (get-string-n . g$13756$1XGIwa)
        (get-string-all . g$13755$1XGIwa)
        (get-line . g$13754$1XGIwa)
        (get-datum . g$8902$1XGIwa)
        (get-char . g$13753$1XGIwa)
        (get-bytevector-some . g$13752$1XGIwa)
        (get-bytevector-n! . g$13751$1XGIwa)
        (get-bytevector-n . g$13750$1XGIwa)
        (get-bytevector-all . g$13749$1XGIwa)
        (flush-output-port . g$13748$1XGIwa)
        (close-port . g$13747$1XGIwa)
        (call-with-string-output-port . g$8907$1XGIwa)
        (call-with-port . g$8908$1XGIwa)
        (call-with-bytevector-output-port . g$13746$1XGIwa)
        (bytevector->string . g$13745$1XGIwa)
        (buffer-mode? . g$8900$1XGIwa)
        (binary-port? . g$13744$1XGIwa)
        (&i/o-encoding . g$13624$1XGIwa)
        (&i/o-decoding . g$13623$1XGIwa)
        (&i/o-port . g$13622$1XGIwa)
        (&i/o-file-does-not-exist . g$13621$1XGIwa)
        (&i/o-file-already-exists . g$13620$1XGIwa)
        (&i/o-file-is-read-only . g$13619$1XGIwa)
        (&i/o-file-protection . g$13618$1XGIwa)
        (&i/o-filename . g$13617$1XGIwa)
        (&i/o-invalid-position . g$13616$1XGIwa)
        (&i/o-write . g$13615$1XGIwa)
        (&i/o-read . g$13614$1XGIwa)
        (&i/o . g$13613$1XGIwa)
        (error-handling-mode . g$13586$1XGIwa)
        (file-options . g$13585$1XGIwa)
        (buffer-mode . g$13584$1XGIwa)
        (eol-style . g$13583$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13906$1XGIwa
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$8994$1XGIwa)
        (enum-set=? . g$9001$1XGIwa)
        (enum-set-universe . g$8995$1XGIwa)
        (enum-set-union . g$9002$1XGIwa)
        (enum-set-subset? . g$9000$1XGIwa)
        (enum-set-projection . g$9006$1XGIwa)
        (enum-set-member? . g$8999$1XGIwa)
        (enum-set-intersection . g$9003$1XGIwa)
        (enum-set-indexer . g$8996$1XGIwa)
        (enum-set-difference . g$9004$1XGIwa)
        (enum-set-constructor . g$8997$1XGIwa)
        (enum-set-complement . g$9005$1XGIwa)
        (enum-set->list . g$8998$1XGIwa)
        (define-enumeration . g$13597$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13907$1XGIwa
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6702$1XGIwa)
        (warning? . g$6621$1XGIwa)
        (violation? . g$6660$1XGIwa)
        (undefined-violation? . g$6802$1XGIwa)
        (syntax-violation? . g$6787$1XGIwa)
        (syntax-violation-subform . g$6789$1XGIwa)
        (syntax-violation-form . g$6788$1XGIwa)
        (simple-conditions . g$13739$1XGIwa)
        (serious-condition? . g$6634$1XGIwa)
        (non-continuable-violation? . g$6746$1XGIwa)
        (message-condition? . g$6607$1XGIwa)
        (make-who-condition . g$6700$1XGIwa)
        (make-warning . g$6620$1XGIwa)
        (make-violation . g$6659$1XGIwa)
        (make-undefined-violation . g$6801$1XGIwa)
        (make-syntax-violation . g$6784$1XGIwa)
        (make-serious-condition . g$6633$1XGIwa)
        (make-non-continuable-violation . g$6745$1XGIwa)
        (make-message-condition . g$6605$1XGIwa)
        (make-lexical-violation . g$6771$1XGIwa)
        (make-irritants-condition . g$6685$1XGIwa)
        (make-implementation-restriction-violation . g$6758$1XGIwa)
        (make-error . g$6646$1XGIwa)
        (make-assertion-violation . g$6672$1XGIwa)
        (lexical-violation? . g$6772$1XGIwa)
        (irritants-condition? . g$6687$1XGIwa)
        (implementation-restriction-violation? . g$6759$1XGIwa)
        (error? . g$6647$1XGIwa)
        (condition-who . g$6703$1XGIwa)
        (condition-predicate . g$13738$1XGIwa)
        (condition-message . g$6608$1XGIwa)
        (condition-irritants . g$6688$1XGIwa)
        (condition-accessor . g$13737$1XGIwa)
        (condition . g$13736$1XGIwa)
        (assertion-violation? . g$6673$1XGIwa)
        (condition? . g$13735$1XGIwa)
        (&non-continuable . g$13612$1XGIwa)
        (&undefined . g$13611$1XGIwa)
        (&syntax . g$13610$1XGIwa)
        (&lexical . g$13609$1XGIwa)
        (&implementation-restriction . g$13608$1XGIwa)
        (&who . g$13607$1XGIwa)
        (&irritants . g$13606$1XGIwa)
        (&assertion . g$13605$1XGIwa)
        (&violation . g$13604$1XGIwa)
        (&error . g$13603$1XGIwa)
        (&serious . g$13602$1XGIwa)
        (&warning . g$13601$1XGIwa)
        (&message . g$13600$1XGIwa)
        (&condition . g$13599$1XGIwa)
        (define-condition-type . g$13598$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13908$1XGIwa
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$13828$1XGIwa)
        (record-type-uid . g$13827$1XGIwa)
        (record-type-sealed? . g$13826$1XGIwa)
        (record-type-parent . g$13825$1XGIwa)
        (record-type-opaque? . g$13824$1XGIwa)
        (record-type-name . g$13823$1XGIwa)
        (record-type-generative? . g$13822$1XGIwa)
        (record-type-field-names . g$13821$1XGIwa)
        (record-rtd . g$13820$1XGIwa)
        (record-field-mutable? . g$13819$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13909$1XGIwa
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$13835$1XGIwa)
        (record-predicate . g$13834$1XGIwa)
        (record-mutator . g$13833$1XGIwa)
        (record-constructor . g$13832$1XGIwa)
        (record-accessor . g$13831$1XGIwa)
        (make-record-type-descriptor . g$13830$1XGIwa)
        (make-record-constructor-descriptor . g$13829$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13910$1XGIwa
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$13596$1XGIwa)
        (parent-rtd . g$13595$1XGIwa)
        (nongenerative . g$13594$1XGIwa)
        (opaque . g$13593$1XGIwa)
        (sealed . g$13592$1XGIwa)
        (protocol . g$13591$1XGIwa)
        (parent . g$13590$1XGIwa)
        (immutable . g$13589$1XGIwa)
        (mutable . g$13588$1XGIwa)
        (fields . g$13587$1XGIwa)
        (record-constructor-descriptor . g$13548$1XGIwa)
        (record-type-descriptor . g$13547$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13911$1XGIwa
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$10321$1XGIwa)
        (&stacktrace-rcd . g$6735$1XGIwa)
        (&stacktrace-rtd . g$6734$1XGIwa)
        (&where-rcd . g$6720$1XGIwa)
        (&where-rtd . g$6719$1XGIwa)
        (&no-nans-rcd . g$6994$1XGIwa)
        (&no-nans-rtd . g$6993$1XGIwa)
        (&no-infinities-rcd . g$6981$1XGIwa)
        (&no-infinities-rtd . g$6980$1XGIwa)
        (&i/o-encoding-rcd . g$6968$1XGIwa)
        (&i/o-encoding-rtd . g$6967$1XGIwa)
        (&i/o-decoding-rcd . g$6953$1XGIwa)
        (&i/o-decoding-rtd . g$6952$1XGIwa)
        (&i/o-port-rcd . g$6940$1XGIwa)
        (&i/o-port-rtd . g$6939$1XGIwa)
        (&i/o-file-does-not-exist-rcd . g$6925$1XGIwa)
        (&i/o-file-does-not-exist-rtd . g$6924$1XGIwa)
        (&i/o-file-already-exists-rcd . g$6912$1XGIwa)
        (&i/o-file-already-exists-rtd . g$6911$1XGIwa)
        (&i/o-file-is-read-only-rcd . g$6899$1XGIwa)
        (&i/o-file-is-read-only-rtd . g$6898$1XGIwa)
        (&i/o-file-protection-rcd . g$6886$1XGIwa)
        (&i/o-file-protection-rtd . g$6885$1XGIwa)
        (&i/o-filename-rcd . g$6873$1XGIwa)
        (&i/o-filename-rtd . g$6872$1XGIwa)
        (&i/o-invalid-position-rcd . g$6858$1XGIwa)
        (&i/o-invalid-position-rtd . g$6857$1XGIwa)
        (&i/o-write-rcd . g$6843$1XGIwa)
        (&i/o-write-rtd . g$6842$1XGIwa)
        (&i/o-read-rcd . g$6830$1XGIwa)
        (&i/o-read-rtd . g$6829$1XGIwa)
        (&i/o-rcd . g$6817$1XGIwa)
        (&i/o-rtd . g$6816$1XGIwa)
        (&undefined-rcd . g$6804$1XGIwa)
        (&undefined-rtd . g$6803$1XGIwa)
        (&syntax-rcd . g$6791$1XGIwa)
        (&syntax-rtd . g$6790$1XGIwa)
        (&lexical-rcd . g$6774$1XGIwa)
        (&lexical-rtd . g$6773$1XGIwa)
        (&implementation-restriction-rcd . g$6761$1XGIwa)
        (&implementation-restriction-rtd . g$6760$1XGIwa)
        (&non-continuable-rcd . g$6748$1XGIwa)
        (&non-continuable-rtd . g$6747$1XGIwa)
        (&who-rcd . g$6705$1XGIwa)
        (&who-rtd . g$6704$1XGIwa)
        (&irritants-rcd . g$6690$1XGIwa)
        (&irritants-rtd . g$6689$1XGIwa)
        (&assertion-rcd . g$6675$1XGIwa)
        (&assertion-rtd . g$6674$1XGIwa)
        (&violation-rcd . g$6662$1XGIwa)
        (&violation-rtd . g$6661$1XGIwa)
        (&error-rcd . g$6649$1XGIwa)
        (&error-rtd . g$6648$1XGIwa)
        (&serious-rcd . g$6636$1XGIwa)
        (&serious-rtd . g$6635$1XGIwa)
        (&warning-rcd . g$6623$1XGIwa)
        (&warning-rtd . g$6622$1XGIwa)
        (&message-rcd . g$6610$1XGIwa)
        (&message-rtd . g$6609$1XGIwa)
        (&condition-rcd . g$6570$1XGIwa)
        (&condition-rtd . g$6569$1XGIwa)
        (library-letrec* . g$13874$1XGIwa)
        (annotation-stripped . g$13873$1XGIwa)
        (annotation-source . g$13872$1XGIwa)
        (annotation-expression . g$13871$1XGIwa)
        (annotation? . g$13870$1XGIwa)
        (read-annotated . g$13869$1XGIwa)
        (tanh . g$6295$1XGIwa)
        (cosh . g$6293$1XGIwa)
        (sinh . g$6290$1XGIwa)
        (make-guid . g$13868$1XGIwa)
        (unspecified? . g$13867$1XGIwa)
        (make-list . g$5170$1XGIwa)
        (last-pair . g$5169$1XGIwa)
        (load-r5rs . g$13866$1XGIwa)
        (license . g$13865$1XGIwa)
        (stacktrace . g$13864$1XGIwa)
        (ironscheme-test . g$13469$1XGIwa)
        (ironscheme-build . g$13470$1XGIwa)
        (pinvoke-call-internal . g$13863$1XGIwa)
        (ffi-callback-internal . g$13862$1XGIwa)
        (ffi-callout-internal . g$13861$1XGIwa)
        (define-clr-class-internal . g$13860$1XGIwa)
        (clr-field-set!-internal . g$13859$1XGIwa)
        (clr-field-get-internal . g$13858$1XGIwa)
        (clr-cast-internal . g$13857$1XGIwa)
        (clr-call-internal . g$13856$1XGIwa)
        (clr-new-internal . g$13855$1XGIwa)
        (clr-new-array-internal . g$13854$1XGIwa)
        (clr-is-internal . g$13853$1XGIwa)
        (clr-reference-internal . g$13852$1XGIwa)
        (clr-using-internal . g$13851$1XGIwa)
        (syntax-error . g$10441$1XGIwa)
        (syntax-dispatch . g$10316$1XGIwa)
        (compile-core . g$13850$1XGIwa)
        (eval-core . g$13849$1XGIwa)
        (remove-location . g$13848$1XGIwa)
        (set-symbol-value! . g$13847$1XGIwa)
        (symbol-value . g$13846$1XGIwa)
        (symbol-bound? . g$13845$1XGIwa)
        (ungensym . g$13844$1XGIwa)
        (gensym . g$13843$1XGIwa)
        (void . g$13842$1XGIwa)
        (load-serialized-library . g$13841$1XGIwa)
        (serialize-library . g$13840$1XGIwa)
        (compile-system-libraries . g$13474$1XGIwa)
        (compile->closure . g$13476$1XGIwa)
        (compile . g$13475$1XGIwa)
        (load . g$13468$1XGIwa)
        (string-normalize . g$13839$1XGIwa)
        (new-interaction-environment . g$10450$1XGIwa)
        (interaction-environment . g$10451$1XGIwa)
        (char-ready? . g$13838$1XGIwa)
        (string-upcase . g$13837$1XGIwa)
        (string-titlecase . g$7092$1XGIwa)
        (string-normalize-nfkd . g$7112$1XGIwa)
        (string-normalize-nfkc . g$7111$1XGIwa)
        (string-normalize-nfd . g$7110$1XGIwa)
        (string-normalize-nfc . g$7109$1XGIwa)
        (string-foldcase . g$7093$1XGIwa)
        (string-downcase . g$13836$1XGIwa)
        (string-ci>? . g$7089$1XGIwa)
        (string-ci>=? . g$7091$1XGIwa)
        (string-ci=? . g$7087$1XGIwa)
        (string-ci<? . g$7088$1XGIwa)
        (string-ci<=? . g$7090$1XGIwa)
        (char-whitespace? . g$7069$1XGIwa)
        (char-upper-case? . g$7070$1XGIwa)
        (char-title-case? . g$7072$1XGIwa)
        (char-numeric? . g$7068$1XGIwa)
        (char-lower-case? . g$7071$1XGIwa)
        (char-general-category . g$7073$1XGIwa)
        (char-upcase . g$7063$1XGIwa)
        (char-titlecase . g$7065$1XGIwa)
        (char-foldcase . g$7066$1XGIwa)
        (char-downcase . g$7064$1XGIwa)
        (char-ci>? . g$7101$1XGIwa)
        (char-ci>=? . g$7103$1XGIwa)
        (char-ci=? . g$7099$1XGIwa)
        (char-ci<? . g$7100$1XGIwa)
        (char-ci<=? . g$7102$1XGIwa)
        (char-alphabetic? . g$7067$1XGIwa)
        (variable-transformer-procedure . g$10128$1XGIwa)
        (variable-transformer? . g$10127$1XGIwa)
        (make-variable-transformer . g$10125$1XGIwa)
        (identifier? . g$10445$1XGIwa)
        (generate-temporaries . g$10434$1XGIwa)
        (free-identifier=? . g$10435$1XGIwa)
        (syntax->datum . g$10447$1XGIwa)
        (datum->syntax . g$10446$1XGIwa)
        (bound-identifier=? . g$10436$1XGIwa)
        (record-type-descriptor? . g$13835$1XGIwa)
        (record-predicate . g$13834$1XGIwa)
        (record-mutator . g$13833$1XGIwa)
        (record-constructor . g$13832$1XGIwa)
        (record-accessor . g$13831$1XGIwa)
        (make-record-type-descriptor . g$13830$1XGIwa)
        (make-record-constructor-descriptor . g$13829$1XGIwa)
        (record? . g$13828$1XGIwa)
        (record-type-uid . g$13827$1XGIwa)
        (record-type-sealed? . g$13826$1XGIwa)
        (record-type-parent . g$13825$1XGIwa)
        (record-type-opaque? . g$13824$1XGIwa)
        (record-type-name . g$13823$1XGIwa)
        (record-type-generative? . g$13822$1XGIwa)
        (record-type-field-names . g$13821$1XGIwa)
        (record-rtd . g$13820$1XGIwa)
        (record-field-mutable? . g$13819$1XGIwa)
        (delete-file . g$5915$1XGIwa)
        (file-exists? . g$5914$1XGIwa)
        (vector-sort! . g$13818$1XGIwa)
        (vector-sort . g$13817$1XGIwa)
        (list-sort . g$7036$1XGIwa)
        (symbol-hash . g$5885$1XGIwa)
        (string-ci-hash . g$5884$1XGIwa)
        (string-hash . g$5883$1XGIwa)
        (equal-hash . g$13816$1XGIwa)
        (hashtable-equivalence-function . g$13815$1XGIwa)
        (make-hashtable . g$13814$1XGIwa)
        (hashtable-hash-function . g$13813$1XGIwa)
        (make-eqv-hashtable . g$5875$1XGIwa)
        (make-eq-hashtable . g$5874$1XGIwa)
        (hashtable? . g$5873$1XGIwa)
        (hashtable-update! . g$5881$1XGIwa)
        (hashtable-size . g$5876$1XGIwa)
        (hashtable-set! . g$5878$1XGIwa)
        (hashtable-ref . g$5877$1XGIwa)
        (hashtable-mutable? . g$13812$1XGIwa)
        (hashtable-keys . g$13811$1XGIwa)
        (hashtable-entries . g$13810$1XGIwa)
        (hashtable-delete! . g$5879$1XGIwa)
        (hashtable-copy . g$13809$1XGIwa)
        (hashtable-contains? . g$5880$1XGIwa)
        (hashtable-clear! . g$5882$1XGIwa)
        (call-with-output-file . g$8933$1XGIwa)
        (call-with-input-file . g$8932$1XGIwa)
        (write-char . g$8924$1XGIwa)
        (write . g$13808$1XGIwa)
        (with-output-to-file . g$8931$1XGIwa)
        (with-input-from-file . g$8930$1XGIwa)
        (read-char . g$8923$1XGIwa)
        (read . g$13807$1XGIwa)
        (peek-char . g$8922$1XGIwa)
        (open-output-file . g$13806$1XGIwa)
        (open-input-file . g$13805$1XGIwa)
        (newline . g$8934$1XGIwa)
        (display . g$13804$1XGIwa)
        (close-output-port . g$13803$1XGIwa)
        (close-input-port . g$13802$1XGIwa)
        (eof-object? . g$13801$1XGIwa)
        (eof-object . g$13800$1XGIwa)
        (current-error-port . g$13799$1XGIwa)
        (current-output-port . g$13798$1XGIwa)
        (current-input-port . g$13797$1XGIwa)
        (output-port? . g$13796$1XGIwa)
        (input-port? . g$13795$1XGIwa)
        (utf-8-codec . g$13794$1XGIwa)
        (utf-16-codec . g$13793$1XGIwa)
        (transcoder-error-handling-mode . g$13792$1XGIwa)
        (transcoder-eol-style . g$13791$1XGIwa)
        (transcoder-codec . g$13790$1XGIwa)
        (transcoded-port . g$13789$1XGIwa)
        (textual-port? . g$13788$1XGIwa)
        (string->bytevector . g$13787$1XGIwa)
        (standard-output-port . g$8898$1XGIwa)
        (standard-input-port . g$8897$1XGIwa)
        (standard-error-port . g$8896$1XGIwa)
        (set-port-position! . g$13786$1XGIwa)
        (put-u8 . g$13785$1XGIwa)
        (put-string . g$13784$1XGIwa)
        (put-datum . g$8901$1XGIwa)
        (put-char . g$13783$1XGIwa)
        (put-bytevector . g$13782$1XGIwa)
        (port? . g$8906$1XGIwa)
        (port-transcoder . g$13781$1XGIwa)
        (port-position . g$13780$1XGIwa)
        (port-has-set-port-position!? . g$13779$1XGIwa)
        (port-has-port-position? . g$13778$1XGIwa)
        (port-eof? . g$13777$1XGIwa)
        (output-port-buffer-mode . g$13776$1XGIwa)
        (open-string-output-port . g$8905$1XGIwa)
        (open-string-input-port . g$13775$1XGIwa)
        (open-file-output-port . g$13774$1XGIwa)
        (open-file-input/output-port . g$13773$1XGIwa)
        (open-file-input-port . g$13772$1XGIwa)
        (open-bytevector-output-port . g$13771$1XGIwa)
        (open-bytevector-input-port . g$13770$1XGIwa)
        (native-transcoder . g$13769$1XGIwa)
        (native-eol-style . g$8899$1XGIwa)
        (make-transcoder . g$13768$1XGIwa)
        (latin-1-codec . g$13767$1XGIwa)
        (make-i/o-write-error . g$6840$1XGIwa)
        (make-i/o-read-error . g$6827$1XGIwa)
        (make-i/o-port-error . g$6935$1XGIwa)
        (make-i/o-invalid-position-error . g$6853$1XGIwa)
        (make-i/o-filename-error . g$6868$1XGIwa)
        (make-i/o-file-protection-error . g$6883$1XGIwa)
        (make-i/o-file-is-read-only-error . g$6896$1XGIwa)
        (make-i/o-file-does-not-exist-error . g$6922$1XGIwa)
        (make-i/o-file-already-exists-error . g$6909$1XGIwa)
        (make-i/o-error . g$6814$1XGIwa)
        (make-i/o-encoding-error . g$6963$1XGIwa)
        (make-i/o-decoding-error . g$6950$1XGIwa)
        (make-custom-textual-output-port . g$13766$1XGIwa)
        (make-custom-textual-input/output-port . g$13765$1XGIwa)
        (make-custom-textual-input-port . g$13764$1XGIwa)
        (make-custom-binary-output-port . g$13763$1XGIwa)
        (make-custom-binary-input/output-port . g$13762$1XGIwa)
        (make-custom-binary-input-port . g$13761$1XGIwa)
        (make-bytevector . g$5935$1XGIwa)
        (lookahead-u8 . g$13760$1XGIwa)
        (lookahead-char . g$13759$1XGIwa)
        (i/o-write-error? . g$6841$1XGIwa)
        (i/o-read-error? . g$6828$1XGIwa)
        (i/o-port-error? . g$6937$1XGIwa)
        (i/o-invalid-position-error? . g$6855$1XGIwa)
        (i/o-error-position . g$6856$1XGIwa)
        (i/o-filename-error? . g$6870$1XGIwa)
        (i/o-file-protection-error? . g$6884$1XGIwa)
        (i/o-file-is-read-only-error? . g$6897$1XGIwa)
        (i/o-file-does-not-exist-error? . g$6923$1XGIwa)
        (i/o-file-already-exists-error? . g$6910$1XGIwa)
        (i/o-error? . g$6815$1XGIwa)
        (i/o-error-port . g$6938$1XGIwa)
        (i/o-error-filename . g$6871$1XGIwa)
        (i/o-encoding-error? . g$6965$1XGIwa)
        (i/o-encoding-error-char . g$6966$1XGIwa)
        (i/o-decoding-error? . g$6951$1XGIwa)
        (get-u8 . g$13758$1XGIwa)
        (get-string-n! . g$13757$1XGIwa)
        (get-string-n . g$13756$1XGIwa)
        (get-string-all . g$13755$1XGIwa)
        (get-line . g$13754$1XGIwa)
        (get-datum . g$8902$1XGIwa)
        (get-char . g$13753$1XGIwa)
        (get-bytevector-some . g$13752$1XGIwa)
        (get-bytevector-n! . g$13751$1XGIwa)
        (get-bytevector-n . g$13750$1XGIwa)
        (get-bytevector-all . g$13749$1XGIwa)
        (flush-output-port . g$13748$1XGIwa)
        (close-port . g$13747$1XGIwa)
        (call-with-string-output-port . g$8907$1XGIwa)
        (call-with-port . g$8908$1XGIwa)
        (call-with-bytevector-output-port . g$13746$1XGIwa)
        (bytevector->string . g$13745$1XGIwa)
        (buffer-mode? . g$8900$1XGIwa)
        (binary-port? . g$13744$1XGIwa)
        (scheme-report-environment . g$10424$1XGIwa)
        (quotient . g$7015$1XGIwa)
        (null-environment . g$10423$1XGIwa)
        (remainder . g$7016$1XGIwa)
        (modulo . g$7017$1XGIwa)
        (inexact->exact . g$7012$1XGIwa)
        (force . g$7019$1XGIwa)
        (exact->inexact . g$7013$1XGIwa)
        (exit . g$13743$1XGIwa)
        (command-line . g$13463$1XGIwa)
        (string-fill! . g$5541$1XGIwa)
        (string-set! . g$5540$1XGIwa)
        (set-cdr! . g$6998$1XGIwa)
        (set-car! . g$6997$1XGIwa)
        (remove . g$5192$1XGIwa)
        (remv . g$5193$1XGIwa)
        (remp . g$5173$1XGIwa)
        (remq . g$5194$1XGIwa)
        (partition . g$5172$1XGIwa)
        (memv . g$5180$1XGIwa)
        (memq . g$5179$1XGIwa)
        (memp . g$5182$1XGIwa)
        (member . g$5181$1XGIwa)
        (exists . g$5186$1XGIwa)
        (for-all . g$5185$1XGIwa)
        (fold-right . g$5191$1XGIwa)
        (fold-left . g$5190$1XGIwa)
        (find . g$5171$1XGIwa)
        (filter . g$5174$1XGIwa)
        (cons* . g$5189$1XGIwa)
        (assv . g$5176$1XGIwa)
        (assq . g$5175$1XGIwa)
        (assp . g$5178$1XGIwa)
        (assoc . g$5177$1XGIwa)
        (with-exception-handler . g$13742$1XGIwa)
        (raise-continuable . g$13741$1XGIwa)
        (raise . g$13740$1XGIwa)
        (eval . g$10426$1XGIwa)
        (environment . g$10422$1XGIwa)
        (make-enumeration . g$8994$1XGIwa)
        (enum-set=? . g$9001$1XGIwa)
        (enum-set-universe . g$8995$1XGIwa)
        (enum-set-union . g$9002$1XGIwa)
        (enum-set-subset? . g$9000$1XGIwa)
        (enum-set-projection . g$9006$1XGIwa)
        (enum-set-member? . g$8999$1XGIwa)
        (enum-set-intersection . g$9003$1XGIwa)
        (enum-set-indexer . g$8996$1XGIwa)
        (enum-set-difference . g$9004$1XGIwa)
        (enum-set-constructor . g$8997$1XGIwa)
        (enum-set-complement . g$9005$1XGIwa)
        (enum-set->list . g$8998$1XGIwa)
        (who-condition? . g$6702$1XGIwa)
        (warning? . g$6621$1XGIwa)
        (violation? . g$6660$1XGIwa)
        (undefined-violation? . g$6802$1XGIwa)
        (syntax-violation? . g$6787$1XGIwa)
        (syntax-violation-subform . g$6789$1XGIwa)
        (syntax-violation-form . g$6788$1XGIwa)
        (syntax-violation . g$10444$1XGIwa)
        (simple-conditions . g$13739$1XGIwa)
        (serious-condition? . g$6634$1XGIwa)
        (non-continuable-violation? . g$6746$1XGIwa)
        (message-condition? . g$6607$1XGIwa)
        (make-who-condition . g$6700$1XGIwa)
        (make-warning . g$6620$1XGIwa)
        (make-violation . g$6659$1XGIwa)
        (make-undefined-violation . g$6801$1XGIwa)
        (make-syntax-violation . g$6784$1XGIwa)
        (make-serious-condition . g$6633$1XGIwa)
        (make-non-continuable-violation . g$6745$1XGIwa)
        (make-message-condition . g$6605$1XGIwa)
        (make-lexical-violation . g$6771$1XGIwa)
        (make-irritants-condition . g$6685$1XGIwa)
        (make-implementation-restriction-violation . g$6758$1XGIwa)
        (make-error . g$6646$1XGIwa)
        (make-assertion-violation . g$6672$1XGIwa)
        (lexical-violation? . g$6772$1XGIwa)
        (irritants-condition? . g$6687$1XGIwa)
        (implementation-restriction-violation? . g$6759$1XGIwa)
        (error? . g$6647$1XGIwa)
        (condition-who . g$6703$1XGIwa)
        (condition-predicate . g$13738$1XGIwa)
        (condition-message . g$6608$1XGIwa)
        (condition-irritants . g$6688$1XGIwa)
        (condition-accessor . g$13737$1XGIwa)
        (condition . g$13736$1XGIwa)
        (assertion-violation? . g$6673$1XGIwa)
        (condition? . g$13735$1XGIwa)
        (utf32->string . g$5953$1XGIwa)
        (utf16->string . g$5952$1XGIwa)
        (utf8->string . g$5950$1XGIwa)
        (uint-list->bytevector . g$5954$1XGIwa)
        (u8-list->bytevector . g$5946$1XGIwa)
        (string->utf8 . g$5947$1XGIwa)
        (string->utf32 . g$5949$1XGIwa)
        (string->utf16 . g$5948$1XGIwa)
        (sint-list->bytevector . g$5955$1XGIwa)
        (native-endianness . g$5921$1XGIwa)
        (bytevector? . g$5529$1XGIwa)
        (bytevector=? . g$5937$1XGIwa)
        (bytevector-uint-set! . g$13734$1XGIwa)
        (bytevector-uint-ref . g$13733$1XGIwa)
        (bytevector-u8-set! . g$5942$1XGIwa)
        (bytevector-u8-ref . g$5941$1XGIwa)
        (bytevector-u64-set! . g$5983$1XGIwa)
        (bytevector-u64-ref . g$5979$1XGIwa)
        (bytevector-u64-native-set! . g$5985$1XGIwa)
        (bytevector-u64-native-ref . g$5981$1XGIwa)
        (bytevector-u32-set! . g$5975$1XGIwa)
        (bytevector-u32-ref . g$5971$1XGIwa)
        (bytevector-u32-native-set! . g$5977$1XGIwa)
        (bytevector-u32-native-ref . g$5973$1XGIwa)
        (bytevector-u16-set! . g$5967$1XGIwa)
        (bytevector-u16-ref . g$5963$1XGIwa)
        (bytevector-u16-native-set! . g$5969$1XGIwa)
        (bytevector-u16-native-ref . g$5965$1XGIwa)
        (bytevector-sint-set! . g$13732$1XGIwa)
        (bytevector-sint-ref . g$13731$1XGIwa)
        (bytevector-s8-set! . g$5944$1XGIwa)
        (bytevector-s8-ref . g$5943$1XGIwa)
        (bytevector-s64-set! . g$5984$1XGIwa)
        (bytevector-s64-ref . g$5980$1XGIwa)
        (bytevector-s64-native-set! . g$5986$1XGIwa)
        (bytevector-s64-native-ref . g$5982$1XGIwa)
        (bytevector-s32-set! . g$5976$1XGIwa)
        (bytevector-s32-ref . g$5972$1XGIwa)
        (bytevector-s32-native-set! . g$5978$1XGIwa)
        (bytevector-s32-native-ref . g$5974$1XGIwa)
        (bytevector-s16-set! . g$5968$1XGIwa)
        (bytevector-s16-ref . g$5964$1XGIwa)
        (bytevector-s16-native-set! . g$5970$1XGIwa)
        (bytevector-s16-native-ref . g$5966$1XGIwa)
        (bytevector-length . g$5936$1XGIwa)
        (bytevector-ieee-single-set! . g$5961$1XGIwa)
        (bytevector-ieee-single-ref . g$5959$1XGIwa)
        (bytevector-ieee-single-native-set! . g$5989$1XGIwa)
        (bytevector-ieee-single-native-ref . g$5987$1XGIwa)
        (bytevector-ieee-double-set! . g$5962$1XGIwa)
        (bytevector-ieee-double-ref . g$5960$1XGIwa)
        (bytevector-ieee-double-native-set! . g$5990$1XGIwa)
        (bytevector-ieee-double-native-ref . g$5988$1XGIwa)
        (bytevector-fill! . g$5938$1XGIwa)
        (bytevector-copy! . g$5939$1XGIwa)
        (bytevector-copy . g$5940$1XGIwa)
        (bytevector->uint-list . g$5956$1XGIwa)
        (bytevector->u8-list . g$5945$1XGIwa)
        (bytevector->sint-list . g$5957$1XGIwa)
        (no-nans-violation? . g$6992$1XGIwa)
        (no-infinities-violation? . g$6979$1XGIwa)
        (make-no-nans-violation . g$6991$1XGIwa)
        (make-no-infinities-violation . g$6978$1XGIwa)
        (real->flonum . g$6235$1XGIwa)
        (flzero? . g$8338$1XGIwa)
        (fltruncate . g$8333$1XGIwa)
        (fltan . g$8319$1XGIwa)
        (flsqrt . g$8324$1XGIwa)
        (flsin . g$8317$1XGIwa)
        (flround . g$8334$1XGIwa)
        (flpositive? . g$8336$1XGIwa)
        (flonum? . g$5534$1XGIwa)
        (flodd? . g$8340$1XGIwa)
        (flnumerator . g$8283$1XGIwa)
        (flnegative? . g$8337$1XGIwa)
        (flnan? . g$8316$1XGIwa)
        (flmod0 . g$8301$1XGIwa)
        (flmod . g$8300$1XGIwa)
        (flmin . g$8342$1XGIwa)
        (flmax . g$8341$1XGIwa)
        (fllog . g$8323$1XGIwa)
        (flinteger? . g$8309$1XGIwa)
        (flinfinite? . g$8315$1XGIwa)
        (flfloor . g$8332$1XGIwa)
        (flfinite? . g$8310$1XGIwa)
        (flexpt . g$8326$1XGIwa)
        (flexp . g$8325$1XGIwa)
        (fleven? . g$8339$1XGIwa)
        (fldiv0-and-mod0 . g$8308$1XGIwa)
        (fldiv0 . g$8295$1XGIwa)
        (fldiv-and-mod . g$8302$1XGIwa)
        (fldiv . g$8307$1XGIwa)
        (fldenominator . g$8282$1XGIwa)
        (flcos . g$8318$1XGIwa)
        (flceiling . g$8327$1XGIwa)
        (flatan . g$8322$1XGIwa)
        (flasin . g$8320$1XGIwa)
        (flacos . g$8321$1XGIwa)
        (flabs . g$8335$1XGIwa)
        (fl>? . g$8289$1XGIwa)
        (fl>=? . g$8290$1XGIwa)
        (fl=? . g$8286$1XGIwa)
        (fl<? . g$8287$1XGIwa)
        (fl<=? . g$8288$1XGIwa)
        (fl/ . g$8285$1XGIwa)
        (fl- . g$8284$1XGIwa)
        (fl+ . g$8280$1XGIwa)
        (fl* . g$8281$1XGIwa)
        (fixnum->flonum . g$6236$1XGIwa)
        (fxzero? . g$7383$1XGIwa)
        (fxxor . g$7346$1XGIwa)
        (fxrotate-bit-field . g$7421$1XGIwa)
        (fxreverse-bit-field . g$7422$1XGIwa)
        (fxpositive? . g$7373$1XGIwa)
        (fxodd? . g$7393$1XGIwa)
        (fxnot . g$7327$1XGIwa)
        (fxnegative? . g$7378$1XGIwa)
        (fxmod0 . g$7357$1XGIwa)
        (fxmod . g$7356$1XGIwa)
        (fxmin . g$7395$1XGIwa)
        (fxmax . g$7394$1XGIwa)
        (fxlength . g$7324$1XGIwa)
        (fxior . g$7345$1XGIwa)
        (fxif . g$7403$1XGIwa)
        (fxfirst-bit-set . g$7325$1XGIwa)
        (fxeven? . g$7388$1XGIwa)
        (fxdiv0-and-mod0 . g$7368$1XGIwa)
        (fxdiv0 . g$7363$1XGIwa)
        (fxdiv-and-mod . g$7358$1XGIwa)
        (fxdiv . g$7351$1XGIwa)
        (fxcopy-bit-field . g$7418$1XGIwa)
        (fxcopy-bit . g$7408$1XGIwa)
        (fxbit-set? . g$7326$1XGIwa)
        (fxbit-field . g$7413$1XGIwa)
        (fxbit-count . g$7319$1XGIwa)
        (fxarithmetic-shift-right . g$7420$1XGIwa)
        (fxarithmetic-shift-left . g$7419$1XGIwa)
        (fxarithmetic-shift . g$7314$1XGIwa)
        (fxand . g$7344$1XGIwa)
        (fx>? . g$7336$1XGIwa)
        (fx>=? . g$7337$1XGIwa)
        (fx=? . g$7333$1XGIwa)
        (fx<? . g$7334$1XGIwa)
        (fx<=? . g$7335$1XGIwa)
        (fx-/carry . g$7397$1XGIwa)
        (fx- . g$7308$1XGIwa)
        (fx+/carry . g$7398$1XGIwa)
        (fx+ . g$7306$1XGIwa)
        (fx*/carry . g$7396$1XGIwa)
        (fx* . g$7307$1XGIwa)
        (greatest-fixnum . g$7277$1XGIwa)
        (least-fixnum . g$7278$1XGIwa)
        (fixnum-width . g$5535$1XGIwa)
        (fixnum? . g$5533$1XGIwa)
        (bitwise-rotate-bit-field . g$7207$1XGIwa)
        (bitwise-reverse-bit-field . g$7208$1XGIwa)
        (bitwise-length . g$7198$1XGIwa)
        (bitwise-if . g$7201$1XGIwa)
        (bitwise-first-bit-set . g$7199$1XGIwa)
        (bitwise-copy-bit-field . g$7204$1XGIwa)
        (bitwise-copy-bit . g$7202$1XGIwa)
        (bitwise-bit-set? . g$7200$1XGIwa)
        (bitwise-bit-field . g$7203$1XGIwa)
        (bitwise-bit-count . g$7197$1XGIwa)
        (bitwise-xor . g$7196$1XGIwa)
        (bitwise-ior . g$7195$1XGIwa)
        (bitwise-and . g$7194$1XGIwa)
        (bitwise-not . g$7193$1XGIwa)
        (bitwise-arithmetic-shift-right . g$7206$1XGIwa)
        (bitwise-arithmetic-shift-left . g$7205$1XGIwa)
        (bitwise-arithmetic-shift . g$13730$1XGIwa)
        (zero? . g$6250$1XGIwa)
        (vector? . g$5528$1XGIwa)
        (vector-set! . g$5560$1XGIwa)
        (vector-ref . g$5559$1XGIwa)
        (vector-map . g$5630$1XGIwa)
        (vector-length . g$5562$1XGIwa)
        (vector-for-each . g$5631$1XGIwa)
        (vector-fill! . g$5563$1XGIwa)
        (vector->list . g$5564$1XGIwa)
        (vector . g$13729$1XGIwa)
        (values . g$13728$1XGIwa)
        (truncate . g$6302$1XGIwa)
        (tan . g$6294$1XGIwa)
        (symbol? . g$5530$1XGIwa)
        (symbol=? . g$5615$1XGIwa)
        (symbol->string . g$5550$1XGIwa)
        (substring . g$5547$1XGIwa)
        (string? . g$5526$1XGIwa)
        (string>? . g$5612$1XGIwa)
        (string>=? . g$5614$1XGIwa)
        (string=? . g$5610$1XGIwa)
        (string<? . g$5611$1XGIwa)
        (string<=? . g$5613$1XGIwa)
        (string-ref . g$5539$1XGIwa)
        (string-length . g$5542$1XGIwa)
        (string-for-each . g$5632$1XGIwa)
        (string-copy . g$5546$1XGIwa)
        (string-append . g$5548$1XGIwa)
        (string->symbol . g$5551$1XGIwa)
        (string->number . g$13727$1XGIwa)
        (string->list . g$5545$1XGIwa)
        (string . g$5544$1XGIwa)
        (sqrt . g$6304$1XGIwa)
        (sin . g$6288$1XGIwa)
        (round . g$6303$1XGIwa)
        (reverse . g$5566$1XGIwa)
        (real? . g$6244$1XGIwa)
        (real-valued? . g$6247$1XGIwa)
        (real-part . g$6281$1XGIwa)
        (rationalize . g$5627$1XGIwa)
        (rational? . g$6245$1XGIwa)
        (rational-valued? . g$6248$1XGIwa)
        (procedure? . g$5532$1XGIwa)
        (positive? . g$6251$1XGIwa)
        (pair? . g$13726$1XGIwa)
        (odd? . g$5599$1XGIwa)
        (numerator . g$6279$1XGIwa)
        (number? . g$6237$1XGIwa)
        (number->string . g$6258$1XGIwa)
        (null? . g$13725$1XGIwa)
        (not . g$13724$1XGIwa)
        (negative? . g$6252$1XGIwa)
        (nan? . g$6238$1XGIwa)
        (min . g$5601$1XGIwa)
        (max . g$5600$1XGIwa)
        (map . g$5187$1XGIwa)
        (make-vector . g$5561$1XGIwa)
        (make-string . g$5538$1XGIwa)
        (make-rectangular . g$6274$1XGIwa)
        (make-polar . g$6275$1XGIwa)
        (magnitude . g$6277$1XGIwa)
        (log . g$6297$1XGIwa)
        (list? . g$13723$1XGIwa)
        (list-tail . g$5167$1XGIwa)
        (list-ref . g$5168$1XGIwa)
        (list->vector . g$5557$1XGIwa)
        (list->string . g$5558$1XGIwa)
        (list . g$13722$1XGIwa)
        (length . g$13721$1XGIwa)
        (lcm . g$5603$1XGIwa)
        (integer? . g$6246$1XGIwa)
        (integer-valued? . g$6249$1XGIwa)
        (integer->char . g$5537$1XGIwa)
        (infinite? . g$6240$1XGIwa)
        (inexact? . g$6242$1XGIwa)
        (inexact . g$6253$1XGIwa)
        (imag-part . g$6282$1XGIwa)
        (gcd . g$5602$1XGIwa)
        (for-each . g$5188$1XGIwa)
        (floor . g$6300$1XGIwa)
        (finite? . g$6239$1XGIwa)
        (expt . g$6306$1XGIwa)
        (exp . g$6287$1XGIwa)
        (exact? . g$6241$1XGIwa)
        (exact-integer-sqrt . g$6305$1XGIwa)
        (exact . g$6254$1XGIwa)
        (even? . g$5598$1XGIwa)
        (error . g$13720$1XGIwa)
        (eqv? . g$13719$1XGIwa)
        (equal? . g$13718$1XGIwa)
        (eq? . g$13717$1XGIwa)
        (dynamic-wind . g$13716$1XGIwa)
        (div0-and-mod0 . g$5556$1XGIwa)
        (mod0 . g$5554$1XGIwa)
        (div0 . g$5552$1XGIwa)
        (div-and-mod . g$5555$1XGIwa)
        (mod . g$5553$1XGIwa)
        (div . g$6298$1XGIwa)
        (denominator . g$6280$1XGIwa)
        (cos . g$6291$1XGIwa)
        (cons . g$13715$1XGIwa)
        (complex? . g$6243$1XGIwa)
        (char? . g$5527$1XGIwa)
        (char>? . g$5624$1XGIwa)
        (char>=? . g$5626$1XGIwa)
        (char=? . g$5622$1XGIwa)
        (char<? . g$5623$1XGIwa)
        (char<=? . g$5625$1XGIwa)
        (char->integer . g$5536$1XGIwa)
        (ceiling . g$6301$1XGIwa)
        (call-with-values . g$13714$1XGIwa)
        (call/cc . g$13713$1XGIwa)
        (call-with-current-continuation . g$13712$1XGIwa)
        (cddddr . g$5594$1XGIwa)
        (cdddar . g$5593$1XGIwa)
        (cddadr . g$5592$1XGIwa)
        (cddaar . g$5591$1XGIwa)
        (cdaddr . g$5590$1XGIwa)
        (cdadar . g$5589$1XGIwa)
        (cdaadr . g$5588$1XGIwa)
        (cdaaar . g$5587$1XGIwa)
        (cadddr . g$5586$1XGIwa)
        (caddar . g$5585$1XGIwa)
        (cadadr . g$5584$1XGIwa)
        (cadaar . g$5583$1XGIwa)
        (caaddr . g$5582$1XGIwa)
        (caadar . g$5581$1XGIwa)
        (caaadr . g$5580$1XGIwa)
        (caaaar . g$5579$1XGIwa)
        (cdddr . g$5578$1XGIwa)
        (cddar . g$5577$1XGIwa)
        (cdadr . g$5576$1XGIwa)
        (cdaar . g$5575$1XGIwa)
        (caddr . g$5574$1XGIwa)
        (cadar . g$5573$1XGIwa)
        (caadr . g$5572$1XGIwa)
        (caaar . g$5571$1XGIwa)
        (cddr . g$5570$1XGIwa)
        (cdar . g$5569$1XGIwa)
        (cadr . g$5568$1XGIwa)
        (caar . g$5567$1XGIwa)
        (cdr . g$13711$1XGIwa)
        (car . g$13710$1XGIwa)
        (boolean? . g$5531$1XGIwa)
        (boolean=? . g$5616$1XGIwa)
        (atan . g$6296$1XGIwa)
        (assertion-violation . g$13709$1XGIwa)
        (asin . g$6289$1XGIwa)
        (apply . g$13708$1XGIwa)
        (append . g$13707$1XGIwa)
        (angle . g$6276$1XGIwa)
        (acos . g$6292$1XGIwa)
        (abs . g$6299$1XGIwa)
        (/ . g$13706$1XGIwa)
        (* . g$13705$1XGIwa)
        (- . g$13704$1XGIwa)
        (+ . g$13703$1XGIwa)
        (>= . g$6273$1XGIwa)
        (> . g$6272$1XGIwa)
        (= . g$6269$1XGIwa)
        (<= . g$6271$1XGIwa)
        (< . g$6270$1XGIwa)
        ($bytevector-set! . g$13702$1XGIwa)
        ($bytevector-ref . g$13701$1XGIwa)
        ($fl>=? . g$13700$1XGIwa)
        ($fl>? . g$13699$1XGIwa)
        ($fl<=? . g$13698$1XGIwa)
        ($fl<? . g$13697$1XGIwa)
        ($fl- . g$13696$1XGIwa)
        ($fl/ . g$13695$1XGIwa)
        ($fl* . g$13694$1XGIwa)
        ($fl+ . g$13693$1XGIwa)
        ($fl=? . g$13692$1XGIwa)
        ($try . g$13691$1XGIwa)
        ($fxarithmetic-shift-right . g$13690$1XGIwa)
        ($fxarithmetic-shift-left . g$13689$1XGIwa)
        ($$fx- . g$13688$1XGIwa)
        ($$fx* . g$13687$1XGIwa)
        ($$fx+ . g$13686$1XGIwa)
        ($fxnot . g$13685$1XGIwa)
        ($fxxor . g$13684$1XGIwa)
        ($fxior . g$13683$1XGIwa)
        ($fxand . g$13682$1XGIwa)
        ($fx>=? . g$13681$1XGIwa)
        ($fx>? . g$13680$1XGIwa)
        ($fx<=? . g$13679$1XGIwa)
        ($fx<? . g$13678$1XGIwa)
        ($fx- . g$13677$1XGIwa)
        ($fxmod0 . g$13676$1XGIwa)
        ($fxdiv0 . g$13675$1XGIwa)
        ($fx* . g$13674$1XGIwa)
        ($fx+ . g$13673$1XGIwa)
        ($fx=? . g$13672$1XGIwa)
        ($vector-set! . g$13671$1XGIwa)
        ($vector-ref . g$13670$1XGIwa)
        ($cdr . g$13669$1XGIwa)
        ($car . g$13668$1XGIwa)
        (make-record-printer . g$13667$1XGIwa)
        (eqv-hash . g$13666$1XGIwa)
        (reverse! . g$13665$1XGIwa)
        (deserialize-port . g$13664$1XGIwa)
        (serialize-port . g$13663$1XGIwa)
        (enum-set? . g$8971$1XGIwa)
        (make-promise . g$7018$1XGIwa)
        (load/unload . g$13467$1XGIwa)
        (load/args . g$13466$1XGIwa)
        (printf . g$9080$1XGIwa)
        (fprintf . g$9081$1XGIwa)
        (format . g$9082$1XGIwa)
        (procedure-form . g$13662$1XGIwa)
        (procedure-environment . g$13661$1XGIwa)
        (procedure-name . g$13660$1XGIwa)
        (procedure-arity . g$13659$1XGIwa)
        (gc-collect . g$13658$1XGIwa)
        (typeof . g$13657$1XGIwa)
        (clr-type? . g$13656$1XGIwa)
        (get-clr-type . g$13655$1XGIwa)
        (get-command-line . g$13654$1XGIwa)
        (vector-append . g$13653$1XGIwa)
        (vector-filter . g$13652$1XGIwa)
        (vector-reverse! . g$13651$1XGIwa)
        (vector-contains? . g$13650$1XGIwa)
        (vector-index-of . g$13649$1XGIwa)
        (vector-copy . g$13648$1XGIwa)
        (vector-binary-search . g$13647$1XGIwa)
        (string-ci-compare . g$13646$1XGIwa)
        (string-compare . g$13645$1XGIwa)
        (string-format . g$13644$1XGIwa)
        (trace-printer . g$13461$1XGIwa)
        (make-traced-procedure . g$13643$1XGIwa)
        (make-traced-macro . g$9102$1XGIwa)
        (assertion-error . g$10440$1XGIwa)
        (time-it . g$13642$1XGIwa)
        (make-parameter . g$9109$1XGIwa)
        (library-locator . g$13641$1XGIwa)
        (get-library-paths . g$13640$1XGIwa)
        (open-tcp-input/output-port . g$13639$1XGIwa)
        (hashtable-for-each . g$13638$1XGIwa)
        (hashtable-map . g$13637$1XGIwa)
        (environment-bindings . g$10418$1XGIwa)
        (environment-symbols . g$10421$1XGIwa)
        (interaction-environment-symbols . g$10417$1XGIwa)
        (optimization-level . g$13636$1XGIwa)
        (library-path . g$9747$1XGIwa)
        (make-compile-time-value . g$10126$1XGIwa)
        (expand->core . g$10427$1XGIwa)
        (expand . g$10425$1XGIwa)
        (emacs-mode? . g$13464$1XGIwa)
        (syntax-transpose . g$10364$1XGIwa)
        (convert->cps . g$9428$1XGIwa)
        (inexact=? . g$13635$1XGIwa)
        (bignum-sqrt-exact . g$13634$1XGIwa)
        (bignum-sqrt . g$13633$1XGIwa)
        (flonum->string . g$13632$1XGIwa)
        (inexact-compare . g$13631$1XGIwa)
        (exact-compare . g$13630$1XGIwa)
        (condition-stacktrace . g$6733$1XGIwa)
        (stacktrace-condition? . g$6732$1XGIwa)
        (stacktrace-enable? . g$13462$1XGIwa)
        (make-stacktrace-condition . g$6730$1XGIwa)
        (condition-where . g$6718$1XGIwa)
        (where-condition? . g$6717$1XGIwa)
        (make-where-condition . g$6715$1XGIwa)
        (installed-libraries . g$9768$1XGIwa)
        (uninstall-library . g$9759$1XGIwa)
        (pretty-gensyms . g$9192$1XGIwa)
        (pretty-width . g$9189$1XGIwa)
        (pretty-print . g$9194$1XGIwa)
        (pointer+ . g$13629$1XGIwa)
        (&stacktrace . g$13628$1XGIwa)
        (&where . g$13627$1XGIwa)
        (&no-nans . g$13626$1XGIwa)
        (&no-infinities . g$13625$1XGIwa)
        (&i/o-encoding . g$13624$1XGIwa)
        (&i/o-decoding . g$13623$1XGIwa)
        (&i/o-port . g$13622$1XGIwa)
        (&i/o-file-does-not-exist . g$13621$1XGIwa)
        (&i/o-file-already-exists . g$13620$1XGIwa)
        (&i/o-file-is-read-only . g$13619$1XGIwa)
        (&i/o-file-protection . g$13618$1XGIwa)
        (&i/o-filename . g$13617$1XGIwa)
        (&i/o-invalid-position . g$13616$1XGIwa)
        (&i/o-write . g$13615$1XGIwa)
        (&i/o-read . g$13614$1XGIwa)
        (&i/o . g$13613$1XGIwa)
        (&non-continuable . g$13612$1XGIwa)
        (&undefined . g$13611$1XGIwa)
        (&syntax . g$13610$1XGIwa)
        (&lexical . g$13609$1XGIwa)
        (&implementation-restriction . g$13608$1XGIwa)
        (&who . g$13607$1XGIwa)
        (&irritants . g$13606$1XGIwa)
        (&assertion . g$13605$1XGIwa)
        (&violation . g$13604$1XGIwa)
        (&error . g$13603$1XGIwa)
        (&serious . g$13602$1XGIwa)
        (&warning . g$13601$1XGIwa)
        (&message . g$13600$1XGIwa)
        (&condition . g$13599$1XGIwa)
        (define-condition-type . g$13598$1XGIwa)
        (define-enumeration . g$13597$1XGIwa)
        (define-record-type . g$13596$1XGIwa)
        (parent-rtd . g$13595$1XGIwa)
        (nongenerative . g$13594$1XGIwa)
        (opaque . g$13593$1XGIwa)
        (sealed . g$13592$1XGIwa)
        (protocol . g$13591$1XGIwa)
        (parent . g$13590$1XGIwa)
        (immutable . g$13589$1XGIwa)
        (mutable . g$13588$1XGIwa)
        (fields . g$13587$1XGIwa)
        (error-handling-mode . g$13586$1XGIwa)
        (file-options . g$13585$1XGIwa)
        (buffer-mode . g$13584$1XGIwa)
        (eol-style . g$13583$1XGIwa)
        (guard . g$13582$1XGIwa)
        (trace-letrec-syntax . g$13581$1XGIwa)
        (trace-let-syntax . g$13580$1XGIwa)
        (trace-define-syntax . g$13579$1XGIwa)
        (trace-define . g$13578$1XGIwa)
        (trace-lambda . g$13577$1XGIwa)
        (unsyntax-splicing . g$13576$1XGIwa)
        (unsyntax . g$13575$1XGIwa)
        (unquote-splicing . g$13574$1XGIwa)
        (unquote . g$13573$1XGIwa)
        (_ . g$13572$1XGIwa)
        (else . g$13571$1XGIwa)
        (=> . g$13570$1XGIwa)
        (... . g$13569$1XGIwa)
        (assert . g$13568$1XGIwa)
        (endianness . g$13567$1XGIwa)
        (delay . g$13566$1XGIwa)
        (time . g$13565$1XGIwa)
        (or . g$13564$1XGIwa)
        (and . g$13563$1XGIwa)
        (do . g$13562$1XGIwa)
        (cond . g$13561$1XGIwa)
        (let* . g$13560$1XGIwa)
        (let . g$13559$1XGIwa)
        (identifier-syntax . g$13558$1XGIwa)
        (with-syntax . g$13557$1XGIwa)
        (quasisyntax . g$13556$1XGIwa)
        (quasiquote . g$13555$1XGIwa)
        (syntax-rules . g$13554$1XGIwa)
        (include-into . g$13553$1XGIwa)
        (include . g$13552$1XGIwa)
        (define-struct . g$13551$1XGIwa)
        (let-values . g$13550$1XGIwa)
        (let*-values . g$13549$1XGIwa)
        (record-constructor-descriptor . g$13548$1XGIwa)
        (record-type-descriptor . g$13547$1XGIwa)
        (fluid-let-syntax . g$13546$1XGIwa)
        (case . g$13545$1XGIwa)
        (parameterize . g$13544$1XGIwa)
        (unless . g$13543$1XGIwa)
        (when . g$13542$1XGIwa)
        (if . g$13541$1XGIwa)
        (letrec* . g$13540$1XGIwa)
        (letrec . g$13539$1XGIwa)
        (type-descriptor . g$13538$1XGIwa)
        (case-lambda . g$13537$1XGIwa)
        (lambda . g$13536$1XGIwa)
        (syntax . g$13535$1XGIwa)
        (syntax-case . g$13534$1XGIwa)
        (quote . g$13533$1XGIwa)
        (foreign-call . g$13532$1XGIwa)
        (letrec-syntax . g$13531$1XGIwa)
        (let-syntax . g$13530$1XGIwa)
        (set! . g$13529$1XGIwa)
        (export . g$13528$1XGIwa)
        (import . g$13527$1XGIwa)
        (library . g$13526$1XGIwa)
        (begin . g$13525$1XGIwa)
        (module . g$13524$1XGIwa)
        (define-syntax . g$13523$1XGIwa)
        (define . g$13522$1XGIwa))
      '((g$10321$1XGIwa core-prim . ellipsis-map)
        (g$6735$1XGIwa core-prim . &stacktrace-rcd)
        (g$6734$1XGIwa core-prim . &stacktrace-rtd)
        (g$6720$1XGIwa core-prim . &where-rcd)
        (g$6719$1XGIwa core-prim . &where-rtd)
        (g$6994$1XGIwa core-prim . &no-nans-rcd)
        (g$6993$1XGIwa core-prim . &no-nans-rtd)
        (g$6981$1XGIwa core-prim . &no-infinities-rcd)
        (g$6980$1XGIwa core-prim . &no-infinities-rtd)
        (g$6968$1XGIwa core-prim . &i/o-encoding-rcd)
        (g$6967$1XGIwa core-prim . &i/o-encoding-rtd)
        (g$6953$1XGIwa core-prim . &i/o-decoding-rcd)
        (g$6952$1XGIwa core-prim . &i/o-decoding-rtd)
        (g$6940$1XGIwa core-prim . &i/o-port-rcd)
        (g$6939$1XGIwa core-prim . &i/o-port-rtd)
        (g$6925$1XGIwa core-prim . &i/o-file-does-not-exist-rcd)
        (g$6924$1XGIwa core-prim . &i/o-file-does-not-exist-rtd)
        (g$6912$1XGIwa core-prim . &i/o-file-already-exists-rcd)
        (g$6911$1XGIwa core-prim . &i/o-file-already-exists-rtd)
        (g$6899$1XGIwa core-prim . &i/o-file-is-read-only-rcd)
        (g$6898$1XGIwa core-prim . &i/o-file-is-read-only-rtd)
        (g$6886$1XGIwa core-prim . &i/o-file-protection-rcd)
        (g$6885$1XGIwa core-prim . &i/o-file-protection-rtd)
        (g$6873$1XGIwa core-prim . &i/o-filename-rcd)
        (g$6872$1XGIwa core-prim . &i/o-filename-rtd)
        (g$6858$1XGIwa core-prim . &i/o-invalid-position-rcd)
        (g$6857$1XGIwa core-prim . &i/o-invalid-position-rtd)
        (g$6843$1XGIwa core-prim . &i/o-write-rcd)
        (g$6842$1XGIwa core-prim . &i/o-write-rtd)
        (g$6830$1XGIwa core-prim . &i/o-read-rcd)
        (g$6829$1XGIwa core-prim . &i/o-read-rtd)
        (g$6817$1XGIwa core-prim . &i/o-rcd)
        (g$6816$1XGIwa core-prim . &i/o-rtd)
        (g$6804$1XGIwa core-prim . &undefined-rcd)
        (g$6803$1XGIwa core-prim . &undefined-rtd)
        (g$6791$1XGIwa core-prim . &syntax-rcd)
        (g$6790$1XGIwa core-prim . &syntax-rtd)
        (g$6774$1XGIwa core-prim . &lexical-rcd)
        (g$6773$1XGIwa core-prim . &lexical-rtd)
        (g$6761$1XGIwa core-prim . &implementation-restriction-rcd)
        (g$6760$1XGIwa core-prim . &implementation-restriction-rtd)
        (g$6748$1XGIwa core-prim . &non-continuable-rcd)
        (g$6747$1XGIwa core-prim . &non-continuable-rtd)
        (g$6705$1XGIwa core-prim . &who-rcd)
        (g$6704$1XGIwa core-prim . &who-rtd)
        (g$6690$1XGIwa core-prim . &irritants-rcd)
        (g$6689$1XGIwa core-prim . &irritants-rtd)
        (g$6675$1XGIwa core-prim . &assertion-rcd)
        (g$6674$1XGIwa core-prim . &assertion-rtd)
        (g$6662$1XGIwa core-prim . &violation-rcd)
        (g$6661$1XGIwa core-prim . &violation-rtd)
        (g$6649$1XGIwa core-prim . &error-rcd)
        (g$6648$1XGIwa core-prim . &error-rtd)
        (g$6636$1XGIwa core-prim . &serious-rcd)
        (g$6635$1XGIwa core-prim . &serious-rtd)
        (g$6623$1XGIwa core-prim . &warning-rcd)
        (g$6622$1XGIwa core-prim . &warning-rtd)
        (g$6610$1XGIwa core-prim . &message-rcd)
        (g$6609$1XGIwa core-prim . &message-rtd)
        (g$6570$1XGIwa core-prim . &condition-rcd)
        (g$6569$1XGIwa core-prim . &condition-rtd)
        (g$13874$1XGIwa core-prim . library-letrec*)
        (g$13873$1XGIwa core-prim . annotation-stripped)
        (g$13872$1XGIwa core-prim . annotation-source)
        (g$13871$1XGIwa core-prim . annotation-expression)
        (g$13870$1XGIwa core-prim . annotation?)
        (g$13869$1XGIwa core-prim . read-annotated)
        (g$6295$1XGIwa core-prim . tanh)
        (g$6293$1XGIwa core-prim . cosh)
        (g$6290$1XGIwa core-prim . sinh)
        (g$13868$1XGIwa core-prim . make-guid)
        (g$13867$1XGIwa core-prim . unspecified?)
        (g$5170$1XGIwa core-prim . make-list)
        (g$5169$1XGIwa core-prim . last-pair)
        (g$13866$1XGIwa core-prim . load-r5rs)
        (g$13865$1XGIwa core-prim . license)
        (g$13864$1XGIwa core-prim . stacktrace)
        (g$13469$1XGIwa core-prim . ironscheme-test)
        (g$13470$1XGIwa core-prim . ironscheme-build)
        (g$13863$1XGIwa core-prim . pinvoke-call-internal)
        (g$13862$1XGIwa core-prim . ffi-callback-internal)
        (g$13861$1XGIwa core-prim . ffi-callout-internal)
        (g$13860$1XGIwa core-prim . define-clr-class-internal)
        (g$13859$1XGIwa core-prim . clr-field-set!-internal)
        (g$13858$1XGIwa core-prim . clr-field-get-internal)
        (g$13857$1XGIwa core-prim . clr-cast-internal)
        (g$13856$1XGIwa core-prim . clr-call-internal)
        (g$13855$1XGIwa core-prim . clr-new-internal)
        (g$13854$1XGIwa core-prim . clr-new-array-internal)
        (g$13853$1XGIwa core-prim . clr-is-internal)
        (g$13852$1XGIwa core-prim . clr-reference-internal)
        (g$13851$1XGIwa core-prim . clr-using-internal)
        (g$10441$1XGIwa core-prim . syntax-error)
        (g$10316$1XGIwa core-prim . syntax-dispatch)
        (g$13850$1XGIwa core-prim . compile-core)
        (g$13849$1XGIwa core-prim . eval-core)
        (g$13848$1XGIwa core-prim . remove-location)
        (g$13847$1XGIwa core-prim . set-symbol-value!)
        (g$13846$1XGIwa core-prim . symbol-value)
        (g$13845$1XGIwa core-prim . symbol-bound?)
        (g$13844$1XGIwa core-prim . ungensym)
        (g$13843$1XGIwa core-prim . gensym)
        (g$13842$1XGIwa core-prim . void)
        (g$13841$1XGIwa core-prim . load-serialized-library)
        (g$13840$1XGIwa core-prim . serialize-library)
        (g$13474$1XGIwa core-prim . compile-system-libraries)
        (g$13476$1XGIwa core-prim . compile->closure)
        (g$13475$1XGIwa core-prim . compile)
        (g$13468$1XGIwa core-prim . load)
        (g$13839$1XGIwa core-prim . string-normalize)
        (g$10450$1XGIwa core-prim . new-interaction-environment)
        (g$10451$1XGIwa core-prim . interaction-environment)
        (g$13838$1XGIwa core-prim . char-ready?)
        (g$13837$1XGIwa core-prim . string-upcase)
        (g$7092$1XGIwa core-prim . string-titlecase)
        (g$7112$1XGIwa core-prim . string-normalize-nfkd)
        (g$7111$1XGIwa core-prim . string-normalize-nfkc)
        (g$7110$1XGIwa core-prim . string-normalize-nfd)
        (g$7109$1XGIwa core-prim . string-normalize-nfc)
        (g$7093$1XGIwa core-prim . string-foldcase)
        (g$13836$1XGIwa core-prim . string-downcase)
        (g$7089$1XGIwa core-prim . string-ci>?)
        (g$7091$1XGIwa core-prim . string-ci>=?)
        (g$7087$1XGIwa core-prim . string-ci=?)
        (g$7088$1XGIwa core-prim . string-ci<?)
        (g$7090$1XGIwa core-prim . string-ci<=?)
        (g$7069$1XGIwa core-prim . char-whitespace?)
        (g$7070$1XGIwa core-prim . char-upper-case?)
        (g$7072$1XGIwa core-prim . char-title-case?)
        (g$7068$1XGIwa core-prim . char-numeric?)
        (g$7071$1XGIwa core-prim . char-lower-case?)
        (g$7073$1XGIwa core-prim . char-general-category)
        (g$7063$1XGIwa core-prim . char-upcase)
        (g$7065$1XGIwa core-prim . char-titlecase)
        (g$7066$1XGIwa core-prim . char-foldcase)
        (g$7064$1XGIwa core-prim . char-downcase)
        (g$7101$1XGIwa core-prim . char-ci>?)
        (g$7103$1XGIwa core-prim . char-ci>=?)
        (g$7099$1XGIwa core-prim . char-ci=?)
        (g$7100$1XGIwa core-prim . char-ci<?)
        (g$7102$1XGIwa core-prim . char-ci<=?)
        (g$7067$1XGIwa core-prim . char-alphabetic?)
        (g$10128$1XGIwa core-prim . variable-transformer-procedure)
        (g$10127$1XGIwa core-prim . variable-transformer?)
        (g$10125$1XGIwa core-prim . make-variable-transformer)
        (g$10445$1XGIwa core-prim . identifier?)
        (g$10434$1XGIwa core-prim . generate-temporaries)
        (g$10435$1XGIwa core-prim . free-identifier=?)
        (g$10447$1XGIwa core-prim . syntax->datum)
        (g$10446$1XGIwa core-prim . datum->syntax)
        (g$10436$1XGIwa core-prim . bound-identifier=?)
        (g$13835$1XGIwa core-prim . record-type-descriptor?)
        (g$13834$1XGIwa core-prim . record-predicate)
        (g$13833$1XGIwa core-prim . record-mutator)
        (g$13832$1XGIwa core-prim . record-constructor)
        (g$13831$1XGIwa core-prim . record-accessor)
        (g$13830$1XGIwa core-prim . make-record-type-descriptor)
        (g$13829$1XGIwa core-prim . make-record-constructor-descriptor)
        (g$13828$1XGIwa core-prim . record?)
        (g$13827$1XGIwa core-prim . record-type-uid)
        (g$13826$1XGIwa core-prim . record-type-sealed?)
        (g$13825$1XGIwa core-prim . record-type-parent)
        (g$13824$1XGIwa core-prim . record-type-opaque?)
        (g$13823$1XGIwa core-prim . record-type-name)
        (g$13822$1XGIwa core-prim . record-type-generative?)
        (g$13821$1XGIwa core-prim . record-type-field-names)
        (g$13820$1XGIwa core-prim . record-rtd)
        (g$13819$1XGIwa core-prim . record-field-mutable?)
        (g$5915$1XGIwa core-prim . delete-file)
        (g$5914$1XGIwa core-prim . file-exists?)
        (g$13818$1XGIwa core-prim . vector-sort!)
        (g$13817$1XGIwa core-prim . vector-sort)
        (g$7036$1XGIwa core-prim . list-sort)
        (g$5885$1XGIwa core-prim . symbol-hash)
        (g$5884$1XGIwa core-prim . string-ci-hash)
        (g$5883$1XGIwa core-prim . string-hash)
        (g$13816$1XGIwa core-prim . equal-hash)
        (g$13815$1XGIwa core-prim . hashtable-equivalence-function)
        (g$13814$1XGIwa core-prim . make-hashtable)
        (g$13813$1XGIwa core-prim . hashtable-hash-function)
        (g$5875$1XGIwa core-prim . make-eqv-hashtable)
        (g$5874$1XGIwa core-prim . make-eq-hashtable)
        (g$5873$1XGIwa core-prim . hashtable?)
        (g$5881$1XGIwa core-prim . hashtable-update!)
        (g$5876$1XGIwa core-prim . hashtable-size)
        (g$5878$1XGIwa core-prim . hashtable-set!)
        (g$5877$1XGIwa core-prim . hashtable-ref)
        (g$13812$1XGIwa core-prim . hashtable-mutable?)
        (g$13811$1XGIwa core-prim . hashtable-keys)
        (g$13810$1XGIwa core-prim . hashtable-entries)
        (g$5879$1XGIwa core-prim . hashtable-delete!)
        (g$13809$1XGIwa core-prim . hashtable-copy)
        (g$5880$1XGIwa core-prim . hashtable-contains?)
        (g$5882$1XGIwa core-prim . hashtable-clear!)
        (g$8933$1XGIwa core-prim . call-with-output-file)
        (g$8932$1XGIwa core-prim . call-with-input-file)
        (g$8924$1XGIwa core-prim . write-char)
        (g$13808$1XGIwa core-prim . write)
        (g$8931$1XGIwa core-prim . with-output-to-file)
        (g$8930$1XGIwa core-prim . with-input-from-file)
        (g$8923$1XGIwa core-prim . read-char)
        (g$13807$1XGIwa core-prim . read)
        (g$8922$1XGIwa core-prim . peek-char)
        (g$13806$1XGIwa core-prim . open-output-file)
        (g$13805$1XGIwa core-prim . open-input-file)
        (g$8934$1XGIwa core-prim . newline)
        (g$13804$1XGIwa core-prim . display)
        (g$13803$1XGIwa core-prim . close-output-port)
        (g$13802$1XGIwa core-prim . close-input-port)
        (g$13801$1XGIwa core-prim . eof-object?)
        (g$13800$1XGIwa core-prim . eof-object)
        (g$13799$1XGIwa core-prim . current-error-port)
        (g$13798$1XGIwa core-prim . current-output-port)
        (g$13797$1XGIwa core-prim . current-input-port)
        (g$13796$1XGIwa core-prim . output-port?)
        (g$13795$1XGIwa core-prim . input-port?)
        (g$13794$1XGIwa core-prim . utf-8-codec)
        (g$13793$1XGIwa core-prim . utf-16-codec)
        (g$13792$1XGIwa core-prim . transcoder-error-handling-mode)
        (g$13791$1XGIwa core-prim . transcoder-eol-style)
        (g$13790$1XGIwa core-prim . transcoder-codec)
        (g$13789$1XGIwa core-prim . transcoded-port)
        (g$13788$1XGIwa core-prim . textual-port?)
        (g$13787$1XGIwa core-prim . string->bytevector)
        (g$8898$1XGIwa core-prim . standard-output-port)
        (g$8897$1XGIwa core-prim . standard-input-port)
        (g$8896$1XGIwa core-prim . standard-error-port)
        (g$13786$1XGIwa core-prim . set-port-position!)
        (g$13785$1XGIwa core-prim . put-u8)
        (g$13784$1XGIwa core-prim . put-string)
        (g$8901$1XGIwa core-prim . put-datum)
        (g$13783$1XGIwa core-prim . put-char)
        (g$13782$1XGIwa core-prim . put-bytevector)
        (g$8906$1XGIwa core-prim . port?)
        (g$13781$1XGIwa core-prim . port-transcoder)
        (g$13780$1XGIwa core-prim . port-position)
        (g$13779$1XGIwa core-prim . port-has-set-port-position!?)
        (g$13778$1XGIwa core-prim . port-has-port-position?)
        (g$13777$1XGIwa core-prim . port-eof?)
        (g$13776$1XGIwa core-prim . output-port-buffer-mode)
        (g$8905$1XGIwa core-prim . open-string-output-port)
        (g$13775$1XGIwa core-prim . open-string-input-port)
        (g$13774$1XGIwa core-prim . open-file-output-port)
        (g$13773$1XGIwa core-prim . open-file-input/output-port)
        (g$13772$1XGIwa core-prim . open-file-input-port)
        (g$13771$1XGIwa core-prim . open-bytevector-output-port)
        (g$13770$1XGIwa core-prim . open-bytevector-input-port)
        (g$13769$1XGIwa core-prim . native-transcoder)
        (g$8899$1XGIwa core-prim . native-eol-style)
        (g$13768$1XGIwa core-prim . make-transcoder)
        (g$13767$1XGIwa core-prim . latin-1-codec)
        (g$6840$1XGIwa core-prim . make-i/o-write-error)
        (g$6827$1XGIwa core-prim . make-i/o-read-error)
        (g$6935$1XGIwa core-prim . make-i/o-port-error)
        (g$6853$1XGIwa core-prim . make-i/o-invalid-position-error)
        (g$6868$1XGIwa core-prim . make-i/o-filename-error)
        (g$6883$1XGIwa core-prim . make-i/o-file-protection-error)
        (g$6896$1XGIwa core-prim . make-i/o-file-is-read-only-error)
        (g$6922$1XGIwa core-prim . make-i/o-file-does-not-exist-error)
        (g$6909$1XGIwa core-prim . make-i/o-file-already-exists-error)
        (g$6814$1XGIwa core-prim . make-i/o-error)
        (g$6963$1XGIwa core-prim . make-i/o-encoding-error)
        (g$6950$1XGIwa core-prim . make-i/o-decoding-error)
        (g$13766$1XGIwa core-prim . make-custom-textual-output-port)
        (g$13765$1XGIwa
          core-prim
          .
          make-custom-textual-input/output-port)
        (g$13764$1XGIwa core-prim . make-custom-textual-input-port)
        (g$13763$1XGIwa core-prim . make-custom-binary-output-port)
        (g$13762$1XGIwa
          core-prim
          .
          make-custom-binary-input/output-port)
        (g$13761$1XGIwa core-prim . make-custom-binary-input-port)
        (g$5935$1XGIwa core-prim . make-bytevector)
        (g$13760$1XGIwa core-prim . lookahead-u8)
        (g$13759$1XGIwa core-prim . lookahead-char)
        (g$6841$1XGIwa core-prim . i/o-write-error?)
        (g$6828$1XGIwa core-prim . i/o-read-error?)
        (g$6937$1XGIwa core-prim . i/o-port-error?)
        (g$6855$1XGIwa core-prim . i/o-invalid-position-error?)
        (g$6856$1XGIwa core-prim . i/o-error-position)
        (g$6870$1XGIwa core-prim . i/o-filename-error?)
        (g$6884$1XGIwa core-prim . i/o-file-protection-error?)
        (g$6897$1XGIwa core-prim . i/o-file-is-read-only-error?)
        (g$6923$1XGIwa core-prim . i/o-file-does-not-exist-error?)
        (g$6910$1XGIwa core-prim . i/o-file-already-exists-error?)
        (g$6815$1XGIwa core-prim . i/o-error?)
        (g$6938$1XGIwa core-prim . i/o-error-port)
        (g$6871$1XGIwa core-prim . i/o-error-filename)
        (g$6965$1XGIwa core-prim . i/o-encoding-error?)
        (g$6966$1XGIwa core-prim . i/o-encoding-error-char)
        (g$6951$1XGIwa core-prim . i/o-decoding-error?)
        (g$13758$1XGIwa core-prim . get-u8)
        (g$13757$1XGIwa core-prim . get-string-n!)
        (g$13756$1XGIwa core-prim . get-string-n)
        (g$13755$1XGIwa core-prim . get-string-all)
        (g$13754$1XGIwa core-prim . get-line)
        (g$8902$1XGIwa core-prim . get-datum)
        (g$13753$1XGIwa core-prim . get-char)
        (g$13752$1XGIwa core-prim . get-bytevector-some)
        (g$13751$1XGIwa core-prim . get-bytevector-n!)
        (g$13750$1XGIwa core-prim . get-bytevector-n)
        (g$13749$1XGIwa core-prim . get-bytevector-all)
        (g$13748$1XGIwa core-prim . flush-output-port)
        (g$13747$1XGIwa core-prim . close-port)
        (g$8907$1XGIwa core-prim . call-with-string-output-port)
        (g$8908$1XGIwa core-prim . call-with-port)
        (g$13746$1XGIwa core-prim . call-with-bytevector-output-port)
        (g$13745$1XGIwa core-prim . bytevector->string)
        (g$8900$1XGIwa core-prim . buffer-mode?)
        (g$13744$1XGIwa core-prim . binary-port?)
        (g$10424$1XGIwa core-prim . scheme-report-environment)
        (g$7015$1XGIwa core-prim . quotient)
        (g$10423$1XGIwa core-prim . null-environment)
        (g$7016$1XGIwa core-prim . remainder)
        (g$7017$1XGIwa core-prim . modulo)
        (g$7012$1XGIwa core-prim . inexact->exact)
        (g$7019$1XGIwa core-prim . force)
        (g$7013$1XGIwa core-prim . exact->inexact)
        (g$13743$1XGIwa core-prim . exit)
        (g$13463$1XGIwa core-prim . command-line)
        (g$5541$1XGIwa core-prim . string-fill!)
        (g$5540$1XGIwa core-prim . string-set!)
        (g$6998$1XGIwa core-prim . set-cdr!)
        (g$6997$1XGIwa core-prim . set-car!)
        (g$5192$1XGIwa core-prim . remove)
        (g$5193$1XGIwa core-prim . remv)
        (g$5173$1XGIwa core-prim . remp)
        (g$5194$1XGIwa core-prim . remq)
        (g$5172$1XGIwa core-prim . partition)
        (g$5180$1XGIwa core-prim . memv)
        (g$5179$1XGIwa core-prim . memq)
        (g$5182$1XGIwa core-prim . memp)
        (g$5181$1XGIwa core-prim . member)
        (g$5186$1XGIwa core-prim . exists)
        (g$5185$1XGIwa core-prim . for-all)
        (g$5191$1XGIwa core-prim . fold-right)
        (g$5190$1XGIwa core-prim . fold-left)
        (g$5171$1XGIwa core-prim . find)
        (g$5174$1XGIwa core-prim . filter)
        (g$5189$1XGIwa core-prim . cons*)
        (g$5176$1XGIwa core-prim . assv)
        (g$5175$1XGIwa core-prim . assq)
        (g$5178$1XGIwa core-prim . assp)
        (g$5177$1XGIwa core-prim . assoc)
        (g$13742$1XGIwa core-prim . with-exception-handler)
        (g$13741$1XGIwa core-prim . raise-continuable)
        (g$13740$1XGIwa core-prim . raise)
        (g$10426$1XGIwa core-prim . eval)
        (g$10422$1XGIwa core-prim . environment)
        (g$8994$1XGIwa core-prim . make-enumeration)
        (g$9001$1XGIwa core-prim . enum-set=?)
        (g$8995$1XGIwa core-prim . enum-set-universe)
        (g$9002$1XGIwa core-prim . enum-set-union)
        (g$9000$1XGIwa core-prim . enum-set-subset?)
        (g$9006$1XGIwa core-prim . enum-set-projection)
        (g$8999$1XGIwa core-prim . enum-set-member?)
        (g$9003$1XGIwa core-prim . enum-set-intersection)
        (g$8996$1XGIwa core-prim . enum-set-indexer)
        (g$9004$1XGIwa core-prim . enum-set-difference)
        (g$8997$1XGIwa core-prim . enum-set-constructor)
        (g$9005$1XGIwa core-prim . enum-set-complement)
        (g$8998$1XGIwa core-prim . enum-set->list)
        (g$6702$1XGIwa core-prim . who-condition?)
        (g$6621$1XGIwa core-prim . warning?)
        (g$6660$1XGIwa core-prim . violation?)
        (g$6802$1XGIwa core-prim . undefined-violation?)
        (g$6787$1XGIwa core-prim . syntax-violation?)
        (g$6789$1XGIwa core-prim . syntax-violation-subform)
        (g$6788$1XGIwa core-prim . syntax-violation-form)
        (g$10444$1XGIwa core-prim . syntax-violation)
        (g$13739$1XGIwa core-prim . simple-conditions)
        (g$6634$1XGIwa core-prim . serious-condition?)
        (g$6746$1XGIwa core-prim . non-continuable-violation?)
        (g$6607$1XGIwa core-prim . message-condition?)
        (g$6700$1XGIwa core-prim . make-who-condition)
        (g$6620$1XGIwa core-prim . make-warning)
        (g$6659$1XGIwa core-prim . make-violation)
        (g$6801$1XGIwa core-prim . make-undefined-violation)
        (g$6784$1XGIwa core-prim . make-syntax-violation)
        (g$6633$1XGIwa core-prim . make-serious-condition)
        (g$6745$1XGIwa core-prim . make-non-continuable-violation)
        (g$6605$1XGIwa core-prim . make-message-condition)
        (g$6771$1XGIwa core-prim . make-lexical-violation)
        (g$6685$1XGIwa core-prim . make-irritants-condition)
        (g$6758$1XGIwa
          core-prim
          .
          make-implementation-restriction-violation)
        (g$6646$1XGIwa core-prim . make-error)
        (g$6672$1XGIwa core-prim . make-assertion-violation)
        (g$6772$1XGIwa core-prim . lexical-violation?)
        (g$6687$1XGIwa core-prim . irritants-condition?)
        (g$6759$1XGIwa
          core-prim
          .
          implementation-restriction-violation?)
        (g$6647$1XGIwa core-prim . error?)
        (g$6703$1XGIwa core-prim . condition-who)
        (g$13738$1XGIwa core-prim . condition-predicate)
        (g$6608$1XGIwa core-prim . condition-message)
        (g$6688$1XGIwa core-prim . condition-irritants)
        (g$13737$1XGIwa core-prim . condition-accessor)
        (g$13736$1XGIwa core-prim . condition)
        (g$6673$1XGIwa core-prim . assertion-violation?)
        (g$13735$1XGIwa core-prim . condition?)
        (g$5953$1XGIwa core-prim . utf32->string)
        (g$5952$1XGIwa core-prim . utf16->string)
        (g$5950$1XGIwa core-prim . utf8->string)
        (g$5954$1XGIwa core-prim . uint-list->bytevector)
        (g$5946$1XGIwa core-prim . u8-list->bytevector)
        (g$5947$1XGIwa core-prim . string->utf8)
        (g$5949$1XGIwa core-prim . string->utf32)
        (g$5948$1XGIwa core-prim . string->utf16)
        (g$5955$1XGIwa core-prim . sint-list->bytevector)
        (g$5921$1XGIwa core-prim . native-endianness)
        (g$5529$1XGIwa core-prim . bytevector?)
        (g$5937$1XGIwa core-prim . bytevector=?)
        (g$13734$1XGIwa core-prim . bytevector-uint-set!)
        (g$13733$1XGIwa core-prim . bytevector-uint-ref)
        (g$5942$1XGIwa core-prim . bytevector-u8-set!)
        (g$5941$1XGIwa core-prim . bytevector-u8-ref)
        (g$5983$1XGIwa core-prim . bytevector-u64-set!)
        (g$5979$1XGIwa core-prim . bytevector-u64-ref)
        (g$5985$1XGIwa core-prim . bytevector-u64-native-set!)
        (g$5981$1XGIwa core-prim . bytevector-u64-native-ref)
        (g$5975$1XGIwa core-prim . bytevector-u32-set!)
        (g$5971$1XGIwa core-prim . bytevector-u32-ref)
        (g$5977$1XGIwa core-prim . bytevector-u32-native-set!)
        (g$5973$1XGIwa core-prim . bytevector-u32-native-ref)
        (g$5967$1XGIwa core-prim . bytevector-u16-set!)
        (g$5963$1XGIwa core-prim . bytevector-u16-ref)
        (g$5969$1XGIwa core-prim . bytevector-u16-native-set!)
        (g$5965$1XGIwa core-prim . bytevector-u16-native-ref)
        (g$13732$1XGIwa core-prim . bytevector-sint-set!)
        (g$13731$1XGIwa core-prim . bytevector-sint-ref)
        (g$5944$1XGIwa core-prim . bytevector-s8-set!)
        (g$5943$1XGIwa core-prim . bytevector-s8-ref)
        (g$5984$1XGIwa core-prim . bytevector-s64-set!)
        (g$5980$1XGIwa core-prim . bytevector-s64-ref)
        (g$5986$1XGIwa core-prim . bytevector-s64-native-set!)
        (g$5982$1XGIwa core-prim . bytevector-s64-native-ref)
        (g$5976$1XGIwa core-prim . bytevector-s32-set!)
        (g$5972$1XGIwa core-prim . bytevector-s32-ref)
        (g$5978$1XGIwa core-prim . bytevector-s32-native-set!)
        (g$5974$1XGIwa core-prim . bytevector-s32-native-ref)
        (g$5968$1XGIwa core-prim . bytevector-s16-set!)
        (g$5964$1XGIwa core-prim . bytevector-s16-ref)
        (g$5970$1XGIwa core-prim . bytevector-s16-native-set!)
        (g$5966$1XGIwa core-prim . bytevector-s16-native-ref)
        (g$5936$1XGIwa core-prim . bytevector-length)
        (g$5961$1XGIwa core-prim . bytevector-ieee-single-set!)
        (g$5959$1XGIwa core-prim . bytevector-ieee-single-ref)
        (g$5989$1XGIwa core-prim . bytevector-ieee-single-native-set!)
        (g$5987$1XGIwa core-prim . bytevector-ieee-single-native-ref)
        (g$5962$1XGIwa core-prim . bytevector-ieee-double-set!)
        (g$5960$1XGIwa core-prim . bytevector-ieee-double-ref)
        (g$5990$1XGIwa core-prim . bytevector-ieee-double-native-set!)
        (g$5988$1XGIwa core-prim . bytevector-ieee-double-native-ref)
        (g$5938$1XGIwa core-prim . bytevector-fill!)
        (g$5939$1XGIwa core-prim . bytevector-copy!)
        (g$5940$1XGIwa core-prim . bytevector-copy)
        (g$5956$1XGIwa core-prim . bytevector->uint-list)
        (g$5945$1XGIwa core-prim . bytevector->u8-list)
        (g$5957$1XGIwa core-prim . bytevector->sint-list)
        (g$6992$1XGIwa core-prim . no-nans-violation?)
        (g$6979$1XGIwa core-prim . no-infinities-violation?)
        (g$6991$1XGIwa core-prim . make-no-nans-violation)
        (g$6978$1XGIwa core-prim . make-no-infinities-violation)
        (g$6235$1XGIwa core-prim . real->flonum)
        (g$8338$1XGIwa core-prim . flzero?)
        (g$8333$1XGIwa core-prim . fltruncate)
        (g$8319$1XGIwa core-prim . fltan)
        (g$8324$1XGIwa core-prim . flsqrt)
        (g$8317$1XGIwa core-prim . flsin)
        (g$8334$1XGIwa core-prim . flround)
        (g$8336$1XGIwa core-prim . flpositive?)
        (g$5534$1XGIwa core-prim . flonum?)
        (g$8340$1XGIwa core-prim . flodd?)
        (g$8283$1XGIwa core-prim . flnumerator)
        (g$8337$1XGIwa core-prim . flnegative?)
        (g$8316$1XGIwa core-prim . flnan?)
        (g$8301$1XGIwa core-prim . flmod0)
        (g$8300$1XGIwa core-prim . flmod)
        (g$8342$1XGIwa core-prim . flmin)
        (g$8341$1XGIwa core-prim . flmax)
        (g$8323$1XGIwa core-prim . fllog)
        (g$8309$1XGIwa core-prim . flinteger?)
        (g$8315$1XGIwa core-prim . flinfinite?)
        (g$8332$1XGIwa core-prim . flfloor)
        (g$8310$1XGIwa core-prim . flfinite?)
        (g$8326$1XGIwa core-prim . flexpt)
        (g$8325$1XGIwa core-prim . flexp)
        (g$8339$1XGIwa core-prim . fleven?)
        (g$8308$1XGIwa core-prim . fldiv0-and-mod0)
        (g$8295$1XGIwa core-prim . fldiv0)
        (g$8302$1XGIwa core-prim . fldiv-and-mod)
        (g$8307$1XGIwa core-prim . fldiv)
        (g$8282$1XGIwa core-prim . fldenominator)
        (g$8318$1XGIwa core-prim . flcos)
        (g$8327$1XGIwa core-prim . flceiling)
        (g$8322$1XGIwa core-prim . flatan)
        (g$8320$1XGIwa core-prim . flasin)
        (g$8321$1XGIwa core-prim . flacos)
        (g$8335$1XGIwa core-prim . flabs)
        (g$8289$1XGIwa core-prim . fl>?)
        (g$8290$1XGIwa core-prim . fl>=?)
        (g$8286$1XGIwa core-prim . fl=?)
        (g$8287$1XGIwa core-prim . fl<?)
        (g$8288$1XGIwa core-prim . fl<=?)
        (g$8285$1XGIwa core-prim . fl/)
        (g$8284$1XGIwa core-prim . fl-)
        (g$8280$1XGIwa core-prim . fl+)
        (g$8281$1XGIwa core-prim . fl*)
        (g$6236$1XGIwa core-prim . fixnum->flonum)
        (g$7383$1XGIwa core-prim . fxzero?)
        (g$7346$1XGIwa core-prim . fxxor)
        (g$7421$1XGIwa core-prim . fxrotate-bit-field)
        (g$7422$1XGIwa core-prim . fxreverse-bit-field)
        (g$7373$1XGIwa core-prim . fxpositive?)
        (g$7393$1XGIwa core-prim . fxodd?)
        (g$7327$1XGIwa core-prim . fxnot)
        (g$7378$1XGIwa core-prim . fxnegative?)
        (g$7357$1XGIwa core-prim . fxmod0)
        (g$7356$1XGIwa core-prim . fxmod)
        (g$7395$1XGIwa core-prim . fxmin)
        (g$7394$1XGIwa core-prim . fxmax)
        (g$7324$1XGIwa core-prim . fxlength)
        (g$7345$1XGIwa core-prim . fxior)
        (g$7403$1XGIwa core-prim . fxif)
        (g$7325$1XGIwa core-prim . fxfirst-bit-set)
        (g$7388$1XGIwa core-prim . fxeven?)
        (g$7368$1XGIwa core-prim . fxdiv0-and-mod0)
        (g$7363$1XGIwa core-prim . fxdiv0)
        (g$7358$1XGIwa core-prim . fxdiv-and-mod)
        (g$7351$1XGIwa core-prim . fxdiv)
        (g$7418$1XGIwa core-prim . fxcopy-bit-field)
        (g$7408$1XGIwa core-prim . fxcopy-bit)
        (g$7326$1XGIwa core-prim . fxbit-set?)
        (g$7413$1XGIwa core-prim . fxbit-field)
        (g$7319$1XGIwa core-prim . fxbit-count)
        (g$7420$1XGIwa core-prim . fxarithmetic-shift-right)
        (g$7419$1XGIwa core-prim . fxarithmetic-shift-left)
        (g$7314$1XGIwa core-prim . fxarithmetic-shift)
        (g$7344$1XGIwa core-prim . fxand)
        (g$7336$1XGIwa core-prim . fx>?)
        (g$7337$1XGIwa core-prim . fx>=?)
        (g$7333$1XGIwa core-prim . fx=?)
        (g$7334$1XGIwa core-prim . fx<?)
        (g$7335$1XGIwa core-prim . fx<=?)
        (g$7397$1XGIwa core-prim . fx-/carry)
        (g$7308$1XGIwa core-prim . fx-)
        (g$7398$1XGIwa core-prim . fx+/carry)
        (g$7306$1XGIwa core-prim . fx+)
        (g$7396$1XGIwa core-prim . fx*/carry)
        (g$7307$1XGIwa core-prim . fx*)
        (g$7277$1XGIwa core-prim . greatest-fixnum)
        (g$7278$1XGIwa core-prim . least-fixnum)
        (g$5535$1XGIwa core-prim . fixnum-width)
        (g$5533$1XGIwa core-prim . fixnum?)
        (g$7207$1XGIwa core-prim . bitwise-rotate-bit-field)
        (g$7208$1XGIwa core-prim . bitwise-reverse-bit-field)
        (g$7198$1XGIwa core-prim . bitwise-length)
        (g$7201$1XGIwa core-prim . bitwise-if)
        (g$7199$1XGIwa core-prim . bitwise-first-bit-set)
        (g$7204$1XGIwa core-prim . bitwise-copy-bit-field)
        (g$7202$1XGIwa core-prim . bitwise-copy-bit)
        (g$7200$1XGIwa core-prim . bitwise-bit-set?)
        (g$7203$1XGIwa core-prim . bitwise-bit-field)
        (g$7197$1XGIwa core-prim . bitwise-bit-count)
        (g$7196$1XGIwa core-prim . bitwise-xor)
        (g$7195$1XGIwa core-prim . bitwise-ior)
        (g$7194$1XGIwa core-prim . bitwise-and)
        (g$7193$1XGIwa core-prim . bitwise-not)
        (g$7206$1XGIwa core-prim . bitwise-arithmetic-shift-right)
        (g$7205$1XGIwa core-prim . bitwise-arithmetic-shift-left)
        (g$13730$1XGIwa core-prim . bitwise-arithmetic-shift)
        (g$6250$1XGIwa core-prim . zero?)
        (g$5528$1XGIwa core-prim . vector?)
        (g$5560$1XGIwa core-prim . vector-set!)
        (g$5559$1XGIwa core-prim . vector-ref)
        (g$5630$1XGIwa core-prim . vector-map)
        (g$5562$1XGIwa core-prim . vector-length)
        (g$5631$1XGIwa core-prim . vector-for-each)
        (g$5563$1XGIwa core-prim . vector-fill!)
        (g$5564$1XGIwa core-prim . vector->list)
        (g$13729$1XGIwa core-prim . vector)
        (g$13728$1XGIwa core-prim . values)
        (g$6302$1XGIwa core-prim . truncate)
        (g$6294$1XGIwa core-prim . tan)
        (g$5530$1XGIwa core-prim . symbol?)
        (g$5615$1XGIwa core-prim . symbol=?)
        (g$5550$1XGIwa core-prim . symbol->string)
        (g$5547$1XGIwa core-prim . substring)
        (g$5526$1XGIwa core-prim . string?)
        (g$5612$1XGIwa core-prim . string>?)
        (g$5614$1XGIwa core-prim . string>=?)
        (g$5610$1XGIwa core-prim . string=?)
        (g$5611$1XGIwa core-prim . string<?)
        (g$5613$1XGIwa core-prim . string<=?)
        (g$5539$1XGIwa core-prim . string-ref)
        (g$5542$1XGIwa core-prim . string-length)
        (g$5632$1XGIwa core-prim . string-for-each)
        (g$5546$1XGIwa core-prim . string-copy)
        (g$5548$1XGIwa core-prim . string-append)
        (g$5551$1XGIwa core-prim . string->symbol)
        (g$13727$1XGIwa core-prim . string->number)
        (g$5545$1XGIwa core-prim . string->list)
        (g$5544$1XGIwa core-prim . string)
        (g$6304$1XGIwa core-prim . sqrt)
        (g$6288$1XGIwa core-prim . sin)
        (g$6303$1XGIwa core-prim . round)
        (g$5566$1XGIwa core-prim . reverse)
        (g$6244$1XGIwa core-prim . real?)
        (g$6247$1XGIwa core-prim . real-valued?)
        (g$6281$1XGIwa core-prim . real-part)
        (g$5627$1XGIwa core-prim . rationalize)
        (g$6245$1XGIwa core-prim . rational?)
        (g$6248$1XGIwa core-prim . rational-valued?)
        (g$5532$1XGIwa core-prim . procedure?)
        (g$6251$1XGIwa core-prim . positive?)
        (g$13726$1XGIwa core-prim . pair?)
        (g$5599$1XGIwa core-prim . odd?)
        (g$6279$1XGIwa core-prim . numerator)
        (g$6237$1XGIwa core-prim . number?)
        (g$6258$1XGIwa core-prim . number->string)
        (g$13725$1XGIwa core-prim . null?)
        (g$13724$1XGIwa core-prim . not)
        (g$6252$1XGIwa core-prim . negative?)
        (g$6238$1XGIwa core-prim . nan?)
        (g$5601$1XGIwa core-prim . min)
        (g$5600$1XGIwa core-prim . max)
        (g$5187$1XGIwa core-prim . map)
        (g$5561$1XGIwa core-prim . make-vector)
        (g$5538$1XGIwa core-prim . make-string)
        (g$6274$1XGIwa core-prim . make-rectangular)
        (g$6275$1XGIwa core-prim . make-polar)
        (g$6277$1XGIwa core-prim . magnitude)
        (g$6297$1XGIwa core-prim . log)
        (g$13723$1XGIwa core-prim . list?)
        (g$5167$1XGIwa core-prim . list-tail)
        (g$5168$1XGIwa core-prim . list-ref)
        (g$5557$1XGIwa core-prim . list->vector)
        (g$5558$1XGIwa core-prim . list->string)
        (g$13722$1XGIwa core-prim . list)
        (g$13721$1XGIwa core-prim . length)
        (g$5603$1XGIwa core-prim . lcm)
        (g$6246$1XGIwa core-prim . integer?)
        (g$6249$1XGIwa core-prim . integer-valued?)
        (g$5537$1XGIwa core-prim . integer->char)
        (g$6240$1XGIwa core-prim . infinite?)
        (g$6242$1XGIwa core-prim . inexact?)
        (g$6253$1XGIwa core-prim . inexact)
        (g$6282$1XGIwa core-prim . imag-part)
        (g$5602$1XGIwa core-prim . gcd)
        (g$5188$1XGIwa core-prim . for-each)
        (g$6300$1XGIwa core-prim . floor)
        (g$6239$1XGIwa core-prim . finite?)
        (g$6306$1XGIwa core-prim . expt)
        (g$6287$1XGIwa core-prim . exp)
        (g$6241$1XGIwa core-prim . exact?)
        (g$6305$1XGIwa core-prim . exact-integer-sqrt)
        (g$6254$1XGIwa core-prim . exact)
        (g$5598$1XGIwa core-prim . even?)
        (g$13720$1XGIwa core-prim . error)
        (g$13719$1XGIwa core-prim . eqv?)
        (g$13718$1XGIwa core-prim . equal?)
        (g$13717$1XGIwa core-prim . eq?)
        (g$13716$1XGIwa core-prim . dynamic-wind)
        (g$5556$1XGIwa core-prim . div0-and-mod0)
        (g$5554$1XGIwa core-prim . mod0)
        (g$5552$1XGIwa core-prim . div0)
        (g$5555$1XGIwa core-prim . div-and-mod)
        (g$5553$1XGIwa core-prim . mod)
        (g$6298$1XGIwa core-prim . div)
        (g$6280$1XGIwa core-prim . denominator)
        (g$6291$1XGIwa core-prim . cos)
        (g$13715$1XGIwa core-prim . cons)
        (g$6243$1XGIwa core-prim . complex?)
        (g$5527$1XGIwa core-prim . char?)
        (g$5624$1XGIwa core-prim . char>?)
        (g$5626$1XGIwa core-prim . char>=?)
        (g$5622$1XGIwa core-prim . char=?)
        (g$5623$1XGIwa core-prim . char<?)
        (g$5625$1XGIwa core-prim . char<=?)
        (g$5536$1XGIwa core-prim . char->integer)
        (g$6301$1XGIwa core-prim . ceiling)
        (g$13714$1XGIwa core-prim . call-with-values)
        (g$13713$1XGIwa core-prim . call/cc)
        (g$13712$1XGIwa core-prim . call-with-current-continuation)
        (g$5594$1XGIwa core-prim . cddddr)
        (g$5593$1XGIwa core-prim . cdddar)
        (g$5592$1XGIwa core-prim . cddadr)
        (g$5591$1XGIwa core-prim . cddaar)
        (g$5590$1XGIwa core-prim . cdaddr)
        (g$5589$1XGIwa core-prim . cdadar)
        (g$5588$1XGIwa core-prim . cdaadr)
        (g$5587$1XGIwa core-prim . cdaaar)
        (g$5586$1XGIwa core-prim . cadddr)
        (g$5585$1XGIwa core-prim . caddar)
        (g$5584$1XGIwa core-prim . cadadr)
        (g$5583$1XGIwa core-prim . cadaar)
        (g$5582$1XGIwa core-prim . caaddr)
        (g$5581$1XGIwa core-prim . caadar)
        (g$5580$1XGIwa core-prim . caaadr)
        (g$5579$1XGIwa core-prim . caaaar)
        (g$5578$1XGIwa core-prim . cdddr)
        (g$5577$1XGIwa core-prim . cddar)
        (g$5576$1XGIwa core-prim . cdadr)
        (g$5575$1XGIwa core-prim . cdaar)
        (g$5574$1XGIwa core-prim . caddr)
        (g$5573$1XGIwa core-prim . cadar)
        (g$5572$1XGIwa core-prim . caadr)
        (g$5571$1XGIwa core-prim . caaar)
        (g$5570$1XGIwa core-prim . cddr)
        (g$5569$1XGIwa core-prim . cdar)
        (g$5568$1XGIwa core-prim . cadr)
        (g$5567$1XGIwa core-prim . caar)
        (g$13711$1XGIwa core-prim . cdr)
        (g$13710$1XGIwa core-prim . car)
        (g$5531$1XGIwa core-prim . boolean?)
        (g$5616$1XGIwa core-prim . boolean=?)
        (g$6296$1XGIwa core-prim . atan)
        (g$13709$1XGIwa core-prim . assertion-violation)
        (g$6289$1XGIwa core-prim . asin)
        (g$13708$1XGIwa core-prim . apply)
        (g$13707$1XGIwa core-prim . append)
        (g$6276$1XGIwa core-prim . angle)
        (g$6292$1XGIwa core-prim . acos)
        (g$6299$1XGIwa core-prim . abs)
        (g$13706$1XGIwa core-prim . /)
        (g$13705$1XGIwa core-prim . *)
        (g$13704$1XGIwa core-prim . -)
        (g$13703$1XGIwa core-prim . +)
        (g$6273$1XGIwa core-prim . >=)
        (g$6272$1XGIwa core-prim . >)
        (g$6269$1XGIwa core-prim . =)
        (g$6271$1XGIwa core-prim . <=)
        (g$6270$1XGIwa core-prim . <)
        (g$13702$1XGIwa core-prim . $bytevector-set!)
        (g$13701$1XGIwa core-prim . $bytevector-ref)
        (g$13700$1XGIwa core-prim . $fl>=?)
        (g$13699$1XGIwa core-prim . $fl>?)
        (g$13698$1XGIwa core-prim . $fl<=?)
        (g$13697$1XGIwa core-prim . $fl<?)
        (g$13696$1XGIwa core-prim . $fl-)
        (g$13695$1XGIwa core-prim . $fl/)
        (g$13694$1XGIwa core-prim . $fl*)
        (g$13693$1XGIwa core-prim . $fl+)
        (g$13692$1XGIwa core-prim . $fl=?)
        (g$13691$1XGIwa core-prim . $try)
        (g$13690$1XGIwa core-prim . $fxarithmetic-shift-right)
        (g$13689$1XGIwa core-prim . $fxarithmetic-shift-left)
        (g$13688$1XGIwa core-prim . $$fx-)
        (g$13687$1XGIwa core-prim . $$fx*)
        (g$13686$1XGIwa core-prim . $$fx+)
        (g$13685$1XGIwa core-prim . $fxnot)
        (g$13684$1XGIwa core-prim . $fxxor)
        (g$13683$1XGIwa core-prim . $fxior)
        (g$13682$1XGIwa core-prim . $fxand)
        (g$13681$1XGIwa core-prim . $fx>=?)
        (g$13680$1XGIwa core-prim . $fx>?)
        (g$13679$1XGIwa core-prim . $fx<=?)
        (g$13678$1XGIwa core-prim . $fx<?)
        (g$13677$1XGIwa core-prim . $fx-)
        (g$13676$1XGIwa core-prim . $fxmod0)
        (g$13675$1XGIwa core-prim . $fxdiv0)
        (g$13674$1XGIwa core-prim . $fx*)
        (g$13673$1XGIwa core-prim . $fx+)
        (g$13672$1XGIwa core-prim . $fx=?)
        (g$13671$1XGIwa core-prim . $vector-set!)
        (g$13670$1XGIwa core-prim . $vector-ref)
        (g$13669$1XGIwa core-prim . $cdr)
        (g$13668$1XGIwa core-prim . $car)
        (g$13667$1XGIwa core-prim . make-record-printer)
        (g$13666$1XGIwa core-prim . eqv-hash)
        (g$13665$1XGIwa core-prim . reverse!)
        (g$13664$1XGIwa core-prim . deserialize-port)
        (g$13663$1XGIwa core-prim . serialize-port)
        (g$8971$1XGIwa core-prim . enum-set?)
        (g$7018$1XGIwa core-prim . make-promise)
        (g$13467$1XGIwa core-prim . load/unload)
        (g$13466$1XGIwa core-prim . load/args)
        (g$9080$1XGIwa core-prim . printf)
        (g$9081$1XGIwa core-prim . fprintf)
        (g$9082$1XGIwa core-prim . format)
        (g$13662$1XGIwa core-prim . procedure-form)
        (g$13661$1XGIwa core-prim . procedure-environment)
        (g$13660$1XGIwa core-prim . procedure-name)
        (g$13659$1XGIwa core-prim . procedure-arity)
        (g$13658$1XGIwa core-prim . gc-collect)
        (g$13657$1XGIwa core-prim . typeof)
        (g$13656$1XGIwa core-prim . clr-type?)
        (g$13655$1XGIwa core-prim . get-clr-type)
        (g$13654$1XGIwa core-prim . get-command-line)
        (g$13653$1XGIwa core-prim . vector-append)
        (g$13652$1XGIwa core-prim . vector-filter)
        (g$13651$1XGIwa core-prim . vector-reverse!)
        (g$13650$1XGIwa core-prim . vector-contains?)
        (g$13649$1XGIwa core-prim . vector-index-of)
        (g$13648$1XGIwa core-prim . vector-copy)
        (g$13647$1XGIwa core-prim . vector-binary-search)
        (g$13646$1XGIwa core-prim . string-ci-compare)
        (g$13645$1XGIwa core-prim . string-compare)
        (g$13644$1XGIwa core-prim . string-format)
        (g$13461$1XGIwa core-prim . trace-printer)
        (g$13643$1XGIwa core-prim . make-traced-procedure)
        (g$9102$1XGIwa core-prim . make-traced-macro)
        (g$10440$1XGIwa core-prim . assertion-error)
        (g$13642$1XGIwa core-prim . time-it)
        (g$9109$1XGIwa core-prim . make-parameter)
        (g$13641$1XGIwa core-prim . library-locator)
        (g$13640$1XGIwa core-prim . get-library-paths)
        (g$13639$1XGIwa core-prim . open-tcp-input/output-port)
        (g$13638$1XGIwa core-prim . hashtable-for-each)
        (g$13637$1XGIwa core-prim . hashtable-map)
        (g$10418$1XGIwa core-prim . environment-bindings)
        (g$10421$1XGIwa core-prim . environment-symbols)
        (g$10417$1XGIwa core-prim . interaction-environment-symbols)
        (g$13636$1XGIwa core-prim . optimization-level)
        (g$9747$1XGIwa core-prim . library-path)
        (g$10126$1XGIwa core-prim . make-compile-time-value)
        (g$10427$1XGIwa core-prim . expand->core)
        (g$10425$1XGIwa core-prim . expand)
        (g$13464$1XGIwa core-prim . emacs-mode?)
        (g$10364$1XGIwa core-prim . syntax-transpose)
        (g$9428$1XGIwa core-prim . convert->cps)
        (g$13635$1XGIwa core-prim . inexact=?)
        (g$13634$1XGIwa core-prim . bignum-sqrt-exact)
        (g$13633$1XGIwa core-prim . bignum-sqrt)
        (g$13632$1XGIwa core-prim . flonum->string)
        (g$13631$1XGIwa core-prim . inexact-compare)
        (g$13630$1XGIwa core-prim . exact-compare)
        (g$6733$1XGIwa core-prim . condition-stacktrace)
        (g$6732$1XGIwa core-prim . stacktrace-condition?)
        (g$13462$1XGIwa core-prim . stacktrace-enable?)
        (g$6730$1XGIwa core-prim . make-stacktrace-condition)
        (g$6718$1XGIwa core-prim . condition-where)
        (g$6717$1XGIwa core-prim . where-condition?)
        (g$6715$1XGIwa core-prim . make-where-condition)
        (g$9768$1XGIwa core-prim . installed-libraries)
        (g$9759$1XGIwa core-prim . uninstall-library)
        (g$9192$1XGIwa core-prim . pretty-gensyms)
        (g$9189$1XGIwa core-prim . pretty-width)
        (g$9194$1XGIwa core-prim . pretty-print)
        (g$13629$1XGIwa core-prim . pointer+)
        (g$13628$1XGIwa $core-rtd &stacktrace-rtd &stacktrace-rcd)
        (g$13627$1XGIwa $core-rtd &where-rtd &where-rcd)
        (g$13626$1XGIwa $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$13625$1XGIwa $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$13624$1XGIwa $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$13623$1XGIwa $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$13622$1XGIwa $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$13621$1XGIwa
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$13620$1XGIwa
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$13619$1XGIwa
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$13618$1XGIwa
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$13617$1XGIwa $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$13616$1XGIwa
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$13615$1XGIwa $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$13614$1XGIwa $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$13613$1XGIwa $core-rtd &i/o-rtd &i/o-rcd)
        (g$13612$1XGIwa
          $core-rtd
          &non-continuable-rtd
          &non-continuable-rcd)
        (g$13611$1XGIwa $core-rtd &undefined-rtd &undefined-rcd)
        (g$13610$1XGIwa $core-rtd &syntax-rtd &syntax-rcd)
        (g$13609$1XGIwa $core-rtd &lexical-rtd &lexical-rcd)
        (g$13608$1XGIwa
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$13607$1XGIwa $core-rtd &who-rtd &who-rcd)
        (g$13606$1XGIwa $core-rtd &irritants-rtd &irritants-rcd)
        (g$13605$1XGIwa $core-rtd &assertion-rtd &assertion-rcd)
        (g$13604$1XGIwa $core-rtd &violation-rtd &violation-rcd)
        (g$13603$1XGIwa $core-rtd &error-rtd &error-rcd)
        (g$13602$1XGIwa $core-rtd &serious-rtd &serious-rcd)
        (g$13601$1XGIwa $core-rtd &warning-rtd &warning-rcd)
        (g$13600$1XGIwa $core-rtd &message-rtd &message-rcd)
        (g$13599$1XGIwa $core-rtd &condition-rtd &condition-rcd)
        (g$13598$1XGIwa macro . define-condition-type)
        (g$13597$1XGIwa macro . define-enumeration)
        (g$13596$1XGIwa macro . define-record-type)
        (g$13595$1XGIwa macro . parent-rtd)
        (g$13594$1XGIwa macro . nongenerative)
        (g$13593$1XGIwa macro . opaque)
        (g$13592$1XGIwa macro . sealed)
        (g$13591$1XGIwa macro . protocol)
        (g$13590$1XGIwa macro . parent)
        (g$13589$1XGIwa macro . immutable)
        (g$13588$1XGIwa macro . mutable)
        (g$13587$1XGIwa macro . fields)
        (g$13586$1XGIwa macro . error-handling-mode)
        (g$13585$1XGIwa macro . file-options)
        (g$13584$1XGIwa macro . buffer-mode)
        (g$13583$1XGIwa macro . eol-style)
        (g$13582$1XGIwa macro . guard)
        (g$13581$1XGIwa macro . trace-letrec-syntax)
        (g$13580$1XGIwa macro . trace-let-syntax)
        (g$13579$1XGIwa macro . trace-define-syntax)
        (g$13578$1XGIwa macro . trace-define)
        (g$13577$1XGIwa macro . trace-lambda)
        (g$13576$1XGIwa macro . unsyntax-splicing)
        (g$13575$1XGIwa macro . unsyntax)
        (g$13574$1XGIwa macro . unquote-splicing)
        (g$13573$1XGIwa macro . unquote)
        (g$13572$1XGIwa macro . _)
        (g$13571$1XGIwa macro . else)
        (g$13570$1XGIwa macro . =>)
        (g$13569$1XGIwa macro . ...)
        (g$13568$1XGIwa macro . assert)
        (g$13567$1XGIwa macro . endianness)
        (g$13566$1XGIwa macro . delay)
        (g$13565$1XGIwa macro . time)
        (g$13564$1XGIwa macro . or)
        (g$13563$1XGIwa macro . and)
        (g$13562$1XGIwa macro . do)
        (g$13561$1XGIwa macro . cond)
        (g$13560$1XGIwa macro . let*)
        (g$13559$1XGIwa macro . let)
        (g$13558$1XGIwa macro . identifier-syntax)
        (g$13557$1XGIwa macro . with-syntax)
        (g$13556$1XGIwa macro . quasisyntax)
        (g$13555$1XGIwa macro . quasiquote)
        (g$13554$1XGIwa macro . syntax-rules)
        (g$13553$1XGIwa macro . include-into)
        (g$13552$1XGIwa macro . include)
        (g$13551$1XGIwa macro . define-struct)
        (g$13550$1XGIwa macro . let-values)
        (g$13549$1XGIwa macro . let*-values)
        (g$13548$1XGIwa core-macro . record-constructor-descriptor)
        (g$13547$1XGIwa core-macro . record-type-descriptor)
        (g$13546$1XGIwa core-macro . fluid-let-syntax)
        (g$13545$1XGIwa macro . case)
        (g$13544$1XGIwa macro . parameterize)
        (g$13543$1XGIwa macro . unless)
        (g$13542$1XGIwa macro . when)
        (g$13541$1XGIwa core-macro . if)
        (g$13540$1XGIwa core-macro . letrec*)
        (g$13539$1XGIwa core-macro . letrec)
        (g$13538$1XGIwa core-macro . type-descriptor)
        (g$13537$1XGIwa core-macro . case-lambda)
        (g$13536$1XGIwa core-macro . lambda)
        (g$13535$1XGIwa core-macro . syntax)
        (g$13534$1XGIwa core-macro . syntax-case)
        (g$13533$1XGIwa core-macro . quote)
        (g$13532$1XGIwa core-macro . foreign-call)
        (g$13531$1XGIwa letrec-syntax)
        (g$13530$1XGIwa let-syntax)
        (g$13529$1XGIwa set!)
        (g$13528$1XGIwa export)
        (g$13527$1XGIwa import)
        (g$13526$1XGIwa library)
        (g$13525$1XGIwa begin)
        (g$13524$1XGIwa module)
        (g$13523$1XGIwa define-syntax)
        (g$13522$1XGIwa define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$27963$1XGIwa
      'g$13912$1XGIwa
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$13850$1XGIwa)
        (eval-core . g$13849$1XGIwa)
        (set-symbol-value! . g$13847$1XGIwa)
        (symbol-value . g$13846$1XGIwa)
        (gensym . g$13843$1XGIwa)
        (void . g$13842$1XGIwa))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$32474$1XGIwa
     g$trace-printer$32542$1XGIwa
     (g$make-parameter$27100$1XGIwa g$pretty-print$27310$1XGIwa))
   (g$stacktrace-enable?$32475$1XGIwa
     g$stacktrace-enable?$32543$1XGIwa
     (g$make-parameter$27100$1XGIwa '#t))
   (g$command-line$32476$1XGIwa
     g$command-line$32544$1XGIwa
     (g$make-parameter$27100$1XGIwa (get-command-line)))
   (g$emacs-mode?$32477$1XGIwa
     g$emacs-mode?$32545$1XGIwa
     (g$make-parameter$27100$1XGIwa '#f))
   (g$local-library-path$32478$1XGIwa
     g$local-library-path$32546$1XGIwa
     (case-lambda
       ((g$filename$32493$1XGIwa)
        (cons
          (g$get-directory-name$20735$1XGIwa g$filename$32493$1XGIwa)
          (g$library-path$27947$1XGIwa)))))
   (g$load/args$32479$1XGIwa
     g$load/args$32547$1XGIwa
     (case-lambda
       ((g$filename$32494$1XGIwa . g$args$32495$1XGIwa)
        (begin
          (apply
            g$load-r6rs-top-level$32490$1XGIwa
            g$filename$32494$1XGIwa
            'load
            g$args$32495$1XGIwa)
          (void)))))
   (g$load/unload$32480$1XGIwa
     g$load/unload$32548$1XGIwa
     (case-lambda
       ((g$filename$32496$1XGIwa)
        ((case-lambda
           ((g$libs$32497$1XGIwa)
            (begin
              (g$load$32481$1XGIwa g$filename$32496$1XGIwa)
              (g$for-each$19662$1XGIwa
                (case-lambda
                  ((g$lib$32498$1XGIwa)
                   (if (not (g$memq$19653$1XGIwa
                              g$lib$32498$1XGIwa
                              g$libs$32497$1XGIwa))
                     (g$uninstall-library$27959$1XGIwa
                       g$lib$32498$1XGIwa)
                     (void))))
                (g$installed-libraries$27968$1XGIwa)))))
         (g$installed-libraries$27968$1XGIwa)))))
   (g$load$32481$1XGIwa
     g$load$32549$1XGIwa
     (case-lambda
       ((g$filename$32499$1XGIwa)
        (begin
          (apply
            g$load-r6rs-top-level$32490$1XGIwa
            g$filename$32499$1XGIwa
            'load
            (cdr (g$command-line$32476$1XGIwa)))
          (void)))))
   (g$ironscheme-test$32482$1XGIwa
     g$ironscheme-test$32550$1XGIwa
     (case-lambda (() (g$load$32481$1XGIwa '"tests/r6rs/run.sps"))))
   (g$ironscheme-build$32483$1XGIwa
     g$ironscheme-build$32551$1XGIwa
     (case-lambda
       (() (g$ironscheme-build$32483$1XGIwa '#f))
       ((g$cps?$32500$1XGIwa)
        (begin
          (g$call-with-output-file$26716$1XGIwa
            '"build-options.ss"
            (case-lambda
              ((g$p$32501$1XGIwa)
               (begin
                 (write
                   (list 'define-option 'cps-mode g$cps?$32500$1XGIwa)
                   g$p$32501$1XGIwa)
                 (write
                   (list
                     'define-option
                     'if-wants-letrec*
                     (not g$cps?$32500$1XGIwa))
                   g$p$32501$1XGIwa)
                 (g$newline$26717$1XGIwa g$p$32501$1XGIwa)))))
          (g$load$32481$1XGIwa '"ironscheme-buildscript.ss")))))
   (g$foreground-color$32484$1XGIwa
     g$foreground-color$32552$1XGIwa
     (case-lambda
       (()
        (if (not (g$emacs-mode?$32477$1XGIwa))
          (begin
            '#f
            (clr-call-internal 'console 'get_foregroundcolor '()))
          '#f))
       ((g$color$32502$1XGIwa)
        (if (not (g$emacs-mode?$32477$1XGIwa))
          (begin
            '#f
            (clr-call-internal
              'console
              'set_foregroundcolor
              '()
              g$color$32502$1XGIwa))
          '#f))))
   (g$system-exception?$32485$1XGIwa
     g$system-exception?$32553$1XGIwa
     (case-lambda
       ((g$e$32503$1XGIwa)
        (clr-is-internal 'SystemException g$e$32503$1XGIwa))))
   (g$eval-top-level$32486$1XGIwa
     g$eval-top-level$32554$1XGIwa
     (case-lambda
       ((g$x$32504$1XGIwa)
        (call/cc
          (case-lambda
            ((g$k$32505$1XGIwa)
             (with-exception-handler
               (case-lambda
                 ((g$e$32506$1XGIwa)
                  ((case-lambda
                     ((g$serious?$32507$1XGIwa)
                      (begin
                        ((case-lambda
                           ((g$foreground-color$32512$1XGIwa
                              g$current-output-port$32513$1XGIwa
                              g$foreground-color$32514$1XGIwa
                              g$current-output-port$32515$1XGIwa)
                            ((case-lambda
                               ((g$swap$32516$1XGIwa)
                                (dynamic-wind
                                  g$swap$32516$1XGIwa
                                  (case-lambda
                                    (()
                                     (begin
                                       (if g$serious?$32507$1XGIwa
                                         (display
                                           '"Unhandled exception during evaluation:
")
                                         (void))
                                       (display g$e$32506$1XGIwa)
                                       (g$newline$26717$1XGIwa))))
                                  g$swap$32516$1XGIwa)))
                             (case-lambda
                               (()
                                (begin
                                  ((case-lambda
                                     ((g$t$32517$1XGIwa)
                                      (begin
                                        (g$foreground-color$32512$1XGIwa
                                          g$foreground-color$32514$1XGIwa)
                                        (set! g$foreground-color$32514$1XGIwa
                                          g$t$32517$1XGIwa))))
                                   (g$foreground-color$32512$1XGIwa))
                                  ((case-lambda
                                     ((g$t$32518$1XGIwa)
                                      (begin
                                        (g$current-output-port$32513$1XGIwa
                                          g$current-output-port$32515$1XGIwa)
                                        (set! g$current-output-port$32515$1XGIwa
                                          g$t$32518$1XGIwa))))
                                   (g$current-output-port$32513$1XGIwa))))))))
                         g$foreground-color$32484$1XGIwa
                         current-output-port
                         (if g$serious?$32507$1XGIwa 'red 'yellow)
                         (current-error-port))
                        (if g$serious?$32507$1XGIwa
                          (g$k$32505$1XGIwa)
                          (void)))))
                   ((case-lambda
                      ((g$t$32519$1XGIwa)
                       (if g$t$32519$1XGIwa
                         g$t$32519$1XGIwa
                         (begin
                           '#f
                           (g$system-exception?$32485$1XGIwa
                             g$e$32506$1XGIwa)))))
                    (g$serious-condition?$22117$1XGIwa
                      g$e$32506$1XGIwa)))))
               (case-lambda
                 (()
                  (g$eval$32447$1XGIwa
                    g$x$32504$1XGIwa
                    (g$interaction-environment$32472$1XGIwa)))))))))))
   (g$compile-system-libraries$32487$1XGIwa
     g$compile-system-libraries$32555$1XGIwa
     (case-lambda
       (()
        (g$eval-top-level$32486$1XGIwa
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$32488$1XGIwa
     g$compile$32556$1XGIwa
     (case-lambda
       ((g$filename$32520$1XGIwa)
        (g$load-r6rs-top-level$32490$1XGIwa
          g$filename$32520$1XGIwa
          'compile))))
   (g$compile->closure$32489$1XGIwa
     g$compile->closure$32557$1XGIwa
     (case-lambda
       ((g$filename$32521$1XGIwa)
        (g$load-r6rs-top-level$32490$1XGIwa
          g$filename$32521$1XGIwa
          'closure))))
   (g$load-r6rs-top-level$32490$1XGIwa
     g$load-r6rs-top-level$32558$1XGIwa
     (case-lambda
       ((g$filename$32522$1XGIwa
          g$how$32523$1XGIwa
          .
          g$args$32524$1XGIwa)
        ((case-lambda
           ((g$library-path$32527$1XGIwa g$library-path$32528$1XGIwa)
            ((case-lambda
               ((g$swap$32529$1XGIwa)
                (dynamic-wind
                  g$swap$32529$1XGIwa
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$32530$1XGIwa)
                         ((case-lambda
                            ((g$t$32531$1XGIwa)
                             (if (eqv? g$t$32531$1XGIwa 'closure)
                               (g$pre-compile-r6rs-top-level$32470$1XGIwa
                                 g$x*$32530$1XGIwa)
                               (if (eqv? g$t$32531$1XGIwa 'load)
                                 ((case-lambda
                                    ((g$command-line$32534$1XGIwa
                                       g$command-line$32535$1XGIwa)
                                     ((case-lambda
                                        ((g$swap$32536$1XGIwa)
                                         (dynamic-wind
                                           g$swap$32536$1XGIwa
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$32469$1XGIwa
                                                 g$x*$32530$1XGIwa))))
                                           g$swap$32536$1XGIwa)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$32537$1XGIwa)
                                             (begin
                                               (g$command-line$32534$1XGIwa
                                                 g$command-line$32535$1XGIwa)
                                               (set! g$command-line$32535$1XGIwa
                                                 g$t$32537$1XGIwa))))
                                          (g$command-line$32534$1XGIwa)))))))
                                  g$command-line$32476$1XGIwa
                                  (cons
                                    g$filename$32522$1XGIwa
                                    (g$map$19661$1XGIwa
                                      (case-lambda
                                        ((g$x$32538$1XGIwa)
                                         (g$format$26891$1XGIwa
                                           '"~a"
                                           g$x$32538$1XGIwa)))
                                      g$args$32524$1XGIwa)))
                                 (if (eqv? g$t$32531$1XGIwa 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$32469$1XGIwa
                                       g$x*$32530$1XGIwa)
                                     (g$serialize-all$27951$1XGIwa
                                       serialize-library
                                       g$compile-core-expr$27698$1XGIwa))
                                   (if '#f '#f (void)))))))
                          g$how$32523$1XGIwa)))
                      (g$with-input-from-file$26713$1XGIwa
                        g$filename$32522$1XGIwa
                        (case-lambda
                          (()
                           ((letrec ((g$f$32539$1XGIwa
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$32540$1XGIwa)
                                              (if (eof-object?
                                                    g$x$32540$1XGIwa)
                                                '()
                                                (cons
                                                  g$x$32540$1XGIwa
                                                  (g$f$32539$1XGIwa)))))
                                           (read-annotated))))))
                              g$f$32539$1XGIwa))))))))
                  g$swap$32529$1XGIwa)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$32541$1XGIwa)
                    (begin
                      (g$library-path$32527$1XGIwa
                        g$library-path$32528$1XGIwa)
                      (set! g$library-path$32528$1XGIwa
                        g$t$32541$1XGIwa))))
                 (g$library-path$32527$1XGIwa)))))))
         g$library-path$27947$1XGIwa
         (g$local-library-path$32478$1XGIwa g$filename$32522$1XGIwa)))))
   (g$fo$32491$1XGIwa
     g$fo$32559$1XGIwa
     (g$make-enumeration$26853$1XGIwa
       '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$27952$1XGIwa
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$32492$1XGIwa)
         (if (g$serious-condition?$22117$1XGIwa g$ex$32492$1XGIwa)
           (raise g$ex$32492$1XGIwa)
           (begin
             '#f
             (display g$ex$32492$1XGIwa)
             (g$newline$26717$1XGIwa))))))
    (set-symbol-value! 'load g$load$32481$1XGIwa)
    (set-symbol-value! 'compile g$compile$32488$1XGIwa)
    (set-symbol-value!
      'compile->closure
      g$compile->closure$32489$1XGIwa)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$32486$1XGIwa)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$32438$1XGIwa)
    (set-symbol-value! 'expanded2core g$expanded->core$27697$1XGIwa)
    (set-symbol-value! 'trace-printer g$trace-printer$32474$1XGIwa)
    (set-symbol-value! 'pretty-print g$pretty-print$27310$1XGIwa)
    (set-symbol-value! 'convert->cps g$convert->cps$27628$1XGIwa)
    (set-symbol-value! 'assertion-violation assertion-violation)
    (set-symbol-value! 'raise raise)
    (set-symbol-value! 'emacs-mode? g$emacs-mode?$32477$1XGIwa)
    (set-symbol-value!
      'stacktrace-enable?
      g$stacktrace-enable?$32475$1XGIwa)
    (g$file-options-constructor$27101$1XGIwa
      (g$enum-set-constructor$26856$1XGIwa g$fo$32491$1XGIwa))
    (g$library-path$27947$1XGIwa (get-library-paths))
    (g$library-extensions$27948$1XGIwa
      (cons '".ironscheme.sls" (g$library-extensions$27948$1XGIwa)))
    (g$enable-constant-fold/env$27648$1XGIwa
      '(only
         (rnrs)
         =
         <
         >
         <=
         >=
         negative?
         positive?
         zero?
         exp
         expt
         div
         mod
         div0
         mod0)
      '(except
         (rnrs arithmetic fixnums)
         fx*/carry
         fx-/carry
         fx+/carry
         fxdiv0-and-mod0
         fxdiv-and-mod)
      '(except (rnrs arithmetic flonums) fldiv0-and-mod0 fldiv-and-mod)
      '(rnrs arithmetic bitwise))
    (g$interaction-environment$32472$1XGIwa
      (g$new-interaction-environment$32471$1XGIwa))))

