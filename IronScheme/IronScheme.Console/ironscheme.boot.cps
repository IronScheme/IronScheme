(library-letrec* (psyntax config) () (void identity-for-cps))(library-letrec* (ironscheme lists) ((g$list-tail$12589$U0r&n g$list-tail$12733$U0r&n ((case-lambda ((g$C$21070$U0r&n) (g$C$21070$U0r&n (case-lambda ((g$C$20869$U0r&n g$lst$12617$U0r&n g$index$12618$U0r&n) (null? (case-lambda ((g$V$20870$U0r&n) ((case-lambda ((g$C$20868$U0r&n g$t$12619$U0r&n) (if g$t$12619$U0r&n (g$C$20868$U0r&n g$t$12619$U0r&n) (g$negative?$13534$U0r&n g$C$20868$U0r&n g$index$12618$U0r&n)))) (case-lambda ((g$T$20871$U0r&n) (if g$T$20871$U0r&n (g$assertion-violation$13786$U0r&n g$C$20869$U0r&n 'list-tail '"index out of range" g$lst$12617$U0r&n g$index$12618$U0r&n) (g$zero?$13535$U0r&n (case-lambda ((g$T$20872$U0r&n) (if g$T$20872$U0r&n (g$C$20869$U0r&n g$lst$12617$U0r&n) (- (case-lambda ((g$V$20873$U0r&n) (cdr (case-lambda ((g$V$20874$U0r&n) (g$list-tail$12589$U0r&n g$C$20869$U0r&n g$V$20874$U0r&n g$V$20873$U0r&n))) g$lst$12617$U0r&n))) g$index$12618$U0r&n '1)))) g$index$12618$U0r&n)))) g$V$20870$U0r&n))) g$lst$12617$U0r&n)))))) (library-letrec*-identity 'g$list-tail$12589$U0r&n))) (g$list-ref$12590$U0r&n g$list-ref$12734$U0r&n ((case-lambda ((g$C$21071$U0r&n) (g$C$21071$U0r&n (case-lambda ((g$C$20875$U0r&n g$lst$12620$U0r&n g$index$12621$U0r&n) (g$list-tail$12589$U0r&n (case-lambda ((g$V$20876$U0r&n) (car g$C$20875$U0r&n g$V$20876$U0r&n))) g$lst$12620$U0r&n g$index$12621$U0r&n)))))) (library-letrec*-identity 'g$list-ref$12590$U0r&n))) (g$last-pair$12591$U0r&n g$last-pair$12735$U0r&n ((case-lambda ((g$C$21072$U0r&n) (g$C$21072$U0r&n (case-lambda ((g$C$20877$U0r&n g$lst$12622$U0r&n) (null? (case-lambda ((g$T$20878$U0r&n) (if g$T$20878$U0r&n (g$C$20877$U0r&n g$lst$12622$U0r&n) (cdr (case-lambda ((g$V$20879$U0r&n) (null? (case-lambda ((g$T$20880$U0r&n) (if g$T$20880$U0r&n (g$C$20877$U0r&n g$lst$12622$U0r&n) (cdr (case-lambda ((g$V$20881$U0r&n) (g$last-pair$12591$U0r&n g$C$20877$U0r&n g$V$20881$U0r&n))) g$lst$12622$U0r&n)))) g$V$20879$U0r&n))) g$lst$12622$U0r&n)))) g$lst$12622$U0r&n)))))) (library-letrec*-identity 'g$last-pair$12591$U0r&n))) (g$make-list$12592$U0r&n g$make-list$12736$U0r&n ((case-lambda ((g$C$21073$U0r&n) (g$C$21073$U0r&n (case-lambda ((g$C$20882$U0r&n g$n$12623$U0r&n) (make-vector (case-lambda ((g$V$20883$U0r&n) (vector->list g$C$20882$U0r&n g$V$20883$U0r&n))) g$n$12623$U0r&n)) ((g$C$20882$U0r&n g$n$12624$U0r&n g$fill$12625$U0r&n) (make-vector (case-lambda ((g$V$20884$U0r&n) (vector->list g$C$20882$U0r&n g$V$20884$U0r&n))) g$n$12624$U0r&n g$fill$12625$U0r&n)))))) (library-letrec*-identity 'g$make-list$12592$U0r&n))) (g$find$12593$U0r&n g$find$12737$U0r&n ((case-lambda ((g$C$21074$U0r&n) (g$C$21074$U0r&n (case-lambda ((g$C$20887$U0r&n g$proc$12626$U0r&n g$l$12627$U0r&n) (null? (case-lambda ((g$T$20888$U0r&n) (if g$T$20888$U0r&n (g$C$20887$U0r&n '#f) (cdr (case-lambda ((g$V$20889$U0r&n) (car (case-lambda ((g$V$20890$U0r&n) ((case-lambda ((g$C$20885$U0r&n g$e$12628$U0r&n g$r$12629$U0r&n g$proc$12630$U0r&n) (g$proc$12630$U0r&n (case-lambda ((g$T$20886$U0r&n) (if g$T$20886$U0r&n (g$C$20885$U0r&n g$e$12628$U0r&n) (g$find$12593$U0r&n g$C$20885$U0r&n g$proc$12630$U0r&n g$r$12629$U0r&n)))) g$e$12628$U0r&n))) g$C$20887$U0r&n g$V$20890$U0r&n g$V$20889$U0r&n g$proc$12626$U0r&n))) g$l$12627$U0r&n))) g$l$12627$U0r&n)))) g$l$12627$U0r&n)))))) (library-letrec*-identity 'g$find$12593$U0r&n))) (g$partition$12594$U0r&n g$partition$12738$U0r&n ((case-lambda ((g$C$21075$U0r&n) (g$C$21075$U0r&n (case-lambda ((g$C$20905$U0r&n g$proc$12631$U0r&n g$l$12632$U0r&n) ((case-lambda ((g$C$20904$U0r&n g$f$12633$U0r&n) ((case-lambda ((g$C$20892$U0r&n g$f$20891$U0r&n) (begin (set! g$f$12633$U0r&n g$f$20891$U0r&n) (g$C$20892$U0r&n g$f$12633$U0r&n)))) g$C$20904$U0r&n (case-lambda ((g$C$20899$U0r&n g$l$12634$U0r&n g$a$12635$U0r&n g$b$12636$U0r&n) (null? (case-lambda ((g$T$20900$U0r&n) (if g$T$20900$U0r&n (reverse! (case-lambda ((g$V$20901$U0r&n) (reverse! (case-lambda ((g$V$20902$U0r&n) (values g$C$20899$U0r&n g$V$20902$U0r&n g$V$20901$U0r&n))) g$a$12635$U0r&n))) g$b$12636$U0r&n) (car (case-lambda ((g$V$20903$U0r&n) ((case-lambda ((g$C$20893$U0r&n g$e$12637$U0r&n) (g$proc$12631$U0r&n (case-lambda ((g$T$20894$U0r&n) (if g$T$20894$U0r&n (cons (case-lambda ((g$V$20895$U0r&n) (cdr (case-lambda ((g$V$20896$U0r&n) (g$f$12633$U0r&n g$C$20893$U0r&n g$V$20896$U0r&n g$V$20895$U0r&n g$b$12636$U0r&n))) g$l$12634$U0r&n))) g$e$12637$U0r&n g$a$12635$U0r&n) (cons (case-lambda ((g$V$20897$U0r&n) (cdr (case-lambda ((g$V$20898$U0r&n) (g$f$12633$U0r&n g$C$20893$U0r&n g$V$20898$U0r&n g$a$12635$U0r&n g$V$20897$U0r&n))) g$l$12634$U0r&n))) g$e$12637$U0r&n g$b$12636$U0r&n)))) g$e$12637$U0r&n))) g$C$20899$U0r&n g$V$20903$U0r&n))) g$l$12634$U0r&n)))) g$l$12634$U0r&n)))))) (case-lambda ((g$V$20906$U0r&n) (g$V$20906$U0r&n g$C$20905$U0r&n g$l$12632$U0r&n '() '()))) uninitialized)))))) (library-letrec*-identity 'g$partition$12594$U0r&n))) (g$remp$12595$U0r&n g$remp$12739$U0r&n ((case-lambda ((g$C$21076$U0r&n) (g$C$21076$U0r&n (case-lambda ((g$C$20918$U0r&n g$proc$12638$U0r&n g$l$12639$U0r&n) ((case-lambda ((g$C$20917$U0r&n g$f$12640$U0r&n) ((case-lambda ((g$C$20908$U0r&n g$f$20907$U0r&n) (begin (set! g$f$12640$U0r&n g$f$20907$U0r&n) (g$C$20908$U0r&n g$f$12640$U0r&n)))) g$C$20917$U0r&n (case-lambda ((g$C$20914$U0r&n g$l$12641$U0r&n g$a$12642$U0r&n) (null? (case-lambda ((g$T$20915$U0r&n) (if g$T$20915$U0r&n (reverse! g$C$20914$U0r&n g$a$12642$U0r&n) (car (case-lambda ((g$V$20916$U0r&n) ((case-lambda ((g$C$20909$U0r&n g$e$12643$U0r&n) (g$proc$12638$U0r&n (case-lambda ((g$T$20910$U0r&n) (if g$T$20910$U0r&n (cdr (case-lambda ((g$V$20911$U0r&n) (g$f$12640$U0r&n g$C$20909$U0r&n g$V$20911$U0r&n g$a$12642$U0r&n))) g$l$12641$U0r&n) (cons (case-lambda ((g$V$20912$U0r&n) (cdr (case-lambda ((g$V$20913$U0r&n) (g$f$12640$U0r&n g$C$20909$U0r&n g$V$20913$U0r&n g$V$20912$U0r&n))) g$l$12641$U0r&n))) g$e$12643$U0r&n g$a$12642$U0r&n)))) g$e$12643$U0r&n))) g$C$20914$U0r&n g$V$20916$U0r&n))) g$l$12641$U0r&n)))) g$l$12641$U0r&n)))))) (case-lambda ((g$V$20919$U0r&n) (g$V$20919$U0r&n g$C$20918$U0r&n g$l$12639$U0r&n '()))) uninitialized)))))) (library-letrec*-identity 'g$remp$12595$U0r&n))) (g$filter$12596$U0r&n g$filter$12740$U0r&n ((case-lambda ((g$C$21077$U0r&n) (g$C$21077$U0r&n (case-lambda ((g$C$20931$U0r&n g$proc$12644$U0r&n g$l$12645$U0r&n) ((case-lambda ((g$C$20930$U0r&n g$f$12646$U0r&n) ((case-lambda ((g$C$20921$U0r&n g$f$20920$U0r&n) (begin (set! g$f$12646$U0r&n g$f$20920$U0r&n) (g$C$20921$U0r&n g$f$12646$U0r&n)))) g$C$20930$U0r&n (case-lambda ((g$C$20927$U0r&n g$l$12647$U0r&n g$a$12648$U0r&n) (null? (case-lambda ((g$T$20928$U0r&n) (if g$T$20928$U0r&n (reverse! g$C$20927$U0r&n g$a$12648$U0r&n) (car (case-lambda ((g$V$20929$U0r&n) ((case-lambda ((g$C$20922$U0r&n g$e$12649$U0r&n) (g$proc$12644$U0r&n (case-lambda ((g$T$20923$U0r&n) (if g$T$20923$U0r&n (cons (case-lambda ((g$V$20924$U0r&n) (cdr (case-lambda ((g$V$20925$U0r&n) (g$f$12646$U0r&n g$C$20922$U0r&n g$V$20925$U0r&n g$V$20924$U0r&n))) g$l$12647$U0r&n))) g$e$12649$U0r&n g$a$12648$U0r&n) (cdr (case-lambda ((g$V$20926$U0r&n) (g$f$12646$U0r&n g$C$20922$U0r&n g$V$20926$U0r&n g$a$12648$U0r&n))) g$l$12647$U0r&n)))) g$e$12649$U0r&n))) g$C$20927$U0r&n g$V$20929$U0r&n))) g$l$12647$U0r&n)))) g$l$12647$U0r&n)))))) (case-lambda ((g$V$20932$U0r&n) (g$V$20932$U0r&n g$C$20931$U0r&n g$l$12645$U0r&n '()))) uninitialized)))))) (library-letrec*-identity 'g$filter$12596$U0r&n))) (g$assq$12597$U0r&n g$assq$12741$U0r&n ((case-lambda ((g$C$21078$U0r&n) (g$C$21078$U0r&n (case-lambda ((g$C$20936$U0r&n g$obj$12650$U0r&n g$lst$12651$U0r&n) (null? (case-lambda ((g$T$20937$U0r&n) (if g$T$20937$U0r&n (g$C$20936$U0r&n '#f) (cdr (case-lambda ((g$V$20938$U0r&n) (car (case-lambda ((g$V$20939$U0r&n) ((case-lambda ((g$C$20933$U0r&n g$obj$12652$U0r&n g$t$12653$U0r&n g$r$12654$U0r&n) (car (case-lambda ((g$V$20934$U0r&n) (eq? (case-lambda ((g$T$20935$U0r&n) (if g$T$20935$U0r&n (g$C$20933$U0r&n g$t$12653$U0r&n) (g$assq$12597$U0r&n g$C$20933$U0r&n g$obj$12652$U0r&n g$r$12654$U0r&n)))) g$obj$12652$U0r&n g$V$20934$U0r&n))) g$t$12653$U0r&n))) g$C$20936$U0r&n g$obj$12650$U0r&n g$V$20939$U0r&n g$V$20938$U0r&n))) g$lst$12651$U0r&n))) g$lst$12651$U0r&n)))) g$lst$12651$U0r&n)))))) (library-letrec*-identity 'g$assq$12597$U0r&n))) (g$assv$12598$U0r&n g$assv$12742$U0r&n ((case-lambda ((g$C$21079$U0r&n) (g$C$21079$U0r&n (case-lambda ((g$C$20943$U0r&n g$obj$12655$U0r&n g$lst$12656$U0r&n) (null? (case-lambda ((g$T$20944$U0r&n) (if g$T$20944$U0r&n (g$C$20943$U0r&n '#f) (cdr (case-lambda ((g$V$20945$U0r&n) (car (case-lambda ((g$V$20946$U0r&n) ((case-lambda ((g$C$20940$U0r&n g$obj$12657$U0r&n g$t$12658$U0r&n g$r$12659$U0r&n) (car (case-lambda ((g$V$20941$U0r&n) (eqv? (case-lambda ((g$T$20942$U0r&n) (if g$T$20942$U0r&n (g$C$20940$U0r&n g$t$12658$U0r&n) (g$assv$12598$U0r&n g$C$20940$U0r&n g$obj$12657$U0r&n g$r$12659$U0r&n)))) g$obj$12657$U0r&n g$V$20941$U0r&n))) g$t$12658$U0r&n))) g$C$20943$U0r&n g$obj$12655$U0r&n g$V$20946$U0r&n g$V$20945$U0r&n))) g$lst$12656$U0r&n))) g$lst$12656$U0r&n)))) g$lst$12656$U0r&n)))))) (library-letrec*-identity 'g$assv$12598$U0r&n))) (g$assoc$12599$U0r&n g$assoc$12743$U0r&n ((case-lambda ((g$C$21080$U0r&n) (g$C$21080$U0r&n (case-lambda ((g$C$20950$U0r&n g$obj$12660$U0r&n g$lst$12661$U0r&n) (null? (case-lambda ((g$T$20951$U0r&n) (if g$T$20951$U0r&n (g$C$20950$U0r&n '#f) (cdr (case-lambda ((g$V$20952$U0r&n) (car (case-lambda ((g$V$20953$U0r&n) ((case-lambda ((g$C$20947$U0r&n g$obj$12662$U0r&n g$t$12663$U0r&n g$r$12664$U0r&n) (car (case-lambda ((g$V$20948$U0r&n) (equal? (case-lambda ((g$T$20949$U0r&n) (if g$T$20949$U0r&n (g$C$20947$U0r&n g$t$12663$U0r&n) (g$assoc$12599$U0r&n g$C$20947$U0r&n g$obj$12662$U0r&n g$r$12664$U0r&n)))) g$obj$12662$U0r&n g$V$20948$U0r&n))) g$t$12663$U0r&n))) g$C$20950$U0r&n g$obj$12660$U0r&n g$V$20953$U0r&n g$V$20952$U0r&n))) g$lst$12661$U0r&n))) g$lst$12661$U0r&n)))) g$lst$12661$U0r&n)))))) (library-letrec*-identity 'g$assoc$12599$U0r&n))) (g$assp$12600$U0r&n g$assp$12744$U0r&n ((case-lambda ((g$C$21081$U0r&n) (g$C$21081$U0r&n (case-lambda ((g$C$20957$U0r&n g$p?$12665$U0r&n g$lst$12666$U0r&n) (null? (case-lambda ((g$T$20958$U0r&n) (if g$T$20958$U0r&n (g$C$20957$U0r&n '#f) (cdr (case-lambda ((g$V$20959$U0r&n) (car (case-lambda ((g$V$20960$U0r&n) ((case-lambda ((g$C$20954$U0r&n g$p?$12667$U0r&n g$t$12668$U0r&n g$r$12669$U0r&n) (car (case-lambda ((g$V$20955$U0r&n) (g$p?$12667$U0r&n (case-lambda ((g$T$20956$U0r&n) (if g$T$20956$U0r&n (g$C$20954$U0r&n g$t$12668$U0r&n) (g$assp$12600$U0r&n g$C$20954$U0r&n g$p?$12667$U0r&n g$r$12669$U0r&n)))) g$V$20955$U0r&n))) g$t$12668$U0r&n))) g$C$20957$U0r&n g$p?$12665$U0r&n g$V$20960$U0r&n g$V$20959$U0r&n))) g$lst$12666$U0r&n))) g$lst$12666$U0r&n)))) g$lst$12666$U0r&n)))))) (library-letrec*-identity 'g$assp$12600$U0r&n))) (g$memq$12601$U0r&n g$memq$12745$U0r&n ((case-lambda ((g$C$21082$U0r&n) (g$C$21082$U0r&n (case-lambda ((g$C$20961$U0r&n g$obj$12670$U0r&n g$lst$12671$U0r&n) (null? (case-lambda ((g$T$20962$U0r&n) (if g$T$20962$U0r&n (g$C$20961$U0r&n '#f) (car (case-lambda ((g$V$20963$U0r&n) (eq? (case-lambda ((g$T$20964$U0r&n) (if g$T$20964$U0r&n (g$C$20961$U0r&n g$lst$12671$U0r&n) (cdr (case-lambda ((g$V$20965$U0r&n) (g$memq$12601$U0r&n g$C$20961$U0r&n g$obj$12670$U0r&n g$V$20965$U0r&n))) g$lst$12671$U0r&n)))) g$obj$12670$U0r&n g$V$20963$U0r&n))) g$lst$12671$U0r&n)))) g$lst$12671$U0r&n)))))) (library-letrec*-identity 'g$memq$12601$U0r&n))) (g$memv$12602$U0r&n g$memv$12746$U0r&n ((case-lambda ((g$C$21083$U0r&n) (g$C$21083$U0r&n (case-lambda ((g$C$20966$U0r&n g$obj$12672$U0r&n g$lst$12673$U0r&n) (null? (case-lambda ((g$T$20967$U0r&n) (if g$T$20967$U0r&n (g$C$20966$U0r&n '#f) (car (case-lambda ((g$V$20968$U0r&n) (eqv? (case-lambda ((g$T$20969$U0r&n) (if g$T$20969$U0r&n (g$C$20966$U0r&n g$lst$12673$U0r&n) (cdr (case-lambda ((g$V$20970$U0r&n) (g$memv$12602$U0r&n g$C$20966$U0r&n g$obj$12672$U0r&n g$V$20970$U0r&n))) g$lst$12673$U0r&n)))) g$obj$12672$U0r&n g$V$20968$U0r&n))) g$lst$12673$U0r&n)))) g$lst$12673$U0r&n)))))) (library-letrec*-identity 'g$memv$12602$U0r&n))) (g$member$12603$U0r&n g$member$12747$U0r&n ((case-lambda ((g$C$21084$U0r&n) (g$C$21084$U0r&n (case-lambda ((g$C$20971$U0r&n g$obj$12674$U0r&n g$lst$12675$U0r&n) (null? (case-lambda ((g$T$20972$U0r&n) (if g$T$20972$U0r&n (g$C$20971$U0r&n '#f) (car (case-lambda ((g$V$20973$U0r&n) (equal? (case-lambda ((g$T$20974$U0r&n) (if g$T$20974$U0r&n (g$C$20971$U0r&n g$lst$12675$U0r&n) (cdr (case-lambda ((g$V$20975$U0r&n) (g$member$12603$U0r&n g$C$20971$U0r&n g$obj$12674$U0r&n g$V$20975$U0r&n))) g$lst$12675$U0r&n)))) g$obj$12674$U0r&n g$V$20973$U0r&n))) g$lst$12675$U0r&n)))) g$lst$12675$U0r&n)))))) (library-letrec*-identity 'g$member$12603$U0r&n))) (g$memp$12604$U0r&n g$memp$12748$U0r&n ((case-lambda ((g$C$21085$U0r&n) (g$C$21085$U0r&n (case-lambda ((g$C$20976$U0r&n g$p?$12676$U0r&n g$lst$12677$U0r&n) (null? (case-lambda ((g$T$20977$U0r&n) (if g$T$20977$U0r&n (g$C$20976$U0r&n '#f) (car (case-lambda ((g$V$20978$U0r&n) (g$p?$12676$U0r&n (case-lambda ((g$T$20979$U0r&n) (if g$T$20979$U0r&n (g$C$20976$U0r&n g$lst$12677$U0r&n) (cdr (case-lambda ((g$V$20980$U0r&n) (g$memp$12604$U0r&n g$C$20976$U0r&n g$p?$12676$U0r&n g$V$20980$U0r&n))) g$lst$12677$U0r&n)))) g$V$20978$U0r&n))) g$lst$12677$U0r&n)))) g$lst$12677$U0r&n)))))) (library-letrec*-identity 'g$memp$12604$U0r&n))) (g$all-empty?$12605$U0r&n g$all-empty?$12749$U0r&n ((case-lambda ((g$C$21086$U0r&n) (g$C$21086$U0r&n (case-lambda ((g$C$20985$U0r&n g$ls$12678$U0r&n) (null? (case-lambda ((g$V$20986$U0r&n) ((case-lambda ((g$C$20981$U0r&n g$t$12679$U0r&n) (if g$t$12679$U0r&n (g$C$20981$U0r&n g$t$12679$U0r&n) (car (case-lambda ((g$V$20982$U0r&n) (null? (case-lambda ((g$T$20983$U0r&n) (if g$T$20983$U0r&n (cdr (case-lambda ((g$V$20984$U0r&n) (g$all-empty?$12605$U0r&n g$C$20981$U0r&n g$V$20984$U0r&n))) g$ls$12678$U0r&n) (g$C$20981$U0r&n '#f)))) g$V$20982$U0r&n))) g$ls$12678$U0r&n)))) g$C$20985$U0r&n g$V$20986$U0r&n))) g$ls$12678$U0r&n)))))) (library-letrec*-identity 'g$all-empty?$12605$U0r&n))) (g$split$12606$U0r&n g$split$12750$U0r&n ((case-lambda ((g$C$21087$U0r&n) (g$C$21087$U0r&n (case-lambda ((g$C$20996$U0r&n g$ls$12680$U0r&n) (null? (case-lambda ((g$T$20997$U0r&n) (if g$T$20997$U0r&n (values g$C$20996$U0r&n '() '()) (call-with-values g$C$20996$U0r&n (case-lambda ((g$C$20987$U0r&n) (cdr (case-lambda ((g$V$20988$U0r&n) (g$split$12606$U0r&n g$C$20987$U0r&n g$V$20988$U0r&n))) g$ls$12680$U0r&n))) (case-lambda ((g$C$20994$U0r&n g$cars$12681$U0r&n g$cdrs$12682$U0r&n) (car (case-lambda ((g$V$20995$U0r&n) ((case-lambda ((g$C$20989$U0r&n g$a$12683$U0r&n) (cdr (case-lambda ((g$V$20990$U0r&n) (cons (case-lambda ((g$V$20991$U0r&n) (car (case-lambda ((g$V$20992$U0r&n) (cons (case-lambda ((g$V$20993$U0r&n) (values g$C$20989$U0r&n g$V$20993$U0r&n g$V$20991$U0r&n))) g$V$20992$U0r&n g$cars$12681$U0r&n))) g$a$12683$U0r&n))) g$V$20990$U0r&n g$cdrs$12682$U0r&n))) g$a$12683$U0r&n))) g$C$20994$U0r&n g$V$20995$U0r&n))) g$ls$12680$U0r&n))))))) g$ls$12680$U0r&n)))))) (library-letrec*-identity 'g$split$12606$U0r&n))) (g$for-all$12607$U0r&n g$for-all$12751$U0r&n ((case-lambda ((g$C$21088$U0r&n) (g$C$21088$U0r&n (case-lambda ((g$C$21004$U0r&n g$f$12684$U0r&n g$arg1$12685$U0r&n . g$args$12686$U0r&n) (cons (case-lambda ((g$V$21005$U0r&n) ((case-lambda ((g$C$21002$U0r&n g$args$12687$U0r&n) (g$all-empty?$12605$U0r&n (case-lambda ((g$T$21003$U0r&n) (if g$T$21003$U0r&n (g$C$21002$U0r&n '#t) (call-with-values g$C$21002$U0r&n (case-lambda ((g$C$20998$U0r&n) (g$split$12606$U0r&n g$C$20998$U0r&n g$args$12687$U0r&n))) (case-lambda ((g$C$20999$U0r&n g$cars$12688$U0r&n g$cdrs$12689$U0r&n) (g$all-empty?$12605$U0r&n (case-lambda ((g$T$21000$U0r&n) (if g$T$21000$U0r&n (apply g$C$20999$U0r&n g$f$12684$U0r&n g$cars$12688$U0r&n) (apply (case-lambda ((g$T$21001$U0r&n) (if g$T$21001$U0r&n (apply g$C$20999$U0r&n g$for-all$12607$U0r&n g$f$12684$U0r&n g$cdrs$12689$U0r&n) (g$C$20999$U0r&n '#f)))) g$f$12684$U0r&n g$cars$12688$U0r&n)))) g$cdrs$12689$U0r&n))))))) g$args$12687$U0r&n))) g$C$21004$U0r&n g$V$21005$U0r&n))) g$arg1$12685$U0r&n g$args$12686$U0r&n)))))) (library-letrec*-identity 'g$for-all$12607$U0r&n))) (g$exists$12608$U0r&n g$exists$12752$U0r&n ((case-lambda ((g$C$21089$U0r&n) (g$C$21089$U0r&n (case-lambda ((g$C$21012$U0r&n g$f$12690$U0r&n g$arg1$12691$U0r&n . g$args$12692$U0r&n) (cons (case-lambda ((g$V$21013$U0r&n) ((case-lambda ((g$C$21010$U0r&n g$args$12693$U0r&n) (g$all-empty?$12605$U0r&n (case-lambda ((g$T$21011$U0r&n) (if g$T$21011$U0r&n (g$C$21010$U0r&n '#f) (call-with-values g$C$21010$U0r&n (case-lambda ((g$C$21006$U0r&n) (g$split$12606$U0r&n g$C$21006$U0r&n g$args$12693$U0r&n))) (case-lambda ((g$C$21008$U0r&n g$cars$12694$U0r&n g$cdrs$12695$U0r&n) (apply (case-lambda ((g$V$21009$U0r&n) ((case-lambda ((g$C$21007$U0r&n g$t$12696$U0r&n) (if g$t$12696$U0r&n (g$C$21007$U0r&n g$t$12696$U0r&n) (apply g$C$21007$U0r&n g$exists$12608$U0r&n g$f$12690$U0r&n g$cdrs$12695$U0r&n)))) g$C$21008$U0r&n g$V$21009$U0r&n))) g$f$12690$U0r&n g$cars$12694$U0r&n))))))) g$args$12693$U0r&n))) g$C$21012$U0r&n g$V$21013$U0r&n))) g$arg1$12691$U0r&n g$args$12692$U0r&n)))))) (library-letrec*-identity 'g$exists$12608$U0r&n))) (g$map$12609$U0r&n g$map$12753$U0r&n ((case-lambda ((g$C$21090$U0r&n) (g$C$21090$U0r&n (case-lambda ((g$C$21023$U0r&n g$proc$12697$U0r&n g$list1$12698$U0r&n . g$lists$12699$U0r&n) (cons (case-lambda ((g$V$21024$U0r&n) ((case-lambda ((g$C$21022$U0r&n g$f$12700$U0r&n) ((case-lambda ((g$C$21015$U0r&n g$f$21014$U0r&n) (begin (set! g$f$12700$U0r&n g$f$21014$U0r&n) (g$C$21015$U0r&n g$f$12700$U0r&n)))) g$C$21022$U0r&n (case-lambda ((g$C$21020$U0r&n g$lists$12701$U0r&n g$a$12702$U0r&n) (g$all-empty?$12605$U0r&n (case-lambda ((g$T$21021$U0r&n) (if g$T$21021$U0r&n (reverse! g$C$21020$U0r&n g$a$12702$U0r&n) (call-with-values g$C$21020$U0r&n (case-lambda ((g$C$21016$U0r&n) (g$split$12606$U0r&n g$C$21016$U0r&n g$lists$12701$U0r&n))) (case-lambda ((g$C$21017$U0r&n g$cars$12703$U0r&n g$cdrs$12704$U0r&n) (apply (case-lambda ((g$V$21018$U0r&n) (cons (case-lambda ((g$V$21019$U0r&n) (g$f$12700$U0r&n g$C$21017$U0r&n g$cdrs$12704$U0r&n g$V$21019$U0r&n))) g$V$21018$U0r&n g$a$12702$U0r&n))) g$proc$12697$U0r&n g$cars$12703$U0r&n))))))) g$lists$12701$U0r&n)))))) (case-lambda ((g$V$21025$U0r&n) (g$V$21025$U0r&n g$C$21023$U0r&n g$V$21024$U0r&n '()))) uninitialized))) g$list1$12698$U0r&n g$lists$12699$U0r&n)))))) (library-letrec*-identity 'g$map$12609$U0r&n))) (g$for-each$12610$U0r&n g$for-each$12754$U0r&n ((case-lambda ((g$C$21091$U0r&n) (g$C$21091$U0r&n (case-lambda ((g$C$21032$U0r&n g$f$12705$U0r&n g$arg1$12706$U0r&n . g$args$12707$U0r&n) (cons (case-lambda ((g$V$21033$U0r&n) ((case-lambda ((g$C$21029$U0r&n g$args$12708$U0r&n) (g$all-empty?$12605$U0r&n (case-lambda ((g$V$21030$U0r&n) (not (case-lambda ((g$T$21031$U0r&n) (if g$T$21031$U0r&n (call-with-values g$C$21029$U0r&n (case-lambda ((g$C$21026$U0r&n) (g$split$12606$U0r&n g$C$21026$U0r&n g$args$12708$U0r&n))) (case-lambda ((g$C$21027$U0r&n g$cars$12709$U0r&n g$cdrs$12710$U0r&n) (apply (case-lambda (g$IGNORE$21028$U0r&n (apply g$C$21027$U0r&n g$for-each$12610$U0r&n g$f$12705$U0r&n g$cdrs$12710$U0r&n))) g$f$12705$U0r&n g$cars$12709$U0r&n)))) (void g$C$21029$U0r&n)))) g$V$21030$U0r&n))) g$args$12708$U0r&n))) g$C$21032$U0r&n g$V$21033$U0r&n))) g$arg1$12706$U0r&n g$args$12707$U0r&n)))))) (library-letrec*-identity 'g$for-each$12610$U0r&n))) (g$cons*$12611$U0r&n g$cons*$12755$U0r&n ((case-lambda ((g$C$21092$U0r&n) (g$C$21092$U0r&n (case-lambda ((g$C$21042$U0r&n g$a$12711$U0r&n . g$rest$12712$U0r&n) ((case-lambda ((g$C$21041$U0r&n g$f$12713$U0r&n) ((case-lambda ((g$C$21035$U0r&n g$f$21034$U0r&n) (begin (set! g$f$12713$U0r&n g$f$21034$U0r&n) (g$C$21035$U0r&n g$f$12713$U0r&n)))) g$C$21041$U0r&n (case-lambda ((g$C$21036$U0r&n g$a$12714$U0r&n g$rest$12715$U0r&n) (null? (case-lambda ((g$T$21037$U0r&n) (if g$T$21037$U0r&n (g$C$21036$U0r&n g$a$12714$U0r&n) (cdr (case-lambda ((g$V$21038$U0r&n) (car (case-lambda ((g$V$21039$U0r&n) (g$f$12713$U0r&n (case-lambda ((g$V$21040$U0r&n) (cons g$C$21036$U0r&n g$a$12714$U0r&n g$V$21040$U0r&n))) g$V$21039$U0r&n g$V$21038$U0r&n))) g$rest$12715$U0r&n))) g$rest$12715$U0r&n)))) g$rest$12715$U0r&n)))))) (case-lambda ((g$V$21043$U0r&n) (g$V$21043$U0r&n g$C$21042$U0r&n g$a$12711$U0r&n g$rest$12712$U0r&n))) uninitialized)))))) (library-letrec*-identity 'g$cons*$12611$U0r&n))) (g$fold-left$12612$U0r&n g$fold-left$12756$U0r&n ((case-lambda ((g$C$21093$U0r&n) (g$C$21093$U0r&n (case-lambda ((g$C$21044$U0r&n g$combine$12716$U0r&n g$nil$12717$U0r&n g$list1$12718$U0r&n . g$lists$12719$U0r&n) (null? (case-lambda ((g$T$21045$U0r&n) (if g$T$21045$U0r&n (g$C$21044$U0r&n g$nil$12717$U0r&n) (g$map$12609$U0r&n (case-lambda ((g$V$21046$U0r&n) (cdr (case-lambda ((g$V$21047$U0r&n) (g$map$12609$U0r&n (case-lambda ((g$V$21048$U0r&n) (car (case-lambda ((g$V$21049$U0r&n) (g$cons*$12611$U0r&n (case-lambda ((g$V$21050$U0r&n) (apply (case-lambda ((g$V$21051$U0r&n) (g$cons*$12611$U0r&n (case-lambda ((g$V$21052$U0r&n) (apply g$C$21044$U0r&n g$fold-left$12612$U0r&n g$V$21052$U0r&n))) g$combine$12716$U0r&n g$V$21051$U0r&n g$V$21047$U0r&n g$V$21046$U0r&n))) g$combine$12716$U0r&n g$V$21050$U0r&n))) g$nil$12717$U0r&n g$V$21049$U0r&n g$V$21048$U0r&n))) g$list1$12718$U0r&n))) car g$lists$12719$U0r&n))) g$list1$12718$U0r&n))) cdr g$lists$12719$U0r&n)))) g$list1$12718$U0r&n)))))) (library-letrec*-identity 'g$fold-left$12612$U0r&n))) (g$fold-right$12613$U0r&n g$fold-right$12757$U0r&n ((case-lambda ((g$C$21094$U0r&n) (g$C$21094$U0r&n (case-lambda ((g$C$21053$U0r&n g$combine$12720$U0r&n g$nil$12721$U0r&n g$list1$12722$U0r&n . g$lists$12723$U0r&n) (null? (case-lambda ((g$T$21054$U0r&n) (if g$T$21054$U0r&n (g$C$21053$U0r&n g$nil$12721$U0r&n) (g$map$12609$U0r&n (case-lambda ((g$V$21055$U0r&n) (cdr (case-lambda ((g$V$21056$U0r&n) (g$cons*$12611$U0r&n (case-lambda ((g$V$21057$U0r&n) (apply (case-lambda ((g$V$21058$U0r&n) (list (case-lambda ((g$V$21059$U0r&n) (g$map$12609$U0r&n (case-lambda ((g$V$21060$U0r&n) (car (case-lambda ((g$V$21061$U0r&n) (list (case-lambda ((g$V$21062$U0r&n) (append (case-lambda ((g$V$21063$U0r&n) (apply g$C$21053$U0r&n g$combine$12720$U0r&n g$V$21063$U0r&n))) g$V$21062$U0r&n g$V$21060$U0r&n g$V$21059$U0r&n))) g$V$21061$U0r&n))) g$list1$12722$U0r&n))) car g$lists$12723$U0r&n))) g$V$21058$U0r&n))) g$fold-right$12613$U0r&n g$V$21057$U0r&n))) g$combine$12720$U0r&n g$nil$12721$U0r&n g$V$21056$U0r&n g$V$21055$U0r&n))) g$list1$12722$U0r&n))) cdr g$lists$12723$U0r&n)))) g$list1$12722$U0r&n)))))) (library-letrec*-identity 'g$fold-right$12613$U0r&n))) (g$remove$12614$U0r&n g$remove$12758$U0r&n ((case-lambda ((g$C$21095$U0r&n) (g$C$21095$U0r&n (case-lambda ((g$C$21065$U0r&n g$obj$12724$U0r&n g$list$12725$U0r&n) (g$remp$12595$U0r&n g$C$21065$U0r&n (case-lambda ((g$C$21064$U0r&n g$x$12726$U0r&n) (equal? g$C$21064$U0r&n g$obj$12724$U0r&n g$x$12726$U0r&n))) g$list$12725$U0r&n)))))) (library-letrec*-identity 'g$remove$12614$U0r&n))) (g$remv$12615$U0r&n g$remv$12759$U0r&n ((case-lambda ((g$C$21096$U0r&n) (g$C$21096$U0r&n (case-lambda ((g$C$21067$U0r&n g$obj$12727$U0r&n g$list$12728$U0r&n) (g$remp$12595$U0r&n g$C$21067$U0r&n (case-lambda ((g$C$21066$U0r&n g$x$12729$U0r&n) (eqv? g$C$21066$U0r&n g$obj$12727$U0r&n g$x$12729$U0r&n))) g$list$12728$U0r&n)))))) (library-letrec*-identity 'g$remv$12615$U0r&n))) (g$remq$12616$U0r&n g$remq$12760$U0r&n ((case-lambda ((g$C$21097$U0r&n) (g$C$21097$U0r&n (case-lambda ((g$C$21069$U0r&n g$obj$12730$U0r&n g$list$12731$U0r&n) (g$remp$12595$U0r&n g$C$21069$U0r&n (case-lambda ((g$C$21068$U0r&n g$x$12732$U0r&n) (eq? g$C$21068$U0r&n g$obj$12730$U0r&n g$x$12732$U0r&n))) g$list$12731$U0r&n)))))) (library-letrec*-identity 'g$remq$12616$U0r&n)))) (void identity-for-cps))(library-letrec* (ironscheme base) ((g$mod$13156$U0r&n g$mod$13487$U0r&n ((case-lambda ((g$C$21567$U0r&n) (g$C$21567$U0r&n (case-lambda ((g$C$21098$U0r&n g$x1$13309$U0r&n g$x2$13310$U0r&n) (div (case-lambda ((g$V$21099$U0r&n) (* (case-lambda ((g$V$21100$U0r&n) (- g$C$21098$U0r&n g$x1$13309$U0r&n g$V$21100$U0r&n))) g$V$21099$U0r&n g$x2$13310$U0r&n))) g$x1$13309$U0r&n g$x2$13310$U0r&n)))))) (library-letrec*-identity 'g$mod$13156$U0r&n))) (g$mod0$13157$U0r&n g$mod0$13488$U0r&n ((case-lambda ((g$C$21568$U0r&n) (g$C$21568$U0r&n (case-lambda ((g$C$21101$U0r&n g$x1$13311$U0r&n g$x2$13312$U0r&n) (div0 (case-lambda ((g$V$21102$U0r&n) (* (case-lambda ((g$V$21103$U0r&n) (- g$C$21101$U0r&n g$x1$13311$U0r&n g$V$21103$U0r&n))) g$V$21102$U0r&n g$x2$13312$U0r&n))) g$x1$13311$U0r&n g$x2$13312$U0r&n)))))) (library-letrec*-identity 'g$mod0$13157$U0r&n))) (g$div-and-mod$13158$U0r&n g$div-and-mod$13489$U0r&n ((case-lambda ((g$C$21569$U0r&n) (g$C$21569$U0r&n (case-lambda ((g$C$21107$U0r&n g$x1$13313$U0r&n g$x2$13314$U0r&n) (div (case-lambda ((g$V$21108$U0r&n) ((case-lambda ((g$C$21104$U0r&n g$d$13315$U0r&n) (* (case-lambda ((g$V$21105$U0r&n) (- (case-lambda ((g$V$21106$U0r&n) (values g$C$21104$U0r&n g$d$13315$U0r&n g$V$21106$U0r&n))) g$x1$13313$U0r&n g$V$21105$U0r&n))) g$d$13315$U0r&n g$x2$13314$U0r&n))) g$C$21107$U0r&n g$V$21108$U0r&n))) g$x1$13313$U0r&n g$x2$13314$U0r&n)))))) (library-letrec*-identity 'g$div-and-mod$13158$U0r&n))) (g$div0-and-mod0$13159$U0r&n g$div0-and-mod0$13490$U0r&n ((case-lambda ((g$C$21570$U0r&n) (g$C$21570$U0r&n (case-lambda ((g$C$21112$U0r&n g$x1$13316$U0r&n g$x2$13317$U0r&n) (div0 (case-lambda ((g$V$21113$U0r&n) ((case-lambda ((g$C$21109$U0r&n g$d$13318$U0r&n) (* (case-lambda ((g$V$21110$U0r&n) (- (case-lambda ((g$V$21111$U0r&n) (values g$C$21109$U0r&n g$d$13318$U0r&n g$V$21111$U0r&n))) g$x1$13316$U0r&n g$V$21110$U0r&n))) g$d$13318$U0r&n g$x2$13317$U0r&n))) g$C$21112$U0r&n g$V$21113$U0r&n))) g$x1$13316$U0r&n g$x2$13317$U0r&n)))))) (library-letrec*-identity 'g$div0-and-mod0$13159$U0r&n))) (g$list->vector$13160$U0r&n g$list->vector$13491$U0r&n ((case-lambda ((g$C$21571$U0r&n) (g$C$21571$U0r&n (case-lambda ((g$C$21114$U0r&n g$lst$13319$U0r&n) (apply g$C$21114$U0r&n vector g$lst$13319$U0r&n)))))) (library-letrec*-identity 'g$list->vector$13160$U0r&n))) (g$list->string$13161$U0r&n g$list->string$13492$U0r&n ((case-lambda ((g$C$21572$U0r&n) (g$C$21572$U0r&n (case-lambda ((g$C$21115$U0r&n g$lst$13320$U0r&n) (apply g$C$21115$U0r&n string g$lst$13320$U0r&n)))))) (library-letrec*-identity 'g$list->string$13161$U0r&n))) (g$char?$13162$U0r&n g$char?$13493$U0r&n ((case-lambda ((g$C$21573$U0r&n) (g$C$21573$U0r&n (case-lambda ((g$C$21116$U0r&n g$obj$13321$U0r&n) (g$C$21116$U0r&n (clr-is-internal 'system.char g$obj$13321$U0r&n))))))) (library-letrec*-identity 'g$char?$13162$U0r&n))) (g$vector?$13163$U0r&n g$vector?$13494$U0r&n ((case-lambda ((g$C$21574$U0r&n) (g$C$21574$U0r&n (case-lambda ((g$C$21117$U0r&n g$obj$13322$U0r&n) (g$C$21117$U0r&n (clr-is-internal 'system.object[] g$obj$13322$U0r&n))))))) (library-letrec*-identity 'g$vector?$13163$U0r&n))) (g$bytevector?$13164$U0r&n g$bytevector?$13495$U0r&n ((case-lambda ((g$C$21575$U0r&n) (g$C$21575$U0r&n (case-lambda ((g$C$21118$U0r&n g$obj$13323$U0r&n) (g$C$21118$U0r&n (clr-is-internal 'system.byte[] g$obj$13323$U0r&n))))))) (library-letrec*-identity 'g$bytevector?$13164$U0r&n))) (g$symbol?$13165$U0r&n g$symbol?$13496$U0r&n ((case-lambda ((g$C$21576$U0r&n) (g$C$21576$U0r&n (case-lambda ((g$C$21119$U0r&n g$obj$13324$U0r&n) (g$C$21119$U0r&n (clr-is-internal 'microsoft.scripting.symbolid g$obj$13324$U0r&n))))))) (library-letrec*-identity 'g$symbol?$13165$U0r&n))) (g$boolean?$13166$U0r&n g$boolean?$13497$U0r&n ((case-lambda ((g$C$21577$U0r&n) (g$C$21577$U0r&n (case-lambda ((g$C$21120$U0r&n g$obj$13325$U0r&n) (g$C$21120$U0r&n (clr-is-internal 'system.boolean g$obj$13325$U0r&n))))))) (library-letrec*-identity 'g$boolean?$13166$U0r&n))) (g$procedure?$13167$U0r&n g$procedure?$13498$U0r&n ((case-lambda ((g$C$21578$U0r&n) (g$C$21578$U0r&n (case-lambda ((g$C$21121$U0r&n g$obj$13326$U0r&n) (g$C$21121$U0r&n (clr-is-internal 'ironscheme.runtime.icallable g$obj$13326$U0r&n))))))) (library-letrec*-identity 'g$procedure?$13167$U0r&n))) (g$fixnum?$13168$U0r&n g$fixnum?$13499$U0r&n ((case-lambda ((g$C$21579$U0r&n) (g$C$21579$U0r&n (case-lambda ((g$C$21122$U0r&n g$obj$13327$U0r&n) (g$C$21122$U0r&n (clr-is-internal 'system.int32 g$obj$13327$U0r&n))))))) (library-letrec*-identity 'g$fixnum?$13168$U0r&n))) (g$flonum?$13169$U0r&n g$flonum?$13500$U0r&n ((case-lambda ((g$C$21580$U0r&n) (g$C$21580$U0r&n (case-lambda ((g$C$21123$U0r&n g$obj$13328$U0r&n) (g$C$21123$U0r&n (clr-is-internal 'system.double g$obj$13328$U0r&n))))))) (library-letrec*-identity 'g$flonum?$13169$U0r&n))) (g$fixnum-width$13170$U0r&n g$fixnum-width$13501$U0r&n ((case-lambda ((g$C$21581$U0r&n) (g$C$21581$U0r&n (case-lambda ((g$C$21124$U0r&n) (g$C$21124$U0r&n '32)))))) (library-letrec*-identity 'g$fixnum-width$13170$U0r&n))) (g$vector-fill!$13171$U0r&n g$vector-fill!$13502$U0r&n ((case-lambda ((g$C$21582$U0r&n) (g$C$21582$U0r&n (case-lambda ((g$C$21133$U0r&n g$vec$13329$U0r&n g$val$13330$U0r&n) (vector-length (case-lambda ((g$V$21134$U0r&n) ((case-lambda ((g$C$21132$U0r&n g$len$13331$U0r&n) ((case-lambda ((g$C$21131$U0r&n g$loop$13332$U0r&n) ((case-lambda ((g$C$21126$U0r&n g$loop$21125$U0r&n) (begin (set! g$loop$13332$U0r&n g$loop$21125$U0r&n) (g$loop$13332$U0r&n g$C$21126$U0r&n '0)))) g$C$21131$U0r&n (case-lambda ((g$C$21127$U0r&n g$i$13333$U0r&n) (fx=? (case-lambda ((g$T$21128$U0r&n) (if g$T$21128$U0r&n (if '#f (g$C$21127$U0r&n '#f) (void g$C$21127$U0r&n)) (vector-set! (case-lambda (g$IGNORE$21129$U0r&n (fx+ (case-lambda ((g$V$21130$U0r&n) (g$loop$13332$U0r&n g$C$21127$U0r&n g$V$21130$U0r&n))) g$i$13333$U0r&n '1))) g$vec$13329$U0r&n g$i$13333$U0r&n g$val$13330$U0r&n)))) g$i$13333$U0r&n g$len$13331$U0r&n)))))) g$C$21132$U0r&n uninitialized))) g$C$21133$U0r&n g$V$21134$U0r&n))) g$vec$13329$U0r&n)))))) (library-letrec*-identity 'g$vector-fill!$13171$U0r&n))) (g$xcons$13172$U0r&n g$xcons$13503$U0r&n ((case-lambda ((g$C$21583$U0r&n) (g$C$21583$U0r&n (case-lambda ((g$C$21135$U0r&n g$x$13334$U0r&n g$y$13335$U0r&n) (cons g$C$21135$U0r&n g$y$13335$U0r&n g$x$13334$U0r&n)))))) (library-letrec*-identity 'g$xcons$13172$U0r&n))) (g$reverse$13173$U0r&n g$reverse$13504$U0r&n ((case-lambda ((g$C$21584$U0r&n) (g$C$21584$U0r&n (case-lambda ((g$C$21136$U0r&n g$lst$13336$U0r&n) (g$fold-left$12756$U0r&n g$C$21136$U0r&n g$xcons$13172$U0r&n '() g$lst$13336$U0r&n)))))) (library-letrec*-identity 'g$reverse$13173$U0r&n))) (g$caar$13174$U0r&n g$caar$13505$U0r&n ((case-lambda ((g$C$21585$U0r&n) (g$C$21585$U0r&n (case-lambda ((g$C$21137$U0r&n g$x$13337$U0r&n) (car (case-lambda ((g$V$21138$U0r&n) (car g$C$21137$U0r&n g$V$21138$U0r&n))) g$x$13337$U0r&n)))))) (library-letrec*-identity 'g$caar$13174$U0r&n))) (g$cadr$13175$U0r&n g$cadr$13506$U0r&n ((case-lambda ((g$C$21586$U0r&n) (g$C$21586$U0r&n (case-lambda ((g$C$21139$U0r&n g$x$13338$U0r&n) (cdr (case-lambda ((g$V$21140$U0r&n) (car g$C$21139$U0r&n g$V$21140$U0r&n))) g$x$13338$U0r&n)))))) (library-letrec*-identity 'g$cadr$13175$U0r&n))) (g$cdar$13176$U0r&n g$cdar$13507$U0r&n ((case-lambda ((g$C$21587$U0r&n) (g$C$21587$U0r&n (case-lambda ((g$C$21141$U0r&n g$x$13339$U0r&n) (car (case-lambda ((g$V$21142$U0r&n) (cdr g$C$21141$U0r&n g$V$21142$U0r&n))) g$x$13339$U0r&n)))))) (library-letrec*-identity 'g$cdar$13176$U0r&n))) (g$cddr$13177$U0r&n g$cddr$13508$U0r&n ((case-lambda ((g$C$21588$U0r&n) (g$C$21588$U0r&n (case-lambda ((g$C$21143$U0r&n g$x$13340$U0r&n) (cdr (case-lambda ((g$V$21144$U0r&n) (cdr g$C$21143$U0r&n g$V$21144$U0r&n))) g$x$13340$U0r&n)))))) (library-letrec*-identity 'g$cddr$13177$U0r&n))) (g$caaar$13178$U0r&n g$caaar$13509$U0r&n ((case-lambda ((g$C$21589$U0r&n) (g$C$21589$U0r&n (case-lambda ((g$C$21145$U0r&n g$x$13341$U0r&n) (car (case-lambda ((g$V$21146$U0r&n) (g$caar$13174$U0r&n g$C$21145$U0r&n g$V$21146$U0r&n))) g$x$13341$U0r&n)))))) (library-letrec*-identity 'g$caaar$13178$U0r&n))) (g$caadr$13179$U0r&n g$caadr$13510$U0r&n ((case-lambda ((g$C$21590$U0r&n) (g$C$21590$U0r&n (case-lambda ((g$C$21147$U0r&n g$x$13342$U0r&n) (cdr (case-lambda ((g$V$21148$U0r&n) (g$caar$13174$U0r&n g$C$21147$U0r&n g$V$21148$U0r&n))) g$x$13342$U0r&n)))))) (library-letrec*-identity 'g$caadr$13179$U0r&n))) (g$cadar$13180$U0r&n g$cadar$13511$U0r&n ((case-lambda ((g$C$21591$U0r&n) (g$C$21591$U0r&n (case-lambda ((g$C$21149$U0r&n g$x$13343$U0r&n) (car (case-lambda ((g$V$21150$U0r&n) (g$cadr$13175$U0r&n g$C$21149$U0r&n g$V$21150$U0r&n))) g$x$13343$U0r&n)))))) (library-letrec*-identity 'g$cadar$13180$U0r&n))) (g$caddr$13181$U0r&n g$caddr$13512$U0r&n ((case-lambda ((g$C$21592$U0r&n) (g$C$21592$U0r&n (case-lambda ((g$C$21151$U0r&n g$x$13344$U0r&n) (cdr (case-lambda ((g$V$21152$U0r&n) (g$cadr$13175$U0r&n g$C$21151$U0r&n g$V$21152$U0r&n))) g$x$13344$U0r&n)))))) (library-letrec*-identity 'g$caddr$13181$U0r&n))) (g$cdaar$13182$U0r&n g$cdaar$13513$U0r&n ((case-lambda ((g$C$21593$U0r&n) (g$C$21593$U0r&n (case-lambda ((g$C$21153$U0r&n g$x$13345$U0r&n) (car (case-lambda ((g$V$21154$U0r&n) (g$cdar$13176$U0r&n g$C$21153$U0r&n g$V$21154$U0r&n))) g$x$13345$U0r&n)))))) (library-letrec*-identity 'g$cdaar$13182$U0r&n))) (g$cdadr$13183$U0r&n g$cdadr$13514$U0r&n ((case-lambda ((g$C$21594$U0r&n) (g$C$21594$U0r&n (case-lambda ((g$C$21155$U0r&n g$x$13346$U0r&n) (cdr (case-lambda ((g$V$21156$U0r&n) (g$cdar$13176$U0r&n g$C$21155$U0r&n g$V$21156$U0r&n))) g$x$13346$U0r&n)))))) (library-letrec*-identity 'g$cdadr$13183$U0r&n))) (g$cddar$13184$U0r&n g$cddar$13515$U0r&n ((case-lambda ((g$C$21595$U0r&n) (g$C$21595$U0r&n (case-lambda ((g$C$21157$U0r&n g$x$13347$U0r&n) (car (case-lambda ((g$V$21158$U0r&n) (g$cddr$13177$U0r&n g$C$21157$U0r&n g$V$21158$U0r&n))) g$x$13347$U0r&n)))))) (library-letrec*-identity 'g$cddar$13184$U0r&n))) (g$cdddr$13185$U0r&n g$cdddr$13516$U0r&n ((case-lambda ((g$C$21596$U0r&n) (g$C$21596$U0r&n (case-lambda ((g$C$21159$U0r&n g$x$13348$U0r&n) (cdr (case-lambda ((g$V$21160$U0r&n) (g$cddr$13177$U0r&n g$C$21159$U0r&n g$V$21160$U0r&n))) g$x$13348$U0r&n)))))) (library-letrec*-identity 'g$cdddr$13185$U0r&n))) (g$caaaar$13186$U0r&n g$caaaar$13517$U0r&n ((case-lambda ((g$C$21597$U0r&n) (g$C$21597$U0r&n (case-lambda ((g$C$21161$U0r&n g$x$13349$U0r&n) (car (case-lambda ((g$V$21162$U0r&n) (g$caaar$13178$U0r&n g$C$21161$U0r&n g$V$21162$U0r&n))) g$x$13349$U0r&n)))))) (library-letrec*-identity 'g$caaaar$13186$U0r&n))) (g$caaadr$13187$U0r&n g$caaadr$13518$U0r&n ((case-lambda ((g$C$21598$U0r&n) (g$C$21598$U0r&n (case-lambda ((g$C$21163$U0r&n g$x$13350$U0r&n) (cdr (case-lambda ((g$V$21164$U0r&n) (g$caaar$13178$U0r&n g$C$21163$U0r&n g$V$21164$U0r&n))) g$x$13350$U0r&n)))))) (library-letrec*-identity 'g$caaadr$13187$U0r&n))) (g$caadar$13188$U0r&n g$caadar$13519$U0r&n ((case-lambda ((g$C$21599$U0r&n) (g$C$21599$U0r&n (case-lambda ((g$C$21165$U0r&n g$x$13351$U0r&n) (car (case-lambda ((g$V$21166$U0r&n) (g$caadr$13179$U0r&n g$C$21165$U0r&n g$V$21166$U0r&n))) g$x$13351$U0r&n)))))) (library-letrec*-identity 'g$caadar$13188$U0r&n))) (g$caaddr$13189$U0r&n g$caaddr$13520$U0r&n ((case-lambda ((g$C$21600$U0r&n) (g$C$21600$U0r&n (case-lambda ((g$C$21167$U0r&n g$x$13352$U0r&n) (cdr (case-lambda ((g$V$21168$U0r&n) (g$caadr$13179$U0r&n g$C$21167$U0r&n g$V$21168$U0r&n))) g$x$13352$U0r&n)))))) (library-letrec*-identity 'g$caaddr$13189$U0r&n))) (g$cadaar$13190$U0r&n g$cadaar$13521$U0r&n ((case-lambda ((g$C$21601$U0r&n) (g$C$21601$U0r&n (case-lambda ((g$C$21169$U0r&n g$x$13353$U0r&n) (car (case-lambda ((g$V$21170$U0r&n) (g$cadar$13180$U0r&n g$C$21169$U0r&n g$V$21170$U0r&n))) g$x$13353$U0r&n)))))) (library-letrec*-identity 'g$cadaar$13190$U0r&n))) (g$cadadr$13191$U0r&n g$cadadr$13522$U0r&n ((case-lambda ((g$C$21602$U0r&n) (g$C$21602$U0r&n (case-lambda ((g$C$21171$U0r&n g$x$13354$U0r&n) (cdr (case-lambda ((g$V$21172$U0r&n) (g$cadar$13180$U0r&n g$C$21171$U0r&n g$V$21172$U0r&n))) g$x$13354$U0r&n)))))) (library-letrec*-identity 'g$cadadr$13191$U0r&n))) (g$caddar$13192$U0r&n g$caddar$13523$U0r&n ((case-lambda ((g$C$21603$U0r&n) (g$C$21603$U0r&n (case-lambda ((g$C$21173$U0r&n g$x$13355$U0r&n) (car (case-lambda ((g$V$21174$U0r&n) (g$caddr$13181$U0r&n g$C$21173$U0r&n g$V$21174$U0r&n))) g$x$13355$U0r&n)))))) (library-letrec*-identity 'g$caddar$13192$U0r&n))) (g$cadddr$13193$U0r&n g$cadddr$13524$U0r&n ((case-lambda ((g$C$21604$U0r&n) (g$C$21604$U0r&n (case-lambda ((g$C$21175$U0r&n g$x$13356$U0r&n) (cdr (case-lambda ((g$V$21176$U0r&n) (g$caddr$13181$U0r&n g$C$21175$U0r&n g$V$21176$U0r&n))) g$x$13356$U0r&n)))))) (library-letrec*-identity 'g$cadddr$13193$U0r&n))) (g$cdaaar$13194$U0r&n g$cdaaar$13525$U0r&n ((case-lambda ((g$C$21605$U0r&n) (g$C$21605$U0r&n (case-lambda ((g$C$21177$U0r&n g$x$13357$U0r&n) (car (case-lambda ((g$V$21178$U0r&n) (g$cdaar$13182$U0r&n g$C$21177$U0r&n g$V$21178$U0r&n))) g$x$13357$U0r&n)))))) (library-letrec*-identity 'g$cdaaar$13194$U0r&n))) (g$cdaadr$13195$U0r&n g$cdaadr$13526$U0r&n ((case-lambda ((g$C$21606$U0r&n) (g$C$21606$U0r&n (case-lambda ((g$C$21179$U0r&n g$x$13358$U0r&n) (cdr (case-lambda ((g$V$21180$U0r&n) (g$cdaar$13182$U0r&n g$C$21179$U0r&n g$V$21180$U0r&n))) g$x$13358$U0r&n)))))) (library-letrec*-identity 'g$cdaadr$13195$U0r&n))) (g$cdadar$13196$U0r&n g$cdadar$13527$U0r&n ((case-lambda ((g$C$21607$U0r&n) (g$C$21607$U0r&n (case-lambda ((g$C$21181$U0r&n g$x$13359$U0r&n) (car (case-lambda ((g$V$21182$U0r&n) (g$cdadr$13183$U0r&n g$C$21181$U0r&n g$V$21182$U0r&n))) g$x$13359$U0r&n)))))) (library-letrec*-identity 'g$cdadar$13196$U0r&n))) (g$cdaddr$13197$U0r&n g$cdaddr$13528$U0r&n ((case-lambda ((g$C$21608$U0r&n) (g$C$21608$U0r&n (case-lambda ((g$C$21183$U0r&n g$x$13360$U0r&n) (cdr (case-lambda ((g$V$21184$U0r&n) (g$cdadr$13183$U0r&n g$C$21183$U0r&n g$V$21184$U0r&n))) g$x$13360$U0r&n)))))) (library-letrec*-identity 'g$cdaddr$13197$U0r&n))) (g$cddaar$13198$U0r&n g$cddaar$13529$U0r&n ((case-lambda ((g$C$21609$U0r&n) (g$C$21609$U0r&n (case-lambda ((g$C$21185$U0r&n g$x$13361$U0r&n) (car (case-lambda ((g$V$21186$U0r&n) (g$cddar$13184$U0r&n g$C$21185$U0r&n g$V$21186$U0r&n))) g$x$13361$U0r&n)))))) (library-letrec*-identity 'g$cddaar$13198$U0r&n))) (g$cddadr$13199$U0r&n g$cddadr$13530$U0r&n ((case-lambda ((g$C$21610$U0r&n) (g$C$21610$U0r&n (case-lambda ((g$C$21187$U0r&n g$x$13362$U0r&n) (cdr (case-lambda ((g$V$21188$U0r&n) (g$cddar$13184$U0r&n g$C$21187$U0r&n g$V$21188$U0r&n))) g$x$13362$U0r&n)))))) (library-letrec*-identity 'g$cddadr$13199$U0r&n))) (g$cdddar$13200$U0r&n g$cdddar$13531$U0r&n ((case-lambda ((g$C$21611$U0r&n) (g$C$21611$U0r&n (case-lambda ((g$C$21189$U0r&n g$x$13363$U0r&n) (car (case-lambda ((g$V$21190$U0r&n) (g$cdddr$13185$U0r&n g$C$21189$U0r&n g$V$21190$U0r&n))) g$x$13363$U0r&n)))))) (library-letrec*-identity 'g$cdddar$13200$U0r&n))) (g$cddddr$13201$U0r&n g$cddddr$13532$U0r&n ((case-lambda ((g$C$21612$U0r&n) (g$C$21612$U0r&n (case-lambda ((g$C$21191$U0r&n g$x$13364$U0r&n) (cdr (case-lambda ((g$V$21192$U0r&n) (g$cdddr$13185$U0r&n g$C$21191$U0r&n g$V$21192$U0r&n))) g$x$13364$U0r&n)))))) (library-letrec*-identity 'g$cddddr$13201$U0r&n))) (g$positive?$13202$U0r&n g$positive?$13533$U0r&n ((case-lambda ((g$C$21613$U0r&n) (g$C$21613$U0r&n (case-lambda ((g$C$21193$U0r&n g$r$13365$U0r&n) ((case-lambda ((g$J$21195$U0r&n) (real-valued? (case-lambda ((g$V$21196$U0r&n) (not (case-lambda ((g$T$21197$U0r&n) (if g$T$21197$U0r&n (g$assertion-violation$13786$U0r&n g$J$21195$U0r&n 'positive? '"not a real" g$r$13365$U0r&n) (void g$J$21195$U0r&n)))) g$V$21196$U0r&n))) g$r$13365$U0r&n))) (case-lambda (g$IGNORE$21194$U0r&n (< g$C$21193$U0r&n '0 g$r$13365$U0r&n))))))))) (library-letrec*-identity 'g$positive?$13202$U0r&n))) (g$negative?$13203$U0r&n g$negative?$13534$U0r&n ((case-lambda ((g$C$21614$U0r&n) (g$C$21614$U0r&n (case-lambda ((g$C$21198$U0r&n g$r$13366$U0r&n) ((case-lambda ((g$J$21200$U0r&n) (real-valued? (case-lambda ((g$V$21201$U0r&n) (not (case-lambda ((g$T$21202$U0r&n) (if g$T$21202$U0r&n (g$assertion-violation$13786$U0r&n g$J$21200$U0r&n 'negative? '"not a real" g$r$13366$U0r&n) (void g$J$21200$U0r&n)))) g$V$21201$U0r&n))) g$r$13366$U0r&n))) (case-lambda (g$IGNORE$21199$U0r&n (> g$C$21198$U0r&n '0 g$r$13366$U0r&n))))))))) (library-letrec*-identity 'g$negative?$13203$U0r&n))) (g$zero?$13204$U0r&n g$zero?$13535$U0r&n ((case-lambda ((g$C$21615$U0r&n) (g$C$21615$U0r&n (case-lambda ((g$C$21203$U0r&n g$z$13367$U0r&n) ((case-lambda ((g$J$21205$U0r&n) (number? (case-lambda ((g$V$21206$U0r&n) (not (case-lambda ((g$T$21207$U0r&n) (if g$T$21207$U0r&n (g$assertion-violation$13786$U0r&n g$J$21205$U0r&n 'zero? '"not a number" g$z$13367$U0r&n) (void g$J$21205$U0r&n)))) g$V$21206$U0r&n))) g$z$13367$U0r&n))) (case-lambda (g$IGNORE$21204$U0r&n (= g$C$21203$U0r&n '0 g$z$13367$U0r&n))))))))) (library-letrec*-identity 'g$zero?$13204$U0r&n))) (g$even?$13205$U0r&n g$even?$13536$U0r&n ((case-lambda ((g$C$21616$U0r&n) (g$C$21616$U0r&n (case-lambda ((g$C$21208$U0r&n g$n$13368$U0r&n) ((case-lambda ((g$J$21211$U0r&n) (integer-valued? (case-lambda ((g$V$21212$U0r&n) (not (case-lambda ((g$T$21213$U0r&n) (if g$T$21213$U0r&n (g$assertion-violation$13786$U0r&n g$J$21211$U0r&n 'even? '"not a integer" g$n$13368$U0r&n) (void g$J$21211$U0r&n)))) g$V$21212$U0r&n))) g$n$13368$U0r&n))) (case-lambda (g$IGNORE$21209$U0r&n (g$mod$13156$U0r&n (case-lambda ((g$V$21210$U0r&n) (= g$C$21208$U0r&n '0 g$V$21210$U0r&n))) g$n$13368$U0r&n '2))))))))) (library-letrec*-identity 'g$even?$13205$U0r&n))) (g$odd?$13206$U0r&n g$odd?$13537$U0r&n ((case-lambda ((g$C$21617$U0r&n) (g$C$21617$U0r&n (case-lambda ((g$C$21214$U0r&n g$n$13369$U0r&n) ((case-lambda ((g$J$21217$U0r&n) (integer-valued? (case-lambda ((g$V$21218$U0r&n) (not (case-lambda ((g$T$21219$U0r&n) (if g$T$21219$U0r&n (g$assertion-violation$13786$U0r&n g$J$21217$U0r&n 'odd? '"not a integer" g$n$13369$U0r&n) (void g$J$21217$U0r&n)))) g$V$21218$U0r&n))) g$n$13369$U0r&n))) (case-lambda (g$IGNORE$21215$U0r&n (g$mod$13156$U0r&n (case-lambda ((g$V$21216$U0r&n) (= g$C$21214$U0r&n '1 g$V$21216$U0r&n))) g$n$13369$U0r&n '2))))))))) (library-letrec*-identity 'g$odd?$13206$U0r&n))) (g$max$13207$U0r&n g$max$13538$U0r&n ((case-lambda ((g$C$21618$U0r&n) (g$C$21618$U0r&n (case-lambda ((g$C$21228$U0r&n g$a$13370$U0r&n . g$rest$13371$U0r&n) ((case-lambda ((g$J$21230$U0r&n) (real-valued? (case-lambda ((g$V$21231$U0r&n) (not (case-lambda ((g$T$21232$U0r&n) (if g$T$21232$U0r&n (g$assertion-violation$13786$U0r&n g$J$21230$U0r&n 'max '"not a real" g$a$13370$U0r&n) (void g$J$21230$U0r&n)))) g$V$21231$U0r&n))) g$a$13370$U0r&n))) (case-lambda (g$IGNORE$21229$U0r&n (g$fold-left$12756$U0r&n g$C$21228$U0r&n (case-lambda ((g$C$21224$U0r&n g$a$13372$U0r&n g$b$13373$U0r&n) ((case-lambda ((g$J$21226$U0r&n) (< (case-lambda ((g$T$21227$U0r&n) (if g$T$21227$U0r&n (g$J$21226$U0r&n g$b$13373$U0r&n) (g$J$21226$U0r&n g$a$13372$U0r&n)))) g$a$13372$U0r&n g$b$13373$U0r&n))) (case-lambda ((g$V$21225$U0r&n) ((case-lambda ((g$C$21221$U0r&n g$r$13374$U0r&n) (inexact? (case-lambda ((g$V$21222$U0r&n) ((case-lambda ((g$C$21220$U0r&n g$t$13375$U0r&n) (if g$t$13375$U0r&n (g$C$21220$U0r&n g$t$13375$U0r&n) (inexact? g$C$21220$U0r&n g$b$13373$U0r&n)))) (case-lambda ((g$T$21223$U0r&n) (if g$T$21223$U0r&n (inexact g$C$21221$U0r&n g$r$13374$U0r&n) (g$C$21221$U0r&n g$r$13374$U0r&n)))) g$V$21222$U0r&n))) g$a$13372$U0r&n))) g$C$21224$U0r&n g$V$21225$U0r&n)))))) g$a$13370$U0r&n g$rest$13371$U0r&n))))))))) (library-letrec*-identity 'g$max$13207$U0r&n))) (g$min$13208$U0r&n g$min$13539$U0r&n ((case-lambda ((g$C$21619$U0r&n) (g$C$21619$U0r&n (case-lambda ((g$C$21241$U0r&n g$a$13376$U0r&n . g$rest$13377$U0r&n) ((case-lambda ((g$J$21243$U0r&n) (real-valued? (case-lambda ((g$V$21244$U0r&n) (not (case-lambda ((g$T$21245$U0r&n) (if g$T$21245$U0r&n (g$assertion-violation$13786$U0r&n g$J$21243$U0r&n 'min '"not a real" g$a$13376$U0r&n) (void g$J$21243$U0r&n)))) g$V$21244$U0r&n))) g$a$13376$U0r&n))) (case-lambda (g$IGNORE$21242$U0r&n (g$fold-left$12756$U0r&n g$C$21241$U0r&n (case-lambda ((g$C$21237$U0r&n g$a$13378$U0r&n g$b$13379$U0r&n) ((case-lambda ((g$J$21239$U0r&n) (> (case-lambda ((g$T$21240$U0r&n) (if g$T$21240$U0r&n (g$J$21239$U0r&n g$b$13379$U0r&n) (g$J$21239$U0r&n g$a$13378$U0r&n)))) g$a$13378$U0r&n g$b$13379$U0r&n))) (case-lambda ((g$V$21238$U0r&n) ((case-lambda ((g$C$21234$U0r&n g$r$13380$U0r&n) (inexact? (case-lambda ((g$V$21235$U0r&n) ((case-lambda ((g$C$21233$U0r&n g$t$13381$U0r&n) (if g$t$13381$U0r&n (g$C$21233$U0r&n g$t$13381$U0r&n) (inexact? g$C$21233$U0r&n g$b$13379$U0r&n)))) (case-lambda ((g$T$21236$U0r&n) (if g$T$21236$U0r&n (inexact g$C$21234$U0r&n g$r$13380$U0r&n) (g$C$21234$U0r&n g$r$13380$U0r&n)))) g$V$21235$U0r&n))) g$a$13378$U0r&n))) g$C$21237$U0r&n g$V$21238$U0r&n)))))) g$a$13376$U0r&n g$rest$13377$U0r&n))))))))) (library-letrec*-identity 'g$min$13208$U0r&n))) (g$gcd$13209$U0r&n g$gcd$13540$U0r&n ((case-lambda ((g$C$21620$U0r&n) (g$C$21620$U0r&n (case-lambda ((g$C$21273$U0r&n . g$nums$13382$U0r&n) (length (case-lambda ((g$V$21274$U0r&n) ((case-lambda ((g$C$21263$U0r&n g$t$13383$U0r&n) (eqv? (case-lambda ((g$T$21264$U0r&n) (if g$T$21264$U0r&n (g$C$21263$U0r&n '0) (eqv? (case-lambda ((g$T$21265$U0r&n) (if g$T$21265$U0r&n (car (case-lambda ((g$V$21266$U0r&n) ((case-lambda ((g$C$21246$U0r&n g$n$13384$U0r&n) ((case-lambda ((g$J$21248$U0r&n) (integer-valued? (case-lambda ((g$V$21249$U0r&n) (not (case-lambda ((g$T$21250$U0r&n) (if g$T$21250$U0r&n (g$assertion-violation$13786$U0r&n g$J$21248$U0r&n 'gcd '"not an integer" g$n$13384$U0r&n) (void g$J$21248$U0r&n)))) g$V$21249$U0r&n))) g$n$13384$U0r&n))) (case-lambda (g$IGNORE$21247$U0r&n (abs g$C$21246$U0r&n g$n$13384$U0r&n)))))) g$C$21263$U0r&n g$V$21266$U0r&n))) g$nums$13382$U0r&n) (eqv? (case-lambda ((g$T$21267$U0r&n) (if g$T$21267$U0r&n (g$cadr$13175$U0r&n (case-lambda ((g$V$21268$U0r&n) (car (case-lambda ((g$V$21269$U0r&n) ((case-lambda ((g$C$21251$U0r&n g$a$13385$U0r&n g$b$13386$U0r&n) ((case-lambda ((g$J$21260$U0r&n) (integer-valued? (case-lambda ((g$V$21261$U0r&n) (not (case-lambda ((g$T$21262$U0r&n) (if g$T$21262$U0r&n (g$assertion-violation$13786$U0r&n g$J$21260$U0r&n 'gcd '"not an integer" g$a$13385$U0r&n) (void g$J$21260$U0r&n)))) g$V$21261$U0r&n))) g$a$13385$U0r&n))) (case-lambda (g$IGNORE$21252$U0r&n ((case-lambda ((g$J$21257$U0r&n) (integer-valued? (case-lambda ((g$V$21258$U0r&n) (not (case-lambda ((g$T$21259$U0r&n) (if g$T$21259$U0r&n (g$assertion-violation$13786$U0r&n g$J$21257$U0r&n 'gcd '"not an integer" g$b$13386$U0r&n) (void g$J$21257$U0r&n)))) g$V$21258$U0r&n))) g$b$13386$U0r&n))) (case-lambda (g$IGNORE$21253$U0r&n (g$zero?$13204$U0r&n (case-lambda ((g$T$21254$U0r&n) (if g$T$21254$U0r&n (abs g$C$21251$U0r&n g$a$13385$U0r&n) (g$mod$13156$U0r&n (case-lambda ((g$V$21255$U0r&n) (g$gcd$13209$U0r&n (case-lambda ((g$V$21256$U0r&n) (abs g$C$21251$U0r&n g$V$21256$U0r&n))) g$b$13386$U0r&n g$V$21255$U0r&n))) g$a$13385$U0r&n g$b$13386$U0r&n)))) g$b$13386$U0r&n))))))))) g$C$21263$U0r&n g$V$21269$U0r&n g$V$21268$U0r&n))) g$nums$13382$U0r&n))) g$nums$13382$U0r&n) (cdr (case-lambda ((g$V$21270$U0r&n) (car (case-lambda ((g$V$21271$U0r&n) (abs (case-lambda ((g$V$21272$U0r&n) (g$fold-left$12756$U0r&n g$C$21263$U0r&n g$gcd$13209$U0r&n g$V$21272$U0r&n g$V$21270$U0r&n))) g$V$21271$U0r&n))) g$nums$13382$U0r&n))) g$nums$13382$U0r&n)))) g$t$13383$U0r&n '2)))) g$t$13383$U0r&n '1)))) g$t$13383$U0r&n '0))) g$C$21273$U0r&n g$V$21274$U0r&n))) g$nums$13382$U0r&n)))))) (library-letrec*-identity 'g$gcd$13209$U0r&n))) (g$lcm$13210$U0r&n g$lcm$13541$U0r&n ((case-lambda ((g$C$21621$U0r&n) (g$C$21621$U0r&n (case-lambda ((g$C$21305$U0r&n . g$nums$13387$U0r&n) (length (case-lambda ((g$V$21306$U0r&n) ((case-lambda ((g$C$21295$U0r&n g$t$13388$U0r&n) (eqv? (case-lambda ((g$T$21296$U0r&n) (if g$T$21296$U0r&n (g$C$21295$U0r&n '1) (eqv? (case-lambda ((g$T$21297$U0r&n) (if g$T$21297$U0r&n (car (case-lambda ((g$V$21298$U0r&n) ((case-lambda ((g$C$21275$U0r&n g$n$13389$U0r&n) ((case-lambda ((g$J$21277$U0r&n) (integer-valued? (case-lambda ((g$V$21278$U0r&n) (not (case-lambda ((g$T$21279$U0r&n) (if g$T$21279$U0r&n (g$assertion-violation$13786$U0r&n g$J$21277$U0r&n 'lcm '"not an integer" g$n$13389$U0r&n) (void g$J$21277$U0r&n)))) g$V$21278$U0r&n))) g$n$13389$U0r&n))) (case-lambda (g$IGNORE$21276$U0r&n (abs g$C$21275$U0r&n g$n$13389$U0r&n)))))) g$C$21295$U0r&n g$V$21298$U0r&n))) g$nums$13387$U0r&n) (eqv? (case-lambda ((g$T$21299$U0r&n) (if g$T$21299$U0r&n (g$cadr$13175$U0r&n (case-lambda ((g$V$21300$U0r&n) (car (case-lambda ((g$V$21301$U0r&n) ((case-lambda ((g$C$21281$U0r&n g$a$13390$U0r&n g$b$13391$U0r&n) ((case-lambda ((g$J$21292$U0r&n) (integer-valued? (case-lambda ((g$V$21293$U0r&n) (not (case-lambda ((g$T$21294$U0r&n) (if g$T$21294$U0r&n (g$assertion-violation$13786$U0r&n g$J$21292$U0r&n 'lcm '"not an integer" g$a$13390$U0r&n) (void g$J$21292$U0r&n)))) g$V$21293$U0r&n))) g$a$13390$U0r&n))) (case-lambda (g$IGNORE$21282$U0r&n ((case-lambda ((g$J$21289$U0r&n) (integer-valued? (case-lambda ((g$V$21290$U0r&n) (not (case-lambda ((g$T$21291$U0r&n) (if g$T$21291$U0r&n (g$assertion-violation$13786$U0r&n g$J$21289$U0r&n 'lcm '"not an integer" g$b$13391$U0r&n) (void g$J$21289$U0r&n)))) g$V$21290$U0r&n))) g$b$13391$U0r&n))) (case-lambda (g$IGNORE$21283$U0r&n (g$zero?$13204$U0r&n (case-lambda ((g$V$21284$U0r&n) ((case-lambda ((g$C$21280$U0r&n g$t$13392$U0r&n) (if g$t$13392$U0r&n (g$C$21280$U0r&n g$t$13392$U0r&n) (g$zero?$13204$U0r&n g$C$21280$U0r&n g$b$13391$U0r&n)))) (case-lambda ((g$T$21285$U0r&n) (if g$T$21285$U0r&n (g$C$21281$U0r&n '0) (g$gcd$13209$U0r&n (case-lambda ((g$V$21286$U0r&n) (/ (case-lambda ((g$V$21287$U0r&n) (* (case-lambda ((g$V$21288$U0r&n) (abs g$C$21281$U0r&n g$V$21288$U0r&n))) g$V$21287$U0r&n g$b$13391$U0r&n))) g$a$13390$U0r&n g$V$21286$U0r&n))) g$a$13390$U0r&n g$b$13391$U0r&n)))) g$V$21284$U0r&n))) g$a$13390$U0r&n))))))))) g$C$21295$U0r&n g$V$21301$U0r&n g$V$21300$U0r&n))) g$nums$13387$U0r&n))) g$nums$13387$U0r&n) (cdr (case-lambda ((g$V$21302$U0r&n) (car (case-lambda ((g$V$21303$U0r&n) (abs (case-lambda ((g$V$21304$U0r&n) (g$fold-left$12756$U0r&n g$C$21295$U0r&n g$lcm$13210$U0r&n g$V$21304$U0r&n g$V$21302$U0r&n))) g$V$21303$U0r&n))) g$nums$13387$U0r&n))) g$nums$13387$U0r&n)))) g$t$13388$U0r&n '2)))) g$t$13388$U0r&n '1)))) g$t$13388$U0r&n '0))) g$C$21305$U0r&n g$V$21306$U0r&n))) g$nums$13387$U0r&n)))))) (library-letrec*-identity 'g$lcm$13210$U0r&n))) (g$string=?$13251$U0r&n g$string=?$13542$U0r&n ((case-lambda ((g$C$21622$U0r&n) (g$C$21622$U0r&n (case-lambda ((g$C$21315$U0r&n g$a$13393$U0r&n g$b$13394$U0r&n . g$rest$13395$U0r&n) ((case-lambda ((g$J$21318$U0r&n) (string? (case-lambda ((g$V$21319$U0r&n) (not (case-lambda ((g$T$21320$U0r&n) (if g$T$21320$U0r&n (g$assertion-violation$13786$U0r&n g$J$21318$U0r&n 'string=? '"not a string" g$a$13393$U0r&n) (void g$J$21318$U0r&n)))) g$V$21319$U0r&n))) g$a$13393$U0r&n))) (case-lambda (g$IGNORE$21316$U0r&n (cons (case-lambda ((g$V$21317$U0r&n) (g$for-all$12751$U0r&n g$C$21315$U0r&n (case-lambda ((g$C$21308$U0r&n g$x$13396$U0r&n) ((case-lambda ((g$J$21312$U0r&n) (string? (case-lambda ((g$V$21313$U0r&n) (not (case-lambda ((g$T$21314$U0r&n) (if g$T$21314$U0r&n (g$assertion-violation$13786$U0r&n g$J$21312$U0r&n 'string=? '"not a string" g$x$13396$U0r&n) (void g$J$21312$U0r&n)))) g$V$21313$U0r&n))) g$x$13396$U0r&n))) (case-lambda (g$IGNORE$21309$U0r&n (string-compare (case-lambda ((g$V$21310$U0r&n) (fx=? (case-lambda ((g$V$21311$U0r&n) ((case-lambda ((g$C$21307$U0r&n g$r$13397$U0r&n) (begin (set! g$a$13393$U0r&n g$x$13396$U0r&n) (g$C$21307$U0r&n g$r$13397$U0r&n)))) g$C$21308$U0r&n g$V$21311$U0r&n))) g$V$21310$U0r&n '0))) g$a$13393$U0r&n g$x$13396$U0r&n)))))) g$V$21317$U0r&n))) g$b$13394$U0r&n g$rest$13395$U0r&n))))))))) (library-letrec*-identity 'g$string=?$13251$U0r&n))) (g$string<?$13252$U0r&n g$string<?$13543$U0r&n ((case-lambda ((g$C$21623$U0r&n) (g$C$21623$U0r&n (case-lambda ((g$C$21329$U0r&n g$a$13398$U0r&n g$b$13399$U0r&n . g$rest$13400$U0r&n) ((case-lambda ((g$J$21332$U0r&n) (string? (case-lambda ((g$V$21333$U0r&n) (not (case-lambda ((g$T$21334$U0r&n) (if g$T$21334$U0r&n (g$assertion-violation$13786$U0r&n g$J$21332$U0r&n 'string<? '"not a string" g$a$13398$U0r&n) (void g$J$21332$U0r&n)))) g$V$21333$U0r&n))) g$a$13398$U0r&n))) (case-lambda (g$IGNORE$21330$U0r&n (cons (case-lambda ((g$V$21331$U0r&n) (g$for-all$12751$U0r&n g$C$21329$U0r&n (case-lambda ((g$C$21322$U0r&n g$x$13401$U0r&n) ((case-lambda ((g$J$21326$U0r&n) (string? (case-lambda ((g$V$21327$U0r&n) (not (case-lambda ((g$T$21328$U0r&n) (if g$T$21328$U0r&n (g$assertion-violation$13786$U0r&n g$J$21326$U0r&n 'string<? '"not a string" g$x$13401$U0r&n) (void g$J$21326$U0r&n)))) g$V$21327$U0r&n))) g$x$13401$U0r&n))) (case-lambda (g$IGNORE$21323$U0r&n (string-compare (case-lambda ((g$V$21324$U0r&n) (fx<? (case-lambda ((g$V$21325$U0r&n) ((case-lambda ((g$C$21321$U0r&n g$r$13402$U0r&n) (begin (set! g$a$13398$U0r&n g$x$13401$U0r&n) (g$C$21321$U0r&n g$r$13402$U0r&n)))) g$C$21322$U0r&n g$V$21325$U0r&n))) g$V$21324$U0r&n '0))) g$a$13398$U0r&n g$x$13401$U0r&n)))))) g$V$21331$U0r&n))) g$b$13399$U0r&n g$rest$13400$U0r&n))))))))) (library-letrec*-identity 'g$string<?$13252$U0r&n))) (g$string>?$13253$U0r&n g$string>?$13544$U0r&n ((case-lambda ((g$C$21624$U0r&n) (g$C$21624$U0r&n (case-lambda ((g$C$21343$U0r&n g$a$13403$U0r&n g$b$13404$U0r&n . g$rest$13405$U0r&n) ((case-lambda ((g$J$21346$U0r&n) (string? (case-lambda ((g$V$21347$U0r&n) (not (case-lambda ((g$T$21348$U0r&n) (if g$T$21348$U0r&n (g$assertion-violation$13786$U0r&n g$J$21346$U0r&n 'string>? '"not a string" g$a$13403$U0r&n) (void g$J$21346$U0r&n)))) g$V$21347$U0r&n))) g$a$13403$U0r&n))) (case-lambda (g$IGNORE$21344$U0r&n (cons (case-lambda ((g$V$21345$U0r&n) (g$for-all$12751$U0r&n g$C$21343$U0r&n (case-lambda ((g$C$21336$U0r&n g$x$13406$U0r&n) ((case-lambda ((g$J$21340$U0r&n) (string? (case-lambda ((g$V$21341$U0r&n) (not (case-lambda ((g$T$21342$U0r&n) (if g$T$21342$U0r&n (g$assertion-violation$13786$U0r&n g$J$21340$U0r&n 'string>? '"not a string" g$x$13406$U0r&n) (void g$J$21340$U0r&n)))) g$V$21341$U0r&n))) g$x$13406$U0r&n))) (case-lambda (g$IGNORE$21337$U0r&n (string-compare (case-lambda ((g$V$21338$U0r&n) (fx>? (case-lambda ((g$V$21339$U0r&n) ((case-lambda ((g$C$21335$U0r&n g$r$13407$U0r&n) (begin (set! g$a$13403$U0r&n g$x$13406$U0r&n) (g$C$21335$U0r&n g$r$13407$U0r&n)))) g$C$21336$U0r&n g$V$21339$U0r&n))) g$V$21338$U0r&n '0))) g$a$13403$U0r&n g$x$13406$U0r&n)))))) g$V$21345$U0r&n))) g$b$13404$U0r&n g$rest$13405$U0r&n))))))))) (library-letrec*-identity 'g$string>?$13253$U0r&n))) (g$string<=?$13254$U0r&n g$string<=?$13545$U0r&n ((case-lambda ((g$C$21625$U0r&n) (g$C$21625$U0r&n (case-lambda ((g$C$21357$U0r&n g$a$13408$U0r&n g$b$13409$U0r&n . g$rest$13410$U0r&n) ((case-lambda ((g$J$21360$U0r&n) (string? (case-lambda ((g$V$21361$U0r&n) (not (case-lambda ((g$T$21362$U0r&n) (if g$T$21362$U0r&n (g$assertion-violation$13786$U0r&n g$J$21360$U0r&n 'string<=? '"not a string" g$a$13408$U0r&n) (void g$J$21360$U0r&n)))) g$V$21361$U0r&n))) g$a$13408$U0r&n))) (case-lambda (g$IGNORE$21358$U0r&n (cons (case-lambda ((g$V$21359$U0r&n) (g$for-all$12751$U0r&n g$C$21357$U0r&n (case-lambda ((g$C$21350$U0r&n g$x$13411$U0r&n) ((case-lambda ((g$J$21354$U0r&n) (string? (case-lambda ((g$V$21355$U0r&n) (not (case-lambda ((g$T$21356$U0r&n) (if g$T$21356$U0r&n (g$assertion-violation$13786$U0r&n g$J$21354$U0r&n 'string<=? '"not a string" g$x$13411$U0r&n) (void g$J$21354$U0r&n)))) g$V$21355$U0r&n))) g$x$13411$U0r&n))) (case-lambda (g$IGNORE$21351$U0r&n (string-compare (case-lambda ((g$V$21352$U0r&n) (fx<=? (case-lambda ((g$V$21353$U0r&n) ((case-lambda ((g$C$21349$U0r&n g$r$13412$U0r&n) (begin (set! g$a$13408$U0r&n g$x$13411$U0r&n) (g$C$21349$U0r&n g$r$13412$U0r&n)))) g$C$21350$U0r&n g$V$21353$U0r&n))) g$V$21352$U0r&n '0))) g$a$13408$U0r&n g$x$13411$U0r&n)))))) g$V$21359$U0r&n))) g$b$13409$U0r&n g$rest$13410$U0r&n))))))))) (library-letrec*-identity 'g$string<=?$13254$U0r&n))) (g$string>=?$13255$U0r&n g$string>=?$13546$U0r&n ((case-lambda ((g$C$21626$U0r&n) (g$C$21626$U0r&n (case-lambda ((g$C$21371$U0r&n g$a$13413$U0r&n g$b$13414$U0r&n . g$rest$13415$U0r&n) ((case-lambda ((g$J$21374$U0r&n) (string? (case-lambda ((g$V$21375$U0r&n) (not (case-lambda ((g$T$21376$U0r&n) (if g$T$21376$U0r&n (g$assertion-violation$13786$U0r&n g$J$21374$U0r&n 'string>=? '"not a string" g$a$13413$U0r&n) (void g$J$21374$U0r&n)))) g$V$21375$U0r&n))) g$a$13413$U0r&n))) (case-lambda (g$IGNORE$21372$U0r&n (cons (case-lambda ((g$V$21373$U0r&n) (g$for-all$12751$U0r&n g$C$21371$U0r&n (case-lambda ((g$C$21364$U0r&n g$x$13416$U0r&n) ((case-lambda ((g$J$21368$U0r&n) (string? (case-lambda ((g$V$21369$U0r&n) (not (case-lambda ((g$T$21370$U0r&n) (if g$T$21370$U0r&n (g$assertion-violation$13786$U0r&n g$J$21368$U0r&n 'string>=? '"not a string" g$x$13416$U0r&n) (void g$J$21368$U0r&n)))) g$V$21369$U0r&n))) g$x$13416$U0r&n))) (case-lambda (g$IGNORE$21365$U0r&n (string-compare (case-lambda ((g$V$21366$U0r&n) (fx>=? (case-lambda ((g$V$21367$U0r&n) ((case-lambda ((g$C$21363$U0r&n g$r$13417$U0r&n) (begin (set! g$a$13413$U0r&n g$x$13416$U0r&n) (g$C$21363$U0r&n g$r$13417$U0r&n)))) g$C$21364$U0r&n g$V$21367$U0r&n))) g$V$21366$U0r&n '0))) g$a$13413$U0r&n g$x$13416$U0r&n)))))) g$V$21373$U0r&n))) g$b$13414$U0r&n g$rest$13415$U0r&n))))))))) (library-letrec*-identity 'g$string>=?$13255$U0r&n))) (g$symbol=?$13256$U0r&n g$symbol=?$13547$U0r&n ((case-lambda ((g$C$21627$U0r&n) (g$C$21627$U0r&n (case-lambda ((g$C$21382$U0r&n g$a$13418$U0r&n g$b$13419$U0r&n . g$rest$13420$U0r&n) ((case-lambda ((g$J$21385$U0r&n) (g$symbol?$13165$U0r&n (case-lambda ((g$V$21386$U0r&n) (not (case-lambda ((g$T$21387$U0r&n) (if g$T$21387$U0r&n (g$assertion-violation$13786$U0r&n g$J$21385$U0r&n 'symbol=? '"not a symbol" g$a$13418$U0r&n) (void g$J$21385$U0r&n)))) g$V$21386$U0r&n))) g$a$13418$U0r&n))) (case-lambda (g$IGNORE$21383$U0r&n (cons (case-lambda ((g$V$21384$U0r&n) (g$for-all$12751$U0r&n g$C$21382$U0r&n (case-lambda ((g$C$21377$U0r&n g$x$13421$U0r&n) ((case-lambda ((g$J$21379$U0r&n) (g$symbol?$13165$U0r&n (case-lambda ((g$V$21380$U0r&n) (not (case-lambda ((g$T$21381$U0r&n) (if g$T$21381$U0r&n (g$assertion-violation$13786$U0r&n g$J$21379$U0r&n 'symbol=? '"not a symbol" g$x$13421$U0r&n) (void g$J$21379$U0r&n)))) g$V$21380$U0r&n))) g$x$13421$U0r&n))) (case-lambda (g$IGNORE$21378$U0r&n (eq? g$C$21377$U0r&n g$a$13418$U0r&n g$x$13421$U0r&n)))))) g$V$21384$U0r&n))) g$b$13419$U0r&n g$rest$13420$U0r&n))))))))) (library-letrec*-identity 'g$symbol=?$13256$U0r&n))) (g$boolean=?$13257$U0r&n g$boolean=?$13548$U0r&n ((case-lambda ((g$C$21628$U0r&n) (g$C$21628$U0r&n (case-lambda ((g$C$21393$U0r&n g$a$13422$U0r&n g$b$13423$U0r&n . g$rest$13424$U0r&n) ((case-lambda ((g$J$21396$U0r&n) (g$boolean?$13166$U0r&n (case-lambda ((g$V$21397$U0r&n) (not (case-lambda ((g$T$21398$U0r&n) (if g$T$21398$U0r&n (g$assertion-violation$13786$U0r&n g$J$21396$U0r&n 'boolean=? '"not a boolean" g$a$13422$U0r&n) (void g$J$21396$U0r&n)))) g$V$21397$U0r&n))) g$a$13422$U0r&n))) (case-lambda (g$IGNORE$21394$U0r&n (cons (case-lambda ((g$V$21395$U0r&n) (g$for-all$12751$U0r&n g$C$21393$U0r&n (case-lambda ((g$C$21388$U0r&n g$x$13425$U0r&n) ((case-lambda ((g$J$21390$U0r&n) (g$boolean?$13166$U0r&n (case-lambda ((g$V$21391$U0r&n) (not (case-lambda ((g$T$21392$U0r&n) (if g$T$21392$U0r&n (g$assertion-violation$13786$U0r&n g$J$21390$U0r&n 'boolean=? '"not a boolean" g$x$13425$U0r&n) (void g$J$21390$U0r&n)))) g$V$21391$U0r&n))) g$x$13425$U0r&n))) (case-lambda (g$IGNORE$21389$U0r&n (eq? g$C$21388$U0r&n g$a$13422$U0r&n g$x$13425$U0r&n)))))) g$V$21395$U0r&n))) g$b$13423$U0r&n g$rest$13424$U0r&n))))))))) (library-letrec*-identity 'g$boolean=?$13257$U0r&n))) (g$char=?$13298$U0r&n g$char=?$13549$U0r&n ((case-lambda ((g$C$21629$U0r&n) (g$C$21629$U0r&n (case-lambda ((g$C$21408$U0r&n g$a$13426$U0r&n g$b$13427$U0r&n . g$rest$13428$U0r&n) ((case-lambda ((g$J$21411$U0r&n) (g$char?$13162$U0r&n (case-lambda ((g$V$21412$U0r&n) (not (case-lambda ((g$T$21413$U0r&n) (if g$T$21413$U0r&n (g$assertion-violation$13786$U0r&n g$J$21411$U0r&n 'char=? '"not a char" g$a$13426$U0r&n) (void g$J$21411$U0r&n)))) g$V$21412$U0r&n))) g$a$13426$U0r&n))) (case-lambda (g$IGNORE$21409$U0r&n (cons (case-lambda ((g$V$21410$U0r&n) (g$for-all$12751$U0r&n g$C$21408$U0r&n (case-lambda ((g$C$21400$U0r&n g$x$13429$U0r&n) ((case-lambda ((g$J$21405$U0r&n) (g$char?$13162$U0r&n (case-lambda ((g$V$21406$U0r&n) (not (case-lambda ((g$T$21407$U0r&n) (if g$T$21407$U0r&n (g$assertion-violation$13786$U0r&n g$J$21405$U0r&n 'char=? '"not a char" g$x$13429$U0r&n) (void g$J$21405$U0r&n)))) g$V$21406$U0r&n))) g$x$13429$U0r&n))) (case-lambda (g$IGNORE$21401$U0r&n (char->integer (case-lambda ((g$V$21402$U0r&n) (char->integer (case-lambda ((g$V$21403$U0r&n) (fx=? (case-lambda ((g$V$21404$U0r&n) ((case-lambda ((g$C$21399$U0r&n g$r$13430$U0r&n) (begin (set! g$a$13426$U0r&n g$x$13429$U0r&n) (g$C$21399$U0r&n g$r$13430$U0r&n)))) g$C$21400$U0r&n g$V$21404$U0r&n))) g$V$21403$U0r&n g$V$21402$U0r&n))) g$a$13426$U0r&n))) g$x$13429$U0r&n)))))) g$V$21410$U0r&n))) g$b$13427$U0r&n g$rest$13428$U0r&n))))))))) (library-letrec*-identity 'g$char=?$13298$U0r&n))) (g$char<?$13299$U0r&n g$char<?$13550$U0r&n ((case-lambda ((g$C$21630$U0r&n) (g$C$21630$U0r&n (case-lambda ((g$C$21423$U0r&n g$a$13431$U0r&n g$b$13432$U0r&n . g$rest$13433$U0r&n) ((case-lambda ((g$J$21426$U0r&n) (g$char?$13162$U0r&n (case-lambda ((g$V$21427$U0r&n) (not (case-lambda ((g$T$21428$U0r&n) (if g$T$21428$U0r&n (g$assertion-violation$13786$U0r&n g$J$21426$U0r&n 'char<? '"not a char" g$a$13431$U0r&n) (void g$J$21426$U0r&n)))) g$V$21427$U0r&n))) g$a$13431$U0r&n))) (case-lambda (g$IGNORE$21424$U0r&n (cons (case-lambda ((g$V$21425$U0r&n) (g$for-all$12751$U0r&n g$C$21423$U0r&n (case-lambda ((g$C$21415$U0r&n g$x$13434$U0r&n) ((case-lambda ((g$J$21420$U0r&n) (g$char?$13162$U0r&n (case-lambda ((g$V$21421$U0r&n) (not (case-lambda ((g$T$21422$U0r&n) (if g$T$21422$U0r&n (g$assertion-violation$13786$U0r&n g$J$21420$U0r&n 'char<? '"not a char" g$x$13434$U0r&n) (void g$J$21420$U0r&n)))) g$V$21421$U0r&n))) g$x$13434$U0r&n))) (case-lambda (g$IGNORE$21416$U0r&n (char->integer (case-lambda ((g$V$21417$U0r&n) (char->integer (case-lambda ((g$V$21418$U0r&n) (fx<? (case-lambda ((g$V$21419$U0r&n) ((case-lambda ((g$C$21414$U0r&n g$r$13435$U0r&n) (begin (set! g$a$13431$U0r&n g$x$13434$U0r&n) (g$C$21414$U0r&n g$r$13435$U0r&n)))) g$C$21415$U0r&n g$V$21419$U0r&n))) g$V$21418$U0r&n g$V$21417$U0r&n))) g$a$13431$U0r&n))) g$x$13434$U0r&n)))))) g$V$21425$U0r&n))) g$b$13432$U0r&n g$rest$13433$U0r&n))))))))) (library-letrec*-identity 'g$char<?$13299$U0r&n))) (g$char>?$13300$U0r&n g$char>?$13551$U0r&n ((case-lambda ((g$C$21631$U0r&n) (g$C$21631$U0r&n (case-lambda ((g$C$21438$U0r&n g$a$13436$U0r&n g$b$13437$U0r&n . g$rest$13438$U0r&n) ((case-lambda ((g$J$21441$U0r&n) (g$char?$13162$U0r&n (case-lambda ((g$V$21442$U0r&n) (not (case-lambda ((g$T$21443$U0r&n) (if g$T$21443$U0r&n (g$assertion-violation$13786$U0r&n g$J$21441$U0r&n 'char>? '"not a char" g$a$13436$U0r&n) (void g$J$21441$U0r&n)))) g$V$21442$U0r&n))) g$a$13436$U0r&n))) (case-lambda (g$IGNORE$21439$U0r&n (cons (case-lambda ((g$V$21440$U0r&n) (g$for-all$12751$U0r&n g$C$21438$U0r&n (case-lambda ((g$C$21430$U0r&n g$x$13439$U0r&n) ((case-lambda ((g$J$21435$U0r&n) (g$char?$13162$U0r&n (case-lambda ((g$V$21436$U0r&n) (not (case-lambda ((g$T$21437$U0r&n) (if g$T$21437$U0r&n (g$assertion-violation$13786$U0r&n g$J$21435$U0r&n 'char>? '"not a char" g$x$13439$U0r&n) (void g$J$21435$U0r&n)))) g$V$21436$U0r&n))) g$x$13439$U0r&n))) (case-lambda (g$IGNORE$21431$U0r&n (char->integer (case-lambda ((g$V$21432$U0r&n) (char->integer (case-lambda ((g$V$21433$U0r&n) (fx>? (case-lambda ((g$V$21434$U0r&n) ((case-lambda ((g$C$21429$U0r&n g$r$13440$U0r&n) (begin (set! g$a$13436$U0r&n g$x$13439$U0r&n) (g$C$21429$U0r&n g$r$13440$U0r&n)))) g$C$21430$U0r&n g$V$21434$U0r&n))) g$V$21433$U0r&n g$V$21432$U0r&n))) g$a$13436$U0r&n))) g$x$13439$U0r&n)))))) g$V$21440$U0r&n))) g$b$13437$U0r&n g$rest$13438$U0r&n))))))))) (library-letrec*-identity 'g$char>?$13300$U0r&n))) (g$char<=?$13301$U0r&n g$char<=?$13552$U0r&n ((case-lambda ((g$C$21632$U0r&n) (g$C$21632$U0r&n (case-lambda ((g$C$21453$U0r&n g$a$13441$U0r&n g$b$13442$U0r&n . g$rest$13443$U0r&n) ((case-lambda ((g$J$21456$U0r&n) (g$char?$13162$U0r&n (case-lambda ((g$V$21457$U0r&n) (not (case-lambda ((g$T$21458$U0r&n) (if g$T$21458$U0r&n (g$assertion-violation$13786$U0r&n g$J$21456$U0r&n 'char<=? '"not a char" g$a$13441$U0r&n) (void g$J$21456$U0r&n)))) g$V$21457$U0r&n))) g$a$13441$U0r&n))) (case-lambda (g$IGNORE$21454$U0r&n (cons (case-lambda ((g$V$21455$U0r&n) (g$for-all$12751$U0r&n g$C$21453$U0r&n (case-lambda ((g$C$21445$U0r&n g$x$13444$U0r&n) ((case-lambda ((g$J$21450$U0r&n) (g$char?$13162$U0r&n (case-lambda ((g$V$21451$U0r&n) (not (case-lambda ((g$T$21452$U0r&n) (if g$T$21452$U0r&n (g$assertion-violation$13786$U0r&n g$J$21450$U0r&n 'char<=? '"not a char" g$x$13444$U0r&n) (void g$J$21450$U0r&n)))) g$V$21451$U0r&n))) g$x$13444$U0r&n))) (case-lambda (g$IGNORE$21446$U0r&n (char->integer (case-lambda ((g$V$21447$U0r&n) (char->integer (case-lambda ((g$V$21448$U0r&n) (fx<=? (case-lambda ((g$V$21449$U0r&n) ((case-lambda ((g$C$21444$U0r&n g$r$13445$U0r&n) (begin (set! g$a$13441$U0r&n g$x$13444$U0r&n) (g$C$21444$U0r&n g$r$13445$U0r&n)))) g$C$21445$U0r&n g$V$21449$U0r&n))) g$V$21448$U0r&n g$V$21447$U0r&n))) g$a$13441$U0r&n))) g$x$13444$U0r&n)))))) g$V$21455$U0r&n))) g$b$13442$U0r&n g$rest$13443$U0r&n))))))))) (library-letrec*-identity 'g$char<=?$13301$U0r&n))) (g$char>=?$13302$U0r&n g$char>=?$13553$U0r&n ((case-lambda ((g$C$21633$U0r&n) (g$C$21633$U0r&n (case-lambda ((g$C$21468$U0r&n g$a$13446$U0r&n g$b$13447$U0r&n . g$rest$13448$U0r&n) ((case-lambda ((g$J$21471$U0r&n) (g$char?$13162$U0r&n (case-lambda ((g$V$21472$U0r&n) (not (case-lambda ((g$T$21473$U0r&n) (if g$T$21473$U0r&n (g$assertion-violation$13786$U0r&n g$J$21471$U0r&n 'char>=? '"not a char" g$a$13446$U0r&n) (void g$J$21471$U0r&n)))) g$V$21472$U0r&n))) g$a$13446$U0r&n))) (case-lambda (g$IGNORE$21469$U0r&n (cons (case-lambda ((g$V$21470$U0r&n) (g$for-all$12751$U0r&n g$C$21468$U0r&n (case-lambda ((g$C$21460$U0r&n g$x$13449$U0r&n) ((case-lambda ((g$J$21465$U0r&n) (g$char?$13162$U0r&n (case-lambda ((g$V$21466$U0r&n) (not (case-lambda ((g$T$21467$U0r&n) (if g$T$21467$U0r&n (g$assertion-violation$13786$U0r&n g$J$21465$U0r&n 'char>=? '"not a char" g$x$13449$U0r&n) (void g$J$21465$U0r&n)))) g$V$21466$U0r&n))) g$x$13449$U0r&n))) (case-lambda (g$IGNORE$21461$U0r&n (char->integer (case-lambda ((g$V$21462$U0r&n) (char->integer (case-lambda ((g$V$21463$U0r&n) (fx>=? (case-lambda ((g$V$21464$U0r&n) ((case-lambda ((g$C$21459$U0r&n g$r$13450$U0r&n) (begin (set! g$a$13446$U0r&n g$x$13449$U0r&n) (g$C$21459$U0r&n g$r$13450$U0r&n)))) g$C$21460$U0r&n g$V$21464$U0r&n))) g$V$21463$U0r&n g$V$21462$U0r&n))) g$a$13446$U0r&n))) g$x$13449$U0r&n)))))) g$V$21470$U0r&n))) g$b$13447$U0r&n g$rest$13448$U0r&n))))))))) (library-letrec*-identity 'g$char>=?$13302$U0r&n))) (g$rationalize$13303$U0r&n g$rationalize$13554$U0r&n ((case-lambda ((g$C$21634$U0r&n) (g$C$21634$U0r&n (case-lambda ((g$C$21478$U0r&n g$x$13451$U0r&n g$e$13452$U0r&n) ((case-lambda ((g$J$21482$U0r&n) (infinite? (case-lambda ((g$T$21483$U0r&n) (if g$T$21483$U0r&n (infinite? g$J$21482$U0r&n g$e$13452$U0r&n) (g$J$21482$U0r&n '#f)))) g$x$13451$U0r&n))) (case-lambda ((g$T$21479$U0r&n) (if g$T$21479$U0r&n (g$C$21478$U0r&n '+nan.0) (g$find-ratio$13304$U0r&n (case-lambda ((g$V$21480$U0r&n) (apply (case-lambda ((g$V$21481$U0r&n) ((case-lambda ((g$C$21474$U0r&n g$r$13453$U0r&n) ((case-lambda ((g$J$21476$U0r&n) (exact? (case-lambda ((g$T$21477$U0r&n) (if g$T$21477$U0r&n (exact? g$J$21476$U0r&n g$e$13452$U0r&n) (g$J$21476$U0r&n '#f)))) g$x$13451$U0r&n))) (case-lambda ((g$T$21475$U0r&n) (if g$T$21475$U0r&n (g$C$21474$U0r&n g$r$13453$U0r&n) (inexact g$C$21474$U0r&n g$r$13453$U0r&n))))))) g$C$21478$U0r&n g$V$21481$U0r&n))) / g$V$21480$U0r&n))) g$x$13451$U0r&n g$e$13452$U0r&n)))))))))) (library-letrec*-identity 'g$rationalize$13303$U0r&n))) (g$find-ratio$13304$U0r&n g$find-ratio$13555$U0r&n ((case-lambda ((g$C$21635$U0r&n) (g$C$21635$U0r&n (case-lambda ((g$C$21484$U0r&n g$x$13454$U0r&n g$e$13455$U0r&n) (+ (case-lambda ((g$V$21485$U0r&n) (- (case-lambda ((g$V$21486$U0r&n) (g$find-ratio-between$13305$U0r&n g$C$21484$U0r&n g$V$21486$U0r&n g$V$21485$U0r&n))) g$x$13454$U0r&n g$e$13455$U0r&n))) g$x$13454$U0r&n g$e$13455$U0r&n)))))) (library-letrec*-identity 'g$find-ratio$13304$U0r&n))) (g$find-ratio-between$13305$U0r&n g$find-ratio-between$13556$U0r&n ((case-lambda ((g$C$21636$U0r&n) (g$C$21636$U0r&n (case-lambda ((g$C$21519$U0r&n g$x$13456$U0r&n g$y$13457$U0r&n) ((case-lambda ((g$C$21511$U0r&n g$sr$13458$U0r&n) (begin (set! g$sr$13458$U0r&n (case-lambda ((g$C$21502$U0r&n g$x$13460$U0r&n g$y$13461$U0r&n) (floor (case-lambda ((g$V$21503$U0r&n) (exact (case-lambda ((g$V$21504$U0r&n) (floor (case-lambda ((g$V$21505$U0r&n) (exact (case-lambda ((g$V$21506$U0r&n) ((case-lambda ((g$C$21493$U0r&n g$fx$13462$U0r&n g$fy$13463$U0r&n) (>= (case-lambda ((g$T$21494$U0r&n) (if g$T$21494$U0r&n (list g$C$21493$U0r&n g$fx$13462$U0r&n '1) (= (case-lambda ((g$T$21495$U0r&n) (if g$T$21495$U0r&n (- (case-lambda ((g$V$21496$U0r&n) (/ (case-lambda ((g$V$21497$U0r&n) (- (case-lambda ((g$V$21498$U0r&n) (/ (case-lambda ((g$V$21499$U0r&n) (g$sr$13458$U0r&n (case-lambda ((g$V$21500$U0r&n) ((case-lambda ((g$C$21487$U0r&n g$rat$13464$U0r&n) (car (case-lambda ((g$V$21488$U0r&n) (car (case-lambda ((g$V$21489$U0r&n) (* (case-lambda ((g$V$21490$U0r&n) (g$cadr$13175$U0r&n (case-lambda ((g$V$21491$U0r&n) (+ (case-lambda ((g$V$21492$U0r&n) (list g$C$21487$U0r&n g$V$21492$U0r&n g$V$21488$U0r&n))) g$V$21491$U0r&n g$V$21490$U0r&n))) g$rat$13464$U0r&n))) g$fx$13462$U0r&n g$V$21489$U0r&n))) g$rat$13464$U0r&n))) g$rat$13464$U0r&n))) g$C$21493$U0r&n g$V$21500$U0r&n))) g$V$21499$U0r&n g$V$21497$U0r&n))) g$V$21498$U0r&n))) g$y$13461$U0r&n g$fy$13463$U0r&n))) g$V$21496$U0r&n))) g$x$13460$U0r&n g$fx$13462$U0r&n) (+ (case-lambda ((g$V$21501$U0r&n) (list g$C$21493$U0r&n g$V$21501$U0r&n '1))) '1 g$fx$13462$U0r&n)))) g$fx$13462$U0r&n g$fy$13463$U0r&n)))) g$fx$13462$U0r&n g$x$13460$U0r&n))) g$C$21502$U0r&n g$V$21506$U0r&n g$V$21504$U0r&n))) g$V$21505$U0r&n))) g$x$13460$U0r&n))) g$V$21503$U0r&n))) g$y$13461$U0r&n)))) (< (case-lambda ((g$T$21512$U0r&n) (if g$T$21512$U0r&n (g$find-ratio-between$13305$U0r&n g$C$21511$U0r&n g$y$13457$U0r&n g$x$13456$U0r&n) (>= (case-lambda ((g$T$21513$U0r&n) (if g$T$21513$U0r&n (list g$C$21511$U0r&n g$x$13456$U0r&n '1) (g$positive?$13202$U0r&n (case-lambda ((g$T$21514$U0r&n) (if g$T$21514$U0r&n (g$sr$13458$U0r&n g$C$21511$U0r&n g$x$13456$U0r&n g$y$13457$U0r&n) (g$negative?$13203$U0r&n (case-lambda ((g$T$21515$U0r&n) (if g$T$21515$U0r&n (- (case-lambda ((g$V$21516$U0r&n) (- (case-lambda ((g$V$21517$U0r&n) (g$sr$13458$U0r&n (case-lambda ((g$V$21518$U0r&n) ((case-lambda ((g$C$21507$U0r&n g$rat$13459$U0r&n) (g$cadr$13175$U0r&n (case-lambda ((g$V$21508$U0r&n) (car (case-lambda ((g$V$21509$U0r&n) (- (case-lambda ((g$V$21510$U0r&n) (list g$C$21507$U0r&n g$V$21510$U0r&n g$V$21508$U0r&n))) g$V$21509$U0r&n))) g$rat$13459$U0r&n))) g$rat$13459$U0r&n))) g$C$21511$U0r&n g$V$21518$U0r&n))) g$V$21517$U0r&n g$V$21516$U0r&n))) g$y$13457$U0r&n))) g$x$13456$U0r&n) (g$C$21511$U0r&n '(0 1))))) g$y$13457$U0r&n)))) g$x$13456$U0r&n)))) g$x$13456$U0r&n g$y$13457$U0r&n)))) g$y$13457$U0r&n g$x$13456$U0r&n)))) g$C$21519$U0r&n uninitialized)))))) (library-letrec*-identity 'g$find-ratio-between$13305$U0r&n))) (g$vector-map$13306$U0r&n g$vector-map$13557$U0r&n ((case-lambda ((g$C$21637$U0r&n) (g$C$21637$U0r&n (case-lambda ((g$C$21537$U0r&n g$p$13465$U0r&n g$vec1$13466$U0r&n . g$vecs$13467$U0r&n) (vector-length (case-lambda ((g$V$21538$U0r&n) ((case-lambda ((g$C$21535$U0r&n g$len$13468$U0r&n) (make-vector (case-lambda ((g$V$21536$U0r&n) ((case-lambda ((g$C$21534$U0r&n g$res$13469$U0r&n) ((case-lambda ((g$C$21533$U0r&n g$loop$13470$U0r&n) ((case-lambda ((g$C$21521$U0r&n g$loop$21520$U0r&n) (begin (set! g$loop$13470$U0r&n g$loop$21520$U0r&n) (g$loop$13470$U0r&n g$C$21521$U0r&n '0)))) g$C$21533$U0r&n (case-lambda ((g$C$21526$U0r&n g$i$13471$U0r&n) (fx=? (case-lambda ((g$T$21527$U0r&n) (if g$T$21527$U0r&n ((case-lambda ((g$J$21529$U0r&n) (if '#f (g$J$21529$U0r&n '#f) (void g$J$21529$U0r&n)))) (case-lambda (g$IGNORE$21528$U0r&n (g$C$21526$U0r&n g$res$13469$U0r&n)))) (call-with-values (case-lambda ((g$V$21530$U0r&n) (vector-set! (case-lambda (g$IGNORE$21531$U0r&n (fx+ (case-lambda ((g$V$21532$U0r&n) (g$loop$13470$U0r&n g$C$21526$U0r&n g$V$21532$U0r&n))) g$i$13471$U0r&n '1))) g$res$13469$U0r&n g$i$13471$U0r&n g$V$21530$U0r&n))) (case-lambda ((g$C$21523$U0r&n) (cons (case-lambda ((g$V$21524$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$21525$U0r&n) (apply g$C$21523$U0r&n values g$V$21525$U0r&n))) (case-lambda ((g$C$21522$U0r&n g$x$13472$U0r&n) (vector-ref g$C$21522$U0r&n g$x$13472$U0r&n g$i$13471$U0r&n))) g$V$21524$U0r&n))) g$vec1$13466$U0r&n g$vecs$13467$U0r&n))) g$p$13465$U0r&n)))) g$i$13471$U0r&n g$len$13468$U0r&n)))))) g$C$21534$U0r&n uninitialized))) g$C$21535$U0r&n g$V$21536$U0r&n))) g$len$13468$U0r&n))) g$C$21537$U0r&n g$V$21538$U0r&n))) g$vec1$13466$U0r&n)))))) (library-letrec*-identity 'g$vector-map$13306$U0r&n))) (g$vector-for-each$13307$U0r&n g$vector-for-each$13558$U0r&n ((case-lambda ((g$C$21638$U0r&n) (g$C$21638$U0r&n (case-lambda ((g$C$21551$U0r&n g$p$13473$U0r&n g$vec1$13474$U0r&n . g$vecs$13475$U0r&n) (vector-length (case-lambda ((g$V$21552$U0r&n) ((case-lambda ((g$C$21550$U0r&n g$len$13476$U0r&n) ((case-lambda ((g$C$21549$U0r&n g$loop$13477$U0r&n) ((case-lambda ((g$C$21540$U0r&n g$loop$21539$U0r&n) (begin (set! g$loop$13477$U0r&n g$loop$21539$U0r&n) (g$loop$13477$U0r&n g$C$21540$U0r&n '0)))) g$C$21549$U0r&n (case-lambda ((g$C$21545$U0r&n g$i$13478$U0r&n) (fx=? (case-lambda ((g$T$21546$U0r&n) (if g$T$21546$U0r&n (if '#f (g$C$21545$U0r&n '#f) (void g$C$21545$U0r&n)) (call-with-values (case-lambda (g$IGNORE$21547$U0r&n (fx+ (case-lambda ((g$V$21548$U0r&n) (g$loop$13477$U0r&n g$C$21545$U0r&n g$V$21548$U0r&n))) g$i$13478$U0r&n '1))) (case-lambda ((g$C$21542$U0r&n) (cons (case-lambda ((g$V$21543$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$21544$U0r&n) (apply g$C$21542$U0r&n values g$V$21544$U0r&n))) (case-lambda ((g$C$21541$U0r&n g$x$13479$U0r&n) (vector-ref g$C$21541$U0r&n g$x$13479$U0r&n g$i$13478$U0r&n))) g$V$21543$U0r&n))) g$vec1$13474$U0r&n g$vecs$13475$U0r&n))) g$p$13473$U0r&n)))) g$i$13478$U0r&n g$len$13476$U0r&n)))))) g$C$21550$U0r&n uninitialized))) g$C$21551$U0r&n g$V$21552$U0r&n))) g$vec1$13474$U0r&n)))))) (library-letrec*-identity 'g$vector-for-each$13307$U0r&n))) (g$string-for-each$13308$U0r&n g$string-for-each$13559$U0r&n ((case-lambda ((g$C$21639$U0r&n) (g$C$21639$U0r&n (case-lambda ((g$C$21565$U0r&n g$p$13480$U0r&n g$str1$13481$U0r&n . g$strs$13482$U0r&n) (string-length (case-lambda ((g$V$21566$U0r&n) ((case-lambda ((g$C$21564$U0r&n g$len$13483$U0r&n) ((case-lambda ((g$C$21563$U0r&n g$loop$13484$U0r&n) ((case-lambda ((g$C$21554$U0r&n g$loop$21553$U0r&n) (begin (set! g$loop$13484$U0r&n g$loop$21553$U0r&n) (g$loop$13484$U0r&n g$C$21554$U0r&n '0)))) g$C$21563$U0r&n (case-lambda ((g$C$21559$U0r&n g$i$13485$U0r&n) (fx=? (case-lambda ((g$T$21560$U0r&n) (if g$T$21560$U0r&n (if '#f (g$C$21559$U0r&n '#f) (void g$C$21559$U0r&n)) (call-with-values (case-lambda (g$IGNORE$21561$U0r&n (fx+ (case-lambda ((g$V$21562$U0r&n) (g$loop$13484$U0r&n g$C$21559$U0r&n g$V$21562$U0r&n))) g$i$13485$U0r&n '1))) (case-lambda ((g$C$21556$U0r&n) (cons (case-lambda ((g$V$21557$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$21558$U0r&n) (apply g$C$21556$U0r&n values g$V$21558$U0r&n))) (case-lambda ((g$C$21555$U0r&n g$x$13486$U0r&n) (string-ref g$C$21555$U0r&n g$x$13486$U0r&n g$i$13485$U0r&n))) g$V$21557$U0r&n))) g$str1$13481$U0r&n g$strs$13482$U0r&n))) g$p$13480$U0r&n)))) g$i$13485$U0r&n g$len$13483$U0r&n)))))) g$C$21564$U0r&n uninitialized))) g$C$21565$U0r&n g$V$21566$U0r&n))) g$str1$13481$U0r&n)))))) (library-letrec*-identity 'g$string-for-each$13308$U0r&n)))) (void identity-for-cps))(library-letrec* (ironscheme hashtables) ((g$using$13561$U0r&n g$using$13595$U0r&n ((case-lambda ((g$C$21658$U0r&n) (g$C$21658$U0r&n (clr-using-internal 'system)))) (library-letrec*-identity 'g$using$13561$U0r&n))) (g$using$13563$U0r&n g$using$13596$U0r&n ((case-lambda ((g$C$21659$U0r&n) (g$C$21659$U0r&n (clr-using-internal 'system.collections)))) (library-letrec*-identity 'g$using$13563$U0r&n))) (g$make-eq-hashtable$13564$U0r&n g$make-eq-hashtable$13597$U0r&n ((case-lambda ((g$C$21660$U0r&n) (g$C$21660$U0r&n (case-lambda ((g$C$21640$U0r&n) (g$make-eq-hashtable$13564$U0r&n g$C$21640$U0r&n '32)) ((g$C$21640$U0r&n g$k$13573$U0r&n) ((case-lambda ((g$V$21641$U0r&n) (g$C$21640$U0r&n (clr-new-internal 'hashtable g$V$21641$U0r&n)))) (clr-cast-internal 'int32 g$k$13573$U0r&n))))))) (library-letrec*-identity 'g$make-eq-hashtable$13564$U0r&n))) (g$make-eqv-hashtable$13565$U0r&n g$make-eqv-hashtable$13598$U0r&n ((case-lambda ((g$C$21661$U0r&n) (g$C$21661$U0r&n (case-lambda ((g$C$21642$U0r&n) (g$make-eqv-hashtable$13565$U0r&n g$C$21642$U0r&n '32)) ((g$C$21642$U0r&n g$k$13574$U0r&n) (make-hashtable g$C$21642$U0r&n eqv-hash eqv? g$k$13574$U0r&n)))))) (library-letrec*-identity 'g$make-eqv-hashtable$13565$U0r&n))) (g$hashtable-size$13566$U0r&n g$hashtable-size$13599$U0r&n ((case-lambda ((g$C$21662$U0r&n) (g$C$21662$U0r&n (case-lambda ((g$C$21643$U0r&n g$ht$13575$U0r&n) (g$C$21643$U0r&n (clr-call-internal 'hashtable 'get_count g$ht$13575$U0r&n))))))) (library-letrec*-identity 'g$hashtable-size$13566$U0r&n))) (g$hashtable-ref$13567$U0r&n g$hashtable-ref$13600$U0r&n ((case-lambda ((g$C$21663$U0r&n) (g$C$21663$U0r&n (case-lambda ((g$C$21650$U0r&n g$ht$13576$U0r&n g$key$13577$U0r&n g$default$13578$U0r&n) ((case-lambda ((g$C$21645$U0r&n g$r$13579$U0r&n) ((case-lambda ((g$V$21646$U0r&n) (begin (set! g$r$13579$U0r&n g$V$21646$U0r&n) (null? (case-lambda ((g$V$21647$U0r&n) (not (case-lambda ((g$V$21648$U0r&n) ((case-lambda ((g$C$21644$U0r&n g$t$13580$U0r&n) (if g$t$13580$U0r&n (g$C$21644$U0r&n g$t$13580$U0r&n) (g$hashtable-contains?$13570$U0r&n g$C$21644$U0r&n g$ht$13576$U0r&n g$key$13577$U0r&n)))) (case-lambda ((g$T$21649$U0r&n) (if g$T$21649$U0r&n (g$C$21645$U0r&n g$r$13579$U0r&n) (g$C$21645$U0r&n g$default$13578$U0r&n)))) g$V$21648$U0r&n))) g$V$21647$U0r&n))) g$r$13579$U0r&n)))) (clr-call-internal 'hashtable 'get_item g$ht$13576$U0r&n g$key$13577$U0r&n)))) g$C$21650$U0r&n uninitialized)))))) (library-letrec*-identity 'g$hashtable-ref$13567$U0r&n))) (g$hashtable-set!$13568$U0r&n g$hashtable-set!$13601$U0r&n ((case-lambda ((g$C$21664$U0r&n) (g$C$21664$U0r&n (case-lambda ((g$C$21651$U0r&n g$ht$13581$U0r&n g$key$13582$U0r&n g$obj$13583$U0r&n) (g$C$21651$U0r&n (clr-call-internal 'hashtable 'set_item g$ht$13581$U0r&n g$key$13582$U0r&n g$obj$13583$U0r&n))))))) (library-letrec*-identity 'g$hashtable-set!$13568$U0r&n))) (g$hashtable-delete!$13569$U0r&n g$hashtable-delete!$13602$U0r&n ((case-lambda ((g$C$21665$U0r&n) (g$C$21665$U0r&n (case-lambda ((g$C$21652$U0r&n g$ht$13584$U0r&n g$key$13585$U0r&n) (g$C$21652$U0r&n (clr-call-internal 'hashtable 'remove g$ht$13584$U0r&n g$key$13585$U0r&n))))))) (library-letrec*-identity 'g$hashtable-delete!$13569$U0r&n))) (g$hashtable-contains?$13570$U0r&n g$hashtable-contains?$13603$U0r&n ((case-lambda ((g$C$21666$U0r&n) (g$C$21666$U0r&n (case-lambda ((g$C$21653$U0r&n g$ht$13586$U0r&n g$key$13587$U0r&n) (g$C$21653$U0r&n (clr-call-internal 'hashtable 'containskey g$ht$13586$U0r&n g$key$13587$U0r&n))))))) (library-letrec*-identity 'g$hashtable-contains?$13570$U0r&n))) (g$hashtable-update!$13571$U0r&n g$hashtable-update!$13604$U0r&n ((case-lambda ((g$C$21667$U0r&n) (g$C$21667$U0r&n (case-lambda ((g$C$21654$U0r&n g$ht$13588$U0r&n g$key$13589$U0r&n g$proc$13590$U0r&n g$default$13591$U0r&n) (g$hashtable-ref$13567$U0r&n (case-lambda ((g$V$21655$U0r&n) (g$proc$13590$U0r&n (case-lambda ((g$V$21656$U0r&n) (g$hashtable-set!$13568$U0r&n g$C$21654$U0r&n g$ht$13588$U0r&n g$key$13589$U0r&n g$V$21656$U0r&n))) g$V$21655$U0r&n))) g$ht$13588$U0r&n g$key$13589$U0r&n g$default$13591$U0r&n)))))) (library-letrec*-identity 'g$hashtable-update!$13571$U0r&n))) (g$hashtable-clear!$13572$U0r&n g$hashtable-clear!$13605$U0r&n ((case-lambda ((g$C$21668$U0r&n) (g$C$21668$U0r&n (case-lambda ((g$C$21657$U0r&n g$ht$13592$U0r&n) (g$hashtable-clear!$13572$U0r&n g$C$21657$U0r&n g$ht$13592$U0r&n '32)) ((g$C$21657$U0r&n g$ht$13593$U0r&n g$k$13594$U0r&n) (g$C$21657$U0r&n (clr-call-internal 'hashtable 'clear g$ht$13593$U0r&n))))))) (library-letrec*-identity 'g$hashtable-clear!$13572$U0r&n)))) (void identity-for-cps))(library-letrec* (ironscheme files) ((g$using$13607$U0r&n g$using$13614$U0r&n ((case-lambda ((g$C$21672$U0r&n) (g$C$21672$U0r&n (clr-using-internal 'system.io)))) (library-letrec*-identity 'g$using$13607$U0r&n))) (g$file-exists?$13608$U0r&n g$file-exists?$13615$U0r&n ((case-lambda ((g$C$21673$U0r&n) (g$C$21673$U0r&n (case-lambda ((g$C$21669$U0r&n g$fn$13611$U0r&n) (g$C$21669$U0r&n (clr-call-internal 'file 'exists '() g$fn$13611$U0r&n))))))) (library-letrec*-identity 'g$file-exists?$13608$U0r&n))) (g$delete-file$13609$U0r&n g$delete-file$13616$U0r&n ((case-lambda ((g$C$21674$U0r&n) (g$C$21674$U0r&n (case-lambda ((g$C$21670$U0r&n g$fn$13612$U0r&n) (g$C$21670$U0r&n (clr-call-internal 'file 'delete '() g$fn$13612$U0r&n))))))) (library-letrec*-identity 'g$delete-file$13609$U0r&n))) (g$get-directory-name$13610$U0r&n g$get-directory-name$13617$U0r&n ((case-lambda ((g$C$21675$U0r&n) (g$C$21675$U0r&n (case-lambda ((g$C$21671$U0r&n g$path$13613$U0r&n) (g$C$21671$U0r&n (clr-call-internal 'path 'getdirectoryname '() g$path$13613$U0r&n))))))) (library-letrec*-identity 'g$get-directory-name$13610$U0r&n)))) (void identity-for-cps))(library-letrec* (ironscheme bytevectors) ((g$native-endianness$13618$U0r&n g$native-endianness$13729$U0r&n ((case-lambda ((g$C$21733$U0r&n) (g$C$21733$U0r&n (case-lambda ((g$C$21676$U0r&n) (g$C$21676$U0r&n 'little)))))) (library-letrec*-identity 'g$native-endianness$13618$U0r&n))) (g$bytevector-u16-ref$13619$U0r&n g$bytevector-u16-ref$13730$U0r&n ((case-lambda ((g$C$21734$U0r&n) (g$C$21734$U0r&n (case-lambda ((g$C$21677$U0r&n g$bytevector$13647$U0r&n g$k$13648$U0r&n g$endianness$13649$U0r&n) (bytevector-uint-ref g$C$21677$U0r&n g$bytevector$13647$U0r&n g$k$13648$U0r&n g$endianness$13649$U0r&n '2)))))) (library-letrec*-identity 'g$bytevector-u16-ref$13619$U0r&n))) (g$bytevector-s16-ref$13620$U0r&n g$bytevector-s16-ref$13731$U0r&n ((case-lambda ((g$C$21735$U0r&n) (g$C$21735$U0r&n (case-lambda ((g$C$21678$U0r&n g$bytevector$13650$U0r&n g$k$13651$U0r&n g$endianness$13652$U0r&n) (bytevector-sint-ref g$C$21678$U0r&n g$bytevector$13650$U0r&n g$k$13651$U0r&n g$endianness$13652$U0r&n '2)))))) (library-letrec*-identity 'g$bytevector-s16-ref$13620$U0r&n))) (g$bytevector-u16-native-ref$13621$U0r&n g$bytevector-u16-native-ref$13732$U0r&n ((case-lambda ((g$C$21736$U0r&n) (g$C$21736$U0r&n (case-lambda ((g$C$21679$U0r&n g$bytevector$13653$U0r&n g$k$13654$U0r&n) (g$native-endianness$13618$U0r&n (case-lambda ((g$V$21680$U0r&n) (bytevector-uint-ref g$C$21679$U0r&n g$bytevector$13653$U0r&n g$k$13654$U0r&n g$V$21680$U0r&n '2))))))))) (library-letrec*-identity 'g$bytevector-u16-native-ref$13621$U0r&n))) (g$bytevector-s16-native-ref$13622$U0r&n g$bytevector-s16-native-ref$13733$U0r&n ((case-lambda ((g$C$21737$U0r&n) (g$C$21737$U0r&n (case-lambda ((g$C$21681$U0r&n g$bytevector$13655$U0r&n g$k$13656$U0r&n) (g$native-endianness$13618$U0r&n (case-lambda ((g$V$21682$U0r&n) (bytevector-sint-ref g$C$21681$U0r&n g$bytevector$13655$U0r&n g$k$13656$U0r&n g$V$21682$U0r&n '2))))))))) (library-letrec*-identity 'g$bytevector-s16-native-ref$13622$U0r&n))) (g$bytevector-u16-set!$13623$U0r&n g$bytevector-u16-set!$13734$U0r&n ((case-lambda ((g$C$21738$U0r&n) (g$C$21738$U0r&n (case-lambda ((g$C$21683$U0r&n g$bytevector$13657$U0r&n g$k$13658$U0r&n g$n$13659$U0r&n g$endianness$13660$U0r&n) (bytevector-uint-set! g$C$21683$U0r&n g$bytevector$13657$U0r&n g$k$13658$U0r&n g$n$13659$U0r&n g$endianness$13660$U0r&n '2)))))) (library-letrec*-identity 'g$bytevector-u16-set!$13623$U0r&n))) (g$bytevector-s16-set!$13624$U0r&n g$bytevector-s16-set!$13735$U0r&n ((case-lambda ((g$C$21739$U0r&n) (g$C$21739$U0r&n (case-lambda ((g$C$21684$U0r&n g$bytevector$13661$U0r&n g$k$13662$U0r&n g$n$13663$U0r&n g$endianness$13664$U0r&n) (bytevector-sint-set! g$C$21684$U0r&n g$bytevector$13661$U0r&n g$k$13662$U0r&n g$n$13663$U0r&n g$endianness$13664$U0r&n '2)))))) (library-letrec*-identity 'g$bytevector-s16-set!$13624$U0r&n))) (g$bytevector-u16-native-set!$13625$U0r&n g$bytevector-u16-native-set!$13736$U0r&n ((case-lambda ((g$C$21740$U0r&n) (g$C$21740$U0r&n (case-lambda ((g$C$21685$U0r&n g$bytevector$13665$U0r&n g$k$13666$U0r&n g$n$13667$U0r&n) (g$native-endianness$13618$U0r&n (case-lambda ((g$V$21686$U0r&n) (bytevector-uint-set! g$C$21685$U0r&n g$bytevector$13665$U0r&n g$k$13666$U0r&n g$n$13667$U0r&n g$V$21686$U0r&n '2))))))))) (library-letrec*-identity 'g$bytevector-u16-native-set!$13625$U0r&n))) (g$bytevector-s16-native-set!$13626$U0r&n g$bytevector-s16-native-set!$13737$U0r&n ((case-lambda ((g$C$21741$U0r&n) (g$C$21741$U0r&n (case-lambda ((g$C$21687$U0r&n g$bytevector$13668$U0r&n g$k$13669$U0r&n g$n$13670$U0r&n) (g$native-endianness$13618$U0r&n (case-lambda ((g$V$21688$U0r&n) (bytevector-sint-set! g$C$21687$U0r&n g$bytevector$13668$U0r&n g$k$13669$U0r&n g$n$13670$U0r&n g$V$21688$U0r&n '2))))))))) (library-letrec*-identity 'g$bytevector-s16-native-set!$13626$U0r&n))) (g$bytevector-u32-ref$13627$U0r&n g$bytevector-u32-ref$13738$U0r&n ((case-lambda ((g$C$21742$U0r&n) (g$C$21742$U0r&n (case-lambda ((g$C$21689$U0r&n g$bytevector$13671$U0r&n g$k$13672$U0r&n g$endianness$13673$U0r&n) (bytevector-uint-ref g$C$21689$U0r&n g$bytevector$13671$U0r&n g$k$13672$U0r&n g$endianness$13673$U0r&n '4)))))) (library-letrec*-identity 'g$bytevector-u32-ref$13627$U0r&n))) (g$bytevector-s32-ref$13628$U0r&n g$bytevector-s32-ref$13739$U0r&n ((case-lambda ((g$C$21743$U0r&n) (g$C$21743$U0r&n (case-lambda ((g$C$21690$U0r&n g$bytevector$13674$U0r&n g$k$13675$U0r&n g$endianness$13676$U0r&n) (bytevector-sint-ref g$C$21690$U0r&n g$bytevector$13674$U0r&n g$k$13675$U0r&n g$endianness$13676$U0r&n '4)))))) (library-letrec*-identity 'g$bytevector-s32-ref$13628$U0r&n))) (g$bytevector-u32-native-ref$13629$U0r&n g$bytevector-u32-native-ref$13740$U0r&n ((case-lambda ((g$C$21744$U0r&n) (g$C$21744$U0r&n (case-lambda ((g$C$21691$U0r&n g$bytevector$13677$U0r&n g$k$13678$U0r&n) (g$native-endianness$13618$U0r&n (case-lambda ((g$V$21692$U0r&n) (bytevector-uint-ref g$C$21691$U0r&n g$bytevector$13677$U0r&n g$k$13678$U0r&n g$V$21692$U0r&n '4))))))))) (library-letrec*-identity 'g$bytevector-u32-native-ref$13629$U0r&n))) (g$bytevector-s32-native-ref$13630$U0r&n g$bytevector-s32-native-ref$13741$U0r&n ((case-lambda ((g$C$21745$U0r&n) (g$C$21745$U0r&n (case-lambda ((g$C$21693$U0r&n g$bytevector$13679$U0r&n g$k$13680$U0r&n) (g$native-endianness$13618$U0r&n (case-lambda ((g$V$21694$U0r&n) (bytevector-sint-ref g$C$21693$U0r&n g$bytevector$13679$U0r&n g$k$13680$U0r&n g$V$21694$U0r&n '4))))))))) (library-letrec*-identity 'g$bytevector-s32-native-ref$13630$U0r&n))) (g$bytevector-u32-set!$13631$U0r&n g$bytevector-u32-set!$13742$U0r&n ((case-lambda ((g$C$21746$U0r&n) (g$C$21746$U0r&n (case-lambda ((g$C$21695$U0r&n g$bytevector$13681$U0r&n g$k$13682$U0r&n g$n$13683$U0r&n g$endianness$13684$U0r&n) (bytevector-uint-set! g$C$21695$U0r&n g$bytevector$13681$U0r&n g$k$13682$U0r&n g$n$13683$U0r&n g$endianness$13684$U0r&n '4)))))) (library-letrec*-identity 'g$bytevector-u32-set!$13631$U0r&n))) (g$bytevector-s32-set!$13632$U0r&n g$bytevector-s32-set!$13743$U0r&n ((case-lambda ((g$C$21747$U0r&n) (g$C$21747$U0r&n (case-lambda ((g$C$21696$U0r&n g$bytevector$13685$U0r&n g$k$13686$U0r&n g$n$13687$U0r&n g$endianness$13688$U0r&n) (bytevector-sint-set! g$C$21696$U0r&n g$bytevector$13685$U0r&n g$k$13686$U0r&n g$n$13687$U0r&n g$endianness$13688$U0r&n '4)))))) (library-letrec*-identity 'g$bytevector-s32-set!$13632$U0r&n))) (g$bytevector-u32-native-set!$13633$U0r&n g$bytevector-u32-native-set!$13744$U0r&n ((case-lambda ((g$C$21748$U0r&n) (g$C$21748$U0r&n (case-lambda ((g$C$21697$U0r&n g$bytevector$13689$U0r&n g$k$13690$U0r&n g$n$13691$U0r&n) (g$native-endianness$13618$U0r&n (case-lambda ((g$V$21698$U0r&n) (bytevector-uint-set! g$C$21697$U0r&n g$bytevector$13689$U0r&n g$k$13690$U0r&n g$n$13691$U0r&n g$V$21698$U0r&n '4))))))))) (library-letrec*-identity 'g$bytevector-u32-native-set!$13633$U0r&n))) (g$bytevector-s32-native-set!$13634$U0r&n g$bytevector-s32-native-set!$13745$U0r&n ((case-lambda ((g$C$21749$U0r&n) (g$C$21749$U0r&n (case-lambda ((g$C$21699$U0r&n g$bytevector$13692$U0r&n g$k$13693$U0r&n g$n$13694$U0r&n) (g$native-endianness$13618$U0r&n (case-lambda ((g$V$21700$U0r&n) (bytevector-sint-set! g$C$21699$U0r&n g$bytevector$13692$U0r&n g$k$13693$U0r&n g$n$13694$U0r&n g$V$21700$U0r&n '4))))))))) (library-letrec*-identity 'g$bytevector-s32-native-set!$13634$U0r&n))) (g$bytevector-u64-ref$13635$U0r&n g$bytevector-u64-ref$13746$U0r&n ((case-lambda ((g$C$21750$U0r&n) (g$C$21750$U0r&n (case-lambda ((g$C$21701$U0r&n g$bytevector$13695$U0r&n g$k$13696$U0r&n g$endianness$13697$U0r&n) (bytevector-uint-ref g$C$21701$U0r&n g$bytevector$13695$U0r&n g$k$13696$U0r&n g$endianness$13697$U0r&n '8)))))) (library-letrec*-identity 'g$bytevector-u64-ref$13635$U0r&n))) (g$bytevector-s64-ref$13636$U0r&n g$bytevector-s64-ref$13747$U0r&n ((case-lambda ((g$C$21751$U0r&n) (g$C$21751$U0r&n (case-lambda ((g$C$21702$U0r&n g$bytevector$13698$U0r&n g$k$13699$U0r&n g$endianness$13700$U0r&n) (bytevector-sint-ref g$C$21702$U0r&n g$bytevector$13698$U0r&n g$k$13699$U0r&n g$endianness$13700$U0r&n '8)))))) (library-letrec*-identity 'g$bytevector-s64-ref$13636$U0r&n))) (g$bytevector-u64-native-ref$13637$U0r&n g$bytevector-u64-native-ref$13748$U0r&n ((case-lambda ((g$C$21752$U0r&n) (g$C$21752$U0r&n (case-lambda ((g$C$21703$U0r&n g$bytevector$13701$U0r&n g$k$13702$U0r&n) (g$native-endianness$13618$U0r&n (case-lambda ((g$V$21704$U0r&n) (bytevector-uint-ref g$C$21703$U0r&n g$bytevector$13701$U0r&n g$k$13702$U0r&n g$V$21704$U0r&n '8))))))))) (library-letrec*-identity 'g$bytevector-u64-native-ref$13637$U0r&n))) (g$bytevector-s64-native-ref$13638$U0r&n g$bytevector-s64-native-ref$13749$U0r&n ((case-lambda ((g$C$21753$U0r&n) (g$C$21753$U0r&n (case-lambda ((g$C$21705$U0r&n g$bytevector$13703$U0r&n g$k$13704$U0r&n) (g$native-endianness$13618$U0r&n (case-lambda ((g$V$21706$U0r&n) (bytevector-sint-ref g$C$21705$U0r&n g$bytevector$13703$U0r&n g$k$13704$U0r&n g$V$21706$U0r&n '8))))))))) (library-letrec*-identity 'g$bytevector-s64-native-ref$13638$U0r&n))) (g$bytevector-u64-set!$13639$U0r&n g$bytevector-u64-set!$13750$U0r&n ((case-lambda ((g$C$21754$U0r&n) (g$C$21754$U0r&n (case-lambda ((g$C$21707$U0r&n g$bytevector$13705$U0r&n g$k$13706$U0r&n g$n$13707$U0r&n g$endianness$13708$U0r&n) (bytevector-uint-set! g$C$21707$U0r&n g$bytevector$13705$U0r&n g$k$13706$U0r&n g$n$13707$U0r&n g$endianness$13708$U0r&n '8)))))) (library-letrec*-identity 'g$bytevector-u64-set!$13639$U0r&n))) (g$bytevector-s64-set!$13640$U0r&n g$bytevector-s64-set!$13751$U0r&n ((case-lambda ((g$C$21755$U0r&n) (g$C$21755$U0r&n (case-lambda ((g$C$21708$U0r&n g$bytevector$13709$U0r&n g$k$13710$U0r&n g$n$13711$U0r&n g$endianness$13712$U0r&n) (bytevector-sint-set! g$C$21708$U0r&n g$bytevector$13709$U0r&n g$k$13710$U0r&n g$n$13711$U0r&n g$endianness$13712$U0r&n '8)))))) (library-letrec*-identity 'g$bytevector-s64-set!$13640$U0r&n))) (g$bytevector-u64-native-set!$13641$U0r&n g$bytevector-u64-native-set!$13752$U0r&n ((case-lambda ((g$C$21756$U0r&n) (g$C$21756$U0r&n (case-lambda ((g$C$21709$U0r&n g$bytevector$13713$U0r&n g$k$13714$U0r&n g$n$13715$U0r&n) (g$native-endianness$13618$U0r&n (case-lambda ((g$V$21710$U0r&n) (bytevector-uint-set! g$C$21709$U0r&n g$bytevector$13713$U0r&n g$k$13714$U0r&n g$n$13715$U0r&n g$V$21710$U0r&n '8))))))))) (library-letrec*-identity 'g$bytevector-u64-native-set!$13641$U0r&n))) (g$bytevector-s64-native-set!$13642$U0r&n g$bytevector-s64-native-set!$13753$U0r&n ((case-lambda ((g$C$21757$U0r&n) (g$C$21757$U0r&n (case-lambda ((g$C$21711$U0r&n g$bytevector$13716$U0r&n g$k$13717$U0r&n g$n$13718$U0r&n) (g$native-endianness$13618$U0r&n (case-lambda ((g$V$21712$U0r&n) (bytevector-sint-set! g$C$21711$U0r&n g$bytevector$13716$U0r&n g$k$13717$U0r&n g$n$13718$U0r&n g$V$21712$U0r&n '8))))))))) (library-letrec*-identity 'g$bytevector-s64-native-set!$13642$U0r&n))) (g$bytevector-ieee-single-native-ref$13643$U0r&n g$bytevector-ieee-single-native-ref$13754$U0r&n ((case-lambda ((g$C$21758$U0r&n) (g$C$21758$U0r&n (case-lambda ((g$C$21713$U0r&n g$bytevector$13719$U0r&n g$k$13720$U0r&n) (g$mod$13487$U0r&n (case-lambda ((g$V$21714$U0r&n) (g$zero?$13535$U0r&n (case-lambda ((g$V$21715$U0r&n) (not (case-lambda ((g$T$21716$U0r&n) (if g$T$21716$U0r&n (g$assertion-violation$13786$U0r&n g$C$21713$U0r&n 'bytevector-ieee-single-native-ref '"must be multiple of 4" g$k$13720$U0r&n) (g$native-endianness$13618$U0r&n (case-lambda ((g$V$21717$U0r&n) (bytevector-ieee-single-ref g$C$21713$U0r&n g$bytevector$13719$U0r&n g$k$13720$U0r&n g$V$21717$U0r&n))))))) g$V$21715$U0r&n))) g$V$21714$U0r&n))) g$k$13720$U0r&n '4)))))) (library-letrec*-identity 'g$bytevector-ieee-single-native-ref$13643$U0r&n))) (g$bytevector-ieee-double-native-ref$13644$U0r&n g$bytevector-ieee-double-native-ref$13755$U0r&n ((case-lambda ((g$C$21759$U0r&n) (g$C$21759$U0r&n (case-lambda ((g$C$21718$U0r&n g$bytevector$13721$U0r&n g$k$13722$U0r&n) (g$mod$13487$U0r&n (case-lambda ((g$V$21719$U0r&n) (g$zero?$13535$U0r&n (case-lambda ((g$V$21720$U0r&n) (not (case-lambda ((g$T$21721$U0r&n) (if g$T$21721$U0r&n (g$assertion-violation$13786$U0r&n g$C$21718$U0r&n 'bytevector-ieee-double-native-ref '"must be multiple of 8" g$k$13722$U0r&n) (g$native-endianness$13618$U0r&n (case-lambda ((g$V$21722$U0r&n) (bytevector-ieee-double-ref g$C$21718$U0r&n g$bytevector$13721$U0r&n g$k$13722$U0r&n g$V$21722$U0r&n))))))) g$V$21720$U0r&n))) g$V$21719$U0r&n))) g$k$13722$U0r&n '8)))))) (library-letrec*-identity 'g$bytevector-ieee-double-native-ref$13644$U0r&n))) (g$bytevector-ieee-single-native-set!$13645$U0r&n g$bytevector-ieee-single-native-set!$13756$U0r&n ((case-lambda ((g$C$21760$U0r&n) (g$C$21760$U0r&n (case-lambda ((g$C$21723$U0r&n g$bytevector$13723$U0r&n g$k$13724$U0r&n g$x$13725$U0r&n) (g$mod$13487$U0r&n (case-lambda ((g$V$21724$U0r&n) (g$zero?$13535$U0r&n (case-lambda ((g$V$21725$U0r&n) (not (case-lambda ((g$T$21726$U0r&n) (if g$T$21726$U0r&n (g$assertion-violation$13786$U0r&n g$C$21723$U0r&n 'bytevector-ieee-single-native-set! '"must be multiple of 4" g$k$13724$U0r&n) (g$native-endianness$13618$U0r&n (case-lambda ((g$V$21727$U0r&n) (bytevector-ieee-single-set! g$C$21723$U0r&n g$bytevector$13723$U0r&n g$k$13724$U0r&n g$x$13725$U0r&n g$V$21727$U0r&n))))))) g$V$21725$U0r&n))) g$V$21724$U0r&n))) g$k$13724$U0r&n '4)))))) (library-letrec*-identity 'g$bytevector-ieee-single-native-set!$13645$U0r&n))) (g$bytevector-ieee-double-native-set!$13646$U0r&n g$bytevector-ieee-double-native-set!$13757$U0r&n ((case-lambda ((g$C$21761$U0r&n) (g$C$21761$U0r&n (case-lambda ((g$C$21728$U0r&n g$bytevector$13726$U0r&n g$k$13727$U0r&n g$x$13728$U0r&n) (g$mod$13487$U0r&n (case-lambda ((g$V$21729$U0r&n) (g$zero?$13535$U0r&n (case-lambda ((g$V$21730$U0r&n) (not (case-lambda ((g$T$21731$U0r&n) (if g$T$21731$U0r&n (g$assertion-violation$13786$U0r&n g$C$21728$U0r&n 'bytevector-ieee-double-native-set! '"must be multiple of 8" g$k$13727$U0r&n) (g$native-endianness$13618$U0r&n (case-lambda ((g$V$21732$U0r&n) (bytevector-ieee-double-set! g$C$21728$U0r&n g$bytevector$13726$U0r&n g$k$13727$U0r&n g$x$13728$U0r&n g$V$21732$U0r&n))))))) g$V$21730$U0r&n))) g$V$21729$U0r&n))) g$k$13727$U0r&n '8)))))) (library-letrec*-identity 'g$bytevector-ieee-double-native-set!$13646$U0r&n)))) (void identity-for-cps))(library-letrec* (ironscheme control) () (void identity-for-cps))(library-letrec* (ironscheme eval) () (void identity-for-cps))(library-letrec* (ironscheme exceptions) ((g$*current-exception-handlers*$13758$U0r&n g$*current-exception-handlers*$13781$U0r&n ((case-lambda ((g$C$21800$U0r&n) (list g$C$21800$U0r&n (case-lambda ((g$C$21762$U0r&n g$condition$13765$U0r&n) (display (case-lambda (g$IGNORE$21763$U0r&n (display (case-lambda (g$IGNORE$21764$U0r&n (g$newline$15045$U0r&n (case-lambda (g$IGNORE$21765$U0r&n (exit g$C$21762$U0r&n '-1)))))) g$condition$13765$U0r&n))) '"Unhandled exception:\n")))))) (library-letrec*-identity 'g$*current-exception-handlers*$13758$U0r&n))) (g$with-exception-handler$13759$U0r&n g$with-exception-handler$13782$U0r&n ((case-lambda ((g$C$21801$U0r&n) (g$C$21801$U0r&n (case-lambda ((g$C$21766$U0r&n g$handler$13766$U0r&n g$thunk$13767$U0r&n) (cons (case-lambda ((g$V$21767$U0r&n) (g$with-exception-handlers$13760$U0r&n g$C$21766$U0r&n g$V$21767$U0r&n g$thunk$13767$U0r&n))) g$handler$13766$U0r&n g$*current-exception-handlers*$13758$U0r&n)))))) (library-letrec*-identity 'g$with-exception-handler$13759$U0r&n))) (g$with-exception-handlers$13760$U0r&n g$with-exception-handlers$13783$U0r&n ((case-lambda ((g$C$21802$U0r&n) (g$C$21802$U0r&n (case-lambda ((g$C$21771$U0r&n g$new-handlers$13768$U0r&n g$thunk$13769$U0r&n) ((case-lambda ((g$C$21770$U0r&n g$previous-handlers$13770$U0r&n) (dynamic-wind g$C$21770$U0r&n (case-lambda ((g$C$21768$U0r&n) (begin (set! g$*current-exception-handlers*$13758$U0r&n g$new-handlers$13768$U0r&n) (g$C$21768$U0r&n (cps-void))))) g$thunk$13769$U0r&n (case-lambda ((g$C$21769$U0r&n) (begin (set! g$*current-exception-handlers*$13758$U0r&n g$previous-handlers$13770$U0r&n) (g$C$21769$U0r&n (cps-void)))))))) g$C$21771$U0r&n g$*current-exception-handlers*$13758$U0r&n)))))) (library-letrec*-identity 'g$with-exception-handlers$13760$U0r&n))) (g$raise$13761$U0r&n g$raise$13784$U0r&n ((case-lambda ((g$C$21803$U0r&n) (g$C$21803$U0r&n (case-lambda ((g$C$21780$U0r&n g$obj$13771$U0r&n) ((case-lambda ((g$C$21778$U0r&n g$handlers$13772$U0r&n) (cdr (case-lambda ((g$V$21779$U0r&n) (g$with-exception-handlers$13760$U0r&n g$C$21778$U0r&n g$V$21779$U0r&n (case-lambda ((g$C$21772$U0r&n) (car (case-lambda ((g$V$21773$U0r&n) (g$V$21773$U0r&n (case-lambda (g$IGNORE$21774$U0r&n (g$make-message-condition$14201$U0r&n (case-lambda ((g$V$21775$U0r&n) (g$make-non-continuable-violation$14271$U0r&n (case-lambda ((g$V$21776$U0r&n) (condition (case-lambda ((g$V$21777$U0r&n) (g$raise$13761$U0r&n g$C$21772$U0r&n g$V$21777$U0r&n))) g$V$21776$U0r&n g$V$21775$U0r&n)))))) '"handler returned"))) g$obj$13771$U0r&n))) g$handlers$13772$U0r&n)))))) g$handlers$13772$U0r&n))) g$C$21780$U0r&n g$*current-exception-handlers*$13758$U0r&n)))))) (library-letrec*-identity 'g$raise$13761$U0r&n))) (g$raise-continuable$13762$U0r&n g$raise-continuable$13785$U0r&n ((case-lambda ((g$C$21804$U0r&n) (g$C$21804$U0r&n (case-lambda ((g$C$21785$U0r&n g$obj$13773$U0r&n) ((case-lambda ((g$C$21783$U0r&n g$handlers$13774$U0r&n) (cdr (case-lambda ((g$V$21784$U0r&n) (g$with-exception-handlers$13760$U0r&n g$C$21783$U0r&n g$V$21784$U0r&n (case-lambda ((g$C$21781$U0r&n) (car (case-lambda ((g$V$21782$U0r&n) (g$V$21782$U0r&n g$C$21781$U0r&n g$obj$13773$U0r&n))) g$handlers$13774$U0r&n)))))) g$handlers$13774$U0r&n))) g$C$21785$U0r&n g$*current-exception-handlers*$13758$U0r&n)))))) (library-letrec*-identity 'g$raise-continuable$13762$U0r&n))) (g$assertion-violation$13763$U0r&n g$assertion-violation$13786$U0r&n ((case-lambda ((g$C$21805$U0r&n) (g$C$21805$U0r&n (case-lambda ((g$C$21786$U0r&n g$who$13775$U0r&n g$msg$13776$U0r&n . g$irritants$13777$U0r&n) (g$make-irritants-condition$14251$U0r&n (case-lambda ((g$V$21787$U0r&n) (g$make-message-condition$14201$U0r&n (case-lambda ((g$V$21788$U0r&n) ((case-lambda ((g$J$21792$U0r&n) (if g$who$13775$U0r&n (g$make-who-condition$14261$U0r&n g$J$21792$U0r&n g$who$13775$U0r&n) (condition g$J$21792$U0r&n)))) (case-lambda ((g$V$21789$U0r&n) (g$make-assertion-violation$14243$U0r&n (case-lambda ((g$V$21790$U0r&n) (condition (case-lambda ((g$V$21791$U0r&n) (g$raise$13761$U0r&n g$C$21786$U0r&n g$V$21791$U0r&n))) g$V$21790$U0r&n g$V$21789$U0r&n g$V$21788$U0r&n g$V$21787$U0r&n))))))))) g$msg$13776$U0r&n))) g$irritants$13777$U0r&n)))))) (library-letrec*-identity 'g$assertion-violation$13763$U0r&n))) (g$error$13764$U0r&n g$error$13787$U0r&n ((case-lambda ((g$C$21806$U0r&n) (g$C$21806$U0r&n (case-lambda ((g$C$21793$U0r&n g$who$13778$U0r&n g$msg$13779$U0r&n . g$irritants$13780$U0r&n) (g$make-irritants-condition$14251$U0r&n (case-lambda ((g$V$21794$U0r&n) (g$make-message-condition$14201$U0r&n (case-lambda ((g$V$21795$U0r&n) ((case-lambda ((g$J$21799$U0r&n) (if g$who$13778$U0r&n (g$make-who-condition$14261$U0r&n g$J$21799$U0r&n g$who$13778$U0r&n) (condition g$J$21799$U0r&n)))) (case-lambda ((g$V$21796$U0r&n) (g$make-error$14227$U0r&n (case-lambda ((g$V$21797$U0r&n) (condition (case-lambda ((g$V$21798$U0r&n) (g$raise$13761$U0r&n g$C$21793$U0r&n g$V$21798$U0r&n))) g$V$21797$U0r&n g$V$21796$U0r&n g$V$21795$U0r&n g$V$21794$U0r&n))))))))) g$msg$13779$U0r&n))) g$irritants$13780$U0r&n)))))) (library-letrec*-identity 'g$error$13764$U0r&n)))) (void identity-for-cps))(library-letrec* (ironscheme conditions) ((g$6312$13788$U0r&n g$6312$14190$U0r&n ((case-lambda ((g$C$21807$U0r&n) (make-record-type-descriptor g$C$21807$U0r&n '&condition '#f 'g$6315$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6312$13788$U0r&n))) (g$6314$13789$U0r&n g$6314$14191$U0r&n ((case-lambda ((g$C$21808$U0r&n) (g$C$21808$U0r&n '#f))) (library-letrec*-identity 'g$6314$13789$U0r&n))) (g$6313$13790$U0r&n g$6313$14192$U0r&n ((case-lambda ((g$C$21809$U0r&n) (make-record-constructor-descriptor g$C$21809$U0r&n g$6312$13788$U0r&n '#f g$6314$13789$U0r&n))) (library-letrec*-identity 'g$6313$13790$U0r&n))) (g$&condition?$13793$U0r&n g$&condition?$14193$U0r&n ((case-lambda ((g$C$21810$U0r&n) (record-predicate g$C$21810$U0r&n g$6312$13788$U0r&n))) (library-letrec*-identity 'g$&condition?$13793$U0r&n))) (g$make-&condition$13794$U0r&n g$make-&condition$14194$U0r&n ((case-lambda ((g$C$21811$U0r&n) (record-constructor g$C$21811$U0r&n g$6313$13790$U0r&n))) (library-letrec*-identity 'g$make-&condition$13794$U0r&n))) (g$&condition-rtd$13795$U0r&n g$&condition-rtd$14195$U0r&n ((case-lambda ((g$C$21812$U0r&n) (g$C$21812$U0r&n g$6312$13788$U0r&n))) (library-letrec*-identity 'g$&condition-rtd$13795$U0r&n))) (g$&condition-rcd$13796$U0r&n g$&condition-rcd$14196$U0r&n ((case-lambda ((g$C$21813$U0r&n) (g$C$21813$U0r&n g$6313$13790$U0r&n))) (library-letrec*-identity 'g$&condition-rcd$13796$U0r&n))) (g$6349$13894$U0r&n g$6349$14197$U0r&n ((case-lambda ((g$C$21814$U0r&n) (make-record-type-descriptor g$C$21814$U0r&n '&message g$6312$13788$U0r&n 'g$6352$U0r&n '#f '#f '#((immutable message))))) (library-letrec*-identity 'g$6349$13894$U0r&n))) (g$6351$13895$U0r&n g$6351$14198$U0r&n ((case-lambda ((g$C$21815$U0r&n) (g$C$21815$U0r&n '#f))) (library-letrec*-identity 'g$6351$13895$U0r&n))) (g$6350$13896$U0r&n g$6350$14199$U0r&n ((case-lambda ((g$C$21816$U0r&n) (make-record-constructor-descriptor g$C$21816$U0r&n g$6349$13894$U0r&n g$6313$13790$U0r&n g$6351$13895$U0r&n))) (library-letrec*-identity 'g$6350$13896$U0r&n))) (g$p?$13899$U0r&n g$p?$14200$U0r&n ((case-lambda ((g$C$21817$U0r&n) (record-predicate g$C$21817$U0r&n g$6349$13894$U0r&n))) (library-letrec*-identity 'g$p?$13899$U0r&n))) (g$make-message-condition$13900$U0r&n g$make-message-condition$14201$U0r&n ((case-lambda ((g$C$21818$U0r&n) (record-constructor g$C$21818$U0r&n g$6350$13896$U0r&n))) (library-letrec*-identity 'g$make-message-condition$13900$U0r&n))) (g$condition-message$13901$U0r&n g$condition-message$14202$U0r&n ((case-lambda ((g$C$21819$U0r&n) (record-accessor g$C$21819$U0r&n g$6349$13894$U0r&n '0))) (library-letrec*-identity 'g$condition-message$13901$U0r&n))) (g$message-condition?$13902$U0r&n g$message-condition?$14203$U0r&n ((case-lambda ((g$C$21820$U0r&n) (condition-predicate g$C$21820$U0r&n g$6349$13894$U0r&n))) (library-letrec*-identity 'g$message-condition?$13902$U0r&n))) (g$condition-message$13903$U0r&n g$condition-message$14204$U0r&n ((case-lambda ((g$C$21821$U0r&n) (condition-accessor g$C$21821$U0r&n g$6349$13894$U0r&n g$condition-message$13901$U0r&n))) (library-letrec*-identity 'g$condition-message$13903$U0r&n))) (g$&message-rtd$13904$U0r&n g$&message-rtd$14205$U0r&n ((case-lambda ((g$C$21822$U0r&n) (g$C$21822$U0r&n g$6349$13894$U0r&n))) (library-letrec*-identity 'g$&message-rtd$13904$U0r&n))) (g$&message-rcd$13905$U0r&n g$&message-rcd$14206$U0r&n ((case-lambda ((g$C$21823$U0r&n) (g$C$21823$U0r&n g$6350$13896$U0r&n))) (library-letrec*-identity 'g$&message-rcd$13905$U0r&n))) (g$6364$13906$U0r&n g$6364$14207$U0r&n ((case-lambda ((g$C$21824$U0r&n) (make-record-type-descriptor g$C$21824$U0r&n '&warning g$6312$13788$U0r&n 'g$6367$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6364$13906$U0r&n))) (g$6366$13907$U0r&n g$6366$14208$U0r&n ((case-lambda ((g$C$21825$U0r&n) (g$C$21825$U0r&n '#f))) (library-letrec*-identity 'g$6366$13907$U0r&n))) (g$6365$13908$U0r&n g$6365$14209$U0r&n ((case-lambda ((g$C$21826$U0r&n) (make-record-constructor-descriptor g$C$21826$U0r&n g$6364$13906$U0r&n g$6313$13790$U0r&n g$6366$13907$U0r&n))) (library-letrec*-identity 'g$6365$13908$U0r&n))) (g$p?$13911$U0r&n g$p?$14210$U0r&n ((case-lambda ((g$C$21827$U0r&n) (record-predicate g$C$21827$U0r&n g$6364$13906$U0r&n))) (library-letrec*-identity 'g$p?$13911$U0r&n))) (g$make-warning$13912$U0r&n g$make-warning$14211$U0r&n ((case-lambda ((g$C$21828$U0r&n) (record-constructor g$C$21828$U0r&n g$6365$13908$U0r&n))) (library-letrec*-identity 'g$make-warning$13912$U0r&n))) (g$warning?$13913$U0r&n g$warning?$14212$U0r&n ((case-lambda ((g$C$21829$U0r&n) (condition-predicate g$C$21829$U0r&n g$6364$13906$U0r&n))) (library-letrec*-identity 'g$warning?$13913$U0r&n))) (g$&warning-rtd$13914$U0r&n g$&warning-rtd$14213$U0r&n ((case-lambda ((g$C$21830$U0r&n) (g$C$21830$U0r&n g$6364$13906$U0r&n))) (library-letrec*-identity 'g$&warning-rtd$13914$U0r&n))) (g$&warning-rcd$13915$U0r&n g$&warning-rcd$14214$U0r&n ((case-lambda ((g$C$21831$U0r&n) (g$C$21831$U0r&n g$6365$13908$U0r&n))) (library-letrec*-identity 'g$&warning-rcd$13915$U0r&n))) (g$6377$13916$U0r&n g$6377$14215$U0r&n ((case-lambda ((g$C$21832$U0r&n) (make-record-type-descriptor g$C$21832$U0r&n '&serious g$6312$13788$U0r&n 'g$6380$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6377$13916$U0r&n))) (g$6379$13917$U0r&n g$6379$14216$U0r&n ((case-lambda ((g$C$21833$U0r&n) (g$C$21833$U0r&n '#f))) (library-letrec*-identity 'g$6379$13917$U0r&n))) (g$6378$13918$U0r&n g$6378$14217$U0r&n ((case-lambda ((g$C$21834$U0r&n) (make-record-constructor-descriptor g$C$21834$U0r&n g$6377$13916$U0r&n g$6313$13790$U0r&n g$6379$13917$U0r&n))) (library-letrec*-identity 'g$6378$13918$U0r&n))) (g$p?$13921$U0r&n g$p?$14218$U0r&n ((case-lambda ((g$C$21835$U0r&n) (record-predicate g$C$21835$U0r&n g$6377$13916$U0r&n))) (library-letrec*-identity 'g$p?$13921$U0r&n))) (g$make-serious-condition$13922$U0r&n g$make-serious-condition$14219$U0r&n ((case-lambda ((g$C$21836$U0r&n) (record-constructor g$C$21836$U0r&n g$6378$13918$U0r&n))) (library-letrec*-identity 'g$make-serious-condition$13922$U0r&n))) (g$serious-condition?$13923$U0r&n g$serious-condition?$14220$U0r&n ((case-lambda ((g$C$21837$U0r&n) (condition-predicate g$C$21837$U0r&n g$6377$13916$U0r&n))) (library-letrec*-identity 'g$serious-condition?$13923$U0r&n))) (g$&serious-rtd$13924$U0r&n g$&serious-rtd$14221$U0r&n ((case-lambda ((g$C$21838$U0r&n) (g$C$21838$U0r&n g$6377$13916$U0r&n))) (library-letrec*-identity 'g$&serious-rtd$13924$U0r&n))) (g$&serious-rcd$13925$U0r&n g$&serious-rcd$14222$U0r&n ((case-lambda ((g$C$21839$U0r&n) (g$C$21839$U0r&n g$6378$13918$U0r&n))) (library-letrec*-identity 'g$&serious-rcd$13925$U0r&n))) (g$6390$13926$U0r&n g$6390$14223$U0r&n ((case-lambda ((g$C$21840$U0r&n) (make-record-type-descriptor g$C$21840$U0r&n '&error g$6377$13916$U0r&n 'g$6393$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6390$13926$U0r&n))) (g$6392$13927$U0r&n g$6392$14224$U0r&n ((case-lambda ((g$C$21841$U0r&n) (g$C$21841$U0r&n '#f))) (library-letrec*-identity 'g$6392$13927$U0r&n))) (g$6391$13928$U0r&n g$6391$14225$U0r&n ((case-lambda ((g$C$21842$U0r&n) (make-record-constructor-descriptor g$C$21842$U0r&n g$6390$13926$U0r&n g$6378$13918$U0r&n g$6392$13927$U0r&n))) (library-letrec*-identity 'g$6391$13928$U0r&n))) (g$p?$13931$U0r&n g$p?$14226$U0r&n ((case-lambda ((g$C$21843$U0r&n) (record-predicate g$C$21843$U0r&n g$6390$13926$U0r&n))) (library-letrec*-identity 'g$p?$13931$U0r&n))) (g$make-error$13932$U0r&n g$make-error$14227$U0r&n ((case-lambda ((g$C$21844$U0r&n) (record-constructor g$C$21844$U0r&n g$6391$13928$U0r&n))) (library-letrec*-identity 'g$make-error$13932$U0r&n))) (g$error?$13933$U0r&n g$error?$14228$U0r&n ((case-lambda ((g$C$21845$U0r&n) (condition-predicate g$C$21845$U0r&n g$6390$13926$U0r&n))) (library-letrec*-identity 'g$error?$13933$U0r&n))) (g$&error-rtd$13934$U0r&n g$&error-rtd$14229$U0r&n ((case-lambda ((g$C$21846$U0r&n) (g$C$21846$U0r&n g$6390$13926$U0r&n))) (library-letrec*-identity 'g$&error-rtd$13934$U0r&n))) (g$&error-rcd$13935$U0r&n g$&error-rcd$14230$U0r&n ((case-lambda ((g$C$21847$U0r&n) (g$C$21847$U0r&n g$6391$13928$U0r&n))) (library-letrec*-identity 'g$&error-rcd$13935$U0r&n))) (g$6403$13936$U0r&n g$6403$14231$U0r&n ((case-lambda ((g$C$21848$U0r&n) (make-record-type-descriptor g$C$21848$U0r&n '&violation g$6377$13916$U0r&n 'g$6406$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6403$13936$U0r&n))) (g$6405$13937$U0r&n g$6405$14232$U0r&n ((case-lambda ((g$C$21849$U0r&n) (g$C$21849$U0r&n '#f))) (library-letrec*-identity 'g$6405$13937$U0r&n))) (g$6404$13938$U0r&n g$6404$14233$U0r&n ((case-lambda ((g$C$21850$U0r&n) (make-record-constructor-descriptor g$C$21850$U0r&n g$6403$13936$U0r&n g$6378$13918$U0r&n g$6405$13937$U0r&n))) (library-letrec*-identity 'g$6404$13938$U0r&n))) (g$p?$13941$U0r&n g$p?$14234$U0r&n ((case-lambda ((g$C$21851$U0r&n) (record-predicate g$C$21851$U0r&n g$6403$13936$U0r&n))) (library-letrec*-identity 'g$p?$13941$U0r&n))) (g$make-violation$13942$U0r&n g$make-violation$14235$U0r&n ((case-lambda ((g$C$21852$U0r&n) (record-constructor g$C$21852$U0r&n g$6404$13938$U0r&n))) (library-letrec*-identity 'g$make-violation$13942$U0r&n))) (g$violation?$13943$U0r&n g$violation?$14236$U0r&n ((case-lambda ((g$C$21853$U0r&n) (condition-predicate g$C$21853$U0r&n g$6403$13936$U0r&n))) (library-letrec*-identity 'g$violation?$13943$U0r&n))) (g$&violation-rtd$13944$U0r&n g$&violation-rtd$14237$U0r&n ((case-lambda ((g$C$21854$U0r&n) (g$C$21854$U0r&n g$6403$13936$U0r&n))) (library-letrec*-identity 'g$&violation-rtd$13944$U0r&n))) (g$&violation-rcd$13945$U0r&n g$&violation-rcd$14238$U0r&n ((case-lambda ((g$C$21855$U0r&n) (g$C$21855$U0r&n g$6404$13938$U0r&n))) (library-letrec*-identity 'g$&violation-rcd$13945$U0r&n))) (g$6416$13946$U0r&n g$6416$14239$U0r&n ((case-lambda ((g$C$21856$U0r&n) (make-record-type-descriptor g$C$21856$U0r&n '&assertion g$6403$13936$U0r&n 'g$6419$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6416$13946$U0r&n))) (g$6418$13947$U0r&n g$6418$14240$U0r&n ((case-lambda ((g$C$21857$U0r&n) (g$C$21857$U0r&n '#f))) (library-letrec*-identity 'g$6418$13947$U0r&n))) (g$6417$13948$U0r&n g$6417$14241$U0r&n ((case-lambda ((g$C$21858$U0r&n) (make-record-constructor-descriptor g$C$21858$U0r&n g$6416$13946$U0r&n g$6404$13938$U0r&n g$6418$13947$U0r&n))) (library-letrec*-identity 'g$6417$13948$U0r&n))) (g$p?$13951$U0r&n g$p?$14242$U0r&n ((case-lambda ((g$C$21859$U0r&n) (record-predicate g$C$21859$U0r&n g$6416$13946$U0r&n))) (library-letrec*-identity 'g$p?$13951$U0r&n))) (g$make-assertion-violation$13952$U0r&n g$make-assertion-violation$14243$U0r&n ((case-lambda ((g$C$21860$U0r&n) (record-constructor g$C$21860$U0r&n g$6417$13948$U0r&n))) (library-letrec*-identity 'g$make-assertion-violation$13952$U0r&n))) (g$assertion-violation?$13953$U0r&n g$assertion-violation?$14244$U0r&n ((case-lambda ((g$C$21861$U0r&n) (condition-predicate g$C$21861$U0r&n g$6416$13946$U0r&n))) (library-letrec*-identity 'g$assertion-violation?$13953$U0r&n))) (g$&assertion-rtd$13954$U0r&n g$&assertion-rtd$14245$U0r&n ((case-lambda ((g$C$21862$U0r&n) (g$C$21862$U0r&n g$6416$13946$U0r&n))) (library-letrec*-identity 'g$&assertion-rtd$13954$U0r&n))) (g$&assertion-rcd$13955$U0r&n g$&assertion-rcd$14246$U0r&n ((case-lambda ((g$C$21863$U0r&n) (g$C$21863$U0r&n g$6417$13948$U0r&n))) (library-letrec*-identity 'g$&assertion-rcd$13955$U0r&n))) (g$6429$13957$U0r&n g$6429$14247$U0r&n ((case-lambda ((g$C$21864$U0r&n) (make-record-type-descriptor g$C$21864$U0r&n '&irritants g$6312$13788$U0r&n 'g$6432$U0r&n '#f '#f '#((immutable irritants))))) (library-letrec*-identity 'g$6429$13957$U0r&n))) (g$6431$13958$U0r&n g$6431$14248$U0r&n ((case-lambda ((g$C$21865$U0r&n) (g$C$21865$U0r&n '#f))) (library-letrec*-identity 'g$6431$13958$U0r&n))) (g$6430$13959$U0r&n g$6430$14249$U0r&n ((case-lambda ((g$C$21866$U0r&n) (make-record-constructor-descriptor g$C$21866$U0r&n g$6429$13957$U0r&n g$6313$13790$U0r&n g$6431$13958$U0r&n))) (library-letrec*-identity 'g$6430$13959$U0r&n))) (g$p?$13962$U0r&n g$p?$14250$U0r&n ((case-lambda ((g$C$21867$U0r&n) (record-predicate g$C$21867$U0r&n g$6429$13957$U0r&n))) (library-letrec*-identity 'g$p?$13962$U0r&n))) (g$make-irritants-condition$13963$U0r&n g$make-irritants-condition$14251$U0r&n ((case-lambda ((g$C$21868$U0r&n) (record-constructor g$C$21868$U0r&n g$6430$13959$U0r&n))) (library-letrec*-identity 'g$make-irritants-condition$13963$U0r&n))) (g$condition-irritants$13964$U0r&n g$condition-irritants$14252$U0r&n ((case-lambda ((g$C$21869$U0r&n) (record-accessor g$C$21869$U0r&n g$6429$13957$U0r&n '0))) (library-letrec*-identity 'g$condition-irritants$13964$U0r&n))) (g$irritants-condition?$13965$U0r&n g$irritants-condition?$14253$U0r&n ((case-lambda ((g$C$21870$U0r&n) (condition-predicate g$C$21870$U0r&n g$6429$13957$U0r&n))) (library-letrec*-identity 'g$irritants-condition?$13965$U0r&n))) (g$condition-irritants$13966$U0r&n g$condition-irritants$14254$U0r&n ((case-lambda ((g$C$21871$U0r&n) (condition-accessor g$C$21871$U0r&n g$6429$13957$U0r&n g$condition-irritants$13964$U0r&n))) (library-letrec*-identity 'g$condition-irritants$13966$U0r&n))) (g$&irritants-rtd$13967$U0r&n g$&irritants-rtd$14255$U0r&n ((case-lambda ((g$C$21872$U0r&n) (g$C$21872$U0r&n g$6429$13957$U0r&n))) (library-letrec*-identity 'g$&irritants-rtd$13967$U0r&n))) (g$&irritants-rcd$13968$U0r&n g$&irritants-rcd$14256$U0r&n ((case-lambda ((g$C$21873$U0r&n) (g$C$21873$U0r&n g$6430$13959$U0r&n))) (library-letrec*-identity 'g$&irritants-rcd$13968$U0r&n))) (g$6444$13970$U0r&n g$6444$14257$U0r&n ((case-lambda ((g$C$21874$U0r&n) (make-record-type-descriptor g$C$21874$U0r&n '&who g$6312$13788$U0r&n 'g$6447$U0r&n '#f '#f '#((immutable who))))) (library-letrec*-identity 'g$6444$13970$U0r&n))) (g$6446$13971$U0r&n g$6446$14258$U0r&n ((case-lambda ((g$C$21875$U0r&n) (g$C$21875$U0r&n '#f))) (library-letrec*-identity 'g$6446$13971$U0r&n))) (g$6445$13972$U0r&n g$6445$14259$U0r&n ((case-lambda ((g$C$21876$U0r&n) (make-record-constructor-descriptor g$C$21876$U0r&n g$6444$13970$U0r&n g$6313$13790$U0r&n g$6446$13971$U0r&n))) (library-letrec*-identity 'g$6445$13972$U0r&n))) (g$p?$13975$U0r&n g$p?$14260$U0r&n ((case-lambda ((g$C$21877$U0r&n) (record-predicate g$C$21877$U0r&n g$6444$13970$U0r&n))) (library-letrec*-identity 'g$p?$13975$U0r&n))) (g$make-who-condition$13976$U0r&n g$make-who-condition$14261$U0r&n ((case-lambda ((g$C$21878$U0r&n) (record-constructor g$C$21878$U0r&n g$6445$13972$U0r&n))) (library-letrec*-identity 'g$make-who-condition$13976$U0r&n))) (g$condition-who$13977$U0r&n g$condition-who$14262$U0r&n ((case-lambda ((g$C$21879$U0r&n) (record-accessor g$C$21879$U0r&n g$6444$13970$U0r&n '0))) (library-letrec*-identity 'g$condition-who$13977$U0r&n))) (g$who-condition?$13978$U0r&n g$who-condition?$14263$U0r&n ((case-lambda ((g$C$21880$U0r&n) (condition-predicate g$C$21880$U0r&n g$6444$13970$U0r&n))) (library-letrec*-identity 'g$who-condition?$13978$U0r&n))) (g$condition-who$13979$U0r&n g$condition-who$14264$U0r&n ((case-lambda ((g$C$21881$U0r&n) (condition-accessor g$C$21881$U0r&n g$6444$13970$U0r&n g$condition-who$13977$U0r&n))) (library-letrec*-identity 'g$condition-who$13979$U0r&n))) (g$&who-rtd$13980$U0r&n g$&who-rtd$14265$U0r&n ((case-lambda ((g$C$21882$U0r&n) (g$C$21882$U0r&n g$6444$13970$U0r&n))) (library-letrec*-identity 'g$&who-rtd$13980$U0r&n))) (g$&who-rcd$13981$U0r&n g$&who-rcd$14266$U0r&n ((case-lambda ((g$C$21883$U0r&n) (g$C$21883$U0r&n g$6445$13972$U0r&n))) (library-letrec*-identity 'g$&who-rcd$13981$U0r&n))) (g$6459$13982$U0r&n g$6459$14267$U0r&n ((case-lambda ((g$C$21884$U0r&n) (make-record-type-descriptor g$C$21884$U0r&n '&non-continuable g$6403$13936$U0r&n 'g$6462$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6459$13982$U0r&n))) (g$6461$13983$U0r&n g$6461$14268$U0r&n ((case-lambda ((g$C$21885$U0r&n) (g$C$21885$U0r&n '#f))) (library-letrec*-identity 'g$6461$13983$U0r&n))) (g$6460$13984$U0r&n g$6460$14269$U0r&n ((case-lambda ((g$C$21886$U0r&n) (make-record-constructor-descriptor g$C$21886$U0r&n g$6459$13982$U0r&n g$6404$13938$U0r&n g$6461$13983$U0r&n))) (library-letrec*-identity 'g$6460$13984$U0r&n))) (g$p?$13987$U0r&n g$p?$14270$U0r&n ((case-lambda ((g$C$21887$U0r&n) (record-predicate g$C$21887$U0r&n g$6459$13982$U0r&n))) (library-letrec*-identity 'g$p?$13987$U0r&n))) (g$make-non-continuable-violation$13988$U0r&n g$make-non-continuable-violation$14271$U0r&n ((case-lambda ((g$C$21888$U0r&n) (record-constructor g$C$21888$U0r&n g$6460$13984$U0r&n))) (library-letrec*-identity 'g$make-non-continuable-violation$13988$U0r&n))) (g$non-continuable-violation?$13989$U0r&n g$non-continuable-violation?$14272$U0r&n ((case-lambda ((g$C$21889$U0r&n) (condition-predicate g$C$21889$U0r&n g$6459$13982$U0r&n))) (library-letrec*-identity 'g$non-continuable-violation?$13989$U0r&n))) (g$&non-continuable-rtd$13990$U0r&n g$&non-continuable-rtd$14273$U0r&n ((case-lambda ((g$C$21890$U0r&n) (g$C$21890$U0r&n g$6459$13982$U0r&n))) (library-letrec*-identity 'g$&non-continuable-rtd$13990$U0r&n))) (g$&non-continuable-rcd$13991$U0r&n g$&non-continuable-rcd$14274$U0r&n ((case-lambda ((g$C$21891$U0r&n) (g$C$21891$U0r&n g$6460$13984$U0r&n))) (library-letrec*-identity 'g$&non-continuable-rcd$13991$U0r&n))) (g$6472$13992$U0r&n g$6472$14275$U0r&n ((case-lambda ((g$C$21892$U0r&n) (make-record-type-descriptor g$C$21892$U0r&n '&implementation-restriction g$6403$13936$U0r&n 'g$6475$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6472$13992$U0r&n))) (g$6474$13993$U0r&n g$6474$14276$U0r&n ((case-lambda ((g$C$21893$U0r&n) (g$C$21893$U0r&n '#f))) (library-letrec*-identity 'g$6474$13993$U0r&n))) (g$6473$13994$U0r&n g$6473$14277$U0r&n ((case-lambda ((g$C$21894$U0r&n) (make-record-constructor-descriptor g$C$21894$U0r&n g$6472$13992$U0r&n g$6404$13938$U0r&n g$6474$13993$U0r&n))) (library-letrec*-identity 'g$6473$13994$U0r&n))) (g$p?$13997$U0r&n g$p?$14278$U0r&n ((case-lambda ((g$C$21895$U0r&n) (record-predicate g$C$21895$U0r&n g$6472$13992$U0r&n))) (library-letrec*-identity 'g$p?$13997$U0r&n))) (g$make-implementation-restriction-violation$13998$U0r&n g$make-implementation-restriction-violation$14279$U0r&n ((case-lambda ((g$C$21896$U0r&n) (record-constructor g$C$21896$U0r&n g$6473$13994$U0r&n))) (library-letrec*-identity 'g$make-implementation-restriction-violation$13998$U0r&n))) (g$implementation-restriction-violation?$13999$U0r&n g$implementation-restriction-violation?$14280$U0r&n ((case-lambda ((g$C$21897$U0r&n) (condition-predicate g$C$21897$U0r&n g$6472$13992$U0r&n))) (library-letrec*-identity 'g$implementation-restriction-violation?$13999$U0r&n))) (g$&implementation-restriction-rtd$14000$U0r&n g$&implementation-restriction-rtd$14281$U0r&n ((case-lambda ((g$C$21898$U0r&n) (g$C$21898$U0r&n g$6472$13992$U0r&n))) (library-letrec*-identity 'g$&implementation-restriction-rtd$14000$U0r&n))) (g$&implementation-restriction-rcd$14001$U0r&n g$&implementation-restriction-rcd$14282$U0r&n ((case-lambda ((g$C$21899$U0r&n) (g$C$21899$U0r&n g$6473$13994$U0r&n))) (library-letrec*-identity 'g$&implementation-restriction-rcd$14001$U0r&n))) (g$6485$14002$U0r&n g$6485$14283$U0r&n ((case-lambda ((g$C$21900$U0r&n) (make-record-type-descriptor g$C$21900$U0r&n '&lexical g$6403$13936$U0r&n 'g$6488$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6485$14002$U0r&n))) (g$6487$14003$U0r&n g$6487$14284$U0r&n ((case-lambda ((g$C$21901$U0r&n) (g$C$21901$U0r&n '#f))) (library-letrec*-identity 'g$6487$14003$U0r&n))) (g$6486$14004$U0r&n g$6486$14285$U0r&n ((case-lambda ((g$C$21902$U0r&n) (make-record-constructor-descriptor g$C$21902$U0r&n g$6485$14002$U0r&n g$6404$13938$U0r&n g$6487$14003$U0r&n))) (library-letrec*-identity 'g$6486$14004$U0r&n))) (g$p?$14007$U0r&n g$p?$14286$U0r&n ((case-lambda ((g$C$21903$U0r&n) (record-predicate g$C$21903$U0r&n g$6485$14002$U0r&n))) (library-letrec*-identity 'g$p?$14007$U0r&n))) (g$make-lexical-violation$14008$U0r&n g$make-lexical-violation$14287$U0r&n ((case-lambda ((g$C$21904$U0r&n) (record-constructor g$C$21904$U0r&n g$6486$14004$U0r&n))) (library-letrec*-identity 'g$make-lexical-violation$14008$U0r&n))) (g$lexical-violation?$14009$U0r&n g$lexical-violation?$14288$U0r&n ((case-lambda ((g$C$21905$U0r&n) (condition-predicate g$C$21905$U0r&n g$6485$14002$U0r&n))) (library-letrec*-identity 'g$lexical-violation?$14009$U0r&n))) (g$&lexical-rtd$14010$U0r&n g$&lexical-rtd$14289$U0r&n ((case-lambda ((g$C$21906$U0r&n) (g$C$21906$U0r&n g$6485$14002$U0r&n))) (library-letrec*-identity 'g$&lexical-rtd$14010$U0r&n))) (g$&lexical-rcd$14011$U0r&n g$&lexical-rcd$14290$U0r&n ((case-lambda ((g$C$21907$U0r&n) (g$C$21907$U0r&n g$6486$14004$U0r&n))) (library-letrec*-identity 'g$&lexical-rcd$14011$U0r&n))) (g$6498$14014$U0r&n g$6498$14291$U0r&n ((case-lambda ((g$C$21908$U0r&n) (make-record-type-descriptor g$C$21908$U0r&n '&syntax g$6403$13936$U0r&n 'g$6501$U0r&n '#f '#f '#((immutable form) (immutable subform))))) (library-letrec*-identity 'g$6498$14014$U0r&n))) (g$6500$14015$U0r&n g$6500$14292$U0r&n ((case-lambda ((g$C$21909$U0r&n) (g$C$21909$U0r&n '#f))) (library-letrec*-identity 'g$6500$14015$U0r&n))) (g$6499$14016$U0r&n g$6499$14293$U0r&n ((case-lambda ((g$C$21910$U0r&n) (make-record-constructor-descriptor g$C$21910$U0r&n g$6498$14014$U0r&n g$6404$13938$U0r&n g$6500$14015$U0r&n))) (library-letrec*-identity 'g$6499$14016$U0r&n))) (g$p?$14019$U0r&n g$p?$14294$U0r&n ((case-lambda ((g$C$21911$U0r&n) (record-predicate g$C$21911$U0r&n g$6498$14014$U0r&n))) (library-letrec*-identity 'g$p?$14019$U0r&n))) (g$make-syntax-violation$14020$U0r&n g$make-syntax-violation$14295$U0r&n ((case-lambda ((g$C$21912$U0r&n) (record-constructor g$C$21912$U0r&n g$6499$14016$U0r&n))) (library-letrec*-identity 'g$make-syntax-violation$14020$U0r&n))) (g$syntax-violation-form$14021$U0r&n g$syntax-violation-form$14296$U0r&n ((case-lambda ((g$C$21913$U0r&n) (record-accessor g$C$21913$U0r&n g$6498$14014$U0r&n '0))) (library-letrec*-identity 'g$syntax-violation-form$14021$U0r&n))) (g$syntax-violation-subform$14022$U0r&n g$syntax-violation-subform$14297$U0r&n ((case-lambda ((g$C$21914$U0r&n) (record-accessor g$C$21914$U0r&n g$6498$14014$U0r&n '1))) (library-letrec*-identity 'g$syntax-violation-subform$14022$U0r&n))) (g$syntax-violation?$14023$U0r&n g$syntax-violation?$14298$U0r&n ((case-lambda ((g$C$21915$U0r&n) (condition-predicate g$C$21915$U0r&n g$6498$14014$U0r&n))) (library-letrec*-identity 'g$syntax-violation?$14023$U0r&n))) (g$syntax-violation-form$14024$U0r&n g$syntax-violation-form$14299$U0r&n ((case-lambda ((g$C$21916$U0r&n) (condition-accessor g$C$21916$U0r&n g$6498$14014$U0r&n g$syntax-violation-form$14021$U0r&n))) (library-letrec*-identity 'g$syntax-violation-form$14024$U0r&n))) (g$syntax-violation-subform$14025$U0r&n g$syntax-violation-subform$14300$U0r&n ((case-lambda ((g$C$21917$U0r&n) (condition-accessor g$C$21917$U0r&n g$6498$14014$U0r&n g$syntax-violation-subform$14022$U0r&n))) (library-letrec*-identity 'g$syntax-violation-subform$14025$U0r&n))) (g$&syntax-rtd$14026$U0r&n g$&syntax-rtd$14301$U0r&n ((case-lambda ((g$C$21918$U0r&n) (g$C$21918$U0r&n g$6498$14014$U0r&n))) (library-letrec*-identity 'g$&syntax-rtd$14026$U0r&n))) (g$&syntax-rcd$14027$U0r&n g$&syntax-rcd$14302$U0r&n ((case-lambda ((g$C$21919$U0r&n) (g$C$21919$U0r&n g$6499$14016$U0r&n))) (library-letrec*-identity 'g$&syntax-rcd$14027$U0r&n))) (g$6515$14028$U0r&n g$6515$14303$U0r&n ((case-lambda ((g$C$21920$U0r&n) (make-record-type-descriptor g$C$21920$U0r&n '&undefined g$6403$13936$U0r&n 'g$6518$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6515$14028$U0r&n))) (g$6517$14029$U0r&n g$6517$14304$U0r&n ((case-lambda ((g$C$21921$U0r&n) (g$C$21921$U0r&n '#f))) (library-letrec*-identity 'g$6517$14029$U0r&n))) (g$6516$14030$U0r&n g$6516$14305$U0r&n ((case-lambda ((g$C$21922$U0r&n) (make-record-constructor-descriptor g$C$21922$U0r&n g$6515$14028$U0r&n g$6404$13938$U0r&n g$6517$14029$U0r&n))) (library-letrec*-identity 'g$6516$14030$U0r&n))) (g$p?$14033$U0r&n g$p?$14306$U0r&n ((case-lambda ((g$C$21923$U0r&n) (record-predicate g$C$21923$U0r&n g$6515$14028$U0r&n))) (library-letrec*-identity 'g$p?$14033$U0r&n))) (g$make-undefined-violation$14034$U0r&n g$make-undefined-violation$14307$U0r&n ((case-lambda ((g$C$21924$U0r&n) (record-constructor g$C$21924$U0r&n g$6516$14030$U0r&n))) (library-letrec*-identity 'g$make-undefined-violation$14034$U0r&n))) (g$undefined-violation?$14035$U0r&n g$undefined-violation?$14308$U0r&n ((case-lambda ((g$C$21925$U0r&n) (condition-predicate g$C$21925$U0r&n g$6515$14028$U0r&n))) (library-letrec*-identity 'g$undefined-violation?$14035$U0r&n))) (g$&undefined-rtd$14036$U0r&n g$&undefined-rtd$14309$U0r&n ((case-lambda ((g$C$21926$U0r&n) (g$C$21926$U0r&n g$6515$14028$U0r&n))) (library-letrec*-identity 'g$&undefined-rtd$14036$U0r&n))) (g$&undefined-rcd$14037$U0r&n g$&undefined-rcd$14310$U0r&n ((case-lambda ((g$C$21927$U0r&n) (g$C$21927$U0r&n g$6516$14030$U0r&n))) (library-letrec*-identity 'g$&undefined-rcd$14037$U0r&n))) (g$6528$14038$U0r&n g$6528$14311$U0r&n ((case-lambda ((g$C$21928$U0r&n) (make-record-type-descriptor g$C$21928$U0r&n '&i/o g$6390$13926$U0r&n 'g$6531$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6528$14038$U0r&n))) (g$6530$14039$U0r&n g$6530$14312$U0r&n ((case-lambda ((g$C$21929$U0r&n) (g$C$21929$U0r&n '#f))) (library-letrec*-identity 'g$6530$14039$U0r&n))) (g$6529$14040$U0r&n g$6529$14313$U0r&n ((case-lambda ((g$C$21930$U0r&n) (make-record-constructor-descriptor g$C$21930$U0r&n g$6528$14038$U0r&n g$6391$13928$U0r&n g$6530$14039$U0r&n))) (library-letrec*-identity 'g$6529$14040$U0r&n))) (g$p?$14043$U0r&n g$p?$14314$U0r&n ((case-lambda ((g$C$21931$U0r&n) (record-predicate g$C$21931$U0r&n g$6528$14038$U0r&n))) (library-letrec*-identity 'g$p?$14043$U0r&n))) (g$make-i/o-error$14044$U0r&n g$make-i/o-error$14315$U0r&n ((case-lambda ((g$C$21932$U0r&n) (record-constructor g$C$21932$U0r&n g$6529$14040$U0r&n))) (library-letrec*-identity 'g$make-i/o-error$14044$U0r&n))) (g$i/o-error?$14045$U0r&n g$i/o-error?$14316$U0r&n ((case-lambda ((g$C$21933$U0r&n) (condition-predicate g$C$21933$U0r&n g$6528$14038$U0r&n))) (library-letrec*-identity 'g$i/o-error?$14045$U0r&n))) (g$&i/o-rtd$14046$U0r&n g$&i/o-rtd$14317$U0r&n ((case-lambda ((g$C$21934$U0r&n) (g$C$21934$U0r&n g$6528$14038$U0r&n))) (library-letrec*-identity 'g$&i/o-rtd$14046$U0r&n))) (g$&i/o-rcd$14047$U0r&n g$&i/o-rcd$14318$U0r&n ((case-lambda ((g$C$21935$U0r&n) (g$C$21935$U0r&n g$6529$14040$U0r&n))) (library-letrec*-identity 'g$&i/o-rcd$14047$U0r&n))) (g$6541$14048$U0r&n g$6541$14319$U0r&n ((case-lambda ((g$C$21936$U0r&n) (make-record-type-descriptor g$C$21936$U0r&n '&i/o-read g$6528$14038$U0r&n 'g$6544$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6541$14048$U0r&n))) (g$6543$14049$U0r&n g$6543$14320$U0r&n ((case-lambda ((g$C$21937$U0r&n) (g$C$21937$U0r&n '#f))) (library-letrec*-identity 'g$6543$14049$U0r&n))) (g$6542$14050$U0r&n g$6542$14321$U0r&n ((case-lambda ((g$C$21938$U0r&n) (make-record-constructor-descriptor g$C$21938$U0r&n g$6541$14048$U0r&n g$6529$14040$U0r&n g$6543$14049$U0r&n))) (library-letrec*-identity 'g$6542$14050$U0r&n))) (g$p?$14053$U0r&n g$p?$14322$U0r&n ((case-lambda ((g$C$21939$U0r&n) (record-predicate g$C$21939$U0r&n g$6541$14048$U0r&n))) (library-letrec*-identity 'g$p?$14053$U0r&n))) (g$make-i/o-read-error$14054$U0r&n g$make-i/o-read-error$14323$U0r&n ((case-lambda ((g$C$21940$U0r&n) (record-constructor g$C$21940$U0r&n g$6542$14050$U0r&n))) (library-letrec*-identity 'g$make-i/o-read-error$14054$U0r&n))) (g$i/o-read-error?$14055$U0r&n g$i/o-read-error?$14324$U0r&n ((case-lambda ((g$C$21941$U0r&n) (condition-predicate g$C$21941$U0r&n g$6541$14048$U0r&n))) (library-letrec*-identity 'g$i/o-read-error?$14055$U0r&n))) (g$&i/o-read-rtd$14056$U0r&n g$&i/o-read-rtd$14325$U0r&n ((case-lambda ((g$C$21942$U0r&n) (g$C$21942$U0r&n g$6541$14048$U0r&n))) (library-letrec*-identity 'g$&i/o-read-rtd$14056$U0r&n))) (g$&i/o-read-rcd$14057$U0r&n g$&i/o-read-rcd$14326$U0r&n ((case-lambda ((g$C$21943$U0r&n) (g$C$21943$U0r&n g$6542$14050$U0r&n))) (library-letrec*-identity 'g$&i/o-read-rcd$14057$U0r&n))) (g$6554$14058$U0r&n g$6554$14327$U0r&n ((case-lambda ((g$C$21944$U0r&n) (make-record-type-descriptor g$C$21944$U0r&n '&i/o-write g$6528$14038$U0r&n 'g$6557$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6554$14058$U0r&n))) (g$6556$14059$U0r&n g$6556$14328$U0r&n ((case-lambda ((g$C$21945$U0r&n) (g$C$21945$U0r&n '#f))) (library-letrec*-identity 'g$6556$14059$U0r&n))) (g$6555$14060$U0r&n g$6555$14329$U0r&n ((case-lambda ((g$C$21946$U0r&n) (make-record-constructor-descriptor g$C$21946$U0r&n g$6554$14058$U0r&n g$6529$14040$U0r&n g$6556$14059$U0r&n))) (library-letrec*-identity 'g$6555$14060$U0r&n))) (g$p?$14063$U0r&n g$p?$14330$U0r&n ((case-lambda ((g$C$21947$U0r&n) (record-predicate g$C$21947$U0r&n g$6554$14058$U0r&n))) (library-letrec*-identity 'g$p?$14063$U0r&n))) (g$make-i/o-write-error$14064$U0r&n g$make-i/o-write-error$14331$U0r&n ((case-lambda ((g$C$21948$U0r&n) (record-constructor g$C$21948$U0r&n g$6555$14060$U0r&n))) (library-letrec*-identity 'g$make-i/o-write-error$14064$U0r&n))) (g$i/o-write-error?$14065$U0r&n g$i/o-write-error?$14332$U0r&n ((case-lambda ((g$C$21949$U0r&n) (condition-predicate g$C$21949$U0r&n g$6554$14058$U0r&n))) (library-letrec*-identity 'g$i/o-write-error?$14065$U0r&n))) (g$&i/o-write-rtd$14066$U0r&n g$&i/o-write-rtd$14333$U0r&n ((case-lambda ((g$C$21950$U0r&n) (g$C$21950$U0r&n g$6554$14058$U0r&n))) (library-letrec*-identity 'g$&i/o-write-rtd$14066$U0r&n))) (g$&i/o-write-rcd$14067$U0r&n g$&i/o-write-rcd$14334$U0r&n ((case-lambda ((g$C$21951$U0r&n) (g$C$21951$U0r&n g$6555$14060$U0r&n))) (library-letrec*-identity 'g$&i/o-write-rcd$14067$U0r&n))) (g$6567$14069$U0r&n g$6567$14335$U0r&n ((case-lambda ((g$C$21952$U0r&n) (make-record-type-descriptor g$C$21952$U0r&n '&i/o-invalid-position g$6528$14038$U0r&n 'g$6570$U0r&n '#f '#f '#((immutable position))))) (library-letrec*-identity 'g$6567$14069$U0r&n))) (g$6569$14070$U0r&n g$6569$14336$U0r&n ((case-lambda ((g$C$21953$U0r&n) (g$C$21953$U0r&n '#f))) (library-letrec*-identity 'g$6569$14070$U0r&n))) (g$6568$14071$U0r&n g$6568$14337$U0r&n ((case-lambda ((g$C$21954$U0r&n) (make-record-constructor-descriptor g$C$21954$U0r&n g$6567$14069$U0r&n g$6529$14040$U0r&n g$6569$14070$U0r&n))) (library-letrec*-identity 'g$6568$14071$U0r&n))) (g$p?$14074$U0r&n g$p?$14338$U0r&n ((case-lambda ((g$C$21955$U0r&n) (record-predicate g$C$21955$U0r&n g$6567$14069$U0r&n))) (library-letrec*-identity 'g$p?$14074$U0r&n))) (g$make-i/o-invalid-position-error$14075$U0r&n g$make-i/o-invalid-position-error$14339$U0r&n ((case-lambda ((g$C$21956$U0r&n) (record-constructor g$C$21956$U0r&n g$6568$14071$U0r&n))) (library-letrec*-identity 'g$make-i/o-invalid-position-error$14075$U0r&n))) (g$i/o-error-position$14076$U0r&n g$i/o-error-position$14340$U0r&n ((case-lambda ((g$C$21957$U0r&n) (record-accessor g$C$21957$U0r&n g$6567$14069$U0r&n '0))) (library-letrec*-identity 'g$i/o-error-position$14076$U0r&n))) (g$i/o-invalid-position-error?$14077$U0r&n g$i/o-invalid-position-error?$14341$U0r&n ((case-lambda ((g$C$21958$U0r&n) (condition-predicate g$C$21958$U0r&n g$6567$14069$U0r&n))) (library-letrec*-identity 'g$i/o-invalid-position-error?$14077$U0r&n))) (g$i/o-error-position$14078$U0r&n g$i/o-error-position$14342$U0r&n ((case-lambda ((g$C$21959$U0r&n) (condition-accessor g$C$21959$U0r&n g$6567$14069$U0r&n g$i/o-error-position$14076$U0r&n))) (library-letrec*-identity 'g$i/o-error-position$14078$U0r&n))) (g$&i/o-invalid-position-rtd$14079$U0r&n g$&i/o-invalid-position-rtd$14343$U0r&n ((case-lambda ((g$C$21960$U0r&n) (g$C$21960$U0r&n g$6567$14069$U0r&n))) (library-letrec*-identity 'g$&i/o-invalid-position-rtd$14079$U0r&n))) (g$&i/o-invalid-position-rcd$14080$U0r&n g$&i/o-invalid-position-rcd$14344$U0r&n ((case-lambda ((g$C$21961$U0r&n) (g$C$21961$U0r&n g$6568$14071$U0r&n))) (library-letrec*-identity 'g$&i/o-invalid-position-rcd$14080$U0r&n))) (g$6582$14082$U0r&n g$6582$14345$U0r&n ((case-lambda ((g$C$21962$U0r&n) (make-record-type-descriptor g$C$21962$U0r&n '&i/o-filename g$6528$14038$U0r&n 'g$6585$U0r&n '#f '#f '#((immutable filename))))) (library-letrec*-identity 'g$6582$14082$U0r&n))) (g$6584$14083$U0r&n g$6584$14346$U0r&n ((case-lambda ((g$C$21963$U0r&n) (g$C$21963$U0r&n '#f))) (library-letrec*-identity 'g$6584$14083$U0r&n))) (g$6583$14084$U0r&n g$6583$14347$U0r&n ((case-lambda ((g$C$21964$U0r&n) (make-record-constructor-descriptor g$C$21964$U0r&n g$6582$14082$U0r&n g$6529$14040$U0r&n g$6584$14083$U0r&n))) (library-letrec*-identity 'g$6583$14084$U0r&n))) (g$p?$14087$U0r&n g$p?$14348$U0r&n ((case-lambda ((g$C$21965$U0r&n) (record-predicate g$C$21965$U0r&n g$6582$14082$U0r&n))) (library-letrec*-identity 'g$p?$14087$U0r&n))) (g$make-i/o-filename-error$14088$U0r&n g$make-i/o-filename-error$14349$U0r&n ((case-lambda ((g$C$21966$U0r&n) (record-constructor g$C$21966$U0r&n g$6583$14084$U0r&n))) (library-letrec*-identity 'g$make-i/o-filename-error$14088$U0r&n))) (g$i/o-error-filename$14089$U0r&n g$i/o-error-filename$14350$U0r&n ((case-lambda ((g$C$21967$U0r&n) (record-accessor g$C$21967$U0r&n g$6582$14082$U0r&n '0))) (library-letrec*-identity 'g$i/o-error-filename$14089$U0r&n))) (g$i/o-filename-error?$14090$U0r&n g$i/o-filename-error?$14351$U0r&n ((case-lambda ((g$C$21968$U0r&n) (condition-predicate g$C$21968$U0r&n g$6582$14082$U0r&n))) (library-letrec*-identity 'g$i/o-filename-error?$14090$U0r&n))) (g$i/o-error-filename$14091$U0r&n g$i/o-error-filename$14352$U0r&n ((case-lambda ((g$C$21969$U0r&n) (condition-accessor g$C$21969$U0r&n g$6582$14082$U0r&n g$i/o-error-filename$14089$U0r&n))) (library-letrec*-identity 'g$i/o-error-filename$14091$U0r&n))) (g$&i/o-filename-rtd$14092$U0r&n g$&i/o-filename-rtd$14353$U0r&n ((case-lambda ((g$C$21970$U0r&n) (g$C$21970$U0r&n g$6582$14082$U0r&n))) (library-letrec*-identity 'g$&i/o-filename-rtd$14092$U0r&n))) (g$&i/o-filename-rcd$14093$U0r&n g$&i/o-filename-rcd$14354$U0r&n ((case-lambda ((g$C$21971$U0r&n) (g$C$21971$U0r&n g$6583$14084$U0r&n))) (library-letrec*-identity 'g$&i/o-filename-rcd$14093$U0r&n))) (g$6597$14094$U0r&n g$6597$14355$U0r&n ((case-lambda ((g$C$21972$U0r&n) (make-record-type-descriptor g$C$21972$U0r&n '&i/o-file-protection g$6582$14082$U0r&n 'g$6600$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6597$14094$U0r&n))) (g$6599$14095$U0r&n g$6599$14356$U0r&n ((case-lambda ((g$C$21973$U0r&n) (g$C$21973$U0r&n '#f))) (library-letrec*-identity 'g$6599$14095$U0r&n))) (g$6598$14096$U0r&n g$6598$14357$U0r&n ((case-lambda ((g$C$21974$U0r&n) (make-record-constructor-descriptor g$C$21974$U0r&n g$6597$14094$U0r&n g$6583$14084$U0r&n g$6599$14095$U0r&n))) (library-letrec*-identity 'g$6598$14096$U0r&n))) (g$p?$14099$U0r&n g$p?$14358$U0r&n ((case-lambda ((g$C$21975$U0r&n) (record-predicate g$C$21975$U0r&n g$6597$14094$U0r&n))) (library-letrec*-identity 'g$p?$14099$U0r&n))) (g$make-i/o-file-protection-error$14100$U0r&n g$make-i/o-file-protection-error$14359$U0r&n ((case-lambda ((g$C$21976$U0r&n) (record-constructor g$C$21976$U0r&n g$6598$14096$U0r&n))) (library-letrec*-identity 'g$make-i/o-file-protection-error$14100$U0r&n))) (g$i/o-file-protection-error?$14101$U0r&n g$i/o-file-protection-error?$14360$U0r&n ((case-lambda ((g$C$21977$U0r&n) (condition-predicate g$C$21977$U0r&n g$6597$14094$U0r&n))) (library-letrec*-identity 'g$i/o-file-protection-error?$14101$U0r&n))) (g$&i/o-file-protection-rtd$14102$U0r&n g$&i/o-file-protection-rtd$14361$U0r&n ((case-lambda ((g$C$21978$U0r&n) (g$C$21978$U0r&n g$6597$14094$U0r&n))) (library-letrec*-identity 'g$&i/o-file-protection-rtd$14102$U0r&n))) (g$&i/o-file-protection-rcd$14103$U0r&n g$&i/o-file-protection-rcd$14362$U0r&n ((case-lambda ((g$C$21979$U0r&n) (g$C$21979$U0r&n g$6598$14096$U0r&n))) (library-letrec*-identity 'g$&i/o-file-protection-rcd$14103$U0r&n))) (g$6610$14104$U0r&n g$6610$14363$U0r&n ((case-lambda ((g$C$21980$U0r&n) (make-record-type-descriptor g$C$21980$U0r&n '&i/o-file-is-read-only g$6597$14094$U0r&n 'g$6613$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6610$14104$U0r&n))) (g$6612$14105$U0r&n g$6612$14364$U0r&n ((case-lambda ((g$C$21981$U0r&n) (g$C$21981$U0r&n '#f))) (library-letrec*-identity 'g$6612$14105$U0r&n))) (g$6611$14106$U0r&n g$6611$14365$U0r&n ((case-lambda ((g$C$21982$U0r&n) (make-record-constructor-descriptor g$C$21982$U0r&n g$6610$14104$U0r&n g$6598$14096$U0r&n g$6612$14105$U0r&n))) (library-letrec*-identity 'g$6611$14106$U0r&n))) (g$p?$14109$U0r&n g$p?$14366$U0r&n ((case-lambda ((g$C$21983$U0r&n) (record-predicate g$C$21983$U0r&n g$6610$14104$U0r&n))) (library-letrec*-identity 'g$p?$14109$U0r&n))) (g$make-i/o-file-is-read-only-error$14110$U0r&n g$make-i/o-file-is-read-only-error$14367$U0r&n ((case-lambda ((g$C$21984$U0r&n) (record-constructor g$C$21984$U0r&n g$6611$14106$U0r&n))) (library-letrec*-identity 'g$make-i/o-file-is-read-only-error$14110$U0r&n))) (g$i/o-file-is-read-only-error?$14111$U0r&n g$i/o-file-is-read-only-error?$14368$U0r&n ((case-lambda ((g$C$21985$U0r&n) (condition-predicate g$C$21985$U0r&n g$6610$14104$U0r&n))) (library-letrec*-identity 'g$i/o-file-is-read-only-error?$14111$U0r&n))) (g$&i/o-file-is-read-only-rtd$14112$U0r&n g$&i/o-file-is-read-only-rtd$14369$U0r&n ((case-lambda ((g$C$21986$U0r&n) (g$C$21986$U0r&n g$6610$14104$U0r&n))) (library-letrec*-identity 'g$&i/o-file-is-read-only-rtd$14112$U0r&n))) (g$&i/o-file-is-read-only-rcd$14113$U0r&n g$&i/o-file-is-read-only-rcd$14370$U0r&n ((case-lambda ((g$C$21987$U0r&n) (g$C$21987$U0r&n g$6611$14106$U0r&n))) (library-letrec*-identity 'g$&i/o-file-is-read-only-rcd$14113$U0r&n))) (g$6623$14114$U0r&n g$6623$14371$U0r&n ((case-lambda ((g$C$21988$U0r&n) (make-record-type-descriptor g$C$21988$U0r&n '&i/o-file-already-exists g$6582$14082$U0r&n 'g$6626$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6623$14114$U0r&n))) (g$6625$14115$U0r&n g$6625$14372$U0r&n ((case-lambda ((g$C$21989$U0r&n) (g$C$21989$U0r&n '#f))) (library-letrec*-identity 'g$6625$14115$U0r&n))) (g$6624$14116$U0r&n g$6624$14373$U0r&n ((case-lambda ((g$C$21990$U0r&n) (make-record-constructor-descriptor g$C$21990$U0r&n g$6623$14114$U0r&n g$6583$14084$U0r&n g$6625$14115$U0r&n))) (library-letrec*-identity 'g$6624$14116$U0r&n))) (g$p?$14119$U0r&n g$p?$14374$U0r&n ((case-lambda ((g$C$21991$U0r&n) (record-predicate g$C$21991$U0r&n g$6623$14114$U0r&n))) (library-letrec*-identity 'g$p?$14119$U0r&n))) (g$make-i/o-file-already-exists-error$14120$U0r&n g$make-i/o-file-already-exists-error$14375$U0r&n ((case-lambda ((g$C$21992$U0r&n) (record-constructor g$C$21992$U0r&n g$6624$14116$U0r&n))) (library-letrec*-identity 'g$make-i/o-file-already-exists-error$14120$U0r&n))) (g$i/o-file-already-exists-error?$14121$U0r&n g$i/o-file-already-exists-error?$14376$U0r&n ((case-lambda ((g$C$21993$U0r&n) (condition-predicate g$C$21993$U0r&n g$6623$14114$U0r&n))) (library-letrec*-identity 'g$i/o-file-already-exists-error?$14121$U0r&n))) (g$&i/o-file-already-exists-rtd$14122$U0r&n g$&i/o-file-already-exists-rtd$14377$U0r&n ((case-lambda ((g$C$21994$U0r&n) (g$C$21994$U0r&n g$6623$14114$U0r&n))) (library-letrec*-identity 'g$&i/o-file-already-exists-rtd$14122$U0r&n))) (g$&i/o-file-already-exists-rcd$14123$U0r&n g$&i/o-file-already-exists-rcd$14378$U0r&n ((case-lambda ((g$C$21995$U0r&n) (g$C$21995$U0r&n g$6624$14116$U0r&n))) (library-letrec*-identity 'g$&i/o-file-already-exists-rcd$14123$U0r&n))) (g$6636$14124$U0r&n g$6636$14379$U0r&n ((case-lambda ((g$C$21996$U0r&n) (make-record-type-descriptor g$C$21996$U0r&n '&i/o-file-does-not-exist g$6582$14082$U0r&n 'g$6639$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6636$14124$U0r&n))) (g$6638$14125$U0r&n g$6638$14380$U0r&n ((case-lambda ((g$C$21997$U0r&n) (g$C$21997$U0r&n '#f))) (library-letrec*-identity 'g$6638$14125$U0r&n))) (g$6637$14126$U0r&n g$6637$14381$U0r&n ((case-lambda ((g$C$21998$U0r&n) (make-record-constructor-descriptor g$C$21998$U0r&n g$6636$14124$U0r&n g$6583$14084$U0r&n g$6638$14125$U0r&n))) (library-letrec*-identity 'g$6637$14126$U0r&n))) (g$p?$14129$U0r&n g$p?$14382$U0r&n ((case-lambda ((g$C$21999$U0r&n) (record-predicate g$C$21999$U0r&n g$6636$14124$U0r&n))) (library-letrec*-identity 'g$p?$14129$U0r&n))) (g$make-i/o-file-does-not-exist-error$14130$U0r&n g$make-i/o-file-does-not-exist-error$14383$U0r&n ((case-lambda ((g$C$22000$U0r&n) (record-constructor g$C$22000$U0r&n g$6637$14126$U0r&n))) (library-letrec*-identity 'g$make-i/o-file-does-not-exist-error$14130$U0r&n))) (g$i/o-file-does-not-exist-error?$14131$U0r&n g$i/o-file-does-not-exist-error?$14384$U0r&n ((case-lambda ((g$C$22001$U0r&n) (condition-predicate g$C$22001$U0r&n g$6636$14124$U0r&n))) (library-letrec*-identity 'g$i/o-file-does-not-exist-error?$14131$U0r&n))) (g$&i/o-file-does-not-exist-rtd$14132$U0r&n g$&i/o-file-does-not-exist-rtd$14385$U0r&n ((case-lambda ((g$C$22002$U0r&n) (g$C$22002$U0r&n g$6636$14124$U0r&n))) (library-letrec*-identity 'g$&i/o-file-does-not-exist-rtd$14132$U0r&n))) (g$&i/o-file-does-not-exist-rcd$14133$U0r&n g$&i/o-file-does-not-exist-rcd$14386$U0r&n ((case-lambda ((g$C$22003$U0r&n) (g$C$22003$U0r&n g$6637$14126$U0r&n))) (library-letrec*-identity 'g$&i/o-file-does-not-exist-rcd$14133$U0r&n))) (g$6649$14135$U0r&n g$6649$14387$U0r&n ((case-lambda ((g$C$22004$U0r&n) (make-record-type-descriptor g$C$22004$U0r&n '&i/o-port g$6528$14038$U0r&n 'g$6652$U0r&n '#f '#f '#((immutable port))))) (library-letrec*-identity 'g$6649$14135$U0r&n))) (g$6651$14136$U0r&n g$6651$14388$U0r&n ((case-lambda ((g$C$22005$U0r&n) (g$C$22005$U0r&n '#f))) (library-letrec*-identity 'g$6651$14136$U0r&n))) (g$6650$14137$U0r&n g$6650$14389$U0r&n ((case-lambda ((g$C$22006$U0r&n) (make-record-constructor-descriptor g$C$22006$U0r&n g$6649$14135$U0r&n g$6529$14040$U0r&n g$6651$14136$U0r&n))) (library-letrec*-identity 'g$6650$14137$U0r&n))) (g$p?$14140$U0r&n g$p?$14390$U0r&n ((case-lambda ((g$C$22007$U0r&n) (record-predicate g$C$22007$U0r&n g$6649$14135$U0r&n))) (library-letrec*-identity 'g$p?$14140$U0r&n))) (g$make-i/o-port-error$14141$U0r&n g$make-i/o-port-error$14391$U0r&n ((case-lambda ((g$C$22008$U0r&n) (record-constructor g$C$22008$U0r&n g$6650$14137$U0r&n))) (library-letrec*-identity 'g$make-i/o-port-error$14141$U0r&n))) (g$i/o-error-port$14142$U0r&n g$i/o-error-port$14392$U0r&n ((case-lambda ((g$C$22009$U0r&n) (record-accessor g$C$22009$U0r&n g$6649$14135$U0r&n '0))) (library-letrec*-identity 'g$i/o-error-port$14142$U0r&n))) (g$i/o-port-error?$14143$U0r&n g$i/o-port-error?$14393$U0r&n ((case-lambda ((g$C$22010$U0r&n) (condition-predicate g$C$22010$U0r&n g$6649$14135$U0r&n))) (library-letrec*-identity 'g$i/o-port-error?$14143$U0r&n))) (g$i/o-error-port$14144$U0r&n g$i/o-error-port$14394$U0r&n ((case-lambda ((g$C$22011$U0r&n) (condition-accessor g$C$22011$U0r&n g$6649$14135$U0r&n g$i/o-error-port$14142$U0r&n))) (library-letrec*-identity 'g$i/o-error-port$14144$U0r&n))) (g$&i/o-port-rtd$14145$U0r&n g$&i/o-port-rtd$14395$U0r&n ((case-lambda ((g$C$22012$U0r&n) (g$C$22012$U0r&n g$6649$14135$U0r&n))) (library-letrec*-identity 'g$&i/o-port-rtd$14145$U0r&n))) (g$&i/o-port-rcd$14146$U0r&n g$&i/o-port-rcd$14396$U0r&n ((case-lambda ((g$C$22013$U0r&n) (g$C$22013$U0r&n g$6650$14137$U0r&n))) (library-letrec*-identity 'g$&i/o-port-rcd$14146$U0r&n))) (g$6664$14147$U0r&n g$6664$14397$U0r&n ((case-lambda ((g$C$22014$U0r&n) (make-record-type-descriptor g$C$22014$U0r&n '&i/o-decoding g$6649$14135$U0r&n 'g$6667$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6664$14147$U0r&n))) (g$6666$14148$U0r&n g$6666$14398$U0r&n ((case-lambda ((g$C$22015$U0r&n) (g$C$22015$U0r&n '#f))) (library-letrec*-identity 'g$6666$14148$U0r&n))) (g$6665$14149$U0r&n g$6665$14399$U0r&n ((case-lambda ((g$C$22016$U0r&n) (make-record-constructor-descriptor g$C$22016$U0r&n g$6664$14147$U0r&n g$6650$14137$U0r&n g$6666$14148$U0r&n))) (library-letrec*-identity 'g$6665$14149$U0r&n))) (g$p?$14152$U0r&n g$p?$14400$U0r&n ((case-lambda ((g$C$22017$U0r&n) (record-predicate g$C$22017$U0r&n g$6664$14147$U0r&n))) (library-letrec*-identity 'g$p?$14152$U0r&n))) (g$make-i/o-decoding-error$14153$U0r&n g$make-i/o-decoding-error$14401$U0r&n ((case-lambda ((g$C$22018$U0r&n) (record-constructor g$C$22018$U0r&n g$6665$14149$U0r&n))) (library-letrec*-identity 'g$make-i/o-decoding-error$14153$U0r&n))) (g$i/o-decoding-error?$14154$U0r&n g$i/o-decoding-error?$14402$U0r&n ((case-lambda ((g$C$22019$U0r&n) (condition-predicate g$C$22019$U0r&n g$6664$14147$U0r&n))) (library-letrec*-identity 'g$i/o-decoding-error?$14154$U0r&n))) (g$&i/o-decoding-rtd$14155$U0r&n g$&i/o-decoding-rtd$14403$U0r&n ((case-lambda ((g$C$22020$U0r&n) (g$C$22020$U0r&n g$6664$14147$U0r&n))) (library-letrec*-identity 'g$&i/o-decoding-rtd$14155$U0r&n))) (g$&i/o-decoding-rcd$14156$U0r&n g$&i/o-decoding-rcd$14404$U0r&n ((case-lambda ((g$C$22021$U0r&n) (g$C$22021$U0r&n g$6665$14149$U0r&n))) (library-letrec*-identity 'g$&i/o-decoding-rcd$14156$U0r&n))) (g$6677$14158$U0r&n g$6677$14405$U0r&n ((case-lambda ((g$C$22022$U0r&n) (make-record-type-descriptor g$C$22022$U0r&n '&i/o-encoding g$6649$14135$U0r&n 'g$6680$U0r&n '#f '#f '#((immutable char))))) (library-letrec*-identity 'g$6677$14158$U0r&n))) (g$6679$14159$U0r&n g$6679$14406$U0r&n ((case-lambda ((g$C$22023$U0r&n) (g$C$22023$U0r&n '#f))) (library-letrec*-identity 'g$6679$14159$U0r&n))) (g$6678$14160$U0r&n g$6678$14407$U0r&n ((case-lambda ((g$C$22024$U0r&n) (make-record-constructor-descriptor g$C$22024$U0r&n g$6677$14158$U0r&n g$6650$14137$U0r&n g$6679$14159$U0r&n))) (library-letrec*-identity 'g$6678$14160$U0r&n))) (g$p?$14163$U0r&n g$p?$14408$U0r&n ((case-lambda ((g$C$22025$U0r&n) (record-predicate g$C$22025$U0r&n g$6677$14158$U0r&n))) (library-letrec*-identity 'g$p?$14163$U0r&n))) (g$make-i/o-encoding-error$14164$U0r&n g$make-i/o-encoding-error$14409$U0r&n ((case-lambda ((g$C$22026$U0r&n) (record-constructor g$C$22026$U0r&n g$6678$14160$U0r&n))) (library-letrec*-identity 'g$make-i/o-encoding-error$14164$U0r&n))) (g$i/o-encoding-error-char$14165$U0r&n g$i/o-encoding-error-char$14410$U0r&n ((case-lambda ((g$C$22027$U0r&n) (record-accessor g$C$22027$U0r&n g$6677$14158$U0r&n '0))) (library-letrec*-identity 'g$i/o-encoding-error-char$14165$U0r&n))) (g$i/o-encoding-error?$14166$U0r&n g$i/o-encoding-error?$14411$U0r&n ((case-lambda ((g$C$22028$U0r&n) (condition-predicate g$C$22028$U0r&n g$6677$14158$U0r&n))) (library-letrec*-identity 'g$i/o-encoding-error?$14166$U0r&n))) (g$i/o-encoding-error-char$14167$U0r&n g$i/o-encoding-error-char$14412$U0r&n ((case-lambda ((g$C$22029$U0r&n) (condition-accessor g$C$22029$U0r&n g$6677$14158$U0r&n g$i/o-encoding-error-char$14165$U0r&n))) (library-letrec*-identity 'g$i/o-encoding-error-char$14167$U0r&n))) (g$&i/o-encoding-rtd$14168$U0r&n g$&i/o-encoding-rtd$14413$U0r&n ((case-lambda ((g$C$22030$U0r&n) (g$C$22030$U0r&n g$6677$14158$U0r&n))) (library-letrec*-identity 'g$&i/o-encoding-rtd$14168$U0r&n))) (g$&i/o-encoding-rcd$14169$U0r&n g$&i/o-encoding-rcd$14414$U0r&n ((case-lambda ((g$C$22031$U0r&n) (g$C$22031$U0r&n g$6678$14160$U0r&n))) (library-letrec*-identity 'g$&i/o-encoding-rcd$14169$U0r&n))) (g$6692$14170$U0r&n g$6692$14415$U0r&n ((case-lambda ((g$C$22032$U0r&n) (make-record-type-descriptor g$C$22032$U0r&n '&no-infinities g$6472$13992$U0r&n 'g$6695$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6692$14170$U0r&n))) (g$6694$14171$U0r&n g$6694$14416$U0r&n ((case-lambda ((g$C$22033$U0r&n) (g$C$22033$U0r&n '#f))) (library-letrec*-identity 'g$6694$14171$U0r&n))) (g$6693$14172$U0r&n g$6693$14417$U0r&n ((case-lambda ((g$C$22034$U0r&n) (make-record-constructor-descriptor g$C$22034$U0r&n g$6692$14170$U0r&n g$6473$13994$U0r&n g$6694$14171$U0r&n))) (library-letrec*-identity 'g$6693$14172$U0r&n))) (g$p?$14175$U0r&n g$p?$14418$U0r&n ((case-lambda ((g$C$22035$U0r&n) (record-predicate g$C$22035$U0r&n g$6692$14170$U0r&n))) (library-letrec*-identity 'g$p?$14175$U0r&n))) (g$make-no-infinities-violation$14176$U0r&n g$make-no-infinities-violation$14419$U0r&n ((case-lambda ((g$C$22036$U0r&n) (record-constructor g$C$22036$U0r&n g$6693$14172$U0r&n))) (library-letrec*-identity 'g$make-no-infinities-violation$14176$U0r&n))) (g$no-infinities-violation?$14177$U0r&n g$no-infinities-violation?$14420$U0r&n ((case-lambda ((g$C$22037$U0r&n) (condition-predicate g$C$22037$U0r&n g$6692$14170$U0r&n))) (library-letrec*-identity 'g$no-infinities-violation?$14177$U0r&n))) (g$&no-infinities-rtd$14178$U0r&n g$&no-infinities-rtd$14421$U0r&n ((case-lambda ((g$C$22038$U0r&n) (g$C$22038$U0r&n g$6692$14170$U0r&n))) (library-letrec*-identity 'g$&no-infinities-rtd$14178$U0r&n))) (g$&no-infinities-rcd$14179$U0r&n g$&no-infinities-rcd$14422$U0r&n ((case-lambda ((g$C$22039$U0r&n) (g$C$22039$U0r&n g$6693$14172$U0r&n))) (library-letrec*-identity 'g$&no-infinities-rcd$14179$U0r&n))) (g$6705$14180$U0r&n g$6705$14423$U0r&n ((case-lambda ((g$C$22040$U0r&n) (make-record-type-descriptor g$C$22040$U0r&n '&no-nans g$6472$13992$U0r&n 'g$6708$U0r&n '#f '#f '#()))) (library-letrec*-identity 'g$6705$14180$U0r&n))) (g$6707$14181$U0r&n g$6707$14424$U0r&n ((case-lambda ((g$C$22041$U0r&n) (g$C$22041$U0r&n '#f))) (library-letrec*-identity 'g$6707$14181$U0r&n))) (g$6706$14182$U0r&n g$6706$14425$U0r&n ((case-lambda ((g$C$22042$U0r&n) (make-record-constructor-descriptor g$C$22042$U0r&n g$6705$14180$U0r&n g$6473$13994$U0r&n g$6707$14181$U0r&n))) (library-letrec*-identity 'g$6706$14182$U0r&n))) (g$p?$14185$U0r&n g$p?$14426$U0r&n ((case-lambda ((g$C$22043$U0r&n) (record-predicate g$C$22043$U0r&n g$6705$14180$U0r&n))) (library-letrec*-identity 'g$p?$14185$U0r&n))) (g$make-no-nans-violation$14186$U0r&n g$make-no-nans-violation$14427$U0r&n ((case-lambda ((g$C$22044$U0r&n) (record-constructor g$C$22044$U0r&n g$6706$14182$U0r&n))) (library-letrec*-identity 'g$make-no-nans-violation$14186$U0r&n))) (g$no-nans-violation?$14187$U0r&n g$no-nans-violation?$14428$U0r&n ((case-lambda ((g$C$22045$U0r&n) (condition-predicate g$C$22045$U0r&n g$6705$14180$U0r&n))) (library-letrec*-identity 'g$no-nans-violation?$14187$U0r&n))) (g$&no-nans-rtd$14188$U0r&n g$&no-nans-rtd$14429$U0r&n ((case-lambda ((g$C$22046$U0r&n) (g$C$22046$U0r&n g$6705$14180$U0r&n))) (library-letrec*-identity 'g$&no-nans-rtd$14188$U0r&n))) (g$&no-nans-rcd$14189$U0r&n g$&no-nans-rcd$14430$U0r&n ((case-lambda ((g$C$22047$U0r&n) (g$C$22047$U0r&n g$6706$14182$U0r&n))) (library-letrec*-identity 'g$&no-nans-rcd$14189$U0r&n)))) (void identity-for-cps))(library-letrec* (ironscheme mutable-pairs) ((g$append!$14431$U0r&n g$append!$14437$U0r&n ((case-lambda ((g$C$22060$U0r&n) (g$C$22060$U0r&n (case-lambda ((g$C$22055$U0r&n g$a$14432$U0r&n . g$b$14433$U0r&n) (null? (case-lambda ((g$T$22056$U0r&n) (if g$T$22056$U0r&n (g$C$22055$U0r&n g$b$14433$U0r&n) (null? (case-lambda ((g$T$22057$U0r&n) (if g$T$22057$U0r&n (g$C$22055$U0r&n g$a$14432$U0r&n) ((case-lambda ((g$C$22054$U0r&n g$f$14434$U0r&n) ((case-lambda ((g$C$22049$U0r&n g$f$22048$U0r&n) (begin (set! g$f$14434$U0r&n g$f$22048$U0r&n) (g$C$22049$U0r&n g$f$14434$U0r&n)))) g$C$22054$U0r&n (case-lambda ((g$C$22052$U0r&n g$a$14435$U0r&n) (cdr (case-lambda ((g$V$22053$U0r&n) ((case-lambda ((g$C$22050$U0r&n g$n$14436$U0r&n) (null? (case-lambda ((g$T$22051$U0r&n) (if g$T$22051$U0r&n (set-cdr! g$C$22050$U0r&n g$a$14435$U0r&n g$b$14433$U0r&n) (g$f$14434$U0r&n g$C$22050$U0r&n g$n$14436$U0r&n)))) g$n$14436$U0r&n))) g$C$22052$U0r&n g$V$22053$U0r&n))) g$a$14435$U0r&n)))))) (case-lambda ((g$V$22058$U0r&n) (g$V$22058$U0r&n (case-lambda (g$IGNORE$22059$U0r&n (g$C$22055$U0r&n g$a$14432$U0r&n))) g$a$14432$U0r&n))) uninitialized)))) g$b$14433$U0r&n)))) g$a$14432$U0r&n)))))) (library-letrec*-identity 'g$append!$14431$U0r&n)))) (void identity-for-cps))(library-letrec* (ironscheme mutable-strings) () (void identity-for-cps))(library-letrec* (ironscheme programs) () (void identity-for-cps))(library-letrec* (ironscheme r5rs) ((g$inexact->exact$14438$U0r&n g$inexact->exact$14458$U0r&n ((case-lambda ((g$C$22111$U0r&n) (g$C$22111$U0r&n exact))) (library-letrec*-identity 'g$inexact->exact$14438$U0r&n))) (g$exact->inexact$14439$U0r&n g$exact->inexact$14459$U0r&n ((case-lambda ((g$C$22112$U0r&n) (g$C$22112$U0r&n inexact))) (library-letrec*-identity 'g$exact->inexact$14439$U0r&n))) (g$sign$14440$U0r&n g$sign$14460$U0r&n ((case-lambda ((g$C$22113$U0r&n) (g$C$22113$U0r&n (case-lambda ((g$C$22061$U0r&n g$n$14446$U0r&n) (> (case-lambda ((g$T$22062$U0r&n) (if g$T$22062$U0r&n (g$C$22061$U0r&n '1) (< (case-lambda ((g$T$22063$U0r&n) (if g$T$22063$U0r&n (g$C$22061$U0r&n '-1) (g$C$22061$U0r&n '0)))) g$n$14446$U0r&n '0)))) g$n$14446$U0r&n '0)))))) (library-letrec*-identity 'g$sign$14440$U0r&n))) (g$quotient$14441$U0r&n g$quotient$14461$U0r&n ((case-lambda ((g$C$22114$U0r&n) (g$C$22114$U0r&n (case-lambda ((g$C$22064$U0r&n g$n1$14447$U0r&n g$n2$14448$U0r&n) ((case-lambda ((g$J$22075$U0r&n) (integer-valued? (case-lambda ((g$V$22076$U0r&n) (not (case-lambda ((g$T$22077$U0r&n) (if g$T$22077$U0r&n (g$assertion-violation$13786$U0r&n g$J$22075$U0r&n 'quotient '"not an integer" g$n1$14447$U0r&n) (void g$J$22075$U0r&n)))) g$V$22076$U0r&n))) g$n1$14447$U0r&n))) (case-lambda (g$IGNORE$22065$U0r&n ((case-lambda ((g$J$22072$U0r&n) (integer-valued? (case-lambda ((g$V$22073$U0r&n) (not (case-lambda ((g$T$22074$U0r&n) (if g$T$22074$U0r&n (g$assertion-violation$13786$U0r&n g$J$22072$U0r&n 'quotient '"not an integer" g$n2$14448$U0r&n) (void g$J$22072$U0r&n)))) g$V$22073$U0r&n))) g$n2$14448$U0r&n))) (case-lambda (g$IGNORE$22066$U0r&n (abs (case-lambda ((g$V$22067$U0r&n) (abs (case-lambda ((g$V$22068$U0r&n) (div (case-lambda ((g$V$22069$U0r&n) (g$sign$14440$U0r&n (case-lambda ((g$V$22070$U0r&n) (g$sign$14440$U0r&n (case-lambda ((g$V$22071$U0r&n) (* g$C$22064$U0r&n g$V$22071$U0r&n g$V$22070$U0r&n g$V$22069$U0r&n))) g$n1$14447$U0r&n))) g$n2$14448$U0r&n))) g$V$22068$U0r&n g$V$22067$U0r&n))) g$n1$14447$U0r&n))) g$n2$14448$U0r&n)))))))))))) (library-letrec*-identity 'g$quotient$14441$U0r&n))) (g$remainder$14442$U0r&n g$remainder$14462$U0r&n ((case-lambda ((g$C$22115$U0r&n) (g$C$22115$U0r&n (case-lambda ((g$C$22078$U0r&n g$n1$14449$U0r&n g$n2$14450$U0r&n) ((case-lambda ((g$J$22088$U0r&n) (integer-valued? (case-lambda ((g$V$22089$U0r&n) (not (case-lambda ((g$T$22090$U0r&n) (if g$T$22090$U0r&n (g$assertion-violation$13786$U0r&n g$J$22088$U0r&n 'remainder '"not an integer" g$n1$14449$U0r&n) (void g$J$22088$U0r&n)))) g$V$22089$U0r&n))) g$n1$14449$U0r&n))) (case-lambda (g$IGNORE$22079$U0r&n ((case-lambda ((g$J$22085$U0r&n) (integer-valued? (case-lambda ((g$V$22086$U0r&n) (not (case-lambda ((g$T$22087$U0r&n) (if g$T$22087$U0r&n (g$assertion-violation$13786$U0r&n g$J$22085$U0r&n 'remainder '"not an integer" g$n2$14450$U0r&n) (void g$J$22085$U0r&n)))) g$V$22086$U0r&n))) g$n2$14450$U0r&n))) (case-lambda (g$IGNORE$22080$U0r&n (abs (case-lambda ((g$V$22081$U0r&n) (abs (case-lambda ((g$V$22082$U0r&n) (g$mod$13487$U0r&n (case-lambda ((g$V$22083$U0r&n) (g$sign$14440$U0r&n (case-lambda ((g$V$22084$U0r&n) (* g$C$22078$U0r&n g$V$22084$U0r&n g$V$22083$U0r&n))) g$n1$14449$U0r&n))) g$V$22082$U0r&n g$V$22081$U0r&n))) g$n1$14449$U0r&n))) g$n2$14450$U0r&n)))))))))))) (library-letrec*-identity 'g$remainder$14442$U0r&n))) (g$modulo$14443$U0r&n g$modulo$14463$U0r&n ((case-lambda ((g$C$22116$U0r&n) (g$C$22116$U0r&n (case-lambda ((g$C$22091$U0r&n g$n1$14451$U0r&n g$n2$14452$U0r&n) ((case-lambda ((g$J$22102$U0r&n) (integer-valued? (case-lambda ((g$V$22103$U0r&n) (not (case-lambda ((g$T$22104$U0r&n) (if g$T$22104$U0r&n (g$assertion-violation$13786$U0r&n g$J$22102$U0r&n 'modulo '"not an integer" g$n1$14451$U0r&n) (void g$J$22102$U0r&n)))) g$V$22103$U0r&n))) g$n1$14451$U0r&n))) (case-lambda (g$IGNORE$22092$U0r&n ((case-lambda ((g$J$22099$U0r&n) (integer-valued? (case-lambda ((g$V$22100$U0r&n) (not (case-lambda ((g$T$22101$U0r&n) (if g$T$22101$U0r&n (g$assertion-violation$13786$U0r&n g$J$22099$U0r&n 'modulo '"not an integer" g$n2$14452$U0r&n) (void g$J$22099$U0r&n)))) g$V$22100$U0r&n))) g$n2$14452$U0r&n))) (case-lambda (g$IGNORE$22093$U0r&n (abs (case-lambda ((g$V$22094$U0r&n) (g$sign$14440$U0r&n (case-lambda ((g$V$22095$U0r&n) (* (case-lambda ((g$V$22096$U0r&n) (g$mod$13487$U0r&n (case-lambda ((g$V$22097$U0r&n) (g$sign$14440$U0r&n (case-lambda ((g$V$22098$U0r&n) (* g$C$22091$U0r&n g$V$22098$U0r&n g$V$22097$U0r&n))) g$n2$14452$U0r&n))) g$V$22096$U0r&n g$V$22094$U0r&n))) g$V$22095$U0r&n g$n1$14451$U0r&n))) g$n2$14452$U0r&n))) g$n2$14452$U0r&n)))))))))))) (library-letrec*-identity 'g$modulo$14443$U0r&n))) (g$make-promise$14444$U0r&n g$make-promise$14464$U0r&n ((case-lambda ((g$C$22117$U0r&n) (g$C$22117$U0r&n (case-lambda ((g$C$22109$U0r&n g$proc$14453$U0r&n) ((case-lambda ((g$C$22108$U0r&n g$result-ready?$14454$U0r&n g$result$14455$U0r&n) (g$C$22108$U0r&n (case-lambda ((g$C$22106$U0r&n) (if g$result-ready?$14454$U0r&n (g$C$22106$U0r&n g$result$14455$U0r&n) (g$proc$14453$U0r&n (case-lambda ((g$V$22107$U0r&n) ((case-lambda ((g$C$22105$U0r&n g$x$14456$U0r&n) (if g$result-ready?$14454$U0r&n (g$C$22105$U0r&n g$result$14455$U0r&n) (begin (set! g$result-ready?$14454$U0r&n '#t) (begin (set! g$result$14455$U0r&n g$x$14456$U0r&n) (g$C$22105$U0r&n g$result$14455$U0r&n)))))) g$C$22106$U0r&n g$V$22107$U0r&n)))))))))) g$C$22109$U0r&n '#f '#f)))))) (library-letrec*-identity 'g$make-promise$14444$U0r&n))) (g$force$14445$U0r&n g$force$14465$U0r&n ((case-lambda ((g$C$22118$U0r&n) (g$C$22118$U0r&n (case-lambda ((g$C$22110$U0r&n g$object$14457$U0r&n) (g$object$14457$U0r&n g$C$22110$U0r&n)))))) (library-letrec*-identity 'g$force$14445$U0r&n)))) (void identity-for-cps))(library-letrec* (ironscheme sorting) ((g$split$14466$U0r&n g$split$14491$U0r&n ((case-lambda ((g$C$22171$U0r&n) (g$C$22171$U0r&n (case-lambda ((g$C$22133$U0r&n g$ls$14470$U0r&n) ((case-lambda ((g$C$22132$U0r&n g$loop$14471$U0r&n) ((case-lambda ((g$C$22120$U0r&n g$loop$22119$U0r&n) (begin (set! g$loop$14471$U0r&n g$loop$22119$U0r&n) (g$C$22120$U0r&n g$loop$14471$U0r&n)))) g$C$22132$U0r&n (case-lambda ((g$C$22121$U0r&n g$rest$14472$U0r&n g$left$14473$U0r&n g$right$14474$U0r&n) (null? (case-lambda ((g$T$22122$U0r&n) (if g$T$22122$U0r&n (cons g$C$22121$U0r&n g$left$14473$U0r&n g$right$14474$U0r&n) (cdr (case-lambda ((g$V$22123$U0r&n) (null? (case-lambda ((g$T$22124$U0r&n) (if g$T$22124$U0r&n (car (case-lambda ((g$V$22125$U0r&n) (cons (case-lambda ((g$V$22126$U0r&n) (cons g$C$22121$U0r&n g$V$22126$U0r&n g$right$14474$U0r&n))) g$V$22125$U0r&n g$left$14473$U0r&n))) g$rest$14472$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$22127$U0r&n) (cons (case-lambda ((g$V$22128$U0r&n) (car (case-lambda ((g$V$22129$U0r&n) (cons (case-lambda ((g$V$22130$U0r&n) (g$cddr$13508$U0r&n (case-lambda ((g$V$22131$U0r&n) (g$loop$14471$U0r&n g$C$22121$U0r&n g$V$22131$U0r&n g$V$22130$U0r&n g$V$22128$U0r&n))) g$rest$14472$U0r&n))) g$V$22129$U0r&n g$left$14473$U0r&n))) g$rest$14472$U0r&n))) g$V$22127$U0r&n g$right$14474$U0r&n))) g$rest$14472$U0r&n)))) g$V$22123$U0r&n))) g$rest$14472$U0r&n)))) g$rest$14472$U0r&n)))))) (case-lambda ((g$V$22134$U0r&n) (g$V$22134$U0r&n g$C$22133$U0r&n g$ls$14470$U0r&n '() '()))) uninitialized)))))) (library-letrec*-identity 'g$split$14466$U0r&n))) (g$reverse-it$14467$U0r&n g$reverse-it$14492$U0r&n ((case-lambda ((g$C$22172$U0r&n) (g$C$22172$U0r&n (case-lambda ((g$C$22135$U0r&n g$head$14475$U0r&n g$tail$14476$U0r&n) (null? (case-lambda ((g$T$22136$U0r&n) (if g$T$22136$U0r&n (g$C$22135$U0r&n g$tail$14476$U0r&n) (car (case-lambda ((g$V$22137$U0r&n) (cons (case-lambda ((g$V$22138$U0r&n) (cdr (case-lambda ((g$V$22139$U0r&n) (g$reverse-it$14467$U0r&n g$C$22135$U0r&n g$V$22139$U0r&n g$V$22138$U0r&n))) g$head$14475$U0r&n))) g$V$22137$U0r&n g$tail$14476$U0r&n))) g$head$14475$U0r&n)))) g$head$14475$U0r&n)))))) (library-letrec*-identity 'g$reverse-it$14467$U0r&n))) (g$merge$14468$U0r&n g$merge$14493$U0r&n ((case-lambda ((g$C$22173$U0r&n) (g$C$22173$U0r&n (case-lambda ((g$C$22154$U0r&n g$list-1$14477$U0r&n g$list-2$14478$U0r&n g$precedes?$14479$U0r&n) ((case-lambda ((g$C$22153$U0r&n g$loop$14480$U0r&n) ((case-lambda ((g$C$22141$U0r&n g$loop$22140$U0r&n) (begin (set! g$loop$14480$U0r&n g$loop$22140$U0r&n) (g$C$22141$U0r&n g$loop$14480$U0r&n)))) g$C$22153$U0r&n (case-lambda ((g$C$22148$U0r&n g$source-1$14481$U0r&n g$source-2$14482$U0r&n g$so-far$14483$U0r&n) (null? (case-lambda ((g$T$22149$U0r&n) (if g$T$22149$U0r&n (g$reverse-it$14467$U0r&n g$C$22148$U0r&n g$so-far$14483$U0r&n g$source-2$14482$U0r&n) (null? (case-lambda ((g$T$22150$U0r&n) (if g$T$22150$U0r&n (g$reverse-it$14467$U0r&n g$C$22148$U0r&n g$so-far$14483$U0r&n g$source-1$14481$U0r&n) (car (case-lambda ((g$V$22151$U0r&n) (car (case-lambda ((g$V$22152$U0r&n) ((case-lambda ((g$C$22142$U0r&n g$car-1$14484$U0r&n g$car-2$14485$U0r&n) (g$precedes?$14479$U0r&n (case-lambda ((g$T$22143$U0r&n) (if g$T$22143$U0r&n (cons (case-lambda ((g$V$22144$U0r&n) (cdr (case-lambda ((g$V$22145$U0r&n) (g$loop$14480$U0r&n g$C$22142$U0r&n g$source-1$14481$U0r&n g$V$22145$U0r&n g$V$22144$U0r&n))) g$source-2$14482$U0r&n))) g$car-2$14485$U0r&n g$so-far$14483$U0r&n) (cons (case-lambda ((g$V$22146$U0r&n) (cdr (case-lambda ((g$V$22147$U0r&n) (g$loop$14480$U0r&n g$C$22142$U0r&n g$source-2$14482$U0r&n g$V$22147$U0r&n g$V$22146$U0r&n))) g$source-1$14481$U0r&n))) g$car-1$14484$U0r&n g$so-far$14483$U0r&n)))) g$car-2$14485$U0r&n g$car-1$14484$U0r&n))) g$C$22148$U0r&n g$V$22152$U0r&n g$V$22151$U0r&n))) g$source-1$14481$U0r&n))) g$source-2$14482$U0r&n)))) g$source-2$14482$U0r&n)))) g$source-1$14481$U0r&n)))))) (case-lambda ((g$V$22155$U0r&n) (g$V$22155$U0r&n g$C$22154$U0r&n g$list-1$14477$U0r&n g$list-2$14478$U0r&n '()))) uninitialized)))))) (library-letrec*-identity 'g$merge$14468$U0r&n))) (g$list-sort$14469$U0r&n g$list-sort$14494$U0r&n ((case-lambda ((g$C$22174$U0r&n) (g$C$22174$U0r&n (case-lambda ((g$C$22168$U0r&n g$precedes?$14486$U0r&n g$ls$14487$U0r&n) (null? (case-lambda ((g$T$22169$U0r&n) (if g$T$22169$U0r&n (g$C$22168$U0r&n '()) ((case-lambda ((g$C$22167$U0r&n g$helper$14488$U0r&n) ((case-lambda ((g$C$22157$U0r&n g$helper$22156$U0r&n) (begin (set! g$helper$14488$U0r&n g$helper$22156$U0r&n) (g$C$22157$U0r&n g$helper$14488$U0r&n)))) g$C$22167$U0r&n (case-lambda ((g$C$22163$U0r&n g$piece$14489$U0r&n) (cdr (case-lambda ((g$V$22164$U0r&n) (null? (case-lambda ((g$T$22165$U0r&n) (if g$T$22165$U0r&n (g$C$22163$U0r&n g$piece$14489$U0r&n) (g$split$14466$U0r&n (case-lambda ((g$V$22166$U0r&n) ((case-lambda ((g$C$22158$U0r&n g$parts$14490$U0r&n) (cdr (case-lambda ((g$V$22159$U0r&n) (g$helper$14488$U0r&n (case-lambda ((g$V$22160$U0r&n) (car (case-lambda ((g$V$22161$U0r&n) (g$helper$14488$U0r&n (case-lambda ((g$V$22162$U0r&n) (g$merge$14468$U0r&n g$C$22158$U0r&n g$V$22162$U0r&n g$V$22160$U0r&n g$precedes?$14486$U0r&n))) g$V$22161$U0r&n))) g$parts$14490$U0r&n))) g$V$22159$U0r&n))) g$parts$14490$U0r&n))) g$C$22163$U0r&n g$V$22166$U0r&n))) g$piece$14489$U0r&n)))) g$V$22164$U0r&n))) g$piece$14489$U0r&n)))))) (case-lambda ((g$V$22170$U0r&n) (g$V$22170$U0r&n g$C$22168$U0r&n g$ls$14487$U0r&n))) uninitialized)))) g$ls$14487$U0r&n)))))) (library-letrec*-identity 'g$list-sort$14469$U0r&n)))) (void identity-for-cps))(library-letrec* (ironscheme syntax-case) () (void identity-for-cps))(library-letrec* (ironscheme unicode) ((g$string-ci=?$14533$U0r&n g$string-ci=?$14639$U0r&n ((case-lambda ((g$C$22334$U0r&n) (g$C$22334$U0r&n (case-lambda ((g$C$22183$U0r&n g$a$14585$U0r&n g$b$14586$U0r&n . g$rest$14587$U0r&n) ((case-lambda ((g$J$22186$U0r&n) (string? (case-lambda ((g$V$22187$U0r&n) (not (case-lambda ((g$T$22188$U0r&n) (if g$T$22188$U0r&n (g$assertion-violation$13786$U0r&n g$J$22186$U0r&n 'string-ci=? '"not a string" g$a$14585$U0r&n) (void g$J$22186$U0r&n)))) g$V$22187$U0r&n))) g$a$14585$U0r&n))) (case-lambda (g$IGNORE$22184$U0r&n (cons (case-lambda ((g$V$22185$U0r&n) (g$for-all$12751$U0r&n g$C$22183$U0r&n (case-lambda ((g$C$22176$U0r&n g$x$14588$U0r&n) ((case-lambda ((g$J$22180$U0r&n) (string? (case-lambda ((g$V$22181$U0r&n) (not (case-lambda ((g$T$22182$U0r&n) (if g$T$22182$U0r&n (g$assertion-violation$13786$U0r&n g$J$22180$U0r&n 'string-ci=? '"not a string" g$x$14588$U0r&n) (void g$J$22180$U0r&n)))) g$V$22181$U0r&n))) g$x$14588$U0r&n))) (case-lambda (g$IGNORE$22177$U0r&n (string-ci-compare (case-lambda ((g$V$22178$U0r&n) (= (case-lambda ((g$V$22179$U0r&n) ((case-lambda ((g$C$22175$U0r&n g$r$14589$U0r&n) (begin (set! g$a$14585$U0r&n g$x$14588$U0r&n) (g$C$22175$U0r&n g$r$14589$U0r&n)))) g$C$22176$U0r&n g$V$22179$U0r&n))) g$V$22178$U0r&n '0))) g$a$14585$U0r&n g$x$14588$U0r&n)))))) g$V$22185$U0r&n))) g$b$14586$U0r&n g$rest$14587$U0r&n))))))))) (library-letrec*-identity 'g$string-ci=?$14533$U0r&n))) (g$string-ci<?$14534$U0r&n g$string-ci<?$14640$U0r&n ((case-lambda ((g$C$22335$U0r&n) (g$C$22335$U0r&n (case-lambda ((g$C$22197$U0r&n g$a$14590$U0r&n g$b$14591$U0r&n . g$rest$14592$U0r&n) ((case-lambda ((g$J$22200$U0r&n) (string? (case-lambda ((g$V$22201$U0r&n) (not (case-lambda ((g$T$22202$U0r&n) (if g$T$22202$U0r&n (g$assertion-violation$13786$U0r&n g$J$22200$U0r&n 'string-ci<? '"not a string" g$a$14590$U0r&n) (void g$J$22200$U0r&n)))) g$V$22201$U0r&n))) g$a$14590$U0r&n))) (case-lambda (g$IGNORE$22198$U0r&n (cons (case-lambda ((g$V$22199$U0r&n) (g$for-all$12751$U0r&n g$C$22197$U0r&n (case-lambda ((g$C$22190$U0r&n g$x$14593$U0r&n) ((case-lambda ((g$J$22194$U0r&n) (string? (case-lambda ((g$V$22195$U0r&n) (not (case-lambda ((g$T$22196$U0r&n) (if g$T$22196$U0r&n (g$assertion-violation$13786$U0r&n g$J$22194$U0r&n 'string-ci<? '"not a string" g$x$14593$U0r&n) (void g$J$22194$U0r&n)))) g$V$22195$U0r&n))) g$x$14593$U0r&n))) (case-lambda (g$IGNORE$22191$U0r&n (string-ci-compare (case-lambda ((g$V$22192$U0r&n) (< (case-lambda ((g$V$22193$U0r&n) ((case-lambda ((g$C$22189$U0r&n g$r$14594$U0r&n) (begin (set! g$a$14590$U0r&n g$x$14593$U0r&n) (g$C$22189$U0r&n g$r$14594$U0r&n)))) g$C$22190$U0r&n g$V$22193$U0r&n))) g$V$22192$U0r&n '0))) g$a$14590$U0r&n g$x$14593$U0r&n)))))) g$V$22199$U0r&n))) g$b$14591$U0r&n g$rest$14592$U0r&n))))))))) (library-letrec*-identity 'g$string-ci<?$14534$U0r&n))) (g$string-ci>?$14535$U0r&n g$string-ci>?$14641$U0r&n ((case-lambda ((g$C$22336$U0r&n) (g$C$22336$U0r&n (case-lambda ((g$C$22211$U0r&n g$a$14595$U0r&n g$b$14596$U0r&n . g$rest$14597$U0r&n) ((case-lambda ((g$J$22214$U0r&n) (string? (case-lambda ((g$V$22215$U0r&n) (not (case-lambda ((g$T$22216$U0r&n) (if g$T$22216$U0r&n (g$assertion-violation$13786$U0r&n g$J$22214$U0r&n 'string-ci>? '"not a string" g$a$14595$U0r&n) (void g$J$22214$U0r&n)))) g$V$22215$U0r&n))) g$a$14595$U0r&n))) (case-lambda (g$IGNORE$22212$U0r&n (cons (case-lambda ((g$V$22213$U0r&n) (g$for-all$12751$U0r&n g$C$22211$U0r&n (case-lambda ((g$C$22204$U0r&n g$x$14598$U0r&n) ((case-lambda ((g$J$22208$U0r&n) (string? (case-lambda ((g$V$22209$U0r&n) (not (case-lambda ((g$T$22210$U0r&n) (if g$T$22210$U0r&n (g$assertion-violation$13786$U0r&n g$J$22208$U0r&n 'string-ci>? '"not a string" g$x$14598$U0r&n) (void g$J$22208$U0r&n)))) g$V$22209$U0r&n))) g$x$14598$U0r&n))) (case-lambda (g$IGNORE$22205$U0r&n (string-ci-compare (case-lambda ((g$V$22206$U0r&n) (> (case-lambda ((g$V$22207$U0r&n) ((case-lambda ((g$C$22203$U0r&n g$r$14599$U0r&n) (begin (set! g$a$14595$U0r&n g$x$14598$U0r&n) (g$C$22203$U0r&n g$r$14599$U0r&n)))) g$C$22204$U0r&n g$V$22207$U0r&n))) g$V$22206$U0r&n '0))) g$a$14595$U0r&n g$x$14598$U0r&n)))))) g$V$22213$U0r&n))) g$b$14596$U0r&n g$rest$14597$U0r&n))))))))) (library-letrec*-identity 'g$string-ci>?$14535$U0r&n))) (g$string-ci<=?$14536$U0r&n g$string-ci<=?$14642$U0r&n ((case-lambda ((g$C$22337$U0r&n) (g$C$22337$U0r&n (case-lambda ((g$C$22225$U0r&n g$a$14600$U0r&n g$b$14601$U0r&n . g$rest$14602$U0r&n) ((case-lambda ((g$J$22228$U0r&n) (string? (case-lambda ((g$V$22229$U0r&n) (not (case-lambda ((g$T$22230$U0r&n) (if g$T$22230$U0r&n (g$assertion-violation$13786$U0r&n g$J$22228$U0r&n 'string-ci<=? '"not a string" g$a$14600$U0r&n) (void g$J$22228$U0r&n)))) g$V$22229$U0r&n))) g$a$14600$U0r&n))) (case-lambda (g$IGNORE$22226$U0r&n (cons (case-lambda ((g$V$22227$U0r&n) (g$for-all$12751$U0r&n g$C$22225$U0r&n (case-lambda ((g$C$22218$U0r&n g$x$14603$U0r&n) ((case-lambda ((g$J$22222$U0r&n) (string? (case-lambda ((g$V$22223$U0r&n) (not (case-lambda ((g$T$22224$U0r&n) (if g$T$22224$U0r&n (g$assertion-violation$13786$U0r&n g$J$22222$U0r&n 'string-ci<=? '"not a string" g$x$14603$U0r&n) (void g$J$22222$U0r&n)))) g$V$22223$U0r&n))) g$x$14603$U0r&n))) (case-lambda (g$IGNORE$22219$U0r&n (string-ci-compare (case-lambda ((g$V$22220$U0r&n) (<= (case-lambda ((g$V$22221$U0r&n) ((case-lambda ((g$C$22217$U0r&n g$r$14604$U0r&n) (begin (set! g$a$14600$U0r&n g$x$14603$U0r&n) (g$C$22217$U0r&n g$r$14604$U0r&n)))) g$C$22218$U0r&n g$V$22221$U0r&n))) g$V$22220$U0r&n '0))) g$a$14600$U0r&n g$x$14603$U0r&n)))))) g$V$22227$U0r&n))) g$b$14601$U0r&n g$rest$14602$U0r&n))))))))) (library-letrec*-identity 'g$string-ci<=?$14536$U0r&n))) (g$string-ci>=?$14537$U0r&n g$string-ci>=?$14643$U0r&n ((case-lambda ((g$C$22338$U0r&n) (g$C$22338$U0r&n (case-lambda ((g$C$22239$U0r&n g$a$14605$U0r&n g$b$14606$U0r&n . g$rest$14607$U0r&n) ((case-lambda ((g$J$22242$U0r&n) (string? (case-lambda ((g$V$22243$U0r&n) (not (case-lambda ((g$T$22244$U0r&n) (if g$T$22244$U0r&n (g$assertion-violation$13786$U0r&n g$J$22242$U0r&n 'string-ci>=? '"not a string" g$a$14605$U0r&n) (void g$J$22242$U0r&n)))) g$V$22243$U0r&n))) g$a$14605$U0r&n))) (case-lambda (g$IGNORE$22240$U0r&n (cons (case-lambda ((g$V$22241$U0r&n) (g$for-all$12751$U0r&n g$C$22239$U0r&n (case-lambda ((g$C$22232$U0r&n g$x$14608$U0r&n) ((case-lambda ((g$J$22236$U0r&n) (string? (case-lambda ((g$V$22237$U0r&n) (not (case-lambda ((g$T$22238$U0r&n) (if g$T$22238$U0r&n (g$assertion-violation$13786$U0r&n g$J$22236$U0r&n 'string-ci>=? '"not a string" g$x$14608$U0r&n) (void g$J$22236$U0r&n)))) g$V$22237$U0r&n))) g$x$14608$U0r&n))) (case-lambda (g$IGNORE$22233$U0r&n (string-ci-compare (case-lambda ((g$V$22234$U0r&n) (>= (case-lambda ((g$V$22235$U0r&n) ((case-lambda ((g$C$22231$U0r&n g$r$14609$U0r&n) (begin (set! g$a$14605$U0r&n g$x$14608$U0r&n) (g$C$22231$U0r&n g$r$14609$U0r&n)))) g$C$22232$U0r&n g$V$22235$U0r&n))) g$V$22234$U0r&n '0))) g$a$14605$U0r&n g$x$14608$U0r&n)))))) g$V$22241$U0r&n))) g$b$14606$U0r&n g$rest$14607$U0r&n))))))))) (library-letrec*-identity 'g$string-ci>=?$14537$U0r&n))) (g$char-ci=?$14576$U0r&n g$char-ci=?$14644$U0r&n ((case-lambda ((g$C$22339$U0r&n) (g$C$22339$U0r&n (case-lambda ((g$C$22256$U0r&n g$a$14610$U0r&n g$b$14611$U0r&n . g$rest$14612$U0r&n) ((case-lambda ((g$J$22259$U0r&n) (g$char?$13493$U0r&n (case-lambda ((g$V$22260$U0r&n) (not (case-lambda ((g$T$22261$U0r&n) (if g$T$22261$U0r&n (g$assertion-violation$13786$U0r&n g$J$22259$U0r&n 'char-ci=? '"not a char" g$a$14610$U0r&n) (void g$J$22259$U0r&n)))) g$V$22260$U0r&n))) g$a$14610$U0r&n))) (case-lambda (g$IGNORE$22257$U0r&n (cons (case-lambda ((g$V$22258$U0r&n) (g$for-all$12751$U0r&n g$C$22256$U0r&n (case-lambda ((g$C$22246$U0r&n g$x$14613$U0r&n) ((case-lambda ((g$J$22253$U0r&n) (g$char?$13493$U0r&n (case-lambda ((g$V$22254$U0r&n) (not (case-lambda ((g$T$22255$U0r&n) (if g$T$22255$U0r&n (g$assertion-violation$13786$U0r&n g$J$22253$U0r&n 'char-ci=? '"not a char" g$x$14613$U0r&n) (void g$J$22253$U0r&n)))) g$V$22254$U0r&n))) g$x$14613$U0r&n))) (case-lambda (g$IGNORE$22247$U0r&n (char-upcase (case-lambda ((g$V$22248$U0r&n) (char->integer (case-lambda ((g$V$22249$U0r&n) (char-upcase (case-lambda ((g$V$22250$U0r&n) (char->integer (case-lambda ((g$V$22251$U0r&n) (= (case-lambda ((g$V$22252$U0r&n) ((case-lambda ((g$C$22245$U0r&n g$r$14614$U0r&n) (begin (set! g$a$14610$U0r&n g$x$14613$U0r&n) (g$C$22245$U0r&n g$r$14614$U0r&n)))) g$C$22246$U0r&n g$V$22252$U0r&n))) g$V$22251$U0r&n g$V$22249$U0r&n))) g$V$22250$U0r&n))) g$a$14610$U0r&n))) g$V$22248$U0r&n))) g$x$14613$U0r&n)))))) g$V$22258$U0r&n))) g$b$14611$U0r&n g$rest$14612$U0r&n))))))))) (library-letrec*-identity 'g$char-ci=?$14576$U0r&n))) (g$char-ci<?$14577$U0r&n g$char-ci<?$14645$U0r&n ((case-lambda ((g$C$22340$U0r&n) (g$C$22340$U0r&n (case-lambda ((g$C$22273$U0r&n g$a$14615$U0r&n g$b$14616$U0r&n . g$rest$14617$U0r&n) ((case-lambda ((g$J$22276$U0r&n) (g$char?$13493$U0r&n (case-lambda ((g$V$22277$U0r&n) (not (case-lambda ((g$T$22278$U0r&n) (if g$T$22278$U0r&n (g$assertion-violation$13786$U0r&n g$J$22276$U0r&n 'char-ci<? '"not a char" g$a$14615$U0r&n) (void g$J$22276$U0r&n)))) g$V$22277$U0r&n))) g$a$14615$U0r&n))) (case-lambda (g$IGNORE$22274$U0r&n (cons (case-lambda ((g$V$22275$U0r&n) (g$for-all$12751$U0r&n g$C$22273$U0r&n (case-lambda ((g$C$22263$U0r&n g$x$14618$U0r&n) ((case-lambda ((g$J$22270$U0r&n) (g$char?$13493$U0r&n (case-lambda ((g$V$22271$U0r&n) (not (case-lambda ((g$T$22272$U0r&n) (if g$T$22272$U0r&n (g$assertion-violation$13786$U0r&n g$J$22270$U0r&n 'char-ci<? '"not a char" g$x$14618$U0r&n) (void g$J$22270$U0r&n)))) g$V$22271$U0r&n))) g$x$14618$U0r&n))) (case-lambda (g$IGNORE$22264$U0r&n (char-upcase (case-lambda ((g$V$22265$U0r&n) (char->integer (case-lambda ((g$V$22266$U0r&n) (char-upcase (case-lambda ((g$V$22267$U0r&n) (char->integer (case-lambda ((g$V$22268$U0r&n) (< (case-lambda ((g$V$22269$U0r&n) ((case-lambda ((g$C$22262$U0r&n g$r$14619$U0r&n) (begin (set! g$a$14615$U0r&n g$x$14618$U0r&n) (g$C$22262$U0r&n g$r$14619$U0r&n)))) g$C$22263$U0r&n g$V$22269$U0r&n))) g$V$22268$U0r&n g$V$22266$U0r&n))) g$V$22267$U0r&n))) g$a$14615$U0r&n))) g$V$22265$U0r&n))) g$x$14618$U0r&n)))))) g$V$22275$U0r&n))) g$b$14616$U0r&n g$rest$14617$U0r&n))))))))) (library-letrec*-identity 'g$char-ci<?$14577$U0r&n))) (g$char-ci>?$14578$U0r&n g$char-ci>?$14646$U0r&n ((case-lambda ((g$C$22341$U0r&n) (g$C$22341$U0r&n (case-lambda ((g$C$22290$U0r&n g$a$14620$U0r&n g$b$14621$U0r&n . g$rest$14622$U0r&n) ((case-lambda ((g$J$22293$U0r&n) (g$char?$13493$U0r&n (case-lambda ((g$V$22294$U0r&n) (not (case-lambda ((g$T$22295$U0r&n) (if g$T$22295$U0r&n (g$assertion-violation$13786$U0r&n g$J$22293$U0r&n 'char-ci>? '"not a char" g$a$14620$U0r&n) (void g$J$22293$U0r&n)))) g$V$22294$U0r&n))) g$a$14620$U0r&n))) (case-lambda (g$IGNORE$22291$U0r&n (cons (case-lambda ((g$V$22292$U0r&n) (g$for-all$12751$U0r&n g$C$22290$U0r&n (case-lambda ((g$C$22280$U0r&n g$x$14623$U0r&n) ((case-lambda ((g$J$22287$U0r&n) (g$char?$13493$U0r&n (case-lambda ((g$V$22288$U0r&n) (not (case-lambda ((g$T$22289$U0r&n) (if g$T$22289$U0r&n (g$assertion-violation$13786$U0r&n g$J$22287$U0r&n 'char-ci>? '"not a char" g$x$14623$U0r&n) (void g$J$22287$U0r&n)))) g$V$22288$U0r&n))) g$x$14623$U0r&n))) (case-lambda (g$IGNORE$22281$U0r&n (char-upcase (case-lambda ((g$V$22282$U0r&n) (char->integer (case-lambda ((g$V$22283$U0r&n) (char-upcase (case-lambda ((g$V$22284$U0r&n) (char->integer (case-lambda ((g$V$22285$U0r&n) (> (case-lambda ((g$V$22286$U0r&n) ((case-lambda ((g$C$22279$U0r&n g$r$14624$U0r&n) (begin (set! g$a$14620$U0r&n g$x$14623$U0r&n) (g$C$22279$U0r&n g$r$14624$U0r&n)))) g$C$22280$U0r&n g$V$22286$U0r&n))) g$V$22285$U0r&n g$V$22283$U0r&n))) g$V$22284$U0r&n))) g$a$14620$U0r&n))) g$V$22282$U0r&n))) g$x$14623$U0r&n)))))) g$V$22292$U0r&n))) g$b$14621$U0r&n g$rest$14622$U0r&n))))))))) (library-letrec*-identity 'g$char-ci>?$14578$U0r&n))) (g$char-ci<=?$14579$U0r&n g$char-ci<=?$14647$U0r&n ((case-lambda ((g$C$22342$U0r&n) (g$C$22342$U0r&n (case-lambda ((g$C$22307$U0r&n g$a$14625$U0r&n g$b$14626$U0r&n . g$rest$14627$U0r&n) ((case-lambda ((g$J$22310$U0r&n) (g$char?$13493$U0r&n (case-lambda ((g$V$22311$U0r&n) (not (case-lambda ((g$T$22312$U0r&n) (if g$T$22312$U0r&n (g$assertion-violation$13786$U0r&n g$J$22310$U0r&n 'char-ci<=? '"not a char" g$a$14625$U0r&n) (void g$J$22310$U0r&n)))) g$V$22311$U0r&n))) g$a$14625$U0r&n))) (case-lambda (g$IGNORE$22308$U0r&n (cons (case-lambda ((g$V$22309$U0r&n) (g$for-all$12751$U0r&n g$C$22307$U0r&n (case-lambda ((g$C$22297$U0r&n g$x$14628$U0r&n) ((case-lambda ((g$J$22304$U0r&n) (g$char?$13493$U0r&n (case-lambda ((g$V$22305$U0r&n) (not (case-lambda ((g$T$22306$U0r&n) (if g$T$22306$U0r&n (g$assertion-violation$13786$U0r&n g$J$22304$U0r&n 'char-ci<=? '"not a char" g$x$14628$U0r&n) (void g$J$22304$U0r&n)))) g$V$22305$U0r&n))) g$x$14628$U0r&n))) (case-lambda (g$IGNORE$22298$U0r&n (char-upcase (case-lambda ((g$V$22299$U0r&n) (char->integer (case-lambda ((g$V$22300$U0r&n) (char-upcase (case-lambda ((g$V$22301$U0r&n) (char->integer (case-lambda ((g$V$22302$U0r&n) (<= (case-lambda ((g$V$22303$U0r&n) ((case-lambda ((g$C$22296$U0r&n g$r$14629$U0r&n) (begin (set! g$a$14625$U0r&n g$x$14628$U0r&n) (g$C$22296$U0r&n g$r$14629$U0r&n)))) g$C$22297$U0r&n g$V$22303$U0r&n))) g$V$22302$U0r&n g$V$22300$U0r&n))) g$V$22301$U0r&n))) g$a$14625$U0r&n))) g$V$22299$U0r&n))) g$x$14628$U0r&n)))))) g$V$22309$U0r&n))) g$b$14626$U0r&n g$rest$14627$U0r&n))))))))) (library-letrec*-identity 'g$char-ci<=?$14579$U0r&n))) (g$char-ci>=?$14580$U0r&n g$char-ci>=?$14648$U0r&n ((case-lambda ((g$C$22343$U0r&n) (g$C$22343$U0r&n (case-lambda ((g$C$22324$U0r&n g$a$14630$U0r&n g$b$14631$U0r&n . g$rest$14632$U0r&n) ((case-lambda ((g$J$22327$U0r&n) (g$char?$13493$U0r&n (case-lambda ((g$V$22328$U0r&n) (not (case-lambda ((g$T$22329$U0r&n) (if g$T$22329$U0r&n (g$assertion-violation$13786$U0r&n g$J$22327$U0r&n 'char-ci>=? '"not a char" g$a$14630$U0r&n) (void g$J$22327$U0r&n)))) g$V$22328$U0r&n))) g$a$14630$U0r&n))) (case-lambda (g$IGNORE$22325$U0r&n (cons (case-lambda ((g$V$22326$U0r&n) (g$for-all$12751$U0r&n g$C$22324$U0r&n (case-lambda ((g$C$22314$U0r&n g$x$14633$U0r&n) ((case-lambda ((g$J$22321$U0r&n) (g$char?$13493$U0r&n (case-lambda ((g$V$22322$U0r&n) (not (case-lambda ((g$T$22323$U0r&n) (if g$T$22323$U0r&n (g$assertion-violation$13786$U0r&n g$J$22321$U0r&n 'char-ci>=? '"not a char" g$x$14633$U0r&n) (void g$J$22321$U0r&n)))) g$V$22322$U0r&n))) g$x$14633$U0r&n))) (case-lambda (g$IGNORE$22315$U0r&n (char-upcase (case-lambda ((g$V$22316$U0r&n) (char->integer (case-lambda ((g$V$22317$U0r&n) (char-upcase (case-lambda ((g$V$22318$U0r&n) (char->integer (case-lambda ((g$V$22319$U0r&n) (>= (case-lambda ((g$V$22320$U0r&n) ((case-lambda ((g$C$22313$U0r&n g$r$14634$U0r&n) (begin (set! g$a$14630$U0r&n g$x$14633$U0r&n) (g$C$22313$U0r&n g$r$14634$U0r&n)))) g$C$22314$U0r&n g$V$22320$U0r&n))) g$V$22319$U0r&n g$V$22317$U0r&n))) g$V$22318$U0r&n))) g$a$14630$U0r&n))) g$V$22316$U0r&n))) g$x$14633$U0r&n)))))) g$V$22326$U0r&n))) g$b$14631$U0r&n g$rest$14632$U0r&n))))))))) (library-letrec*-identity 'g$char-ci>=?$14580$U0r&n))) (g$string-normalize-nfc$14581$U0r&n g$string-normalize-nfc$14649$U0r&n ((case-lambda ((g$C$22344$U0r&n) (g$C$22344$U0r&n (case-lambda ((g$C$22330$U0r&n g$s$14635$U0r&n) (string-normalize g$C$22330$U0r&n g$s$14635$U0r&n 'formc)))))) (library-letrec*-identity 'g$string-normalize-nfc$14581$U0r&n))) (g$string-normalize-nfd$14582$U0r&n g$string-normalize-nfd$14650$U0r&n ((case-lambda ((g$C$22345$U0r&n) (g$C$22345$U0r&n (case-lambda ((g$C$22331$U0r&n g$s$14636$U0r&n) (string-normalize g$C$22331$U0r&n g$s$14636$U0r&n 'formd)))))) (library-letrec*-identity 'g$string-normalize-nfd$14582$U0r&n))) (g$string-normalize-nfkc$14583$U0r&n g$string-normalize-nfkc$14651$U0r&n ((case-lambda ((g$C$22346$U0r&n) (g$C$22346$U0r&n (case-lambda ((g$C$22332$U0r&n g$s$14637$U0r&n) (string-normalize g$C$22332$U0r&n g$s$14637$U0r&n 'formkc)))))) (library-letrec*-identity 'g$string-normalize-nfkc$14583$U0r&n))) (g$string-normalize-nfkd$14584$U0r&n g$string-normalize-nfkd$14652$U0r&n ((case-lambda ((g$C$22347$U0r&n) (g$C$22347$U0r&n (case-lambda ((g$C$22333$U0r&n g$s$14638$U0r&n) (string-normalize g$C$22333$U0r&n g$s$14638$U0r&n 'formkd)))))) (library-letrec*-identity 'g$string-normalize-nfkd$14584$U0r&n)))) (void identity-for-cps))(library-letrec* (ironscheme arithmetic bitwise) ((g$bitwise-if$14653$U0r&n g$bitwise-if$14684$U0r&n ((case-lambda ((g$C$22379$U0r&n) (g$C$22379$U0r&n (case-lambda ((g$C$22348$U0r&n g$ei1$14660$U0r&n g$ei2$14661$U0r&n g$ei3$14662$U0r&n) (bitwise-not (case-lambda ((g$V$22349$U0r&n) (bitwise-and (case-lambda ((g$V$22350$U0r&n) (bitwise-and (case-lambda ((g$V$22351$U0r&n) (bitwise-ior g$C$22348$U0r&n g$V$22351$U0r&n g$V$22350$U0r&n))) g$ei1$14660$U0r&n g$ei2$14661$U0r&n))) g$V$22349$U0r&n g$ei3$14662$U0r&n))) g$ei1$14660$U0r&n)))))) (library-letrec*-identity 'g$bitwise-if$14653$U0r&n))) (g$bitwise-copy-bit$14654$U0r&n g$bitwise-copy-bit$14685$U0r&n ((case-lambda ((g$C$22380$U0r&n) (g$C$22380$U0r&n (case-lambda ((g$C$22352$U0r&n g$ei1$14663$U0r&n g$ei2$14664$U0r&n g$ei3$14665$U0r&n) (g$bitwise-arithmetic-shift-left$14657$U0r&n (case-lambda ((g$V$22353$U0r&n) (g$bitwise-arithmetic-shift-left$14657$U0r&n (case-lambda ((g$V$22354$U0r&n) (g$bitwise-if$14653$U0r&n g$C$22352$U0r&n g$V$22354$U0r&n g$V$22353$U0r&n g$ei1$14663$U0r&n))) '1 g$ei2$14664$U0r&n))) g$ei3$14665$U0r&n g$ei2$14664$U0r&n)))))) (library-letrec*-identity 'g$bitwise-copy-bit$14654$U0r&n))) (g$bitwise-bit-field$14655$U0r&n g$bitwise-bit-field$14686$U0r&n ((case-lambda ((g$C$22381$U0r&n) (g$C$22381$U0r&n (case-lambda ((g$C$22355$U0r&n g$ei1$14666$U0r&n g$ei2$14667$U0r&n g$ei3$14668$U0r&n) (g$bitwise-arithmetic-shift-left$14657$U0r&n (case-lambda ((g$V$22356$U0r&n) (bitwise-not (case-lambda ((g$V$22357$U0r&n) (bitwise-and (case-lambda ((g$V$22358$U0r&n) (g$bitwise-arithmetic-shift-right$14658$U0r&n g$C$22355$U0r&n g$V$22358$U0r&n g$ei2$14667$U0r&n))) g$ei1$14666$U0r&n g$V$22357$U0r&n))) g$V$22356$U0r&n))) '-1 g$ei3$14668$U0r&n)))))) (library-letrec*-identity 'g$bitwise-bit-field$14655$U0r&n))) (g$bitwise-copy-bit-field$14656$U0r&n g$bitwise-copy-bit-field$14687$U0r&n ((case-lambda ((g$C$22382$U0r&n) (g$C$22382$U0r&n (case-lambda ((g$C$22359$U0r&n g$to$14669$U0r&n g$start$14670$U0r&n g$end$14671$U0r&n g$from$14672$U0r&n) (g$bitwise-arithmetic-shift-left$14657$U0r&n (case-lambda ((g$V$22360$U0r&n) (g$bitwise-arithmetic-shift-left$14657$U0r&n (case-lambda ((g$V$22361$U0r&n) (bitwise-not (case-lambda ((g$V$22362$U0r&n) (g$bitwise-arithmetic-shift-left$14657$U0r&n (case-lambda ((g$V$22363$U0r&n) (bitwise-and (case-lambda ((g$V$22364$U0r&n) (g$bitwise-if$14653$U0r&n g$C$22359$U0r&n g$V$22364$U0r&n g$V$22360$U0r&n g$to$14669$U0r&n))) g$V$22363$U0r&n g$V$22362$U0r&n))) '-1 g$start$14670$U0r&n))) g$V$22361$U0r&n))) '-1 g$end$14671$U0r&n))) g$from$14672$U0r&n g$start$14670$U0r&n)))))) (library-letrec*-identity 'g$bitwise-copy-bit-field$14656$U0r&n))) (g$bitwise-arithmetic-shift-left$14657$U0r&n g$bitwise-arithmetic-shift-left$14688$U0r&n ((case-lambda ((g$C$22383$U0r&n) (g$C$22383$U0r&n (case-lambda ((g$C$22365$U0r&n g$ei1$14673$U0r&n g$ei2$14674$U0r&n) (bitwise-arithmetic-shift g$C$22365$U0r&n g$ei1$14673$U0r&n g$ei2$14674$U0r&n)))))) (library-letrec*-identity 'g$bitwise-arithmetic-shift-left$14657$U0r&n))) (g$bitwise-arithmetic-shift-right$14658$U0r&n g$bitwise-arithmetic-shift-right$14689$U0r&n ((case-lambda ((g$C$22384$U0r&n) (g$C$22384$U0r&n (case-lambda ((g$C$22366$U0r&n g$ei1$14675$U0r&n g$ei2$14676$U0r&n) (- (case-lambda ((g$V$22367$U0r&n) (bitwise-arithmetic-shift g$C$22366$U0r&n g$ei1$14675$U0r&n g$V$22367$U0r&n))) g$ei2$14676$U0r&n)))))) (library-letrec*-identity 'g$bitwise-arithmetic-shift-right$14658$U0r&n))) (g$bitwise-rotate-bit-field$14659$U0r&n g$bitwise-rotate-bit-field$14690$U0r&n ((case-lambda ((g$C$22385$U0r&n) (g$C$22385$U0r&n (case-lambda ((g$C$22377$U0r&n g$n$14677$U0r&n g$start$14678$U0r&n g$end$14679$U0r&n g$count$14680$U0r&n) (- (case-lambda ((g$V$22378$U0r&n) ((case-lambda ((g$C$22373$U0r&n g$width$14681$U0r&n) (g$positive?$13533$U0r&n (case-lambda ((g$T$22374$U0r&n) (if g$T$22374$U0r&n (g$bitwise-bit-field$14655$U0r&n (case-lambda ((g$V$22375$U0r&n) (g$mod$13487$U0r&n (case-lambda ((g$V$22376$U0r&n) ((case-lambda ((g$C$22368$U0r&n g$count$14682$U0r&n g$field$14683$U0r&n) (- (case-lambda ((g$V$22369$U0r&n) (g$bitwise-arithmetic-shift-right$14658$U0r&n (case-lambda ((g$V$22370$U0r&n) (g$bitwise-arithmetic-shift-left$14657$U0r&n (case-lambda ((g$V$22371$U0r&n) (bitwise-ior (case-lambda ((g$V$22372$U0r&n) (g$bitwise-copy-bit-field$14656$U0r&n g$C$22368$U0r&n g$n$14677$U0r&n g$start$14678$U0r&n g$end$14679$U0r&n g$V$22372$U0r&n))) g$V$22371$U0r&n g$V$22370$U0r&n))) g$field$14683$U0r&n g$count$14682$U0r&n))) g$field$14683$U0r&n g$V$22369$U0r&n))) g$width$14681$U0r&n g$count$14682$U0r&n))) g$C$22373$U0r&n g$V$22376$U0r&n g$V$22375$U0r&n))) g$count$14680$U0r&n g$width$14681$U0r&n))) g$n$14677$U0r&n g$start$14678$U0r&n g$end$14679$U0r&n) (g$C$22373$U0r&n g$n$14677$U0r&n)))) g$width$14681$U0r&n))) g$C$22377$U0r&n g$V$22378$U0r&n))) g$end$14679$U0r&n g$start$14678$U0r&n)))))) (library-letrec*-identity 'g$bitwise-rotate-bit-field$14659$U0r&n)))) (void identity-for-cps))(library-letrec* (ironscheme arithmetic fixnums) ((g$fxmod$14742$U0r&n g$fxmod$14825$U0r&n ((case-lambda ((g$C$22671$U0r&n) (g$C$22671$U0r&n (case-lambda ((g$C$22389$U0r&n g$x1$14763$U0r&n g$x2$14764$U0r&n) ((case-lambda ((g$J$22395$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22396$U0r&n) (not (case-lambda ((g$T$22397$U0r&n) (if g$T$22397$U0r&n (g$assertion-violation$13786$U0r&n g$J$22395$U0r&n 'fxmod '"not a fixnum" g$x1$14763$U0r&n) (void g$J$22395$U0r&n)))) g$V$22396$U0r&n))) g$x1$14763$U0r&n))) (case-lambda (g$IGNORE$22390$U0r&n ((case-lambda ((g$J$22392$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22393$U0r&n) (not (case-lambda ((g$T$22394$U0r&n) (if g$T$22394$U0r&n (g$assertion-violation$13786$U0r&n g$J$22392$U0r&n 'fxmod '"not a fixnum" g$x2$14764$U0r&n) (void g$J$22392$U0r&n)))) g$V$22393$U0r&n))) g$x2$14764$U0r&n))) (case-lambda (g$IGNORE$22391$U0r&n ((case-lambda ((g$C$22386$U0r&n) (fxdiv (case-lambda ((g$V$22387$U0r&n) ($$fx* (case-lambda ((g$V$22388$U0r&n) ($$fx- g$C$22386$U0r&n g$x1$14763$U0r&n g$V$22388$U0r&n))) g$V$22387$U0r&n g$x2$14764$U0r&n))) g$x1$14763$U0r&n g$x2$14764$U0r&n))) g$C$22389$U0r&n)))))))))))) (library-letrec*-identity 'g$fxmod$14742$U0r&n))) (g$fxmod0$14743$U0r&n g$fxmod0$14826$U0r&n ((case-lambda ((g$C$22672$U0r&n) (g$C$22672$U0r&n (case-lambda ((g$C$22401$U0r&n g$x1$14765$U0r&n g$x2$14766$U0r&n) ((case-lambda ((g$J$22407$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22408$U0r&n) (not (case-lambda ((g$T$22409$U0r&n) (if g$T$22409$U0r&n (g$assertion-violation$13786$U0r&n g$J$22407$U0r&n 'fxmod0 '"not a fixnum" g$x1$14765$U0r&n) (void g$J$22407$U0r&n)))) g$V$22408$U0r&n))) g$x1$14765$U0r&n))) (case-lambda (g$IGNORE$22402$U0r&n ((case-lambda ((g$J$22404$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22405$U0r&n) (not (case-lambda ((g$T$22406$U0r&n) (if g$T$22406$U0r&n (g$assertion-violation$13786$U0r&n g$J$22404$U0r&n 'fxmod0 '"not a fixnum" g$x2$14766$U0r&n) (void g$J$22404$U0r&n)))) g$V$22405$U0r&n))) g$x2$14766$U0r&n))) (case-lambda (g$IGNORE$22403$U0r&n ((case-lambda ((g$C$22398$U0r&n) (fxdiv0 (case-lambda ((g$V$22399$U0r&n) ($$fx* (case-lambda ((g$V$22400$U0r&n) ($$fx- g$C$22398$U0r&n g$x1$14765$U0r&n g$V$22400$U0r&n))) g$V$22399$U0r&n g$x2$14766$U0r&n))) g$x1$14765$U0r&n g$x2$14766$U0r&n))) g$C$22401$U0r&n)))))))))))) (library-letrec*-identity 'g$fxmod0$14743$U0r&n))) (g$fxdiv-and-mod$14744$U0r&n g$fxdiv-and-mod$14827$U0r&n ((case-lambda ((g$C$22673$U0r&n) (g$C$22673$U0r&n (case-lambda ((g$C$22415$U0r&n g$x1$14767$U0r&n g$x2$14768$U0r&n) ((case-lambda ((g$J$22421$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22422$U0r&n) (not (case-lambda ((g$T$22423$U0r&n) (if g$T$22423$U0r&n (g$assertion-violation$13786$U0r&n g$J$22421$U0r&n 'fxdiv-and-mod '"not a fixnum" g$x1$14767$U0r&n) (void g$J$22421$U0r&n)))) g$V$22422$U0r&n))) g$x1$14767$U0r&n))) (case-lambda (g$IGNORE$22416$U0r&n ((case-lambda ((g$J$22418$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22419$U0r&n) (not (case-lambda ((g$T$22420$U0r&n) (if g$T$22420$U0r&n (g$assertion-violation$13786$U0r&n g$J$22418$U0r&n 'fxdiv-and-mod '"not a fixnum" g$x2$14768$U0r&n) (void g$J$22418$U0r&n)))) g$V$22419$U0r&n))) g$x2$14768$U0r&n))) (case-lambda (g$IGNORE$22417$U0r&n ((case-lambda ((g$C$22413$U0r&n) (fxdiv (case-lambda ((g$V$22414$U0r&n) ((case-lambda ((g$C$22410$U0r&n g$d$14769$U0r&n) ($$fx* (case-lambda ((g$V$22411$U0r&n) ($$fx- (case-lambda ((g$V$22412$U0r&n) (values g$C$22410$U0r&n g$d$14769$U0r&n g$V$22412$U0r&n))) g$x1$14767$U0r&n g$V$22411$U0r&n))) g$d$14769$U0r&n g$x2$14768$U0r&n))) g$C$22413$U0r&n g$V$22414$U0r&n))) g$x1$14767$U0r&n g$x2$14768$U0r&n))) g$C$22415$U0r&n)))))))))))) (library-letrec*-identity 'g$fxdiv-and-mod$14744$U0r&n))) (g$fxdiv0-and-mod0$14745$U0r&n g$fxdiv0-and-mod0$14828$U0r&n ((case-lambda ((g$C$22674$U0r&n) (g$C$22674$U0r&n (case-lambda ((g$C$22429$U0r&n g$x1$14770$U0r&n g$x2$14771$U0r&n) ((case-lambda ((g$J$22435$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22436$U0r&n) (not (case-lambda ((g$T$22437$U0r&n) (if g$T$22437$U0r&n (g$assertion-violation$13786$U0r&n g$J$22435$U0r&n 'fxdiv0-and-mod0 '"not a fixnum" g$x1$14770$U0r&n) (void g$J$22435$U0r&n)))) g$V$22436$U0r&n))) g$x1$14770$U0r&n))) (case-lambda (g$IGNORE$22430$U0r&n ((case-lambda ((g$J$22432$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22433$U0r&n) (not (case-lambda ((g$T$22434$U0r&n) (if g$T$22434$U0r&n (g$assertion-violation$13786$U0r&n g$J$22432$U0r&n 'fxdiv0-and-mod0 '"not a fixnum" g$x2$14771$U0r&n) (void g$J$22432$U0r&n)))) g$V$22433$U0r&n))) g$x2$14771$U0r&n))) (case-lambda (g$IGNORE$22431$U0r&n ((case-lambda ((g$C$22427$U0r&n) (fxdiv0 (case-lambda ((g$V$22428$U0r&n) ((case-lambda ((g$C$22424$U0r&n g$d$14772$U0r&n) ($fx* (case-lambda ((g$V$22425$U0r&n) ($fx- (case-lambda ((g$V$22426$U0r&n) (values g$C$22424$U0r&n g$d$14772$U0r&n g$V$22426$U0r&n))) g$x1$14770$U0r&n g$V$22425$U0r&n))) g$d$14772$U0r&n g$x2$14771$U0r&n))) g$C$22427$U0r&n g$V$22428$U0r&n))) g$x1$14770$U0r&n g$x2$14771$U0r&n))) g$C$22429$U0r&n)))))))))))) (library-letrec*-identity 'g$fxdiv0-and-mod0$14745$U0r&n))) (g$fxpositive?$14746$U0r&n g$fxpositive?$14829$U0r&n ((case-lambda ((g$C$22675$U0r&n) (g$C$22675$U0r&n (case-lambda ((g$C$22439$U0r&n g$r$14773$U0r&n) ((case-lambda ((g$J$22441$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22442$U0r&n) (not (case-lambda ((g$T$22443$U0r&n) (if g$T$22443$U0r&n (g$assertion-violation$13786$U0r&n g$J$22441$U0r&n 'fxpositive? '"not a fixnum" g$r$14773$U0r&n) (void g$J$22441$U0r&n)))) g$V$22442$U0r&n))) g$r$14773$U0r&n))) (case-lambda (g$IGNORE$22440$U0r&n ((case-lambda ((g$C$22438$U0r&n) ($fx<? g$C$22438$U0r&n '0 g$r$14773$U0r&n))) g$C$22439$U0r&n))))))))) (library-letrec*-identity 'g$fxpositive?$14746$U0r&n))) (g$fxnegative?$14747$U0r&n g$fxnegative?$14830$U0r&n ((case-lambda ((g$C$22676$U0r&n) (g$C$22676$U0r&n (case-lambda ((g$C$22445$U0r&n g$r$14774$U0r&n) ((case-lambda ((g$J$22447$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22448$U0r&n) (not (case-lambda ((g$T$22449$U0r&n) (if g$T$22449$U0r&n (g$assertion-violation$13786$U0r&n g$J$22447$U0r&n 'fxnegative? '"not a fixnum" g$r$14774$U0r&n) (void g$J$22447$U0r&n)))) g$V$22448$U0r&n))) g$r$14774$U0r&n))) (case-lambda (g$IGNORE$22446$U0r&n ((case-lambda ((g$C$22444$U0r&n) ($fx>? g$C$22444$U0r&n '0 g$r$14774$U0r&n))) g$C$22445$U0r&n))))))))) (library-letrec*-identity 'g$fxnegative?$14747$U0r&n))) (g$fxzero?$14748$U0r&n g$fxzero?$14831$U0r&n ((case-lambda ((g$C$22677$U0r&n) (g$C$22677$U0r&n (case-lambda ((g$C$22451$U0r&n g$r$14775$U0r&n) ((case-lambda ((g$J$22453$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22454$U0r&n) (not (case-lambda ((g$T$22455$U0r&n) (if g$T$22455$U0r&n (g$assertion-violation$13786$U0r&n g$J$22453$U0r&n 'fxzero? '"not a fixnum" g$r$14775$U0r&n) (void g$J$22453$U0r&n)))) g$V$22454$U0r&n))) g$r$14775$U0r&n))) (case-lambda (g$IGNORE$22452$U0r&n ((case-lambda ((g$C$22450$U0r&n) ($fx=? g$C$22450$U0r&n '0 g$r$14775$U0r&n))) g$C$22451$U0r&n))))))))) (library-letrec*-identity 'g$fxzero?$14748$U0r&n))) (g$fxeven?$14749$U0r&n g$fxeven?$14832$U0r&n ((case-lambda ((g$C$22678$U0r&n) (g$C$22678$U0r&n (case-lambda ((g$C$22460$U0r&n g$n$14776$U0r&n) ((case-lambda ((g$J$22462$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22463$U0r&n) (not (case-lambda ((g$T$22464$U0r&n) (if g$T$22464$U0r&n (g$assertion-violation$13786$U0r&n g$J$22462$U0r&n 'fxeven? '"not a fixnum" g$n$14776$U0r&n) (void g$J$22462$U0r&n)))) g$V$22463$U0r&n))) g$n$14776$U0r&n))) (case-lambda (g$IGNORE$22461$U0r&n ((case-lambda ((g$C$22456$U0r&n) (least-fixnum (case-lambda ((g$V$22457$U0r&n) ($fx=? (case-lambda ((g$T$22458$U0r&n) (if g$T$22458$U0r&n (g$C$22456$U0r&n '#t) (g$fxmod$14742$U0r&n (case-lambda ((g$V$22459$U0r&n) ($fx=? g$C$22456$U0r&n '0 g$V$22459$U0r&n))) g$n$14776$U0r&n '2)))) g$n$14776$U0r&n g$V$22457$U0r&n)))))) g$C$22460$U0r&n))))))))) (library-letrec*-identity 'g$fxeven?$14749$U0r&n))) (g$fxodd?$14750$U0r&n g$fxodd?$14833$U0r&n ((case-lambda ((g$C$22679$U0r&n) (g$C$22679$U0r&n (case-lambda ((g$C$22469$U0r&n g$n$14777$U0r&n) ((case-lambda ((g$J$22471$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22472$U0r&n) (not (case-lambda ((g$T$22473$U0r&n) (if g$T$22473$U0r&n (g$assertion-violation$13786$U0r&n g$J$22471$U0r&n 'fxodd? '"not a fixnum" g$n$14777$U0r&n) (void g$J$22471$U0r&n)))) g$V$22472$U0r&n))) g$n$14777$U0r&n))) (case-lambda (g$IGNORE$22470$U0r&n ((case-lambda ((g$C$22465$U0r&n) (least-fixnum (case-lambda ((g$V$22466$U0r&n) ($fx=? (case-lambda ((g$T$22467$U0r&n) (if g$T$22467$U0r&n (g$C$22465$U0r&n '#f) (g$fxmod$14742$U0r&n (case-lambda ((g$V$22468$U0r&n) ($fx=? g$C$22465$U0r&n '1 g$V$22468$U0r&n))) g$n$14777$U0r&n '2)))) g$n$14777$U0r&n g$V$22466$U0r&n)))))) g$C$22469$U0r&n))))))))) (library-letrec*-identity 'g$fxodd?$14750$U0r&n))) (g$fxmax$14751$U0r&n g$fxmax$14834$U0r&n ((case-lambda ((g$C$22680$U0r&n) (g$C$22680$U0r&n (case-lambda ((g$C$22476$U0r&n g$a$14778$U0r&n . g$rest$14779$U0r&n) ((case-lambda ((g$J$22478$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22479$U0r&n) (not (case-lambda ((g$T$22480$U0r&n) (if g$T$22480$U0r&n (g$assertion-violation$13786$U0r&n g$J$22478$U0r&n 'fxmax '"not a fixnum" g$a$14778$U0r&n) (void g$J$22478$U0r&n)))) g$V$22479$U0r&n))) g$a$14778$U0r&n))) (case-lambda (g$IGNORE$22477$U0r&n (g$fold-left$12756$U0r&n g$C$22476$U0r&n (case-lambda ((g$C$22474$U0r&n g$a$14780$U0r&n g$b$14781$U0r&n) (fx<? (case-lambda ((g$T$22475$U0r&n) (if g$T$22475$U0r&n (g$C$22474$U0r&n g$b$14781$U0r&n) (g$C$22474$U0r&n g$a$14780$U0r&n)))) g$a$14780$U0r&n g$b$14781$U0r&n))) g$a$14778$U0r&n g$rest$14779$U0r&n))))))))) (library-letrec*-identity 'g$fxmax$14751$U0r&n))) (g$fxmin$14752$U0r&n g$fxmin$14835$U0r&n ((case-lambda ((g$C$22681$U0r&n) (g$C$22681$U0r&n (case-lambda ((g$C$22483$U0r&n g$a$14782$U0r&n . g$rest$14783$U0r&n) ((case-lambda ((g$J$22485$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22486$U0r&n) (not (case-lambda ((g$T$22487$U0r&n) (if g$T$22487$U0r&n (g$assertion-violation$13786$U0r&n g$J$22485$U0r&n 'fxmin '"not a fixnum" g$a$14782$U0r&n) (void g$J$22485$U0r&n)))) g$V$22486$U0r&n))) g$a$14782$U0r&n))) (case-lambda (g$IGNORE$22484$U0r&n (g$fold-left$12756$U0r&n g$C$22483$U0r&n (case-lambda ((g$C$22481$U0r&n g$a$14784$U0r&n g$b$14785$U0r&n) (fx>? (case-lambda ((g$T$22482$U0r&n) (if g$T$22482$U0r&n (g$C$22481$U0r&n g$b$14785$U0r&n) (g$C$22481$U0r&n g$a$14784$U0r&n)))) g$a$14784$U0r&n g$b$14785$U0r&n))) g$a$14782$U0r&n g$rest$14783$U0r&n))))))))) (library-letrec*-identity 'g$fxmin$14752$U0r&n))) (g$fx*/carry$14753$U0r&n g$fx*/carry$14836$U0r&n ((case-lambda ((g$C$22682$U0r&n) (g$C$22682$U0r&n (case-lambda ((g$C$22496$U0r&n g$fx1$14786$U0r&n g$fx2$14787$U0r&n g$fx3$14788$U0r&n) ((case-lambda ((g$J$22506$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22507$U0r&n) (not (case-lambda ((g$T$22508$U0r&n) (if g$T$22508$U0r&n (g$assertion-violation$13786$U0r&n g$J$22506$U0r&n 'fx*/carry '"not a fixnum" g$fx1$14786$U0r&n) (void g$J$22506$U0r&n)))) g$V$22507$U0r&n))) g$fx1$14786$U0r&n))) (case-lambda (g$IGNORE$22497$U0r&n ((case-lambda ((g$J$22503$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22504$U0r&n) (not (case-lambda ((g$T$22505$U0r&n) (if g$T$22505$U0r&n (g$assertion-violation$13786$U0r&n g$J$22503$U0r&n 'fx*/carry '"not a fixnum" g$fx2$14787$U0r&n) (void g$J$22503$U0r&n)))) g$V$22504$U0r&n))) g$fx2$14787$U0r&n))) (case-lambda (g$IGNORE$22498$U0r&n ((case-lambda ((g$J$22500$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22501$U0r&n) (not (case-lambda ((g$T$22502$U0r&n) (if g$T$22502$U0r&n (g$assertion-violation$13786$U0r&n g$J$22500$U0r&n 'fx*/carry '"not a fixnum" g$fx3$14788$U0r&n) (void g$J$22500$U0r&n)))) g$V$22501$U0r&n))) g$fx3$14788$U0r&n))) (case-lambda (g$IGNORE$22499$U0r&n ((case-lambda ((g$C$22491$U0r&n) (g$fixnum-width$13501$U0r&n (case-lambda ((g$V$22492$U0r&n) (expt (case-lambda ((g$V$22493$U0r&n) (* (case-lambda ((g$V$22494$U0r&n) (+ (case-lambda ((g$V$22495$U0r&n) ((case-lambda ((g$C$22488$U0r&n g$s$14789$U0r&n g$e$14790$U0r&n) (div0 (case-lambda ((g$V$22489$U0r&n) (g$mod0$13488$U0r&n (case-lambda ((g$V$22490$U0r&n) (values g$C$22488$U0r&n g$V$22490$U0r&n g$V$22489$U0r&n))) g$s$14789$U0r&n g$e$14790$U0r&n))) g$s$14789$U0r&n g$e$14790$U0r&n))) g$C$22491$U0r&n g$V$22495$U0r&n g$V$22493$U0r&n))) g$V$22494$U0r&n g$fx3$14788$U0r&n))) g$fx1$14786$U0r&n g$fx2$14787$U0r&n))) '2 g$V$22492$U0r&n)))))) g$C$22496$U0r&n))))))))))))))) (library-letrec*-identity 'g$fx*/carry$14753$U0r&n))) (g$fx-/carry$14754$U0r&n g$fx-/carry$14837$U0r&n ((case-lambda ((g$C$22683$U0r&n) (g$C$22683$U0r&n (case-lambda ((g$C$22516$U0r&n g$fx1$14791$U0r&n g$fx2$14792$U0r&n g$fx3$14793$U0r&n) ((case-lambda ((g$J$22526$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22527$U0r&n) (not (case-lambda ((g$T$22528$U0r&n) (if g$T$22528$U0r&n (g$assertion-violation$13786$U0r&n g$J$22526$U0r&n 'fx-/carry '"not a fixnum" g$fx1$14791$U0r&n) (void g$J$22526$U0r&n)))) g$V$22527$U0r&n))) g$fx1$14791$U0r&n))) (case-lambda (g$IGNORE$22517$U0r&n ((case-lambda ((g$J$22523$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22524$U0r&n) (not (case-lambda ((g$T$22525$U0r&n) (if g$T$22525$U0r&n (g$assertion-violation$13786$U0r&n g$J$22523$U0r&n 'fx-/carry '"not a fixnum" g$fx2$14792$U0r&n) (void g$J$22523$U0r&n)))) g$V$22524$U0r&n))) g$fx2$14792$U0r&n))) (case-lambda (g$IGNORE$22518$U0r&n ((case-lambda ((g$J$22520$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22521$U0r&n) (not (case-lambda ((g$T$22522$U0r&n) (if g$T$22522$U0r&n (g$assertion-violation$13786$U0r&n g$J$22520$U0r&n 'fx-/carry '"not a fixnum" g$fx3$14793$U0r&n) (void g$J$22520$U0r&n)))) g$V$22521$U0r&n))) g$fx3$14793$U0r&n))) (case-lambda (g$IGNORE$22519$U0r&n ((case-lambda ((g$C$22512$U0r&n) (g$fixnum-width$13501$U0r&n (case-lambda ((g$V$22513$U0r&n) (expt (case-lambda ((g$V$22514$U0r&n) (- (case-lambda ((g$V$22515$U0r&n) ((case-lambda ((g$C$22509$U0r&n g$s$14794$U0r&n g$e$14795$U0r&n) (div0 (case-lambda ((g$V$22510$U0r&n) (g$mod0$13488$U0r&n (case-lambda ((g$V$22511$U0r&n) (values g$C$22509$U0r&n g$V$22511$U0r&n g$V$22510$U0r&n))) g$s$14794$U0r&n g$e$14795$U0r&n))) g$s$14794$U0r&n g$e$14795$U0r&n))) g$C$22512$U0r&n g$V$22515$U0r&n g$V$22514$U0r&n))) g$fx1$14791$U0r&n g$fx2$14792$U0r&n g$fx3$14793$U0r&n))) '2 g$V$22513$U0r&n)))))) g$C$22516$U0r&n))))))))))))))) (library-letrec*-identity 'g$fx-/carry$14754$U0r&n))) (g$fx+/carry$14755$U0r&n g$fx+/carry$14838$U0r&n ((case-lambda ((g$C$22684$U0r&n) (g$C$22684$U0r&n (case-lambda ((g$C$22536$U0r&n g$fx1$14796$U0r&n g$fx2$14797$U0r&n g$fx3$14798$U0r&n) ((case-lambda ((g$J$22546$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22547$U0r&n) (not (case-lambda ((g$T$22548$U0r&n) (if g$T$22548$U0r&n (g$assertion-violation$13786$U0r&n g$J$22546$U0r&n 'fx+/carry '"not a fixnum" g$fx1$14796$U0r&n) (void g$J$22546$U0r&n)))) g$V$22547$U0r&n))) g$fx1$14796$U0r&n))) (case-lambda (g$IGNORE$22537$U0r&n ((case-lambda ((g$J$22543$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22544$U0r&n) (not (case-lambda ((g$T$22545$U0r&n) (if g$T$22545$U0r&n (g$assertion-violation$13786$U0r&n g$J$22543$U0r&n 'fx+/carry '"not a fixnum" g$fx2$14797$U0r&n) (void g$J$22543$U0r&n)))) g$V$22544$U0r&n))) g$fx2$14797$U0r&n))) (case-lambda (g$IGNORE$22538$U0r&n ((case-lambda ((g$J$22540$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22541$U0r&n) (not (case-lambda ((g$T$22542$U0r&n) (if g$T$22542$U0r&n (g$assertion-violation$13786$U0r&n g$J$22540$U0r&n 'fx+/carry '"not a fixnum" g$fx3$14798$U0r&n) (void g$J$22540$U0r&n)))) g$V$22541$U0r&n))) g$fx3$14798$U0r&n))) (case-lambda (g$IGNORE$22539$U0r&n ((case-lambda ((g$C$22532$U0r&n) (g$fixnum-width$13501$U0r&n (case-lambda ((g$V$22533$U0r&n) (expt (case-lambda ((g$V$22534$U0r&n) (+ (case-lambda ((g$V$22535$U0r&n) ((case-lambda ((g$C$22529$U0r&n g$s$14799$U0r&n g$e$14800$U0r&n) (div0 (case-lambda ((g$V$22530$U0r&n) (g$mod0$13488$U0r&n (case-lambda ((g$V$22531$U0r&n) (values g$C$22529$U0r&n g$V$22531$U0r&n g$V$22530$U0r&n))) g$s$14799$U0r&n g$e$14800$U0r&n))) g$s$14799$U0r&n g$e$14800$U0r&n))) g$C$22532$U0r&n g$V$22535$U0r&n g$V$22534$U0r&n))) g$fx1$14796$U0r&n g$fx2$14797$U0r&n g$fx3$14798$U0r&n))) '2 g$V$22533$U0r&n)))))) g$C$22536$U0r&n))))))))))))))) (library-letrec*-identity 'g$fx+/carry$14755$U0r&n))) (g$fxif$14756$U0r&n g$fxif$14839$U0r&n ((case-lambda ((g$C$22685$U0r&n) (g$C$22685$U0r&n (case-lambda ((g$C$22553$U0r&n g$fx1$14801$U0r&n g$fx2$14802$U0r&n g$fx3$14803$U0r&n) ((case-lambda ((g$J$22563$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22564$U0r&n) (not (case-lambda ((g$T$22565$U0r&n) (if g$T$22565$U0r&n (g$assertion-violation$13786$U0r&n g$J$22563$U0r&n 'fxif '"not a fixnum" g$fx1$14801$U0r&n) (void g$J$22563$U0r&n)))) g$V$22564$U0r&n))) g$fx1$14801$U0r&n))) (case-lambda (g$IGNORE$22554$U0r&n ((case-lambda ((g$J$22560$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22561$U0r&n) (not (case-lambda ((g$T$22562$U0r&n) (if g$T$22562$U0r&n (g$assertion-violation$13786$U0r&n g$J$22560$U0r&n 'fxif '"not a fixnum" g$fx2$14802$U0r&n) (void g$J$22560$U0r&n)))) g$V$22561$U0r&n))) g$fx2$14802$U0r&n))) (case-lambda (g$IGNORE$22555$U0r&n ((case-lambda ((g$J$22557$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22558$U0r&n) (not (case-lambda ((g$T$22559$U0r&n) (if g$T$22559$U0r&n (g$assertion-violation$13786$U0r&n g$J$22557$U0r&n 'fxif '"not a fixnum" g$fx3$14803$U0r&n) (void g$J$22557$U0r&n)))) g$V$22558$U0r&n))) g$fx3$14803$U0r&n))) (case-lambda (g$IGNORE$22556$U0r&n ((case-lambda ((g$C$22549$U0r&n) ($$fxnot (case-lambda ((g$V$22550$U0r&n) ($fxand (case-lambda ((g$V$22551$U0r&n) ($fxand (case-lambda ((g$V$22552$U0r&n) ($fxior g$C$22549$U0r&n g$V$22552$U0r&n g$V$22551$U0r&n))) g$fx1$14801$U0r&n g$fx2$14802$U0r&n))) g$V$22550$U0r&n g$fx3$14803$U0r&n))) g$fx1$14801$U0r&n))) g$C$22553$U0r&n))))))))))))))) (library-letrec*-identity 'g$fxif$14756$U0r&n))) (g$fxcopy-bit$14757$U0r&n g$fxcopy-bit$14840$U0r&n ((case-lambda ((g$C$22686$U0r&n) (g$C$22686$U0r&n (case-lambda ((g$C$22569$U0r&n g$fx1$14804$U0r&n g$fx2$14805$U0r&n g$fx3$14806$U0r&n) ((case-lambda ((g$J$22579$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22580$U0r&n) (not (case-lambda ((g$T$22581$U0r&n) (if g$T$22581$U0r&n (g$assertion-violation$13786$U0r&n g$J$22579$U0r&n 'fxcopy-bit '"not a fixnum" g$fx1$14804$U0r&n) (void g$J$22579$U0r&n)))) g$V$22580$U0r&n))) g$fx1$14804$U0r&n))) (case-lambda (g$IGNORE$22570$U0r&n ((case-lambda ((g$J$22576$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22577$U0r&n) (not (case-lambda ((g$T$22578$U0r&n) (if g$T$22578$U0r&n (g$assertion-violation$13786$U0r&n g$J$22576$U0r&n 'fxcopy-bit '"not a fixnum" g$fx2$14805$U0r&n) (void g$J$22576$U0r&n)))) g$V$22577$U0r&n))) g$fx2$14805$U0r&n))) (case-lambda (g$IGNORE$22571$U0r&n ((case-lambda ((g$J$22573$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22574$U0r&n) (not (case-lambda ((g$T$22575$U0r&n) (if g$T$22575$U0r&n (g$assertion-violation$13786$U0r&n g$J$22573$U0r&n 'fxcopy-bit '"not a fixnum" g$fx3$14806$U0r&n) (void g$J$22573$U0r&n)))) g$V$22574$U0r&n))) g$fx3$14806$U0r&n))) (case-lambda (g$IGNORE$22572$U0r&n ((case-lambda ((g$C$22566$U0r&n) (g$fxarithmetic-shift-left$14760$U0r&n (case-lambda ((g$V$22567$U0r&n) (g$fxarithmetic-shift-left$14760$U0r&n (case-lambda ((g$V$22568$U0r&n) (g$fxif$14756$U0r&n g$C$22566$U0r&n g$V$22568$U0r&n g$V$22567$U0r&n g$fx1$14804$U0r&n))) '1 g$fx2$14805$U0r&n))) g$fx3$14806$U0r&n g$fx2$14805$U0r&n))) g$C$22569$U0r&n))))))))))))))) (library-letrec*-identity 'g$fxcopy-bit$14757$U0r&n))) (g$fxbit-field$14758$U0r&n g$fxbit-field$14841$U0r&n ((case-lambda ((g$C$22687$U0r&n) (g$C$22687$U0r&n (case-lambda ((g$C$22586$U0r&n g$fx1$14807$U0r&n g$fx2$14808$U0r&n g$fx3$14809$U0r&n) ((case-lambda ((g$J$22596$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22597$U0r&n) (not (case-lambda ((g$T$22598$U0r&n) (if g$T$22598$U0r&n (g$assertion-violation$13786$U0r&n g$J$22596$U0r&n 'fxbit-field '"not a fixnum" g$fx1$14807$U0r&n) (void g$J$22596$U0r&n)))) g$V$22597$U0r&n))) g$fx1$14807$U0r&n))) (case-lambda (g$IGNORE$22587$U0r&n ((case-lambda ((g$J$22593$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22594$U0r&n) (not (case-lambda ((g$T$22595$U0r&n) (if g$T$22595$U0r&n (g$assertion-violation$13786$U0r&n g$J$22593$U0r&n 'fxbit-field '"not a fixnum" g$fx2$14808$U0r&n) (void g$J$22593$U0r&n)))) g$V$22594$U0r&n))) g$fx2$14808$U0r&n))) (case-lambda (g$IGNORE$22588$U0r&n ((case-lambda ((g$J$22590$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22591$U0r&n) (not (case-lambda ((g$T$22592$U0r&n) (if g$T$22592$U0r&n (g$assertion-violation$13786$U0r&n g$J$22590$U0r&n 'fxbit-field '"not a fixnum" g$fx3$14809$U0r&n) (void g$J$22590$U0r&n)))) g$V$22591$U0r&n))) g$fx3$14809$U0r&n))) (case-lambda (g$IGNORE$22589$U0r&n ((case-lambda ((g$C$22582$U0r&n) (g$fxarithmetic-shift-left$14760$U0r&n (case-lambda ((g$V$22583$U0r&n) (fxnot (case-lambda ((g$V$22584$U0r&n) ($fxand (case-lambda ((g$V$22585$U0r&n) (g$fxarithmetic-shift-right$14761$U0r&n g$C$22582$U0r&n g$V$22585$U0r&n g$fx2$14808$U0r&n))) g$fx1$14807$U0r&n g$V$22584$U0r&n))) g$V$22583$U0r&n))) '-1 g$fx3$14809$U0r&n))) g$C$22586$U0r&n))))))))))))))) (library-letrec*-identity 'g$fxbit-field$14758$U0r&n))) (g$fxcopy-bit-field$14759$U0r&n g$fxcopy-bit-field$14842$U0r&n ((case-lambda ((g$C$22688$U0r&n) (g$C$22688$U0r&n (case-lambda ((g$C$22605$U0r&n g$to$14810$U0r&n g$start$14811$U0r&n g$end$14812$U0r&n g$from$14813$U0r&n) ((case-lambda ((g$J$22619$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22620$U0r&n) (not (case-lambda ((g$T$22621$U0r&n) (if g$T$22621$U0r&n (g$assertion-violation$13786$U0r&n g$J$22619$U0r&n 'fxcopy-bit-field '"not a fixnum" g$to$14810$U0r&n) (void g$J$22619$U0r&n)))) g$V$22620$U0r&n))) g$to$14810$U0r&n))) (case-lambda (g$IGNORE$22606$U0r&n ((case-lambda ((g$J$22616$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22617$U0r&n) (not (case-lambda ((g$T$22618$U0r&n) (if g$T$22618$U0r&n (g$assertion-violation$13786$U0r&n g$J$22616$U0r&n 'fxcopy-bit-field '"not a fixnum" g$start$14811$U0r&n) (void g$J$22616$U0r&n)))) g$V$22617$U0r&n))) g$start$14811$U0r&n))) (case-lambda (g$IGNORE$22607$U0r&n ((case-lambda ((g$J$22613$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22614$U0r&n) (not (case-lambda ((g$T$22615$U0r&n) (if g$T$22615$U0r&n (g$assertion-violation$13786$U0r&n g$J$22613$U0r&n 'fxcopy-bit-field '"not a fixnum" g$end$14812$U0r&n) (void g$J$22613$U0r&n)))) g$V$22614$U0r&n))) g$end$14812$U0r&n))) (case-lambda (g$IGNORE$22608$U0r&n ((case-lambda ((g$J$22610$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22611$U0r&n) (not (case-lambda ((g$T$22612$U0r&n) (if g$T$22612$U0r&n (g$assertion-violation$13786$U0r&n g$J$22610$U0r&n 'fxcopy-bit-field '"not a fixnum" g$from$14813$U0r&n) (void g$J$22610$U0r&n)))) g$V$22611$U0r&n))) g$from$14813$U0r&n))) (case-lambda (g$IGNORE$22609$U0r&n ((case-lambda ((g$C$22599$U0r&n) (g$fxarithmetic-shift-left$14760$U0r&n (case-lambda ((g$V$22600$U0r&n) (g$fxarithmetic-shift-left$14760$U0r&n (case-lambda ((g$V$22601$U0r&n) ($$fxnot (case-lambda ((g$V$22602$U0r&n) (g$fxarithmetic-shift-left$14760$U0r&n (case-lambda ((g$V$22603$U0r&n) ($fxand (case-lambda ((g$V$22604$U0r&n) (g$fxif$14756$U0r&n g$C$22599$U0r&n g$V$22604$U0r&n g$V$22600$U0r&n g$to$14810$U0r&n))) g$V$22603$U0r&n g$V$22602$U0r&n))) '-1 g$start$14811$U0r&n))) g$V$22601$U0r&n))) '-1 g$end$14812$U0r&n))) g$from$14813$U0r&n g$start$14811$U0r&n))) g$C$22605$U0r&n)))))))))))))))))) (library-letrec*-identity 'g$fxcopy-bit-field$14759$U0r&n))) (g$fxarithmetic-shift-left$14760$U0r&n g$fxarithmetic-shift-left$14843$U0r&n ((case-lambda ((g$C$22689$U0r&n) (g$C$22689$U0r&n (case-lambda ((g$C$22623$U0r&n g$fx1$14814$U0r&n g$fx2$14815$U0r&n) ((case-lambda ((g$J$22629$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22630$U0r&n) (not (case-lambda ((g$T$22631$U0r&n) (if g$T$22631$U0r&n (g$assertion-violation$13786$U0r&n g$J$22629$U0r&n 'fxarithmetic-shift-left '"not a fixnum" g$fx1$14814$U0r&n) (void g$J$22629$U0r&n)))) g$V$22630$U0r&n))) g$fx1$14814$U0r&n))) (case-lambda (g$IGNORE$22624$U0r&n ((case-lambda ((g$J$22626$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22627$U0r&n) (not (case-lambda ((g$T$22628$U0r&n) (if g$T$22628$U0r&n (g$assertion-violation$13786$U0r&n g$J$22626$U0r&n 'fxarithmetic-shift-left '"not a fixnum" g$fx2$14815$U0r&n) (void g$J$22626$U0r&n)))) g$V$22627$U0r&n))) g$fx2$14815$U0r&n))) (case-lambda (g$IGNORE$22625$U0r&n ((case-lambda ((g$C$22622$U0r&n) (fxarithmetic-shift g$C$22622$U0r&n g$fx1$14814$U0r&n g$fx2$14815$U0r&n))) g$C$22623$U0r&n)))))))))))) (library-letrec*-identity 'g$fxarithmetic-shift-left$14760$U0r&n))) (g$fxarithmetic-shift-right$14761$U0r&n g$fxarithmetic-shift-right$14844$U0r&n ((case-lambda ((g$C$22690$U0r&n) (g$C$22690$U0r&n (case-lambda ((g$C$22634$U0r&n g$fx1$14816$U0r&n g$fx2$14817$U0r&n) ((case-lambda ((g$J$22640$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22641$U0r&n) (not (case-lambda ((g$T$22642$U0r&n) (if g$T$22642$U0r&n (g$assertion-violation$13786$U0r&n g$J$22640$U0r&n 'fxarithmetic-shift-right '"not a fixnum" g$fx1$14816$U0r&n) (void g$J$22640$U0r&n)))) g$V$22641$U0r&n))) g$fx1$14816$U0r&n))) (case-lambda (g$IGNORE$22635$U0r&n ((case-lambda ((g$J$22637$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22638$U0r&n) (not (case-lambda ((g$T$22639$U0r&n) (if g$T$22639$U0r&n (g$assertion-violation$13786$U0r&n g$J$22637$U0r&n 'fxarithmetic-shift-right '"not a fixnum" g$fx2$14817$U0r&n) (void g$J$22637$U0r&n)))) g$V$22638$U0r&n))) g$fx2$14817$U0r&n))) (case-lambda (g$IGNORE$22636$U0r&n ((case-lambda ((g$C$22632$U0r&n) ($$fx- (case-lambda ((g$V$22633$U0r&n) (fxarithmetic-shift g$C$22632$U0r&n g$fx1$14816$U0r&n g$V$22633$U0r&n))) g$fx2$14817$U0r&n))) g$C$22634$U0r&n)))))))))))) (library-letrec*-identity 'g$fxarithmetic-shift-right$14761$U0r&n))) (g$fxrotate-bit-field$14762$U0r&n g$fxrotate-bit-field$14845$U0r&n ((case-lambda ((g$C$22691$U0r&n) (g$C$22691$U0r&n (case-lambda ((g$C$22654$U0r&n g$n$14818$U0r&n g$start$14819$U0r&n g$end$14820$U0r&n g$count$14821$U0r&n) ((case-lambda ((g$J$22668$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22669$U0r&n) (not (case-lambda ((g$T$22670$U0r&n) (if g$T$22670$U0r&n (g$assertion-violation$13786$U0r&n g$J$22668$U0r&n 'fxrotate-bit-field '"not a fixnum" g$n$14818$U0r&n) (void g$J$22668$U0r&n)))) g$V$22669$U0r&n))) g$n$14818$U0r&n))) (case-lambda (g$IGNORE$22655$U0r&n ((case-lambda ((g$J$22665$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22666$U0r&n) (not (case-lambda ((g$T$22667$U0r&n) (if g$T$22667$U0r&n (g$assertion-violation$13786$U0r&n g$J$22665$U0r&n 'fxrotate-bit-field '"not a fixnum" g$start$14819$U0r&n) (void g$J$22665$U0r&n)))) g$V$22666$U0r&n))) g$start$14819$U0r&n))) (case-lambda (g$IGNORE$22656$U0r&n ((case-lambda ((g$J$22662$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22663$U0r&n) (not (case-lambda ((g$T$22664$U0r&n) (if g$T$22664$U0r&n (g$assertion-violation$13786$U0r&n g$J$22662$U0r&n 'fxrotate-bit-field '"not a fixnum" g$end$14820$U0r&n) (void g$J$22662$U0r&n)))) g$V$22663$U0r&n))) g$end$14820$U0r&n))) (case-lambda (g$IGNORE$22657$U0r&n ((case-lambda ((g$J$22659$U0r&n) (g$fixnum?$13499$U0r&n (case-lambda ((g$V$22660$U0r&n) (not (case-lambda ((g$T$22661$U0r&n) (if g$T$22661$U0r&n (g$assertion-violation$13786$U0r&n g$J$22659$U0r&n 'fxrotate-bit-field '"not a fixnum" g$count$14821$U0r&n) (void g$J$22659$U0r&n)))) g$V$22660$U0r&n))) g$count$14821$U0r&n))) (case-lambda (g$IGNORE$22658$U0r&n ((case-lambda ((g$C$22652$U0r&n) ($$fx- (case-lambda ((g$V$22653$U0r&n) ((case-lambda ((g$C$22648$U0r&n g$width$14822$U0r&n) (g$fxpositive?$14746$U0r&n (case-lambda ((g$T$22649$U0r&n) (if g$T$22649$U0r&n (g$fxbit-field$14758$U0r&n (case-lambda ((g$V$22650$U0r&n) (g$fxmod$14742$U0r&n (case-lambda ((g$V$22651$U0r&n) ((case-lambda ((g$C$22643$U0r&n g$count$14823$U0r&n g$field$14824$U0r&n) ($$fx- (case-lambda ((g$V$22644$U0r&n) (g$fxarithmetic-shift-right$14761$U0r&n (case-lambda ((g$V$22645$U0r&n) (g$fxarithmetic-shift-left$14760$U0r&n (case-lambda ((g$V$22646$U0r&n) ($fxior (case-lambda ((g$V$22647$U0r&n) (g$fxcopy-bit-field$14759$U0r&n g$C$22643$U0r&n g$n$14818$U0r&n g$start$14819$U0r&n g$end$14820$U0r&n g$V$22647$U0r&n))) g$V$22646$U0r&n g$V$22645$U0r&n))) g$field$14824$U0r&n g$count$14823$U0r&n))) g$field$14824$U0r&n g$V$22644$U0r&n))) g$width$14822$U0r&n g$count$14823$U0r&n))) g$C$22648$U0r&n g$V$22651$U0r&n g$V$22650$U0r&n))) g$count$14821$U0r&n g$width$14822$U0r&n))) g$n$14818$U0r&n g$start$14819$U0r&n g$end$14820$U0r&n) (g$C$22648$U0r&n g$n$14818$U0r&n)))) g$width$14822$U0r&n))) g$C$22652$U0r&n g$V$22653$U0r&n))) g$end$14820$U0r&n g$start$14819$U0r&n))) g$C$22654$U0r&n)))))))))))))))))) (library-letrec*-identity 'g$fxrotate-bit-field$14762$U0r&n)))) (void identity-for-cps))(library-letrec* (ironscheme arithmetic flonums) ((g$flmod$14846$U0r&n g$flmod$14923$U0r&n ((case-lambda ((g$C$22846$U0r&n) (g$C$22846$U0r&n (case-lambda ((g$C$22692$U0r&n g$x1$14876$U0r&n g$x2$14877$U0r&n) (fldiv (case-lambda ((g$V$22693$U0r&n) (fl* (case-lambda ((g$V$22694$U0r&n) (fl- g$C$22692$U0r&n g$x1$14876$U0r&n g$V$22694$U0r&n))) g$V$22693$U0r&n g$x2$14877$U0r&n))) g$x1$14876$U0r&n g$x2$14877$U0r&n)))))) (library-letrec*-identity 'g$flmod$14846$U0r&n))) (g$flmod0$14847$U0r&n g$flmod0$14924$U0r&n ((case-lambda ((g$C$22847$U0r&n) (g$C$22847$U0r&n (case-lambda ((g$C$22695$U0r&n g$x1$14878$U0r&n g$x2$14879$U0r&n) (fldiv0 (case-lambda ((g$V$22696$U0r&n) (fl* (case-lambda ((g$V$22697$U0r&n) (fl- g$C$22695$U0r&n g$x1$14878$U0r&n g$V$22697$U0r&n))) g$V$22696$U0r&n g$x2$14879$U0r&n))) g$x1$14878$U0r&n g$x2$14879$U0r&n)))))) (library-letrec*-identity 'g$flmod0$14847$U0r&n))) (g$fldiv-and-mod$14848$U0r&n g$fldiv-and-mod$14925$U0r&n ((case-lambda ((g$C$22848$U0r&n) (g$C$22848$U0r&n (case-lambda ((g$C$22701$U0r&n g$x1$14880$U0r&n g$x2$14881$U0r&n) (fldiv (case-lambda ((g$V$22702$U0r&n) ((case-lambda ((g$C$22698$U0r&n g$d$14882$U0r&n) (fl* (case-lambda ((g$V$22699$U0r&n) (fl- (case-lambda ((g$V$22700$U0r&n) (values g$C$22698$U0r&n g$d$14882$U0r&n g$V$22700$U0r&n))) g$x1$14880$U0r&n g$V$22699$U0r&n))) g$d$14882$U0r&n g$x2$14881$U0r&n))) g$C$22701$U0r&n g$V$22702$U0r&n))) g$x1$14880$U0r&n g$x2$14881$U0r&n)))))) (library-letrec*-identity 'g$fldiv-and-mod$14848$U0r&n))) (g$fldiv0-and-mod0$14849$U0r&n g$fldiv0-and-mod0$14926$U0r&n ((case-lambda ((g$C$22849$U0r&n) (g$C$22849$U0r&n (case-lambda ((g$C$22706$U0r&n g$x1$14883$U0r&n g$x2$14884$U0r&n) (fldiv0 (case-lambda ((g$V$22707$U0r&n) ((case-lambda ((g$C$22703$U0r&n g$d$14885$U0r&n) (fl* (case-lambda ((g$V$22704$U0r&n) (fl- (case-lambda ((g$V$22705$U0r&n) (values g$C$22703$U0r&n g$d$14885$U0r&n g$V$22705$U0r&n))) g$x1$14883$U0r&n g$V$22704$U0r&n))) g$d$14885$U0r&n g$x2$14884$U0r&n))) g$C$22706$U0r&n g$V$22707$U0r&n))) g$x1$14883$U0r&n g$x2$14884$U0r&n)))))) (library-letrec*-identity 'g$fldiv0-and-mod0$14849$U0r&n))) (g$flinteger?$14850$U0r&n g$flinteger?$14927$U0r&n ((case-lambda ((g$C$22850$U0r&n) (g$C$22850$U0r&n (case-lambda ((g$C$22708$U0r&n g$fl$14886$U0r&n) ((case-lambda ((g$J$22711$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22712$U0r&n) (not (case-lambda ((g$T$22713$U0r&n) (if g$T$22713$U0r&n (g$assertion-violation$13786$U0r&n g$J$22711$U0r&n 'flinteger? '"not a flonum" g$fl$14886$U0r&n) (void g$J$22711$U0r&n)))) g$V$22712$U0r&n))) g$fl$14886$U0r&n))) (case-lambda (g$IGNORE$22709$U0r&n (g$flmod$14846$U0r&n (case-lambda ((g$V$22710$U0r&n) (fl=? g$C$22708$U0r&n '0.0 g$V$22710$U0r&n))) g$fl$14886$U0r&n '1.0))))))))) (library-letrec*-identity 'g$flinteger?$14850$U0r&n))) (g$flfinite?$14851$U0r&n g$flfinite?$14928$U0r&n ((case-lambda ((g$C$22851$U0r&n) (g$C$22851$U0r&n (case-lambda ((g$C$22714$U0r&n g$fl$14887$U0r&n) ((case-lambda ((g$J$22717$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22718$U0r&n) (not (case-lambda ((g$T$22719$U0r&n) (if g$T$22719$U0r&n (g$assertion-violation$13786$U0r&n g$J$22717$U0r&n 'flfinite? '"not a flonum" g$fl$14887$U0r&n) (void g$J$22717$U0r&n)))) g$V$22718$U0r&n))) g$fl$14887$U0r&n))) (case-lambda (g$IGNORE$22715$U0r&n (g$flinfinite?$14852$U0r&n (case-lambda ((g$V$22716$U0r&n) (not g$C$22714$U0r&n g$V$22716$U0r&n))) g$fl$14887$U0r&n))))))))) (library-letrec*-identity 'g$flfinite?$14851$U0r&n))) (g$flinfinite?$14852$U0r&n g$flinfinite?$14929$U0r&n ((case-lambda ((g$C$22852$U0r&n) (g$C$22852$U0r&n (case-lambda ((g$C$22720$U0r&n g$fl$14888$U0r&n) ((case-lambda ((g$J$22722$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22723$U0r&n) (not (case-lambda ((g$T$22724$U0r&n) (if g$T$22724$U0r&n (g$assertion-violation$13786$U0r&n g$J$22722$U0r&n 'flinfinite? '"not a flonum" g$fl$14888$U0r&n) (void g$J$22722$U0r&n)))) g$V$22723$U0r&n))) g$fl$14888$U0r&n))) (case-lambda (g$IGNORE$22721$U0r&n (g$C$22720$U0r&n (clr-call-internal 'system.double 'isinfinity '() g$fl$14888$U0r&n)))))))))) (library-letrec*-identity 'g$flinfinite?$14852$U0r&n))) (g$flnan?$14853$U0r&n g$flnan?$14930$U0r&n ((case-lambda ((g$C$22853$U0r&n) (g$C$22853$U0r&n (case-lambda ((g$C$22725$U0r&n g$fl$14889$U0r&n) ((case-lambda ((g$J$22727$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22728$U0r&n) (not (case-lambda ((g$T$22729$U0r&n) (if g$T$22729$U0r&n (g$assertion-violation$13786$U0r&n g$J$22727$U0r&n 'flnan? '"not a flonum" g$fl$14889$U0r&n) (void g$J$22727$U0r&n)))) g$V$22728$U0r&n))) g$fl$14889$U0r&n))) (case-lambda (g$IGNORE$22726$U0r&n (g$C$22725$U0r&n (clr-call-internal 'system.double 'isnan '() g$fl$14889$U0r&n)))))))))) (library-letrec*-identity 'g$flnan?$14853$U0r&n))) (g$flsin$14854$U0r&n g$flsin$14931$U0r&n ((case-lambda ((g$C$22854$U0r&n) (g$C$22854$U0r&n (case-lambda ((g$C$22730$U0r&n g$fl$14890$U0r&n) ((case-lambda ((g$J$22732$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22733$U0r&n) (not (case-lambda ((g$T$22734$U0r&n) (if g$T$22734$U0r&n (g$assertion-violation$13786$U0r&n g$J$22732$U0r&n 'flsin '"not a flonum" g$fl$14890$U0r&n) (void g$J$22732$U0r&n)))) g$V$22733$U0r&n))) g$fl$14890$U0r&n))) (case-lambda (g$IGNORE$22731$U0r&n (g$C$22730$U0r&n (clr-call-internal 'system.math 'sin '() g$fl$14890$U0r&n)))))))))) (library-letrec*-identity 'g$flsin$14854$U0r&n))) (g$flcos$14855$U0r&n g$flcos$14932$U0r&n ((case-lambda ((g$C$22855$U0r&n) (g$C$22855$U0r&n (case-lambda ((g$C$22735$U0r&n g$fl$14891$U0r&n) ((case-lambda ((g$J$22737$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22738$U0r&n) (not (case-lambda ((g$T$22739$U0r&n) (if g$T$22739$U0r&n (g$assertion-violation$13786$U0r&n g$J$22737$U0r&n 'flcos '"not a flonum" g$fl$14891$U0r&n) (void g$J$22737$U0r&n)))) g$V$22738$U0r&n))) g$fl$14891$U0r&n))) (case-lambda (g$IGNORE$22736$U0r&n (g$C$22735$U0r&n (clr-call-internal 'system.math 'cos '() g$fl$14891$U0r&n)))))))))) (library-letrec*-identity 'g$flcos$14855$U0r&n))) (g$fltan$14856$U0r&n g$fltan$14933$U0r&n ((case-lambda ((g$C$22856$U0r&n) (g$C$22856$U0r&n (case-lambda ((g$C$22740$U0r&n g$fl$14892$U0r&n) ((case-lambda ((g$J$22742$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22743$U0r&n) (not (case-lambda ((g$T$22744$U0r&n) (if g$T$22744$U0r&n (g$assertion-violation$13786$U0r&n g$J$22742$U0r&n 'fltan '"not a flonum" g$fl$14892$U0r&n) (void g$J$22742$U0r&n)))) g$V$22743$U0r&n))) g$fl$14892$U0r&n))) (case-lambda (g$IGNORE$22741$U0r&n (g$C$22740$U0r&n (clr-call-internal 'system.math 'tan '() g$fl$14892$U0r&n)))))))))) (library-letrec*-identity 'g$fltan$14856$U0r&n))) (g$flasin$14857$U0r&n g$flasin$14934$U0r&n ((case-lambda ((g$C$22857$U0r&n) (g$C$22857$U0r&n (case-lambda ((g$C$22745$U0r&n g$fl$14893$U0r&n) ((case-lambda ((g$J$22747$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22748$U0r&n) (not (case-lambda ((g$T$22749$U0r&n) (if g$T$22749$U0r&n (g$assertion-violation$13786$U0r&n g$J$22747$U0r&n 'flasin '"not a flonum" g$fl$14893$U0r&n) (void g$J$22747$U0r&n)))) g$V$22748$U0r&n))) g$fl$14893$U0r&n))) (case-lambda (g$IGNORE$22746$U0r&n (g$C$22745$U0r&n (clr-call-internal 'system.math 'asin '() g$fl$14893$U0r&n)))))))))) (library-letrec*-identity 'g$flasin$14857$U0r&n))) (g$flacos$14858$U0r&n g$flacos$14935$U0r&n ((case-lambda ((g$C$22858$U0r&n) (g$C$22858$U0r&n (case-lambda ((g$C$22750$U0r&n g$fl$14894$U0r&n) ((case-lambda ((g$J$22752$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22753$U0r&n) (not (case-lambda ((g$T$22754$U0r&n) (if g$T$22754$U0r&n (g$assertion-violation$13786$U0r&n g$J$22752$U0r&n 'flacos '"not a flonum" g$fl$14894$U0r&n) (void g$J$22752$U0r&n)))) g$V$22753$U0r&n))) g$fl$14894$U0r&n))) (case-lambda (g$IGNORE$22751$U0r&n (g$C$22750$U0r&n (clr-call-internal 'system.math 'acos '() g$fl$14894$U0r&n)))))))))) (library-letrec*-identity 'g$flacos$14858$U0r&n))) (g$flatan$14859$U0r&n g$flatan$14936$U0r&n ((case-lambda ((g$C$22859$U0r&n) (g$C$22859$U0r&n (case-lambda ((g$C$22755$U0r&n g$fl$14895$U0r&n) (g$C$22755$U0r&n (clr-call-internal 'system.math 'atan '() g$fl$14895$U0r&n))) ((g$C$22755$U0r&n g$fl1$14896$U0r&n g$fl2$14897$U0r&n) (g$C$22755$U0r&n (clr-call-internal 'system.math 'atan2 '() g$fl1$14896$U0r&n g$fl2$14897$U0r&n))))))) (library-letrec*-identity 'g$flatan$14859$U0r&n))) (g$fllog$14860$U0r&n g$fllog$14937$U0r&n ((case-lambda ((g$C$22860$U0r&n) (g$C$22860$U0r&n (case-lambda ((g$C$22756$U0r&n g$fl$14898$U0r&n) (g$C$22756$U0r&n (clr-call-internal 'system.math 'log '() g$fl$14898$U0r&n))) ((g$C$22756$U0r&n g$fl1$14899$U0r&n g$fl2$14900$U0r&n) (g$C$22756$U0r&n (clr-call-internal 'system.math 'log '() g$fl1$14899$U0r&n g$fl2$14900$U0r&n))))))) (library-letrec*-identity 'g$fllog$14860$U0r&n))) (g$flsqrt$14861$U0r&n g$flsqrt$14938$U0r&n ((case-lambda ((g$C$22861$U0r&n) (g$C$22861$U0r&n (case-lambda ((g$C$22757$U0r&n g$fl$14901$U0r&n) ((case-lambda ((g$J$22759$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22760$U0r&n) (not (case-lambda ((g$T$22761$U0r&n) (if g$T$22761$U0r&n (g$assertion-violation$13786$U0r&n g$J$22759$U0r&n 'flsqrt '"not a flonum" g$fl$14901$U0r&n) (void g$J$22759$U0r&n)))) g$V$22760$U0r&n))) g$fl$14901$U0r&n))) (case-lambda (g$IGNORE$22758$U0r&n (g$C$22757$U0r&n (clr-call-internal 'system.math 'sqrt '() g$fl$14901$U0r&n)))))))))) (library-letrec*-identity 'g$flsqrt$14861$U0r&n))) (g$flexp$14862$U0r&n g$flexp$14939$U0r&n ((case-lambda ((g$C$22862$U0r&n) (g$C$22862$U0r&n (case-lambda ((g$C$22762$U0r&n g$fl$14902$U0r&n) ((case-lambda ((g$J$22764$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22765$U0r&n) (not (case-lambda ((g$T$22766$U0r&n) (if g$T$22766$U0r&n (g$assertion-violation$13786$U0r&n g$J$22764$U0r&n 'flexp '"not a flonum" g$fl$14902$U0r&n) (void g$J$22764$U0r&n)))) g$V$22765$U0r&n))) g$fl$14902$U0r&n))) (case-lambda (g$IGNORE$22763$U0r&n (g$C$22762$U0r&n (clr-call-internal 'system.math 'exp '() g$fl$14902$U0r&n)))))))))) (library-letrec*-identity 'g$flexp$14862$U0r&n))) (g$flexpt$14863$U0r&n g$flexpt$14940$U0r&n ((case-lambda ((g$C$22863$U0r&n) (g$C$22863$U0r&n (case-lambda ((g$C$22767$U0r&n g$fl$14903$U0r&n g$n$14904$U0r&n) ((case-lambda ((g$J$22769$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22770$U0r&n) (not (case-lambda ((g$T$22771$U0r&n) (if g$T$22771$U0r&n (g$assertion-violation$13786$U0r&n g$J$22769$U0r&n 'flexpt '"not a flonum" g$fl$14903$U0r&n) (void g$J$22769$U0r&n)))) g$V$22770$U0r&n))) g$fl$14903$U0r&n))) (case-lambda (g$IGNORE$22768$U0r&n (g$C$22767$U0r&n (clr-call-internal 'system.math 'pow '() g$fl$14903$U0r&n g$n$14904$U0r&n)))))))))) (library-letrec*-identity 'g$flexpt$14863$U0r&n))) (g$flceiling$14864$U0r&n g$flceiling$14941$U0r&n ((case-lambda ((g$C$22864$U0r&n) (g$C$22864$U0r&n (case-lambda ((g$C$22772$U0r&n g$fl$14905$U0r&n) ((case-lambda ((g$J$22774$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22775$U0r&n) (not (case-lambda ((g$T$22776$U0r&n) (if g$T$22776$U0r&n (g$assertion-violation$13786$U0r&n g$J$22774$U0r&n 'flceiling '"not a flonum" g$fl$14905$U0r&n) (void g$J$22774$U0r&n)))) g$V$22775$U0r&n))) g$fl$14905$U0r&n))) (case-lambda (g$IGNORE$22773$U0r&n (g$C$22772$U0r&n (clr-call-internal 'system.math '"ceiling(double)" '() g$fl$14905$U0r&n)))))))))) (library-letrec*-identity 'g$flceiling$14864$U0r&n))) (g$flfloor$14865$U0r&n g$flfloor$14942$U0r&n ((case-lambda ((g$C$22865$U0r&n) (g$C$22865$U0r&n (case-lambda ((g$C$22777$U0r&n g$fl$14906$U0r&n) ((case-lambda ((g$J$22779$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22780$U0r&n) (not (case-lambda ((g$T$22781$U0r&n) (if g$T$22781$U0r&n (g$assertion-violation$13786$U0r&n g$J$22779$U0r&n 'flfloor '"not a flonum" g$fl$14906$U0r&n) (void g$J$22779$U0r&n)))) g$V$22780$U0r&n))) g$fl$14906$U0r&n))) (case-lambda (g$IGNORE$22778$U0r&n (g$C$22777$U0r&n (clr-call-internal 'system.math '"floor(double)" '() g$fl$14906$U0r&n)))))))))) (library-letrec*-identity 'g$flfloor$14865$U0r&n))) (g$fltruncate$14866$U0r&n g$fltruncate$14943$U0r&n ((case-lambda ((g$C$22866$U0r&n) (g$C$22866$U0r&n (case-lambda ((g$C$22782$U0r&n g$fl$14907$U0r&n) ((case-lambda ((g$J$22784$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22785$U0r&n) (not (case-lambda ((g$T$22786$U0r&n) (if g$T$22786$U0r&n (g$assertion-violation$13786$U0r&n g$J$22784$U0r&n 'fltruncate '"not a flonum" g$fl$14907$U0r&n) (void g$J$22784$U0r&n)))) g$V$22785$U0r&n))) g$fl$14907$U0r&n))) (case-lambda (g$IGNORE$22783$U0r&n (g$C$22782$U0r&n (clr-call-internal 'system.math '"truncate(double)" '() g$fl$14907$U0r&n)))))))))) (library-letrec*-identity 'g$fltruncate$14866$U0r&n))) (g$flround$14867$U0r&n g$flround$14944$U0r&n ((case-lambda ((g$C$22867$U0r&n) (g$C$22867$U0r&n (case-lambda ((g$C$22787$U0r&n g$fl$14908$U0r&n) ((case-lambda ((g$J$22789$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22790$U0r&n) (not (case-lambda ((g$T$22791$U0r&n) (if g$T$22791$U0r&n (g$assertion-violation$13786$U0r&n g$J$22789$U0r&n 'flround '"not a flonum" g$fl$14908$U0r&n) (void g$J$22789$U0r&n)))) g$V$22790$U0r&n))) g$fl$14908$U0r&n))) (case-lambda (g$IGNORE$22788$U0r&n (g$C$22787$U0r&n (clr-call-internal 'system.math '"round(double)" '() g$fl$14908$U0r&n)))))))))) (library-letrec*-identity 'g$flround$14867$U0r&n))) (g$flabs$14868$U0r&n g$flabs$14945$U0r&n ((case-lambda ((g$C$22868$U0r&n) (g$C$22868$U0r&n (case-lambda ((g$C$22792$U0r&n g$fl$14909$U0r&n) ((case-lambda ((g$J$22794$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22795$U0r&n) (not (case-lambda ((g$T$22796$U0r&n) (if g$T$22796$U0r&n (g$assertion-violation$13786$U0r&n g$J$22794$U0r&n 'flabs '"not a flonum" g$fl$14909$U0r&n) (void g$J$22794$U0r&n)))) g$V$22795$U0r&n))) g$fl$14909$U0r&n))) (case-lambda (g$IGNORE$22793$U0r&n (g$C$22792$U0r&n (clr-call-internal 'system.math '"abs(double)" '() g$fl$14909$U0r&n)))))))))) (library-letrec*-identity 'g$flabs$14868$U0r&n))) (g$flpositive?$14869$U0r&n g$flpositive?$14946$U0r&n ((case-lambda ((g$C$22869$U0r&n) (g$C$22869$U0r&n (case-lambda ((g$C$22797$U0r&n g$r$14910$U0r&n) ((case-lambda ((g$J$22799$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22800$U0r&n) (not (case-lambda ((g$T$22801$U0r&n) (if g$T$22801$U0r&n (g$assertion-violation$13786$U0r&n g$J$22799$U0r&n 'flpositive? '"not a flonum" g$r$14910$U0r&n) (void g$J$22799$U0r&n)))) g$V$22800$U0r&n))) g$r$14910$U0r&n))) (case-lambda (g$IGNORE$22798$U0r&n (fl<? g$C$22797$U0r&n '0.0 g$r$14910$U0r&n))))))))) (library-letrec*-identity 'g$flpositive?$14869$U0r&n))) (g$flnegative?$14870$U0r&n g$flnegative?$14947$U0r&n ((case-lambda ((g$C$22870$U0r&n) (g$C$22870$U0r&n (case-lambda ((g$C$22802$U0r&n g$r$14911$U0r&n) ((case-lambda ((g$J$22804$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22805$U0r&n) (not (case-lambda ((g$T$22806$U0r&n) (if g$T$22806$U0r&n (g$assertion-violation$13786$U0r&n g$J$22804$U0r&n 'flnegative? '"not a flonum" g$r$14911$U0r&n) (void g$J$22804$U0r&n)))) g$V$22805$U0r&n))) g$r$14911$U0r&n))) (case-lambda (g$IGNORE$22803$U0r&n (fl>? g$C$22802$U0r&n '0.0 g$r$14911$U0r&n))))))))) (library-letrec*-identity 'g$flnegative?$14870$U0r&n))) (g$flzero?$14871$U0r&n g$flzero?$14948$U0r&n ((case-lambda ((g$C$22871$U0r&n) (g$C$22871$U0r&n (case-lambda ((g$C$22807$U0r&n g$r$14912$U0r&n) ((case-lambda ((g$J$22809$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22810$U0r&n) (not (case-lambda ((g$T$22811$U0r&n) (if g$T$22811$U0r&n (g$assertion-violation$13786$U0r&n g$J$22809$U0r&n 'flzero? '"not a flonum" g$r$14912$U0r&n) (void g$J$22809$U0r&n)))) g$V$22810$U0r&n))) g$r$14912$U0r&n))) (case-lambda (g$IGNORE$22808$U0r&n (fl=? g$C$22807$U0r&n '0.0 g$r$14912$U0r&n))))))))) (library-letrec*-identity 'g$flzero?$14871$U0r&n))) (g$fleven?$14872$U0r&n g$fleven?$14949$U0r&n ((case-lambda ((g$C$22872$U0r&n) (g$C$22872$U0r&n (case-lambda ((g$C$22812$U0r&n g$n$14913$U0r&n) ((case-lambda ((g$J$22819$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22820$U0r&n) (not (case-lambda ((g$T$22821$U0r&n) (if g$T$22821$U0r&n (g$assertion-violation$13786$U0r&n g$J$22819$U0r&n 'fleven? '"not a flonum" g$n$14913$U0r&n) (void g$J$22819$U0r&n)))) g$V$22820$U0r&n))) g$n$14913$U0r&n))) (case-lambda (g$IGNORE$22813$U0r&n ((case-lambda ((g$J$22816$U0r&n) (integer-valued? (case-lambda ((g$V$22817$U0r&n) (not (case-lambda ((g$T$22818$U0r&n) (if g$T$22818$U0r&n (g$assertion-violation$13786$U0r&n g$J$22816$U0r&n 'fleven? '"not integer valued" g$n$14913$U0r&n) (void g$J$22816$U0r&n)))) g$V$22817$U0r&n))) g$n$14913$U0r&n))) (case-lambda (g$IGNORE$22814$U0r&n (g$flmod$14846$U0r&n (case-lambda ((g$V$22815$U0r&n) (fl=? g$C$22812$U0r&n '0.0 g$V$22815$U0r&n))) g$n$14913$U0r&n '2.0)))))))))))) (library-letrec*-identity 'g$fleven?$14872$U0r&n))) (g$flodd?$14873$U0r&n g$flodd?$14950$U0r&n ((case-lambda ((g$C$22873$U0r&n) (g$C$22873$U0r&n (case-lambda ((g$C$22822$U0r&n g$n$14914$U0r&n) ((case-lambda ((g$J$22829$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22830$U0r&n) (not (case-lambda ((g$T$22831$U0r&n) (if g$T$22831$U0r&n (g$assertion-violation$13786$U0r&n g$J$22829$U0r&n 'flodd? '"not a flonum" g$n$14914$U0r&n) (void g$J$22829$U0r&n)))) g$V$22830$U0r&n))) g$n$14914$U0r&n))) (case-lambda (g$IGNORE$22823$U0r&n ((case-lambda ((g$J$22826$U0r&n) (integer-valued? (case-lambda ((g$V$22827$U0r&n) (not (case-lambda ((g$T$22828$U0r&n) (if g$T$22828$U0r&n (g$assertion-violation$13786$U0r&n g$J$22826$U0r&n 'flodd? '"not integer valued" g$n$14914$U0r&n) (void g$J$22826$U0r&n)))) g$V$22827$U0r&n))) g$n$14914$U0r&n))) (case-lambda (g$IGNORE$22824$U0r&n (g$flmod$14846$U0r&n (case-lambda ((g$V$22825$U0r&n) (fl=? g$C$22822$U0r&n '1.0 g$V$22825$U0r&n))) g$n$14914$U0r&n '2.0)))))))))))) (library-letrec*-identity 'g$flodd?$14873$U0r&n))) (g$flmax$14874$U0r&n g$flmax$14951$U0r&n ((case-lambda ((g$C$22874$U0r&n) (g$C$22874$U0r&n (case-lambda ((g$C$22834$U0r&n g$a$14915$U0r&n . g$rest$14916$U0r&n) ((case-lambda ((g$J$22836$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22837$U0r&n) (not (case-lambda ((g$T$22838$U0r&n) (if g$T$22838$U0r&n (g$assertion-violation$13786$U0r&n g$J$22836$U0r&n 'flmax '"not a flonum" g$a$14915$U0r&n) (void g$J$22836$U0r&n)))) g$V$22837$U0r&n))) g$a$14915$U0r&n))) (case-lambda (g$IGNORE$22835$U0r&n (g$fold-left$12756$U0r&n g$C$22834$U0r&n (case-lambda ((g$C$22832$U0r&n g$a$14917$U0r&n g$b$14918$U0r&n) (fl<? (case-lambda ((g$T$22833$U0r&n) (if g$T$22833$U0r&n (g$C$22832$U0r&n g$b$14918$U0r&n) (g$C$22832$U0r&n g$a$14917$U0r&n)))) g$a$14917$U0r&n g$b$14918$U0r&n))) g$a$14915$U0r&n g$rest$14916$U0r&n))))))))) (library-letrec*-identity 'g$flmax$14874$U0r&n))) (g$flmin$14875$U0r&n g$flmin$14952$U0r&n ((case-lambda ((g$C$22875$U0r&n) (g$C$22875$U0r&n (case-lambda ((g$C$22841$U0r&n g$a$14919$U0r&n . g$rest$14920$U0r&n) ((case-lambda ((g$J$22843$U0r&n) (g$flonum?$13500$U0r&n (case-lambda ((g$V$22844$U0r&n) (not (case-lambda ((g$T$22845$U0r&n) (if g$T$22845$U0r&n (g$assertion-violation$13786$U0r&n g$J$22843$U0r&n 'flmin '"not a flonum" g$a$14919$U0r&n) (void g$J$22843$U0r&n)))) g$V$22844$U0r&n))) g$a$14919$U0r&n))) (case-lambda (g$IGNORE$22842$U0r&n (g$fold-left$12756$U0r&n g$C$22841$U0r&n (case-lambda ((g$C$22839$U0r&n g$a$14921$U0r&n g$b$14922$U0r&n) (fl>? (case-lambda ((g$T$22840$U0r&n) (if g$T$22840$U0r&n (g$C$22839$U0r&n g$b$14922$U0r&n) (g$C$22839$U0r&n g$a$14921$U0r&n)))) g$a$14921$U0r&n g$b$14922$U0r&n))) g$a$14919$U0r&n g$rest$14920$U0r&n))))))))) (library-letrec*-identity 'g$flmin$14875$U0r&n)))) (void identity-for-cps))(library-letrec* (ironscheme io ports) ((g$using$14954$U0r&n g$using$14974$U0r&n ((case-lambda ((g$C$22894$U0r&n) (g$C$22894$U0r&n (clr-using-internal 'ironscheme.runtime)))) (library-letrec*-identity 'g$using$14954$U0r&n))) (g$put-datum$14955$U0r&n g$put-datum$14975$U0r&n ((case-lambda ((g$C$22895$U0r&n) (g$C$22895$U0r&n (case-lambda ((g$C$22876$U0r&n g$p$14963$U0r&n g$datum$14964$U0r&n) (write g$C$22876$U0r&n g$datum$14964$U0r&n g$p$14963$U0r&n)))))) (library-letrec*-identity 'g$put-datum$14955$U0r&n))) (g$get-datum$14956$U0r&n g$get-datum$14976$U0r&n ((case-lambda ((g$C$22896$U0r&n) (g$C$22896$U0r&n read))) (library-letrec*-identity 'g$get-datum$14956$U0r&n))) (g$get-output-string$14957$U0r&n g$get-output-string$14977$U0r&n ((case-lambda ((g$C$22897$U0r&n) (g$C$22897$U0r&n (case-lambda ((g$C$22877$U0r&n g$port$14965$U0r&n) (g$C$22877$U0r&n (clr-call-internal 'ironscheme.runtime.stringwriter 'getbuffer g$port$14965$U0r&n))))))) (library-letrec*-identity 'g$get-output-string$14957$U0r&n))) (g$open-output-string$14958$U0r&n g$open-output-string$14978$U0r&n ((case-lambda ((g$C$22898$U0r&n) (g$C$22898$U0r&n (case-lambda ((g$C$22878$U0r&n) (g$C$22878$U0r&n (clr-new-internal 'ironscheme.runtime.stringwriter))))))) (library-letrec*-identity 'g$open-output-string$14958$U0r&n))) (g$open-string-output-port$14959$U0r&n g$open-string-output-port$14979$U0r&n ((case-lambda ((g$C$22899$U0r&n) (g$C$22899$U0r&n (case-lambda ((g$C$22881$U0r&n) (g$open-output-string$14958$U0r&n (case-lambda ((g$V$22882$U0r&n) ((case-lambda ((g$C$22880$U0r&n g$p$14966$U0r&n) (values g$C$22880$U0r&n g$p$14966$U0r&n (case-lambda ((g$C$22879$U0r&n) (g$get-output-string$14957$U0r&n g$C$22879$U0r&n g$p$14966$U0r&n)))))) g$C$22881$U0r&n g$V$22882$U0r&n))))))))) (library-letrec*-identity 'g$open-string-output-port$14959$U0r&n))) (g$port?$14960$U0r&n g$port?$14980$U0r&n ((case-lambda ((g$C$22900$U0r&n) (g$C$22900$U0r&n (case-lambda ((g$C$22884$U0r&n g$obj$14967$U0r&n) (textual-port? (case-lambda ((g$V$22885$U0r&n) ((case-lambda ((g$C$22883$U0r&n g$t$14968$U0r&n) (if g$t$14968$U0r&n (g$C$22883$U0r&n g$t$14968$U0r&n) (binary-port? g$C$22883$U0r&n g$obj$14967$U0r&n)))) g$C$22884$U0r&n g$V$22885$U0r&n))) g$obj$14967$U0r&n)))))) (library-letrec*-identity 'g$port?$14960$U0r&n))) (g$call-with-string-output-port$14961$U0r&n g$call-with-string-output-port$14981$U0r&n ((case-lambda ((g$C$22901$U0r&n) (g$C$22901$U0r&n (case-lambda ((g$C$22888$U0r&n g$proc$14969$U0r&n) (g$open-output-string$14958$U0r&n (case-lambda ((g$V$22889$U0r&n) ((case-lambda ((g$C$22886$U0r&n g$p$14970$U0r&n) (g$call-with-port$14962$U0r&n (case-lambda (g$IGNORE$22887$U0r&n (g$get-output-string$14957$U0r&n g$C$22886$U0r&n g$p$14970$U0r&n))) g$p$14970$U0r&n g$proc$14969$U0r&n))) g$C$22888$U0r&n g$V$22889$U0r&n))))))))) (library-letrec*-identity 'g$call-with-string-output-port$14961$U0r&n))) (g$call-with-port$14962$U0r&n g$call-with-port$14982$U0r&n ((case-lambda ((g$C$22902$U0r&n) (g$C$22902$U0r&n (case-lambda ((g$C$22892$U0r&n g$port$14971$U0r&n g$proc$14972$U0r&n) (g$proc$14972$U0r&n (case-lambda ((g$V$22893$U0r&n) ((case-lambda ((g$C$22890$U0r&n g$r$14973$U0r&n) (close-port (case-lambda (g$IGNORE$22891$U0r&n (g$C$22890$U0r&n g$r$14973$U0r&n))) g$port$14971$U0r&n))) g$C$22892$U0r&n g$V$22893$U0r&n))) g$port$14971$U0r&n)))))) (library-letrec*-identity 'g$call-with-port$14962$U0r&n)))) (void identity-for-cps))(library-letrec* (ironscheme io simple) ((g$peek-char$14983$U0r&n g$peek-char$15038$U0r&n ((case-lambda ((g$C$22949$U0r&n) (g$C$22949$U0r&n (case-lambda ((g$C$22903$U0r&n) (current-input-port (case-lambda ((g$V$22904$U0r&n) (g$peek-char$14983$U0r&n g$C$22903$U0r&n g$V$22904$U0r&n))))) ((g$C$22903$U0r&n g$port$15010$U0r&n) (lookahead-char g$C$22903$U0r&n g$port$15010$U0r&n)))))) (library-letrec*-identity 'g$peek-char$14983$U0r&n))) (g$read-char$14984$U0r&n g$read-char$15039$U0r&n ((case-lambda ((g$C$22950$U0r&n) (g$C$22950$U0r&n (case-lambda ((g$C$22905$U0r&n) (current-input-port (case-lambda ((g$V$22906$U0r&n) (g$read-char$14984$U0r&n g$C$22905$U0r&n g$V$22906$U0r&n))))) ((g$C$22905$U0r&n g$port$15011$U0r&n) (get-char g$C$22905$U0r&n g$port$15011$U0r&n)))))) (library-letrec*-identity 'g$read-char$14984$U0r&n))) (g$write-char$14985$U0r&n g$write-char$15040$U0r&n ((case-lambda ((g$C$22951$U0r&n) (g$C$22951$U0r&n (case-lambda ((g$C$22907$U0r&n g$chr$15012$U0r&n) (current-output-port (case-lambda ((g$V$22908$U0r&n) (g$write-char$14985$U0r&n g$C$22907$U0r&n g$chr$15012$U0r&n g$V$22908$U0r&n))))) ((g$C$22907$U0r&n g$chr$15013$U0r&n g$port$15014$U0r&n) (put-char g$C$22907$U0r&n g$port$15014$U0r&n g$chr$15013$U0r&n)))))) (library-letrec*-identity 'g$write-char$14985$U0r&n))) (g$with-input-from-file$15005$U0r&n g$with-input-from-file$15041$U0r&n ((case-lambda ((g$C$22952$U0r&n) (g$C$22952$U0r&n (case-lambda ((g$C$22920$U0r&n g$filename$15015$U0r&n g$thunk$15016$U0r&n) (open-input-file (case-lambda ((g$V$22921$U0r&n) ((case-lambda ((g$C$22919$U0r&n g$current-input-port$15019$U0r&n g$t$15020$U0r&n) ((case-lambda ((g$C$22914$U0r&n g$swap$15021$U0r&n) (dynamic-wind g$C$22914$U0r&n g$swap$15021$U0r&n (case-lambda ((g$C$22913$U0r&n) (dynamic-wind g$C$22913$U0r&n (case-lambda ((g$C$22909$U0r&n) (g$C$22909$U0r&n '#f))) (case-lambda ((g$C$22910$U0r&n) (g$thunk$15016$U0r&n g$C$22910$U0r&n))) (case-lambda ((g$C$22911$U0r&n) (current-input-port (case-lambda ((g$V$22912$U0r&n) (close-input-port g$C$22911$U0r&n g$V$22912$U0r&n))))))))) g$swap$15021$U0r&n))) g$C$22919$U0r&n (case-lambda ((g$C$22917$U0r&n) (g$current-input-port$15019$U0r&n (case-lambda ((g$V$22918$U0r&n) ((case-lambda ((g$C$22915$U0r&n g$t$15022$U0r&n) (g$current-input-port$15019$U0r&n (case-lambda (g$IGNORE$22916$U0r&n (begin (set! g$t$15020$U0r&n g$t$15022$U0r&n) (g$C$22915$U0r&n (cps-void))))) g$t$15020$U0r&n))) g$C$22917$U0r&n g$V$22918$U0r&n))))))))) g$C$22920$U0r&n current-input-port g$V$22921$U0r&n))) g$filename$15015$U0r&n)))))) (library-letrec*-identity 'g$with-input-from-file$15005$U0r&n))) (g$with-output-to-file$15006$U0r&n g$with-output-to-file$15042$U0r&n ((case-lambda ((g$C$22953$U0r&n) (g$C$22953$U0r&n (case-lambda ((g$C$22933$U0r&n g$filename$15023$U0r&n g$thunk$15024$U0r&n) (open-output-file (case-lambda ((g$V$22934$U0r&n) ((case-lambda ((g$C$22932$U0r&n g$current-output-port$15027$U0r&n g$t$15028$U0r&n) ((case-lambda ((g$C$22927$U0r&n g$swap$15029$U0r&n) (dynamic-wind g$C$22927$U0r&n g$swap$15029$U0r&n (case-lambda ((g$C$22926$U0r&n) (dynamic-wind g$C$22926$U0r&n (case-lambda ((g$C$22922$U0r&n) (g$C$22922$U0r&n '#f))) (case-lambda ((g$C$22923$U0r&n) (g$thunk$15024$U0r&n g$C$22923$U0r&n))) (case-lambda ((g$C$22924$U0r&n) (current-output-port (case-lambda ((g$V$22925$U0r&n) (close-output-port g$C$22924$U0r&n g$V$22925$U0r&n))))))))) g$swap$15029$U0r&n))) g$C$22932$U0r&n (case-lambda ((g$C$22930$U0r&n) (g$current-output-port$15027$U0r&n (case-lambda ((g$V$22931$U0r&n) ((case-lambda ((g$C$22928$U0r&n g$t$15030$U0r&n) (g$current-output-port$15027$U0r&n (case-lambda (g$IGNORE$22929$U0r&n (begin (set! g$t$15028$U0r&n g$t$15030$U0r&n) (g$C$22928$U0r&n (cps-void))))) g$t$15028$U0r&n))) g$C$22930$U0r&n g$V$22931$U0r&n))))))))) g$C$22933$U0r&n current-output-port g$V$22934$U0r&n))) g$filename$15023$U0r&n)))))) (library-letrec*-identity 'g$with-output-to-file$15006$U0r&n))) (g$call-with-input-file$15007$U0r&n g$call-with-input-file$15043$U0r&n ((case-lambda ((g$C$22954$U0r&n) (g$C$22954$U0r&n (case-lambda ((g$C$22939$U0r&n g$filename$15031$U0r&n g$proc$15032$U0r&n) (open-input-file (case-lambda ((g$V$22940$U0r&n) ((case-lambda ((g$C$22938$U0r&n g$p$15033$U0r&n) (dynamic-wind g$C$22938$U0r&n (case-lambda ((g$C$22935$U0r&n) (g$C$22935$U0r&n '#f))) (case-lambda ((g$C$22936$U0r&n) (g$proc$15032$U0r&n g$C$22936$U0r&n g$p$15033$U0r&n))) (case-lambda ((g$C$22937$U0r&n) (close-input-port g$C$22937$U0r&n g$p$15033$U0r&n)))))) g$C$22939$U0r&n g$V$22940$U0r&n))) g$filename$15031$U0r&n)))))) (library-letrec*-identity 'g$call-with-input-file$15007$U0r&n))) (g$call-with-output-file$15008$U0r&n g$call-with-output-file$15044$U0r&n ((case-lambda ((g$C$22955$U0r&n) (g$C$22955$U0r&n (case-lambda ((g$C$22945$U0r&n g$filename$15034$U0r&n g$proc$15035$U0r&n) (open-output-file (case-lambda ((g$V$22946$U0r&n) ((case-lambda ((g$C$22944$U0r&n g$p$15036$U0r&n) (dynamic-wind g$C$22944$U0r&n (case-lambda ((g$C$22941$U0r&n) (g$C$22941$U0r&n '#f))) (case-lambda ((g$C$22942$U0r&n) (g$proc$15035$U0r&n g$C$22942$U0r&n g$p$15036$U0r&n))) (case-lambda ((g$C$22943$U0r&n) (close-output-port g$C$22943$U0r&n g$p$15036$U0r&n)))))) g$C$22945$U0r&n g$V$22946$U0r&n))) g$filename$15034$U0r&n)))))) (library-letrec*-identity 'g$call-with-output-file$15008$U0r&n))) (g$newline$15009$U0r&n g$newline$15045$U0r&n ((case-lambda ((g$C$22956$U0r&n) (g$C$22956$U0r&n (case-lambda ((g$C$22947$U0r&n) (current-output-port (case-lambda ((g$V$22948$U0r&n) (g$newline$15009$U0r&n g$C$22947$U0r&n g$V$22948$U0r&n))))) ((g$C$22947$U0r&n g$port$15037$U0r&n) (display g$C$22947$U0r&n '"\n" g$port$15037$U0r&n)))))) (library-letrec*-identity 'g$newline$15009$U0r&n)))) (void identity-for-cps))(library-letrec* (ironscheme records inspection) () (void identity-for-cps))(library-letrec* (ironscheme records procedural) () (void identity-for-cps))(library-letrec* (ironscheme records syntactic) () (void identity-for-cps))(library-letrec* (ironscheme enums) ((g$7127$15046$U0r&n g$7127$15159$U0r&n ((case-lambda ((g$C$23150$U0r&n) (make-record-type-descriptor g$C$23150$U0r&n 'enum '#f '#f '#f '#f '#((immutable value) (immutable info))))) (library-letrec*-identity 'g$7127$15046$U0r&n))) (g$7129$15047$U0r&n g$7129$15160$U0r&n ((case-lambda ((g$C$23151$U0r&n) (g$C$23151$U0r&n '#f))) (library-letrec*-identity 'g$7129$15047$U0r&n))) (g$7128$15048$U0r&n g$7128$15161$U0r&n ((case-lambda ((g$C$23152$U0r&n) (make-record-constructor-descriptor g$C$23152$U0r&n g$7127$15046$U0r&n '#f g$7129$15047$U0r&n))) (library-letrec*-identity 'g$7128$15048$U0r&n))) (g$enum?$15051$U0r&n g$enum?$15162$U0r&n ((case-lambda ((g$C$23153$U0r&n) (record-predicate g$C$23153$U0r&n g$7127$15046$U0r&n))) (library-letrec*-identity 'g$enum?$15051$U0r&n))) (g$make-enum$15052$U0r&n g$make-enum$15163$U0r&n ((case-lambda ((g$C$23154$U0r&n) (record-constructor g$C$23154$U0r&n g$7128$15048$U0r&n))) (library-letrec*-identity 'g$make-enum$15052$U0r&n))) (g$enum-value$15053$U0r&n g$enum-value$15164$U0r&n ((case-lambda ((g$C$23155$U0r&n) (record-accessor g$C$23155$U0r&n g$7127$15046$U0r&n '0))) (library-letrec*-identity 'g$enum-value$15053$U0r&n))) (g$enum-info$15054$U0r&n g$enum-info$15165$U0r&n ((case-lambda ((g$C$23156$U0r&n) (record-accessor g$C$23156$U0r&n g$7127$15046$U0r&n '1))) (library-letrec*-identity 'g$enum-info$15054$U0r&n))) (g$7138$15055$U0r&n g$7138$15166$U0r&n ((case-lambda ((g$C$23157$U0r&n) (make-record-type-descriptor g$C$23157$U0r&n 'enum-universe '#f '#f '#f '#f '#((immutable id) (immutable symbols) (immutable mapping) (immutable value))))) (library-letrec*-identity 'g$7138$15055$U0r&n))) (g$7140$15056$U0r&n g$7140$15167$U0r&n ((case-lambda ((g$C$23158$U0r&n) (g$C$23158$U0r&n '#f))) (library-letrec*-identity 'g$7140$15056$U0r&n))) (g$7139$15057$U0r&n g$7139$15168$U0r&n ((case-lambda ((g$C$23159$U0r&n) (make-record-constructor-descriptor g$C$23159$U0r&n g$7138$15055$U0r&n '#f g$7140$15056$U0r&n))) (library-letrec*-identity 'g$7139$15057$U0r&n))) (g$enum-universe?$15060$U0r&n g$enum-universe?$15169$U0r&n ((case-lambda ((g$C$23160$U0r&n) (record-predicate g$C$23160$U0r&n g$7138$15055$U0r&n))) (library-letrec*-identity 'g$enum-universe?$15060$U0r&n))) (g$make-enum-universe$15061$U0r&n g$make-enum-universe$15170$U0r&n ((case-lambda ((g$C$23161$U0r&n) (record-constructor g$C$23161$U0r&n g$7139$15057$U0r&n))) (library-letrec*-identity 'g$make-enum-universe$15061$U0r&n))) (g$enum-universe-id$15062$U0r&n g$enum-universe-id$15171$U0r&n ((case-lambda ((g$C$23162$U0r&n) (record-accessor g$C$23162$U0r&n g$7138$15055$U0r&n '0))) (library-letrec*-identity 'g$enum-universe-id$15062$U0r&n))) (g$enum-universe-symbols$15063$U0r&n g$enum-universe-symbols$15172$U0r&n ((case-lambda ((g$C$23163$U0r&n) (record-accessor g$C$23163$U0r&n g$7138$15055$U0r&n '1))) (library-letrec*-identity 'g$enum-universe-symbols$15063$U0r&n))) (g$enum-universe-mapping$15064$U0r&n g$enum-universe-mapping$15173$U0r&n ((case-lambda ((g$C$23164$U0r&n) (record-accessor g$C$23164$U0r&n g$7138$15055$U0r&n '2))) (library-letrec*-identity 'g$enum-universe-mapping$15064$U0r&n))) (g$enum-universe-value$15065$U0r&n g$enum-universe-value$15174$U0r&n ((case-lambda ((g$C$23165$U0r&n) (record-accessor g$C$23165$U0r&n g$7138$15055$U0r&n '3))) (library-letrec*-identity 'g$enum-universe-value$15065$U0r&n))) (g$enum-type=?$15066$U0r&n g$enum-type=?$15175$U0r&n ((case-lambda ((g$C$23166$U0r&n) (g$C$23166$U0r&n (case-lambda ((g$C$22957$U0r&n g$enumset1$15088$U0r&n g$enumset2$15089$U0r&n) (g$enum-info$15054$U0r&n (case-lambda ((g$V$22958$U0r&n) (g$enum-universe-id$15062$U0r&n (case-lambda ((g$V$22959$U0r&n) (g$enum-info$15054$U0r&n (case-lambda ((g$V$22960$U0r&n) (g$enum-universe-id$15062$U0r&n (case-lambda ((g$V$22961$U0r&n) (eq? g$C$22957$U0r&n g$V$22961$U0r&n g$V$22959$U0r&n))) g$V$22960$U0r&n))) g$enumset1$15088$U0r&n))) g$V$22958$U0r&n))) g$enumset2$15089$U0r&n)))))) (library-letrec*-identity 'g$enum-type=?$15066$U0r&n))) (g$get-symbols$15067$U0r&n g$get-symbols$15176$U0r&n ((case-lambda ((g$C$23167$U0r&n) (g$C$23167$U0r&n (case-lambda ((g$C$22962$U0r&n g$enumset$15090$U0r&n) (g$enum-info$15054$U0r&n (case-lambda ((g$V$22963$U0r&n) (g$enum-universe-symbols$15063$U0r&n g$C$22962$U0r&n g$V$22963$U0r&n))) g$enumset$15090$U0r&n)))))) (library-letrec*-identity 'g$get-symbols$15067$U0r&n))) (g$get-value$15068$U0r&n g$get-value$15177$U0r&n ((case-lambda ((g$C$23168$U0r&n) (g$C$23168$U0r&n (case-lambda ((g$C$22964$U0r&n g$enumset$15091$U0r&n g$s$15092$U0r&n) (g$enum-info$15054$U0r&n (case-lambda ((g$V$22965$U0r&n) (g$enum-universe-mapping$15064$U0r&n (case-lambda ((g$V$22966$U0r&n) (g$hashtable-ref$13600$U0r&n g$C$22964$U0r&n g$V$22966$U0r&n g$s$15092$U0r&n '#f))) g$V$22965$U0r&n))) g$enumset$15091$U0r&n)))))) (library-letrec*-identity 'g$get-value$15068$U0r&n))) (g$assert-enum$15069$U0r&n g$assert-enum$15178$U0r&n ((case-lambda ((g$C$23169$U0r&n) (g$C$23169$U0r&n (case-lambda ((g$C$22967$U0r&n g$who$15093$U0r&n g$enumset$15094$U0r&n) (g$enum?$15051$U0r&n (case-lambda ((g$V$22968$U0r&n) (not (case-lambda ((g$T$22969$U0r&n) (if g$T$22969$U0r&n (g$assertion-violation$13786$U0r&n g$C$22967$U0r&n g$who$15093$U0r&n '"not an enumeration" g$enumset$15094$U0r&n) (void g$C$22967$U0r&n)))) g$V$22968$U0r&n))) g$enumset$15094$U0r&n)))))) (library-letrec*-identity 'g$assert-enum$15069$U0r&n))) (g$make-info$15070$U0r&n g$make-info$15179$U0r&n ((case-lambda ((g$C$23170$U0r&n) (g$C$23170$U0r&n (case-lambda ((g$C$22988$U0r&n g$symbols$15095$U0r&n) (g$make-eq-hashtable$13597$U0r&n (case-lambda ((g$V$22989$U0r&n) ((case-lambda ((g$C$22986$U0r&n g$ht$15096$U0r&n) ((case-lambda ((g$C$22985$U0r&n g$f$15097$U0r&n) ((case-lambda ((g$C$22971$U0r&n g$f$22970$U0r&n) (begin (set! g$f$15097$U0r&n g$f$22970$U0r&n) (g$C$22971$U0r&n g$f$15097$U0r&n)))) g$C$22985$U0r&n (case-lambda ((g$C$22980$U0r&n g$s$15098$U0r&n g$a$15099$U0r&n g$mask$15100$U0r&n) (null? (case-lambda ((g$T$22981$U0r&n) (if g$T$22981$U0r&n (- (case-lambda ((g$V$22982$U0r&n) (reverse! (case-lambda ((g$V$22983$U0r&n) (values g$C$22980$U0r&n g$V$22983$U0r&n g$ht$15096$U0r&n g$V$22982$U0r&n))) g$a$15099$U0r&n))) g$mask$15100$U0r&n '1) (car (case-lambda ((g$V$22984$U0r&n) ((case-lambda ((g$C$22972$U0r&n g$n$15101$U0r&n) (g$symbol?$13496$U0r&n (case-lambda ((g$T$22973$U0r&n) (if g$T$22973$U0r&n (g$hashtable-contains?$13603$U0r&n (case-lambda ((g$T$22974$U0r&n) (if g$T$22974$U0r&n (cdr (case-lambda ((g$V$22975$U0r&n) (g$f$15097$U0r&n g$C$22972$U0r&n g$V$22975$U0r&n g$a$15099$U0r&n g$mask$15100$U0r&n))) g$s$15098$U0r&n) (g$hashtable-set!$13601$U0r&n (case-lambda (g$IGNORE$22976$U0r&n (g$bitwise-arithmetic-shift-left$14688$U0r&n (case-lambda ((g$V$22977$U0r&n) (cons (case-lambda ((g$V$22978$U0r&n) (cdr (case-lambda ((g$V$22979$U0r&n) (g$f$15097$U0r&n g$C$22972$U0r&n g$V$22979$U0r&n g$V$22978$U0r&n g$V$22977$U0r&n))) g$s$15098$U0r&n))) g$n$15101$U0r&n g$a$15099$U0r&n))) g$mask$15100$U0r&n '1))) g$ht$15096$U0r&n g$n$15101$U0r&n g$mask$15100$U0r&n)))) g$ht$15096$U0r&n g$n$15101$U0r&n) (g$assertion-violation$13786$U0r&n g$C$22972$U0r&n 'make-enumeration '"not a symbol" g$n$15101$U0r&n)))) g$n$15101$U0r&n))) g$C$22980$U0r&n g$V$22984$U0r&n))) g$s$15098$U0r&n)))) g$s$15098$U0r&n)))))) (case-lambda ((g$V$22987$U0r&n) (g$V$22987$U0r&n g$C$22986$U0r&n g$symbols$15095$U0r&n '() '1))) uninitialized))) g$C$22988$U0r&n g$V$22989$U0r&n))))))))) (library-letrec*-identity 'g$make-info$15070$U0r&n))) (g$make-name$15071$U0r&n g$make-name$15180$U0r&n ((case-lambda ((g$C$23171$U0r&n) (g$C$23171$U0r&n (case-lambda ((g$C$22990$U0r&n g$symbols$15102$U0r&n) (g$format$15219$U0r&n (case-lambda ((g$V$22991$U0r&n) (string->symbol g$C$22990$U0r&n g$V$22991$U0r&n))) '"~a" g$symbols$15102$U0r&n)))))) (library-letrec*-identity 'g$make-name$15071$U0r&n))) (g$make-enumeration$15072$U0r&n g$make-enumeration$15181$U0r&n ((case-lambda ((g$C$23172$U0r&n) (g$C$23172$U0r&n (case-lambda ((g$C$22997$U0r&n g$symbols$15103$U0r&n) (call-with-values g$C$22997$U0r&n (case-lambda ((g$C$22992$U0r&n) (g$make-info$15070$U0r&n g$C$22992$U0r&n g$symbols$15103$U0r&n))) (case-lambda ((g$C$22996$U0r&n g$s$15107$U0r&n g$mapping$15108$U0r&n g$mask$15109$U0r&n) ((case-lambda ((g$C$22993$U0r&n g$mask$15110$U0r&n g$mapping$15111$U0r&n g$s$15112$U0r&n) (g$make-name$15071$U0r&n (case-lambda ((g$V$22994$U0r&n) (g$make-enum-universe$15061$U0r&n (case-lambda ((g$V$22995$U0r&n) (g$make-enum$15052$U0r&n g$C$22993$U0r&n g$mask$15110$U0r&n g$V$22995$U0r&n))) g$V$22994$U0r&n g$s$15112$U0r&n g$mapping$15111$U0r&n g$mask$15110$U0r&n))) g$s$15112$U0r&n))) g$C$22996$U0r&n g$mask$15109$U0r&n g$mapping$15108$U0r&n g$s$15107$U0r&n))))))))) (library-letrec*-identity 'g$make-enumeration$15072$U0r&n))) (g$enum-set-universe$15073$U0r&n g$enum-set-universe$15182$U0r&n ((case-lambda ((g$C$23173$U0r&n) (g$C$23173$U0r&n (case-lambda ((g$C$23000$U0r&n g$enumset$15113$U0r&n) (g$assert-enum$15069$U0r&n (case-lambda (g$IGNORE$23001$U0r&n (g$enum-info$15054$U0r&n (case-lambda ((g$V$23002$U0r&n) ((case-lambda ((g$C$22998$U0r&n g$ei$15114$U0r&n) (g$enum-universe-value$15065$U0r&n (case-lambda ((g$V$22999$U0r&n) (g$make-enum$15052$U0r&n g$C$22998$U0r&n g$V$22999$U0r&n g$ei$15114$U0r&n))) g$ei$15114$U0r&n))) g$C$23000$U0r&n g$V$23002$U0r&n))) g$enumset$15113$U0r&n))) 'enum-set-universe g$enumset$15113$U0r&n)))))) (library-letrec*-identity 'g$enum-set-universe$15073$U0r&n))) (g$enum-set-indexer$15074$U0r&n g$enum-set-indexer$15183$U0r&n ((case-lambda ((g$C$23174$U0r&n) (g$C$23174$U0r&n (case-lambda ((g$C$23011$U0r&n g$enumset$15115$U0r&n) (g$assert-enum$15069$U0r&n (case-lambda (g$IGNORE$23012$U0r&n (g$C$23011$U0r&n (case-lambda ((g$C$23005$U0r&n g$symbol$15116$U0r&n) ((case-lambda ((g$J$23008$U0r&n) (g$symbol?$13496$U0r&n (case-lambda ((g$V$23009$U0r&n) (not (case-lambda ((g$T$23010$U0r&n) (if g$T$23010$U0r&n (g$assertion-violation$13786$U0r&n g$J$23008$U0r&n 'enum-set-indexer '"not a symbol" g$symbol$15116$U0r&n) (void g$J$23008$U0r&n)))) g$V$23009$U0r&n))) g$symbol$15116$U0r&n))) (case-lambda (g$IGNORE$23006$U0r&n (g$get-value$15068$U0r&n (case-lambda ((g$V$23007$U0r&n) ((case-lambda ((g$C$23003$U0r&n g$v$15117$U0r&n) (if g$v$15117$U0r&n (bitwise-length (case-lambda ((g$V$23004$U0r&n) (- g$C$23003$U0r&n g$V$23004$U0r&n '1))) g$v$15117$U0r&n) (g$C$23003$U0r&n '#f)))) g$C$23005$U0r&n g$V$23007$U0r&n))) g$enumset$15115$U0r&n g$symbol$15116$U0r&n))))))))) 'enum-set-indexer g$enumset$15115$U0r&n)))))) (library-letrec*-identity 'g$enum-set-indexer$15074$U0r&n))) (g$enum-set-constructor$15075$U0r&n g$enum-set-constructor$15184$U0r&n ((case-lambda ((g$C$23175$U0r&n) (g$C$23175$U0r&n (case-lambda ((g$C$23028$U0r&n g$enumset$15118$U0r&n) (g$assert-enum$15069$U0r&n (case-lambda (g$IGNORE$23029$U0r&n (g$C$23028$U0r&n (case-lambda ((g$C$23026$U0r&n g$symbols$15119$U0r&n) ((case-lambda ((g$C$23025$U0r&n g$f$15120$U0r&n) ((case-lambda ((g$C$23014$U0r&n g$f$23013$U0r&n) (begin (set! g$f$15120$U0r&n g$f$23013$U0r&n) (g$C$23014$U0r&n g$f$15120$U0r&n)))) g$C$23025$U0r&n (case-lambda ((g$C$23021$U0r&n g$v$15121$U0r&n g$s$15122$U0r&n) (null? (case-lambda ((g$T$23022$U0r&n) (if g$T$23022$U0r&n (g$enum-info$15054$U0r&n (case-lambda ((g$V$23023$U0r&n) (g$make-enum$15052$U0r&n g$C$23021$U0r&n g$v$15121$U0r&n g$V$23023$U0r&n))) g$enumset$15118$U0r&n) (car (case-lambda ((g$V$23024$U0r&n) ((case-lambda ((g$C$23018$U0r&n g$n$15123$U0r&n) (g$symbol?$13496$U0r&n (case-lambda ((g$T$23019$U0r&n) (if g$T$23019$U0r&n (g$get-value$15068$U0r&n (case-lambda ((g$V$23020$U0r&n) ((case-lambda ((g$C$23015$U0r&n g$v*$15124$U0r&n) (if g$v*$15124$U0r&n (cdr (case-lambda ((g$V$23016$U0r&n) (bitwise-ior (case-lambda ((g$V$23017$U0r&n) (g$f$15120$U0r&n g$C$23015$U0r&n g$V$23017$U0r&n g$V$23016$U0r&n))) g$v$15121$U0r&n g$v*$15124$U0r&n))) g$s$15122$U0r&n) (g$assertion-violation$13786$U0r&n g$C$23015$U0r&n 'enum-set-constructor '"not a member of enum-set" g$n$15123$U0r&n)))) g$C$23018$U0r&n g$V$23020$U0r&n))) g$enumset$15118$U0r&n g$n$15123$U0r&n) (g$assertion-violation$13786$U0r&n g$C$23018$U0r&n 'enum-set-constructor '"not a symbol" g$n$15123$U0r&n)))) g$n$15123$U0r&n))) g$C$23021$U0r&n g$V$23024$U0r&n))) g$s$15122$U0r&n)))) g$s$15122$U0r&n)))))) (case-lambda ((g$V$23027$U0r&n) (g$V$23027$U0r&n g$C$23026$U0r&n '0 g$symbols$15119$U0r&n))) uninitialized)))))) 'enum-set-constructor g$enumset$15118$U0r&n)))))) (library-letrec*-identity 'g$enum-set-constructor$15075$U0r&n))) (g$enum-set->list$15076$U0r&n g$enum-set->list$15185$U0r&n ((case-lambda ((g$C$23176$U0r&n) (g$C$23176$U0r&n (case-lambda ((g$C$23046$U0r&n g$enumset$15125$U0r&n) (g$assert-enum$15069$U0r&n (case-lambda (g$IGNORE$23047$U0r&n (g$enum-value$15053$U0r&n (case-lambda ((g$V$23048$U0r&n) ((case-lambda ((g$C$23043$U0r&n g$value$15126$U0r&n) (g$get-symbols$15067$U0r&n (case-lambda ((g$V$23044$U0r&n) ((case-lambda ((g$C$23042$U0r&n g$f$15127$U0r&n) ((case-lambda ((g$C$23031$U0r&n g$f$23030$U0r&n) (begin (set! g$f$15127$U0r&n g$f$23030$U0r&n) (g$C$23031$U0r&n g$f$15127$U0r&n)))) g$C$23042$U0r&n (case-lambda ((g$C$23032$U0r&n g$s$15128$U0r&n g$l$15129$U0r&n) (null? (case-lambda ((g$T$23033$U0r&n) (if g$T$23033$U0r&n (reverse! g$C$23032$U0r&n g$l$15129$U0r&n) (car (case-lambda ((g$V$23034$U0r&n) (g$get-value$15068$U0r&n (case-lambda ((g$V$23035$U0r&n) (bitwise-and (case-lambda ((g$V$23036$U0r&n) (g$zero?$13535$U0r&n (case-lambda ((g$T$23037$U0r&n) (if g$T$23037$U0r&n (cdr (case-lambda ((g$V$23038$U0r&n) (g$f$15127$U0r&n g$C$23032$U0r&n g$V$23038$U0r&n g$l$15129$U0r&n))) g$s$15128$U0r&n) (car (case-lambda ((g$V$23039$U0r&n) (cons (case-lambda ((g$V$23040$U0r&n) (cdr (case-lambda ((g$V$23041$U0r&n) (g$f$15127$U0r&n g$C$23032$U0r&n g$V$23041$U0r&n g$V$23040$U0r&n))) g$s$15128$U0r&n))) g$V$23039$U0r&n g$l$15129$U0r&n))) g$s$15128$U0r&n)))) g$V$23036$U0r&n))) g$V$23035$U0r&n g$value$15126$U0r&n))) g$enumset$15125$U0r&n g$V$23034$U0r&n))) g$s$15128$U0r&n)))) g$s$15128$U0r&n)))))) (case-lambda ((g$V$23045$U0r&n) (g$V$23045$U0r&n g$C$23043$U0r&n g$V$23044$U0r&n '()))) uninitialized))) g$enumset$15125$U0r&n))) g$C$23046$U0r&n g$V$23048$U0r&n))) g$enumset$15125$U0r&n))) 'enum-set->list g$enumset$15125$U0r&n)))))) (library-letrec*-identity 'g$enum-set->list$15076$U0r&n))) (g$enum-set-member?$15077$U0r&n g$enum-set-member?$15186$U0r&n ((case-lambda ((g$C$23177$U0r&n) (g$C$23177$U0r&n (case-lambda ((g$C$23053$U0r&n g$symbol$15130$U0r&n g$enumset$15131$U0r&n) ((case-lambda ((g$J$23057$U0r&n) (g$symbol?$13496$U0r&n (case-lambda ((g$V$23058$U0r&n) (not (case-lambda ((g$T$23059$U0r&n) (if g$T$23059$U0r&n (g$assertion-violation$13786$U0r&n g$J$23057$U0r&n 'enum-set-member? '"not a symbol" g$symbol$15130$U0r&n) (void g$J$23057$U0r&n)))) g$V$23058$U0r&n))) g$symbol$15130$U0r&n))) (case-lambda (g$IGNORE$23054$U0r&n (g$assert-enum$15069$U0r&n (case-lambda (g$IGNORE$23055$U0r&n (g$get-value$15068$U0r&n (case-lambda ((g$V$23056$U0r&n) ((case-lambda ((g$C$23049$U0r&n g$v$15132$U0r&n) (if g$v$15132$U0r&n (g$enum-value$15053$U0r&n (case-lambda ((g$V$23050$U0r&n) (bitwise-and (case-lambda ((g$V$23051$U0r&n) (g$zero?$13535$U0r&n (case-lambda ((g$V$23052$U0r&n) (not g$C$23049$U0r&n g$V$23052$U0r&n))) g$V$23051$U0r&n))) g$v$15132$U0r&n g$V$23050$U0r&n))) g$enumset$15131$U0r&n) (g$C$23049$U0r&n '#f)))) g$C$23053$U0r&n g$V$23056$U0r&n))) g$enumset$15131$U0r&n g$symbol$15130$U0r&n))) 'enum-set-member? g$enumset$15131$U0r&n))))))))) (library-letrec*-identity 'g$enum-set-member?$15077$U0r&n))) (g$enum-set-subset?$15078$U0r&n g$enum-set-subset?$15187$U0r&n ((case-lambda ((g$C$23178$U0r&n) (g$C$23178$U0r&n (case-lambda ((g$C$23085$U0r&n g$enumset1$15133$U0r&n g$enumset2$15134$U0r&n) (g$assert-enum$15069$U0r&n (case-lambda (g$IGNORE$23086$U0r&n (g$assert-enum$15069$U0r&n (case-lambda (g$IGNORE$23087$U0r&n (g$enum-value$15053$U0r&n (case-lambda ((g$V$23088$U0r&n) (g$enum-value$15053$U0r&n (case-lambda ((g$V$23089$U0r&n) ((case-lambda ((g$C$23080$U0r&n g$v1$15135$U0r&n g$v2$15136$U0r&n) (g$enum-type=?$15066$U0r&n (case-lambda ((g$T$23081$U0r&n) (if g$T$23081$U0r&n (bitwise-and (case-lambda ((g$V$23082$U0r&n) (= g$C$23080$U0r&n g$V$23082$U0r&n g$v1$15135$U0r&n))) g$v1$15135$U0r&n g$v2$15136$U0r&n) (g$get-symbols$15067$U0r&n (case-lambda ((g$V$23083$U0r&n) ((case-lambda ((g$C$23079$U0r&n g$f$15137$U0r&n) ((case-lambda ((g$C$23061$U0r&n g$f$23060$U0r&n) (begin (set! g$f$15137$U0r&n g$f$23060$U0r&n) (g$C$23061$U0r&n g$f$15137$U0r&n)))) g$C$23079$U0r&n (case-lambda ((g$C$23073$U0r&n g$s$15138$U0r&n) (null? (case-lambda ((g$T$23074$U0r&n) (if g$T$23074$U0r&n (g$C$23073$U0r&n '#t) (car (case-lambda ((g$V$23075$U0r&n) (g$get-value$15068$U0r&n (case-lambda ((g$V$23076$U0r&n) (car (case-lambda ((g$V$23077$U0r&n) (g$get-value$15068$U0r&n (case-lambda ((g$V$23078$U0r&n) ((case-lambda ((g$C$23066$U0r&n g$v1*$15139$U0r&n g$v2*$15140$U0r&n) (if g$v2*$15140$U0r&n (bitwise-and (case-lambda ((g$V$23067$U0r&n) (g$zero?$13535$U0r&n (case-lambda ((g$V$23068$U0r&n) (not (case-lambda ((g$V$23069$U0r&n) (bitwise-and (case-lambda ((g$V$23070$U0r&n) (g$zero?$13535$U0r&n (case-lambda ((g$V$23071$U0r&n) (not (case-lambda ((g$V$23072$U0r&n) ((case-lambda ((g$C$23062$U0r&n g$has1$15141$U0r&n g$has2$15142$U0r&n) ((case-lambda ((g$J$23065$U0r&n) (if g$has1$15141$U0r&n (not g$J$23065$U0r&n g$has2$15142$U0r&n) (g$J$23065$U0r&n '#f)))) (case-lambda ((g$T$23063$U0r&n) (if g$T$23063$U0r&n (g$C$23062$U0r&n '#f) (cdr (case-lambda ((g$V$23064$U0r&n) (g$f$15137$U0r&n g$C$23062$U0r&n g$V$23064$U0r&n))) g$s$15138$U0r&n))))))) g$C$23066$U0r&n g$V$23072$U0r&n g$V$23069$U0r&n))) g$V$23071$U0r&n))) g$V$23070$U0r&n))) g$v1$15135$U0r&n g$v1*$15139$U0r&n))) g$V$23068$U0r&n))) g$V$23067$U0r&n))) g$v2$15136$U0r&n g$v2*$15140$U0r&n) (g$C$23066$U0r&n '#f)))) g$C$23073$U0r&n g$V$23078$U0r&n g$V$23076$U0r&n))) g$enumset1$15133$U0r&n g$V$23077$U0r&n))) g$s$15138$U0r&n))) g$enumset2$15134$U0r&n g$V$23075$U0r&n))) g$s$15138$U0r&n)))) g$s$15138$U0r&n)))))) (case-lambda ((g$V$23084$U0r&n) (g$V$23084$U0r&n g$C$23080$U0r&n g$V$23083$U0r&n))) uninitialized))) g$enumset1$15133$U0r&n)))) g$enumset1$15133$U0r&n g$enumset2$15134$U0r&n))) g$C$23085$U0r&n g$V$23089$U0r&n g$V$23088$U0r&n))) g$enumset1$15133$U0r&n))) g$enumset2$15134$U0r&n))) 'enum-set-subset? g$enumset2$15134$U0r&n))) 'enum-set-subset? g$enumset1$15133$U0r&n)))))) (library-letrec*-identity 'g$enum-set-subset?$15078$U0r&n))) (g$enum-set=?$15079$U0r&n g$enum-set=?$15188$U0r&n ((case-lambda ((g$C$23179$U0r&n) (g$C$23179$U0r&n (case-lambda ((g$C$23090$U0r&n g$enumset1$15143$U0r&n g$enumset2$15144$U0r&n) (g$assert-enum$15069$U0r&n (case-lambda (g$IGNORE$23091$U0r&n (g$assert-enum$15069$U0r&n (case-lambda (g$IGNORE$23092$U0r&n (g$enum-set-subset?$15078$U0r&n (case-lambda ((g$T$23093$U0r&n) (if g$T$23093$U0r&n (g$enum-set-subset?$15078$U0r&n g$C$23090$U0r&n g$enumset2$15144$U0r&n g$enumset1$15143$U0r&n) (g$C$23090$U0r&n '#f)))) g$enumset1$15143$U0r&n g$enumset2$15144$U0r&n))) 'enum-set=? g$enumset2$15144$U0r&n))) 'enum-set=? g$enumset1$15143$U0r&n)))))) (library-letrec*-identity 'g$enum-set=?$15079$U0r&n))) (g$enum-set-union$15080$U0r&n g$enum-set-union$15189$U0r&n ((case-lambda ((g$C$23180$U0r&n) (g$C$23180$U0r&n (case-lambda ((g$C$23094$U0r&n g$enumset1$15145$U0r&n g$enumset2$15146$U0r&n) (g$assert-enum$15069$U0r&n (case-lambda (g$IGNORE$23095$U0r&n (g$assert-enum$15069$U0r&n (case-lambda (g$IGNORE$23096$U0r&n (g$enum-type=?$15066$U0r&n (case-lambda ((g$T$23097$U0r&n) (if g$T$23097$U0r&n (g$enum-info$15054$U0r&n (case-lambda ((g$V$23098$U0r&n) (g$enum-value$15053$U0r&n (case-lambda ((g$V$23099$U0r&n) (g$enum-value$15053$U0r&n (case-lambda ((g$V$23100$U0r&n) (bitwise-ior (case-lambda ((g$V$23101$U0r&n) (g$make-enum$15052$U0r&n g$C$23094$U0r&n g$V$23101$U0r&n g$V$23098$U0r&n))) g$V$23100$U0r&n g$V$23099$U0r&n))) g$enumset1$15145$U0r&n))) g$enumset2$15146$U0r&n))) g$enumset1$15145$U0r&n) (g$C$23094$U0r&n '#f)))) g$enumset1$15145$U0r&n g$enumset2$15146$U0r&n))) 'enum-set-union g$enumset2$15146$U0r&n))) 'enum-set-union g$enumset1$15145$U0r&n)))))) (library-letrec*-identity 'g$enum-set-union$15080$U0r&n))) (g$enum-set-intersection$15081$U0r&n g$enum-set-intersection$15190$U0r&n ((case-lambda ((g$C$23181$U0r&n) (g$C$23181$U0r&n (case-lambda ((g$C$23102$U0r&n g$enumset1$15147$U0r&n g$enumset2$15148$U0r&n) (g$assert-enum$15069$U0r&n (case-lambda (g$IGNORE$23103$U0r&n (g$assert-enum$15069$U0r&n (case-lambda (g$IGNORE$23104$U0r&n (g$enum-type=?$15066$U0r&n (case-lambda ((g$T$23105$U0r&n) (if g$T$23105$U0r&n (g$enum-info$15054$U0r&n (case-lambda ((g$V$23106$U0r&n) (g$enum-value$15053$U0r&n (case-lambda ((g$V$23107$U0r&n) (g$enum-value$15053$U0r&n (case-lambda ((g$V$23108$U0r&n) (bitwise-and (case-lambda ((g$V$23109$U0r&n) (g$make-enum$15052$U0r&n g$C$23102$U0r&n g$V$23109$U0r&n g$V$23106$U0r&n))) g$V$23108$U0r&n g$V$23107$U0r&n))) g$enumset1$15147$U0r&n))) g$enumset2$15148$U0r&n))) g$enumset1$15147$U0r&n) (g$C$23102$U0r&n '#f)))) g$enumset1$15147$U0r&n g$enumset2$15148$U0r&n))) 'enum-set-intersection g$enumset2$15148$U0r&n))) 'enum-set-intersection g$enumset1$15147$U0r&n)))))) (library-letrec*-identity 'g$enum-set-intersection$15081$U0r&n))) (g$enum-set-difference$15082$U0r&n g$enum-set-difference$15191$U0r&n ((case-lambda ((g$C$23182$U0r&n) (g$C$23182$U0r&n (case-lambda ((g$C$23110$U0r&n g$enumset1$15149$U0r&n g$enumset2$15150$U0r&n) (g$assert-enum$15069$U0r&n (case-lambda (g$IGNORE$23111$U0r&n (g$assert-enum$15069$U0r&n (case-lambda (g$IGNORE$23112$U0r&n (g$enum-type=?$15066$U0r&n (case-lambda ((g$T$23113$U0r&n) (if g$T$23113$U0r&n (g$enum-info$15054$U0r&n (case-lambda ((g$V$23114$U0r&n) (g$enum-value$15053$U0r&n (case-lambda ((g$V$23115$U0r&n) (bitwise-not (case-lambda ((g$V$23116$U0r&n) (g$enum-value$15053$U0r&n (case-lambda ((g$V$23117$U0r&n) (bitwise-and (case-lambda ((g$V$23118$U0r&n) (g$make-enum$15052$U0r&n g$C$23110$U0r&n g$V$23118$U0r&n g$V$23114$U0r&n))) g$V$23117$U0r&n g$V$23116$U0r&n))) g$enumset1$15149$U0r&n))) g$V$23115$U0r&n))) g$enumset2$15150$U0r&n))) g$enumset1$15149$U0r&n) (g$C$23110$U0r&n '#f)))) g$enumset1$15149$U0r&n g$enumset2$15150$U0r&n))) 'enum-set-difference g$enumset2$15150$U0r&n))) 'enum-set-difference g$enumset1$15149$U0r&n)))))) (library-letrec*-identity 'g$enum-set-difference$15082$U0r&n))) (g$enum-set-complement$15083$U0r&n g$enum-set-complement$15192$U0r&n ((case-lambda ((g$C$23183$U0r&n) (g$C$23183$U0r&n (case-lambda ((g$C$23119$U0r&n g$enumset$15151$U0r&n) (g$assert-enum$15069$U0r&n (case-lambda (g$IGNORE$23120$U0r&n (g$enum-info$15054$U0r&n (case-lambda ((g$V$23121$U0r&n) (g$enum-value$15053$U0r&n (case-lambda ((g$V$23122$U0r&n) (bitwise-not (case-lambda ((g$V$23123$U0r&n) (g$make-enum$15052$U0r&n g$C$23119$U0r&n g$V$23123$U0r&n g$V$23121$U0r&n))) g$V$23122$U0r&n))) g$enumset$15151$U0r&n))) g$enumset$15151$U0r&n))) 'enum-set-complement g$enumset$15151$U0r&n)))))) (library-letrec*-identity 'g$enum-set-complement$15083$U0r&n))) (g$enum-set-projection$15084$U0r&n g$enum-set-projection$15193$U0r&n ((case-lambda ((g$C$23184$U0r&n) (g$C$23184$U0r&n (case-lambda ((g$C$23144$U0r&n g$enumset1$15152$U0r&n g$enumset2$15153$U0r&n) (g$assert-enum$15069$U0r&n (case-lambda (g$IGNORE$23145$U0r&n (g$assert-enum$15069$U0r&n (case-lambda (g$IGNORE$23146$U0r&n (g$enum-value$15053$U0r&n (case-lambda ((g$V$23147$U0r&n) ((case-lambda ((g$C$23141$U0r&n g$v1$15154$U0r&n) (g$get-symbols$15067$U0r&n (case-lambda ((g$V$23142$U0r&n) ((case-lambda ((g$C$23140$U0r&n g$f$15155$U0r&n) ((case-lambda ((g$C$23125$U0r&n g$f$23124$U0r&n) (begin (set! g$f$15155$U0r&n g$f$23124$U0r&n) (g$C$23125$U0r&n g$f$15155$U0r&n)))) g$C$23140$U0r&n (case-lambda ((g$C$23130$U0r&n g$s$15156$U0r&n g$v$15157$U0r&n) (null? (case-lambda ((g$T$23131$U0r&n) (if g$T$23131$U0r&n (g$enum-info$15054$U0r&n (case-lambda ((g$V$23132$U0r&n) (g$make-enum$15052$U0r&n g$C$23130$U0r&n g$v$15157$U0r&n g$V$23132$U0r&n))) g$enumset2$15153$U0r&n) (car (case-lambda ((g$V$23133$U0r&n) (g$get-value$15068$U0r&n (case-lambda ((g$V$23134$U0r&n) (bitwise-and (case-lambda ((g$V$23135$U0r&n) (g$zero?$13535$U0r&n (case-lambda ((g$T$23136$U0r&n) (if g$T$23136$U0r&n (cdr (case-lambda ((g$V$23137$U0r&n) (g$f$15155$U0r&n g$C$23130$U0r&n g$V$23137$U0r&n g$v$15157$U0r&n))) g$s$15156$U0r&n) (car (case-lambda ((g$V$23138$U0r&n) (g$get-value$15068$U0r&n (case-lambda ((g$V$23139$U0r&n) ((case-lambda ((g$C$23126$U0r&n g$v2$15158$U0r&n) (if g$v2$15158$U0r&n (bitwise-ior (case-lambda ((g$V$23127$U0r&n) (cdr (case-lambda ((g$V$23128$U0r&n) (g$f$15155$U0r&n g$C$23126$U0r&n g$V$23128$U0r&n g$V$23127$U0r&n))) g$s$15156$U0r&n))) g$v$15157$U0r&n g$v2$15158$U0r&n) (cdr (case-lambda ((g$V$23129$U0r&n) (g$f$15155$U0r&n g$C$23126$U0r&n g$V$23129$U0r&n g$v$15157$U0r&n))) g$s$15156$U0r&n)))) g$C$23130$U0r&n g$V$23139$U0r&n))) g$enumset2$15153$U0r&n g$V$23138$U0r&n))) g$s$15156$U0r&n)))) g$V$23135$U0r&n))) g$v1$15154$U0r&n g$V$23134$U0r&n))) g$enumset1$15152$U0r&n g$V$23133$U0r&n))) g$s$15156$U0r&n)))) g$s$15156$U0r&n)))))) (case-lambda ((g$V$23143$U0r&n) (g$V$23143$U0r&n g$C$23141$U0r&n g$V$23142$U0r&n '0))) uninitialized))) g$enumset1$15152$U0r&n))) g$C$23144$U0r&n g$V$23147$U0r&n))) g$enumset1$15152$U0r&n))) 'enum-set-projection g$enumset2$15153$U0r&n))) 'enum-set-projection g$enumset1$15152$U0r&n)))))) (library-letrec*-identity 'g$enum-set-projection$15084$U0r&n)))) (make-record-printer identity-for-cps 'enum (case-lambda ((g$C$23148$U0r&n g$x$15085$U0r&n g$p$15086$U0r&n g$wr$15087$U0r&n) (g$enum-set->list$15076$U0r&n (case-lambda ((g$V$23149$U0r&n) (g$fprintf$15218$U0r&n g$C$23148$U0r&n g$p$15086$U0r&n '"#[enum-set ~a]" g$V$23149$U0r&n))) g$x$15085$U0r&n)))))(library-letrec* (ironscheme format) ((g$dofmt$15194$U0r&n g$dofmt$15216$U0r&n ((case-lambda ((g$C$23250$U0r&n) (g$C$23250$U0r&n (case-lambda ((g$C$23241$U0r&n g$p$15198$U0r&n g$cntl$15199$U0r&n g$args$15200$U0r&n) (string-length (case-lambda ((g$V$23242$U0r&n) (fx- (case-lambda ((g$V$23243$U0r&n) ((case-lambda ((g$C$23239$U0r&n g$nmax$15201$U0r&n) ((case-lambda ((g$C$23238$U0r&n g$loop$15202$U0r&n) ((case-lambda ((g$C$23186$U0r&n g$loop$23185$U0r&n) (begin (set! g$loop$15202$U0r&n g$loop$23185$U0r&n) (g$C$23186$U0r&n g$loop$15202$U0r&n)))) g$C$23238$U0r&n (case-lambda ((g$C$23235$U0r&n g$n$15203$U0r&n g$a$15204$U0r&n) (fx<=? (case-lambda ((g$T$23236$U0r&n) (if g$T$23236$U0r&n (string-ref (case-lambda ((g$V$23237$U0r&n) ((case-lambda ((g$C$23227$U0r&n g$c$15205$U0r&n) ((case-lambda ((g$J$23233$U0r&n) (g$char=?$13549$U0r&n (case-lambda ((g$T$23234$U0r&n) (if g$T$23234$U0r&n (fx<? g$J$23233$U0r&n g$n$15203$U0r&n g$nmax$15201$U0r&n) (g$J$23233$U0r&n '#f)))) g$c$15205$U0r&n '#\~))) (case-lambda ((g$T$23228$U0r&n) (if g$T$23228$U0r&n (fx+ (case-lambda ((g$V$23229$U0r&n) (string-ref (case-lambda ((g$V$23230$U0r&n) ((case-lambda ((g$C$23187$U0r&n g$t$15206$U0r&n) (eqv? (case-lambda ((g$T$23188$U0r&n) (if g$T$23188$U0r&n (car (case-lambda ((g$V$23189$U0r&n) (display (case-lambda (g$IGNORE$23190$U0r&n (cdr (case-lambda ((g$V$23191$U0r&n) (fx+ (case-lambda ((g$V$23192$U0r&n) (g$loop$15202$U0r&n g$C$23187$U0r&n g$V$23192$U0r&n g$V$23191$U0r&n))) g$n$15203$U0r&n '2))) g$a$15204$U0r&n))) g$V$23189$U0r&n g$p$15198$U0r&n))) g$a$15204$U0r&n) (eqv? (case-lambda ((g$T$23193$U0r&n) (if g$T$23193$U0r&n (car (case-lambda ((g$V$23194$U0r&n) (write (case-lambda (g$IGNORE$23195$U0r&n (cdr (case-lambda ((g$V$23196$U0r&n) (fx+ (case-lambda ((g$V$23197$U0r&n) (g$loop$15202$U0r&n g$C$23187$U0r&n g$V$23197$U0r&n g$V$23196$U0r&n))) g$n$15203$U0r&n '2))) g$a$15204$U0r&n))) g$V$23194$U0r&n g$p$15198$U0r&n))) g$a$15204$U0r&n) (eqv? (case-lambda ((g$T$23198$U0r&n) (if g$T$23198$U0r&n (car (case-lambda ((g$V$23199$U0r&n) (number->string (case-lambda ((g$V$23200$U0r&n) (write (case-lambda (g$IGNORE$23201$U0r&n (cdr (case-lambda ((g$V$23202$U0r&n) (fx+ (case-lambda ((g$V$23203$U0r&n) (g$loop$15202$U0r&n g$C$23187$U0r&n g$V$23203$U0r&n g$V$23202$U0r&n))) g$n$15203$U0r&n '2))) g$a$15204$U0r&n))) g$V$23200$U0r&n g$p$15198$U0r&n))) g$V$23199$U0r&n '2))) g$a$15204$U0r&n) (eqv? (case-lambda ((g$T$23204$U0r&n) (if g$T$23204$U0r&n (car (case-lambda ((g$V$23205$U0r&n) (number->string (case-lambda ((g$V$23206$U0r&n) (write (case-lambda (g$IGNORE$23207$U0r&n (cdr (case-lambda ((g$V$23208$U0r&n) (fx+ (case-lambda ((g$V$23209$U0r&n) (g$loop$15202$U0r&n g$C$23187$U0r&n g$V$23209$U0r&n g$V$23208$U0r&n))) g$n$15203$U0r&n '2))) g$a$15204$U0r&n))) g$V$23206$U0r&n g$p$15198$U0r&n))) g$V$23205$U0r&n '8))) g$a$15204$U0r&n) (eqv? (case-lambda ((g$T$23210$U0r&n) (if g$T$23210$U0r&n (car (case-lambda ((g$V$23211$U0r&n) (number->string (case-lambda ((g$V$23212$U0r&n) (write (case-lambda (g$IGNORE$23213$U0r&n (cdr (case-lambda ((g$V$23214$U0r&n) (fx+ (case-lambda ((g$V$23215$U0r&n) (g$loop$15202$U0r&n g$C$23187$U0r&n g$V$23215$U0r&n g$V$23214$U0r&n))) g$n$15203$U0r&n '2))) g$a$15204$U0r&n))) g$V$23212$U0r&n g$p$15198$U0r&n))) g$V$23211$U0r&n '16))) g$a$15204$U0r&n) (eqv? (case-lambda ((g$T$23216$U0r&n) (if g$T$23216$U0r&n (car (case-lambda ((g$V$23217$U0r&n) (number->string (case-lambda ((g$V$23218$U0r&n) (write (case-lambda (g$IGNORE$23219$U0r&n (cdr (case-lambda ((g$V$23220$U0r&n) (fx+ (case-lambda ((g$V$23221$U0r&n) (g$loop$15202$U0r&n g$C$23187$U0r&n g$V$23221$U0r&n g$V$23220$U0r&n))) g$n$15203$U0r&n '2))) g$a$15204$U0r&n))) g$V$23218$U0r&n g$p$15198$U0r&n))) g$V$23217$U0r&n '10))) g$a$15204$U0r&n) (eqv? (case-lambda ((g$T$23222$U0r&n) (if g$T$23222$U0r&n (g$write-char$15040$U0r&n (case-lambda (g$IGNORE$23223$U0r&n (fx+ (case-lambda ((g$V$23224$U0r&n) (g$loop$15202$U0r&n g$C$23187$U0r&n g$V$23224$U0r&n g$a$15204$U0r&n))) g$n$15203$U0r&n '2))) '#\~ g$p$15198$U0r&n) (g$write-char$15040$U0r&n (case-lambda (g$IGNORE$23225$U0r&n (fx+ (case-lambda ((g$V$23226$U0r&n) (g$loop$15202$U0r&n g$C$23187$U0r&n g$V$23226$U0r&n g$a$15204$U0r&n))) g$n$15203$U0r&n '1))) g$c$15205$U0r&n g$p$15198$U0r&n)))) g$t$15206$U0r&n '#\~)))) g$t$15206$U0r&n '#\d)))) g$t$15206$U0r&n '#\x)))) g$t$15206$U0r&n '#\o)))) g$t$15206$U0r&n '#\b)))) g$t$15206$U0r&n '#\s)))) g$t$15206$U0r&n '#\a))) g$C$23227$U0r&n g$V$23230$U0r&n))) g$cntl$15199$U0r&n g$V$23229$U0r&n))) g$n$15203$U0r&n '1) (g$write-char$15040$U0r&n (case-lambda (g$IGNORE$23231$U0r&n (fx+ (case-lambda ((g$V$23232$U0r&n) (g$loop$15202$U0r&n g$C$23227$U0r&n g$V$23232$U0r&n g$a$15204$U0r&n))) g$n$15203$U0r&n '1))) g$c$15205$U0r&n g$p$15198$U0r&n))))))) g$C$23235$U0r&n g$V$23237$U0r&n))) g$cntl$15199$U0r&n g$n$15203$U0r&n) (void g$C$23235$U0r&n)))) g$n$15203$U0r&n g$nmax$15201$U0r&n)))))) (case-lambda ((g$V$23240$U0r&n) (g$V$23240$U0r&n g$C$23239$U0r&n '0 g$args$15200$U0r&n))) uninitialized))) g$C$23241$U0r&n g$V$23243$U0r&n))) g$V$23242$U0r&n '1))) g$cntl$15199$U0r&n)))))) (library-letrec*-identity 'g$dofmt$15194$U0r&n))) (g$printf$15195$U0r&n g$printf$15217$U0r&n ((case-lambda ((g$C$23251$U0r&n) (g$C$23251$U0r&n (case-lambda ((g$C$23244$U0r&n g$control$15207$U0r&n . g$args$15208$U0r&n) (current-output-port (case-lambda ((g$V$23245$U0r&n) (g$dofmt$15194$U0r&n g$C$23244$U0r&n g$V$23245$U0r&n g$control$15207$U0r&n g$args$15208$U0r&n))))))))) (library-letrec*-identity 'g$printf$15195$U0r&n))) (g$fprintf$15196$U0r&n g$fprintf$15218$U0r&n ((case-lambda ((g$C$23252$U0r&n) (g$C$23252$U0r&n (case-lambda ((g$C$23246$U0r&n g$p$15209$U0r&n g$control$15210$U0r&n . g$args$15211$U0r&n) (g$dofmt$15194$U0r&n g$C$23246$U0r&n g$p$15209$U0r&n g$control$15210$U0r&n g$args$15211$U0r&n)))))) (library-letrec*-identity 'g$fprintf$15196$U0r&n))) (g$format$15197$U0r&n g$format$15219$U0r&n ((case-lambda ((g$C$23253$U0r&n) (g$C$23253$U0r&n (case-lambda ((g$C$23249$U0r&n g$control$15212$U0r&n . g$args$15213$U0r&n) (call-with-values g$C$23249$U0r&n g$open-string-output-port$14979$U0r&n (case-lambda ((g$C$23247$U0r&n g$p$15214$U0r&n g$c$15215$U0r&n) (g$dofmt$15194$U0r&n (case-lambda (g$IGNORE$23248$U0r&n (g$c$15215$U0r&n g$C$23247$U0r&n))) g$p$15214$U0r&n g$control$15212$U0r&n g$args$15213$U0r&n))))))))) (library-letrec*-identity 'g$format$15197$U0r&n)))) (void identity-for-cps))(library-letrec* (ironscheme trace) ((g$make-traced-macro$15220$U0r&n g$make-traced-macro$15223$U0r&n ((case-lambda ((g$C$23259$U0r&n) (g$C$23259$U0r&n (case-lambda ((g$C$23254$U0r&n g$name$15221$U0r&n g$x$15222$U0r&n) (g$procedure?$13498$U0r&n (case-lambda ((g$T$23255$U0r&n) (if g$T$23255$U0r&n (make-traced-procedure g$C$23254$U0r&n g$name$15221$U0r&n g$x$15222$U0r&n g$syntax->datum$20780$U0r&n) (g$variable-transformer?$20601$U0r&n (case-lambda ((g$T$23256$U0r&n) (if g$T$23256$U0r&n (g$variable-transformer-procedure$20602$U0r&n (case-lambda ((g$V$23257$U0r&n) (make-traced-procedure (case-lambda ((g$V$23258$U0r&n) (g$make-variable-transformer$20599$U0r&n g$C$23254$U0r&n g$V$23258$U0r&n))) g$name$15221$U0r&n g$V$23257$U0r&n g$syntax->datum$20780$U0r&n))) g$x$15222$U0r&n) (g$C$23254$U0r&n g$x$15222$U0r&n)))) g$x$15222$U0r&n)))) g$x$15222$U0r&n)))))) (library-letrec*-identity 'g$make-traced-macro$15220$U0r&n)))) (void identity-for-cps))(library-letrec* (psyntax compat) ((g$library-version-mismatch-warning$15224$U0r&n g$library-version-mismatch-warning$15425$U0r&n ((case-lambda ((g$C$23294$U0r&n) (g$C$23294$U0r&n (case-lambda ((g$C$23260$U0r&n g$name$15397$U0r&n g$depname$15398$U0r&n g$filename$15399$U0r&n) (current-error-port (case-lambda ((g$V$23261$U0r&n) (g$fprintf$15218$U0r&n g$C$23260$U0r&n g$V$23261$U0r&n '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.\n" g$name$15397$U0r&n g$depname$15398$U0r&n g$filename$15399$U0r&n))))))))) (library-letrec*-identity 'g$library-version-mismatch-warning$15224$U0r&n))) (g$file-locator-resolution-error$15225$U0r&n g$file-locator-resolution-error$15426$U0r&n ((case-lambda ((g$C$23295$U0r&n) (g$C$23295$U0r&n (case-lambda ((g$C$23277$U0r&n g$libname$15400$U0r&n g$failed-list$15401$U0r&n) ((case-lambda ((g$C$23262$U0r&n g$7316$15402$U0r&n g$7318$15403$U0r&n g$7317$15404$U0r&n g$7315$15407$U0r&n g$make-library-resolution-condition$15408$U0r&n g$7313$15409$U0r&n g$7314$15410$U0r&n g$library-resolution-condition?$15411$U0r&n g$condition-library$15412$U0r&n g$condition-files$15413$U0r&n) (make-record-type-descriptor (case-lambda ((g$V$23263$U0r&n) (begin (set! g$7316$15402$U0r&n g$V$23263$U0r&n) (begin (set! g$7318$15403$U0r&n '#f) (make-record-constructor-descriptor (case-lambda ((g$V$23264$U0r&n) (begin (set! g$7317$15404$U0r&n g$V$23264$U0r&n) (record-predicate (case-lambda ((g$V$23265$U0r&n) (begin (set! g$7315$15407$U0r&n g$V$23265$U0r&n) (record-constructor (case-lambda ((g$V$23266$U0r&n) (begin (set! g$make-library-resolution-condition$15408$U0r&n g$V$23266$U0r&n) (record-accessor (case-lambda ((g$V$23267$U0r&n) (begin (set! g$7313$15409$U0r&n g$V$23267$U0r&n) (record-accessor (case-lambda ((g$V$23268$U0r&n) (begin (set! g$7314$15410$U0r&n g$V$23268$U0r&n) (condition-predicate (case-lambda ((g$V$23269$U0r&n) (begin (set! g$library-resolution-condition?$15411$U0r&n g$V$23269$U0r&n) (condition-accessor (case-lambda ((g$V$23270$U0r&n) (begin (set! g$condition-library$15412$U0r&n g$V$23270$U0r&n) (condition-accessor (case-lambda ((g$V$23271$U0r&n) (begin (set! g$condition-files$15413$U0r&n g$V$23271$U0r&n) (g$make-library-resolution-condition$15408$U0r&n (case-lambda ((g$V$23272$U0r&n) (g$make-message-condition$14201$U0r&n (case-lambda ((g$V$23273$U0r&n) (g$make-who-condition$14261$U0r&n (case-lambda ((g$V$23274$U0r&n) (g$make-error$14227$U0r&n (case-lambda ((g$V$23275$U0r&n) (condition (case-lambda ((g$V$23276$U0r&n) (g$raise$13784$U0r&n g$C$23262$U0r&n g$V$23276$U0r&n))) g$V$23275$U0r&n g$V$23274$U0r&n g$V$23273$U0r&n g$V$23272$U0r&n)))))) 'expander))) '"cannot locate library in library-path"))) g$libname$15400$U0r&n g$failed-list$15401$U0r&n)))) g$7316$15402$U0r&n g$7314$15410$U0r&n)))) g$7316$15402$U0r&n g$7313$15409$U0r&n)))) g$7316$15402$U0r&n)))) g$7316$15402$U0r&n '1)))) g$7316$15402$U0r&n '0)))) g$7317$15404$U0r&n)))) g$7316$15402$U0r&n)))) g$7316$15402$U0r&n g$&condition-rcd$14196$U0r&n g$7318$15403$U0r&n))))) '&library-resolution g$&condition-rtd$14195$U0r&n 'g$7319$U0r&n '#f '#f '#((immutable library) (immutable files))))) g$C$23277$U0r&n uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized)))))) (library-letrec*-identity 'g$file-locator-resolution-error$15225$U0r&n))) (g$read-library-source-file$15226$U0r&n g$read-library-source-file$15427$U0r&n ((case-lambda ((g$C$23296$U0r&n) (g$C$23296$U0r&n (case-lambda ((g$C$23278$U0r&n g$file-name$15414$U0r&n) (g$with-input-from-file$15041$U0r&n g$C$23278$U0r&n g$file-name$15414$U0r&n read-annotated)))))) (library-letrec*-identity 'g$read-library-source-file$15226$U0r&n))) (g$make-parameter$15227$U0r&n g$make-parameter$15428$U0r&n ((case-lambda ((g$C$23297$U0r&n) (g$C$23297$U0r&n (case-lambda ((g$C$23283$U0r&n g$x$15415$U0r&n) (g$make-parameter$15227$U0r&n g$C$23283$U0r&n g$x$15415$U0r&n (case-lambda ((g$C$23279$U0r&n g$x$15416$U0r&n) (g$C$23279$U0r&n g$x$15416$U0r&n))))) ((g$C$23283$U0r&n g$x$15417$U0r&n g$fender$15418$U0r&n) ((case-lambda ((g$J$23286$U0r&n) (g$procedure?$13498$U0r&n (case-lambda ((g$V$23287$U0r&n) (not (case-lambda ((g$T$23288$U0r&n) (if g$T$23288$U0r&n (g$assertion-error$20773$U0r&n g$J$23286$U0r&n '(procedure? fender) '("psyntax\\compat.ss" . "(90,8) - (90,36)")) (void g$J$23286$U0r&n)))) g$V$23287$U0r&n))) g$fender$15418$U0r&n))) (case-lambda (g$IGNORE$23284$U0r&n (g$fender$15418$U0r&n (case-lambda ((g$V$23285$U0r&n) ((case-lambda ((g$C$23282$U0r&n g$x$15419$U0r&n) (g$C$23282$U0r&n (case-lambda ((g$C$23280$U0r&n) (g$C$23280$U0r&n g$x$15419$U0r&n)) ((g$C$23280$U0r&n g$v$15420$U0r&n) (g$fender$15418$U0r&n (case-lambda ((g$V$23281$U0r&n) (begin (set! g$x$15419$U0r&n g$V$23281$U0r&n) (g$C$23280$U0r&n (cps-void))))) g$v$15420$U0r&n)))))) g$C$23283$U0r&n g$V$23285$U0r&n))) g$x$15417$U0r&n))))))))) (library-letrec*-identity 'g$make-parameter$15227$U0r&n))) (g$file-options-constructor$15393$U0r&n g$file-options-constructor$15429$U0r&n ((case-lambda ((g$C$23298$U0r&n) (g$make-parameter$15227$U0r&n g$C$23298$U0r&n '#f))) (library-letrec*-identity 'g$file-options-constructor$15393$U0r&n))) (g$file-options-spec$15394$U0r&n g$file-options-spec$15430$U0r&n ((case-lambda ((g$C$23299$U0r&n) (g$C$23299$U0r&n (case-lambda ((g$C$23289$U0r&n g$x$15421$U0r&n) (g$file-options-constructor$15393$U0r&n (case-lambda ((g$V$23290$U0r&n) (g$V$23290$U0r&n g$C$23289$U0r&n g$x$15421$U0r&n))))))))) (library-letrec*-identity 'g$file-options-spec$15394$U0r&n))) (g$set-label-binding!$15395$U0r&n g$set-label-binding!$15431$U0r&n ((case-lambda ((g$C$23300$U0r&n) (g$C$23300$U0r&n (case-lambda ((g$C$23291$U0r&n g$label$15422$U0r&n g$binding$15423$U0r&n) (set-symbol-value! g$C$23291$U0r&n g$label$15422$U0r&n g$binding$15423$U0r&n)))))) (library-letrec*-identity 'g$set-label-binding!$15395$U0r&n))) (g$label-binding$15396$U0r&n g$label-binding$15432$U0r&n ((case-lambda ((g$C$23301$U0r&n) (g$C$23301$U0r&n (case-lambda ((g$C$23292$U0r&n g$label$15424$U0r&n) (symbol-bound? (case-lambda ((g$T$23293$U0r&n) (if g$T$23293$U0r&n (symbol-value g$C$23292$U0r&n g$label$15424$U0r&n) (g$C$23292$U0r&n '#f)))) g$label$15424$U0r&n)))))) (library-letrec*-identity 'g$label-binding$15396$U0r&n)))) (void identity-for-cps))(library-letrec* (ironscheme pretty-print) ((g$genwrite:newline-str$15433$U0r&n g$genwrite:newline-str$15626$U0r&n ((case-lambda ((g$C$23592$U0r&n) (make-string g$C$23592$U0r&n '1 '#\newline))) (library-letrec*-identity 'g$genwrite:newline-str$15433$U0r&n))) (g$symbol->string$15434$U0r&n g$symbol->string$15627$U0r&n ((case-lambda ((g$C$23593$U0r&n) (g$C$23593$U0r&n (case-lambda ((g$C$23302$U0r&n g$s$15446$U0r&n) ((case-lambda ((g$J$23304$U0r&n) (g$pretty-gensyms$15443$U0r&n (case-lambda ((g$T$23305$U0r&n) (if g$T$23305$U0r&n (ungensym g$J$23304$U0r&n g$s$15446$U0r&n) (g$J$23304$U0r&n g$s$15446$U0r&n))))))) (case-lambda ((g$V$23303$U0r&n) (symbol->string g$C$23302$U0r&n g$V$23303$U0r&n))))))))) (library-letrec*-identity 'g$symbol->string$15434$U0r&n))) (g$read-macro-body$15435$U0r&n g$read-macro-body$15628$U0r&n ((case-lambda ((g$C$23594$U0r&n) (g$C$23594$U0r&n (case-lambda ((g$C$23306$U0r&n g$l$15447$U0r&n) (g$cadr$13506$U0r&n g$C$23306$U0r&n g$l$15447$U0r&n)))))) (library-letrec*-identity 'g$read-macro-body$15435$U0r&n))) (g$read-macro-prefix$15436$U0r&n g$read-macro-prefix$15629$U0r&n ((case-lambda ((g$C$23595$U0r&n) (g$C$23595$U0r&n (case-lambda ((g$C$23317$U0r&n g$l$15448$U0r&n) (cdr (case-lambda ((g$V$23318$U0r&n) (car (case-lambda ((g$V$23319$U0r&n) ((case-lambda ((g$C$23316$U0r&n g$head$15449$U0r&n g$tail$15450$U0r&n) ((case-lambda ((g$C$23307$U0r&n g$t$15451$U0r&n) (eqv? (case-lambda ((g$T$23308$U0r&n) (if g$T$23308$U0r&n (g$C$23307$U0r&n '"#'") (eqv? (case-lambda ((g$T$23309$U0r&n) (if g$T$23309$U0r&n (g$C$23307$U0r&n '"#`") (eqv? (case-lambda ((g$T$23310$U0r&n) (if g$T$23310$U0r&n (g$C$23307$U0r&n '"#,") (eqv? (case-lambda ((g$T$23311$U0r&n) (if g$T$23311$U0r&n (g$C$23307$U0r&n '"#,@") (eqv? (case-lambda ((g$T$23312$U0r&n) (if g$T$23312$U0r&n (g$C$23307$U0r&n '"'") (eqv? (case-lambda ((g$T$23313$U0r&n) (if g$T$23313$U0r&n (g$C$23307$U0r&n '"`") (eqv? (case-lambda ((g$T$23314$U0r&n) (if g$T$23314$U0r&n (g$C$23307$U0r&n '",") (eqv? (case-lambda ((g$T$23315$U0r&n) (if g$T$23315$U0r&n (g$C$23307$U0r&n '",@") (if '#f (g$C$23307$U0r&n '#f) (void g$C$23307$U0r&n))))) g$t$15451$U0r&n 'unquote-splicing)))) g$t$15451$U0r&n 'unquote)))) g$t$15451$U0r&n 'quasiquote)))) g$t$15451$U0r&n 'quote)))) g$t$15451$U0r&n 'unsyntax-splicing)))) g$t$15451$U0r&n 'unsyntax)))) g$t$15451$U0r&n 'quasisyntax)))) g$t$15451$U0r&n 'syntax))) g$C$23316$U0r&n g$head$15449$U0r&n))) g$C$23317$U0r&n g$V$23319$U0r&n g$V$23318$U0r&n))) g$l$15448$U0r&n))) g$l$15448$U0r&n)))))) (library-letrec*-identity 'g$read-macro-prefix$15436$U0r&n))) (g$length1?$15437$U0r&n g$length1?$15630$U0r&n ((case-lambda ((g$C$23596$U0r&n) (g$C$23596$U0r&n (case-lambda ((g$C$23320$U0r&n g$l$15452$U0r&n) (pair? (case-lambda ((g$T$23321$U0r&n) (if g$T$23321$U0r&n (cdr (case-lambda ((g$V$23322$U0r&n) (null? g$C$23320$U0r&n g$V$23322$U0r&n))) g$l$15452$U0r&n) (g$C$23320$U0r&n '#f)))) g$l$15452$U0r&n)))))) (library-letrec*-identity 'g$length1?$15437$U0r&n))) (g$read-macro?$15438$U0r&n g$read-macro?$15631$U0r&n ((case-lambda ((g$C$23597$U0r&n) (g$C$23597$U0r&n (case-lambda ((g$C$23326$U0r&n g$l$15453$U0r&n) (cdr (case-lambda ((g$V$23327$U0r&n) (car (case-lambda ((g$V$23328$U0r&n) ((case-lambda ((g$C$23325$U0r&n g$head$15454$U0r&n g$tail$15455$U0r&n) ((case-lambda ((g$C$23323$U0r&n g$t$15456$U0r&n) (g$memv$12746$U0r&n (case-lambda ((g$T$23324$U0r&n) (if g$T$23324$U0r&n (g$length1?$15437$U0r&n g$C$23323$U0r&n g$tail$15455$U0r&n) (g$C$23323$U0r&n '#f)))) g$t$15456$U0r&n '(quote quasiquote unquote unquote-splicing syntax quasisyntax unsyntax unsyntax-splicing)))) g$C$23325$U0r&n g$head$15454$U0r&n))) g$C$23326$U0r&n g$V$23328$U0r&n g$V$23327$U0r&n))) g$l$15453$U0r&n))) g$l$15453$U0r&n)))))) (library-letrec*-identity 'g$read-macro?$15438$U0r&n))) (g$generic-write$15439$U0r&n g$generic-write$15632$U0r&n ((case-lambda ((g$C$23598$U0r&n) (g$C$23598$U0r&n (case-lambda ((g$C$23558$U0r&n g$obj$15457$U0r&n g$display?$15458$U0r&n g$width$15459$U0r&n g$output$15460$U0r&n) ((case-lambda ((g$C$23556$U0r&n g$out$15461$U0r&n g$wr$15462$U0r&n g$pp$15463$U0r&n) (begin (set! g$out$15461$U0r&n (case-lambda ((g$C$23329$U0r&n g$str$15610$U0r&n g$col$15611$U0r&n) (if g$col$15611$U0r&n (g$output$15460$U0r&n (case-lambda ((g$T$23330$U0r&n) (if g$T$23330$U0r&n (string-length (case-lambda ((g$V$23331$U0r&n) (fx+ g$C$23329$U0r&n g$col$15611$U0r&n g$V$23331$U0r&n))) g$str$15610$U0r&n) (g$C$23329$U0r&n '#f)))) g$str$15610$U0r&n) (g$C$23329$U0r&n '#f))))) (begin (set! g$wr$15462$U0r&n (case-lambda ((g$C$23396$U0r&n g$obj$15593$U0r&n g$col$15594$U0r&n) ((case-lambda ((g$C$23377$U0r&n g$wr-expr$15595$U0r&n g$wr-lst$15596$U0r&n) (begin (set! g$wr-expr$15595$U0r&n (case-lambda ((g$C$23332$U0r&n g$expr$15608$U0r&n g$col$15609$U0r&n) (g$read-macro?$15438$U0r&n (case-lambda ((g$T$23333$U0r&n) (if g$T$23333$U0r&n (g$read-macro-prefix$15436$U0r&n (case-lambda ((g$V$23334$U0r&n) (g$out$15461$U0r&n (case-lambda ((g$V$23335$U0r&n) (g$read-macro-body$15435$U0r&n (case-lambda ((g$V$23336$U0r&n) (g$wr$15462$U0r&n g$C$23332$U0r&n g$V$23336$U0r&n g$V$23335$U0r&n))) g$expr$15608$U0r&n))) g$V$23334$U0r&n g$col$15609$U0r&n))) g$expr$15608$U0r&n) (g$wr-lst$15596$U0r&n g$C$23332$U0r&n g$expr$15608$U0r&n g$col$15609$U0r&n)))) g$expr$15608$U0r&n)))) (begin (set! g$wr-lst$15596$U0r&n (case-lambda ((g$C$23350$U0r&n g$l$15603$U0r&n g$col$15604$U0r&n) (pair? (case-lambda ((g$T$23351$U0r&n) (if g$T$23351$U0r&n ((case-lambda ((g$J$23355$U0r&n) (if g$col$15604$U0r&n (g$out$15461$U0r&n (case-lambda ((g$V$23356$U0r&n) (car (case-lambda ((g$V$23357$U0r&n) (g$wr$15462$U0r&n g$J$23355$U0r&n g$V$23357$U0r&n g$V$23356$U0r&n))) g$l$15603$U0r&n))) '"(" g$col$15604$U0r&n) (g$J$23355$U0r&n '#f)))) (case-lambda ((g$V$23352$U0r&n) (cdr (case-lambda ((g$V$23353$U0r&n) ((case-lambda ((g$C$23349$U0r&n g$loop$15605$U0r&n) ((case-lambda ((g$C$23338$U0r&n g$loop$23337$U0r&n) (begin (set! g$loop$15605$U0r&n g$loop$23337$U0r&n) (g$C$23338$U0r&n g$loop$15605$U0r&n)))) g$C$23349$U0r&n (case-lambda ((g$C$23339$U0r&n g$l$15606$U0r&n g$col$15607$U0r&n) (not (case-lambda ((g$T$23340$U0r&n) (if g$T$23340$U0r&n (g$C$23339$U0r&n g$col$15607$U0r&n) (pair? (case-lambda ((g$T$23341$U0r&n) (if g$T$23341$U0r&n (g$out$15461$U0r&n (case-lambda ((g$V$23342$U0r&n) (car (case-lambda ((g$V$23343$U0r&n) (g$wr$15462$U0r&n (case-lambda ((g$V$23344$U0r&n) (cdr (case-lambda ((g$V$23345$U0r&n) (g$loop$15605$U0r&n g$C$23339$U0r&n g$V$23345$U0r&n g$V$23344$U0r&n))) g$l$15606$U0r&n))) g$V$23343$U0r&n g$V$23342$U0r&n))) g$l$15606$U0r&n))) '" " g$col$15607$U0r&n) (null? (case-lambda ((g$T$23346$U0r&n) (if g$T$23346$U0r&n (g$out$15461$U0r&n g$C$23339$U0r&n '")" g$col$15607$U0r&n) (g$out$15461$U0r&n (case-lambda ((g$V$23347$U0r&n) (g$wr$15462$U0r&n (case-lambda ((g$V$23348$U0r&n) (g$out$15461$U0r&n g$C$23339$U0r&n '")" g$V$23348$U0r&n))) g$l$15606$U0r&n g$V$23347$U0r&n))) '" . " g$col$15607$U0r&n)))) g$l$15606$U0r&n)))) g$l$15606$U0r&n)))) g$col$15607$U0r&n)))))) (case-lambda ((g$V$23354$U0r&n) (g$V$23354$U0r&n g$C$23350$U0r&n g$V$23353$U0r&n g$V$23352$U0r&n))) uninitialized))) g$l$15603$U0r&n)))) (g$out$15461$U0r&n g$C$23350$U0r&n '"()" g$col$15604$U0r&n)))) g$l$15603$U0r&n)))) (pair? (case-lambda ((g$T$23378$U0r&n) (if g$T$23378$U0r&n (g$wr-expr$15595$U0r&n g$C$23377$U0r&n g$obj$15593$U0r&n g$col$15594$U0r&n) (null? (case-lambda ((g$T$23379$U0r&n) (if g$T$23379$U0r&n (g$wr-lst$15596$U0r&n g$C$23377$U0r&n g$obj$15593$U0r&n g$col$15594$U0r&n) (g$vector?$13494$U0r&n (case-lambda ((g$T$23380$U0r&n) (if g$T$23380$U0r&n (g$out$15461$U0r&n (case-lambda ((g$V$23381$U0r&n) (vector->list (case-lambda ((g$V$23382$U0r&n) (g$wr-lst$15596$U0r&n g$C$23377$U0r&n g$V$23382$U0r&n g$V$23381$U0r&n))) g$obj$15593$U0r&n))) '"#" g$col$15594$U0r&n) (g$boolean?$13497$U0r&n (case-lambda ((g$T$23383$U0r&n) (if g$T$23383$U0r&n ((case-lambda ((g$J$23385$U0r&n) (if g$obj$15593$U0r&n (g$J$23385$U0r&n '"#t") (g$J$23385$U0r&n '"#f")))) (case-lambda ((g$V$23384$U0r&n) (g$out$15461$U0r&n g$C$23377$U0r&n g$V$23384$U0r&n g$col$15594$U0r&n)))) (number? (case-lambda ((g$T$23386$U0r&n) (if g$T$23386$U0r&n (number->string (case-lambda ((g$V$23387$U0r&n) (g$out$15461$U0r&n g$C$23377$U0r&n g$V$23387$U0r&n g$col$15594$U0r&n))) g$obj$15593$U0r&n) (g$symbol?$13496$U0r&n (case-lambda ((g$T$23388$U0r&n) (if g$T$23388$U0r&n (g$symbol->string$15434$U0r&n (case-lambda ((g$V$23389$U0r&n) (g$out$15461$U0r&n g$C$23377$U0r&n g$V$23389$U0r&n g$col$15594$U0r&n))) g$obj$15593$U0r&n) (string? (case-lambda ((g$T$23390$U0r&n) (if g$T$23390$U0r&n (if g$display?$15458$U0r&n (g$out$15461$U0r&n g$C$23377$U0r&n g$obj$15593$U0r&n g$col$15594$U0r&n) (g$out$15461$U0r&n (case-lambda ((g$V$23391$U0r&n) ((case-lambda ((g$C$23376$U0r&n g$loop$15597$U0r&n) ((case-lambda ((g$C$23359$U0r&n g$loop$23358$U0r&n) (begin (set! g$loop$15597$U0r&n g$loop$23358$U0r&n) (g$C$23359$U0r&n g$loop$15597$U0r&n)))) g$C$23376$U0r&n (case-lambda ((g$C$23369$U0r&n g$i$15598$U0r&n g$j$15599$U0r&n g$col$15600$U0r&n) ((case-lambda ((g$J$23374$U0r&n) (if g$col$15600$U0r&n (string-length (case-lambda ((g$V$23375$U0r&n) (fx<? g$J$23374$U0r&n g$j$15599$U0r&n g$V$23375$U0r&n))) g$obj$15593$U0r&n) (g$J$23374$U0r&n '#f)))) (case-lambda ((g$T$23370$U0r&n) (if g$T$23370$U0r&n (string-ref (case-lambda ((g$V$23371$U0r&n) ((case-lambda ((g$C$23361$U0r&n g$c$15601$U0r&n) (g$char=?$13549$U0r&n (case-lambda ((g$V$23362$U0r&n) ((case-lambda ((g$C$23360$U0r&n g$t$15602$U0r&n) (if g$t$15602$U0r&n (g$C$23360$U0r&n g$t$15602$U0r&n) (g$char=?$13549$U0r&n g$C$23360$U0r&n g$c$15601$U0r&n '#\")))) (case-lambda ((g$T$23363$U0r&n) (if g$T$23363$U0r&n (substring (case-lambda ((g$V$23364$U0r&n) (g$out$15461$U0r&n (case-lambda ((g$V$23365$U0r&n) (g$out$15461$U0r&n (case-lambda ((g$V$23366$U0r&n) (fx+ (case-lambda ((g$V$23367$U0r&n) (g$loop$15597$U0r&n g$C$23361$U0r&n g$j$15599$U0r&n g$V$23367$U0r&n g$V$23366$U0r&n))) g$j$15599$U0r&n '1))) '"\\" g$V$23365$U0r&n))) g$V$23364$U0r&n g$col$15600$U0r&n))) g$obj$15593$U0r&n g$i$15598$U0r&n g$j$15599$U0r&n) (fx+ (case-lambda ((g$V$23368$U0r&n) (g$loop$15597$U0r&n g$C$23361$U0r&n g$i$15598$U0r&n g$V$23368$U0r&n g$col$15600$U0r&n))) g$j$15599$U0r&n '1)))) g$V$23362$U0r&n))) g$c$15601$U0r&n '#\\))) g$C$23369$U0r&n g$V$23371$U0r&n))) g$obj$15593$U0r&n g$j$15599$U0r&n) (substring (case-lambda ((g$V$23372$U0r&n) (g$out$15461$U0r&n (case-lambda ((g$V$23373$U0r&n) (g$out$15461$U0r&n g$C$23369$U0r&n '"\"" g$V$23373$U0r&n))) g$V$23372$U0r&n g$col$15600$U0r&n))) g$obj$15593$U0r&n g$i$15598$U0r&n g$j$15599$U0r&n)))))))))) (case-lambda ((g$V$23392$U0r&n) (g$V$23392$U0r&n g$C$23377$U0r&n '0 '0 g$V$23391$U0r&n))) uninitialized))) '"\"" g$col$15594$U0r&n)) ((case-lambda ((g$J$23395$U0r&n) (if g$display?$15458$U0r&n (g$J$23395$U0r&n '"~a") (g$J$23395$U0r&n '"~s")))) (case-lambda ((g$V$23393$U0r&n) (g$format$15219$U0r&n (case-lambda ((g$V$23394$U0r&n) (g$out$15461$U0r&n g$C$23377$U0r&n g$V$23394$U0r&n g$col$15594$U0r&n))) g$V$23393$U0r&n g$obj$15593$U0r&n))))))) g$obj$15593$U0r&n)))) g$obj$15593$U0r&n)))) g$obj$15593$U0r&n)))) g$obj$15593$U0r&n)))) g$obj$15593$U0r&n)))) g$obj$15593$U0r&n)))) g$obj$15593$U0r&n))))) g$C$23396$U0r&n uninitialized uninitialized)))) (begin (set! g$pp$15463$U0r&n (case-lambda ((g$C$23555$U0r&n g$obj$15464$U0r&n g$col$15465$U0r&n) ((case-lambda ((g$C$23554$U0r&n g$spaces$15466$U0r&n g$indent$15467$U0r&n g$pr$15468$U0r&n g$pp-expr$15469$U0r&n g$pp-call$15470$U0r&n g$pp-list$15471$U0r&n g$pp-down$15472$U0r&n g$pp-general$15473$U0r&n g$pp-expr-list$15474$U0r&n g$pp-SYNTAX-CASE$15475$U0r&n g$pp-LAMBDA$15476$U0r&n g$pp-IF$15477$U0r&n g$pp-COND$15478$U0r&n g$pp-CASE$15479$U0r&n g$pp-CASE-LAMBDA$15480$U0r&n g$pp-AND$15481$U0r&n g$pp-LET$15482$U0r&n g$pp-BEGIN$15483$U0r&n g$pp-DO$15484$U0r&n g$style$15485$U0r&n) (begin (set! g$spaces$15466$U0r&n (case-lambda ((g$C$23397$U0r&n g$n$15591$U0r&n g$col$15592$U0r&n) (fx>? (case-lambda ((g$T$23398$U0r&n) (if g$T$23398$U0r&n (fx>? (case-lambda ((g$T$23399$U0r&n) (if g$T$23399$U0r&n (g$out$15461$U0r&n (case-lambda ((g$V$23400$U0r&n) (fx- (case-lambda ((g$V$23401$U0r&n) (g$spaces$15466$U0r&n g$C$23397$U0r&n g$V$23401$U0r&n g$V$23400$U0r&n))) g$n$15591$U0r&n '8))) '"        " g$col$15592$U0r&n) (substring (case-lambda ((g$V$23402$U0r&n) (g$out$15461$U0r&n g$C$23397$U0r&n g$V$23402$U0r&n g$col$15592$U0r&n))) '"        " '0 g$n$15591$U0r&n)))) g$n$15591$U0r&n '7) (g$C$23397$U0r&n g$col$15592$U0r&n)))) g$n$15591$U0r&n '0)))) (begin (set! g$indent$15467$U0r&n (case-lambda ((g$C$23403$U0r&n g$to$15589$U0r&n g$col$15590$U0r&n) (if g$col$15590$U0r&n (fx<? (case-lambda ((g$T$23404$U0r&n) (if g$T$23404$U0r&n (g$out$15461$U0r&n (case-lambda ((g$T$23405$U0r&n) (if g$T$23405$U0r&n (g$spaces$15466$U0r&n g$C$23403$U0r&n g$to$15589$U0r&n '0) (g$C$23403$U0r&n '#f)))) g$genwrite:newline-str$15433$U0r&n g$col$15590$U0r&n) (fx- (case-lambda ((g$V$23406$U0r&n) (g$spaces$15466$U0r&n g$C$23403$U0r&n g$V$23406$U0r&n g$col$15590$U0r&n))) g$to$15589$U0r&n g$col$15590$U0r&n)))) g$to$15589$U0r&n g$col$15590$U0r&n) (g$C$23403$U0r&n '#f))))) (begin (set! g$pr$15468$U0r&n (case-lambda ((g$C$23419$U0r&n g$obj$15581$U0r&n g$col$15582$U0r&n g$extra$15583$U0r&n g$pp-pair$15584$U0r&n) (pair? (case-lambda ((g$V$23420$U0r&n) ((case-lambda ((g$C$23407$U0r&n g$t$15585$U0r&n) (if g$t$15585$U0r&n (g$C$23407$U0r&n g$t$15585$U0r&n) (g$vector?$13494$U0r&n g$C$23407$U0r&n g$obj$15581$U0r&n)))) (case-lambda ((g$T$23421$U0r&n) (if g$T$23421$U0r&n (g$pretty-width$15440$U0r&n (case-lambda ((g$V$23422$U0r&n) (fx- (case-lambda ((g$V$23423$U0r&n) (fx- (case-lambda ((g$V$23424$U0r&n) (fx+ (case-lambda ((g$V$23425$U0r&n) (g$min$13539$U0r&n (case-lambda ((g$V$23426$U0r&n) ((case-lambda ((g$C$23412$U0r&n g$result$15586$U0r&n g$left$15587$U0r&n) (g$generic-write$15439$U0r&n (case-lambda (g$IGNORE$23413$U0r&n (fx>? (case-lambda ((g$T$23414$U0r&n) (if g$T$23414$U0r&n (g$reverse-string-append$15444$U0r&n (case-lambda ((g$V$23415$U0r&n) (g$out$15461$U0r&n g$C$23412$U0r&n g$V$23415$U0r&n g$col$15582$U0r&n))) g$result$15586$U0r&n) (pair? (case-lambda ((g$T$23416$U0r&n) (if g$T$23416$U0r&n (g$pp-pair$15584$U0r&n g$C$23412$U0r&n g$obj$15581$U0r&n g$col$15582$U0r&n g$extra$15583$U0r&n) (g$out$15461$U0r&n (case-lambda ((g$V$23417$U0r&n) (vector->list (case-lambda ((g$V$23418$U0r&n) (g$pp-list$15471$U0r&n g$C$23412$U0r&n g$V$23418$U0r&n g$V$23417$U0r&n g$extra$15583$U0r&n g$pp-expr$15469$U0r&n))) g$obj$15581$U0r&n))) '"#" g$col$15582$U0r&n)))) g$obj$15581$U0r&n)))) g$left$15587$U0r&n '0))) g$obj$15581$U0r&n g$display?$15458$U0r&n '#f (case-lambda ((g$C$23408$U0r&n g$str$15588$U0r&n) (cons (case-lambda ((g$V$23409$U0r&n) (begin (set! g$result$15586$U0r&n g$V$23409$U0r&n) (string-length (case-lambda ((g$V$23410$U0r&n) (fx- (case-lambda ((g$V$23411$U0r&n) (begin (set! g$left$15587$U0r&n g$V$23411$U0r&n) (fx>? g$C$23408$U0r&n g$left$15587$U0r&n '0)))) g$left$15587$U0r&n g$V$23410$U0r&n))) g$str$15588$U0r&n)))) g$str$15588$U0r&n g$result$15586$U0r&n)))))) g$C$23419$U0r&n '() g$V$23426$U0r&n))) g$V$23425$U0r&n g$V$23422$U0r&n))) g$V$23424$U0r&n '1))) g$V$23423$U0r&n g$extra$15583$U0r&n))) g$width$15459$U0r&n g$col$15582$U0r&n)))) (g$wr$15462$U0r&n g$C$23419$U0r&n g$obj$15581$U0r&n g$col$15582$U0r&n)))) g$V$23420$U0r&n))) g$obj$15581$U0r&n)))) (begin (set! g$pp-expr$15469$U0r&n (case-lambda ((g$C$23435$U0r&n g$expr$15576$U0r&n g$col$15577$U0r&n g$extra$15578$U0r&n) (g$read-macro?$15438$U0r&n (case-lambda ((g$T$23436$U0r&n) (if g$T$23436$U0r&n (g$read-macro-prefix$15436$U0r&n (case-lambda ((g$V$23437$U0r&n) (g$out$15461$U0r&n (case-lambda ((g$V$23438$U0r&n) (g$read-macro-body$15435$U0r&n (case-lambda ((g$V$23439$U0r&n) (g$pr$15468$U0r&n g$C$23435$U0r&n g$V$23439$U0r&n g$V$23438$U0r&n g$extra$15578$U0r&n g$pp-expr$15469$U0r&n))) g$expr$15576$U0r&n))) g$V$23437$U0r&n g$col$15577$U0r&n))) g$expr$15576$U0r&n) (car (case-lambda ((g$V$23440$U0r&n) ((case-lambda ((g$C$23432$U0r&n g$head$15579$U0r&n) (g$symbol?$13496$U0r&n (case-lambda ((g$T$23433$U0r&n) (if g$T$23433$U0r&n (g$style$15485$U0r&n (case-lambda ((g$V$23434$U0r&n) ((case-lambda ((g$C$23427$U0r&n g$proc$15580$U0r&n) (if g$proc$15580$U0r&n (g$proc$15580$U0r&n g$C$23427$U0r&n g$expr$15576$U0r&n g$col$15577$U0r&n g$extra$15578$U0r&n) (g$max-call-head-width$15442$U0r&n (case-lambda ((g$V$23428$U0r&n) (g$symbol->string$15434$U0r&n (case-lambda ((g$V$23429$U0r&n) (string-length (case-lambda ((g$V$23430$U0r&n) (fx>? (case-lambda ((g$T$23431$U0r&n) (if g$T$23431$U0r&n (g$pp-general$15473$U0r&n g$C$23427$U0r&n g$expr$15576$U0r&n g$col$15577$U0r&n g$extra$15578$U0r&n '#f '#f '#f g$pp-expr$15469$U0r&n) (g$pp-call$15470$U0r&n g$C$23427$U0r&n g$expr$15576$U0r&n g$col$15577$U0r&n g$extra$15578$U0r&n g$pp-expr$15469$U0r&n)))) g$V$23430$U0r&n g$V$23428$U0r&n))) g$V$23429$U0r&n))) g$head$15579$U0r&n))))))) g$C$23432$U0r&n g$V$23434$U0r&n))) g$head$15579$U0r&n) (g$pp-list$15471$U0r&n g$C$23432$U0r&n g$expr$15576$U0r&n g$col$15577$U0r&n g$extra$15578$U0r&n g$pp-expr$15469$U0r&n)))) g$head$15579$U0r&n))) g$C$23435$U0r&n g$V$23440$U0r&n))) g$expr$15576$U0r&n)))) g$expr$15576$U0r&n)))) (begin (set! g$pp-call$15470$U0r&n (case-lambda ((g$C$23444$U0r&n g$expr$15571$U0r&n g$col$15572$U0r&n g$extra$15573$U0r&n g$pp-item$15574$U0r&n) (g$out$15461$U0r&n (case-lambda ((g$V$23445$U0r&n) (car (case-lambda ((g$V$23446$U0r&n) (g$wr$15462$U0r&n (case-lambda ((g$V$23447$U0r&n) ((case-lambda ((g$C$23441$U0r&n g$col*$15575$U0r&n) (if g$col$15572$U0r&n (fx+ (case-lambda ((g$V$23442$U0r&n) (cdr (case-lambda ((g$V$23443$U0r&n) (g$pp-down$15472$U0r&n g$C$23441$U0r&n g$V$23443$U0r&n g$col*$15575$U0r&n g$V$23442$U0r&n g$extra$15573$U0r&n g$pp-item$15574$U0r&n))) g$expr$15571$U0r&n))) g$col*$15575$U0r&n '1) (g$C$23441$U0r&n '#f)))) g$C$23444$U0r&n g$V$23447$U0r&n))) g$V$23446$U0r&n g$V$23445$U0r&n))) g$expr$15571$U0r&n))) '"(" g$col$15572$U0r&n)))) (begin (set! g$pp-list$15471$U0r&n (case-lambda ((g$C$23449$U0r&n g$l$15566$U0r&n g$col$15567$U0r&n g$extra$15568$U0r&n g$pp-item$15569$U0r&n) (g$out$15461$U0r&n (case-lambda ((g$V$23450$U0r&n) ((case-lambda ((g$C$23448$U0r&n g$col$15570$U0r&n) (g$pp-down$15472$U0r&n g$C$23448$U0r&n g$l$15566$U0r&n g$col$15570$U0r&n g$col$15570$U0r&n g$extra$15568$U0r&n g$pp-item$15569$U0r&n))) g$C$23449$U0r&n g$V$23450$U0r&n))) '"(" g$col$15567$U0r&n)))) (begin (set! g$pp-down$15472$U0r&n (case-lambda ((g$C$23471$U0r&n g$l$15556$U0r&n g$col1$15557$U0r&n g$col2$15558$U0r&n g$extra$15559$U0r&n g$pp-item$15560$U0r&n) ((case-lambda ((g$C$23470$U0r&n g$loop$15561$U0r&n) ((case-lambda ((g$C$23452$U0r&n g$loop$23451$U0r&n) (begin (set! g$loop$15561$U0r&n g$loop$23451$U0r&n) (g$C$23452$U0r&n g$loop$15561$U0r&n)))) g$C$23470$U0r&n (case-lambda ((g$C$23461$U0r&n g$l$15562$U0r&n g$col$15563$U0r&n) (if g$col$15563$U0r&n (pair? (case-lambda ((g$T$23462$U0r&n) (if g$T$23462$U0r&n (cdr (case-lambda ((g$V$23463$U0r&n) ((case-lambda ((g$C$23457$U0r&n g$rest$15564$U0r&n) ((case-lambda ((g$J$23459$U0r&n) (null? (case-lambda ((g$T$23460$U0r&n) (if g$T$23460$U0r&n (fx+ g$J$23459$U0r&n g$extra$15559$U0r&n '1) (g$J$23459$U0r&n '0)))) g$rest$15564$U0r&n))) (case-lambda ((g$V$23458$U0r&n) ((case-lambda ((g$C$23453$U0r&n g$extra$15565$U0r&n) (g$indent$15467$U0r&n (case-lambda ((g$V$23454$U0r&n) (car (case-lambda ((g$V$23455$U0r&n) (g$pr$15468$U0r&n (case-lambda ((g$V$23456$U0r&n) (g$loop$15561$U0r&n g$C$23453$U0r&n g$rest$15564$U0r&n g$V$23456$U0r&n))) g$V$23455$U0r&n g$V$23454$U0r&n g$extra$15565$U0r&n g$pp-item$15560$U0r&n))) g$l$15562$U0r&n))) g$col2$15558$U0r&n g$col$15563$U0r&n))) g$C$23457$U0r&n g$V$23458$U0r&n)))))) g$C$23461$U0r&n g$V$23463$U0r&n))) g$l$15562$U0r&n) (null? (case-lambda ((g$T$23464$U0r&n) (if g$T$23464$U0r&n (g$out$15461$U0r&n g$C$23461$U0r&n '")" g$col$15563$U0r&n) (fx+ (case-lambda ((g$V$23465$U0r&n) (g$indent$15467$U0r&n (case-lambda ((g$V$23466$U0r&n) (g$out$15461$U0r&n (case-lambda ((g$V$23467$U0r&n) (g$indent$15467$U0r&n (case-lambda ((g$V$23468$U0r&n) (g$pr$15468$U0r&n (case-lambda ((g$V$23469$U0r&n) (g$out$15461$U0r&n g$C$23461$U0r&n '")" g$V$23469$U0r&n))) g$l$15562$U0r&n g$V$23468$U0r&n g$V$23465$U0r&n g$pp-item$15560$U0r&n))) g$col2$15558$U0r&n g$V$23467$U0r&n))) '"." g$V$23466$U0r&n))) g$col2$15558$U0r&n g$col$15563$U0r&n))) g$extra$15559$U0r&n '1)))) g$l$15562$U0r&n)))) g$l$15562$U0r&n) (g$C$23461$U0r&n '#f))))))) (case-lambda ((g$V$23472$U0r&n) (g$V$23472$U0r&n g$C$23471$U0r&n g$l$15556$U0r&n g$col1$15557$U0r&n))) uninitialized)))) (begin (set! g$pp-general$15473$U0r&n (case-lambda ((g$C$23523$U0r&n g$expr$15523$U0r&n g$col$15524$U0r&n g$extra$15525$U0r&n g$named?$15526$U0r&n g$pp-1$15527$U0r&n g$pp-2$15528$U0r&n g$pp-3$15529$U0r&n) ((case-lambda ((g$C$23521$U0r&n g$tail1$15530$U0r&n g$tail2$15531$U0r&n g$tail3$15532$U0r&n) (begin (set! g$tail1$15530$U0r&n (case-lambda ((g$C$23482$U0r&n g$rest$15549$U0r&n g$col1$15550$U0r&n g$col2$15551$U0r&n g$col3$15552$U0r&n) ((case-lambda ((g$J$23485$U0r&n) (if g$pp-1$15527$U0r&n (pair? g$J$23485$U0r&n g$rest$15549$U0r&n) (g$J$23485$U0r&n '#f)))) (case-lambda ((g$T$23483$U0r&n) (if g$T$23483$U0r&n (car (case-lambda ((g$V$23484$U0r&n) ((case-lambda ((g$C$23480$U0r&n g$val1$15553$U0r&n) (cdr (case-lambda ((g$V$23481$U0r&n) ((case-lambda ((g$C$23476$U0r&n g$rest$15554$U0r&n) ((case-lambda ((g$J$23478$U0r&n) (null? (case-lambda ((g$T$23479$U0r&n) (if g$T$23479$U0r&n (fx+ g$J$23478$U0r&n g$extra$15525$U0r&n '1) (g$J$23478$U0r&n '0)))) g$rest$15554$U0r&n))) (case-lambda ((g$V$23477$U0r&n) ((case-lambda ((g$C$23473$U0r&n g$extra$15555$U0r&n) (g$indent$15467$U0r&n (case-lambda ((g$V$23474$U0r&n) (g$pr$15468$U0r&n (case-lambda ((g$V$23475$U0r&n) (g$tail2$15531$U0r&n g$C$23473$U0r&n g$rest$15554$U0r&n g$col1$15550$U0r&n g$V$23475$U0r&n g$col3$15552$U0r&n))) g$val1$15553$U0r&n g$V$23474$U0r&n g$extra$15555$U0r&n g$pp-1$15527$U0r&n))) g$col3$15552$U0r&n g$col2$15551$U0r&n))) g$C$23476$U0r&n g$V$23477$U0r&n)))))) g$C$23480$U0r&n g$V$23481$U0r&n))) g$rest$15549$U0r&n))) g$C$23482$U0r&n g$V$23484$U0r&n))) g$rest$15549$U0r&n) (g$tail2$15531$U0r&n g$C$23482$U0r&n g$rest$15549$U0r&n g$col1$15550$U0r&n g$col2$15551$U0r&n g$col3$15552$U0r&n)))))))) (begin (set! g$tail2$15531$U0r&n (case-lambda ((g$C$23495$U0r&n g$rest$15542$U0r&n g$col1$15543$U0r&n g$col2$15544$U0r&n g$col3$15545$U0r&n) ((case-lambda ((g$J$23498$U0r&n) (if g$pp-2$15528$U0r&n (pair? g$J$23498$U0r&n g$rest$15542$U0r&n) (g$J$23498$U0r&n '#f)))) (case-lambda ((g$T$23496$U0r&n) (if g$T$23496$U0r&n (car (case-lambda ((g$V$23497$U0r&n) ((case-lambda ((g$C$23493$U0r&n g$val1$15546$U0r&n) (cdr (case-lambda ((g$V$23494$U0r&n) ((case-lambda ((g$C$23489$U0r&n g$rest$15547$U0r&n) ((case-lambda ((g$J$23491$U0r&n) (null? (case-lambda ((g$T$23492$U0r&n) (if g$T$23492$U0r&n (fx+ g$J$23491$U0r&n g$extra$15525$U0r&n '1) (g$J$23491$U0r&n '0)))) g$rest$15547$U0r&n))) (case-lambda ((g$V$23490$U0r&n) ((case-lambda ((g$C$23486$U0r&n g$extra$15548$U0r&n) (g$indent$15467$U0r&n (case-lambda ((g$V$23487$U0r&n) (g$pr$15468$U0r&n (case-lambda ((g$V$23488$U0r&n) (g$tail3$15532$U0r&n g$C$23486$U0r&n g$rest$15547$U0r&n g$col1$15543$U0r&n g$V$23488$U0r&n))) g$val1$15546$U0r&n g$V$23487$U0r&n g$extra$15548$U0r&n g$pp-2$15528$U0r&n))) g$col3$15545$U0r&n g$col2$15544$U0r&n))) g$C$23489$U0r&n g$V$23490$U0r&n)))))) g$C$23493$U0r&n g$V$23494$U0r&n))) g$rest$15542$U0r&n))) g$C$23495$U0r&n g$V$23497$U0r&n))) g$rest$15542$U0r&n) (g$tail3$15532$U0r&n g$C$23495$U0r&n g$rest$15542$U0r&n g$col1$15543$U0r&n g$col2$15544$U0r&n)))))))) (begin (set! g$tail3$15532$U0r&n (case-lambda ((g$C$23499$U0r&n g$rest$15539$U0r&n g$col1$15540$U0r&n g$col2$15541$U0r&n) (g$pp-down$15472$U0r&n g$C$23499$U0r&n g$rest$15539$U0r&n g$col2$15541$U0r&n g$col1$15540$U0r&n g$extra$15525$U0r&n g$pp-3$15529$U0r&n)))) (car (case-lambda ((g$V$23522$U0r&n) ((case-lambda ((g$C$23519$U0r&n g$head$15533$U0r&n) (cdr (case-lambda ((g$V$23520$U0r&n) ((case-lambda ((g$C$23516$U0r&n g$rest$15534$U0r&n) (g$out$15461$U0r&n (case-lambda ((g$V$23517$U0r&n) (g$wr$15462$U0r&n (case-lambda ((g$V$23518$U0r&n) ((case-lambda ((g$C$23509$U0r&n g$col*$15535$U0r&n) ((case-lambda ((g$J$23515$U0r&n) (if g$named?$15526$U0r&n (pair? g$J$23515$U0r&n g$rest$15534$U0r&n) (g$J$23515$U0r&n '#f)))) (case-lambda ((g$T$23510$U0r&n) (if g$T$23510$U0r&n (car (case-lambda ((g$V$23511$U0r&n) ((case-lambda ((g$C$23507$U0r&n g$name$15536$U0r&n) (cdr (case-lambda ((g$V$23508$U0r&n) ((case-lambda ((g$C$23504$U0r&n g$rest$15537$U0r&n) (g$out$15461$U0r&n (case-lambda ((g$V$23505$U0r&n) (g$wr$15462$U0r&n (case-lambda ((g$V$23506$U0r&n) ((case-lambda ((g$C$23500$U0r&n g$col**$15538$U0r&n) (fx+ (case-lambda ((g$V$23501$U0r&n) (g$indent-general$15441$U0r&n (case-lambda ((g$V$23502$U0r&n) (fx+ (case-lambda ((g$V$23503$U0r&n) (g$tail1$15530$U0r&n g$C$23500$U0r&n g$rest$15537$U0r&n g$V$23503$U0r&n g$col**$15538$U0r&n g$V$23501$U0r&n))) g$col$15524$U0r&n g$V$23502$U0r&n)))))) g$col**$15538$U0r&n '1))) g$C$23504$U0r&n g$V$23506$U0r&n))) g$name$15536$U0r&n g$V$23505$U0r&n))) '" " g$col*$15535$U0r&n))) g$C$23507$U0r&n g$V$23508$U0r&n))) g$rest$15534$U0r&n))) g$C$23509$U0r&n g$V$23511$U0r&n))) g$rest$15534$U0r&n) (fx+ (case-lambda ((g$V$23512$U0r&n) (g$indent-general$15441$U0r&n (case-lambda ((g$V$23513$U0r&n) (fx+ (case-lambda ((g$V$23514$U0r&n) (g$tail1$15530$U0r&n g$C$23509$U0r&n g$rest$15534$U0r&n g$V$23514$U0r&n g$col*$15535$U0r&n g$V$23512$U0r&n))) g$col$15524$U0r&n g$V$23513$U0r&n)))))) g$col*$15535$U0r&n '1))))))) g$C$23516$U0r&n g$V$23518$U0r&n))) g$head$15533$U0r&n g$V$23517$U0r&n))) '"(" g$col$15524$U0r&n))) g$C$23519$U0r&n g$V$23520$U0r&n))) g$expr$15523$U0r&n))) g$C$23521$U0r&n g$V$23522$U0r&n))) g$expr$15523$U0r&n)))))) g$C$23523$U0r&n uninitialized uninitialized uninitialized)))) (begin (set! g$pp-expr-list$15474$U0r&n (case-lambda ((g$C$23524$U0r&n g$l$15520$U0r&n g$col$15521$U0r&n g$extra$15522$U0r&n) (g$pp-list$15471$U0r&n g$C$23524$U0r&n g$l$15520$U0r&n g$col$15521$U0r&n g$extra$15522$U0r&n g$pp-expr$15469$U0r&n)))) (begin (set! g$pp-SYNTAX-CASE$15475$U0r&n (case-lambda ((g$C$23525$U0r&n g$expr$15517$U0r&n g$col$15518$U0r&n g$extra$15519$U0r&n) (g$pp-general$15473$U0r&n g$C$23525$U0r&n g$expr$15517$U0r&n g$col$15518$U0r&n g$extra$15519$U0r&n '#t g$pp-expr-list$15474$U0r&n '#f g$pp-expr$15469$U0r&n)))) (begin (set! g$pp-LAMBDA$15476$U0r&n (case-lambda ((g$C$23526$U0r&n g$expr$15514$U0r&n g$col$15515$U0r&n g$extra$15516$U0r&n) (g$pp-general$15473$U0r&n g$C$23526$U0r&n g$expr$15514$U0r&n g$col$15515$U0r&n g$extra$15516$U0r&n '#f g$pp-expr-list$15474$U0r&n '#f g$pp-expr$15469$U0r&n)))) (begin (set! g$pp-IF$15477$U0r&n (case-lambda ((g$C$23527$U0r&n g$expr$15511$U0r&n g$col$15512$U0r&n g$extra$15513$U0r&n) (g$pp-general$15473$U0r&n g$C$23527$U0r&n g$expr$15511$U0r&n g$col$15512$U0r&n g$extra$15513$U0r&n '#f g$pp-expr$15469$U0r&n '#f g$pp-expr$15469$U0r&n)))) (begin (set! g$pp-COND$15478$U0r&n (case-lambda ((g$C$23528$U0r&n g$expr$15508$U0r&n g$col$15509$U0r&n g$extra$15510$U0r&n) (g$pp-call$15470$U0r&n g$C$23528$U0r&n g$expr$15508$U0r&n g$col$15509$U0r&n g$extra$15510$U0r&n g$pp-expr-list$15474$U0r&n)))) (begin (set! g$pp-CASE$15479$U0r&n (case-lambda ((g$C$23529$U0r&n g$expr$15505$U0r&n g$col$15506$U0r&n g$extra$15507$U0r&n) (g$pp-general$15473$U0r&n g$C$23529$U0r&n g$expr$15505$U0r&n g$col$15506$U0r&n g$extra$15507$U0r&n '#f g$pp-expr$15469$U0r&n '#f g$pp-expr-list$15474$U0r&n)))) (begin (set! g$pp-CASE-LAMBDA$15480$U0r&n (case-lambda ((g$C$23530$U0r&n g$expr$15502$U0r&n g$col$15503$U0r&n g$extra$15504$U0r&n) (g$pp-general$15473$U0r&n g$C$23530$U0r&n g$expr$15502$U0r&n g$col$15503$U0r&n g$extra$15504$U0r&n '#f '#f '#f g$pp-expr-list$15474$U0r&n)))) (begin (set! g$pp-AND$15481$U0r&n (case-lambda ((g$C$23531$U0r&n g$expr$15499$U0r&n g$col$15500$U0r&n g$extra$15501$U0r&n) (g$pp-call$15470$U0r&n g$C$23531$U0r&n g$expr$15499$U0r&n g$col$15500$U0r&n g$extra$15501$U0r&n g$pp-expr$15469$U0r&n)))) (begin (set! g$pp-LET$15482$U0r&n (case-lambda ((g$C$23538$U0r&n g$expr$15494$U0r&n g$col$15495$U0r&n g$extra$15496$U0r&n) (cdr (case-lambda ((g$V$23539$U0r&n) ((case-lambda ((g$C$23533$U0r&n g$rest$15497$U0r&n) ((case-lambda ((g$J$23535$U0r&n) (pair? (case-lambda ((g$T$23536$U0r&n) (if g$T$23536$U0r&n (car (case-lambda ((g$V$23537$U0r&n) (g$symbol?$13496$U0r&n g$J$23535$U0r&n g$V$23537$U0r&n))) g$rest$15497$U0r&n) (g$J$23535$U0r&n '#f)))) g$rest$15497$U0r&n))) (case-lambda ((g$V$23534$U0r&n) ((case-lambda ((g$C$23532$U0r&n g$named?$15498$U0r&n) (g$pp-general$15473$U0r&n g$C$23532$U0r&n g$expr$15494$U0r&n g$col$15495$U0r&n g$extra$15496$U0r&n g$named?$15498$U0r&n g$pp-expr-list$15474$U0r&n '#f g$pp-expr$15469$U0r&n))) g$C$23533$U0r&n g$V$23534$U0r&n)))))) g$C$23538$U0r&n g$V$23539$U0r&n))) g$expr$15494$U0r&n)))) (begin (set! g$pp-BEGIN$15483$U0r&n (case-lambda ((g$C$23540$U0r&n g$expr$15491$U0r&n g$col$15492$U0r&n g$extra$15493$U0r&n) (g$pp-general$15473$U0r&n g$C$23540$U0r&n g$expr$15491$U0r&n g$col$15492$U0r&n g$extra$15493$U0r&n '#f '#f '#f g$pp-expr$15469$U0r&n)))) (begin (set! g$pp-DO$15484$U0r&n (case-lambda ((g$C$23541$U0r&n g$expr$15488$U0r&n g$col$15489$U0r&n g$extra$15490$U0r&n) (g$pp-general$15473$U0r&n g$C$23541$U0r&n g$expr$15488$U0r&n g$col$15489$U0r&n g$extra$15490$U0r&n '#f g$pp-expr-list$15474$U0r&n g$pp-expr-list$15474$U0r&n g$pp-expr$15469$U0r&n)))) (begin (set! g$style$15485$U0r&n (case-lambda ((g$C$23553$U0r&n g$head$15486$U0r&n) ((case-lambda ((g$C$23542$U0r&n g$t$15487$U0r&n) (g$memv$12746$U0r&n (case-lambda ((g$T$23543$U0r&n) (if g$T$23543$U0r&n (g$C$23542$U0r&n g$pp-LAMBDA$15476$U0r&n) (eqv? (case-lambda ((g$T$23544$U0r&n) (if g$T$23544$U0r&n (g$C$23542$U0r&n g$pp-SYNTAX-CASE$15475$U0r&n) (g$memv$12746$U0r&n (case-lambda ((g$T$23545$U0r&n) (if g$T$23545$U0r&n (g$C$23542$U0r&n g$pp-IF$15477$U0r&n) (eqv? (case-lambda ((g$T$23546$U0r&n) (if g$T$23546$U0r&n (g$C$23542$U0r&n g$pp-COND$15478$U0r&n) (eqv? (case-lambda ((g$T$23547$U0r&n) (if g$T$23547$U0r&n (g$C$23542$U0r&n g$pp-CASE-LAMBDA$15480$U0r&n) (eqv? (case-lambda ((g$T$23548$U0r&n) (if g$T$23548$U0r&n (g$C$23542$U0r&n g$pp-CASE$15479$U0r&n) (g$memv$12746$U0r&n (case-lambda ((g$T$23549$U0r&n) (if g$T$23549$U0r&n (g$C$23542$U0r&n g$pp-AND$15481$U0r&n) (eqv? (case-lambda ((g$T$23550$U0r&n) (if g$T$23550$U0r&n (g$C$23542$U0r&n g$pp-LET$15482$U0r&n) (eqv? (case-lambda ((g$T$23551$U0r&n) (if g$T$23551$U0r&n (g$C$23542$U0r&n g$pp-BEGIN$15483$U0r&n) (eqv? (case-lambda ((g$T$23552$U0r&n) (if g$T$23552$U0r&n (g$C$23542$U0r&n g$pp-DO$15484$U0r&n) (g$C$23542$U0r&n '#f)))) g$t$15487$U0r&n 'do)))) g$t$15487$U0r&n 'begin)))) g$t$15487$U0r&n 'let)))) g$t$15487$U0r&n '(and or import export))))) g$t$15487$U0r&n 'case)))) g$t$15487$U0r&n 'case-lambda)))) g$t$15487$U0r&n 'cond)))) g$t$15487$U0r&n '(if set! when unless))))) g$t$15487$U0r&n 'syntax-case)))) g$t$15487$U0r&n '(lambda let* letrec letrec* define define-syntax syntax-rules let-syntax letrec-syntax with-syntax library library-letrec*)))) g$C$23553$U0r&n g$head$15486$U0r&n)))) (g$pr$15468$U0r&n g$C$23554$U0r&n g$obj$15464$U0r&n g$col$15465$U0r&n '0 g$pp-expr$15469$U0r&n))))))))))))))))))))))) g$C$23555$U0r&n uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized)))) (if g$width$15459$U0r&n (g$pp$15463$U0r&n (case-lambda ((g$V$23557$U0r&n) (g$out$15461$U0r&n g$C$23556$U0r&n g$genwrite:newline-str$15433$U0r&n g$V$23557$U0r&n))) g$obj$15457$U0r&n '0) (g$wr$15462$U0r&n g$C$23556$U0r&n g$obj$15457$U0r&n '0))))))) g$C$23558$U0r&n uninitialized uninitialized uninitialized)))))) (library-letrec*-identity 'g$generic-write$15439$U0r&n))) (g$pretty-width$15440$U0r&n g$pretty-width$15633$U0r&n ((case-lambda ((g$C$23599$U0r&n) (g$make-parameter$15428$U0r&n g$C$23599$U0r&n '72))) (library-letrec*-identity 'g$pretty-width$15440$U0r&n))) (g$indent-general$15441$U0r&n g$indent-general$15634$U0r&n ((case-lambda ((g$C$23600$U0r&n) (g$make-parameter$15428$U0r&n g$C$23600$U0r&n '2))) (library-letrec*-identity 'g$indent-general$15441$U0r&n))) (g$max-call-head-width$15442$U0r&n g$max-call-head-width$15635$U0r&n ((case-lambda ((g$C$23601$U0r&n) (g$make-parameter$15428$U0r&n g$C$23601$U0r&n '3))) (library-letrec*-identity 'g$max-call-head-width$15442$U0r&n))) (g$pretty-gensyms$15443$U0r&n g$pretty-gensyms$15636$U0r&n ((case-lambda ((g$C$23602$U0r&n) (g$make-parameter$15428$U0r&n g$C$23602$U0r&n '#f))) (library-letrec*-identity 'g$pretty-gensyms$15443$U0r&n))) (g$reverse-string-append$15444$U0r&n g$reverse-string-append$15637$U0r&n ((case-lambda ((g$C$23603$U0r&n) (g$C$23603$U0r&n (case-lambda ((g$C$23583$U0r&n g$l$15612$U0r&n) ((case-lambda ((g$C$23582$U0r&n g$rev-string-append$15613$U0r&n) (begin (set! g$rev-string-append$15613$U0r&n (case-lambda ((g$C$23579$U0r&n g$l$15614$U0r&n g$i$15615$U0r&n) (pair? (case-lambda ((g$T$23580$U0r&n) (if g$T$23580$U0r&n (car (case-lambda ((g$V$23581$U0r&n) ((case-lambda ((g$C$23577$U0r&n g$str$15616$U0r&n) (string-length (case-lambda ((g$V$23578$U0r&n) ((case-lambda ((g$C$23573$U0r&n g$len$15617$U0r&n) (fx+ (case-lambda ((g$V$23574$U0r&n) (cdr (case-lambda ((g$V$23575$U0r&n) (g$rev-string-append$15613$U0r&n (case-lambda ((g$V$23576$U0r&n) ((case-lambda ((g$C$23568$U0r&n g$result$15618$U0r&n) (string-length (case-lambda ((g$V$23569$U0r&n) (fx- (case-lambda ((g$V$23570$U0r&n) (fx- (case-lambda ((g$V$23571$U0r&n) ((case-lambda ((g$C$23567$U0r&n g$loop$15619$U0r&n) ((case-lambda ((g$C$23560$U0r&n g$loop$23559$U0r&n) (begin (set! g$loop$15619$U0r&n g$loop$23559$U0r&n) (g$C$23560$U0r&n g$loop$15619$U0r&n)))) g$C$23567$U0r&n (case-lambda ((g$C$23561$U0r&n g$j$15620$U0r&n g$k$15621$U0r&n) (fx<? (case-lambda ((g$T$23562$U0r&n) (if g$T$23562$U0r&n (string-ref (case-lambda ((g$V$23563$U0r&n) (string-set! (case-lambda (g$IGNORE$23564$U0r&n (fx+ (case-lambda ((g$V$23565$U0r&n) (fx+ (case-lambda ((g$V$23566$U0r&n) (g$loop$15619$U0r&n g$C$23561$U0r&n g$V$23566$U0r&n g$V$23565$U0r&n))) g$j$15620$U0r&n '1))) g$k$15621$U0r&n '1))) g$result$15618$U0r&n g$k$15621$U0r&n g$V$23563$U0r&n))) g$str$15616$U0r&n g$j$15620$U0r&n) (g$C$23561$U0r&n g$result$15618$U0r&n)))) g$j$15620$U0r&n g$len$15617$U0r&n)))))) (case-lambda ((g$V$23572$U0r&n) (g$V$23572$U0r&n g$C$23568$U0r&n '0 g$V$23571$U0r&n))) uninitialized))) g$V$23570$U0r&n g$len$15617$U0r&n))) g$V$23569$U0r&n g$i$15615$U0r&n))) g$result$15618$U0r&n))) g$C$23573$U0r&n g$V$23576$U0r&n))) g$V$23575$U0r&n g$V$23574$U0r&n))) g$l$15614$U0r&n))) g$i$15615$U0r&n g$len$15617$U0r&n))) g$C$23577$U0r&n g$V$23578$U0r&n))) g$str$15616$U0r&n))) g$C$23579$U0r&n g$V$23581$U0r&n))) g$l$15614$U0r&n) (make-string g$C$23579$U0r&n g$i$15615$U0r&n)))) g$l$15614$U0r&n)))) (g$rev-string-append$15613$U0r&n g$C$23582$U0r&n g$l$15612$U0r&n '0)))) g$C$23583$U0r&n uninitialized)))))) (library-letrec*-identity 'g$reverse-string-append$15444$U0r&n))) (g$pretty-print$15445$U0r&n g$pretty-print$15638$U0r&n ((case-lambda ((g$C$23604$U0r&n) (g$C$23604$U0r&n (case-lambda ((g$C$23588$U0r&n g$obj$15622$U0r&n . g$opt$15623$U0r&n) ((case-lambda ((g$J$23590$U0r&n) (pair? (case-lambda ((g$T$23591$U0r&n) (if g$T$23591$U0r&n (car g$J$23590$U0r&n g$opt$15623$U0r&n) (current-output-port g$J$23590$U0r&n)))) g$opt$15623$U0r&n))) (case-lambda ((g$V$23589$U0r&n) ((case-lambda ((g$C$23586$U0r&n g$port$15624$U0r&n) (g$pretty-width$15440$U0r&n (case-lambda ((g$V$23587$U0r&n) (g$generic-write$15439$U0r&n g$C$23586$U0r&n g$obj$15622$U0r&n '#f g$V$23587$U0r&n (case-lambda ((g$C$23584$U0r&n g$s$15625$U0r&n) (display (case-lambda (g$IGNORE$23585$U0r&n (g$C$23584$U0r&n '#t))) g$s$15625$U0r&n g$port$15624$U0r&n))))))))) g$C$23588$U0r&n g$V$23589$U0r&n))))))))) (library-letrec*-identity 'g$pretty-print$15445$U0r&n)))) (void identity-for-cps))(library-letrec* (ironscheme cps) ((g$cps/generate-reference$15639$U0r&n g$cps/generate-reference$15904$U0r&n ((case-lambda ((g$C$23923$U0r&n) (g$C$23923$U0r&n (case-lambda ((g$C$23605$U0r&n g$variable$15692$U0r&n) (g$make-reference$15669$U0r&n (case-lambda ((g$V$23606$U0r&n) (g$cps/generate-operand$15643$U0r&n g$C$23605$U0r&n g$V$23606$U0r&n))) g$variable$15692$U0r&n)))))) (library-letrec*-identity 'g$cps/generate-reference$15639$U0r&n))) (g$cps/generate-literal$15640$U0r&n g$cps/generate-literal$15905$U0r&n ((case-lambda ((g$C$23924$U0r&n) (g$C$23924$U0r&n (case-lambda ((g$C$23607$U0r&n g$datum$15693$U0r&n) (g$make-literal$15668$U0r&n (case-lambda ((g$V$23608$U0r&n) (g$cps/generate-operand$15643$U0r&n g$C$23607$U0r&n g$V$23608$U0r&n))) g$datum$15693$U0r&n)))))) (library-letrec*-identity 'g$cps/generate-literal$15640$U0r&n))) (g$cps/generate-abstraction$15641$U0r&n g$cps/generate-abstraction$15906$U0r&n ((case-lambda ((g$C$23925$U0r&n) (g$C$23925$U0r&n (case-lambda ((g$C$23611$U0r&n g$bvl$15694$U0r&n g$body-generator$15695$U0r&n) (g$make-user-abstraction$15670$U0r&n (case-lambda ((g$V$23612$U0r&n) (g$cps/generate-operand$15643$U0r&n g$C$23611$U0r&n g$V$23612$U0r&n))) g$bvl$15694$U0r&n (case-lambda ((g$C$23609$U0r&n g$continuation-variable$15696$U0r&n) (g$variable-continuator$15656$U0r&n (case-lambda ((g$V$23610$U0r&n) (g$body-generator$15695$U0r&n g$C$23609$U0r&n g$V$23610$U0r&n))) g$continuation-variable$15696$U0r&n))))))))) (library-letrec*-identity 'g$cps/generate-abstraction$15641$U0r&n))) (g$cps/generate-abstractions$15642$U0r&n g$cps/generate-abstractions$15907$U0r&n ((case-lambda ((g$C$23926$U0r&n) (g$C$23926$U0r&n (case-lambda ((g$C$23616$U0r&n g$bvls$15697$U0r&n g$body-generators$15698$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23617$U0r&n) (g$make-user-abstractions$15671$U0r&n (case-lambda ((g$V$23618$U0r&n) (g$cps/generate-operand$15643$U0r&n g$C$23616$U0r&n g$V$23618$U0r&n))) g$bvls$15697$U0r&n g$V$23617$U0r&n))) (case-lambda ((g$C$23615$U0r&n g$body-generator$15699$U0r&n) (g$C$23615$U0r&n (case-lambda ((g$C$23613$U0r&n g$continuation-variable$15700$U0r&n) (g$variable-continuator$15656$U0r&n (case-lambda ((g$V$23614$U0r&n) (g$body-generator$15699$U0r&n g$C$23613$U0r&n g$V$23614$U0r&n))) g$continuation-variable$15700$U0r&n)))))) g$body-generators$15698$U0r&n)))))) (library-letrec*-identity 'g$cps/generate-abstractions$15642$U0r&n))) (g$cps/generate-operand$15643$U0r&n g$cps/generate-operand$15908$U0r&n ((case-lambda ((g$C$23927$U0r&n) (g$C$23927$U0r&n (case-lambda ((g$C$23620$U0r&n g$operand$15701$U0r&n) (g$C$23620$U0r&n (case-lambda ((g$C$23619$U0r&n g$continuator$15702$U0r&n) (g$continue-with-operand$15659$U0r&n g$C$23619$U0r&n g$continuator$15702$U0r&n g$operand$15701$U0r&n))))))))) (library-letrec*-identity 'g$cps/generate-operand$15643$U0r&n))) (g$cps/generate-conditional$15644$U0r&n g$cps/generate-conditional$15909$U0r&n ((case-lambda ((g$C$23928$U0r&n) (g$C$23928$U0r&n (case-lambda ((g$C$23631$U0r&n g$condition-generator$15703$U0r&n g$consequent-generator$15704$U0r&n g$alternative-generator$15705$U0r&n) (g$C$23631$U0r&n (case-lambda ((g$C$23630$U0r&n g$continuator$15706$U0r&n) ((case-lambda ((g$C$23629$U0r&n g$if-variable$15707$U0r&n) (begin (set! g$if-variable$15707$U0r&n (case-lambda ((g$C$23626$U0r&n g$continuation-variable$15709$U0r&n) (g$variable-continuator$15656$U0r&n (case-lambda ((g$V$23627$U0r&n) ((case-lambda ((g$C$23624$U0r&n g$continuator*$15710$U0r&n) (g$conditional-continuator$15655$U0r&n (case-lambda ((g$V$23625$U0r&n) (g$condition-generator$15703$U0r&n g$C$23624$U0r&n g$V$23625$U0r&n))) (case-lambda ((g$C$23621$U0r&n g$condition$15711$U0r&n) (g$alternative-generator$15705$U0r&n (case-lambda ((g$V$23622$U0r&n) (g$consequent-generator$15704$U0r&n (case-lambda ((g$V$23623$U0r&n) (g$make-conditional$15678$U0r&n g$C$23621$U0r&n g$condition$15711$U0r&n g$V$23623$U0r&n g$V$23622$U0r&n))) g$continuator*$15710$U0r&n))) g$continuator*$15710$U0r&n)))))) g$C$23626$U0r&n g$V$23627$U0r&n))) g$continuation-variable$15709$U0r&n)))) (g$reify-continuation*$15661$U0r&n g$C$23629$U0r&n g$continuator$15706$U0r&n g$if-variable$15707$U0r&n (case-lambda ((g$C$23628$U0r&n g$continuation-abstraction$15708$U0r&n) (g$make-conditional-join$15679$U0r&n g$C$23628$U0r&n g$continuation-abstraction$15708$U0r&n g$if-variable$15707$U0r&n))))))) g$C$23630$U0r&n uninitialized))))))))) (library-letrec*-identity 'g$cps/generate-conditional$15644$U0r&n))) (g$cps/generate-recursive-bind$15645$U0r&n g$cps/generate-recursive-bind$15910$U0r&n ((case-lambda ((g$C$23929$U0r&n) (g$C$23929$U0r&n (case-lambda ((g$C$23639$U0r&n g$variables$15712$U0r&n g$generators$15713$U0r&n g$body-generator$15714$U0r&n) (g$C$23639$U0r&n (case-lambda ((g$C$23635$U0r&n g$continuator$15715$U0r&n) (g$reified-continuator$15658$U0r&n (case-lambda ((g$V$23636$U0r&n) (g$body-generator$15714$U0r&n (case-lambda ((g$V$23637$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23638$U0r&n) (g$make-recursive-bind$15673$U0r&n g$C$23635$U0r&n g$variables$15712$U0r&n g$V$23638$U0r&n g$V$23637$U0r&n))) (case-lambda ((g$C$23634$U0r&n g$generator$15716$U0r&n) (g$C$23634$U0r&n (case-lambda ((g$C$23632$U0r&n g$continuation-variable$15717$U0r&n) (g$variable-continuator$15656$U0r&n (case-lambda ((g$V$23633$U0r&n) (g$generator$15716$U0r&n g$C$23632$U0r&n g$V$23633$U0r&n))) g$continuation-variable$15717$U0r&n)))))) g$generators$15713$U0r&n))) g$V$23636$U0r&n))) g$continuator$15715$U0r&n))))))))) (library-letrec*-identity 'g$cps/generate-recursive-bind$15645$U0r&n))) (g$cps/generate-recursive*-bind$15646$U0r&n g$cps/generate-recursive*-bind$15911$U0r&n ((case-lambda ((g$C$23930$U0r&n) (g$C$23930$U0r&n (case-lambda ((g$C$23647$U0r&n g$variables$15718$U0r&n g$generators$15719$U0r&n g$body-generator$15720$U0r&n) (g$C$23647$U0r&n (case-lambda ((g$C$23643$U0r&n g$continuator$15721$U0r&n) (g$reified-continuator$15658$U0r&n (case-lambda ((g$V$23644$U0r&n) (g$body-generator$15720$U0r&n (case-lambda ((g$V$23645$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23646$U0r&n) (g$make-recursive*-bind$15674$U0r&n g$C$23643$U0r&n g$variables$15718$U0r&n g$V$23646$U0r&n g$V$23645$U0r&n))) (case-lambda ((g$C$23642$U0r&n g$generator$15722$U0r&n) (g$C$23642$U0r&n (case-lambda ((g$C$23640$U0r&n g$continuation-variable$15723$U0r&n) (g$variable-continuator$15656$U0r&n (case-lambda ((g$V$23641$U0r&n) (g$generator$15722$U0r&n g$C$23640$U0r&n g$V$23641$U0r&n))) g$continuation-variable$15723$U0r&n)))))) g$generators$15719$U0r&n))) g$V$23644$U0r&n))) g$continuator$15721$U0r&n))))))))) (library-letrec*-identity 'g$cps/generate-recursive*-bind$15646$U0r&n))) (g$cps/generate-recursive*-library-bind$15647$U0r&n g$cps/generate-recursive*-library-bind$15912$U0r&n ((case-lambda ((g$C$23931$U0r&n) (g$C$23931$U0r&n (case-lambda ((g$C$23655$U0r&n g$name$15724$U0r&n g$variables$15725$U0r&n g$variables*$15726$U0r&n g$generators$15727$U0r&n g$body-generator$15728$U0r&n) (g$C$23655$U0r&n (case-lambda ((g$C$23651$U0r&n g$continuator$15729$U0r&n) (g$reified-continuator$15658$U0r&n (case-lambda ((g$V$23652$U0r&n) (g$body-generator$15728$U0r&n (case-lambda ((g$V$23653$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23654$U0r&n) (g$make-recursive*-library-bind$15675$U0r&n g$C$23651$U0r&n g$name$15724$U0r&n g$variables$15725$U0r&n g$variables*$15726$U0r&n g$V$23654$U0r&n g$V$23653$U0r&n))) (case-lambda ((g$C$23650$U0r&n g$generator$15730$U0r&n) (g$C$23650$U0r&n (case-lambda ((g$C$23648$U0r&n g$continuation-variable$15731$U0r&n) (g$variable-continuator$15656$U0r&n (case-lambda ((g$V$23649$U0r&n) (g$generator$15730$U0r&n g$C$23648$U0r&n g$V$23649$U0r&n))) g$continuation-variable$15731$U0r&n)))))) g$generators$15727$U0r&n))) g$V$23652$U0r&n))) g$continuator$15729$U0r&n))))))))) (library-letrec*-identity 'g$cps/generate-recursive*-library-bind$15647$U0r&n))) (g$cps/generate-sequence$15648$U0r&n g$cps/generate-sequence$15913$U0r&n ((case-lambda ((g$C$23932$U0r&n) (g$C$23932$U0r&n (case-lambda ((g$C$23668$U0r&n g$generators$15732$U0r&n) (g$C$23668$U0r&n (case-lambda ((g$C$23666$U0r&n g$continuator$15733$U0r&n) ((case-lambda ((g$C$23665$U0r&n g$recur$15734$U0r&n) ((case-lambda ((g$C$23657$U0r&n g$recur$23656$U0r&n) (begin (set! g$recur$15734$U0r&n g$recur$23656$U0r&n) (g$C$23657$U0r&n g$recur$15734$U0r&n)))) g$C$23665$U0r&n (case-lambda ((g$C$23661$U0r&n g$generators$15735$U0r&n) (cdr (case-lambda ((g$V$23662$U0r&n) ((case-lambda ((g$C$23659$U0r&n g$generators$15736$U0r&n) (pair? (case-lambda ((g$T$23660$U0r&n) (if g$T$23660$U0r&n (g$effect-continuator$15654$U0r&n g$C$23659$U0r&n (case-lambda ((g$C$23658$U0r&n) (g$recur$15734$U0r&n g$C$23658$U0r&n g$generators$15736$U0r&n)))) (g$C$23659$U0r&n g$continuator$15733$U0r&n)))) g$generators$15736$U0r&n))) (case-lambda ((g$V$23663$U0r&n) (car (case-lambda ((g$V$23664$U0r&n) (g$V$23664$U0r&n g$C$23661$U0r&n g$V$23663$U0r&n))) g$generators$15735$U0r&n))) g$V$23662$U0r&n))) g$generators$15735$U0r&n)))))) (case-lambda ((g$V$23667$U0r&n) (g$V$23667$U0r&n g$C$23666$U0r&n g$generators$15732$U0r&n))) uninitialized))))))))) (library-letrec*-identity 'g$cps/generate-sequence$15648$U0r&n))) (g$cps/generate-assignment$15649$U0r&n g$cps/generate-assignment$15914$U0r&n ((case-lambda ((g$C$23933$U0r&n) (g$C$23933$U0r&n (case-lambda ((g$C$23673$U0r&n g$location$15737$U0r&n g$expression-generator$15738$U0r&n) (g$C$23673$U0r&n (case-lambda ((g$C$23671$U0r&n g$continuator$15739$U0r&n) (g$operand-continuator$15653$U0r&n (case-lambda ((g$V$23672$U0r&n) (g$expression-generator$15738$U0r&n g$C$23671$U0r&n g$V$23672$U0r&n))) (case-lambda ((g$C$23669$U0r&n g$operand$15740$U0r&n) (g$continue-with-operand$15659$U0r&n (case-lambda ((g$V$23670$U0r&n) (g$make-assignment$15681$U0r&n g$C$23669$U0r&n g$location$15737$U0r&n g$operand$15740$U0r&n g$V$23670$U0r&n))) g$continuator$15739$U0r&n '(cps-void))))))))))))) (library-letrec*-identity 'g$cps/generate-assignment$15649$U0r&n))) (g$cps/generate-declaration$15650$U0r&n g$cps/generate-declaration$15915$U0r&n ((case-lambda ((g$C$23934$U0r&n) (g$C$23934$U0r&n (case-lambda ((g$C$23678$U0r&n g$location$15741$U0r&n g$expression-generator$15742$U0r&n) (g$C$23678$U0r&n (case-lambda ((g$C$23676$U0r&n g$continuator$15743$U0r&n) (g$operand-continuator$15653$U0r&n (case-lambda ((g$V$23677$U0r&n) (g$expression-generator$15742$U0r&n g$C$23676$U0r&n g$V$23677$U0r&n))) (case-lambda ((g$C$23674$U0r&n g$operand$15744$U0r&n) (g$continue-with-operand$15659$U0r&n (case-lambda ((g$V$23675$U0r&n) (g$make-declaration$15682$U0r&n g$C$23674$U0r&n g$location$15741$U0r&n g$operand$15744$U0r&n g$V$23675$U0r&n))) g$continuator$15743$U0r&n '(cps-void))))))))))))) (library-letrec*-identity 'g$cps/generate-declaration$15650$U0r&n))) (g$cps/generate-combination$15651$U0r&n g$cps/generate-combination$15916$U0r&n ((case-lambda ((g$C$23935$U0r&n) (g$C$23935$U0r&n (case-lambda ((g$C$23683$U0r&n g$operator-generator$15745$U0r&n g$operand-generators$15746$U0r&n) (cons (case-lambda ((g$V$23684$U0r&n) (g$reverse$13504$U0r&n (case-lambda ((g$V$23685$U0r&n) (g$cps/generate-subproblems$15652$U0r&n g$C$23683$U0r&n g$V$23685$U0r&n (case-lambda ((g$C$23679$U0r&n g$operands$15747$U0r&n g$continuator$15748$U0r&n) (cdr (case-lambda ((g$V$23680$U0r&n) (g$reify-continuation$15660$U0r&n (case-lambda ((g$V$23681$U0r&n) (car (case-lambda ((g$V$23682$U0r&n) (g$make-combination$15676$U0r&n g$C$23679$U0r&n g$V$23682$U0r&n g$V$23681$U0r&n g$V$23680$U0r&n))) g$operands$15747$U0r&n))) g$continuator$15748$U0r&n))) g$operands$15747$U0r&n)))))) g$V$23684$U0r&n))) g$operator-generator$15745$U0r&n g$operand-generators$15746$U0r&n)))))) (library-letrec*-identity 'g$cps/generate-combination$15651$U0r&n))) (g$cps/generate-subproblems$15652$U0r&n g$cps/generate-subproblems$15917$U0r&n ((case-lambda ((g$C$23936$U0r&n) (g$C$23936$U0r&n (case-lambda ((g$C$23699$U0r&n g$generators$15749$U0r&n g$combiner$15750$U0r&n) (g$C$23699$U0r&n (case-lambda ((g$C$23697$U0r&n g$continuator$15751$U0r&n) ((case-lambda ((g$C$23696$U0r&n g$recur$15752$U0r&n) ((case-lambda ((g$C$23687$U0r&n g$recur$23686$U0r&n) (begin (set! g$recur$15752$U0r&n g$recur$23686$U0r&n) (g$C$23687$U0r&n g$recur$15752$U0r&n)))) g$C$23696$U0r&n (case-lambda ((g$C$23691$U0r&n g$generators$15753$U0r&n g$operands$15754$U0r&n) (pair? (case-lambda ((g$T$23692$U0r&n) (if g$T$23692$U0r&n (cdr (case-lambda ((g$V$23693$U0r&n) ((case-lambda ((g$C$23690$U0r&n g$generators$15755$U0r&n) (g$operand-continuator$15653$U0r&n g$C$23690$U0r&n (case-lambda ((g$C$23688$U0r&n g$operand$15756$U0r&n) (cons (case-lambda ((g$V$23689$U0r&n) (g$recur$15752$U0r&n g$C$23688$U0r&n g$generators$15755$U0r&n g$V$23689$U0r&n))) g$operand$15756$U0r&n g$operands$15754$U0r&n)))))) (case-lambda ((g$V$23694$U0r&n) (car (case-lambda ((g$V$23695$U0r&n) (g$V$23695$U0r&n g$C$23691$U0r&n g$V$23694$U0r&n))) g$generators$15753$U0r&n))) g$V$23693$U0r&n))) g$generators$15753$U0r&n) (g$combiner$15750$U0r&n g$C$23691$U0r&n g$operands$15754$U0r&n g$continuator$15751$U0r&n)))) g$generators$15753$U0r&n)))))) (case-lambda ((g$V$23698$U0r&n) (g$V$23698$U0r&n g$C$23697$U0r&n g$generators$15749$U0r&n '()))) uninitialized))))))))) (library-letrec*-identity 'g$cps/generate-subproblems$15652$U0r&n))) (g$operand-continuator$15653$U0r&n g$operand-continuator$15918$U0r&n ((case-lambda ((g$C$23937$U0r&n) (g$C$23937$U0r&n (case-lambda ((g$C$23701$U0r&n g$generator$15757$U0r&n) (g$C$23701$U0r&n (case-lambda ((g$C$23700$U0r&n g$if-operand$15758$U0r&n g$if-effect$15759$U0r&n g$if-conditional$15760$U0r&n g$if-variable$15761$U0r&n g$if-inline$15762$U0r&n) (g$if-operand$15758$U0r&n g$C$23700$U0r&n g$generator$15757$U0r&n))))))))) (library-letrec*-identity 'g$operand-continuator$15653$U0r&n))) (g$effect-continuator$15654$U0r&n g$effect-continuator$15919$U0r&n ((case-lambda ((g$C$23938$U0r&n) (g$C$23938$U0r&n (case-lambda ((g$C$23703$U0r&n g$generator$15763$U0r&n) (g$C$23703$U0r&n (case-lambda ((g$C$23702$U0r&n g$if-operand$15764$U0r&n g$if-effect$15765$U0r&n g$if-conditional$15766$U0r&n g$if-variable$15767$U0r&n g$if-inline$15768$U0r&n) (g$if-effect$15765$U0r&n g$C$23702$U0r&n g$generator$15763$U0r&n))))))))) (library-letrec*-identity 'g$effect-continuator$15654$U0r&n))) (g$conditional-continuator$15655$U0r&n g$conditional-continuator$15920$U0r&n ((case-lambda ((g$C$23939$U0r&n) (g$C$23939$U0r&n (case-lambda ((g$C$23705$U0r&n g$generator$15769$U0r&n) (g$C$23705$U0r&n (case-lambda ((g$C$23704$U0r&n g$if-operand$15770$U0r&n g$if-effect$15771$U0r&n g$if-conditional$15772$U0r&n g$if-variable$15773$U0r&n g$if-inline$15774$U0r&n) (g$if-conditional$15772$U0r&n g$C$23704$U0r&n g$generator$15769$U0r&n))))))))) (library-letrec*-identity 'g$conditional-continuator$15655$U0r&n))) (g$variable-continuator$15656$U0r&n g$variable-continuator$15921$U0r&n ((case-lambda ((g$C$23940$U0r&n) (g$C$23940$U0r&n (case-lambda ((g$C$23707$U0r&n g$variable$15775$U0r&n) (g$C$23707$U0r&n (case-lambda ((g$C$23706$U0r&n g$if-operand$15776$U0r&n g$if-effect$15777$U0r&n g$if-conditional$15778$U0r&n g$if-variable$15779$U0r&n g$if-inline$15780$U0r&n) (g$if-variable$15779$U0r&n g$C$23706$U0r&n g$variable$15775$U0r&n))))))))) (library-letrec*-identity 'g$variable-continuator$15656$U0r&n))) (g$inline-continuator$15657$U0r&n g$inline-continuator$15922$U0r&n ((case-lambda ((g$C$23941$U0r&n) (g$C$23941$U0r&n (case-lambda ((g$C$23709$U0r&n g$continuation$15781$U0r&n) (g$C$23709$U0r&n (case-lambda ((g$C$23708$U0r&n g$if-operand$15782$U0r&n g$if-effect$15783$U0r&n g$if-conditional$15784$U0r&n g$if-variable$15785$U0r&n g$if-inline$15786$U0r&n) (g$if-inline$15786$U0r&n g$C$23708$U0r&n g$continuation$15781$U0r&n))))))))) (library-letrec*-identity 'g$inline-continuator$15657$U0r&n))) (g$reified-continuator$15658$U0r&n g$reified-continuator$15923$U0r&n ((case-lambda ((g$C$23942$U0r&n) (g$C$23942$U0r&n (case-lambda ((g$C$23711$U0r&n g$continuator$15787$U0r&n) (g$C$23711$U0r&n (case-lambda ((g$C$23710$U0r&n g$if-operand$15788$U0r&n g$if-effect$15789$U0r&n g$if-conditional$15790$U0r&n g$if-variable$15791$U0r&n g$if-inline$15792$U0r&n) (g$reify-continuation*$15661$U0r&n g$C$23710$U0r&n g$continuator$15787$U0r&n g$if-variable$15791$U0r&n g$if-inline$15792$U0r&n))))))))) (library-letrec*-identity 'g$reified-continuator$15658$U0r&n))) (g$continue-with-operand$15659$U0r&n g$continue-with-operand$15924$U0r&n ((case-lambda ((g$C$23943$U0r&n) (g$C$23943$U0r&n (case-lambda ((g$C$23721$U0r&n g$continuator$15793$U0r&n g$operand$15794$U0r&n) (g$continuator$15793$U0r&n g$C$23721$U0r&n (case-lambda ((g$C$23712$U0r&n g$generator$15795$U0r&n) (g$generator$15795$U0r&n g$C$23712$U0r&n g$operand$15794$U0r&n))) (case-lambda ((g$C$23713$U0r&n g$generator$15796$U0r&n) (g$generator$15796$U0r&n g$C$23713$U0r&n))) (case-lambda ((g$C$23714$U0r&n g$generator$15797$U0r&n) (g$make-truth-test$15683$U0r&n (case-lambda ((g$V$23715$U0r&n) (g$generator$15797$U0r&n g$C$23714$U0r&n g$V$23715$U0r&n))) g$operand$15794$U0r&n))) (case-lambda ((g$C$23716$U0r&n g$continuation-variable$15798$U0r&n) (list (case-lambda ((g$V$23717$U0r&n) (g$make-reference$15669$U0r&n (case-lambda ((g$V$23718$U0r&n) (g$make-return$15677$U0r&n g$C$23716$U0r&n g$V$23718$U0r&n g$V$23717$U0r&n))) g$continuation-variable$15798$U0r&n))) g$operand$15794$U0r&n))) (case-lambda ((g$C$23719$U0r&n g$continuation-abstraction$15799$U0r&n) (list (case-lambda ((g$V$23720$U0r&n) (g$make-return$15677$U0r&n g$C$23719$U0r&n g$continuation-abstraction$15799$U0r&n g$V$23720$U0r&n))) g$operand$15794$U0r&n))))))))) (library-letrec*-identity 'g$continue-with-operand$15659$U0r&n))) (g$reify-continuation$15660$U0r&n g$reify-continuation$15925$U0r&n ((case-lambda ((g$C$23944$U0r&n) (g$C$23944$U0r&n (case-lambda ((g$C$23724$U0r&n g$continuator$15800$U0r&n) (g$continuator$15800$U0r&n g$C$23724$U0r&n g$operand-continuation-reifier$15663$U0r&n g$effect-continuation-reifier$15665$U0r&n g$conditional-continuation-reifier$15667$U0r&n (case-lambda ((g$C$23722$U0r&n g$variable$15801$U0r&n) (g$make-reference$15669$U0r&n g$C$23722$U0r&n g$variable$15801$U0r&n))) (case-lambda ((g$C$23723$U0r&n g$continuation$15802$U0r&n) (g$C$23723$U0r&n g$continuation$15802$U0r&n))))))))) (library-letrec*-identity 'g$reify-continuation$15660$U0r&n))) (g$reify-continuation*$15661$U0r&n g$reify-continuation*$15926$U0r&n ((case-lambda ((g$C$23945$U0r&n) (g$C$23945$U0r&n (case-lambda ((g$C$23725$U0r&n g$continuator$15803$U0r&n g$if-variable$15804$U0r&n g$if-inline$15805$U0r&n) (g$conditional-continuation-reifier*$15666$U0r&n (case-lambda ((g$V$23726$U0r&n) (g$effect-continuation-reifier*$15664$U0r&n (case-lambda ((g$V$23727$U0r&n) (g$operand-continuation-reifier*$15662$U0r&n (case-lambda ((g$V$23728$U0r&n) (g$continuator$15803$U0r&n g$C$23725$U0r&n g$V$23728$U0r&n g$V$23727$U0r&n g$V$23726$U0r&n g$if-variable$15804$U0r&n g$if-inline$15805$U0r&n))) g$if-inline$15805$U0r&n))) g$if-inline$15805$U0r&n))) g$if-inline$15805$U0r&n)))))) (library-letrec*-identity 'g$reify-continuation*$15661$U0r&n))) (g$operand-continuation-reifier*$15662$U0r&n g$operand-continuation-reifier*$15927$U0r&n ((case-lambda ((g$C$23946$U0r&n) (g$C$23946$U0r&n (case-lambda ((g$C$23736$U0r&n g$receiver$15806$U0r&n) (g$C$23736$U0r&n (case-lambda ((g$C$23733$U0r&n g$generator$15807$U0r&n) (g$generate-variable$15684$U0r&n (case-lambda ((g$V$23734$U0r&n) ((case-lambda ((g$C$23729$U0r&n g$variable$15808$U0r&n) (g$make-reference$15669$U0r&n (case-lambda ((g$V$23730$U0r&n) (g$generator$15807$U0r&n (case-lambda ((g$V$23731$U0r&n) (list (case-lambda ((g$V$23732$U0r&n) (g$make-continuation-abstraction$15672$U0r&n g$C$23729$U0r&n g$V$23732$U0r&n g$V$23731$U0r&n))) g$variable$15808$U0r&n))) g$V$23730$U0r&n))) g$variable$15808$U0r&n))) (case-lambda ((g$V$23735$U0r&n) (g$receiver$15806$U0r&n g$C$23733$U0r&n g$V$23735$U0r&n))) g$V$23734$U0r&n))) 'V))))))))) (library-letrec*-identity 'g$operand-continuation-reifier*$15662$U0r&n))) (g$operand-continuation-reifier$15663$U0r&n g$operand-continuation-reifier$15928$U0r&n ((case-lambda ((g$C$23947$U0r&n) (g$operand-continuation-reifier*$15662$U0r&n g$C$23947$U0r&n values))) (library-letrec*-identity 'g$operand-continuation-reifier$15663$U0r&n))) (g$effect-continuation-reifier*$15664$U0r&n g$effect-continuation-reifier*$15929$U0r&n ((case-lambda ((g$C$23948$U0r&n) (g$C$23948$U0r&n (case-lambda ((g$C$23742$U0r&n g$receiver$15809$U0r&n) (g$C$23742$U0r&n (case-lambda ((g$C$23739$U0r&n g$generator$15810$U0r&n) (g$generate-variable$15684$U0r&n (case-lambda ((g$V$23740$U0r&n) ((case-lambda ((g$C$23737$U0r&n g$variable$15811$U0r&n) (g$generator$15810$U0r&n (case-lambda ((g$V$23738$U0r&n) (g$make-continuation-abstraction$15672$U0r&n g$C$23737$U0r&n g$variable$15811$U0r&n g$V$23738$U0r&n)))))) (case-lambda ((g$V$23741$U0r&n) (g$receiver$15809$U0r&n g$C$23739$U0r&n g$V$23741$U0r&n))) g$V$23740$U0r&n))) 'IGNORE))))))))) (library-letrec*-identity 'g$effect-continuation-reifier*$15664$U0r&n))) (g$effect-continuation-reifier$15665$U0r&n g$effect-continuation-reifier$15930$U0r&n ((case-lambda ((g$C$23949$U0r&n) (g$effect-continuation-reifier*$15664$U0r&n g$C$23949$U0r&n values))) (library-letrec*-identity 'g$effect-continuation-reifier$15665$U0r&n))) (g$conditional-continuation-reifier*$15666$U0r&n g$conditional-continuation-reifier*$15931$U0r&n ((case-lambda ((g$C$23950$U0r&n) (g$C$23950$U0r&n (case-lambda ((g$C$23751$U0r&n g$receiver$15812$U0r&n) (g$C$23751$U0r&n (case-lambda ((g$C$23748$U0r&n g$generator$15813$U0r&n) (g$generate-variable$15684$U0r&n (case-lambda ((g$V$23749$U0r&n) ((case-lambda ((g$C$23743$U0r&n g$variable$15814$U0r&n) (g$make-reference$15669$U0r&n (case-lambda ((g$V$23744$U0r&n) (g$make-truth-test$15683$U0r&n (case-lambda ((g$V$23745$U0r&n) (g$generator$15813$U0r&n (case-lambda ((g$V$23746$U0r&n) (list (case-lambda ((g$V$23747$U0r&n) (g$make-continuation-abstraction$15672$U0r&n g$C$23743$U0r&n g$V$23747$U0r&n g$V$23746$U0r&n))) g$variable$15814$U0r&n))) g$V$23745$U0r&n))) g$V$23744$U0r&n))) g$variable$15814$U0r&n))) (case-lambda ((g$V$23750$U0r&n) (g$receiver$15812$U0r&n g$C$23748$U0r&n g$V$23750$U0r&n))) g$V$23749$U0r&n))) 'T))))))))) (library-letrec*-identity 'g$conditional-continuation-reifier*$15666$U0r&n))) (g$conditional-continuation-reifier$15667$U0r&n g$conditional-continuation-reifier$15932$U0r&n ((case-lambda ((g$C$23951$U0r&n) (g$conditional-continuation-reifier*$15666$U0r&n g$C$23951$U0r&n values))) (library-letrec*-identity 'g$conditional-continuation-reifier$15667$U0r&n))) (g$make-literal$15668$U0r&n g$make-literal$15933$U0r&n ((case-lambda ((g$C$23952$U0r&n) (g$C$23952$U0r&n (case-lambda ((g$C$23752$U0r&n g$datum$15815$U0r&n) (list g$C$23752$U0r&n 'quote g$datum$15815$U0r&n)))))) (library-letrec*-identity 'g$make-literal$15668$U0r&n))) (g$make-reference$15669$U0r&n g$make-reference$15934$U0r&n ((case-lambda ((g$C$23953$U0r&n) (g$C$23953$U0r&n (case-lambda ((g$C$23753$U0r&n g$variable$15816$U0r&n) (g$C$23753$U0r&n g$variable$15816$U0r&n)))))) (library-letrec*-identity 'g$make-reference$15669$U0r&n))) (g$make-user-abstraction$15670$U0r&n g$make-user-abstraction$15935$U0r&n ((case-lambda ((g$C$23954$U0r&n) (g$C$23954$U0r&n (case-lambda ((g$C$23758$U0r&n g$bvl$15817$U0r&n g$body-constructor$15818$U0r&n) (g$generate-variable$15684$U0r&n (case-lambda ((g$V$23759$U0r&n) ((case-lambda ((g$C$23754$U0r&n g$continuation$15819$U0r&n) (g$body-constructor$15818$U0r&n (case-lambda ((g$V$23755$U0r&n) (cons (case-lambda ((g$V$23756$U0r&n) (list (case-lambda ((g$V$23757$U0r&n) (list g$C$23754$U0r&n 'case-lambda g$V$23757$U0r&n))) g$V$23756$U0r&n g$V$23755$U0r&n))) g$continuation$15819$U0r&n g$bvl$15817$U0r&n))) g$continuation$15819$U0r&n))) g$C$23758$U0r&n g$V$23759$U0r&n))) 'C)))))) (library-letrec*-identity 'g$make-user-abstraction$15670$U0r&n))) (g$make-user-abstractions$15671$U0r&n g$make-user-abstractions$15936$U0r&n ((case-lambda ((g$C$23955$U0r&n) (g$C$23955$U0r&n (case-lambda ((g$C$23765$U0r&n g$bvls$15820$U0r&n g$body-constructors$15821$U0r&n) (g$generate-variable$15684$U0r&n (case-lambda ((g$V$23766$U0r&n) ((case-lambda ((g$C$23763$U0r&n g$continuation$15822$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23764$U0r&n) (cons g$C$23763$U0r&n 'case-lambda g$V$23764$U0r&n))) (case-lambda ((g$C$23760$U0r&n g$bvl$15823$U0r&n g$body-constructor$15824$U0r&n) (g$body-constructor$15824$U0r&n (case-lambda ((g$V$23761$U0r&n) (cons (case-lambda ((g$V$23762$U0r&n) (list g$C$23760$U0r&n g$V$23762$U0r&n g$V$23761$U0r&n))) g$continuation$15822$U0r&n g$bvl$15823$U0r&n))) g$continuation$15822$U0r&n))) g$bvls$15820$U0r&n g$body-constructors$15821$U0r&n))) g$C$23765$U0r&n g$V$23766$U0r&n))) 'C)))))) (library-letrec*-identity 'g$make-user-abstractions$15671$U0r&n))) (g$make-continuation-abstraction$15672$U0r&n g$make-continuation-abstraction$15937$U0r&n ((case-lambda ((g$C$23956$U0r&n) (g$C$23956$U0r&n (case-lambda ((g$C$23767$U0r&n g$bvl$15825$U0r&n g$body$15826$U0r&n) (list (case-lambda ((g$V$23768$U0r&n) (list g$C$23767$U0r&n 'case-lambda g$V$23768$U0r&n))) g$bvl$15825$U0r&n g$body$15826$U0r&n)))))) (library-letrec*-identity 'g$make-continuation-abstraction$15672$U0r&n))) (g$make-recursive-bind$15673$U0r&n g$make-recursive-bind$15938$U0r&n ((case-lambda ((g$C$23957$U0r&n) (g$C$23957$U0r&n (case-lambda ((g$C$23774$U0r&n g$variables$15827$U0r&n g$constructors$15828$U0r&n g$body$15829$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23775$U0r&n) (list g$C$23774$U0r&n 'letrec g$V$23775$U0r&n g$body$15829$U0r&n))) (case-lambda ((g$C$23769$U0r&n g$variable$15830$U0r&n g$constructor$15831$U0r&n) (list (case-lambda ((g$V$23770$U0r&n) (list (case-lambda ((g$V$23771$U0r&n) (g$make-user-abstraction$15670$U0r&n (case-lambda ((g$V$23772$U0r&n) (list (case-lambda ((g$V$23773$U0r&n) (list g$C$23769$U0r&n g$variable$15830$U0r&n g$V$23773$U0r&n))) g$V$23772$U0r&n g$V$23771$U0r&n))) '() g$constructor$15831$U0r&n))) 'letrec-identity g$V$23770$U0r&n))) 'quote g$variable$15830$U0r&n))) g$variables$15827$U0r&n g$constructors$15828$U0r&n)))))) (library-letrec*-identity 'g$make-recursive-bind$15673$U0r&n))) (g$make-recursive*-bind$15674$U0r&n g$make-recursive*-bind$15939$U0r&n ((case-lambda ((g$C$23958$U0r&n) (g$C$23958$U0r&n (case-lambda ((g$C$23781$U0r&n g$variables$15832$U0r&n g$constructors$15833$U0r&n g$body$15834$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23782$U0r&n) (list g$C$23781$U0r&n 'letrec* g$V$23782$U0r&n g$body$15834$U0r&n))) (case-lambda ((g$C$23776$U0r&n g$variable$15835$U0r&n g$constructor$15836$U0r&n) (list (case-lambda ((g$V$23777$U0r&n) (list (case-lambda ((g$V$23778$U0r&n) (g$make-user-abstraction$15670$U0r&n (case-lambda ((g$V$23779$U0r&n) (list (case-lambda ((g$V$23780$U0r&n) (list g$C$23776$U0r&n g$variable$15835$U0r&n g$V$23780$U0r&n))) g$V$23779$U0r&n g$V$23778$U0r&n))) '() g$constructor$15836$U0r&n))) 'letrec*-identity g$V$23777$U0r&n))) 'quote g$variable$15835$U0r&n))) g$variables$15832$U0r&n g$constructors$15833$U0r&n)))))) (library-letrec*-identity 'g$make-recursive*-bind$15674$U0r&n))) (g$make-recursive*-library-bind$15675$U0r&n g$make-recursive*-library-bind$15940$U0r&n ((case-lambda ((g$C$23959$U0r&n) (g$C$23959$U0r&n (case-lambda ((g$C$23788$U0r&n g$name$15837$U0r&n g$variables$15838$U0r&n g$variables*$15839$U0r&n g$constructors$15840$U0r&n g$body$15841$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23789$U0r&n) (list g$C$23788$U0r&n 'library-letrec* g$name$15837$U0r&n g$V$23789$U0r&n g$body$15841$U0r&n))) (case-lambda ((g$C$23783$U0r&n g$variable$15842$U0r&n g$variable*$15843$U0r&n g$constructor$15844$U0r&n) (list (case-lambda ((g$V$23784$U0r&n) (list (case-lambda ((g$V$23785$U0r&n) (g$make-user-abstraction$15670$U0r&n (case-lambda ((g$V$23786$U0r&n) (list (case-lambda ((g$V$23787$U0r&n) (list g$C$23783$U0r&n g$variable$15842$U0r&n g$variable*$15843$U0r&n g$V$23787$U0r&n))) g$V$23786$U0r&n g$V$23785$U0r&n))) '() g$constructor$15844$U0r&n))) 'library-letrec*-identity g$V$23784$U0r&n))) 'quote g$variable$15842$U0r&n))) g$variables$15838$U0r&n g$variables*$15839$U0r&n g$constructors$15840$U0r&n)))))) (library-letrec*-identity 'g$make-recursive*-library-bind$15675$U0r&n))) (g$make-combination$15676$U0r&n g$make-combination$15941$U0r&n ((case-lambda ((g$C$23960$U0r&n) (g$C$23960$U0r&n (case-lambda ((g$C$23790$U0r&n g$operator$15845$U0r&n g$continuation$15846$U0r&n g$operands$15847$U0r&n) (cons (case-lambda ((g$V$23791$U0r&n) (cons g$C$23790$U0r&n g$operator$15845$U0r&n g$V$23791$U0r&n))) g$continuation$15846$U0r&n g$operands$15847$U0r&n)))))) (library-letrec*-identity 'g$make-combination$15676$U0r&n))) (g$make-return$15677$U0r&n g$make-return$15942$U0r&n ((case-lambda ((g$C$23961$U0r&n) (g$C$23961$U0r&n (case-lambda ((g$C$23792$U0r&n g$continuation$15848$U0r&n g$operands$15849$U0r&n) (cons g$C$23792$U0r&n g$continuation$15848$U0r&n g$operands$15849$U0r&n)))))) (library-letrec*-identity 'g$make-return$15677$U0r&n))) (g$make-conditional$15678$U0r&n g$make-conditional$15943$U0r&n ((case-lambda ((g$C$23962$U0r&n) (g$C$23962$U0r&n (case-lambda ((g$C$23793$U0r&n g$condition$15850$U0r&n g$consequent$15851$U0r&n g$alternative$15852$U0r&n) (list g$C$23793$U0r&n 'if g$condition$15850$U0r&n g$consequent$15851$U0r&n g$alternative$15852$U0r&n)))))) (library-letrec*-identity 'g$make-conditional$15678$U0r&n))) (g$make-conditional-join$15679$U0r&n g$make-conditional-join$15944$U0r&n ((case-lambda ((g$C$23963$U0r&n) (g$C$23963$U0r&n (case-lambda ((g$C$23798$U0r&n g$continuation$15853$U0r&n g$constructor$15854$U0r&n) (g$generate-variable$15684$U0r&n (case-lambda ((g$V$23799$U0r&n) ((case-lambda ((g$C$23794$U0r&n g$variable$15855$U0r&n) (g$constructor$15854$U0r&n (case-lambda ((g$V$23795$U0r&n) (list (case-lambda ((g$V$23796$U0r&n) (list (case-lambda ((g$V$23797$U0r&n) (g$make-let$15680$U0r&n g$C$23794$U0r&n g$V$23797$U0r&n g$V$23796$U0r&n g$V$23795$U0r&n))) g$variable$15855$U0r&n))) g$continuation$15853$U0r&n))) g$variable$15855$U0r&n))) g$C$23798$U0r&n g$V$23799$U0r&n))) 'J)))))) (library-letrec*-identity 'g$make-conditional-join$15679$U0r&n))) (g$make-let$15680$U0r&n g$make-let$15945$U0r&n ((case-lambda ((g$C$23964$U0r&n) (g$C$23964$U0r&n (case-lambda ((g$C$23800$U0r&n g$variables$15856$U0r&n g$expressions$15857$U0r&n g$body$15858$U0r&n) (list (case-lambda ((g$V$23801$U0r&n) (list (case-lambda ((g$V$23802$U0r&n) (cons g$C$23800$U0r&n g$V$23802$U0r&n g$expressions$15857$U0r&n))) 'case-lambda g$V$23801$U0r&n))) g$variables$15856$U0r&n g$body$15858$U0r&n)))))) (library-letrec*-identity 'g$make-let$15680$U0r&n))) (g$make-assignment$15681$U0r&n g$make-assignment$15946$U0r&n ((case-lambda ((g$C$23965$U0r&n) (g$C$23965$U0r&n (case-lambda ((g$C$23803$U0r&n g$location$15859$U0r&n g$operand$15860$U0r&n g$expression$15861$U0r&n) (list (case-lambda ((g$V$23804$U0r&n) (list g$C$23803$U0r&n 'begin g$V$23804$U0r&n g$expression$15861$U0r&n))) 'set! g$location$15859$U0r&n g$operand$15860$U0r&n)))))) (library-letrec*-identity 'g$make-assignment$15681$U0r&n))) (g$make-declaration$15682$U0r&n g$make-declaration$15947$U0r&n ((case-lambda ((g$C$23966$U0r&n) (g$C$23966$U0r&n (case-lambda ((g$C$23805$U0r&n g$location$15862$U0r&n g$operand$15863$U0r&n g$expression$15864$U0r&n) (list (case-lambda ((g$V$23806$U0r&n) (list g$C$23805$U0r&n 'begin g$V$23806$U0r&n g$expression$15864$U0r&n))) 'define g$location$15862$U0r&n g$operand$15863$U0r&n)))))) (library-letrec*-identity 'g$make-declaration$15682$U0r&n))) (g$make-truth-test$15683$U0r&n g$make-truth-test$15948$U0r&n ((case-lambda ((g$C$23967$U0r&n) (g$C$23967$U0r&n (case-lambda ((g$C$23807$U0r&n g$operand$15865$U0r&n) (g$C$23807$U0r&n g$operand$15865$U0r&n)))))) (library-letrec*-identity 'g$make-truth-test$15683$U0r&n))) (g$generate-variable$15684$U0r&n g$generate-variable$15949$U0r&n ((case-lambda ((g$C$23968$U0r&n) (g$C$23968$U0r&n (case-lambda ((g$C$23808$U0r&n g$name$15866$U0r&n) (gensym g$C$23808$U0r&n g$name$15866$U0r&n)))))) (library-letrec*-identity 'g$generate-variable$15684$U0r&n))) (g$parse$15685$U0r&n g$parse$15950$U0r&n ((case-lambda ((g$C$23969$U0r&n) (g$C$23969$U0r&n (case-lambda ((g$C$23889$U0r&n g$x$15867$U0r&n) (pair? (case-lambda ((g$T$23890$U0r&n) (if g$T$23890$U0r&n (car (case-lambda ((g$V$23891$U0r&n) ((case-lambda ((g$C$23851$U0r&n g$t$15868$U0r&n) (eqv? (case-lambda ((g$T$23852$U0r&n) (if g$T$23852$U0r&n (g$cadr$13506$U0r&n (case-lambda ((g$V$23853$U0r&n) (g$cps/generate-literal$15640$U0r&n g$C$23851$U0r&n g$V$23853$U0r&n))) g$x$15867$U0r&n) (eqv? (case-lambda ((g$T$23854$U0r&n) (if g$T$23854$U0r&n (g$cadddr$13524$U0r&n (case-lambda ((g$V$23855$U0r&n) (g$parse$15685$U0r&n (case-lambda ((g$V$23856$U0r&n) (g$caddr$13512$U0r&n (case-lambda ((g$V$23857$U0r&n) (g$parse$15685$U0r&n (case-lambda ((g$V$23858$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$23859$U0r&n) (g$parse$15685$U0r&n (case-lambda ((g$V$23860$U0r&n) (g$cps/generate-conditional$15644$U0r&n g$C$23851$U0r&n g$V$23860$U0r&n g$V$23858$U0r&n g$V$23856$U0r&n))) g$V$23859$U0r&n))) g$x$15867$U0r&n))) g$V$23857$U0r&n))) g$x$15867$U0r&n))) g$V$23855$U0r&n))) g$x$15867$U0r&n) (eqv? (case-lambda ((g$T$23861$U0r&n) (if g$T$23861$U0r&n (cdr (case-lambda ((g$V$23862$U0r&n) ((case-lambda ((g$C$23812$U0r&n g$d$15869$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23813$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23814$U0r&n) (g$cps/generate-abstractions$15642$U0r&n g$C$23812$U0r&n g$V$23814$U0r&n g$V$23813$U0r&n))) car g$d$15869$U0r&n))) (case-lambda ((g$C$23809$U0r&n g$e$15870$U0r&n) (cdr (case-lambda ((g$V$23810$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23811$U0r&n) (g$cps/generate-sequence$15648$U0r&n g$C$23809$U0r&n g$V$23811$U0r&n))) g$parse$15685$U0r&n g$V$23810$U0r&n))) g$e$15870$U0r&n))) g$d$15869$U0r&n))) g$C$23851$U0r&n g$V$23862$U0r&n))) g$x$15867$U0r&n) (eqv? (case-lambda ((g$T$23863$U0r&n) (if g$T$23863$U0r&n (g$cddr$13508$U0r&n (case-lambda ((g$V$23864$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$23865$U0r&n) ((case-lambda ((g$C$23830$U0r&n g$bindings$15871$U0r&n g$body*$15872$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23831$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23832$U0r&n) ((case-lambda ((g$C$23827$U0r&n g$lhs*$15873$U0r&n g$rhs*$15874$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23828$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23829$U0r&n) ((case-lambda ((g$C$23824$U0r&n g$t*$15875$U0r&n g$tmps$15876$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23825$U0r&n) ((case-lambda ((g$C$23815$U0r&n g$s*$15877$U0r&n) (append (case-lambda ((g$V$23816$U0r&n) (cons (case-lambda ((g$V$23817$U0r&n) (list (case-lambda ((g$V$23818$U0r&n) (cons (case-lambda ((g$V$23819$U0r&n) (list (case-lambda ((g$V$23820$U0r&n) (list (case-lambda ((g$V$23821$U0r&n) (cons (case-lambda ((g$V$23822$U0r&n) (g$parse$15685$U0r&n g$C$23815$U0r&n g$V$23822$U0r&n))) g$V$23821$U0r&n g$tmps$15876$U0r&n))) 'case-lambda g$V$23820$U0r&n))) g$lhs*$15873$U0r&n g$V$23819$U0r&n))) g$V$23818$U0r&n g$rhs*$15874$U0r&n))) 'case-lambda g$V$23817$U0r&n))) g$t*$15875$U0r&n g$V$23816$U0r&n))) g$s*$15877$U0r&n g$body*$15872$U0r&n))) g$C$23824$U0r&n g$V$23825$U0r&n))) (case-lambda ((g$C$23823$U0r&n g$i$15878$U0r&n g$t$15879$U0r&n) (list g$C$23823$U0r&n 'set! g$i$15878$U0r&n g$t$15879$U0r&n))) g$lhs*$15873$U0r&n g$t*$15875$U0r&n))) g$C$23827$U0r&n g$V$23829$U0r&n g$V$23828$U0r&n))) gensym g$lhs*$15873$U0r&n))) (case-lambda ((g$C$23826$U0r&n g$x$15880$U0r&n) (g$C$23826$U0r&n 'uninitialized))) g$lhs*$15873$U0r&n))) g$C$23830$U0r&n g$V$23832$U0r&n g$V$23831$U0r&n))) car g$bindings$15871$U0r&n))) g$cadr$13506$U0r&n g$bindings$15871$U0r&n))) g$C$23851$U0r&n g$V$23865$U0r&n g$V$23864$U0r&n))) g$x$15867$U0r&n))) g$x$15867$U0r&n) (eqv? (case-lambda ((g$T$23866$U0r&n) (if g$T$23866$U0r&n (g$cddr$13508$U0r&n (case-lambda ((g$V$23867$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$23868$U0r&n) ((case-lambda ((g$C$23837$U0r&n g$bindings$15881$U0r&n g$body*$15882$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23838$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23839$U0r&n) ((case-lambda ((g$C$23833$U0r&n g$lhs*$15883$U0r&n g$rhs*$15884$U0r&n) (cons (case-lambda ((g$V$23834$U0r&n) (g$parse$15685$U0r&n (case-lambda ((g$V$23835$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23836$U0r&n) (g$cps/generate-recursive*-bind$15646$U0r&n g$C$23833$U0r&n g$lhs*$15883$U0r&n g$V$23836$U0r&n g$V$23835$U0r&n))) g$parse$15685$U0r&n g$rhs*$15884$U0r&n))) g$V$23834$U0r&n))) 'begin g$body*$15882$U0r&n))) g$C$23837$U0r&n g$V$23839$U0r&n g$V$23838$U0r&n))) car g$bindings$15881$U0r&n))) g$cadr$13506$U0r&n g$bindings$15881$U0r&n))) g$C$23851$U0r&n g$V$23868$U0r&n g$V$23867$U0r&n))) g$x$15867$U0r&n))) g$x$15867$U0r&n) (eqv? (case-lambda ((g$T$23869$U0r&n) (if g$T$23869$U0r&n (cdr (case-lambda ((g$V$23870$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$23871$U0r&n) ((case-lambda ((g$C$23848$U0r&n g$name$15885$U0r&n g$x$15886$U0r&n) (g$cddr$13508$U0r&n (case-lambda ((g$V$23849$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$23850$U0r&n) ((case-lambda ((g$C$23844$U0r&n g$bindings$15887$U0r&n g$body*$15888$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23845$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23846$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23847$U0r&n) ((case-lambda ((g$C$23840$U0r&n g$lhs*$15889$U0r&n g$lhs**$15890$U0r&n g$rhs*$15891$U0r&n) (cons (case-lambda ((g$V$23841$U0r&n) (g$parse$15685$U0r&n (case-lambda ((g$V$23842$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23843$U0r&n) (g$cps/generate-recursive*-library-bind$15647$U0r&n g$C$23840$U0r&n g$name$15885$U0r&n g$lhs*$15889$U0r&n g$lhs**$15890$U0r&n g$V$23843$U0r&n g$V$23842$U0r&n))) g$parse$15685$U0r&n g$rhs*$15891$U0r&n))) g$V$23841$U0r&n))) 'begin g$body*$15888$U0r&n))) g$C$23844$U0r&n g$V$23847$U0r&n g$V$23846$U0r&n g$V$23845$U0r&n))) car g$bindings$15887$U0r&n))) g$cadr$13506$U0r&n g$bindings$15887$U0r&n))) g$caddr$13512$U0r&n g$bindings$15887$U0r&n))) g$C$23848$U0r&n g$V$23850$U0r&n g$V$23849$U0r&n))) g$x$15886$U0r&n))) g$x$15886$U0r&n))) g$C$23851$U0r&n g$V$23871$U0r&n g$V$23870$U0r&n))) g$x$15867$U0r&n))) g$x$15867$U0r&n) (eqv? (case-lambda ((g$T$23872$U0r&n) (if g$T$23872$U0r&n (cdr (case-lambda ((g$V$23873$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23874$U0r&n) (g$cps/generate-sequence$15648$U0r&n g$C$23851$U0r&n g$V$23874$U0r&n))) g$parse$15685$U0r&n g$V$23873$U0r&n))) g$x$15867$U0r&n) (eqv? (case-lambda ((g$T$23875$U0r&n) (if g$T$23875$U0r&n (g$caddr$13512$U0r&n (case-lambda ((g$V$23876$U0r&n) (g$parse$15685$U0r&n (case-lambda ((g$V$23877$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$23878$U0r&n) (g$cps/generate-assignment$15649$U0r&n g$C$23851$U0r&n g$V$23878$U0r&n g$V$23877$U0r&n))) g$x$15867$U0r&n))) g$V$23876$U0r&n))) g$x$15867$U0r&n) (eqv? (case-lambda ((g$T$23879$U0r&n) (if g$T$23879$U0r&n (g$caddr$13512$U0r&n (case-lambda ((g$V$23880$U0r&n) (g$parse$15685$U0r&n (case-lambda ((g$V$23881$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$23882$U0r&n) (g$cps/generate-declaration$15650$U0r&n g$C$23851$U0r&n g$V$23882$U0r&n g$V$23881$U0r&n))) g$x$15867$U0r&n))) g$V$23880$U0r&n))) g$x$15867$U0r&n) (list? (case-lambda ((g$T$23883$U0r&n) (if g$T$23883$U0r&n (cdr (case-lambda ((g$V$23884$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23885$U0r&n) (car (case-lambda ((g$V$23886$U0r&n) (g$parse$15685$U0r&n (case-lambda ((g$V$23887$U0r&n) (g$cps/generate-combination$15651$U0r&n g$C$23851$U0r&n g$V$23887$U0r&n g$V$23885$U0r&n))) g$V$23886$U0r&n))) g$x$15867$U0r&n))) g$parse$15685$U0r&n g$V$23884$U0r&n))) g$x$15867$U0r&n) (list? (case-lambda ((g$V$23888$U0r&n) (g$error$13787$U0r&n g$C$23851$U0r&n 'rewrite '"invalid form ~s ~s" g$x$15867$U0r&n g$V$23888$U0r&n))) g$x$15867$U0r&n)))) g$x$15867$U0r&n)))) g$t$15868$U0r&n 'define)))) g$t$15868$U0r&n 'set!)))) g$t$15868$U0r&n 'begin)))) g$t$15868$U0r&n 'library-letrec*)))) g$t$15868$U0r&n 'letrec*)))) g$t$15868$U0r&n 'letrec)))) g$t$15868$U0r&n 'case-lambda)))) g$t$15868$U0r&n 'if)))) g$t$15868$U0r&n 'quote))) g$C$23889$U0r&n g$V$23891$U0r&n))) g$x$15867$U0r&n) (g$symbol?$13496$U0r&n (case-lambda ((g$T$23892$U0r&n) (if g$T$23892$U0r&n (g$cps/generate-reference$15639$U0r&n g$C$23889$U0r&n g$x$15867$U0r&n) (g$cps/generate-literal$15640$U0r&n g$C$23889$U0r&n g$x$15867$U0r&n)))) g$x$15867$U0r&n)))) g$x$15867$U0r&n)))))) (library-letrec*-identity 'g$parse$15685$U0r&n))) (g$starts-with?$15686$U0r&n g$starts-with?$15951$U0r&n ((case-lambda ((g$C$23970$U0r&n) (g$C$23970$U0r&n (case-lambda ((g$C$23893$U0r&n g$str$15892$U0r&n g$sub$15893$U0r&n) (g$C$23893$U0r&n (clr-call-internal 'system.string 'startswith g$str$15892$U0r&n g$sub$15893$U0r&n))))))) (library-letrec*-identity 'g$starts-with?$15686$U0r&n))) (g$ends-with?$15687$U0r&n g$ends-with?$15952$U0r&n ((case-lambda ((g$C$23971$U0r&n) (g$C$23971$U0r&n (case-lambda ((g$C$23894$U0r&n g$str$15894$U0r&n g$sub$15895$U0r&n) (g$C$23894$U0r&n (clr-call-internal 'system.string 'endswith g$str$15894$U0r&n g$sub$15895$U0r&n))))))) (library-letrec*-identity 'g$ends-with?$15687$U0r&n))) (g$clr-generator?$15688$U0r&n g$clr-generator?$15953$U0r&n ((case-lambda ((g$C$23972$U0r&n) (g$C$23972$U0r&n (case-lambda ((g$C$23897$U0r&n g$o$15896$U0r&n) (g$symbol?$13496$U0r&n (case-lambda ((g$T$23898$U0r&n) (if g$T$23898$U0r&n (symbol->string (case-lambda ((g$V$23899$U0r&n) ((case-lambda ((g$C$23895$U0r&n g$o$15897$U0r&n) (g$starts-with?$15686$U0r&n (case-lambda ((g$T$23896$U0r&n) (if g$T$23896$U0r&n (g$ends-with?$15687$U0r&n g$C$23895$U0r&n g$o$15897$U0r&n '"-internal") (g$C$23895$U0r&n '#f)))) g$o$15897$U0r&n '"clr-"))) g$C$23897$U0r&n g$V$23899$U0r&n))) g$o$15896$U0r&n) (g$C$23897$U0r&n '#f)))) g$o$15896$U0r&n)))))) (library-letrec*-identity 'g$clr-generator?$15688$U0r&n))) (g$fix-primitives$15689$U0r&n g$fix-primitives$15954$U0r&n ((case-lambda ((g$C$23973$U0r&n) (g$C$23973$U0r&n (case-lambda ((g$C$23913$U0r&n g$e$15898$U0r&n) ((case-lambda ((g$J$23916$U0r&n) (pair? (case-lambda ((g$T$23917$U0r&n) (if g$T$23917$U0r&n (list? g$J$23916$U0r&n g$e$15898$U0r&n) (g$J$23916$U0r&n '#f)))) g$e$15898$U0r&n))) (case-lambda ((g$T$23914$U0r&n) (if g$T$23914$U0r&n (car (case-lambda ((g$V$23915$U0r&n) ((case-lambda ((g$C$23900$U0r&n g$o$15899$U0r&n) (eq? (case-lambda ((g$T$23901$U0r&n) (if g$T$23901$U0r&n (g$C$23900$U0r&n g$e$15898$U0r&n) (g$clr-generator?$15688$U0r&n (case-lambda ((g$T$23902$U0r&n) (if g$T$23902$U0r&n (cdr (case-lambda ((g$V$23903$U0r&n) (pair? (case-lambda ((g$T$23904$U0r&n) (if g$T$23904$U0r&n (g$cddr$13508$U0r&n (case-lambda ((g$V$23905$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23906$U0r&n) (cons (case-lambda ((g$V$23907$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$23908$U0r&n) (g$fix-primitives$15689$U0r&n (case-lambda ((g$V$23909$U0r&n) (list g$C$23900$U0r&n g$V$23909$U0r&n g$V$23907$U0r&n))) g$V$23908$U0r&n))) g$e$15898$U0r&n))) g$o$15899$U0r&n g$V$23906$U0r&n))) g$fix-primitives$15689$U0r&n g$V$23905$U0r&n))) g$e$15898$U0r&n) (g$C$23900$U0r&n g$e$15898$U0r&n)))) g$V$23903$U0r&n))) g$e$15898$U0r&n) (cdr (case-lambda ((g$V$23910$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$23911$U0r&n) (g$fix-primitives$15689$U0r&n (case-lambda ((g$V$23912$U0r&n) (cons g$C$23900$U0r&n g$V$23912$U0r&n g$V$23911$U0r&n))) g$o$15899$U0r&n))) g$fix-primitives$15689$U0r&n g$V$23910$U0r&n))) g$e$15898$U0r&n)))) g$o$15899$U0r&n)))) g$o$15899$U0r&n 'quote))) g$C$23913$U0r&n g$V$23915$U0r&n))) g$e$15898$U0r&n) (g$C$23913$U0r&n g$e$15898$U0r&n)))))))))) (library-letrec*-identity 'g$fix-primitives$15689$U0r&n))) (g$parse->cps$15690$U0r&n g$parse->cps$15955$U0r&n ((case-lambda ((g$C$23974$U0r&n) (g$C$23974$U0r&n (case-lambda ((g$C$23918$U0r&n g$e$15900$U0r&n g$var$15901$U0r&n) (g$variable-continuator$15656$U0r&n (case-lambda ((g$V$23919$U0r&n) (g$parse$15685$U0r&n (case-lambda ((g$V$23920$U0r&n) (g$V$23920$U0r&n g$C$23918$U0r&n g$V$23919$U0r&n))) g$e$15900$U0r&n))) g$var$15901$U0r&n)))))) (library-letrec*-identity 'g$parse->cps$15690$U0r&n))) (g$convert->cps$15691$U0r&n g$convert->cps$15956$U0r&n ((case-lambda ((g$C$23975$U0r&n) (g$C$23975$U0r&n (case-lambda ((g$C$23921$U0r&n g$e$15902$U0r&n g$var$15903$U0r&n) (g$parse->cps$15690$U0r&n (case-lambda ((g$V$23922$U0r&n) (g$fix-primitives$15689$U0r&n g$C$23921$U0r&n g$V$23922$U0r&n))) g$e$15902$U0r&n g$var$15903$U0r&n)))))) (library-letrec*-identity 'g$convert->cps$15691$U0r&n)))) (void identity-for-cps))(library-letrec* (psyntax internal) ((g$current-primitive-locations$15957$U0r&n g$current-primitive-locations$16002$U0r&n ((case-lambda ((g$C$24081$U0r&n) (g$make-parameter$15428$U0r&n g$C$24081$U0r&n (case-lambda ((g$C$23976$U0r&n g$x$15963$U0r&n) (g$C$23976$U0r&n '#f))) (case-lambda ((g$C$23977$U0r&n g$p$15964$U0r&n) ((case-lambda ((g$J$23979$U0r&n) (g$procedure?$13498$U0r&n (case-lambda ((g$V$23980$U0r&n) (not (case-lambda ((g$T$23981$U0r&n) (if g$T$23981$U0r&n (g$assertion-error$20773$U0r&n g$J$23979$U0r&n '(procedure? p) '("psyntax\\internal.ss" . "(29,9) - (29,32)")) (void g$J$23979$U0r&n)))) g$V$23980$U0r&n))) g$p$15964$U0r&n))) (case-lambda (g$IGNORE$23978$U0r&n (g$C$23977$U0r&n g$p$15964$U0r&n))))))))) (library-letrec*-identity 'g$current-primitive-locations$15957$U0r&n))) (g$mutable?$15958$U0r&n g$mutable?$16003$U0r&n ((case-lambda ((g$C$24082$U0r&n) (g$C$24082$U0r&n (case-lambda ((g$C$23997$U0r&n g$x$15965$U0r&n) ((case-lambda ((g$C$23995$U0r&n g$simple?$15966$U0r&n) (begin (set! g$simple?$15966$U0r&n (case-lambda ((g$C$23993$U0r&n g$x$15967$U0r&n) (null? (case-lambda ((g$V$23994$U0r&n) ((case-lambda ((g$C$23991$U0r&n g$t$15968$U0r&n) (if g$t$15968$U0r&n (g$C$23991$U0r&n g$t$15968$U0r&n) (g$char?$13493$U0r&n (case-lambda ((g$V$23992$U0r&n) ((case-lambda ((g$C$23989$U0r&n g$t$15969$U0r&n) (if g$t$15969$U0r&n (g$C$23989$U0r&n g$t$15969$U0r&n) (g$symbol?$13496$U0r&n (case-lambda ((g$V$23990$U0r&n) ((case-lambda ((g$C$23987$U0r&n g$t$15970$U0r&n) (if g$t$15970$U0r&n (g$C$23987$U0r&n g$t$15970$U0r&n) (g$boolean?$13497$U0r&n (case-lambda ((g$V$23988$U0r&n) ((case-lambda ((g$C$23985$U0r&n g$t$15971$U0r&n) (if g$t$15971$U0r&n (g$C$23985$U0r&n g$t$15971$U0r&n) (string? (case-lambda ((g$V$23986$U0r&n) ((case-lambda ((g$C$23983$U0r&n g$t$15972$U0r&n) (if g$t$15972$U0r&n (g$C$23983$U0r&n g$t$15972$U0r&n) (g$bytevector?$13495$U0r&n (case-lambda ((g$V$23984$U0r&n) ((case-lambda ((g$C$23982$U0r&n g$t$15973$U0r&n) (if g$t$15973$U0r&n (g$C$23982$U0r&n g$t$15973$U0r&n) (number? g$C$23982$U0r&n g$x$15967$U0r&n)))) g$C$23983$U0r&n g$V$23984$U0r&n))) g$x$15967$U0r&n)))) g$C$23985$U0r&n g$V$23986$U0r&n))) g$x$15967$U0r&n)))) g$C$23987$U0r&n g$V$23988$U0r&n))) g$x$15967$U0r&n)))) g$C$23989$U0r&n g$V$23990$U0r&n))) g$x$15967$U0r&n)))) g$C$23991$U0r&n g$V$23992$U0r&n))) g$x$15967$U0r&n)))) g$C$23993$U0r&n g$V$23994$U0r&n))) g$x$15967$U0r&n)))) (g$simple?$15966$U0r&n (case-lambda ((g$V$23996$U0r&n) (not g$C$23995$U0r&n g$V$23996$U0r&n))) g$x$15965$U0r&n)))) g$C$23997$U0r&n uninitialized)))))) (library-letrec*-identity 'g$mutable?$15958$U0r&n))) (g$rewriter$15959$U0r&n g$rewriter$16004$U0r&n ((case-lambda ((g$C$24083$U0r&n) (g$C$24083$U0r&n (case-lambda ((g$C$24073$U0r&n g$quote-hack?$15974$U0r&n) ((case-lambda ((g$C$24072$U0r&n g$f$15975$U0r&n) (begin (set! g$f$15975$U0r&n (case-lambda ((g$C$24069$U0r&n g$x$15976$U0r&n) (pair? (case-lambda ((g$T$24070$U0r&n) (if g$T$24070$U0r&n (car (case-lambda ((g$V$24071$U0r&n) ((case-lambda ((g$C$24035$U0r&n g$t$15977$U0r&n) (eqv? (case-lambda ((g$T$24036$U0r&n) (if g$T$24036$U0r&n ((case-lambda ((g$J$24039$U0r&n) (if g$quote-hack?$15974$U0r&n (g$cadr$13506$U0r&n (case-lambda ((g$V$24040$U0r&n) (g$mutable?$15958$U0r&n g$J$24039$U0r&n g$V$24040$U0r&n))) g$x$15976$U0r&n) (g$J$24039$U0r&n '#f)))) (case-lambda ((g$T$24037$U0r&n) (if g$T$24037$U0r&n (gensym (case-lambda ((g$V$24038$U0r&n) ((case-lambda ((g$C$23998$U0r&n g$g$15978$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$23999$U0r&n) (set-symbol-value! (case-lambda (g$IGNORE$24000$U0r&n (g$C$23998$U0r&n g$g$15978$U0r&n))) g$g$15978$U0r&n g$V$23999$U0r&n))) g$x$15976$U0r&n))) g$C$24035$U0r&n g$V$24038$U0r&n))) 'weak-temp) (g$C$24035$U0r&n g$x$15976$U0r&n))))) (eqv? (case-lambda ((g$T$24041$U0r&n) (if g$T$24041$U0r&n (cdr (case-lambda ((g$V$24042$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24043$U0r&n) (cons g$C$24035$U0r&n 'case-lambda g$V$24043$U0r&n))) (case-lambda ((g$C$24001$U0r&n g$x$15979$U0r&n) (cdr (case-lambda ((g$V$24002$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24003$U0r&n) (car (case-lambda ((g$V$24004$U0r&n) (cons g$C$24001$U0r&n g$V$24004$U0r&n g$V$24003$U0r&n))) g$x$15979$U0r&n))) g$f$15975$U0r&n g$V$24002$U0r&n))) g$x$15979$U0r&n))) g$V$24042$U0r&n))) g$x$15976$U0r&n) (eqv? (case-lambda ((g$T$24044$U0r&n) (if g$T$24044$U0r&n (g$cddr$13508$U0r&n (case-lambda ((g$V$24045$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24046$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$24047$U0r&n) (g$cons*$12755$U0r&n g$C$24035$U0r&n 'lambda g$V$24047$U0r&n g$V$24046$U0r&n))) g$x$15976$U0r&n))) g$f$15975$U0r&n g$V$24045$U0r&n))) g$x$15976$U0r&n) (eqv? (case-lambda ((g$T$24048$U0r&n) (if g$T$24048$U0r&n (g$cddr$13508$U0r&n (case-lambda ((g$V$24049$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$24050$U0r&n) ((case-lambda ((g$C$24009$U0r&n g$bindings$15980$U0r&n g$body*$15981$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24010$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24011$U0r&n) ((case-lambda ((g$C$24005$U0r&n g$lhs*$15982$U0r&n g$rhs*$15983$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24006$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24007$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24008$U0r&n) (g$cons*$12755$U0r&n g$C$24005$U0r&n 'letrec g$V$24008$U0r&n g$V$24006$U0r&n))) list g$lhs*$15982$U0r&n g$V$24007$U0r&n))) g$f$15975$U0r&n g$rhs*$15983$U0r&n))) g$f$15975$U0r&n g$body*$15981$U0r&n))) g$C$24009$U0r&n g$V$24011$U0r&n g$V$24010$U0r&n))) car g$bindings$15980$U0r&n))) g$cadr$13506$U0r&n g$bindings$15980$U0r&n))) g$C$24035$U0r&n g$V$24050$U0r&n g$V$24049$U0r&n))) g$x$15976$U0r&n))) g$x$15976$U0r&n) (eqv? (case-lambda ((g$T$24051$U0r&n) (if g$T$24051$U0r&n (g$cddr$13508$U0r&n (case-lambda ((g$V$24052$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$24053$U0r&n) ((case-lambda ((g$C$24016$U0r&n g$bindings$15984$U0r&n g$body*$15985$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24017$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24018$U0r&n) ((case-lambda ((g$C$24012$U0r&n g$lhs*$15986$U0r&n g$rhs*$15987$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24013$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24014$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24015$U0r&n) (g$cons*$12755$U0r&n g$C$24012$U0r&n 'letrec* g$V$24015$U0r&n g$V$24013$U0r&n))) list g$lhs*$15986$U0r&n g$V$24014$U0r&n))) g$f$15975$U0r&n g$rhs*$15987$U0r&n))) g$f$15975$U0r&n g$body*$15985$U0r&n))) g$C$24016$U0r&n g$V$24018$U0r&n g$V$24017$U0r&n))) car g$bindings$15984$U0r&n))) g$cadr$13506$U0r&n g$bindings$15984$U0r&n))) g$C$24035$U0r&n g$V$24053$U0r&n g$V$24052$U0r&n))) g$x$15976$U0r&n))) g$x$15976$U0r&n) (eqv? (case-lambda ((g$T$24054$U0r&n) (if g$T$24054$U0r&n (cdr (case-lambda ((g$V$24055$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$24056$U0r&n) ((case-lambda ((g$C$24027$U0r&n g$name$15988$U0r&n g$x$15989$U0r&n) (g$cddr$13508$U0r&n (case-lambda ((g$V$24028$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$24029$U0r&n) ((case-lambda ((g$C$24023$U0r&n g$bindings$15990$U0r&n g$body*$15991$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24024$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24025$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24026$U0r&n) ((case-lambda ((g$C$24019$U0r&n g$lhs*$15992$U0r&n g$lhs**$15993$U0r&n g$rhs*$15994$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24020$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24021$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24022$U0r&n) (g$cons*$12755$U0r&n g$C$24019$U0r&n 'library-letrec* g$name$15988$U0r&n g$V$24022$U0r&n g$V$24020$U0r&n))) list g$lhs*$15992$U0r&n g$lhs**$15993$U0r&n g$V$24021$U0r&n))) g$f$15975$U0r&n g$rhs*$15994$U0r&n))) g$f$15975$U0r&n g$body*$15991$U0r&n))) g$C$24023$U0r&n g$V$24026$U0r&n g$V$24025$U0r&n g$V$24024$U0r&n))) car g$bindings$15990$U0r&n))) g$cadr$13506$U0r&n g$bindings$15990$U0r&n))) g$caddr$13512$U0r&n g$bindings$15990$U0r&n))) g$C$24027$U0r&n g$V$24029$U0r&n g$V$24028$U0r&n))) g$x$15989$U0r&n))) g$x$15989$U0r&n))) g$C$24035$U0r&n g$V$24056$U0r&n g$V$24055$U0r&n))) g$x$15976$U0r&n))) g$x$15976$U0r&n) (eqv? (case-lambda ((g$T$24057$U0r&n) (if g$T$24057$U0r&n (cdr (case-lambda ((g$V$24058$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24059$U0r&n) (cons g$C$24035$U0r&n 'begin g$V$24059$U0r&n))) g$f$15975$U0r&n g$V$24058$U0r&n))) g$x$15976$U0r&n) (eqv? (case-lambda ((g$T$24060$U0r&n) (if g$T$24060$U0r&n (g$caddr$13512$U0r&n (case-lambda ((g$V$24061$U0r&n) (g$f$15975$U0r&n (case-lambda ((g$V$24062$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$24063$U0r&n) (list g$C$24035$U0r&n 'set! g$V$24063$U0r&n g$V$24062$U0r&n))) g$x$15976$U0r&n))) g$V$24061$U0r&n))) g$x$15976$U0r&n) (eqv? (case-lambda ((g$T$24064$U0r&n) (if g$T$24064$U0r&n (g$cadr$13506$U0r&n (case-lambda ((g$V$24065$U0r&n) ((case-lambda ((g$C$24032$U0r&n g$op$15995$U0r&n) (g$current-primitive-locations$15957$U0r&n (case-lambda ((g$V$24033$U0r&n) (g$V$24033$U0r&n (case-lambda ((g$V$24034$U0r&n) ((case-lambda ((g$C$24031$U0r&n g$t$15996$U0r&n) (if g$t$15996$U0r&n ((case-lambda ((g$C$24030$U0r&n g$loc$15997$U0r&n) (g$C$24030$U0r&n g$loc$15997$U0r&n))) g$C$24031$U0r&n g$t$15996$U0r&n) (g$C$24031$U0r&n g$op$15995$U0r&n)))) g$C$24032$U0r&n g$V$24034$U0r&n))) g$op$15995$U0r&n)))))) g$C$24035$U0r&n g$V$24065$U0r&n))) g$x$15976$U0r&n) (eqv? (case-lambda ((g$T$24066$U0r&n) (if g$T$24066$U0r&n (g$C$24035$U0r&n g$x$15976$U0r&n) (list? (case-lambda ((g$T$24067$U0r&n) (if g$T$24067$U0r&n (g$map$12753$U0r&n g$C$24035$U0r&n g$f$15975$U0r&n g$x$15976$U0r&n) (list? (case-lambda ((g$V$24068$U0r&n) (g$error$13787$U0r&n g$C$24035$U0r&n 'rewrite '"invalid form ~s ~s" g$x$15976$U0r&n g$V$24068$U0r&n))) g$x$15976$U0r&n)))) g$x$15976$U0r&n)))) g$t$15977$U0r&n 'define)))) g$t$15977$U0r&n 'primitive)))) g$t$15977$U0r&n 'set!)))) g$t$15977$U0r&n 'begin)))) g$t$15977$U0r&n 'library-letrec*)))) g$t$15977$U0r&n 'letrec*)))) g$t$15977$U0r&n 'letrec)))) g$t$15977$U0r&n 'lambda)))) g$t$15977$U0r&n 'case-lambda)))) g$t$15977$U0r&n 'quote))) g$C$24069$U0r&n g$V$24071$U0r&n))) g$x$15976$U0r&n) (g$C$24069$U0r&n g$x$15976$U0r&n)))) g$x$15976$U0r&n)))) (g$C$24072$U0r&n g$f$15975$U0r&n)))) g$C$24073$U0r&n uninitialized)))))) (library-letrec*-identity 'g$rewriter$15959$U0r&n))) (g$expanded->core$15960$U0r&n g$expanded->core$16005$U0r&n ((case-lambda ((g$C$24084$U0r&n) (g$C$24084$U0r&n (case-lambda ((g$C$24074$U0r&n g$x$15998$U0r&n) (g$rewriter$15959$U0r&n (case-lambda ((g$V$24075$U0r&n) (g$V$24075$U0r&n g$C$24074$U0r&n g$x$15998$U0r&n))) '#t)))))) (library-letrec*-identity 'g$expanded->core$15960$U0r&n))) (g$compile-core-expr$15961$U0r&n g$compile-core-expr$16006$U0r&n ((case-lambda ((g$C$24085$U0r&n) (g$C$24085$U0r&n (case-lambda ((g$C$24076$U0r&n g$x$15999$U0r&n) (g$rewriter$15959$U0r&n (case-lambda ((g$V$24077$U0r&n) (g$V$24077$U0r&n g$C$24076$U0r&n g$x$15999$U0r&n))) '#f)))))) (library-letrec*-identity 'g$compile-core-expr$15961$U0r&n))) (g$compile-core-expr-to-port$15962$U0r&n g$compile-core-expr-to-port$16007$U0r&n ((case-lambda ((g$C$24086$U0r&n) (g$C$24086$U0r&n (case-lambda ((g$C$24078$U0r&n g$x$16000$U0r&n g$p$16001$U0r&n) (g$rewriter$15959$U0r&n (case-lambda ((g$V$24079$U0r&n) (g$V$24079$U0r&n (case-lambda ((g$V$24080$U0r&n) (g$pretty-print$15638$U0r&n g$C$24078$U0r&n g$V$24080$U0r&n g$p$16001$U0r&n))) g$x$16000$U0r&n))) '#f)))))) (library-letrec*-identity 'g$compile-core-expr-to-port$15962$U0r&n)))) (void identity-for-cps))(library-letrec* (psyntax library-manager) ((g$make-collection$16008$U0r&n g$make-collection$16216$U0r&n ((case-lambda ((g$C$24430$U0r&n) (g$C$24430$U0r&n (case-lambda ((g$C$24095$U0r&n) ((case-lambda ((g$C$24094$U0r&n g$set$16071$U0r&n) ((case-lambda ((g$C$24093$U0r&n g$set-cons$16072$U0r&n) (begin (set! g$set-cons$16072$U0r&n (case-lambda ((g$C$24087$U0r&n g$x$16076$U0r&n g$ls$16077$U0r&n) (g$memq$12745$U0r&n (case-lambda ((g$T$24088$U0r&n) (if g$T$24088$U0r&n (g$C$24087$U0r&n g$ls$16077$U0r&n) (cons g$C$24087$U0r&n g$x$16076$U0r&n g$ls$16077$U0r&n)))) g$x$16076$U0r&n g$ls$16077$U0r&n)))) (g$C$24093$U0r&n (case-lambda ((g$C$24089$U0r&n) (g$C$24089$U0r&n g$set$16071$U0r&n)) ((g$C$24089$U0r&n g$x$16073$U0r&n) (g$set-cons$16072$U0r&n (case-lambda ((g$V$24090$U0r&n) (begin (set! g$set$16071$U0r&n g$V$24090$U0r&n) (g$C$24089$U0r&n (cps-void))))) g$x$16073$U0r&n g$set$16071$U0r&n)) ((g$C$24089$U0r&n g$x$16074$U0r&n g$del?$16075$U0r&n) (if g$del?$16075$U0r&n (g$remq$12760$U0r&n (case-lambda ((g$V$24091$U0r&n) (begin (set! g$set$16071$U0r&n g$V$24091$U0r&n) (g$C$24089$U0r&n (cps-void))))) g$x$16074$U0r&n g$set$16071$U0r&n) (g$set-cons$16072$U0r&n (case-lambda ((g$V$24092$U0r&n) (begin (set! g$set$16071$U0r&n g$V$24092$U0r&n) (g$C$24089$U0r&n (cps-void))))) g$x$16074$U0r&n g$set$16071$U0r&n)))))))) g$C$24094$U0r&n uninitialized))) g$C$24095$U0r&n '())))))) (library-letrec*-identity 'g$make-collection$16008$U0r&n))) (g$current-library-collection$16009$U0r&n g$current-library-collection$16217$U0r&n ((case-lambda ((g$C$24431$U0r&n) (g$make-collection$16008$U0r&n (case-lambda ((g$V$24432$U0r&n) (g$make-parameter$15428$U0r&n g$C$24431$U0r&n g$V$24432$U0r&n (case-lambda ((g$C$24096$U0r&n g$x$16078$U0r&n) ((case-lambda ((g$J$24098$U0r&n) (g$procedure?$13498$U0r&n (case-lambda ((g$V$24099$U0r&n) (not (case-lambda ((g$T$24100$U0r&n) (if g$T$24100$U0r&n (g$assertion-violation$13786$U0r&n g$J$24098$U0r&n 'current-library-collection '"not a procedure" g$x$16078$U0r&n) (void g$J$24098$U0r&n)))) g$V$24099$U0r&n))) g$x$16078$U0r&n))) (case-lambda (g$IGNORE$24097$U0r&n (g$C$24096$U0r&n g$x$16078$U0r&n)))))))))))) (library-letrec*-identity 'g$current-library-collection$16009$U0r&n))) (g$7853$16010$U0r&n g$7853$16218$U0r&n ((case-lambda ((g$C$24433$U0r&n) (make-record-type-descriptor g$C$24433$U0r&n 'library '#f 'g$7856$U0r&n '#t '#t '#((mutable id) (mutable name) (mutable version) (mutable imp*) (mutable vis*) (mutable inv*) (mutable subst) (mutable env) (mutable visit-state) (mutable invoke-state) (mutable visit-code) (mutable invoke-code) (mutable visible?) (mutable source-file-name))))) (library-letrec*-identity 'g$7853$16010$U0r&n))) (g$7855$16011$U0r&n g$7855$16219$U0r&n ((case-lambda ((g$C$24434$U0r&n) (g$C$24434$U0r&n '#f))) (library-letrec*-identity 'g$7855$16011$U0r&n))) (g$7854$16012$U0r&n g$7854$16220$U0r&n ((case-lambda ((g$C$24435$U0r&n) (make-record-constructor-descriptor g$C$24435$U0r&n g$7853$16010$U0r&n '#f g$7855$16011$U0r&n))) (library-letrec*-identity 'g$7854$16012$U0r&n))) (g$library?$16015$U0r&n g$library?$16221$U0r&n ((case-lambda ((g$C$24436$U0r&n) (record-predicate g$C$24436$U0r&n g$7853$16010$U0r&n))) (library-letrec*-identity 'g$library?$16015$U0r&n))) (g$make-library$16016$U0r&n g$make-library$16222$U0r&n ((case-lambda ((g$C$24437$U0r&n) (record-constructor g$C$24437$U0r&n g$7854$16012$U0r&n))) (library-letrec*-identity 'g$make-library$16016$U0r&n))) (g$library-id$16017$U0r&n g$library-id$16223$U0r&n ((case-lambda ((g$C$24438$U0r&n) (record-accessor g$C$24438$U0r&n g$7853$16010$U0r&n '0))) (library-letrec*-identity 'g$library-id$16017$U0r&n))) (g$library-name$16018$U0r&n g$library-name$16224$U0r&n ((case-lambda ((g$C$24439$U0r&n) (record-accessor g$C$24439$U0r&n g$7853$16010$U0r&n '1))) (library-letrec*-identity 'g$library-name$16018$U0r&n))) (g$library-version$16019$U0r&n g$library-version$16225$U0r&n ((case-lambda ((g$C$24440$U0r&n) (record-accessor g$C$24440$U0r&n g$7853$16010$U0r&n '2))) (library-letrec*-identity 'g$library-version$16019$U0r&n))) (g$library-imp*$16020$U0r&n g$library-imp*$16226$U0r&n ((case-lambda ((g$C$24441$U0r&n) (record-accessor g$C$24441$U0r&n g$7853$16010$U0r&n '3))) (library-letrec*-identity 'g$library-imp*$16020$U0r&n))) (g$library-vis*$16021$U0r&n g$library-vis*$16227$U0r&n ((case-lambda ((g$C$24442$U0r&n) (record-accessor g$C$24442$U0r&n g$7853$16010$U0r&n '4))) (library-letrec*-identity 'g$library-vis*$16021$U0r&n))) (g$library-inv*$16022$U0r&n g$library-inv*$16228$U0r&n ((case-lambda ((g$C$24443$U0r&n) (record-accessor g$C$24443$U0r&n g$7853$16010$U0r&n '5))) (library-letrec*-identity 'g$library-inv*$16022$U0r&n))) (g$library-subst$16023$U0r&n g$library-subst$16229$U0r&n ((case-lambda ((g$C$24444$U0r&n) (record-accessor g$C$24444$U0r&n g$7853$16010$U0r&n '6))) (library-letrec*-identity 'g$library-subst$16023$U0r&n))) (g$library-env$16024$U0r&n g$library-env$16230$U0r&n ((case-lambda ((g$C$24445$U0r&n) (record-accessor g$C$24445$U0r&n g$7853$16010$U0r&n '7))) (library-letrec*-identity 'g$library-env$16024$U0r&n))) (g$library-visit-state$16025$U0r&n g$library-visit-state$16231$U0r&n ((case-lambda ((g$C$24446$U0r&n) (record-accessor g$C$24446$U0r&n g$7853$16010$U0r&n '8))) (library-letrec*-identity 'g$library-visit-state$16025$U0r&n))) (g$library-invoke-state$16026$U0r&n g$library-invoke-state$16232$U0r&n ((case-lambda ((g$C$24447$U0r&n) (record-accessor g$C$24447$U0r&n g$7853$16010$U0r&n '9))) (library-letrec*-identity 'g$library-invoke-state$16026$U0r&n))) (g$library-visit-code$16027$U0r&n g$library-visit-code$16233$U0r&n ((case-lambda ((g$C$24448$U0r&n) (record-accessor g$C$24448$U0r&n g$7853$16010$U0r&n '10))) (library-letrec*-identity 'g$library-visit-code$16027$U0r&n))) (g$library-invoke-code$16028$U0r&n g$library-invoke-code$16234$U0r&n ((case-lambda ((g$C$24449$U0r&n) (record-accessor g$C$24449$U0r&n g$7853$16010$U0r&n '11))) (library-letrec*-identity 'g$library-invoke-code$16028$U0r&n))) (g$library-visible?$16029$U0r&n g$library-visible?$16235$U0r&n ((case-lambda ((g$C$24450$U0r&n) (record-accessor g$C$24450$U0r&n g$7853$16010$U0r&n '12))) (library-letrec*-identity 'g$library-visible?$16029$U0r&n))) (g$library-source-file-name$16030$U0r&n g$library-source-file-name$16236$U0r&n ((case-lambda ((g$C$24451$U0r&n) (record-accessor g$C$24451$U0r&n g$7853$16010$U0r&n '13))) (library-letrec*-identity 'g$library-source-file-name$16030$U0r&n))) (g$set-library-id!$16031$U0r&n g$set-library-id!$16237$U0r&n ((case-lambda ((g$C$24452$U0r&n) (record-mutator g$C$24452$U0r&n g$7853$16010$U0r&n '0))) (library-letrec*-identity 'g$set-library-id!$16031$U0r&n))) (g$set-library-name!$16032$U0r&n g$set-library-name!$16238$U0r&n ((case-lambda ((g$C$24453$U0r&n) (record-mutator g$C$24453$U0r&n g$7853$16010$U0r&n '1))) (library-letrec*-identity 'g$set-library-name!$16032$U0r&n))) (g$set-library-version!$16033$U0r&n g$set-library-version!$16239$U0r&n ((case-lambda ((g$C$24454$U0r&n) (record-mutator g$C$24454$U0r&n g$7853$16010$U0r&n '2))) (library-letrec*-identity 'g$set-library-version!$16033$U0r&n))) (g$set-library-imp*!$16034$U0r&n g$set-library-imp*!$16240$U0r&n ((case-lambda ((g$C$24455$U0r&n) (record-mutator g$C$24455$U0r&n g$7853$16010$U0r&n '3))) (library-letrec*-identity 'g$set-library-imp*!$16034$U0r&n))) (g$set-library-vis*!$16035$U0r&n g$set-library-vis*!$16241$U0r&n ((case-lambda ((g$C$24456$U0r&n) (record-mutator g$C$24456$U0r&n g$7853$16010$U0r&n '4))) (library-letrec*-identity 'g$set-library-vis*!$16035$U0r&n))) (g$set-library-inv*!$16036$U0r&n g$set-library-inv*!$16242$U0r&n ((case-lambda ((g$C$24457$U0r&n) (record-mutator g$C$24457$U0r&n g$7853$16010$U0r&n '5))) (library-letrec*-identity 'g$set-library-inv*!$16036$U0r&n))) (g$set-library-subst!$16037$U0r&n g$set-library-subst!$16243$U0r&n ((case-lambda ((g$C$24458$U0r&n) (record-mutator g$C$24458$U0r&n g$7853$16010$U0r&n '6))) (library-letrec*-identity 'g$set-library-subst!$16037$U0r&n))) (g$set-library-env!$16038$U0r&n g$set-library-env!$16244$U0r&n ((case-lambda ((g$C$24459$U0r&n) (record-mutator g$C$24459$U0r&n g$7853$16010$U0r&n '7))) (library-letrec*-identity 'g$set-library-env!$16038$U0r&n))) (g$set-library-visit-state!$16039$U0r&n g$set-library-visit-state!$16245$U0r&n ((case-lambda ((g$C$24460$U0r&n) (record-mutator g$C$24460$U0r&n g$7853$16010$U0r&n '8))) (library-letrec*-identity 'g$set-library-visit-state!$16039$U0r&n))) (g$set-library-invoke-state!$16040$U0r&n g$set-library-invoke-state!$16246$U0r&n ((case-lambda ((g$C$24461$U0r&n) (record-mutator g$C$24461$U0r&n g$7853$16010$U0r&n '9))) (library-letrec*-identity 'g$set-library-invoke-state!$16040$U0r&n))) (g$set-library-visit-code!$16041$U0r&n g$set-library-visit-code!$16247$U0r&n ((case-lambda ((g$C$24462$U0r&n) (record-mutator g$C$24462$U0r&n g$7853$16010$U0r&n '10))) (library-letrec*-identity 'g$set-library-visit-code!$16041$U0r&n))) (g$set-library-invoke-code!$16042$U0r&n g$set-library-invoke-code!$16248$U0r&n ((case-lambda ((g$C$24463$U0r&n) (record-mutator g$C$24463$U0r&n g$7853$16010$U0r&n '11))) (library-letrec*-identity 'g$set-library-invoke-code!$16042$U0r&n))) (g$set-library-visible?!$16043$U0r&n g$set-library-visible?!$16249$U0r&n ((case-lambda ((g$C$24464$U0r&n) (record-mutator g$C$24464$U0r&n g$7853$16010$U0r&n '12))) (library-letrec*-identity 'g$set-library-visible?!$16043$U0r&n))) (g$set-library-source-file-name!$16044$U0r&n g$set-library-source-file-name!$16250$U0r&n ((case-lambda ((g$C$24465$U0r&n) (record-mutator g$C$24465$U0r&n g$7853$16010$U0r&n '13))) (library-letrec*-identity 'g$set-library-source-file-name!$16044$U0r&n))) (g$rp$16045$U0r&n g$rp$16251$U0r&n ((case-lambda ((g$C$24466$U0r&n) (make-record-printer g$C$24466$U0r&n 'library (case-lambda ((g$C$24101$U0r&n g$x$16079$U0r&n g$p$16080$U0r&n g$wr$16081$U0r&n) ((case-lambda ((g$J$24111$U0r&n) (g$library?$16015$U0r&n (case-lambda ((g$V$24112$U0r&n) (not (case-lambda ((g$T$24113$U0r&n) (if g$T$24113$U0r&n (g$assertion-violation$13786$U0r&n g$J$24111$U0r&n 'record-type-printer '"not a library") (void g$J$24111$U0r&n)))) g$V$24112$U0r&n))) g$x$16079$U0r&n))) (case-lambda (g$IGNORE$24102$U0r&n ((case-lambda ((g$J$24105$U0r&n) (g$library-version$16019$U0r&n (case-lambda ((g$V$24106$U0r&n) (null? (case-lambda ((g$T$24107$U0r&n) (if g$T$24107$U0r&n (g$library-name$16018$U0r&n g$J$24105$U0r&n g$x$16079$U0r&n) (g$library-version$16019$U0r&n (case-lambda ((g$V$24108$U0r&n) (list (case-lambda ((g$V$24109$U0r&n) (g$library-name$16018$U0r&n (case-lambda ((g$V$24110$U0r&n) (append g$J$24105$U0r&n g$V$24110$U0r&n g$V$24109$U0r&n))) g$x$16079$U0r&n))) g$V$24108$U0r&n))) g$x$16079$U0r&n)))) g$V$24106$U0r&n))) g$x$16079$U0r&n))) (case-lambda ((g$V$24103$U0r&n) (g$format$15219$U0r&n (case-lambda ((g$V$24104$U0r&n) (display g$C$24101$U0r&n g$V$24104$U0r&n g$p$16080$U0r&n))) '"#<library ~s>" g$V$24103$U0r&n)))))))))))) (library-letrec*-identity 'g$rp$16045$U0r&n))) (g$find-dependencies$16046$U0r&n g$find-dependencies$16252$U0r&n ((case-lambda ((g$C$24467$U0r&n) (g$C$24467$U0r&n (case-lambda ((g$C$24114$U0r&n g$ls$16082$U0r&n) (null? (case-lambda ((g$T$24115$U0r&n) (if g$T$24115$U0r&n (g$C$24114$U0r&n '()) (g$assertion-violation$13786$U0r&n g$C$24114$U0r&n 'find-dependencies '"cannot handle deps yet")))) g$ls$16082$U0r&n)))))) (library-letrec*-identity 'g$find-dependencies$16046$U0r&n))) (g$find-library-by$16047$U0r&n g$find-library-by$16253$U0r&n ((case-lambda ((g$C$24468$U0r&n) (g$C$24468$U0r&n (case-lambda ((g$C$24124$U0r&n g$pred$16083$U0r&n) (g$current-library-collection$16009$U0r&n (case-lambda ((g$V$24125$U0r&n) (g$V$24125$U0r&n (case-lambda ((g$V$24126$U0r&n) ((case-lambda ((g$C$24123$U0r&n g$f$16084$U0r&n) ((case-lambda ((g$C$24117$U0r&n g$f$24116$U0r&n) (begin (set! g$f$16084$U0r&n g$f$24116$U0r&n) (g$C$24117$U0r&n g$f$16084$U0r&n)))) g$C$24123$U0r&n (case-lambda ((g$C$24118$U0r&n g$ls$16085$U0r&n) (null? (case-lambda ((g$T$24119$U0r&n) (if g$T$24119$U0r&n (g$C$24118$U0r&n '#f) (car (case-lambda ((g$V$24120$U0r&n) (g$pred$16083$U0r&n (case-lambda ((g$T$24121$U0r&n) (if g$T$24121$U0r&n (car g$C$24118$U0r&n g$ls$16085$U0r&n) (cdr (case-lambda ((g$V$24122$U0r&n) (g$f$16084$U0r&n g$C$24118$U0r&n g$V$24122$U0r&n))) g$ls$16085$U0r&n)))) g$V$24120$U0r&n))) g$ls$16085$U0r&n)))) g$ls$16085$U0r&n)))))) (case-lambda ((g$V$24127$U0r&n) (g$V$24127$U0r&n g$C$24124$U0r&n g$V$24126$U0r&n))) uninitialized)))))))))))) (library-letrec*-identity 'g$find-library-by$16047$U0r&n))) (g$library-path$16048$U0r&n g$library-path$16254$U0r&n ((case-lambda ((g$C$24469$U0r&n) (g$make-parameter$15428$U0r&n g$C$24469$U0r&n '(".") (case-lambda ((g$C$24129$U0r&n g$x$16086$U0r&n) ((case-lambda ((g$J$24131$U0r&n) (list? (case-lambda ((g$T$24132$U0r&n) (if g$T$24132$U0r&n (g$for-all$12751$U0r&n g$J$24131$U0r&n string? g$x$16086$U0r&n) (g$J$24131$U0r&n '#f)))) g$x$16086$U0r&n))) (case-lambda ((g$T$24130$U0r&n) (if g$T$24130$U0r&n (g$map$12753$U0r&n g$C$24129$U0r&n (case-lambda ((g$C$24128$U0r&n g$x$16087$U0r&n) (g$C$24128$U0r&n g$x$16087$U0r&n))) g$x$16086$U0r&n) (g$assertion-violation$13786$U0r&n g$C$24129$U0r&n 'library-path '"not a list of strings" g$x$16086$U0r&n)))))))))) (library-letrec*-identity 'g$library-path$16048$U0r&n))) (g$library-extensions$16049$U0r&n g$library-extensions$16255$U0r&n ((case-lambda ((g$C$24470$U0r&n) (g$make-parameter$15428$U0r&n g$C$24470$U0r&n '(".sls" ".ss") (case-lambda ((g$C$24134$U0r&n g$x$16088$U0r&n) ((case-lambda ((g$J$24136$U0r&n) (list? (case-lambda ((g$T$24137$U0r&n) (if g$T$24137$U0r&n (g$for-all$12751$U0r&n g$J$24136$U0r&n string? g$x$16088$U0r&n) (g$J$24136$U0r&n '#f)))) g$x$16088$U0r&n))) (case-lambda ((g$T$24135$U0r&n) (if g$T$24135$U0r&n (g$map$12753$U0r&n g$C$24134$U0r&n (case-lambda ((g$C$24133$U0r&n g$x$16089$U0r&n) (g$C$24133$U0r&n g$x$16089$U0r&n))) g$x$16088$U0r&n) (g$assertion-violation$13786$U0r&n g$C$24134$U0r&n 'library-extensions '"not a list of strings" g$x$16088$U0r&n)))))))))) (library-letrec*-identity 'g$library-extensions$16049$U0r&n))) (g$library-name->file-name$16050$U0r&n g$library-name->file-name$16256$U0r&n ((case-lambda ((g$C$24471$U0r&n) (g$C$24471$U0r&n (case-lambda ((g$C$24176$U0r&n g$x$16090$U0r&n) (call-with-values g$C$24176$U0r&n (case-lambda ((g$C$24138$U0r&n) (g$open-string-output-port$14979$U0r&n g$C$24138$U0r&n))) (case-lambda ((g$C$24175$U0r&n g$p$16093$U0r&n g$extract$16094$U0r&n) ((case-lambda ((g$C$24174$U0r&n g$extract$16095$U0r&n g$p$16096$U0r&n) ((case-lambda ((g$C$24171$U0r&n g$display-hex$16097$U0r&n) (begin (set! g$display-hex$16097$U0r&n (case-lambda ((g$C$24139$U0r&n g$n$16105$U0r&n) (<= (case-lambda ((g$T$24140$U0r&n) (if g$T$24140$U0r&n (display g$C$24139$U0r&n g$n$16105$U0r&n g$p$16096$U0r&n) (- (case-lambda ((g$V$24141$U0r&n) (char->integer (case-lambda ((g$V$24142$U0r&n) (+ (case-lambda ((g$V$24143$U0r&n) (integer->char (case-lambda ((g$V$24144$U0r&n) (display g$C$24139$U0r&n g$V$24144$U0r&n g$p$16096$U0r&n))) g$V$24143$U0r&n))) g$V$24142$U0r&n g$V$24141$U0r&n))) '#\A))) g$n$16105$U0r&n '10)))) '0 g$n$16105$U0r&n '9)))) ((case-lambda ((g$C$24170$U0r&n g$f$16098$U0r&n) ((case-lambda ((g$C$24146$U0r&n g$f$24145$U0r&n) (begin (set! g$f$16098$U0r&n g$f$24145$U0r&n) (g$C$24146$U0r&n g$f$16098$U0r&n)))) g$C$24170$U0r&n (case-lambda ((g$C$24161$U0r&n g$ls$16099$U0r&n) (null? (case-lambda ((g$V$24162$U0r&n) (not (case-lambda ((g$T$24163$U0r&n) (if g$T$24163$U0r&n (display (case-lambda (g$IGNORE$24164$U0r&n (car (case-lambda ((g$V$24165$U0r&n) (symbol->string (case-lambda ((g$V$24166$U0r&n) (string->list (case-lambda ((g$V$24167$U0r&n) (g$for-each$12754$U0r&n (case-lambda (g$IGNORE$24168$U0r&n (cdr (case-lambda ((g$V$24169$U0r&n) (g$f$16098$U0r&n g$C$24161$U0r&n g$V$24169$U0r&n))) g$ls$16099$U0r&n))) (case-lambda ((g$C$24156$U0r&n g$c$16100$U0r&n) (g$char<=?$13552$U0r&n (case-lambda ((g$V$24157$U0r&n) ((case-lambda ((g$C$24150$U0r&n g$t$16101$U0r&n) (if g$t$16101$U0r&n (g$C$24150$U0r&n g$t$16101$U0r&n) (g$char<=?$13552$U0r&n (case-lambda ((g$V$24151$U0r&n) ((case-lambda ((g$C$24148$U0r&n g$t$16102$U0r&n) (if g$t$16102$U0r&n (g$C$24148$U0r&n g$t$16102$U0r&n) (g$char<=?$13552$U0r&n (case-lambda ((g$V$24149$U0r&n) ((case-lambda ((g$C$24147$U0r&n g$t$16103$U0r&n) (if g$t$16103$U0r&n (g$C$24147$U0r&n g$t$16103$U0r&n) (g$memv$12746$U0r&n g$C$24147$U0r&n g$c$16100$U0r&n '(#\- #\. #\_ #\~))))) g$C$24148$U0r&n g$V$24149$U0r&n))) '#\0 g$c$16100$U0r&n '#\9)))) g$C$24150$U0r&n g$V$24151$U0r&n))) '#\A g$c$16100$U0r&n '#\Z)))) (case-lambda ((g$T$24158$U0r&n) (if g$T$24158$U0r&n (display g$C$24156$U0r&n g$c$16100$U0r&n g$p$16096$U0r&n) (display (case-lambda (g$IGNORE$24159$U0r&n (char->integer (case-lambda ((g$V$24160$U0r&n) ((case-lambda ((g$C$24152$U0r&n g$n$16104$U0r&n) (g$quotient$14461$U0r&n (case-lambda ((g$V$24153$U0r&n) (g$display-hex$16097$U0r&n (case-lambda (g$IGNORE$24154$U0r&n (g$remainder$14462$U0r&n (case-lambda ((g$V$24155$U0r&n) (g$display-hex$16097$U0r&n g$C$24152$U0r&n g$V$24155$U0r&n))) g$n$16104$U0r&n '16))) g$V$24153$U0r&n))) g$n$16104$U0r&n '16))) g$C$24156$U0r&n g$V$24160$U0r&n))) g$c$16100$U0r&n))) '"%" g$p$16096$U0r&n)))) g$V$24157$U0r&n))) '#\a g$c$16100$U0r&n '#\z))) g$V$24167$U0r&n))) g$V$24166$U0r&n))) g$V$24165$U0r&n))) g$ls$16099$U0r&n))) '"/" g$p$16096$U0r&n) (void g$C$24161$U0r&n)))) g$V$24162$U0r&n))) g$ls$16099$U0r&n)))))) (case-lambda ((g$V$24172$U0r&n) (g$V$24172$U0r&n (case-lambda (g$IGNORE$24173$U0r&n (g$extract$16095$U0r&n g$C$24171$U0r&n))) g$x$16090$U0r&n))) uninitialized)))) g$C$24174$U0r&n uninitialized))) g$C$24175$U0r&n g$extract$16094$U0r&n g$p$16093$U0r&n))))))))) (library-letrec*-identity 'g$library-name->file-name$16050$U0r&n))) (g$file-locator$16051$U0r&n g$file-locator$16257$U0r&n ((case-lambda ((g$C$24472$U0r&n) (g$make-parameter$15428$U0r&n g$C$24472$U0r&n (case-lambda ((g$C$24197$U0r&n g$x$16106$U0r&n) (g$library-name->file-name$16050$U0r&n (case-lambda ((g$V$24198$U0r&n) ((case-lambda ((g$C$24193$U0r&n g$str$16107$U0r&n) (g$library-extensions$16049$U0r&n (case-lambda ((g$V$24194$U0r&n) (g$library-path$16048$U0r&n (case-lambda ((g$V$24195$U0r&n) ((case-lambda ((g$C$24192$U0r&n g$f$16108$U0r&n) ((case-lambda ((g$C$24178$U0r&n g$f$24177$U0r&n) (begin (set! g$f$16108$U0r&n g$f$24177$U0r&n) (g$C$24178$U0r&n g$f$16108$U0r&n)))) g$C$24192$U0r&n (case-lambda ((g$C$24183$U0r&n g$ls$16109$U0r&n g$exts$16110$U0r&n g$failed-list$16111$U0r&n) (null? (case-lambda ((g$T$24184$U0r&n) (if g$T$24184$U0r&n (g$reverse$13504$U0r&n (case-lambda ((g$V$24185$U0r&n) (g$file-locator-resolution-error$15426$U0r&n g$C$24183$U0r&n g$x$16106$U0r&n g$V$24185$U0r&n))) g$failed-list$16111$U0r&n) (null? (case-lambda ((g$T$24186$U0r&n) (if g$T$24186$U0r&n (g$library-extensions$16049$U0r&n (case-lambda ((g$V$24187$U0r&n) (cdr (case-lambda ((g$V$24188$U0r&n) (g$f$16108$U0r&n g$C$24183$U0r&n g$V$24188$U0r&n g$V$24187$U0r&n g$failed-list$16111$U0r&n))) g$ls$16109$U0r&n)))) (car (case-lambda ((g$V$24189$U0r&n) (car (case-lambda ((g$V$24190$U0r&n) (string-append (case-lambda ((g$V$24191$U0r&n) ((case-lambda ((g$C$24179$U0r&n g$name$16112$U0r&n) (g$file-exists?$13615$U0r&n (case-lambda ((g$T$24180$U0r&n) (if g$T$24180$U0r&n (g$C$24179$U0r&n g$name$16112$U0r&n) (cons (case-lambda ((g$V$24181$U0r&n) (cdr (case-lambda ((g$V$24182$U0r&n) (g$f$16108$U0r&n g$C$24179$U0r&n g$ls$16109$U0r&n g$V$24182$U0r&n g$V$24181$U0r&n))) g$exts$16110$U0r&n))) g$name$16112$U0r&n g$failed-list$16111$U0r&n)))) g$name$16112$U0r&n))) g$C$24183$U0r&n g$V$24191$U0r&n))) g$V$24190$U0r&n g$str$16107$U0r&n g$V$24189$U0r&n))) g$ls$16109$U0r&n))) g$exts$16110$U0r&n)))) g$exts$16110$U0r&n)))) g$ls$16109$U0r&n)))))) (case-lambda ((g$V$24196$U0r&n) (g$V$24196$U0r&n g$C$24193$U0r&n g$V$24195$U0r&n g$V$24194$U0r&n '()))) uninitialized))))))))) g$C$24197$U0r&n g$V$24198$U0r&n))) g$x$16106$U0r&n))) (case-lambda ((g$C$24199$U0r&n g$f$16113$U0r&n) (g$procedure?$13498$U0r&n (case-lambda ((g$T$24200$U0r&n) (if g$T$24200$U0r&n (g$C$24199$U0r&n g$f$16113$U0r&n) (g$assertion-violation$13786$U0r&n g$C$24199$U0r&n 'file-locator '"not a procedure" g$f$16113$U0r&n)))) g$f$16113$U0r&n)))))) (library-letrec*-identity 'g$file-locator$16051$U0r&n))) (g$serialize-all$16052$U0r&n g$serialize-all$16258$U0r&n ((case-lambda ((g$C$24473$U0r&n) (g$C$24473$U0r&n (case-lambda ((g$C$24227$U0r&n g$serialize$16114$U0r&n g$compile$16115$U0r&n) ((case-lambda ((g$C$24224$U0r&n g$library-desc$16116$U0r&n) (begin (set! g$library-desc$16116$U0r&n (case-lambda ((g$C$24201$U0r&n g$x$16118$U0r&n) (g$library-name$16018$U0r&n (case-lambda ((g$V$24202$U0r&n) (g$library-id$16017$U0r&n (case-lambda ((g$V$24203$U0r&n) (list g$C$24201$U0r&n g$V$24203$U0r&n g$V$24202$U0r&n))) g$x$16118$U0r&n))) g$x$16118$U0r&n)))) (g$current-library-collection$16009$U0r&n (case-lambda ((g$V$24225$U0r&n) (g$V$24225$U0r&n (case-lambda ((g$V$24226$U0r&n) (g$for-each$12754$U0r&n g$C$24224$U0r&n (case-lambda ((g$C$24204$U0r&n g$x$16117$U0r&n) (g$library-source-file-name$16030$U0r&n (case-lambda ((g$T$24205$U0r&n) (if g$T$24205$U0r&n (g$library-visible?$16029$U0r&n (case-lambda ((g$V$24206$U0r&n) (g$library-invoke-code$16028$U0r&n (case-lambda ((g$V$24207$U0r&n) (g$compile$16115$U0r&n (case-lambda ((g$V$24208$U0r&n) (g$library-visit-code$16027$U0r&n (case-lambda ((g$V$24209$U0r&n) (g$compile$16115$U0r&n (case-lambda ((g$V$24210$U0r&n) (g$library-env$16024$U0r&n (case-lambda ((g$V$24211$U0r&n) (g$library-subst$16023$U0r&n (case-lambda ((g$V$24212$U0r&n) (g$library-inv*$16022$U0r&n (case-lambda ((g$V$24213$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24214$U0r&n) (g$library-vis*$16021$U0r&n (case-lambda ((g$V$24215$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24216$U0r&n) (g$library-imp*$16020$U0r&n (case-lambda ((g$V$24217$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24218$U0r&n) (g$library-version$16019$U0r&n (case-lambda ((g$V$24219$U0r&n) (g$library-name$16018$U0r&n (case-lambda ((g$V$24220$U0r&n) (g$library-id$16017$U0r&n (case-lambda ((g$V$24221$U0r&n) (list (case-lambda ((g$V$24222$U0r&n) (g$library-source-file-name$16030$U0r&n (case-lambda ((g$V$24223$U0r&n) (g$serialize$16114$U0r&n g$C$24204$U0r&n g$V$24223$U0r&n g$V$24222$U0r&n))) g$x$16117$U0r&n))) g$V$24221$U0r&n g$V$24220$U0r&n g$V$24219$U0r&n g$V$24218$U0r&n g$V$24216$U0r&n g$V$24214$U0r&n g$V$24212$U0r&n g$V$24211$U0r&n g$V$24210$U0r&n g$V$24208$U0r&n g$V$24206$U0r&n))) g$x$16117$U0r&n))) g$x$16117$U0r&n))) g$x$16117$U0r&n))) g$library-desc$16116$U0r&n g$V$24217$U0r&n))) g$x$16117$U0r&n))) g$library-desc$16116$U0r&n g$V$24215$U0r&n))) g$x$16117$U0r&n))) g$library-desc$16116$U0r&n g$V$24213$U0r&n))) g$x$16117$U0r&n))) g$x$16117$U0r&n))) g$x$16117$U0r&n))) g$V$24209$U0r&n))) g$x$16117$U0r&n))) g$V$24207$U0r&n))) g$x$16117$U0r&n))) g$x$16117$U0r&n) (void g$C$24204$U0r&n)))) g$x$16117$U0r&n))) g$V$24226$U0r&n)))))))))) g$C$24227$U0r&n uninitialized)))))) (library-letrec*-identity 'g$serialize-all$16052$U0r&n))) (g$current-precompiled-library-loader$16053$U0r&n g$current-precompiled-library-loader$16259$U0r&n ((case-lambda ((g$C$24474$U0r&n) (g$make-parameter$15428$U0r&n g$C$24474$U0r&n (case-lambda ((g$C$24228$U0r&n g$filename$16119$U0r&n g$sk$16120$U0r&n) (g$C$24228$U0r&n '#f)))))) (library-letrec*-identity 'g$current-precompiled-library-loader$16053$U0r&n))) (g$try-load-from-file$16054$U0r&n g$try-load-from-file$16260$U0r&n ((case-lambda ((g$C$24475$U0r&n) (g$C$24475$U0r&n (case-lambda ((g$C$24251$U0r&n g$filename$16121$U0r&n) (g$current-precompiled-library-loader$16053$U0r&n (case-lambda ((g$V$24252$U0r&n) (g$V$24252$U0r&n g$C$24251$U0r&n g$filename$16121$U0r&n (case-lambda ((g$C$24248$U0r&n g$id$16122$U0r&n g$name$16123$U0r&n g$ver$16124$U0r&n g$imp*$16125$U0r&n g$vis*$16126$U0r&n g$inv*$16127$U0r&n g$exp-subst$16128$U0r&n g$exp-env$16129$U0r&n g$visit-proc$16130$U0r&n g$invoke-proc$16131$U0r&n g$visible?$16132$U0r&n) (append (case-lambda ((g$V$24249$U0r&n) ((case-lambda ((g$C$24247$U0r&n g$f$16133$U0r&n) ((case-lambda ((g$C$24230$U0r&n g$f$24229$U0r&n) (begin (set! g$f$16133$U0r&n g$f$24229$U0r&n) (g$C$24230$U0r&n g$f$16133$U0r&n)))) g$C$24247$U0r&n (case-lambda ((g$C$24243$U0r&n g$deps$16134$U0r&n) (null? (case-lambda ((g$T$24244$U0r&n) (if g$T$24244$U0r&n (g$install-library$16064$U0r&n (case-lambda (g$IGNORE$24245$U0r&n (g$C$24243$U0r&n '#t))) g$id$16122$U0r&n g$name$16123$U0r&n g$ver$16124$U0r&n g$imp*$16125$U0r&n g$vis*$16126$U0r&n g$inv*$16127$U0r&n g$exp-subst$16128$U0r&n g$exp-env$16129$U0r&n g$visit-proc$16130$U0r&n g$invoke-proc$16131$U0r&n '#f '#f g$visible?$16132$U0r&n '#f) (car (case-lambda ((g$V$24246$U0r&n) ((case-lambda ((g$C$24240$U0r&n g$d$16135$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$24241$U0r&n) (car (case-lambda ((g$V$24242$U0r&n) ((case-lambda ((g$C$24238$U0r&n g$label$16136$U0r&n g$dname$16137$U0r&n) (g$find-library-by-name$16059$U0r&n (case-lambda ((g$V$24239$U0r&n) ((case-lambda ((g$C$24231$U0r&n g$l$16138$U0r&n) ((case-lambda ((g$J$24235$U0r&n) (g$library?$16015$U0r&n (case-lambda ((g$T$24236$U0r&n) (if g$T$24236$U0r&n (g$library-id$16017$U0r&n (case-lambda ((g$V$24237$U0r&n) (eq? g$J$24235$U0r&n g$label$16136$U0r&n g$V$24237$U0r&n))) g$l$16138$U0r&n) (g$J$24235$U0r&n '#f)))) g$l$16138$U0r&n))) (case-lambda ((g$T$24232$U0r&n) (if g$T$24232$U0r&n (cdr (case-lambda ((g$V$24233$U0r&n) (g$f$16133$U0r&n g$C$24231$U0r&n g$V$24233$U0r&n))) g$deps$16134$U0r&n) (g$library-version-mismatch-warning$15425$U0r&n (case-lambda (g$IGNORE$24234$U0r&n (g$C$24231$U0r&n '#f))) g$name$16123$U0r&n g$dname$16137$U0r&n g$filename$16121$U0r&n))))))) g$C$24238$U0r&n g$V$24239$U0r&n))) g$dname$16137$U0r&n))) g$C$24240$U0r&n g$V$24242$U0r&n g$V$24241$U0r&n))) g$d$16135$U0r&n))) g$d$16135$U0r&n))) g$C$24243$U0r&n g$V$24246$U0r&n))) g$deps$16134$U0r&n)))) g$deps$16134$U0r&n)))))) (case-lambda ((g$V$24250$U0r&n) (g$V$24250$U0r&n g$C$24248$U0r&n g$V$24249$U0r&n))) uninitialized))) g$imp*$16125$U0r&n g$vis*$16126$U0r&n g$inv*$16127$U0r&n)) ((g$C$24248$U0r&n . g$others$16139$U0r&n) (g$C$24248$U0r&n '#f)))))))))))) (library-letrec*-identity 'g$try-load-from-file$16054$U0r&n))) (g$library-loader$16055$U0r&n g$library-loader$16261$U0r&n ((case-lambda ((g$C$24476$U0r&n) (g$make-parameter$15428$U0r&n g$C$24476$U0r&n (case-lambda ((g$C$24273$U0r&n g$x$16140$U0r&n) (g$file-locator$16051$U0r&n (case-lambda ((g$V$24274$U0r&n) (g$V$24274$U0r&n (case-lambda ((g$V$24275$U0r&n) ((case-lambda ((g$C$24270$U0r&n g$file-name$16141$U0r&n) (not (case-lambda ((g$T$24271$U0r&n) (if g$T$24271$U0r&n (g$assertion-violation$13786$U0r&n g$C$24270$U0r&n '#f '"cannot find library" g$x$16140$U0r&n) (g$try-load-from-file$16054$U0r&n (case-lambda ((g$V$24272$U0r&n) ((case-lambda ((g$C$24267$U0r&n g$t$16142$U0r&n) (if g$t$16142$U0r&n (g$C$24267$U0r&n g$t$16142$U0r&n) (g$read-library-source-file$15427$U0r&n (case-lambda ((g$V$24268$U0r&n) (g$current-library-expander$16056$U0r&n (case-lambda ((g$V$24269$U0r&n) (g$V$24269$U0r&n g$C$24267$U0r&n g$V$24268$U0r&n g$file-name$16141$U0r&n (case-lambda ((g$C$24263$U0r&n g$name$16143$U0r&n) (equal? (case-lambda ((g$V$24264$U0r&n) (not (case-lambda ((g$T$24265$U0r&n) (if g$T$24265$U0r&n (call-with-values (case-lambda ((g$V$24266$U0r&n) (g$assertion-violation$13786$U0r&n g$C$24263$U0r&n 'import g$V$24266$U0r&n))) (case-lambda ((g$C$24253$U0r&n) (g$open-string-output-port$14979$U0r&n g$C$24253$U0r&n))) (case-lambda ((g$C$24262$U0r&n g$p$16146$U0r&n g$e$16147$U0r&n) ((case-lambda ((g$C$24254$U0r&n g$e$16148$U0r&n g$p$16149$U0r&n) (display (case-lambda (g$IGNORE$24255$U0r&n (write (case-lambda (g$IGNORE$24256$U0r&n (display (case-lambda (g$IGNORE$24257$U0r&n (display (case-lambda (g$IGNORE$24258$U0r&n (display (case-lambda (g$IGNORE$24259$U0r&n (write (case-lambda (g$IGNORE$24260$U0r&n (display (case-lambda (g$IGNORE$24261$U0r&n (g$e$16148$U0r&n g$C$24254$U0r&n))) '" instead" g$p$16149$U0r&n))) g$name$16143$U0r&n g$p$16149$U0r&n))) '", found " g$p$16149$U0r&n))) g$file-name$16141$U0r&n g$p$16149$U0r&n))) '" in file " g$p$16149$U0r&n))) g$x$16140$U0r&n g$p$16149$U0r&n))) '"expected to find library " g$p$16149$U0r&n))) g$C$24262$U0r&n g$e$16147$U0r&n g$p$16146$U0r&n)))) (void g$C$24263$U0r&n)))) g$V$24264$U0r&n))) g$name$16143$U0r&n g$x$16140$U0r&n))))))))) g$file-name$16141$U0r&n)))) g$C$24270$U0r&n g$V$24272$U0r&n))) g$file-name$16141$U0r&n)))) g$file-name$16141$U0r&n))) g$C$24273$U0r&n g$V$24275$U0r&n))) g$x$16140$U0r&n)))))) (case-lambda ((g$C$24276$U0r&n g$f$16150$U0r&n) (g$procedure?$13498$U0r&n (case-lambda ((g$T$24277$U0r&n) (if g$T$24277$U0r&n (g$C$24276$U0r&n g$f$16150$U0r&n) (g$assertion-violation$13786$U0r&n g$C$24276$U0r&n 'library-locator '"not a procedure" g$f$16150$U0r&n)))) g$f$16150$U0r&n)))))) (library-letrec*-identity 'g$library-loader$16055$U0r&n))) (g$current-library-expander$16056$U0r&n g$current-library-expander$16262$U0r&n ((case-lambda ((g$C$24477$U0r&n) (g$make-parameter$15428$U0r&n g$C$24477$U0r&n (case-lambda ((g$C$24278$U0r&n g$x$16151$U0r&n) (g$assertion-violation$13786$U0r&n g$C$24278$U0r&n 'library-expander '"not initialized"))) (case-lambda ((g$C$24279$U0r&n g$f$16152$U0r&n) (g$procedure?$13498$U0r&n (case-lambda ((g$T$24280$U0r&n) (if g$T$24280$U0r&n (g$C$24279$U0r&n g$f$16152$U0r&n) (g$assertion-violation$13786$U0r&n g$C$24279$U0r&n 'library-expander '"not a procedure" g$f$16152$U0r&n)))) g$f$16152$U0r&n)))))) (library-letrec*-identity 'g$current-library-expander$16056$U0r&n))) (g$external-pending-libraries$16057$U0r&n g$external-pending-libraries$16263$U0r&n ((case-lambda ((g$C$24478$U0r&n) (g$make-parameter$15428$U0r&n g$C$24478$U0r&n '()))) (library-letrec*-identity 'g$external-pending-libraries$16057$U0r&n))) (g$find-external-library$16058$U0r&n g$find-external-library$16264$U0r&n ((case-lambda ((g$C$24479$U0r&n) (g$C$24479$U0r&n (case-lambda ((g$C$24294$U0r&n g$name$16153$U0r&n) ((case-lambda ((g$J$24298$U0r&n) (g$external-pending-libraries$16057$U0r&n (case-lambda ((g$V$24299$U0r&n) (g$member$12747$U0r&n (case-lambda ((g$T$24300$U0r&n) (if g$T$24300$U0r&n (g$assertion-violation$13786$U0r&n g$J$24298$U0r&n '#f '"circular attempt to import library was detected" g$name$16153$U0r&n) (void g$J$24298$U0r&n)))) g$name$16153$U0r&n g$V$24299$U0r&n)))))) (case-lambda (g$IGNORE$24295$U0r&n (g$external-pending-libraries$16057$U0r&n (case-lambda ((g$V$24296$U0r&n) (cons (case-lambda ((g$V$24297$U0r&n) ((case-lambda ((g$C$24293$U0r&n g$external-pending-libraries$16156$U0r&n g$external-pending-libraries$16157$U0r&n) ((case-lambda ((g$C$24288$U0r&n g$swap$16158$U0r&n) (dynamic-wind g$C$24288$U0r&n g$swap$16158$U0r&n (case-lambda ((g$C$24284$U0r&n) (g$library-loader$16055$U0r&n (case-lambda ((g$V$24285$U0r&n) (g$V$24285$U0r&n (case-lambda (g$IGNORE$24286$U0r&n (g$find-library-by$16047$U0r&n (case-lambda ((g$V$24287$U0r&n) ((case-lambda ((g$C$24281$U0r&n g$t$16159$U0r&n) (if g$t$16159$U0r&n (g$C$24281$U0r&n g$t$16159$U0r&n) (g$assertion-violation$13786$U0r&n g$C$24281$U0r&n '#f '"handling external library did not yield the correct library" g$name$16153$U0r&n)))) g$C$24284$U0r&n g$V$24287$U0r&n))) (case-lambda ((g$C$24282$U0r&n g$x$16160$U0r&n) (g$library-name$16018$U0r&n (case-lambda ((g$V$24283$U0r&n) (equal? g$C$24282$U0r&n g$V$24283$U0r&n g$name$16153$U0r&n))) g$x$16160$U0r&n)))))) g$name$16153$U0r&n)))))) g$swap$16158$U0r&n))) g$C$24293$U0r&n (case-lambda ((g$C$24291$U0r&n) (g$external-pending-libraries$16156$U0r&n (case-lambda ((g$V$24292$U0r&n) ((case-lambda ((g$C$24289$U0r&n g$t$16161$U0r&n) (g$external-pending-libraries$16156$U0r&n (case-lambda (g$IGNORE$24290$U0r&n (begin (set! g$external-pending-libraries$16157$U0r&n g$t$16161$U0r&n) (g$C$24289$U0r&n (cps-void))))) g$external-pending-libraries$16157$U0r&n))) g$C$24291$U0r&n g$V$24292$U0r&n))))))))) g$C$24294$U0r&n g$external-pending-libraries$16057$U0r&n g$V$24297$U0r&n))) g$name$16153$U0r&n g$V$24296$U0r&n)))))))))))) (library-letrec*-identity 'g$find-external-library$16058$U0r&n))) (g$find-library-by-name$16059$U0r&n g$find-library-by-name$16265$U0r&n ((case-lambda ((g$C$24480$U0r&n) (g$C$24480$U0r&n (case-lambda ((g$C$24304$U0r&n g$name$16162$U0r&n) (g$find-library-by$16047$U0r&n (case-lambda ((g$V$24305$U0r&n) ((case-lambda ((g$C$24301$U0r&n g$t$16163$U0r&n) (if g$t$16163$U0r&n (g$C$24301$U0r&n g$t$16163$U0r&n) (g$find-external-library$16058$U0r&n g$C$24301$U0r&n g$name$16162$U0r&n)))) g$C$24304$U0r&n g$V$24305$U0r&n))) (case-lambda ((g$C$24302$U0r&n g$x$16164$U0r&n) (g$library-name$16018$U0r&n (case-lambda ((g$V$24303$U0r&n) (equal? g$C$24302$U0r&n g$V$24303$U0r&n g$name$16162$U0r&n))) g$x$16164$U0r&n))))))))) (library-letrec*-identity 'g$find-library-by-name$16059$U0r&n))) (g$uninstall-library$16060$U0r&n g$uninstall-library$16266$U0r&n ((case-lambda ((g$C$24481$U0r&n) (g$C$24481$U0r&n (case-lambda ((g$C$24326$U0r&n g$name$16165$U0r&n g$err?$16166$U0r&n) ((case-lambda ((g$C$24324$U0r&n g$who$16167$U0r&n) (begin (set! g$who$16167$U0r&n 'uninstall-library) (g$find-library-by$16047$U0r&n (case-lambda ((g$V$24325$U0r&n) ((case-lambda ((g$C$24314$U0r&n g$lib$16168$U0r&n) ((case-lambda ((g$J$24319$U0r&n) ((case-lambda ((g$J$24321$U0r&n) (if g$err?$16166$U0r&n (not g$J$24321$U0r&n g$lib$16168$U0r&n) (g$J$24321$U0r&n '#f)))) (case-lambda ((g$T$24320$U0r&n) (if g$T$24320$U0r&n (g$assertion-violation$13786$U0r&n g$J$24319$U0r&n g$who$16167$U0r&n '"library not installed" g$name$16165$U0r&n) (void g$J$24319$U0r&n))))))) (case-lambda (g$IGNORE$24315$U0r&n (g$current-library-collection$16009$U0r&n (case-lambda ((g$V$24316$U0r&n) (g$V$24316$U0r&n (case-lambda (g$IGNORE$24317$U0r&n (g$library-env$16024$U0r&n (case-lambda ((g$V$24318$U0r&n) (g$for-each$12754$U0r&n g$C$24314$U0r&n (case-lambda ((g$C$24311$U0r&n g$x$16169$U0r&n) (cdr (case-lambda ((g$V$24312$U0r&n) (car (case-lambda ((g$V$24313$U0r&n) ((case-lambda ((g$C$24306$U0r&n g$label$16170$U0r&n g$binding$16171$U0r&n) (remove-location (case-lambda (g$IGNORE$24307$U0r&n (car (case-lambda ((g$V$24308$U0r&n) (g$memq$12745$U0r&n (case-lambda ((g$T$24309$U0r&n) (if g$T$24309$U0r&n (cdr (case-lambda ((g$V$24310$U0r&n) (remove-location g$C$24306$U0r&n g$V$24310$U0r&n))) g$binding$16171$U0r&n) (void g$C$24306$U0r&n)))) g$V$24308$U0r&n '(global global-macro global-macro! global-ctv)))) g$binding$16171$U0r&n))) g$label$16170$U0r&n))) g$C$24311$U0r&n g$V$24313$U0r&n g$V$24312$U0r&n))) g$x$16169$U0r&n))) g$x$16169$U0r&n))) g$V$24318$U0r&n))) g$lib$16168$U0r&n))) g$lib$16168$U0r&n '#t))))))))) g$C$24324$U0r&n g$V$24325$U0r&n))) (case-lambda ((g$C$24322$U0r&n g$x$16172$U0r&n) (g$library-name$16018$U0r&n (case-lambda ((g$V$24323$U0r&n) (equal? g$C$24322$U0r&n g$V$24323$U0r&n g$name$16165$U0r&n))) g$x$16172$U0r&n))))))) g$C$24326$U0r&n uninitialized)) ((g$C$24326$U0r&n g$name$16173$U0r&n) (g$uninstall-library$16060$U0r&n g$C$24326$U0r&n g$name$16173$U0r&n '#t)))))) (library-letrec*-identity 'g$uninstall-library$16060$U0r&n))) (g$library-exists?$16061$U0r&n g$library-exists?$16267$U0r&n ((case-lambda ((g$C$24482$U0r&n) (g$C$24482$U0r&n (case-lambda ((g$C$24329$U0r&n g$name$16174$U0r&n) (g$find-library-by$16047$U0r&n (case-lambda ((g$T$24330$U0r&n) (if g$T$24330$U0r&n (g$C$24329$U0r&n '#t) (g$C$24329$U0r&n '#f)))) (case-lambda ((g$C$24327$U0r&n g$x$16175$U0r&n) (g$library-name$16018$U0r&n (case-lambda ((g$V$24328$U0r&n) (equal? g$C$24327$U0r&n g$V$24328$U0r&n g$name$16174$U0r&n))) g$x$16175$U0r&n))))))))) (library-letrec*-identity 'g$library-exists?$16061$U0r&n))) (g$find-library-by-spec/die$16062$U0r&n g$find-library-by-spec/die$16268$U0r&n ((case-lambda ((g$C$24483$U0r&n) (g$C$24483$U0r&n (case-lambda ((g$C$24336$U0r&n g$spec$16176$U0r&n) (car (case-lambda ((g$V$24337$U0r&n) ((case-lambda ((g$C$24334$U0r&n g$id$16177$U0r&n) (g$find-library-by$16047$U0r&n (case-lambda ((g$V$24335$U0r&n) ((case-lambda ((g$C$24331$U0r&n g$t$16178$U0r&n) (if g$t$16178$U0r&n (g$C$24331$U0r&n g$t$16178$U0r&n) (g$assertion-violation$13786$U0r&n g$C$24331$U0r&n '#f '"cannot find library with required spec" g$spec$16176$U0r&n)))) g$C$24334$U0r&n g$V$24335$U0r&n))) (case-lambda ((g$C$24332$U0r&n g$x$16179$U0r&n) (g$library-id$16017$U0r&n (case-lambda ((g$V$24333$U0r&n) (eq? g$C$24332$U0r&n g$id$16177$U0r&n g$V$24333$U0r&n))) g$x$16179$U0r&n)))))) g$C$24336$U0r&n g$V$24337$U0r&n))) g$spec$16176$U0r&n)))))) (library-letrec*-identity 'g$find-library-by-spec/die$16062$U0r&n))) (g$install-library-record$16063$U0r&n g$install-library-record$16269$U0r&n ((case-lambda ((g$C$24484$U0r&n) (g$C$24484$U0r&n (case-lambda ((g$C$24359$U0r&n g$lib$16180$U0r&n) (g$library-env$16024$U0r&n (case-lambda ((g$V$24360$U0r&n) ((case-lambda ((g$C$24358$U0r&n g$exp-env$16181$U0r&n) (g$for-each$12754$U0r&n g$C$24358$U0r&n (case-lambda ((g$C$24355$U0r&n g$x$16182$U0r&n) (cdr (case-lambda ((g$V$24356$U0r&n) (car (case-lambda ((g$V$24357$U0r&n) ((case-lambda ((g$C$24352$U0r&n g$label$16183$U0r&n g$binding$16184$U0r&n) (car (case-lambda ((g$V$24353$U0r&n) ((case-lambda ((g$C$24339$U0r&n g$t$16186$U0r&n) (eqv? (case-lambda ((g$T$24340$U0r&n) (if g$T$24340$U0r&n (cdr (case-lambda ((g$V$24341$U0r&n) (cons (case-lambda ((g$V$24342$U0r&n) (cons g$C$24339$U0r&n 'global g$V$24342$U0r&n))) g$lib$16180$U0r&n g$V$24341$U0r&n))) g$binding$16184$U0r&n) (eqv? (case-lambda ((g$T$24343$U0r&n) (if g$T$24343$U0r&n (cdr (case-lambda ((g$V$24344$U0r&n) (cons (case-lambda ((g$V$24345$U0r&n) (cons g$C$24339$U0r&n 'global-macro g$V$24345$U0r&n))) g$lib$16180$U0r&n g$V$24344$U0r&n))) g$binding$16184$U0r&n) (eqv? (case-lambda ((g$T$24346$U0r&n) (if g$T$24346$U0r&n (cdr (case-lambda ((g$V$24347$U0r&n) (cons (case-lambda ((g$V$24348$U0r&n) (cons g$C$24339$U0r&n 'global-macro! g$V$24348$U0r&n))) g$lib$16180$U0r&n g$V$24347$U0r&n))) g$binding$16184$U0r&n) (eqv? (case-lambda ((g$T$24349$U0r&n) (if g$T$24349$U0r&n (cdr (case-lambda ((g$V$24350$U0r&n) (cons (case-lambda ((g$V$24351$U0r&n) (cons g$C$24339$U0r&n 'global-ctv g$V$24351$U0r&n))) g$lib$16180$U0r&n g$V$24350$U0r&n))) g$binding$16184$U0r&n) (g$C$24339$U0r&n g$binding$16184$U0r&n)))) g$t$16186$U0r&n 'global-ctv)))) g$t$16186$U0r&n 'global-macro!)))) g$t$16186$U0r&n 'global-macro)))) g$t$16186$U0r&n 'global))) (case-lambda ((g$V$24354$U0r&n) ((case-lambda ((g$C$24338$U0r&n g$binding$16185$U0r&n) (g$set-label-binding!$15431$U0r&n g$C$24338$U0r&n g$label$16183$U0r&n g$binding$16185$U0r&n))) g$C$24352$U0r&n g$V$24354$U0r&n))) g$V$24353$U0r&n))) g$binding$16184$U0r&n))) g$C$24355$U0r&n g$V$24357$U0r&n g$V$24356$U0r&n))) g$x$16182$U0r&n))) g$x$16182$U0r&n))) g$exp-env$16181$U0r&n))) (case-lambda (g$IGNORE$24361$U0r&n (g$current-library-collection$16009$U0r&n (case-lambda ((g$V$24362$U0r&n) (g$V$24362$U0r&n g$C$24359$U0r&n g$lib$16180$U0r&n)))))) g$V$24360$U0r&n))) g$lib$16180$U0r&n)))))) (library-letrec*-identity 'g$install-library-record$16063$U0r&n))) (g$install-library$16064$U0r&n g$install-library$16270$U0r&n ((case-lambda ((g$C$24485$U0r&n) (g$C$24485$U0r&n (case-lambda ((g$C$24376$U0r&n g$id$16187$U0r&n g$name$16188$U0r&n g$ver$16189$U0r&n g$imp*$16190$U0r&n g$vis*$16191$U0r&n g$inv*$16192$U0r&n g$exp-subst$16193$U0r&n g$exp-env$16194$U0r&n g$visit-proc$16195$U0r&n g$invoke-proc$16196$U0r&n g$visit-code$16197$U0r&n g$invoke-code$16198$U0r&n g$visible?$16199$U0r&n g$source-file-name$16200$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24377$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24378$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24379$U0r&n) ((case-lambda ((g$C$24364$U0r&n g$imp-lib*$16201$U0r&n g$vis-lib*$16202$U0r&n g$inv-lib*$16203$U0r&n) ((case-lambda ((g$J$24370$U0r&n) ((case-lambda ((g$J$24373$U0r&n) (g$symbol?$13496$U0r&n (case-lambda ((g$T$24374$U0r&n) (if g$T$24374$U0r&n (list? (case-lambda ((g$T$24375$U0r&n) (if g$T$24375$U0r&n (list? g$J$24373$U0r&n g$ver$16189$U0r&n) (g$J$24373$U0r&n '#f)))) g$name$16188$U0r&n) (g$J$24373$U0r&n '#f)))) g$id$16187$U0r&n))) (case-lambda ((g$V$24371$U0r&n) (not (case-lambda ((g$T$24372$U0r&n) (if g$T$24372$U0r&n (g$assertion-violation$13786$U0r&n g$J$24370$U0r&n 'install-library '"invalid spec with id/name/ver" g$id$16187$U0r&n g$name$16188$U0r&n g$ver$16189$U0r&n) (void g$J$24370$U0r&n)))) g$V$24371$U0r&n)))))) (case-lambda (g$IGNORE$24365$U0r&n ((case-lambda ((g$J$24368$U0r&n) (g$library-exists?$16061$U0r&n (case-lambda ((g$T$24369$U0r&n) (if g$T$24369$U0r&n (g$assertion-violation$13786$U0r&n g$J$24368$U0r&n 'install-library '"library is already installed" g$name$16188$U0r&n) (void g$J$24368$U0r&n)))) g$name$16188$U0r&n))) (case-lambda (g$IGNORE$24366$U0r&n (g$make-library$16016$U0r&n (case-lambda ((g$V$24367$U0r&n) ((case-lambda ((g$C$24363$U0r&n g$lib$16204$U0r&n) (g$install-library-record$16063$U0r&n g$C$24363$U0r&n g$lib$16204$U0r&n))) g$C$24364$U0r&n g$V$24367$U0r&n))) g$id$16187$U0r&n g$name$16188$U0r&n g$ver$16189$U0r&n g$imp-lib*$16201$U0r&n g$vis-lib*$16202$U0r&n g$inv-lib*$16203$U0r&n g$exp-subst$16193$U0r&n g$exp-env$16194$U0r&n g$visit-proc$16195$U0r&n g$invoke-proc$16196$U0r&n g$visit-code$16197$U0r&n g$invoke-code$16198$U0r&n g$visible?$16199$U0r&n g$source-file-name$16200$U0r&n))))))))) g$C$24376$U0r&n g$V$24379$U0r&n g$V$24378$U0r&n g$V$24377$U0r&n))) g$find-library-by-spec/die$16062$U0r&n g$imp*$16190$U0r&n))) g$find-library-by-spec/die$16062$U0r&n g$vis*$16191$U0r&n))) g$find-library-by-spec/die$16062$U0r&n g$inv*$16192$U0r&n)))))) (library-letrec*-identity 'g$install-library$16064$U0r&n))) (g$imported-label->binding$16065$U0r&n g$imported-label->binding$16271$U0r&n ((case-lambda ((g$C$24486$U0r&n) (g$C$24486$U0r&n (case-lambda ((g$C$24380$U0r&n g$lab$16205$U0r&n) (g$label-binding$15432$U0r&n g$C$24380$U0r&n g$lab$16205$U0r&n)))))) (library-letrec*-identity 'g$imported-label->binding$16065$U0r&n))) (g$invoke-library$16066$U0r&n g$invoke-library$16272$U0r&n ((case-lambda ((g$C$24487$U0r&n) (g$C$24487$U0r&n (case-lambda ((g$C$24390$U0r&n g$lib$16206$U0r&n) (g$library-invoke-state$16026$U0r&n (case-lambda ((g$V$24391$U0r&n) ((case-lambda ((g$C$24383$U0r&n g$invoke$16207$U0r&n) (g$procedure?$13498$U0r&n (case-lambda ((g$T$24384$U0r&n) (if g$T$24384$U0r&n (g$set-library-invoke-state!$16040$U0r&n (case-lambda (g$IGNORE$24385$U0r&n (g$library-inv*$16022$U0r&n (case-lambda ((g$V$24386$U0r&n) (g$for-each$12754$U0r&n (case-lambda (g$IGNORE$24387$U0r&n (g$set-library-invoke-state!$16040$U0r&n (case-lambda (g$IGNORE$24388$U0r&n (g$invoke$16207$U0r&n (case-lambda (g$IGNORE$24389$U0r&n (g$set-library-invoke-state!$16040$U0r&n g$C$24383$U0r&n g$lib$16206$U0r&n '#t)))))) g$lib$16206$U0r&n (case-lambda ((g$C$24382$U0r&n) (g$assertion-violation$13786$U0r&n g$C$24382$U0r&n 'invoke '"first invoke did not return" g$lib$16206$U0r&n)))))) g$invoke-library$16066$U0r&n g$V$24386$U0r&n))) g$lib$16206$U0r&n))) g$lib$16206$U0r&n (case-lambda ((g$C$24381$U0r&n) (g$assertion-violation$13786$U0r&n g$C$24381$U0r&n 'invoke '"circularity detected" g$lib$16206$U0r&n)))) (void g$C$24383$U0r&n)))) g$invoke$16207$U0r&n))) g$C$24390$U0r&n g$V$24391$U0r&n))) g$lib$16206$U0r&n)))))) (library-letrec*-identity 'g$invoke-library$16066$U0r&n))) (g$visit-library$16067$U0r&n g$visit-library$16273$U0r&n ((case-lambda ((g$C$24488$U0r&n) (g$C$24488$U0r&n (case-lambda ((g$C$24401$U0r&n g$lib$16208$U0r&n) (g$library-visit-state$16025$U0r&n (case-lambda ((g$V$24402$U0r&n) ((case-lambda ((g$C$24394$U0r&n g$visit$16209$U0r&n) (g$procedure?$13498$U0r&n (case-lambda ((g$T$24395$U0r&n) (if g$T$24395$U0r&n (g$set-library-visit-state!$16039$U0r&n (case-lambda (g$IGNORE$24396$U0r&n (g$library-vis*$16021$U0r&n (case-lambda ((g$V$24397$U0r&n) (g$for-each$12754$U0r&n (case-lambda (g$IGNORE$24398$U0r&n (g$set-library-visit-state!$16039$U0r&n (case-lambda (g$IGNORE$24399$U0r&n (g$visit$16209$U0r&n (case-lambda (g$IGNORE$24400$U0r&n (g$set-library-visit-state!$16039$U0r&n g$C$24394$U0r&n g$lib$16208$U0r&n '#t)))))) g$lib$16208$U0r&n (case-lambda ((g$C$24393$U0r&n) (g$assertion-violation$13786$U0r&n g$C$24393$U0r&n 'invoke '"first visit did not return" g$lib$16208$U0r&n)))))) g$invoke-library$16066$U0r&n g$V$24397$U0r&n))) g$lib$16208$U0r&n))) g$lib$16208$U0r&n (case-lambda ((g$C$24392$U0r&n) (g$assertion-violation$13786$U0r&n g$C$24392$U0r&n 'visit '"circularity detected" g$lib$16208$U0r&n)))) (void g$C$24394$U0r&n)))) g$visit$16209$U0r&n))) g$C$24401$U0r&n g$V$24402$U0r&n))) g$lib$16208$U0r&n)))))) (library-letrec*-identity 'g$visit-library$16067$U0r&n))) (g$invoke-library-by-spec$16068$U0r&n g$invoke-library-by-spec$16274$U0r&n ((case-lambda ((g$C$24489$U0r&n) (g$C$24489$U0r&n (case-lambda ((g$C$24403$U0r&n g$spec$16210$U0r&n) (g$find-library-by-spec/die$16062$U0r&n (case-lambda ((g$V$24404$U0r&n) (g$invoke-library$16066$U0r&n g$C$24403$U0r&n g$V$24404$U0r&n))) g$spec$16210$U0r&n)))))) (library-letrec*-identity 'g$invoke-library-by-spec$16068$U0r&n))) (g$installed-libraries$16069$U0r&n g$installed-libraries$16275$U0r&n ((case-lambda ((g$C$24490$U0r&n) (g$C$24490$U0r&n (case-lambda ((g$C$24418$U0r&n g$all?$16211$U0r&n) (g$current-library-collection$16009$U0r&n (case-lambda ((g$V$24419$U0r&n) (g$V$24419$U0r&n (case-lambda ((g$V$24420$U0r&n) ((case-lambda ((g$C$24417$U0r&n g$f$16212$U0r&n) ((case-lambda ((g$C$24406$U0r&n g$f$24405$U0r&n) (begin (set! g$f$16212$U0r&n g$f$24405$U0r&n) (g$C$24406$U0r&n g$f$16212$U0r&n)))) g$C$24417$U0r&n (case-lambda ((g$C$24409$U0r&n g$ls$16213$U0r&n) (null? (case-lambda ((g$T$24410$U0r&n) (if g$T$24410$U0r&n (g$C$24409$U0r&n '()) ((case-lambda ((g$C$24407$U0r&n g$t$16214$U0r&n) (if g$t$16214$U0r&n (g$C$24407$U0r&n g$t$16214$U0r&n) (car (case-lambda ((g$V$24408$U0r&n) (g$library-visible?$16029$U0r&n g$C$24407$U0r&n g$V$24408$U0r&n))) g$ls$16213$U0r&n)))) (case-lambda ((g$T$24411$U0r&n) (if g$T$24411$U0r&n (cdr (case-lambda ((g$V$24412$U0r&n) (g$f$16212$U0r&n (case-lambda ((g$V$24413$U0r&n) (car (case-lambda ((g$V$24414$U0r&n) (g$library-name$16018$U0r&n (case-lambda ((g$V$24415$U0r&n) (cons g$C$24409$U0r&n g$V$24415$U0r&n g$V$24413$U0r&n))) g$V$24414$U0r&n))) g$ls$16213$U0r&n))) g$V$24412$U0r&n))) g$ls$16213$U0r&n) (cdr (case-lambda ((g$V$24416$U0r&n) (g$f$16212$U0r&n g$C$24409$U0r&n g$V$24416$U0r&n))) g$ls$16213$U0r&n)))) g$all?$16211$U0r&n)))) g$ls$16213$U0r&n)))))) (case-lambda ((g$V$24421$U0r&n) (g$V$24421$U0r&n g$C$24418$U0r&n g$V$24420$U0r&n))) uninitialized)))))))) ((g$C$24418$U0r&n) (g$installed-libraries$16069$U0r&n g$C$24418$U0r&n '#f)))))) (library-letrec*-identity 'g$installed-libraries$16069$U0r&n))) (g$library-spec$16070$U0r&n g$library-spec$16276$U0r&n ((case-lambda ((g$C$24491$U0r&n) (g$C$24491$U0r&n (case-lambda ((g$C$24422$U0r&n g$x$16215$U0r&n) ((case-lambda ((g$J$24427$U0r&n) (g$library?$16015$U0r&n (case-lambda ((g$V$24428$U0r&n) (not (case-lambda ((g$T$24429$U0r&n) (if g$T$24429$U0r&n (g$assertion-violation$13786$U0r&n g$J$24427$U0r&n 'library-spec '"not a library" g$x$16215$U0r&n) (void g$J$24427$U0r&n)))) g$V$24428$U0r&n))) g$x$16215$U0r&n))) (case-lambda (g$IGNORE$24423$U0r&n (g$library-version$16019$U0r&n (case-lambda ((g$V$24424$U0r&n) (g$library-name$16018$U0r&n (case-lambda ((g$V$24425$U0r&n) (g$library-id$16017$U0r&n (case-lambda ((g$V$24426$U0r&n) (list g$C$24422$U0r&n g$V$24426$U0r&n g$V$24425$U0r&n g$V$24424$U0r&n))) g$x$16215$U0r&n))) g$x$16215$U0r&n))) g$x$16215$U0r&n))))))))) (library-letrec*-identity 'g$library-spec$16070$U0r&n)))) (void identity-for-cps))(library-letrec* (psyntax builders) ((g$build-global-define$16277$U0r&n g$build-global-define$16490$U0r&n ((case-lambda ((g$C$24526$U0r&n) (g$C$24526$U0r&n (case-lambda ((g$C$24492$U0r&n g$x$16458$U0r&n) (g$build-void$16454$U0r&n g$C$24492$U0r&n)))))) (library-letrec*-identity 'g$build-global-define$16277$U0r&n))) (g$build-lambda$16388$U0r&n g$build-lambda$16491$U0r&n ((case-lambda ((g$C$24527$U0r&n) (g$C$24527$U0r&n (case-lambda ((g$C$24493$U0r&n g$ae$16459$U0r&n g$vars$16460$U0r&n g$exp$16461$U0r&n) (list (case-lambda ((g$V$24494$U0r&n) (list g$C$24493$U0r&n 'case-lambda g$V$24494$U0r&n))) g$vars$16460$U0r&n g$exp$16461$U0r&n)))))) (library-letrec*-identity 'g$build-lambda$16388$U0r&n))) (g$build-case-lambda$16389$U0r&n g$build-case-lambda$16492$U0r&n ((case-lambda ((g$C$24528$U0r&n) (g$C$24528$U0r&n (case-lambda ((g$C$24495$U0r&n g$ae$16462$U0r&n g$vars*$16463$U0r&n g$exp*$16464$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24496$U0r&n) (cons g$C$24495$U0r&n 'case-lambda g$V$24496$U0r&n))) list g$vars*$16463$U0r&n g$exp*$16464$U0r&n)))))) (library-letrec*-identity 'g$build-case-lambda$16389$U0r&n))) (g$build-let$16390$U0r&n g$build-let$16493$U0r&n ((case-lambda ((g$C$24529$U0r&n) (g$C$24529$U0r&n (case-lambda ((g$C$24497$U0r&n g$ae$16465$U0r&n g$lhs*$16466$U0r&n g$rhs*$16467$U0r&n g$body$16468$U0r&n) (g$build-lambda$16388$U0r&n (case-lambda ((g$V$24498$U0r&n) (cons g$C$24497$U0r&n g$V$24498$U0r&n g$rhs*$16467$U0r&n))) g$ae$16465$U0r&n g$lhs*$16466$U0r&n g$body$16468$U0r&n)))))) (library-letrec*-identity 'g$build-let$16390$U0r&n))) (g$build-sequence$16453$U0r&n g$build-sequence$16494$U0r&n ((case-lambda ((g$C$24530$U0r&n) (g$C$24530$U0r&n (case-lambda ((g$C$24509$U0r&n g$ae$16469$U0r&n g$exps$16470$U0r&n) ((case-lambda ((g$C$24508$U0r&n g$loop$16471$U0r&n) ((case-lambda ((g$C$24500$U0r&n g$loop$24499$U0r&n) (begin (set! g$loop$16471$U0r&n g$loop$24499$U0r&n) (g$C$24500$U0r&n g$loop$16471$U0r&n)))) g$C$24508$U0r&n (case-lambda ((g$C$24501$U0r&n g$exps$16472$U0r&n) (cdr (case-lambda ((g$V$24502$U0r&n) (null? (case-lambda ((g$T$24503$U0r&n) (if g$T$24503$U0r&n (car g$C$24501$U0r&n g$exps$16472$U0r&n) (g$build-void$16454$U0r&n (case-lambda ((g$V$24504$U0r&n) (car (case-lambda ((g$V$24505$U0r&n) (equal? (case-lambda ((g$T$24506$U0r&n) (if g$T$24506$U0r&n (cdr (case-lambda ((g$V$24507$U0r&n) (g$loop$16471$U0r&n g$C$24501$U0r&n g$V$24507$U0r&n))) g$exps$16472$U0r&n) (cons g$C$24501$U0r&n 'begin g$exps$16472$U0r&n)))) g$V$24505$U0r&n g$V$24504$U0r&n))) g$exps$16472$U0r&n))))))) g$V$24502$U0r&n))) g$exps$16472$U0r&n)))))) (case-lambda ((g$V$24510$U0r&n) (g$V$24510$U0r&n g$C$24509$U0r&n g$exps$16470$U0r&n))) uninitialized)))))) (library-letrec*-identity 'g$build-sequence$16453$U0r&n))) (g$build-void$16454$U0r&n g$build-void$16495$U0r&n ((case-lambda ((g$C$24531$U0r&n) (g$C$24531$U0r&n (case-lambda ((g$C$24511$U0r&n) (g$C$24511$U0r&n '((primitive void)))))))) (library-letrec*-identity 'g$build-void$16454$U0r&n))) (g$build-letrec$16455$U0r&n g$build-letrec$16496$U0r&n ((case-lambda ((g$C$24532$U0r&n) (g$C$24532$U0r&n (case-lambda ((g$C$24512$U0r&n g$ae$16473$U0r&n g$vars$16474$U0r&n g$val-exps$16475$U0r&n g$body-exp$16476$U0r&n) (null? (case-lambda ((g$T$24513$U0r&n) (if g$T$24513$U0r&n (g$C$24512$U0r&n g$body-exp$16476$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24514$U0r&n) (list g$C$24512$U0r&n 'letrec g$V$24514$U0r&n g$body-exp$16476$U0r&n))) list g$vars$16474$U0r&n g$val-exps$16475$U0r&n)))) g$vars$16474$U0r&n)))))) (library-letrec*-identity 'g$build-letrec$16455$U0r&n))) (g$build-letrec*$16456$U0r&n g$build-letrec*$16497$U0r&n ((case-lambda ((g$C$24533$U0r&n) (g$C$24533$U0r&n (case-lambda ((g$C$24517$U0r&n g$ae$16477$U0r&n g$vars$16478$U0r&n g$val-exps$16479$U0r&n g$body-exp$16480$U0r&n) (null? (case-lambda ((g$T$24518$U0r&n) (if g$T$24518$U0r&n (g$C$24517$U0r&n g$body-exp$16480$U0r&n) (list (case-lambda ((g$V$24519$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24520$U0r&n) (append (case-lambda ((g$V$24521$U0r&n) (g$build-sequence$16453$U0r&n (case-lambda ((g$V$24522$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24523$U0r&n) (g$build-let$16390$U0r&n g$C$24517$U0r&n g$ae$16477$U0r&n g$vars$16478$U0r&n g$V$24523$U0r&n g$V$24522$U0r&n))) (case-lambda ((g$C$24515$U0r&n g$x$16481$U0r&n) (g$C$24515$U0r&n 'uninitialized))) g$vars$16478$U0r&n))) g$ae$16477$U0r&n g$V$24521$U0r&n))) g$V$24520$U0r&n g$V$24519$U0r&n))) (case-lambda ((g$C$24516$U0r&n g$lhs$16482$U0r&n g$rhs$16483$U0r&n) (list g$C$24516$U0r&n 'set! g$lhs$16482$U0r&n g$rhs$16483$U0r&n))) g$vars$16478$U0r&n g$val-exps$16479$U0r&n))) g$body-exp$16480$U0r&n)))) g$vars$16478$U0r&n)))))) (library-letrec*-identity 'g$build-letrec*$16456$U0r&n))) (g$build-library-letrec*$16457$U0r&n g$build-library-letrec*$16498$U0r&n ((case-lambda ((g$C$24534$U0r&n) (g$C$24534$U0r&n (case-lambda ((g$C$24524$U0r&n g$ae$16484$U0r&n g$name$16485$U0r&n g$vars$16486$U0r&n g$locs$16487$U0r&n g$val-exps$16488$U0r&n g$body-exp$16489$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24525$U0r&n) (list g$C$24524$U0r&n 'library-letrec* g$name$16485$U0r&n g$V$24525$U0r&n g$body-exp$16489$U0r&n))) list g$vars$16486$U0r&n g$locs$16487$U0r&n g$val-exps$16488$U0r&n)))))) (library-letrec*-identity 'g$build-library-letrec*$16457$U0r&n)))) (void identity-for-cps))(library-letrec* (psyntax expander) ((g$set-cons$16499$U0r&n g$set-cons$20512$U0r&n ((case-lambda ((g$C$29582$U0r&n) (g$C$29582$U0r&n (case-lambda ((g$C$24535$U0r&n g$x$17195$U0r&n g$ls$17196$U0r&n) (g$memq$12745$U0r&n (case-lambda ((g$T$24536$U0r&n) (if g$T$24536$U0r&n (g$C$24535$U0r&n g$ls$17196$U0r&n) (cons g$C$24535$U0r&n g$x$17195$U0r&n g$ls$17196$U0r&n)))) g$x$17195$U0r&n g$ls$17196$U0r&n)))))) (library-letrec*-identity 'g$set-cons$16499$U0r&n))) (g$set-union$16500$U0r&n g$set-union$20513$U0r&n ((case-lambda ((g$C$29583$U0r&n) (g$C$29583$U0r&n (case-lambda ((g$C$24537$U0r&n g$ls1$17197$U0r&n g$ls2$17198$U0r&n) (null? (case-lambda ((g$T$24538$U0r&n) (if g$T$24538$U0r&n (g$C$24537$U0r&n g$ls2$17198$U0r&n) (car (case-lambda ((g$V$24539$U0r&n) (g$memq$12745$U0r&n (case-lambda ((g$T$24540$U0r&n) (if g$T$24540$U0r&n (cdr (case-lambda ((g$V$24541$U0r&n) (g$set-union$16500$U0r&n g$C$24537$U0r&n g$V$24541$U0r&n g$ls2$17198$U0r&n))) g$ls1$17197$U0r&n) (cdr (case-lambda ((g$V$24542$U0r&n) (g$set-union$16500$U0r&n (case-lambda ((g$V$24543$U0r&n) (car (case-lambda ((g$V$24544$U0r&n) (cons g$C$24537$U0r&n g$V$24544$U0r&n g$V$24543$U0r&n))) g$ls1$17197$U0r&n))) g$V$24542$U0r&n g$ls2$17198$U0r&n))) g$ls1$17197$U0r&n)))) g$V$24539$U0r&n g$ls2$17198$U0r&n))) g$ls1$17197$U0r&n)))) g$ls1$17197$U0r&n)))))) (library-letrec*-identity 'g$set-union$16500$U0r&n))) (g$top-mark*$16502$U0r&n g$top-mark*$20514$U0r&n ((case-lambda ((g$C$29584$U0r&n) (g$C$29584$U0r&n '(top)))) (library-letrec*-identity 'g$top-mark*$16502$U0r&n))) (g$top-marked?$16503$U0r&n g$top-marked?$20515$U0r&n ((case-lambda ((g$C$29585$U0r&n) (g$C$29585$U0r&n (case-lambda ((g$C$24545$U0r&n g$m*$17199$U0r&n) (g$memq$12745$U0r&n g$C$24545$U0r&n 'top g$m*$17199$U0r&n)))))) (library-letrec*-identity 'g$top-marked?$16503$U0r&n))) (g$gen-lexical$16504$U0r&n g$gen-lexical$20516$U0r&n ((case-lambda ((g$C$29586$U0r&n) (g$C$29586$U0r&n (case-lambda ((g$C$24546$U0r&n g$sym$17200$U0r&n) (g$symbol?$13496$U0r&n (case-lambda ((g$T$24547$U0r&n) (if g$T$24547$U0r&n (gensym g$C$24546$U0r&n g$sym$17200$U0r&n) (g$stx?$16541$U0r&n (case-lambda ((g$T$24548$U0r&n) (if g$T$24548$U0r&n (g$id->sym$16570$U0r&n (case-lambda ((g$V$24549$U0r&n) (g$gen-lexical$16504$U0r&n g$C$24546$U0r&n g$V$24549$U0r&n))) g$sym$17200$U0r&n) (g$assertion-violation$13786$U0r&n g$C$24546$U0r&n 'gen-lexical '"BUG: invalid arg" g$sym$17200$U0r&n)))) g$sym$17200$U0r&n)))) g$sym$17200$U0r&n)))))) (library-letrec*-identity 'g$gen-lexical$16504$U0r&n))) (g$gen-global$16505$U0r&n g$gen-global$20517$U0r&n ((case-lambda ((g$C$29587$U0r&n) (g$C$29587$U0r&n (case-lambda ((g$C$24550$U0r&n g$x$17201$U0r&n) (g$gen-lexical$16504$U0r&n g$C$24550$U0r&n g$x$17201$U0r&n)))))) (library-letrec*-identity 'g$gen-global$16505$U0r&n))) (g$gen-label$16506$U0r&n g$gen-label$20518$U0r&n ((case-lambda ((g$C$29588$U0r&n) (g$C$29588$U0r&n (case-lambda ((g$C$24551$U0r&n g$_$17202$U0r&n) (gensym g$C$24551$U0r&n)))))) (library-letrec*-identity 'g$gen-label$16506$U0r&n))) (g$gen-top-level-label$16507$U0r&n g$gen-top-level-label$20519$U0r&n ((case-lambda ((g$C$29589$U0r&n) (g$C$29589$U0r&n (case-lambda ((g$C$24577$U0r&n g$id$17203$U0r&n g$rib$17204$U0r&n) ((case-lambda ((g$C$24574$U0r&n g$find$17205$U0r&n) (begin (set! g$find$17205$U0r&n (case-lambda ((g$C$24552$U0r&n g$sym$17211$U0r&n g$mark*$17212$U0r&n g$sym*$17213$U0r&n g$mark**$17214$U0r&n g$label*$17215$U0r&n) (pair? (case-lambda ((g$T$24553$U0r&n) (if g$T$24553$U0r&n ((case-lambda ((g$J$24558$U0r&n) (car (case-lambda ((g$V$24559$U0r&n) (eq? (case-lambda ((g$T$24560$U0r&n) (if g$T$24560$U0r&n (car (case-lambda ((g$V$24561$U0r&n) (g$same-marks?$16571$U0r&n g$J$24558$U0r&n g$mark*$17212$U0r&n g$V$24561$U0r&n))) g$mark**$17214$U0r&n) (g$J$24558$U0r&n '#f)))) g$sym$17211$U0r&n g$V$24559$U0r&n))) g$sym*$17213$U0r&n))) (case-lambda ((g$T$24554$U0r&n) (if g$T$24554$U0r&n (car g$C$24552$U0r&n g$label*$17215$U0r&n) (cdr (case-lambda ((g$V$24555$U0r&n) (cdr (case-lambda ((g$V$24556$U0r&n) (cdr (case-lambda ((g$V$24557$U0r&n) (g$find$17205$U0r&n g$C$24552$U0r&n g$sym$17211$U0r&n g$mark*$17212$U0r&n g$V$24557$U0r&n g$V$24556$U0r&n g$V$24555$U0r&n))) g$sym*$17213$U0r&n))) g$mark**$17214$U0r&n))) g$label*$17215$U0r&n))))) (g$C$24552$U0r&n '#f)))) g$sym*$17213$U0r&n)))) (g$stx-mark*$16544$U0r&n (case-lambda ((g$V$24575$U0r&n) (g$id->sym$16570$U0r&n (case-lambda ((g$V$24576$U0r&n) ((case-lambda ((g$C$24572$U0r&n g$sym$17206$U0r&n g$mark*$17207$U0r&n) (g$rib-sym*$16517$U0r&n (case-lambda ((g$V$24573$U0r&n) ((case-lambda ((g$C$24565$U0r&n g$sym*$17208$U0r&n) ((case-lambda ((g$J$24567$U0r&n) (g$rib-sym*$16517$U0r&n (case-lambda ((g$V$24568$U0r&n) (g$memq$12745$U0r&n (case-lambda ((g$T$24569$U0r&n) (if g$T$24569$U0r&n (g$rib-label*$16519$U0r&n (case-lambda ((g$V$24570$U0r&n) (g$rib-mark**$16518$U0r&n (case-lambda ((g$V$24571$U0r&n) (g$find$17205$U0r&n g$J$24567$U0r&n g$sym$17206$U0r&n g$mark*$17207$U0r&n g$sym*$17208$U0r&n g$V$24571$U0r&n g$V$24570$U0r&n))) g$rib$17204$U0r&n))) g$rib$17204$U0r&n) (g$J$24567$U0r&n '#f)))) g$sym$17206$U0r&n g$V$24568$U0r&n))) g$rib$17204$U0r&n))) (case-lambda ((g$V$24566$U0r&n) ((case-lambda ((g$C$24564$U0r&n g$t$17209$U0r&n) (if g$t$17209$U0r&n ((case-lambda ((g$C$24562$U0r&n g$label$17210$U0r&n) (g$imported-label->binding$16271$U0r&n (case-lambda ((g$T$24563$U0r&n) (if g$T$24563$U0r&n (gensym g$C$24562$U0r&n) (g$C$24562$U0r&n g$label$17210$U0r&n)))) g$label$17210$U0r&n))) g$C$24564$U0r&n g$t$17209$U0r&n) (gensym g$C$24564$U0r&n)))) g$C$24565$U0r&n g$V$24566$U0r&n)))))) g$C$24572$U0r&n g$V$24573$U0r&n))) g$rib$17204$U0r&n))) g$C$24574$U0r&n g$V$24576$U0r&n g$V$24575$U0r&n))) g$id$17203$U0r&n))) g$id$17203$U0r&n)))) g$C$24577$U0r&n uninitialized)))))) (library-letrec*-identity 'g$gen-top-level-label$16507$U0r&n))) (g$gen-define-label+loc$16508$U0r&n g$gen-define-label+loc$20520$U0r&n ((case-lambda ((g$C$29590$U0r&n) (g$C$29590$U0r&n (case-lambda ((g$C$24590$U0r&n g$id$17216$U0r&n g$rib$17217$U0r&n g$sd?$17218$U0r&n) (if g$sd?$17218$U0r&n (g$gen-lexical$16504$U0r&n (case-lambda ((g$V$24591$U0r&n) (gensym (case-lambda ((g$V$24592$U0r&n) (values g$C$24590$U0r&n g$V$24592$U0r&n g$V$24591$U0r&n)))))) g$id$17216$U0r&n) (g$top-level-context$17194$U0r&n (case-lambda ((g$V$24593$U0r&n) ((case-lambda ((g$C$24587$U0r&n g$env$17219$U0r&n) (g$interaction-env-locs$17154$U0r&n (case-lambda ((g$V$24588$U0r&n) (g$gen-top-level-label$16507$U0r&n (case-lambda ((g$V$24589$U0r&n) ((case-lambda ((g$C$24584$U0r&n g$label$17220$U0r&n g$locs$17221$U0r&n) (g$assq$12741$U0r&n (case-lambda ((g$V$24585$U0r&n) ((case-lambda ((g$C$24582$U0r&n g$t$17222$U0r&n) (if g$t$17222$U0r&n (cdr g$C$24582$U0r&n g$t$17222$U0r&n) (g$gen-lexical$16504$U0r&n (case-lambda ((g$V$24583$U0r&n) ((case-lambda ((g$C$24578$U0r&n g$loc$17223$U0r&n) (cons (case-lambda ((g$V$24579$U0r&n) (cons (case-lambda ((g$V$24580$U0r&n) (g$set-interaction-env-locs!$17157$U0r&n (case-lambda (g$IGNORE$24581$U0r&n (g$C$24578$U0r&n g$loc$17223$U0r&n))) g$env$17219$U0r&n g$V$24580$U0r&n))) g$V$24579$U0r&n g$locs$17221$U0r&n))) g$label$17220$U0r&n g$loc$17223$U0r&n))) g$C$24582$U0r&n g$V$24583$U0r&n))) g$id$17216$U0r&n)))) (case-lambda ((g$V$24586$U0r&n) (values g$C$24584$U0r&n g$label$17220$U0r&n g$V$24586$U0r&n))) g$V$24585$U0r&n))) g$label$17220$U0r&n g$locs$17221$U0r&n))) g$C$24587$U0r&n g$V$24589$U0r&n g$V$24588$U0r&n))) g$id$17216$U0r&n g$rib$17217$U0r&n))) g$env$17219$U0r&n))) g$C$24590$U0r&n g$V$24593$U0r&n)))))))))) (library-letrec*-identity 'g$gen-define-label+loc$16508$U0r&n))) (g$gen-define-label$16509$U0r&n g$gen-define-label$20521$U0r&n ((case-lambda ((g$C$29591$U0r&n) (g$C$29591$U0r&n (case-lambda ((g$C$24594$U0r&n g$id$17224$U0r&n g$rib$17225$U0r&n g$sd?$17226$U0r&n) (if g$sd?$17226$U0r&n (gensym g$C$24594$U0r&n) (g$gen-top-level-label$16507$U0r&n g$C$24594$U0r&n g$id$17224$U0r&n g$rib$17225$U0r&n))))))) (library-letrec*-identity 'g$gen-define-label$16509$U0r&n))) (g$8182$16510$U0r&n g$8182$20522$U0r&n ((case-lambda ((g$C$29592$U0r&n) (make-record-type-descriptor g$C$29592$U0r&n 'rib '#f 'g$8185$U0r&n '#t '#t '#((mutable sym*) (mutable mark**) (mutable label*) (mutable sealed/freq) (mutable cache))))) (library-letrec*-identity 'g$8182$16510$U0r&n))) (g$8184$16511$U0r&n g$8184$20523$U0r&n ((case-lambda ((g$C$29593$U0r&n) (g$C$29593$U0r&n '#f))) (library-letrec*-identity 'g$8184$16511$U0r&n))) (g$8183$16512$U0r&n g$8183$20524$U0r&n ((case-lambda ((g$C$29594$U0r&n) (make-record-constructor-descriptor g$C$29594$U0r&n g$8182$16510$U0r&n '#f g$8184$16511$U0r&n))) (library-letrec*-identity 'g$8183$16512$U0r&n))) (g$rib?$16515$U0r&n g$rib?$20525$U0r&n ((case-lambda ((g$C$29595$U0r&n) (record-predicate g$C$29595$U0r&n g$8182$16510$U0r&n))) (library-letrec*-identity 'g$rib?$16515$U0r&n))) (g$make-rib$16516$U0r&n g$make-rib$20526$U0r&n ((case-lambda ((g$C$29596$U0r&n) (record-constructor g$C$29596$U0r&n g$8183$16512$U0r&n))) (library-letrec*-identity 'g$make-rib$16516$U0r&n))) (g$rib-sym*$16517$U0r&n g$rib-sym*$20527$U0r&n ((case-lambda ((g$C$29597$U0r&n) (record-accessor g$C$29597$U0r&n g$8182$16510$U0r&n '0))) (library-letrec*-identity 'g$rib-sym*$16517$U0r&n))) (g$rib-mark**$16518$U0r&n g$rib-mark**$20528$U0r&n ((case-lambda ((g$C$29598$U0r&n) (record-accessor g$C$29598$U0r&n g$8182$16510$U0r&n '1))) (library-letrec*-identity 'g$rib-mark**$16518$U0r&n))) (g$rib-label*$16519$U0r&n g$rib-label*$20529$U0r&n ((case-lambda ((g$C$29599$U0r&n) (record-accessor g$C$29599$U0r&n g$8182$16510$U0r&n '2))) (library-letrec*-identity 'g$rib-label*$16519$U0r&n))) (g$rib-sealed/freq$16520$U0r&n g$rib-sealed/freq$20530$U0r&n ((case-lambda ((g$C$29600$U0r&n) (record-accessor g$C$29600$U0r&n g$8182$16510$U0r&n '3))) (library-letrec*-identity 'g$rib-sealed/freq$16520$U0r&n))) (g$rib-cache$16521$U0r&n g$rib-cache$20531$U0r&n ((case-lambda ((g$C$29601$U0r&n) (record-accessor g$C$29601$U0r&n g$8182$16510$U0r&n '4))) (library-letrec*-identity 'g$rib-cache$16521$U0r&n))) (g$set-rib-sym*!$16522$U0r&n g$set-rib-sym*!$20532$U0r&n ((case-lambda ((g$C$29602$U0r&n) (record-mutator g$C$29602$U0r&n g$8182$16510$U0r&n '0))) (library-letrec*-identity 'g$set-rib-sym*!$16522$U0r&n))) (g$set-rib-mark**!$16523$U0r&n g$set-rib-mark**!$20533$U0r&n ((case-lambda ((g$C$29603$U0r&n) (record-mutator g$C$29603$U0r&n g$8182$16510$U0r&n '1))) (library-letrec*-identity 'g$set-rib-mark**!$16523$U0r&n))) (g$set-rib-label*!$16524$U0r&n g$set-rib-label*!$20534$U0r&n ((case-lambda ((g$C$29604$U0r&n) (record-mutator g$C$29604$U0r&n g$8182$16510$U0r&n '2))) (library-letrec*-identity 'g$set-rib-label*!$16524$U0r&n))) (g$set-rib-sealed/freq!$16525$U0r&n g$set-rib-sealed/freq!$20535$U0r&n ((case-lambda ((g$C$29605$U0r&n) (record-mutator g$C$29605$U0r&n g$8182$16510$U0r&n '3))) (library-letrec*-identity 'g$set-rib-sealed/freq!$16525$U0r&n))) (g$set-rib-cache!$16526$U0r&n g$set-rib-cache!$20536$U0r&n ((case-lambda ((g$C$29606$U0r&n) (record-mutator g$C$29606$U0r&n g$8182$16510$U0r&n '4))) (library-letrec*-identity 'g$set-rib-cache!$16526$U0r&n))) (g$make-empty-rib$16527$U0r&n g$make-empty-rib$20537$U0r&n ((case-lambda ((g$C$29607$U0r&n) (g$C$29607$U0r&n (case-lambda ((g$C$24595$U0r&n) (g$make-rib$16516$U0r&n g$C$24595$U0r&n '() '() '() '#f '#f)))))) (library-letrec*-identity 'g$make-empty-rib$16527$U0r&n))) (g$make-cache-rib$16528$U0r&n g$make-cache-rib$20538$U0r&n ((case-lambda ((g$C$29608$U0r&n) (g$C$29608$U0r&n (case-lambda ((g$C$24596$U0r&n) (g$make-eq-hashtable$13597$U0r&n (case-lambda ((g$V$24597$U0r&n) (g$make-rib$16516$U0r&n g$C$24596$U0r&n '() '() '() '#f g$V$24597$U0r&n))))))))) (library-letrec*-identity 'g$make-cache-rib$16528$U0r&n))) (g$find-label$16529$U0r&n g$find-label$20539$U0r&n ((case-lambda ((g$C$29609$U0r&n) (g$C$29609$U0r&n (case-lambda ((g$C$24605$U0r&n g$rib$17227$U0r&n g$sym$17228$U0r&n g$mark*$17229$U0r&n) (g$rib-cache$16521$U0r&n (case-lambda ((g$V$24606$U0r&n) ((case-lambda ((g$C$24603$U0r&n g$ht$17230$U0r&n) (if g$ht$17230$U0r&n (g$hashtable-ref$13600$U0r&n (case-lambda ((g$V$24604$U0r&n) ((case-lambda ((g$C$24600$U0r&n g$cv$17231$U0r&n) ((case-lambda ((g$J$24602$U0r&n) (if g$cv$17231$U0r&n (g$assp$12744$U0r&n g$J$24602$U0r&n (case-lambda ((g$C$24599$U0r&n g$m$17233$U0r&n) (g$same-marks?$16571$U0r&n g$C$24599$U0r&n g$mark*$17229$U0r&n g$m$17233$U0r&n))) g$cv$17231$U0r&n) (g$J$24602$U0r&n '#f)))) (case-lambda ((g$V$24601$U0r&n) ((case-lambda ((g$C$24598$U0r&n g$t$17232$U0r&n) (if g$t$17232$U0r&n (cdr g$C$24598$U0r&n g$t$17232$U0r&n) (g$C$24598$U0r&n '#f)))) g$C$24600$U0r&n g$V$24601$U0r&n)))))) g$C$24603$U0r&n g$V$24604$U0r&n))) g$ht$17230$U0r&n g$sym$17228$U0r&n '#f) (g$C$24603$U0r&n '#f)))) g$C$24605$U0r&n g$V$24606$U0r&n))) g$rib$17227$U0r&n)))))) (library-letrec*-identity 'g$find-label$16529$U0r&n))) (g$extend-rib!$16530$U0r&n g$extend-rib!$20540$U0r&n ((case-lambda ((g$C$29610$U0r&n) (g$C$29610$U0r&n (case-lambda ((g$C$24656$U0r&n g$rib$17234$U0r&n g$id$17235$U0r&n g$label$17236$U0r&n g$sd?$17237$U0r&n) ((case-lambda ((g$C$24650$U0r&n g$find$17238$U0r&n) (begin (set! g$find$17238$U0r&n (case-lambda ((g$C$24607$U0r&n g$sym$17247$U0r&n g$mark*$17248$U0r&n g$sym*$17249$U0r&n g$mark**$17250$U0r&n g$label*$17251$U0r&n) (pair? (case-lambda ((g$T$24608$U0r&n) (if g$T$24608$U0r&n ((case-lambda ((g$J$24613$U0r&n) (car (case-lambda ((g$V$24614$U0r&n) (eq? (case-lambda ((g$T$24615$U0r&n) (if g$T$24615$U0r&n (car (case-lambda ((g$V$24616$U0r&n) (g$same-marks?$16571$U0r&n g$J$24613$U0r&n g$mark*$17248$U0r&n g$V$24616$U0r&n))) g$mark**$17250$U0r&n) (g$J$24613$U0r&n '#f)))) g$sym$17247$U0r&n g$V$24614$U0r&n))) g$sym*$17249$U0r&n))) (case-lambda ((g$T$24609$U0r&n) (if g$T$24609$U0r&n (g$C$24607$U0r&n g$label*$17251$U0r&n) (cdr (case-lambda ((g$V$24610$U0r&n) (cdr (case-lambda ((g$V$24611$U0r&n) (cdr (case-lambda ((g$V$24612$U0r&n) (g$find$17238$U0r&n g$C$24607$U0r&n g$sym$17247$U0r&n g$mark*$17248$U0r&n g$V$24612$U0r&n g$V$24611$U0r&n g$V$24610$U0r&n))) g$sym*$17249$U0r&n))) g$mark**$17250$U0r&n))) g$label*$17251$U0r&n))))) (g$C$24607$U0r&n '#f)))) g$sym*$17249$U0r&n)))) ((case-lambda ((g$J$24654$U0r&n) (g$rib-sealed/freq$16520$U0r&n (case-lambda ((g$T$24655$U0r&n) (if g$T$24655$U0r&n (g$assertion-violation$13786$U0r&n g$J$24654$U0r&n 'extend-rib! '"BUG: rib is sealed" g$rib$17234$U0r&n) (void g$J$24654$U0r&n)))) g$rib$17234$U0r&n))) (case-lambda (g$IGNORE$24651$U0r&n (g$stx-mark*$16544$U0r&n (case-lambda ((g$V$24652$U0r&n) (g$id->sym$16570$U0r&n (case-lambda ((g$V$24653$U0r&n) ((case-lambda ((g$C$24648$U0r&n g$sym$17239$U0r&n g$mark*$17240$U0r&n) (g$rib-sym*$16517$U0r&n (case-lambda ((g$V$24649$U0r&n) ((case-lambda ((g$C$24646$U0r&n g$sym*$17241$U0r&n) (g$find-label$16529$U0r&n (case-lambda ((g$V$24647$U0r&n) ((case-lambda ((g$C$24639$U0r&n g$t$17242$U0r&n) (if g$t$17242$U0r&n ((case-lambda ((g$C$24617$U0r&n g$p$17243$U0r&n) (eq? (case-lambda ((g$V$24618$U0r&n) (not (case-lambda ((g$T$24619$U0r&n) (if g$T$24619$U0r&n (g$syntax-violation$17186$U0r&n g$C$24617$U0r&n '#f '"multiple definitions of identifier" g$id$17235$U0r&n) (void g$C$24617$U0r&n)))) g$V$24618$U0r&n))) g$label$17236$U0r&n g$p$17243$U0r&n))) g$C$24639$U0r&n g$t$17242$U0r&n) ((case-lambda ((g$J$24641$U0r&n) (g$rib-sym*$16517$U0r&n (case-lambda ((g$V$24642$U0r&n) (g$memq$12745$U0r&n (case-lambda ((g$T$24643$U0r&n) (if g$T$24643$U0r&n (g$rib-label*$16519$U0r&n (case-lambda ((g$V$24644$U0r&n) (g$rib-mark**$16518$U0r&n (case-lambda ((g$V$24645$U0r&n) (g$find$17238$U0r&n g$J$24641$U0r&n g$sym$17239$U0r&n g$mark*$17240$U0r&n g$sym*$17241$U0r&n g$V$24645$U0r&n g$V$24644$U0r&n))) g$rib$17234$U0r&n))) g$rib$17234$U0r&n) (g$J$24641$U0r&n '#f)))) g$sym$17239$U0r&n g$V$24642$U0r&n))) g$rib$17234$U0r&n))) (case-lambda ((g$V$24640$U0r&n) ((case-lambda ((g$C$24627$U0r&n g$t$17244$U0r&n) (if g$t$17244$U0r&n ((case-lambda ((g$C$24620$U0r&n g$p$17245$U0r&n) (car (case-lambda ((g$V$24621$U0r&n) (eq? (case-lambda ((g$V$24622$U0r&n) (not (case-lambda ((g$T$24623$U0r&n) (if g$T$24623$U0r&n (not (case-lambda ((g$T$24624$U0r&n) (if g$T$24624$U0r&n (set-car! g$C$24620$U0r&n g$p$17245$U0r&n g$label$17236$U0r&n) (g$syntax-violation$17186$U0r&n g$C$24620$U0r&n '#f '"multiple definitions of identifier" g$id$17235$U0r&n)))) g$sd?$17237$U0r&n) (void g$C$24620$U0r&n)))) g$V$24622$U0r&n))) g$label$17236$U0r&n g$V$24621$U0r&n))) g$p$17245$U0r&n))) g$C$24627$U0r&n g$t$17244$U0r&n) ((case-lambda ((g$J$24636$U0r&n) (g$rib-cache$16521$U0r&n (case-lambda ((g$T$24637$U0r&n) (if g$T$24637$U0r&n (g$rib-cache$16521$U0r&n (case-lambda ((g$V$24638$U0r&n) (g$hashtable-update!$13604$U0r&n g$J$24636$U0r&n g$V$24638$U0r&n g$sym$17239$U0r&n (case-lambda ((g$C$24625$U0r&n g$e$17246$U0r&n) (cons (case-lambda ((g$V$24626$U0r&n) (cons g$C$24625$U0r&n g$V$24626$U0r&n g$e$17246$U0r&n))) g$mark*$17240$U0r&n g$label$17236$U0r&n))) '()))) g$rib$17234$U0r&n) (void g$J$24636$U0r&n)))) g$rib$17234$U0r&n))) (case-lambda (g$IGNORE$24628$U0r&n (cons (case-lambda ((g$V$24629$U0r&n) (g$set-rib-sym*!$16522$U0r&n (case-lambda (g$IGNORE$24630$U0r&n (g$rib-mark**$16518$U0r&n (case-lambda ((g$V$24631$U0r&n) (cons (case-lambda ((g$V$24632$U0r&n) (g$set-rib-mark**!$16523$U0r&n (case-lambda (g$IGNORE$24633$U0r&n (g$rib-label*$16519$U0r&n (case-lambda ((g$V$24634$U0r&n) (cons (case-lambda ((g$V$24635$U0r&n) (g$set-rib-label*!$16524$U0r&n g$C$24627$U0r&n g$rib$17234$U0r&n g$V$24635$U0r&n))) g$label$17236$U0r&n g$V$24634$U0r&n))) g$rib$17234$U0r&n))) g$rib$17234$U0r&n g$V$24632$U0r&n))) g$mark*$17240$U0r&n g$V$24631$U0r&n))) g$rib$17234$U0r&n))) g$rib$17234$U0r&n g$V$24629$U0r&n))) g$sym$17239$U0r&n g$sym*$17241$U0r&n))))))) g$C$24639$U0r&n g$V$24640$U0r&n))))))) g$C$24646$U0r&n g$V$24647$U0r&n))) g$rib$17234$U0r&n g$sym$17239$U0r&n g$mark*$17240$U0r&n))) g$C$24648$U0r&n g$V$24649$U0r&n))) g$rib$17234$U0r&n))) g$C$24650$U0r&n g$V$24653$U0r&n g$V$24652$U0r&n))) g$id$17235$U0r&n))) g$id$17235$U0r&n))))))) g$C$24656$U0r&n uninitialized)))))) (library-letrec*-identity 'g$extend-rib!$16530$U0r&n))) (g$extend-rib/nc!$16531$U0r&n g$extend-rib/nc!$20541$U0r&n ((case-lambda ((g$C$29611$U0r&n) (g$C$29611$U0r&n (case-lambda ((g$C$24673$U0r&n g$rib$17252$U0r&n g$id$17253$U0r&n g$label$17254$U0r&n) (g$stx-mark*$16544$U0r&n (case-lambda ((g$V$24674$U0r&n) (g$id->sym$16570$U0r&n (case-lambda ((g$V$24675$U0r&n) ((case-lambda ((g$C$24671$U0r&n g$sym$17255$U0r&n g$mark*$17256$U0r&n) (g$rib-sym*$16517$U0r&n (case-lambda ((g$V$24672$U0r&n) ((case-lambda ((g$C$24659$U0r&n g$sym*$17257$U0r&n) ((case-lambda ((g$J$24668$U0r&n) (g$rib-cache$16521$U0r&n (case-lambda ((g$T$24669$U0r&n) (if g$T$24669$U0r&n (g$rib-cache$16521$U0r&n (case-lambda ((g$V$24670$U0r&n) (g$hashtable-update!$13604$U0r&n g$J$24668$U0r&n g$V$24670$U0r&n g$sym$17255$U0r&n (case-lambda ((g$C$24657$U0r&n g$e$17258$U0r&n) (cons (case-lambda ((g$V$24658$U0r&n) (cons g$C$24657$U0r&n g$V$24658$U0r&n g$e$17258$U0r&n))) g$mark*$17256$U0r&n g$label$17254$U0r&n))) '()))) g$rib$17252$U0r&n) (void g$J$24668$U0r&n)))) g$rib$17252$U0r&n))) (case-lambda (g$IGNORE$24660$U0r&n (cons (case-lambda ((g$V$24661$U0r&n) (g$set-rib-sym*!$16522$U0r&n (case-lambda (g$IGNORE$24662$U0r&n (g$rib-mark**$16518$U0r&n (case-lambda ((g$V$24663$U0r&n) (cons (case-lambda ((g$V$24664$U0r&n) (g$set-rib-mark**!$16523$U0r&n (case-lambda (g$IGNORE$24665$U0r&n (g$rib-label*$16519$U0r&n (case-lambda ((g$V$24666$U0r&n) (cons (case-lambda ((g$V$24667$U0r&n) (g$set-rib-label*!$16524$U0r&n g$C$24659$U0r&n g$rib$17252$U0r&n g$V$24667$U0r&n))) g$label$17254$U0r&n g$V$24666$U0r&n))) g$rib$17252$U0r&n))) g$rib$17252$U0r&n g$V$24664$U0r&n))) g$mark*$17256$U0r&n g$V$24663$U0r&n))) g$rib$17252$U0r&n))) g$rib$17252$U0r&n g$V$24661$U0r&n))) g$sym$17255$U0r&n g$sym*$17257$U0r&n)))))) g$C$24671$U0r&n g$V$24672$U0r&n))) g$rib$17252$U0r&n))) g$C$24673$U0r&n g$V$24675$U0r&n g$V$24674$U0r&n))) g$id$17253$U0r&n))) g$id$17253$U0r&n)))))) (library-letrec*-identity 'g$extend-rib/nc!$16531$U0r&n))) (g$make-rib-map$16532$U0r&n g$make-rib-map$20542$U0r&n ((case-lambda ((g$C$29612$U0r&n) (g$C$29612$U0r&n (case-lambda ((g$C$24688$U0r&n g$sym*$17259$U0r&n) (g$make-eq-hashtable$13597$U0r&n (case-lambda ((g$V$24689$U0r&n) ((case-lambda ((g$C$24686$U0r&n g$ht$17260$U0r&n) ((case-lambda ((g$C$24685$U0r&n g$f$17261$U0r&n) ((case-lambda ((g$C$24677$U0r&n g$f$24676$U0r&n) (begin (set! g$f$17261$U0r&n g$f$24676$U0r&n) (g$C$24677$U0r&n g$f$17261$U0r&n)))) g$C$24685$U0r&n (case-lambda ((g$C$24679$U0r&n g$i$17262$U0r&n g$sym*$17263$U0r&n) (null? (case-lambda ((g$T$24680$U0r&n) (if g$T$24680$U0r&n (g$C$24679$U0r&n g$ht$17260$U0r&n) (car (case-lambda ((g$V$24681$U0r&n) (g$hashtable-update!$13604$U0r&n (case-lambda (g$IGNORE$24682$U0r&n (cdr (case-lambda ((g$V$24683$U0r&n) (+ (case-lambda ((g$V$24684$U0r&n) (g$f$17261$U0r&n g$C$24679$U0r&n g$V$24684$U0r&n g$V$24683$U0r&n))) g$i$17262$U0r&n '1))) g$sym*$17263$U0r&n))) g$ht$17260$U0r&n g$V$24681$U0r&n (case-lambda ((g$C$24678$U0r&n g$x$17264$U0r&n) (cons g$C$24678$U0r&n g$i$17262$U0r&n g$x$17264$U0r&n))) '()))) g$sym*$17263$U0r&n)))) g$sym*$17263$U0r&n)))))) (case-lambda ((g$V$24687$U0r&n) (g$V$24687$U0r&n g$C$24686$U0r&n '0 g$sym*$17259$U0r&n))) uninitialized))) g$C$24688$U0r&n g$V$24689$U0r&n))))))))) (library-letrec*-identity 'g$make-rib-map$16532$U0r&n))) (g$seal-rib!$16533$U0r&n g$seal-rib!$20543$U0r&n ((case-lambda ((g$C$29613$U0r&n) (g$C$29613$U0r&n (case-lambda ((g$C$24702$U0r&n g$rib$17265$U0r&n) (g$rib-sym*$16517$U0r&n (case-lambda ((g$V$24703$U0r&n) ((case-lambda ((g$C$24690$U0r&n g$sym*$17266$U0r&n) (null? (case-lambda ((g$V$24691$U0r&n) (not (case-lambda ((g$T$24692$U0r&n) (if g$T$24692$U0r&n (g$list->vector$13491$U0r&n (case-lambda ((g$V$24693$U0r&n) (g$set-rib-sym*!$16522$U0r&n (case-lambda (g$IGNORE$24694$U0r&n (g$rib-mark**$16518$U0r&n (case-lambda ((g$V$24695$U0r&n) (g$list->vector$13491$U0r&n (case-lambda ((g$V$24696$U0r&n) (g$set-rib-mark**!$16523$U0r&n (case-lambda (g$IGNORE$24697$U0r&n (g$rib-label*$16519$U0r&n (case-lambda ((g$V$24698$U0r&n) (g$list->vector$13491$U0r&n (case-lambda ((g$V$24699$U0r&n) (g$set-rib-label*!$16524$U0r&n (case-lambda (g$IGNORE$24700$U0r&n (g$make-rib-map$16532$U0r&n (case-lambda ((g$V$24701$U0r&n) (g$set-rib-sealed/freq!$16525$U0r&n g$C$24690$U0r&n g$rib$17265$U0r&n g$V$24701$U0r&n))) g$sym*$17266$U0r&n))) g$rib$17265$U0r&n g$V$24699$U0r&n))) g$V$24698$U0r&n))) g$rib$17265$U0r&n))) g$rib$17265$U0r&n g$V$24696$U0r&n))) g$V$24695$U0r&n))) g$rib$17265$U0r&n))) g$rib$17265$U0r&n g$V$24693$U0r&n))) g$sym*$17266$U0r&n) (void g$C$24690$U0r&n)))) g$V$24691$U0r&n))) g$sym*$17266$U0r&n))) g$C$24702$U0r&n g$V$24703$U0r&n))) g$rib$17265$U0r&n)))))) (library-letrec*-identity 'g$seal-rib!$16533$U0r&n))) (g$unseal-rib!$16534$U0r&n g$unseal-rib!$20544$U0r&n ((case-lambda ((g$C$29614$U0r&n) (g$C$29614$U0r&n (case-lambda ((g$C$24704$U0r&n g$rib$17267$U0r&n) (g$rib-sealed/freq$16520$U0r&n (case-lambda ((g$T$24705$U0r&n) (if g$T$24705$U0r&n (g$set-rib-sealed/freq!$16525$U0r&n (case-lambda (g$IGNORE$24706$U0r&n (g$rib-sym*$16517$U0r&n (case-lambda ((g$V$24707$U0r&n) (vector->list (case-lambda ((g$V$24708$U0r&n) (g$set-rib-sym*!$16522$U0r&n (case-lambda (g$IGNORE$24709$U0r&n (g$rib-mark**$16518$U0r&n (case-lambda ((g$V$24710$U0r&n) (vector->list (case-lambda ((g$V$24711$U0r&n) (g$set-rib-mark**!$16523$U0r&n (case-lambda (g$IGNORE$24712$U0r&n (g$rib-label*$16519$U0r&n (case-lambda ((g$V$24713$U0r&n) (vector->list (case-lambda ((g$V$24714$U0r&n) (g$set-rib-label*!$16524$U0r&n g$C$24704$U0r&n g$rib$17267$U0r&n g$V$24714$U0r&n))) g$V$24713$U0r&n))) g$rib$17267$U0r&n))) g$rib$17267$U0r&n g$V$24711$U0r&n))) g$V$24710$U0r&n))) g$rib$17267$U0r&n))) g$rib$17267$U0r&n g$V$24708$U0r&n))) g$V$24707$U0r&n))) g$rib$17267$U0r&n))) g$rib$17267$U0r&n '#f) (void g$C$24704$U0r&n)))) g$rib$17267$U0r&n)))))) (library-letrec*-identity 'g$unseal-rib!$16534$U0r&n))) (g$make-full-rib$16535$U0r&n g$make-full-rib$20545$U0r&n ((case-lambda ((g$C$29615$U0r&n) (g$C$29615$U0r&n (case-lambda ((g$C$24717$U0r&n g$id*$17268$U0r&n g$label*$17269$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24718$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24719$U0r&n) (g$make-rib$16516$U0r&n (case-lambda ((g$V$24720$U0r&n) ((case-lambda ((g$C$24715$U0r&n g$r$17270$U0r&n) (g$seal-rib!$16533$U0r&n (case-lambda (g$IGNORE$24716$U0r&n (g$C$24715$U0r&n g$r$17270$U0r&n))) g$r$17270$U0r&n))) g$C$24717$U0r&n g$V$24720$U0r&n))) g$V$24719$U0r&n g$V$24718$U0r&n g$label*$17269$U0r&n '#f '#f))) g$id->sym$16570$U0r&n g$id*$17268$U0r&n))) g$stx-mark*$16544$U0r&n g$id*$17268$U0r&n)))))) (library-letrec*-identity 'g$make-full-rib$16535$U0r&n))) (g$8211$16536$U0r&n g$8211$20546$U0r&n ((case-lambda ((g$C$29616$U0r&n) (make-record-type-descriptor g$C$29616$U0r&n 'stx '#f 'g$8214$U0r&n '#t '#t '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))) (library-letrec*-identity 'g$8211$16536$U0r&n))) (g$8213$16537$U0r&n g$8213$20547$U0r&n ((case-lambda ((g$C$29617$U0r&n) (g$C$29617$U0r&n '#f))) (library-letrec*-identity 'g$8213$16537$U0r&n))) (g$8212$16538$U0r&n g$8212$20548$U0r&n ((case-lambda ((g$C$29618$U0r&n) (make-record-constructor-descriptor g$C$29618$U0r&n g$8211$16536$U0r&n '#f g$8213$16537$U0r&n))) (library-letrec*-identity 'g$8212$16538$U0r&n))) (g$stx?$16541$U0r&n g$stx?$20549$U0r&n ((case-lambda ((g$C$29619$U0r&n) (record-predicate g$C$29619$U0r&n g$8211$16536$U0r&n))) (library-letrec*-identity 'g$stx?$16541$U0r&n))) (g$make-stx$16542$U0r&n g$make-stx$20550$U0r&n ((case-lambda ((g$C$29620$U0r&n) (record-constructor g$C$29620$U0r&n g$8212$16538$U0r&n))) (library-letrec*-identity 'g$make-stx$16542$U0r&n))) (g$stx-expr$16543$U0r&n g$stx-expr$20551$U0r&n ((case-lambda ((g$C$29621$U0r&n) (record-accessor g$C$29621$U0r&n g$8211$16536$U0r&n '0))) (library-letrec*-identity 'g$stx-expr$16543$U0r&n))) (g$stx-mark*$16544$U0r&n g$stx-mark*$20552$U0r&n ((case-lambda ((g$C$29622$U0r&n) (record-accessor g$C$29622$U0r&n g$8211$16536$U0r&n '1))) (library-letrec*-identity 'g$stx-mark*$16544$U0r&n))) (g$stx-subst*$16545$U0r&n g$stx-subst*$20553$U0r&n ((case-lambda ((g$C$29623$U0r&n) (record-accessor g$C$29623$U0r&n g$8211$16536$U0r&n '2))) (library-letrec*-identity 'g$stx-subst*$16545$U0r&n))) (g$stx-ae*$16546$U0r&n g$stx-ae*$20554$U0r&n ((case-lambda ((g$C$29624$U0r&n) (record-accessor g$C$29624$U0r&n g$8211$16536$U0r&n '3))) (library-letrec*-identity 'g$stx-ae*$16546$U0r&n))) (g$set-stx-expr!$16547$U0r&n g$set-stx-expr!$20555$U0r&n ((case-lambda ((g$C$29625$U0r&n) (record-mutator g$C$29625$U0r&n g$8211$16536$U0r&n '0))) (library-letrec*-identity 'g$set-stx-expr!$16547$U0r&n))) (g$set-stx-mark*!$16548$U0r&n g$set-stx-mark*!$20556$U0r&n ((case-lambda ((g$C$29626$U0r&n) (record-mutator g$C$29626$U0r&n g$8211$16536$U0r&n '1))) (library-letrec*-identity 'g$set-stx-mark*!$16548$U0r&n))) (g$set-stx-subst*!$16549$U0r&n g$set-stx-subst*!$20557$U0r&n ((case-lambda ((g$C$29627$U0r&n) (record-mutator g$C$29627$U0r&n g$8211$16536$U0r&n '2))) (library-letrec*-identity 'g$set-stx-subst*!$16549$U0r&n))) (g$set-stx-ae*!$16550$U0r&n g$set-stx-ae*!$20558$U0r&n ((case-lambda ((g$C$29628$U0r&n) (record-mutator g$C$29628$U0r&n g$8211$16536$U0r&n '3))) (library-letrec*-identity 'g$set-stx-ae*!$16550$U0r&n))) (g$rp$16551$U0r&n g$rp$20559$U0r&n ((case-lambda ((g$C$29629$U0r&n) (make-record-printer g$C$29629$U0r&n 'stx (case-lambda ((g$C$24732$U0r&n g$x$17271$U0r&n g$p$17272$U0r&n g$wr$17273$U0r&n) (display (case-lambda (g$IGNORE$24733$U0r&n (g$stx->datum$16580$U0r&n (case-lambda ((g$V$24734$U0r&n) (write (case-lambda (g$IGNORE$24735$U0r&n (g$stx-expr$16543$U0r&n (case-lambda ((g$V$24736$U0r&n) ((case-lambda ((g$C$24729$U0r&n g$expr$17274$U0r&n) (annotation? (case-lambda ((g$T$24730$U0r&n) (if g$T$24730$U0r&n (annotation-source (case-lambda ((g$V$24731$U0r&n) ((case-lambda ((g$C$24721$U0r&n g$src$17275$U0r&n) (pair? (case-lambda ((g$T$24722$U0r&n) (if g$T$24722$U0r&n (display (case-lambda (g$IGNORE$24723$U0r&n (cdr (case-lambda ((g$V$24724$U0r&n) (display (case-lambda (g$IGNORE$24725$U0r&n (display (case-lambda (g$IGNORE$24726$U0r&n (car (case-lambda ((g$V$24727$U0r&n) (display (case-lambda (g$IGNORE$24728$U0r&n (display g$C$24721$U0r&n '")" g$p$17272$U0r&n))) g$V$24727$U0r&n g$p$17272$U0r&n))) g$src$17275$U0r&n))) '" of " g$p$17272$U0r&n))) g$V$24724$U0r&n g$p$17272$U0r&n))) g$src$17275$U0r&n))) '" (" g$p$17272$U0r&n) (void g$C$24721$U0r&n)))) g$src$17275$U0r&n))) g$C$24729$U0r&n g$V$24731$U0r&n))) g$expr$17274$U0r&n) (void g$C$24729$U0r&n)))) g$expr$17274$U0r&n))) (case-lambda (g$IGNORE$24737$U0r&n (display g$C$24732$U0r&n '">" g$p$17272$U0r&n))) g$V$24736$U0r&n))) g$x$17271$U0r&n))) g$V$24734$U0r&n g$p$17272$U0r&n))) g$x$17271$U0r&n))) '"#<syntax " g$p$17272$U0r&n)))))) (library-letrec*-identity 'g$rp$16551$U0r&n))) (g$datum->stx$16552$U0r&n g$datum->stx$20560$U0r&n ((case-lambda ((g$C$29630$U0r&n) (g$C$29630$U0r&n (case-lambda ((g$C$24738$U0r&n g$id$17276$U0r&n g$datum$17277$U0r&n) (g$stx-ae*$16546$U0r&n (case-lambda ((g$V$24739$U0r&n) (g$stx-subst*$16545$U0r&n (case-lambda ((g$V$24740$U0r&n) (g$stx-mark*$16544$U0r&n (case-lambda ((g$V$24741$U0r&n) (g$make-stx$16542$U0r&n g$C$24738$U0r&n g$datum$17277$U0r&n g$V$24741$U0r&n g$V$24740$U0r&n g$V$24739$U0r&n))) g$id$17276$U0r&n))) g$id$17276$U0r&n))) g$id$17276$U0r&n)))))) (library-letrec*-identity 'g$datum->stx$16552$U0r&n))) (g$gen-mark$16553$U0r&n g$gen-mark$20561$U0r&n ((case-lambda ((g$C$29631$U0r&n) (g$C$29631$U0r&n (case-lambda ((g$C$24742$U0r&n) (string g$C$24742$U0r&n '#\m)))))) (library-letrec*-identity 'g$gen-mark$16553$U0r&n))) (g$anti-mark$16554$U0r&n g$anti-mark$20562$U0r&n ((case-lambda ((g$C$29632$U0r&n) (g$C$29632$U0r&n '#f))) (library-letrec*-identity 'g$anti-mark$16554$U0r&n))) (g$anti-mark?$16555$U0r&n g$anti-mark?$20563$U0r&n ((case-lambda ((g$C$29633$U0r&n) (g$C$29633$U0r&n not))) (library-letrec*-identity 'g$anti-mark?$16555$U0r&n))) (g$join-wraps$16556$U0r&n g$join-wraps$20564$U0r&n ((case-lambda ((g$C$29634$U0r&n) (g$C$29634$U0r&n (case-lambda ((g$C$24773$U0r&n g$m1*$17278$U0r&n g$s1*$17279$U0r&n g$ae1*$17280$U0r&n g$e$17281$U0r&n) ((case-lambda ((g$C$24769$U0r&n g$cancel$17282$U0r&n) (begin (set! g$cancel$17282$U0r&n (case-lambda ((g$C$24751$U0r&n g$ls1$17286$U0r&n g$ls2$17287$U0r&n) (cdr (case-lambda ((g$V$24752$U0r&n) (car (case-lambda ((g$V$24753$U0r&n) ((case-lambda ((g$C$24750$U0r&n g$f$17288$U0r&n) ((case-lambda ((g$C$24744$U0r&n g$f$24743$U0r&n) (begin (set! g$f$17288$U0r&n g$f$24743$U0r&n) (g$C$24744$U0r&n g$f$17288$U0r&n)))) g$C$24750$U0r&n (case-lambda ((g$C$24745$U0r&n g$x$17289$U0r&n g$ls1$17290$U0r&n) (null? (case-lambda ((g$T$24746$U0r&n) (if g$T$24746$U0r&n (cdr g$C$24745$U0r&n g$ls2$17287$U0r&n) (cdr (case-lambda ((g$V$24747$U0r&n) (car (case-lambda ((g$V$24748$U0r&n) (g$f$17288$U0r&n (case-lambda ((g$V$24749$U0r&n) (cons g$C$24745$U0r&n g$x$17289$U0r&n g$V$24749$U0r&n))) g$V$24748$U0r&n g$V$24747$U0r&n))) g$ls1$17290$U0r&n))) g$ls1$17290$U0r&n)))) g$ls1$17290$U0r&n)))))) (case-lambda ((g$V$24754$U0r&n) (g$V$24754$U0r&n g$C$24751$U0r&n g$V$24753$U0r&n g$V$24752$U0r&n))) uninitialized))) g$ls1$17286$U0r&n))) g$ls1$17286$U0r&n)))) (g$stx-ae*$16546$U0r&n (case-lambda ((g$V$24770$U0r&n) (g$stx-subst*$16545$U0r&n (case-lambda ((g$V$24771$U0r&n) (g$stx-mark*$16544$U0r&n (case-lambda ((g$V$24772$U0r&n) ((case-lambda ((g$C$24755$U0r&n g$m2*$17283$U0r&n g$s2*$17284$U0r&n g$ae2*$17285$U0r&n) ((case-lambda ((g$J$24763$U0r&n) (null? (case-lambda ((g$V$24764$U0r&n) (not (case-lambda ((g$T$24765$U0r&n) (if g$T$24765$U0r&n (null? (case-lambda ((g$V$24766$U0r&n) (not (case-lambda ((g$T$24767$U0r&n) (if g$T$24767$U0r&n (car (case-lambda ((g$V$24768$U0r&n) (g$anti-mark?$16555$U0r&n g$J$24763$U0r&n g$V$24768$U0r&n))) g$m2*$17283$U0r&n) (g$J$24763$U0r&n '#f)))) g$V$24766$U0r&n))) g$m2*$17283$U0r&n) (g$J$24763$U0r&n '#f)))) g$V$24764$U0r&n))) g$m1*$17278$U0r&n))) (case-lambda ((g$T$24756$U0r&n) (if g$T$24756$U0r&n (g$cancel$17282$U0r&n (case-lambda ((g$V$24757$U0r&n) (g$cancel$17282$U0r&n (case-lambda ((g$V$24758$U0r&n) (g$cancel$17282$U0r&n (case-lambda ((g$V$24759$U0r&n) (values g$C$24755$U0r&n g$V$24759$U0r&n g$V$24758$U0r&n g$V$24757$U0r&n))) g$m1*$17278$U0r&n g$m2*$17283$U0r&n))) g$s1*$17279$U0r&n g$s2*$17284$U0r&n))) g$ae1*$17280$U0r&n g$ae2*$17285$U0r&n) (append (case-lambda ((g$V$24760$U0r&n) (append (case-lambda ((g$V$24761$U0r&n) (append (case-lambda ((g$V$24762$U0r&n) (values g$C$24755$U0r&n g$V$24762$U0r&n g$V$24761$U0r&n g$V$24760$U0r&n))) g$m1*$17278$U0r&n g$m2*$17283$U0r&n))) g$s1*$17279$U0r&n g$s2*$17284$U0r&n))) g$ae1*$17280$U0r&n g$ae2*$17285$U0r&n))))))) g$C$24769$U0r&n g$V$24772$U0r&n g$V$24771$U0r&n g$V$24770$U0r&n))) g$e$17281$U0r&n))) g$e$17281$U0r&n))) g$e$17281$U0r&n)))) g$C$24773$U0r&n uninitialized)))))) (library-letrec*-identity 'g$join-wraps$16556$U0r&n))) (g$mkstx$16557$U0r&n g$mkstx$20565$U0r&n ((case-lambda ((g$C$29635$U0r&n) (g$C$29635$U0r&n (case-lambda ((g$C$24778$U0r&n g$e$17291$U0r&n g$m*$17292$U0r&n g$s*$17293$U0r&n g$ae*$17294$U0r&n) ((case-lambda ((g$J$24780$U0r&n) (g$stx?$16541$U0r&n (case-lambda ((g$T$24781$U0r&n) (if g$T$24781$U0r&n (g$top-marked?$16503$U0r&n (case-lambda ((g$V$24782$U0r&n) (not g$J$24780$U0r&n g$V$24782$U0r&n))) g$m*$17292$U0r&n) (g$J$24780$U0r&n '#f)))) g$e$17291$U0r&n))) (case-lambda ((g$T$24779$U0r&n) (if g$T$24779$U0r&n (call-with-values g$C$24778$U0r&n (case-lambda ((g$C$24774$U0r&n) (g$join-wraps$16556$U0r&n g$C$24774$U0r&n g$m*$17292$U0r&n g$s*$17293$U0r&n g$ae*$17294$U0r&n g$e$17291$U0r&n))) (case-lambda ((g$C$24777$U0r&n g$m*$17298$U0r&n g$s*$17299$U0r&n g$ae*$17300$U0r&n) ((case-lambda ((g$C$24775$U0r&n g$ae*$17301$U0r&n g$s*$17302$U0r&n g$m*$17303$U0r&n) (g$stx-expr$16543$U0r&n (case-lambda ((g$V$24776$U0r&n) (g$make-stx$16542$U0r&n g$C$24775$U0r&n g$V$24776$U0r&n g$m*$17303$U0r&n g$s*$17302$U0r&n g$ae*$17301$U0r&n))) g$e$17291$U0r&n))) g$C$24777$U0r&n g$ae*$17300$U0r&n g$s*$17299$U0r&n g$m*$17298$U0r&n)))) (g$make-stx$16542$U0r&n g$C$24778$U0r&n g$e$17291$U0r&n g$m*$17292$U0r&n g$s*$17293$U0r&n g$ae*$17294$U0r&n)))))))))) (library-letrec*-identity 'g$mkstx$16557$U0r&n))) (g$add-mark$16558$U0r&n g$add-mark$20566$U0r&n ((case-lambda ((g$C$29636$U0r&n) (g$C$29636$U0r&n (case-lambda ((g$C$24783$U0r&n g$m$17304$U0r&n g$e$17305$U0r&n g$ae$17306$U0r&n) (list (case-lambda ((g$V$24784$U0r&n) (list (case-lambda ((g$V$24785$U0r&n) (g$mkstx$16557$U0r&n g$C$24783$U0r&n g$e$17305$U0r&n g$V$24785$U0r&n '(shift) g$V$24784$U0r&n))) g$m$17304$U0r&n))) g$ae$17306$U0r&n)))))) (library-letrec*-identity 'g$add-mark$16558$U0r&n))) (g$add-subst$16559$U0r&n g$add-subst$20567$U0r&n ((case-lambda ((g$C$29637$U0r&n) (g$C$29637$U0r&n (case-lambda ((g$C$24786$U0r&n g$subst$17307$U0r&n g$e$17308$U0r&n) (list (case-lambda ((g$V$24787$U0r&n) (g$mkstx$16557$U0r&n g$C$24786$U0r&n g$e$17308$U0r&n '() g$V$24787$U0r&n '()))) g$subst$17307$U0r&n)))))) (library-letrec*-identity 'g$add-subst$16559$U0r&n))) (g$syntax-kind?$16560$U0r&n g$syntax-kind?$20568$U0r&n ((case-lambda ((g$C$29638$U0r&n) (g$C$29638$U0r&n (case-lambda ((g$C$24788$U0r&n g$x$17309$U0r&n g$p?$17310$U0r&n) (g$stx?$16541$U0r&n (case-lambda ((g$T$24789$U0r&n) (if g$T$24789$U0r&n (g$stx-expr$16543$U0r&n (case-lambda ((g$V$24790$U0r&n) (g$syntax-kind?$16560$U0r&n g$C$24788$U0r&n g$V$24790$U0r&n g$p?$17310$U0r&n))) g$x$17309$U0r&n) (annotation? (case-lambda ((g$T$24791$U0r&n) (if g$T$24791$U0r&n (annotation-expression (case-lambda ((g$V$24792$U0r&n) (g$syntax-kind?$16560$U0r&n g$C$24788$U0r&n g$V$24792$U0r&n g$p?$17310$U0r&n))) g$x$17309$U0r&n) (g$p?$17310$U0r&n g$C$24788$U0r&n g$x$17309$U0r&n)))) g$x$17309$U0r&n)))) g$x$17309$U0r&n)))))) (library-letrec*-identity 'g$syntax-kind?$16560$U0r&n))) (g$syntax-vector->list$16561$U0r&n g$syntax-vector->list$20569$U0r&n ((case-lambda ((g$C$29639$U0r&n) (g$C$29639$U0r&n (case-lambda ((g$C$24795$U0r&n g$x$17311$U0r&n) (g$stx?$16541$U0r&n (case-lambda ((g$T$24796$U0r&n) (if g$T$24796$U0r&n (g$stx-ae*$16546$U0r&n (case-lambda ((g$V$24797$U0r&n) (g$stx-subst*$16545$U0r&n (case-lambda ((g$V$24798$U0r&n) (g$stx-mark*$16544$U0r&n (case-lambda ((g$V$24799$U0r&n) (g$stx-expr$16543$U0r&n (case-lambda ((g$V$24800$U0r&n) (g$syntax-vector->list$16561$U0r&n (case-lambda ((g$V$24801$U0r&n) ((case-lambda ((g$C$24794$U0r&n g$ls$17312$U0r&n g$m*$17313$U0r&n g$s*$17314$U0r&n g$ae*$17315$U0r&n) (g$map$12753$U0r&n g$C$24794$U0r&n (case-lambda ((g$C$24793$U0r&n g$x$17316$U0r&n) (g$mkstx$16557$U0r&n g$C$24793$U0r&n g$x$17316$U0r&n g$m*$17313$U0r&n g$s*$17314$U0r&n g$ae*$17315$U0r&n))) g$ls$17312$U0r&n))) g$C$24795$U0r&n g$V$24801$U0r&n g$V$24799$U0r&n g$V$24798$U0r&n g$V$24797$U0r&n))) g$V$24800$U0r&n))) g$x$17311$U0r&n))) g$x$17311$U0r&n))) g$x$17311$U0r&n))) g$x$17311$U0r&n) (annotation? (case-lambda ((g$T$24802$U0r&n) (if g$T$24802$U0r&n (annotation-expression (case-lambda ((g$V$24803$U0r&n) (g$syntax-vector->list$16561$U0r&n g$C$24795$U0r&n g$V$24803$U0r&n))) g$x$17311$U0r&n) (g$vector?$13494$U0r&n (case-lambda ((g$T$24804$U0r&n) (if g$T$24804$U0r&n (vector->list g$C$24795$U0r&n g$x$17311$U0r&n) (g$assertion-violation$13786$U0r&n g$C$24795$U0r&n 'syntax-vector->list '"BUG: not a syntax vector" g$x$17311$U0r&n)))) g$x$17311$U0r&n)))) g$x$17311$U0r&n)))) g$x$17311$U0r&n)))))) (library-letrec*-identity 'g$syntax-vector->list$16561$U0r&n))) (g$syntax-pair?$16562$U0r&n g$syntax-pair?$20570$U0r&n ((case-lambda ((g$C$29640$U0r&n) (g$C$29640$U0r&n (case-lambda ((g$C$24805$U0r&n g$x$17317$U0r&n) (g$syntax-kind?$16560$U0r&n g$C$24805$U0r&n g$x$17317$U0r&n pair?)))))) (library-letrec*-identity 'g$syntax-pair?$16562$U0r&n))) (g$syntax-vector?$16563$U0r&n g$syntax-vector?$20571$U0r&n ((case-lambda ((g$C$29641$U0r&n) (g$C$29641$U0r&n (case-lambda ((g$C$24806$U0r&n g$x$17318$U0r&n) (g$syntax-kind?$16560$U0r&n g$C$24806$U0r&n g$x$17318$U0r&n g$vector?$13494$U0r&n)))))) (library-letrec*-identity 'g$syntax-vector?$16563$U0r&n))) (g$syntax-null?$16564$U0r&n g$syntax-null?$20572$U0r&n ((case-lambda ((g$C$29642$U0r&n) (g$C$29642$U0r&n (case-lambda ((g$C$24807$U0r&n g$x$17319$U0r&n) (g$syntax-kind?$16560$U0r&n g$C$24807$U0r&n g$x$17319$U0r&n null?)))))) (library-letrec*-identity 'g$syntax-null?$16564$U0r&n))) (g$syntax-list?$16565$U0r&n g$syntax-list?$20573$U0r&n ((case-lambda ((g$C$29643$U0r&n) (g$C$29643$U0r&n (case-lambda ((g$C$24811$U0r&n g$x$17320$U0r&n) (g$syntax-null?$16564$U0r&n (case-lambda ((g$V$24812$U0r&n) ((case-lambda ((g$C$24808$U0r&n g$t$17321$U0r&n) (if g$t$17321$U0r&n (g$C$24808$U0r&n g$t$17321$U0r&n) (g$syntax-pair?$16562$U0r&n (case-lambda ((g$T$24809$U0r&n) (if g$T$24809$U0r&n (g$syntax-cdr$16567$U0r&n (case-lambda ((g$V$24810$U0r&n) (g$syntax-list?$16565$U0r&n g$C$24808$U0r&n g$V$24810$U0r&n))) g$x$17320$U0r&n) (g$C$24808$U0r&n '#f)))) g$x$17320$U0r&n)))) g$C$24811$U0r&n g$V$24812$U0r&n))) g$x$17320$U0r&n)))))) (library-letrec*-identity 'g$syntax-list?$16565$U0r&n))) (g$syntax-car$16566$U0r&n g$syntax-car$20574$U0r&n ((case-lambda ((g$C$29644$U0r&n) (g$C$29644$U0r&n (case-lambda ((g$C$24813$U0r&n g$x$17322$U0r&n) (g$stx?$16541$U0r&n (case-lambda ((g$T$24814$U0r&n) (if g$T$24814$U0r&n (g$stx-ae*$16546$U0r&n (case-lambda ((g$V$24815$U0r&n) (g$stx-subst*$16545$U0r&n (case-lambda ((g$V$24816$U0r&n) (g$stx-mark*$16544$U0r&n (case-lambda ((g$V$24817$U0r&n) (g$stx-expr$16543$U0r&n (case-lambda ((g$V$24818$U0r&n) (g$syntax-car$16566$U0r&n (case-lambda ((g$V$24819$U0r&n) (g$mkstx$16557$U0r&n g$C$24813$U0r&n g$V$24819$U0r&n g$V$24817$U0r&n g$V$24816$U0r&n g$V$24815$U0r&n))) g$V$24818$U0r&n))) g$x$17322$U0r&n))) g$x$17322$U0r&n))) g$x$17322$U0r&n))) g$x$17322$U0r&n) (annotation? (case-lambda ((g$T$24820$U0r&n) (if g$T$24820$U0r&n (annotation-expression (case-lambda ((g$V$24821$U0r&n) (g$syntax-car$16566$U0r&n g$C$24813$U0r&n g$V$24821$U0r&n))) g$x$17322$U0r&n) (pair? (case-lambda ((g$T$24822$U0r&n) (if g$T$24822$U0r&n (car g$C$24813$U0r&n g$x$17322$U0r&n) (g$assertion-violation$13786$U0r&n g$C$24813$U0r&n 'syntax-car '"BUG: not a pair" g$x$17322$U0r&n)))) g$x$17322$U0r&n)))) g$x$17322$U0r&n)))) g$x$17322$U0r&n)))))) (library-letrec*-identity 'g$syntax-car$16566$U0r&n))) (g$syntax-cdr$16567$U0r&n g$syntax-cdr$20575$U0r&n ((case-lambda ((g$C$29645$U0r&n) (g$C$29645$U0r&n (case-lambda ((g$C$24823$U0r&n g$x$17323$U0r&n) (g$stx?$16541$U0r&n (case-lambda ((g$T$24824$U0r&n) (if g$T$24824$U0r&n (g$stx-ae*$16546$U0r&n (case-lambda ((g$V$24825$U0r&n) (g$stx-subst*$16545$U0r&n (case-lambda ((g$V$24826$U0r&n) (g$stx-mark*$16544$U0r&n (case-lambda ((g$V$24827$U0r&n) (g$stx-expr$16543$U0r&n (case-lambda ((g$V$24828$U0r&n) (g$syntax-cdr$16567$U0r&n (case-lambda ((g$V$24829$U0r&n) (g$mkstx$16557$U0r&n g$C$24823$U0r&n g$V$24829$U0r&n g$V$24827$U0r&n g$V$24826$U0r&n g$V$24825$U0r&n))) g$V$24828$U0r&n))) g$x$17323$U0r&n))) g$x$17323$U0r&n))) g$x$17323$U0r&n))) g$x$17323$U0r&n) (annotation? (case-lambda ((g$T$24830$U0r&n) (if g$T$24830$U0r&n (annotation-expression (case-lambda ((g$V$24831$U0r&n) (g$syntax-cdr$16567$U0r&n g$C$24823$U0r&n g$V$24831$U0r&n))) g$x$17323$U0r&n) (pair? (case-lambda ((g$T$24832$U0r&n) (if g$T$24832$U0r&n (cdr g$C$24823$U0r&n g$x$17323$U0r&n) (g$assertion-violation$13786$U0r&n g$C$24823$U0r&n 'syntax-cdr '"BUG: not a pair" g$x$17323$U0r&n)))) g$x$17323$U0r&n)))) g$x$17323$U0r&n)))) g$x$17323$U0r&n)))))) (library-letrec*-identity 'g$syntax-cdr$16567$U0r&n))) (g$syntax->list$16568$U0r&n g$syntax->list$20576$U0r&n ((case-lambda ((g$C$29646$U0r&n) (g$C$29646$U0r&n (case-lambda ((g$C$24833$U0r&n g$x$17324$U0r&n) (g$syntax-pair?$16562$U0r&n (case-lambda ((g$T$24834$U0r&n) (if g$T$24834$U0r&n (g$syntax-cdr$16567$U0r&n (case-lambda ((g$V$24835$U0r&n) (g$syntax->list$16568$U0r&n (case-lambda ((g$V$24836$U0r&n) (g$syntax-car$16566$U0r&n (case-lambda ((g$V$24837$U0r&n) (cons g$C$24833$U0r&n g$V$24837$U0r&n g$V$24836$U0r&n))) g$x$17324$U0r&n))) g$V$24835$U0r&n))) g$x$17324$U0r&n) (g$syntax-null?$16564$U0r&n (case-lambda ((g$T$24838$U0r&n) (if g$T$24838$U0r&n (g$C$24833$U0r&n '()) (g$assertion-violation$13786$U0r&n g$C$24833$U0r&n 'syntax->list '"BUG: invalid argument" g$x$17324$U0r&n)))) g$x$17324$U0r&n)))) g$x$17324$U0r&n)))))) (library-letrec*-identity 'g$syntax->list$16568$U0r&n))) (g$id?$16569$U0r&n g$id?$20577$U0r&n ((case-lambda ((g$C$29647$U0r&n) (g$C$29647$U0r&n (case-lambda ((g$C$24843$U0r&n g$x$17325$U0r&n) (g$stx?$16541$U0r&n (case-lambda ((g$T$24844$U0r&n) (if g$T$24844$U0r&n (g$stx-expr$16543$U0r&n (case-lambda ((g$V$24845$U0r&n) ((case-lambda ((g$C$24839$U0r&n g$expr$17326$U0r&n) ((case-lambda ((g$J$24841$U0r&n) (annotation? (case-lambda ((g$T$24842$U0r&n) (if g$T$24842$U0r&n (annotation-stripped g$J$24841$U0r&n g$expr$17326$U0r&n) (g$J$24841$U0r&n g$expr$17326$U0r&n)))) g$expr$17326$U0r&n))) (case-lambda ((g$V$24840$U0r&n) (g$symbol?$13496$U0r&n g$C$24839$U0r&n g$V$24840$U0r&n)))))) g$C$24843$U0r&n g$V$24845$U0r&n))) g$x$17325$U0r&n) (g$C$24843$U0r&n '#f)))) g$x$17325$U0r&n)))))) (library-letrec*-identity 'g$id?$16569$U0r&n))) (g$id->sym$16570$U0r&n g$id->sym$20578$U0r&n ((case-lambda ((g$C$29648$U0r&n) (g$C$29648$U0r&n (case-lambda ((g$C$24852$U0r&n g$x$17327$U0r&n) ((case-lambda ((g$J$24855$U0r&n) (g$stx?$16541$U0r&n (case-lambda ((g$V$24856$U0r&n) (not (case-lambda ((g$T$24857$U0r&n) (if g$T$24857$U0r&n (g$error$13787$U0r&n g$J$24855$U0r&n 'id->sym '"BUG in ikarus: not an id" g$x$17327$U0r&n) (void g$J$24855$U0r&n)))) g$V$24856$U0r&n))) g$x$17327$U0r&n))) (case-lambda (g$IGNORE$24853$U0r&n (g$stx-expr$16543$U0r&n (case-lambda ((g$V$24854$U0r&n) ((case-lambda ((g$C$24848$U0r&n g$expr$17328$U0r&n) ((case-lambda ((g$J$24850$U0r&n) (annotation? (case-lambda ((g$T$24851$U0r&n) (if g$T$24851$U0r&n (annotation-stripped g$J$24850$U0r&n g$expr$17328$U0r&n) (g$J$24850$U0r&n g$expr$17328$U0r&n)))) g$expr$17328$U0r&n))) (case-lambda ((g$V$24849$U0r&n) ((case-lambda ((g$C$24846$U0r&n g$sym$17329$U0r&n) (g$symbol?$13496$U0r&n (case-lambda ((g$T$24847$U0r&n) (if g$T$24847$U0r&n (g$C$24846$U0r&n g$sym$17329$U0r&n) (g$error$13787$U0r&n g$C$24846$U0r&n 'id->sym '"BUG in ikarus: not an id" g$x$17327$U0r&n)))) g$sym$17329$U0r&n))) g$C$24848$U0r&n g$V$24849$U0r&n)))))) g$C$24852$U0r&n g$V$24854$U0r&n))) g$x$17327$U0r&n))))))))) (library-letrec*-identity 'g$id->sym$16570$U0r&n))) (g$same-marks?$16571$U0r&n g$same-marks?$20579$U0r&n ((case-lambda ((g$C$29649$U0r&n) (g$C$29649$U0r&n (case-lambda ((g$C$24866$U0r&n g$x$17330$U0r&n g$y$17331$U0r&n) ((case-lambda ((g$J$24868$U0r&n) (null? (case-lambda ((g$T$24869$U0r&n) (if g$T$24869$U0r&n (null? g$J$24868$U0r&n g$y$17331$U0r&n) (g$J$24868$U0r&n '#f)))) g$x$17330$U0r&n))) (case-lambda ((g$V$24867$U0r&n) ((case-lambda ((g$C$24858$U0r&n g$t$17332$U0r&n) (if g$t$17332$U0r&n (g$C$24858$U0r&n g$t$17332$U0r&n) (pair? (case-lambda ((g$T$24859$U0r&n) (if g$T$24859$U0r&n (pair? (case-lambda ((g$T$24860$U0r&n) (if g$T$24860$U0r&n (car (case-lambda ((g$V$24861$U0r&n) (car (case-lambda ((g$V$24862$U0r&n) (eq? (case-lambda ((g$T$24863$U0r&n) (if g$T$24863$U0r&n (cdr (case-lambda ((g$V$24864$U0r&n) (cdr (case-lambda ((g$V$24865$U0r&n) (g$same-marks?$16571$U0r&n g$C$24858$U0r&n g$V$24865$U0r&n g$V$24864$U0r&n))) g$x$17330$U0r&n))) g$y$17331$U0r&n) (g$C$24858$U0r&n '#f)))) g$V$24862$U0r&n g$V$24861$U0r&n))) g$x$17330$U0r&n))) g$y$17331$U0r&n) (g$C$24858$U0r&n '#f)))) g$y$17331$U0r&n) (g$C$24858$U0r&n '#f)))) g$x$17330$U0r&n)))) g$C$24866$U0r&n g$V$24867$U0r&n))))))))) (library-letrec*-identity 'g$same-marks?$16571$U0r&n))) (g$bound-id=?$16572$U0r&n g$bound-id=?$20580$U0r&n ((case-lambda ((g$C$29650$U0r&n) (g$C$29650$U0r&n (case-lambda ((g$C$24870$U0r&n g$x$17333$U0r&n g$y$17334$U0r&n) (g$id->sym$16570$U0r&n (case-lambda ((g$V$24871$U0r&n) (g$id->sym$16570$U0r&n (case-lambda ((g$V$24872$U0r&n) (eq? (case-lambda ((g$T$24873$U0r&n) (if g$T$24873$U0r&n (g$stx-mark*$16544$U0r&n (case-lambda ((g$V$24874$U0r&n) (g$stx-mark*$16544$U0r&n (case-lambda ((g$V$24875$U0r&n) (g$same-marks?$16571$U0r&n g$C$24870$U0r&n g$V$24875$U0r&n g$V$24874$U0r&n))) g$x$17333$U0r&n))) g$y$17334$U0r&n) (g$C$24870$U0r&n '#f)))) g$V$24872$U0r&n g$V$24871$U0r&n))) g$x$17333$U0r&n))) g$y$17334$U0r&n)))))) (library-letrec*-identity 'g$bound-id=?$16572$U0r&n))) (g$free-id=?$16573$U0r&n g$free-id=?$20581$U0r&n ((case-lambda ((g$C$29651$U0r&n) (g$C$29651$U0r&n (case-lambda ((g$C$24881$U0r&n g$i$17335$U0r&n g$j$17336$U0r&n) (g$id->real-label$16583$U0r&n (case-lambda ((g$V$24882$U0r&n) (g$id->real-label$16583$U0r&n (case-lambda ((g$V$24883$U0r&n) ((case-lambda ((g$C$24877$U0r&n g$t0$17337$U0r&n g$t1$17338$U0r&n) ((case-lambda ((g$C$24876$U0r&n g$t$17339$U0r&n) (if g$t$17339$U0r&n (g$C$24876$U0r&n g$t$17339$U0r&n) (g$C$24876$U0r&n g$t1$17338$U0r&n)))) (case-lambda ((g$T$24878$U0r&n) (if g$T$24878$U0r&n (eq? g$C$24877$U0r&n g$t0$17337$U0r&n g$t1$17338$U0r&n) (g$id->sym$16570$U0r&n (case-lambda ((g$V$24879$U0r&n) (g$id->sym$16570$U0r&n (case-lambda ((g$V$24880$U0r&n) (eq? g$C$24877$U0r&n g$V$24880$U0r&n g$V$24879$U0r&n))) g$i$17335$U0r&n))) g$j$17336$U0r&n)))) g$t0$17337$U0r&n))) g$C$24881$U0r&n g$V$24883$U0r&n g$V$24882$U0r&n))) g$i$17335$U0r&n))) g$j$17336$U0r&n)))))) (library-letrec*-identity 'g$free-id=?$16573$U0r&n))) (g$valid-bound-ids?$16574$U0r&n g$valid-bound-ids?$20582$U0r&n ((case-lambda ((g$C$29652$U0r&n) (g$C$29652$U0r&n (case-lambda ((g$C$24884$U0r&n g$id*$17340$U0r&n) (g$for-all$12751$U0r&n (case-lambda ((g$T$24885$U0r&n) (if g$T$24885$U0r&n (g$distinct-bound-ids?$16575$U0r&n g$C$24884$U0r&n g$id*$17340$U0r&n) (g$C$24884$U0r&n '#f)))) g$id?$16569$U0r&n g$id*$17340$U0r&n)))))) (library-letrec*-identity 'g$valid-bound-ids?$16574$U0r&n))) (g$distinct-bound-ids?$16575$U0r&n g$distinct-bound-ids?$20583$U0r&n ((case-lambda ((g$C$29653$U0r&n) (g$C$29653$U0r&n (case-lambda ((g$C$24892$U0r&n g$id*$17341$U0r&n) (null? (case-lambda ((g$V$24893$U0r&n) ((case-lambda ((g$C$24886$U0r&n g$t$17342$U0r&n) (if g$t$17342$U0r&n (g$C$24886$U0r&n g$t$17342$U0r&n) (cdr (case-lambda ((g$V$24887$U0r&n) (car (case-lambda ((g$V$24888$U0r&n) (g$bound-id-member?$16576$U0r&n (case-lambda ((g$V$24889$U0r&n) (not (case-lambda ((g$T$24890$U0r&n) (if g$T$24890$U0r&n (cdr (case-lambda ((g$V$24891$U0r&n) (g$distinct-bound-ids?$16575$U0r&n g$C$24886$U0r&n g$V$24891$U0r&n))) g$id*$17341$U0r&n) (g$C$24886$U0r&n '#f)))) g$V$24889$U0r&n))) g$V$24888$U0r&n g$V$24887$U0r&n))) g$id*$17341$U0r&n))) g$id*$17341$U0r&n)))) g$C$24892$U0r&n g$V$24893$U0r&n))) g$id*$17341$U0r&n)))))) (library-letrec*-identity 'g$distinct-bound-ids?$16575$U0r&n))) (g$bound-id-member?$16576$U0r&n g$bound-id-member?$20584$U0r&n ((case-lambda ((g$C$29654$U0r&n) (g$C$29654$U0r&n (case-lambda ((g$C$24896$U0r&n g$id$17343$U0r&n g$id*$17344$U0r&n) (pair? (case-lambda ((g$T$24897$U0r&n) (if g$T$24897$U0r&n (car (case-lambda ((g$V$24898$U0r&n) (g$bound-id=?$16572$U0r&n (case-lambda ((g$V$24899$U0r&n) ((case-lambda ((g$C$24894$U0r&n g$t$17345$U0r&n) (if g$t$17345$U0r&n (g$C$24894$U0r&n g$t$17345$U0r&n) (cdr (case-lambda ((g$V$24895$U0r&n) (g$bound-id-member?$16576$U0r&n g$C$24894$U0r&n g$id$17343$U0r&n g$V$24895$U0r&n))) g$id*$17344$U0r&n)))) g$C$24896$U0r&n g$V$24899$U0r&n))) g$id$17343$U0r&n g$V$24898$U0r&n))) g$id*$17344$U0r&n) (g$C$24896$U0r&n '#f)))) g$id*$17344$U0r&n)))))) (library-letrec*-identity 'g$bound-id-member?$16576$U0r&n))) (g$self-evaluating?$16577$U0r&n g$self-evaluating?$20585$U0r&n ((case-lambda ((g$C$29655$U0r&n) (g$C$29655$U0r&n (case-lambda ((g$C$24907$U0r&n g$x$17346$U0r&n) (number? (case-lambda ((g$V$24908$U0r&n) ((case-lambda ((g$C$24905$U0r&n g$t$17347$U0r&n) (if g$t$17347$U0r&n (g$C$24905$U0r&n g$t$17347$U0r&n) (string? (case-lambda ((g$V$24906$U0r&n) ((case-lambda ((g$C$24903$U0r&n g$t$17348$U0r&n) (if g$t$17348$U0r&n (g$C$24903$U0r&n g$t$17348$U0r&n) (g$char?$13493$U0r&n (case-lambda ((g$V$24904$U0r&n) ((case-lambda ((g$C$24901$U0r&n g$t$17349$U0r&n) (if g$t$17349$U0r&n (g$C$24901$U0r&n g$t$17349$U0r&n) (g$boolean?$13497$U0r&n (case-lambda ((g$V$24902$U0r&n) ((case-lambda ((g$C$24900$U0r&n g$t$17350$U0r&n) (if g$t$17350$U0r&n (g$C$24900$U0r&n g$t$17350$U0r&n) (g$bytevector?$13495$U0r&n g$C$24900$U0r&n g$x$17346$U0r&n)))) g$C$24901$U0r&n g$V$24902$U0r&n))) g$x$17346$U0r&n)))) g$C$24903$U0r&n g$V$24904$U0r&n))) g$x$17346$U0r&n)))) g$C$24905$U0r&n g$V$24906$U0r&n))) g$x$17346$U0r&n)))) g$C$24907$U0r&n g$V$24908$U0r&n))) g$x$17346$U0r&n)))))) (library-letrec*-identity 'g$self-evaluating?$16577$U0r&n))) (g$strip-annotations$16578$U0r&n g$strip-annotations$20586$U0r&n ((case-lambda ((g$C$29656$U0r&n) (g$C$29656$U0r&n (case-lambda ((g$C$24909$U0r&n g$x$17351$U0r&n) (pair? (case-lambda ((g$T$24910$U0r&n) (if g$T$24910$U0r&n (cdr (case-lambda ((g$V$24911$U0r&n) (g$strip-annotations$16578$U0r&n (case-lambda ((g$V$24912$U0r&n) (car (case-lambda ((g$V$24913$U0r&n) (g$strip-annotations$16578$U0r&n (case-lambda ((g$V$24914$U0r&n) (cons g$C$24909$U0r&n g$V$24914$U0r&n g$V$24912$U0r&n))) g$V$24913$U0r&n))) g$x$17351$U0r&n))) g$V$24911$U0r&n))) g$x$17351$U0r&n) (g$vector?$13494$U0r&n (case-lambda ((g$T$24915$U0r&n) (if g$T$24915$U0r&n (g$vector-map$13557$U0r&n g$C$24909$U0r&n g$strip-annotations$16578$U0r&n g$x$17351$U0r&n) (annotation? (case-lambda ((g$T$24916$U0r&n) (if g$T$24916$U0r&n (annotation-stripped g$C$24909$U0r&n g$x$17351$U0r&n) (g$C$24909$U0r&n g$x$17351$U0r&n)))) g$x$17351$U0r&n)))) g$x$17351$U0r&n)))) g$x$17351$U0r&n)))))) (library-letrec*-identity 'g$strip-annotations$16578$U0r&n))) (g$strip$16579$U0r&n g$strip$20587$U0r&n ((case-lambda ((g$C$29657$U0r&n) (g$C$29657$U0r&n (case-lambda ((g$C$24952$U0r&n g$x$17352$U0r&n g$m*$17353$U0r&n) (g$top-marked?$16503$U0r&n (case-lambda ((g$T$24953$U0r&n) (if g$T$24953$U0r&n (annotation? (case-lambda ((g$V$24954$U0r&n) ((case-lambda ((g$C$24922$U0r&n g$t$17354$U0r&n) (if g$t$17354$U0r&n (g$C$24922$U0r&n g$t$17354$U0r&n) ((case-lambda ((g$J$24924$U0r&n) (pair? (case-lambda ((g$T$24925$U0r&n) (if g$T$24925$U0r&n (car (case-lambda ((g$V$24926$U0r&n) (annotation? g$J$24924$U0r&n g$V$24926$U0r&n))) g$x$17352$U0r&n) (g$J$24924$U0r&n '#f)))) g$x$17352$U0r&n))) (case-lambda ((g$V$24923$U0r&n) ((case-lambda ((g$C$24917$U0r&n g$t$17355$U0r&n) (if g$t$17355$U0r&n (g$C$24917$U0r&n g$t$17355$U0r&n) (g$vector?$13494$U0r&n (case-lambda ((g$T$24918$U0r&n) (if g$T$24918$U0r&n (vector-length (case-lambda ((g$V$24919$U0r&n) (> (case-lambda ((g$T$24920$U0r&n) (if g$T$24920$U0r&n (vector-ref (case-lambda ((g$V$24921$U0r&n) (annotation? g$C$24917$U0r&n g$V$24921$U0r&n))) g$x$17352$U0r&n '0) (g$C$24917$U0r&n '#f)))) g$V$24919$U0r&n '0))) g$x$17352$U0r&n) (g$C$24917$U0r&n '#f)))) g$x$17352$U0r&n)))) g$C$24922$U0r&n g$V$24923$U0r&n))))))) (case-lambda ((g$T$24955$U0r&n) (if g$T$24955$U0r&n (g$strip-annotations$16578$U0r&n g$C$24952$U0r&n g$x$17352$U0r&n) (g$C$24952$U0r&n g$x$17352$U0r&n)))) g$V$24954$U0r&n))) g$x$17352$U0r&n) ((case-lambda ((g$C$24951$U0r&n g$f$17356$U0r&n) ((case-lambda ((g$C$24928$U0r&n g$f$24927$U0r&n) (begin (set! g$f$17356$U0r&n g$f$24927$U0r&n) (g$C$24928$U0r&n g$f$17356$U0r&n)))) g$C$24951$U0r&n (case-lambda ((g$C$24939$U0r&n g$x$17357$U0r&n) (g$stx?$16541$U0r&n (case-lambda ((g$T$24940$U0r&n) (if g$T$24940$U0r&n (g$stx-mark*$16544$U0r&n (case-lambda ((g$V$24941$U0r&n) (g$stx-expr$16543$U0r&n (case-lambda ((g$V$24942$U0r&n) (g$strip$16579$U0r&n g$C$24939$U0r&n g$V$24942$U0r&n g$V$24941$U0r&n))) g$x$17357$U0r&n))) g$x$17357$U0r&n) (annotation? (case-lambda ((g$T$24943$U0r&n) (if g$T$24943$U0r&n (annotation-stripped g$C$24939$U0r&n g$x$17357$U0r&n) (pair? (case-lambda ((g$T$24944$U0r&n) (if g$T$24944$U0r&n (cdr (case-lambda ((g$V$24945$U0r&n) (g$f$17356$U0r&n (case-lambda ((g$V$24946$U0r&n) (car (case-lambda ((g$V$24947$U0r&n) (g$f$17356$U0r&n (case-lambda ((g$V$24948$U0r&n) ((case-lambda ((g$C$24929$U0r&n g$a$17358$U0r&n g$d$17359$U0r&n) ((case-lambda ((g$J$24931$U0r&n) (car (case-lambda ((g$V$24932$U0r&n) (eq? (case-lambda ((g$T$24933$U0r&n) (if g$T$24933$U0r&n (cdr (case-lambda ((g$V$24934$U0r&n) (eq? g$J$24931$U0r&n g$d$17359$U0r&n g$V$24934$U0r&n))) g$x$17357$U0r&n) (g$J$24931$U0r&n '#f)))) g$a$17358$U0r&n g$V$24932$U0r&n))) g$x$17357$U0r&n))) (case-lambda ((g$T$24930$U0r&n) (if g$T$24930$U0r&n (g$C$24929$U0r&n g$x$17357$U0r&n) (cons g$C$24929$U0r&n g$a$17358$U0r&n g$d$17359$U0r&n))))))) g$C$24939$U0r&n g$V$24948$U0r&n g$V$24946$U0r&n))) g$V$24947$U0r&n))) g$x$17357$U0r&n))) g$V$24945$U0r&n))) g$x$17357$U0r&n) (g$vector?$13494$U0r&n (case-lambda ((g$T$24949$U0r&n) (if g$T$24949$U0r&n (vector->list (case-lambda ((g$V$24950$U0r&n) ((case-lambda ((g$C$24937$U0r&n g$old$17360$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$24938$U0r&n) ((case-lambda ((g$C$24935$U0r&n g$new$17361$U0r&n) (g$for-all$12751$U0r&n (case-lambda ((g$T$24936$U0r&n) (if g$T$24936$U0r&n (g$C$24935$U0r&n g$x$17357$U0r&n) (g$list->vector$13491$U0r&n g$C$24935$U0r&n g$new$17361$U0r&n)))) eq? g$old$17360$U0r&n g$new$17361$U0r&n))) g$C$24937$U0r&n g$V$24938$U0r&n))) g$f$17356$U0r&n g$old$17360$U0r&n))) g$C$24939$U0r&n g$V$24950$U0r&n))) g$x$17357$U0r&n) (g$C$24939$U0r&n g$x$17357$U0r&n)))) g$x$17357$U0r&n)))) g$x$17357$U0r&n)))) g$x$17357$U0r&n)))) g$x$17357$U0r&n)))))) (case-lambda ((g$V$24956$U0r&n) (g$V$24956$U0r&n g$C$24952$U0r&n g$x$17352$U0r&n))) uninitialized)))) g$m*$17353$U0r&n)))))) (library-letrec*-identity 'g$strip$16579$U0r&n))) (g$stx->datum$16580$U0r&n g$stx->datum$20588$U0r&n ((case-lambda ((g$C$29658$U0r&n) (g$C$29658$U0r&n (case-lambda ((g$C$24957$U0r&n g$x$17362$U0r&n) (g$strip$16579$U0r&n g$C$24957$U0r&n g$x$17362$U0r&n '())))))) (library-letrec*-identity 'g$stx->datum$16580$U0r&n))) (g$same-marks*?$16581$U0r&n g$same-marks*?$20589$U0r&n ((case-lambda ((g$C$29659$U0r&n) (g$C$29659$U0r&n (case-lambda ((g$C$24958$U0r&n g$mark*$17363$U0r&n g$mark**$17364$U0r&n g$si$17365$U0r&n) (null? (case-lambda ((g$T$24959$U0r&n) (if g$T$24959$U0r&n (g$C$24958$U0r&n '#f) (car (case-lambda ((g$V$24960$U0r&n) (vector-ref (case-lambda ((g$V$24961$U0r&n) (g$same-marks?$16571$U0r&n (case-lambda ((g$T$24962$U0r&n) (if g$T$24962$U0r&n (car g$C$24958$U0r&n g$si$17365$U0r&n) (cdr (case-lambda ((g$V$24963$U0r&n) (g$same-marks*?$16581$U0r&n g$C$24958$U0r&n g$mark*$17363$U0r&n g$mark**$17364$U0r&n g$V$24963$U0r&n))) g$si$17365$U0r&n)))) g$mark*$17363$U0r&n g$V$24961$U0r&n))) g$mark**$17364$U0r&n g$V$24960$U0r&n))) g$si$17365$U0r&n)))) g$si$17365$U0r&n)))))) (library-letrec*-identity 'g$same-marks*?$16581$U0r&n))) (g$id->label$16582$U0r&n g$id->label$20590$U0r&n ((case-lambda ((g$C$29660$U0r&n) (g$C$29660$U0r&n (case-lambda ((g$C$24974$U0r&n g$id$17366$U0r&n) (g$id->real-label$16583$U0r&n (case-lambda ((g$V$24975$U0r&n) ((case-lambda ((g$C$24972$U0r&n g$t$17367$U0r&n) (if g$t$17367$U0r&n (g$C$24972$U0r&n g$t$17367$U0r&n) (g$top-level-context$17194$U0r&n (case-lambda ((g$V$24973$U0r&n) ((case-lambda ((g$C$24971$U0r&n g$t$17368$U0r&n) (if g$t$17368$U0r&n ((case-lambda ((g$C$24969$U0r&n g$env$17369$U0r&n) (g$interaction-env-rib$17152$U0r&n (case-lambda ((g$V$24970$U0r&n) ((case-lambda ((g$C$24968$U0r&n g$rib$17370$U0r&n) (call-with-values g$C$24968$U0r&n (case-lambda ((g$C$24964$U0r&n) (g$gen-define-label+loc$16508$U0r&n g$C$24964$U0r&n g$id$17366$U0r&n g$rib$17370$U0r&n '#f))) (case-lambda ((g$C$24967$U0r&n g$lab$17373$U0r&n g$_loc$17374$U0r&n) ((case-lambda ((g$C$24965$U0r&n g$_loc$17375$U0r&n g$lab$17376$U0r&n) (g$extend-rib!$16530$U0r&n (case-lambda (g$IGNORE$24966$U0r&n (g$C$24965$U0r&n g$lab$17376$U0r&n))) g$rib$17370$U0r&n g$id$17366$U0r&n g$lab$17376$U0r&n '#t))) g$C$24967$U0r&n g$_loc$17374$U0r&n g$lab$17373$U0r&n)))))) g$C$24969$U0r&n g$V$24970$U0r&n))) g$env$17369$U0r&n))) g$C$24971$U0r&n g$t$17368$U0r&n) (g$C$24971$U0r&n '#f)))) g$C$24972$U0r&n g$V$24973$U0r&n))))))) g$C$24974$U0r&n g$V$24975$U0r&n))) g$id$17366$U0r&n)))))) (library-letrec*-identity 'g$id->label$16582$U0r&n))) (g$id->real-label$16583$U0r&n g$id->real-label$20591$U0r&n ((case-lambda ((g$C$29661$U0r&n) (g$C$29661$U0r&n (case-lambda ((g$C$25023$U0r&n g$id$17377$U0r&n) (g$id->sym$16570$U0r&n (case-lambda ((g$V$25024$U0r&n) ((case-lambda ((g$C$25019$U0r&n g$sym$17378$U0r&n) (g$stx-mark*$16544$U0r&n (case-lambda ((g$V$25020$U0r&n) (g$stx-subst*$16545$U0r&n (case-lambda ((g$V$25021$U0r&n) ((case-lambda ((g$C$25018$U0r&n g$search$17379$U0r&n) ((case-lambda ((g$C$24977$U0r&n g$search$24976$U0r&n) (begin (set! g$search$17379$U0r&n g$search$24976$U0r&n) (g$C$24977$U0r&n g$search$17379$U0r&n)))) g$C$25018$U0r&n (case-lambda ((g$C$25011$U0r&n g$subst*$17380$U0r&n g$mark*$17381$U0r&n) (null? (case-lambda ((g$T$25012$U0r&n) (if g$T$25012$U0r&n (g$C$25011$U0r&n '#f) (car (case-lambda ((g$V$25013$U0r&n) (eq? (case-lambda ((g$T$25014$U0r&n) (if g$T$25014$U0r&n (cdr (case-lambda ((g$V$25015$U0r&n) (cdr (case-lambda ((g$V$25016$U0r&n) (g$search$17379$U0r&n g$C$25011$U0r&n g$V$25016$U0r&n g$V$25015$U0r&n))) g$subst*$17380$U0r&n))) g$mark*$17381$U0r&n) (car (case-lambda ((g$V$25017$U0r&n) ((case-lambda ((g$C$25009$U0r&n g$rib$17382$U0r&n) (g$rib-sealed/freq$16520$U0r&n (case-lambda ((g$V$25010$U0r&n) ((case-lambda ((g$C$25007$U0r&n g$t$17383$U0r&n) (if g$t$17383$U0r&n ((case-lambda ((g$C$24986$U0r&n g$ht$17384$U0r&n) (g$hashtable-ref$13600$U0r&n (case-lambda ((g$V$24987$U0r&n) ((case-lambda ((g$C$24981$U0r&n g$si$17385$U0r&n) ((case-lambda ((g$J$24983$U0r&n) (if g$si$17385$U0r&n (g$reverse$13504$U0r&n (case-lambda ((g$V$24984$U0r&n) (g$rib-mark**$16518$U0r&n (case-lambda ((g$V$24985$U0r&n) (g$same-marks*?$16581$U0r&n g$J$24983$U0r&n g$mark*$17381$U0r&n g$V$24985$U0r&n g$V$24984$U0r&n))) g$rib$17382$U0r&n))) g$si$17385$U0r&n) (g$J$24983$U0r&n '#f)))) (case-lambda ((g$V$24982$U0r&n) ((case-lambda ((g$C$24978$U0r&n g$i$17386$U0r&n) (if g$i$17386$U0r&n (g$rib-label*$16519$U0r&n (case-lambda ((g$V$24979$U0r&n) (vector-ref g$C$24978$U0r&n g$V$24979$U0r&n g$i$17386$U0r&n))) g$rib$17382$U0r&n) (cdr (case-lambda ((g$V$24980$U0r&n) (g$search$17379$U0r&n g$C$24978$U0r&n g$V$24980$U0r&n g$mark*$17381$U0r&n))) g$subst*$17380$U0r&n)))) g$C$24981$U0r&n g$V$24982$U0r&n)))))) g$C$24986$U0r&n g$V$24987$U0r&n))) g$ht$17384$U0r&n g$sym$17378$U0r&n '#f))) g$C$25007$U0r&n g$t$17383$U0r&n) (g$find-label$16529$U0r&n (case-lambda ((g$V$25008$U0r&n) ((case-lambda ((g$C$25002$U0r&n g$t$17387$U0r&n) (if g$t$17387$U0r&n (g$C$25002$U0r&n g$t$17387$U0r&n) (g$rib-label*$16519$U0r&n (case-lambda ((g$V$25003$U0r&n) (g$rib-mark**$16518$U0r&n (case-lambda ((g$V$25004$U0r&n) (g$rib-sym*$16517$U0r&n (case-lambda ((g$V$25005$U0r&n) ((case-lambda ((g$C$25001$U0r&n g$f$17388$U0r&n) ((case-lambda ((g$C$24989$U0r&n g$f$24988$U0r&n) (begin (set! g$f$17388$U0r&n g$f$24988$U0r&n) (g$C$24989$U0r&n g$f$17388$U0r&n)))) g$C$25001$U0r&n (case-lambda ((g$C$24990$U0r&n g$sym*$17389$U0r&n g$mark**$17390$U0r&n g$label*$17391$U0r&n) (null? (case-lambda ((g$T$24991$U0r&n) (if g$T$24991$U0r&n (cdr (case-lambda ((g$V$24992$U0r&n) (g$search$17379$U0r&n g$C$24990$U0r&n g$V$24992$U0r&n g$mark*$17381$U0r&n))) g$subst*$17380$U0r&n) ((case-lambda ((g$J$24997$U0r&n) (car (case-lambda ((g$V$24998$U0r&n) (eq? (case-lambda ((g$T$24999$U0r&n) (if g$T$24999$U0r&n (car (case-lambda ((g$V$25000$U0r&n) (g$same-marks?$16571$U0r&n g$J$24997$U0r&n g$V$25000$U0r&n g$mark*$17381$U0r&n))) g$mark**$17390$U0r&n) (g$J$24997$U0r&n '#f)))) g$V$24998$U0r&n g$sym$17378$U0r&n))) g$sym*$17389$U0r&n))) (case-lambda ((g$T$24993$U0r&n) (if g$T$24993$U0r&n (car g$C$24990$U0r&n g$label*$17391$U0r&n) (cdr (case-lambda ((g$V$24994$U0r&n) (cdr (case-lambda ((g$V$24995$U0r&n) (cdr (case-lambda ((g$V$24996$U0r&n) (g$f$17388$U0r&n g$C$24990$U0r&n g$V$24996$U0r&n g$V$24995$U0r&n g$V$24994$U0r&n))) g$sym*$17389$U0r&n))) g$mark**$17390$U0r&n))) g$label*$17391$U0r&n)))))))) g$sym*$17389$U0r&n)))))) (case-lambda ((g$V$25006$U0r&n) (g$V$25006$U0r&n g$C$25002$U0r&n g$V$25005$U0r&n g$V$25004$U0r&n g$V$25003$U0r&n))) uninitialized))) g$rib$17382$U0r&n))) g$rib$17382$U0r&n))) g$rib$17382$U0r&n)))) g$C$25007$U0r&n g$V$25008$U0r&n))) g$rib$17382$U0r&n g$sym$17378$U0r&n g$mark*$17381$U0r&n)))) g$C$25009$U0r&n g$V$25010$U0r&n))) g$rib$17382$U0r&n))) g$C$25011$U0r&n g$V$25017$U0r&n))) g$subst*$17380$U0r&n)))) g$V$25013$U0r&n 'shift))) g$subst*$17380$U0r&n)))) g$subst*$17380$U0r&n)))))) (case-lambda ((g$V$25022$U0r&n) (g$V$25022$U0r&n g$C$25019$U0r&n g$V$25021$U0r&n g$V$25020$U0r&n))) uninitialized))) g$id$17377$U0r&n))) g$id$17377$U0r&n))) g$C$25023$U0r&n g$V$25024$U0r&n))) g$id$17377$U0r&n)))))) (library-letrec*-identity 'g$id->real-label$16583$U0r&n))) (g$label->binding$16584$U0r&n g$label->binding$20592$U0r&n ((case-lambda ((g$C$29662$U0r&n) (g$C$29662$U0r&n (case-lambda ((g$C$25051$U0r&n g$x$17392$U0r&n g$r$17393$U0r&n) (not (case-lambda ((g$T$25052$U0r&n) (if g$T$25052$U0r&n (g$C$25051$U0r&n '(displaced-lexical)) (g$imported-label->binding$16271$U0r&n (case-lambda ((g$V$25053$U0r&n) ((case-lambda ((g$C$25049$U0r&n g$t$17394$U0r&n) (if g$t$17394$U0r&n ((case-lambda ((g$C$25027$U0r&n g$b$17395$U0r&n) ((case-lambda ((g$J$25037$U0r&n) (pair? (case-lambda ((g$T$25038$U0r&n) (if g$T$25038$U0r&n (car (case-lambda ((g$V$25039$U0r&n) (eq? g$J$25037$U0r&n g$V$25039$U0r&n '$core-rtd))) g$b$17395$U0r&n) (g$J$25037$U0r&n '#f)))) g$b$17395$U0r&n))) (case-lambda ((g$T$25028$U0r&n) (if g$T$25028$U0r&n (cdr (case-lambda ((g$V$25029$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$25030$U0r&n) (cons g$C$25027$U0r&n '$rtd g$V$25030$U0r&n))) g$bless$17030$U0r&n g$V$25029$U0r&n))) g$b$17395$U0r&n) ((case-lambda ((g$J$25034$U0r&n) (pair? (case-lambda ((g$T$25035$U0r&n) (if g$T$25035$U0r&n (car (case-lambda ((g$V$25036$U0r&n) (eq? g$J$25034$U0r&n g$V$25036$U0r&n 'global-rtd))) g$b$17395$U0r&n) (g$J$25034$U0r&n '#f)))) g$b$17395$U0r&n))) (case-lambda ((g$T$25031$U0r&n) (if g$T$25031$U0r&n (g$cddr$13508$U0r&n (case-lambda ((g$V$25032$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$25033$U0r&n) ((case-lambda ((g$C$25025$U0r&n g$lib$17396$U0r&n g$loc$17397$U0r&n) (symbol-value (case-lambda ((g$V$25026$U0r&n) (cons g$C$25025$U0r&n '$rtd g$V$25026$U0r&n))) g$loc$17397$U0r&n))) g$C$25027$U0r&n g$V$25033$U0r&n g$V$25032$U0r&n))) g$b$17395$U0r&n))) g$b$17395$U0r&n) (g$C$25027$U0r&n g$b$17395$U0r&n))))))))))) g$C$25049$U0r&n g$t$17394$U0r&n) (g$assq$12741$U0r&n (case-lambda ((g$V$25050$U0r&n) ((case-lambda ((g$C$25047$U0r&n g$t$17398$U0r&n) (if g$t$17398$U0r&n (cdr g$C$25047$U0r&n g$t$17398$U0r&n) (g$top-level-context$17194$U0r&n (case-lambda ((g$V$25048$U0r&n) ((case-lambda ((g$C$25046$U0r&n g$t$17399$U0r&n) (if g$t$17399$U0r&n ((case-lambda ((g$C$25043$U0r&n g$env$17400$U0r&n) (g$interaction-env-locs$17154$U0r&n (case-lambda ((g$V$25044$U0r&n) (g$assq$12741$U0r&n (case-lambda ((g$V$25045$U0r&n) ((case-lambda ((g$C$25042$U0r&n g$t$17401$U0r&n) (if g$t$17401$U0r&n ((case-lambda ((g$C$25040$U0r&n g$p$17402$U0r&n) (cdr (case-lambda ((g$V$25041$U0r&n) (g$cons*$12755$U0r&n g$C$25040$U0r&n 'lexical g$V$25041$U0r&n '#f))) g$p$17402$U0r&n))) g$C$25042$U0r&n g$t$17401$U0r&n) (g$C$25042$U0r&n '(displaced-lexical . #f))))) g$C$25043$U0r&n g$V$25045$U0r&n))) g$x$17392$U0r&n g$V$25044$U0r&n))) g$env$17400$U0r&n))) g$C$25046$U0r&n g$t$17399$U0r&n) (g$C$25046$U0r&n '(displaced-lexical . #f))))) g$C$25047$U0r&n g$V$25048$U0r&n))))))) g$C$25049$U0r&n g$V$25050$U0r&n))) g$x$17392$U0r&n g$r$17393$U0r&n)))) g$C$25051$U0r&n g$V$25053$U0r&n))) g$x$17392$U0r&n)))) g$x$17392$U0r&n)))))) (library-letrec*-identity 'g$label->binding$16584$U0r&n))) (g$make-binding$16585$U0r&n g$make-binding$20593$U0r&n ((case-lambda ((g$C$29663$U0r&n) (g$C$29663$U0r&n cons))) (library-letrec*-identity 'g$make-binding$16585$U0r&n))) (g$binding-type$16586$U0r&n g$binding-type$20594$U0r&n ((case-lambda ((g$C$29664$U0r&n) (g$C$29664$U0r&n car))) (library-letrec*-identity 'g$binding-type$16586$U0r&n))) (g$binding-value$16587$U0r&n g$binding-value$20595$U0r&n ((case-lambda ((g$C$29665$U0r&n) (g$C$29665$U0r&n cdr))) (library-letrec*-identity 'g$binding-value$16587$U0r&n))) (g$raise-unbound-error$16588$U0r&n g$raise-unbound-error$20596$U0r&n ((case-lambda ((g$C$29666$U0r&n) (g$C$29666$U0r&n (case-lambda ((g$C$25054$U0r&n g$id$17403$U0r&n) (g$make-undefined-violation$14307$U0r&n (case-lambda ((g$V$25055$U0r&n) (g$syntax-violation*$17185$U0r&n g$C$25054$U0r&n '#f '"unbound identifier" g$id$17403$U0r&n g$V$25055$U0r&n))))))))) (library-letrec*-identity 'g$raise-unbound-error$16588$U0r&n))) (g$syntax-type$16589$U0r&n g$syntax-type$20597$U0r&n ((case-lambda ((g$C$29667$U0r&n) (g$C$29667$U0r&n (case-lambda ((g$C$25085$U0r&n g$e$17404$U0r&n g$r$17405$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$T$25086$U0r&n) (if g$T$25086$U0r&n ((case-lambda ((g$C$25067$U0r&n g$id$17406$U0r&n) (g$id->label$16582$U0r&n (case-lambda ((g$V$25068$U0r&n) ((case-lambda ((g$C$25065$U0r&n g$label$17407$U0r&n) (g$label->binding$16584$U0r&n (case-lambda ((g$V$25066$U0r&n) ((case-lambda ((g$C$25063$U0r&n g$b$17408$U0r&n) (g$binding-type$16586$U0r&n (case-lambda ((g$V$25064$U0r&n) ((case-lambda ((g$C$25059$U0r&n g$type$17409$U0r&n) ((case-lambda ((g$J$25061$U0r&n) (not (case-lambda ((g$T$25062$U0r&n) (if g$T$25062$U0r&n (g$raise-unbound-error$16588$U0r&n g$J$25061$U0r&n g$id$17406$U0r&n) (void g$J$25061$U0r&n)))) g$label$17407$U0r&n))) (case-lambda (g$IGNORE$25060$U0r&n ((case-lambda ((g$C$25056$U0r&n g$t$17410$U0r&n) (g$memv$12746$U0r&n (case-lambda ((g$T$25057$U0r&n) (if g$T$25057$U0r&n (g$binding-value$16587$U0r&n (case-lambda ((g$V$25058$U0r&n) (values g$C$25056$U0r&n g$type$17409$U0r&n g$V$25058$U0r&n g$id$17406$U0r&n))) g$b$17408$U0r&n) (values g$C$25056$U0r&n 'other '#f '#f)))) g$t$17410$U0r&n '(lexical core-prim macro macro! global local-macro local-macro! global-macro global-macro! displaced-lexical syntax import export $module $core-rtd library mutable ctv local-ctv global-ctv)))) g$C$25059$U0r&n g$type$17409$U0r&n)))))) g$C$25063$U0r&n g$V$25064$U0r&n))) g$b$17408$U0r&n))) g$C$25065$U0r&n g$V$25066$U0r&n))) g$label$17407$U0r&n g$r$17405$U0r&n))) g$C$25067$U0r&n g$V$25068$U0r&n))) g$id$17406$U0r&n))) g$C$25085$U0r&n g$e$17404$U0r&n) (g$syntax-pair?$16562$U0r&n (case-lambda ((g$T$25087$U0r&n) (if g$T$25087$U0r&n (g$syntax-car$16566$U0r&n (case-lambda ((g$V$25088$U0r&n) ((case-lambda ((g$C$25080$U0r&n g$id$17411$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$T$25081$U0r&n) (if g$T$25081$U0r&n (g$id->label$16582$U0r&n (case-lambda ((g$V$25082$U0r&n) ((case-lambda ((g$C$25078$U0r&n g$label$17412$U0r&n) (g$label->binding$16584$U0r&n (case-lambda ((g$V$25079$U0r&n) ((case-lambda ((g$C$25076$U0r&n g$b$17413$U0r&n) (g$binding-type$16586$U0r&n (case-lambda ((g$V$25077$U0r&n) ((case-lambda ((g$C$25072$U0r&n g$type$17414$U0r&n) ((case-lambda ((g$J$25074$U0r&n) (not (case-lambda ((g$T$25075$U0r&n) (if g$T$25075$U0r&n (g$raise-unbound-error$16588$U0r&n g$J$25074$U0r&n g$id$17411$U0r&n) (void g$J$25074$U0r&n)))) g$label$17412$U0r&n))) (case-lambda (g$IGNORE$25073$U0r&n ((case-lambda ((g$C$25069$U0r&n g$t$17415$U0r&n) (g$memv$12746$U0r&n (case-lambda ((g$T$25070$U0r&n) (if g$T$25070$U0r&n (g$binding-value$16587$U0r&n (case-lambda ((g$V$25071$U0r&n) (values g$C$25069$U0r&n g$type$17414$U0r&n g$V$25071$U0r&n g$id$17411$U0r&n))) g$b$17413$U0r&n) (values g$C$25069$U0r&n 'call '#f '#f)))) g$t$17415$U0r&n '(define define-syntax core-macro begin macro macro! local-macro local-macro! global-macro global-macro! module library set! let-syntax letrec-syntax import export $core-rtd ctv local-ctv global-ctv)))) g$C$25072$U0r&n g$type$17414$U0r&n)))))) g$C$25076$U0r&n g$V$25077$U0r&n))) g$b$17413$U0r&n))) g$C$25078$U0r&n g$V$25079$U0r&n))) g$label$17412$U0r&n g$r$17405$U0r&n))) g$C$25080$U0r&n g$V$25082$U0r&n))) g$id$17411$U0r&n) (values g$C$25080$U0r&n 'call '#f '#f)))) g$id$17411$U0r&n))) g$C$25085$U0r&n g$V$25088$U0r&n))) g$e$17404$U0r&n) (g$stx->datum$16580$U0r&n (case-lambda ((g$V$25089$U0r&n) ((case-lambda ((g$C$25083$U0r&n g$d$17416$U0r&n) (g$self-evaluating?$16577$U0r&n (case-lambda ((g$T$25084$U0r&n) (if g$T$25084$U0r&n (values g$C$25083$U0r&n 'constant g$d$17416$U0r&n '#f) (values g$C$25083$U0r&n 'other '#f '#f)))) g$d$17416$U0r&n))) g$C$25085$U0r&n g$V$25089$U0r&n))) g$e$17404$U0r&n)))) g$e$17404$U0r&n)))) g$e$17404$U0r&n)))))) (library-letrec*-identity 'g$syntax-type$16589$U0r&n))) (g$sanitize-binding$16612$U0r&n g$sanitize-binding$20598$U0r&n ((case-lambda ((g$C$29668$U0r&n) (g$C$29668$U0r&n (case-lambda ((g$C$25090$U0r&n g$x$17417$U0r&n g$src$17418$U0r&n) (g$procedure?$13498$U0r&n (case-lambda ((g$T$25091$U0r&n) (if g$T$25091$U0r&n (g$cons*$12755$U0r&n g$C$25090$U0r&n 'local-macro g$x$17417$U0r&n g$src$17418$U0r&n) ((case-lambda ((g$J$25103$U0r&n) (pair? (case-lambda ((g$T$25104$U0r&n) (if g$T$25104$U0r&n (car (case-lambda ((g$V$25105$U0r&n) (eq? (case-lambda ((g$T$25106$U0r&n) (if g$T$25106$U0r&n (cdr (case-lambda ((g$V$25107$U0r&n) (g$procedure?$13498$U0r&n g$J$25103$U0r&n g$V$25107$U0r&n))) g$x$17417$U0r&n) (g$J$25103$U0r&n '#f)))) g$V$25105$U0r&n 'macro!))) g$x$17417$U0r&n) (g$J$25103$U0r&n '#f)))) g$x$17417$U0r&n))) (case-lambda ((g$T$25092$U0r&n) (if g$T$25092$U0r&n (cdr (case-lambda ((g$V$25093$U0r&n) (g$cons*$12755$U0r&n g$C$25090$U0r&n 'local-macro! g$V$25093$U0r&n g$src$17418$U0r&n))) g$x$17417$U0r&n) ((case-lambda ((g$J$25100$U0r&n) (pair? (case-lambda ((g$T$25101$U0r&n) (if g$T$25101$U0r&n (car (case-lambda ((g$V$25102$U0r&n) (eq? g$J$25100$U0r&n g$V$25102$U0r&n '$rtd))) g$x$17417$U0r&n) (g$J$25100$U0r&n '#f)))) g$x$17417$U0r&n))) (case-lambda ((g$T$25094$U0r&n) (if g$T$25094$U0r&n (g$C$25090$U0r&n g$x$17417$U0r&n) ((case-lambda ((g$J$25097$U0r&n) (pair? (case-lambda ((g$T$25098$U0r&n) (if g$T$25098$U0r&n (car (case-lambda ((g$V$25099$U0r&n) (eq? g$J$25097$U0r&n g$V$25099$U0r&n 'ctv))) g$x$17417$U0r&n) (g$J$25097$U0r&n '#f)))) g$x$17417$U0r&n))) (case-lambda ((g$T$25095$U0r&n) (if g$T$25095$U0r&n (cdr (case-lambda ((g$V$25096$U0r&n) (g$cons*$12755$U0r&n g$C$25090$U0r&n 'local-ctv g$V$25096$U0r&n g$src$17418$U0r&n))) g$x$17417$U0r&n) (g$assertion-violation$13786$U0r&n g$C$25090$U0r&n 'expand '"invalid transformer" g$x$17417$U0r&n)))))))))))))))) g$x$17417$U0r&n)))))) (library-letrec*-identity 'g$sanitize-binding$16612$U0r&n))) (g$make-variable-transformer$16613$U0r&n g$make-variable-transformer$20599$U0r&n ((case-lambda ((g$C$29669$U0r&n) (g$C$29669$U0r&n (case-lambda ((g$C$25108$U0r&n g$x$17419$U0r&n) (g$procedure?$13498$U0r&n (case-lambda ((g$T$25109$U0r&n) (if g$T$25109$U0r&n (cons g$C$25108$U0r&n 'macro! g$x$17419$U0r&n) (g$assertion-violation$13786$U0r&n g$C$25108$U0r&n 'make-variable-transformer '"not a procedure" g$x$17419$U0r&n)))) g$x$17419$U0r&n)))))) (library-letrec*-identity 'g$make-variable-transformer$16613$U0r&n))) (g$make-compile-time-value$16614$U0r&n g$make-compile-time-value$20600$U0r&n ((case-lambda ((g$C$29670$U0r&n) (g$C$29670$U0r&n (case-lambda ((g$C$25110$U0r&n g$x$17420$U0r&n) (cons g$C$25110$U0r&n 'ctv g$x$17420$U0r&n)))))) (library-letrec*-identity 'g$make-compile-time-value$16614$U0r&n))) (g$variable-transformer?$16615$U0r&n g$variable-transformer?$20601$U0r&n ((case-lambda ((g$C$29671$U0r&n) (g$C$29671$U0r&n (case-lambda ((g$C$25111$U0r&n g$x$17421$U0r&n) (pair? (case-lambda ((g$T$25112$U0r&n) (if g$T$25112$U0r&n (car (case-lambda ((g$V$25113$U0r&n) (eq? (case-lambda ((g$T$25114$U0r&n) (if g$T$25114$U0r&n (cdr (case-lambda ((g$V$25115$U0r&n) (g$procedure?$13498$U0r&n g$C$25111$U0r&n g$V$25115$U0r&n))) g$x$17421$U0r&n) (g$C$25111$U0r&n '#f)))) g$V$25113$U0r&n 'macro!))) g$x$17421$U0r&n) (g$C$25111$U0r&n '#f)))) g$x$17421$U0r&n)))))) (library-letrec*-identity 'g$variable-transformer?$16615$U0r&n))) (g$variable-transformer-procedure$16616$U0r&n g$variable-transformer-procedure$20602$U0r&n ((case-lambda ((g$C$29672$U0r&n) (g$C$29672$U0r&n (case-lambda ((g$C$25116$U0r&n g$x$17422$U0r&n) (g$variable-transformer?$16615$U0r&n (case-lambda ((g$T$25117$U0r&n) (if g$T$25117$U0r&n (cdr g$C$25116$U0r&n g$x$17422$U0r&n) (g$assertion-violation$13786$U0r&n g$C$25116$U0r&n 'variable-transformer-procedure '"not a variable transformer" g$x$17422$U0r&n)))) g$x$17422$U0r&n)))))) (library-letrec*-identity 'g$variable-transformer-procedure$16616$U0r&n))) (g$make-eval-transformer$16617$U0r&n g$make-eval-transformer$20603$U0r&n ((case-lambda ((g$C$29673$U0r&n) (g$C$29673$U0r&n (case-lambda ((g$C$25118$U0r&n g$x$17423$U0r&n) (g$expanded->core$16005$U0r&n (case-lambda ((g$V$25119$U0r&n) (eval-core (case-lambda ((g$V$25120$U0r&n) (g$sanitize-binding$16612$U0r&n g$C$25118$U0r&n g$V$25120$U0r&n g$x$17423$U0r&n))) g$V$25119$U0r&n))) g$x$17423$U0r&n)))))) (library-letrec*-identity 'g$make-eval-transformer$16617$U0r&n))) (g$parse-define$17007$U0r&n g$parse-define$20604$U0r&n ((case-lambda ((g$C$29674$U0r&n) (g$C$29674$U0r&n (case-lambda ((g$C$25149$U0r&n g$x$17424$U0r&n) ((case-lambda ((g$C$25147$U0r&n g$t$17425$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25148$U0r&n) ((case-lambda ((g$C$25144$U0r&n g$ls/false$17426$U0r&n) ((case-lambda ((g$J$25146$U0r&n) (if g$ls/false$17426$U0r&n (apply g$J$25146$U0r&n (case-lambda ((g$C$25121$U0r&n g$id$17427$U0r&n g$fmls$17428$U0r&n g$b$17429$U0r&n g$b*$17430$U0r&n) (g$id?$16569$U0r&n g$C$25121$U0r&n g$id$17427$U0r&n))) g$ls/false$17426$U0r&n) (g$J$25146$U0r&n '#f)))) (case-lambda ((g$T$25145$U0r&n) (if g$T$25145$U0r&n (apply g$C$25144$U0r&n (case-lambda ((g$C$25122$U0r&n g$id$17431$U0r&n g$fmls$17432$U0r&n g$b$17433$U0r&n g$b*$17434$U0r&n) (g$verify-formals$17087$U0r&n (case-lambda (g$IGNORE$25123$U0r&n (cons (case-lambda ((g$V$25124$U0r&n) (cons (case-lambda ((g$V$25125$U0r&n) (cons (case-lambda ((g$V$25126$U0r&n) (values g$C$25122$U0r&n g$id$17431$U0r&n g$V$25126$U0r&n))) 'defun g$V$25125$U0r&n))) g$fmls$17432$U0r&n g$V$25124$U0r&n))) g$b$17433$U0r&n g$b*$17434$U0r&n))) g$fmls$17432$U0r&n g$x$17424$U0r&n))) g$ls/false$17426$U0r&n) ((case-lambda ((g$C$25142$U0r&n g$t$17435$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25143$U0r&n) ((case-lambda ((g$C$25139$U0r&n g$ls/false$17436$U0r&n) ((case-lambda ((g$J$25141$U0r&n) (if g$ls/false$17436$U0r&n (apply g$J$25141$U0r&n (case-lambda ((g$C$25127$U0r&n g$id$17437$U0r&n g$val$17438$U0r&n) (g$id?$16569$U0r&n g$C$25127$U0r&n g$id$17437$U0r&n))) g$ls/false$17436$U0r&n) (g$J$25141$U0r&n '#f)))) (case-lambda ((g$T$25140$U0r&n) (if g$T$25140$U0r&n (apply g$C$25139$U0r&n (case-lambda ((g$C$25128$U0r&n g$id$17439$U0r&n g$val$17440$U0r&n) (cons (case-lambda ((g$V$25129$U0r&n) (values g$C$25128$U0r&n g$id$17439$U0r&n g$V$25129$U0r&n))) 'expr g$val$17440$U0r&n))) g$ls/false$17436$U0r&n) ((case-lambda ((g$C$25137$U0r&n g$t$17441$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25138$U0r&n) ((case-lambda ((g$C$25134$U0r&n g$ls/false$17442$U0r&n) ((case-lambda ((g$J$25136$U0r&n) (if g$ls/false$17442$U0r&n (apply g$J$25136$U0r&n (case-lambda ((g$C$25130$U0r&n g$id$17443$U0r&n) (g$id?$16569$U0r&n g$C$25130$U0r&n g$id$17443$U0r&n))) g$ls/false$17442$U0r&n) (g$J$25136$U0r&n '#f)))) (case-lambda ((g$T$25135$U0r&n) (if g$T$25135$U0r&n (apply g$C$25134$U0r&n (case-lambda ((g$C$25131$U0r&n g$id$17444$U0r&n) (g$bless$17030$U0r&n (case-lambda ((g$V$25132$U0r&n) (cons (case-lambda ((g$V$25133$U0r&n) (values g$C$25131$U0r&n g$id$17444$U0r&n g$V$25133$U0r&n))) 'expr g$V$25132$U0r&n))) '(void)))) g$ls/false$17442$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25134$U0r&n '#f '"invalid syntax" g$t$17441$U0r&n))))))) g$C$25137$U0r&n g$V$25138$U0r&n))) g$t$17441$U0r&n '(_ any)))) g$C$25139$U0r&n g$t$17435$U0r&n))))))) g$C$25142$U0r&n g$V$25143$U0r&n))) g$t$17435$U0r&n '(_ any any)))) g$C$25144$U0r&n g$t$17425$U0r&n))))))) g$C$25147$U0r&n g$V$25148$U0r&n))) g$t$17425$U0r&n '(_ (any . any) any . each-any)))) g$C$25149$U0r&n g$x$17424$U0r&n)))))) (library-letrec*-identity 'g$parse-define$17007$U0r&n))) (g$parse-define-syntax$17008$U0r&n g$parse-define-syntax$20605$U0r&n ((case-lambda ((g$C$29675$U0r&n) (g$C$29675$U0r&n (case-lambda ((g$C$25157$U0r&n g$x$17445$U0r&n) ((case-lambda ((g$C$25155$U0r&n g$t$17446$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25156$U0r&n) ((case-lambda ((g$C$25152$U0r&n g$ls/false$17447$U0r&n) ((case-lambda ((g$J$25154$U0r&n) (if g$ls/false$17447$U0r&n (apply g$J$25154$U0r&n (case-lambda ((g$C$25150$U0r&n g$id$17448$U0r&n g$val$17449$U0r&n) (g$id?$16569$U0r&n g$C$25150$U0r&n g$id$17448$U0r&n))) g$ls/false$17447$U0r&n) (g$J$25154$U0r&n '#f)))) (case-lambda ((g$T$25153$U0r&n) (if g$T$25153$U0r&n (apply g$C$25152$U0r&n (case-lambda ((g$C$25151$U0r&n g$id$17450$U0r&n g$val$17451$U0r&n) (values g$C$25151$U0r&n g$id$17450$U0r&n g$val$17451$U0r&n))) g$ls/false$17447$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25152$U0r&n '#f '"invalid syntax" g$t$17446$U0r&n))))))) g$C$25155$U0r&n g$V$25156$U0r&n))) g$t$17446$U0r&n '(_ any any)))) g$C$25157$U0r&n g$x$17445$U0r&n)))))) (library-letrec*-identity 'g$parse-define-syntax$17008$U0r&n))) (g$scheme-stx-hashtable$17009$U0r&n g$scheme-stx-hashtable$20606$U0r&n ((case-lambda ((g$C$29676$U0r&n) (g$make-eq-hashtable$13597$U0r&n g$C$29676$U0r&n))) (library-letrec*-identity 'g$scheme-stx-hashtable$17009$U0r&n))) (g$scheme-stx$17010$U0r&n g$scheme-stx$20607$U0r&n ((case-lambda ((g$C$29677$U0r&n) (g$C$29677$U0r&n (case-lambda ((g$C$25177$U0r&n g$sym$17452$U0r&n) (g$hashtable-ref$13600$U0r&n (case-lambda ((g$V$25178$U0r&n) ((case-lambda ((g$C$25174$U0r&n g$t$17453$U0r&n) (if g$t$17453$U0r&n (g$C$25174$U0r&n g$t$17453$U0r&n) (g$find-library-by-name$16265$U0r&n (case-lambda ((g$V$25175$U0r&n) (g$library-subst$16229$U0r&n (case-lambda ((g$V$25176$U0r&n) ((case-lambda ((g$C$25172$U0r&n g$subst$17454$U0r&n) (g$make-stx$16542$U0r&n (case-lambda ((g$V$25173$U0r&n) ((case-lambda ((g$C$25169$U0r&n g$stx$17455$U0r&n) (g$assq$12741$U0r&n (case-lambda ((g$V$25170$U0r&n) ((case-lambda ((g$C$25168$U0r&n g$t$17457$U0r&n) (if g$t$17457$U0r&n ((case-lambda ((g$C$25165$U0r&n g$x$17458$U0r&n) (cdr (case-lambda ((g$V$25166$U0r&n) (car (case-lambda ((g$V$25167$U0r&n) ((case-lambda ((g$C$25160$U0r&n g$name$17459$U0r&n g$label$17460$U0r&n) (list (case-lambda ((g$V$25161$U0r&n) (list (case-lambda ((g$V$25162$U0r&n) (list (case-lambda ((g$V$25163$U0r&n) (g$make-rib$16516$U0r&n (case-lambda ((g$V$25164$U0r&n) (g$add-subst$16559$U0r&n g$C$25160$U0r&n g$V$25164$U0r&n g$stx$17455$U0r&n))) g$V$25163$U0r&n g$V$25162$U0r&n g$V$25161$U0r&n '#f '#f))) g$name$17459$U0r&n))) g$top-mark*$16502$U0r&n))) g$label$17460$U0r&n))) g$C$25165$U0r&n g$V$25167$U0r&n g$V$25166$U0r&n))) g$x$17458$U0r&n))) g$x$17458$U0r&n))) g$C$25168$U0r&n g$t$17457$U0r&n) (g$C$25168$U0r&n g$stx$17455$U0r&n)))) (case-lambda ((g$V$25171$U0r&n) ((case-lambda ((g$C$25158$U0r&n g$stx$17456$U0r&n) (g$hashtable-set!$13601$U0r&n (case-lambda (g$IGNORE$25159$U0r&n (g$C$25158$U0r&n g$stx$17456$U0r&n))) g$scheme-stx-hashtable$17009$U0r&n g$sym$17452$U0r&n g$stx$17456$U0r&n))) g$C$25169$U0r&n g$V$25171$U0r&n))) g$V$25170$U0r&n))) g$sym$17452$U0r&n g$subst$17454$U0r&n))) g$C$25172$U0r&n g$V$25173$U0r&n))) g$sym$17452$U0r&n g$top-mark*$16502$U0r&n '() '()))) g$C$25174$U0r&n g$V$25176$U0r&n))) g$V$25175$U0r&n))) '(psyntax system $all))))) g$C$25177$U0r&n g$V$25178$U0r&n))) g$scheme-stx-hashtable$17009$U0r&n g$sym$17452$U0r&n '#f)))))) (library-letrec*-identity 'g$scheme-stx$17010$U0r&n))) (g$lexical-var$17011$U0r&n g$lexical-var$20608$U0r&n ((case-lambda ((g$C$29678$U0r&n) (g$C$29678$U0r&n car))) (library-letrec*-identity 'g$lexical-var$17011$U0r&n))) (g$lexical-mutable?$17012$U0r&n g$lexical-mutable?$20609$U0r&n ((case-lambda ((g$C$29679$U0r&n) (g$C$29679$U0r&n cdr))) (library-letrec*-identity 'g$lexical-mutable?$17012$U0r&n))) (g$set-lexical-mutable!$17013$U0r&n g$set-lexical-mutable!$20610$U0r&n ((case-lambda ((g$C$29680$U0r&n) (g$C$29680$U0r&n set-cdr!))) (library-letrec*-identity 'g$set-lexical-mutable!$17013$U0r&n))) (g$add-lexical$17014$U0r&n g$add-lexical$20611$U0r&n ((case-lambda ((g$C$29681$U0r&n) (g$C$29681$U0r&n (case-lambda ((g$C$25179$U0r&n g$lab$17461$U0r&n g$lex$17462$U0r&n g$r$17463$U0r&n) (g$cons*$12755$U0r&n (case-lambda ((g$V$25180$U0r&n) (cons g$C$25179$U0r&n g$V$25180$U0r&n g$r$17463$U0r&n))) g$lab$17461$U0r&n 'lexical g$lex$17462$U0r&n '#f)))))) (library-letrec*-identity 'g$add-lexical$17014$U0r&n))) (g$add-lexicals$17015$U0r&n g$add-lexicals$20612$U0r&n ((case-lambda ((g$C$29682$U0r&n) (g$C$29682$U0r&n (case-lambda ((g$C$25181$U0r&n g$lab*$17464$U0r&n g$lex*$17465$U0r&n g$r$17466$U0r&n) (null? (case-lambda ((g$T$25182$U0r&n) (if g$T$25182$U0r&n (g$C$25181$U0r&n g$r$17466$U0r&n) (car (case-lambda ((g$V$25183$U0r&n) (car (case-lambda ((g$V$25184$U0r&n) (g$add-lexical$17014$U0r&n (case-lambda ((g$V$25185$U0r&n) (cdr (case-lambda ((g$V$25186$U0r&n) (cdr (case-lambda ((g$V$25187$U0r&n) (g$add-lexicals$17015$U0r&n g$C$25181$U0r&n g$V$25187$U0r&n g$V$25186$U0r&n g$V$25185$U0r&n))) g$lab*$17464$U0r&n))) g$lex*$17465$U0r&n))) g$V$25184$U0r&n g$V$25183$U0r&n g$r$17466$U0r&n))) g$lab*$17464$U0r&n))) g$lex*$17465$U0r&n)))) g$lab*$17464$U0r&n)))))) (library-letrec*-identity 'g$add-lexicals$17015$U0r&n))) (g$letrec-helper$17016$U0r&n g$letrec-helper$20613$U0r&n ((case-lambda ((g$C$29683$U0r&n) (g$C$29683$U0r&n (case-lambda ((g$C$25207$U0r&n g$e$17467$U0r&n g$r$17468$U0r&n g$mr$17469$U0r&n g$build$17470$U0r&n) ((case-lambda ((g$C$25205$U0r&n g$t$17471$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25206$U0r&n) ((case-lambda ((g$C$25204$U0r&n g$ls/false$17472$U0r&n) (if g$ls/false$17472$U0r&n (apply g$C$25204$U0r&n (case-lambda ((g$C$25199$U0r&n g$lhs*$17473$U0r&n g$rhs*$17474$U0r&n g$b$17475$U0r&n g$b*$17476$U0r&n) (g$valid-bound-ids?$16574$U0r&n (case-lambda ((g$V$25200$U0r&n) (not (case-lambda ((g$T$25201$U0r&n) (if g$T$25201$U0r&n (g$invalid-fmls-error$17032$U0r&n g$C$25199$U0r&n g$e$17467$U0r&n g$lhs*$17473$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$25202$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$25203$U0r&n) ((case-lambda ((g$C$25196$U0r&n g$lex*$17477$U0r&n g$lab*$17478$U0r&n) (g$add-lexicals$17015$U0r&n (case-lambda ((g$V$25197$U0r&n) (g$make-full-rib$16535$U0r&n (case-lambda ((g$V$25198$U0r&n) ((case-lambda ((g$C$25190$U0r&n g$rib$17479$U0r&n g$r$17480$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$25191$U0r&n) (g$chi-expr*$17083$U0r&n (case-lambda ((g$V$25192$U0r&n) (cons (case-lambda ((g$V$25193$U0r&n) (g$add-subst$16559$U0r&n (case-lambda ((g$V$25194$U0r&n) (g$chi-internal$17096$U0r&n (case-lambda ((g$V$25195$U0r&n) ((case-lambda ((g$C$25188$U0r&n g$body$17481$U0r&n g$rhs*$17482$U0r&n) (g$build$17470$U0r&n g$C$25188$U0r&n '#f g$lex*$17477$U0r&n g$rhs*$17482$U0r&n g$body$17481$U0r&n))) g$C$25190$U0r&n g$V$25195$U0r&n g$V$25192$U0r&n))) g$V$25194$U0r&n g$r$17480$U0r&n g$mr$17469$U0r&n))) g$rib$17479$U0r&n g$V$25193$U0r&n))) g$b$17475$U0r&n g$b*$17476$U0r&n))) g$V$25191$U0r&n g$r$17480$U0r&n g$mr$17469$U0r&n))) (case-lambda ((g$C$25189$U0r&n g$x$17483$U0r&n) (g$add-subst$16559$U0r&n g$C$25189$U0r&n g$rib$17479$U0r&n g$x$17483$U0r&n))) g$rhs*$17474$U0r&n))) g$C$25196$U0r&n g$V$25198$U0r&n g$V$25197$U0r&n))) g$lhs*$17473$U0r&n g$lab*$17478$U0r&n))) g$lab*$17478$U0r&n g$lex*$17477$U0r&n g$r$17468$U0r&n))) g$C$25199$U0r&n g$V$25203$U0r&n g$V$25202$U0r&n))) g$gen-lexical$16504$U0r&n g$lhs*$17473$U0r&n))) g$gen-label$16506$U0r&n g$lhs*$17473$U0r&n)))) g$V$25200$U0r&n))) g$lhs*$17473$U0r&n))) g$ls/false$17472$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25204$U0r&n '#f '"invalid syntax" g$t$17471$U0r&n)))) g$C$25205$U0r&n g$V$25206$U0r&n))) g$t$17471$U0r&n '(_ #(each (any any)) any . each-any)))) g$C$25207$U0r&n g$e$17467$U0r&n)))))) (library-letrec*-identity 'g$letrec-helper$17016$U0r&n))) (g$letrec-transformer$17017$U0r&n g$letrec-transformer$20614$U0r&n ((case-lambda ((g$C$29684$U0r&n) (g$C$29684$U0r&n (case-lambda ((g$C$25208$U0r&n g$e$17484$U0r&n g$r$17485$U0r&n g$mr$17486$U0r&n) (g$letrec-helper$17016$U0r&n g$C$25208$U0r&n g$e$17484$U0r&n g$r$17485$U0r&n g$mr$17486$U0r&n g$build-letrec$16496$U0r&n)))))) (library-letrec*-identity 'g$letrec-transformer$17017$U0r&n))) (g$letrec*-transformer$17018$U0r&n g$letrec*-transformer$20615$U0r&n ((case-lambda ((g$C$29685$U0r&n) (g$C$29685$U0r&n (case-lambda ((g$C$25209$U0r&n g$e$17487$U0r&n g$r$17488$U0r&n g$mr$17489$U0r&n) (g$letrec-helper$17016$U0r&n g$C$25209$U0r&n g$e$17487$U0r&n g$r$17488$U0r&n g$mr$17489$U0r&n g$build-letrec*$16497$U0r&n)))))) (library-letrec*-identity 'g$letrec*-transformer$17018$U0r&n))) (g$fluid-let-syntax-transformer$17019$U0r&n g$fluid-let-syntax-transformer$20616$U0r&n ((case-lambda ((g$C$29686$U0r&n) (g$C$29686$U0r&n (case-lambda ((g$C$25230$U0r&n g$e$17490$U0r&n g$r$17491$U0r&n g$mr$17492$U0r&n) ((case-lambda ((g$C$25229$U0r&n g$lookup$17493$U0r&n) (begin (set! g$lookup$17493$U0r&n (case-lambda ((g$C$25211$U0r&n g$x$17503$U0r&n) (g$id->label$16582$U0r&n (case-lambda ((g$V$25212$U0r&n) ((case-lambda ((g$C$25210$U0r&n g$t$17504$U0r&n) (if g$t$17504$U0r&n (g$C$25210$U0r&n g$t$17504$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25210$U0r&n '#f '"unbound identifier" g$e$17490$U0r&n g$x$17503$U0r&n)))) g$C$25211$U0r&n g$V$25212$U0r&n))) g$x$17503$U0r&n)))) ((case-lambda ((g$C$25227$U0r&n g$t$17494$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25228$U0r&n) ((case-lambda ((g$C$25226$U0r&n g$ls/false$17495$U0r&n) (if g$ls/false$17495$U0r&n (apply g$C$25226$U0r&n (case-lambda ((g$C$25221$U0r&n g$lhs*$17496$U0r&n g$rhs*$17497$U0r&n g$b$17498$U0r&n g$b*$17499$U0r&n) (g$valid-bound-ids?$16574$U0r&n (case-lambda ((g$V$25222$U0r&n) (not (case-lambda ((g$T$25223$U0r&n) (if g$T$25223$U0r&n (g$invalid-fmls-error$17032$U0r&n g$C$25221$U0r&n g$e$17490$U0r&n g$lhs*$17496$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$25224$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$25225$U0r&n) ((case-lambda ((g$C$25213$U0r&n g$lab*$17500$U0r&n g$rhs*$17501$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$25214$U0r&n) (append (case-lambda ((g$V$25215$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$25216$U0r&n) (append (case-lambda ((g$V$25217$U0r&n) (cons (case-lambda ((g$V$25218$U0r&n) (g$chi-internal$17096$U0r&n g$C$25213$U0r&n g$V$25218$U0r&n g$V$25217$U0r&n g$V$25215$U0r&n))) g$b$17498$U0r&n g$b*$17499$U0r&n))) g$V$25216$U0r&n g$r$17491$U0r&n))) cons g$lab*$17500$U0r&n g$rhs*$17501$U0r&n))) g$V$25214$U0r&n g$mr$17492$U0r&n))) cons g$lab*$17500$U0r&n g$rhs*$17501$U0r&n))) g$C$25221$U0r&n g$V$25225$U0r&n g$V$25224$U0r&n))) g$lookup$17493$U0r&n g$lhs*$17496$U0r&n))) (case-lambda ((g$C$25219$U0r&n g$x$17502$U0r&n) (g$expand-transformer$17115$U0r&n (case-lambda ((g$V$25220$U0r&n) (g$make-eval-transformer$16617$U0r&n g$C$25219$U0r&n g$V$25220$U0r&n))) g$x$17502$U0r&n g$mr$17492$U0r&n))) g$rhs*$17497$U0r&n)))) g$V$25222$U0r&n))) g$lhs*$17496$U0r&n))) g$ls/false$17495$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25226$U0r&n '#f '"invalid syntax" g$t$17494$U0r&n)))) g$C$25227$U0r&n g$V$25228$U0r&n))) g$t$17494$U0r&n '(_ #(each (any any)) any . each-any)))) g$C$25229$U0r&n g$e$17490$U0r&n)))) g$C$25230$U0r&n uninitialized)))))) (library-letrec*-identity 'g$fluid-let-syntax-transformer$17019$U0r&n))) (g$type-descriptor-transformer$17020$U0r&n g$type-descriptor-transformer$20617$U0r&n ((case-lambda ((g$C$29687$U0r&n) (g$C$29687$U0r&n (case-lambda ((g$C$25256$U0r&n g$e$17505$U0r&n g$r$17506$U0r&n g$mr$17507$U0r&n) ((case-lambda ((g$C$25254$U0r&n g$t$17508$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25255$U0r&n) ((case-lambda ((g$C$25251$U0r&n g$ls/false$17509$U0r&n) ((case-lambda ((g$J$25253$U0r&n) (if g$ls/false$17509$U0r&n (apply g$J$25253$U0r&n (case-lambda ((g$C$25231$U0r&n g$id$17510$U0r&n) (g$id?$16569$U0r&n g$C$25231$U0r&n g$id$17510$U0r&n))) g$ls/false$17509$U0r&n) (g$J$25253$U0r&n '#f)))) (case-lambda ((g$T$25252$U0r&n) (if g$T$25252$U0r&n (apply g$C$25251$U0r&n (case-lambda ((g$C$25249$U0r&n g$id$17511$U0r&n) (g$id->label$16582$U0r&n (case-lambda ((g$V$25250$U0r&n) ((case-lambda ((g$C$25247$U0r&n g$lab$17512$U0r&n) (g$label->binding$16584$U0r&n (case-lambda ((g$V$25248$U0r&n) ((case-lambda ((g$C$25245$U0r&n g$b$17513$U0r&n) (g$binding-type$16586$U0r&n (case-lambda ((g$V$25246$U0r&n) ((case-lambda ((g$C$25232$U0r&n g$type$17514$U0r&n) ((case-lambda ((g$J$25243$U0r&n) (not (case-lambda ((g$T$25244$U0r&n) (if g$T$25244$U0r&n (g$raise-unbound-error$16588$U0r&n g$J$25243$U0r&n g$id$17511$U0r&n) (void g$J$25243$U0r&n)))) g$lab$17512$U0r&n))) (case-lambda (g$IGNORE$25233$U0r&n ((case-lambda ((g$J$25236$U0r&n) ((case-lambda ((g$J$25239$U0r&n) (eq? (case-lambda ((g$T$25240$U0r&n) (if g$T$25240$U0r&n (g$binding-value$16587$U0r&n (case-lambda ((g$V$25241$U0r&n) (list? (case-lambda ((g$V$25242$U0r&n) (not g$J$25239$U0r&n g$V$25242$U0r&n))) g$V$25241$U0r&n))) g$b$17513$U0r&n) (g$J$25239$U0r&n '#f)))) g$type$17514$U0r&n '$rtd))) (case-lambda ((g$V$25237$U0r&n) (not (case-lambda ((g$T$25238$U0r&n) (if g$T$25238$U0r&n (g$syntax-violation$17186$U0r&n g$J$25236$U0r&n '#f '"not a record type" g$e$17505$U0r&n) (void g$J$25236$U0r&n)))) g$V$25237$U0r&n)))))) (case-lambda (g$IGNORE$25234$U0r&n (g$binding-value$16587$U0r&n (case-lambda ((g$V$25235$U0r&n) (list g$C$25232$U0r&n 'quote g$V$25235$U0r&n))) g$b$17513$U0r&n))))))))) g$C$25245$U0r&n g$V$25246$U0r&n))) g$b$17513$U0r&n))) g$C$25247$U0r&n g$V$25248$U0r&n))) g$lab$17512$U0r&n g$r$17506$U0r&n))) g$C$25249$U0r&n g$V$25250$U0r&n))) g$id$17511$U0r&n))) g$ls/false$17509$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25251$U0r&n '#f '"invalid syntax" g$t$17508$U0r&n))))))) g$C$25254$U0r&n g$V$25255$U0r&n))) g$t$17508$U0r&n '(_ any)))) g$C$25256$U0r&n g$e$17505$U0r&n)))))) (library-letrec*-identity 'g$type-descriptor-transformer$17020$U0r&n))) (g$record-type-descriptor-transformer$17021$U0r&n g$record-type-descriptor-transformer$20618$U0r&n ((case-lambda ((g$C$29688$U0r&n) (g$C$29688$U0r&n (case-lambda ((g$C$25282$U0r&n g$e$17515$U0r&n g$r$17516$U0r&n g$mr$17517$U0r&n) ((case-lambda ((g$C$25280$U0r&n g$t$17518$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25281$U0r&n) ((case-lambda ((g$C$25277$U0r&n g$ls/false$17519$U0r&n) ((case-lambda ((g$J$25279$U0r&n) (if g$ls/false$17519$U0r&n (apply g$J$25279$U0r&n (case-lambda ((g$C$25257$U0r&n g$id$17520$U0r&n) (g$id?$16569$U0r&n g$C$25257$U0r&n g$id$17520$U0r&n))) g$ls/false$17519$U0r&n) (g$J$25279$U0r&n '#f)))) (case-lambda ((g$T$25278$U0r&n) (if g$T$25278$U0r&n (apply g$C$25277$U0r&n (case-lambda ((g$C$25275$U0r&n g$id$17521$U0r&n) (g$id->label$16582$U0r&n (case-lambda ((g$V$25276$U0r&n) ((case-lambda ((g$C$25273$U0r&n g$lab$17522$U0r&n) (g$label->binding$16584$U0r&n (case-lambda ((g$V$25274$U0r&n) ((case-lambda ((g$C$25271$U0r&n g$b$17523$U0r&n) (g$binding-type$16586$U0r&n (case-lambda ((g$V$25272$U0r&n) ((case-lambda ((g$C$25258$U0r&n g$type$17524$U0r&n) ((case-lambda ((g$J$25269$U0r&n) (not (case-lambda ((g$T$25270$U0r&n) (if g$T$25270$U0r&n (g$raise-unbound-error$16588$U0r&n g$J$25269$U0r&n g$id$17521$U0r&n) (void g$J$25269$U0r&n)))) g$lab$17522$U0r&n))) (case-lambda (g$IGNORE$25259$U0r&n ((case-lambda ((g$J$25263$U0r&n) ((case-lambda ((g$J$25266$U0r&n) (eq? (case-lambda ((g$T$25267$U0r&n) (if g$T$25267$U0r&n (g$binding-value$16587$U0r&n (case-lambda ((g$V$25268$U0r&n) (list? g$J$25266$U0r&n g$V$25268$U0r&n))) g$b$17523$U0r&n) (g$J$25266$U0r&n '#f)))) g$type$17524$U0r&n '$rtd))) (case-lambda ((g$V$25264$U0r&n) (not (case-lambda ((g$T$25265$U0r&n) (if g$T$25265$U0r&n (g$syntax-violation$17186$U0r&n g$J$25263$U0r&n '#f '"not a record type" g$e$17515$U0r&n) (void g$J$25263$U0r&n)))) g$V$25264$U0r&n)))))) (case-lambda (g$IGNORE$25260$U0r&n (g$binding-value$16587$U0r&n (case-lambda ((g$V$25261$U0r&n) (car (case-lambda ((g$V$25262$U0r&n) (g$chi-expr$17085$U0r&n g$C$25258$U0r&n g$V$25262$U0r&n g$r$17516$U0r&n g$mr$17517$U0r&n))) g$V$25261$U0r&n))) g$b$17523$U0r&n))))))))) g$C$25271$U0r&n g$V$25272$U0r&n))) g$b$17523$U0r&n))) g$C$25273$U0r&n g$V$25274$U0r&n))) g$lab$17522$U0r&n g$r$17516$U0r&n))) g$C$25275$U0r&n g$V$25276$U0r&n))) g$id$17521$U0r&n))) g$ls/false$17519$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25277$U0r&n '#f '"invalid syntax" g$t$17518$U0r&n))))))) g$C$25280$U0r&n g$V$25281$U0r&n))) g$t$17518$U0r&n '(_ any)))) g$C$25282$U0r&n g$e$17515$U0r&n)))))) (library-letrec*-identity 'g$record-type-descriptor-transformer$17021$U0r&n))) (g$record-constructor-descriptor-transformer$17022$U0r&n g$record-constructor-descriptor-transformer$20619$U0r&n ((case-lambda ((g$C$29689$U0r&n) (g$C$29689$U0r&n (case-lambda ((g$C$25308$U0r&n g$e$17525$U0r&n g$r$17526$U0r&n g$mr$17527$U0r&n) ((case-lambda ((g$C$25306$U0r&n g$t$17528$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25307$U0r&n) ((case-lambda ((g$C$25303$U0r&n g$ls/false$17529$U0r&n) ((case-lambda ((g$J$25305$U0r&n) (if g$ls/false$17529$U0r&n (apply g$J$25305$U0r&n (case-lambda ((g$C$25283$U0r&n g$id$17530$U0r&n) (g$id?$16569$U0r&n g$C$25283$U0r&n g$id$17530$U0r&n))) g$ls/false$17529$U0r&n) (g$J$25305$U0r&n '#f)))) (case-lambda ((g$T$25304$U0r&n) (if g$T$25304$U0r&n (apply g$C$25303$U0r&n (case-lambda ((g$C$25301$U0r&n g$id$17531$U0r&n) (g$id->label$16582$U0r&n (case-lambda ((g$V$25302$U0r&n) ((case-lambda ((g$C$25299$U0r&n g$lab$17532$U0r&n) (g$label->binding$16584$U0r&n (case-lambda ((g$V$25300$U0r&n) ((case-lambda ((g$C$25297$U0r&n g$b$17533$U0r&n) (g$binding-type$16586$U0r&n (case-lambda ((g$V$25298$U0r&n) ((case-lambda ((g$C$25284$U0r&n g$type$17534$U0r&n) ((case-lambda ((g$J$25295$U0r&n) (not (case-lambda ((g$T$25296$U0r&n) (if g$T$25296$U0r&n (g$raise-unbound-error$16588$U0r&n g$J$25295$U0r&n g$id$17531$U0r&n) (void g$J$25295$U0r&n)))) g$lab$17532$U0r&n))) (case-lambda (g$IGNORE$25285$U0r&n ((case-lambda ((g$J$25289$U0r&n) ((case-lambda ((g$J$25292$U0r&n) (eq? (case-lambda ((g$T$25293$U0r&n) (if g$T$25293$U0r&n (g$binding-value$16587$U0r&n (case-lambda ((g$V$25294$U0r&n) (list? g$J$25292$U0r&n g$V$25294$U0r&n))) g$b$17533$U0r&n) (g$J$25292$U0r&n '#f)))) g$type$17534$U0r&n '$rtd))) (case-lambda ((g$V$25290$U0r&n) (not (case-lambda ((g$T$25291$U0r&n) (if g$T$25291$U0r&n (g$syntax-violation$17186$U0r&n g$J$25289$U0r&n '#f '"invalid type" g$e$17525$U0r&n) (void g$J$25289$U0r&n)))) g$V$25290$U0r&n)))))) (case-lambda (g$IGNORE$25286$U0r&n (g$binding-value$16587$U0r&n (case-lambda ((g$V$25287$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$25288$U0r&n) (g$chi-expr$17085$U0r&n g$C$25284$U0r&n g$V$25288$U0r&n g$r$17526$U0r&n g$mr$17527$U0r&n))) g$V$25287$U0r&n))) g$b$17533$U0r&n))))))))) g$C$25297$U0r&n g$V$25298$U0r&n))) g$b$17533$U0r&n))) g$C$25299$U0r&n g$V$25300$U0r&n))) g$lab$17532$U0r&n g$r$17526$U0r&n))) g$C$25301$U0r&n g$V$25302$U0r&n))) g$id$17531$U0r&n))) g$ls/false$17529$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25303$U0r&n '#f '"invalid syntax" g$t$17528$U0r&n))))))) g$C$25306$U0r&n g$V$25307$U0r&n))) g$t$17528$U0r&n '(_ any)))) g$C$25308$U0r&n g$e$17525$U0r&n)))))) (library-letrec*-identity 'g$record-constructor-descriptor-transformer$17022$U0r&n))) (g$when-macro$17023$U0r&n g$when-macro$20620$U0r&n ((case-lambda ((g$C$29690$U0r&n) (g$C$29690$U0r&n (case-lambda ((g$C$25316$U0r&n g$e$17535$U0r&n) ((case-lambda ((g$C$25314$U0r&n g$t$17536$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25315$U0r&n) ((case-lambda ((g$C$25313$U0r&n g$ls/false$17537$U0r&n) (if g$ls/false$17537$U0r&n (apply g$C$25313$U0r&n (case-lambda ((g$C$25309$U0r&n g$test$17538$U0r&n g$e$17539$U0r&n g$e*$17540$U0r&n) (cons (case-lambda ((g$V$25310$U0r&n) (cons (case-lambda ((g$V$25311$U0r&n) (list (case-lambda ((g$V$25312$U0r&n) (g$bless$17030$U0r&n g$C$25309$U0r&n g$V$25312$U0r&n))) 'if g$test$17538$U0r&n g$V$25311$U0r&n))) 'begin g$V$25310$U0r&n))) g$e$17539$U0r&n g$e*$17540$U0r&n))) g$ls/false$17537$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25313$U0r&n '#f '"invalid syntax" g$t$17536$U0r&n)))) g$C$25314$U0r&n g$V$25315$U0r&n))) g$t$17536$U0r&n '(_ any any . each-any)))) g$C$25316$U0r&n g$e$17535$U0r&n)))))) (library-letrec*-identity 'g$when-macro$17023$U0r&n))) (g$unless-macro$17024$U0r&n g$unless-macro$20621$U0r&n ((case-lambda ((g$C$29691$U0r&n) (g$C$29691$U0r&n (case-lambda ((g$C$25325$U0r&n g$e$17541$U0r&n) ((case-lambda ((g$C$25323$U0r&n g$t$17542$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25324$U0r&n) ((case-lambda ((g$C$25322$U0r&n g$ls/false$17543$U0r&n) (if g$ls/false$17543$U0r&n (apply g$C$25322$U0r&n (case-lambda ((g$C$25317$U0r&n g$test$17544$U0r&n g$e$17545$U0r&n g$e*$17546$U0r&n) (cons (case-lambda ((g$V$25318$U0r&n) (cons (case-lambda ((g$V$25319$U0r&n) (list (case-lambda ((g$V$25320$U0r&n) (list (case-lambda ((g$V$25321$U0r&n) (g$bless$17030$U0r&n g$C$25317$U0r&n g$V$25321$U0r&n))) 'if g$V$25320$U0r&n g$V$25319$U0r&n))) 'not g$test$17544$U0r&n))) 'begin g$V$25318$U0r&n))) g$e$17545$U0r&n g$e*$17546$U0r&n))) g$ls/false$17543$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25322$U0r&n '#f '"invalid syntax" g$t$17542$U0r&n)))) g$C$25323$U0r&n g$V$25324$U0r&n))) g$t$17542$U0r&n '(_ any any . each-any)))) g$C$25325$U0r&n g$e$17541$U0r&n)))))) (library-letrec*-identity 'g$unless-macro$17024$U0r&n))) (g$if-transformer$17025$U0r&n g$if-transformer$20622$U0r&n ((case-lambda ((g$C$29692$U0r&n) (g$C$29692$U0r&n (case-lambda ((g$C$25340$U0r&n g$e$17547$U0r&n g$r$17548$U0r&n g$mr$17549$U0r&n) ((case-lambda ((g$C$25338$U0r&n g$t$17550$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25339$U0r&n) ((case-lambda ((g$C$25337$U0r&n g$ls/false$17551$U0r&n) (if g$ls/false$17551$U0r&n (apply g$C$25337$U0r&n (case-lambda ((g$C$25326$U0r&n g$e0$17552$U0r&n g$e1$17553$U0r&n g$e2$17554$U0r&n) (g$chi-expr$17085$U0r&n (case-lambda ((g$V$25327$U0r&n) (g$chi-expr$17085$U0r&n (case-lambda ((g$V$25328$U0r&n) (g$chi-expr$17085$U0r&n (case-lambda ((g$V$25329$U0r&n) (list g$C$25326$U0r&n 'if g$V$25329$U0r&n g$V$25328$U0r&n g$V$25327$U0r&n))) g$e0$17552$U0r&n g$r$17548$U0r&n g$mr$17549$U0r&n))) g$e1$17553$U0r&n g$r$17548$U0r&n g$mr$17549$U0r&n))) g$e2$17554$U0r&n g$r$17548$U0r&n g$mr$17549$U0r&n))) g$ls/false$17551$U0r&n) ((case-lambda ((g$C$25335$U0r&n g$t$17555$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25336$U0r&n) ((case-lambda ((g$C$25334$U0r&n g$ls/false$17556$U0r&n) (if g$ls/false$17556$U0r&n (apply g$C$25334$U0r&n (case-lambda ((g$C$25330$U0r&n g$e0$17557$U0r&n g$e1$17558$U0r&n) (g$build-void$16495$U0r&n (case-lambda ((g$V$25331$U0r&n) (g$chi-expr$17085$U0r&n (case-lambda ((g$V$25332$U0r&n) (g$chi-expr$17085$U0r&n (case-lambda ((g$V$25333$U0r&n) (list g$C$25330$U0r&n 'if g$V$25333$U0r&n g$V$25332$U0r&n g$V$25331$U0r&n))) g$e0$17557$U0r&n g$r$17548$U0r&n g$mr$17549$U0r&n))) g$e1$17558$U0r&n g$r$17548$U0r&n g$mr$17549$U0r&n)))))) g$ls/false$17556$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25334$U0r&n '#f '"invalid syntax" g$t$17555$U0r&n)))) g$C$25335$U0r&n g$V$25336$U0r&n))) g$t$17555$U0r&n '(_ any any)))) g$C$25337$U0r&n g$t$17550$U0r&n)))) g$C$25338$U0r&n g$V$25339$U0r&n))) g$t$17550$U0r&n '(_ any any any)))) g$C$25340$U0r&n g$e$17547$U0r&n)))))) (library-letrec*-identity 'g$if-transformer$17025$U0r&n))) (g$case-macro$17026$U0r&n g$case-macro$20623$U0r&n ((case-lambda ((g$C$29693$U0r&n) (g$C$29693$U0r&n (case-lambda ((g$C$25393$U0r&n g$e$17559$U0r&n) ((case-lambda ((g$C$25392$U0r&n g$build-last$17560$U0r&n g$build-one$17561$U0r&n) (begin (set! g$build-last$17560$U0r&n (case-lambda ((g$C$25350$U0r&n g$cls$17580$U0r&n) ((case-lambda ((g$C$25348$U0r&n g$t$17581$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25349$U0r&n) ((case-lambda ((g$C$25347$U0r&n g$ls/false$17582$U0r&n) (if g$ls/false$17582$U0r&n (apply g$C$25347$U0r&n (case-lambda ((g$C$25341$U0r&n g$e$17583$U0r&n g$e*$17584$U0r&n) (cons (case-lambda ((g$V$25342$U0r&n) (cons g$C$25341$U0r&n 'begin g$V$25342$U0r&n))) g$e$17583$U0r&n g$e*$17584$U0r&n))) g$ls/false$17582$U0r&n) ((case-lambda ((g$C$25345$U0r&n g$t$17585$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25346$U0r&n) ((case-lambda ((g$C$25344$U0r&n g$ls/false$17586$U0r&n) (if g$ls/false$17586$U0r&n (apply g$C$25344$U0r&n (case-lambda ((g$C$25343$U0r&n) (g$build-one$17561$U0r&n g$C$25343$U0r&n g$cls$17580$U0r&n '(if #f #f)))) g$ls/false$17586$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25344$U0r&n '#f '"invalid syntax" g$t$17585$U0r&n)))) g$C$25345$U0r&n g$V$25346$U0r&n))) g$t$17585$U0r&n '_))) g$C$25347$U0r&n g$t$17581$U0r&n)))) g$C$25348$U0r&n g$V$25349$U0r&n))) g$t$17581$U0r&n '(#(scheme-id else) any . each-any)))) g$C$25350$U0r&n g$cls$17580$U0r&n)))) (begin (set! g$build-one$17561$U0r&n (case-lambda ((g$C$25366$U0r&n g$cls$17573$U0r&n g$k$17574$U0r&n) ((case-lambda ((g$C$25364$U0r&n g$t$17575$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25365$U0r&n) ((case-lambda ((g$C$25363$U0r&n g$ls/false$17576$U0r&n) (if g$ls/false$17576$U0r&n (apply g$C$25363$U0r&n (case-lambda ((g$C$25351$U0r&n g$d*$17577$U0r&n g$e$17578$U0r&n g$e*$17579$U0r&n) (length (case-lambda ((g$V$25352$U0r&n) (= (case-lambda ((g$T$25353$U0r&n) (if g$T$25353$U0r&n (cons (case-lambda ((g$V$25354$U0r&n) (cons (case-lambda ((g$V$25355$U0r&n) (car (case-lambda ((g$V$25356$U0r&n) (list (case-lambda ((g$V$25357$U0r&n) (list (case-lambda ((g$V$25358$U0r&n) (list g$C$25351$U0r&n 'if g$V$25358$U0r&n g$V$25355$U0r&n g$k$17574$U0r&n))) 'eqv? 't g$V$25357$U0r&n))) 'quote g$V$25356$U0r&n))) g$d*$17577$U0r&n))) 'begin g$V$25354$U0r&n))) g$e$17578$U0r&n g$e*$17579$U0r&n) (cons (case-lambda ((g$V$25359$U0r&n) (cons (case-lambda ((g$V$25360$U0r&n) (list (case-lambda ((g$V$25361$U0r&n) (list (case-lambda ((g$V$25362$U0r&n) (list g$C$25351$U0r&n 'if g$V$25362$U0r&n g$V$25360$U0r&n g$k$17574$U0r&n))) 'memv 't g$V$25361$U0r&n))) 'quote g$d*$17577$U0r&n))) 'begin g$V$25359$U0r&n))) g$e$17578$U0r&n g$e*$17579$U0r&n)))) '1 g$V$25352$U0r&n))) g$d*$17577$U0r&n))) g$ls/false$17576$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25363$U0r&n '#f '"invalid syntax" g$t$17575$U0r&n)))) g$C$25364$U0r&n g$V$25365$U0r&n))) g$t$17575$U0r&n '(each-any any . each-any)))) g$C$25366$U0r&n g$cls$17573$U0r&n)))) ((case-lambda ((g$C$25390$U0r&n g$t$17562$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25391$U0r&n) ((case-lambda ((g$C$25389$U0r&n g$ls/false$17563$U0r&n) (if g$ls/false$17563$U0r&n (apply g$C$25389$U0r&n (case-lambda ((g$C$25367$U0r&n g$expr$17564$U0r&n) (list (case-lambda ((g$V$25368$U0r&n) (list (case-lambda ((g$V$25369$U0r&n) (cons (case-lambda ((g$V$25370$U0r&n) (cons (case-lambda ((g$V$25371$U0r&n) (g$bless$17030$U0r&n g$C$25367$U0r&n g$V$25371$U0r&n))) 'let g$V$25370$U0r&n))) g$V$25369$U0r&n '((if #f #f))))) g$V$25368$U0r&n))) 't g$expr$17564$U0r&n))) g$ls/false$17563$U0r&n) ((case-lambda ((g$C$25387$U0r&n g$t$17565$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25388$U0r&n) ((case-lambda ((g$C$25386$U0r&n g$ls/false$17566$U0r&n) (if g$ls/false$17566$U0r&n (apply g$C$25386$U0r&n (case-lambda ((g$C$25380$U0r&n g$expr$17567$U0r&n g$cls$17568$U0r&n g$cls*$17569$U0r&n) ((case-lambda ((g$C$25379$U0r&n g$f$17570$U0r&n) ((case-lambda ((g$C$25373$U0r&n g$f$25372$U0r&n) (begin (set! g$f$17570$U0r&n g$f$25372$U0r&n) (g$C$25373$U0r&n g$f$17570$U0r&n)))) g$C$25379$U0r&n (case-lambda ((g$C$25374$U0r&n g$cls$17571$U0r&n g$cls*$17572$U0r&n) (null? (case-lambda ((g$T$25375$U0r&n) (if g$T$25375$U0r&n (g$build-last$17560$U0r&n g$C$25374$U0r&n g$cls$17571$U0r&n) (cdr (case-lambda ((g$V$25376$U0r&n) (car (case-lambda ((g$V$25377$U0r&n) (g$f$17570$U0r&n (case-lambda ((g$V$25378$U0r&n) (g$build-one$17561$U0r&n g$C$25374$U0r&n g$cls$17571$U0r&n g$V$25378$U0r&n))) g$V$25377$U0r&n g$V$25376$U0r&n))) g$cls*$17572$U0r&n))) g$cls*$17572$U0r&n)))) g$cls*$17572$U0r&n)))))) (case-lambda ((g$V$25381$U0r&n) (g$V$25381$U0r&n (case-lambda ((g$V$25382$U0r&n) (list (case-lambda ((g$V$25383$U0r&n) (list (case-lambda ((g$V$25384$U0r&n) (list (case-lambda ((g$V$25385$U0r&n) (g$bless$17030$U0r&n g$C$25380$U0r&n g$V$25385$U0r&n))) 'let g$V$25384$U0r&n g$V$25382$U0r&n))) g$V$25383$U0r&n))) 't g$expr$17567$U0r&n))) g$cls$17568$U0r&n g$cls*$17569$U0r&n))) uninitialized))) g$ls/false$17566$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25386$U0r&n '#f '"invalid syntax" g$t$17565$U0r&n)))) g$C$25387$U0r&n g$V$25388$U0r&n))) g$t$17565$U0r&n '(_ any any . each-any)))) g$C$25389$U0r&n g$t$17562$U0r&n)))) g$C$25390$U0r&n g$V$25391$U0r&n))) g$t$17562$U0r&n '(_ any)))) g$C$25392$U0r&n g$e$17559$U0r&n))))) g$C$25393$U0r&n uninitialized uninitialized)))))) (library-letrec*-identity 'g$case-macro$17026$U0r&n))) (g$quote-transformer$17027$U0r&n g$quote-transformer$20624$U0r&n ((case-lambda ((g$C$29694$U0r&n) (g$C$29694$U0r&n (case-lambda ((g$C$25399$U0r&n g$e$17587$U0r&n g$r$17588$U0r&n g$mr$17589$U0r&n) ((case-lambda ((g$C$25397$U0r&n g$t$17590$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25398$U0r&n) ((case-lambda ((g$C$25396$U0r&n g$ls/false$17591$U0r&n) (if g$ls/false$17591$U0r&n (apply g$C$25396$U0r&n (case-lambda ((g$C$25394$U0r&n g$datum$17592$U0r&n) (g$stx->datum$16580$U0r&n (case-lambda ((g$V$25395$U0r&n) (list g$C$25394$U0r&n 'quote g$V$25395$U0r&n))) g$datum$17592$U0r&n))) g$ls/false$17591$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25396$U0r&n '#f '"invalid syntax" g$t$17590$U0r&n)))) g$C$25397$U0r&n g$V$25398$U0r&n))) g$t$17590$U0r&n '(_ any)))) g$C$25399$U0r&n g$e$17587$U0r&n)))))) (library-letrec*-identity 'g$quote-transformer$17027$U0r&n))) (g$case-lambda-transformer$17028$U0r&n g$case-lambda-transformer$20625$U0r&n ((case-lambda ((g$C$29695$U0r&n) (g$C$29695$U0r&n (case-lambda ((g$C$25408$U0r&n g$e$17593$U0r&n g$r$17594$U0r&n g$mr$17595$U0r&n) ((case-lambda ((g$C$25406$U0r&n g$t$17596$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25407$U0r&n) ((case-lambda ((g$C$25405$U0r&n g$ls/false$17597$U0r&n) (if g$ls/false$17597$U0r&n (apply g$C$25405$U0r&n (case-lambda ((g$C$25404$U0r&n g$fmls*$17598$U0r&n g$b*$17599$U0r&n g$b**$17600$U0r&n) (call-with-values g$C$25404$U0r&n (case-lambda ((g$C$25400$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$25401$U0r&n) (g$chi-lambda-clause*$17089$U0r&n g$C$25400$U0r&n g$e$17593$U0r&n g$fmls*$17598$U0r&n g$V$25401$U0r&n g$r$17594$U0r&n g$mr$17595$U0r&n))) cons g$b*$17599$U0r&n g$b**$17600$U0r&n))) (case-lambda ((g$C$25403$U0r&n g$fmls*$17603$U0r&n g$body*$17604$U0r&n) ((case-lambda ((g$C$25402$U0r&n g$body*$17605$U0r&n g$fmls*$17606$U0r&n) (g$build-case-lambda$16492$U0r&n g$C$25402$U0r&n '#f g$fmls*$17606$U0r&n g$body*$17605$U0r&n))) g$C$25403$U0r&n g$body*$17604$U0r&n g$fmls*$17603$U0r&n)))))) g$ls/false$17597$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25405$U0r&n '#f '"invalid syntax" g$t$17596$U0r&n)))) g$C$25406$U0r&n g$V$25407$U0r&n))) g$t$17596$U0r&n '(_ . #(each (any any . each-any)))))) g$C$25408$U0r&n g$e$17593$U0r&n)))))) (library-letrec*-identity 'g$case-lambda-transformer$17028$U0r&n))) (g$lambda-transformer$17029$U0r&n g$lambda-transformer$20626$U0r&n ((case-lambda ((g$C$29696$U0r&n) (g$C$29696$U0r&n (case-lambda ((g$C$25417$U0r&n g$e$17607$U0r&n g$r$17608$U0r&n g$mr$17609$U0r&n) ((case-lambda ((g$C$25415$U0r&n g$t$17610$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25416$U0r&n) ((case-lambda ((g$C$25414$U0r&n g$ls/false$17611$U0r&n) (if g$ls/false$17611$U0r&n (apply g$C$25414$U0r&n (case-lambda ((g$C$25413$U0r&n g$fmls$17612$U0r&n g$b$17613$U0r&n g$b*$17614$U0r&n) (call-with-values g$C$25413$U0r&n (case-lambda ((g$C$25409$U0r&n) (cons (case-lambda ((g$V$25410$U0r&n) (g$chi-lambda-clause$17088$U0r&n g$C$25409$U0r&n g$e$17607$U0r&n g$fmls$17612$U0r&n g$V$25410$U0r&n g$r$17608$U0r&n g$mr$17609$U0r&n))) g$b$17613$U0r&n g$b*$17614$U0r&n))) (case-lambda ((g$C$25412$U0r&n g$fmls$17617$U0r&n g$body$17618$U0r&n) ((case-lambda ((g$C$25411$U0r&n g$body$17619$U0r&n g$fmls$17620$U0r&n) (g$build-lambda$16491$U0r&n g$C$25411$U0r&n '#f g$fmls$17620$U0r&n g$body$17619$U0r&n))) g$C$25412$U0r&n g$body$17618$U0r&n g$fmls$17617$U0r&n)))))) g$ls/false$17611$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25414$U0r&n '#f '"invalid syntax" g$t$17610$U0r&n)))) g$C$25415$U0r&n g$V$25416$U0r&n))) g$t$17610$U0r&n '(_ any any . each-any)))) g$C$25417$U0r&n g$e$17607$U0r&n)))))) (library-letrec*-identity 'g$lambda-transformer$17029$U0r&n))) (g$bless$17030$U0r&n g$bless$20627$U0r&n ((case-lambda ((g$C$29697$U0r&n) (g$C$29697$U0r&n (case-lambda ((g$C$25430$U0r&n g$x$17621$U0r&n) ((case-lambda ((g$C$25429$U0r&n g$f$17622$U0r&n) ((case-lambda ((g$C$25419$U0r&n g$f$25418$U0r&n) (begin (set! g$f$17622$U0r&n g$f$25418$U0r&n) (g$C$25419$U0r&n g$f$17622$U0r&n)))) g$C$25429$U0r&n (case-lambda ((g$C$25420$U0r&n g$x$17623$U0r&n) (g$stx?$16541$U0r&n (case-lambda ((g$T$25421$U0r&n) (if g$T$25421$U0r&n (g$C$25420$U0r&n g$x$17623$U0r&n) (pair? (case-lambda ((g$T$25422$U0r&n) (if g$T$25422$U0r&n (cdr (case-lambda ((g$V$25423$U0r&n) (g$f$17622$U0r&n (case-lambda ((g$V$25424$U0r&n) (car (case-lambda ((g$V$25425$U0r&n) (g$f$17622$U0r&n (case-lambda ((g$V$25426$U0r&n) (cons g$C$25420$U0r&n g$V$25426$U0r&n g$V$25424$U0r&n))) g$V$25425$U0r&n))) g$x$17623$U0r&n))) g$V$25423$U0r&n))) g$x$17623$U0r&n) (g$symbol?$13496$U0r&n (case-lambda ((g$T$25427$U0r&n) (if g$T$25427$U0r&n (g$scheme-stx$17010$U0r&n g$C$25420$U0r&n g$x$17623$U0r&n) (g$vector?$13494$U0r&n (case-lambda ((g$T$25428$U0r&n) (if g$T$25428$U0r&n (g$vector-map$13557$U0r&n g$C$25420$U0r&n g$f$17622$U0r&n g$x$17623$U0r&n) (g$C$25420$U0r&n g$x$17623$U0r&n)))) g$x$17623$U0r&n)))) g$x$17623$U0r&n)))) g$x$17623$U0r&n)))) g$x$17623$U0r&n)))))) (case-lambda ((g$V$25431$U0r&n) (g$V$25431$U0r&n (case-lambda ((g$V$25432$U0r&n) (g$mkstx$16557$U0r&n g$C$25430$U0r&n g$V$25432$U0r&n '() '() '()))) g$x$17621$U0r&n))) uninitialized)))))) (library-letrec*-identity 'g$bless$17030$U0r&n))) (g$with-syntax-macro$17031$U0r&n g$with-syntax-macro$20628$U0r&n ((case-lambda ((g$C$29698$U0r&n) (g$C$29698$U0r&n (case-lambda ((g$C$25477$U0r&n g$e$17624$U0r&n) ((case-lambda ((g$C$25475$U0r&n g$t$17625$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25476$U0r&n) ((case-lambda ((g$C$25474$U0r&n g$ls/false$17626$U0r&n) (if g$ls/false$17626$U0r&n (apply g$C$25474$U0r&n (case-lambda ((g$C$25471$U0r&n g$pat*$17627$U0r&n g$expr*$17628$U0r&n g$b$17629$U0r&n g$b*$17630$U0r&n) ((case-lambda ((g$C$25470$U0r&n g$f$17636$U0r&n) ((case-lambda ((g$C$25461$U0r&n g$f$25460$U0r&n) (begin (set! g$f$17636$U0r&n g$f$25460$U0r&n) (g$C$25461$U0r&n g$f$17636$U0r&n)))) g$C$25470$U0r&n (case-lambda ((g$C$25468$U0r&n g$pat*$17637$U0r&n) (null? (case-lambda ((g$T$25469$U0r&n) (if g$T$25469$U0r&n (g$C$25468$U0r&n '()) (call-with-values g$C$25468$U0r&n (case-lambda ((g$C$25462$U0r&n) (car (case-lambda ((g$V$25463$U0r&n) (g$convert-pattern$17066$U0r&n g$C$25462$U0r&n g$V$25463$U0r&n '()))) g$pat*$17637$U0r&n))) (case-lambda ((g$C$25467$U0r&n g$pat$17640$U0r&n g$idn*$17641$U0r&n) ((case-lambda ((g$C$25464$U0r&n g$idn*$17642$U0r&n g$pat$17643$U0r&n) (cdr (case-lambda ((g$V$25465$U0r&n) (g$f$17636$U0r&n (case-lambda ((g$V$25466$U0r&n) (append g$C$25464$U0r&n g$idn*$17642$U0r&n g$V$25466$U0r&n))) g$V$25465$U0r&n))) g$pat*$17637$U0r&n))) g$C$25467$U0r&n g$idn*$17641$U0r&n g$pat$17640$U0r&n))))))) g$pat*$17637$U0r&n)))))) (case-lambda ((g$V$25472$U0r&n) (g$V$25472$U0r&n (case-lambda ((g$V$25473$U0r&n) ((case-lambda ((g$C$25456$U0r&n g$idn*$17631$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$25457$U0r&n) (g$verify-formals$17087$U0r&n (case-lambda (g$IGNORE$25458$U0r&n (g$generate-temporaries$17176$U0r&n (case-lambda ((g$V$25459$U0r&n) ((case-lambda ((g$C$25451$U0r&n g$t*$17632$U0r&n) ((case-lambda ((g$C$25450$U0r&n g$f$17633$U0r&n) ((case-lambda ((g$C$25434$U0r&n g$f$25433$U0r&n) (begin (set! g$f$17633$U0r&n g$f$25433$U0r&n) (g$C$25434$U0r&n g$f$17633$U0r&n)))) g$C$25450$U0r&n (case-lambda ((g$C$25435$U0r&n g$pat*$17634$U0r&n g$t*$17635$U0r&n) (null? (case-lambda ((g$T$25436$U0r&n) (if g$T$25436$U0r&n (cons (case-lambda ((g$V$25437$U0r&n) (cons (case-lambda ((g$V$25438$U0r&n) (cons g$C$25435$U0r&n 'begin g$V$25438$U0r&n))) '#f g$V$25437$U0r&n))) g$b$17629$U0r&n g$b*$17630$U0r&n) (car (case-lambda ((g$V$25439$U0r&n) (car (case-lambda ((g$V$25440$U0r&n) (list (case-lambda ((g$V$25441$U0r&n) (list (case-lambda ((g$V$25442$U0r&n) (list (case-lambda ((g$V$25443$U0r&n) (cdr (case-lambda ((g$V$25444$U0r&n) (cdr (case-lambda ((g$V$25445$U0r&n) (g$f$17633$U0r&n (case-lambda ((g$V$25446$U0r&n) (car (case-lambda ((g$V$25447$U0r&n) (list (case-lambda ((g$V$25448$U0r&n) (car (case-lambda ((g$V$25449$U0r&n) (list g$C$25435$U0r&n 'syntax-case g$V$25449$U0r&n '() g$V$25448$U0r&n g$V$25443$U0r&n))) g$t*$17635$U0r&n))) g$V$25447$U0r&n g$V$25446$U0r&n))) g$pat*$17634$U0r&n))) g$V$25445$U0r&n g$V$25444$U0r&n))) g$pat*$17634$U0r&n))) g$t*$17635$U0r&n))) '_ g$V$25442$U0r&n))) 'assertion-violation ''with-syntax '"pattern does not match value" g$V$25441$U0r&n g$V$25439$U0r&n))) 'quote g$V$25440$U0r&n))) g$pat*$17634$U0r&n))) g$t*$17635$U0r&n)))) g$pat*$17634$U0r&n)))))) (case-lambda ((g$V$25452$U0r&n) (g$V$25452$U0r&n (case-lambda ((g$V$25453$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$25454$U0r&n) (list (case-lambda ((g$V$25455$U0r&n) (g$bless$17030$U0r&n g$C$25451$U0r&n g$V$25455$U0r&n))) 'let g$V$25454$U0r&n g$V$25453$U0r&n))) list g$t*$17632$U0r&n g$expr*$17628$U0r&n))) g$pat*$17627$U0r&n g$t*$17632$U0r&n))) uninitialized))) g$C$25456$U0r&n g$V$25459$U0r&n))) g$expr*$17628$U0r&n))) g$V$25457$U0r&n g$e$17624$U0r&n))) car g$idn*$17631$U0r&n))) g$C$25471$U0r&n g$V$25473$U0r&n))) g$pat*$17627$U0r&n))) uninitialized))) g$ls/false$17626$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25474$U0r&n '#f '"invalid syntax" g$t$17625$U0r&n)))) g$C$25475$U0r&n g$V$25476$U0r&n))) g$t$17625$U0r&n '(_ #(each (any any)) any . each-any)))) g$C$25477$U0r&n g$e$17624$U0r&n)))))) (library-letrec*-identity 'g$with-syntax-macro$17031$U0r&n))) (g$invalid-fmls-error$17032$U0r&n g$invalid-fmls-error$20629$U0r&n ((case-lambda ((g$C$29699$U0r&n) (g$C$29699$U0r&n (case-lambda ((g$C$25506$U0r&n g$stx$17644$U0r&n g$fmls$17645$U0r&n) ((case-lambda ((g$C$25504$U0r&n g$t$17646$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25505$U0r&n) ((case-lambda ((g$C$25503$U0r&n g$ls/false$17647$U0r&n) (if g$ls/false$17647$U0r&n (apply g$C$25503$U0r&n (case-lambda ((g$C$25493$U0r&n g$id*$17648$U0r&n g$last$17649$U0r&n) ((case-lambda ((g$J$25496$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$T$25497$U0r&n) (if g$T$25497$U0r&n (cons g$J$25496$U0r&n g$last$17649$U0r&n g$id*$17648$U0r&n) (g$syntax-null?$16564$U0r&n (case-lambda ((g$T$25498$U0r&n) (if g$T$25498$U0r&n (g$J$25496$U0r&n g$id*$17648$U0r&n) (g$syntax-violation$17186$U0r&n g$J$25496$U0r&n '#f '"not an identifier" g$stx$17644$U0r&n g$last$17649$U0r&n)))) g$last$17649$U0r&n)))) g$last$17649$U0r&n))) (case-lambda ((g$V$25494$U0r&n) ((case-lambda ((g$C$25492$U0r&n g$f$17650$U0r&n) ((case-lambda ((g$C$25479$U0r&n g$f$25478$U0r&n) (begin (set! g$f$17650$U0r&n g$f$25478$U0r&n) (g$C$25479$U0r&n g$f$17650$U0r&n)))) g$C$25492$U0r&n (case-lambda ((g$C$25480$U0r&n g$id*$17651$U0r&n) (null? (case-lambda ((g$T$25481$U0r&n) (if g$T$25481$U0r&n (values g$C$25480$U0r&n) (car (case-lambda ((g$V$25482$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$V$25483$U0r&n) (not (case-lambda ((g$T$25484$U0r&n) (if g$T$25484$U0r&n (car (case-lambda ((g$V$25485$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25480$U0r&n '#f '"not an identifier" g$stx$17644$U0r&n g$V$25485$U0r&n))) g$id*$17651$U0r&n) (cdr (case-lambda ((g$V$25486$U0r&n) (g$f$17650$U0r&n (case-lambda (g$IGNORE$25487$U0r&n (cdr (case-lambda ((g$V$25488$U0r&n) (car (case-lambda ((g$V$25489$U0r&n) (g$bound-id-member?$16576$U0r&n (case-lambda ((g$T$25490$U0r&n) (if g$T$25490$U0r&n (car (case-lambda ((g$V$25491$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25480$U0r&n '#f '"duplicate binding" g$stx$17644$U0r&n g$V$25491$U0r&n))) g$id*$17651$U0r&n) (void g$C$25480$U0r&n)))) g$V$25489$U0r&n g$V$25488$U0r&n))) g$id*$17651$U0r&n))) g$id*$17651$U0r&n))) g$V$25486$U0r&n))) g$id*$17651$U0r&n)))) g$V$25483$U0r&n))) g$V$25482$U0r&n))) g$id*$17651$U0r&n)))) g$id*$17651$U0r&n)))))) (case-lambda ((g$V$25495$U0r&n) (g$V$25495$U0r&n g$C$25493$U0r&n g$V$25494$U0r&n))) uninitialized)))))) g$ls/false$17647$U0r&n) ((case-lambda ((g$C$25501$U0r&n g$t$17652$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25502$U0r&n) ((case-lambda ((g$C$25500$U0r&n g$ls/false$17653$U0r&n) (if g$ls/false$17653$U0r&n (apply g$C$25500$U0r&n (case-lambda ((g$C$25499$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25499$U0r&n '#f '"malformed binding form" g$stx$17644$U0r&n g$fmls$17645$U0r&n))) g$ls/false$17653$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25500$U0r&n '#f '"invalid syntax" g$t$17652$U0r&n)))) g$C$25501$U0r&n g$V$25502$U0r&n))) g$t$17652$U0r&n '_))) g$C$25503$U0r&n g$t$17646$U0r&n)))) g$C$25504$U0r&n g$V$25505$U0r&n))) g$t$17646$U0r&n '#(each+ any () any)))) g$C$25506$U0r&n g$fmls$17645$U0r&n)))))) (library-letrec*-identity 'g$invalid-fmls-error$17032$U0r&n))) (g$let-macro$17033$U0r&n g$let-macro$20630$U0r&n ((case-lambda ((g$C$29700$U0r&n) (g$C$29700$U0r&n (case-lambda ((g$C$25531$U0r&n g$stx$17654$U0r&n) ((case-lambda ((g$C$25529$U0r&n g$t$17655$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25530$U0r&n) ((case-lambda ((g$C$25528$U0r&n g$ls/false$17656$U0r&n) (if g$ls/false$17656$U0r&n (apply g$C$25528$U0r&n (case-lambda ((g$C$25507$U0r&n g$lhs*$17657$U0r&n g$rhs*$17658$U0r&n g$b$17659$U0r&n g$b*$17660$U0r&n) (g$valid-bound-ids?$16574$U0r&n (case-lambda ((g$T$25508$U0r&n) (if g$T$25508$U0r&n (cons (case-lambda ((g$V$25509$U0r&n) (cons (case-lambda ((g$V$25510$U0r&n) (cons (case-lambda ((g$V$25511$U0r&n) (cons (case-lambda ((g$V$25512$U0r&n) (g$bless$17030$U0r&n g$C$25507$U0r&n g$V$25512$U0r&n))) g$V$25511$U0r&n g$rhs*$17658$U0r&n))) 'lambda g$V$25510$U0r&n))) g$lhs*$17657$U0r&n g$V$25509$U0r&n))) g$b$17659$U0r&n g$b*$17660$U0r&n) (g$invalid-fmls-error$17032$U0r&n g$C$25507$U0r&n g$stx$17654$U0r&n g$lhs*$17657$U0r&n)))) g$lhs*$17657$U0r&n))) g$ls/false$17656$U0r&n) ((case-lambda ((g$C$25526$U0r&n g$t$17661$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25527$U0r&n) ((case-lambda ((g$C$25523$U0r&n g$ls/false$17662$U0r&n) ((case-lambda ((g$J$25525$U0r&n) (if g$ls/false$17662$U0r&n (apply g$J$25525$U0r&n (case-lambda ((g$C$25513$U0r&n g$f$17663$U0r&n g$lhs*$17664$U0r&n g$rhs*$17665$U0r&n g$b$17666$U0r&n g$b*$17667$U0r&n) (g$id?$16569$U0r&n g$C$25513$U0r&n g$f$17663$U0r&n))) g$ls/false$17662$U0r&n) (g$J$25525$U0r&n '#f)))) (case-lambda ((g$T$25524$U0r&n) (if g$T$25524$U0r&n (apply g$C$25523$U0r&n (case-lambda ((g$C$25514$U0r&n g$f$17668$U0r&n g$lhs*$17669$U0r&n g$rhs*$17670$U0r&n g$b$17671$U0r&n g$b*$17672$U0r&n) (g$valid-bound-ids?$16574$U0r&n (case-lambda ((g$T$25515$U0r&n) (if g$T$25515$U0r&n (cons (case-lambda ((g$V$25516$U0r&n) (cons (case-lambda ((g$V$25517$U0r&n) (cons (case-lambda ((g$V$25518$U0r&n) (list (case-lambda ((g$V$25519$U0r&n) (list (case-lambda ((g$V$25520$U0r&n) (list (case-lambda ((g$V$25521$U0r&n) (cons (case-lambda ((g$V$25522$U0r&n) (g$bless$17030$U0r&n g$C$25514$U0r&n g$V$25522$U0r&n))) g$V$25521$U0r&n g$rhs*$17670$U0r&n))) 'letrec g$V$25520$U0r&n g$f$17668$U0r&n))) g$V$25519$U0r&n))) g$f$17668$U0r&n g$V$25518$U0r&n))) 'lambda g$V$25517$U0r&n))) g$lhs*$17669$U0r&n g$V$25516$U0r&n))) g$b$17671$U0r&n g$b*$17672$U0r&n) (g$invalid-fmls-error$17032$U0r&n g$C$25514$U0r&n g$stx$17654$U0r&n g$lhs*$17669$U0r&n)))) g$lhs*$17669$U0r&n))) g$ls/false$17662$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25523$U0r&n '#f '"invalid syntax" g$t$17661$U0r&n))))))) g$C$25526$U0r&n g$V$25527$U0r&n))) g$t$17661$U0r&n '(_ any #(each (any any)) any . each-any)))) g$C$25528$U0r&n g$t$17655$U0r&n)))) g$C$25529$U0r&n g$V$25530$U0r&n))) g$t$17655$U0r&n '(_ #(each (any any)) any . each-any)))) g$C$25531$U0r&n g$stx$17654$U0r&n)))))) (library-letrec*-identity 'g$let-macro$17033$U0r&n))) (g$let-values-macro$17034$U0r&n g$let-values-macro$20631$U0r&n ((case-lambda ((g$C$29701$U0r&n) (g$C$29701$U0r&n (case-lambda ((g$C$25607$U0r&n g$stx$17673$U0r&n) ((case-lambda ((g$C$25606$U0r&n g$rename$17674$U0r&n g$rename*$17675$U0r&n) (begin (set! g$rename$17674$U0r&n (case-lambda ((g$C$25535$U0r&n g$x$17725$U0r&n g$old*$17726$U0r&n g$new*$17727$U0r&n) ((case-lambda ((g$J$25542$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$V$25543$U0r&n) (not (case-lambda ((g$T$25544$U0r&n) (if g$T$25544$U0r&n (g$syntax-violation$17186$U0r&n g$J$25542$U0r&n '#f '"not an indentifier" g$stx$17673$U0r&n g$x$17725$U0r&n) (void g$J$25542$U0r&n)))) g$V$25543$U0r&n))) g$x$17725$U0r&n))) (case-lambda (g$IGNORE$25536$U0r&n ((case-lambda ((g$J$25540$U0r&n) (g$bound-id-member?$16576$U0r&n (case-lambda ((g$T$25541$U0r&n) (if g$T$25541$U0r&n (g$syntax-violation$17186$U0r&n g$J$25540$U0r&n '#f '"duplicate binding" g$stx$17673$U0r&n g$x$17725$U0r&n) (void g$J$25540$U0r&n)))) g$x$17725$U0r&n g$old*$17726$U0r&n))) (case-lambda (g$IGNORE$25537$U0r&n (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$25538$U0r&n) (gensym (case-lambda ((g$V$25539$U0r&n) ((case-lambda ((g$C$25532$U0r&n g$y$17728$U0r&n) (cons (case-lambda ((g$V$25533$U0r&n) (cons (case-lambda ((g$V$25534$U0r&n) (values g$C$25532$U0r&n g$y$17728$U0r&n g$V$25534$U0r&n g$V$25533$U0r&n))) g$x$17725$U0r&n g$old*$17726$U0r&n))) g$y$17728$U0r&n g$new*$17727$U0r&n))) g$C$25535$U0r&n g$V$25539$U0r&n))) g$V$25538$U0r&n))) g$x$17725$U0r&n)))))))))) (begin (set! g$rename*$17675$U0r&n (case-lambda ((g$C$25552$U0r&n g$x*$17716$U0r&n g$old*$17717$U0r&n g$new*$17718$U0r&n) (null? (case-lambda ((g$T$25553$U0r&n) (if g$T$25553$U0r&n (values g$C$25552$U0r&n '() g$old*$17717$U0r&n g$new*$17718$U0r&n) (call-with-values g$C$25552$U0r&n (case-lambda ((g$C$25545$U0r&n) (car (case-lambda ((g$V$25546$U0r&n) (g$rename$17674$U0r&n g$C$25545$U0r&n g$V$25546$U0r&n g$old*$17717$U0r&n g$new*$17718$U0r&n))) g$x*$17716$U0r&n))) (case-lambda ((g$C$25551$U0r&n g$x$17719$U0r&n g$old*$17720$U0r&n g$new*$17721$U0r&n) (call-with-values g$C$25551$U0r&n (case-lambda ((g$C$25547$U0r&n) (cdr (case-lambda ((g$V$25548$U0r&n) (g$rename*$17675$U0r&n g$C$25547$U0r&n g$V$25548$U0r&n g$old*$17720$U0r&n g$new*$17721$U0r&n))) g$x*$17716$U0r&n))) (case-lambda ((g$C$25549$U0r&n g$x*$17722$U0r&n g$old*$17723$U0r&n g$new*$17724$U0r&n) (cons (case-lambda ((g$V$25550$U0r&n) (values g$C$25549$U0r&n g$V$25550$U0r&n g$old*$17723$U0r&n g$new*$17724$U0r&n))) g$x$17719$U0r&n g$x*$17722$U0r&n)))))))))) g$x*$17716$U0r&n)))) ((case-lambda ((g$C$25604$U0r&n g$t$17676$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25605$U0r&n) ((case-lambda ((g$C$25603$U0r&n g$ls/false$17677$U0r&n) (if g$ls/false$17677$U0r&n (apply g$C$25603$U0r&n (case-lambda ((g$C$25554$U0r&n g$b$17678$U0r&n g$b*$17679$U0r&n) (g$bless$17030$U0r&n (case-lambda ((g$V$25555$U0r&n) (g$cons*$12755$U0r&n g$C$25554$U0r&n g$V$25555$U0r&n '() g$b$17678$U0r&n g$b*$17679$U0r&n))) 'let))) g$ls/false$17677$U0r&n) ((case-lambda ((g$C$25601$U0r&n g$t$17680$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25602$U0r&n) ((case-lambda ((g$C$25600$U0r&n g$ls/false$17681$U0r&n) (if g$ls/false$17681$U0r&n (apply g$C$25600$U0r&n (case-lambda ((g$C$25597$U0r&n g$lhs*$17682$U0r&n g$rhs*$17683$U0r&n g$b$17684$U0r&n g$b*$17685$U0r&n) ((case-lambda ((g$C$25596$U0r&n g$f$17686$U0r&n) ((case-lambda ((g$C$25557$U0r&n g$f$25556$U0r&n) (begin (set! g$f$17686$U0r&n g$f$25556$U0r&n) (g$C$25557$U0r&n g$f$17686$U0r&n)))) g$C$25596$U0r&n (case-lambda ((g$C$25590$U0r&n g$lhs*$17687$U0r&n g$rhs*$17688$U0r&n g$old*$17689$U0r&n g$new*$17690$U0r&n) (null? (case-lambda ((g$T$25591$U0r&n) (if g$T$25591$U0r&n (cons (case-lambda ((g$V$25592$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$25593$U0r&n) (cons (case-lambda ((g$V$25594$U0r&n) (cons g$C$25590$U0r&n 'let g$V$25594$U0r&n))) g$V$25593$U0r&n g$V$25592$U0r&n))) list g$old*$17689$U0r&n g$new*$17690$U0r&n))) g$b$17684$U0r&n g$b*$17685$U0r&n) (car (case-lambda ((g$V$25595$U0r&n) ((case-lambda ((g$C$25588$U0r&n g$t$17691$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25589$U0r&n) ((case-lambda ((g$C$25587$U0r&n g$ls/false$17692$U0r&n) (if g$ls/false$17692$U0r&n (apply g$C$25587$U0r&n (case-lambda ((g$C$25567$U0r&n g$x*$17693$U0r&n) (call-with-values g$C$25567$U0r&n (case-lambda ((g$C$25558$U0r&n) (g$rename*$17675$U0r&n g$C$25558$U0r&n g$x*$17693$U0r&n g$old*$17689$U0r&n g$new*$17690$U0r&n))) (case-lambda ((g$C$25566$U0r&n g$y*$17697$U0r&n g$old*$17698$U0r&n g$new*$17699$U0r&n) ((case-lambda ((g$C$25559$U0r&n g$new*$17700$U0r&n g$old*$17701$U0r&n g$y*$17702$U0r&n) (cdr (case-lambda ((g$V$25560$U0r&n) (cdr (case-lambda ((g$V$25561$U0r&n) (g$f$17686$U0r&n (case-lambda ((g$V$25562$U0r&n) (list (case-lambda ((g$V$25563$U0r&n) (car (case-lambda ((g$V$25564$U0r&n) (list (case-lambda ((g$V$25565$U0r&n) (list g$C$25559$U0r&n 'call-with-values g$V$25565$U0r&n g$V$25563$U0r&n))) 'lambda '() g$V$25564$U0r&n))) g$rhs*$17688$U0r&n))) 'lambda g$y*$17702$U0r&n g$V$25562$U0r&n))) g$V$25561$U0r&n g$V$25560$U0r&n g$old*$17701$U0r&n g$new*$17700$U0r&n))) g$lhs*$17687$U0r&n))) g$rhs*$17688$U0r&n))) g$C$25566$U0r&n g$new*$17699$U0r&n g$old*$17698$U0r&n g$y*$17697$U0r&n)))))) g$ls/false$17692$U0r&n) ((case-lambda ((g$C$25585$U0r&n g$t$17703$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25586$U0r&n) ((case-lambda ((g$C$25584$U0r&n g$ls/false$17704$U0r&n) (if g$ls/false$17704$U0r&n (apply g$C$25584$U0r&n (case-lambda ((g$C$25579$U0r&n g$x*$17705$U0r&n g$x$17706$U0r&n) (call-with-values g$C$25579$U0r&n (case-lambda ((g$C$25568$U0r&n) (g$rename$17674$U0r&n g$C$25568$U0r&n g$x$17706$U0r&n g$old*$17689$U0r&n g$new*$17690$U0r&n))) (case-lambda ((g$C$25578$U0r&n g$y$17707$U0r&n g$old*$17708$U0r&n g$new*$17709$U0r&n) (call-with-values g$C$25578$U0r&n (case-lambda ((g$C$25569$U0r&n) (g$rename*$17675$U0r&n g$C$25569$U0r&n g$x*$17705$U0r&n g$old*$17708$U0r&n g$new*$17709$U0r&n))) (case-lambda ((g$C$25570$U0r&n g$y*$17710$U0r&n g$old*$17711$U0r&n g$new*$17712$U0r&n) (cdr (case-lambda ((g$V$25571$U0r&n) (cdr (case-lambda ((g$V$25572$U0r&n) (g$f$17686$U0r&n (case-lambda ((g$V$25573$U0r&n) (append (case-lambda ((g$V$25574$U0r&n) (list (case-lambda ((g$V$25575$U0r&n) (car (case-lambda ((g$V$25576$U0r&n) (list (case-lambda ((g$V$25577$U0r&n) (list g$C$25570$U0r&n 'call-with-values g$V$25577$U0r&n g$V$25575$U0r&n))) 'lambda '() g$V$25576$U0r&n))) g$rhs*$17688$U0r&n))) 'lambda g$V$25574$U0r&n g$V$25573$U0r&n))) g$y*$17710$U0r&n g$y$17707$U0r&n))) g$V$25572$U0r&n g$V$25571$U0r&n g$old*$17711$U0r&n g$new*$17712$U0r&n))) g$lhs*$17687$U0r&n))) g$rhs*$17688$U0r&n))))))))) g$ls/false$17704$U0r&n) ((case-lambda ((g$C$25582$U0r&n g$t$17713$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25583$U0r&n) ((case-lambda ((g$C$25581$U0r&n g$ls/false$17714$U0r&n) (if g$ls/false$17714$U0r&n (apply g$C$25581$U0r&n (case-lambda ((g$C$25580$U0r&n g$others$17715$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25580$U0r&n '#f '"malformed bindings" g$stx$17673$U0r&n g$others$17715$U0r&n))) g$ls/false$17714$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25581$U0r&n '#f '"invalid syntax" g$t$17713$U0r&n)))) g$C$25582$U0r&n g$V$25583$U0r&n))) g$t$17713$U0r&n 'any))) g$C$25584$U0r&n g$t$17703$U0r&n)))) g$C$25585$U0r&n g$V$25586$U0r&n))) g$t$17703$U0r&n '#(each+ any () any)))) g$C$25587$U0r&n g$t$17691$U0r&n)))) g$C$25588$U0r&n g$V$25589$U0r&n))) g$t$17691$U0r&n 'each-any))) g$C$25590$U0r&n g$V$25595$U0r&n))) g$lhs*$17687$U0r&n)))) g$lhs*$17687$U0r&n)))))) (case-lambda ((g$V$25598$U0r&n) (g$V$25598$U0r&n (case-lambda ((g$V$25599$U0r&n) (g$bless$17030$U0r&n g$C$25597$U0r&n g$V$25599$U0r&n))) g$lhs*$17682$U0r&n g$rhs*$17683$U0r&n '() '()))) uninitialized))) g$ls/false$17681$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25600$U0r&n '#f '"invalid syntax" g$t$17680$U0r&n)))) g$C$25601$U0r&n g$V$25602$U0r&n))) g$t$17680$U0r&n '(_ #(each (any any)) any . each-any)))) g$C$25603$U0r&n g$t$17676$U0r&n)))) g$C$25604$U0r&n g$V$25605$U0r&n))) g$t$17676$U0r&n '(_ () any . each-any)))) g$C$25606$U0r&n g$stx$17673$U0r&n))))) g$C$25607$U0r&n uninitialized uninitialized)))))) (library-letrec*-identity 'g$let-values-macro$17034$U0r&n))) (g$let*-values-macro$17035$U0r&n g$let*-values-macro$20632$U0r&n ((case-lambda ((g$C$29702$U0r&n) (g$C$29702$U0r&n (case-lambda ((g$C$25668$U0r&n g$stx$17729$U0r&n) ((case-lambda ((g$C$25667$U0r&n g$check$17730$U0r&n) (begin (set! g$check$17730$U0r&n (case-lambda ((g$C$25617$U0r&n g$x*$17754$U0r&n) (null? (case-lambda ((g$V$25618$U0r&n) (not (case-lambda ((g$T$25619$U0r&n) (if g$T$25619$U0r&n (car (case-lambda ((g$V$25620$U0r&n) ((case-lambda ((g$C$25608$U0r&n g$x$17755$U0r&n) ((case-lambda ((g$J$25614$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$V$25615$U0r&n) (not (case-lambda ((g$T$25616$U0r&n) (if g$T$25616$U0r&n (g$syntax-violation$17186$U0r&n g$J$25614$U0r&n '#f '"not an identifier" g$stx$17729$U0r&n g$x$17755$U0r&n) (void g$J$25614$U0r&n)))) g$V$25615$U0r&n))) g$x$17755$U0r&n))) (case-lambda (g$IGNORE$25609$U0r&n (cdr (case-lambda ((g$V$25610$U0r&n) (g$check$17730$U0r&n (case-lambda (g$IGNORE$25611$U0r&n (cdr (case-lambda ((g$V$25612$U0r&n) (g$bound-id-member?$16576$U0r&n (case-lambda ((g$T$25613$U0r&n) (if g$T$25613$U0r&n (g$syntax-violation$17186$U0r&n g$C$25608$U0r&n '#f '"duplicate identifier" g$stx$17729$U0r&n g$x$17755$U0r&n) (void g$C$25608$U0r&n)))) g$x$17755$U0r&n g$V$25612$U0r&n))) g$x*$17754$U0r&n))) g$V$25610$U0r&n))) g$x*$17754$U0r&n)))))) g$C$25617$U0r&n g$V$25620$U0r&n))) g$x*$17754$U0r&n) (void g$C$25617$U0r&n)))) g$V$25618$U0r&n))) g$x*$17754$U0r&n)))) ((case-lambda ((g$C$25665$U0r&n g$t$17731$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25666$U0r&n) ((case-lambda ((g$C$25664$U0r&n g$ls/false$17732$U0r&n) (if g$ls/false$17732$U0r&n (apply g$C$25664$U0r&n (case-lambda ((g$C$25621$U0r&n g$b$17733$U0r&n g$b*$17734$U0r&n) (g$bless$17030$U0r&n (case-lambda ((g$V$25622$U0r&n) (g$cons*$12755$U0r&n g$C$25621$U0r&n g$V$25622$U0r&n '() g$b$17733$U0r&n g$b*$17734$U0r&n))) 'let))) g$ls/false$17732$U0r&n) ((case-lambda ((g$C$25662$U0r&n g$t$17735$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25663$U0r&n) ((case-lambda ((g$C$25661$U0r&n g$ls/false$17736$U0r&n) (if g$ls/false$17736$U0r&n (apply g$C$25661$U0r&n (case-lambda ((g$C$25658$U0r&n g$lhs*$17737$U0r&n g$rhs*$17738$U0r&n g$b$17739$U0r&n g$b*$17740$U0r&n) ((case-lambda ((g$C$25657$U0r&n g$f$17741$U0r&n) ((case-lambda ((g$C$25624$U0r&n g$f$25623$U0r&n) (begin (set! g$f$17741$U0r&n g$f$25623$U0r&n) (g$C$25624$U0r&n g$f$17741$U0r&n)))) g$C$25657$U0r&n (case-lambda ((g$C$25653$U0r&n g$lhs*$17742$U0r&n g$rhs*$17743$U0r&n) (null? (case-lambda ((g$T$25654$U0r&n) (if g$T$25654$U0r&n (cons (case-lambda ((g$V$25655$U0r&n) (cons g$C$25653$U0r&n 'begin g$V$25655$U0r&n))) g$b$17739$U0r&n g$b*$17740$U0r&n) (car (case-lambda ((g$V$25656$U0r&n) ((case-lambda ((g$C$25651$U0r&n g$t$17744$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25652$U0r&n) ((case-lambda ((g$C$25650$U0r&n g$ls/false$17745$U0r&n) (if g$ls/false$17745$U0r&n (apply g$C$25650$U0r&n (case-lambda ((g$C$25625$U0r&n g$x*$17746$U0r&n) (g$check$17730$U0r&n (case-lambda (g$IGNORE$25626$U0r&n (cdr (case-lambda ((g$V$25627$U0r&n) (cdr (case-lambda ((g$V$25628$U0r&n) (g$f$17741$U0r&n (case-lambda ((g$V$25629$U0r&n) (list (case-lambda ((g$V$25630$U0r&n) (car (case-lambda ((g$V$25631$U0r&n) (list (case-lambda ((g$V$25632$U0r&n) (list g$C$25625$U0r&n 'call-with-values g$V$25632$U0r&n g$V$25630$U0r&n))) 'lambda '() g$V$25631$U0r&n))) g$rhs*$17743$U0r&n))) 'lambda g$x*$17746$U0r&n g$V$25629$U0r&n))) g$V$25628$U0r&n g$V$25627$U0r&n))) g$lhs*$17742$U0r&n))) g$rhs*$17743$U0r&n))) g$x*$17746$U0r&n))) g$ls/false$17745$U0r&n) ((case-lambda ((g$C$25648$U0r&n g$t$17747$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25649$U0r&n) ((case-lambda ((g$C$25647$U0r&n g$ls/false$17748$U0r&n) (if g$ls/false$17748$U0r&n (apply g$C$25647$U0r&n (case-lambda ((g$C$25633$U0r&n g$x*$17749$U0r&n g$x$17750$U0r&n) (cons (case-lambda ((g$V$25634$U0r&n) (g$check$17730$U0r&n (case-lambda (g$IGNORE$25635$U0r&n (cdr (case-lambda ((g$V$25636$U0r&n) (cdr (case-lambda ((g$V$25637$U0r&n) (g$f$17741$U0r&n (case-lambda ((g$V$25638$U0r&n) (append (case-lambda ((g$V$25639$U0r&n) (list (case-lambda ((g$V$25640$U0r&n) (car (case-lambda ((g$V$25641$U0r&n) (list (case-lambda ((g$V$25642$U0r&n) (list g$C$25633$U0r&n 'call-with-values g$V$25642$U0r&n g$V$25640$U0r&n))) 'lambda '() g$V$25641$U0r&n))) g$rhs*$17743$U0r&n))) 'lambda g$V$25639$U0r&n g$V$25638$U0r&n))) g$x*$17749$U0r&n g$x$17750$U0r&n))) g$V$25637$U0r&n g$V$25636$U0r&n))) g$lhs*$17742$U0r&n))) g$rhs*$17743$U0r&n))) g$V$25634$U0r&n))) g$x$17750$U0r&n g$x*$17749$U0r&n))) g$ls/false$17748$U0r&n) ((case-lambda ((g$C$25645$U0r&n g$t$17751$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25646$U0r&n) ((case-lambda ((g$C$25644$U0r&n g$ls/false$17752$U0r&n) (if g$ls/false$17752$U0r&n (apply g$C$25644$U0r&n (case-lambda ((g$C$25643$U0r&n g$others$17753$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25643$U0r&n '#f '"malformed bindings" g$stx$17729$U0r&n g$others$17753$U0r&n))) g$ls/false$17752$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25644$U0r&n '#f '"invalid syntax" g$t$17751$U0r&n)))) g$C$25645$U0r&n g$V$25646$U0r&n))) g$t$17751$U0r&n 'any))) g$C$25647$U0r&n g$t$17747$U0r&n)))) g$C$25648$U0r&n g$V$25649$U0r&n))) g$t$17747$U0r&n '#(each+ any () any)))) g$C$25650$U0r&n g$t$17744$U0r&n)))) g$C$25651$U0r&n g$V$25652$U0r&n))) g$t$17744$U0r&n 'each-any))) g$C$25653$U0r&n g$V$25656$U0r&n))) g$lhs*$17742$U0r&n)))) g$lhs*$17742$U0r&n)))))) (case-lambda ((g$V$25659$U0r&n) (g$V$25659$U0r&n (case-lambda ((g$V$25660$U0r&n) (g$bless$17030$U0r&n g$C$25658$U0r&n g$V$25660$U0r&n))) g$lhs*$17737$U0r&n g$rhs*$17738$U0r&n))) uninitialized))) g$ls/false$17736$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25661$U0r&n '#f '"invalid syntax" g$t$17735$U0r&n)))) g$C$25662$U0r&n g$V$25663$U0r&n))) g$t$17735$U0r&n '(_ #(each (any any)) any . each-any)))) g$C$25664$U0r&n g$t$17731$U0r&n)))) g$C$25665$U0r&n g$V$25666$U0r&n))) g$t$17731$U0r&n '(_ () any . each-any)))) g$C$25667$U0r&n g$stx$17729$U0r&n)))) g$C$25668$U0r&n uninitialized)))))) (library-letrec*-identity 'g$let*-values-macro$17035$U0r&n))) (g$trace-lambda-macro$17036$U0r&n g$trace-lambda-macro$20633$U0r&n ((case-lambda ((g$C$29703$U0r&n) (g$C$29703$U0r&n (case-lambda ((g$C$25692$U0r&n g$stx$17756$U0r&n) ((case-lambda ((g$C$25690$U0r&n g$t$17757$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25691$U0r&n) ((case-lambda ((g$C$25689$U0r&n g$ls/false$17758$U0r&n) (if g$ls/false$17758$U0r&n (apply g$C$25689$U0r&n (case-lambda ((g$C$25669$U0r&n g$who$17759$U0r&n g$fmls$17760$U0r&n g$b$17761$U0r&n g$b*$17762$U0r&n) (g$valid-bound-ids?$16574$U0r&n (case-lambda ((g$T$25670$U0r&n) (if g$T$25670$U0r&n (cons (case-lambda ((g$V$25671$U0r&n) (cons (case-lambda ((g$V$25672$U0r&n) (cons (case-lambda ((g$V$25673$U0r&n) (list (case-lambda ((g$V$25674$U0r&n) (list (case-lambda ((g$V$25675$U0r&n) (g$bless$17030$U0r&n g$C$25669$U0r&n g$V$25675$U0r&n))) 'make-traced-procedure g$V$25674$U0r&n g$V$25673$U0r&n))) 'quote g$who$17759$U0r&n))) 'lambda g$V$25672$U0r&n))) g$fmls$17760$U0r&n g$V$25671$U0r&n))) g$b$17761$U0r&n g$b*$17762$U0r&n) (g$invalid-fmls-error$17032$U0r&n g$C$25669$U0r&n g$stx$17756$U0r&n g$fmls$17760$U0r&n)))) g$fmls$17760$U0r&n))) g$ls/false$17758$U0r&n) ((case-lambda ((g$C$25687$U0r&n g$t$17763$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25688$U0r&n) ((case-lambda ((g$C$25686$U0r&n g$ls/false$17764$U0r&n) (if g$ls/false$17764$U0r&n (apply g$C$25686$U0r&n (case-lambda ((g$C$25676$U0r&n g$who$17765$U0r&n g$fmls$17766$U0r&n g$last$17767$U0r&n g$b$17768$U0r&n g$b*$17769$U0r&n) (cons (case-lambda ((g$V$25677$U0r&n) (g$valid-bound-ids?$16574$U0r&n (case-lambda ((g$T$25678$U0r&n) (if g$T$25678$U0r&n (cons (case-lambda ((g$V$25679$U0r&n) (append (case-lambda ((g$V$25680$U0r&n) (cons (case-lambda ((g$V$25681$U0r&n) (cons (case-lambda ((g$V$25682$U0r&n) (list (case-lambda ((g$V$25683$U0r&n) (list (case-lambda ((g$V$25684$U0r&n) (g$bless$17030$U0r&n g$C$25676$U0r&n g$V$25684$U0r&n))) 'make-traced-procedure g$V$25683$U0r&n g$V$25682$U0r&n))) 'quote g$who$17765$U0r&n))) 'lambda g$V$25681$U0r&n))) g$V$25680$U0r&n g$V$25679$U0r&n))) g$fmls$17766$U0r&n g$last$17767$U0r&n))) g$b$17768$U0r&n g$b*$17769$U0r&n) (append (case-lambda ((g$V$25685$U0r&n) (g$invalid-fmls-error$17032$U0r&n g$C$25676$U0r&n g$stx$17756$U0r&n g$V$25685$U0r&n))) g$fmls$17766$U0r&n g$last$17767$U0r&n)))) g$V$25677$U0r&n))) g$last$17767$U0r&n g$fmls$17766$U0r&n))) g$ls/false$17764$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25686$U0r&n '#f '"invalid syntax" g$t$17763$U0r&n)))) g$C$25687$U0r&n g$V$25688$U0r&n))) g$t$17763$U0r&n '(_ any #(each+ any () any) any . each-any)))) g$C$25689$U0r&n g$t$17757$U0r&n)))) g$C$25690$U0r&n g$V$25691$U0r&n))) g$t$17757$U0r&n '(_ any each-any any . each-any)))) g$C$25692$U0r&n g$stx$17756$U0r&n)))))) (library-letrec*-identity 'g$trace-lambda-macro$17036$U0r&n))) (g$trace-define-macro$17037$U0r&n g$trace-define-macro$20634$U0r&n ((case-lambda ((g$C$29704$U0r&n) (g$C$29704$U0r&n (case-lambda ((g$C$25733$U0r&n g$stx$17770$U0r&n) ((case-lambda ((g$C$25731$U0r&n g$t$17771$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25732$U0r&n) ((case-lambda ((g$C$25730$U0r&n g$ls/false$17772$U0r&n) (if g$ls/false$17772$U0r&n (apply g$C$25730$U0r&n (case-lambda ((g$C$25693$U0r&n g$who$17773$U0r&n g$fmls$17774$U0r&n g$b$17775$U0r&n g$b*$17776$U0r&n) (g$valid-bound-ids?$16574$U0r&n (case-lambda ((g$T$25694$U0r&n) (if g$T$25694$U0r&n (cons (case-lambda ((g$V$25695$U0r&n) (cons (case-lambda ((g$V$25696$U0r&n) (cons (case-lambda ((g$V$25697$U0r&n) (list (case-lambda ((g$V$25698$U0r&n) (list (case-lambda ((g$V$25699$U0r&n) (list (case-lambda ((g$V$25700$U0r&n) (g$bless$17030$U0r&n g$C$25693$U0r&n g$V$25700$U0r&n))) 'define g$who$17773$U0r&n g$V$25699$U0r&n))) 'make-traced-procedure g$V$25698$U0r&n g$V$25697$U0r&n))) 'quote g$who$17773$U0r&n))) 'lambda g$V$25696$U0r&n))) g$fmls$17774$U0r&n g$V$25695$U0r&n))) g$b$17775$U0r&n g$b*$17776$U0r&n) (g$invalid-fmls-error$17032$U0r&n g$C$25693$U0r&n g$stx$17770$U0r&n g$fmls$17774$U0r&n)))) g$fmls$17774$U0r&n))) g$ls/false$17772$U0r&n) ((case-lambda ((g$C$25728$U0r&n g$t$17777$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25729$U0r&n) ((case-lambda ((g$C$25727$U0r&n g$ls/false$17778$U0r&n) (if g$ls/false$17778$U0r&n (apply g$C$25727$U0r&n (case-lambda ((g$C$25701$U0r&n g$who$17779$U0r&n g$fmls$17780$U0r&n g$last$17781$U0r&n g$b$17782$U0r&n g$b*$17783$U0r&n) (cons (case-lambda ((g$V$25702$U0r&n) (g$valid-bound-ids?$16574$U0r&n (case-lambda ((g$T$25703$U0r&n) (if g$T$25703$U0r&n (cons (case-lambda ((g$V$25704$U0r&n) (append (case-lambda ((g$V$25705$U0r&n) (cons (case-lambda ((g$V$25706$U0r&n) (cons (case-lambda ((g$V$25707$U0r&n) (list (case-lambda ((g$V$25708$U0r&n) (list (case-lambda ((g$V$25709$U0r&n) (list (case-lambda ((g$V$25710$U0r&n) (g$bless$17030$U0r&n g$C$25701$U0r&n g$V$25710$U0r&n))) 'define g$who$17779$U0r&n g$V$25709$U0r&n))) 'make-traced-procedure g$V$25708$U0r&n g$V$25707$U0r&n))) 'quote g$who$17779$U0r&n))) 'lambda g$V$25706$U0r&n))) g$V$25705$U0r&n g$V$25704$U0r&n))) g$fmls$17780$U0r&n g$last$17781$U0r&n))) g$b$17782$U0r&n g$b*$17783$U0r&n) (append (case-lambda ((g$V$25711$U0r&n) (g$invalid-fmls-error$17032$U0r&n g$C$25701$U0r&n g$stx$17770$U0r&n g$V$25711$U0r&n))) g$fmls$17780$U0r&n g$last$17781$U0r&n)))) g$V$25702$U0r&n))) g$last$17781$U0r&n g$fmls$17780$U0r&n))) g$ls/false$17778$U0r&n) ((case-lambda ((g$C$25725$U0r&n g$t$17784$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25726$U0r&n) ((case-lambda ((g$C$25724$U0r&n g$ls/false$17785$U0r&n) (if g$ls/false$17785$U0r&n (apply g$C$25724$U0r&n (case-lambda ((g$C$25712$U0r&n g$who$17786$U0r&n g$expr$17787$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$T$25713$U0r&n) (if g$T$25713$U0r&n (list (case-lambda ((g$V$25714$U0r&n) (cons (case-lambda ((g$V$25715$U0r&n) (cons (case-lambda ((g$V$25716$U0r&n) (cons (case-lambda ((g$V$25717$U0r&n) (cons (case-lambda ((g$V$25718$U0r&n) (cons (case-lambda ((g$V$25719$U0r&n) (list (case-lambda ((g$V$25720$U0r&n) (list (case-lambda ((g$V$25721$U0r&n) (list (case-lambda ((g$V$25722$U0r&n) (list (case-lambda ((g$V$25723$U0r&n) (g$bless$17030$U0r&n g$C$25712$U0r&n g$V$25723$U0r&n))) 'define g$who$17786$U0r&n g$V$25722$U0r&n))) 'let g$V$25721$U0r&n g$V$25719$U0r&n))) g$V$25720$U0r&n))) 'v g$expr$17787$U0r&n))) 'if g$V$25718$U0r&n))) '(procedure? v) g$V$25717$U0r&n))) g$V$25716$U0r&n '((assertion-violation 'trace-define "not a procedure" v))))) 'make-traced-procedure g$V$25715$U0r&n))) g$V$25714$U0r&n '(v)))) 'quote g$who$17786$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25712$U0r&n '#f '"invalid name" g$stx$17770$U0r&n)))) g$who$17786$U0r&n))) g$ls/false$17785$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25724$U0r&n '#f '"invalid syntax" g$t$17784$U0r&n)))) g$C$25725$U0r&n g$V$25726$U0r&n))) g$t$17784$U0r&n '(_ any any)))) g$C$25727$U0r&n g$t$17777$U0r&n)))) g$C$25728$U0r&n g$V$25729$U0r&n))) g$t$17777$U0r&n '(_ (any . #(each+ any () any)) any . each-any)))) g$C$25730$U0r&n g$t$17771$U0r&n)))) g$C$25731$U0r&n g$V$25732$U0r&n))) g$t$17771$U0r&n '(_ (any . each-any) any . each-any)))) g$C$25733$U0r&n g$stx$17770$U0r&n)))))) (library-letrec*-identity 'g$trace-define-macro$17037$U0r&n))) (g$trace-define-syntax-macro$17038$U0r&n g$trace-define-syntax-macro$20635$U0r&n ((case-lambda ((g$C$29705$U0r&n) (g$C$29705$U0r&n (case-lambda ((g$C$25742$U0r&n g$stx$17788$U0r&n) ((case-lambda ((g$C$25740$U0r&n g$t$17789$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25741$U0r&n) ((case-lambda ((g$C$25739$U0r&n g$ls/false$17790$U0r&n) (if g$ls/false$17790$U0r&n (apply g$C$25739$U0r&n (case-lambda ((g$C$25734$U0r&n g$who$17791$U0r&n g$expr$17792$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$T$25735$U0r&n) (if g$T$25735$U0r&n (list (case-lambda ((g$V$25736$U0r&n) (list (case-lambda ((g$V$25737$U0r&n) (list (case-lambda ((g$V$25738$U0r&n) (g$bless$17030$U0r&n g$C$25734$U0r&n g$V$25738$U0r&n))) 'define-syntax g$who$17791$U0r&n g$V$25737$U0r&n))) 'make-traced-macro g$V$25736$U0r&n g$expr$17792$U0r&n))) 'quote g$who$17791$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25734$U0r&n '#f '"invalid name" g$stx$17788$U0r&n)))) g$who$17791$U0r&n))) g$ls/false$17790$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25739$U0r&n '#f '"invalid syntax" g$t$17789$U0r&n)))) g$C$25740$U0r&n g$V$25741$U0r&n))) g$t$17789$U0r&n '(_ any any)))) g$C$25742$U0r&n g$stx$17788$U0r&n)))))) (library-letrec*-identity 'g$trace-define-syntax-macro$17038$U0r&n))) (g$trace-let/rec-syntax$17039$U0r&n g$trace-let/rec-syntax$20636$U0r&n ((case-lambda ((g$C$29706$U0r&n) (g$C$29706$U0r&n (case-lambda ((g$C$25757$U0r&n g$who$17793$U0r&n) (g$C$25757$U0r&n (case-lambda ((g$C$25756$U0r&n g$stx$17794$U0r&n) ((case-lambda ((g$C$25754$U0r&n g$t$17795$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25755$U0r&n) ((case-lambda ((g$C$25753$U0r&n g$ls/false$17796$U0r&n) (if g$ls/false$17796$U0r&n (apply g$C$25753$U0r&n (case-lambda ((g$C$25750$U0r&n g$lhs*$17797$U0r&n g$rhs*$17798$U0r&n g$b$17799$U0r&n g$b*$17800$U0r&n) (g$valid-bound-ids?$16574$U0r&n (case-lambda ((g$T$25751$U0r&n) (if g$T$25751$U0r&n (g$map$12753$U0r&n (case-lambda ((g$V$25752$U0r&n) ((case-lambda ((g$C$25743$U0r&n g$rhs*$17801$U0r&n) (cons (case-lambda ((g$V$25744$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$25745$U0r&n) (cons (case-lambda ((g$V$25746$U0r&n) (cons (case-lambda ((g$V$25747$U0r&n) (g$bless$17030$U0r&n g$C$25743$U0r&n g$V$25747$U0r&n))) g$who$17793$U0r&n g$V$25746$U0r&n))) g$V$25745$U0r&n g$V$25744$U0r&n))) list g$lhs*$17797$U0r&n g$rhs*$17801$U0r&n))) g$b$17799$U0r&n g$b*$17800$U0r&n))) g$C$25750$U0r&n g$V$25752$U0r&n))) (case-lambda ((g$C$25748$U0r&n g$lhs$17802$U0r&n g$rhs$17803$U0r&n) (list (case-lambda ((g$V$25749$U0r&n) (list g$C$25748$U0r&n 'make-traced-macro g$V$25749$U0r&n g$rhs$17803$U0r&n))) 'quote g$lhs$17802$U0r&n))) g$lhs*$17797$U0r&n g$rhs*$17798$U0r&n) (g$invalid-fmls-error$17032$U0r&n g$C$25750$U0r&n g$stx$17794$U0r&n g$lhs*$17797$U0r&n)))) g$lhs*$17797$U0r&n))) g$ls/false$17796$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25753$U0r&n '#f '"invalid syntax" g$t$17795$U0r&n)))) g$C$25754$U0r&n g$V$25755$U0r&n))) g$t$17795$U0r&n '(_ #(each (any any)) any . each-any)))) g$C$25756$U0r&n g$stx$17794$U0r&n))))))))) (library-letrec*-identity 'g$trace-let/rec-syntax$17039$U0r&n))) (g$trace-let-syntax-macro$17040$U0r&n g$trace-let-syntax-macro$20637$U0r&n ((case-lambda ((g$C$29707$U0r&n) (g$trace-let/rec-syntax$17039$U0r&n g$C$29707$U0r&n 'let-syntax))) (library-letrec*-identity 'g$trace-let-syntax-macro$17040$U0r&n))) (g$trace-letrec-syntax-macro$17041$U0r&n g$trace-letrec-syntax-macro$20638$U0r&n ((case-lambda ((g$C$29708$U0r&n) (g$trace-let/rec-syntax$17039$U0r&n g$C$29708$U0r&n 'letrec-syntax))) (library-letrec*-identity 'g$trace-letrec-syntax-macro$17041$U0r&n))) (g$guard-macro$17042$U0r&n g$guard-macro$20639$U0r&n ((case-lambda ((g$C$29709$U0r&n) (g$C$29709$U0r&n (case-lambda ((g$C$25850$U0r&n g$x$17804$U0r&n) ((case-lambda ((g$C$25849$U0r&n g$gen-clauses$17805$U0r&n) (begin (set! g$gen-clauses$17805$U0r&n (case-lambda ((g$C$25826$U0r&n g$con$17817$U0r&n g$outerk$17818$U0r&n g$clause*$17819$U0r&n) ((case-lambda ((g$C$25825$U0r&n g$f$17820$U0r&n g$f*$17821$U0r&n) (begin (set! g$f$17820$U0r&n (case-lambda ((g$C$25787$U0r&n g$x$17849$U0r&n g$k$17850$U0r&n) ((case-lambda ((g$C$25785$U0r&n g$t$17851$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25786$U0r&n) ((case-lambda ((g$C$25784$U0r&n g$ls/false$17852$U0r&n) (if g$ls/false$17852$U0r&n (apply g$C$25784$U0r&n (case-lambda ((g$C$25763$U0r&n g$e$17853$U0r&n g$p$17854$U0r&n) (gensym (case-lambda ((g$V$25764$U0r&n) ((case-lambda ((g$C$25758$U0r&n g$t$17855$U0r&n) (list (case-lambda ((g$V$25759$U0r&n) (list (case-lambda ((g$V$25760$U0r&n) (list (case-lambda ((g$V$25761$U0r&n) (list (case-lambda ((g$V$25762$U0r&n) (list g$C$25758$U0r&n 'let g$V$25762$U0r&n g$V$25760$U0r&n))) g$V$25761$U0r&n))) g$t$17855$U0r&n g$e$17853$U0r&n))) 'if g$t$17855$U0r&n g$V$25759$U0r&n g$k$17850$U0r&n))) g$p$17854$U0r&n g$t$17855$U0r&n))) g$C$25763$U0r&n g$V$25764$U0r&n)))))) g$ls/false$17852$U0r&n) ((case-lambda ((g$C$25782$U0r&n g$t$17856$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25783$U0r&n) ((case-lambda ((g$C$25781$U0r&n g$ls/false$17857$U0r&n) (if g$ls/false$17857$U0r&n (apply g$C$25781$U0r&n (case-lambda ((g$C$25769$U0r&n g$e$17858$U0r&n) (gensym (case-lambda ((g$V$25770$U0r&n) ((case-lambda ((g$C$25765$U0r&n g$t$17859$U0r&n) (list (case-lambda ((g$V$25766$U0r&n) (list (case-lambda ((g$V$25767$U0r&n) (list (case-lambda ((g$V$25768$U0r&n) (list g$C$25765$U0r&n 'let g$V$25768$U0r&n g$V$25766$U0r&n))) g$V$25767$U0r&n))) g$t$17859$U0r&n g$e$17858$U0r&n))) 'if g$t$17859$U0r&n g$t$17859$U0r&n g$k$17850$U0r&n))) g$C$25769$U0r&n g$V$25770$U0r&n)))))) g$ls/false$17857$U0r&n) ((case-lambda ((g$C$25779$U0r&n g$t$17860$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25780$U0r&n) ((case-lambda ((g$C$25778$U0r&n g$ls/false$17861$U0r&n) (if g$ls/false$17861$U0r&n (apply g$C$25778$U0r&n (case-lambda ((g$C$25771$U0r&n g$e$17862$U0r&n g$v$17863$U0r&n g$v*$17864$U0r&n) (cons (case-lambda ((g$V$25772$U0r&n) (cons (case-lambda ((g$V$25773$U0r&n) (list g$C$25771$U0r&n 'if g$e$17862$U0r&n g$V$25773$U0r&n g$k$17850$U0r&n))) 'begin g$V$25772$U0r&n))) g$v$17863$U0r&n g$v*$17864$U0r&n))) g$ls/false$17861$U0r&n) ((case-lambda ((g$C$25776$U0r&n g$t$17865$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25777$U0r&n) ((case-lambda ((g$C$25775$U0r&n g$ls/false$17866$U0r&n) (if g$ls/false$17866$U0r&n (apply g$C$25775$U0r&n (case-lambda ((g$C$25774$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25774$U0r&n '#f '"invalid guard clause" g$x$17849$U0r&n))) g$ls/false$17866$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25775$U0r&n '#f '"invalid syntax" g$t$17865$U0r&n)))) g$C$25776$U0r&n g$V$25777$U0r&n))) g$t$17865$U0r&n '_))) g$C$25778$U0r&n g$t$17860$U0r&n)))) g$C$25779$U0r&n g$V$25780$U0r&n))) g$t$17860$U0r&n '(any any . each-any)))) g$C$25781$U0r&n g$t$17856$U0r&n)))) g$C$25782$U0r&n g$V$25783$U0r&n))) g$t$17856$U0r&n '(any)))) g$C$25784$U0r&n g$t$17851$U0r&n)))) g$C$25785$U0r&n g$V$25786$U0r&n))) g$t$17851$U0r&n '(any #(scheme-id =>) any)))) g$C$25787$U0r&n g$x$17849$U0r&n)))) (begin (set! g$f*$17821$U0r&n (case-lambda ((g$C$25815$U0r&n g$x*$17828$U0r&n) ((case-lambda ((g$C$25813$U0r&n g$t$17829$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25814$U0r&n) ((case-lambda ((g$C$25812$U0r&n g$ls/false$17830$U0r&n) (if g$ls/false$17830$U0r&n (apply g$C$25812$U0r&n (case-lambda ((g$C$25792$U0r&n) (gensym (case-lambda ((g$V$25793$U0r&n) ((case-lambda ((g$C$25788$U0r&n g$g$17831$U0r&n) (list (case-lambda ((g$V$25789$U0r&n) (list (case-lambda ((g$V$25790$U0r&n) (list (case-lambda ((g$V$25791$U0r&n) (values g$C$25788$U0r&n g$V$25791$U0r&n g$g$17831$U0r&n))) g$g$17831$U0r&n g$V$25790$U0r&n))) 'lambda '() g$V$25789$U0r&n))) 'raise-continuable g$con$17817$U0r&n))) g$C$25792$U0r&n g$V$25793$U0r&n)))))) g$ls/false$17830$U0r&n) ((case-lambda ((g$C$25810$U0r&n g$t$17832$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25811$U0r&n) ((case-lambda ((g$C$25809$U0r&n g$ls/false$17833$U0r&n) (if g$ls/false$17833$U0r&n (apply g$C$25809$U0r&n (case-lambda ((g$C$25794$U0r&n g$e$17834$U0r&n g$e*$17835$U0r&n) (cons (case-lambda ((g$V$25795$U0r&n) (cons (case-lambda ((g$V$25796$U0r&n) (values g$C$25794$U0r&n g$V$25796$U0r&n '#f))) 'begin g$V$25795$U0r&n))) g$e$17834$U0r&n g$e*$17835$U0r&n))) g$ls/false$17833$U0r&n) ((case-lambda ((g$C$25807$U0r&n g$t$17836$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25808$U0r&n) ((case-lambda ((g$C$25806$U0r&n g$ls/false$17837$U0r&n) (if g$ls/false$17837$U0r&n (apply g$C$25806$U0r&n (case-lambda ((g$C$25801$U0r&n g$cls$17838$U0r&n g$cls*$17839$U0r&n) (call-with-values g$C$25801$U0r&n (case-lambda ((g$C$25797$U0r&n) (g$f*$17821$U0r&n g$C$25797$U0r&n g$cls*$17839$U0r&n))) (case-lambda ((g$C$25800$U0r&n g$e$17842$U0r&n g$g$17843$U0r&n) ((case-lambda ((g$C$25798$U0r&n g$g$17844$U0r&n g$e$17845$U0r&n) (g$f$17820$U0r&n (case-lambda ((g$V$25799$U0r&n) (values g$C$25798$U0r&n g$V$25799$U0r&n g$g$17844$U0r&n))) g$cls$17838$U0r&n g$e$17845$U0r&n))) g$C$25800$U0r&n g$g$17843$U0r&n g$e$17842$U0r&n)))))) g$ls/false$17837$U0r&n) ((case-lambda ((g$C$25804$U0r&n g$t$17846$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25805$U0r&n) ((case-lambda ((g$C$25803$U0r&n g$ls/false$17847$U0r&n) (if g$ls/false$17847$U0r&n (apply g$C$25803$U0r&n (case-lambda ((g$C$25802$U0r&n g$others$17848$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25802$U0r&n '#f '"invalid guard clause" g$others$17848$U0r&n))) g$ls/false$17847$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25803$U0r&n '#f '"invalid syntax" g$t$17846$U0r&n)))) g$C$25804$U0r&n g$V$25805$U0r&n))) g$t$17846$U0r&n 'any))) g$C$25806$U0r&n g$t$17836$U0r&n)))) g$C$25807$U0r&n g$V$25808$U0r&n))) g$t$17836$U0r&n '(any . any)))) g$C$25809$U0r&n g$t$17832$U0r&n)))) g$C$25810$U0r&n g$V$25811$U0r&n))) g$t$17832$U0r&n '((#(scheme-id else) any . each-any))))) g$C$25812$U0r&n g$t$17829$U0r&n)))) g$C$25813$U0r&n g$V$25814$U0r&n))) g$t$17829$U0r&n '()))) g$C$25815$U0r&n g$x*$17828$U0r&n)))) (call-with-values g$C$25825$U0r&n (case-lambda ((g$C$25816$U0r&n) (g$f*$17821$U0r&n g$C$25816$U0r&n g$clause*$17819$U0r&n))) (case-lambda ((g$C$25824$U0r&n g$code$17824$U0r&n g$raisek$17825$U0r&n) ((case-lambda ((g$C$25817$U0r&n g$raisek$17826$U0r&n g$code$17827$U0r&n) (if g$raisek$17826$U0r&n (list (case-lambda ((g$V$25818$U0r&n) (list (case-lambda ((g$V$25819$U0r&n) (list (case-lambda ((g$V$25820$U0r&n) (list (case-lambda ((g$V$25821$U0r&n) (list (case-lambda ((g$V$25822$U0r&n) (list g$C$25817$U0r&n g$V$25822$U0r&n))) 'call/cc g$V$25821$U0r&n))) 'lambda g$V$25820$U0r&n g$V$25819$U0r&n))) g$raisek$17826$U0r&n))) g$outerk$17818$U0r&n g$V$25818$U0r&n))) 'lambda '() g$code$17827$U0r&n) (list (case-lambda ((g$V$25823$U0r&n) (list g$C$25817$U0r&n g$outerk$17818$U0r&n g$V$25823$U0r&n))) 'lambda '() g$code$17827$U0r&n)))) g$C$25824$U0r&n g$raisek$17825$U0r&n g$code$17824$U0r&n)))))))) g$C$25826$U0r&n uninitialized uninitialized)))) ((case-lambda ((g$C$25847$U0r&n g$t$17806$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25848$U0r&n) ((case-lambda ((g$C$25844$U0r&n g$ls/false$17807$U0r&n) ((case-lambda ((g$J$25846$U0r&n) (if g$ls/false$17807$U0r&n (apply g$J$25846$U0r&n (case-lambda ((g$C$25827$U0r&n g$con$17808$U0r&n g$clause*$17809$U0r&n g$b$17810$U0r&n g$b*$17811$U0r&n) (g$id?$16569$U0r&n g$C$25827$U0r&n g$con$17808$U0r&n))) g$ls/false$17807$U0r&n) (g$J$25846$U0r&n '#f)))) (case-lambda ((g$T$25845$U0r&n) (if g$T$25845$U0r&n (apply g$C$25844$U0r&n (case-lambda ((g$C$25842$U0r&n g$con$17812$U0r&n g$clause*$17813$U0r&n g$b$17814$U0r&n g$b*$17815$U0r&n) (gensym (case-lambda ((g$V$25843$U0r&n) ((case-lambda ((g$C$25828$U0r&n g$outerk$17816$U0r&n) (cons (case-lambda ((g$V$25829$U0r&n) (cons (case-lambda ((g$V$25830$U0r&n) (cons (case-lambda ((g$V$25831$U0r&n) (cons (case-lambda ((g$V$25832$U0r&n) (g$gen-clauses$17805$U0r&n (case-lambda ((g$V$25833$U0r&n) (list (case-lambda ((g$V$25834$U0r&n) (list (case-lambda ((g$V$25835$U0r&n) (list (case-lambda ((g$V$25836$U0r&n) (list (case-lambda ((g$V$25837$U0r&n) (list (case-lambda ((g$V$25838$U0r&n) (list (case-lambda ((g$V$25839$U0r&n) (list (case-lambda ((g$V$25840$U0r&n) (list (case-lambda ((g$V$25841$U0r&n) (g$bless$17030$U0r&n g$C$25828$U0r&n g$V$25841$U0r&n))) g$V$25840$U0r&n))) 'call/cc g$V$25839$U0r&n))) 'lambda g$V$25838$U0r&n g$V$25837$U0r&n))) g$outerk$17816$U0r&n))) 'lambda '() g$V$25836$U0r&n))) 'with-exception-handler g$V$25835$U0r&n g$V$25832$U0r&n))) 'lambda g$V$25834$U0r&n g$V$25833$U0r&n))) g$con$17812$U0r&n))) g$con$17812$U0r&n g$outerk$17816$U0r&n g$clause*$17813$U0r&n))) 'lambda g$V$25831$U0r&n))) '() g$V$25830$U0r&n))) '#f g$V$25829$U0r&n))) g$b$17814$U0r&n g$b*$17815$U0r&n))) g$C$25842$U0r&n g$V$25843$U0r&n)))))) g$ls/false$17807$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25844$U0r&n '#f '"invalid syntax" g$t$17806$U0r&n))))))) g$C$25847$U0r&n g$V$25848$U0r&n))) g$t$17806$U0r&n '(_ (any . each-any) any . each-any)))) g$C$25849$U0r&n g$x$17804$U0r&n)))) g$C$25850$U0r&n uninitialized)))))) (library-letrec*-identity 'g$guard-macro$17042$U0r&n))) (g$define-enumeration-macro$17043$U0r&n g$define-enumeration-macro$20640$U0r&n ((case-lambda ((g$C$29710$U0r&n) (g$C$29710$U0r&n (case-lambda ((g$C$25915$U0r&n g$stx$17867$U0r&n) ((case-lambda ((g$C$25914$U0r&n g$set?$17868$U0r&n g$remove-dups$17869$U0r&n) (begin (set! g$set?$17868$U0r&n (case-lambda ((g$C$25857$U0r&n g$x$17881$U0r&n) (null? (case-lambda ((g$V$25858$U0r&n) ((case-lambda ((g$C$25851$U0r&n g$t$17882$U0r&n) (if g$t$17882$U0r&n (g$C$25851$U0r&n g$t$17882$U0r&n) (cdr (case-lambda ((g$V$25852$U0r&n) (car (case-lambda ((g$V$25853$U0r&n) (g$memq$12745$U0r&n (case-lambda ((g$V$25854$U0r&n) (not (case-lambda ((g$T$25855$U0r&n) (if g$T$25855$U0r&n (cdr (case-lambda ((g$V$25856$U0r&n) (g$set?$17868$U0r&n g$C$25851$U0r&n g$V$25856$U0r&n))) g$x$17881$U0r&n) (g$C$25851$U0r&n '#f)))) g$V$25854$U0r&n))) g$V$25853$U0r&n g$V$25852$U0r&n))) g$x$17881$U0r&n))) g$x$17881$U0r&n)))) g$C$25857$U0r&n g$V$25858$U0r&n))) g$x$17881$U0r&n)))) (begin (set! g$remove-dups$17869$U0r&n (case-lambda ((g$C$25859$U0r&n g$ls$17880$U0r&n) (null? (case-lambda ((g$T$25860$U0r&n) (if g$T$25860$U0r&n (g$C$25859$U0r&n '()) (cdr (case-lambda ((g$V$25861$U0r&n) (car (case-lambda ((g$V$25862$U0r&n) (g$remq$12760$U0r&n (case-lambda ((g$V$25863$U0r&n) (g$remove-dups$17869$U0r&n (case-lambda ((g$V$25864$U0r&n) (car (case-lambda ((g$V$25865$U0r&n) (cons g$C$25859$U0r&n g$V$25865$U0r&n g$V$25864$U0r&n))) g$ls$17880$U0r&n))) g$V$25863$U0r&n))) g$V$25862$U0r&n g$V$25861$U0r&n))) g$ls$17880$U0r&n))) g$ls$17880$U0r&n)))) g$ls$17880$U0r&n)))) ((case-lambda ((g$C$25912$U0r&n g$t$17870$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25913$U0r&n) ((case-lambda ((g$C$25909$U0r&n g$ls/false$17871$U0r&n) ((case-lambda ((g$J$25911$U0r&n) (if g$ls/false$17871$U0r&n (apply g$J$25911$U0r&n (case-lambda ((g$C$25866$U0r&n g$name$17872$U0r&n g$id*$17873$U0r&n g$maker$17874$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$T$25867$U0r&n) (if g$T$25867$U0r&n (g$id?$16569$U0r&n (case-lambda ((g$T$25868$U0r&n) (if g$T$25868$U0r&n (g$for-all$12751$U0r&n g$C$25866$U0r&n g$id?$16569$U0r&n g$id*$17873$U0r&n) (g$C$25866$U0r&n '#f)))) g$maker$17874$U0r&n) (g$C$25866$U0r&n '#f)))) g$name$17872$U0r&n))) g$ls/false$17871$U0r&n) (g$J$25911$U0r&n '#f)))) (case-lambda ((g$T$25910$U0r&n) (if g$T$25910$U0r&n (apply g$C$25909$U0r&n (case-lambda ((g$C$25905$U0r&n g$name$17875$U0r&n g$id*$17876$U0r&n g$maker$17877$U0r&n) (gensym (case-lambda ((g$V$25906$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$25907$U0r&n) (g$remove-dups$17869$U0r&n (case-lambda ((g$V$25908$U0r&n) ((case-lambda ((g$C$25869$U0r&n g$name*$17878$U0r&n g$mk$17879$U0r&n) (cons (case-lambda ((g$V$25870$U0r&n) (list (case-lambda ((g$V$25871$U0r&n) (list (case-lambda ((g$V$25872$U0r&n) (cons (case-lambda ((g$V$25873$U0r&n) (cons (case-lambda ((g$V$25874$U0r&n) (list (case-lambda ((g$V$25875$U0r&n) (list (case-lambda ((g$V$25876$U0r&n) (list (case-lambda ((g$V$25877$U0r&n) (list (case-lambda ((g$V$25878$U0r&n) (cons (case-lambda ((g$V$25879$U0r&n) (cons (case-lambda ((g$V$25880$U0r&n) (list (case-lambda ((g$V$25881$U0r&n) (list (case-lambda ((g$V$25882$U0r&n) (cons (case-lambda ((g$V$25883$U0r&n) (cons (case-lambda ((g$V$25884$U0r&n) (list (case-lambda ((g$V$25885$U0r&n) (list (case-lambda ((g$V$25886$U0r&n) (list (case-lambda ((g$V$25887$U0r&n) (list (case-lambda ((g$V$25888$U0r&n) (list (case-lambda ((g$V$25889$U0r&n) (list (case-lambda ((g$V$25890$U0r&n) (cons (case-lambda ((g$V$25891$U0r&n) (cons (case-lambda ((g$V$25892$U0r&n) (list (case-lambda ((g$V$25893$U0r&n) (list (case-lambda ((g$V$25894$U0r&n) (list (case-lambda ((g$V$25895$U0r&n) (list (case-lambda ((g$V$25896$U0r&n) (list (case-lambda ((g$V$25897$U0r&n) (list (case-lambda ((g$V$25898$U0r&n) (list (case-lambda ((g$V$25899$U0r&n) (list (case-lambda ((g$V$25900$U0r&n) (list (case-lambda ((g$V$25901$U0r&n) (list (case-lambda ((g$V$25902$U0r&n) (list (case-lambda ((g$V$25903$U0r&n) (list (case-lambda ((g$V$25904$U0r&n) (g$bless$17030$U0r&n g$C$25869$U0r&n g$V$25904$U0r&n))) 'begin g$V$25903$U0r&n g$V$25899$U0r&n g$V$25889$U0r&n))) 'define g$mk$17879$U0r&n g$V$25902$U0r&n))) 'enum-set-constructor g$V$25901$U0r&n))) 'make-enumeration g$V$25900$U0r&n))) 'quote g$name*$17878$U0r&n))) 'define-syntax g$name$17875$U0r&n g$V$25898$U0r&n))) 'lambda '(x) g$V$25897$U0r&n))) 'syntax-case 'x '() g$V$25896$U0r&n))) '(_ n) '(identifier? #'n) g$V$25895$U0r&n))) 'if g$V$25894$U0r&n '#''n g$V$25892$U0r&n))) 'memq '(syntax->datum #'n) g$V$25893$U0r&n))) 'quote g$name*$17878$U0r&n))) 'syntax-violation g$V$25891$U0r&n))) g$V$25890$U0r&n '("not a member of set" x #'n)))) 'quote g$name$17875$U0r&n))) 'define-syntax g$maker$17877$U0r&n g$V$25888$U0r&n))) 'lambda '(x) g$V$25887$U0r&n))) 'syntax-case 'x '() g$V$25886$U0r&n))) '(_ n* ...) g$V$25885$U0r&n))) 'begin g$V$25884$U0r&n g$V$25871$U0r&n))) 'for-each g$V$25883$U0r&n))) g$V$25882$U0r&n '(#'(n* ...))))) 'lambda '(n) g$V$25881$U0r&n g$V$25877$U0r&n))) 'unless '(identifier? n) g$V$25880$U0r&n))) 'syntax-violation g$V$25879$U0r&n))) g$V$25878$U0r&n '("non-identifier argument" x n)))) 'quote g$maker$17877$U0r&n))) 'unless g$V$25876$U0r&n g$V$25874$U0r&n))) 'memq '(syntax->datum n) g$V$25875$U0r&n))) 'quote g$name*$17878$U0r&n))) 'syntax-violation g$V$25873$U0r&n))) g$V$25872$U0r&n '("not a member of set" x n)))) 'quote g$maker$17877$U0r&n))) 'syntax g$V$25870$U0r&n))) g$mk$17879$U0r&n '('(n* ...))))) g$C$25905$U0r&n g$V$25908$U0r&n g$V$25906$U0r&n))) g$V$25907$U0r&n))) g$id*$17876$U0r&n)))))) g$ls/false$17871$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25909$U0r&n '#f '"invalid syntax" g$t$17870$U0r&n))))))) g$C$25912$U0r&n g$V$25913$U0r&n))) g$t$17870$U0r&n '(_ any each-any any)))) g$C$25914$U0r&n g$stx$17867$U0r&n))))) g$C$25915$U0r&n uninitialized uninitialized)))))) (library-letrec*-identity 'g$define-enumeration-macro$17043$U0r&n))) (g$time-macro$17044$U0r&n g$time-macro$20641$U0r&n ((case-lambda ((g$C$29711$U0r&n) (g$C$29711$U0r&n (case-lambda ((g$C$25929$U0r&n g$stx$17883$U0r&n) ((case-lambda ((g$C$25927$U0r&n g$t$17884$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25928$U0r&n) ((case-lambda ((g$C$25926$U0r&n g$ls/false$17885$U0r&n) (if g$ls/false$17885$U0r&n (apply g$C$25926$U0r&n (case-lambda ((g$C$25924$U0r&n g$expr$17886$U0r&n) (call-with-values (case-lambda ((g$V$25925$U0r&n) ((case-lambda ((g$C$25916$U0r&n g$str$17887$U0r&n) (list (case-lambda ((g$V$25917$U0r&n) (list (case-lambda ((g$V$25918$U0r&n) (g$bless$17030$U0r&n g$C$25916$U0r&n g$V$25918$U0r&n))) 'time-it g$str$17887$U0r&n g$V$25917$U0r&n))) 'lambda '() g$expr$17886$U0r&n))) g$C$25924$U0r&n g$V$25925$U0r&n))) (case-lambda ((g$C$25919$U0r&n) (g$open-string-output-port$14979$U0r&n g$C$25919$U0r&n))) (case-lambda ((g$C$25923$U0r&n g$p$17890$U0r&n g$e$17891$U0r&n) ((case-lambda ((g$C$25920$U0r&n g$e$17892$U0r&n g$p$17893$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$25921$U0r&n) (write (case-lambda (g$IGNORE$25922$U0r&n (g$e$17892$U0r&n g$C$25920$U0r&n))) g$V$25921$U0r&n g$p$17893$U0r&n))) g$expr$17886$U0r&n))) g$C$25923$U0r&n g$e$17891$U0r&n g$p$17890$U0r&n)))))) g$ls/false$17885$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25926$U0r&n '#f '"invalid syntax" g$t$17884$U0r&n)))) g$C$25927$U0r&n g$V$25928$U0r&n))) g$t$17884$U0r&n '(_ any)))) g$C$25929$U0r&n g$stx$17883$U0r&n)))))) (library-letrec*-identity 'g$time-macro$17044$U0r&n))) (g$delay-macro$17045$U0r&n g$delay-macro$20642$U0r&n ((case-lambda ((g$C$29712$U0r&n) (g$C$29712$U0r&n (case-lambda ((g$C$25936$U0r&n g$stx$17894$U0r&n) ((case-lambda ((g$C$25934$U0r&n g$t$17895$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25935$U0r&n) ((case-lambda ((g$C$25933$U0r&n g$ls/false$17896$U0r&n) (if g$ls/false$17896$U0r&n (apply g$C$25933$U0r&n (case-lambda ((g$C$25930$U0r&n g$expr$17897$U0r&n) (list (case-lambda ((g$V$25931$U0r&n) (list (case-lambda ((g$V$25932$U0r&n) (g$bless$17030$U0r&n g$C$25930$U0r&n g$V$25932$U0r&n))) 'make-promise g$V$25931$U0r&n))) 'lambda '() g$expr$17897$U0r&n))) g$ls/false$17896$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25933$U0r&n '#f '"invalid syntax" g$t$17895$U0r&n)))) g$C$25934$U0r&n g$V$25935$U0r&n))) g$t$17895$U0r&n '(_ any)))) g$C$25936$U0r&n g$stx$17894$U0r&n)))))) (library-letrec*-identity 'g$delay-macro$17045$U0r&n))) (g$assert-macro$17046$U0r&n g$assert-macro$20643$U0r&n ((case-lambda ((g$C$29713$U0r&n) (g$C$29713$U0r&n (case-lambda ((g$C$25949$U0r&n g$stx$17898$U0r&n) ((case-lambda ((g$C$25947$U0r&n g$t$17899$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25948$U0r&n) ((case-lambda ((g$C$25946$U0r&n g$ls/false$17900$U0r&n) (if g$ls/false$17900$U0r&n (apply g$C$25946$U0r&n (case-lambda ((g$C$25943$U0r&n g$expr$17901$U0r&n) (g$expression-position$17181$U0r&n (case-lambda ((g$V$25944$U0r&n) ((case-lambda ((g$C$25942$U0r&n g$t$17903$U0r&n) (if g$t$17903$U0r&n (g$C$25942$U0r&n g$t$17903$U0r&n) (g$expression-position$17181$U0r&n g$C$25942$U0r&n g$expr$17901$U0r&n)))) (case-lambda ((g$V$25945$U0r&n) ((case-lambda ((g$C$25937$U0r&n g$pos$17902$U0r&n) (list (case-lambda ((g$V$25938$U0r&n) (list (case-lambda ((g$V$25939$U0r&n) (list (case-lambda ((g$V$25940$U0r&n) (list (case-lambda ((g$V$25941$U0r&n) (g$bless$17030$U0r&n g$C$25937$U0r&n g$V$25941$U0r&n))) 'unless g$expr$17901$U0r&n g$V$25940$U0r&n))) 'assertion-error g$V$25939$U0r&n g$V$25938$U0r&n))) 'quote g$expr$17901$U0r&n))) 'quote g$pos$17902$U0r&n))) g$C$25943$U0r&n g$V$25945$U0r&n))) g$V$25944$U0r&n))) g$stx$17898$U0r&n))) g$ls/false$17900$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25946$U0r&n '#f '"invalid syntax" g$t$17899$U0r&n)))) g$C$25947$U0r&n g$V$25948$U0r&n))) g$t$17899$U0r&n '(_ any)))) g$C$25949$U0r&n g$stx$17898$U0r&n)))))) (library-letrec*-identity 'g$assert-macro$17046$U0r&n))) (g$endianness-macro$17047$U0r&n g$endianness-macro$20644$U0r&n ((case-lambda ((g$C$29714$U0r&n) (g$C$29714$U0r&n (case-lambda ((g$C$25958$U0r&n g$stx$17904$U0r&n) ((case-lambda ((g$C$25956$U0r&n g$t$17905$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25957$U0r&n) ((case-lambda ((g$C$25955$U0r&n g$ls/false$17906$U0r&n) (if g$ls/false$17906$U0r&n (apply g$C$25955$U0r&n (case-lambda ((g$C$25953$U0r&n g$e$17907$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$25954$U0r&n) ((case-lambda ((g$C$25950$U0r&n g$t$17908$U0r&n) (eqv? (case-lambda ((g$T$25951$U0r&n) (if g$T$25951$U0r&n (g$bless$17030$U0r&n g$C$25950$U0r&n ''little) (eqv? (case-lambda ((g$T$25952$U0r&n) (if g$T$25952$U0r&n (g$bless$17030$U0r&n g$C$25950$U0r&n ''big) (g$syntax-violation$17186$U0r&n g$C$25950$U0r&n '#f '"endianness must be big or little" g$stx$17904$U0r&n)))) g$t$17908$U0r&n 'big)))) g$t$17908$U0r&n 'little))) g$C$25953$U0r&n g$V$25954$U0r&n))) g$e$17907$U0r&n))) g$ls/false$17906$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25955$U0r&n '#f '"invalid syntax" g$t$17905$U0r&n)))) g$C$25956$U0r&n g$V$25957$U0r&n))) g$t$17905$U0r&n '(_ any)))) g$C$25958$U0r&n g$stx$17904$U0r&n)))))) (library-letrec*-identity 'g$endianness-macro$17047$U0r&n))) (g$identifier-syntax-macro$17048$U0r&n g$identifier-syntax-macro$20645$U0r&n ((case-lambda ((g$C$29715$U0r&n) (g$C$29715$U0r&n (case-lambda ((g$C$25991$U0r&n g$stx$17909$U0r&n) ((case-lambda ((g$C$25989$U0r&n g$t$17910$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25990$U0r&n) ((case-lambda ((g$C$25988$U0r&n g$ls/false$17911$U0r&n) (if g$ls/false$17911$U0r&n (apply g$C$25988$U0r&n (case-lambda ((g$C$25959$U0r&n g$expr$17912$U0r&n) (list (case-lambda ((g$V$25960$U0r&n) (cons (case-lambda ((g$V$25961$U0r&n) (cons (case-lambda ((g$V$25962$U0r&n) (list (case-lambda ((g$V$25963$U0r&n) (list (case-lambda ((g$V$25964$U0r&n) (list (case-lambda ((g$V$25965$U0r&n) (list (case-lambda ((g$V$25966$U0r&n) (list (case-lambda ((g$V$25967$U0r&n) (g$bless$17030$U0r&n g$C$25959$U0r&n g$V$25967$U0r&n))) 'lambda '(x) g$V$25966$U0r&n))) 'syntax-case 'x '() g$V$25965$U0r&n g$V$25963$U0r&n))) 'id '(identifier? #'id) g$V$25964$U0r&n))) 'syntax g$expr$17912$U0r&n))) '(id e* ...) '(identifier? #'id) g$V$25962$U0r&n))) 'cons g$V$25961$U0r&n))) g$V$25960$U0r&n '(#'(e* ...))))) 'syntax g$expr$17912$U0r&n))) g$ls/false$17911$U0r&n) ((case-lambda ((g$C$25986$U0r&n g$t$17913$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25987$U0r&n) ((case-lambda ((g$C$25983$U0r&n g$ls/false$17914$U0r&n) ((case-lambda ((g$J$25985$U0r&n) (if g$ls/false$17914$U0r&n (apply g$J$25985$U0r&n (case-lambda ((g$C$25968$U0r&n g$id1$17915$U0r&n g$expr1$17916$U0r&n g$id2$17917$U0r&n g$expr2$17918$U0r&n g$expr3$17919$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$T$25969$U0r&n) (if g$T$25969$U0r&n (g$id?$16569$U0r&n (case-lambda ((g$T$25970$U0r&n) (if g$T$25970$U0r&n (g$id?$16569$U0r&n g$C$25968$U0r&n g$expr2$17918$U0r&n) (g$C$25968$U0r&n '#f)))) g$id2$17917$U0r&n) (g$C$25968$U0r&n '#f)))) g$id1$17915$U0r&n))) g$ls/false$17914$U0r&n) (g$J$25985$U0r&n '#f)))) (case-lambda ((g$T$25984$U0r&n) (if g$T$25984$U0r&n (apply g$C$25983$U0r&n (case-lambda ((g$C$25971$U0r&n g$id1$17920$U0r&n g$expr1$17921$U0r&n g$id2$17922$U0r&n g$expr2$17923$U0r&n g$expr3$17924$U0r&n) (cons (case-lambda ((g$V$25972$U0r&n) (list (case-lambda ((g$V$25973$U0r&n) (list (case-lambda ((g$V$25974$U0r&n) (list (case-lambda ((g$V$25975$U0r&n) (list (case-lambda ((g$V$25976$U0r&n) (list (case-lambda ((g$V$25977$U0r&n) (list (case-lambda ((g$V$25978$U0r&n) (list (case-lambda ((g$V$25979$U0r&n) (list (case-lambda ((g$V$25980$U0r&n) (list (case-lambda ((g$V$25981$U0r&n) (list (case-lambda ((g$V$25982$U0r&n) (g$bless$17030$U0r&n g$C$25971$U0r&n g$V$25982$U0r&n))) 'cons ''macro! g$V$25981$U0r&n))) 'lambda '(x) g$V$25980$U0r&n))) 'syntax-case 'x '(set!) g$V$25979$U0r&n g$V$25977$U0r&n g$V$25974$U0r&n))) 'id '(identifier? #'id) g$V$25978$U0r&n))) 'syntax g$expr1$17921$U0r&n))) g$V$25976$U0r&n g$V$25975$U0r&n))) 'set! 'id g$expr2$17923$U0r&n))) 'syntax g$expr3$17924$U0r&n))) '(id e* ...) '(identifier? #'id) g$V$25973$U0r&n))) 'syntax g$V$25972$U0r&n))) g$expr1$17921$U0r&n '(e* ...)))) g$ls/false$17914$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25983$U0r&n '#f '"invalid syntax" g$t$17913$U0r&n))))))) g$C$25986$U0r&n g$V$25987$U0r&n))) g$t$17913$U0r&n '(_ (any any) ((#(scheme-id set!) any any) any))))) g$C$25988$U0r&n g$t$17910$U0r&n)))) g$C$25989$U0r&n g$V$25990$U0r&n))) g$t$17910$U0r&n '(_ any)))) g$C$25991$U0r&n g$stx$17909$U0r&n)))))) (library-letrec*-identity 'g$identifier-syntax-macro$17048$U0r&n))) (g$do-macro$17049$U0r&n g$do-macro$20646$U0r&n ((case-lambda ((g$C$29716$U0r&n) (g$C$29716$U0r&n (case-lambda ((g$C$26028$U0r&n g$stx$17925$U0r&n) ((case-lambda ((g$C$26027$U0r&n g$bind$17926$U0r&n) (begin (set! g$bind$17926$U0r&n (case-lambda ((g$C$26004$U0r&n g$x$17938$U0r&n) ((case-lambda ((g$C$26002$U0r&n g$t$17939$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26003$U0r&n) ((case-lambda ((g$C$26001$U0r&n g$ls/false$17940$U0r&n) (if g$ls/false$17940$U0r&n (apply g$C$26001$U0r&n (case-lambda ((g$C$25992$U0r&n g$x$17941$U0r&n g$init$17942$U0r&n) (list g$C$25992$U0r&n g$x$17941$U0r&n g$init$17942$U0r&n g$x$17941$U0r&n))) g$ls/false$17940$U0r&n) ((case-lambda ((g$C$25999$U0r&n g$t$17943$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26000$U0r&n) ((case-lambda ((g$C$25998$U0r&n g$ls/false$17944$U0r&n) (if g$ls/false$17944$U0r&n (apply g$C$25998$U0r&n (case-lambda ((g$C$25993$U0r&n g$x$17945$U0r&n g$init$17946$U0r&n g$step$17947$U0r&n) (list g$C$25993$U0r&n g$x$17945$U0r&n g$init$17946$U0r&n g$step$17947$U0r&n))) g$ls/false$17944$U0r&n) ((case-lambda ((g$C$25996$U0r&n g$t$17948$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$25997$U0r&n) ((case-lambda ((g$C$25995$U0r&n g$ls/false$17949$U0r&n) (if g$ls/false$17949$U0r&n (apply g$C$25995$U0r&n (case-lambda ((g$C$25994$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25994$U0r&n '#f '"invalid binding" g$stx$17925$U0r&n))) g$ls/false$17949$U0r&n) (g$syntax-violation$17186$U0r&n g$C$25995$U0r&n '#f '"invalid syntax" g$t$17948$U0r&n)))) g$C$25996$U0r&n g$V$25997$U0r&n))) g$t$17948$U0r&n '_))) g$C$25998$U0r&n g$t$17943$U0r&n)))) g$C$25999$U0r&n g$V$26000$U0r&n))) g$t$17943$U0r&n '(any any any)))) g$C$26001$U0r&n g$t$17939$U0r&n)))) g$C$26002$U0r&n g$V$26003$U0r&n))) g$t$17939$U0r&n '(any any)))) g$C$26004$U0r&n g$x$17938$U0r&n)))) ((case-lambda ((g$C$26025$U0r&n g$t$17927$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26026$U0r&n) ((case-lambda ((g$C$26024$U0r&n g$ls/false$17928$U0r&n) (if g$ls/false$17928$U0r&n (apply g$C$26024$U0r&n (case-lambda ((g$C$26022$U0r&n g$binding*$17929$U0r&n g$test$17930$U0r&n g$expr*$17931$U0r&n g$command*$17932$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$26023$U0r&n) ((case-lambda ((g$C$26020$U0r&n g$t$17933$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26021$U0r&n) ((case-lambda ((g$C$26019$U0r&n g$ls/false$17934$U0r&n) (if g$ls/false$17934$U0r&n (apply g$C$26019$U0r&n (case-lambda ((g$C$26005$U0r&n g$x*$17935$U0r&n g$init*$17936$U0r&n g$step*$17937$U0r&n) (g$valid-bound-ids?$16574$U0r&n (case-lambda ((g$T$26006$U0r&n) (if g$T$26006$U0r&n (cons (case-lambda ((g$V$26007$U0r&n) (cons (case-lambda ((g$V$26008$U0r&n) (list (case-lambda ((g$V$26009$U0r&n) (append (case-lambda ((g$V$26010$U0r&n) (cons (case-lambda ((g$V$26011$U0r&n) (cons (case-lambda ((g$V$26012$U0r&n) (cons (case-lambda ((g$V$26013$U0r&n) (list (case-lambda ((g$V$26014$U0r&n) (list (case-lambda ((g$V$26015$U0r&n) (list (case-lambda ((g$V$26016$U0r&n) (list (case-lambda ((g$V$26017$U0r&n) (list (case-lambda ((g$V$26018$U0r&n) (g$bless$17030$U0r&n g$C$26005$U0r&n g$V$26018$U0r&n))) 'letrec g$V$26017$U0r&n g$V$26007$U0r&n))) g$V$26016$U0r&n))) 'loop g$V$26015$U0r&n))) 'lambda g$x*$17935$U0r&n g$V$26014$U0r&n))) 'if g$test$17930$U0r&n g$V$26013$U0r&n g$V$26011$U0r&n))) 'begin g$V$26012$U0r&n))) '(if #f #f) g$expr*$17931$U0r&n))) 'begin g$V$26010$U0r&n))) g$command*$17932$U0r&n g$V$26009$U0r&n))) g$V$26008$U0r&n))) 'loop g$step*$17937$U0r&n))) 'loop g$init*$17936$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26005$U0r&n '#f '"invalid bindings" g$stx$17925$U0r&n)))) g$x*$17935$U0r&n))) g$ls/false$17934$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26019$U0r&n '#f '"invalid syntax" g$t$17933$U0r&n)))) g$C$26020$U0r&n g$V$26021$U0r&n))) g$t$17933$U0r&n '#(each (any any any))))) g$C$26022$U0r&n g$V$26023$U0r&n))) g$bind$17926$U0r&n g$binding*$17929$U0r&n))) g$ls/false$17928$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26024$U0r&n '#f '"invalid syntax" g$t$17927$U0r&n)))) g$C$26025$U0r&n g$V$26026$U0r&n))) g$t$17927$U0r&n '(_ each-any (any . each-any) . each-any)))) g$C$26027$U0r&n g$stx$17925$U0r&n)))) g$C$26028$U0r&n uninitialized)))))) (library-letrec*-identity 'g$do-macro$17049$U0r&n))) (g$let*-macro$17050$U0r&n g$let*-macro$20647$U0r&n ((case-lambda ((g$C$29717$U0r&n) (g$C$29717$U0r&n (case-lambda ((g$C$26056$U0r&n g$stx$17950$U0r&n) ((case-lambda ((g$C$26054$U0r&n g$t$17951$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26055$U0r&n) ((case-lambda ((g$C$26051$U0r&n g$ls/false$17952$U0r&n) ((case-lambda ((g$J$26053$U0r&n) (if g$ls/false$17952$U0r&n (apply g$J$26053$U0r&n (case-lambda ((g$C$26029$U0r&n g$lhs*$17953$U0r&n g$rhs*$17954$U0r&n g$b$17955$U0r&n g$b*$17956$U0r&n) (g$for-all$12751$U0r&n g$C$26029$U0r&n g$id?$16569$U0r&n g$lhs*$17953$U0r&n))) g$ls/false$17952$U0r&n) (g$J$26053$U0r&n '#f)))) (case-lambda ((g$T$26052$U0r&n) (if g$T$26052$U0r&n (apply g$C$26051$U0r&n (case-lambda ((g$C$26047$U0r&n g$lhs*$17957$U0r&n g$rhs*$17958$U0r&n g$b$17959$U0r&n g$b*$17960$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$26048$U0r&n) ((case-lambda ((g$C$26046$U0r&n g$f$17961$U0r&n) ((case-lambda ((g$C$26031$U0r&n g$f$26030$U0r&n) (begin (set! g$f$17961$U0r&n g$f$26030$U0r&n) (g$C$26031$U0r&n g$f$17961$U0r&n)))) g$C$26046$U0r&n (case-lambda ((g$C$26032$U0r&n g$x*$17962$U0r&n) (null? (case-lambda ((g$T$26033$U0r&n) (if g$T$26033$U0r&n (cons (case-lambda ((g$V$26034$U0r&n) (cons (case-lambda ((g$V$26035$U0r&n) (cons g$C$26032$U0r&n 'let g$V$26035$U0r&n))) '() g$V$26034$U0r&n))) g$b$17959$U0r&n g$b*$17960$U0r&n) (cdr (case-lambda ((g$V$26036$U0r&n) (null? (case-lambda ((g$T$26037$U0r&n) (if g$T$26037$U0r&n (cons (case-lambda ((g$V$26038$U0r&n) (car (case-lambda ((g$V$26039$U0r&n) (list (case-lambda ((g$V$26040$U0r&n) (cons (case-lambda ((g$V$26041$U0r&n) (cons g$C$26032$U0r&n 'let g$V$26041$U0r&n))) g$V$26040$U0r&n g$V$26038$U0r&n))) g$V$26039$U0r&n))) g$x*$17962$U0r&n))) g$b$17959$U0r&n g$b*$17960$U0r&n) (cdr (case-lambda ((g$V$26042$U0r&n) (g$f$17961$U0r&n (case-lambda ((g$V$26043$U0r&n) (car (case-lambda ((g$V$26044$U0r&n) (list (case-lambda ((g$V$26045$U0r&n) (list g$C$26032$U0r&n 'let g$V$26045$U0r&n g$V$26043$U0r&n))) g$V$26044$U0r&n))) g$x*$17962$U0r&n))) g$V$26042$U0r&n))) g$x*$17962$U0r&n)))) g$V$26036$U0r&n))) g$x*$17962$U0r&n)))) g$x*$17962$U0r&n)))))) (case-lambda ((g$V$26049$U0r&n) (g$V$26049$U0r&n (case-lambda ((g$V$26050$U0r&n) (g$bless$17030$U0r&n g$C$26047$U0r&n g$V$26050$U0r&n))) g$V$26048$U0r&n))) uninitialized))) list g$lhs*$17957$U0r&n g$rhs*$17958$U0r&n))) g$ls/false$17952$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26051$U0r&n '#f '"invalid syntax" g$t$17951$U0r&n))))))) g$C$26054$U0r&n g$V$26055$U0r&n))) g$t$17951$U0r&n '(_ #(each (any any)) any . each-any)))) g$C$26056$U0r&n g$stx$17950$U0r&n)))))) (library-letrec*-identity 'g$let*-macro$17050$U0r&n))) (g$or-macro$17051$U0r&n g$or-macro$20648$U0r&n ((case-lambda ((g$C$29718$U0r&n) (g$C$29718$U0r&n (case-lambda ((g$C$26078$U0r&n g$stx$17963$U0r&n) ((case-lambda ((g$C$26076$U0r&n g$t$17964$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26077$U0r&n) ((case-lambda ((g$C$26075$U0r&n g$ls/false$17965$U0r&n) (if g$ls/false$17965$U0r&n (apply g$C$26075$U0r&n (case-lambda ((g$C$26057$U0r&n) (g$C$26057$U0r&n '#f))) g$ls/false$17965$U0r&n) ((case-lambda ((g$C$26073$U0r&n g$t$17966$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26074$U0r&n) ((case-lambda ((g$C$26072$U0r&n g$ls/false$17967$U0r&n) (if g$ls/false$17967$U0r&n (apply g$C$26072$U0r&n (case-lambda ((g$C$26069$U0r&n g$e$17968$U0r&n g$e*$17969$U0r&n) ((case-lambda ((g$C$26068$U0r&n g$f$17970$U0r&n) ((case-lambda ((g$C$26059$U0r&n g$f$26058$U0r&n) (begin (set! g$f$17970$U0r&n g$f$26058$U0r&n) (g$C$26059$U0r&n g$f$17970$U0r&n)))) g$C$26068$U0r&n (case-lambda ((g$C$26060$U0r&n g$e$17971$U0r&n g$e*$17972$U0r&n) (null? (case-lambda ((g$T$26061$U0r&n) (if g$T$26061$U0r&n (list g$C$26060$U0r&n 'begin '#f g$e$17971$U0r&n) (cdr (case-lambda ((g$V$26062$U0r&n) (car (case-lambda ((g$V$26063$U0r&n) (g$f$17970$U0r&n (case-lambda ((g$V$26064$U0r&n) (list (case-lambda ((g$V$26065$U0r&n) (list (case-lambda ((g$V$26066$U0r&n) (list (case-lambda ((g$V$26067$U0r&n) (list g$C$26060$U0r&n 'let g$V$26067$U0r&n g$V$26065$U0r&n))) g$V$26066$U0r&n))) 't g$e$17971$U0r&n))) 'if 't 't g$V$26064$U0r&n))) g$V$26063$U0r&n g$V$26062$U0r&n))) g$e*$17972$U0r&n))) g$e*$17972$U0r&n)))) g$e*$17972$U0r&n)))))) (case-lambda ((g$V$26070$U0r&n) (g$V$26070$U0r&n (case-lambda ((g$V$26071$U0r&n) (g$bless$17030$U0r&n g$C$26069$U0r&n g$V$26071$U0r&n))) g$e$17968$U0r&n g$e*$17969$U0r&n))) uninitialized))) g$ls/false$17967$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26072$U0r&n '#f '"invalid syntax" g$t$17966$U0r&n)))) g$C$26073$U0r&n g$V$26074$U0r&n))) g$t$17966$U0r&n '(_ any . each-any)))) g$C$26075$U0r&n g$t$17964$U0r&n)))) g$C$26076$U0r&n g$V$26077$U0r&n))) g$t$17964$U0r&n '(_)))) g$C$26078$U0r&n g$stx$17963$U0r&n)))))) (library-letrec*-identity 'g$or-macro$17051$U0r&n))) (g$and-macro$17052$U0r&n g$and-macro$20649$U0r&n ((case-lambda ((g$C$29719$U0r&n) (g$C$29719$U0r&n (case-lambda ((g$C$26099$U0r&n g$stx$17973$U0r&n) ((case-lambda ((g$C$26097$U0r&n g$t$17974$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26098$U0r&n) ((case-lambda ((g$C$26096$U0r&n g$ls/false$17975$U0r&n) (if g$ls/false$17975$U0r&n (apply g$C$26096$U0r&n (case-lambda ((g$C$26079$U0r&n) (g$C$26079$U0r&n '#t))) g$ls/false$17975$U0r&n) ((case-lambda ((g$C$26094$U0r&n g$t$17976$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26095$U0r&n) ((case-lambda ((g$C$26093$U0r&n g$ls/false$17977$U0r&n) (if g$ls/false$17977$U0r&n (apply g$C$26093$U0r&n (case-lambda ((g$C$26090$U0r&n g$e$17978$U0r&n g$e*$17979$U0r&n) ((case-lambda ((g$C$26089$U0r&n g$f$17980$U0r&n) ((case-lambda ((g$C$26081$U0r&n g$f$26080$U0r&n) (begin (set! g$f$17980$U0r&n g$f$26080$U0r&n) (g$C$26081$U0r&n g$f$17980$U0r&n)))) g$C$26089$U0r&n (case-lambda ((g$C$26082$U0r&n g$e$17981$U0r&n g$e*$17982$U0r&n) (null? (case-lambda ((g$T$26083$U0r&n) (if g$T$26083$U0r&n (list g$C$26082$U0r&n 'begin '#f g$e$17981$U0r&n) (cdr (case-lambda ((g$V$26084$U0r&n) (car (case-lambda ((g$V$26085$U0r&n) (g$f$17980$U0r&n (case-lambda ((g$V$26086$U0r&n) (cons (case-lambda ((g$V$26087$U0r&n) (cons (case-lambda ((g$V$26088$U0r&n) (cons g$C$26082$U0r&n 'if g$V$26088$U0r&n))) g$e$17981$U0r&n g$V$26087$U0r&n))) g$V$26086$U0r&n '(#f)))) g$V$26085$U0r&n g$V$26084$U0r&n))) g$e*$17982$U0r&n))) g$e*$17982$U0r&n)))) g$e*$17982$U0r&n)))))) (case-lambda ((g$V$26091$U0r&n) (g$V$26091$U0r&n (case-lambda ((g$V$26092$U0r&n) (g$bless$17030$U0r&n g$C$26090$U0r&n g$V$26092$U0r&n))) g$e$17978$U0r&n g$e*$17979$U0r&n))) uninitialized))) g$ls/false$17977$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26093$U0r&n '#f '"invalid syntax" g$t$17976$U0r&n)))) g$C$26094$U0r&n g$V$26095$U0r&n))) g$t$17976$U0r&n '(_ any . each-any)))) g$C$26096$U0r&n g$t$17974$U0r&n)))) g$C$26097$U0r&n g$V$26098$U0r&n))) g$t$17974$U0r&n '(_)))) g$C$26099$U0r&n g$stx$17973$U0r&n)))))) (library-letrec*-identity 'g$and-macro$17052$U0r&n))) (g$cond-macro$17053$U0r&n g$cond-macro$20650$U0r&n ((case-lambda ((g$C$29720$U0r&n) (g$C$29720$U0r&n (case-lambda ((g$C$26172$U0r&n g$stx$17983$U0r&n) ((case-lambda ((g$C$26170$U0r&n g$t$17984$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26171$U0r&n) ((case-lambda ((g$C$26169$U0r&n g$ls/false$17985$U0r&n) (if g$ls/false$17985$U0r&n (apply g$C$26169$U0r&n (case-lambda ((g$C$26166$U0r&n g$cls$17986$U0r&n g$cls*$17987$U0r&n) ((case-lambda ((g$C$26165$U0r&n g$f$17988$U0r&n) ((case-lambda ((g$C$26101$U0r&n g$f$26100$U0r&n) (begin (set! g$f$17988$U0r&n g$f$26100$U0r&n) (g$C$26101$U0r&n g$f$17988$U0r&n)))) g$C$26165$U0r&n (case-lambda ((g$C$26163$U0r&n g$cls$17989$U0r&n g$cls*$17990$U0r&n) (null? (case-lambda ((g$T$26164$U0r&n) (if g$T$26164$U0r&n ((case-lambda ((g$C$26127$U0r&n g$t$17991$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26128$U0r&n) ((case-lambda ((g$C$26126$U0r&n g$ls/false$17992$U0r&n) (if g$ls/false$17992$U0r&n (apply g$C$26126$U0r&n (case-lambda ((g$C$26102$U0r&n g$e$17993$U0r&n g$e*$17994$U0r&n) (cons (case-lambda ((g$V$26103$U0r&n) (cons g$C$26102$U0r&n 'begin g$V$26103$U0r&n))) g$e$17993$U0r&n g$e*$17994$U0r&n))) g$ls/false$17992$U0r&n) ((case-lambda ((g$C$26124$U0r&n g$t$17995$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26125$U0r&n) ((case-lambda ((g$C$26123$U0r&n g$ls/false$17996$U0r&n) (if g$ls/false$17996$U0r&n (apply g$C$26123$U0r&n (case-lambda ((g$C$26104$U0r&n g$e$17997$U0r&n g$p$17998$U0r&n) (cons (case-lambda ((g$V$26105$U0r&n) (list (case-lambda ((g$V$26106$U0r&n) (list (case-lambda ((g$V$26107$U0r&n) (list (case-lambda ((g$V$26108$U0r&n) (list g$C$26104$U0r&n 'let g$V$26108$U0r&n g$V$26106$U0r&n))) g$V$26107$U0r&n))) 't g$e$17997$U0r&n))) 'if 't g$V$26105$U0r&n))) g$p$17998$U0r&n '(t)))) g$ls/false$17996$U0r&n) ((case-lambda ((g$C$26121$U0r&n g$t$17999$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26122$U0r&n) ((case-lambda ((g$C$26120$U0r&n g$ls/false$18000$U0r&n) (if g$ls/false$18000$U0r&n (apply g$C$26120$U0r&n (case-lambda ((g$C$26109$U0r&n g$e$18001$U0r&n) (cons (case-lambda ((g$V$26110$U0r&n) (cons g$C$26109$U0r&n 'or g$V$26110$U0r&n))) g$e$18001$U0r&n '((if #f #f))))) g$ls/false$18000$U0r&n) ((case-lambda ((g$C$26118$U0r&n g$t$18002$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26119$U0r&n) ((case-lambda ((g$C$26117$U0r&n g$ls/false$18003$U0r&n) (if g$ls/false$18003$U0r&n (apply g$C$26117$U0r&n (case-lambda ((g$C$26111$U0r&n g$e$18004$U0r&n g$e*$18005$U0r&n) (cons (case-lambda ((g$V$26112$U0r&n) (list g$C$26111$U0r&n 'if g$e$18004$U0r&n g$V$26112$U0r&n))) 'begin g$e*$18005$U0r&n))) g$ls/false$18003$U0r&n) ((case-lambda ((g$C$26115$U0r&n g$t$18006$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26116$U0r&n) ((case-lambda ((g$C$26114$U0r&n g$ls/false$18007$U0r&n) (if g$ls/false$18007$U0r&n (apply g$C$26114$U0r&n (case-lambda ((g$C$26113$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26113$U0r&n '#f '"invalid last clause" g$stx$17983$U0r&n))) g$ls/false$18007$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26114$U0r&n '#f '"invalid syntax" g$t$18006$U0r&n)))) g$C$26115$U0r&n g$V$26116$U0r&n))) g$t$18006$U0r&n '_))) g$C$26117$U0r&n g$t$18002$U0r&n)))) g$C$26118$U0r&n g$V$26119$U0r&n))) g$t$18002$U0r&n '(any . each-any)))) g$C$26120$U0r&n g$t$17999$U0r&n)))) g$C$26121$U0r&n g$V$26122$U0r&n))) g$t$17999$U0r&n '(any)))) g$C$26123$U0r&n g$t$17995$U0r&n)))) g$C$26124$U0r&n g$V$26125$U0r&n))) g$t$17995$U0r&n '(any #(scheme-id =>) any)))) g$C$26126$U0r&n g$t$17991$U0r&n)))) g$C$26127$U0r&n g$V$26128$U0r&n))) g$t$17991$U0r&n '(#(scheme-id else) any . each-any)))) g$C$26163$U0r&n g$cls$17989$U0r&n) ((case-lambda ((g$C$26161$U0r&n g$t$18008$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26162$U0r&n) ((case-lambda ((g$C$26160$U0r&n g$ls/false$18009$U0r&n) (if g$ls/false$18009$U0r&n (apply g$C$26160$U0r&n (case-lambda ((g$C$26129$U0r&n g$e$18010$U0r&n g$e*$18011$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26129$U0r&n '#f '"incorrect position of keyword else" g$stx$17983$U0r&n))) g$ls/false$18009$U0r&n) ((case-lambda ((g$C$26158$U0r&n g$t$18012$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26159$U0r&n) ((case-lambda ((g$C$26157$U0r&n g$ls/false$18013$U0r&n) (if g$ls/false$18013$U0r&n (apply g$C$26157$U0r&n (case-lambda ((g$C$26130$U0r&n g$e$18014$U0r&n g$p$18015$U0r&n) (cdr (case-lambda ((g$V$26131$U0r&n) (car (case-lambda ((g$V$26132$U0r&n) (g$f$17988$U0r&n (case-lambda ((g$V$26133$U0r&n) (cons (case-lambda ((g$V$26134$U0r&n) (list (case-lambda ((g$V$26135$U0r&n) (list (case-lambda ((g$V$26136$U0r&n) (list (case-lambda ((g$V$26137$U0r&n) (list g$C$26130$U0r&n 'let g$V$26137$U0r&n g$V$26135$U0r&n))) g$V$26136$U0r&n))) 't g$e$18014$U0r&n))) 'if 't g$V$26134$U0r&n g$V$26133$U0r&n))) g$p$18015$U0r&n '(t)))) g$V$26132$U0r&n g$V$26131$U0r&n))) g$cls*$17990$U0r&n))) g$cls*$17990$U0r&n))) g$ls/false$18013$U0r&n) ((case-lambda ((g$C$26155$U0r&n g$t$18016$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26156$U0r&n) ((case-lambda ((g$C$26154$U0r&n g$ls/false$18017$U0r&n) (if g$ls/false$18017$U0r&n (apply g$C$26154$U0r&n (case-lambda ((g$C$26138$U0r&n g$e$18018$U0r&n) (cdr (case-lambda ((g$V$26139$U0r&n) (car (case-lambda ((g$V$26140$U0r&n) (g$f$17988$U0r&n (case-lambda ((g$V$26141$U0r&n) (list g$C$26138$U0r&n 'or g$e$18018$U0r&n g$V$26141$U0r&n))) g$V$26140$U0r&n g$V$26139$U0r&n))) g$cls*$17990$U0r&n))) g$cls*$17990$U0r&n))) g$ls/false$18017$U0r&n) ((case-lambda ((g$C$26152$U0r&n g$t$18019$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26153$U0r&n) ((case-lambda ((g$C$26151$U0r&n g$ls/false$18020$U0r&n) (if g$ls/false$18020$U0r&n (apply g$C$26151$U0r&n (case-lambda ((g$C$26142$U0r&n g$e$18021$U0r&n g$e*$18022$U0r&n) (cdr (case-lambda ((g$V$26143$U0r&n) (car (case-lambda ((g$V$26144$U0r&n) (g$f$17988$U0r&n (case-lambda ((g$V$26145$U0r&n) (cons (case-lambda ((g$V$26146$U0r&n) (list g$C$26142$U0r&n 'if g$e$18021$U0r&n g$V$26146$U0r&n g$V$26145$U0r&n))) 'begin g$e*$18022$U0r&n))) g$V$26144$U0r&n g$V$26143$U0r&n))) g$cls*$17990$U0r&n))) g$cls*$17990$U0r&n))) g$ls/false$18020$U0r&n) ((case-lambda ((g$C$26149$U0r&n g$t$18023$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26150$U0r&n) ((case-lambda ((g$C$26148$U0r&n g$ls/false$18024$U0r&n) (if g$ls/false$18024$U0r&n (apply g$C$26148$U0r&n (case-lambda ((g$C$26147$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26147$U0r&n '#f '"invalid last clause" g$stx$17983$U0r&n))) g$ls/false$18024$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26148$U0r&n '#f '"invalid syntax" g$t$18023$U0r&n)))) g$C$26149$U0r&n g$V$26150$U0r&n))) g$t$18023$U0r&n '_))) g$C$26151$U0r&n g$t$18019$U0r&n)))) g$C$26152$U0r&n g$V$26153$U0r&n))) g$t$18019$U0r&n '(any . each-any)))) g$C$26154$U0r&n g$t$18016$U0r&n)))) g$C$26155$U0r&n g$V$26156$U0r&n))) g$t$18016$U0r&n '(any)))) g$C$26157$U0r&n g$t$18012$U0r&n)))) g$C$26158$U0r&n g$V$26159$U0r&n))) g$t$18012$U0r&n '(any #(scheme-id =>) any)))) g$C$26160$U0r&n g$t$18008$U0r&n)))) g$C$26161$U0r&n g$V$26162$U0r&n))) g$t$18008$U0r&n '(#(scheme-id else) any . each-any)))) g$C$26163$U0r&n g$cls$17989$U0r&n)))) g$cls*$17990$U0r&n)))))) (case-lambda ((g$V$26167$U0r&n) (g$V$26167$U0r&n (case-lambda ((g$V$26168$U0r&n) (g$bless$17030$U0r&n g$C$26166$U0r&n g$V$26168$U0r&n))) g$cls$17986$U0r&n g$cls*$17987$U0r&n))) uninitialized))) g$ls/false$17985$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26169$U0r&n '#f '"invalid syntax" g$t$17984$U0r&n)))) g$C$26170$U0r&n g$V$26171$U0r&n))) g$t$17984$U0r&n '(_ any . each-any)))) g$C$26172$U0r&n g$stx$17983$U0r&n)))))) (library-letrec*-identity 'g$cond-macro$17053$U0r&n))) (g$do-include$17054$U0r&n g$do-include$20651$U0r&n ((case-lambda ((g$C$29721$U0r&n) (g$C$29721$U0r&n (case-lambda ((g$C$26193$U0r&n g$stx$18025$U0r&n g$id$18026$U0r&n g$filename$18027$U0r&n) (g$stx->datum$16580$U0r&n (case-lambda ((g$V$26194$U0r&n) ((case-lambda ((g$C$26184$U0r&n g$filename$18028$U0r&n) ((case-lambda ((g$J$26188$U0r&n) ((case-lambda ((g$J$26191$U0r&n) (string? (case-lambda ((g$T$26192$U0r&n) (if g$T$26192$U0r&n (g$id?$16569$U0r&n g$J$26191$U0r&n g$id$18026$U0r&n) (g$J$26191$U0r&n '#f)))) g$filename$18028$U0r&n))) (case-lambda ((g$V$26189$U0r&n) (not (case-lambda ((g$T$26190$U0r&n) (if g$T$26190$U0r&n (g$syntax-violation$17186$U0r&n g$J$26188$U0r&n '#f '"invalid syntax" g$stx$18025$U0r&n) (void g$J$26188$U0r&n)))) g$V$26189$U0r&n)))))) (case-lambda (g$IGNORE$26185$U0r&n (g$with-input-from-file$15041$U0r&n (case-lambda ((g$V$26186$U0r&n) (g$bless$17030$U0r&n (case-lambda ((g$V$26187$U0r&n) (cons g$C$26184$U0r&n g$V$26187$U0r&n g$V$26186$U0r&n))) 'begin))) g$filename$18028$U0r&n (case-lambda ((g$C$26182$U0r&n) ((case-lambda ((g$C$26181$U0r&n g$f$18029$U0r&n) ((case-lambda ((g$C$26174$U0r&n g$f$26173$U0r&n) (begin (set! g$f$18029$U0r&n g$f$26173$U0r&n) (g$C$26174$U0r&n g$f$18029$U0r&n)))) g$C$26181$U0r&n (case-lambda ((g$C$26179$U0r&n g$ls$18030$U0r&n) (read-annotated (case-lambda ((g$V$26180$U0r&n) ((case-lambda ((g$C$26175$U0r&n g$x$18031$U0r&n) (eof-object? (case-lambda ((g$T$26176$U0r&n) (if g$T$26176$U0r&n (g$reverse$13504$U0r&n g$C$26175$U0r&n g$ls$18030$U0r&n) (g$datum->stx$16552$U0r&n (case-lambda ((g$V$26177$U0r&n) (cons (case-lambda ((g$V$26178$U0r&n) (g$f$18029$U0r&n g$C$26175$U0r&n g$V$26178$U0r&n))) g$V$26177$U0r&n g$ls$18030$U0r&n))) g$id$18026$U0r&n g$x$18031$U0r&n)))) g$x$18031$U0r&n))) g$C$26179$U0r&n g$V$26180$U0r&n))))))))) (case-lambda ((g$V$26183$U0r&n) (g$V$26183$U0r&n g$C$26182$U0r&n '()))) uninitialized))))))))) g$C$26193$U0r&n g$V$26194$U0r&n))) g$filename$18027$U0r&n)))))) (library-letrec*-identity 'g$do-include$17054$U0r&n))) (g$include-macro$17055$U0r&n g$include-macro$20652$U0r&n ((case-lambda ((g$C$29722$U0r&n) (g$C$29722$U0r&n (case-lambda ((g$C$26199$U0r&n g$e$18032$U0r&n) ((case-lambda ((g$C$26197$U0r&n g$t$18033$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26198$U0r&n) ((case-lambda ((g$C$26196$U0r&n g$ls/false$18034$U0r&n) (if g$ls/false$18034$U0r&n (apply g$C$26196$U0r&n (case-lambda ((g$C$26195$U0r&n g$id$18035$U0r&n g$filename$18036$U0r&n) (g$do-include$17054$U0r&n g$C$26195$U0r&n g$e$18032$U0r&n g$id$18035$U0r&n g$filename$18036$U0r&n))) g$ls/false$18034$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26196$U0r&n '#f '"invalid syntax" g$t$18033$U0r&n)))) g$C$26197$U0r&n g$V$26198$U0r&n))) g$t$18033$U0r&n '(any any)))) g$C$26199$U0r&n g$e$18032$U0r&n)))))) (library-letrec*-identity 'g$include-macro$17055$U0r&n))) (g$include-into-macro$17056$U0r&n g$include-into-macro$20653$U0r&n ((case-lambda ((g$C$29723$U0r&n) (g$C$29723$U0r&n (case-lambda ((g$C$26204$U0r&n g$e$18037$U0r&n) ((case-lambda ((g$C$26202$U0r&n g$t$18038$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26203$U0r&n) ((case-lambda ((g$C$26201$U0r&n g$ls/false$18039$U0r&n) (if g$ls/false$18039$U0r&n (apply g$C$26201$U0r&n (case-lambda ((g$C$26200$U0r&n g$id$18040$U0r&n g$filename$18041$U0r&n) (g$do-include$17054$U0r&n g$C$26200$U0r&n g$e$18037$U0r&n g$id$18040$U0r&n g$filename$18041$U0r&n))) g$ls/false$18039$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26201$U0r&n '#f '"invalid syntax" g$t$18038$U0r&n)))) g$C$26202$U0r&n g$V$26203$U0r&n))) g$t$18038$U0r&n '(_ any any)))) g$C$26204$U0r&n g$e$18037$U0r&n)))))) (library-letrec*-identity 'g$include-into-macro$17056$U0r&n))) (g$syntax-rules-macro$17057$U0r&n g$syntax-rules-macro$20654$U0r&n ((case-lambda ((g$C$29724$U0r&n) (g$C$29724$U0r&n (case-lambda ((g$C$26226$U0r&n g$e$18042$U0r&n) ((case-lambda ((g$C$26224$U0r&n g$t$18043$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26225$U0r&n) ((case-lambda ((g$C$26223$U0r&n g$ls/false$18044$U0r&n) (if g$ls/false$18044$U0r&n (apply g$C$26223$U0r&n (case-lambda ((g$C$26216$U0r&n g$lits$18045$U0r&n g$pat*$18046$U0r&n g$tmp*$18047$U0r&n) (g$verify-literals$17070$U0r&n (case-lambda (g$IGNORE$26217$U0r&n (g$map$12753$U0r&n (case-lambda ((g$V$26218$U0r&n) (cons (case-lambda ((g$V$26219$U0r&n) (cons (case-lambda ((g$V$26220$U0r&n) (cons (case-lambda ((g$V$26221$U0r&n) (list (case-lambda ((g$V$26222$U0r&n) (g$bless$17030$U0r&n g$C$26216$U0r&n g$V$26222$U0r&n))) 'lambda '(x) g$V$26221$U0r&n))) 'syntax-case g$V$26220$U0r&n))) 'x g$V$26219$U0r&n))) g$lits$18045$U0r&n g$V$26218$U0r&n))) (case-lambda ((g$C$26215$U0r&n g$pat$18048$U0r&n g$tmp$18049$U0r&n) ((case-lambda ((g$C$26213$U0r&n g$t$18050$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26214$U0r&n) ((case-lambda ((g$C$26212$U0r&n g$ls/false$18051$U0r&n) (if g$ls/false$18051$U0r&n (apply g$C$26212$U0r&n (case-lambda ((g$C$26205$U0r&n g$rest$18052$U0r&n) (list (case-lambda ((g$V$26206$U0r&n) (cons (case-lambda ((g$V$26207$U0r&n) (list g$C$26205$U0r&n g$V$26207$U0r&n g$V$26206$U0r&n))) 'g g$rest$18052$U0r&n))) 'syntax g$tmp$18049$U0r&n))) g$ls/false$18051$U0r&n) ((case-lambda ((g$C$26210$U0r&n g$t$18053$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26211$U0r&n) ((case-lambda ((g$C$26209$U0r&n g$ls/false$18054$U0r&n) (if g$ls/false$18054$U0r&n (apply g$C$26209$U0r&n (case-lambda ((g$C$26208$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26208$U0r&n '#f '"invalid syntax-rules pattern" g$e$18042$U0r&n g$pat$18048$U0r&n))) g$ls/false$18054$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26209$U0r&n '#f '"invalid syntax" g$t$18053$U0r&n)))) g$C$26210$U0r&n g$V$26211$U0r&n))) g$t$18053$U0r&n '_))) g$C$26212$U0r&n g$t$18050$U0r&n)))) g$C$26213$U0r&n g$V$26214$U0r&n))) g$t$18050$U0r&n '(_ . any)))) g$C$26215$U0r&n g$pat$18048$U0r&n))) g$pat*$18046$U0r&n g$tmp*$18047$U0r&n))) g$lits$18045$U0r&n g$e$18042$U0r&n))) g$ls/false$18044$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26223$U0r&n '#f '"invalid syntax" g$t$18043$U0r&n)))) g$C$26224$U0r&n g$V$26225$U0r&n))) g$t$18043$U0r&n '(_ each-any . #(each (any any)))))) g$C$26226$U0r&n g$e$18042$U0r&n)))))) (library-letrec*-identity 'g$syntax-rules-macro$17057$U0r&n))) (g$quasiquote-macro$17058$U0r&n g$quasiquote-macro$20655$U0r&n ((case-lambda ((g$C$29725$U0r&n) ((case-lambda ((g$C$26455$U0r&n) ((case-lambda ((g$C$26454$U0r&n g$datum$18055$U0r&n g$quasicons*$18090$U0r&n g$quasicons$18091$U0r&n g$quasiappend$18092$U0r&n g$quasivector$18093$U0r&n g$vquasi$18094$U0r&n g$quasi$18095$U0r&n) (begin (set! g$datum$18055$U0r&n (case-lambda ((g$C$26227$U0r&n g$x$18205$U0r&n) (g$mkstx$16557$U0r&n (case-lambda ((g$V$26228$U0r&n) (g$scheme-stx$17010$U0r&n (case-lambda ((g$V$26229$U0r&n) (list g$C$26227$U0r&n g$V$26229$U0r&n g$V$26228$U0r&n))) 'quote))) g$x$18205$U0r&n '() '() '())))) (begin (set! g$quasicons*$18090$U0r&n (case-lambda ((g$C$26238$U0r&n g$x$18201$U0r&n g$y$18202$U0r&n) ((case-lambda ((g$C$26237$U0r&n g$f$18203$U0r&n) ((case-lambda ((g$C$26231$U0r&n g$f$26230$U0r&n) (begin (set! g$f$18203$U0r&n g$f$26230$U0r&n) (g$C$26231$U0r&n g$f$18203$U0r&n)))) g$C$26237$U0r&n (case-lambda ((g$C$26232$U0r&n g$x$18204$U0r&n) (null? (case-lambda ((g$T$26233$U0r&n) (if g$T$26233$U0r&n (g$C$26232$U0r&n g$y$18202$U0r&n) (cdr (case-lambda ((g$V$26234$U0r&n) (g$f$18203$U0r&n (case-lambda ((g$V$26235$U0r&n) (car (case-lambda ((g$V$26236$U0r&n) (g$quasicons$18091$U0r&n g$C$26232$U0r&n g$V$26236$U0r&n g$V$26235$U0r&n))) g$x$18204$U0r&n))) g$V$26234$U0r&n))) g$x$18204$U0r&n)))) g$x$18204$U0r&n)))))) (case-lambda ((g$V$26239$U0r&n) (g$V$26239$U0r&n g$C$26238$U0r&n g$x$18201$U0r&n))) uninitialized)))) (begin (set! g$quasicons$18091$U0r&n (case-lambda ((g$C$26274$U0r&n g$x$18182$U0r&n g$y$18183$U0r&n) ((case-lambda ((g$C$26272$U0r&n g$t$18184$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26273$U0r&n) ((case-lambda ((g$C$26271$U0r&n g$ls/false$18185$U0r&n) (if g$ls/false$18185$U0r&n (apply g$C$26271$U0r&n (case-lambda ((g$C$26260$U0r&n g$dy$18186$U0r&n) ((case-lambda ((g$C$26258$U0r&n g$t$18187$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26259$U0r&n) ((case-lambda ((g$C$26257$U0r&n g$ls/false$18188$U0r&n) (if g$ls/false$18188$U0r&n (apply g$C$26257$U0r&n (case-lambda ((g$C$26240$U0r&n g$dx$18189$U0r&n) (cons (case-lambda ((g$V$26241$U0r&n) (g$scheme-stx$17010$U0r&n (case-lambda ((g$V$26242$U0r&n) (list g$C$26240$U0r&n g$V$26242$U0r&n g$V$26241$U0r&n))) 'quote))) g$dx$18189$U0r&n g$dy$18186$U0r&n))) g$ls/false$18188$U0r&n) ((case-lambda ((g$C$26255$U0r&n g$t$18190$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26256$U0r&n) ((case-lambda ((g$C$26254$U0r&n g$ls/false$18191$U0r&n) (if g$ls/false$18191$U0r&n (apply g$C$26254$U0r&n (case-lambda ((g$C$26253$U0r&n) ((case-lambda ((g$C$26251$U0r&n g$t$18192$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26252$U0r&n) ((case-lambda ((g$C$26250$U0r&n g$ls/false$18193$U0r&n) (if g$ls/false$18193$U0r&n (apply g$C$26250$U0r&n (case-lambda ((g$C$26243$U0r&n) (g$scheme-stx$17010$U0r&n (case-lambda ((g$V$26244$U0r&n) (list g$C$26243$U0r&n g$V$26244$U0r&n g$x$18182$U0r&n))) 'list))) g$ls/false$18193$U0r&n) ((case-lambda ((g$C$26248$U0r&n g$t$18194$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26249$U0r&n) ((case-lambda ((g$C$26247$U0r&n g$ls/false$18195$U0r&n) (if g$ls/false$18195$U0r&n (apply g$C$26247$U0r&n (case-lambda ((g$C$26245$U0r&n) (g$scheme-stx$17010$U0r&n (case-lambda ((g$V$26246$U0r&n) (list g$C$26245$U0r&n g$V$26246$U0r&n g$x$18182$U0r&n g$y$18183$U0r&n))) 'cons))) g$ls/false$18195$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26247$U0r&n '#f '"invalid syntax" g$t$18194$U0r&n)))) g$C$26248$U0r&n g$V$26249$U0r&n))) g$t$18194$U0r&n '_))) g$C$26250$U0r&n g$t$18192$U0r&n)))) g$C$26251$U0r&n g$V$26252$U0r&n))) g$t$18192$U0r&n '()))) g$C$26253$U0r&n g$dy$18186$U0r&n))) g$ls/false$18191$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26254$U0r&n '#f '"invalid syntax" g$t$18190$U0r&n)))) g$C$26255$U0r&n g$V$26256$U0r&n))) g$t$18190$U0r&n '_))) g$C$26257$U0r&n g$t$18187$U0r&n)))) g$C$26258$U0r&n g$V$26259$U0r&n))) g$t$18187$U0r&n '(#(scheme-id quote) any)))) g$C$26260$U0r&n g$x$18182$U0r&n))) g$ls/false$18185$U0r&n) ((case-lambda ((g$C$26269$U0r&n g$t$18196$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26270$U0r&n) ((case-lambda ((g$C$26268$U0r&n g$ls/false$18197$U0r&n) (if g$ls/false$18197$U0r&n (apply g$C$26268$U0r&n (case-lambda ((g$C$26261$U0r&n g$stuff$18198$U0r&n) (g$scheme-stx$17010$U0r&n (case-lambda ((g$V$26262$U0r&n) (g$cons*$12755$U0r&n g$C$26261$U0r&n g$V$26262$U0r&n g$x$18182$U0r&n g$stuff$18198$U0r&n))) 'list))) g$ls/false$18197$U0r&n) ((case-lambda ((g$C$26266$U0r&n g$t$18199$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26267$U0r&n) ((case-lambda ((g$C$26265$U0r&n g$ls/false$18200$U0r&n) (if g$ls/false$18200$U0r&n (apply g$C$26265$U0r&n (case-lambda ((g$C$26263$U0r&n) (g$scheme-stx$17010$U0r&n (case-lambda ((g$V$26264$U0r&n) (list g$C$26263$U0r&n g$V$26264$U0r&n g$x$18182$U0r&n g$y$18183$U0r&n))) 'cons))) g$ls/false$18200$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26265$U0r&n '#f '"invalid syntax" g$t$18199$U0r&n)))) g$C$26266$U0r&n g$V$26267$U0r&n))) g$t$18199$U0r&n '_))) g$C$26268$U0r&n g$t$18196$U0r&n)))) g$C$26269$U0r&n g$V$26270$U0r&n))) g$t$18196$U0r&n '(#(scheme-id list) . each-any)))) g$C$26271$U0r&n g$t$18184$U0r&n)))) g$C$26272$U0r&n g$V$26273$U0r&n))) g$t$18184$U0r&n '(#(scheme-id quote) any)))) g$C$26274$U0r&n g$y$18183$U0r&n)))) (begin (set! g$quasiappend$18092$U0r&n (case-lambda ((g$C$26307$U0r&n g$x$18169$U0r&n g$y$18170$U0r&n) ((case-lambda ((g$C$26306$U0r&n g$f$18172$U0r&n) ((case-lambda ((g$C$26282$U0r&n g$f$26281$U0r&n) (begin (set! g$f$18172$U0r&n g$f$26281$U0r&n) (g$C$26282$U0r&n g$f$18172$U0r&n)))) g$C$26306$U0r&n (case-lambda ((g$C$26303$U0r&n g$x$18173$U0r&n) (null? (case-lambda ((g$T$26304$U0r&n) (if g$T$26304$U0r&n ((case-lambda ((g$C$26289$U0r&n g$t$18174$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26290$U0r&n) ((case-lambda ((g$C$26288$U0r&n g$ls/false$18175$U0r&n) (if g$ls/false$18175$U0r&n (apply g$C$26288$U0r&n (case-lambda ((g$C$26283$U0r&n) (g$C$26283$U0r&n '()))) g$ls/false$18175$U0r&n) ((case-lambda ((g$C$26286$U0r&n g$t$18176$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26287$U0r&n) ((case-lambda ((g$C$26285$U0r&n g$ls/false$18177$U0r&n) (if g$ls/false$18177$U0r&n (apply g$C$26285$U0r&n (case-lambda ((g$C$26284$U0r&n) (list g$C$26284$U0r&n g$y$18170$U0r&n))) g$ls/false$18177$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26285$U0r&n '#f '"invalid syntax" g$t$18176$U0r&n)))) g$C$26286$U0r&n g$V$26287$U0r&n))) g$t$18176$U0r&n '_))) g$C$26288$U0r&n g$t$18174$U0r&n)))) g$C$26289$U0r&n g$V$26290$U0r&n))) g$t$18174$U0r&n '(#(scheme-id quote) ())))) g$C$26303$U0r&n g$y$18170$U0r&n) (car (case-lambda ((g$V$26305$U0r&n) ((case-lambda ((g$C$26301$U0r&n g$t$18178$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26302$U0r&n) ((case-lambda ((g$C$26300$U0r&n g$ls/false$18179$U0r&n) (if g$ls/false$18179$U0r&n (apply g$C$26300$U0r&n (case-lambda ((g$C$26291$U0r&n) (cdr (case-lambda ((g$V$26292$U0r&n) (g$f$18172$U0r&n g$C$26291$U0r&n g$V$26292$U0r&n))) g$x$18173$U0r&n))) g$ls/false$18179$U0r&n) ((case-lambda ((g$C$26298$U0r&n g$t$18180$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26299$U0r&n) ((case-lambda ((g$C$26297$U0r&n g$ls/false$18181$U0r&n) (if g$ls/false$18181$U0r&n (apply g$C$26297$U0r&n (case-lambda ((g$C$26293$U0r&n) (cdr (case-lambda ((g$V$26294$U0r&n) (g$f$18172$U0r&n (case-lambda ((g$V$26295$U0r&n) (car (case-lambda ((g$V$26296$U0r&n) (cons g$C$26293$U0r&n g$V$26296$U0r&n g$V$26295$U0r&n))) g$x$18173$U0r&n))) g$V$26294$U0r&n))) g$x$18173$U0r&n))) g$ls/false$18181$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26297$U0r&n '#f '"invalid syntax" g$t$18180$U0r&n)))) g$C$26298$U0r&n g$V$26299$U0r&n))) g$t$18180$U0r&n '_))) g$C$26300$U0r&n g$t$18178$U0r&n)))) g$C$26301$U0r&n g$V$26302$U0r&n))) g$t$18178$U0r&n '(#(scheme-id quote) ())))) g$C$26303$U0r&n g$V$26305$U0r&n))) g$x$18173$U0r&n)))) g$x$18173$U0r&n)))))) (case-lambda ((g$V$26308$U0r&n) (g$V$26308$U0r&n (case-lambda ((g$V$26309$U0r&n) ((case-lambda ((g$C$26275$U0r&n g$ls$18171$U0r&n) (null? (case-lambda ((g$T$26276$U0r&n) (if g$T$26276$U0r&n (g$scheme-stx$17010$U0r&n (case-lambda ((g$V$26277$U0r&n) (list g$C$26275$U0r&n g$V$26277$U0r&n '()))) 'quote) (cdr (case-lambda ((g$V$26278$U0r&n) (null? (case-lambda ((g$T$26279$U0r&n) (if g$T$26279$U0r&n (car g$C$26275$U0r&n g$ls$18171$U0r&n) (g$scheme-stx$17010$U0r&n (case-lambda ((g$V$26280$U0r&n) (g$cons*$12755$U0r&n g$C$26275$U0r&n g$V$26280$U0r&n g$ls$18171$U0r&n))) 'append)))) g$V$26278$U0r&n))) g$ls$18171$U0r&n)))) g$ls$18171$U0r&n))) g$C$26307$U0r&n g$V$26309$U0r&n))) g$x$18169$U0r&n))) uninitialized)))) (begin (set! g$quasivector$18093$U0r&n (case-lambda ((g$C$26350$U0r&n g$x$18144$U0r&n) ((case-lambda ((g$C$26349$U0r&n g$pat-x$18145$U0r&n) ((case-lambda ((g$C$26347$U0r&n g$t$18146$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26348$U0r&n) ((case-lambda ((g$C$26346$U0r&n g$ls/false$18147$U0r&n) (if g$ls/false$18147$U0r&n (apply g$C$26346$U0r&n (case-lambda ((g$C$26310$U0r&n g$x*$18148$U0r&n) (g$list->vector$13491$U0r&n (case-lambda ((g$V$26311$U0r&n) (g$scheme-stx$17010$U0r&n (case-lambda ((g$V$26312$U0r&n) (list g$C$26310$U0r&n g$V$26312$U0r&n g$V$26311$U0r&n))) 'quote))) g$x*$18148$U0r&n))) g$ls/false$18147$U0r&n) ((case-lambda ((g$C$26344$U0r&n g$t$18149$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26345$U0r&n) ((case-lambda ((g$C$26343$U0r&n g$ls/false$18150$U0r&n) (if g$ls/false$18150$U0r&n (apply g$C$26343$U0r&n (case-lambda ((g$C$26341$U0r&n) ((case-lambda ((g$C$26338$U0r&n g$f$18151$U0r&n) ((case-lambda ((g$C$26314$U0r&n g$f$26313$U0r&n) (begin (set! g$f$18151$U0r&n g$f$26313$U0r&n) (g$C$26314$U0r&n g$f$18151$U0r&n)))) g$C$26338$U0r&n (case-lambda ((g$C$26337$U0r&n g$x$18152$U0r&n g$k$18153$U0r&n) ((case-lambda ((g$C$26335$U0r&n g$t$18154$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26336$U0r&n) ((case-lambda ((g$C$26334$U0r&n g$ls/false$18155$U0r&n) (if g$ls/false$18155$U0r&n (apply g$C$26334$U0r&n (case-lambda ((g$C$26317$U0r&n g$x*$18156$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$26318$U0r&n) (g$k$18153$U0r&n g$C$26317$U0r&n g$V$26318$U0r&n))) (case-lambda ((g$C$26315$U0r&n g$x$18157$U0r&n) (g$scheme-stx$17010$U0r&n (case-lambda ((g$V$26316$U0r&n) (list g$C$26315$U0r&n g$V$26316$U0r&n g$x$18157$U0r&n))) 'quote))) g$x*$18156$U0r&n))) g$ls/false$18155$U0r&n) ((case-lambda ((g$C$26332$U0r&n g$t$18158$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26333$U0r&n) ((case-lambda ((g$C$26331$U0r&n g$ls/false$18159$U0r&n) (if g$ls/false$18159$U0r&n (apply g$C$26331$U0r&n (case-lambda ((g$C$26319$U0r&n g$x*$18160$U0r&n) (g$k$18153$U0r&n g$C$26319$U0r&n g$x*$18160$U0r&n))) g$ls/false$18159$U0r&n) ((case-lambda ((g$C$26329$U0r&n g$t$18161$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26330$U0r&n) ((case-lambda ((g$C$26328$U0r&n g$ls/false$18162$U0r&n) (if g$ls/false$18162$U0r&n (apply g$C$26328$U0r&n (case-lambda ((g$C$26322$U0r&n g$x$18163$U0r&n g$y$18164$U0r&n) (g$f$18151$U0r&n g$C$26322$U0r&n g$y$18164$U0r&n (case-lambda ((g$C$26320$U0r&n g$ls$18165$U0r&n) (cons (case-lambda ((g$V$26321$U0r&n) (g$k$18153$U0r&n g$C$26320$U0r&n g$V$26321$U0r&n))) g$x$18163$U0r&n g$ls$18165$U0r&n)))))) g$ls/false$18162$U0r&n) ((case-lambda ((g$C$26326$U0r&n g$t$18166$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26327$U0r&n) ((case-lambda ((g$C$26325$U0r&n g$ls/false$18167$U0r&n) (if g$ls/false$18167$U0r&n (apply g$C$26325$U0r&n (case-lambda ((g$C$26323$U0r&n) (g$scheme-stx$17010$U0r&n (case-lambda ((g$V$26324$U0r&n) (list g$C$26323$U0r&n g$V$26324$U0r&n g$pat-x$18145$U0r&n))) 'list->vector))) g$ls/false$18167$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26325$U0r&n '#f '"invalid syntax" g$t$18166$U0r&n)))) g$C$26326$U0r&n g$V$26327$U0r&n))) g$t$18166$U0r&n '_))) g$C$26328$U0r&n g$t$18161$U0r&n)))) g$C$26329$U0r&n g$V$26330$U0r&n))) g$t$18161$U0r&n '(#(scheme-id cons) any any)))) g$C$26331$U0r&n g$t$18158$U0r&n)))) g$C$26332$U0r&n g$V$26333$U0r&n))) g$t$18158$U0r&n '(#(scheme-id list) . each-any)))) g$C$26334$U0r&n g$t$18154$U0r&n)))) g$C$26335$U0r&n g$V$26336$U0r&n))) g$t$18154$U0r&n '(#(scheme-id quote) each-any)))) g$C$26337$U0r&n g$x$18152$U0r&n)))))) (case-lambda ((g$V$26342$U0r&n) (g$V$26342$U0r&n g$C$26341$U0r&n g$x$18144$U0r&n (case-lambda ((g$C$26339$U0r&n g$ls$18168$U0r&n) (g$scheme-stx$17010$U0r&n (case-lambda ((g$V$26340$U0r&n) (g$cons*$12755$U0r&n g$C$26339$U0r&n g$V$26340$U0r&n g$ls$18168$U0r&n))) 'vector)))))) uninitialized))) g$ls/false$18150$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26343$U0r&n '#f '"invalid syntax" g$t$18149$U0r&n)))) g$C$26344$U0r&n g$V$26345$U0r&n))) g$t$18149$U0r&n '_))) g$C$26346$U0r&n g$t$18146$U0r&n)))) g$C$26347$U0r&n g$V$26348$U0r&n))) g$t$18146$U0r&n '(#(scheme-id quote) each-any)))) g$C$26349$U0r&n g$pat-x$18145$U0r&n))) g$C$26350$U0r&n g$x$18144$U0r&n)))) (begin (set! g$vquasi$18094$U0r&n (case-lambda ((g$C$26388$U0r&n g$p$18127$U0r&n g$lev$18128$U0r&n) ((case-lambda ((g$C$26386$U0r&n g$t$18129$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26387$U0r&n) ((case-lambda ((g$C$26385$U0r&n g$ls/false$18130$U0r&n) (if g$ls/false$18130$U0r&n (apply g$C$26385$U0r&n (case-lambda ((g$C$26379$U0r&n g$p$18131$U0r&n g$q$18132$U0r&n) ((case-lambda ((g$C$26377$U0r&n g$t$18133$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26378$U0r&n) ((case-lambda ((g$C$26376$U0r&n g$ls/false$18134$U0r&n) (if g$ls/false$18134$U0r&n (apply g$C$26376$U0r&n (case-lambda ((g$C$26351$U0r&n g$p$18135$U0r&n) (= (case-lambda ((g$T$26352$U0r&n) (if g$T$26352$U0r&n (g$vquasi$18094$U0r&n (case-lambda ((g$V$26353$U0r&n) (g$quasicons*$18090$U0r&n g$C$26351$U0r&n g$p$18135$U0r&n g$V$26353$U0r&n))) g$q$18132$U0r&n g$lev$18128$U0r&n) (g$vquasi$18094$U0r&n (case-lambda ((g$V$26354$U0r&n) (- (case-lambda ((g$V$26355$U0r&n) (g$quasi$18095$U0r&n (case-lambda ((g$V$26356$U0r&n) (g$datum$18055$U0r&n (case-lambda ((g$V$26357$U0r&n) (g$quasicons$18091$U0r&n (case-lambda ((g$V$26358$U0r&n) (g$quasicons$18091$U0r&n g$C$26351$U0r&n g$V$26358$U0r&n g$V$26354$U0r&n))) g$V$26357$U0r&n g$V$26356$U0r&n))) 'unquote))) g$p$18135$U0r&n g$V$26355$U0r&n))) g$lev$18128$U0r&n '1))) g$q$18132$U0r&n g$lev$18128$U0r&n)))) g$lev$18128$U0r&n '0))) g$ls/false$18134$U0r&n) ((case-lambda ((g$C$26374$U0r&n g$t$18136$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26375$U0r&n) ((case-lambda ((g$C$26373$U0r&n g$ls/false$18137$U0r&n) (if g$ls/false$18137$U0r&n (apply g$C$26373$U0r&n (case-lambda ((g$C$26359$U0r&n g$p$18138$U0r&n) (= (case-lambda ((g$T$26360$U0r&n) (if g$T$26360$U0r&n (g$vquasi$18094$U0r&n (case-lambda ((g$V$26361$U0r&n) (g$quasiappend$18092$U0r&n g$C$26359$U0r&n g$p$18138$U0r&n g$V$26361$U0r&n))) g$q$18132$U0r&n g$lev$18128$U0r&n) (g$vquasi$18094$U0r&n (case-lambda ((g$V$26362$U0r&n) (- (case-lambda ((g$V$26363$U0r&n) (g$quasi$18095$U0r&n (case-lambda ((g$V$26364$U0r&n) (g$datum$18055$U0r&n (case-lambda ((g$V$26365$U0r&n) (g$quasicons$18091$U0r&n (case-lambda ((g$V$26366$U0r&n) (g$quasicons$18091$U0r&n g$C$26359$U0r&n g$V$26366$U0r&n g$V$26362$U0r&n))) g$V$26365$U0r&n g$V$26364$U0r&n))) 'unquote-splicing))) g$p$18138$U0r&n g$V$26363$U0r&n))) g$lev$18128$U0r&n '1))) g$q$18132$U0r&n g$lev$18128$U0r&n)))) g$lev$18128$U0r&n '0))) g$ls/false$18137$U0r&n) ((case-lambda ((g$C$26371$U0r&n g$t$18139$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26372$U0r&n) ((case-lambda ((g$C$26370$U0r&n g$ls/false$18140$U0r&n) (if g$ls/false$18140$U0r&n (apply g$C$26370$U0r&n (case-lambda ((g$C$26367$U0r&n g$p$18141$U0r&n) (g$vquasi$18094$U0r&n (case-lambda ((g$V$26368$U0r&n) (g$quasi$18095$U0r&n (case-lambda ((g$V$26369$U0r&n) (g$quasicons$18091$U0r&n g$C$26367$U0r&n g$V$26369$U0r&n g$V$26368$U0r&n))) g$p$18141$U0r&n g$lev$18128$U0r&n))) g$q$18132$U0r&n g$lev$18128$U0r&n))) g$ls/false$18140$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26370$U0r&n '#f '"invalid syntax" g$t$18139$U0r&n)))) g$C$26371$U0r&n g$V$26372$U0r&n))) g$t$18139$U0r&n 'any))) g$C$26373$U0r&n g$t$18136$U0r&n)))) g$C$26374$U0r&n g$V$26375$U0r&n))) g$t$18136$U0r&n '(#(scheme-id unquote-splicing) . each-any)))) g$C$26376$U0r&n g$t$18133$U0r&n)))) g$C$26377$U0r&n g$V$26378$U0r&n))) g$t$18133$U0r&n '(#(scheme-id unquote) . each-any)))) g$C$26379$U0r&n g$p$18131$U0r&n))) g$ls/false$18130$U0r&n) ((case-lambda ((g$C$26383$U0r&n g$t$18142$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26384$U0r&n) ((case-lambda ((g$C$26382$U0r&n g$ls/false$18143$U0r&n) (if g$ls/false$18143$U0r&n (apply g$C$26382$U0r&n (case-lambda ((g$C$26380$U0r&n) (g$scheme-stx$17010$U0r&n (case-lambda ((g$V$26381$U0r&n) (list g$C$26380$U0r&n g$V$26381$U0r&n '()))) 'quote))) g$ls/false$18143$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26382$U0r&n '#f '"invalid syntax" g$t$18142$U0r&n)))) g$C$26383$U0r&n g$V$26384$U0r&n))) g$t$18142$U0r&n '()))) g$C$26385$U0r&n g$t$18129$U0r&n)))) g$C$26386$U0r&n g$V$26387$U0r&n))) g$t$18129$U0r&n '(any . any)))) g$C$26388$U0r&n g$p$18127$U0r&n)))) (begin (set! g$quasi$18095$U0r&n (case-lambda ((g$C$26448$U0r&n g$p$18100$U0r&n g$lev$18101$U0r&n) ((case-lambda ((g$C$26446$U0r&n g$t$18102$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26447$U0r&n) ((case-lambda ((g$C$26445$U0r&n g$ls/false$18103$U0r&n) (if g$ls/false$18103$U0r&n (apply g$C$26445$U0r&n (case-lambda ((g$C$26389$U0r&n g$p$18104$U0r&n) (= (case-lambda ((g$T$26390$U0r&n) (if g$T$26390$U0r&n (g$C$26389$U0r&n g$p$18104$U0r&n) (- (case-lambda ((g$V$26391$U0r&n) (list (case-lambda ((g$V$26392$U0r&n) (g$quasi$18095$U0r&n (case-lambda ((g$V$26393$U0r&n) (g$datum$18055$U0r&n (case-lambda ((g$V$26394$U0r&n) (g$quasicons$18091$U0r&n g$C$26389$U0r&n g$V$26394$U0r&n g$V$26393$U0r&n))) 'unquote))) g$V$26392$U0r&n g$V$26391$U0r&n))) g$p$18104$U0r&n))) g$lev$18101$U0r&n '1)))) g$lev$18101$U0r&n '0))) g$ls/false$18103$U0r&n) ((case-lambda ((g$C$26443$U0r&n g$t$18105$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26444$U0r&n) ((case-lambda ((g$C$26442$U0r&n g$ls/false$18106$U0r&n) (if g$ls/false$18106$U0r&n (apply g$C$26442$U0r&n (case-lambda ((g$C$26395$U0r&n g$p$18107$U0r&n g$q$18108$U0r&n) (= (case-lambda ((g$T$26396$U0r&n) (if g$T$26396$U0r&n (g$quasi$18095$U0r&n (case-lambda ((g$V$26397$U0r&n) (g$quasicons*$18090$U0r&n g$C$26395$U0r&n g$p$18107$U0r&n g$V$26397$U0r&n))) g$q$18108$U0r&n g$lev$18101$U0r&n) (g$quasi$18095$U0r&n (case-lambda ((g$V$26398$U0r&n) (- (case-lambda ((g$V$26399$U0r&n) (g$quasi$18095$U0r&n (case-lambda ((g$V$26400$U0r&n) (g$datum$18055$U0r&n (case-lambda ((g$V$26401$U0r&n) (g$quasicons$18091$U0r&n (case-lambda ((g$V$26402$U0r&n) (g$quasicons$18091$U0r&n g$C$26395$U0r&n g$V$26402$U0r&n g$V$26398$U0r&n))) g$V$26401$U0r&n g$V$26400$U0r&n))) 'unquote))) g$p$18107$U0r&n g$V$26399$U0r&n))) g$lev$18101$U0r&n '1))) g$q$18108$U0r&n g$lev$18101$U0r&n)))) g$lev$18101$U0r&n '0))) g$ls/false$18106$U0r&n) ((case-lambda ((g$C$26440$U0r&n g$t$18109$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26441$U0r&n) ((case-lambda ((g$C$26439$U0r&n g$ls/false$18110$U0r&n) (if g$ls/false$18110$U0r&n (apply g$C$26439$U0r&n (case-lambda ((g$C$26403$U0r&n g$p$18111$U0r&n g$q$18112$U0r&n) (= (case-lambda ((g$T$26404$U0r&n) (if g$T$26404$U0r&n (g$quasi$18095$U0r&n (case-lambda ((g$V$26405$U0r&n) (g$quasiappend$18092$U0r&n g$C$26403$U0r&n g$p$18111$U0r&n g$V$26405$U0r&n))) g$q$18112$U0r&n g$lev$18101$U0r&n) (g$quasi$18095$U0r&n (case-lambda ((g$V$26406$U0r&n) (- (case-lambda ((g$V$26407$U0r&n) (g$quasi$18095$U0r&n (case-lambda ((g$V$26408$U0r&n) (g$datum$18055$U0r&n (case-lambda ((g$V$26409$U0r&n) (g$quasicons$18091$U0r&n (case-lambda ((g$V$26410$U0r&n) (g$quasicons$18091$U0r&n g$C$26403$U0r&n g$V$26410$U0r&n g$V$26406$U0r&n))) g$V$26409$U0r&n g$V$26408$U0r&n))) 'unquote-splicing))) g$p$18111$U0r&n g$V$26407$U0r&n))) g$lev$18101$U0r&n '1))) g$q$18112$U0r&n g$lev$18101$U0r&n)))) g$lev$18101$U0r&n '0))) g$ls/false$18110$U0r&n) ((case-lambda ((g$C$26437$U0r&n g$t$18113$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26438$U0r&n) ((case-lambda ((g$C$26436$U0r&n g$ls/false$18114$U0r&n) (if g$ls/false$18114$U0r&n (apply g$C$26436$U0r&n (case-lambda ((g$C$26411$U0r&n g$p$18115$U0r&n) (+ (case-lambda ((g$V$26412$U0r&n) (list (case-lambda ((g$V$26413$U0r&n) (g$quasi$18095$U0r&n (case-lambda ((g$V$26414$U0r&n) (g$datum$18055$U0r&n (case-lambda ((g$V$26415$U0r&n) (g$quasicons$18091$U0r&n g$C$26411$U0r&n g$V$26415$U0r&n g$V$26414$U0r&n))) 'quasiquote))) g$V$26413$U0r&n g$V$26412$U0r&n))) g$p$18115$U0r&n))) g$lev$18101$U0r&n '1))) g$ls/false$18114$U0r&n) ((case-lambda ((g$C$26434$U0r&n g$t$18116$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26435$U0r&n) ((case-lambda ((g$C$26433$U0r&n g$ls/false$18117$U0r&n) (if g$ls/false$18117$U0r&n (apply g$C$26433$U0r&n (case-lambda ((g$C$26416$U0r&n g$p$18118$U0r&n g$q$18119$U0r&n) (g$quasi$18095$U0r&n (case-lambda ((g$V$26417$U0r&n) (g$quasi$18095$U0r&n (case-lambda ((g$V$26418$U0r&n) (g$quasicons$18091$U0r&n g$C$26416$U0r&n g$V$26418$U0r&n g$V$26417$U0r&n))) g$p$18118$U0r&n g$lev$18101$U0r&n))) g$q$18119$U0r&n g$lev$18101$U0r&n))) g$ls/false$18117$U0r&n) ((case-lambda ((g$C$26431$U0r&n g$t$18120$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26432$U0r&n) ((case-lambda ((g$C$26428$U0r&n g$ls/false$18121$U0r&n) ((case-lambda ((g$J$26430$U0r&n) (if g$ls/false$18121$U0r&n (apply g$J$26430$U0r&n (case-lambda ((g$C$26419$U0r&n g$x$18122$U0r&n) (g$stx?$16541$U0r&n (case-lambda ((g$V$26420$U0r&n) (not g$C$26419$U0r&n g$V$26420$U0r&n))) g$x$18122$U0r&n))) g$ls/false$18121$U0r&n) (g$J$26430$U0r&n '#f)))) (case-lambda ((g$T$26429$U0r&n) (if g$T$26429$U0r&n (apply g$C$26428$U0r&n (case-lambda ((g$C$26421$U0r&n g$x$18123$U0r&n) (g$vquasi$18094$U0r&n (case-lambda ((g$V$26422$U0r&n) (g$quasivector$18093$U0r&n g$C$26421$U0r&n g$V$26422$U0r&n))) g$x$18123$U0r&n g$lev$18101$U0r&n))) g$ls/false$18121$U0r&n) ((case-lambda ((g$C$26426$U0r&n g$t$18124$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26427$U0r&n) ((case-lambda ((g$C$26425$U0r&n g$ls/false$18125$U0r&n) (if g$ls/false$18125$U0r&n (apply g$C$26425$U0r&n (case-lambda ((g$C$26423$U0r&n g$p$18126$U0r&n) (g$scheme-stx$17010$U0r&n (case-lambda ((g$V$26424$U0r&n) (list g$C$26423$U0r&n g$V$26424$U0r&n g$p$18126$U0r&n))) 'quote))) g$ls/false$18125$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26425$U0r&n '#f '"invalid syntax" g$t$18124$U0r&n)))) g$C$26426$U0r&n g$V$26427$U0r&n))) g$t$18124$U0r&n 'any))) g$C$26428$U0r&n g$t$18120$U0r&n))))))) g$C$26431$U0r&n g$V$26432$U0r&n))) g$t$18120$U0r&n '#(vector each-any)))) g$C$26433$U0r&n g$t$18116$U0r&n)))) g$C$26434$U0r&n g$V$26435$U0r&n))) g$t$18116$U0r&n '(any . any)))) g$C$26436$U0r&n g$t$18113$U0r&n)))) g$C$26437$U0r&n g$V$26438$U0r&n))) g$t$18113$U0r&n '(#(scheme-id quasiquote) any)))) g$C$26439$U0r&n g$t$18109$U0r&n)))) g$C$26440$U0r&n g$V$26441$U0r&n))) g$t$18109$U0r&n '((#(scheme-id unquote-splicing) . each-any) . any)))) g$C$26442$U0r&n g$t$18105$U0r&n)))) g$C$26443$U0r&n g$V$26444$U0r&n))) g$t$18105$U0r&n '((#(scheme-id unquote) . each-any) . any)))) g$C$26445$U0r&n g$t$18102$U0r&n)))) g$C$26446$U0r&n g$V$26447$U0r&n))) g$t$18102$U0r&n '(#(scheme-id unquote) any)))) g$C$26448$U0r&n g$p$18100$U0r&n)))) (g$C$26454$U0r&n (case-lambda ((g$C$26453$U0r&n g$x$18096$U0r&n) ((case-lambda ((g$C$26451$U0r&n g$t$18097$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26452$U0r&n) ((case-lambda ((g$C$26450$U0r&n g$ls/false$18098$U0r&n) (if g$ls/false$18098$U0r&n (apply g$C$26450$U0r&n (case-lambda ((g$C$26449$U0r&n g$e$18099$U0r&n) (g$quasi$18095$U0r&n g$C$26449$U0r&n g$e$18099$U0r&n '0))) g$ls/false$18098$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26450$U0r&n '#f '"invalid syntax" g$t$18097$U0r&n)))) g$C$26451$U0r&n g$V$26452$U0r&n))) g$t$18097$U0r&n '(_ any)))) g$C$26453$U0r&n g$x$18096$U0r&n))))))))))))) g$C$26455$U0r&n uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized))) g$C$29725$U0r&n))) (library-letrec*-identity 'g$quasiquote-macro$17058$U0r&n))) (g$quasisyntax-macro$17059$U0r&n g$quasisyntax-macro$20656$U0r&n ((case-lambda ((g$C$29726$U0r&n) ((case-lambda ((g$C$26580$U0r&n) ((case-lambda ((g$C$26579$U0r&n g$quasi$18206$U0r&n) (begin (set! g$quasi$18206$U0r&n (case-lambda ((g$C$26566$U0r&n g$p$18220$U0r&n g$lev$18221$U0r&n) ((case-lambda ((g$C$26564$U0r&n g$t$18222$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26565$U0r&n) ((case-lambda ((g$C$26563$U0r&n g$ls/false$18223$U0r&n) (if g$ls/false$18223$U0r&n (apply g$C$26563$U0r&n (case-lambda ((g$C$26464$U0r&n g$p$18224$U0r&n) (= (case-lambda ((g$T$26465$U0r&n) (if g$T$26465$U0r&n (gensym (case-lambda ((g$V$26466$U0r&n) ((case-lambda ((g$C$26456$U0r&n g$g$18225$U0r&n) (list (case-lambda ((g$V$26457$U0r&n) (list (case-lambda ((g$V$26458$U0r&n) (values g$C$26456$U0r&n g$V$26458$U0r&n g$V$26457$U0r&n g$g$18225$U0r&n))) g$g$18225$U0r&n))) g$p$18224$U0r&n))) g$C$26464$U0r&n g$V$26466$U0r&n)))) (call-with-values g$C$26464$U0r&n (case-lambda ((g$C$26459$U0r&n) (- (case-lambda ((g$V$26460$U0r&n) (g$quasi$18206$U0r&n g$C$26459$U0r&n g$p$18224$U0r&n g$V$26460$U0r&n))) g$lev$18221$U0r&n '1))) (case-lambda ((g$C$26463$U0r&n g$lhs*$18229$U0r&n g$rhs*$18230$U0r&n g$p$18231$U0r&n) ((case-lambda ((g$C$26461$U0r&n g$p$18232$U0r&n g$rhs*$18233$U0r&n g$lhs*$18234$U0r&n) (list (case-lambda ((g$V$26462$U0r&n) (values g$C$26461$U0r&n g$lhs*$18234$U0r&n g$rhs*$18233$U0r&n g$V$26462$U0r&n))) 'unsyntax g$p$18232$U0r&n))) g$C$26463$U0r&n g$p$18231$U0r&n g$rhs*$18230$U0r&n g$lhs*$18229$U0r&n))))))) g$lev$18221$U0r&n '0))) g$ls/false$18223$U0r&n) ((case-lambda ((g$C$26561$U0r&n g$t$18235$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26562$U0r&n) ((case-lambda ((g$C$26558$U0r&n g$ls/false$18236$U0r&n) ((case-lambda ((g$J$26560$U0r&n) (if g$ls/false$18236$U0r&n (apply g$J$26560$U0r&n (case-lambda ((g$C$26467$U0r&n) (= g$C$26467$U0r&n g$lev$18221$U0r&n '0))) g$ls/false$18236$U0r&n) (g$J$26560$U0r&n '#f)))) (case-lambda ((g$T$26559$U0r&n) (if g$T$26559$U0r&n (apply g$C$26558$U0r&n (case-lambda ((g$C$26468$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26468$U0r&n '#f '"incorrect use of unsyntax" g$p$18220$U0r&n))) g$ls/false$18236$U0r&n) ((case-lambda ((g$C$26556$U0r&n g$t$18237$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26557$U0r&n) ((case-lambda ((g$C$26555$U0r&n g$ls/false$18238$U0r&n) (if g$ls/false$18238$U0r&n (apply g$C$26555$U0r&n (case-lambda ((g$C$26487$U0r&n g$p*$18239$U0r&n g$q$18240$U0r&n) (call-with-values g$C$26487$U0r&n (case-lambda ((g$C$26469$U0r&n) (g$quasi$18206$U0r&n g$C$26469$U0r&n g$q$18240$U0r&n g$lev$18221$U0r&n))) (case-lambda ((g$C$26486$U0r&n g$lhs*$18244$U0r&n g$rhs*$18245$U0r&n g$q$18246$U0r&n) ((case-lambda ((g$C$26483$U0r&n g$q$18247$U0r&n g$rhs*$18248$U0r&n g$lhs*$18249$U0r&n) (= (case-lambda ((g$T$26484$U0r&n) (if g$T$26484$U0r&n (g$map$12753$U0r&n (case-lambda ((g$V$26485$U0r&n) ((case-lambda ((g$C$26470$U0r&n g$g*$18250$U0r&n) (append (case-lambda ((g$V$26471$U0r&n) (append (case-lambda ((g$V$26472$U0r&n) (append (case-lambda ((g$V$26473$U0r&n) (values g$C$26470$U0r&n g$V$26473$U0r&n g$V$26472$U0r&n g$V$26471$U0r&n))) g$g*$18250$U0r&n g$lhs*$18249$U0r&n))) g$p*$18239$U0r&n g$rhs*$18248$U0r&n))) g$g*$18250$U0r&n g$q$18247$U0r&n))) g$C$26483$U0r&n g$V$26485$U0r&n))) (case-lambda ((g$C$26474$U0r&n g$x$18251$U0r&n) (gensym g$C$26474$U0r&n))) g$p*$18239$U0r&n) (call-with-values g$C$26483$U0r&n (case-lambda ((g$C$26475$U0r&n) (- (case-lambda ((g$V$26476$U0r&n) (g$quasi$18206$U0r&n g$C$26475$U0r&n g$p*$18239$U0r&n g$V$26476$U0r&n))) g$lev$18221$U0r&n '1))) (case-lambda ((g$C$26482$U0r&n g$lhs2*$18255$U0r&n g$rhs2*$18256$U0r&n g$p*$18257$U0r&n) ((case-lambda ((g$C$26477$U0r&n g$p*$18258$U0r&n g$rhs2*$18259$U0r&n g$lhs2*$18260$U0r&n) (cons (case-lambda ((g$V$26478$U0r&n) (cons (case-lambda ((g$V$26479$U0r&n) (append (case-lambda ((g$V$26480$U0r&n) (append (case-lambda ((g$V$26481$U0r&n) (values g$C$26477$U0r&n g$V$26481$U0r&n g$V$26480$U0r&n g$V$26479$U0r&n))) g$lhs2*$18260$U0r&n g$lhs*$18249$U0r&n))) g$rhs2*$18259$U0r&n g$rhs*$18248$U0r&n))) g$V$26478$U0r&n g$q$18247$U0r&n))) 'unsyntax g$p*$18258$U0r&n))) g$C$26482$U0r&n g$p*$18257$U0r&n g$rhs2*$18256$U0r&n g$lhs2*$18255$U0r&n))))))) g$lev$18221$U0r&n '0))) g$C$26486$U0r&n g$q$18246$U0r&n g$rhs*$18245$U0r&n g$lhs*$18244$U0r&n)))))) g$ls/false$18238$U0r&n) ((case-lambda ((g$C$26553$U0r&n g$t$18261$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26554$U0r&n) ((case-lambda ((g$C$26552$U0r&n g$ls/false$18262$U0r&n) (if g$ls/false$18262$U0r&n (apply g$C$26552$U0r&n (case-lambda ((g$C$26511$U0r&n g$p*$18263$U0r&n g$q$18264$U0r&n) (call-with-values g$C$26511$U0r&n (case-lambda ((g$C$26488$U0r&n) (g$quasi$18206$U0r&n g$C$26488$U0r&n g$q$18264$U0r&n g$lev$18221$U0r&n))) (case-lambda ((g$C$26510$U0r&n g$lhs*$18268$U0r&n g$rhs*$18269$U0r&n g$q$18270$U0r&n) ((case-lambda ((g$C$26507$U0r&n g$q$18271$U0r&n g$rhs*$18272$U0r&n g$lhs*$18273$U0r&n) (= (case-lambda ((g$T$26508$U0r&n) (if g$T$26508$U0r&n (g$map$12753$U0r&n (case-lambda ((g$V$26509$U0r&n) ((case-lambda ((g$C$26491$U0r&n g$g*$18274$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$26492$U0r&n) (apply (case-lambda ((g$V$26493$U0r&n) (append (case-lambda ((g$V$26494$U0r&n) (append (case-lambda ((g$V$26495$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$26496$U0r&n) (append (case-lambda ((g$V$26497$U0r&n) (values g$C$26491$U0r&n g$V$26497$U0r&n g$V$26495$U0r&n g$V$26494$U0r&n))) g$V$26496$U0r&n g$lhs*$18273$U0r&n))) (case-lambda ((g$C$26489$U0r&n g$g$18275$U0r&n) (cons g$C$26489$U0r&n g$g$18275$U0r&n '(...)))) g$g*$18274$U0r&n))) g$p*$18263$U0r&n g$rhs*$18272$U0r&n))) g$V$26493$U0r&n g$q$18271$U0r&n))) append g$V$26492$U0r&n))) (case-lambda ((g$C$26490$U0r&n g$g$18276$U0r&n) (cons g$C$26490$U0r&n g$g$18276$U0r&n '(...)))) g$g*$18274$U0r&n))) g$C$26507$U0r&n g$V$26509$U0r&n))) (case-lambda ((g$C$26498$U0r&n g$x$18277$U0r&n) (gensym g$C$26498$U0r&n))) g$p*$18263$U0r&n) (call-with-values g$C$26507$U0r&n (case-lambda ((g$C$26499$U0r&n) (- (case-lambda ((g$V$26500$U0r&n) (g$quasi$18206$U0r&n g$C$26499$U0r&n g$p*$18263$U0r&n g$V$26500$U0r&n))) g$lev$18221$U0r&n '1))) (case-lambda ((g$C$26506$U0r&n g$lhs2*$18281$U0r&n g$rhs2*$18282$U0r&n g$p*$18283$U0r&n) ((case-lambda ((g$C$26501$U0r&n g$p*$18284$U0r&n g$rhs2*$18285$U0r&n g$lhs2*$18286$U0r&n) (cons (case-lambda ((g$V$26502$U0r&n) (cons (case-lambda ((g$V$26503$U0r&n) (append (case-lambda ((g$V$26504$U0r&n) (append (case-lambda ((g$V$26505$U0r&n) (values g$C$26501$U0r&n g$V$26505$U0r&n g$V$26504$U0r&n g$V$26503$U0r&n))) g$lhs2*$18286$U0r&n g$lhs*$18273$U0r&n))) g$rhs2*$18285$U0r&n g$rhs*$18272$U0r&n))) g$V$26502$U0r&n g$q$18271$U0r&n))) 'unsyntax-splicing g$p*$18284$U0r&n))) g$C$26506$U0r&n g$p*$18283$U0r&n g$rhs2*$18282$U0r&n g$lhs2*$18281$U0r&n))))))) g$lev$18221$U0r&n '0))) g$C$26510$U0r&n g$q$18270$U0r&n g$rhs*$18269$U0r&n g$lhs*$18268$U0r&n)))))) g$ls/false$18262$U0r&n) ((case-lambda ((g$C$26550$U0r&n g$t$18287$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26551$U0r&n) ((case-lambda ((g$C$26547$U0r&n g$ls/false$18288$U0r&n) ((case-lambda ((g$J$26549$U0r&n) (if g$ls/false$18288$U0r&n (apply g$J$26549$U0r&n (case-lambda ((g$C$26512$U0r&n) (= g$C$26512$U0r&n g$lev$18221$U0r&n '0))) g$ls/false$18288$U0r&n) (g$J$26549$U0r&n '#f)))) (case-lambda ((g$T$26548$U0r&n) (if g$T$26548$U0r&n (apply g$C$26547$U0r&n (case-lambda ((g$C$26513$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26513$U0r&n '#f '"incorrect use of unsyntax-splicing" g$p$18220$U0r&n))) g$ls/false$18288$U0r&n) ((case-lambda ((g$C$26545$U0r&n g$t$18289$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26546$U0r&n) ((case-lambda ((g$C$26544$U0r&n g$ls/false$18290$U0r&n) (if g$ls/false$18290$U0r&n (apply g$C$26544$U0r&n (case-lambda ((g$C$26519$U0r&n g$p$18291$U0r&n) (call-with-values g$C$26519$U0r&n (case-lambda ((g$C$26514$U0r&n) (+ (case-lambda ((g$V$26515$U0r&n) (g$quasi$18206$U0r&n g$C$26514$U0r&n g$p$18291$U0r&n g$V$26515$U0r&n))) g$lev$18221$U0r&n '1))) (case-lambda ((g$C$26518$U0r&n g$lhs*$18295$U0r&n g$rhs*$18296$U0r&n g$p$18297$U0r&n) ((case-lambda ((g$C$26516$U0r&n g$p$18298$U0r&n g$rhs*$18299$U0r&n g$lhs*$18300$U0r&n) (list (case-lambda ((g$V$26517$U0r&n) (values g$C$26516$U0r&n g$lhs*$18300$U0r&n g$rhs*$18299$U0r&n g$V$26517$U0r&n))) 'quasisyntax g$p$18298$U0r&n))) g$C$26518$U0r&n g$p$18297$U0r&n g$rhs*$18296$U0r&n g$lhs*$18295$U0r&n)))))) g$ls/false$18290$U0r&n) ((case-lambda ((g$C$26542$U0r&n g$t$18301$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26543$U0r&n) ((case-lambda ((g$C$26541$U0r&n g$ls/false$18302$U0r&n) (if g$ls/false$18302$U0r&n (apply g$C$26541$U0r&n (case-lambda ((g$C$26528$U0r&n g$p$18303$U0r&n g$q$18304$U0r&n) (call-with-values g$C$26528$U0r&n (case-lambda ((g$C$26520$U0r&n) (g$quasi$18206$U0r&n g$C$26520$U0r&n g$p$18303$U0r&n g$lev$18221$U0r&n))) (case-lambda ((g$C$26527$U0r&n g$lhs*$18311$U0r&n g$rhs*$18312$U0r&n g$p$18313$U0r&n) (call-with-values g$C$26527$U0r&n (case-lambda ((g$C$26521$U0r&n) (g$quasi$18206$U0r&n g$C$26521$U0r&n g$q$18304$U0r&n g$lev$18221$U0r&n))) (case-lambda ((g$C$26526$U0r&n g$lhs2*$18314$U0r&n g$rhs2*$18315$U0r&n g$q$18316$U0r&n) ((case-lambda ((g$C$26522$U0r&n g$q$18317$U0r&n g$rhs2*$18318$U0r&n g$lhs2*$18319$U0r&n g$p$18320$U0r&n g$rhs*$18321$U0r&n g$lhs*$18322$U0r&n) (cons (case-lambda ((g$V$26523$U0r&n) (append (case-lambda ((g$V$26524$U0r&n) (append (case-lambda ((g$V$26525$U0r&n) (values g$C$26522$U0r&n g$V$26525$U0r&n g$V$26524$U0r&n g$V$26523$U0r&n))) g$lhs2*$18319$U0r&n g$lhs*$18322$U0r&n))) g$rhs2*$18318$U0r&n g$rhs*$18321$U0r&n))) g$p$18320$U0r&n g$q$18317$U0r&n))) g$C$26526$U0r&n g$q$18316$U0r&n g$rhs2*$18315$U0r&n g$lhs2*$18314$U0r&n g$p$18313$U0r&n g$rhs*$18312$U0r&n g$lhs*$18311$U0r&n))))))))) g$ls/false$18302$U0r&n) ((case-lambda ((g$C$26539$U0r&n g$t$18323$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26540$U0r&n) ((case-lambda ((g$C$26538$U0r&n g$ls/false$18324$U0r&n) (if g$ls/false$18324$U0r&n (apply g$C$26538$U0r&n (case-lambda ((g$C$26533$U0r&n g$x*$18325$U0r&n) (call-with-values g$C$26533$U0r&n (case-lambda ((g$C$26529$U0r&n) (g$quasi$18206$U0r&n g$C$26529$U0r&n g$x*$18325$U0r&n g$lev$18221$U0r&n))) (case-lambda ((g$C$26532$U0r&n g$lhs*$18329$U0r&n g$rhs*$18330$U0r&n g$x*$18331$U0r&n) ((case-lambda ((g$C$26530$U0r&n g$x*$18332$U0r&n g$rhs*$18333$U0r&n g$lhs*$18334$U0r&n) (g$list->vector$13491$U0r&n (case-lambda ((g$V$26531$U0r&n) (values g$C$26530$U0r&n g$lhs*$18334$U0r&n g$rhs*$18333$U0r&n g$V$26531$U0r&n))) g$x*$18332$U0r&n))) g$C$26532$U0r&n g$x*$18331$U0r&n g$rhs*$18330$U0r&n g$lhs*$18329$U0r&n)))))) g$ls/false$18324$U0r&n) ((case-lambda ((g$C$26536$U0r&n g$t$18335$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26537$U0r&n) ((case-lambda ((g$C$26535$U0r&n g$ls/false$18336$U0r&n) (if g$ls/false$18336$U0r&n (apply g$C$26535$U0r&n (case-lambda ((g$C$26534$U0r&n) (values g$C$26534$U0r&n '() '() g$p$18220$U0r&n))) g$ls/false$18336$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26535$U0r&n '#f '"invalid syntax" g$t$18335$U0r&n)))) g$C$26536$U0r&n g$V$26537$U0r&n))) g$t$18335$U0r&n '_))) g$C$26538$U0r&n g$t$18323$U0r&n)))) g$C$26539$U0r&n g$V$26540$U0r&n))) g$t$18323$U0r&n '#(vector each-any)))) g$C$26541$U0r&n g$t$18301$U0r&n)))) g$C$26542$U0r&n g$V$26543$U0r&n))) g$t$18301$U0r&n '(any . any)))) g$C$26544$U0r&n g$t$18289$U0r&n)))) g$C$26545$U0r&n g$V$26546$U0r&n))) g$t$18289$U0r&n '(#(scheme-id quasisyntax) any)))) g$C$26547$U0r&n g$t$18287$U0r&n))))))) g$C$26550$U0r&n g$V$26551$U0r&n))) g$t$18287$U0r&n '#(scheme-id unsyntax-splicing)))) g$C$26552$U0r&n g$t$18261$U0r&n)))) g$C$26553$U0r&n g$V$26554$U0r&n))) g$t$18261$U0r&n '((#(scheme-id unsyntax-splicing) . each-any) . any)))) g$C$26555$U0r&n g$t$18237$U0r&n)))) g$C$26556$U0r&n g$V$26557$U0r&n))) g$t$18237$U0r&n '((#(scheme-id unsyntax) . each-any) . any)))) g$C$26558$U0r&n g$t$18235$U0r&n))))))) g$C$26561$U0r&n g$V$26562$U0r&n))) g$t$18235$U0r&n '#(scheme-id unsyntax)))) g$C$26563$U0r&n g$t$18222$U0r&n)))) g$C$26564$U0r&n g$V$26565$U0r&n))) g$t$18222$U0r&n '(#(scheme-id unsyntax) any)))) g$C$26566$U0r&n g$p$18220$U0r&n)))) (g$C$26579$U0r&n (case-lambda ((g$C$26578$U0r&n g$x$18207$U0r&n) ((case-lambda ((g$C$26576$U0r&n g$t$18208$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26577$U0r&n) ((case-lambda ((g$C$26575$U0r&n g$ls/false$18209$U0r&n) (if g$ls/false$18209$U0r&n (apply g$C$26575$U0r&n (case-lambda ((g$C$26574$U0r&n g$e$18210$U0r&n) (call-with-values g$C$26574$U0r&n (case-lambda ((g$C$26567$U0r&n) (g$quasi$18206$U0r&n g$C$26567$U0r&n g$e$18210$U0r&n '0))) (case-lambda ((g$C$26573$U0r&n g$lhs*$18214$U0r&n g$rhs*$18215$U0r&n g$v$18216$U0r&n) ((case-lambda ((g$C$26568$U0r&n g$v$18217$U0r&n g$rhs*$18218$U0r&n g$lhs*$18219$U0r&n) (list (case-lambda ((g$V$26569$U0r&n) (list (case-lambda ((g$V$26570$U0r&n) (cons (case-lambda ((g$V$26571$U0r&n) (list (case-lambda ((g$V$26572$U0r&n) (g$bless$17030$U0r&n g$C$26568$U0r&n g$V$26572$U0r&n))) 'syntax-case g$V$26571$U0r&n '() g$V$26570$U0r&n))) 'list g$rhs*$18218$U0r&n))) g$lhs*$18219$U0r&n g$V$26569$U0r&n))) 'syntax g$v$18217$U0r&n))) g$C$26573$U0r&n g$v$18216$U0r&n g$rhs*$18215$U0r&n g$lhs*$18214$U0r&n)))))) g$ls/false$18209$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26575$U0r&n '#f '"invalid syntax" g$t$18208$U0r&n)))) g$C$26576$U0r&n g$V$26577$U0r&n))) g$t$18208$U0r&n '(_ any)))) g$C$26578$U0r&n g$x$18207$U0r&n))))))) g$C$26580$U0r&n uninitialized))) g$C$29726$U0r&n))) (library-letrec*-identity 'g$quasisyntax-macro$17059$U0r&n))) (g$define-struct-macro$17060$U0r&n g$define-struct-macro$20657$U0r&n ((case-lambda ((g$C$29727$U0r&n) (g$C$29727$U0r&n (case-lambda ((g$C$26581$U0r&n g$stx$18337$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26581$U0r&n '#f '"define-struct not supported" g$stx$18337$U0r&n)))))) (library-letrec*-identity 'g$define-struct-macro$17060$U0r&n))) (g$define-record-type-macro$17061$U0r&n g$define-record-type-macro$20658$U0r&n ((case-lambda ((g$C$29728$U0r&n) (g$C$29728$U0r&n (case-lambda ((g$C$26971$U0r&n g$x$18338$U0r&n) ((case-lambda ((g$C$26970$U0r&n g$id$18339$U0r&n g$get-record-name$18340$U0r&n g$get-record-constructor-name$18341$U0r&n g$get-record-predicate-name$18342$U0r&n g$get-clause$18343$U0r&n g$foo-rtd-code$18344$U0r&n g$parent-rtd-code$18345$U0r&n g$parent-rcd-code$18346$U0r&n g$foo-rcd-code$18347$U0r&n g$get-protocol-code$18348$U0r&n g$get-fields$18349$U0r&n g$get-mutator-indices$18350$U0r&n g$get-mutators$18351$U0r&n g$get-accessors$18352$U0r&n g$enumerate$18353$U0r&n g$do-define-record$18354$U0r&n g$verify-clauses$18355$U0r&n) (begin (set! g$id$18339$U0r&n (case-lambda ((g$C$26585$U0r&n g$ctxt$18591$U0r&n . g$str*$18592$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$26586$U0r&n) (apply (case-lambda ((g$V$26587$U0r&n) (string->symbol (case-lambda ((g$V$26588$U0r&n) (g$datum->syntax$17188$U0r&n g$C$26585$U0r&n g$ctxt$18591$U0r&n g$V$26588$U0r&n))) g$V$26587$U0r&n))) string-append g$V$26586$U0r&n))) (case-lambda ((g$C$26582$U0r&n g$x$18593$U0r&n) (g$symbol?$13496$U0r&n (case-lambda ((g$T$26583$U0r&n) (if g$T$26583$U0r&n (symbol->string g$C$26582$U0r&n g$x$18593$U0r&n) (string? (case-lambda ((g$T$26584$U0r&n) (if g$T$26584$U0r&n (g$C$26582$U0r&n g$x$18593$U0r&n) (g$assertion-violation$13786$U0r&n g$C$26582$U0r&n 'define-record-type '"BUG")))) g$x$18593$U0r&n)))) g$x$18593$U0r&n))) g$str*$18592$U0r&n)))) (begin (set! g$get-record-name$18340$U0r&n (case-lambda ((g$C$26597$U0r&n g$spec$18582$U0r&n) ((case-lambda ((g$C$26595$U0r&n g$t$18583$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26596$U0r&n) ((case-lambda ((g$C$26594$U0r&n g$ls/false$18584$U0r&n) (if g$ls/false$18584$U0r&n (apply g$C$26594$U0r&n (case-lambda ((g$C$26589$U0r&n g$foo$18585$U0r&n g$make-foo$18586$U0r&n g$foo?$18587$U0r&n) (g$C$26589$U0r&n g$foo$18585$U0r&n))) g$ls/false$18584$U0r&n) ((case-lambda ((g$C$26592$U0r&n g$t$18588$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26593$U0r&n) ((case-lambda ((g$C$26591$U0r&n g$ls/false$18589$U0r&n) (if g$ls/false$18589$U0r&n (apply g$C$26591$U0r&n (case-lambda ((g$C$26590$U0r&n g$foo$18590$U0r&n) (g$C$26590$U0r&n g$foo$18590$U0r&n))) g$ls/false$18589$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26591$U0r&n '#f '"invalid syntax" g$t$18588$U0r&n)))) g$C$26592$U0r&n g$V$26593$U0r&n))) g$t$18588$U0r&n 'any))) g$C$26594$U0r&n g$t$18583$U0r&n)))) g$C$26595$U0r&n g$V$26596$U0r&n))) g$t$18583$U0r&n '(any any any)))) g$C$26597$U0r&n g$spec$18582$U0r&n)))) (begin (set! g$get-record-constructor-name$18341$U0r&n (case-lambda ((g$C$26610$U0r&n g$spec$18572$U0r&n) ((case-lambda ((g$C$26608$U0r&n g$t$18573$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26609$U0r&n) ((case-lambda ((g$C$26607$U0r&n g$ls/false$18574$U0r&n) (if g$ls/false$18574$U0r&n (apply g$C$26607$U0r&n (case-lambda ((g$C$26598$U0r&n g$foo$18575$U0r&n g$make-foo$18576$U0r&n g$foo?$18577$U0r&n) (g$C$26598$U0r&n g$make-foo$18576$U0r&n))) g$ls/false$18574$U0r&n) ((case-lambda ((g$C$26605$U0r&n g$t$18578$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26606$U0r&n) ((case-lambda ((g$C$26602$U0r&n g$ls/false$18579$U0r&n) ((case-lambda ((g$J$26604$U0r&n) (if g$ls/false$18579$U0r&n (apply g$J$26604$U0r&n (case-lambda ((g$C$26599$U0r&n g$foo$18580$U0r&n) (g$id?$16569$U0r&n g$C$26599$U0r&n g$foo$18580$U0r&n))) g$ls/false$18579$U0r&n) (g$J$26604$U0r&n '#f)))) (case-lambda ((g$T$26603$U0r&n) (if g$T$26603$U0r&n (apply g$C$26602$U0r&n (case-lambda ((g$C$26600$U0r&n g$foo$18581$U0r&n) (g$stx->datum$16580$U0r&n (case-lambda ((g$V$26601$U0r&n) (g$id$18339$U0r&n g$C$26600$U0r&n g$foo$18581$U0r&n '"make-" g$V$26601$U0r&n))) g$foo$18581$U0r&n))) g$ls/false$18579$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26602$U0r&n '#f '"invalid syntax" g$t$18578$U0r&n))))))) g$C$26605$U0r&n g$V$26606$U0r&n))) g$t$18578$U0r&n 'any))) g$C$26607$U0r&n g$t$18573$U0r&n)))) g$C$26608$U0r&n g$V$26609$U0r&n))) g$t$18573$U0r&n '(any any any)))) g$C$26610$U0r&n g$spec$18572$U0r&n)))) (begin (set! g$get-record-predicate-name$18342$U0r&n (case-lambda ((g$C$26623$U0r&n g$spec$18562$U0r&n) ((case-lambda ((g$C$26621$U0r&n g$t$18563$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26622$U0r&n) ((case-lambda ((g$C$26620$U0r&n g$ls/false$18564$U0r&n) (if g$ls/false$18564$U0r&n (apply g$C$26620$U0r&n (case-lambda ((g$C$26611$U0r&n g$foo$18565$U0r&n g$make-foo$18566$U0r&n g$foo?$18567$U0r&n) (g$C$26611$U0r&n g$foo?$18567$U0r&n))) g$ls/false$18564$U0r&n) ((case-lambda ((g$C$26618$U0r&n g$t$18568$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26619$U0r&n) ((case-lambda ((g$C$26615$U0r&n g$ls/false$18569$U0r&n) ((case-lambda ((g$J$26617$U0r&n) (if g$ls/false$18569$U0r&n (apply g$J$26617$U0r&n (case-lambda ((g$C$26612$U0r&n g$foo$18570$U0r&n) (g$id?$16569$U0r&n g$C$26612$U0r&n g$foo$18570$U0r&n))) g$ls/false$18569$U0r&n) (g$J$26617$U0r&n '#f)))) (case-lambda ((g$T$26616$U0r&n) (if g$T$26616$U0r&n (apply g$C$26615$U0r&n (case-lambda ((g$C$26613$U0r&n g$foo$18571$U0r&n) (g$stx->datum$16580$U0r&n (case-lambda ((g$V$26614$U0r&n) (g$id$18339$U0r&n g$C$26613$U0r&n g$foo$18571$U0r&n g$V$26614$U0r&n '"?"))) g$foo$18571$U0r&n))) g$ls/false$18569$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26615$U0r&n '#f '"invalid syntax" g$t$18568$U0r&n))))))) g$C$26618$U0r&n g$V$26619$U0r&n))) g$t$18568$U0r&n 'any))) g$C$26620$U0r&n g$t$18563$U0r&n)))) g$C$26621$U0r&n g$V$26622$U0r&n))) g$t$18563$U0r&n '(any any any)))) g$C$26623$U0r&n g$spec$18562$U0r&n)))) (begin (set! g$get-clause$18343$U0r&n (case-lambda ((g$C$26634$U0r&n g$id$18553$U0r&n g$ls$18554$U0r&n) ((case-lambda ((g$C$26632$U0r&n g$t$18555$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26633$U0r&n) ((case-lambda ((g$C$26631$U0r&n g$ls/false$18556$U0r&n) (if g$ls/false$18556$U0r&n (apply g$C$26631$U0r&n (case-lambda ((g$C$26624$U0r&n) (g$C$26624$U0r&n '#f))) g$ls/false$18556$U0r&n) ((case-lambda ((g$C$26629$U0r&n g$t$18557$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26630$U0r&n) ((case-lambda ((g$C$26628$U0r&n g$ls/false$18558$U0r&n) (if g$ls/false$18558$U0r&n (apply g$C$26628$U0r&n (case-lambda ((g$C$26625$U0r&n g$x$18559$U0r&n g$rest$18560$U0r&n g$ls$18561$U0r&n) (g$bless$17030$U0r&n (case-lambda ((g$V$26626$U0r&n) (g$free-id=?$16573$U0r&n (case-lambda ((g$T$26627$U0r&n) (if g$T$26627$U0r&n (cons g$C$26625$U0r&n g$x$18559$U0r&n g$rest$18560$U0r&n) (g$get-clause$18343$U0r&n g$C$26625$U0r&n g$id$18553$U0r&n g$ls$18561$U0r&n)))) g$V$26626$U0r&n g$x$18559$U0r&n))) g$id$18553$U0r&n))) g$ls/false$18558$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26628$U0r&n '#f '"invalid syntax" g$t$18557$U0r&n)))) g$C$26629$U0r&n g$V$26630$U0r&n))) g$t$18557$U0r&n '((any . any) . any)))) g$C$26631$U0r&n g$t$18555$U0r&n)))) g$C$26632$U0r&n g$V$26633$U0r&n))) g$t$18555$U0r&n '()))) g$C$26634$U0r&n g$ls$18554$U0r&n)))) (begin (set! g$foo-rtd-code$18344$U0r&n (case-lambda ((g$C$26700$U0r&n g$name$18512$U0r&n g$clause*$18513$U0r&n g$parent-rtd-code$18514$U0r&n) ((case-lambda ((g$C$26691$U0r&n g$convert-field-spec*$18515$U0r&n) (begin (set! g$convert-field-spec*$18515$U0r&n (case-lambda ((g$C$26648$U0r&n g$ls$18540$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$26649$U0r&n) (g$list->vector$13491$U0r&n g$C$26648$U0r&n g$V$26649$U0r&n))) (case-lambda ((g$C$26647$U0r&n g$x$18541$U0r&n) ((case-lambda ((g$C$26645$U0r&n g$t$18542$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26646$U0r&n) ((case-lambda ((g$C$26644$U0r&n g$ls/false$18543$U0r&n) (if g$ls/false$18543$U0r&n (apply g$C$26644$U0r&n (case-lambda ((g$C$26635$U0r&n g$name$18544$U0r&n g$rest$18545$U0r&n) (list g$C$26635$U0r&n 'mutable g$name$18544$U0r&n))) g$ls/false$18543$U0r&n) ((case-lambda ((g$C$26642$U0r&n g$t$18546$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26643$U0r&n) ((case-lambda ((g$C$26641$U0r&n g$ls/false$18547$U0r&n) (if g$ls/false$18547$U0r&n (apply g$C$26641$U0r&n (case-lambda ((g$C$26636$U0r&n g$name$18548$U0r&n g$rest$18549$U0r&n) (list g$C$26636$U0r&n 'immutable g$name$18548$U0r&n))) g$ls/false$18547$U0r&n) ((case-lambda ((g$C$26639$U0r&n g$t$18550$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26640$U0r&n) ((case-lambda ((g$C$26638$U0r&n g$ls/false$18551$U0r&n) (if g$ls/false$18551$U0r&n (apply g$C$26638$U0r&n (case-lambda ((g$C$26637$U0r&n g$name$18552$U0r&n) (list g$C$26637$U0r&n 'immutable g$name$18552$U0r&n))) g$ls/false$18551$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26638$U0r&n '#f '"invalid syntax" g$t$18550$U0r&n)))) g$C$26639$U0r&n g$V$26640$U0r&n))) g$t$18550$U0r&n 'any))) g$C$26641$U0r&n g$t$18546$U0r&n)))) g$C$26642$U0r&n g$V$26643$U0r&n))) g$t$18546$U0r&n '(#(scheme-id immutable) any . any)))) g$C$26644$U0r&n g$t$18542$U0r&n)))) g$C$26645$U0r&n g$V$26646$U0r&n))) g$t$18542$U0r&n '(#(scheme-id mutable) any . any)))) g$C$26647$U0r&n g$x$18541$U0r&n))) g$ls$18540$U0r&n)))) (g$get-clause$18343$U0r&n (case-lambda ((g$V$26692$U0r&n) ((case-lambda ((g$C$26689$U0r&n g$t$18535$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26690$U0r&n) ((case-lambda ((g$C$26688$U0r&n g$ls/false$18536$U0r&n) (if g$ls/false$18536$U0r&n (apply g$C$26688$U0r&n (case-lambda ((g$C$26682$U0r&n g$field-spec*$18537$U0r&n) (g$convert-field-spec*$18515$U0r&n (case-lambda ((g$V$26683$U0r&n) (list g$C$26682$U0r&n 'quote g$V$26683$U0r&n))) g$field-spec*$18537$U0r&n))) g$ls/false$18536$U0r&n) ((case-lambda ((g$C$26686$U0r&n g$t$18538$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26687$U0r&n) ((case-lambda ((g$C$26685$U0r&n g$ls/false$18539$U0r&n) (if g$ls/false$18539$U0r&n (apply g$C$26685$U0r&n (case-lambda ((g$C$26684$U0r&n) (g$C$26684$U0r&n ''#()))) g$ls/false$18539$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26685$U0r&n '#f '"invalid syntax" g$t$18538$U0r&n)))) g$C$26686$U0r&n g$V$26687$U0r&n))) g$t$18538$U0r&n '_))) g$C$26688$U0r&n g$t$18535$U0r&n)))) g$C$26689$U0r&n g$V$26690$U0r&n))) g$t$18535$U0r&n '(_ . each-any)))) (case-lambda ((g$V$26693$U0r&n) (g$get-clause$18343$U0r&n (case-lambda ((g$V$26694$U0r&n) ((case-lambda ((g$C$26680$U0r&n g$t$18531$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26681$U0r&n) ((case-lambda ((g$C$26679$U0r&n g$ls/false$18532$U0r&n) (if g$ls/false$18532$U0r&n (apply g$C$26679$U0r&n (case-lambda ((g$C$26674$U0r&n) (g$C$26674$U0r&n '#t))) g$ls/false$18532$U0r&n) ((case-lambda ((g$C$26677$U0r&n g$t$18533$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26678$U0r&n) ((case-lambda ((g$C$26676$U0r&n g$ls/false$18534$U0r&n) (if g$ls/false$18534$U0r&n (apply g$C$26676$U0r&n (case-lambda ((g$C$26675$U0r&n) (g$C$26675$U0r&n '#f))) g$ls/false$18534$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26676$U0r&n '#f '"invalid syntax" g$t$18533$U0r&n)))) g$C$26677$U0r&n g$V$26678$U0r&n))) g$t$18533$U0r&n '_))) g$C$26679$U0r&n g$t$18531$U0r&n)))) g$C$26680$U0r&n g$V$26681$U0r&n))) g$t$18531$U0r&n '(_ #(atom #t))))) (case-lambda ((g$V$26695$U0r&n) (g$get-clause$18343$U0r&n (case-lambda ((g$V$26696$U0r&n) ((case-lambda ((g$C$26672$U0r&n g$t$18527$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26673$U0r&n) ((case-lambda ((g$C$26671$U0r&n g$ls/false$18528$U0r&n) (if g$ls/false$18528$U0r&n (apply g$C$26671$U0r&n (case-lambda ((g$C$26666$U0r&n) (g$C$26666$U0r&n '#t))) g$ls/false$18528$U0r&n) ((case-lambda ((g$C$26669$U0r&n g$t$18529$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26670$U0r&n) ((case-lambda ((g$C$26668$U0r&n g$ls/false$18530$U0r&n) (if g$ls/false$18530$U0r&n (apply g$C$26668$U0r&n (case-lambda ((g$C$26667$U0r&n) (g$C$26667$U0r&n '#f))) g$ls/false$18530$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26668$U0r&n '#f '"invalid syntax" g$t$18529$U0r&n)))) g$C$26669$U0r&n g$V$26670$U0r&n))) g$t$18529$U0r&n '_))) g$C$26671$U0r&n g$t$18527$U0r&n)))) g$C$26672$U0r&n g$V$26673$U0r&n))) g$t$18527$U0r&n '(_ #(atom #t))))) (case-lambda ((g$V$26697$U0r&n) (g$get-clause$18343$U0r&n (case-lambda ((g$V$26698$U0r&n) ((case-lambda ((g$C$26664$U0r&n g$t$18520$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26665$U0r&n) ((case-lambda ((g$C$26663$U0r&n g$ls/false$18521$U0r&n) (if g$ls/false$18521$U0r&n (apply g$C$26663$U0r&n (case-lambda ((g$C$26653$U0r&n) (gensym (case-lambda ((g$V$26654$U0r&n) (list g$C$26653$U0r&n 'quote g$V$26654$U0r&n)))))) g$ls/false$18521$U0r&n) ((case-lambda ((g$C$26661$U0r&n g$t$18522$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26662$U0r&n) ((case-lambda ((g$C$26660$U0r&n g$ls/false$18523$U0r&n) (if g$ls/false$18523$U0r&n (apply g$C$26660$U0r&n (case-lambda ((g$C$26655$U0r&n g$uid$18524$U0r&n) (list g$C$26655$U0r&n 'quote g$uid$18524$U0r&n))) g$ls/false$18523$U0r&n) ((case-lambda ((g$C$26658$U0r&n g$t$18525$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26659$U0r&n) ((case-lambda ((g$C$26657$U0r&n g$ls/false$18526$U0r&n) (if g$ls/false$18526$U0r&n (apply g$C$26657$U0r&n (case-lambda ((g$C$26656$U0r&n) (g$C$26656$U0r&n '#f))) g$ls/false$18526$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26657$U0r&n '#f '"invalid syntax" g$t$18525$U0r&n)))) g$C$26658$U0r&n g$V$26659$U0r&n))) g$t$18525$U0r&n '_))) g$C$26660$U0r&n g$t$18522$U0r&n)))) g$C$26661$U0r&n g$V$26662$U0r&n))) g$t$18522$U0r&n '(_ any)))) g$C$26663$U0r&n g$t$18520$U0r&n)))) g$C$26664$U0r&n g$V$26665$U0r&n))) g$t$18520$U0r&n '(_)))) (case-lambda ((g$V$26699$U0r&n) ((case-lambda ((g$C$26650$U0r&n g$uid-code$18516$U0r&n g$sealed?$18517$U0r&n g$opaque?$18518$U0r&n g$fields$18519$U0r&n) (list (case-lambda ((g$V$26651$U0r&n) (list (case-lambda ((g$V$26652$U0r&n) (g$bless$17030$U0r&n g$C$26650$U0r&n g$V$26652$U0r&n))) 'make-record-type-descriptor g$V$26651$U0r&n g$parent-rtd-code$18514$U0r&n g$uid-code$18516$U0r&n g$sealed?$18517$U0r&n g$opaque?$18518$U0r&n g$fields$18519$U0r&n))) 'quote g$name$18512$U0r&n))) g$C$26691$U0r&n g$V$26699$U0r&n g$V$26697$U0r&n g$V$26695$U0r&n g$V$26693$U0r&n))) g$V$26698$U0r&n))) 'nongenerative g$clause*$18513$U0r&n))) g$V$26696$U0r&n))) 'sealed g$clause*$18513$U0r&n))) g$V$26694$U0r&n))) 'opaque g$clause*$18513$U0r&n))) g$V$26692$U0r&n))) 'fields g$clause*$18513$U0r&n)))) g$C$26700$U0r&n uninitialized)))) (begin (set! g$parent-rtd-code$18345$U0r&n (case-lambda ((g$C$26718$U0r&n g$clause*$18500$U0r&n) (g$get-clause$18343$U0r&n (case-lambda ((g$V$26719$U0r&n) ((case-lambda ((g$C$26716$U0r&n g$t$18501$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26717$U0r&n) ((case-lambda ((g$C$26715$U0r&n g$ls/false$18502$U0r&n) (if g$ls/false$18502$U0r&n (apply g$C$26715$U0r&n (case-lambda ((g$C$26701$U0r&n g$name$18503$U0r&n) (list g$C$26701$U0r&n 'record-type-descriptor g$name$18503$U0r&n))) g$ls/false$18502$U0r&n) ((case-lambda ((g$C$26713$U0r&n g$t$18504$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26714$U0r&n) ((case-lambda ((g$C$26712$U0r&n g$ls/false$18505$U0r&n) (if g$ls/false$18505$U0r&n (apply g$C$26712$U0r&n (case-lambda ((g$C$26710$U0r&n) (g$get-clause$18343$U0r&n (case-lambda ((g$V$26711$U0r&n) ((case-lambda ((g$C$26708$U0r&n g$t$18506$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26709$U0r&n) ((case-lambda ((g$C$26707$U0r&n g$ls/false$18507$U0r&n) (if g$ls/false$18507$U0r&n (apply g$C$26707$U0r&n (case-lambda ((g$C$26702$U0r&n g$rtd$18508$U0r&n g$rcd$18509$U0r&n) (g$C$26702$U0r&n g$rtd$18508$U0r&n))) g$ls/false$18507$U0r&n) ((case-lambda ((g$C$26705$U0r&n g$t$18510$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26706$U0r&n) ((case-lambda ((g$C$26704$U0r&n g$ls/false$18511$U0r&n) (if g$ls/false$18511$U0r&n (apply g$C$26704$U0r&n (case-lambda ((g$C$26703$U0r&n) (g$C$26703$U0r&n '#f))) g$ls/false$18511$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26704$U0r&n '#f '"invalid syntax" g$t$18510$U0r&n)))) g$C$26705$U0r&n g$V$26706$U0r&n))) g$t$18510$U0r&n '#(atom #f)))) g$C$26707$U0r&n g$t$18506$U0r&n)))) g$C$26708$U0r&n g$V$26709$U0r&n))) g$t$18506$U0r&n '(_ any any)))) g$C$26710$U0r&n g$V$26711$U0r&n))) 'parent-rtd g$clause*$18500$U0r&n))) g$ls/false$18505$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26712$U0r&n '#f '"invalid syntax" g$t$18504$U0r&n)))) g$C$26713$U0r&n g$V$26714$U0r&n))) g$t$18504$U0r&n '#(atom #f)))) g$C$26715$U0r&n g$t$18501$U0r&n)))) g$C$26716$U0r&n g$V$26717$U0r&n))) g$t$18501$U0r&n '(_ any)))) g$C$26718$U0r&n g$V$26719$U0r&n))) 'parent g$clause*$18500$U0r&n)))) (begin (set! g$parent-rcd-code$18346$U0r&n (case-lambda ((g$C$26737$U0r&n g$clause*$18488$U0r&n) (g$get-clause$18343$U0r&n (case-lambda ((g$V$26738$U0r&n) ((case-lambda ((g$C$26735$U0r&n g$t$18489$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26736$U0r&n) ((case-lambda ((g$C$26734$U0r&n g$ls/false$18490$U0r&n) (if g$ls/false$18490$U0r&n (apply g$C$26734$U0r&n (case-lambda ((g$C$26720$U0r&n g$name$18491$U0r&n) (list g$C$26720$U0r&n 'record-constructor-descriptor g$name$18491$U0r&n))) g$ls/false$18490$U0r&n) ((case-lambda ((g$C$26732$U0r&n g$t$18492$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26733$U0r&n) ((case-lambda ((g$C$26731$U0r&n g$ls/false$18493$U0r&n) (if g$ls/false$18493$U0r&n (apply g$C$26731$U0r&n (case-lambda ((g$C$26729$U0r&n) (g$get-clause$18343$U0r&n (case-lambda ((g$V$26730$U0r&n) ((case-lambda ((g$C$26727$U0r&n g$t$18494$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26728$U0r&n) ((case-lambda ((g$C$26726$U0r&n g$ls/false$18495$U0r&n) (if g$ls/false$18495$U0r&n (apply g$C$26726$U0r&n (case-lambda ((g$C$26721$U0r&n g$rtd$18496$U0r&n g$rcd$18497$U0r&n) (g$C$26721$U0r&n g$rcd$18497$U0r&n))) g$ls/false$18495$U0r&n) ((case-lambda ((g$C$26724$U0r&n g$t$18498$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26725$U0r&n) ((case-lambda ((g$C$26723$U0r&n g$ls/false$18499$U0r&n) (if g$ls/false$18499$U0r&n (apply g$C$26723$U0r&n (case-lambda ((g$C$26722$U0r&n) (g$C$26722$U0r&n '#f))) g$ls/false$18499$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26723$U0r&n '#f '"invalid syntax" g$t$18498$U0r&n)))) g$C$26724$U0r&n g$V$26725$U0r&n))) g$t$18498$U0r&n '#(atom #f)))) g$C$26726$U0r&n g$t$18494$U0r&n)))) g$C$26727$U0r&n g$V$26728$U0r&n))) g$t$18494$U0r&n '(_ any any)))) g$C$26729$U0r&n g$V$26730$U0r&n))) 'parent-rtd g$clause*$18488$U0r&n))) g$ls/false$18493$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26731$U0r&n '#f '"invalid syntax" g$t$18492$U0r&n)))) g$C$26732$U0r&n g$V$26733$U0r&n))) g$t$18492$U0r&n '#(atom #f)))) g$C$26734$U0r&n g$t$18489$U0r&n)))) g$C$26735$U0r&n g$V$26736$U0r&n))) g$t$18489$U0r&n '(_ any)))) g$C$26737$U0r&n g$V$26738$U0r&n))) 'parent g$clause*$18488$U0r&n)))) (begin (set! g$foo-rcd-code$18347$U0r&n (case-lambda ((g$C$26739$U0r&n g$clause*$18484$U0r&n g$foo-rtd$18485$U0r&n g$protocol$18486$U0r&n g$parent-rcd-code$18487$U0r&n) (list g$C$26739$U0r&n 'make-record-constructor-descriptor g$foo-rtd$18485$U0r&n g$parent-rcd-code$18487$U0r&n g$protocol$18486$U0r&n)))) (begin (set! g$get-protocol-code$18348$U0r&n (case-lambda ((g$C$26748$U0r&n g$clause*$18478$U0r&n) (g$get-clause$18343$U0r&n (case-lambda ((g$V$26749$U0r&n) ((case-lambda ((g$C$26746$U0r&n g$t$18479$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26747$U0r&n) ((case-lambda ((g$C$26745$U0r&n g$ls/false$18480$U0r&n) (if g$ls/false$18480$U0r&n (apply g$C$26745$U0r&n (case-lambda ((g$C$26740$U0r&n g$expr$18481$U0r&n) (g$C$26740$U0r&n g$expr$18481$U0r&n))) g$ls/false$18480$U0r&n) ((case-lambda ((g$C$26743$U0r&n g$t$18482$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26744$U0r&n) ((case-lambda ((g$C$26742$U0r&n g$ls/false$18483$U0r&n) (if g$ls/false$18483$U0r&n (apply g$C$26742$U0r&n (case-lambda ((g$C$26741$U0r&n) (g$C$26741$U0r&n '#f))) g$ls/false$18483$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26742$U0r&n '#f '"invalid syntax" g$t$18482$U0r&n)))) g$C$26743$U0r&n g$V$26744$U0r&n))) g$t$18482$U0r&n '_))) g$C$26745$U0r&n g$t$18479$U0r&n)))) g$C$26746$U0r&n g$V$26747$U0r&n))) g$t$18479$U0r&n '(_ any)))) g$C$26748$U0r&n g$V$26749$U0r&n))) 'protocol g$clause*$18478$U0r&n)))) (begin (set! g$get-fields$18349$U0r&n (case-lambda ((g$C$26762$U0r&n g$clause*$18469$U0r&n) ((case-lambda ((g$C$26760$U0r&n g$t$18470$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26761$U0r&n) ((case-lambda ((g$C$26759$U0r&n g$ls/false$18471$U0r&n) (if g$ls/false$18471$U0r&n (apply g$C$26759$U0r&n (case-lambda ((g$C$26750$U0r&n) (g$C$26750$U0r&n '()))) g$ls/false$18471$U0r&n) ((case-lambda ((g$C$26757$U0r&n g$t$18472$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26758$U0r&n) ((case-lambda ((g$C$26756$U0r&n g$ls/false$18473$U0r&n) (if g$ls/false$18473$U0r&n (apply g$C$26756$U0r&n (case-lambda ((g$C$26751$U0r&n g$f*$18474$U0r&n) (g$C$26751$U0r&n g$f*$18474$U0r&n))) g$ls/false$18473$U0r&n) ((case-lambda ((g$C$26754$U0r&n g$t$18475$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26755$U0r&n) ((case-lambda ((g$C$26753$U0r&n g$ls/false$18476$U0r&n) (if g$ls/false$18476$U0r&n (apply g$C$26753$U0r&n (case-lambda ((g$C$26752$U0r&n g$rest$18477$U0r&n) (g$get-fields$18349$U0r&n g$C$26752$U0r&n g$rest$18477$U0r&n))) g$ls/false$18476$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26753$U0r&n '#f '"invalid syntax" g$t$18475$U0r&n)))) g$C$26754$U0r&n g$V$26755$U0r&n))) g$t$18475$U0r&n '(_ . any)))) g$C$26756$U0r&n g$t$18472$U0r&n)))) g$C$26757$U0r&n g$V$26758$U0r&n))) g$t$18472$U0r&n '((#(scheme-id fields) . each-any) . _)))) g$C$26759$U0r&n g$t$18470$U0r&n)))) g$C$26760$U0r&n g$V$26761$U0r&n))) g$t$18470$U0r&n '()))) g$C$26762$U0r&n g$clause*$18469$U0r&n)))) (begin (set! g$get-mutator-indices$18350$U0r&n (case-lambda ((g$C$26782$U0r&n g$fields$18457$U0r&n) ((case-lambda ((g$C$26781$U0r&n g$f$18458$U0r&n) ((case-lambda ((g$C$26764$U0r&n g$f$26763$U0r&n) (begin (set! g$f$18458$U0r&n g$f$26763$U0r&n) (g$C$26764$U0r&n g$f$18458$U0r&n)))) g$C$26781$U0r&n (case-lambda ((g$C$26780$U0r&n g$fields$18459$U0r&n g$i$18460$U0r&n) ((case-lambda ((g$C$26778$U0r&n g$t$18461$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26779$U0r&n) ((case-lambda ((g$C$26777$U0r&n g$ls/false$18462$U0r&n) (if g$ls/false$18462$U0r&n (apply g$C$26777$U0r&n (case-lambda ((g$C$26765$U0r&n) (g$C$26765$U0r&n '()))) g$ls/false$18462$U0r&n) ((case-lambda ((g$C$26775$U0r&n g$t$18463$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26776$U0r&n) ((case-lambda ((g$C$26774$U0r&n g$ls/false$18464$U0r&n) (if g$ls/false$18464$U0r&n (apply g$C$26774$U0r&n (case-lambda ((g$C$26766$U0r&n g$rest$18465$U0r&n) (+ (case-lambda ((g$V$26767$U0r&n) (g$f$18458$U0r&n (case-lambda ((g$V$26768$U0r&n) (cons g$C$26766$U0r&n g$i$18460$U0r&n g$V$26768$U0r&n))) g$rest$18465$U0r&n g$V$26767$U0r&n))) g$i$18460$U0r&n '1))) g$ls/false$18464$U0r&n) ((case-lambda ((g$C$26772$U0r&n g$t$18466$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26773$U0r&n) ((case-lambda ((g$C$26771$U0r&n g$ls/false$18467$U0r&n) (if g$ls/false$18467$U0r&n (apply g$C$26771$U0r&n (case-lambda ((g$C$26769$U0r&n g$rest$18468$U0r&n) (+ (case-lambda ((g$V$26770$U0r&n) (g$f$18458$U0r&n g$C$26769$U0r&n g$rest$18468$U0r&n g$V$26770$U0r&n))) g$i$18460$U0r&n '1))) g$ls/false$18467$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26771$U0r&n '#f '"invalid syntax" g$t$18466$U0r&n)))) g$C$26772$U0r&n g$V$26773$U0r&n))) g$t$18466$U0r&n '(_ . any)))) g$C$26774$U0r&n g$t$18463$U0r&n)))) g$C$26775$U0r&n g$V$26776$U0r&n))) g$t$18463$U0r&n '((#(scheme-id mutable) . _) . any)))) g$C$26777$U0r&n g$t$18461$U0r&n)))) g$C$26778$U0r&n g$V$26779$U0r&n))) g$t$18461$U0r&n '()))) g$C$26780$U0r&n g$fields$18459$U0r&n)))))) (case-lambda ((g$V$26783$U0r&n) (g$V$26783$U0r&n g$C$26782$U0r&n g$fields$18457$U0r&n '0))) uninitialized)))) (begin (set! g$get-mutators$18351$U0r&n (case-lambda ((g$C$26816$U0r&n g$foo$18436$U0r&n g$fields$18437$U0r&n) ((case-lambda ((g$C$26814$U0r&n g$gen-name$18438$U0r&n) (begin (set! g$gen-name$18438$U0r&n (case-lambda ((g$C$26784$U0r&n g$x$18456$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$26785$U0r&n) (symbol->string (case-lambda ((g$V$26786$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$26787$U0r&n) (symbol->string (case-lambda ((g$V$26788$U0r&n) (string-append (case-lambda ((g$V$26789$U0r&n) (string->symbol (case-lambda ((g$V$26790$U0r&n) (g$datum->syntax$17188$U0r&n g$C$26784$U0r&n g$foo$18436$U0r&n g$V$26790$U0r&n))) g$V$26789$U0r&n))) g$V$26788$U0r&n '"-" g$V$26786$U0r&n '"-set!"))) g$V$26787$U0r&n))) g$foo$18436$U0r&n))) g$V$26785$U0r&n))) g$x$18456$U0r&n)))) ((case-lambda ((g$C$26813$U0r&n g$f$18439$U0r&n) ((case-lambda ((g$C$26792$U0r&n g$f$26791$U0r&n) (begin (set! g$f$18439$U0r&n g$f$26791$U0r&n) (g$C$26792$U0r&n g$f$18439$U0r&n)))) g$C$26813$U0r&n (case-lambda ((g$C$26812$U0r&n g$fields$18440$U0r&n) ((case-lambda ((g$C$26810$U0r&n g$t$18441$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26811$U0r&n) ((case-lambda ((g$C$26809$U0r&n g$ls/false$18442$U0r&n) (if g$ls/false$18442$U0r&n (apply g$C$26809$U0r&n (case-lambda ((g$C$26793$U0r&n) (g$C$26793$U0r&n '()))) g$ls/false$18442$U0r&n) ((case-lambda ((g$C$26807$U0r&n g$t$18443$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26808$U0r&n) ((case-lambda ((g$C$26806$U0r&n g$ls/false$18444$U0r&n) (if g$ls/false$18444$U0r&n (apply g$C$26806$U0r&n (case-lambda ((g$C$26794$U0r&n g$name$18445$U0r&n g$accessor$18446$U0r&n g$mutator$18447$U0r&n g$rest$18448$U0r&n) (g$f$18439$U0r&n (case-lambda ((g$V$26795$U0r&n) (cons g$C$26794$U0r&n g$mutator$18447$U0r&n g$V$26795$U0r&n))) g$rest$18448$U0r&n))) g$ls/false$18444$U0r&n) ((case-lambda ((g$C$26804$U0r&n g$t$18449$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26805$U0r&n) ((case-lambda ((g$C$26803$U0r&n g$ls/false$18450$U0r&n) (if g$ls/false$18450$U0r&n (apply g$C$26803$U0r&n (case-lambda ((g$C$26796$U0r&n g$name$18451$U0r&n g$rest$18452$U0r&n) (g$f$18439$U0r&n (case-lambda ((g$V$26797$U0r&n) (g$gen-name$18438$U0r&n (case-lambda ((g$V$26798$U0r&n) (cons g$C$26796$U0r&n g$V$26798$U0r&n g$V$26797$U0r&n))) g$name$18451$U0r&n))) g$rest$18452$U0r&n))) g$ls/false$18450$U0r&n) ((case-lambda ((g$C$26801$U0r&n g$t$18453$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26802$U0r&n) ((case-lambda ((g$C$26800$U0r&n g$ls/false$18454$U0r&n) (if g$ls/false$18454$U0r&n (apply g$C$26800$U0r&n (case-lambda ((g$C$26799$U0r&n g$rest$18455$U0r&n) (g$f$18439$U0r&n g$C$26799$U0r&n g$rest$18455$U0r&n))) g$ls/false$18454$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26800$U0r&n '#f '"invalid syntax" g$t$18453$U0r&n)))) g$C$26801$U0r&n g$V$26802$U0r&n))) g$t$18453$U0r&n '(_ . any)))) g$C$26803$U0r&n g$t$18449$U0r&n)))) g$C$26804$U0r&n g$V$26805$U0r&n))) g$t$18449$U0r&n '((#(scheme-id mutable) any) . any)))) g$C$26806$U0r&n g$t$18443$U0r&n)))) g$C$26807$U0r&n g$V$26808$U0r&n))) g$t$18443$U0r&n '((#(scheme-id mutable) any any any) . any)))) g$C$26809$U0r&n g$t$18441$U0r&n)))) g$C$26810$U0r&n g$V$26811$U0r&n))) g$t$18441$U0r&n '()))) g$C$26812$U0r&n g$fields$18440$U0r&n)))))) (case-lambda ((g$V$26815$U0r&n) (g$V$26815$U0r&n g$C$26814$U0r&n g$fields$18437$U0r&n))) uninitialized)))) g$C$26816$U0r&n uninitialized)))) (begin (set! g$get-accessors$18352$U0r&n (case-lambda ((g$C$26865$U0r&n g$foo$18402$U0r&n g$fields$18403$U0r&n) ((case-lambda ((g$C$26864$U0r&n g$gen-name$18404$U0r&n) (begin (set! g$gen-name$18404$U0r&n (case-lambda ((g$C$26817$U0r&n g$x$18435$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$26818$U0r&n) (symbol->string (case-lambda ((g$V$26819$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$26820$U0r&n) (symbol->string (case-lambda ((g$V$26821$U0r&n) (string-append (case-lambda ((g$V$26822$U0r&n) (string->symbol (case-lambda ((g$V$26823$U0r&n) (g$datum->syntax$17188$U0r&n g$C$26817$U0r&n g$foo$18402$U0r&n g$V$26823$U0r&n))) g$V$26822$U0r&n))) g$V$26821$U0r&n '"-" g$V$26819$U0r&n))) g$V$26820$U0r&n))) g$foo$18402$U0r&n))) g$V$26818$U0r&n))) g$x$18435$U0r&n)))) (g$map$12753$U0r&n g$C$26864$U0r&n (case-lambda ((g$C$26863$U0r&n g$field$18405$U0r&n) ((case-lambda ((g$C$26861$U0r&n g$t$18406$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26862$U0r&n) ((case-lambda ((g$C$26858$U0r&n g$ls/false$18407$U0r&n) ((case-lambda ((g$J$26860$U0r&n) (if g$ls/false$18407$U0r&n (apply g$J$26860$U0r&n (case-lambda ((g$C$26824$U0r&n g$name$18408$U0r&n g$accessor$18409$U0r&n g$mutator$18410$U0r&n) (g$id?$16569$U0r&n g$C$26824$U0r&n g$accessor$18409$U0r&n))) g$ls/false$18407$U0r&n) (g$J$26860$U0r&n '#f)))) (case-lambda ((g$T$26859$U0r&n) (if g$T$26859$U0r&n (apply g$C$26858$U0r&n (case-lambda ((g$C$26825$U0r&n g$name$18411$U0r&n g$accessor$18412$U0r&n g$mutator$18413$U0r&n) (g$C$26825$U0r&n g$accessor$18412$U0r&n))) g$ls/false$18407$U0r&n) ((case-lambda ((g$C$26856$U0r&n g$t$18414$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26857$U0r&n) ((case-lambda ((g$C$26853$U0r&n g$ls/false$18415$U0r&n) ((case-lambda ((g$J$26855$U0r&n) (if g$ls/false$18415$U0r&n (apply g$J$26855$U0r&n (case-lambda ((g$C$26826$U0r&n g$name$18416$U0r&n g$accessor$18417$U0r&n) (g$id?$16569$U0r&n g$C$26826$U0r&n g$accessor$18417$U0r&n))) g$ls/false$18415$U0r&n) (g$J$26855$U0r&n '#f)))) (case-lambda ((g$T$26854$U0r&n) (if g$T$26854$U0r&n (apply g$C$26853$U0r&n (case-lambda ((g$C$26827$U0r&n g$name$18418$U0r&n g$accessor$18419$U0r&n) (g$C$26827$U0r&n g$accessor$18419$U0r&n))) g$ls/false$18415$U0r&n) ((case-lambda ((g$C$26851$U0r&n g$t$18420$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26852$U0r&n) ((case-lambda ((g$C$26848$U0r&n g$ls/false$18421$U0r&n) ((case-lambda ((g$J$26850$U0r&n) (if g$ls/false$18421$U0r&n (apply g$J$26850$U0r&n (case-lambda ((g$C$26828$U0r&n g$name$18422$U0r&n) (g$id?$16569$U0r&n g$C$26828$U0r&n g$name$18422$U0r&n))) g$ls/false$18421$U0r&n) (g$J$26850$U0r&n '#f)))) (case-lambda ((g$T$26849$U0r&n) (if g$T$26849$U0r&n (apply g$C$26848$U0r&n (case-lambda ((g$C$26829$U0r&n g$name$18423$U0r&n) (g$gen-name$18404$U0r&n g$C$26829$U0r&n g$name$18423$U0r&n))) g$ls/false$18421$U0r&n) ((case-lambda ((g$C$26846$U0r&n g$t$18424$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26847$U0r&n) ((case-lambda ((g$C$26843$U0r&n g$ls/false$18425$U0r&n) ((case-lambda ((g$J$26845$U0r&n) (if g$ls/false$18425$U0r&n (apply g$J$26845$U0r&n (case-lambda ((g$C$26830$U0r&n g$name$18426$U0r&n) (g$id?$16569$U0r&n g$C$26830$U0r&n g$name$18426$U0r&n))) g$ls/false$18425$U0r&n) (g$J$26845$U0r&n '#f)))) (case-lambda ((g$T$26844$U0r&n) (if g$T$26844$U0r&n (apply g$C$26843$U0r&n (case-lambda ((g$C$26831$U0r&n g$name$18427$U0r&n) (g$gen-name$18404$U0r&n g$C$26831$U0r&n g$name$18427$U0r&n))) g$ls/false$18425$U0r&n) ((case-lambda ((g$C$26841$U0r&n g$t$18428$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26842$U0r&n) ((case-lambda ((g$C$26838$U0r&n g$ls/false$18429$U0r&n) ((case-lambda ((g$J$26840$U0r&n) (if g$ls/false$18429$U0r&n (apply g$J$26840$U0r&n (case-lambda ((g$C$26832$U0r&n g$name$18430$U0r&n) (g$id?$16569$U0r&n g$C$26832$U0r&n g$name$18430$U0r&n))) g$ls/false$18429$U0r&n) (g$J$26840$U0r&n '#f)))) (case-lambda ((g$T$26839$U0r&n) (if g$T$26839$U0r&n (apply g$C$26838$U0r&n (case-lambda ((g$C$26833$U0r&n g$name$18431$U0r&n) (g$gen-name$18404$U0r&n g$C$26833$U0r&n g$name$18431$U0r&n))) g$ls/false$18429$U0r&n) ((case-lambda ((g$C$26836$U0r&n g$t$18432$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26837$U0r&n) ((case-lambda ((g$C$26835$U0r&n g$ls/false$18433$U0r&n) (if g$ls/false$18433$U0r&n (apply g$C$26835$U0r&n (case-lambda ((g$C$26834$U0r&n g$others$18434$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26834$U0r&n '#f '"invalid field spec" g$field$18405$U0r&n))) g$ls/false$18433$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26835$U0r&n '#f '"invalid syntax" g$t$18432$U0r&n)))) g$C$26836$U0r&n g$V$26837$U0r&n))) g$t$18432$U0r&n 'any))) g$C$26838$U0r&n g$t$18428$U0r&n))))))) g$C$26841$U0r&n g$V$26842$U0r&n))) g$t$18428$U0r&n 'any))) g$C$26843$U0r&n g$t$18424$U0r&n))))))) g$C$26846$U0r&n g$V$26847$U0r&n))) g$t$18424$U0r&n '(#(scheme-id immutable) any)))) g$C$26848$U0r&n g$t$18420$U0r&n))))))) g$C$26851$U0r&n g$V$26852$U0r&n))) g$t$18420$U0r&n '(#(scheme-id mutable) any)))) g$C$26853$U0r&n g$t$18414$U0r&n))))))) g$C$26856$U0r&n g$V$26857$U0r&n))) g$t$18414$U0r&n '(#(scheme-id immutable) any any)))) g$C$26858$U0r&n g$t$18406$U0r&n))))))) g$C$26861$U0r&n g$V$26862$U0r&n))) g$t$18406$U0r&n '(#(scheme-id mutable) any any any)))) g$C$26863$U0r&n g$field$18405$U0r&n))) g$fields$18403$U0r&n)))) g$C$26865$U0r&n uninitialized)))) (begin (set! g$enumerate$18353$U0r&n (case-lambda ((g$C$26874$U0r&n g$ls$18398$U0r&n) ((case-lambda ((g$C$26873$U0r&n g$f$18399$U0r&n) ((case-lambda ((g$C$26867$U0r&n g$f$26866$U0r&n) (begin (set! g$f$18399$U0r&n g$f$26866$U0r&n) (g$C$26867$U0r&n g$f$18399$U0r&n)))) g$C$26873$U0r&n (case-lambda ((g$C$26868$U0r&n g$ls$18400$U0r&n g$i$18401$U0r&n) (null? (case-lambda ((g$T$26869$U0r&n) (if g$T$26869$U0r&n (g$C$26868$U0r&n '()) (+ (case-lambda ((g$V$26870$U0r&n) (cdr (case-lambda ((g$V$26871$U0r&n) (g$f$18399$U0r&n (case-lambda ((g$V$26872$U0r&n) (cons g$C$26868$U0r&n g$i$18401$U0r&n g$V$26872$U0r&n))) g$V$26871$U0r&n g$V$26870$U0r&n))) g$ls$18400$U0r&n))) g$i$18401$U0r&n '1)))) g$ls$18400$U0r&n)))))) (case-lambda ((g$V$26875$U0r&n) (g$V$26875$U0r&n g$C$26874$U0r&n g$ls$18398$U0r&n '0))) uninitialized)))) (begin (set! g$do-define-record$18354$U0r&n (case-lambda ((g$C$26930$U0r&n g$namespec$18378$U0r&n g$clause*$18379$U0r&n) (g$get-record-name$18340$U0r&n (case-lambda ((g$V$26931$U0r&n) ((case-lambda ((g$C$26928$U0r&n g$foo$18380$U0r&n) (gensym (case-lambda ((g$V$26929$U0r&n) ((case-lambda ((g$C$26926$U0r&n g$foo-rtd$18381$U0r&n) (gensym (case-lambda ((g$V$26927$U0r&n) ((case-lambda ((g$C$26924$U0r&n g$foo-rcd$18382$U0r&n) (gensym (case-lambda ((g$V$26925$U0r&n) ((case-lambda ((g$C$26922$U0r&n g$protocol$18383$U0r&n) (g$get-record-constructor-name$18341$U0r&n (case-lambda ((g$V$26923$U0r&n) ((case-lambda ((g$C$26920$U0r&n g$make-foo$18384$U0r&n) (g$get-fields$18349$U0r&n (case-lambda ((g$V$26921$U0r&n) ((case-lambda ((g$C$26918$U0r&n g$fields$18385$U0r&n) (g$enumerate$18353$U0r&n (case-lambda ((g$V$26919$U0r&n) ((case-lambda ((g$C$26916$U0r&n g$idx*$18386$U0r&n) (g$get-accessors$18352$U0r&n (case-lambda ((g$V$26917$U0r&n) ((case-lambda ((g$C$26914$U0r&n g$foo-x*$18387$U0r&n) (g$get-mutators$18351$U0r&n (case-lambda ((g$V$26915$U0r&n) ((case-lambda ((g$C$26912$U0r&n g$set-foo-x!*$18388$U0r&n) (g$get-mutator-indices$18350$U0r&n (case-lambda ((g$V$26913$U0r&n) ((case-lambda ((g$C$26910$U0r&n g$set-foo-idx*$18389$U0r&n) (g$get-record-predicate-name$18342$U0r&n (case-lambda ((g$V$26911$U0r&n) ((case-lambda ((g$C$26907$U0r&n g$foo?$18390$U0r&n) (g$parent-rtd-code$18345$U0r&n (case-lambda ((g$V$26908$U0r&n) (g$foo-rtd-code$18344$U0r&n (case-lambda ((g$V$26909$U0r&n) ((case-lambda ((g$C$26904$U0r&n g$foo-rtd-code$18391$U0r&n) (g$parent-rcd-code$18346$U0r&n (case-lambda ((g$V$26905$U0r&n) (g$foo-rcd-code$18347$U0r&n (case-lambda ((g$V$26906$U0r&n) ((case-lambda ((g$C$26902$U0r&n g$foo-rcd-code$18392$U0r&n) (g$get-protocol-code$18348$U0r&n (case-lambda ((g$V$26903$U0r&n) ((case-lambda ((g$C$26880$U0r&n g$protocol-code$18393$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$26881$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$26882$U0r&n) (append (case-lambda ((g$V$26883$U0r&n) (list (case-lambda ((g$V$26884$U0r&n) (list (case-lambda ((g$V$26885$U0r&n) (cons (case-lambda ((g$V$26886$U0r&n) (list (case-lambda ((g$V$26887$U0r&n) (list (case-lambda ((g$V$26888$U0r&n) (cons (case-lambda ((g$V$26889$U0r&n) (list (case-lambda ((g$V$26890$U0r&n) (list (case-lambda ((g$V$26891$U0r&n) (list (case-lambda ((g$V$26892$U0r&n) (list (case-lambda ((g$V$26893$U0r&n) (cons (case-lambda ((g$V$26894$U0r&n) (list (case-lambda ((g$V$26895$U0r&n) (cons (case-lambda ((g$V$26896$U0r&n) (list (case-lambda ((g$V$26897$U0r&n) (cons (case-lambda ((g$V$26898$U0r&n) (list (case-lambda ((g$V$26899$U0r&n) (cons (case-lambda ((g$V$26900$U0r&n) (cons (case-lambda ((g$V$26901$U0r&n) (g$bless$17030$U0r&n g$C$26880$U0r&n g$V$26901$U0r&n))) 'begin g$V$26900$U0r&n))) g$V$26899$U0r&n g$V$26898$U0r&n))) 'define g$foo-rtd$18381$U0r&n g$foo-rtd-code$18391$U0r&n))) g$V$26897$U0r&n g$V$26896$U0r&n))) 'define g$protocol$18383$U0r&n g$protocol-code$18393$U0r&n))) g$V$26895$U0r&n g$V$26894$U0r&n))) 'define g$foo-rcd$18382$U0r&n g$foo-rcd-code$18392$U0r&n))) g$V$26893$U0r&n g$V$26889$U0r&n))) 'define-syntax g$foo$18380$U0r&n g$V$26892$U0r&n))) 'list ''$rtd g$V$26891$U0r&n g$V$26890$U0r&n))) 'syntax g$foo-rtd$18381$U0r&n))) 'syntax g$foo-rcd$18382$U0r&n))) g$V$26888$U0r&n g$V$26886$U0r&n))) 'define g$foo?$18390$U0r&n g$V$26887$U0r&n))) 'record-predicate g$foo-rtd$18381$U0r&n))) g$V$26885$U0r&n g$V$26883$U0r&n))) 'define g$make-foo$18384$U0r&n g$V$26884$U0r&n))) 'record-constructor g$foo-rcd$18382$U0r&n))) g$V$26882$U0r&n g$V$26881$U0r&n))) (case-lambda ((g$C$26876$U0r&n g$foo-x$18394$U0r&n g$idx$18395$U0r&n) (list (case-lambda ((g$V$26877$U0r&n) (list g$C$26876$U0r&n 'define g$foo-x$18394$U0r&n g$V$26877$U0r&n))) 'record-accessor g$foo-rtd$18381$U0r&n g$idx$18395$U0r&n))) g$foo-x*$18387$U0r&n g$idx*$18386$U0r&n))) (case-lambda ((g$C$26878$U0r&n g$set-foo-x!$18396$U0r&n g$idx$18397$U0r&n) (list (case-lambda ((g$V$26879$U0r&n) (list g$C$26878$U0r&n 'define g$set-foo-x!$18396$U0r&n g$V$26879$U0r&n))) 'record-mutator g$foo-rtd$18381$U0r&n g$idx$18397$U0r&n))) g$set-foo-x!*$18388$U0r&n g$set-foo-idx*$18389$U0r&n))) g$C$26902$U0r&n g$V$26903$U0r&n))) g$clause*$18379$U0r&n))) g$C$26904$U0r&n g$V$26906$U0r&n))) g$clause*$18379$U0r&n g$foo-rtd$18381$U0r&n g$protocol$18383$U0r&n g$V$26905$U0r&n))) g$clause*$18379$U0r&n))) g$C$26907$U0r&n g$V$26909$U0r&n))) g$foo$18380$U0r&n g$clause*$18379$U0r&n g$V$26908$U0r&n))) g$clause*$18379$U0r&n))) g$C$26910$U0r&n g$V$26911$U0r&n))) g$namespec$18378$U0r&n))) g$C$26912$U0r&n g$V$26913$U0r&n))) g$fields$18385$U0r&n))) g$C$26914$U0r&n g$V$26915$U0r&n))) g$foo$18380$U0r&n g$fields$18385$U0r&n))) g$C$26916$U0r&n g$V$26917$U0r&n))) g$foo$18380$U0r&n g$fields$18385$U0r&n))) g$C$26918$U0r&n g$V$26919$U0r&n))) g$fields$18385$U0r&n))) g$C$26920$U0r&n g$V$26921$U0r&n))) g$clause*$18379$U0r&n))) g$C$26922$U0r&n g$V$26923$U0r&n))) g$namespec$18378$U0r&n))) g$C$26924$U0r&n g$V$26925$U0r&n)))))) g$C$26926$U0r&n g$V$26927$U0r&n)))))) g$C$26928$U0r&n g$V$26929$U0r&n)))))) g$C$26930$U0r&n g$V$26931$U0r&n))) g$namespec$18378$U0r&n)))) (begin (set! g$verify-clauses$18355$U0r&n (case-lambda ((g$C$26964$U0r&n g$x$18360$U0r&n g$cls*$18361$U0r&n) ((case-lambda ((g$C$26961$U0r&n g$valid-kwds$18362$U0r&n g$free-id-member?$18363$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$26962$U0r&n) (begin (set! g$valid-kwds$18362$U0r&n g$V$26962$U0r&n) (begin (set! g$free-id-member?$18363$U0r&n (case-lambda ((g$C$26934$U0r&n g$x$18375$U0r&n g$ls$18376$U0r&n) (pair? (case-lambda ((g$T$26935$U0r&n) (if g$T$26935$U0r&n (car (case-lambda ((g$V$26936$U0r&n) (g$free-id=?$16573$U0r&n (case-lambda ((g$V$26937$U0r&n) ((case-lambda ((g$C$26932$U0r&n g$t$18377$U0r&n) (if g$t$18377$U0r&n (g$C$26932$U0r&n g$t$18377$U0r&n) (cdr (case-lambda ((g$V$26933$U0r&n) (g$free-id-member?$18363$U0r&n g$C$26932$U0r&n g$x$18375$U0r&n g$V$26933$U0r&n))) g$ls$18376$U0r&n)))) g$C$26934$U0r&n g$V$26937$U0r&n))) g$x$18375$U0r&n g$V$26936$U0r&n))) g$ls$18376$U0r&n) (g$C$26934$U0r&n '#f)))) g$ls$18376$U0r&n)))) ((case-lambda ((g$C$26960$U0r&n g$f$18364$U0r&n) ((case-lambda ((g$C$26939$U0r&n g$f$26938$U0r&n) (begin (set! g$f$18364$U0r&n g$f$26938$U0r&n) (g$C$26939$U0r&n g$f$18364$U0r&n)))) g$C$26960$U0r&n (case-lambda ((g$C$26956$U0r&n g$cls*$18365$U0r&n g$seen*$18366$U0r&n) (null? (case-lambda ((g$V$26957$U0r&n) (not (case-lambda ((g$T$26958$U0r&n) (if g$T$26958$U0r&n (car (case-lambda ((g$V$26959$U0r&n) ((case-lambda ((g$C$26954$U0r&n g$t$18367$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26955$U0r&n) ((case-lambda ((g$C$26953$U0r&n g$ls/false$18368$U0r&n) (if g$ls/false$18368$U0r&n (apply g$C$26953$U0r&n (case-lambda ((g$C$26942$U0r&n g$kwd$18369$U0r&n g$rest$18370$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$V$26943$U0r&n) (not (case-lambda ((g$V$26944$U0r&n) ((case-lambda ((g$C$26940$U0r&n g$t$18371$U0r&n) (if g$t$18371$U0r&n (g$C$26940$U0r&n g$t$18371$U0r&n) (g$free-id-member?$18363$U0r&n (case-lambda ((g$V$26941$U0r&n) (not g$C$26940$U0r&n g$V$26941$U0r&n))) g$kwd$18369$U0r&n g$valid-kwds$18362$U0r&n)))) (case-lambda ((g$T$26945$U0r&n) (if g$T$26945$U0r&n (g$syntax-violation$17186$U0r&n g$C$26942$U0r&n '#f '"not a valid define-record-type keyword" g$kwd$18369$U0r&n) (g$bound-id-member?$16576$U0r&n (case-lambda ((g$T$26946$U0r&n) (if g$T$26946$U0r&n (g$syntax-violation$17186$U0r&n g$C$26942$U0r&n '#f '"duplicate use of keyword " g$x$18360$U0r&n g$kwd$18369$U0r&n) (cons (case-lambda ((g$V$26947$U0r&n) (cdr (case-lambda ((g$V$26948$U0r&n) (g$f$18364$U0r&n g$C$26942$U0r&n g$V$26948$U0r&n g$V$26947$U0r&n))) g$cls*$18365$U0r&n))) g$kwd$18369$U0r&n g$seen*$18366$U0r&n)))) g$kwd$18369$U0r&n g$seen*$18366$U0r&n)))) g$V$26944$U0r&n))) g$V$26943$U0r&n))) g$kwd$18369$U0r&n))) g$ls/false$18368$U0r&n) ((case-lambda ((g$C$26951$U0r&n g$t$18372$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26952$U0r&n) ((case-lambda ((g$C$26950$U0r&n g$ls/false$18373$U0r&n) (if g$ls/false$18373$U0r&n (apply g$C$26950$U0r&n (case-lambda ((g$C$26949$U0r&n g$cls$18374$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26949$U0r&n '#f '"malformed define-record-type clause" g$cls$18374$U0r&n))) g$ls/false$18373$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26950$U0r&n '#f '"invalid syntax" g$t$18372$U0r&n)))) g$C$26951$U0r&n g$V$26952$U0r&n))) g$t$18372$U0r&n 'any))) g$C$26953$U0r&n g$t$18367$U0r&n)))) g$C$26954$U0r&n g$V$26955$U0r&n))) g$t$18367$U0r&n '(any . any)))) g$C$26956$U0r&n g$V$26959$U0r&n))) g$cls*$18365$U0r&n) (void g$C$26956$U0r&n)))) g$V$26957$U0r&n))) g$cls*$18365$U0r&n)))))) (case-lambda ((g$V$26963$U0r&n) (g$V$26963$U0r&n g$C$26961$U0r&n g$cls*$18361$U0r&n '()))) uninitialized))))) g$bless$17030$U0r&n '(fields parent parent-rtd protocol sealed opaque nongenerative)))) g$C$26964$U0r&n uninitialized uninitialized)))) ((case-lambda ((g$C$26968$U0r&n g$t$18356$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$26969$U0r&n) ((case-lambda ((g$C$26967$U0r&n g$ls/false$18357$U0r&n) (if g$ls/false$18357$U0r&n (apply g$C$26967$U0r&n (case-lambda ((g$C$26965$U0r&n g$namespec$18358$U0r&n g$clause*$18359$U0r&n) (g$verify-clauses$18355$U0r&n (case-lambda (g$IGNORE$26966$U0r&n (g$do-define-record$18354$U0r&n g$C$26965$U0r&n g$namespec$18358$U0r&n g$clause*$18359$U0r&n))) g$x$18338$U0r&n g$clause*$18359$U0r&n))) g$ls/false$18357$U0r&n) (g$syntax-violation$17186$U0r&n g$C$26967$U0r&n '#f '"invalid syntax" g$t$18356$U0r&n)))) g$C$26968$U0r&n g$V$26969$U0r&n))) g$t$18356$U0r&n '(_ any . each-any)))) g$C$26970$U0r&n g$x$18338$U0r&n)))))))))))))))))))) g$C$26971$U0r&n uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized)))))) (library-letrec*-identity 'g$define-record-type-macro$17061$U0r&n))) (g$define-condition-type-macro$17062$U0r&n g$define-condition-type-macro$20659$U0r&n ((case-lambda ((g$C$29729$U0r&n) (g$C$29729$U0r&n (case-lambda ((g$C$27013$U0r&n g$x$18594$U0r&n) ((case-lambda ((g$C$27012$U0r&n g$mkname$18595$U0r&n) (begin (set! g$mkname$18595$U0r&n (case-lambda ((g$C$26972$U0r&n g$name$18618$U0r&n g$suffix$18619$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$26973$U0r&n) (symbol->string (case-lambda ((g$V$26974$U0r&n) (string-append (case-lambda ((g$V$26975$U0r&n) (string->symbol (case-lambda ((g$V$26976$U0r&n) (g$datum->syntax$17188$U0r&n g$C$26972$U0r&n g$name$18618$U0r&n g$V$26976$U0r&n))) g$V$26975$U0r&n))) g$V$26974$U0r&n g$suffix$18619$U0r&n))) g$V$26973$U0r&n))) g$name$18618$U0r&n)))) ((case-lambda ((g$C$27010$U0r&n g$t$18596$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27011$U0r&n) ((case-lambda ((g$C$27007$U0r&n g$ls/false$18597$U0r&n) ((case-lambda ((g$J$27009$U0r&n) (if g$ls/false$18597$U0r&n (apply g$J$27009$U0r&n (case-lambda ((g$C$26977$U0r&n g$ctxt$18598$U0r&n g$name$18599$U0r&n g$super$18600$U0r&n g$constructor$18601$U0r&n g$predicate$18602$U0r&n g$field*$18603$U0r&n g$accessor*$18604$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$T$26978$U0r&n) (if g$T$26978$U0r&n (g$id?$16569$U0r&n (case-lambda ((g$T$26979$U0r&n) (if g$T$26979$U0r&n (g$id?$16569$U0r&n (case-lambda ((g$T$26980$U0r&n) (if g$T$26980$U0r&n (g$id?$16569$U0r&n (case-lambda ((g$T$26981$U0r&n) (if g$T$26981$U0r&n (g$for-all$12751$U0r&n (case-lambda ((g$T$26982$U0r&n) (if g$T$26982$U0r&n (g$for-all$12751$U0r&n g$C$26977$U0r&n g$id?$16569$U0r&n g$accessor*$18604$U0r&n) (g$C$26977$U0r&n '#f)))) g$id?$16569$U0r&n g$field*$18603$U0r&n) (g$C$26977$U0r&n '#f)))) g$predicate$18602$U0r&n) (g$C$26977$U0r&n '#f)))) g$constructor$18601$U0r&n) (g$C$26977$U0r&n '#f)))) g$super$18600$U0r&n) (g$C$26977$U0r&n '#f)))) g$name$18599$U0r&n))) g$ls/false$18597$U0r&n) (g$J$27009$U0r&n '#f)))) (case-lambda ((g$T$27008$U0r&n) (if g$T$27008$U0r&n (apply g$C$27007$U0r&n (case-lambda ((g$C$27005$U0r&n g$ctxt$18605$U0r&n g$name$18606$U0r&n g$super$18607$U0r&n g$constructor$18608$U0r&n g$predicate$18609$U0r&n g$field*$18610$U0r&n g$accessor*$18611$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27006$U0r&n) ((case-lambda ((g$C$26987$U0r&n g$aux-accessor*$18612$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$26988$U0r&n) (list (case-lambda ((g$V$26989$U0r&n) (list (case-lambda ((g$V$26990$U0r&n) (list (case-lambda ((g$V$26991$U0r&n) (cons (case-lambda ((g$V$26992$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$26993$U0r&n) (cons (case-lambda ((g$V$26994$U0r&n) (cons (case-lambda ((g$V$26995$U0r&n) (list (case-lambda ((g$V$26996$U0r&n) (cons (case-lambda ((g$V$26997$U0r&n) (gensym (case-lambda ((g$V$26998$U0r&n) (list (case-lambda ((g$V$26999$U0r&n) (cons (case-lambda ((g$V$27000$U0r&n) (cons (case-lambda ((g$V$27001$U0r&n) (cons (case-lambda ((g$V$27002$U0r&n) (cons (case-lambda ((g$V$27003$U0r&n) (g$bless$17030$U0r&n g$C$26987$U0r&n g$V$27003$U0r&n))) 'begin g$V$27002$U0r&n))) g$V$27001$U0r&n g$V$26992$U0r&n))) 'define-record-type g$V$27000$U0r&n))) g$V$26999$U0r&n g$V$26997$U0r&n))) g$name$18606$U0r&n g$constructor$18608$U0r&n g$V$26998$U0r&n)))))) g$V$26996$U0r&n g$V$26995$U0r&n))) 'parent g$super$18607$U0r&n))) g$V$26994$U0r&n '((nongenerative) (sealed #f) (opaque #f))))) 'fields g$V$26993$U0r&n))) (case-lambda ((g$C$26983$U0r&n g$field$18613$U0r&n g$aux$18614$U0r&n) (list g$C$26983$U0r&n 'immutable g$field$18613$U0r&n g$aux$18614$U0r&n))) g$field*$18610$U0r&n g$aux-accessor*$18612$U0r&n))) g$V$26991$U0r&n g$V$26988$U0r&n))) 'define g$predicate$18609$U0r&n g$V$26990$U0r&n))) 'condition-predicate g$V$26989$U0r&n))) 'record-type-descriptor g$name$18606$U0r&n))) (case-lambda ((g$C$26984$U0r&n g$accessor$18615$U0r&n g$aux$18616$U0r&n) (list (case-lambda ((g$V$26985$U0r&n) (list (case-lambda ((g$V$26986$U0r&n) (list g$C$26984$U0r&n 'define g$accessor$18615$U0r&n g$V$26986$U0r&n))) 'condition-accessor g$V$26985$U0r&n g$aux$18616$U0r&n))) 'record-type-descriptor g$name$18606$U0r&n))) g$accessor*$18611$U0r&n g$aux-accessor*$18612$U0r&n))) g$C$27005$U0r&n g$V$27006$U0r&n))) (case-lambda ((g$C$27004$U0r&n g$x$18617$U0r&n) (gensym g$C$27004$U0r&n))) g$accessor*$18611$U0r&n))) g$ls/false$18597$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27007$U0r&n '#f '"invalid syntax" g$t$18596$U0r&n))))))) g$C$27010$U0r&n g$V$27011$U0r&n))) g$t$18596$U0r&n '(any any any any any . #(each (any any)))))) g$C$27012$U0r&n g$x$18594$U0r&n)))) g$C$27013$U0r&n uninitialized)))))) (library-letrec*-identity 'g$define-condition-type-macro$17062$U0r&n))) (g$incorrect-usage-macro$17063$U0r&n g$incorrect-usage-macro$20660$U0r&n ((case-lambda ((g$C$29730$U0r&n) (g$C$29730$U0r&n (case-lambda ((g$C$27014$U0r&n g$e$18620$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27014$U0r&n '#f '"incorrect usage of auxiliary keyword" g$e$18620$U0r&n)))))) (library-letrec*-identity 'g$incorrect-usage-macro$17063$U0r&n))) (g$parameterize-macro$17064$U0r&n g$parameterize-macro$20661$U0r&n ((case-lambda ((g$C$29731$U0r&n) (g$C$29731$U0r&n (case-lambda ((g$C$27052$U0r&n g$e$18621$U0r&n) ((case-lambda ((g$C$27050$U0r&n g$t$18622$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27051$U0r&n) ((case-lambda ((g$C$27049$U0r&n g$ls/false$18623$U0r&n) (if g$ls/false$18623$U0r&n (apply g$C$27049$U0r&n (case-lambda ((g$C$27015$U0r&n g$b$18624$U0r&n g$b*$18625$U0r&n) (cons (case-lambda ((g$V$27016$U0r&n) (cons (case-lambda ((g$V$27017$U0r&n) (cons (case-lambda ((g$V$27018$U0r&n) (g$bless$17030$U0r&n g$C$27015$U0r&n g$V$27018$U0r&n))) 'let g$V$27017$U0r&n))) '() g$V$27016$U0r&n))) g$b$18624$U0r&n g$b*$18625$U0r&n))) g$ls/false$18623$U0r&n) ((case-lambda ((g$C$27047$U0r&n g$t$18626$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27048$U0r&n) ((case-lambda ((g$C$27046$U0r&n g$ls/false$18627$U0r&n) (if g$ls/false$18627$U0r&n (apply g$C$27046$U0r&n (case-lambda ((g$C$27043$U0r&n g$olhs*$18628$U0r&n g$orhs*$18629$U0r&n g$b$18630$U0r&n g$b*$18631$U0r&n) (g$generate-temporaries$17176$U0r&n (case-lambda ((g$V$27044$U0r&n) (g$generate-temporaries$17176$U0r&n (case-lambda ((g$V$27045$U0r&n) ((case-lambda ((g$C$27026$U0r&n g$lhs*$18632$U0r&n g$rhs*$18633$U0r&n) (append (case-lambda ((g$V$27027$U0r&n) (cons (case-lambda ((g$V$27028$U0r&n) (cons (case-lambda ((g$V$27029$U0r&n) (cons (case-lambda ((g$V$27030$U0r&n) (cons (case-lambda ((g$V$27031$U0r&n) (cons (case-lambda ((g$V$27032$U0r&n) (cons (case-lambda ((g$V$27033$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27034$U0r&n) (cons (case-lambda ((g$V$27035$U0r&n) (cons (case-lambda ((g$V$27036$U0r&n) (list (case-lambda ((g$V$27037$U0r&n) (list (case-lambda ((g$V$27038$U0r&n) (list (case-lambda ((g$V$27039$U0r&n) (append (case-lambda ((g$V$27040$U0r&n) (list (case-lambda ((g$V$27041$U0r&n) (cons (case-lambda ((g$V$27042$U0r&n) (g$bless$17030$U0r&n g$C$27026$U0r&n g$V$27042$U0r&n))) g$V$27041$U0r&n g$V$27027$U0r&n))) 'lambda g$V$27040$U0r&n g$V$27039$U0r&n))) g$lhs*$18632$U0r&n g$rhs*$18633$U0r&n))) 'let g$V$27038$U0r&n g$V$27033$U0r&n))) g$V$27037$U0r&n))) 'swap g$V$27036$U0r&n))) 'lambda g$V$27035$U0r&n))) '() g$V$27034$U0r&n))) (case-lambda ((g$C$27019$U0r&n g$lhs$18634$U0r&n g$rhs$18635$U0r&n) (cons (case-lambda ((g$V$27020$U0r&n) (cons (case-lambda ((g$V$27021$U0r&n) (list (case-lambda ((g$V$27022$U0r&n) (list (case-lambda ((g$V$27023$U0r&n) (list (case-lambda ((g$V$27024$U0r&n) (list (case-lambda ((g$V$27025$U0r&n) (list g$C$27019$U0r&n 'let g$V$27025$U0r&n g$V$27022$U0r&n g$V$27021$U0r&n))) g$V$27024$U0r&n))) 't g$V$27023$U0r&n))) g$lhs$18634$U0r&n))) g$lhs$18634$U0r&n g$rhs$18635$U0r&n))) 'set! g$V$27020$U0r&n))) g$rhs$18635$U0r&n '(t)))) g$lhs*$18632$U0r&n g$rhs*$18633$U0r&n))) 'dynamic-wind g$V$27032$U0r&n))) 'swap g$V$27031$U0r&n))) g$V$27030$U0r&n '(swap)))) 'lambda g$V$27029$U0r&n))) '() g$V$27028$U0r&n))) g$b$18630$U0r&n g$b*$18631$U0r&n))) g$olhs*$18628$U0r&n g$orhs*$18629$U0r&n))) g$C$27043$U0r&n g$V$27045$U0r&n g$V$27044$U0r&n))) g$olhs*$18628$U0r&n))) g$orhs*$18629$U0r&n))) g$ls/false$18627$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27046$U0r&n '#f '"invalid syntax" g$t$18626$U0r&n)))) g$C$27047$U0r&n g$V$27048$U0r&n))) g$t$18626$U0r&n '(_ #(each (any any)) any . each-any)))) g$C$27049$U0r&n g$t$18622$U0r&n)))) g$C$27050$U0r&n g$V$27051$U0r&n))) g$t$18622$U0r&n '(_ () any . each-any)))) g$C$27052$U0r&n g$e$18621$U0r&n)))))) (library-letrec*-identity 'g$parameterize-macro$17064$U0r&n))) (g$foreign-call-transformer$17065$U0r&n g$foreign-call-transformer$20662$U0r&n ((case-lambda ((g$C$29732$U0r&n) (g$C$29732$U0r&n (case-lambda ((g$C$27060$U0r&n g$e$18636$U0r&n g$r$18637$U0r&n g$mr$18638$U0r&n) ((case-lambda ((g$C$27058$U0r&n g$t$18639$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27059$U0r&n) ((case-lambda ((g$C$27057$U0r&n g$ls/false$18640$U0r&n) (if g$ls/false$18640$U0r&n (apply g$C$27057$U0r&n (case-lambda ((g$C$27053$U0r&n g$name$18641$U0r&n g$arg*$18642$U0r&n) (g$chi-expr*$17083$U0r&n (case-lambda ((g$V$27054$U0r&n) (g$chi-expr$17085$U0r&n (case-lambda ((g$V$27055$U0r&n) (cons (case-lambda ((g$V$27056$U0r&n) (cons g$C$27053$U0r&n 'foreign-call g$V$27056$U0r&n))) g$V$27055$U0r&n g$V$27054$U0r&n))) g$name$18641$U0r&n g$r$18637$U0r&n g$mr$18638$U0r&n))) g$arg*$18642$U0r&n g$r$18637$U0r&n g$mr$18638$U0r&n))) g$ls/false$18640$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27057$U0r&n '#f '"invalid syntax" g$t$18639$U0r&n)))) g$C$27058$U0r&n g$V$27059$U0r&n))) g$t$18639$U0r&n '(_ any . each-any)))) g$C$27060$U0r&n g$e$18636$U0r&n)))))) (library-letrec*-identity 'g$foreign-call-transformer$17065$U0r&n))) (g$convert-pattern$17066$U0r&n g$convert-pattern$20663$U0r&n ((case-lambda ((g$C$29733$U0r&n) (g$C$29733$U0r&n (case-lambda ((g$C$27153$U0r&n g$pattern$18643$U0r&n g$keys$18644$U0r&n) ((case-lambda ((g$C$27152$U0r&n g$cvt*$18645$U0r&n g$cvt$18646$U0r&n) (begin (set! g$cvt*$18645$U0r&n (case-lambda ((g$C$27070$U0r&n g$p*$18725$U0r&n g$n$18726$U0r&n g$ids$18727$U0r&n) (null? (case-lambda ((g$T$27071$U0r&n) (if g$T$27071$U0r&n (values g$C$27070$U0r&n '() g$ids$18727$U0r&n) (call-with-values g$C$27070$U0r&n (case-lambda ((g$C$27061$U0r&n) (cdr (case-lambda ((g$V$27062$U0r&n) (g$cvt*$18645$U0r&n g$C$27061$U0r&n g$V$27062$U0r&n g$n$18726$U0r&n g$ids$18727$U0r&n))) g$p*$18725$U0r&n))) (case-lambda ((g$C$27069$U0r&n g$y$18730$U0r&n g$ids$18731$U0r&n) ((case-lambda ((g$C$27068$U0r&n g$ids$18732$U0r&n g$y$18733$U0r&n) (call-with-values g$C$27068$U0r&n (case-lambda ((g$C$27063$U0r&n) (car (case-lambda ((g$V$27064$U0r&n) (g$cvt$18646$U0r&n g$C$27063$U0r&n g$V$27064$U0r&n g$n$18726$U0r&n g$ids$18732$U0r&n))) g$p*$18725$U0r&n))) (case-lambda ((g$C$27067$U0r&n g$x$18736$U0r&n g$ids$18737$U0r&n) ((case-lambda ((g$C$27065$U0r&n g$ids$18738$U0r&n g$x$18739$U0r&n) (cons (case-lambda ((g$V$27066$U0r&n) (values g$C$27065$U0r&n g$V$27066$U0r&n g$ids$18738$U0r&n))) g$x$18739$U0r&n g$y$18733$U0r&n))) g$C$27067$U0r&n g$ids$18737$U0r&n g$x$18736$U0r&n)))))) g$C$27069$U0r&n g$ids$18731$U0r&n g$y$18730$U0r&n))))))) g$p*$18725$U0r&n)))) (begin (set! g$cvt$18646$U0r&n (case-lambda ((g$C$27151$U0r&n g$p$18647$U0r&n g$n$18648$U0r&n g$ids$18649$U0r&n) ((case-lambda ((g$C$27149$U0r&n g$t$18650$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27150$U0r&n) ((case-lambda ((g$C$27146$U0r&n g$ls/false$18651$U0r&n) ((case-lambda ((g$J$27148$U0r&n) (if g$ls/false$18651$U0r&n (apply g$J$27148$U0r&n (case-lambda ((g$C$27072$U0r&n g$id$18652$U0r&n) (g$id?$16569$U0r&n g$C$27072$U0r&n g$id$18652$U0r&n))) g$ls/false$18651$U0r&n) (g$J$27148$U0r&n '#f)))) (case-lambda ((g$T$27147$U0r&n) (if g$T$27147$U0r&n (apply g$C$27146$U0r&n (case-lambda ((g$C$27073$U0r&n g$id$18653$U0r&n) (g$bound-id-member?$16576$U0r&n (case-lambda ((g$T$27074$U0r&n) (if g$T$27074$U0r&n (vector (case-lambda ((g$V$27075$U0r&n) (values g$C$27073$U0r&n g$V$27075$U0r&n g$ids$18649$U0r&n))) 'free-id g$p$18647$U0r&n) (g$scheme-stx$17010$U0r&n (case-lambda ((g$V$27076$U0r&n) (g$free-id=?$16573$U0r&n (case-lambda ((g$T$27077$U0r&n) (if g$T$27077$U0r&n (values g$C$27073$U0r&n '_ g$ids$18649$U0r&n) (cons (case-lambda ((g$V$27078$U0r&n) (cons (case-lambda ((g$V$27079$U0r&n) (values g$C$27073$U0r&n 'any g$V$27079$U0r&n))) g$V$27078$U0r&n g$ids$18649$U0r&n))) g$p$18647$U0r&n g$n$18648$U0r&n)))) g$p$18647$U0r&n g$V$27076$U0r&n))) '_)))) g$p$18647$U0r&n g$keys$18644$U0r&n))) g$ls/false$18651$U0r&n) ((case-lambda ((g$C$27144$U0r&n g$t$18654$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27145$U0r&n) ((case-lambda ((g$C$27141$U0r&n g$ls/false$18655$U0r&n) ((case-lambda ((g$J$27143$U0r&n) (if g$ls/false$18655$U0r&n (apply g$J$27143$U0r&n (case-lambda ((g$C$27080$U0r&n g$p$18656$U0r&n g$dots$18657$U0r&n) (g$ellipsis?$17068$U0r&n g$C$27080$U0r&n g$dots$18657$U0r&n))) g$ls/false$18655$U0r&n) (g$J$27143$U0r&n '#f)))) (case-lambda ((g$T$27142$U0r&n) (if g$T$27142$U0r&n (apply g$C$27141$U0r&n (case-lambda ((g$C$27088$U0r&n g$p$18658$U0r&n g$dots$18659$U0r&n) (call-with-values g$C$27088$U0r&n (case-lambda ((g$C$27081$U0r&n) (+ (case-lambda ((g$V$27082$U0r&n) (g$cvt$18646$U0r&n g$C$27081$U0r&n g$p$18658$U0r&n g$V$27082$U0r&n g$ids$18649$U0r&n))) g$n$18648$U0r&n '1))) (case-lambda ((g$C$27087$U0r&n g$p$18662$U0r&n g$ids$18663$U0r&n) ((case-lambda ((g$C$27083$U0r&n g$ids$18664$U0r&n g$p$18665$U0r&n) ((case-lambda ((g$J$27085$U0r&n) (eq? (case-lambda ((g$T$27086$U0r&n) (if g$T$27086$U0r&n (g$J$27085$U0r&n 'each-any) (vector g$J$27085$U0r&n 'each g$p$18665$U0r&n)))) g$p$18665$U0r&n 'any))) (case-lambda ((g$V$27084$U0r&n) (values g$C$27083$U0r&n g$V$27084$U0r&n g$ids$18664$U0r&n)))))) g$C$27087$U0r&n g$ids$18663$U0r&n g$p$18662$U0r&n)))))) g$ls/false$18655$U0r&n) ((case-lambda ((g$C$27139$U0r&n g$t$18666$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27140$U0r&n) ((case-lambda ((g$C$27136$U0r&n g$ls/false$18667$U0r&n) ((case-lambda ((g$J$27138$U0r&n) (if g$ls/false$18667$U0r&n (apply g$J$27138$U0r&n (case-lambda ((g$C$27089$U0r&n g$x$18668$U0r&n g$dots$18669$U0r&n g$ys$18670$U0r&n g$z$18671$U0r&n) (g$ellipsis?$17068$U0r&n g$C$27089$U0r&n g$dots$18669$U0r&n))) g$ls/false$18667$U0r&n) (g$J$27138$U0r&n '#f)))) (case-lambda ((g$T$27137$U0r&n) (if g$T$27137$U0r&n (apply g$C$27136$U0r&n (case-lambda ((g$C$27102$U0r&n g$x$18672$U0r&n g$dots$18673$U0r&n g$ys$18674$U0r&n g$z$18675$U0r&n) (call-with-values g$C$27102$U0r&n (case-lambda ((g$C$27090$U0r&n) (g$cvt$18646$U0r&n g$C$27090$U0r&n g$z$18675$U0r&n g$n$18648$U0r&n g$ids$18649$U0r&n))) (case-lambda ((g$C$27101$U0r&n g$z$18678$U0r&n g$ids$18679$U0r&n) ((case-lambda ((g$C$27100$U0r&n g$ids$18680$U0r&n g$z$18681$U0r&n) (call-with-values g$C$27100$U0r&n (case-lambda ((g$C$27091$U0r&n) (g$cvt*$18645$U0r&n g$C$27091$U0r&n g$ys$18674$U0r&n g$n$18648$U0r&n g$ids$18680$U0r&n))) (case-lambda ((g$C$27099$U0r&n g$ys$18684$U0r&n g$ids$18685$U0r&n) ((case-lambda ((g$C$27098$U0r&n g$ids$18686$U0r&n g$ys$18687$U0r&n) (call-with-values g$C$27098$U0r&n (case-lambda ((g$C$27092$U0r&n) (+ (case-lambda ((g$V$27093$U0r&n) (g$cvt$18646$U0r&n g$C$27092$U0r&n g$x$18672$U0r&n g$V$27093$U0r&n g$ids$18686$U0r&n))) g$n$18648$U0r&n '1))) (case-lambda ((g$C$27097$U0r&n g$x$18690$U0r&n g$ids$18691$U0r&n) ((case-lambda ((g$C$27094$U0r&n g$ids$18692$U0r&n g$x$18693$U0r&n) (g$reverse$13504$U0r&n (case-lambda ((g$V$27095$U0r&n) (vector (case-lambda ((g$V$27096$U0r&n) (values g$C$27094$U0r&n g$V$27096$U0r&n g$ids$18692$U0r&n))) 'each+ g$x$18693$U0r&n g$V$27095$U0r&n g$z$18681$U0r&n))) g$ys$18687$U0r&n))) g$C$27097$U0r&n g$ids$18691$U0r&n g$x$18690$U0r&n)))))) g$C$27099$U0r&n g$ids$18685$U0r&n g$ys$18684$U0r&n)))))) g$C$27101$U0r&n g$ids$18679$U0r&n g$z$18678$U0r&n)))))) g$ls/false$18667$U0r&n) ((case-lambda ((g$C$27134$U0r&n g$t$18694$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27135$U0r&n) ((case-lambda ((g$C$27133$U0r&n g$ls/false$18695$U0r&n) (if g$ls/false$18695$U0r&n (apply g$C$27133$U0r&n (case-lambda ((g$C$27110$U0r&n g$x$18696$U0r&n g$y$18697$U0r&n) (call-with-values g$C$27110$U0r&n (case-lambda ((g$C$27103$U0r&n) (g$cvt$18646$U0r&n g$C$27103$U0r&n g$y$18697$U0r&n g$n$18648$U0r&n g$ids$18649$U0r&n))) (case-lambda ((g$C$27109$U0r&n g$y$18700$U0r&n g$ids$18701$U0r&n) ((case-lambda ((g$C$27108$U0r&n g$ids$18702$U0r&n g$y$18703$U0r&n) (call-with-values g$C$27108$U0r&n (case-lambda ((g$C$27104$U0r&n) (g$cvt$18646$U0r&n g$C$27104$U0r&n g$x$18696$U0r&n g$n$18648$U0r&n g$ids$18702$U0r&n))) (case-lambda ((g$C$27107$U0r&n g$x$18706$U0r&n g$ids$18707$U0r&n) ((case-lambda ((g$C$27105$U0r&n g$ids$18708$U0r&n g$x$18709$U0r&n) (cons (case-lambda ((g$V$27106$U0r&n) (values g$C$27105$U0r&n g$V$27106$U0r&n g$ids$18708$U0r&n))) g$x$18709$U0r&n g$y$18703$U0r&n))) g$C$27107$U0r&n g$ids$18707$U0r&n g$x$18706$U0r&n)))))) g$C$27109$U0r&n g$ids$18701$U0r&n g$y$18700$U0r&n)))))) g$ls/false$18695$U0r&n) ((case-lambda ((g$C$27131$U0r&n g$t$18710$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27132$U0r&n) ((case-lambda ((g$C$27130$U0r&n g$ls/false$18711$U0r&n) (if g$ls/false$18711$U0r&n (apply g$C$27130$U0r&n (case-lambda ((g$C$27111$U0r&n) (values g$C$27111$U0r&n '() g$ids$18649$U0r&n))) g$ls/false$18711$U0r&n) ((case-lambda ((g$C$27128$U0r&n g$t$18712$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27129$U0r&n) ((case-lambda ((g$C$27125$U0r&n g$ls/false$18713$U0r&n) ((case-lambda ((g$J$27127$U0r&n) (if g$ls/false$18713$U0r&n (apply g$J$27127$U0r&n (case-lambda ((g$C$27112$U0r&n g$p$18714$U0r&n) (g$stx?$16541$U0r&n (case-lambda ((g$V$27113$U0r&n) (not g$C$27112$U0r&n g$V$27113$U0r&n))) g$p$18714$U0r&n))) g$ls/false$18713$U0r&n) (g$J$27127$U0r&n '#f)))) (case-lambda ((g$T$27126$U0r&n) (if g$T$27126$U0r&n (apply g$C$27125$U0r&n (case-lambda ((g$C$27118$U0r&n g$p$18715$U0r&n) (call-with-values g$C$27118$U0r&n (case-lambda ((g$C$27114$U0r&n) (g$cvt$18646$U0r&n g$C$27114$U0r&n g$p$18715$U0r&n g$n$18648$U0r&n g$ids$18649$U0r&n))) (case-lambda ((g$C$27117$U0r&n g$p$18718$U0r&n g$ids$18719$U0r&n) ((case-lambda ((g$C$27115$U0r&n g$ids$18720$U0r&n g$p$18721$U0r&n) (vector (case-lambda ((g$V$27116$U0r&n) (values g$C$27115$U0r&n g$V$27116$U0r&n g$ids$18720$U0r&n))) 'vector g$p$18721$U0r&n))) g$C$27117$U0r&n g$ids$18719$U0r&n g$p$18718$U0r&n)))))) g$ls/false$18713$U0r&n) ((case-lambda ((g$C$27123$U0r&n g$t$18722$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27124$U0r&n) ((case-lambda ((g$C$27122$U0r&n g$ls/false$18723$U0r&n) (if g$ls/false$18723$U0r&n (apply g$C$27122$U0r&n (case-lambda ((g$C$27119$U0r&n g$datum$18724$U0r&n) (g$stx->datum$16580$U0r&n (case-lambda ((g$V$27120$U0r&n) (vector (case-lambda ((g$V$27121$U0r&n) (values g$C$27119$U0r&n g$V$27121$U0r&n g$ids$18649$U0r&n))) 'atom g$V$27120$U0r&n))) g$datum$18724$U0r&n))) g$ls/false$18723$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27122$U0r&n '#f '"invalid syntax" g$t$18722$U0r&n)))) g$C$27123$U0r&n g$V$27124$U0r&n))) g$t$18722$U0r&n 'any))) g$C$27125$U0r&n g$t$18712$U0r&n))))))) g$C$27128$U0r&n g$V$27129$U0r&n))) g$t$18712$U0r&n '#(vector each-any)))) g$C$27130$U0r&n g$t$18710$U0r&n)))) g$C$27131$U0r&n g$V$27132$U0r&n))) g$t$18710$U0r&n '()))) g$C$27133$U0r&n g$t$18694$U0r&n)))) g$C$27134$U0r&n g$V$27135$U0r&n))) g$t$18694$U0r&n '(any . any)))) g$C$27136$U0r&n g$t$18666$U0r&n))))))) g$C$27139$U0r&n g$V$27140$U0r&n))) g$t$18666$U0r&n '(any any . #(each+ any () any))))) g$C$27141$U0r&n g$t$18654$U0r&n))))))) g$C$27144$U0r&n g$V$27145$U0r&n))) g$t$18654$U0r&n '(any any)))) g$C$27146$U0r&n g$t$18650$U0r&n))))))) g$C$27149$U0r&n g$V$27150$U0r&n))) g$t$18650$U0r&n 'any))) g$C$27151$U0r&n g$p$18647$U0r&n)))) (g$cvt$18646$U0r&n g$C$27152$U0r&n g$pattern$18643$U0r&n '0 '()))))) g$C$27153$U0r&n uninitialized uninitialized)))))) (library-letrec*-identity 'g$convert-pattern$17066$U0r&n))) (g$syntax-dispatch$17067$U0r&n g$syntax-dispatch$20664$U0r&n ((case-lambda ((g$C$29734$U0r&n) (g$C$29734$U0r&n (case-lambda ((g$C$27321$U0r&n g$e$18740$U0r&n g$p$18741$U0r&n) ((case-lambda ((g$C$27320$U0r&n g$stx^$18742$U0r&n g$match-each$18743$U0r&n g$match-each+$18744$U0r&n g$match-each-any$18745$U0r&n g$match-empty$18746$U0r&n g$combine$18747$U0r&n g$match*$18748$U0r&n g$match$18749$U0r&n) (begin (set! g$stx^$18742$U0r&n (case-lambda ((g$C$27154$U0r&n g$e$18850$U0r&n g$m*$18851$U0r&n g$s*$18852$U0r&n g$ae*$18853$U0r&n) ((case-lambda ((g$J$27156$U0r&n) (null? (case-lambda ((g$T$27157$U0r&n) (if g$T$27157$U0r&n (null? (case-lambda ((g$T$27158$U0r&n) (if g$T$27158$U0r&n (null? g$J$27156$U0r&n g$ae*$18853$U0r&n) (g$J$27156$U0r&n '#f)))) g$s*$18852$U0r&n) (g$J$27156$U0r&n '#f)))) g$m*$18851$U0r&n))) (case-lambda ((g$T$27155$U0r&n) (if g$T$27155$U0r&n (g$C$27154$U0r&n g$e$18850$U0r&n) (g$mkstx$16557$U0r&n g$C$27154$U0r&n g$e$18850$U0r&n g$m*$18851$U0r&n g$s*$18852$U0r&n g$ae*$18853$U0r&n)))))))) (begin (set! g$match-each$18743$U0r&n (case-lambda ((g$C$27167$U0r&n g$e$18834$U0r&n g$p$18835$U0r&n g$m*$18836$U0r&n g$s*$18837$U0r&n g$ae*$18838$U0r&n) (pair? (case-lambda ((g$T$27168$U0r&n) (if g$T$27168$U0r&n (car (case-lambda ((g$V$27169$U0r&n) (g$match$18749$U0r&n (case-lambda ((g$V$27170$U0r&n) ((case-lambda ((g$C$27160$U0r&n g$first$18839$U0r&n) (if g$first$18839$U0r&n (cdr (case-lambda ((g$V$27161$U0r&n) (g$match-each$18743$U0r&n (case-lambda ((g$V$27162$U0r&n) ((case-lambda ((g$C$27159$U0r&n g$rest$18840$U0r&n) (if g$rest$18840$U0r&n (cons g$C$27159$U0r&n g$first$18839$U0r&n g$rest$18840$U0r&n) (g$C$27159$U0r&n '#f)))) g$C$27160$U0r&n g$V$27162$U0r&n))) g$V$27161$U0r&n g$p$18835$U0r&n g$m*$18836$U0r&n g$s*$18837$U0r&n g$ae*$18838$U0r&n))) g$e$18834$U0r&n) (g$C$27160$U0r&n '#f)))) g$C$27167$U0r&n g$V$27170$U0r&n))) g$V$27169$U0r&n g$p$18835$U0r&n g$m*$18836$U0r&n g$s*$18837$U0r&n g$ae*$18838$U0r&n '()))) g$e$18834$U0r&n) (null? (case-lambda ((g$T$27171$U0r&n) (if g$T$27171$U0r&n (g$C$27167$U0r&n '()) (g$stx?$16541$U0r&n (case-lambda ((g$T$27172$U0r&n) (if g$T$27172$U0r&n (g$top-marked?$16503$U0r&n (case-lambda ((g$V$27173$U0r&n) (not (case-lambda ((g$T$27174$U0r&n) (if g$T$27174$U0r&n (call-with-values g$C$27167$U0r&n (case-lambda ((g$C$27163$U0r&n) (g$join-wraps$16556$U0r&n g$C$27163$U0r&n g$m*$18836$U0r&n g$s*$18837$U0r&n g$ae*$18838$U0r&n g$e$18834$U0r&n))) (case-lambda ((g$C$27166$U0r&n g$m*$18844$U0r&n g$s*$18845$U0r&n g$ae*$18846$U0r&n) ((case-lambda ((g$C$27164$U0r&n g$ae*$18847$U0r&n g$s*$18848$U0r&n g$m*$18849$U0r&n) (g$stx-expr$16543$U0r&n (case-lambda ((g$V$27165$U0r&n) (g$match-each$18743$U0r&n g$C$27164$U0r&n g$V$27165$U0r&n g$p$18835$U0r&n g$m*$18849$U0r&n g$s*$18848$U0r&n g$ae*$18847$U0r&n))) g$e$18834$U0r&n))) g$C$27166$U0r&n g$ae*$18846$U0r&n g$s*$18845$U0r&n g$m*$18844$U0r&n)))) (g$C$27167$U0r&n '#f)))) g$V$27173$U0r&n))) g$m*$18836$U0r&n) (annotation? (case-lambda ((g$T$27175$U0r&n) (if g$T$27175$U0r&n (annotation-expression (case-lambda ((g$V$27176$U0r&n) (g$match-each$18743$U0r&n g$C$27167$U0r&n g$V$27176$U0r&n g$p$18835$U0r&n g$m*$18836$U0r&n g$s*$18837$U0r&n g$ae*$18838$U0r&n))) g$e$18834$U0r&n) (g$C$27167$U0r&n '#f)))) g$e$18834$U0r&n)))) g$e$18834$U0r&n)))) g$e$18834$U0r&n)))) g$e$18834$U0r&n)))) (begin (set! g$match-each+$18744$U0r&n (case-lambda ((g$C$27205$U0r&n g$e$18802$U0r&n g$x-pat$18803$U0r&n g$y-pat$18804$U0r&n g$z-pat$18805$U0r&n g$m*$18806$U0r&n g$s*$18807$U0r&n g$ae*$18808$U0r&n g$r$18809$U0r&n) ((case-lambda ((g$C$27204$U0r&n g$f$18810$U0r&n) ((case-lambda ((g$C$27178$U0r&n g$f$27177$U0r&n) (begin (set! g$f$18810$U0r&n g$f$27177$U0r&n) (g$C$27178$U0r&n g$f$18810$U0r&n)))) g$C$27204$U0r&n (case-lambda ((g$C$27196$U0r&n g$e$18811$U0r&n g$m*$18812$U0r&n g$s*$18813$U0r&n g$ae*$18814$U0r&n) (pair? (case-lambda ((g$T$27197$U0r&n) (if g$T$27197$U0r&n (call-with-values g$C$27196$U0r&n (case-lambda ((g$C$27179$U0r&n) (cdr (case-lambda ((g$V$27180$U0r&n) (g$f$18810$U0r&n g$C$27179$U0r&n g$V$27180$U0r&n g$m*$18812$U0r&n g$s*$18813$U0r&n g$ae*$18814$U0r&n))) g$e$18811$U0r&n))) (case-lambda ((g$C$27191$U0r&n g$xr*$18818$U0r&n g$y-pat$18819$U0r&n g$r$18820$U0r&n) ((case-lambda ((g$C$27183$U0r&n g$r$18821$U0r&n g$y-pat$18822$U0r&n g$xr*$18823$U0r&n) (if g$r$18821$U0r&n (null? (case-lambda ((g$T$27184$U0r&n) (if g$T$27184$U0r&n (car (case-lambda ((g$V$27185$U0r&n) (g$match$18749$U0r&n (case-lambda ((g$V$27186$U0r&n) ((case-lambda ((g$C$27181$U0r&n g$xr$18824$U0r&n) (if g$xr$18824$U0r&n (cons (case-lambda ((g$V$27182$U0r&n) (values g$C$27181$U0r&n g$V$27182$U0r&n g$y-pat$18822$U0r&n g$r$18821$U0r&n))) g$xr$18824$U0r&n g$xr*$18823$U0r&n) (values g$C$27181$U0r&n '#f '#f '#f)))) g$C$27183$U0r&n g$V$27186$U0r&n))) g$V$27185$U0r&n g$x-pat$18803$U0r&n g$m*$18812$U0r&n g$s*$18813$U0r&n g$ae*$18814$U0r&n '()))) g$e$18811$U0r&n) (car (case-lambda ((g$V$27187$U0r&n) (car (case-lambda ((g$V$27188$U0r&n) (g$match$18749$U0r&n (case-lambda ((g$V$27189$U0r&n) (cdr (case-lambda ((g$V$27190$U0r&n) (values g$C$27183$U0r&n '() g$V$27190$U0r&n g$V$27189$U0r&n))) g$y-pat$18822$U0r&n))) g$V$27188$U0r&n g$V$27187$U0r&n g$m*$18812$U0r&n g$s*$18813$U0r&n g$ae*$18814$U0r&n g$r$18821$U0r&n))) g$e$18811$U0r&n))) g$y-pat$18822$U0r&n)))) g$y-pat$18822$U0r&n) (values g$C$27183$U0r&n '#f '#f '#f)))) g$C$27191$U0r&n g$r$18820$U0r&n g$y-pat$18819$U0r&n g$xr*$18818$U0r&n)))) (g$stx?$16541$U0r&n (case-lambda ((g$T$27198$U0r&n) (if g$T$27198$U0r&n (g$top-marked?$16503$U0r&n (case-lambda ((g$T$27199$U0r&n) (if g$T$27199$U0r&n (g$match$18749$U0r&n (case-lambda ((g$V$27200$U0r&n) (values g$C$27196$U0r&n '() g$y-pat$18804$U0r&n g$V$27200$U0r&n))) g$e$18811$U0r&n g$z-pat$18805$U0r&n g$m*$18812$U0r&n g$s*$18813$U0r&n g$ae*$18814$U0r&n g$r$18809$U0r&n) (call-with-values g$C$27196$U0r&n (case-lambda ((g$C$27192$U0r&n) (g$join-wraps$16556$U0r&n g$C$27192$U0r&n g$m*$18812$U0r&n g$s*$18813$U0r&n g$ae*$18814$U0r&n g$e$18811$U0r&n))) (case-lambda ((g$C$27195$U0r&n g$m*$18828$U0r&n g$s*$18829$U0r&n g$ae*$18830$U0r&n) ((case-lambda ((g$C$27193$U0r&n g$ae*$18831$U0r&n g$s*$18832$U0r&n g$m*$18833$U0r&n) (g$stx-expr$16543$U0r&n (case-lambda ((g$V$27194$U0r&n) (g$f$18810$U0r&n g$C$27193$U0r&n g$V$27194$U0r&n g$m*$18833$U0r&n g$s*$18832$U0r&n g$ae*$18831$U0r&n))) g$e$18811$U0r&n))) g$C$27195$U0r&n g$ae*$18830$U0r&n g$s*$18829$U0r&n g$m*$18828$U0r&n))))))) g$m*$18812$U0r&n) (annotation? (case-lambda ((g$T$27201$U0r&n) (if g$T$27201$U0r&n (annotation-expression (case-lambda ((g$V$27202$U0r&n) (g$f$18810$U0r&n g$C$27196$U0r&n g$V$27202$U0r&n g$m*$18812$U0r&n g$s*$18813$U0r&n g$ae*$18814$U0r&n))) g$e$18811$U0r&n) (g$match$18749$U0r&n (case-lambda ((g$V$27203$U0r&n) (values g$C$27196$U0r&n '() g$y-pat$18804$U0r&n g$V$27203$U0r&n))) g$e$18811$U0r&n g$z-pat$18805$U0r&n g$m*$18812$U0r&n g$s*$18813$U0r&n g$ae*$18814$U0r&n g$r$18809$U0r&n)))) g$e$18811$U0r&n)))) g$e$18811$U0r&n)))) g$e$18811$U0r&n)))))) (case-lambda ((g$V$27206$U0r&n) (g$V$27206$U0r&n g$C$27205$U0r&n g$e$18802$U0r&n g$m*$18806$U0r&n g$s*$18807$U0r&n g$ae*$18808$U0r&n))) uninitialized)))) (begin (set! g$match-each-any$18745$U0r&n (case-lambda ((g$C$27214$U0r&n g$e$18788$U0r&n g$m*$18789$U0r&n g$s*$18790$U0r&n g$ae*$18791$U0r&n) (pair? (case-lambda ((g$T$27215$U0r&n) (if g$T$27215$U0r&n (cdr (case-lambda ((g$V$27216$U0r&n) (g$match-each-any$18745$U0r&n (case-lambda ((g$V$27217$U0r&n) ((case-lambda ((g$C$27207$U0r&n g$l$18792$U0r&n) (if g$l$18792$U0r&n (car (case-lambda ((g$V$27208$U0r&n) (g$stx^$18742$U0r&n (case-lambda ((g$V$27209$U0r&n) (cons g$C$27207$U0r&n g$V$27209$U0r&n g$l$18792$U0r&n))) g$V$27208$U0r&n g$m*$18789$U0r&n g$s*$18790$U0r&n g$ae*$18791$U0r&n))) g$e$18788$U0r&n) (g$C$27207$U0r&n '#f)))) g$C$27214$U0r&n g$V$27217$U0r&n))) g$V$27216$U0r&n g$m*$18789$U0r&n g$s*$18790$U0r&n g$ae*$18791$U0r&n))) g$e$18788$U0r&n) (null? (case-lambda ((g$T$27218$U0r&n) (if g$T$27218$U0r&n (g$C$27214$U0r&n '()) (g$stx?$16541$U0r&n (case-lambda ((g$T$27219$U0r&n) (if g$T$27219$U0r&n (g$top-marked?$16503$U0r&n (case-lambda ((g$V$27220$U0r&n) (not (case-lambda ((g$T$27221$U0r&n) (if g$T$27221$U0r&n (call-with-values g$C$27214$U0r&n (case-lambda ((g$C$27210$U0r&n) (g$join-wraps$16556$U0r&n g$C$27210$U0r&n g$m*$18789$U0r&n g$s*$18790$U0r&n g$ae*$18791$U0r&n g$e$18788$U0r&n))) (case-lambda ((g$C$27213$U0r&n g$m*$18796$U0r&n g$s*$18797$U0r&n g$ae*$18798$U0r&n) ((case-lambda ((g$C$27211$U0r&n g$ae*$18799$U0r&n g$s*$18800$U0r&n g$m*$18801$U0r&n) (g$stx-expr$16543$U0r&n (case-lambda ((g$V$27212$U0r&n) (g$match-each-any$18745$U0r&n g$C$27211$U0r&n g$V$27212$U0r&n g$m*$18801$U0r&n g$s*$18800$U0r&n g$ae*$18799$U0r&n))) g$e$18788$U0r&n))) g$C$27213$U0r&n g$ae*$18798$U0r&n g$s*$18797$U0r&n g$m*$18796$U0r&n)))) (g$C$27214$U0r&n '#f)))) g$V$27220$U0r&n))) g$m*$18789$U0r&n) (annotation? (case-lambda ((g$T$27222$U0r&n) (if g$T$27222$U0r&n (annotation-expression (case-lambda ((g$V$27223$U0r&n) (g$match-each-any$18745$U0r&n g$C$27214$U0r&n g$V$27223$U0r&n g$m*$18789$U0r&n g$s*$18790$U0r&n g$ae*$18791$U0r&n))) g$e$18788$U0r&n) (g$C$27214$U0r&n '#f)))) g$e$18788$U0r&n)))) g$e$18788$U0r&n)))) g$e$18788$U0r&n)))) g$e$18788$U0r&n)))) (begin (set! g$match-empty$18746$U0r&n (case-lambda ((g$C$27238$U0r&n g$p$18785$U0r&n g$r$18786$U0r&n) (null? (case-lambda ((g$T$27239$U0r&n) (if g$T$27239$U0r&n (g$C$27238$U0r&n g$r$18786$U0r&n) (eq? (case-lambda ((g$T$27240$U0r&n) (if g$T$27240$U0r&n (g$C$27238$U0r&n g$r$18786$U0r&n) (eq? (case-lambda ((g$T$27241$U0r&n) (if g$T$27241$U0r&n (cons g$C$27238$U0r&n '() g$r$18786$U0r&n) (pair? (case-lambda ((g$T$27242$U0r&n) (if g$T$27242$U0r&n (cdr (case-lambda ((g$V$27243$U0r&n) (g$match-empty$18746$U0r&n (case-lambda ((g$V$27244$U0r&n) (car (case-lambda ((g$V$27245$U0r&n) (g$match-empty$18746$U0r&n g$C$27238$U0r&n g$V$27245$U0r&n g$V$27244$U0r&n))) g$p$18785$U0r&n))) g$V$27243$U0r&n g$r$18786$U0r&n))) g$p$18785$U0r&n) (eq? (case-lambda ((g$T$27246$U0r&n) (if g$T$27246$U0r&n (cons g$C$27238$U0r&n '() g$r$18786$U0r&n) (vector-ref (case-lambda ((g$V$27247$U0r&n) ((case-lambda ((g$C$27224$U0r&n g$t$18787$U0r&n) (eqv? (case-lambda ((g$T$27225$U0r&n) (if g$T$27225$U0r&n (vector-ref (case-lambda ((g$V$27226$U0r&n) (g$match-empty$18746$U0r&n g$C$27224$U0r&n g$V$27226$U0r&n g$r$18786$U0r&n))) g$p$18785$U0r&n '1) (eqv? (case-lambda ((g$T$27227$U0r&n) (if g$T$27227$U0r&n (vector-ref (case-lambda ((g$V$27228$U0r&n) (g$match-empty$18746$U0r&n (case-lambda ((g$V$27229$U0r&n) (vector-ref (case-lambda ((g$V$27230$U0r&n) (g$reverse$13504$U0r&n (case-lambda ((g$V$27231$U0r&n) (g$match-empty$18746$U0r&n (case-lambda ((g$V$27232$U0r&n) (vector-ref (case-lambda ((g$V$27233$U0r&n) (g$match-empty$18746$U0r&n g$C$27224$U0r&n g$V$27233$U0r&n g$V$27232$U0r&n))) g$p$18785$U0r&n '1))) g$V$27231$U0r&n g$V$27229$U0r&n))) g$V$27230$U0r&n))) g$p$18785$U0r&n '2))) g$V$27228$U0r&n g$r$18786$U0r&n))) g$p$18785$U0r&n '3) (g$memv$12746$U0r&n (case-lambda ((g$T$27234$U0r&n) (if g$T$27234$U0r&n (g$C$27224$U0r&n g$r$18786$U0r&n) (g$memv$12746$U0r&n (case-lambda ((g$T$27235$U0r&n) (if g$T$27235$U0r&n (g$C$27224$U0r&n g$r$18786$U0r&n) (eqv? (case-lambda ((g$T$27236$U0r&n) (if g$T$27236$U0r&n (vector-ref (case-lambda ((g$V$27237$U0r&n) (g$match-empty$18746$U0r&n g$C$27224$U0r&n g$V$27237$U0r&n g$r$18786$U0r&n))) g$p$18785$U0r&n '1) (g$assertion-violation$13786$U0r&n g$C$27224$U0r&n 'syntax-dispatch '"invalid pattern" g$p$18785$U0r&n)))) g$t$18787$U0r&n 'vector)))) g$t$18787$U0r&n '(scheme-id atom))))) g$t$18787$U0r&n '(free-id atom))))) g$t$18787$U0r&n 'each+)))) g$t$18787$U0r&n 'each))) g$C$27238$U0r&n g$V$27247$U0r&n))) g$p$18785$U0r&n '0)))) g$p$18785$U0r&n 'each-any)))) g$p$18785$U0r&n)))) g$p$18785$U0r&n 'any)))) g$p$18785$U0r&n '_)))) g$p$18785$U0r&n)))) (begin (set! g$combine$18747$U0r&n (case-lambda ((g$C$27248$U0r&n g$r*$18783$U0r&n g$r$18784$U0r&n) (car (case-lambda ((g$V$27249$U0r&n) (null? (case-lambda ((g$T$27250$U0r&n) (if g$T$27250$U0r&n (g$C$27248$U0r&n g$r$18784$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27251$U0r&n) (g$combine$18747$U0r&n (case-lambda ((g$V$27252$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27253$U0r&n) (cons g$C$27248$U0r&n g$V$27253$U0r&n g$V$27252$U0r&n))) car g$r*$18783$U0r&n))) g$V$27251$U0r&n g$r$18784$U0r&n))) cdr g$r*$18783$U0r&n)))) g$V$27249$U0r&n))) g$r*$18783$U0r&n)))) (begin (set! g$match*$18748$U0r&n (case-lambda ((g$C$27293$U0r&n g$e$18765$U0r&n g$p$18766$U0r&n g$m*$18767$U0r&n g$s*$18768$U0r&n g$ae*$18769$U0r&n g$r$18770$U0r&n) (null? (case-lambda ((g$T$27294$U0r&n) (if g$T$27294$U0r&n (null? (case-lambda ((g$T$27295$U0r&n) (if g$T$27295$U0r&n (g$C$27293$U0r&n g$r$18770$U0r&n) (g$C$27293$U0r&n '#f)))) g$e$18765$U0r&n) (pair? (case-lambda ((g$T$27296$U0r&n) (if g$T$27296$U0r&n (pair? (case-lambda ((g$T$27297$U0r&n) (if g$T$27297$U0r&n (cdr (case-lambda ((g$V$27298$U0r&n) (cdr (case-lambda ((g$V$27299$U0r&n) (g$match$18749$U0r&n (case-lambda ((g$V$27300$U0r&n) (car (case-lambda ((g$V$27301$U0r&n) (car (case-lambda ((g$V$27302$U0r&n) (g$match$18749$U0r&n g$C$27293$U0r&n g$V$27302$U0r&n g$V$27301$U0r&n g$m*$18767$U0r&n g$s*$18768$U0r&n g$ae*$18769$U0r&n g$V$27300$U0r&n))) g$e$18765$U0r&n))) g$p$18766$U0r&n))) g$V$27299$U0r&n g$V$27298$U0r&n g$m*$18767$U0r&n g$s*$18768$U0r&n g$ae*$18769$U0r&n g$r$18770$U0r&n))) g$e$18765$U0r&n))) g$p$18766$U0r&n) (g$C$27293$U0r&n '#f)))) g$e$18765$U0r&n) (eq? (case-lambda ((g$T$27303$U0r&n) (if g$T$27303$U0r&n (g$match-each-any$18745$U0r&n (case-lambda ((g$V$27304$U0r&n) ((case-lambda ((g$C$27254$U0r&n g$l$18771$U0r&n) (if g$l$18771$U0r&n (cons g$C$27254$U0r&n g$l$18771$U0r&n g$r$18770$U0r&n) (g$C$27254$U0r&n '#f)))) g$C$27293$U0r&n g$V$27304$U0r&n))) g$e$18765$U0r&n g$m*$18767$U0r&n g$s*$18768$U0r&n g$ae*$18769$U0r&n) (vector-ref (case-lambda ((g$V$27305$U0r&n) ((case-lambda ((g$C$27265$U0r&n g$t$18772$U0r&n) (eqv? (case-lambda ((g$T$27266$U0r&n) (if g$T$27266$U0r&n (null? (case-lambda ((g$T$27267$U0r&n) (if g$T$27267$U0r&n (vector-ref (case-lambda ((g$V$27268$U0r&n) (g$match-empty$18746$U0r&n g$C$27265$U0r&n g$V$27268$U0r&n g$r$18770$U0r&n))) g$p$18766$U0r&n '1) (vector-ref (case-lambda ((g$V$27269$U0r&n) (g$match-each$18743$U0r&n (case-lambda ((g$V$27270$U0r&n) ((case-lambda ((g$C$27255$U0r&n g$r*$18773$U0r&n) (if g$r*$18773$U0r&n (g$combine$18747$U0r&n g$C$27255$U0r&n g$r*$18773$U0r&n g$r$18770$U0r&n) (g$C$27255$U0r&n '#f)))) g$C$27265$U0r&n g$V$27270$U0r&n))) g$e$18765$U0r&n g$V$27269$U0r&n g$m*$18767$U0r&n g$s*$18768$U0r&n g$ae*$18769$U0r&n))) g$p$18766$U0r&n '1)))) g$e$18765$U0r&n) (eqv? (case-lambda ((g$T$27271$U0r&n) (if g$T$27271$U0r&n (g$symbol?$13496$U0r&n (case-lambda ((g$T$27272$U0r&n) (if g$T$27272$U0r&n (g$top-marked?$16503$U0r&n (case-lambda ((g$T$27273$U0r&n) (if g$T$27273$U0r&n (vector-ref (case-lambda ((g$V$27274$U0r&n) (g$stx^$18742$U0r&n (case-lambda ((g$V$27275$U0r&n) (g$free-id=?$16573$U0r&n (case-lambda ((g$T$27276$U0r&n) (if g$T$27276$U0r&n (g$C$27265$U0r&n g$r$18770$U0r&n) (g$C$27265$U0r&n '#f)))) g$V$27275$U0r&n g$V$27274$U0r&n))) g$e$18765$U0r&n g$m*$18767$U0r&n g$s*$18768$U0r&n g$ae*$18769$U0r&n))) g$p$18766$U0r&n '1) (g$C$27265$U0r&n '#f)))) g$m*$18767$U0r&n) (g$C$27265$U0r&n '#f)))) g$e$18765$U0r&n) (eqv? (case-lambda ((g$T$27277$U0r&n) (if g$T$27277$U0r&n (g$symbol?$13496$U0r&n (case-lambda ((g$T$27278$U0r&n) (if g$T$27278$U0r&n (g$top-marked?$16503$U0r&n (case-lambda ((g$T$27279$U0r&n) (if g$T$27279$U0r&n (vector-ref (case-lambda ((g$V$27280$U0r&n) (g$scheme-stx$17010$U0r&n (case-lambda ((g$V$27281$U0r&n) (g$stx^$18742$U0r&n (case-lambda ((g$V$27282$U0r&n) (g$free-id=?$16573$U0r&n (case-lambda ((g$T$27283$U0r&n) (if g$T$27283$U0r&n (g$C$27265$U0r&n g$r$18770$U0r&n) (g$C$27265$U0r&n '#f)))) g$V$27282$U0r&n g$V$27281$U0r&n))) g$e$18765$U0r&n g$m*$18767$U0r&n g$s*$18768$U0r&n g$ae*$18769$U0r&n))) g$V$27280$U0r&n))) g$p$18766$U0r&n '1) (g$C$27265$U0r&n '#f)))) g$m*$18767$U0r&n) (g$C$27265$U0r&n '#f)))) g$e$18765$U0r&n) (eqv? (case-lambda ((g$T$27284$U0r&n) (if g$T$27284$U0r&n (call-with-values g$C$27265$U0r&n (case-lambda ((g$C$27256$U0r&n) (vector-ref (case-lambda ((g$V$27257$U0r&n) (vector-ref (case-lambda ((g$V$27258$U0r&n) (vector-ref (case-lambda ((g$V$27259$U0r&n) (g$match-each+$18744$U0r&n g$C$27256$U0r&n g$e$18765$U0r&n g$V$27259$U0r&n g$V$27258$U0r&n g$V$27257$U0r&n g$m*$18767$U0r&n g$s*$18768$U0r&n g$ae*$18769$U0r&n g$r$18770$U0r&n))) g$p$18766$U0r&n '1))) g$p$18766$U0r&n '2))) g$p$18766$U0r&n '3))) (case-lambda ((g$C$27264$U0r&n g$xr*$18777$U0r&n g$y-pat$18778$U0r&n g$r$18779$U0r&n) ((case-lambda ((g$C$27260$U0r&n g$r$18780$U0r&n g$y-pat$18781$U0r&n g$xr*$18782$U0r&n) (if g$r$18780$U0r&n (null? (case-lambda ((g$T$27261$U0r&n) (if g$T$27261$U0r&n (null? (case-lambda ((g$T$27262$U0r&n) (if g$T$27262$U0r&n (vector-ref (case-lambda ((g$V$27263$U0r&n) (g$match-empty$18746$U0r&n g$C$27260$U0r&n g$V$27263$U0r&n g$r$18780$U0r&n))) g$p$18766$U0r&n '1) (g$combine$18747$U0r&n g$C$27260$U0r&n g$xr*$18782$U0r&n g$r$18780$U0r&n)))) g$xr*$18782$U0r&n) (g$C$27260$U0r&n '#f)))) g$y-pat$18781$U0r&n) (g$C$27260$U0r&n '#f)))) g$C$27264$U0r&n g$r$18779$U0r&n g$y-pat$18778$U0r&n g$xr*$18777$U0r&n)))) (eqv? (case-lambda ((g$T$27285$U0r&n) (if g$T$27285$U0r&n (g$strip$16579$U0r&n (case-lambda ((g$V$27286$U0r&n) (vector-ref (case-lambda ((g$V$27287$U0r&n) (equal? (case-lambda ((g$T$27288$U0r&n) (if g$T$27288$U0r&n (g$C$27265$U0r&n g$r$18770$U0r&n) (g$C$27265$U0r&n '#f)))) g$V$27287$U0r&n g$V$27286$U0r&n))) g$p$18766$U0r&n '1))) g$e$18765$U0r&n g$m*$18767$U0r&n) (eqv? (case-lambda ((g$T$27289$U0r&n) (if g$T$27289$U0r&n (g$vector?$13494$U0r&n (case-lambda ((g$T$27290$U0r&n) (if g$T$27290$U0r&n (vector-ref (case-lambda ((g$V$27291$U0r&n) (vector->list (case-lambda ((g$V$27292$U0r&n) (g$match$18749$U0r&n g$C$27265$U0r&n g$V$27292$U0r&n g$V$27291$U0r&n g$m*$18767$U0r&n g$s*$18768$U0r&n g$ae*$18769$U0r&n g$r$18770$U0r&n))) g$e$18765$U0r&n))) g$p$18766$U0r&n '1) (g$C$27265$U0r&n '#f)))) g$e$18765$U0r&n) (g$assertion-violation$13786$U0r&n g$C$27265$U0r&n 'syntax-dispatch '"invalid pattern" g$p$18766$U0r&n)))) g$t$18772$U0r&n 'vector)))) g$t$18772$U0r&n 'atom)))) g$t$18772$U0r&n 'each+)))) g$t$18772$U0r&n 'scheme-id)))) g$t$18772$U0r&n 'free-id)))) g$t$18772$U0r&n 'each))) g$C$27293$U0r&n g$V$27305$U0r&n))) g$p$18766$U0r&n '0)))) g$p$18766$U0r&n 'each-any)))) g$p$18766$U0r&n)))) g$p$18766$U0r&n)))) (begin (set! g$match$18749$U0r&n (case-lambda ((g$C$27310$U0r&n g$e$18750$U0r&n g$p$18751$U0r&n g$m*$18752$U0r&n g$s*$18753$U0r&n g$ae*$18754$U0r&n g$r$18755$U0r&n) (not (case-lambda ((g$T$27311$U0r&n) (if g$T$27311$U0r&n (g$C$27310$U0r&n '#f) (eq? (case-lambda ((g$T$27312$U0r&n) (if g$T$27312$U0r&n (g$C$27310$U0r&n g$r$18755$U0r&n) (eq? (case-lambda ((g$T$27313$U0r&n) (if g$T$27313$U0r&n (g$stx^$18742$U0r&n (case-lambda ((g$V$27314$U0r&n) (cons g$C$27310$U0r&n g$V$27314$U0r&n g$r$18755$U0r&n))) g$e$18750$U0r&n g$m*$18752$U0r&n g$s*$18753$U0r&n g$ae*$18754$U0r&n) (g$stx?$16541$U0r&n (case-lambda ((g$T$27315$U0r&n) (if g$T$27315$U0r&n (g$top-marked?$16503$U0r&n (case-lambda ((g$V$27316$U0r&n) (not (case-lambda ((g$T$27317$U0r&n) (if g$T$27317$U0r&n (call-with-values g$C$27310$U0r&n (case-lambda ((g$C$27306$U0r&n) (g$join-wraps$16556$U0r&n g$C$27306$U0r&n g$m*$18752$U0r&n g$s*$18753$U0r&n g$ae*$18754$U0r&n g$e$18750$U0r&n))) (case-lambda ((g$C$27309$U0r&n g$m*$18759$U0r&n g$s*$18760$U0r&n g$ae*$18761$U0r&n) ((case-lambda ((g$C$27307$U0r&n g$ae*$18762$U0r&n g$s*$18763$U0r&n g$m*$18764$U0r&n) (g$stx-expr$16543$U0r&n (case-lambda ((g$V$27308$U0r&n) (g$match$18749$U0r&n g$C$27307$U0r&n g$V$27308$U0r&n g$p$18751$U0r&n g$m*$18764$U0r&n g$s*$18763$U0r&n g$ae*$18762$U0r&n g$r$18755$U0r&n))) g$e$18750$U0r&n))) g$C$27309$U0r&n g$ae*$18761$U0r&n g$s*$18760$U0r&n g$m*$18759$U0r&n)))) (g$C$27310$U0r&n '#f)))) g$V$27316$U0r&n))) g$m*$18752$U0r&n) (annotation? (case-lambda ((g$T$27318$U0r&n) (if g$T$27318$U0r&n (annotation-expression (case-lambda ((g$V$27319$U0r&n) (g$match$18749$U0r&n g$C$27310$U0r&n g$V$27319$U0r&n g$p$18751$U0r&n g$m*$18752$U0r&n g$s*$18753$U0r&n g$ae*$18754$U0r&n g$r$18755$U0r&n))) g$e$18750$U0r&n) (g$match*$18748$U0r&n g$C$27310$U0r&n g$e$18750$U0r&n g$p$18751$U0r&n g$m*$18752$U0r&n g$s*$18753$U0r&n g$ae*$18754$U0r&n g$r$18755$U0r&n)))) g$e$18750$U0r&n)))) g$e$18750$U0r&n)))) g$p$18751$U0r&n 'any)))) g$p$18751$U0r&n '_)))) g$r$18755$U0r&n)))) (g$match$18749$U0r&n g$C$27320$U0r&n g$e$18740$U0r&n g$p$18741$U0r&n '() '() '() '()))))))))))) g$C$27321$U0r&n uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized)))))) (library-letrec*-identity 'g$syntax-dispatch$17067$U0r&n))) (g$ellipsis?$17068$U0r&n g$ellipsis?$20665$U0r&n ((case-lambda ((g$C$29735$U0r&n) (g$C$29735$U0r&n (case-lambda ((g$C$27322$U0r&n g$x$18854$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$T$27323$U0r&n) (if g$T$27323$U0r&n (g$scheme-stx$17010$U0r&n (case-lambda ((g$V$27324$U0r&n) (g$free-id=?$16573$U0r&n g$C$27322$U0r&n g$x$18854$U0r&n g$V$27324$U0r&n))) '...) (g$C$27322$U0r&n '#f)))) g$x$18854$U0r&n)))))) (library-letrec*-identity 'g$ellipsis?$17068$U0r&n))) (g$underscore?$17069$U0r&n g$underscore?$20666$U0r&n ((case-lambda ((g$C$29736$U0r&n) (g$C$29736$U0r&n (case-lambda ((g$C$27325$U0r&n g$x$18855$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$T$27326$U0r&n) (if g$T$27326$U0r&n (g$scheme-stx$17010$U0r&n (case-lambda ((g$V$27327$U0r&n) (g$free-id=?$16573$U0r&n g$C$27325$U0r&n g$x$18855$U0r&n g$V$27327$U0r&n))) '_) (g$C$27325$U0r&n '#f)))) g$x$18855$U0r&n)))))) (library-letrec*-identity 'g$underscore?$17069$U0r&n))) (g$verify-literals$17070$U0r&n g$verify-literals$20667$U0r&n ((case-lambda ((g$C$29737$U0r&n) (g$C$29737$U0r&n (case-lambda ((g$C$27335$U0r&n g$lits$18856$U0r&n g$expr$18857$U0r&n) (g$for-each$12754$U0r&n g$C$27335$U0r&n (case-lambda ((g$C$27331$U0r&n g$x$18858$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$V$27332$U0r&n) (not (case-lambda ((g$V$27333$U0r&n) ((case-lambda ((g$C$27329$U0r&n g$t$18859$U0r&n) (if g$t$18859$U0r&n (g$C$27329$U0r&n g$t$18859$U0r&n) (g$ellipsis?$17068$U0r&n (case-lambda ((g$V$27330$U0r&n) ((case-lambda ((g$C$27328$U0r&n g$t$18860$U0r&n) (if g$t$18860$U0r&n (g$C$27328$U0r&n g$t$18860$U0r&n) (g$underscore?$17069$U0r&n g$C$27328$U0r&n g$x$18858$U0r&n)))) g$C$27329$U0r&n g$V$27330$U0r&n))) g$x$18858$U0r&n)))) (case-lambda ((g$T$27334$U0r&n) (if g$T$27334$U0r&n (g$syntax-violation$17186$U0r&n g$C$27331$U0r&n '#f '"invalid literal" g$expr$18857$U0r&n g$x$18858$U0r&n) (void g$C$27331$U0r&n)))) g$V$27333$U0r&n))) g$V$27332$U0r&n))) g$x$18858$U0r&n))) g$lits$18856$U0r&n)))))) (library-letrec*-identity 'g$verify-literals$17070$U0r&n))) (g$syntax-case-transformer$17071$U0r&n g$syntax-case-transformer$20668$U0r&n ((case-lambda ((g$C$29738$U0r&n) ((case-lambda ((g$C$27451$U0r&n) ((case-lambda ((g$C$27450$U0r&n g$build-dispatch-call$18861$U0r&n g$invalid-ids-error$18862$U0r&n g$gen-clause$18863$U0r&n g$gen-syntax-case$18864$U0r&n) (begin (set! g$build-dispatch-call$18861$U0r&n (case-lambda ((g$C$27351$U0r&n g$pvars$18918$U0r&n g$expr$18919$U0r&n g$y$18920$U0r&n g$r$18921$U0r&n g$mr$18922$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27352$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27353$U0r&n) ((case-lambda ((g$C$27348$U0r&n g$ids$18923$U0r&n g$levels$18924$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27349$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27350$U0r&n) ((case-lambda ((g$C$27341$U0r&n g$labels$18925$U0r&n g$new-vars$18926$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27342$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27343$U0r&n) (append (case-lambda ((g$V$27344$U0r&n) (g$make-full-rib$16535$U0r&n (case-lambda ((g$V$27345$U0r&n) (g$add-subst$16559$U0r&n (case-lambda ((g$V$27346$U0r&n) (g$chi-expr$17085$U0r&n (case-lambda ((g$V$27347$U0r&n) ((case-lambda ((g$C$27336$U0r&n g$body$18927$U0r&n) (g$build-lambda$16491$U0r&n (case-lambda ((g$V$27337$U0r&n) (list g$C$27336$U0r&n '(primitive apply) g$V$27337$U0r&n g$y$18920$U0r&n))) '#f g$new-vars$18926$U0r&n g$body$18927$U0r&n))) g$C$27341$U0r&n g$V$27347$U0r&n))) g$V$27346$U0r&n g$V$27344$U0r&n g$mr$18922$U0r&n))) g$V$27345$U0r&n g$expr$18919$U0r&n))) g$ids$18923$U0r&n g$labels$18925$U0r&n))) g$V$27343$U0r&n g$r$18921$U0r&n))) (case-lambda ((g$C$27338$U0r&n g$label$18928$U0r&n g$var$18929$U0r&n g$level$18930$U0r&n) (cons (case-lambda ((g$V$27339$U0r&n) (g$make-binding$16585$U0r&n (case-lambda ((g$V$27340$U0r&n) (cons g$C$27338$U0r&n g$label$18928$U0r&n g$V$27340$U0r&n))) 'syntax g$V$27339$U0r&n))) g$var$18929$U0r&n g$level$18930$U0r&n))) g$labels$18925$U0r&n g$new-vars$18926$U0r&n g$V$27342$U0r&n))) cdr g$pvars$18918$U0r&n))) g$C$27348$U0r&n g$V$27350$U0r&n g$V$27349$U0r&n))) g$gen-label$16506$U0r&n g$ids$18923$U0r&n))) g$gen-lexical$16504$U0r&n g$ids$18923$U0r&n))) g$C$27351$U0r&n g$V$27353$U0r&n g$V$27352$U0r&n))) car g$pvars$18918$U0r&n))) cdr g$pvars$18918$U0r&n)))) (begin (set! g$invalid-ids-error$18862$U0r&n (case-lambda ((g$C$27368$U0r&n g$id*$18912$U0r&n g$e$18913$U0r&n g$class$18914$U0r&n) ((case-lambda ((g$C$27367$U0r&n g$find$18915$U0r&n) ((case-lambda ((g$C$27355$U0r&n g$find$27354$U0r&n) (begin (set! g$find$18915$U0r&n g$find$27354$U0r&n) (g$C$27355$U0r&n g$find$18915$U0r&n)))) g$C$27367$U0r&n (case-lambda ((g$C$27356$U0r&n g$id*$18916$U0r&n g$ok*$18917$U0r&n) (null? (case-lambda ((g$T$27357$U0r&n) (if g$T$27357$U0r&n (g$syntax-violation$17186$U0r&n g$C$27356$U0r&n '#f '"invalid syntax" g$e$18913$U0r&n) (car (case-lambda ((g$V$27358$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$T$27359$U0r&n) (if g$T$27359$U0r&n (car (case-lambda ((g$V$27360$U0r&n) (g$bound-id-member?$16576$U0r&n (case-lambda ((g$T$27361$U0r&n) (if g$T$27361$U0r&n (car (case-lambda ((g$V$27362$U0r&n) (g$syntax-error$17183$U0r&n g$C$27356$U0r&n g$V$27362$U0r&n '"duplicate " g$class$18914$U0r&n))) g$id*$18916$U0r&n) (car (case-lambda ((g$V$27363$U0r&n) (cons (case-lambda ((g$V$27364$U0r&n) (cdr (case-lambda ((g$V$27365$U0r&n) (g$find$18915$U0r&n g$C$27356$U0r&n g$V$27365$U0r&n g$V$27364$U0r&n))) g$id*$18916$U0r&n))) g$V$27363$U0r&n g$ok*$18917$U0r&n))) g$id*$18916$U0r&n)))) g$V$27360$U0r&n g$ok*$18917$U0r&n))) g$id*$18916$U0r&n) (car (case-lambda ((g$V$27366$U0r&n) (g$syntax-error$17183$U0r&n g$C$27356$U0r&n g$V$27366$U0r&n '"invalid " g$class$18914$U0r&n))) g$id*$18916$U0r&n)))) g$V$27358$U0r&n))) g$id*$18916$U0r&n)))) g$id*$18916$U0r&n)))))) (case-lambda ((g$V$27369$U0r&n) (g$V$27369$U0r&n g$C$27368$U0r&n g$id*$18912$U0r&n '()))) uninitialized)))) (begin (set! g$gen-clause$18863$U0r&n (case-lambda ((g$C$27400$U0r&n g$x$18892$U0r&n g$keys$18893$U0r&n g$clauses$18894$U0r&n g$r$18895$U0r&n g$mr$18896$U0r&n g$pat$18897$U0r&n g$fender$18898$U0r&n g$expr$18899$U0r&n) (call-with-values g$C$27400$U0r&n (case-lambda ((g$C$27370$U0r&n) (g$convert-pattern$17066$U0r&n g$C$27370$U0r&n g$pat$18897$U0r&n g$keys$18893$U0r&n))) (case-lambda ((g$C$27399$U0r&n g$p$18902$U0r&n g$pvars$18903$U0r&n) ((case-lambda ((g$C$27391$U0r&n g$pvars$18904$U0r&n g$p$18905$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27392$U0r&n) (g$distinct-bound-ids?$16575$U0r&n (case-lambda ((g$V$27393$U0r&n) (not (case-lambda ((g$T$27394$U0r&n) (if g$T$27394$U0r&n (g$map$12753$U0r&n (case-lambda ((g$V$27395$U0r&n) (g$invalid-ids-error$18862$U0r&n g$C$27391$U0r&n g$V$27395$U0r&n g$pat$18897$U0r&n '"pattern variable"))) car g$pvars$18904$U0r&n) (g$for-all$12751$U0r&n (case-lambda ((g$V$27396$U0r&n) (not (case-lambda ((g$T$27397$U0r&n) (if g$T$27397$U0r&n (g$syntax-violation$17186$U0r&n g$C$27391$U0r&n '#f '"misplaced ellipsis in syntax-case pattern" g$pat$18897$U0r&n) (g$gen-lexical$16504$U0r&n (case-lambda ((g$V$27398$U0r&n) ((case-lambda ((g$C$27386$U0r&n g$y$18907$U0r&n) ((case-lambda ((g$J$27388$U0r&n) (eq? (case-lambda ((g$T$27389$U0r&n) (if g$T$27389$U0r&n (g$J$27388$U0r&n g$y$18907$U0r&n) (g$build-dispatch-call$18861$U0r&n (case-lambda ((g$V$27390$U0r&n) ((case-lambda ((g$C$27384$U0r&n g$call$18911$U0r&n) (list (case-lambda ((g$V$27385$U0r&n) (list g$C$27384$U0r&n 'if g$y$18907$U0r&n g$call$18911$U0r&n g$V$27385$U0r&n))) 'quote '#f))) g$J$27388$U0r&n g$V$27390$U0r&n))) g$pvars$18904$U0r&n g$fender$18898$U0r&n g$y$18907$U0r&n g$r$18895$U0r&n g$mr$18896$U0r&n)))) g$fender$18898$U0r&n '#t))) (case-lambda ((g$V$27387$U0r&n) ((case-lambda ((g$C$27382$U0r&n g$test$18908$U0r&n) (g$build-dispatch-call$18861$U0r&n (case-lambda ((g$V$27383$U0r&n) ((case-lambda ((g$C$27380$U0r&n g$conseq$18909$U0r&n) (g$gen-syntax-case$18864$U0r&n (case-lambda ((g$V$27381$U0r&n) ((case-lambda ((g$C$27374$U0r&n g$altern$18910$U0r&n) (list (case-lambda ((g$V$27375$U0r&n) (list (case-lambda ((g$V$27376$U0r&n) (list (case-lambda ((g$V$27377$U0r&n) (list (case-lambda ((g$V$27378$U0r&n) (g$build-lambda$16491$U0r&n (case-lambda ((g$V$27379$U0r&n) (list g$C$27374$U0r&n g$V$27379$U0r&n g$V$27376$U0r&n))) '#f g$V$27378$U0r&n g$V$27377$U0r&n))) g$y$18907$U0r&n))) 'if g$test$18908$U0r&n g$conseq$18909$U0r&n g$altern$18910$U0r&n))) '(primitive syntax-dispatch) g$x$18892$U0r&n g$V$27375$U0r&n))) 'quote g$p$18905$U0r&n))) g$C$27380$U0r&n g$V$27381$U0r&n))) g$x$18892$U0r&n g$keys$18893$U0r&n g$clauses$18894$U0r&n g$r$18895$U0r&n g$mr$18896$U0r&n))) g$C$27382$U0r&n g$V$27383$U0r&n))) g$pvars$18904$U0r&n g$expr$18899$U0r&n g$y$18907$U0r&n g$r$18895$U0r&n g$mr$18896$U0r&n))) g$C$27386$U0r&n g$V$27387$U0r&n)))))) g$C$27391$U0r&n g$V$27398$U0r&n))) 'tmp)))) g$V$27396$U0r&n))) (case-lambda ((g$C$27371$U0r&n g$x$18906$U0r&n) (car (case-lambda ((g$V$27372$U0r&n) (g$ellipsis?$17068$U0r&n (case-lambda ((g$V$27373$U0r&n) (not g$C$27371$U0r&n g$V$27373$U0r&n))) g$V$27372$U0r&n))) g$x$18906$U0r&n))) g$pvars$18904$U0r&n)))) g$V$27393$U0r&n))) g$V$27392$U0r&n))) car g$pvars$18904$U0r&n))) g$C$27399$U0r&n g$pvars$18903$U0r&n g$p$18902$U0r&n))))))) (begin (set! g$gen-syntax-case$18864$U0r&n (case-lambda ((g$C$27434$U0r&n g$x$18875$U0r&n g$keys$18876$U0r&n g$clauses$18877$U0r&n g$r$18878$U0r&n g$mr$18879$U0r&n) (null? (case-lambda ((g$T$27435$U0r&n) (if g$T$27435$U0r&n (list g$C$27434$U0r&n '(primitive syntax-error) g$x$18875$U0r&n) (car (case-lambda ((g$V$27436$U0r&n) ((case-lambda ((g$C$27432$U0r&n g$t$18880$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27433$U0r&n) ((case-lambda ((g$C$27431$U0r&n g$ls/false$18881$U0r&n) (if g$ls/false$18881$U0r&n (apply g$C$27431$U0r&n (case-lambda ((g$C$27414$U0r&n g$pat$18882$U0r&n g$expr$18883$U0r&n) ((case-lambda ((g$J$27421$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$T$27422$U0r&n) (if g$T$27422$U0r&n (g$bound-id-member?$16576$U0r&n (case-lambda ((g$V$27423$U0r&n) (not (case-lambda ((g$T$27424$U0r&n) (if g$T$27424$U0r&n (g$ellipsis?$17068$U0r&n (case-lambda ((g$V$27425$U0r&n) (not g$J$27421$U0r&n g$V$27425$U0r&n))) g$pat$18882$U0r&n) (g$J$27421$U0r&n '#f)))) g$V$27423$U0r&n))) g$pat$18882$U0r&n g$keys$18876$U0r&n) (g$J$27421$U0r&n '#f)))) g$pat$18882$U0r&n))) (case-lambda ((g$T$27415$U0r&n) (if g$T$27415$U0r&n (g$scheme-stx$17010$U0r&n (case-lambda ((g$V$27416$U0r&n) (g$free-id=?$16573$U0r&n (case-lambda ((g$T$27417$U0r&n) (if g$T$27417$U0r&n (g$chi-expr$17085$U0r&n g$C$27414$U0r&n g$expr$18883$U0r&n g$r$18878$U0r&n g$mr$18879$U0r&n) (g$gen-lexical$16504$U0r&n (case-lambda ((g$V$27418$U0r&n) (g$gen-label$16506$U0r&n (case-lambda ((g$V$27419$U0r&n) ((case-lambda ((g$C$27404$U0r&n g$lab$18884$U0r&n g$lex$18885$U0r&n) (cons (case-lambda ((g$V$27405$U0r&n) (g$make-binding$16585$U0r&n (case-lambda ((g$V$27406$U0r&n) (cons (case-lambda ((g$V$27407$U0r&n) (cons (case-lambda ((g$V$27408$U0r&n) (list (case-lambda ((g$V$27409$U0r&n) (list (case-lambda ((g$V$27410$U0r&n) (g$make-full-rib$16535$U0r&n (case-lambda ((g$V$27411$U0r&n) (g$add-subst$16559$U0r&n (case-lambda ((g$V$27412$U0r&n) (g$chi-expr$17085$U0r&n (case-lambda ((g$V$27413$U0r&n) ((case-lambda ((g$C$27401$U0r&n g$body$18886$U0r&n) (list (case-lambda ((g$V$27402$U0r&n) (g$build-lambda$16491$U0r&n (case-lambda ((g$V$27403$U0r&n) (list g$C$27401$U0r&n g$V$27403$U0r&n g$x$18875$U0r&n))) '#f g$V$27402$U0r&n g$body$18886$U0r&n))) g$lex$18885$U0r&n))) g$C$27404$U0r&n g$V$27413$U0r&n))) g$V$27412$U0r&n g$V$27408$U0r&n g$mr$18879$U0r&n))) g$V$27411$U0r&n g$expr$18883$U0r&n))) g$V$27410$U0r&n g$V$27409$U0r&n))) g$pat$18882$U0r&n))) g$lab$18884$U0r&n))) g$V$27407$U0r&n g$r$18878$U0r&n))) g$lab$18884$U0r&n g$V$27406$U0r&n))) 'syntax g$V$27405$U0r&n))) g$lex$18885$U0r&n '0))) g$C$27414$U0r&n g$V$27419$U0r&n g$V$27418$U0r&n))) g$pat$18882$U0r&n))) g$pat$18882$U0r&n)))) g$pat$18882$U0r&n g$V$27416$U0r&n))) '_) (cdr (case-lambda ((g$V$27420$U0r&n) (g$gen-clause$18863$U0r&n g$C$27414$U0r&n g$x$18875$U0r&n g$keys$18876$U0r&n g$V$27420$U0r&n g$r$18878$U0r&n g$mr$18879$U0r&n g$pat$18882$U0r&n '#t g$expr$18883$U0r&n))) g$clauses$18877$U0r&n))))))) g$ls/false$18881$U0r&n) ((case-lambda ((g$C$27429$U0r&n g$t$18887$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27430$U0r&n) ((case-lambda ((g$C$27428$U0r&n g$ls/false$18888$U0r&n) (if g$ls/false$18888$U0r&n (apply g$C$27428$U0r&n (case-lambda ((g$C$27426$U0r&n g$pat$18889$U0r&n g$fender$18890$U0r&n g$expr$18891$U0r&n) (cdr (case-lambda ((g$V$27427$U0r&n) (g$gen-clause$18863$U0r&n g$C$27426$U0r&n g$x$18875$U0r&n g$keys$18876$U0r&n g$V$27427$U0r&n g$r$18878$U0r&n g$mr$18879$U0r&n g$pat$18889$U0r&n g$fender$18890$U0r&n g$expr$18891$U0r&n))) g$clauses$18877$U0r&n))) g$ls/false$18888$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27428$U0r&n '#f '"invalid syntax" g$t$18887$U0r&n)))) g$C$27429$U0r&n g$V$27430$U0r&n))) g$t$18887$U0r&n '(any any any)))) g$C$27431$U0r&n g$t$18880$U0r&n)))) g$C$27432$U0r&n g$V$27433$U0r&n))) g$t$18880$U0r&n '(any any)))) g$C$27434$U0r&n g$V$27436$U0r&n))) g$clauses$18877$U0r&n)))) g$clauses$18877$U0r&n)))) (g$C$27450$U0r&n (case-lambda ((g$C$27449$U0r&n g$e$18865$U0r&n g$r$18866$U0r&n g$mr$18867$U0r&n) ((case-lambda ((g$C$27447$U0r&n g$t$18868$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27448$U0r&n) ((case-lambda ((g$C$27446$U0r&n g$ls/false$18869$U0r&n) (if g$ls/false$18869$U0r&n (apply g$C$27446$U0r&n (case-lambda ((g$C$27443$U0r&n g$expr$18870$U0r&n g$keys$18871$U0r&n g$clauses$18872$U0r&n) (g$verify-literals$17070$U0r&n (case-lambda (g$IGNORE$27444$U0r&n (g$gen-lexical$16504$U0r&n (case-lambda ((g$V$27445$U0r&n) ((case-lambda ((g$C$27441$U0r&n g$x$18873$U0r&n) (g$gen-syntax-case$18864$U0r&n (case-lambda ((g$V$27442$U0r&n) ((case-lambda ((g$C$27437$U0r&n g$body$18874$U0r&n) (g$chi-expr$17085$U0r&n (case-lambda ((g$V$27438$U0r&n) (list (case-lambda ((g$V$27439$U0r&n) (g$build-lambda$16491$U0r&n (case-lambda ((g$V$27440$U0r&n) (list g$C$27437$U0r&n g$V$27440$U0r&n g$V$27438$U0r&n))) '#f g$V$27439$U0r&n g$body$18874$U0r&n))) g$x$18873$U0r&n))) g$expr$18870$U0r&n g$r$18866$U0r&n g$mr$18867$U0r&n))) g$C$27441$U0r&n g$V$27442$U0r&n))) g$x$18873$U0r&n g$keys$18871$U0r&n g$clauses$18872$U0r&n g$r$18866$U0r&n g$mr$18867$U0r&n))) g$C$27443$U0r&n g$V$27445$U0r&n))) 'tmp))) g$keys$18871$U0r&n g$e$18865$U0r&n))) g$ls/false$18869$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27446$U0r&n '#f '"invalid syntax" g$t$18868$U0r&n)))) g$C$27447$U0r&n g$V$27448$U0r&n))) g$t$18868$U0r&n '(_ any each-any . each-any)))) g$C$27449$U0r&n g$e$18865$U0r&n)))))))))) g$C$27451$U0r&n uninitialized uninitialized uninitialized uninitialized))) g$C$29738$U0r&n))) (library-letrec*-identity 'g$syntax-case-transformer$17071$U0r&n))) (g$ellipsis-map$17072$U0r&n g$ellipsis-map$20669$U0r&n ((case-lambda ((g$C$29739$U0r&n) (g$C$29739$U0r&n (case-lambda ((g$C$27471$U0r&n g$proc$18931$U0r&n g$ls$18932$U0r&n . g$ls*$18933$U0r&n) ((case-lambda ((g$C$27461$U0r&n g$who$18934$U0r&n) (begin (set! g$who$18934$U0r&n '...) ((case-lambda ((g$J$27468$U0r&n) (list? (case-lambda ((g$V$27469$U0r&n) (not (case-lambda ((g$T$27470$U0r&n) (if g$T$27470$U0r&n (g$assertion-violation$13786$U0r&n g$J$27468$U0r&n g$who$18934$U0r&n '"not a list" g$ls$18932$U0r&n) (void g$J$27468$U0r&n)))) g$V$27469$U0r&n))) g$ls$18932$U0r&n))) (case-lambda (g$IGNORE$27462$U0r&n ((case-lambda ((g$J$27464$U0r&n) (null? (case-lambda ((g$V$27465$U0r&n) (not (case-lambda ((g$T$27466$U0r&n) (if g$T$27466$U0r&n (length (case-lambda ((g$V$27467$U0r&n) ((case-lambda ((g$C$27460$U0r&n g$n$18935$U0r&n) (g$for-each$12754$U0r&n g$C$27460$U0r&n (case-lambda ((g$C$27452$U0r&n g$x$18936$U0r&n) ((case-lambda ((g$J$27457$U0r&n) (list? (case-lambda ((g$V$27458$U0r&n) (not (case-lambda ((g$T$27459$U0r&n) (if g$T$27459$U0r&n (g$assertion-violation$13786$U0r&n g$J$27457$U0r&n g$who$18934$U0r&n '"not a list" g$x$18936$U0r&n) (void g$J$27457$U0r&n)))) g$V$27458$U0r&n))) g$x$18936$U0r&n))) (case-lambda (g$IGNORE$27453$U0r&n (length (case-lambda ((g$V$27454$U0r&n) (= (case-lambda ((g$V$27455$U0r&n) (not (case-lambda ((g$T$27456$U0r&n) (if g$T$27456$U0r&n (g$assertion-violation$13786$U0r&n g$C$27452$U0r&n g$who$18934$U0r&n '"length mismatch" g$ls$18932$U0r&n g$x$18936$U0r&n) (void g$C$27452$U0r&n)))) g$V$27455$U0r&n))) g$V$27454$U0r&n g$n$18935$U0r&n))) g$x$18936$U0r&n)))))) g$ls*$18933$U0r&n))) g$J$27464$U0r&n g$V$27467$U0r&n))) g$ls$18932$U0r&n) (void g$J$27464$U0r&n)))) g$V$27465$U0r&n))) g$ls*$18933$U0r&n))) (case-lambda (g$IGNORE$27463$U0r&n (apply g$C$27461$U0r&n g$map$12753$U0r&n g$proc$18931$U0r&n g$ls$18932$U0r&n g$ls*$18933$U0r&n)))))))))) g$C$27471$U0r&n uninitialized)))))) (library-letrec*-identity 'g$ellipsis-map$17072$U0r&n))) (g$syntax-transformer$17073$U0r&n g$syntax-transformer$20670$U0r&n ((case-lambda ((g$C$29740$U0r&n) ((case-lambda ((g$C$27695$U0r&n) ((case-lambda ((g$C$27694$U0r&n g$gen-syntax$18937$U0r&n g$gen-ref$18938$U0r&n g$gen-append$18939$U0r&n g$gen-mappend$18940$U0r&n g$gen-map$18941$U0r&n g$gen-cons$18942$U0r&n g$gen-vector$18943$U0r&n g$regen$18944$U0r&n) (begin (set! g$gen-syntax$18937$U0r&n (case-lambda ((g$C$27587$U0r&n g$src$18997$U0r&n g$e$18998$U0r&n g$r$18999$U0r&n g$maps$19000$U0r&n g$ellipsis?$19001$U0r&n g$vec?$19002$U0r&n) ((case-lambda ((g$C$27585$U0r&n g$t$19003$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27586$U0r&n) ((case-lambda ((g$C$27582$U0r&n g$ls/false$19004$U0r&n) ((case-lambda ((g$J$27584$U0r&n) (if g$ls/false$19004$U0r&n (apply g$J$27584$U0r&n (case-lambda ((g$C$27472$U0r&n g$dots$19005$U0r&n) (g$ellipsis?$19001$U0r&n g$C$27472$U0r&n g$dots$19005$U0r&n))) g$ls/false$19004$U0r&n) (g$J$27584$U0r&n '#f)))) (case-lambda ((g$T$27583$U0r&n) (if g$T$27583$U0r&n (apply g$C$27582$U0r&n (case-lambda ((g$C$27473$U0r&n g$dots$19006$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27473$U0r&n '#f '"misplaced ellipsis in syntax form" g$src$18997$U0r&n))) g$ls/false$19004$U0r&n) ((case-lambda ((g$C$27580$U0r&n g$t$19007$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27581$U0r&n) ((case-lambda ((g$C$27577$U0r&n g$ls/false$19008$U0r&n) ((case-lambda ((g$J$27579$U0r&n) (if g$ls/false$19008$U0r&n (apply g$J$27579$U0r&n (case-lambda ((g$C$27474$U0r&n g$id$19009$U0r&n) (g$id?$16569$U0r&n g$C$27474$U0r&n g$id$19009$U0r&n))) g$ls/false$19008$U0r&n) (g$J$27579$U0r&n '#f)))) (case-lambda ((g$T$27578$U0r&n) (if g$T$27578$U0r&n (apply g$C$27577$U0r&n (case-lambda ((g$C$27489$U0r&n g$id$19010$U0r&n) (g$id->label$16582$U0r&n (case-lambda ((g$V$27490$U0r&n) ((case-lambda ((g$C$27487$U0r&n g$label$19011$U0r&n) (g$label->binding$16584$U0r&n (case-lambda ((g$V$27488$U0r&n) ((case-lambda ((g$C$27483$U0r&n g$b$19012$U0r&n) (g$binding-type$16586$U0r&n (case-lambda ((g$V$27484$U0r&n) (eq? (case-lambda ((g$T$27485$U0r&n) (if g$T$27485$U0r&n (call-with-values g$C$27483$U0r&n (case-lambda ((g$C$27478$U0r&n) (g$binding-value$16587$U0r&n (case-lambda ((g$V$27479$U0r&n) ((case-lambda ((g$C$27475$U0r&n g$var.lev$19015$U0r&n) (cdr (case-lambda ((g$V$27476$U0r&n) (car (case-lambda ((g$V$27477$U0r&n) (g$gen-ref$18938$U0r&n g$C$27475$U0r&n g$src$18997$U0r&n g$V$27477$U0r&n g$V$27476$U0r&n g$maps$19000$U0r&n))) g$var.lev$19015$U0r&n))) g$var.lev$19015$U0r&n))) g$C$27478$U0r&n g$V$27479$U0r&n))) g$b$19012$U0r&n))) (case-lambda ((g$C$27482$U0r&n g$var$19016$U0r&n g$maps$19017$U0r&n) ((case-lambda ((g$C$27480$U0r&n g$maps$19018$U0r&n g$var$19019$U0r&n) (list (case-lambda ((g$V$27481$U0r&n) (values g$C$27480$U0r&n g$V$27481$U0r&n g$maps$19018$U0r&n))) 'ref g$var$19019$U0r&n))) g$C$27482$U0r&n g$maps$19017$U0r&n g$var$19016$U0r&n)))) (list (case-lambda ((g$V$27486$U0r&n) (values g$C$27483$U0r&n g$V$27486$U0r&n g$maps$19000$U0r&n))) 'quote g$e$18998$U0r&n)))) g$V$27484$U0r&n 'syntax))) g$b$19012$U0r&n))) g$C$27487$U0r&n g$V$27488$U0r&n))) g$label$19011$U0r&n g$r$18999$U0r&n))) g$C$27489$U0r&n g$V$27490$U0r&n))) g$e$18998$U0r&n))) g$ls/false$19008$U0r&n) ((case-lambda ((g$C$27575$U0r&n g$t$19020$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27576$U0r&n) ((case-lambda ((g$C$27572$U0r&n g$ls/false$19021$U0r&n) ((case-lambda ((g$J$27574$U0r&n) (if g$ls/false$19021$U0r&n (apply g$J$27574$U0r&n (case-lambda ((g$C$27491$U0r&n g$dots$19022$U0r&n g$e$19023$U0r&n) (g$ellipsis?$19001$U0r&n g$C$27491$U0r&n g$dots$19022$U0r&n))) g$ls/false$19021$U0r&n) (g$J$27574$U0r&n '#f)))) (case-lambda ((g$T$27573$U0r&n) (if g$T$27573$U0r&n (apply g$C$27572$U0r&n (case-lambda ((g$C$27493$U0r&n g$dots$19024$U0r&n g$e$19025$U0r&n) (if g$vec?$19002$U0r&n (g$syntax-violation$17186$U0r&n g$C$27493$U0r&n '#f '"misplaced ellipsis in syntax form" g$src$18997$U0r&n) (g$gen-syntax$18937$U0r&n g$C$27493$U0r&n g$src$18997$U0r&n g$e$19025$U0r&n g$r$18999$U0r&n g$maps$19000$U0r&n (case-lambda ((g$C$27492$U0r&n g$x$19026$U0r&n) (g$C$27492$U0r&n '#f))) '#f)))) g$ls/false$19021$U0r&n) ((case-lambda ((g$C$27570$U0r&n g$t$19027$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27571$U0r&n) ((case-lambda ((g$C$27567$U0r&n g$ls/false$19028$U0r&n) ((case-lambda ((g$J$27569$U0r&n) (if g$ls/false$19028$U0r&n (apply g$J$27569$U0r&n (case-lambda ((g$C$27494$U0r&n g$x$19029$U0r&n g$dots$19030$U0r&n g$y$19031$U0r&n) (g$ellipsis?$19001$U0r&n g$C$27494$U0r&n g$dots$19030$U0r&n))) g$ls/false$19028$U0r&n) (g$J$27569$U0r&n '#f)))) (case-lambda ((g$T$27568$U0r&n) (if g$T$27568$U0r&n (apply g$C$27567$U0r&n (case-lambda ((g$C$27541$U0r&n g$x$19032$U0r&n g$dots$19033$U0r&n g$y$19034$U0r&n) ((case-lambda ((g$C$27530$U0r&n g$f$19035$U0r&n) ((case-lambda ((g$C$27496$U0r&n g$f$27495$U0r&n) (begin (set! g$f$19035$U0r&n g$f$27495$U0r&n) (g$C$27496$U0r&n g$f$19035$U0r&n)))) g$C$27530$U0r&n (case-lambda ((g$C$27529$U0r&n g$y$19036$U0r&n g$k$19037$U0r&n) ((case-lambda ((g$C$27527$U0r&n g$t$19038$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27528$U0r&n) ((case-lambda ((g$C$27526$U0r&n g$ls/false$19039$U0r&n) (if g$ls/false$19039$U0r&n (apply g$C$27526$U0r&n (case-lambda ((g$C$27497$U0r&n) (g$k$19037$U0r&n g$C$27497$U0r&n g$maps$19000$U0r&n))) g$ls/false$19039$U0r&n) ((case-lambda ((g$C$27524$U0r&n g$t$19040$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27525$U0r&n) ((case-lambda ((g$C$27521$U0r&n g$ls/false$19041$U0r&n) ((case-lambda ((g$J$27523$U0r&n) (if g$ls/false$19041$U0r&n (apply g$J$27523$U0r&n (case-lambda ((g$C$27498$U0r&n g$dots$19042$U0r&n g$y$19043$U0r&n) (g$ellipsis?$19001$U0r&n g$C$27498$U0r&n g$dots$19042$U0r&n))) g$ls/false$19041$U0r&n) (g$J$27523$U0r&n '#f)))) (case-lambda ((g$T$27522$U0r&n) (if g$T$27522$U0r&n (apply g$C$27521$U0r&n (case-lambda ((g$C$27509$U0r&n g$dots$19044$U0r&n g$y$19045$U0r&n) (g$f$19035$U0r&n g$C$27509$U0r&n g$y$19045$U0r&n (case-lambda ((g$C$27508$U0r&n g$maps$19046$U0r&n) (call-with-values g$C$27508$U0r&n (case-lambda ((g$C$27499$U0r&n) (cons (case-lambda ((g$V$27500$U0r&n) (g$k$19037$U0r&n g$C$27499$U0r&n g$V$27500$U0r&n))) '() g$maps$19046$U0r&n))) (case-lambda ((g$C$27507$U0r&n g$x$19049$U0r&n g$maps$19050$U0r&n) ((case-lambda ((g$C$27501$U0r&n g$maps$19051$U0r&n g$x$19052$U0r&n) (car (case-lambda ((g$V$27502$U0r&n) (null? (case-lambda ((g$T$27503$U0r&n) (if g$T$27503$U0r&n (g$syntax-violation$17186$U0r&n g$C$27501$U0r&n '#f '"extra ellipsis in syntax form" g$src$18997$U0r&n) (cdr (case-lambda ((g$V$27504$U0r&n) (car (case-lambda ((g$V$27505$U0r&n) (g$gen-mappend$18940$U0r&n (case-lambda ((g$V$27506$U0r&n) (values g$C$27501$U0r&n g$V$27506$U0r&n g$V$27504$U0r&n))) g$x$19052$U0r&n g$V$27505$U0r&n))) g$maps$19051$U0r&n))) g$maps$19051$U0r&n)))) g$V$27502$U0r&n))) g$maps$19051$U0r&n))) g$C$27507$U0r&n g$maps$19050$U0r&n g$x$19049$U0r&n))))))))) g$ls/false$19041$U0r&n) ((case-lambda ((g$C$27519$U0r&n g$t$19053$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27520$U0r&n) ((case-lambda ((g$C$27518$U0r&n g$ls/false$19054$U0r&n) (if g$ls/false$19054$U0r&n (apply g$C$27518$U0r&n (case-lambda ((g$C$27517$U0r&n) (call-with-values g$C$27517$U0r&n (case-lambda ((g$C$27510$U0r&n) (g$gen-syntax$18937$U0r&n g$C$27510$U0r&n g$src$18997$U0r&n g$y$19036$U0r&n g$r$18999$U0r&n g$maps$19000$U0r&n g$ellipsis?$19001$U0r&n g$vec?$19002$U0r&n))) (case-lambda ((g$C$27516$U0r&n g$y$19057$U0r&n g$maps$19058$U0r&n) ((case-lambda ((g$C$27515$U0r&n g$maps$19059$U0r&n g$y$19060$U0r&n) (call-with-values g$C$27515$U0r&n (case-lambda ((g$C$27511$U0r&n) (g$k$19037$U0r&n g$C$27511$U0r&n g$maps$19059$U0r&n))) (case-lambda ((g$C$27514$U0r&n g$x$19063$U0r&n g$maps$19064$U0r&n) ((case-lambda ((g$C$27512$U0r&n g$maps$19065$U0r&n g$x$19066$U0r&n) (g$gen-append$18939$U0r&n (case-lambda ((g$V$27513$U0r&n) (values g$C$27512$U0r&n g$V$27513$U0r&n g$maps$19065$U0r&n))) g$x$19066$U0r&n g$y$19060$U0r&n))) g$C$27514$U0r&n g$maps$19064$U0r&n g$x$19063$U0r&n)))))) g$C$27516$U0r&n g$maps$19058$U0r&n g$y$19057$U0r&n)))))) g$ls/false$19054$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27518$U0r&n '#f '"invalid syntax" g$t$19053$U0r&n)))) g$C$27519$U0r&n g$V$27520$U0r&n))) g$t$19053$U0r&n '_))) g$C$27521$U0r&n g$t$19040$U0r&n))))))) g$C$27524$U0r&n g$V$27525$U0r&n))) g$t$19040$U0r&n '(any . any)))) g$C$27526$U0r&n g$t$19038$U0r&n)))) g$C$27527$U0r&n g$V$27528$U0r&n))) g$t$19038$U0r&n '()))) g$C$27529$U0r&n g$y$19036$U0r&n)))))) (case-lambda ((g$V$27542$U0r&n) (g$V$27542$U0r&n g$C$27541$U0r&n g$y$19034$U0r&n (case-lambda ((g$C$27540$U0r&n g$maps$19067$U0r&n) (call-with-values g$C$27540$U0r&n (case-lambda ((g$C$27531$U0r&n) (cons (case-lambda ((g$V$27532$U0r&n) (g$gen-syntax$18937$U0r&n g$C$27531$U0r&n g$src$18997$U0r&n g$x$19032$U0r&n g$r$18999$U0r&n g$V$27532$U0r&n g$ellipsis?$19001$U0r&n '#f))) '() g$maps$19067$U0r&n))) (case-lambda ((g$C$27539$U0r&n g$x$19070$U0r&n g$maps$19071$U0r&n) ((case-lambda ((g$C$27533$U0r&n g$maps$19072$U0r&n g$x$19073$U0r&n) (car (case-lambda ((g$V$27534$U0r&n) (null? (case-lambda ((g$T$27535$U0r&n) (if g$T$27535$U0r&n (g$syntax-violation$17186$U0r&n g$C$27533$U0r&n '#f '"extra ellipsis in syntax form" g$src$18997$U0r&n) (cdr (case-lambda ((g$V$27536$U0r&n) (car (case-lambda ((g$V$27537$U0r&n) (g$gen-map$18941$U0r&n (case-lambda ((g$V$27538$U0r&n) (values g$C$27533$U0r&n g$V$27538$U0r&n g$V$27536$U0r&n))) g$x$19073$U0r&n g$V$27537$U0r&n))) g$maps$19072$U0r&n))) g$maps$19072$U0r&n)))) g$V$27534$U0r&n))) g$maps$19072$U0r&n))) g$C$27539$U0r&n g$maps$19071$U0r&n g$x$19070$U0r&n))))))))) uninitialized))) g$ls/false$19028$U0r&n) ((case-lambda ((g$C$27565$U0r&n g$t$19074$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27566$U0r&n) ((case-lambda ((g$C$27564$U0r&n g$ls/false$19075$U0r&n) (if g$ls/false$19075$U0r&n (apply g$C$27564$U0r&n (case-lambda ((g$C$27550$U0r&n g$x$19076$U0r&n g$y$19077$U0r&n) (call-with-values g$C$27550$U0r&n (case-lambda ((g$C$27543$U0r&n) (g$gen-syntax$18937$U0r&n g$C$27543$U0r&n g$src$18997$U0r&n g$x$19076$U0r&n g$r$18999$U0r&n g$maps$19000$U0r&n g$ellipsis?$19001$U0r&n '#f))) (case-lambda ((g$C$27549$U0r&n g$xnew$19080$U0r&n g$maps$19081$U0r&n) ((case-lambda ((g$C$27548$U0r&n g$maps$19082$U0r&n g$xnew$19083$U0r&n) (call-with-values g$C$27548$U0r&n (case-lambda ((g$C$27544$U0r&n) (g$gen-syntax$18937$U0r&n g$C$27544$U0r&n g$src$18997$U0r&n g$y$19077$U0r&n g$r$18999$U0r&n g$maps$19082$U0r&n g$ellipsis?$19001$U0r&n g$vec?$19002$U0r&n))) (case-lambda ((g$C$27547$U0r&n g$ynew$19086$U0r&n g$maps$19087$U0r&n) ((case-lambda ((g$C$27545$U0r&n g$maps$19088$U0r&n g$ynew$19089$U0r&n) (g$gen-cons$18942$U0r&n (case-lambda ((g$V$27546$U0r&n) (values g$C$27545$U0r&n g$V$27546$U0r&n g$maps$19088$U0r&n))) g$e$18998$U0r&n g$x$19076$U0r&n g$y$19077$U0r&n g$xnew$19083$U0r&n g$ynew$19089$U0r&n))) g$C$27547$U0r&n g$maps$19087$U0r&n g$ynew$19086$U0r&n)))))) g$C$27549$U0r&n g$maps$19081$U0r&n g$xnew$19080$U0r&n)))))) g$ls/false$19075$U0r&n) ((case-lambda ((g$C$27562$U0r&n g$t$19090$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27563$U0r&n) ((case-lambda ((g$C$27561$U0r&n g$ls/false$19091$U0r&n) (if g$ls/false$19091$U0r&n (apply g$C$27561$U0r&n (case-lambda ((g$C$27555$U0r&n g$ls$19092$U0r&n) (call-with-values g$C$27555$U0r&n (case-lambda ((g$C$27551$U0r&n) (g$gen-syntax$18937$U0r&n g$C$27551$U0r&n g$src$18997$U0r&n g$ls$19092$U0r&n g$r$18999$U0r&n g$maps$19000$U0r&n g$ellipsis?$19001$U0r&n '#t))) (case-lambda ((g$C$27554$U0r&n g$lsnew$19095$U0r&n g$maps$19096$U0r&n) ((case-lambda ((g$C$27552$U0r&n g$maps$19097$U0r&n g$lsnew$19098$U0r&n) (g$gen-vector$18943$U0r&n (case-lambda ((g$V$27553$U0r&n) (values g$C$27552$U0r&n g$V$27553$U0r&n g$maps$19097$U0r&n))) g$e$18998$U0r&n g$ls$19092$U0r&n g$lsnew$19098$U0r&n))) g$C$27554$U0r&n g$maps$19096$U0r&n g$lsnew$19095$U0r&n)))))) g$ls/false$19091$U0r&n) ((case-lambda ((g$C$27559$U0r&n g$t$19099$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27560$U0r&n) ((case-lambda ((g$C$27558$U0r&n g$ls/false$19100$U0r&n) (if g$ls/false$19100$U0r&n (apply g$C$27558$U0r&n (case-lambda ((g$C$27556$U0r&n) (list (case-lambda ((g$V$27557$U0r&n) (values g$C$27556$U0r&n g$V$27557$U0r&n g$maps$19000$U0r&n))) 'quote g$e$18998$U0r&n))) g$ls/false$19100$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27558$U0r&n '#f '"invalid syntax" g$t$19099$U0r&n)))) g$C$27559$U0r&n g$V$27560$U0r&n))) g$t$19099$U0r&n '_))) g$C$27561$U0r&n g$t$19090$U0r&n)))) g$C$27562$U0r&n g$V$27563$U0r&n))) g$t$19090$U0r&n '#(vector each-any)))) g$C$27564$U0r&n g$t$19074$U0r&n)))) g$C$27565$U0r&n g$V$27566$U0r&n))) g$t$19074$U0r&n '(any . any)))) g$C$27567$U0r&n g$t$19027$U0r&n))))))) g$C$27570$U0r&n g$V$27571$U0r&n))) g$t$19027$U0r&n '(any any . any)))) g$C$27572$U0r&n g$t$19020$U0r&n))))))) g$C$27575$U0r&n g$V$27576$U0r&n))) g$t$19020$U0r&n '(any any)))) g$C$27577$U0r&n g$t$19007$U0r&n))))))) g$C$27580$U0r&n g$V$27581$U0r&n))) g$t$19007$U0r&n 'any))) g$C$27582$U0r&n g$t$19003$U0r&n))))))) g$C$27585$U0r&n g$V$27586$U0r&n))) g$t$19003$U0r&n 'any))) g$C$27587$U0r&n g$e$18998$U0r&n)))) (begin (set! g$gen-ref$18938$U0r&n (case-lambda ((g$C$27604$U0r&n g$src$18984$U0r&n g$var$18985$U0r&n g$level$18986$U0r&n g$maps$18987$U0r&n) (= (case-lambda ((g$T$27605$U0r&n) (if g$T$27605$U0r&n (values g$C$27604$U0r&n g$var$18985$U0r&n g$maps$18987$U0r&n) (null? (case-lambda ((g$T$27606$U0r&n) (if g$T$27606$U0r&n (g$syntax-violation$17186$U0r&n g$C$27604$U0r&n '#f '"missing ellipsis in syntax form" g$src$18984$U0r&n) (call-with-values g$C$27604$U0r&n (case-lambda ((g$C$27588$U0r&n) (cdr (case-lambda ((g$V$27589$U0r&n) (- (case-lambda ((g$V$27590$U0r&n) (g$gen-ref$18938$U0r&n g$C$27588$U0r&n g$src$18984$U0r&n g$var$18985$U0r&n g$V$27590$U0r&n g$V$27589$U0r&n))) g$level$18986$U0r&n '1))) g$maps$18987$U0r&n))) (case-lambda ((g$C$27603$U0r&n g$outer-var$18990$U0r&n g$outer-maps$18991$U0r&n) ((case-lambda ((g$C$27600$U0r&n g$outer-maps$18992$U0r&n g$outer-var$18993$U0r&n) (car (case-lambda ((g$V$27601$U0r&n) (g$assq$12741$U0r&n (case-lambda ((g$V$27602$U0r&n) ((case-lambda ((g$C$27598$U0r&n g$t$18994$U0r&n) (if g$t$18994$U0r&n ((case-lambda ((g$C$27591$U0r&n g$b$18995$U0r&n) (cdr (case-lambda ((g$V$27592$U0r&n) (values g$C$27591$U0r&n g$V$27592$U0r&n g$maps$18987$U0r&n))) g$b$18995$U0r&n))) g$C$27598$U0r&n g$t$18994$U0r&n) (g$gen-lexical$16504$U0r&n (case-lambda ((g$V$27599$U0r&n) ((case-lambda ((g$C$27593$U0r&n g$inner-var$18996$U0r&n) (car (case-lambda ((g$V$27594$U0r&n) (cons (case-lambda ((g$V$27595$U0r&n) (cons (case-lambda ((g$V$27596$U0r&n) (cons (case-lambda ((g$V$27597$U0r&n) (values g$C$27593$U0r&n g$inner-var$18996$U0r&n g$V$27597$U0r&n))) g$V$27596$U0r&n g$outer-maps$18992$U0r&n))) g$V$27595$U0r&n g$V$27594$U0r&n))) g$outer-var$18993$U0r&n g$inner-var$18996$U0r&n))) g$maps$18987$U0r&n))) g$C$27598$U0r&n g$V$27599$U0r&n))) 'tmp)))) g$C$27600$U0r&n g$V$27602$U0r&n))) g$outer-var$18993$U0r&n g$V$27601$U0r&n))) g$maps$18987$U0r&n))) g$C$27603$U0r&n g$outer-maps$18991$U0r&n g$outer-var$18990$U0r&n))))))) g$maps$18987$U0r&n)))) g$level$18986$U0r&n '0)))) (begin (set! g$gen-append$18939$U0r&n (case-lambda ((g$C$27607$U0r&n g$x$18982$U0r&n g$y$18983$U0r&n) (equal? (case-lambda ((g$T$27608$U0r&n) (if g$T$27608$U0r&n (g$C$27607$U0r&n g$x$18982$U0r&n) (list g$C$27607$U0r&n 'append g$x$18982$U0r&n g$y$18983$U0r&n)))) g$y$18983$U0r&n ''())))) (begin (set! g$gen-mappend$18940$U0r&n (case-lambda ((g$C$27609$U0r&n g$e$18980$U0r&n g$map-env$18981$U0r&n) (g$gen-map$18941$U0r&n (case-lambda ((g$V$27610$U0r&n) (list g$C$27609$U0r&n 'apply '(primitive append) g$V$27610$U0r&n))) g$e$18980$U0r&n g$map-env$18981$U0r&n)))) (begin (set! g$gen-map$18941$U0r&n (case-lambda ((g$C$27635$U0r&n g$e$18971$U0r&n g$map-env$18972$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27636$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27637$U0r&n) ((case-lambda ((g$C$27623$U0r&n g$formals$18973$U0r&n g$actuals$18974$U0r&n) (car (case-lambda ((g$V$27624$U0r&n) (eq? (case-lambda ((g$T$27625$U0r&n) (if g$T$27625$U0r&n (car g$C$27623$U0r&n g$actuals$18974$U0r&n) (cdr (case-lambda ((g$V$27626$U0r&n) (g$for-all$12751$U0r&n (case-lambda ((g$T$27627$U0r&n) (if g$T$27627$U0r&n (cdr (case-lambda ((g$V$27628$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27629$U0r&n) ((case-lambda ((g$C$27622$U0r&n g$r$18977$U0r&n) (g$C$27622$U0r&n (case-lambda ((g$C$27619$U0r&n g$x$18978$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$27620$U0r&n) (g$assq$12741$U0r&n (case-lambda ((g$V$27621$U0r&n) (cdr g$C$27619$U0r&n g$V$27621$U0r&n))) g$V$27620$U0r&n g$r$18977$U0r&n))) g$x$18978$U0r&n)))))) (case-lambda ((g$V$27630$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27631$U0r&n) ((case-lambda ((g$C$27615$U0r&n g$args$18976$U0r&n) (car (case-lambda ((g$V$27616$U0r&n) (list (case-lambda ((g$V$27617$U0r&n) (cons (case-lambda ((g$V$27618$U0r&n) (cons g$C$27615$U0r&n 'map g$V$27618$U0r&n))) g$V$27617$U0r&n g$args$18976$U0r&n))) 'primitive g$V$27616$U0r&n))) g$e$18971$U0r&n))) g$C$27623$U0r&n g$V$27631$U0r&n))) g$V$27630$U0r&n g$V$27628$U0r&n))) g$V$27629$U0r&n))) cons g$formals$18973$U0r&n g$actuals$18974$U0r&n))) g$e$18971$U0r&n) (list (case-lambda ((g$V$27632$U0r&n) (g$cons*$12755$U0r&n g$C$27623$U0r&n 'map g$V$27632$U0r&n g$actuals$18974$U0r&n))) 'lambda g$formals$18973$U0r&n g$e$18971$U0r&n)))) (case-lambda ((g$C$27611$U0r&n g$x$18975$U0r&n) (car (case-lambda ((g$V$27612$U0r&n) (eq? (case-lambda ((g$T$27613$U0r&n) (if g$T$27613$U0r&n (g$cadr$13506$U0r&n (case-lambda ((g$V$27614$U0r&n) (g$memq$12745$U0r&n g$C$27611$U0r&n g$V$27614$U0r&n g$formals$18973$U0r&n))) g$x$18975$U0r&n) (g$C$27611$U0r&n '#f)))) g$V$27612$U0r&n 'ref))) g$x$18975$U0r&n))) g$V$27626$U0r&n))) g$e$18971$U0r&n)))) g$V$27624$U0r&n 'ref))) g$e$18971$U0r&n))) g$C$27635$U0r&n g$V$27637$U0r&n g$V$27636$U0r&n))) cdr g$map-env$18972$U0r&n))) (case-lambda ((g$C$27633$U0r&n g$x$18979$U0r&n) (car (case-lambda ((g$V$27634$U0r&n) (list g$C$27633$U0r&n 'ref g$V$27634$U0r&n))) g$x$18979$U0r&n))) g$map-env$18972$U0r&n)))) (begin (set! g$gen-cons$18942$U0r&n (case-lambda ((g$C$27654$U0r&n g$e$18963$U0r&n g$x$18964$U0r&n g$y$18965$U0r&n g$xnew$18966$U0r&n g$ynew$18967$U0r&n) (car (case-lambda ((g$V$27655$U0r&n) ((case-lambda ((g$C$27643$U0r&n g$t$18968$U0r&n) (eqv? (case-lambda ((g$T$27644$U0r&n) (if g$T$27644$U0r&n (car (case-lambda ((g$V$27645$U0r&n) (eq? (case-lambda ((g$T$27646$U0r&n) (if g$T$27646$U0r&n (g$cadr$13506$U0r&n (case-lambda ((g$V$27647$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$27648$U0r&n) ((case-lambda ((g$C$27638$U0r&n g$xnew$18969$U0r&n g$ynew$18970$U0r&n) ((case-lambda ((g$J$27641$U0r&n) (eq? (case-lambda ((g$T$27642$U0r&n) (if g$T$27642$U0r&n (eq? g$J$27641$U0r&n g$ynew$18970$U0r&n g$y$18965$U0r&n) (g$J$27641$U0r&n '#f)))) g$xnew$18969$U0r&n g$x$18964$U0r&n))) (case-lambda ((g$T$27639$U0r&n) (if g$T$27639$U0r&n (list g$C$27638$U0r&n 'quote g$e$18963$U0r&n) (cons (case-lambda ((g$V$27640$U0r&n) (list g$C$27638$U0r&n 'quote g$V$27640$U0r&n))) g$xnew$18969$U0r&n g$ynew$18970$U0r&n))))))) g$C$27643$U0r&n g$V$27648$U0r&n g$V$27647$U0r&n))) g$xnew$18966$U0r&n))) g$ynew$18967$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$27649$U0r&n) (null? (case-lambda ((g$T$27650$U0r&n) (if g$T$27650$U0r&n (list g$C$27643$U0r&n 'list g$xnew$18966$U0r&n) (list g$C$27643$U0r&n 'cons g$xnew$18966$U0r&n g$ynew$18967$U0r&n)))) g$V$27649$U0r&n))) g$ynew$18967$U0r&n)))) g$V$27645$U0r&n 'quote))) g$xnew$18966$U0r&n) (eqv? (case-lambda ((g$T$27651$U0r&n) (if g$T$27651$U0r&n (cdr (case-lambda ((g$V$27652$U0r&n) (cons (case-lambda ((g$V$27653$U0r&n) (cons g$C$27643$U0r&n 'list g$V$27653$U0r&n))) g$xnew$18966$U0r&n g$V$27652$U0r&n))) g$ynew$18967$U0r&n) (list g$C$27643$U0r&n 'cons g$xnew$18966$U0r&n g$ynew$18967$U0r&n)))) g$t$18968$U0r&n 'list)))) g$t$18968$U0r&n 'quote))) g$C$27654$U0r&n g$V$27655$U0r&n))) g$ynew$18967$U0r&n)))) (begin (set! g$gen-vector$18943$U0r&n (case-lambda ((g$C$27656$U0r&n g$e$18960$U0r&n g$ls$18961$U0r&n g$lsnew$18962$U0r&n) (car (case-lambda ((g$V$27657$U0r&n) (eq? (case-lambda ((g$T$27658$U0r&n) (if g$T$27658$U0r&n (g$cadr$13506$U0r&n (case-lambda ((g$V$27659$U0r&n) (eq? (case-lambda ((g$T$27660$U0r&n) (if g$T$27660$U0r&n (list g$C$27656$U0r&n 'quote g$e$18960$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$27661$U0r&n) (g$list->vector$13491$U0r&n (case-lambda ((g$V$27662$U0r&n) (list g$C$27656$U0r&n 'quote g$V$27662$U0r&n))) g$V$27661$U0r&n))) g$lsnew$18962$U0r&n)))) g$V$27659$U0r&n g$ls$18961$U0r&n))) g$lsnew$18962$U0r&n) (car (case-lambda ((g$V$27663$U0r&n) (eq? (case-lambda ((g$T$27664$U0r&n) (if g$T$27664$U0r&n (cdr (case-lambda ((g$V$27665$U0r&n) (cons g$C$27656$U0r&n 'vector g$V$27665$U0r&n))) g$lsnew$18962$U0r&n) (list g$C$27656$U0r&n 'list->vector g$lsnew$18962$U0r&n)))) g$V$27663$U0r&n 'list))) g$lsnew$18962$U0r&n)))) g$V$27657$U0r&n 'quote))) g$lsnew$18962$U0r&n)))) (begin (set! g$regen$18944$U0r&n (case-lambda ((g$C$27684$U0r&n g$x$18957$U0r&n) (car (case-lambda ((g$V$27685$U0r&n) ((case-lambda ((g$C$27667$U0r&n g$t$18958$U0r&n) (eqv? (case-lambda ((g$T$27668$U0r&n) (if g$T$27668$U0r&n (g$cadr$13506$U0r&n g$C$27667$U0r&n g$x$18957$U0r&n) (eqv? (case-lambda ((g$T$27669$U0r&n) (if g$T$27669$U0r&n (g$cadr$13506$U0r&n (case-lambda ((g$V$27670$U0r&n) (list g$C$27667$U0r&n 'primitive g$V$27670$U0r&n))) g$x$18957$U0r&n) (eqv? (case-lambda ((g$T$27671$U0r&n) (if g$T$27671$U0r&n (g$cadr$13506$U0r&n (case-lambda ((g$V$27672$U0r&n) (list g$C$27667$U0r&n 'quote g$V$27672$U0r&n))) g$x$18957$U0r&n) (eqv? (case-lambda ((g$T$27673$U0r&n) (if g$T$27673$U0r&n (g$caddr$13512$U0r&n (case-lambda ((g$V$27674$U0r&n) (g$regen$18944$U0r&n (case-lambda ((g$V$27675$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$27676$U0r&n) (g$build-lambda$16491$U0r&n g$C$27667$U0r&n '#f g$V$27676$U0r&n g$V$27675$U0r&n))) g$x$18957$U0r&n))) g$V$27674$U0r&n))) g$x$18957$U0r&n) (eqv? (case-lambda ((g$T$27677$U0r&n) (if g$T$27677$U0r&n (cdr (case-lambda ((g$V$27678$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27679$U0r&n) ((case-lambda ((g$C$27666$U0r&n g$ls$18959$U0r&n) (cons g$C$27666$U0r&n '(primitive ellipsis-map) g$ls$18959$U0r&n))) g$C$27667$U0r&n g$V$27679$U0r&n))) g$regen$18944$U0r&n g$V$27678$U0r&n))) g$x$18957$U0r&n) (cdr (case-lambda ((g$V$27680$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27681$U0r&n) (car (case-lambda ((g$V$27682$U0r&n) (list (case-lambda ((g$V$27683$U0r&n) (cons g$C$27667$U0r&n g$V$27683$U0r&n g$V$27681$U0r&n))) 'primitive g$V$27682$U0r&n))) g$x$18957$U0r&n))) g$regen$18944$U0r&n g$V$27680$U0r&n))) g$x$18957$U0r&n)))) g$t$18958$U0r&n 'map)))) g$t$18958$U0r&n 'lambda)))) g$t$18958$U0r&n 'quote)))) g$t$18958$U0r&n 'primitive)))) g$t$18958$U0r&n 'ref))) g$C$27684$U0r&n g$V$27685$U0r&n))) g$x$18957$U0r&n)))) (g$C$27694$U0r&n (case-lambda ((g$C$27693$U0r&n g$e$18945$U0r&n g$r$18946$U0r&n g$mr$18947$U0r&n) ((case-lambda ((g$C$27691$U0r&n g$t$18948$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27692$U0r&n) ((case-lambda ((g$C$27690$U0r&n g$ls/false$18949$U0r&n) (if g$ls/false$18949$U0r&n (apply g$C$27690$U0r&n (case-lambda ((g$C$27689$U0r&n g$x$18950$U0r&n) (call-with-values g$C$27689$U0r&n (case-lambda ((g$C$27686$U0r&n) (g$gen-syntax$18937$U0r&n g$C$27686$U0r&n g$e$18945$U0r&n g$x$18950$U0r&n g$r$18946$U0r&n '() g$ellipsis?$17068$U0r&n '#f))) (case-lambda ((g$C$27688$U0r&n g$e$18953$U0r&n g$maps$18954$U0r&n) ((case-lambda ((g$C$27687$U0r&n g$maps$18955$U0r&n g$e$18956$U0r&n) (g$regen$18944$U0r&n g$C$27687$U0r&n g$e$18956$U0r&n))) g$C$27688$U0r&n g$maps$18954$U0r&n g$e$18953$U0r&n)))))) g$ls/false$18949$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27690$U0r&n '#f '"invalid syntax" g$t$18948$U0r&n)))) g$C$27691$U0r&n g$V$27692$U0r&n))) g$t$18948$U0r&n '(_ any)))) g$C$27693$U0r&n g$e$18945$U0r&n)))))))))))))) g$C$27695$U0r&n uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized))) g$C$29740$U0r&n))) (library-letrec*-identity 'g$syntax-transformer$17073$U0r&n))) (g$core-macro-transformer$17074$U0r&n g$core-macro-transformer$20671$U0r&n ((case-lambda ((g$C$29741$U0r&n) (g$C$29741$U0r&n (case-lambda ((g$C$27710$U0r&n g$name$19101$U0r&n) ((case-lambda ((g$C$27696$U0r&n g$t$19102$U0r&n) (eqv? (case-lambda ((g$T$27697$U0r&n) (if g$T$27697$U0r&n (g$C$27696$U0r&n g$quote-transformer$17027$U0r&n) (eqv? (case-lambda ((g$T$27698$U0r&n) (if g$T$27698$U0r&n (g$C$27696$U0r&n g$lambda-transformer$17029$U0r&n) (eqv? (case-lambda ((g$T$27699$U0r&n) (if g$T$27699$U0r&n (g$C$27696$U0r&n g$case-lambda-transformer$17028$U0r&n) (eqv? (case-lambda ((g$T$27700$U0r&n) (if g$T$27700$U0r&n (g$C$27696$U0r&n g$letrec-transformer$17017$U0r&n) (eqv? (case-lambda ((g$T$27701$U0r&n) (if g$T$27701$U0r&n (g$C$27696$U0r&n g$letrec*-transformer$17018$U0r&n) (eqv? (case-lambda ((g$T$27702$U0r&n) (if g$T$27702$U0r&n (g$C$27696$U0r&n g$if-transformer$17025$U0r&n) (eqv? (case-lambda ((g$T$27703$U0r&n) (if g$T$27703$U0r&n (g$C$27696$U0r&n g$foreign-call-transformer$17065$U0r&n) (eqv? (case-lambda ((g$T$27704$U0r&n) (if g$T$27704$U0r&n (g$C$27696$U0r&n g$syntax-case-transformer$17071$U0r&n) (eqv? (case-lambda ((g$T$27705$U0r&n) (if g$T$27705$U0r&n (g$C$27696$U0r&n g$syntax-transformer$17073$U0r&n) (eqv? (case-lambda ((g$T$27706$U0r&n) (if g$T$27706$U0r&n (g$C$27696$U0r&n g$type-descriptor-transformer$17020$U0r&n) (eqv? (case-lambda ((g$T$27707$U0r&n) (if g$T$27707$U0r&n (g$C$27696$U0r&n g$record-type-descriptor-transformer$17021$U0r&n) (eqv? (case-lambda ((g$T$27708$U0r&n) (if g$T$27708$U0r&n (g$C$27696$U0r&n g$record-constructor-descriptor-transformer$17022$U0r&n) (eqv? (case-lambda ((g$T$27709$U0r&n) (if g$T$27709$U0r&n (g$C$27696$U0r&n g$fluid-let-syntax-transformer$17019$U0r&n) (g$assertion-violation$13786$U0r&n g$C$27696$U0r&n 'macro-transformer '"BUG: cannot find transformer" g$name$19101$U0r&n)))) g$t$19102$U0r&n 'fluid-let-syntax)))) g$t$19102$U0r&n 'record-constructor-descriptor)))) g$t$19102$U0r&n 'record-type-descriptor)))) g$t$19102$U0r&n 'type-descriptor)))) g$t$19102$U0r&n 'syntax)))) g$t$19102$U0r&n 'syntax-case)))) g$t$19102$U0r&n 'foreign-call)))) g$t$19102$U0r&n 'if)))) g$t$19102$U0r&n 'letrec*)))) g$t$19102$U0r&n 'letrec)))) g$t$19102$U0r&n 'case-lambda)))) g$t$19102$U0r&n 'lambda)))) g$t$19102$U0r&n 'quote))) g$C$27710$U0r&n g$name$19101$U0r&n)))))) (library-letrec*-identity 'g$core-macro-transformer$17074$U0r&n))) (g$file-options-macro$17075$U0r&n g$file-options-macro$20672$U0r&n ((case-lambda ((g$C$29742$U0r&n) (g$C$29742$U0r&n (case-lambda ((g$C$27727$U0r&n g$x$19103$U0r&n) ((case-lambda ((g$C$27726$U0r&n g$valid-option?$19104$U0r&n) (begin (set! g$valid-option?$19104$U0r&n (case-lambda ((g$C$27711$U0r&n g$x$19109$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$T$27712$U0r&n) (if g$T$27712$U0r&n (g$id->sym$16570$U0r&n (case-lambda ((g$V$27713$U0r&n) (g$memq$12745$U0r&n g$C$27711$U0r&n g$V$27713$U0r&n '(no-fail no-create no-truncate)))) g$x$19109$U0r&n) (g$C$27711$U0r&n '#f)))) g$x$19109$U0r&n)))) ((case-lambda ((g$C$27724$U0r&n g$t$19105$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27725$U0r&n) ((case-lambda ((g$C$27721$U0r&n g$ls/false$19106$U0r&n) ((case-lambda ((g$J$27723$U0r&n) (if g$ls/false$19106$U0r&n (apply g$J$27723$U0r&n (case-lambda ((g$C$27714$U0r&n g$opt*$19107$U0r&n) (g$for-all$12751$U0r&n (case-lambda ((g$T$27715$U0r&n) (if g$T$27715$U0r&n (g$map$12753$U0r&n (case-lambda ((g$V$27716$U0r&n) (g$file-options-spec$15430$U0r&n g$C$27714$U0r&n g$V$27716$U0r&n))) g$id->sym$16570$U0r&n g$opt*$19107$U0r&n) (g$C$27714$U0r&n '#f)))) g$valid-option?$19104$U0r&n g$opt*$19107$U0r&n))) g$ls/false$19106$U0r&n) (g$J$27723$U0r&n '#f)))) (case-lambda ((g$T$27722$U0r&n) (if g$T$27722$U0r&n (apply g$C$27721$U0r&n (case-lambda ((g$C$27717$U0r&n g$opt*$19108$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27718$U0r&n) (g$file-options-spec$15430$U0r&n (case-lambda ((g$V$27719$U0r&n) (list (case-lambda ((g$V$27720$U0r&n) (g$bless$17030$U0r&n g$C$27717$U0r&n g$V$27720$U0r&n))) 'quote g$V$27719$U0r&n))) g$V$27718$U0r&n))) g$id->sym$16570$U0r&n g$opt*$19108$U0r&n))) g$ls/false$19106$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27721$U0r&n '#f '"invalid syntax" g$t$19105$U0r&n))))))) g$C$27724$U0r&n g$V$27725$U0r&n))) g$t$19105$U0r&n '(_ . each-any)))) g$C$27726$U0r&n g$x$19103$U0r&n)))) g$C$27727$U0r&n uninitialized)))))) (library-letrec*-identity 'g$file-options-macro$17075$U0r&n))) (g$symbol-macro$17076$U0r&n g$symbol-macro$20673$U0r&n ((case-lambda ((g$C$29743$U0r&n) (g$C$29743$U0r&n (case-lambda ((g$C$27738$U0r&n g$x$19110$U0r&n g$set$19111$U0r&n) ((case-lambda ((g$C$27736$U0r&n g$t$19112$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27737$U0r&n) ((case-lambda ((g$C$27733$U0r&n g$ls/false$19113$U0r&n) ((case-lambda ((g$J$27735$U0r&n) (if g$ls/false$19113$U0r&n (apply g$J$27735$U0r&n (case-lambda ((g$C$27728$U0r&n g$name$19114$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$T$27729$U0r&n) (if g$T$27729$U0r&n (g$id->sym$16570$U0r&n (case-lambda ((g$V$27730$U0r&n) (g$memq$12745$U0r&n g$C$27728$U0r&n g$V$27730$U0r&n g$set$19111$U0r&n))) g$name$19114$U0r&n) (g$C$27728$U0r&n '#f)))) g$name$19114$U0r&n))) g$ls/false$19113$U0r&n) (g$J$27735$U0r&n '#f)))) (case-lambda ((g$T$27734$U0r&n) (if g$T$27734$U0r&n (apply g$C$27733$U0r&n (case-lambda ((g$C$27731$U0r&n g$name$19115$U0r&n) (list (case-lambda ((g$V$27732$U0r&n) (g$bless$17030$U0r&n g$C$27731$U0r&n g$V$27732$U0r&n))) 'quote g$name$19115$U0r&n))) g$ls/false$19113$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27733$U0r&n '#f '"invalid syntax" g$t$19112$U0r&n))))))) g$C$27736$U0r&n g$V$27737$U0r&n))) g$t$19112$U0r&n '(_ any)))) g$C$27738$U0r&n g$x$19110$U0r&n)))))) (library-letrec*-identity 'g$symbol-macro$17076$U0r&n))) (g$macro-transformer$17077$U0r&n g$macro-transformer$20674$U0r&n ((case-lambda ((g$C$29744$U0r&n) (g$C$29744$U0r&n (case-lambda ((g$C$27781$U0r&n g$x$19116$U0r&n) (g$procedure?$13498$U0r&n (case-lambda ((g$T$27782$U0r&n) (if g$T$27782$U0r&n (g$C$27781$U0r&n g$x$19116$U0r&n) (g$symbol?$13496$U0r&n (case-lambda ((g$T$27783$U0r&n) (if g$T$27783$U0r&n ((case-lambda ((g$C$27742$U0r&n g$t$19117$U0r&n) (eqv? (case-lambda ((g$T$27743$U0r&n) (if g$T$27743$U0r&n (g$C$27742$U0r&n g$define-record-type-macro$17061$U0r&n) (eqv? (case-lambda ((g$T$27744$U0r&n) (if g$T$27744$U0r&n (g$C$27742$U0r&n g$define-struct-macro$17060$U0r&n) (eqv? (case-lambda ((g$T$27745$U0r&n) (if g$T$27745$U0r&n (g$C$27742$U0r&n g$include-macro$17055$U0r&n) (eqv? (case-lambda ((g$T$27746$U0r&n) (if g$T$27746$U0r&n (g$C$27742$U0r&n g$cond-macro$17053$U0r&n) (eqv? (case-lambda ((g$T$27747$U0r&n) (if g$T$27747$U0r&n (g$C$27742$U0r&n g$let-macro$17033$U0r&n) (eqv? (case-lambda ((g$T$27748$U0r&n) (if g$T$27748$U0r&n (g$C$27742$U0r&n g$do-macro$17049$U0r&n) (eqv? (case-lambda ((g$T$27749$U0r&n) (if g$T$27749$U0r&n (g$C$27742$U0r&n g$or-macro$17051$U0r&n) (eqv? (case-lambda ((g$T$27750$U0r&n) (if g$T$27750$U0r&n (g$C$27742$U0r&n g$and-macro$17052$U0r&n) (eqv? (case-lambda ((g$T$27751$U0r&n) (if g$T$27751$U0r&n (g$C$27742$U0r&n g$let*-macro$17050$U0r&n) (eqv? (case-lambda ((g$T$27752$U0r&n) (if g$T$27752$U0r&n (g$C$27742$U0r&n g$let-values-macro$17034$U0r&n) (eqv? (case-lambda ((g$T$27753$U0r&n) (if g$T$27753$U0r&n (g$C$27742$U0r&n g$let*-values-macro$17035$U0r&n) (eqv? (case-lambda ((g$T$27754$U0r&n) (if g$T$27754$U0r&n (g$C$27742$U0r&n g$syntax-rules-macro$17057$U0r&n) (eqv? (case-lambda ((g$T$27755$U0r&n) (if g$T$27755$U0r&n (g$C$27742$U0r&n g$quasiquote-macro$17058$U0r&n) (eqv? (case-lambda ((g$T$27756$U0r&n) (if g$T$27756$U0r&n (g$C$27742$U0r&n g$quasisyntax-macro$17059$U0r&n) (eqv? (case-lambda ((g$T$27757$U0r&n) (if g$T$27757$U0r&n (g$C$27742$U0r&n g$with-syntax-macro$17031$U0r&n) (eqv? (case-lambda ((g$T$27758$U0r&n) (if g$T$27758$U0r&n (g$C$27742$U0r&n g$when-macro$17023$U0r&n) (eqv? (case-lambda ((g$T$27759$U0r&n) (if g$T$27759$U0r&n (g$C$27742$U0r&n g$unless-macro$17024$U0r&n) (eqv? (case-lambda ((g$T$27760$U0r&n) (if g$T$27760$U0r&n (g$C$27742$U0r&n g$case-macro$17026$U0r&n) (eqv? (case-lambda ((g$T$27761$U0r&n) (if g$T$27761$U0r&n (g$C$27742$U0r&n g$identifier-syntax-macro$17048$U0r&n) (eqv? (case-lambda ((g$T$27762$U0r&n) (if g$T$27762$U0r&n (g$C$27742$U0r&n g$time-macro$17044$U0r&n) (eqv? (case-lambda ((g$T$27763$U0r&n) (if g$T$27763$U0r&n (g$C$27742$U0r&n g$delay-macro$17045$U0r&n) (eqv? (case-lambda ((g$T$27764$U0r&n) (if g$T$27764$U0r&n (g$C$27742$U0r&n g$assert-macro$17046$U0r&n) (eqv? (case-lambda ((g$T$27765$U0r&n) (if g$T$27765$U0r&n (g$C$27742$U0r&n g$endianness-macro$17047$U0r&n) (eqv? (case-lambda ((g$T$27766$U0r&n) (if g$T$27766$U0r&n (g$C$27742$U0r&n g$guard-macro$17042$U0r&n) (eqv? (case-lambda ((g$T$27767$U0r&n) (if g$T$27767$U0r&n (g$C$27742$U0r&n g$define-enumeration-macro$17043$U0r&n) (eqv? (case-lambda ((g$T$27768$U0r&n) (if g$T$27768$U0r&n (g$C$27742$U0r&n g$trace-lambda-macro$17036$U0r&n) (eqv? (case-lambda ((g$T$27769$U0r&n) (if g$T$27769$U0r&n (g$C$27742$U0r&n g$trace-define-macro$17037$U0r&n) (eqv? (case-lambda ((g$T$27770$U0r&n) (if g$T$27770$U0r&n (g$C$27742$U0r&n g$trace-define-syntax-macro$17038$U0r&n) (eqv? (case-lambda ((g$T$27771$U0r&n) (if g$T$27771$U0r&n (g$C$27742$U0r&n g$trace-let-syntax-macro$17040$U0r&n) (eqv? (case-lambda ((g$T$27772$U0r&n) (if g$T$27772$U0r&n (g$C$27742$U0r&n g$trace-letrec-syntax-macro$17041$U0r&n) (eqv? (case-lambda ((g$T$27773$U0r&n) (if g$T$27773$U0r&n (g$C$27742$U0r&n g$define-condition-type-macro$17062$U0r&n) (eqv? (case-lambda ((g$T$27774$U0r&n) (if g$T$27774$U0r&n (g$C$27742$U0r&n g$parameterize-macro$17064$U0r&n) (eqv? (case-lambda ((g$T$27775$U0r&n) (if g$T$27775$U0r&n (g$C$27742$U0r&n g$include-into-macro$17056$U0r&n) (eqv? (case-lambda ((g$T$27776$U0r&n) (if g$T$27776$U0r&n (g$C$27742$U0r&n (case-lambda ((g$C$27739$U0r&n g$x$19118$U0r&n) (g$symbol-macro$17076$U0r&n g$C$27739$U0r&n g$x$19118$U0r&n '(none lf cr crlf nel crnel ls))))) (eqv? (case-lambda ((g$T$27777$U0r&n) (if g$T$27777$U0r&n (g$C$27742$U0r&n (case-lambda ((g$C$27740$U0r&n g$x$19119$U0r&n) (g$symbol-macro$17076$U0r&n g$C$27740$U0r&n g$x$19119$U0r&n '(ignore raise replace))))) (eqv? (case-lambda ((g$T$27778$U0r&n) (if g$T$27778$U0r&n (g$C$27742$U0r&n (case-lambda ((g$C$27741$U0r&n g$x$19120$U0r&n) (g$symbol-macro$17076$U0r&n g$C$27741$U0r&n g$x$19120$U0r&n '(none line block))))) (eqv? (case-lambda ((g$T$27779$U0r&n) (if g$T$27779$U0r&n (g$C$27742$U0r&n g$file-options-macro$17075$U0r&n) (g$memv$12746$U0r&n (case-lambda ((g$T$27780$U0r&n) (if g$T$27780$U0r&n (g$C$27742$U0r&n g$incorrect-usage-macro$17063$U0r&n) (g$error$13787$U0r&n g$C$27742$U0r&n 'macro-transformer '"BUG: invalid macro" g$x$19116$U0r&n)))) g$t$19117$U0r&n '(... => _ else unquote unquote-splicing unsyntax unsyntax-splicing fields mutable immutable parent protocol sealed opaque nongenerative parent-rtd))))) g$t$19117$U0r&n 'file-options)))) g$t$19117$U0r&n 'buffer-mode)))) g$t$19117$U0r&n 'error-handling-mode)))) g$t$19117$U0r&n 'eol-style)))) g$t$19117$U0r&n 'include-into)))) g$t$19117$U0r&n 'parameterize)))) g$t$19117$U0r&n 'define-condition-type)))) g$t$19117$U0r&n 'trace-letrec-syntax)))) g$t$19117$U0r&n 'trace-let-syntax)))) g$t$19117$U0r&n 'trace-define-syntax)))) g$t$19117$U0r&n 'trace-define)))) g$t$19117$U0r&n 'trace-lambda)))) g$t$19117$U0r&n 'define-enumeration)))) g$t$19117$U0r&n 'guard)))) g$t$19117$U0r&n 'endianness)))) g$t$19117$U0r&n 'assert)))) g$t$19117$U0r&n 'delay)))) g$t$19117$U0r&n 'time)))) g$t$19117$U0r&n 'identifier-syntax)))) g$t$19117$U0r&n 'case)))) g$t$19117$U0r&n 'unless)))) g$t$19117$U0r&n 'when)))) g$t$19117$U0r&n 'with-syntax)))) g$t$19117$U0r&n 'quasisyntax)))) g$t$19117$U0r&n 'quasiquote)))) g$t$19117$U0r&n 'syntax-rules)))) g$t$19117$U0r&n 'let*-values)))) g$t$19117$U0r&n 'let-values)))) g$t$19117$U0r&n 'let*)))) g$t$19117$U0r&n 'and)))) g$t$19117$U0r&n 'or)))) g$t$19117$U0r&n 'do)))) g$t$19117$U0r&n 'let)))) g$t$19117$U0r&n 'cond)))) g$t$19117$U0r&n 'include)))) g$t$19117$U0r&n 'define-struct)))) g$t$19117$U0r&n 'define-record-type))) g$C$27781$U0r&n g$x$19116$U0r&n) (g$error$13787$U0r&n g$C$27781$U0r&n 'core-macro-transformer '"BUG: invalid macro" g$x$19116$U0r&n)))) g$x$19116$U0r&n)))) g$x$19116$U0r&n)))))) (library-letrec*-identity 'g$macro-transformer$17077$U0r&n))) (g$local-macro-transformer$17078$U0r&n g$local-macro-transformer$20675$U0r&n ((case-lambda ((g$C$29745$U0r&n) (g$C$29745$U0r&n (case-lambda ((g$C$27784$U0r&n g$x$19121$U0r&n) (car g$C$27784$U0r&n g$x$19121$U0r&n)))))) (library-letrec*-identity 'g$local-macro-transformer$17078$U0r&n))) (g$do-macro-call$17079$U0r&n g$do-macro-call$20676$U0r&n ((case-lambda ((g$C$29746$U0r&n) (g$C$29746$U0r&n (case-lambda ((g$C$27824$U0r&n g$transformer$19122$U0r&n g$expr$19123$U0r&n g$r$19124$U0r&n) ((case-lambda ((g$C$27821$U0r&n g$return$19125$U0r&n) (begin (set! g$return$19125$U0r&n (case-lambda ((g$C$27797$U0r&n g$x$19133$U0r&n) ((case-lambda ((g$C$27796$U0r&n g$f$19134$U0r&n) ((case-lambda ((g$C$27786$U0r&n g$f$27785$U0r&n) (begin (set! g$f$19134$U0r&n g$f$27785$U0r&n) (g$C$27786$U0r&n g$f$19134$U0r&n)))) g$C$27796$U0r&n (case-lambda ((g$C$27787$U0r&n g$x$19135$U0r&n) (g$stx?$16541$U0r&n (case-lambda ((g$V$27788$U0r&n) (not (case-lambda ((g$T$27789$U0r&n) (if g$T$27789$U0r&n (pair? (case-lambda ((g$T$27790$U0r&n) (if g$T$27790$U0r&n (car (case-lambda ((g$V$27791$U0r&n) (g$f$19134$U0r&n (case-lambda (g$IGNORE$27792$U0r&n (cdr (case-lambda ((g$V$27793$U0r&n) (g$f$19134$U0r&n g$C$27787$U0r&n g$V$27793$U0r&n))) g$x$19135$U0r&n))) g$V$27791$U0r&n))) g$x$19135$U0r&n) (g$vector?$13494$U0r&n (case-lambda ((g$T$27794$U0r&n) (if g$T$27794$U0r&n (g$vector-for-each$13558$U0r&n g$C$27787$U0r&n g$f$19134$U0r&n g$x$19135$U0r&n) (g$symbol?$13496$U0r&n (case-lambda ((g$T$27795$U0r&n) (if g$T$27795$U0r&n (g$syntax-violation$17186$U0r&n g$C$27787$U0r&n '#f '"raw symbol encountered in output of macro" g$expr$19123$U0r&n g$x$19135$U0r&n) (void g$C$27787$U0r&n)))) g$x$19135$U0r&n)))) g$x$19135$U0r&n)))) g$x$19135$U0r&n) (void g$C$27787$U0r&n)))) g$V$27788$U0r&n))) g$x$19135$U0r&n)))))) (case-lambda ((g$V$27798$U0r&n) (g$V$27798$U0r&n (case-lambda (g$IGNORE$27799$U0r&n (g$gen-mark$16553$U0r&n (case-lambda ((g$V$27800$U0r&n) (g$add-mark$16558$U0r&n g$C$27797$U0r&n g$V$27800$U0r&n g$x$19133$U0r&n g$expr$19123$U0r&n)))))) g$x$19133$U0r&n))) uninitialized)))) (g$add-mark$16558$U0r&n (case-lambda ((g$V$27822$U0r&n) (g$transformer$19122$U0r&n (case-lambda ((g$V$27823$U0r&n) ((case-lambda ((g$C$27818$U0r&n g$x$19126$U0r&n) (g$procedure?$13498$U0r&n (case-lambda ((g$T$27819$U0r&n) (if g$T$27819$U0r&n (g$x$19126$U0r&n (case-lambda ((g$V$27820$U0r&n) (g$return$19125$U0r&n g$C$27818$U0r&n g$V$27820$U0r&n))) (case-lambda ((g$C$27812$U0r&n g$id$19127$U0r&n) ((case-lambda ((g$J$27815$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$V$27816$U0r&n) (not (case-lambda ((g$T$27817$U0r&n) (if g$T$27817$U0r&n (g$assertion-violation$13786$U0r&n g$J$27815$U0r&n 'rho '"not an identifier" g$id$19127$U0r&n) (void g$J$27815$U0r&n)))) g$V$27816$U0r&n))) g$id$19127$U0r&n))) (case-lambda (g$IGNORE$27813$U0r&n (g$id->label$16582$U0r&n (case-lambda ((g$V$27814$U0r&n) ((case-lambda ((g$C$27810$U0r&n g$label$19128$U0r&n) (g$label->binding$16584$U0r&n (case-lambda ((g$V$27811$U0r&n) ((case-lambda ((g$C$27808$U0r&n g$binding$19129$U0r&n) (car (case-lambda ((g$V$27809$U0r&n) ((case-lambda ((g$C$27803$U0r&n g$t$19130$U0r&n) (eqv? (case-lambda ((g$T$27804$U0r&n) (if g$T$27804$U0r&n (g$cadr$13506$U0r&n g$C$27803$U0r&n g$binding$19129$U0r&n) (eqv? (case-lambda ((g$T$27805$U0r&n) (if g$T$27805$U0r&n (g$cddr$13508$U0r&n (case-lambda ((g$V$27806$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$27807$U0r&n) ((case-lambda ((g$C$27801$U0r&n g$lib$19131$U0r&n g$loc$19132$U0r&n) (g$visit-library$16273$U0r&n (case-lambda (g$IGNORE$27802$U0r&n (symbol-value g$C$27801$U0r&n g$loc$19132$U0r&n))) g$lib$19131$U0r&n))) g$C$27803$U0r&n g$V$27807$U0r&n g$V$27806$U0r&n))) g$binding$19129$U0r&n))) g$binding$19129$U0r&n) (g$C$27803$U0r&n '#f)))) g$t$19130$U0r&n 'global-ctv)))) g$t$19130$U0r&n 'local-ctv))) g$C$27808$U0r&n g$V$27809$U0r&n))) g$binding$19129$U0r&n))) g$C$27810$U0r&n g$V$27811$U0r&n))) g$label$19128$U0r&n g$r$19124$U0r&n))) g$C$27812$U0r&n g$V$27814$U0r&n))) g$id$19127$U0r&n))))))) (g$return$19125$U0r&n g$C$27818$U0r&n g$x$19126$U0r&n)))) g$x$19126$U0r&n))) g$C$27821$U0r&n g$V$27823$U0r&n))) g$V$27822$U0r&n))) g$anti-mark$16554$U0r&n g$expr$19123$U0r&n '#f)))) g$C$27824$U0r&n uninitialized)))))) (library-letrec*-identity 'g$do-macro-call$17079$U0r&n))) (g$chi-macro$17080$U0r&n g$chi-macro$20677$U0r&n ((case-lambda ((g$C$29747$U0r&n) (g$C$29747$U0r&n (case-lambda ((g$C$27825$U0r&n g$p$19136$U0r&n g$e$19137$U0r&n g$r$19138$U0r&n) (g$macro-transformer$17077$U0r&n (case-lambda ((g$V$27826$U0r&n) (g$do-macro-call$17079$U0r&n g$C$27825$U0r&n g$V$27826$U0r&n g$e$19137$U0r&n g$r$19138$U0r&n))) g$p$19136$U0r&n)))))) (library-letrec*-identity 'g$chi-macro$17080$U0r&n))) (g$chi-local-macro$17081$U0r&n g$chi-local-macro$20678$U0r&n ((case-lambda ((g$C$29748$U0r&n) (g$C$29748$U0r&n (case-lambda ((g$C$27827$U0r&n g$p$19139$U0r&n g$e$19140$U0r&n g$r$19141$U0r&n) (g$local-macro-transformer$17078$U0r&n (case-lambda ((g$V$27828$U0r&n) (g$do-macro-call$17079$U0r&n g$C$27827$U0r&n g$V$27828$U0r&n g$e$19140$U0r&n g$r$19141$U0r&n))) g$p$19139$U0r&n)))))) (library-letrec*-identity 'g$chi-local-macro$17081$U0r&n))) (g$chi-global-macro$17082$U0r&n g$chi-global-macro$20679$U0r&n ((case-lambda ((g$C$29749$U0r&n) (g$C$29749$U0r&n (case-lambda ((g$C$27837$U0r&n g$p$19142$U0r&n g$e$19143$U0r&n g$r$19144$U0r&n) (cdr (case-lambda ((g$V$27838$U0r&n) (car (case-lambda ((g$V$27839$U0r&n) ((case-lambda ((g$C$27834$U0r&n g$lib$19145$U0r&n g$loc$19146$U0r&n) (g$visit-library$16273$U0r&n (case-lambda (g$IGNORE$27835$U0r&n (symbol-value (case-lambda ((g$V$27836$U0r&n) ((case-lambda ((g$C$27830$U0r&n g$x$19147$U0r&n) ((case-lambda ((g$J$27832$U0r&n) (g$procedure?$13498$U0r&n (case-lambda ((g$T$27833$U0r&n) (if g$T$27833$U0r&n (g$J$27832$U0r&n g$x$19147$U0r&n) (g$assertion-violation$13786$U0r&n g$J$27832$U0r&n 'chi-global-macro '"BUG: not a procedure" g$x$19147$U0r&n)))) g$x$19147$U0r&n))) (case-lambda ((g$V$27831$U0r&n) ((case-lambda ((g$C$27829$U0r&n g$transformer$19148$U0r&n) (g$do-macro-call$17079$U0r&n g$C$27829$U0r&n g$transformer$19148$U0r&n g$e$19143$U0r&n g$r$19144$U0r&n))) g$C$27830$U0r&n g$V$27831$U0r&n)))))) g$C$27834$U0r&n g$V$27836$U0r&n))) g$loc$19146$U0r&n))) g$lib$19145$U0r&n))) g$C$27837$U0r&n g$V$27839$U0r&n g$V$27838$U0r&n))) g$p$19142$U0r&n))) g$p$19142$U0r&n)))))) (library-letrec*-identity 'g$chi-global-macro$17082$U0r&n))) (g$chi-expr*$17083$U0r&n g$chi-expr*$20680$U0r&n ((case-lambda ((g$C$29750$U0r&n) (g$C$29750$U0r&n (case-lambda ((g$C$27843$U0r&n g$e*$19149$U0r&n g$r$19150$U0r&n g$mr$19151$U0r&n) (null? (case-lambda ((g$T$27844$U0r&n) (if g$T$27844$U0r&n (g$C$27843$U0r&n '()) (car (case-lambda ((g$V$27845$U0r&n) (g$chi-expr$17085$U0r&n (case-lambda ((g$V$27846$U0r&n) ((case-lambda ((g$C$27840$U0r&n g$e$19152$U0r&n) (cdr (case-lambda ((g$V$27841$U0r&n) (g$chi-expr*$17083$U0r&n (case-lambda ((g$V$27842$U0r&n) (cons g$C$27840$U0r&n g$e$19152$U0r&n g$V$27842$U0r&n))) g$V$27841$U0r&n g$r$19150$U0r&n g$mr$19151$U0r&n))) g$e*$19149$U0r&n))) g$C$27843$U0r&n g$V$27846$U0r&n))) g$V$27845$U0r&n g$r$19150$U0r&n g$mr$19151$U0r&n))) g$e*$19149$U0r&n)))) g$e*$19149$U0r&n)))))) (library-letrec*-identity 'g$chi-expr*$17083$U0r&n))) (g$chi-application$17084$U0r&n g$chi-application$20681$U0r&n ((case-lambda ((g$C$29751$U0r&n) (g$C$29751$U0r&n (case-lambda ((g$C$27854$U0r&n g$e$19153$U0r&n g$r$19154$U0r&n g$mr$19155$U0r&n) ((case-lambda ((g$C$27852$U0r&n g$t$19156$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27853$U0r&n) ((case-lambda ((g$C$27851$U0r&n g$ls/false$19157$U0r&n) (if g$ls/false$19157$U0r&n (apply g$C$27851$U0r&n (case-lambda ((g$C$27849$U0r&n g$rator$19158$U0r&n g$rands$19159$U0r&n) (g$chi-expr$17085$U0r&n (case-lambda ((g$V$27850$U0r&n) ((case-lambda ((g$C$27847$U0r&n g$rator$19160$U0r&n) (g$chi-expr*$17083$U0r&n (case-lambda ((g$V$27848$U0r&n) (cons g$C$27847$U0r&n g$rator$19160$U0r&n g$V$27848$U0r&n))) g$rands$19159$U0r&n g$r$19154$U0r&n g$mr$19155$U0r&n))) g$C$27849$U0r&n g$V$27850$U0r&n))) g$rator$19158$U0r&n g$r$19154$U0r&n g$mr$19155$U0r&n))) g$ls/false$19157$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27851$U0r&n '#f '"invalid syntax" g$t$19156$U0r&n)))) g$C$27852$U0r&n g$V$27853$U0r&n))) g$t$19156$U0r&n '(any . each-any)))) g$C$27854$U0r&n g$e$19153$U0r&n)))))) (library-letrec*-identity 'g$chi-application$17084$U0r&n))) (g$chi-expr$17085$U0r&n g$chi-expr$20682$U0r&n ((case-lambda ((g$C$29752$U0r&n) (g$C$29752$U0r&n (case-lambda ((g$C$27933$U0r&n g$e$19161$U0r&n g$r$19162$U0r&n g$mr$19163$U0r&n) (call-with-values g$C$27933$U0r&n (case-lambda ((g$C$27855$U0r&n) (g$syntax-type$16589$U0r&n g$C$27855$U0r&n g$e$19161$U0r&n g$r$19162$U0r&n))) (case-lambda ((g$C$27932$U0r&n g$type$19167$U0r&n g$value$19168$U0r&n g$kwd$19169$U0r&n) ((case-lambda ((g$C$27931$U0r&n g$kwd$19170$U0r&n g$value$19171$U0r&n g$type$19172$U0r&n) ((case-lambda ((g$C$27906$U0r&n g$t$19173$U0r&n) (eqv? (case-lambda ((g$T$27907$U0r&n) (if g$T$27907$U0r&n (g$core-macro-transformer$17074$U0r&n (case-lambda ((g$V$27908$U0r&n) ((case-lambda ((g$C$27856$U0r&n g$transformer$19174$U0r&n) (g$transformer$19174$U0r&n g$C$27856$U0r&n g$e$19161$U0r&n g$r$19162$U0r&n g$mr$19163$U0r&n))) g$C$27906$U0r&n g$V$27908$U0r&n))) g$value$19171$U0r&n) (eqv? (case-lambda ((g$T$27909$U0r&n) (if g$T$27909$U0r&n (car (case-lambda ((g$V$27910$U0r&n) ((case-lambda ((g$C$27860$U0r&n g$lib$19175$U0r&n) (cdr (case-lambda ((g$V$27861$U0r&n) ((case-lambda ((g$C$27857$U0r&n g$loc$19176$U0r&n) (g$inv-collector$17122$U0r&n (case-lambda ((g$V$27858$U0r&n) (g$V$27858$U0r&n (case-lambda (g$IGNORE$27859$U0r&n (g$C$27857$U0r&n g$loc$19176$U0r&n))) g$lib$19175$U0r&n)))))) g$C$27860$U0r&n g$V$27861$U0r&n))) g$value$19171$U0r&n))) g$C$27906$U0r&n g$V$27910$U0r&n))) g$value$19171$U0r&n) (eqv? (case-lambda ((g$T$27911$U0r&n) (if g$T$27911$U0r&n ((case-lambda ((g$C$27862$U0r&n g$name$19177$U0r&n) (list g$C$27862$U0r&n 'primitive g$name$19177$U0r&n))) g$C$27906$U0r&n g$value$19171$U0r&n) (eqv? (case-lambda ((g$T$27912$U0r&n) (if g$T$27912$U0r&n (g$chi-application$17084$U0r&n g$C$27906$U0r&n g$e$19161$U0r&n g$r$19162$U0r&n g$mr$19163$U0r&n) (eqv? (case-lambda ((g$T$27913$U0r&n) (if g$T$27913$U0r&n (g$lexical-var$17011$U0r&n (case-lambda ((g$V$27914$U0r&n) ((case-lambda ((g$C$27863$U0r&n g$lex$19178$U0r&n) (g$C$27863$U0r&n g$lex$19178$U0r&n))) g$C$27906$U0r&n g$V$27914$U0r&n))) g$value$19171$U0r&n) (g$memv$12746$U0r&n (case-lambda ((g$T$27915$U0r&n) (if g$T$27915$U0r&n (g$chi-global-macro$17082$U0r&n (case-lambda ((g$V$27916$U0r&n) (g$chi-expr$17085$U0r&n g$C$27906$U0r&n g$V$27916$U0r&n g$r$19162$U0r&n g$mr$19163$U0r&n))) g$value$19171$U0r&n g$e$19161$U0r&n g$r$19162$U0r&n) (g$memv$12746$U0r&n (case-lambda ((g$T$27917$U0r&n) (if g$T$27917$U0r&n (g$chi-local-macro$17081$U0r&n (case-lambda ((g$V$27918$U0r&n) (g$chi-expr$17085$U0r&n g$C$27906$U0r&n g$V$27918$U0r&n g$r$19162$U0r&n g$mr$19163$U0r&n))) g$value$19171$U0r&n g$e$19161$U0r&n g$r$19162$U0r&n) (g$memv$12746$U0r&n (case-lambda ((g$T$27919$U0r&n) (if g$T$27919$U0r&n (g$chi-macro$17080$U0r&n (case-lambda ((g$V$27920$U0r&n) (g$chi-expr$17085$U0r&n g$C$27906$U0r&n g$V$27920$U0r&n g$r$19162$U0r&n g$mr$19163$U0r&n))) g$value$19171$U0r&n g$e$19161$U0r&n g$r$19162$U0r&n) (eqv? (case-lambda ((g$T$27921$U0r&n) (if g$T$27921$U0r&n ((case-lambda ((g$C$27864$U0r&n g$datum$19179$U0r&n) (list g$C$27864$U0r&n 'quote g$datum$19179$U0r&n))) g$C$27906$U0r&n g$value$19171$U0r&n) (eqv? (case-lambda ((g$T$27922$U0r&n) (if g$T$27922$U0r&n (g$chi-set!$17086$U0r&n g$C$27906$U0r&n g$e$19161$U0r&n g$r$19162$U0r&n g$mr$19163$U0r&n) (eqv? (case-lambda ((g$T$27923$U0r&n) (if g$T$27923$U0r&n ((case-lambda ((g$C$27869$U0r&n g$t$19180$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27870$U0r&n) ((case-lambda ((g$C$27868$U0r&n g$ls/false$19181$U0r&n) (if g$ls/false$19181$U0r&n (apply g$C$27868$U0r&n (case-lambda ((g$C$27865$U0r&n g$x$19182$U0r&n g$x*$19183$U0r&n) (cons (case-lambda ((g$V$27866$U0r&n) (g$chi-expr*$17083$U0r&n (case-lambda ((g$V$27867$U0r&n) (g$build-sequence$16494$U0r&n g$C$27865$U0r&n '#f g$V$27867$U0r&n))) g$V$27866$U0r&n g$r$19162$U0r&n g$mr$19163$U0r&n))) g$x$19182$U0r&n g$x*$19183$U0r&n))) g$ls/false$19181$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27868$U0r&n '#f '"invalid syntax" g$t$19180$U0r&n)))) g$C$27869$U0r&n g$V$27870$U0r&n))) g$t$19180$U0r&n '(_ any . each-any)))) g$C$27906$U0r&n g$e$19161$U0r&n) (g$memv$12746$U0r&n (case-lambda ((g$T$27924$U0r&n) (if g$T$27924$U0r&n ((case-lambda ((g$C$27897$U0r&n g$t$19184$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27898$U0r&n) ((case-lambda ((g$C$27894$U0r&n g$ls/false$19185$U0r&n) ((case-lambda ((g$J$27896$U0r&n) (if g$ls/false$19185$U0r&n (apply g$J$27896$U0r&n (case-lambda ((g$C$27871$U0r&n g$xlhs*$19186$U0r&n g$xrhs*$19187$U0r&n g$xbody$19188$U0r&n g$xbody*$19189$U0r&n) (g$valid-bound-ids?$16574$U0r&n (case-lambda ((g$V$27872$U0r&n) (not (case-lambda ((g$T$27873$U0r&n) (if g$T$27873$U0r&n (g$syntax-violation$17186$U0r&n g$C$27871$U0r&n '#f '"invalid identifiers" g$e$19161$U0r&n) (void g$C$27871$U0r&n)))) g$V$27872$U0r&n))) g$xlhs*$19186$U0r&n))) g$ls/false$19185$U0r&n) (g$J$27896$U0r&n '#f)))) (case-lambda ((g$T$27895$U0r&n) (if g$T$27895$U0r&n (apply g$C$27894$U0r&n (case-lambda ((g$C$27892$U0r&n g$xlhs*$19190$U0r&n g$xrhs*$19191$U0r&n g$xbody$19192$U0r&n g$xbody*$19193$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27893$U0r&n) ((case-lambda ((g$C$27890$U0r&n g$xlab*$19194$U0r&n) (g$make-full-rib$16535$U0r&n (case-lambda ((g$V$27891$U0r&n) ((case-lambda ((g$C$27888$U0r&n g$xrib$19195$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27889$U0r&n) ((case-lambda ((g$C$27875$U0r&n g$xb*$19196$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27876$U0r&n) (append (case-lambda ((g$V$27877$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27878$U0r&n) (append (case-lambda ((g$V$27879$U0r&n) (cons (case-lambda ((g$V$27880$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27881$U0r&n) (g$chi-expr*$17083$U0r&n (case-lambda ((g$V$27882$U0r&n) (g$build-sequence$16494$U0r&n g$C$27875$U0r&n '#f g$V$27882$U0r&n))) g$V$27881$U0r&n g$V$27879$U0r&n g$V$27877$U0r&n))) (case-lambda ((g$C$27874$U0r&n g$x$19197$U0r&n) (g$add-subst$16559$U0r&n g$C$27874$U0r&n g$xrib$19195$U0r&n g$x$19197$U0r&n))) g$V$27880$U0r&n))) g$xbody$19192$U0r&n g$xbody*$19193$U0r&n))) g$V$27878$U0r&n g$r$19162$U0r&n))) cons g$xlab*$19194$U0r&n g$xb*$19196$U0r&n))) g$V$27876$U0r&n g$mr$19163$U0r&n))) cons g$xlab*$19194$U0r&n g$xb*$19196$U0r&n))) g$C$27888$U0r&n g$V$27889$U0r&n))) (case-lambda ((g$C$27883$U0r&n g$x$19198$U0r&n) ((case-lambda ((g$J$27886$U0r&n) (eq? (case-lambda ((g$T$27887$U0r&n) (if g$T$27887$U0r&n (g$J$27886$U0r&n g$x$19198$U0r&n) (g$add-subst$16559$U0r&n g$J$27886$U0r&n g$xrib$19195$U0r&n g$x$19198$U0r&n)))) g$type$19172$U0r&n 'let-syntax))) (case-lambda ((g$V$27884$U0r&n) (g$expand-transformer$17115$U0r&n (case-lambda ((g$V$27885$U0r&n) (g$make-eval-transformer$16617$U0r&n g$C$27883$U0r&n g$V$27885$U0r&n))) g$V$27884$U0r&n g$mr$19163$U0r&n)))))) g$xrhs*$19191$U0r&n))) g$C$27890$U0r&n g$V$27891$U0r&n))) g$xlhs*$19190$U0r&n g$xlab*$19194$U0r&n))) g$C$27892$U0r&n g$V$27893$U0r&n))) g$gen-label$16506$U0r&n g$xlhs*$19190$U0r&n))) g$ls/false$19185$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27894$U0r&n '#f '"invalid syntax" g$t$19184$U0r&n))))))) g$C$27897$U0r&n g$V$27898$U0r&n))) g$t$19184$U0r&n '(_ #(each (any any)) any . each-any)))) g$C$27906$U0r&n g$e$19161$U0r&n) (eqv? (case-lambda ((g$T$27925$U0r&n) (if g$T$27925$U0r&n (g$syntax-violation$17186$U0r&n g$C$27906$U0r&n '#f '"identifier out of context" g$e$19161$U0r&n) (eqv? (case-lambda ((g$T$27926$U0r&n) (if g$T$27926$U0r&n (g$syntax-violation$17186$U0r&n g$C$27906$U0r&n '#f '"reference to pattern variable outside a syntax form" g$e$19161$U0r&n) (g$memv$12746$U0r&n (case-lambda ((g$T$27927$U0r&n) (if g$T$27927$U0r&n ((case-lambda ((g$C$27899$U0r&n g$t$19199$U0r&n) (eqv? (case-lambda ((g$T$27900$U0r&n) (if g$T$27900$U0r&n (g$C$27899$U0r&n '"a definition") (eqv? (case-lambda ((g$T$27901$U0r&n) (if g$T$27901$U0r&n (g$C$27899$U0r&n '"a define-syntax") (eqv? (case-lambda ((g$T$27902$U0r&n) (if g$T$27902$U0r&n (g$C$27899$U0r&n '"a module definition") (eqv? (case-lambda ((g$T$27903$U0r&n) (if g$T$27903$U0r&n (g$C$27899$U0r&n '"a library definition") (eqv? (case-lambda ((g$T$27904$U0r&n) (if g$T$27904$U0r&n (g$C$27899$U0r&n '"an import declaration") (eqv? (case-lambda ((g$T$27905$U0r&n) (if g$T$27905$U0r&n (g$C$27899$U0r&n '"an export declaration") (g$C$27899$U0r&n '"a non-expression")))) g$t$19199$U0r&n 'export)))) g$t$19199$U0r&n 'import)))) g$t$19199$U0r&n 'library)))) g$t$19199$U0r&n 'module)))) g$t$19199$U0r&n 'define-syntax)))) g$t$19199$U0r&n 'define))) (case-lambda ((g$V$27928$U0r&n) (string-append (case-lambda ((g$V$27929$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27906$U0r&n '#f g$V$27929$U0r&n g$e$19161$U0r&n))) g$V$27928$U0r&n '" was found where an expression was expected"))) g$type$19172$U0r&n) (eqv? (case-lambda ((g$T$27930$U0r&n) (if g$T$27930$U0r&n (g$syntax-violation$17186$U0r&n g$C$27906$U0r&n '#f '"attempt to reference an unexportable variable" g$e$19161$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27906$U0r&n '#f '"invalid expression" g$e$19161$U0r&n)))) g$t$19173$U0r&n 'mutable)))) g$t$19173$U0r&n '(define define-syntax module import library))))) g$t$19173$U0r&n 'syntax)))) g$t$19173$U0r&n 'displaced-lexical)))) g$t$19173$U0r&n '(let-syntax letrec-syntax))))) g$t$19173$U0r&n 'begin)))) g$t$19173$U0r&n 'set!)))) g$t$19173$U0r&n 'constant)))) g$t$19173$U0r&n '(macro macro!))))) g$t$19173$U0r&n '(local-macro local-macro!))))) g$t$19173$U0r&n '(global-macro global-macro!))))) g$t$19173$U0r&n 'lexical)))) g$t$19173$U0r&n 'call)))) g$t$19173$U0r&n 'core-prim)))) g$t$19173$U0r&n 'global)))) g$t$19173$U0r&n 'core-macro))) g$C$27931$U0r&n g$type$19172$U0r&n))) g$C$27932$U0r&n g$kwd$19169$U0r&n g$value$19168$U0r&n g$type$19167$U0r&n))))))))) (library-letrec*-identity 'g$chi-expr$17085$U0r&n))) (g$chi-set!$17086$U0r&n g$chi-set!$20683$U0r&n ((case-lambda ((g$C$29753$U0r&n) (g$C$29753$U0r&n (case-lambda ((g$C$27956$U0r&n g$e$19200$U0r&n g$r$19201$U0r&n g$mr$19202$U0r&n) ((case-lambda ((g$C$27954$U0r&n g$t$19203$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27955$U0r&n) ((case-lambda ((g$C$27951$U0r&n g$ls/false$19204$U0r&n) ((case-lambda ((g$J$27953$U0r&n) (if g$ls/false$19204$U0r&n (apply g$J$27953$U0r&n (case-lambda ((g$C$27934$U0r&n g$x$19205$U0r&n g$v$19206$U0r&n) (g$id?$16569$U0r&n g$C$27934$U0r&n g$x$19205$U0r&n))) g$ls/false$19204$U0r&n) (g$J$27953$U0r&n '#f)))) (case-lambda ((g$T$27952$U0r&n) (if g$T$27952$U0r&n (apply g$C$27951$U0r&n (case-lambda ((g$C$27950$U0r&n g$x$19207$U0r&n g$v$19208$U0r&n) (call-with-values g$C$27950$U0r&n (case-lambda ((g$C$27935$U0r&n) (g$syntax-type$16589$U0r&n g$C$27935$U0r&n g$x$19207$U0r&n g$r$19201$U0r&n))) (case-lambda ((g$C$27949$U0r&n g$type$19212$U0r&n g$value$19213$U0r&n g$kwd$19214$U0r&n) ((case-lambda ((g$C$27948$U0r&n g$kwd$19215$U0r&n g$value$19216$U0r&n g$type$19217$U0r&n) ((case-lambda ((g$C$27936$U0r&n g$t$19218$U0r&n) (eqv? (case-lambda ((g$T$27937$U0r&n) (if g$T$27937$U0r&n (g$set-lexical-mutable!$17013$U0r&n (case-lambda (g$IGNORE$27938$U0r&n (g$chi-expr$17085$U0r&n (case-lambda ((g$V$27939$U0r&n) (g$lexical-var$17011$U0r&n (case-lambda ((g$V$27940$U0r&n) (list g$C$27936$U0r&n 'set! g$V$27940$U0r&n g$V$27939$U0r&n))) g$value$19216$U0r&n))) g$v$19208$U0r&n g$r$19201$U0r&n g$mr$19202$U0r&n))) g$value$19216$U0r&n '#t) (eqv? (case-lambda ((g$T$27941$U0r&n) (if g$T$27941$U0r&n (g$syntax-violation$17186$U0r&n g$C$27936$U0r&n '#f '"cannot modify imported core primitive" g$e$19200$U0r&n) (eqv? (case-lambda ((g$T$27942$U0r&n) (if g$T$27942$U0r&n (g$syntax-violation$17186$U0r&n g$C$27936$U0r&n '#f '"attempt to modify imported binding" g$e$19200$U0r&n) (eqv? (case-lambda ((g$T$27943$U0r&n) (if g$T$27943$U0r&n (g$chi-global-macro$17082$U0r&n (case-lambda ((g$V$27944$U0r&n) (g$chi-expr$17085$U0r&n g$C$27936$U0r&n g$V$27944$U0r&n g$r$19201$U0r&n g$mr$19202$U0r&n))) g$value$19216$U0r&n g$e$19200$U0r&n g$r$19201$U0r&n) (eqv? (case-lambda ((g$T$27945$U0r&n) (if g$T$27945$U0r&n (g$chi-local-macro$17081$U0r&n (case-lambda ((g$V$27946$U0r&n) (g$chi-expr$17085$U0r&n g$C$27936$U0r&n g$V$27946$U0r&n g$r$19201$U0r&n g$mr$19202$U0r&n))) g$value$19216$U0r&n g$e$19200$U0r&n g$r$19201$U0r&n) (eqv? (case-lambda ((g$T$27947$U0r&n) (if g$T$27947$U0r&n (g$syntax-violation$17186$U0r&n g$C$27936$U0r&n '#f '"attempt to assign to an unexportable variable" g$e$19200$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27936$U0r&n '#f '"invalid syntax" g$e$19200$U0r&n)))) g$t$19218$U0r&n 'mutable)))) g$t$19218$U0r&n 'local-macro!)))) g$t$19218$U0r&n 'global-macro!)))) g$t$19218$U0r&n 'global)))) g$t$19218$U0r&n 'core-prim)))) g$t$19218$U0r&n 'lexical))) g$C$27948$U0r&n g$type$19217$U0r&n))) g$C$27949$U0r&n g$kwd$19214$U0r&n g$value$19213$U0r&n g$type$19212$U0r&n)))))) g$ls/false$19204$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27951$U0r&n '#f '"invalid syntax" g$t$19203$U0r&n))))))) g$C$27954$U0r&n g$V$27955$U0r&n))) g$t$19203$U0r&n '(_ any any)))) g$C$27956$U0r&n g$e$19200$U0r&n)))))) (library-letrec*-identity 'g$chi-set!$17086$U0r&n))) (g$verify-formals$17087$U0r&n g$verify-formals$20684$U0r&n ((case-lambda ((g$C$29754$U0r&n) (g$C$29754$U0r&n (case-lambda ((g$C$27974$U0r&n g$fmls$19219$U0r&n g$stx$19220$U0r&n) ((case-lambda ((g$C$27972$U0r&n g$t$19221$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27973$U0r&n) ((case-lambda ((g$C$27971$U0r&n g$ls/false$19222$U0r&n) (if g$ls/false$19222$U0r&n (apply g$C$27971$U0r&n (case-lambda ((g$C$27957$U0r&n g$x*$19223$U0r&n) (g$valid-bound-ids?$16574$U0r&n (case-lambda ((g$V$27958$U0r&n) (not (case-lambda ((g$T$27959$U0r&n) (if g$T$27959$U0r&n (g$invalid-fmls-error$17032$U0r&n g$C$27957$U0r&n g$stx$19220$U0r&n g$fmls$19219$U0r&n) (void g$C$27957$U0r&n)))) g$V$27958$U0r&n))) g$x*$19223$U0r&n))) g$ls/false$19222$U0r&n) ((case-lambda ((g$C$27969$U0r&n g$t$19224$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27970$U0r&n) ((case-lambda ((g$C$27968$U0r&n g$ls/false$19225$U0r&n) (if g$ls/false$19225$U0r&n (apply g$C$27968$U0r&n (case-lambda ((g$C$27960$U0r&n g$x*$19226$U0r&n g$x$19227$U0r&n) (cons (case-lambda ((g$V$27961$U0r&n) (g$valid-bound-ids?$16574$U0r&n (case-lambda ((g$V$27962$U0r&n) (not (case-lambda ((g$T$27963$U0r&n) (if g$T$27963$U0r&n (g$invalid-fmls-error$17032$U0r&n g$C$27960$U0r&n g$stx$19220$U0r&n g$fmls$19219$U0r&n) (void g$C$27960$U0r&n)))) g$V$27962$U0r&n))) g$V$27961$U0r&n))) g$x$19227$U0r&n g$x*$19226$U0r&n))) g$ls/false$19225$U0r&n) ((case-lambda ((g$C$27966$U0r&n g$t$19228$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$27967$U0r&n) ((case-lambda ((g$C$27965$U0r&n g$ls/false$19229$U0r&n) (if g$ls/false$19229$U0r&n (apply g$C$27965$U0r&n (case-lambda ((g$C$27964$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27964$U0r&n '#f '"invalid syntax" g$stx$19220$U0r&n))) g$ls/false$19229$U0r&n) (g$syntax-violation$17186$U0r&n g$C$27965$U0r&n '#f '"invalid syntax" g$t$19228$U0r&n)))) g$C$27966$U0r&n g$V$27967$U0r&n))) g$t$19228$U0r&n '_))) g$C$27968$U0r&n g$t$19224$U0r&n)))) g$C$27969$U0r&n g$V$27970$U0r&n))) g$t$19224$U0r&n '#(each+ any () any)))) g$C$27971$U0r&n g$t$19221$U0r&n)))) g$C$27972$U0r&n g$V$27973$U0r&n))) g$t$19221$U0r&n 'each-any))) g$C$27974$U0r&n g$fmls$19219$U0r&n)))))) (library-letrec*-identity 'g$verify-formals$17087$U0r&n))) (g$chi-lambda-clause$17088$U0r&n g$chi-lambda-clause$20685$U0r&n ((case-lambda ((g$C$29755$U0r&n) (g$C$29755$U0r&n (case-lambda ((g$C$28010$U0r&n g$stx$19230$U0r&n g$fmls$19231$U0r&n g$body*$19232$U0r&n g$r$19233$U0r&n g$mr$19234$U0r&n) ((case-lambda ((g$C$28008$U0r&n g$t$19235$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28009$U0r&n) ((case-lambda ((g$C$28007$U0r&n g$ls/false$19236$U0r&n) (if g$ls/false$19236$U0r&n (apply g$C$28007$U0r&n (case-lambda ((g$C$27980$U0r&n g$x*$19237$U0r&n) (g$verify-formals$17087$U0r&n (case-lambda (g$IGNORE$27981$U0r&n (g$map$12753$U0r&n (case-lambda ((g$V$27982$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27983$U0r&n) ((case-lambda ((g$C$27975$U0r&n g$lex*$19238$U0r&n g$lab*$19239$U0r&n) (g$add-lexicals$17015$U0r&n (case-lambda ((g$V$27976$U0r&n) (g$make-full-rib$16535$U0r&n (case-lambda ((g$V$27977$U0r&n) (g$add-subst$16559$U0r&n (case-lambda ((g$V$27978$U0r&n) (g$chi-internal$17096$U0r&n (case-lambda ((g$V$27979$U0r&n) (values g$C$27975$U0r&n g$lex*$19238$U0r&n g$V$27979$U0r&n))) g$V$27978$U0r&n g$V$27976$U0r&n g$mr$19234$U0r&n))) g$V$27977$U0r&n g$body*$19232$U0r&n))) g$x*$19237$U0r&n g$lab*$19239$U0r&n))) g$lab*$19239$U0r&n g$lex*$19238$U0r&n g$r$19233$U0r&n))) g$C$27980$U0r&n g$V$27983$U0r&n g$V$27982$U0r&n))) g$gen-lexical$16504$U0r&n g$x*$19237$U0r&n))) g$gen-label$16506$U0r&n g$x*$19237$U0r&n))) g$fmls$19231$U0r&n g$stx$19230$U0r&n))) g$ls/false$19236$U0r&n) ((case-lambda ((g$C$28005$U0r&n g$t$19240$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28006$U0r&n) ((case-lambda ((g$C$28004$U0r&n g$ls/false$19241$U0r&n) (if g$ls/false$19241$U0r&n (apply g$C$28004$U0r&n (case-lambda ((g$C$27994$U0r&n g$x*$19242$U0r&n g$x$19243$U0r&n) (g$verify-formals$17087$U0r&n (case-lambda (g$IGNORE$27995$U0r&n (g$gen-label$16506$U0r&n (case-lambda ((g$V$27996$U0r&n) (g$gen-lexical$16504$U0r&n (case-lambda ((g$V$27997$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27998$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$27999$U0r&n) ((case-lambda ((g$C$27984$U0r&n g$lex*$19244$U0r&n g$lab*$19245$U0r&n g$lex$19246$U0r&n g$lab$19247$U0r&n) (cons (case-lambda ((g$V$27985$U0r&n) (cons (case-lambda ((g$V$27986$U0r&n) (g$add-lexicals$17015$U0r&n (case-lambda ((g$V$27987$U0r&n) (cons (case-lambda ((g$V$27988$U0r&n) (cons (case-lambda ((g$V$27989$U0r&n) (g$make-full-rib$16535$U0r&n (case-lambda ((g$V$27990$U0r&n) (g$add-subst$16559$U0r&n (case-lambda ((g$V$27991$U0r&n) (g$chi-internal$17096$U0r&n (case-lambda ((g$V$27992$U0r&n) (append (case-lambda ((g$V$27993$U0r&n) (values g$C$27984$U0r&n g$V$27993$U0r&n g$V$27992$U0r&n))) g$lex*$19244$U0r&n g$lex$19246$U0r&n))) g$V$27991$U0r&n g$V$27987$U0r&n g$mr$19234$U0r&n))) g$V$27990$U0r&n g$body*$19232$U0r&n))) g$V$27989$U0r&n g$V$27988$U0r&n))) g$x$19243$U0r&n g$x*$19242$U0r&n))) g$lab$19247$U0r&n g$lab*$19245$U0r&n))) g$V$27986$U0r&n g$V$27985$U0r&n g$r$19233$U0r&n))) g$lab$19247$U0r&n g$lab*$19245$U0r&n))) g$lex$19246$U0r&n g$lex*$19244$U0r&n))) g$C$27994$U0r&n g$V$27999$U0r&n g$V$27998$U0r&n g$V$27997$U0r&n g$V$27996$U0r&n))) g$gen-lexical$16504$U0r&n g$x*$19242$U0r&n))) g$gen-label$16506$U0r&n g$x*$19242$U0r&n))) g$x$19243$U0r&n))) g$x$19243$U0r&n))) g$fmls$19231$U0r&n g$stx$19230$U0r&n))) g$ls/false$19241$U0r&n) ((case-lambda ((g$C$28002$U0r&n g$t$19248$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28003$U0r&n) ((case-lambda ((g$C$28001$U0r&n g$ls/false$19249$U0r&n) (if g$ls/false$19249$U0r&n (apply g$C$28001$U0r&n (case-lambda ((g$C$28000$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28000$U0r&n '#f '"invalid syntax" g$fmls$19231$U0r&n))) g$ls/false$19249$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28001$U0r&n '#f '"invalid syntax" g$t$19248$U0r&n)))) g$C$28002$U0r&n g$V$28003$U0r&n))) g$t$19248$U0r&n '_))) g$C$28004$U0r&n g$t$19240$U0r&n)))) g$C$28005$U0r&n g$V$28006$U0r&n))) g$t$19240$U0r&n '#(each+ any () any)))) g$C$28007$U0r&n g$t$19235$U0r&n)))) g$C$28008$U0r&n g$V$28009$U0r&n))) g$t$19235$U0r&n 'each-any))) g$C$28010$U0r&n g$fmls$19231$U0r&n)))))) (library-letrec*-identity 'g$chi-lambda-clause$17088$U0r&n))) (g$chi-lambda-clause*$17089$U0r&n g$chi-lambda-clause*$20686$U0r&n ((case-lambda ((g$C$29756$U0r&n) (g$C$29756$U0r&n (case-lambda ((g$C$28023$U0r&n g$stx$19250$U0r&n g$fmls*$19251$U0r&n g$body**$19252$U0r&n g$r$19253$U0r&n g$mr$19254$U0r&n) (null? (case-lambda ((g$T$28024$U0r&n) (if g$T$28024$U0r&n (values g$C$28023$U0r&n '() '()) (call-with-values g$C$28023$U0r&n (case-lambda ((g$C$28011$U0r&n) (car (case-lambda ((g$V$28012$U0r&n) (car (case-lambda ((g$V$28013$U0r&n) (g$chi-lambda-clause$17088$U0r&n g$C$28011$U0r&n g$stx$19250$U0r&n g$V$28013$U0r&n g$V$28012$U0r&n g$r$19253$U0r&n g$mr$19254$U0r&n))) g$fmls*$19251$U0r&n))) g$body**$19252$U0r&n))) (case-lambda ((g$C$28022$U0r&n g$a$19257$U0r&n g$b$19258$U0r&n) ((case-lambda ((g$C$28021$U0r&n g$b$19259$U0r&n g$a$19260$U0r&n) (call-with-values g$C$28021$U0r&n (case-lambda ((g$C$28014$U0r&n) (cdr (case-lambda ((g$V$28015$U0r&n) (cdr (case-lambda ((g$V$28016$U0r&n) (g$chi-lambda-clause*$17089$U0r&n g$C$28014$U0r&n g$stx$19250$U0r&n g$V$28016$U0r&n g$V$28015$U0r&n g$r$19253$U0r&n g$mr$19254$U0r&n))) g$fmls*$19251$U0r&n))) g$body**$19252$U0r&n))) (case-lambda ((g$C$28020$U0r&n g$a*$19263$U0r&n g$b*$19264$U0r&n) ((case-lambda ((g$C$28017$U0r&n g$b*$19265$U0r&n g$a*$19266$U0r&n) (cons (case-lambda ((g$V$28018$U0r&n) (cons (case-lambda ((g$V$28019$U0r&n) (values g$C$28017$U0r&n g$V$28019$U0r&n g$V$28018$U0r&n))) g$a$19260$U0r&n g$a*$19266$U0r&n))) g$b$19259$U0r&n g$b*$19265$U0r&n))) g$C$28020$U0r&n g$b*$19264$U0r&n g$a*$19263$U0r&n)))))) g$C$28022$U0r&n g$b$19258$U0r&n g$a$19257$U0r&n))))))) g$fmls*$19251$U0r&n)))))) (library-letrec*-identity 'g$chi-lambda-clause*$17089$U0r&n))) (g$chi-defun$17090$U0r&n g$chi-defun$20687$U0r&n ((case-lambda ((g$C$29757$U0r&n) (g$C$29757$U0r&n (case-lambda ((g$C$28029$U0r&n g$x$19267$U0r&n g$r$19268$U0r&n g$mr$19269$U0r&n) (cdr (case-lambda ((g$V$28030$U0r&n) (car (case-lambda ((g$V$28031$U0r&n) ((case-lambda ((g$C$28028$U0r&n g$fmls$19270$U0r&n g$body*$19271$U0r&n) (call-with-values g$C$28028$U0r&n (case-lambda ((g$C$28025$U0r&n) (g$chi-lambda-clause$17088$U0r&n g$C$28025$U0r&n g$fmls$19270$U0r&n g$fmls$19270$U0r&n g$body*$19271$U0r&n g$r$19268$U0r&n g$mr$19269$U0r&n))) (case-lambda ((g$C$28027$U0r&n g$fmls$19274$U0r&n g$body$19275$U0r&n) ((case-lambda ((g$C$28026$U0r&n g$body$19276$U0r&n g$fmls$19277$U0r&n) (g$build-lambda$16491$U0r&n g$C$28026$U0r&n '#f g$fmls$19277$U0r&n g$body$19276$U0r&n))) g$C$28027$U0r&n g$body$19275$U0r&n g$fmls$19274$U0r&n)))))) g$C$28029$U0r&n g$V$28031$U0r&n g$V$28030$U0r&n))) g$x$19267$U0r&n))) g$x$19267$U0r&n)))))) (library-letrec*-identity 'g$chi-defun$17090$U0r&n))) (g$chi-rhs$17091$U0r&n g$chi-rhs$20688$U0r&n ((case-lambda ((g$C$29758$U0r&n) (g$C$29758$U0r&n (case-lambda ((g$C$28044$U0r&n g$rhs$19278$U0r&n g$r$19279$U0r&n g$mr$19280$U0r&n) (car (case-lambda ((g$V$28045$U0r&n) ((case-lambda ((g$C$28037$U0r&n g$t$19281$U0r&n) (eqv? (case-lambda ((g$T$28038$U0r&n) (if g$T$28038$U0r&n (cdr (case-lambda ((g$V$28039$U0r&n) (g$chi-defun$17090$U0r&n g$C$28037$U0r&n g$V$28039$U0r&n g$r$19279$U0r&n g$mr$19280$U0r&n))) g$rhs$19278$U0r&n) (eqv? (case-lambda ((g$T$28040$U0r&n) (if g$T$28040$U0r&n (cdr (case-lambda ((g$V$28041$U0r&n) ((case-lambda ((g$C$28032$U0r&n g$expr$19282$U0r&n) (g$chi-expr$17085$U0r&n g$C$28032$U0r&n g$expr$19282$U0r&n g$r$19279$U0r&n g$mr$19280$U0r&n))) g$C$28037$U0r&n g$V$28041$U0r&n))) g$rhs$19278$U0r&n) (eqv? (case-lambda ((g$T$28042$U0r&n) (if g$T$28042$U0r&n (cdr (case-lambda ((g$V$28043$U0r&n) ((case-lambda ((g$C$28033$U0r&n g$expr$19283$U0r&n) (g$build-void$16495$U0r&n (case-lambda ((g$V$28034$U0r&n) (g$chi-expr$17085$U0r&n (case-lambda ((g$V$28035$U0r&n) (list (case-lambda ((g$V$28036$U0r&n) (g$build-sequence$16494$U0r&n g$C$28033$U0r&n '#f g$V$28036$U0r&n))) g$V$28035$U0r&n g$V$28034$U0r&n))) g$expr$19283$U0r&n g$r$19279$U0r&n g$mr$19280$U0r&n)))))) g$C$28037$U0r&n g$V$28043$U0r&n))) g$rhs$19278$U0r&n) (g$assertion-violation$13786$U0r&n g$C$28037$U0r&n 'chi-rhs '"BUG: invalid rhs" g$rhs$19278$U0r&n)))) g$t$19281$U0r&n 'top-expr)))) g$t$19281$U0r&n 'expr)))) g$t$19281$U0r&n 'defun))) g$C$28044$U0r&n g$V$28045$U0r&n))) g$rhs$19278$U0r&n)))))) (library-letrec*-identity 'g$chi-rhs$17091$U0r&n))) (g$expand-interaction-rhs*/init*$17092$U0r&n g$expand-interaction-rhs*/init*$20689$U0r&n ((case-lambda ((g$C$29759$U0r&n) (g$C$29759$U0r&n (case-lambda ((g$C$28080$U0r&n g$lhs*$19284$U0r&n g$rhs*$19285$U0r&n g$init*$19286$U0r&n g$r$19287$U0r&n g$mr$19288$U0r&n) ((case-lambda ((g$C$28079$U0r&n g$f$19289$U0r&n) ((case-lambda ((g$C$28047$U0r&n g$f$28046$U0r&n) (begin (set! g$f$19289$U0r&n g$f$28046$U0r&n) (g$C$28047$U0r&n g$f$19289$U0r&n)))) g$C$28079$U0r&n (case-lambda ((g$C$28075$U0r&n g$lhs*$19290$U0r&n g$rhs*$19291$U0r&n) (null? (case-lambda ((g$T$28076$U0r&n) (if g$T$28076$U0r&n (g$map$12753$U0r&n g$C$28075$U0r&n (case-lambda ((g$C$28048$U0r&n g$x$19292$U0r&n) (g$chi-expr$17085$U0r&n g$C$28048$U0r&n g$x$19292$U0r&n g$r$19287$U0r&n g$mr$19288$U0r&n))) g$init*$19286$U0r&n) (car (case-lambda ((g$V$28077$U0r&n) (car (case-lambda ((g$V$28078$U0r&n) ((case-lambda ((g$C$28073$U0r&n g$lhs$19293$U0r&n g$rhs$19294$U0r&n) (car (case-lambda ((g$V$28074$U0r&n) ((case-lambda ((g$C$28063$U0r&n g$t$19295$U0r&n) (eqv? (case-lambda ((g$T$28064$U0r&n) (if g$T$28064$U0r&n (cdr (case-lambda ((g$V$28065$U0r&n) (g$chi-defun$17090$U0r&n (case-lambda ((g$V$28066$U0r&n) ((case-lambda ((g$C$28049$U0r&n g$rhs$19296$U0r&n) (cdr (case-lambda ((g$V$28050$U0r&n) (cdr (case-lambda ((g$V$28051$U0r&n) (g$f$19289$U0r&n (case-lambda ((g$V$28052$U0r&n) (list (case-lambda ((g$V$28053$U0r&n) (cons g$C$28049$U0r&n g$V$28053$U0r&n g$V$28052$U0r&n))) 'set! g$lhs$19293$U0r&n g$rhs$19296$U0r&n))) g$V$28051$U0r&n g$V$28050$U0r&n))) g$lhs*$19290$U0r&n))) g$rhs*$19291$U0r&n))) g$C$28063$U0r&n g$V$28066$U0r&n))) g$V$28065$U0r&n g$r$19287$U0r&n g$mr$19288$U0r&n))) g$rhs$19294$U0r&n) (eqv? (case-lambda ((g$T$28067$U0r&n) (if g$T$28067$U0r&n (cdr (case-lambda ((g$V$28068$U0r&n) (g$chi-expr$17085$U0r&n (case-lambda ((g$V$28069$U0r&n) ((case-lambda ((g$C$28054$U0r&n g$rhs$19297$U0r&n) (cdr (case-lambda ((g$V$28055$U0r&n) (cdr (case-lambda ((g$V$28056$U0r&n) (g$f$19289$U0r&n (case-lambda ((g$V$28057$U0r&n) (list (case-lambda ((g$V$28058$U0r&n) (cons g$C$28054$U0r&n g$V$28058$U0r&n g$V$28057$U0r&n))) 'set! g$lhs$19293$U0r&n g$rhs$19297$U0r&n))) g$V$28056$U0r&n g$V$28055$U0r&n))) g$lhs*$19290$U0r&n))) g$rhs*$19291$U0r&n))) g$C$28063$U0r&n g$V$28069$U0r&n))) g$V$28068$U0r&n g$r$19287$U0r&n g$mr$19288$U0r&n))) g$rhs$19294$U0r&n) (eqv? (case-lambda ((g$T$28070$U0r&n) (if g$T$28070$U0r&n (cdr (case-lambda ((g$V$28071$U0r&n) (g$chi-expr$17085$U0r&n (case-lambda ((g$V$28072$U0r&n) ((case-lambda ((g$C$28059$U0r&n g$e$19298$U0r&n) (cdr (case-lambda ((g$V$28060$U0r&n) (cdr (case-lambda ((g$V$28061$U0r&n) (g$f$19289$U0r&n (case-lambda ((g$V$28062$U0r&n) (cons g$C$28059$U0r&n g$e$19298$U0r&n g$V$28062$U0r&n))) g$V$28061$U0r&n g$V$28060$U0r&n))) g$lhs*$19290$U0r&n))) g$rhs*$19291$U0r&n))) g$C$28063$U0r&n g$V$28072$U0r&n))) g$V$28071$U0r&n g$r$19287$U0r&n g$mr$19288$U0r&n))) g$rhs$19294$U0r&n) (g$error$13787$U0r&n g$C$28063$U0r&n 'expand-interaction '"invallid" g$rhs$19294$U0r&n)))) g$t$19295$U0r&n 'top-expr)))) g$t$19295$U0r&n 'expr)))) g$t$19295$U0r&n 'defun))) g$C$28073$U0r&n g$V$28074$U0r&n))) g$rhs$19294$U0r&n))) g$C$28075$U0r&n g$V$28078$U0r&n g$V$28077$U0r&n))) g$lhs*$19290$U0r&n))) g$rhs*$19291$U0r&n)))) g$lhs*$19290$U0r&n)))))) (case-lambda ((g$V$28081$U0r&n) (g$V$28081$U0r&n g$C$28080$U0r&n g$lhs*$19284$U0r&n g$rhs*$19285$U0r&n))) uninitialized)))))) (library-letrec*-identity 'g$expand-interaction-rhs*/init*$17092$U0r&n))) (g$chi-rhs*$17093$U0r&n g$chi-rhs*$20690$U0r&n ((case-lambda ((g$C$29760$U0r&n) (g$C$29760$U0r&n (case-lambda ((g$C$28092$U0r&n g$rhs*$19299$U0r&n g$r$19300$U0r&n g$mr$19301$U0r&n) ((case-lambda ((g$C$28091$U0r&n g$f$19302$U0r&n) ((case-lambda ((g$C$28083$U0r&n g$f$28082$U0r&n) (begin (set! g$f$19302$U0r&n g$f$28082$U0r&n) (g$C$28083$U0r&n g$f$19302$U0r&n)))) g$C$28091$U0r&n (case-lambda ((g$C$28087$U0r&n g$ls$19303$U0r&n) (null? (case-lambda ((g$T$28088$U0r&n) (if g$T$28088$U0r&n (g$C$28087$U0r&n '()) (car (case-lambda ((g$V$28089$U0r&n) (g$chi-rhs$17091$U0r&n (case-lambda ((g$V$28090$U0r&n) ((case-lambda ((g$C$28084$U0r&n g$a$19304$U0r&n) (cdr (case-lambda ((g$V$28085$U0r&n) (g$f$19302$U0r&n (case-lambda ((g$V$28086$U0r&n) (cons g$C$28084$U0r&n g$a$19304$U0r&n g$V$28086$U0r&n))) g$V$28085$U0r&n))) g$ls$19303$U0r&n))) g$C$28087$U0r&n g$V$28090$U0r&n))) g$V$28089$U0r&n g$r$19300$U0r&n g$mr$19301$U0r&n))) g$ls$19303$U0r&n)))) g$ls$19303$U0r&n)))))) (case-lambda ((g$V$28093$U0r&n) (g$V$28093$U0r&n g$C$28092$U0r&n g$rhs*$19299$U0r&n))) uninitialized)))))) (library-letrec*-identity 'g$chi-rhs*$17093$U0r&n))) (g$find-bound=?$17094$U0r&n g$find-bound=?$20691$U0r&n ((case-lambda ((g$C$29761$U0r&n) (g$C$29761$U0r&n (case-lambda ((g$C$28094$U0r&n g$x$19305$U0r&n g$lhs*$19306$U0r&n g$rhs*$19307$U0r&n) (null? (case-lambda ((g$T$28095$U0r&n) (if g$T$28095$U0r&n (g$C$28094$U0r&n '#f) (car (case-lambda ((g$V$28096$U0r&n) (g$bound-id=?$16572$U0r&n (case-lambda ((g$T$28097$U0r&n) (if g$T$28097$U0r&n (car g$C$28094$U0r&n g$rhs*$19307$U0r&n) (cdr (case-lambda ((g$V$28098$U0r&n) (cdr (case-lambda ((g$V$28099$U0r&n) (g$find-bound=?$17094$U0r&n g$C$28094$U0r&n g$x$19305$U0r&n g$V$28099$U0r&n g$V$28098$U0r&n))) g$lhs*$19306$U0r&n))) g$rhs*$19307$U0r&n)))) g$x$19305$U0r&n g$V$28096$U0r&n))) g$lhs*$19306$U0r&n)))) g$lhs*$19306$U0r&n)))))) (library-letrec*-identity 'g$find-bound=?$17094$U0r&n))) (g$find-dups$17095$U0r&n g$find-dups$20692$U0r&n ((case-lambda ((g$C$29762$U0r&n) (g$C$29762$U0r&n (case-lambda ((g$C$28116$U0r&n g$ls$19308$U0r&n) ((case-lambda ((g$C$28115$U0r&n g$f$19309$U0r&n) ((case-lambda ((g$C$28101$U0r&n g$f$28100$U0r&n) (begin (set! g$f$19309$U0r&n g$f$28100$U0r&n) (g$C$28101$U0r&n g$f$19309$U0r&n)))) g$C$28115$U0r&n (case-lambda ((g$C$28109$U0r&n g$ls$19310$U0r&n g$dups$19311$U0r&n) (null? (case-lambda ((g$T$28110$U0r&n) (if g$T$28110$U0r&n (g$C$28109$U0r&n g$dups$19311$U0r&n) (cdr (case-lambda ((g$V$28111$U0r&n) (cdr (case-lambda ((g$V$28112$U0r&n) (car (case-lambda ((g$V$28113$U0r&n) (g$find-bound=?$17094$U0r&n (case-lambda ((g$V$28114$U0r&n) ((case-lambda ((g$C$28107$U0r&n g$t$19312$U0r&n) (if g$t$19312$U0r&n ((case-lambda ((g$C$28102$U0r&n g$x$19313$U0r&n) (car (case-lambda ((g$V$28103$U0r&n) (list (case-lambda ((g$V$28104$U0r&n) (cons (case-lambda ((g$V$28105$U0r&n) (cdr (case-lambda ((g$V$28106$U0r&n) (g$f$19309$U0r&n g$C$28102$U0r&n g$V$28106$U0r&n g$V$28105$U0r&n))) g$ls$19310$U0r&n))) g$V$28104$U0r&n g$dups$19311$U0r&n))) g$V$28103$U0r&n g$x$19313$U0r&n))) g$ls$19310$U0r&n))) g$C$28107$U0r&n g$t$19312$U0r&n) (cdr (case-lambda ((g$V$28108$U0r&n) (g$f$19309$U0r&n g$C$28107$U0r&n g$V$28108$U0r&n g$dups$19311$U0r&n))) g$ls$19310$U0r&n)))) g$C$28109$U0r&n g$V$28114$U0r&n))) g$V$28113$U0r&n g$V$28112$U0r&n g$V$28111$U0r&n))) g$ls$19310$U0r&n))) g$ls$19310$U0r&n))) g$ls$19310$U0r&n)))) g$ls$19310$U0r&n)))))) (case-lambda ((g$V$28117$U0r&n) (g$V$28117$U0r&n g$C$28116$U0r&n g$ls$19308$U0r&n '()))) uninitialized)))))) (library-letrec*-identity 'g$find-dups$17095$U0r&n))) (g$chi-internal$17096$U0r&n g$chi-internal$20693$U0r&n ((case-lambda ((g$C$29763$U0r&n) (g$C$29763$U0r&n (case-lambda ((g$C$28138$U0r&n g$e*$19314$U0r&n g$r$19315$U0r&n g$mr$19316$U0r&n) (g$make-empty-rib$16527$U0r&n (case-lambda ((g$V$28139$U0r&n) ((case-lambda ((g$C$28137$U0r&n g$rib$19317$U0r&n) (call-with-values g$C$28137$U0r&n (case-lambda ((g$C$28119$U0r&n) (g$syntax->list$16568$U0r&n (case-lambda ((g$V$28120$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$28121$U0r&n) (g$chi-body*$17114$U0r&n g$C$28119$U0r&n g$V$28121$U0r&n g$r$19315$U0r&n g$mr$19316$U0r&n '() '() '() '() '() g$rib$19317$U0r&n '#f '#t))) (case-lambda ((g$C$28118$U0r&n g$x$19326$U0r&n) (g$add-subst$16559$U0r&n g$C$28118$U0r&n g$rib$19317$U0r&n g$x$19326$U0r&n))) g$V$28120$U0r&n))) g$e*$19314$U0r&n))) (case-lambda ((g$C$28136$U0r&n g$e*$19327$U0r&n g$r$19328$U0r&n g$mr$19329$U0r&n g$lex*$19330$U0r&n g$rhs*$19331$U0r&n g$mod**$19332$U0r&n g$kwd*$19333$U0r&n g$_exp*$19334$U0r&n) ((case-lambda ((g$C$28128$U0r&n g$_exp*$19335$U0r&n g$kwd*$19336$U0r&n g$mod**$19337$U0r&n g$rhs*$19338$U0r&n g$lex*$19339$U0r&n g$mr$19340$U0r&n g$r$19341$U0r&n g$e*$19342$U0r&n) ((case-lambda ((g$J$28134$U0r&n) (null? (case-lambda ((g$T$28135$U0r&n) (if g$T$28135$U0r&n (g$syntax-violation$17186$U0r&n g$J$28134$U0r&n '#f '"no expression in body" g$e*$19342$U0r&n) (void g$J$28134$U0r&n)))) g$e*$19342$U0r&n))) (case-lambda (g$IGNORE$28129$U0r&n (g$reverse$13504$U0r&n (case-lambda ((g$V$28130$U0r&n) (apply (case-lambda ((g$V$28131$U0r&n) (append (case-lambda ((g$V$28132$U0r&n) (g$chi-expr*$17083$U0r&n (case-lambda ((g$V$28133$U0r&n) ((case-lambda ((g$C$28126$U0r&n g$init*$19343$U0r&n) (g$chi-rhs*$17093$U0r&n (case-lambda ((g$V$28127$U0r&n) ((case-lambda ((g$C$28122$U0r&n g$rhs*$19344$U0r&n) (g$build-sequence$16494$U0r&n (case-lambda ((g$V$28123$U0r&n) (g$reverse$13504$U0r&n (case-lambda ((g$V$28124$U0r&n) (g$reverse$13504$U0r&n (case-lambda ((g$V$28125$U0r&n) (g$build-letrec*$16497$U0r&n g$C$28122$U0r&n '#f g$V$28125$U0r&n g$V$28124$U0r&n g$V$28123$U0r&n))) g$lex*$19339$U0r&n))) g$rhs*$19344$U0r&n))) '#f g$init*$19343$U0r&n))) g$C$28126$U0r&n g$V$28127$U0r&n))) g$rhs*$19338$U0r&n g$r$19341$U0r&n g$mr$19340$U0r&n))) g$C$28128$U0r&n g$V$28133$U0r&n))) g$V$28132$U0r&n g$r$19341$U0r&n g$mr$19340$U0r&n))) g$V$28131$U0r&n g$e*$19342$U0r&n))) append g$V$28130$U0r&n))) g$mod**$19337$U0r&n)))))) g$C$28136$U0r&n g$_exp*$19334$U0r&n g$kwd*$19333$U0r&n g$mod**$19332$U0r&n g$rhs*$19331$U0r&n g$lex*$19330$U0r&n g$mr$19329$U0r&n g$r$19328$U0r&n g$e*$19327$U0r&n)))))) g$C$28138$U0r&n g$V$28139$U0r&n))))))))) (library-letrec*-identity 'g$chi-internal$17096$U0r&n))) (g$parse-module$17097$U0r&n g$parse-module$20694$U0r&n ((case-lambda ((g$C$29764$U0r&n) (g$C$29764$U0r&n (case-lambda ((g$C$28162$U0r&n g$e$19345$U0r&n) ((case-lambda ((g$C$28160$U0r&n g$t$19346$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28161$U0r&n) ((case-lambda ((g$C$28159$U0r&n g$ls/false$19347$U0r&n) (if g$ls/false$19347$U0r&n (apply g$C$28159$U0r&n (case-lambda ((g$C$28140$U0r&n g$export*$19348$U0r&n g$b*$19349$U0r&n) ((case-lambda ((g$J$28143$U0r&n) (g$for-all$12751$U0r&n (case-lambda ((g$V$28144$U0r&n) (not (case-lambda ((g$T$28145$U0r&n) (if g$T$28145$U0r&n (g$syntax-violation$17186$U0r&n g$J$28143$U0r&n '#f '"module exports must be identifiers" g$e$19345$U0r&n) (void g$J$28143$U0r&n)))) g$V$28144$U0r&n))) g$id?$16569$U0r&n g$export*$19348$U0r&n))) (case-lambda (g$IGNORE$28141$U0r&n (g$list->vector$13491$U0r&n (case-lambda ((g$V$28142$U0r&n) (values g$C$28140$U0r&n '#f g$V$28142$U0r&n g$b*$19349$U0r&n))) g$export*$19348$U0r&n)))))) g$ls/false$19347$U0r&n) ((case-lambda ((g$C$28157$U0r&n g$t$19350$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28158$U0r&n) ((case-lambda ((g$C$28156$U0r&n g$ls/false$19351$U0r&n) (if g$ls/false$19351$U0r&n (apply g$C$28156$U0r&n (case-lambda ((g$C$28146$U0r&n g$name$19352$U0r&n g$export*$19353$U0r&n g$b*$19354$U0r&n) ((case-lambda ((g$J$28153$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$V$28154$U0r&n) (not (case-lambda ((g$T$28155$U0r&n) (if g$T$28155$U0r&n (g$syntax-violation$17186$U0r&n g$J$28153$U0r&n '#f '"module name must be an identifier" g$e$19345$U0r&n) (void g$J$28153$U0r&n)))) g$V$28154$U0r&n))) g$name$19352$U0r&n))) (case-lambda (g$IGNORE$28147$U0r&n ((case-lambda ((g$J$28150$U0r&n) (g$for-all$12751$U0r&n (case-lambda ((g$V$28151$U0r&n) (not (case-lambda ((g$T$28152$U0r&n) (if g$T$28152$U0r&n (g$syntax-violation$17186$U0r&n g$J$28150$U0r&n '#f '"module exports must be identifiers" g$e$19345$U0r&n) (void g$J$28150$U0r&n)))) g$V$28151$U0r&n))) g$id?$16569$U0r&n g$export*$19353$U0r&n))) (case-lambda (g$IGNORE$28148$U0r&n (g$list->vector$13491$U0r&n (case-lambda ((g$V$28149$U0r&n) (values g$C$28146$U0r&n g$name$19352$U0r&n g$V$28149$U0r&n g$b*$19354$U0r&n))) g$export*$19353$U0r&n))))))))) g$ls/false$19351$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28156$U0r&n '#f '"invalid syntax" g$t$19350$U0r&n)))) g$C$28157$U0r&n g$V$28158$U0r&n))) g$t$19350$U0r&n '(_ any each-any . each-any)))) g$C$28159$U0r&n g$t$19346$U0r&n)))) g$C$28160$U0r&n g$V$28161$U0r&n))) g$t$19346$U0r&n '(_ each-any . each-any)))) g$C$28162$U0r&n g$e$19345$U0r&n)))))) (library-letrec*-identity 'g$parse-module$17097$U0r&n))) (g$8496$17098$U0r&n g$8496$20695$U0r&n ((case-lambda ((g$C$29765$U0r&n) (make-record-type-descriptor g$C$29765$U0r&n 'module-interface '#f 'g$8499$U0r&n '#t '#t '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))) (library-letrec*-identity 'g$8496$17098$U0r&n))) (g$8498$17099$U0r&n g$8498$20696$U0r&n ((case-lambda ((g$C$29766$U0r&n) (g$C$29766$U0r&n '#f))) (library-letrec*-identity 'g$8498$17099$U0r&n))) (g$8497$17100$U0r&n g$8497$20697$U0r&n ((case-lambda ((g$C$29767$U0r&n) (make-record-constructor-descriptor g$C$29767$U0r&n g$8496$17098$U0r&n '#f g$8498$17099$U0r&n))) (library-letrec*-identity 'g$8497$17100$U0r&n))) (g$module-interface?$17103$U0r&n g$module-interface?$20698$U0r&n ((case-lambda ((g$C$29768$U0r&n) (record-predicate g$C$29768$U0r&n g$8496$17098$U0r&n))) (library-letrec*-identity 'g$module-interface?$17103$U0r&n))) (g$make-module-interface$17104$U0r&n g$make-module-interface$20699$U0r&n ((case-lambda ((g$C$29769$U0r&n) (record-constructor g$C$29769$U0r&n g$8497$17100$U0r&n))) (library-letrec*-identity 'g$make-module-interface$17104$U0r&n))) (g$module-interface-first-mark$17105$U0r&n g$module-interface-first-mark$20700$U0r&n ((case-lambda ((g$C$29770$U0r&n) (record-accessor g$C$29770$U0r&n g$8496$17098$U0r&n '0))) (library-letrec*-identity 'g$module-interface-first-mark$17105$U0r&n))) (g$module-interface-exp-id-vec$17106$U0r&n g$module-interface-exp-id-vec$20701$U0r&n ((case-lambda ((g$C$29771$U0r&n) (record-accessor g$C$29771$U0r&n g$8496$17098$U0r&n '1))) (library-letrec*-identity 'g$module-interface-exp-id-vec$17106$U0r&n))) (g$module-interface-exp-lab-vec$17107$U0r&n g$module-interface-exp-lab-vec$20702$U0r&n ((case-lambda ((g$C$29772$U0r&n) (record-accessor g$C$29772$U0r&n g$8496$17098$U0r&n '2))) (library-letrec*-identity 'g$module-interface-exp-lab-vec$17107$U0r&n))) (g$set-module-interface-first-mark!$17108$U0r&n g$set-module-interface-first-mark!$20703$U0r&n ((case-lambda ((g$C$29773$U0r&n) (record-mutator g$C$29773$U0r&n g$8496$17098$U0r&n '0))) (library-letrec*-identity 'g$set-module-interface-first-mark!$17108$U0r&n))) (g$set-module-interface-exp-id-vec!$17109$U0r&n g$set-module-interface-exp-id-vec!$20704$U0r&n ((case-lambda ((g$C$29774$U0r&n) (record-mutator g$C$29774$U0r&n g$8496$17098$U0r&n '1))) (library-letrec*-identity 'g$set-module-interface-exp-id-vec!$17109$U0r&n))) (g$set-module-interface-exp-lab-vec!$17110$U0r&n g$set-module-interface-exp-lab-vec!$20705$U0r&n ((case-lambda ((g$C$29775$U0r&n) (record-mutator g$C$29775$U0r&n g$8496$17098$U0r&n '2))) (library-letrec*-identity 'g$set-module-interface-exp-lab-vec!$17110$U0r&n))) (g$module-interface-exp-id*$17111$U0r&n g$module-interface-exp-id*$20706$U0r&n ((case-lambda ((g$C$29776$U0r&n) (g$C$29776$U0r&n (case-lambda ((g$C$28183$U0r&n g$iface$19355$U0r&n g$id$19356$U0r&n) ((case-lambda ((g$C$28178$U0r&n g$diff-marks$19357$U0r&n) (begin (set! g$diff-marks$19357$U0r&n (case-lambda ((g$C$28167$U0r&n g$ls$19361$U0r&n g$x$19362$U0r&n) ((case-lambda ((g$J$28170$U0r&n) (null? (case-lambda ((g$T$28171$U0r&n) (if g$T$28171$U0r&n (g$error$13787$U0r&n g$J$28170$U0r&n 'diff-marks '"BUG: should not happen") (void g$J$28170$U0r&n)))) g$ls$19361$U0r&n))) (case-lambda (g$IGNORE$28168$U0r&n (car (case-lambda ((g$V$28169$U0r&n) ((case-lambda ((g$C$28163$U0r&n g$a$19363$U0r&n) (eq? (case-lambda ((g$T$28164$U0r&n) (if g$T$28164$U0r&n (g$C$28163$U0r&n '()) (cdr (case-lambda ((g$V$28165$U0r&n) (g$diff-marks$19357$U0r&n (case-lambda ((g$V$28166$U0r&n) (cons g$C$28163$U0r&n g$a$19363$U0r&n g$V$28166$U0r&n))) g$V$28165$U0r&n g$x$19362$U0r&n))) g$ls$19361$U0r&n)))) g$a$19363$U0r&n g$x$19362$U0r&n))) g$C$28167$U0r&n g$V$28169$U0r&n))) g$ls$19361$U0r&n))))))) (g$module-interface-exp-id-vec$17106$U0r&n (case-lambda ((g$V$28179$U0r&n) (g$module-interface-first-mark$17105$U0r&n (case-lambda ((g$V$28180$U0r&n) (g$stx-mark*$16544$U0r&n (case-lambda ((g$V$28181$U0r&n) (g$diff-marks$19357$U0r&n (case-lambda ((g$V$28182$U0r&n) ((case-lambda ((g$C$28176$U0r&n g$diff$19358$U0r&n g$id-vec$19359$U0r&n) (null? (case-lambda ((g$T$28177$U0r&n) (if g$T$28177$U0r&n (g$C$28176$U0r&n g$id-vec$19359$U0r&n) (g$vector-map$13557$U0r&n g$C$28176$U0r&n (case-lambda ((g$C$28172$U0r&n g$x$19360$U0r&n) (g$stx-mark*$16544$U0r&n (case-lambda ((g$V$28173$U0r&n) (append (case-lambda ((g$V$28174$U0r&n) (g$stx-expr$16543$U0r&n (case-lambda ((g$V$28175$U0r&n) (g$make-stx$16542$U0r&n g$C$28172$U0r&n g$V$28175$U0r&n g$V$28174$U0r&n '() '()))) g$x$19360$U0r&n))) g$diff$19358$U0r&n g$V$28173$U0r&n))) g$x$19360$U0r&n))) g$id-vec$19359$U0r&n)))) g$diff$19358$U0r&n))) g$C$28178$U0r&n g$V$28182$U0r&n g$V$28179$U0r&n))) g$V$28181$U0r&n g$V$28180$U0r&n))) g$id$19356$U0r&n))) g$iface$19355$U0r&n))) g$iface$19355$U0r&n)))) g$C$28183$U0r&n uninitialized)))))) (library-letrec*-identity 'g$module-interface-exp-id*$17111$U0r&n))) (g$syntax-transpose$17112$U0r&n g$syntax-transpose$20707$U0r&n ((case-lambda ((g$C$29777$U0r&n) (g$C$29777$U0r&n (case-lambda ((g$C$28246$U0r&n g$object$19364$U0r&n g$base-id$19365$U0r&n g$new-id$19366$U0r&n) ((case-lambda ((g$C$28233$U0r&n g$who$19367$U0r&n g$err$19368$U0r&n g$split$19369$U0r&n g$final$19370$U0r&n g$diff$19371$U0r&n) (begin (set! g$who$19367$U0r&n 'syntax-transpose) (begin (set! g$err$19368$U0r&n (case-lambda ((g$C$28184$U0r&n g$msg$19410$U0r&n . g$args$19411$U0r&n) (apply g$C$28184$U0r&n g$assertion-violation$13786$U0r&n g$who$19367$U0r&n g$msg$19410$U0r&n g$args$19411$U0r&n)))) (begin (set! g$split$19369$U0r&n (case-lambda ((g$C$28191$U0r&n g$s*$19403$U0r&n) (car (case-lambda ((g$V$28192$U0r&n) (eq? (case-lambda ((g$T$28193$U0r&n) (if g$T$28193$U0r&n (cdr (case-lambda ((g$V$28194$U0r&n) (list (case-lambda ((g$V$28195$U0r&n) (values g$C$28191$U0r&n g$V$28195$U0r&n g$V$28194$U0r&n))) 'shift))) g$s*$19403$U0r&n) (call-with-values g$C$28191$U0r&n (case-lambda ((g$C$28185$U0r&n) (cdr (case-lambda ((g$V$28186$U0r&n) (g$split$19369$U0r&n g$C$28185$U0r&n g$V$28186$U0r&n))) g$s*$19403$U0r&n))) (case-lambda ((g$C$28190$U0r&n g$s1*$19406$U0r&n g$s2*$19407$U0r&n) ((case-lambda ((g$C$28187$U0r&n g$s2*$19408$U0r&n g$s1*$19409$U0r&n) (car (case-lambda ((g$V$28188$U0r&n) (cons (case-lambda ((g$V$28189$U0r&n) (values g$C$28187$U0r&n g$V$28189$U0r&n g$s2*$19408$U0r&n))) g$V$28188$U0r&n g$s1*$19409$U0r&n))) g$s*$19403$U0r&n))) g$C$28190$U0r&n g$s2*$19407$U0r&n g$s1*$19406$U0r&n))))))) g$V$28192$U0r&n 'shift))) g$s*$19403$U0r&n)))) (begin (set! g$final$19370$U0r&n (case-lambda ((g$C$28198$U0r&n g$s*$19401$U0r&n) (null? (case-lambda ((g$V$28199$U0r&n) ((case-lambda ((g$C$28196$U0r&n g$t$19402$U0r&n) (if g$t$19402$U0r&n (g$C$28196$U0r&n g$t$19402$U0r&n) (car (case-lambda ((g$V$28197$U0r&n) (eq? g$C$28196$U0r&n g$V$28197$U0r&n 'shift))) g$s*$19401$U0r&n)))) (case-lambda ((g$T$28200$U0r&n) (if g$T$28200$U0r&n (g$C$28198$U0r&n '()) (cdr (case-lambda ((g$V$28201$U0r&n) (g$final$19370$U0r&n (case-lambda ((g$V$28202$U0r&n) (car (case-lambda ((g$V$28203$U0r&n) (cons g$C$28198$U0r&n g$V$28203$U0r&n g$V$28202$U0r&n))) g$s*$19401$U0r&n))) g$V$28201$U0r&n))) g$s*$19401$U0r&n)))) g$V$28199$U0r&n))) g$s*$19401$U0r&n)))) (begin (set! g$diff$19371$U0r&n (case-lambda ((g$C$28219$U0r&n g$m$19381$U0r&n g$m*$19382$U0r&n g$s*$19383$U0r&n g$ae*$19384$U0r&n) (null? (case-lambda ((g$T$28220$U0r&n) (if g$T$28220$U0r&n (g$err$19368$U0r&n g$C$28219$U0r&n '"unmatched identifiers" g$base-id$19365$U0r&n g$new-id$19366$U0r&n) (car (case-lambda ((g$V$28221$U0r&n) ((case-lambda ((g$C$28216$U0r&n g$m1$19385$U0r&n) (eq? (case-lambda ((g$T$28217$U0r&n) (if g$T$28217$U0r&n (g$final$19370$U0r&n (case-lambda ((g$V$28218$U0r&n) (values g$C$28216$U0r&n '() g$V$28218$U0r&n '()))) g$s*$19383$U0r&n) (call-with-values g$C$28216$U0r&n (case-lambda ((g$C$28204$U0r&n) (g$split$19369$U0r&n g$C$28204$U0r&n g$s*$19383$U0r&n))) (case-lambda ((g$C$28215$U0r&n g$s1*$19388$U0r&n g$s2*$19389$U0r&n) ((case-lambda ((g$C$28214$U0r&n g$s2*$19390$U0r&n g$s1*$19391$U0r&n) (call-with-values g$C$28214$U0r&n (case-lambda ((g$C$28205$U0r&n) (cdr (case-lambda ((g$V$28206$U0r&n) (cdr (case-lambda ((g$V$28207$U0r&n) (g$diff$19371$U0r&n g$C$28205$U0r&n g$m$19381$U0r&n g$V$28207$U0r&n g$s2*$19390$U0r&n g$V$28206$U0r&n))) g$m*$19382$U0r&n))) g$ae*$19384$U0r&n))) (case-lambda ((g$C$28213$U0r&n g$nm*$19395$U0r&n g$ns*$19396$U0r&n g$nae*$19397$U0r&n) ((case-lambda ((g$C$28208$U0r&n g$nae*$19398$U0r&n g$ns*$19399$U0r&n g$nm*$19400$U0r&n) (car (case-lambda ((g$V$28209$U0r&n) (cons (case-lambda ((g$V$28210$U0r&n) (append (case-lambda ((g$V$28211$U0r&n) (cons (case-lambda ((g$V$28212$U0r&n) (values g$C$28208$U0r&n g$V$28212$U0r&n g$V$28211$U0r&n g$V$28210$U0r&n))) g$m1$19385$U0r&n g$nm*$19400$U0r&n))) g$s1*$19391$U0r&n g$ns*$19399$U0r&n))) g$V$28209$U0r&n g$nae*$19398$U0r&n))) g$ae*$19384$U0r&n))) g$C$28213$U0r&n g$nae*$19397$U0r&n g$ns*$19396$U0r&n g$nm*$19395$U0r&n)))))) g$C$28215$U0r&n g$s2*$19389$U0r&n g$s1*$19388$U0r&n))))))) g$m$19381$U0r&n g$m1$19385$U0r&n))) g$C$28219$U0r&n g$V$28221$U0r&n))) g$m*$19382$U0r&n)))) g$m*$19382$U0r&n)))) ((case-lambda ((g$J$28243$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$V$28244$U0r&n) (not (case-lambda ((g$T$28245$U0r&n) (if g$T$28245$U0r&n (g$err$19368$U0r&n g$J$28243$U0r&n '"not an identifier" g$base-id$19365$U0r&n) (void g$J$28243$U0r&n)))) g$V$28244$U0r&n))) g$base-id$19365$U0r&n))) (case-lambda (g$IGNORE$28234$U0r&n ((case-lambda ((g$J$28240$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$V$28241$U0r&n) (not (case-lambda ((g$T$28242$U0r&n) (if g$T$28242$U0r&n (g$err$19368$U0r&n g$J$28240$U0r&n '"not an identifier" g$new-id$19366$U0r&n) (void g$J$28240$U0r&n)))) g$V$28241$U0r&n))) g$new-id$19366$U0r&n))) (case-lambda (g$IGNORE$28235$U0r&n ((case-lambda ((g$J$28237$U0r&n) (g$free-identifier=?$17177$U0r&n (case-lambda ((g$V$28238$U0r&n) (not (case-lambda ((g$T$28239$U0r&n) (if g$T$28239$U0r&n (g$err$19368$U0r&n g$J$28237$U0r&n '"not the same identifier" g$base-id$19365$U0r&n g$new-id$19366$U0r&n) (void g$J$28237$U0r&n)))) g$V$28238$U0r&n))) g$base-id$19365$U0r&n g$new-id$19366$U0r&n))) (case-lambda (g$IGNORE$28236$U0r&n (call-with-values g$C$28233$U0r&n (case-lambda ((g$C$28222$U0r&n) (g$stx-ae*$16546$U0r&n (case-lambda ((g$V$28223$U0r&n) (g$stx-subst*$16545$U0r&n (case-lambda ((g$V$28224$U0r&n) (g$stx-mark*$16544$U0r&n (case-lambda ((g$V$28225$U0r&n) (g$stx-mark*$16544$U0r&n (case-lambda ((g$V$28226$U0r&n) (car (case-lambda ((g$V$28227$U0r&n) (g$diff$19371$U0r&n g$C$28222$U0r&n g$V$28227$U0r&n g$V$28225$U0r&n g$V$28224$U0r&n g$V$28223$U0r&n))) g$V$28226$U0r&n))) g$base-id$19365$U0r&n))) g$new-id$19366$U0r&n))) g$new-id$19366$U0r&n))) g$new-id$19366$U0r&n))) (case-lambda ((g$C$28232$U0r&n g$m*$19375$U0r&n g$s*$19376$U0r&n g$ae*$19377$U0r&n) ((case-lambda ((g$C$28228$U0r&n g$ae*$19378$U0r&n g$s*$19379$U0r&n g$m*$19380$U0r&n) ((case-lambda ((g$J$28230$U0r&n) (null? (case-lambda ((g$T$28231$U0r&n) (if g$T$28231$U0r&n (null? g$J$28230$U0r&n g$s*$19379$U0r&n) (g$J$28230$U0r&n '#f)))) g$m*$19380$U0r&n))) (case-lambda ((g$T$28229$U0r&n) (if g$T$28229$U0r&n (g$C$28228$U0r&n g$object$19364$U0r&n) (g$mkstx$16557$U0r&n g$C$28228$U0r&n g$object$19364$U0r&n g$m*$19380$U0r&n g$s*$19379$U0r&n g$ae*$19378$U0r&n))))))) g$C$28232$U0r&n g$ae*$19377$U0r&n g$s*$19376$U0r&n g$m*$19375$U0r&n)))))))))))))))))))) g$C$28246$U0r&n uninitialized uninitialized uninitialized uninitialized uninitialized)))))) (library-letrec*-identity 'g$syntax-transpose$17112$U0r&n))) (g$chi-internal-module$17113$U0r&n g$chi-internal-module$20708$U0r&n ((case-lambda ((g$C$29778$U0r&n) (g$C$29778$U0r&n (case-lambda ((g$C$28287$U0r&n g$e$19412$U0r&n g$r$19413$U0r&n g$mr$19414$U0r&n g$lex*$19415$U0r&n g$rhs*$19416$U0r&n g$mod**$19417$U0r&n g$kwd*$19418$U0r&n) (call-with-values g$C$28287$U0r&n (case-lambda ((g$C$28247$U0r&n) (g$parse-module$17097$U0r&n g$C$28247$U0r&n g$e$19412$U0r&n))) (case-lambda ((g$C$28286$U0r&n g$name$19422$U0r&n g$exp-id*$19423$U0r&n g$e*$19424$U0r&n) ((case-lambda ((g$C$28284$U0r&n g$e*$19425$U0r&n g$exp-id*$19426$U0r&n g$name$19427$U0r&n) (g$make-empty-rib$16527$U0r&n (case-lambda ((g$V$28285$U0r&n) ((case-lambda ((g$C$28281$U0r&n g$rib$19428$U0r&n) (g$syntax->list$16568$U0r&n (case-lambda ((g$V$28282$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$28283$U0r&n) ((case-lambda ((g$C$28279$U0r&n g$e*$19429$U0r&n) (call-with-values g$C$28279$U0r&n (case-lambda ((g$C$28248$U0r&n) (g$chi-body*$17114$U0r&n g$C$28248$U0r&n g$e*$19429$U0r&n g$r$19413$U0r&n g$mr$19414$U0r&n g$lex*$19415$U0r&n g$rhs*$19416$U0r&n g$mod**$19417$U0r&n g$kwd*$19418$U0r&n '() g$rib$19428$U0r&n '#f '#t))) (case-lambda ((g$C$28278$U0r&n g$e*$19438$U0r&n g$r$19439$U0r&n g$mr$19440$U0r&n g$lex*$19441$U0r&n g$rhs*$19442$U0r&n g$mod**$19443$U0r&n g$kwd*$19444$U0r&n g$_exp*$19445$U0r&n) ((case-lambda ((g$C$28275$U0r&n g$_exp*$19446$U0r&n g$kwd*$19447$U0r&n g$mod**$19448$U0r&n g$rhs*$19449$U0r&n g$lex*$19450$U0r&n g$mr$19451$U0r&n g$r$19452$U0r&n g$e*$19453$U0r&n) (cons (case-lambda ((g$V$28276$U0r&n) (g$vector-map$13557$U0r&n (case-lambda ((g$V$28277$U0r&n) ((case-lambda ((g$C$28261$U0r&n g$exp-lab*$19454$U0r&n g$mod**$19455$U0r&n) (not (case-lambda ((g$T$28262$U0r&n) (if g$T$28262$U0r&n (values g$C$28261$U0r&n g$lex*$19450$U0r&n g$rhs*$19449$U0r&n g$exp-id*$19426$U0r&n g$exp-lab*$19454$U0r&n g$r$19452$U0r&n g$mr$19451$U0r&n g$mod**$19455$U0r&n g$kwd*$19447$U0r&n) (g$vector-map$13557$U0r&n (case-lambda ((g$V$28263$U0r&n) (g$stx-mark*$16544$U0r&n (case-lambda ((g$V$28264$U0r&n) (car (case-lambda ((g$V$28265$U0r&n) (g$make-module-interface$17104$U0r&n (case-lambda ((g$V$28266$U0r&n) (g$gen-label$16506$U0r&n (case-lambda ((g$V$28267$U0r&n) ((case-lambda ((g$C$28249$U0r&n g$lab$19456$U0r&n g$iface$19457$U0r&n) (cons (case-lambda ((g$V$28250$U0r&n) (cons (case-lambda ((g$V$28251$U0r&n) (cons (case-lambda ((g$V$28252$U0r&n) (cons (case-lambda ((g$V$28253$U0r&n) (cons (case-lambda ((g$V$28254$U0r&n) (cons (case-lambda ((g$V$28255$U0r&n) (vector (case-lambda ((g$V$28256$U0r&n) (vector (case-lambda ((g$V$28257$U0r&n) (values g$C$28249$U0r&n g$lex*$19450$U0r&n g$rhs*$19449$U0r&n g$V$28257$U0r&n g$V$28256$U0r&n g$V$28255$U0r&n g$V$28252$U0r&n g$mod**$19455$U0r&n g$kwd*$19447$U0r&n))) g$name$19427$U0r&n))) g$lab$19456$U0r&n))) g$V$28254$U0r&n g$r$19452$U0r&n))) g$lab$19456$U0r&n g$V$28253$U0r&n))) '$module g$iface$19457$U0r&n))) g$V$28251$U0r&n g$mr$19451$U0r&n))) g$lab$19456$U0r&n g$V$28250$U0r&n))) '$module g$iface$19457$U0r&n))) g$C$28261$U0r&n g$V$28267$U0r&n g$V$28266$U0r&n))) 'module))) g$V$28265$U0r&n g$V$28263$U0r&n g$exp-lab*$19454$U0r&n))) g$V$28264$U0r&n))) g$name$19427$U0r&n))) (case-lambda ((g$C$28258$U0r&n g$x$19458$U0r&n) (g$stx-mark*$16544$U0r&n (case-lambda ((g$V$28259$U0r&n) (g$stx-expr$16543$U0r&n (case-lambda ((g$V$28260$U0r&n) (g$make-stx$16542$U0r&n g$C$28258$U0r&n g$V$28260$U0r&n g$V$28259$U0r&n '() '()))) g$x$19458$U0r&n))) g$x$19458$U0r&n))) g$exp-id*$19426$U0r&n)))) g$name$19427$U0r&n))) g$C$28275$U0r&n g$V$28277$U0r&n g$V$28276$U0r&n))) (case-lambda ((g$C$28269$U0r&n g$x$19459$U0r&n) (list (case-lambda ((g$V$28270$U0r&n) (g$stx-mark*$16544$U0r&n (case-lambda ((g$V$28271$U0r&n) (g$id->sym$16570$U0r&n (case-lambda ((g$V$28272$U0r&n) (g$make-stx$16542$U0r&n (case-lambda ((g$V$28273$U0r&n) (g$id->label$16582$U0r&n (case-lambda ((g$V$28274$U0r&n) ((case-lambda ((g$C$28268$U0r&n g$t$19460$U0r&n) (if g$t$19460$U0r&n (g$C$28268$U0r&n g$t$19460$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28268$U0r&n '#f '"cannot find module export" g$x$19459$U0r&n)))) g$C$28269$U0r&n g$V$28274$U0r&n))) g$V$28273$U0r&n))) g$V$28272$U0r&n g$V$28271$U0r&n g$V$28270$U0r&n '()))) g$x$19459$U0r&n))) g$x$19459$U0r&n))) g$rib$19428$U0r&n))) g$exp-id*$19426$U0r&n))) g$e*$19453$U0r&n g$mod**$19448$U0r&n))) g$C$28278$U0r&n g$_exp*$19445$U0r&n g$kwd*$19444$U0r&n g$mod**$19443$U0r&n g$rhs*$19442$U0r&n g$lex*$19441$U0r&n g$mr$19440$U0r&n g$r$19439$U0r&n g$e*$19438$U0r&n)))))) g$C$28281$U0r&n g$V$28283$U0r&n))) (case-lambda ((g$C$28280$U0r&n g$x$19461$U0r&n) (g$add-subst$16559$U0r&n g$C$28280$U0r&n g$rib$19428$U0r&n g$x$19461$U0r&n))) g$V$28282$U0r&n))) g$e*$19425$U0r&n))) g$C$28284$U0r&n g$V$28285$U0r&n)))))) g$C$28286$U0r&n g$e*$19424$U0r&n g$exp-id*$19423$U0r&n g$name$19422$U0r&n))))))))) (library-letrec*-identity 'g$chi-internal-module$17113$U0r&n))) (g$chi-body*$17114$U0r&n g$chi-body*$20709$U0r&n ((case-lambda ((g$C$29779$U0r&n) (g$C$29779$U0r&n (case-lambda ((g$C$28462$U0r&n g$e*$19462$U0r&n g$r$19463$U0r&n g$mr$19464$U0r&n g$lex*$19465$U0r&n g$rhs*$19466$U0r&n g$mod**$19467$U0r&n g$kwd*$19468$U0r&n g$exp*$19469$U0r&n g$rib$19470$U0r&n g$mix?$19471$U0r&n g$sd?$19472$U0r&n) (null? (case-lambda ((g$T$28463$U0r&n) (if g$T$28463$U0r&n (values g$C$28462$U0r&n g$e*$19462$U0r&n g$r$19463$U0r&n g$mr$19464$U0r&n g$lex*$19465$U0r&n g$rhs*$19466$U0r&n g$mod**$19467$U0r&n g$kwd*$19468$U0r&n g$exp*$19469$U0r&n) (car (case-lambda ((g$V$28464$U0r&n) ((case-lambda ((g$C$28461$U0r&n g$e$19473$U0r&n) (call-with-values g$C$28461$U0r&n (case-lambda ((g$C$28288$U0r&n) (g$syntax-type$16589$U0r&n g$C$28288$U0r&n g$e$19473$U0r&n g$r$19463$U0r&n))) (case-lambda ((g$C$28460$U0r&n g$type$19477$U0r&n g$value$19478$U0r&n g$kwd$19479$U0r&n) ((case-lambda ((g$C$28456$U0r&n g$kwd$19480$U0r&n g$value$19481$U0r&n g$type$19482$U0r&n) ((case-lambda ((g$J$28458$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$T$28459$U0r&n) (if g$T$28459$U0r&n (cons g$J$28458$U0r&n g$kwd$19480$U0r&n g$kwd*$19468$U0r&n) (g$J$28458$U0r&n g$kwd*$19468$U0r&n)))) g$kwd$19480$U0r&n))) (case-lambda ((g$V$28457$U0r&n) ((case-lambda ((g$C$28455$U0r&n g$kwd*$19483$U0r&n) ((case-lambda ((g$C$28423$U0r&n g$t$19484$U0r&n) (eqv? (case-lambda ((g$T$28424$U0r&n) (if g$T$28424$U0r&n (call-with-values g$C$28423$U0r&n (case-lambda ((g$C$28289$U0r&n) (g$parse-define$17007$U0r&n g$C$28289$U0r&n g$e$19473$U0r&n))) (case-lambda ((g$C$28302$U0r&n g$id$19487$U0r&n g$rhs$19488$U0r&n) ((case-lambda ((g$C$28298$U0r&n g$rhs$19489$U0r&n g$id$19490$U0r&n) ((case-lambda ((g$J$28300$U0r&n) (g$bound-id-member?$16576$U0r&n (case-lambda ((g$T$28301$U0r&n) (if g$T$28301$U0r&n (g$syntax-violation$17186$U0r&n g$J$28300$U0r&n '#f '"cannot redefine keyword" g$e$19473$U0r&n) (void g$J$28300$U0r&n)))) g$id$19490$U0r&n g$kwd*$19483$U0r&n))) (case-lambda (g$IGNORE$28299$U0r&n (call-with-values g$C$28298$U0r&n (case-lambda ((g$C$28290$U0r&n) (g$gen-define-label+loc$16508$U0r&n g$C$28290$U0r&n g$id$19490$U0r&n g$rib$19470$U0r&n g$sd?$19472$U0r&n))) (case-lambda ((g$C$28297$U0r&n g$lab$19493$U0r&n g$lex$19494$U0r&n) ((case-lambda ((g$C$28291$U0r&n g$lex$19495$U0r&n g$lab$19496$U0r&n) (g$extend-rib!$16530$U0r&n (case-lambda (g$IGNORE$28292$U0r&n (cons (case-lambda ((g$V$28293$U0r&n) (cons (case-lambda ((g$V$28294$U0r&n) (g$add-lexical$17014$U0r&n (case-lambda ((g$V$28295$U0r&n) (cdr (case-lambda ((g$V$28296$U0r&n) (g$chi-body*$17114$U0r&n g$C$28291$U0r&n g$V$28296$U0r&n g$V$28295$U0r&n g$mr$19464$U0r&n g$V$28294$U0r&n g$V$28293$U0r&n g$mod**$19467$U0r&n g$kwd*$19483$U0r&n g$exp*$19469$U0r&n g$rib$19470$U0r&n g$mix?$19471$U0r&n g$sd?$19472$U0r&n))) g$e*$19462$U0r&n))) g$lab$19496$U0r&n g$lex$19495$U0r&n g$r$19463$U0r&n))) g$lex$19495$U0r&n g$lex*$19465$U0r&n))) g$rhs$19489$U0r&n g$rhs*$19466$U0r&n))) g$rib$19470$U0r&n g$id$19490$U0r&n g$lab$19496$U0r&n g$sd?$19472$U0r&n))) g$C$28297$U0r&n g$lex$19494$U0r&n g$lab$19493$U0r&n))))))))) g$C$28302$U0r&n g$rhs$19488$U0r&n g$id$19487$U0r&n)))) (eqv? (case-lambda ((g$T$28425$U0r&n) (if g$T$28425$U0r&n (call-with-values g$C$28423$U0r&n (case-lambda ((g$C$28303$U0r&n) (g$parse-define-syntax$17008$U0r&n g$C$28303$U0r&n g$e$19473$U0r&n))) (case-lambda ((g$C$28320$U0r&n g$id$19499$U0r&n g$rhs$19500$U0r&n) ((case-lambda ((g$C$28315$U0r&n g$rhs$19501$U0r&n g$id$19502$U0r&n) ((case-lambda ((g$J$28318$U0r&n) (g$bound-id-member?$16576$U0r&n (case-lambda ((g$T$28319$U0r&n) (if g$T$28319$U0r&n (g$syntax-violation$17186$U0r&n g$J$28318$U0r&n '#f '"cannot redefine keyword" g$e$19473$U0r&n) (void g$J$28318$U0r&n)))) g$id$19502$U0r&n g$kwd*$19483$U0r&n))) (case-lambda (g$IGNORE$28316$U0r&n (g$gen-define-label$16509$U0r&n (case-lambda ((g$V$28317$U0r&n) ((case-lambda ((g$C$28313$U0r&n g$lab$19503$U0r&n) (g$expand-transformer$17115$U0r&n (case-lambda ((g$V$28314$U0r&n) ((case-lambda ((g$C$28310$U0r&n g$expanded-rhs$19504$U0r&n) (g$extend-rib!$16530$U0r&n (case-lambda (g$IGNORE$28311$U0r&n (g$make-eval-transformer$16617$U0r&n (case-lambda ((g$V$28312$U0r&n) ((case-lambda ((g$C$28304$U0r&n g$b$19505$U0r&n) (cons (case-lambda ((g$V$28305$U0r&n) (cons (case-lambda ((g$V$28306$U0r&n) (cons (case-lambda ((g$V$28307$U0r&n) (cons (case-lambda ((g$V$28308$U0r&n) (cdr (case-lambda ((g$V$28309$U0r&n) (g$chi-body*$17114$U0r&n g$C$28304$U0r&n g$V$28309$U0r&n g$V$28308$U0r&n g$V$28306$U0r&n g$lex*$19465$U0r&n g$rhs*$19466$U0r&n g$mod**$19467$U0r&n g$kwd*$19483$U0r&n g$exp*$19469$U0r&n g$rib$19470$U0r&n g$mix?$19471$U0r&n g$sd?$19472$U0r&n))) g$e*$19462$U0r&n))) g$V$28307$U0r&n g$r$19463$U0r&n))) g$lab$19503$U0r&n g$b$19505$U0r&n))) g$V$28305$U0r&n g$mr$19464$U0r&n))) g$lab$19503$U0r&n g$b$19505$U0r&n))) g$C$28310$U0r&n g$V$28312$U0r&n))) g$expanded-rhs$19504$U0r&n))) g$rib$19470$U0r&n g$id$19502$U0r&n g$lab$19503$U0r&n g$sd?$19472$U0r&n))) g$C$28313$U0r&n g$V$28314$U0r&n))) g$rhs$19501$U0r&n g$mr$19464$U0r&n))) g$C$28315$U0r&n g$V$28317$U0r&n))) g$id$19502$U0r&n g$rib$19470$U0r&n g$sd?$19472$U0r&n)))))) g$C$28320$U0r&n g$rhs$19500$U0r&n g$id$19499$U0r&n)))) (g$memv$12746$U0r&n (case-lambda ((g$T$28426$U0r&n) (if g$T$28426$U0r&n ((case-lambda ((g$C$28347$U0r&n g$t$19506$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28348$U0r&n) ((case-lambda ((g$C$28344$U0r&n g$ls/false$19507$U0r&n) ((case-lambda ((g$J$28346$U0r&n) (if g$ls/false$19507$U0r&n (apply g$J$28346$U0r&n (case-lambda ((g$C$28321$U0r&n g$xlhs*$19508$U0r&n g$xrhs*$19509$U0r&n g$xbody*$19510$U0r&n) (g$valid-bound-ids?$16574$U0r&n (case-lambda ((g$V$28322$U0r&n) (not (case-lambda ((g$T$28323$U0r&n) (if g$T$28323$U0r&n (g$syntax-violation$17186$U0r&n g$C$28321$U0r&n '#f '"invalid identifiers" g$e$19473$U0r&n) (void g$C$28321$U0r&n)))) g$V$28322$U0r&n))) g$xlhs*$19508$U0r&n))) g$ls/false$19507$U0r&n) (g$J$28346$U0r&n '#f)))) (case-lambda ((g$T$28345$U0r&n) (if g$T$28345$U0r&n (apply g$C$28344$U0r&n (case-lambda ((g$C$28342$U0r&n g$xlhs*$19511$U0r&n g$xrhs*$19512$U0r&n g$xbody*$19513$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$28343$U0r&n) ((case-lambda ((g$C$28340$U0r&n g$xlab*$19514$U0r&n) (g$make-full-rib$16535$U0r&n (case-lambda ((g$V$28341$U0r&n) ((case-lambda ((g$C$28338$U0r&n g$xrib$19515$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$28339$U0r&n) ((case-lambda ((g$C$28325$U0r&n g$xb*$19516$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$28326$U0r&n) (append (case-lambda ((g$V$28327$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$28328$U0r&n) (append (case-lambda ((g$V$28329$U0r&n) (cdr (case-lambda ((g$V$28330$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$28331$U0r&n) (append (case-lambda ((g$V$28332$U0r&n) (g$chi-body*$17114$U0r&n g$C$28325$U0r&n g$V$28332$U0r&n g$V$28329$U0r&n g$V$28327$U0r&n g$lex*$19465$U0r&n g$rhs*$19466$U0r&n g$mod**$19467$U0r&n g$kwd*$19483$U0r&n g$exp*$19469$U0r&n g$rib$19470$U0r&n g$mix?$19471$U0r&n g$sd?$19472$U0r&n))) g$V$28331$U0r&n g$V$28330$U0r&n))) (case-lambda ((g$C$28324$U0r&n g$x$19517$U0r&n) (g$add-subst$16559$U0r&n g$C$28324$U0r&n g$xrib$19515$U0r&n g$x$19517$U0r&n))) g$xbody*$19513$U0r&n))) g$e*$19462$U0r&n))) g$V$28328$U0r&n g$r$19463$U0r&n))) cons g$xlab*$19514$U0r&n g$xb*$19516$U0r&n))) g$V$28326$U0r&n g$mr$19464$U0r&n))) cons g$xlab*$19514$U0r&n g$xb*$19516$U0r&n))) g$C$28338$U0r&n g$V$28339$U0r&n))) (case-lambda ((g$C$28333$U0r&n g$x$19518$U0r&n) ((case-lambda ((g$J$28336$U0r&n) (eq? (case-lambda ((g$T$28337$U0r&n) (if g$T$28337$U0r&n (g$J$28336$U0r&n g$x$19518$U0r&n) (g$add-subst$16559$U0r&n g$J$28336$U0r&n g$xrib$19515$U0r&n g$x$19518$U0r&n)))) g$type$19482$U0r&n 'let-syntax))) (case-lambda ((g$V$28334$U0r&n) (g$expand-transformer$17115$U0r&n (case-lambda ((g$V$28335$U0r&n) (g$make-eval-transformer$16617$U0r&n g$C$28333$U0r&n g$V$28335$U0r&n))) g$V$28334$U0r&n g$mr$19464$U0r&n)))))) g$xrhs*$19512$U0r&n))) g$C$28340$U0r&n g$V$28341$U0r&n))) g$xlhs*$19511$U0r&n g$xlab*$19514$U0r&n))) g$C$28342$U0r&n g$V$28343$U0r&n))) g$gen-label$16506$U0r&n g$xlhs*$19511$U0r&n))) g$ls/false$19507$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28344$U0r&n '#f '"invalid syntax" g$t$19506$U0r&n))))))) g$C$28347$U0r&n g$V$28348$U0r&n))) g$t$19506$U0r&n '(_ #(each (any any)) . each-any)))) g$C$28423$U0r&n g$e$19473$U0r&n) (eqv? (case-lambda ((g$T$28427$U0r&n) (if g$T$28427$U0r&n ((case-lambda ((g$C$28353$U0r&n g$t$19519$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28354$U0r&n) ((case-lambda ((g$C$28352$U0r&n g$ls/false$19520$U0r&n) (if g$ls/false$19520$U0r&n (apply g$C$28352$U0r&n (case-lambda ((g$C$28349$U0r&n g$x*$19521$U0r&n) (cdr (case-lambda ((g$V$28350$U0r&n) (append (case-lambda ((g$V$28351$U0r&n) (g$chi-body*$17114$U0r&n g$C$28349$U0r&n g$V$28351$U0r&n g$r$19463$U0r&n g$mr$19464$U0r&n g$lex*$19465$U0r&n g$rhs*$19466$U0r&n g$mod**$19467$U0r&n g$kwd*$19483$U0r&n g$exp*$19469$U0r&n g$rib$19470$U0r&n g$mix?$19471$U0r&n g$sd?$19472$U0r&n))) g$x*$19521$U0r&n g$V$28350$U0r&n))) g$e*$19462$U0r&n))) g$ls/false$19520$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28352$U0r&n '#f '"invalid syntax" g$t$19519$U0r&n)))) g$C$28353$U0r&n g$V$28354$U0r&n))) g$t$19519$U0r&n '(_ . each-any)))) g$C$28423$U0r&n g$e$19473$U0r&n) (g$memv$12746$U0r&n (case-lambda ((g$T$28428$U0r&n) (if g$T$28428$U0r&n (cdr (case-lambda ((g$V$28429$U0r&n) (g$chi-global-macro$17082$U0r&n (case-lambda ((g$V$28430$U0r&n) (g$add-subst$16559$U0r&n (case-lambda ((g$V$28431$U0r&n) (cons (case-lambda ((g$V$28432$U0r&n) (g$chi-body*$17114$U0r&n g$C$28423$U0r&n g$V$28432$U0r&n g$r$19463$U0r&n g$mr$19464$U0r&n g$lex*$19465$U0r&n g$rhs*$19466$U0r&n g$mod**$19467$U0r&n g$kwd*$19483$U0r&n g$exp*$19469$U0r&n g$rib$19470$U0r&n g$mix?$19471$U0r&n g$sd?$19472$U0r&n))) g$V$28431$U0r&n g$V$28429$U0r&n))) g$rib$19470$U0r&n g$V$28430$U0r&n))) g$value$19481$U0r&n g$e$19473$U0r&n g$r$19463$U0r&n))) g$e*$19462$U0r&n) (g$memv$12746$U0r&n (case-lambda ((g$T$28433$U0r&n) (if g$T$28433$U0r&n (cdr (case-lambda ((g$V$28434$U0r&n) (g$chi-local-macro$17081$U0r&n (case-lambda ((g$V$28435$U0r&n) (g$add-subst$16559$U0r&n (case-lambda ((g$V$28436$U0r&n) (cons (case-lambda ((g$V$28437$U0r&n) (g$chi-body*$17114$U0r&n g$C$28423$U0r&n g$V$28437$U0r&n g$r$19463$U0r&n g$mr$19464$U0r&n g$lex*$19465$U0r&n g$rhs*$19466$U0r&n g$mod**$19467$U0r&n g$kwd*$19483$U0r&n g$exp*$19469$U0r&n g$rib$19470$U0r&n g$mix?$19471$U0r&n g$sd?$19472$U0r&n))) g$V$28436$U0r&n g$V$28434$U0r&n))) g$rib$19470$U0r&n g$V$28435$U0r&n))) g$value$19481$U0r&n g$e$19473$U0r&n g$r$19463$U0r&n))) g$e*$19462$U0r&n) (g$memv$12746$U0r&n (case-lambda ((g$T$28438$U0r&n) (if g$T$28438$U0r&n (cdr (case-lambda ((g$V$28439$U0r&n) (g$chi-macro$17080$U0r&n (case-lambda ((g$V$28440$U0r&n) (g$add-subst$16559$U0r&n (case-lambda ((g$V$28441$U0r&n) (cons (case-lambda ((g$V$28442$U0r&n) (g$chi-body*$17114$U0r&n g$C$28423$U0r&n g$V$28442$U0r&n g$r$19463$U0r&n g$mr$19464$U0r&n g$lex*$19465$U0r&n g$rhs*$19466$U0r&n g$mod**$19467$U0r&n g$kwd*$19483$U0r&n g$exp*$19469$U0r&n g$rib$19470$U0r&n g$mix?$19471$U0r&n g$sd?$19472$U0r&n))) g$V$28441$U0r&n g$V$28439$U0r&n))) g$rib$19470$U0r&n g$V$28440$U0r&n))) g$value$19481$U0r&n g$e$19473$U0r&n g$r$19463$U0r&n))) g$e*$19462$U0r&n) (eqv? (case-lambda ((g$T$28443$U0r&n) (if g$T$28443$U0r&n (call-with-values g$C$28423$U0r&n (case-lambda ((g$C$28355$U0r&n) (g$chi-internal-module$17113$U0r&n g$C$28355$U0r&n g$e$19473$U0r&n g$r$19463$U0r&n g$mr$19464$U0r&n g$lex*$19465$U0r&n g$rhs*$19466$U0r&n g$mod**$19467$U0r&n g$kwd*$19483$U0r&n))) (case-lambda ((g$C$28360$U0r&n g$lex*$19530$U0r&n g$rhs*$19531$U0r&n g$m-exp-id*$19532$U0r&n g$m-exp-lab*$19533$U0r&n g$r$19534$U0r&n g$mr$19535$U0r&n g$mod**$19536$U0r&n g$kwd*$19537$U0r&n) ((case-lambda ((g$C$28357$U0r&n g$kwd*$19538$U0r&n g$mod**$19539$U0r&n g$mr$19540$U0r&n g$r$19541$U0r&n g$m-exp-lab*$19542$U0r&n g$m-exp-id*$19543$U0r&n g$rhs*$19544$U0r&n g$lex*$19545$U0r&n) (g$vector-for-each$13558$U0r&n (case-lambda (g$IGNORE$28358$U0r&n (cdr (case-lambda ((g$V$28359$U0r&n) (g$chi-body*$17114$U0r&n g$C$28357$U0r&n g$V$28359$U0r&n g$r$19541$U0r&n g$mr$19540$U0r&n g$lex*$19545$U0r&n g$rhs*$19544$U0r&n g$mod**$19539$U0r&n g$kwd*$19538$U0r&n g$exp*$19469$U0r&n g$rib$19470$U0r&n g$mix?$19471$U0r&n g$sd?$19472$U0r&n))) g$e*$19462$U0r&n))) (case-lambda ((g$C$28356$U0r&n g$id$19546$U0r&n g$lab$19547$U0r&n) (g$extend-rib!$16530$U0r&n g$C$28356$U0r&n g$rib$19470$U0r&n g$id$19546$U0r&n g$lab$19547$U0r&n g$sd?$19472$U0r&n))) g$m-exp-id*$19543$U0r&n g$m-exp-lab*$19542$U0r&n))) g$C$28360$U0r&n g$kwd*$19537$U0r&n g$mod**$19536$U0r&n g$mr$19535$U0r&n g$r$19534$U0r&n g$m-exp-lab*$19533$U0r&n g$m-exp-id*$19532$U0r&n g$rhs*$19531$U0r&n g$lex*$19530$U0r&n)))) (eqv? (case-lambda ((g$T$28444$U0r&n) (if g$T$28444$U0r&n (g$stx->datum$16580$U0r&n (case-lambda ((g$V$28445$U0r&n) (g$library-expander$17170$U0r&n (case-lambda (g$IGNORE$28446$U0r&n (cdr (case-lambda ((g$V$28447$U0r&n) (g$chi-body*$17114$U0r&n g$C$28423$U0r&n g$V$28447$U0r&n g$r$19463$U0r&n g$mr$19464$U0r&n g$lex*$19465$U0r&n g$rhs*$19466$U0r&n g$mod**$19467$U0r&n g$kwd*$19483$U0r&n g$exp*$19469$U0r&n g$rib$19470$U0r&n g$mix?$19471$U0r&n g$sd?$19472$U0r&n))) g$e*$19462$U0r&n))) g$V$28445$U0r&n))) g$e$19473$U0r&n) (eqv? (case-lambda ((g$T$28448$U0r&n) (if g$T$28448$U0r&n ((case-lambda ((g$C$28365$U0r&n g$t$19548$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28366$U0r&n) ((case-lambda ((g$C$28364$U0r&n g$ls/false$19549$U0r&n) (if g$ls/false$19549$U0r&n (apply g$C$28364$U0r&n (case-lambda ((g$C$28361$U0r&n g$exp-decl*$19550$U0r&n) (append (case-lambda ((g$V$28362$U0r&n) (cdr (case-lambda ((g$V$28363$U0r&n) (g$chi-body*$17114$U0r&n g$C$28361$U0r&n g$V$28363$U0r&n g$r$19463$U0r&n g$mr$19464$U0r&n g$lex*$19465$U0r&n g$rhs*$19466$U0r&n g$mod**$19467$U0r&n g$kwd*$19483$U0r&n g$V$28362$U0r&n g$rib$19470$U0r&n g$mix?$19471$U0r&n g$sd?$19472$U0r&n))) g$e*$19462$U0r&n))) g$exp-decl*$19550$U0r&n g$exp*$19469$U0r&n))) g$ls/false$19549$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28364$U0r&n '#f '"invalid syntax" g$t$19548$U0r&n)))) g$C$28365$U0r&n g$V$28366$U0r&n))) g$t$19548$U0r&n '(_ . each-any)))) g$C$28423$U0r&n g$e$19473$U0r&n) (eqv? (case-lambda ((g$T$28449$U0r&n) (if g$T$28449$U0r&n ((case-lambda ((g$C$28422$U0r&n) ((case-lambda ((g$C$28419$U0r&n g$module-import?$19551$U0r&n g$module-import$19552$U0r&n g$library-import$19553$U0r&n) (begin (set! g$module-import?$19551$U0r&n (case-lambda ((g$C$28382$U0r&n g$e$19593$U0r&n) ((case-lambda ((g$C$28380$U0r&n g$t$19594$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28381$U0r&n) ((case-lambda ((g$C$28377$U0r&n g$ls/false$19595$U0r&n) ((case-lambda ((g$J$28379$U0r&n) (if g$ls/false$19595$U0r&n (apply g$J$28379$U0r&n (case-lambda ((g$C$28367$U0r&n g$id$19596$U0r&n) (g$id?$16569$U0r&n g$C$28367$U0r&n g$id$19596$U0r&n))) g$ls/false$19595$U0r&n) (g$J$28379$U0r&n '#f)))) (case-lambda ((g$T$28378$U0r&n) (if g$T$28378$U0r&n (apply g$C$28377$U0r&n (case-lambda ((g$C$28368$U0r&n g$id$19597$U0r&n) (g$C$28368$U0r&n '#t))) g$ls/false$19595$U0r&n) ((case-lambda ((g$C$28375$U0r&n g$t$19598$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28376$U0r&n) ((case-lambda ((g$C$28374$U0r&n g$ls/false$19599$U0r&n) (if g$ls/false$19599$U0r&n (apply g$C$28374$U0r&n (case-lambda ((g$C$28369$U0r&n g$imp*$19600$U0r&n) (g$C$28369$U0r&n '#f))) g$ls/false$19599$U0r&n) ((case-lambda ((g$C$28372$U0r&n g$t$19601$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28373$U0r&n) ((case-lambda ((g$C$28371$U0r&n g$ls/false$19602$U0r&n) (if g$ls/false$19602$U0r&n (apply g$C$28371$U0r&n (case-lambda ((g$C$28370$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28370$U0r&n '#f '"malformed import form" g$e$19593$U0r&n))) g$ls/false$19602$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28371$U0r&n '#f '"invalid syntax" g$t$19601$U0r&n)))) g$C$28372$U0r&n g$V$28373$U0r&n))) g$t$19601$U0r&n '_))) g$C$28374$U0r&n g$t$19598$U0r&n)))) g$C$28375$U0r&n g$V$28376$U0r&n))) g$t$19598$U0r&n '(_ . each-any)))) g$C$28377$U0r&n g$t$19594$U0r&n))))))) g$C$28380$U0r&n g$V$28381$U0r&n))) g$t$19594$U0r&n '(_ any)))) g$C$28382$U0r&n g$e$19593$U0r&n)))) (begin (set! g$module-import$19552$U0r&n (case-lambda ((g$C$28398$U0r&n g$e$19576$U0r&n g$r$19577$U0r&n) ((case-lambda ((g$C$28396$U0r&n g$t$19578$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28397$U0r&n) ((case-lambda ((g$C$28393$U0r&n g$ls/false$19579$U0r&n) ((case-lambda ((g$J$28395$U0r&n) (if g$ls/false$19579$U0r&n (apply g$J$28395$U0r&n (case-lambda ((g$C$28383$U0r&n g$id$19580$U0r&n) (g$id?$16569$U0r&n g$C$28383$U0r&n g$id$19580$U0r&n))) g$ls/false$19579$U0r&n) (g$J$28395$U0r&n '#f)))) (case-lambda ((g$T$28394$U0r&n) (if g$T$28394$U0r&n (apply g$C$28393$U0r&n (case-lambda ((g$C$28392$U0r&n g$id$19581$U0r&n) (call-with-values g$C$28392$U0r&n (case-lambda ((g$C$28384$U0r&n) (g$syntax-type$16589$U0r&n g$C$28384$U0r&n g$id$19581$U0r&n g$r$19577$U0r&n))) (case-lambda ((g$C$28391$U0r&n g$type$19585$U0r&n g$value$19586$U0r&n g$kwd$19587$U0r&n) ((case-lambda ((g$C$28390$U0r&n g$kwd$19588$U0r&n g$value$19589$U0r&n g$type$19590$U0r&n) ((case-lambda ((g$C$28388$U0r&n g$t$19591$U0r&n) (eqv? (case-lambda ((g$T$28389$U0r&n) (if g$T$28389$U0r&n ((case-lambda ((g$C$28385$U0r&n g$iface$19592$U0r&n) (g$module-interface-exp-lab-vec$17107$U0r&n (case-lambda ((g$V$28386$U0r&n) (g$module-interface-exp-id*$17111$U0r&n (case-lambda ((g$V$28387$U0r&n) (values g$C$28385$U0r&n g$V$28387$U0r&n g$V$28386$U0r&n))) g$iface$19592$U0r&n g$id$19581$U0r&n))) g$iface$19592$U0r&n))) g$C$28388$U0r&n g$value$19589$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28388$U0r&n '#f '"invalid import" g$e$19576$U0r&n)))) g$t$19591$U0r&n '$module))) g$C$28390$U0r&n g$type$19590$U0r&n))) g$C$28391$U0r&n g$kwd$19587$U0r&n g$value$19586$U0r&n g$type$19585$U0r&n)))))) g$ls/false$19579$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28393$U0r&n '#f '"invalid syntax" g$t$19578$U0r&n))))))) g$C$28396$U0r&n g$V$28397$U0r&n))) g$t$19578$U0r&n '(_ any)))) g$C$28398$U0r&n g$e$19576$U0r&n)))) (begin (set! g$library-import$19553$U0r&n (case-lambda ((g$C$28413$U0r&n g$e$19562$U0r&n) ((case-lambda ((g$C$28411$U0r&n g$t$19563$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28412$U0r&n) ((case-lambda ((g$C$28410$U0r&n g$ls/false$19564$U0r&n) (if g$ls/false$19564$U0r&n (apply g$C$28410$U0r&n (case-lambda ((g$C$28405$U0r&n g$ctxt$19565$U0r&n g$imp*$19566$U0r&n) (call-with-values g$C$28405$U0r&n (case-lambda ((g$C$28399$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28400$U0r&n) (g$parse-import-spec*$17119$U0r&n g$C$28399$U0r&n g$V$28400$U0r&n))) g$imp*$19566$U0r&n))) (case-lambda ((g$C$28404$U0r&n g$subst-names$19569$U0r&n g$subst-labels$19570$U0r&n) ((case-lambda ((g$C$28402$U0r&n g$subst-labels$19571$U0r&n g$subst-names$19572$U0r&n) (g$vector-map$13557$U0r&n (case-lambda ((g$V$28403$U0r&n) (values g$C$28402$U0r&n g$V$28403$U0r&n g$subst-labels$19571$U0r&n))) (case-lambda ((g$C$28401$U0r&n g$name$19573$U0r&n) (g$datum->stx$16552$U0r&n g$C$28401$U0r&n g$ctxt$19565$U0r&n g$name$19573$U0r&n))) g$subst-names$19572$U0r&n))) g$C$28404$U0r&n g$subst-labels$19570$U0r&n g$subst-names$19569$U0r&n)))))) g$ls/false$19564$U0r&n) ((case-lambda ((g$C$28408$U0r&n g$t$19574$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28409$U0r&n) ((case-lambda ((g$C$28407$U0r&n g$ls/false$19575$U0r&n) (if g$ls/false$19575$U0r&n (apply g$C$28407$U0r&n (case-lambda ((g$C$28406$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28406$U0r&n '#f '"invalid import form" g$e$19562$U0r&n))) g$ls/false$19575$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28407$U0r&n '#f '"invalid syntax" g$t$19574$U0r&n)))) g$C$28408$U0r&n g$V$28409$U0r&n))) g$t$19574$U0r&n '_))) g$C$28410$U0r&n g$t$19563$U0r&n)))) g$C$28411$U0r&n g$V$28412$U0r&n))) g$t$19563$U0r&n '(any . each-any)))) g$C$28413$U0r&n g$e$19562$U0r&n)))) (call-with-values (case-lambda (g$IGNORE$28420$U0r&n (cdr (case-lambda ((g$V$28421$U0r&n) (g$chi-body*$17114$U0r&n g$C$28419$U0r&n g$V$28421$U0r&n g$r$19463$U0r&n g$mr$19464$U0r&n g$lex*$19465$U0r&n g$rhs*$19466$U0r&n g$mod**$19467$U0r&n g$kwd*$19483$U0r&n g$exp*$19469$U0r&n g$rib$19470$U0r&n g$mix?$19471$U0r&n g$sd?$19472$U0r&n))) g$e*$19462$U0r&n))) (case-lambda ((g$C$28414$U0r&n) (g$module-import?$19551$U0r&n (case-lambda ((g$T$28415$U0r&n) (if g$T$28415$U0r&n (g$module-import$19552$U0r&n g$C$28414$U0r&n g$e$19473$U0r&n g$r$19463$U0r&n) (g$library-import$19553$U0r&n g$C$28414$U0r&n g$e$19473$U0r&n)))) g$e$19473$U0r&n))) (case-lambda ((g$C$28418$U0r&n g$id*$19556$U0r&n g$lab*$19557$U0r&n) ((case-lambda ((g$C$28417$U0r&n g$lab*$19558$U0r&n g$id*$19559$U0r&n) (g$vector-for-each$13558$U0r&n g$C$28417$U0r&n (case-lambda ((g$C$28416$U0r&n g$id$19560$U0r&n g$lab$19561$U0r&n) (g$extend-rib!$16530$U0r&n g$C$28416$U0r&n g$rib$19470$U0r&n g$id$19560$U0r&n g$lab$19561$U0r&n g$sd?$19472$U0r&n))) g$id*$19559$U0r&n g$lab*$19558$U0r&n))) g$C$28418$U0r&n g$lab*$19557$U0r&n g$id*$19556$U0r&n))))))))) g$C$28422$U0r&n uninitialized uninitialized uninitialized))) g$C$28423$U0r&n) (if g$mix?$19471$U0r&n (cons (case-lambda ((g$V$28450$U0r&n) (cons (case-lambda ((g$V$28451$U0r&n) (g$gen-lexical$16504$U0r&n (case-lambda ((g$V$28452$U0r&n) (cons (case-lambda ((g$V$28453$U0r&n) (cdr (case-lambda ((g$V$28454$U0r&n) (g$chi-body*$17114$U0r&n g$C$28423$U0r&n g$V$28454$U0r&n g$r$19463$U0r&n g$mr$19464$U0r&n g$V$28453$U0r&n g$V$28451$U0r&n g$mod**$19467$U0r&n g$kwd*$19483$U0r&n g$exp*$19469$U0r&n g$rib$19470$U0r&n '#t g$sd?$19472$U0r&n))) g$e*$19462$U0r&n))) g$V$28452$U0r&n g$lex*$19465$U0r&n))) 'dummy))) g$V$28450$U0r&n g$rhs*$19466$U0r&n))) 'top-expr g$e$19473$U0r&n) (values g$C$28423$U0r&n g$e*$19462$U0r&n g$r$19463$U0r&n g$mr$19464$U0r&n g$lex*$19465$U0r&n g$rhs*$19466$U0r&n g$mod**$19467$U0r&n g$kwd*$19483$U0r&n g$exp*$19469$U0r&n))))) g$t$19484$U0r&n 'import)))) g$t$19484$U0r&n 'export)))) g$t$19484$U0r&n 'library)))) g$t$19484$U0r&n 'module)))) g$t$19484$U0r&n '(macro macro!))))) g$t$19484$U0r&n '(local-macro local-macro!))))) g$t$19484$U0r&n '(global-macro global-macro!))))) g$t$19484$U0r&n 'begin)))) g$t$19484$U0r&n '(let-syntax letrec-syntax))))) g$t$19484$U0r&n 'define-syntax)))) g$t$19484$U0r&n 'define))) g$C$28455$U0r&n g$type$19482$U0r&n))) g$C$28456$U0r&n g$V$28457$U0r&n)))))) g$C$28460$U0r&n g$kwd$19479$U0r&n g$value$19478$U0r&n g$type$19477$U0r&n)))))) g$C$28462$U0r&n g$V$28464$U0r&n))) g$e*$19462$U0r&n)))) g$e*$19462$U0r&n)))))) (library-letrec*-identity 'g$chi-body*$17114$U0r&n))) (g$expand-transformer$17115$U0r&n g$expand-transformer$20710$U0r&n ((case-lambda ((g$C$29780$U0r&n) (g$C$29780$U0r&n (case-lambda ((g$C$28487$U0r&n g$expr$19603$U0r&n g$r$19604$U0r&n) (g$make-collector$17121$U0r&n (case-lambda ((g$V$28488$U0r&n) ((case-lambda ((g$C$28485$U0r&n g$rtc$19605$U0r&n) ((case-lambda ((g$C$28483$U0r&n g$inv-collector$19613$U0r&n g$vis-collector$19614$U0r&n g$inv-collector$19615$U0r&n g$vis-collector$19616$U0r&n) ((case-lambda ((g$C$28474$U0r&n g$swap$19617$U0r&n) (dynamic-wind g$C$28474$U0r&n g$swap$19617$U0r&n (case-lambda ((g$C$28473$U0r&n) (g$chi-expr$17085$U0r&n g$C$28473$U0r&n g$expr$19603$U0r&n g$r$19604$U0r&n g$r$19604$U0r&n))) g$swap$19617$U0r&n))) g$C$28483$U0r&n (case-lambda ((g$C$28479$U0r&n) (g$inv-collector$19613$U0r&n (case-lambda ((g$V$28480$U0r&n) ((case-lambda ((g$C$28475$U0r&n g$t$19618$U0r&n) (g$inv-collector$19613$U0r&n (case-lambda (g$IGNORE$28476$U0r&n (begin (set! g$inv-collector$19615$U0r&n g$t$19618$U0r&n) (g$C$28475$U0r&n (cps-void))))) g$inv-collector$19615$U0r&n))) (case-lambda (g$IGNORE$28481$U0r&n (g$vis-collector$19614$U0r&n (case-lambda ((g$V$28482$U0r&n) ((case-lambda ((g$C$28477$U0r&n g$t$19619$U0r&n) (g$vis-collector$19614$U0r&n (case-lambda (g$IGNORE$28478$U0r&n (begin (set! g$vis-collector$19616$U0r&n g$t$19619$U0r&n) (g$C$28477$U0r&n (cps-void))))) g$vis-collector$19616$U0r&n))) g$C$28479$U0r&n g$V$28482$U0r&n)))))) g$V$28480$U0r&n))))))))) (case-lambda ((g$V$28486$U0r&n) ((case-lambda ((g$C$28468$U0r&n g$expanded-rhs$19606$U0r&n) (g$rtc$19605$U0r&n (case-lambda ((g$V$28469$U0r&n) (g$vis-collector$17123$U0r&n (case-lambda ((g$V$28470$U0r&n) ((case-lambda ((g$C$28467$U0r&n g$mark-visit$19607$U0r&n) (g$C$28467$U0r&n (case-lambda ((g$C$28465$U0r&n g$x$19608$U0r&n) (g$invoke-library$16272$U0r&n (case-lambda (g$IGNORE$28466$U0r&n (g$mark-visit$19607$U0r&n g$C$28465$U0r&n g$x$19608$U0r&n))) g$x$19608$U0r&n)))))) (case-lambda ((g$V$28471$U0r&n) (g$for-each$12754$U0r&n (case-lambda (g$IGNORE$28472$U0r&n (g$C$28468$U0r&n g$expanded-rhs$19606$U0r&n))) g$V$28471$U0r&n g$V$28469$U0r&n))) g$V$28470$U0r&n))))))))) g$C$28485$U0r&n g$V$28486$U0r&n))) g$inv-collector$17122$U0r&n g$vis-collector$17123$U0r&n g$rtc$19605$U0r&n (case-lambda ((g$C$28484$U0r&n g$x$19620$U0r&n) (values g$C$28484$U0r&n)))))) g$C$28487$U0r&n g$V$28488$U0r&n))))))))) (library-letrec*-identity 'g$expand-transformer$17115$U0r&n))) (g$parse-exports$17116$U0r&n g$parse-exports$20711$U0r&n ((case-lambda ((g$C$29781$U0r&n) (g$C$29781$U0r&n (case-lambda ((g$C$28528$U0r&n g$exp*$19621$U0r&n) ((case-lambda ((g$C$28527$U0r&n g$f$19622$U0r&n) ((case-lambda ((g$C$28490$U0r&n g$f$28489$U0r&n) (begin (set! g$f$19622$U0r&n g$f$28489$U0r&n) (g$C$28490$U0r&n g$f$19622$U0r&n)))) g$C$28527$U0r&n (case-lambda ((g$C$28518$U0r&n g$exp*$19623$U0r&n g$int*$19624$U0r&n g$ext*$19625$U0r&n) (null? (case-lambda ((g$T$28519$U0r&n) (if g$T$28519$U0r&n ((case-lambda ((g$J$28522$U0r&n) (g$valid-bound-ids?$16574$U0r&n (case-lambda ((g$V$28523$U0r&n) (not (case-lambda ((g$T$28524$U0r&n) (if g$T$28524$U0r&n (g$find-dups$17095$U0r&n (case-lambda ((g$V$28525$U0r&n) (g$syntax-violation$17186$U0r&n g$J$28522$U0r&n 'export '"invalid exports" g$V$28525$U0r&n))) g$ext*$19625$U0r&n) (void g$J$28522$U0r&n)))) g$V$28523$U0r&n))) g$ext*$19625$U0r&n))) (case-lambda (g$IGNORE$28520$U0r&n (g$map$12753$U0r&n (case-lambda ((g$V$28521$U0r&n) (values g$C$28518$U0r&n g$V$28521$U0r&n g$int*$19624$U0r&n))) g$syntax->datum$17189$U0r&n g$ext*$19625$U0r&n)))) (car (case-lambda ((g$V$28526$U0r&n) ((case-lambda ((g$C$28516$U0r&n g$t$19626$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28517$U0r&n) ((case-lambda ((g$C$28515$U0r&n g$ls/false$19627$U0r&n) (if g$ls/false$19627$U0r&n (apply g$C$28515$U0r&n (case-lambda ((g$C$28491$U0r&n g$rename$19628$U0r&n g$i*$19629$U0r&n g$e*$19630$U0r&n) ((case-lambda ((g$J$28496$U0r&n) ((case-lambda ((g$J$28500$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28501$U0r&n) (eq? (case-lambda ((g$T$28502$U0r&n) (if g$T$28502$U0r&n (g$for-all$12751$U0r&n (case-lambda ((g$T$28503$U0r&n) (if g$T$28503$U0r&n (g$for-all$12751$U0r&n g$J$28500$U0r&n g$id?$16569$U0r&n g$e*$19630$U0r&n) (g$J$28500$U0r&n '#f)))) g$id?$16569$U0r&n g$i*$19629$U0r&n) (g$J$28500$U0r&n '#f)))) g$V$28501$U0r&n 'rename))) g$rename$19628$U0r&n))) (case-lambda ((g$V$28497$U0r&n) (not (case-lambda ((g$T$28498$U0r&n) (if g$T$28498$U0r&n (car (case-lambda ((g$V$28499$U0r&n) (g$syntax-violation$17186$U0r&n g$J$28496$U0r&n 'export '"invalid export specifier" g$V$28499$U0r&n))) g$exp*$19623$U0r&n) (void g$J$28496$U0r&n)))) g$V$28497$U0r&n)))))) (case-lambda (g$IGNORE$28492$U0r&n (append (case-lambda ((g$V$28493$U0r&n) (append (case-lambda ((g$V$28494$U0r&n) (cdr (case-lambda ((g$V$28495$U0r&n) (g$f$19622$U0r&n g$C$28491$U0r&n g$V$28495$U0r&n g$V$28494$U0r&n g$V$28493$U0r&n))) g$exp*$19623$U0r&n))) g$i*$19629$U0r&n g$int*$19624$U0r&n))) g$e*$19630$U0r&n g$ext*$19625$U0r&n)))))) g$ls/false$19627$U0r&n) ((case-lambda ((g$C$28513$U0r&n g$t$19631$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28514$U0r&n) ((case-lambda ((g$C$28512$U0r&n g$ls/false$19632$U0r&n) (if g$ls/false$19632$U0r&n (apply g$C$28512$U0r&n (case-lambda ((g$C$28504$U0r&n g$ie$19633$U0r&n) ((case-lambda ((g$J$28509$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$V$28510$U0r&n) (not (case-lambda ((g$T$28511$U0r&n) (if g$T$28511$U0r&n (g$syntax-violation$17186$U0r&n g$J$28509$U0r&n 'export '"invalid export" g$ie$19633$U0r&n) (void g$J$28509$U0r&n)))) g$V$28510$U0r&n))) g$ie$19633$U0r&n))) (case-lambda (g$IGNORE$28505$U0r&n (cons (case-lambda ((g$V$28506$U0r&n) (cons (case-lambda ((g$V$28507$U0r&n) (cdr (case-lambda ((g$V$28508$U0r&n) (g$f$19622$U0r&n g$C$28504$U0r&n g$V$28508$U0r&n g$V$28507$U0r&n g$V$28506$U0r&n))) g$exp*$19623$U0r&n))) g$ie$19633$U0r&n g$int*$19624$U0r&n))) g$ie$19633$U0r&n g$ext*$19625$U0r&n)))))) g$ls/false$19632$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28512$U0r&n '#f '"invalid syntax" g$t$19631$U0r&n)))) g$C$28513$U0r&n g$V$28514$U0r&n))) g$t$19631$U0r&n 'any))) g$C$28515$U0r&n g$t$19626$U0r&n)))) g$C$28516$U0r&n g$V$28517$U0r&n))) g$t$19626$U0r&n '(any . #(each (any any)))))) g$C$28518$U0r&n g$V$28526$U0r&n))) g$exp*$19623$U0r&n)))) g$exp*$19623$U0r&n)))))) (case-lambda ((g$V$28529$U0r&n) (g$V$28529$U0r&n g$C$28528$U0r&n g$exp*$19621$U0r&n '() '()))) uninitialized)))))) (library-letrec*-identity 'g$parse-exports$17116$U0r&n))) (g$parse-library-name$17117$U0r&n g$parse-library-name$20712$U0r&n ((case-lambda ((g$C$29782$U0r&n) (g$C$29782$U0r&n (case-lambda ((g$C$28571$U0r&n g$spec$19634$U0r&n) ((case-lambda ((g$C$28570$U0r&n g$parse$19635$U0r&n) (begin (set! g$parse$19635$U0r&n (case-lambda ((g$C$28563$U0r&n g$x$19642$U0r&n) ((case-lambda ((g$C$28561$U0r&n g$t$19643$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28562$U0r&n) ((case-lambda ((g$C$28558$U0r&n g$ls/false$19644$U0r&n) ((case-lambda ((g$J$28560$U0r&n) (if g$ls/false$19644$U0r&n (apply g$J$28560$U0r&n (case-lambda ((g$C$28534$U0r&n g$v*$19645$U0r&n) (g$for-all$12751$U0r&n g$C$28534$U0r&n (case-lambda ((g$C$28532$U0r&n g$x$19646$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28533$U0r&n) ((case-lambda ((g$C$28530$U0r&n g$x$19647$U0r&n) (integer? (case-lambda ((g$T$28531$U0r&n) (if g$T$28531$U0r&n (exact? g$C$28530$U0r&n g$x$19647$U0r&n) (g$C$28530$U0r&n '#f)))) g$x$19647$U0r&n))) g$C$28532$U0r&n g$V$28533$U0r&n))) g$x$19646$U0r&n))) g$v*$19645$U0r&n))) g$ls/false$19644$U0r&n) (g$J$28560$U0r&n '#f)))) (case-lambda ((g$T$28559$U0r&n) (if g$T$28559$U0r&n (apply g$C$28558$U0r&n (case-lambda ((g$C$28535$U0r&n g$v*$19648$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$28536$U0r&n) (values g$C$28535$U0r&n '() g$V$28536$U0r&n))) g$syntax->datum$17189$U0r&n g$v*$19648$U0r&n))) g$ls/false$19644$U0r&n) ((case-lambda ((g$C$28556$U0r&n g$t$19649$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28557$U0r&n) ((case-lambda ((g$C$28553$U0r&n g$ls/false$19650$U0r&n) ((case-lambda ((g$J$28555$U0r&n) (if g$ls/false$19650$U0r&n (apply g$J$28555$U0r&n (case-lambda ((g$C$28537$U0r&n g$x$19651$U0r&n g$rest$19652$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28538$U0r&n) (g$symbol?$13496$U0r&n g$C$28537$U0r&n g$V$28538$U0r&n))) g$x$19651$U0r&n))) g$ls/false$19650$U0r&n) (g$J$28555$U0r&n '#f)))) (case-lambda ((g$T$28554$U0r&n) (if g$T$28554$U0r&n (apply g$C$28553$U0r&n (case-lambda ((g$C$28544$U0r&n g$x$19653$U0r&n g$rest$19654$U0r&n) (call-with-values g$C$28544$U0r&n (case-lambda ((g$C$28539$U0r&n) (g$parse$19635$U0r&n g$C$28539$U0r&n g$rest$19654$U0r&n))) (case-lambda ((g$C$28543$U0r&n g$x*$19657$U0r&n g$v*$19658$U0r&n) ((case-lambda ((g$C$28540$U0r&n g$v*$19659$U0r&n g$x*$19660$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28541$U0r&n) (cons (case-lambda ((g$V$28542$U0r&n) (values g$C$28540$U0r&n g$V$28542$U0r&n g$v*$19659$U0r&n))) g$V$28541$U0r&n g$x*$19660$U0r&n))) g$x$19653$U0r&n))) g$C$28543$U0r&n g$v*$19658$U0r&n g$x*$19657$U0r&n)))))) g$ls/false$19650$U0r&n) ((case-lambda ((g$C$28551$U0r&n g$t$19661$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28552$U0r&n) ((case-lambda ((g$C$28550$U0r&n g$ls/false$19662$U0r&n) (if g$ls/false$19662$U0r&n (apply g$C$28550$U0r&n (case-lambda ((g$C$28545$U0r&n) (values g$C$28545$U0r&n '() '()))) g$ls/false$19662$U0r&n) ((case-lambda ((g$C$28548$U0r&n g$t$19663$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28549$U0r&n) ((case-lambda ((g$C$28547$U0r&n g$ls/false$19664$U0r&n) (if g$ls/false$19664$U0r&n (apply g$C$28547$U0r&n (case-lambda ((g$C$28546$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28546$U0r&n '#f '"invalid library name" g$spec$19634$U0r&n))) g$ls/false$19664$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28547$U0r&n '#f '"invalid syntax" g$t$19663$U0r&n)))) g$C$28548$U0r&n g$V$28549$U0r&n))) g$t$19663$U0r&n '_))) g$C$28550$U0r&n g$t$19661$U0r&n)))) g$C$28551$U0r&n g$V$28552$U0r&n))) g$t$19661$U0r&n '()))) g$C$28553$U0r&n g$t$19649$U0r&n))))))) g$C$28556$U0r&n g$V$28557$U0r&n))) g$t$19649$U0r&n '(any . any)))) g$C$28558$U0r&n g$t$19643$U0r&n))))))) g$C$28561$U0r&n g$V$28562$U0r&n))) g$t$19643$U0r&n '(each-any)))) g$C$28563$U0r&n g$x$19642$U0r&n)))) (call-with-values g$C$28570$U0r&n (case-lambda ((g$C$28564$U0r&n) (g$parse$19635$U0r&n g$C$28564$U0r&n g$spec$19634$U0r&n))) (case-lambda ((g$C$28569$U0r&n g$name*$19638$U0r&n g$ver*$19639$U0r&n) ((case-lambda ((g$C$28565$U0r&n g$ver*$19640$U0r&n g$name*$19641$U0r&n) ((case-lambda ((g$J$28567$U0r&n) (null? (case-lambda ((g$T$28568$U0r&n) (if g$T$28568$U0r&n (g$syntax-violation$17186$U0r&n g$J$28567$U0r&n '#f '"empty library name" g$spec$19634$U0r&n) (void g$J$28567$U0r&n)))) g$name*$19641$U0r&n))) (case-lambda (g$IGNORE$28566$U0r&n (values g$C$28565$U0r&n g$name*$19641$U0r&n g$ver*$19640$U0r&n)))))) g$C$28569$U0r&n g$ver*$19639$U0r&n g$name*$19638$U0r&n))))))) g$C$28571$U0r&n uninitialized)))))) (library-letrec*-identity 'g$parse-library-name$17117$U0r&n))) (g$parse-library$17118$U0r&n g$parse-library$20713$U0r&n ((case-lambda ((g$C$29783$U0r&n) (g$C$29783$U0r&n (case-lambda ((g$C$28588$U0r&n g$e$19665$U0r&n) ((case-lambda ((g$C$28586$U0r&n g$t$19666$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28587$U0r&n) ((case-lambda ((g$C$28583$U0r&n g$ls/false$19667$U0r&n) ((case-lambda ((g$J$28585$U0r&n) (if g$ls/false$19667$U0r&n (apply g$J$28585$U0r&n (case-lambda ((g$C$28572$U0r&n g$library$19668$U0r&n g$name*$19669$U0r&n g$export$19670$U0r&n g$exp*$19671$U0r&n g$import$19672$U0r&n g$imp*$19673$U0r&n g$b*$19674$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28573$U0r&n) (eq? (case-lambda ((g$T$28574$U0r&n) (if g$T$28574$U0r&n (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28575$U0r&n) (eq? (case-lambda ((g$T$28576$U0r&n) (if g$T$28576$U0r&n (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28577$U0r&n) (eq? g$C$28572$U0r&n g$V$28577$U0r&n 'library))) g$library$19668$U0r&n) (g$C$28572$U0r&n '#f)))) g$V$28575$U0r&n 'import))) g$import$19672$U0r&n) (g$C$28572$U0r&n '#f)))) g$V$28573$U0r&n 'export))) g$export$19670$U0r&n))) g$ls/false$19667$U0r&n) (g$J$28585$U0r&n '#f)))) (case-lambda ((g$T$28584$U0r&n) (if g$T$28584$U0r&n (apply g$C$28583$U0r&n (case-lambda ((g$C$28578$U0r&n g$library$19675$U0r&n g$name*$19676$U0r&n g$export$19677$U0r&n g$exp*$19678$U0r&n g$import$19679$U0r&n g$imp*$19680$U0r&n g$b*$19681$U0r&n) (values g$C$28578$U0r&n g$name*$19676$U0r&n g$exp*$19678$U0r&n g$imp*$19680$U0r&n g$b*$19681$U0r&n))) g$ls/false$19667$U0r&n) ((case-lambda ((g$C$28581$U0r&n g$t$19682$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28582$U0r&n) ((case-lambda ((g$C$28580$U0r&n g$ls/false$19683$U0r&n) (if g$ls/false$19683$U0r&n (apply g$C$28580$U0r&n (case-lambda ((g$C$28579$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28579$U0r&n '#f '"malformed library" g$e$19665$U0r&n))) g$ls/false$19683$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28580$U0r&n '#f '"invalid syntax" g$t$19682$U0r&n)))) g$C$28581$U0r&n g$V$28582$U0r&n))) g$t$19682$U0r&n '_))) g$C$28583$U0r&n g$t$19666$U0r&n))))))) g$C$28586$U0r&n g$V$28587$U0r&n))) g$t$19666$U0r&n '(any each-any (any . each-any) (any . each-any) . each-any)))) g$C$28588$U0r&n g$e$19665$U0r&n)))))) (library-letrec*-identity 'g$parse-library$17118$U0r&n))) (g$parse-import-spec*$17119$U0r&n g$parse-import-spec*$20714$U0r&n ((case-lambda ((g$C$29784$U0r&n) (g$C$29784$U0r&n (case-lambda ((g$C$28972$U0r&n g$imp*$19684$U0r&n) ((case-lambda ((g$C$28969$U0r&n g$idsyn?$19685$U0r&n g$dup-error$19686$U0r&n g$merge-substs$19687$U0r&n g$exclude*$19688$U0r&n g$find*$19689$U0r&n g$rem*$19690$U0r&n g$remove-dups$19691$U0r&n g$parse-library-name$19692$U0r&n g$import-library$19693$U0r&n g$get-import$19694$U0r&n g$add-imports!$19695$U0r&n) (begin (set! g$idsyn?$19685$U0r&n (case-lambda ((g$C$28589$U0r&n g$x$19945$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28590$U0r&n) (g$symbol?$13496$U0r&n g$C$28589$U0r&n g$V$28590$U0r&n))) g$x$19945$U0r&n)))) (begin (set! g$dup-error$19686$U0r&n (case-lambda ((g$C$28591$U0r&n g$name$19944$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28591$U0r&n 'import '"two imports with different bindings" g$name$19944$U0r&n)))) (begin (set! g$merge-substs$19687$U0r&n (case-lambda ((g$C$28606$U0r&n g$s$19935$U0r&n g$subst$19936$U0r&n) ((case-lambda ((g$C$28601$U0r&n g$insert-to-subst$19937$U0r&n) (begin (set! g$insert-to-subst$19937$U0r&n (case-lambda ((g$C$28598$U0r&n g$a$19938$U0r&n g$subst$19939$U0r&n) (cdr (case-lambda ((g$V$28599$U0r&n) (car (case-lambda ((g$V$28600$U0r&n) ((case-lambda ((g$C$28596$U0r&n g$name$19940$U0r&n g$label$19941$U0r&n) (g$assq$12741$U0r&n (case-lambda ((g$V$28597$U0r&n) ((case-lambda ((g$C$28595$U0r&n g$t$19942$U0r&n) (if g$t$19942$U0r&n ((case-lambda ((g$C$28592$U0r&n g$x$19943$U0r&n) (cdr (case-lambda ((g$V$28593$U0r&n) (eq? (case-lambda ((g$T$28594$U0r&n) (if g$T$28594$U0r&n (g$C$28592$U0r&n g$subst$19939$U0r&n) (g$dup-error$19686$U0r&n g$C$28592$U0r&n g$name$19940$U0r&n)))) g$V$28593$U0r&n g$label$19941$U0r&n))) g$x$19943$U0r&n))) g$C$28595$U0r&n g$t$19942$U0r&n) (cons g$C$28595$U0r&n g$a$19938$U0r&n g$subst$19939$U0r&n)))) g$C$28596$U0r&n g$V$28597$U0r&n))) g$name$19940$U0r&n g$subst$19939$U0r&n))) g$C$28598$U0r&n g$V$28600$U0r&n g$V$28599$U0r&n))) g$a$19938$U0r&n))) g$a$19938$U0r&n)))) (null? (case-lambda ((g$T$28602$U0r&n) (if g$T$28602$U0r&n (g$C$28601$U0r&n g$subst$19936$U0r&n) (cdr (case-lambda ((g$V$28603$U0r&n) (g$merge-substs$19687$U0r&n (case-lambda ((g$V$28604$U0r&n) (car (case-lambda ((g$V$28605$U0r&n) (g$insert-to-subst$19937$U0r&n g$C$28601$U0r&n g$V$28605$U0r&n g$V$28604$U0r&n))) g$s$19935$U0r&n))) g$V$28603$U0r&n g$subst$19936$U0r&n))) g$s$19935$U0r&n)))) g$s$19935$U0r&n)))) g$C$28606$U0r&n uninitialized)))) (begin (set! g$exclude*$19688$U0r&n (case-lambda ((g$C$28631$U0r&n g$sym*$19911$U0r&n g$subst$19912$U0r&n) ((case-lambda ((g$C$28629$U0r&n g$exclude$19913$U0r&n) (begin (set! g$exclude$19913$U0r&n (case-lambda ((g$C$28613$U0r&n g$sym$19926$U0r&n g$subst$19927$U0r&n) (null? (case-lambda ((g$T$28614$U0r&n) (if g$T$28614$U0r&n (g$syntax-violation$17186$U0r&n g$C$28613$U0r&n 'import '"cannot rename unbound identifier" g$sym$19926$U0r&n) (g$caar$13505$U0r&n (case-lambda ((g$V$28615$U0r&n) (eq? (case-lambda ((g$T$28616$U0r&n) (if g$T$28616$U0r&n (cdr (case-lambda ((g$V$28617$U0r&n) (g$cdar$13507$U0r&n (case-lambda ((g$V$28618$U0r&n) (values g$C$28613$U0r&n g$V$28618$U0r&n g$V$28617$U0r&n))) g$subst$19927$U0r&n))) g$subst$19927$U0r&n) (car (case-lambda ((g$V$28619$U0r&n) ((case-lambda ((g$C$28612$U0r&n g$a$19928$U0r&n) (call-with-values g$C$28612$U0r&n (case-lambda ((g$C$28607$U0r&n) (cdr (case-lambda ((g$V$28608$U0r&n) (g$exclude$19913$U0r&n g$C$28607$U0r&n g$sym$19926$U0r&n g$V$28608$U0r&n))) g$subst$19927$U0r&n))) (case-lambda ((g$C$28611$U0r&n g$old$19931$U0r&n g$subst$19932$U0r&n) ((case-lambda ((g$C$28609$U0r&n g$subst$19933$U0r&n g$old$19934$U0r&n) (cons (case-lambda ((g$V$28610$U0r&n) (values g$C$28609$U0r&n g$old$19934$U0r&n g$V$28610$U0r&n))) g$a$19928$U0r&n g$subst$19933$U0r&n))) g$C$28611$U0r&n g$subst$19932$U0r&n g$old$19931$U0r&n)))))) g$C$28613$U0r&n g$V$28619$U0r&n))) g$subst$19927$U0r&n)))) g$sym$19926$U0r&n g$V$28615$U0r&n))) g$subst$19927$U0r&n)))) g$subst$19927$U0r&n)))) (null? (case-lambda ((g$T$28630$U0r&n) (if g$T$28630$U0r&n (values g$C$28629$U0r&n '() g$subst$19912$U0r&n) (call-with-values g$C$28629$U0r&n (case-lambda ((g$C$28620$U0r&n) (car (case-lambda ((g$V$28621$U0r&n) (g$exclude$19913$U0r&n g$C$28620$U0r&n g$V$28621$U0r&n g$subst$19912$U0r&n))) g$sym*$19911$U0r&n))) (case-lambda ((g$C$28628$U0r&n g$old$19916$U0r&n g$subst$19917$U0r&n) ((case-lambda ((g$C$28627$U0r&n g$subst$19918$U0r&n g$old$19919$U0r&n) (call-with-values g$C$28627$U0r&n (case-lambda ((g$C$28622$U0r&n) (cdr (case-lambda ((g$V$28623$U0r&n) (g$exclude*$19688$U0r&n g$C$28622$U0r&n g$V$28623$U0r&n g$subst$19918$U0r&n))) g$sym*$19911$U0r&n))) (case-lambda ((g$C$28626$U0r&n g$old*$19922$U0r&n g$subst$19923$U0r&n) ((case-lambda ((g$C$28624$U0r&n g$subst$19924$U0r&n g$old*$19925$U0r&n) (cons (case-lambda ((g$V$28625$U0r&n) (values g$C$28624$U0r&n g$V$28625$U0r&n g$subst$19924$U0r&n))) g$old$19919$U0r&n g$old*$19925$U0r&n))) g$C$28626$U0r&n g$subst$19923$U0r&n g$old*$19922$U0r&n)))))) g$C$28628$U0r&n g$subst$19917$U0r&n g$old$19916$U0r&n))))))) g$sym*$19911$U0r&n)))) g$C$28631$U0r&n uninitialized)))) (begin (set! g$find*$19689$U0r&n (case-lambda ((g$C$28635$U0r&n g$sym*$19907$U0r&n g$subst$19908$U0r&n) (g$map$12753$U0r&n g$C$28635$U0r&n (case-lambda ((g$C$28633$U0r&n g$x$19909$U0r&n) (g$assq$12741$U0r&n (case-lambda ((g$V$28634$U0r&n) ((case-lambda ((g$C$28632$U0r&n g$t$19910$U0r&n) (if g$t$19910$U0r&n (cdr g$C$28632$U0r&n g$t$19910$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28632$U0r&n 'import '"cannot find identifier" g$x$19909$U0r&n)))) g$C$28633$U0r&n g$V$28634$U0r&n))) g$x$19909$U0r&n g$subst$19908$U0r&n))) g$sym*$19907$U0r&n)))) (begin (set! g$rem*$19690$U0r&n (case-lambda ((g$C$28647$U0r&n g$sym*$19903$U0r&n g$subst$19904$U0r&n) ((case-lambda ((g$C$28646$U0r&n g$f$19905$U0r&n) ((case-lambda ((g$C$28637$U0r&n g$f$28636$U0r&n) (begin (set! g$f$19905$U0r&n g$f$28636$U0r&n) (g$C$28637$U0r&n g$f$19905$U0r&n)))) g$C$28646$U0r&n (case-lambda ((g$C$28638$U0r&n g$subst$19906$U0r&n) (null? (case-lambda ((g$T$28639$U0r&n) (if g$T$28639$U0r&n (g$C$28638$U0r&n '()) (g$caar$13505$U0r&n (case-lambda ((g$V$28640$U0r&n) (g$memq$12745$U0r&n (case-lambda ((g$T$28641$U0r&n) (if g$T$28641$U0r&n (cdr (case-lambda ((g$V$28642$U0r&n) (g$f$19905$U0r&n g$C$28638$U0r&n g$V$28642$U0r&n))) g$subst$19906$U0r&n) (cdr (case-lambda ((g$V$28643$U0r&n) (g$f$19905$U0r&n (case-lambda ((g$V$28644$U0r&n) (car (case-lambda ((g$V$28645$U0r&n) (cons g$C$28638$U0r&n g$V$28645$U0r&n g$V$28644$U0r&n))) g$subst$19906$U0r&n))) g$V$28643$U0r&n))) g$subst$19906$U0r&n)))) g$V$28640$U0r&n g$sym*$19903$U0r&n))) g$subst$19906$U0r&n)))) g$subst$19906$U0r&n)))))) (case-lambda ((g$V$28648$U0r&n) (g$V$28648$U0r&n g$C$28647$U0r&n g$subst$19904$U0r&n))) uninitialized)))) (begin (set! g$remove-dups$19691$U0r&n (case-lambda ((g$C$28649$U0r&n g$ls$19902$U0r&n) (null? (case-lambda ((g$T$28650$U0r&n) (if g$T$28650$U0r&n (g$C$28649$U0r&n '()) (cdr (case-lambda ((g$V$28651$U0r&n) (car (case-lambda ((g$V$28652$U0r&n) (g$memq$12745$U0r&n (case-lambda ((g$T$28653$U0r&n) (if g$T$28653$U0r&n (cdr (case-lambda ((g$V$28654$U0r&n) (g$remove-dups$19691$U0r&n g$C$28649$U0r&n g$V$28654$U0r&n))) g$ls$19902$U0r&n) (cdr (case-lambda ((g$V$28655$U0r&n) (g$remove-dups$19691$U0r&n (case-lambda ((g$V$28656$U0r&n) (car (case-lambda ((g$V$28657$U0r&n) (cons g$C$28649$U0r&n g$V$28657$U0r&n g$V$28656$U0r&n))) g$ls$19902$U0r&n))) g$V$28655$U0r&n))) g$ls$19902$U0r&n)))) g$V$28652$U0r&n g$V$28651$U0r&n))) g$ls$19902$U0r&n))) g$ls$19902$U0r&n)))) g$ls$19902$U0r&n)))) (begin (set! g$parse-library-name$19692$U0r&n (case-lambda ((g$C$28832$U0r&n g$spec$19786$U0r&n) ((case-lambda ((g$C$28830$U0r&n g$subversion?$19787$U0r&n g$subversion-pred$19788$U0r&n g$version-pred$19789$U0r&n) (begin (set! g$subversion?$19787$U0r&n (case-lambda ((g$C$28661$U0r&n g$x$19900$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28662$U0r&n) ((case-lambda ((g$C$28658$U0r&n g$x$19901$U0r&n) (integer? (case-lambda ((g$T$28659$U0r&n) (if g$T$28659$U0r&n (exact? (case-lambda ((g$T$28660$U0r&n) (if g$T$28660$U0r&n (>= g$C$28658$U0r&n g$x$19901$U0r&n '0) (g$C$28658$U0r&n '#f)))) g$x$19901$U0r&n) (g$C$28658$U0r&n '#f)))) g$x$19901$U0r&n))) g$C$28661$U0r&n g$V$28662$U0r&n))) g$x$19900$U0r&n)))) (begin (set! g$subversion-pred$19788$U0r&n (case-lambda ((g$C$28734$U0r&n g$x*$19852$U0r&n) ((case-lambda ((g$C$28732$U0r&n g$t$19853$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28733$U0r&n) ((case-lambda ((g$C$28729$U0r&n g$ls/false$19854$U0r&n) ((case-lambda ((g$J$28731$U0r&n) (if g$ls/false$19854$U0r&n (apply g$J$28731$U0r&n (case-lambda ((g$C$28663$U0r&n g$n$19855$U0r&n) (g$subversion?$19787$U0r&n g$C$28663$U0r&n g$n$19855$U0r&n))) g$ls/false$19854$U0r&n) (g$J$28731$U0r&n '#f)))) (case-lambda ((g$T$28730$U0r&n) (if g$T$28730$U0r&n (apply g$C$28729$U0r&n (case-lambda ((g$C$28666$U0r&n g$n$19856$U0r&n) (g$C$28666$U0r&n (case-lambda ((g$C$28664$U0r&n g$x$19857$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28665$U0r&n) (= g$C$28664$U0r&n g$x$19857$U0r&n g$V$28665$U0r&n))) g$n$19856$U0r&n)))))) g$ls/false$19854$U0r&n) ((case-lambda ((g$C$28727$U0r&n g$t$19858$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28728$U0r&n) ((case-lambda ((g$C$28724$U0r&n g$ls/false$19859$U0r&n) ((case-lambda ((g$J$28726$U0r&n) (if g$ls/false$19859$U0r&n (apply g$J$28726$U0r&n (case-lambda ((g$C$28667$U0r&n g$p?$19860$U0r&n g$sub*$19861$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28668$U0r&n) (eq? g$C$28667$U0r&n g$V$28668$U0r&n 'and))) g$p?$19860$U0r&n))) g$ls/false$19859$U0r&n) (g$J$28726$U0r&n '#f)))) (case-lambda ((g$T$28725$U0r&n) (if g$T$28725$U0r&n (apply g$C$28724$U0r&n (case-lambda ((g$C$28672$U0r&n g$p?$19862$U0r&n g$sub*$19863$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$28673$U0r&n) ((case-lambda ((g$C$28671$U0r&n g$p*$19864$U0r&n) (g$C$28671$U0r&n (case-lambda ((g$C$28670$U0r&n g$x$19865$U0r&n) (g$for-all$12751$U0r&n g$C$28670$U0r&n (case-lambda ((g$C$28669$U0r&n g$p$19866$U0r&n) (g$p$19866$U0r&n g$C$28669$U0r&n g$x$19865$U0r&n))) g$p*$19864$U0r&n)))))) g$C$28672$U0r&n g$V$28673$U0r&n))) g$subversion-pred$19788$U0r&n g$sub*$19863$U0r&n))) g$ls/false$19859$U0r&n) ((case-lambda ((g$C$28722$U0r&n g$t$19867$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28723$U0r&n) ((case-lambda ((g$C$28719$U0r&n g$ls/false$19868$U0r&n) ((case-lambda ((g$J$28721$U0r&n) (if g$ls/false$19868$U0r&n (apply g$J$28721$U0r&n (case-lambda ((g$C$28674$U0r&n g$p?$19869$U0r&n g$sub*$19870$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28675$U0r&n) (eq? g$C$28674$U0r&n g$V$28675$U0r&n 'or))) g$p?$19869$U0r&n))) g$ls/false$19868$U0r&n) (g$J$28721$U0r&n '#f)))) (case-lambda ((g$T$28720$U0r&n) (if g$T$28720$U0r&n (apply g$C$28719$U0r&n (case-lambda ((g$C$28679$U0r&n g$p?$19871$U0r&n g$sub*$19872$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$28680$U0r&n) ((case-lambda ((g$C$28678$U0r&n g$p*$19873$U0r&n) (g$C$28678$U0r&n (case-lambda ((g$C$28677$U0r&n g$x$19874$U0r&n) (g$exists$12752$U0r&n g$C$28677$U0r&n (case-lambda ((g$C$28676$U0r&n g$p$19875$U0r&n) (g$p$19875$U0r&n g$C$28676$U0r&n g$x$19874$U0r&n))) g$p*$19873$U0r&n)))))) g$C$28679$U0r&n g$V$28680$U0r&n))) g$subversion-pred$19788$U0r&n g$sub*$19872$U0r&n))) g$ls/false$19868$U0r&n) ((case-lambda ((g$C$28717$U0r&n g$t$19876$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28718$U0r&n) ((case-lambda ((g$C$28714$U0r&n g$ls/false$19877$U0r&n) ((case-lambda ((g$J$28716$U0r&n) (if g$ls/false$19877$U0r&n (apply g$J$28716$U0r&n (case-lambda ((g$C$28681$U0r&n g$p?$19878$U0r&n g$sub$19879$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28682$U0r&n) (eq? g$C$28681$U0r&n g$V$28682$U0r&n 'not))) g$p?$19878$U0r&n))) g$ls/false$19877$U0r&n) (g$J$28716$U0r&n '#f)))) (case-lambda ((g$T$28715$U0r&n) (if g$T$28715$U0r&n (apply g$C$28714$U0r&n (case-lambda ((g$C$28686$U0r&n g$p?$19880$U0r&n g$sub$19881$U0r&n) (g$subversion-pred$19788$U0r&n (case-lambda ((g$V$28687$U0r&n) ((case-lambda ((g$C$28685$U0r&n g$p$19882$U0r&n) (g$C$28685$U0r&n (case-lambda ((g$C$28683$U0r&n g$x$19883$U0r&n) (g$p$19882$U0r&n (case-lambda ((g$V$28684$U0r&n) (not g$C$28683$U0r&n g$V$28684$U0r&n))) g$x$19883$U0r&n)))))) g$C$28686$U0r&n g$V$28687$U0r&n))) g$sub$19881$U0r&n))) g$ls/false$19877$U0r&n) ((case-lambda ((g$C$28712$U0r&n g$t$19884$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28713$U0r&n) ((case-lambda ((g$C$28709$U0r&n g$ls/false$19885$U0r&n) ((case-lambda ((g$J$28711$U0r&n) (if g$ls/false$19885$U0r&n (apply g$J$28711$U0r&n (case-lambda ((g$C$28688$U0r&n g$p?$19886$U0r&n g$n$19887$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28689$U0r&n) (eq? (case-lambda ((g$T$28690$U0r&n) (if g$T$28690$U0r&n (g$subversion?$19787$U0r&n g$C$28688$U0r&n g$n$19887$U0r&n) (g$C$28688$U0r&n '#f)))) g$V$28689$U0r&n '<=))) g$p?$19886$U0r&n))) g$ls/false$19885$U0r&n) (g$J$28711$U0r&n '#f)))) (case-lambda ((g$T$28710$U0r&n) (if g$T$28710$U0r&n (apply g$C$28709$U0r&n (case-lambda ((g$C$28693$U0r&n g$p?$19888$U0r&n g$n$19889$U0r&n) (g$C$28693$U0r&n (case-lambda ((g$C$28691$U0r&n g$x$19890$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28692$U0r&n) (<= g$C$28691$U0r&n g$x$19890$U0r&n g$V$28692$U0r&n))) g$n$19889$U0r&n)))))) g$ls/false$19885$U0r&n) ((case-lambda ((g$C$28707$U0r&n g$t$19891$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28708$U0r&n) ((case-lambda ((g$C$28704$U0r&n g$ls/false$19892$U0r&n) ((case-lambda ((g$J$28706$U0r&n) (if g$ls/false$19892$U0r&n (apply g$J$28706$U0r&n (case-lambda ((g$C$28694$U0r&n g$p?$19893$U0r&n g$n$19894$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28695$U0r&n) (eq? (case-lambda ((g$T$28696$U0r&n) (if g$T$28696$U0r&n (g$subversion?$19787$U0r&n g$C$28694$U0r&n g$n$19894$U0r&n) (g$C$28694$U0r&n '#f)))) g$V$28695$U0r&n '>=))) g$p?$19893$U0r&n))) g$ls/false$19892$U0r&n) (g$J$28706$U0r&n '#f)))) (case-lambda ((g$T$28705$U0r&n) (if g$T$28705$U0r&n (apply g$C$28704$U0r&n (case-lambda ((g$C$28699$U0r&n g$p?$19895$U0r&n g$n$19896$U0r&n) (g$C$28699$U0r&n (case-lambda ((g$C$28697$U0r&n g$x$19897$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28698$U0r&n) (>= g$C$28697$U0r&n g$x$19897$U0r&n g$V$28698$U0r&n))) g$n$19896$U0r&n)))))) g$ls/false$19892$U0r&n) ((case-lambda ((g$C$28702$U0r&n g$t$19898$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28703$U0r&n) ((case-lambda ((g$C$28701$U0r&n g$ls/false$19899$U0r&n) (if g$ls/false$19899$U0r&n (apply g$C$28701$U0r&n (case-lambda ((g$C$28700$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28700$U0r&n 'import '"invalid sub-version spec" g$spec$19786$U0r&n g$x*$19852$U0r&n))) g$ls/false$19899$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28701$U0r&n '#f '"invalid syntax" g$t$19898$U0r&n)))) g$C$28702$U0r&n g$V$28703$U0r&n))) g$t$19898$U0r&n '_))) g$C$28704$U0r&n g$t$19891$U0r&n))))))) g$C$28707$U0r&n g$V$28708$U0r&n))) g$t$19891$U0r&n '(any any)))) g$C$28709$U0r&n g$t$19884$U0r&n))))))) g$C$28712$U0r&n g$V$28713$U0r&n))) g$t$19884$U0r&n '(any any)))) g$C$28714$U0r&n g$t$19876$U0r&n))))))) g$C$28717$U0r&n g$V$28718$U0r&n))) g$t$19876$U0r&n '(any any)))) g$C$28719$U0r&n g$t$19867$U0r&n))))))) g$C$28722$U0r&n g$V$28723$U0r&n))) g$t$19867$U0r&n '(any . each-any)))) g$C$28724$U0r&n g$t$19858$U0r&n))))))) g$C$28727$U0r&n g$V$28728$U0r&n))) g$t$19858$U0r&n '(any . each-any)))) g$C$28729$U0r&n g$t$19853$U0r&n))))))) g$C$28732$U0r&n g$V$28733$U0r&n))) g$t$19853$U0r&n 'any))) g$C$28734$U0r&n g$x*$19852$U0r&n)))) (begin (set! g$version-pred$19789$U0r&n (case-lambda ((g$C$28799$U0r&n g$x*$19812$U0r&n) ((case-lambda ((g$C$28797$U0r&n g$t$19813$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28798$U0r&n) ((case-lambda ((g$C$28796$U0r&n g$ls/false$19814$U0r&n) (if g$ls/false$19814$U0r&n (apply g$C$28796$U0r&n (case-lambda ((g$C$28736$U0r&n) (g$C$28736$U0r&n (case-lambda ((g$C$28735$U0r&n g$x$19815$U0r&n) (g$C$28735$U0r&n '#t)))))) g$ls/false$19814$U0r&n) ((case-lambda ((g$C$28794$U0r&n g$t$19816$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28795$U0r&n) ((case-lambda ((g$C$28791$U0r&n g$ls/false$19817$U0r&n) ((case-lambda ((g$J$28793$U0r&n) (if g$ls/false$19817$U0r&n (apply g$J$28793$U0r&n (case-lambda ((g$C$28737$U0r&n g$c$19818$U0r&n g$ver*$19819$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28738$U0r&n) (eq? g$C$28737$U0r&n g$V$28738$U0r&n 'and))) g$c$19818$U0r&n))) g$ls/false$19817$U0r&n) (g$J$28793$U0r&n '#f)))) (case-lambda ((g$T$28792$U0r&n) (if g$T$28792$U0r&n (apply g$C$28791$U0r&n (case-lambda ((g$C$28742$U0r&n g$c$19820$U0r&n g$ver*$19821$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$28743$U0r&n) ((case-lambda ((g$C$28741$U0r&n g$p*$19822$U0r&n) (g$C$28741$U0r&n (case-lambda ((g$C$28740$U0r&n g$x$19823$U0r&n) (g$for-all$12751$U0r&n g$C$28740$U0r&n (case-lambda ((g$C$28739$U0r&n g$p$19824$U0r&n) (g$p$19824$U0r&n g$C$28739$U0r&n g$x$19823$U0r&n))) g$p*$19822$U0r&n)))))) g$C$28742$U0r&n g$V$28743$U0r&n))) g$version-pred$19789$U0r&n g$ver*$19821$U0r&n))) g$ls/false$19817$U0r&n) ((case-lambda ((g$C$28789$U0r&n g$t$19825$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28790$U0r&n) ((case-lambda ((g$C$28786$U0r&n g$ls/false$19826$U0r&n) ((case-lambda ((g$J$28788$U0r&n) (if g$ls/false$19826$U0r&n (apply g$J$28788$U0r&n (case-lambda ((g$C$28744$U0r&n g$c$19827$U0r&n g$ver*$19828$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28745$U0r&n) (eq? g$C$28744$U0r&n g$V$28745$U0r&n 'or))) g$c$19827$U0r&n))) g$ls/false$19826$U0r&n) (g$J$28788$U0r&n '#f)))) (case-lambda ((g$T$28787$U0r&n) (if g$T$28787$U0r&n (apply g$C$28786$U0r&n (case-lambda ((g$C$28749$U0r&n g$c$19829$U0r&n g$ver*$19830$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$28750$U0r&n) ((case-lambda ((g$C$28748$U0r&n g$p*$19831$U0r&n) (g$C$28748$U0r&n (case-lambda ((g$C$28747$U0r&n g$x$19832$U0r&n) (g$exists$12752$U0r&n g$C$28747$U0r&n (case-lambda ((g$C$28746$U0r&n g$p$19833$U0r&n) (g$p$19833$U0r&n g$C$28746$U0r&n g$x$19832$U0r&n))) g$p*$19831$U0r&n)))))) g$C$28749$U0r&n g$V$28750$U0r&n))) g$version-pred$19789$U0r&n g$ver*$19830$U0r&n))) g$ls/false$19826$U0r&n) ((case-lambda ((g$C$28784$U0r&n g$t$19834$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28785$U0r&n) ((case-lambda ((g$C$28781$U0r&n g$ls/false$19835$U0r&n) ((case-lambda ((g$J$28783$U0r&n) (if g$ls/false$19835$U0r&n (apply g$J$28783$U0r&n (case-lambda ((g$C$28751$U0r&n g$c$19836$U0r&n g$ver$19837$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28752$U0r&n) (eq? g$C$28751$U0r&n g$V$28752$U0r&n 'not))) g$c$19836$U0r&n))) g$ls/false$19835$U0r&n) (g$J$28783$U0r&n '#f)))) (case-lambda ((g$T$28782$U0r&n) (if g$T$28782$U0r&n (apply g$C$28781$U0r&n (case-lambda ((g$C$28756$U0r&n g$c$19838$U0r&n g$ver$19839$U0r&n) (g$version-pred$19789$U0r&n (case-lambda ((g$V$28757$U0r&n) ((case-lambda ((g$C$28755$U0r&n g$p$19840$U0r&n) (g$C$28755$U0r&n (case-lambda ((g$C$28753$U0r&n g$x$19841$U0r&n) (g$p$19840$U0r&n (case-lambda ((g$V$28754$U0r&n) (not g$C$28753$U0r&n g$V$28754$U0r&n))) g$x$19841$U0r&n)))))) g$C$28756$U0r&n g$V$28757$U0r&n))) g$ver$19839$U0r&n))) g$ls/false$19835$U0r&n) ((case-lambda ((g$C$28779$U0r&n g$t$19842$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28780$U0r&n) ((case-lambda ((g$C$28778$U0r&n g$ls/false$19843$U0r&n) (if g$ls/false$19843$U0r&n (apply g$C$28778$U0r&n (case-lambda ((g$C$28772$U0r&n g$sub*$19844$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$28773$U0r&n) ((case-lambda ((g$C$28771$U0r&n g$p*$19845$U0r&n) (g$C$28771$U0r&n (case-lambda ((g$C$28769$U0r&n g$x$19846$U0r&n) ((case-lambda ((g$C$28768$U0r&n g$f$19847$U0r&n) ((case-lambda ((g$C$28759$U0r&n g$f$28758$U0r&n) (begin (set! g$f$19847$U0r&n g$f$28758$U0r&n) (g$C$28759$U0r&n g$f$19847$U0r&n)))) g$C$28768$U0r&n (case-lambda ((g$C$28760$U0r&n g$p*$19848$U0r&n g$x$19849$U0r&n) (null? (case-lambda ((g$T$28761$U0r&n) (if g$T$28761$U0r&n (g$C$28760$U0r&n '#t) (null? (case-lambda ((g$T$28762$U0r&n) (if g$T$28762$U0r&n (g$C$28760$U0r&n '#f) (car (case-lambda ((g$V$28763$U0r&n) (car (case-lambda ((g$V$28764$U0r&n) (g$V$28764$U0r&n (case-lambda ((g$T$28765$U0r&n) (if g$T$28765$U0r&n (cdr (case-lambda ((g$V$28766$U0r&n) (cdr (case-lambda ((g$V$28767$U0r&n) (g$f$19847$U0r&n g$C$28760$U0r&n g$V$28767$U0r&n g$V$28766$U0r&n))) g$p*$19848$U0r&n))) g$x$19849$U0r&n) (g$C$28760$U0r&n '#f)))) g$V$28763$U0r&n))) g$p*$19848$U0r&n))) g$x$19849$U0r&n)))) g$x$19849$U0r&n)))) g$p*$19848$U0r&n)))))) (case-lambda ((g$V$28770$U0r&n) (g$V$28770$U0r&n g$C$28769$U0r&n g$p*$19845$U0r&n g$x$19846$U0r&n))) uninitialized)))))) g$C$28772$U0r&n g$V$28773$U0r&n))) g$subversion-pred$19788$U0r&n g$sub*$19844$U0r&n))) g$ls/false$19843$U0r&n) ((case-lambda ((g$C$28776$U0r&n g$t$19850$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28777$U0r&n) ((case-lambda ((g$C$28775$U0r&n g$ls/false$19851$U0r&n) (if g$ls/false$19851$U0r&n (apply g$C$28775$U0r&n (case-lambda ((g$C$28774$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28774$U0r&n 'import '"invalid version spec" g$spec$19786$U0r&n g$x*$19812$U0r&n))) g$ls/false$19851$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28775$U0r&n '#f '"invalid syntax" g$t$19850$U0r&n)))) g$C$28776$U0r&n g$V$28777$U0r&n))) g$t$19850$U0r&n '_))) g$C$28778$U0r&n g$t$19842$U0r&n)))) g$C$28779$U0r&n g$V$28780$U0r&n))) g$t$19842$U0r&n 'each-any))) g$C$28781$U0r&n g$t$19834$U0r&n))))))) g$C$28784$U0r&n g$V$28785$U0r&n))) g$t$19834$U0r&n '(any any)))) g$C$28786$U0r&n g$t$19825$U0r&n))))))) g$C$28789$U0r&n g$V$28790$U0r&n))) g$t$19825$U0r&n '(any . each-any)))) g$C$28791$U0r&n g$t$19816$U0r&n))))))) g$C$28794$U0r&n g$V$28795$U0r&n))) g$t$19816$U0r&n '(any . each-any)))) g$C$28796$U0r&n g$t$19813$U0r&n)))) g$C$28797$U0r&n g$V$28798$U0r&n))) g$t$19813$U0r&n '()))) g$C$28799$U0r&n g$x*$19812$U0r&n)))) ((case-lambda ((g$C$28829$U0r&n g$f$19790$U0r&n) ((case-lambda ((g$C$28801$U0r&n g$f$28800$U0r&n) (begin (set! g$f$19790$U0r&n g$f$28800$U0r&n) (g$C$28801$U0r&n g$f$19790$U0r&n)))) g$C$28829$U0r&n (case-lambda ((g$C$28828$U0r&n g$x$19791$U0r&n) ((case-lambda ((g$C$28826$U0r&n g$t$19792$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28827$U0r&n) ((case-lambda ((g$C$28825$U0r&n g$ls/false$19793$U0r&n) (if g$ls/false$19793$U0r&n (apply g$C$28825$U0r&n (case-lambda ((g$C$28802$U0r&n g$version-spec*$19794$U0r&n) (g$version-pred$19789$U0r&n (case-lambda ((g$V$28803$U0r&n) (values g$C$28802$U0r&n '() g$V$28803$U0r&n))) g$version-spec*$19794$U0r&n))) g$ls/false$19793$U0r&n) ((case-lambda ((g$C$28823$U0r&n g$t$19795$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28824$U0r&n) ((case-lambda ((g$C$28820$U0r&n g$ls/false$19796$U0r&n) ((case-lambda ((g$J$28822$U0r&n) (if g$ls/false$19796$U0r&n (apply g$J$28822$U0r&n (case-lambda ((g$C$28804$U0r&n g$x$19797$U0r&n g$x*$19798$U0r&n) (g$idsyn?$19685$U0r&n g$C$28804$U0r&n g$x$19797$U0r&n))) g$ls/false$19796$U0r&n) (g$J$28822$U0r&n '#f)))) (case-lambda ((g$T$28821$U0r&n) (if g$T$28821$U0r&n (apply g$C$28820$U0r&n (case-lambda ((g$C$28810$U0r&n g$x$19799$U0r&n g$x*$19800$U0r&n) (call-with-values g$C$28810$U0r&n (case-lambda ((g$C$28805$U0r&n) (g$f$19790$U0r&n g$C$28805$U0r&n g$x*$19800$U0r&n))) (case-lambda ((g$C$28809$U0r&n g$name$19803$U0r&n g$pred$19804$U0r&n) ((case-lambda ((g$C$28806$U0r&n g$pred$19805$U0r&n g$name$19806$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28807$U0r&n) (cons (case-lambda ((g$V$28808$U0r&n) (values g$C$28806$U0r&n g$V$28808$U0r&n g$pred$19805$U0r&n))) g$V$28807$U0r&n g$name$19806$U0r&n))) g$x$19799$U0r&n))) g$C$28809$U0r&n g$pred$19804$U0r&n g$name$19803$U0r&n)))))) g$ls/false$19796$U0r&n) ((case-lambda ((g$C$28818$U0r&n g$t$19807$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28819$U0r&n) ((case-lambda ((g$C$28817$U0r&n g$ls/false$19808$U0r&n) (if g$ls/false$19808$U0r&n (apply g$C$28817$U0r&n (case-lambda ((g$C$28812$U0r&n) (values g$C$28812$U0r&n '() (case-lambda ((g$C$28811$U0r&n g$x$19809$U0r&n) (g$C$28811$U0r&n '#t)))))) g$ls/false$19808$U0r&n) ((case-lambda ((g$C$28815$U0r&n g$t$19810$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28816$U0r&n) ((case-lambda ((g$C$28814$U0r&n g$ls/false$19811$U0r&n) (if g$ls/false$19811$U0r&n (apply g$C$28814$U0r&n (case-lambda ((g$C$28813$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28813$U0r&n '#f '"invalid import spec" g$spec$19786$U0r&n))) g$ls/false$19811$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28814$U0r&n '#f '"invalid syntax" g$t$19810$U0r&n)))) g$C$28815$U0r&n g$V$28816$U0r&n))) g$t$19810$U0r&n '_))) g$C$28817$U0r&n g$t$19807$U0r&n)))) g$C$28818$U0r&n g$V$28819$U0r&n))) g$t$19807$U0r&n '()))) g$C$28820$U0r&n g$t$19795$U0r&n))))))) g$C$28823$U0r&n g$V$28824$U0r&n))) g$t$19795$U0r&n '(any . any)))) g$C$28825$U0r&n g$t$19792$U0r&n)))) g$C$28826$U0r&n g$V$28827$U0r&n))) g$t$19792$U0r&n '(each-any)))) g$C$28828$U0r&n g$x$19791$U0r&n)))))) (case-lambda ((g$V$28831$U0r&n) (g$V$28831$U0r&n g$C$28830$U0r&n g$spec$19786$U0r&n))) uninitialized)))))) g$C$28832$U0r&n uninitialized uninitialized uninitialized)))) (begin (set! g$import-library$19693$U0r&n (case-lambda ((g$C$28851$U0r&n g$spec*$19778$U0r&n) (call-with-values g$C$28851$U0r&n (case-lambda ((g$C$28833$U0r&n) (g$parse-library-name$19692$U0r&n g$C$28833$U0r&n g$spec*$19778$U0r&n))) (case-lambda ((g$C$28850$U0r&n g$name$19781$U0r&n g$pred$19782$U0r&n) ((case-lambda ((g$C$28845$U0r&n g$pred$19783$U0r&n g$name$19784$U0r&n) ((case-lambda ((g$J$28848$U0r&n) (null? (case-lambda ((g$T$28849$U0r&n) (if g$T$28849$U0r&n (g$syntax-violation$17186$U0r&n g$J$28848$U0r&n 'import '"empty library name" g$spec*$19778$U0r&n) (void g$J$28848$U0r&n)))) g$name$19784$U0r&n))) (case-lambda (g$IGNORE$28846$U0r&n (g$find-library-by-name$16265$U0r&n (case-lambda ((g$V$28847$U0r&n) ((case-lambda ((g$C$28834$U0r&n g$lib$19785$U0r&n) ((case-lambda ((g$J$28843$U0r&n) (not (case-lambda ((g$T$28844$U0r&n) (if g$T$28844$U0r&n (g$syntax-violation$17186$U0r&n g$J$28843$U0r&n 'import '"cannot find library with required name" g$name$19784$U0r&n) (void g$J$28843$U0r&n)))) g$lib$19785$U0r&n))) (case-lambda (g$IGNORE$28835$U0r&n ((case-lambda ((g$J$28839$U0r&n) (g$library-version$16225$U0r&n (case-lambda ((g$V$28840$U0r&n) (g$pred$19783$U0r&n (case-lambda ((g$V$28841$U0r&n) (not (case-lambda ((g$T$28842$U0r&n) (if g$T$28842$U0r&n (g$syntax-violation$17186$U0r&n g$J$28839$U0r&n 'import '"library does not satisfy version specification" g$spec*$19778$U0r&n g$lib$19785$U0r&n) (void g$J$28839$U0r&n)))) g$V$28841$U0r&n))) g$V$28840$U0r&n))) g$lib$19785$U0r&n))) (case-lambda (g$IGNORE$28836$U0r&n (g$imp-collector$17124$U0r&n (case-lambda ((g$V$28837$U0r&n) (g$V$28837$U0r&n (case-lambda (g$IGNORE$28838$U0r&n (g$library-subst$16229$U0r&n g$C$28834$U0r&n g$lib$19785$U0r&n))) g$lib$19785$U0r&n)))))))))))) g$C$28845$U0r&n g$V$28847$U0r&n))) g$name$19784$U0r&n)))))) g$C$28850$U0r&n g$pred$19782$U0r&n g$name$19781$U0r&n))))))) (begin (set! g$get-import$19694$U0r&n (case-lambda ((g$C$28948$U0r&n g$spec$19707$U0r&n) ((case-lambda ((g$C$28946$U0r&n g$t$19708$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28947$U0r&n) ((case-lambda ((g$C$28943$U0r&n g$ls/false$19709$U0r&n) ((case-lambda ((g$J$28945$U0r&n) (if g$ls/false$19709$U0r&n (apply g$J$28945$U0r&n (case-lambda ((g$C$28852$U0r&n g$x$19710$U0r&n g$x*$19711$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28853$U0r&n) (g$memq$12745$U0r&n (case-lambda ((g$V$28854$U0r&n) (not g$C$28852$U0r&n g$V$28854$U0r&n))) g$V$28853$U0r&n '(for rename except only prefix library)))) g$x$19710$U0r&n))) g$ls/false$19709$U0r&n) (g$J$28945$U0r&n '#f)))) (case-lambda ((g$T$28944$U0r&n) (if g$T$28944$U0r&n (apply g$C$28943$U0r&n (case-lambda ((g$C$28855$U0r&n g$x$19712$U0r&n g$x*$19713$U0r&n) (cons (case-lambda ((g$V$28856$U0r&n) (g$import-library$19693$U0r&n g$C$28855$U0r&n g$V$28856$U0r&n))) g$x$19712$U0r&n g$x*$19713$U0r&n))) g$ls/false$19709$U0r&n) ((case-lambda ((g$C$28941$U0r&n g$t$19714$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28942$U0r&n) ((case-lambda ((g$C$28938$U0r&n g$ls/false$19715$U0r&n) ((case-lambda ((g$J$28940$U0r&n) (if g$ls/false$19715$U0r&n (apply g$J$28940$U0r&n (case-lambda ((g$C$28857$U0r&n g$rename$19716$U0r&n g$isp$19717$U0r&n g$old*$19718$U0r&n g$new*$19719$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28858$U0r&n) (eq? (case-lambda ((g$T$28859$U0r&n) (if g$T$28859$U0r&n (g$for-all$12751$U0r&n (case-lambda ((g$T$28860$U0r&n) (if g$T$28860$U0r&n (g$for-all$12751$U0r&n g$C$28857$U0r&n g$idsyn?$19685$U0r&n g$new*$19719$U0r&n) (g$C$28857$U0r&n '#f)))) g$idsyn?$19685$U0r&n g$old*$19718$U0r&n) (g$C$28857$U0r&n '#f)))) g$V$28858$U0r&n 'rename))) g$rename$19716$U0r&n))) g$ls/false$19715$U0r&n) (g$J$28940$U0r&n '#f)))) (case-lambda ((g$T$28939$U0r&n) (if g$T$28939$U0r&n (apply g$C$28938$U0r&n (case-lambda ((g$C$28867$U0r&n g$rename$19720$U0r&n g$isp$19721$U0r&n g$old*$19722$U0r&n g$new*$19723$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$28868$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$28869$U0r&n) (g$get-import$19694$U0r&n (case-lambda ((g$V$28870$U0r&n) ((case-lambda ((g$C$28865$U0r&n g$subst$19724$U0r&n g$old*$19725$U0r&n g$new*$19726$U0r&n) (g$find*$19689$U0r&n (case-lambda ((g$V$28866$U0r&n) ((case-lambda ((g$C$28863$U0r&n g$old-label*$19727$U0r&n) (g$rem*$19690$U0r&n (case-lambda ((g$V$28864$U0r&n) ((case-lambda ((g$C$28861$U0r&n g$subst$19728$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$28862$U0r&n) (g$merge-substs$19687$U0r&n g$C$28861$U0r&n g$V$28862$U0r&n g$subst$19728$U0r&n))) cons g$new*$19726$U0r&n g$old-label*$19727$U0r&n))) g$C$28863$U0r&n g$V$28864$U0r&n))) g$old*$19725$U0r&n g$subst$19724$U0r&n))) g$C$28865$U0r&n g$V$28866$U0r&n))) g$old*$19725$U0r&n g$subst$19724$U0r&n))) g$C$28867$U0r&n g$V$28870$U0r&n g$V$28869$U0r&n g$V$28868$U0r&n))) g$isp$19721$U0r&n))) g$syntax->datum$17189$U0r&n g$old*$19722$U0r&n))) g$syntax->datum$17189$U0r&n g$new*$19723$U0r&n))) g$ls/false$19715$U0r&n) ((case-lambda ((g$C$28936$U0r&n g$t$19729$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28937$U0r&n) ((case-lambda ((g$C$28933$U0r&n g$ls/false$19730$U0r&n) ((case-lambda ((g$J$28935$U0r&n) (if g$ls/false$19730$U0r&n (apply g$J$28935$U0r&n (case-lambda ((g$C$28871$U0r&n g$except$19731$U0r&n g$isp$19732$U0r&n g$sym*$19733$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28872$U0r&n) (eq? (case-lambda ((g$T$28873$U0r&n) (if g$T$28873$U0r&n (g$for-all$12751$U0r&n g$C$28871$U0r&n g$idsyn?$19685$U0r&n g$sym*$19733$U0r&n) (g$C$28871$U0r&n '#f)))) g$V$28872$U0r&n 'except))) g$except$19731$U0r&n))) g$ls/false$19730$U0r&n) (g$J$28935$U0r&n '#f)))) (case-lambda ((g$T$28934$U0r&n) (if g$T$28934$U0r&n (apply g$C$28933$U0r&n (case-lambda ((g$C$28876$U0r&n g$except$19734$U0r&n g$isp$19735$U0r&n g$sym*$19736$U0r&n) (g$get-import$19694$U0r&n (case-lambda ((g$V$28877$U0r&n) ((case-lambda ((g$C$28874$U0r&n g$subst$19737$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$28875$U0r&n) (g$rem*$19690$U0r&n g$C$28874$U0r&n g$V$28875$U0r&n g$subst$19737$U0r&n))) g$syntax->datum$17189$U0r&n g$sym*$19736$U0r&n))) g$C$28876$U0r&n g$V$28877$U0r&n))) g$isp$19735$U0r&n))) g$ls/false$19730$U0r&n) ((case-lambda ((g$C$28931$U0r&n g$t$19738$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28932$U0r&n) ((case-lambda ((g$C$28928$U0r&n g$ls/false$19739$U0r&n) ((case-lambda ((g$J$28930$U0r&n) (if g$ls/false$19739$U0r&n (apply g$J$28930$U0r&n (case-lambda ((g$C$28878$U0r&n g$only$19740$U0r&n g$isp$19741$U0r&n g$sym*$19742$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28879$U0r&n) (eq? (case-lambda ((g$T$28880$U0r&n) (if g$T$28880$U0r&n (g$for-all$12751$U0r&n g$C$28878$U0r&n g$idsyn?$19685$U0r&n g$sym*$19742$U0r&n) (g$C$28878$U0r&n '#f)))) g$V$28879$U0r&n 'only))) g$only$19740$U0r&n))) g$ls/false$19739$U0r&n) (g$J$28930$U0r&n '#f)))) (case-lambda ((g$T$28929$U0r&n) (if g$T$28929$U0r&n (apply g$C$28928$U0r&n (case-lambda ((g$C$28886$U0r&n g$only$19743$U0r&n g$isp$19744$U0r&n g$sym*$19745$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$28887$U0r&n) (g$get-import$19694$U0r&n (case-lambda ((g$V$28888$U0r&n) ((case-lambda ((g$C$28884$U0r&n g$subst$19746$U0r&n g$sym*$19747$U0r&n) (g$remove-dups$19691$U0r&n (case-lambda ((g$V$28885$U0r&n) ((case-lambda ((g$C$28882$U0r&n g$sym*$19748$U0r&n) (g$find*$19689$U0r&n (case-lambda ((g$V$28883$U0r&n) ((case-lambda ((g$C$28881$U0r&n g$lab*$19749$U0r&n) (g$map$12753$U0r&n g$C$28881$U0r&n cons g$sym*$19748$U0r&n g$lab*$19749$U0r&n))) g$C$28882$U0r&n g$V$28883$U0r&n))) g$sym*$19748$U0r&n g$subst$19746$U0r&n))) g$C$28884$U0r&n g$V$28885$U0r&n))) g$sym*$19747$U0r&n))) g$C$28886$U0r&n g$V$28888$U0r&n g$V$28887$U0r&n))) g$isp$19744$U0r&n))) g$syntax->datum$17189$U0r&n g$sym*$19745$U0r&n))) g$ls/false$19739$U0r&n) ((case-lambda ((g$C$28926$U0r&n g$t$19750$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28927$U0r&n) ((case-lambda ((g$C$28923$U0r&n g$ls/false$19751$U0r&n) ((case-lambda ((g$J$28925$U0r&n) (if g$ls/false$19751$U0r&n (apply g$J$28925$U0r&n (case-lambda ((g$C$28889$U0r&n g$prefix$19752$U0r&n g$isp$19753$U0r&n g$p$19754$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28890$U0r&n) (eq? (case-lambda ((g$T$28891$U0r&n) (if g$T$28891$U0r&n (g$idsyn?$19685$U0r&n g$C$28889$U0r&n g$p$19754$U0r&n) (g$C$28889$U0r&n '#f)))) g$V$28890$U0r&n 'prefix))) g$prefix$19752$U0r&n))) g$ls/false$19751$U0r&n) (g$J$28925$U0r&n '#f)))) (case-lambda ((g$T$28924$U0r&n) (if g$T$28924$U0r&n (apply g$C$28923$U0r&n (case-lambda ((g$C$28899$U0r&n g$prefix$19755$U0r&n g$isp$19756$U0r&n g$p$19757$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28900$U0r&n) (symbol->string (case-lambda ((g$V$28901$U0r&n) (g$get-import$19694$U0r&n (case-lambda ((g$V$28902$U0r&n) ((case-lambda ((g$C$28898$U0r&n g$subst$19758$U0r&n g$prefix$19759$U0r&n) (g$map$12753$U0r&n g$C$28898$U0r&n (case-lambda ((g$C$28892$U0r&n g$x$19760$U0r&n) (cdr (case-lambda ((g$V$28893$U0r&n) (car (case-lambda ((g$V$28894$U0r&n) (symbol->string (case-lambda ((g$V$28895$U0r&n) (string-append (case-lambda ((g$V$28896$U0r&n) (string->symbol (case-lambda ((g$V$28897$U0r&n) (cons g$C$28892$U0r&n g$V$28897$U0r&n g$V$28893$U0r&n))) g$V$28896$U0r&n))) g$prefix$19759$U0r&n g$V$28895$U0r&n))) g$V$28894$U0r&n))) g$x$19760$U0r&n))) g$x$19760$U0r&n))) g$subst$19758$U0r&n))) g$C$28899$U0r&n g$V$28902$U0r&n g$V$28901$U0r&n))) g$isp$19756$U0r&n))) g$V$28900$U0r&n))) g$p$19757$U0r&n))) g$ls/false$19751$U0r&n) ((case-lambda ((g$C$28921$U0r&n g$t$19761$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28922$U0r&n) ((case-lambda ((g$C$28918$U0r&n g$ls/false$19762$U0r&n) ((case-lambda ((g$J$28920$U0r&n) (if g$ls/false$19762$U0r&n (apply g$J$28920$U0r&n (case-lambda ((g$C$28903$U0r&n g$library$19763$U0r&n g$spec*$19764$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28904$U0r&n) (eq? g$C$28903$U0r&n g$V$28904$U0r&n 'library))) g$library$19763$U0r&n))) g$ls/false$19762$U0r&n) (g$J$28920$U0r&n '#f)))) (case-lambda ((g$T$28919$U0r&n) (if g$T$28919$U0r&n (apply g$C$28918$U0r&n (case-lambda ((g$C$28905$U0r&n g$library$19765$U0r&n g$spec*$19766$U0r&n) (g$import-library$19693$U0r&n g$C$28905$U0r&n g$spec*$19766$U0r&n))) g$ls/false$19762$U0r&n) ((case-lambda ((g$C$28916$U0r&n g$t$19767$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28917$U0r&n) ((case-lambda ((g$C$28913$U0r&n g$ls/false$19768$U0r&n) ((case-lambda ((g$J$28915$U0r&n) (if g$ls/false$19768$U0r&n (apply g$J$28915$U0r&n (case-lambda ((g$C$28906$U0r&n g$for$19769$U0r&n g$isp$19770$U0r&n g$rest$19771$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$28907$U0r&n) (eq? g$C$28906$U0r&n g$V$28907$U0r&n 'for))) g$for$19769$U0r&n))) g$ls/false$19768$U0r&n) (g$J$28915$U0r&n '#f)))) (case-lambda ((g$T$28914$U0r&n) (if g$T$28914$U0r&n (apply g$C$28913$U0r&n (case-lambda ((g$C$28908$U0r&n g$for$19772$U0r&n g$isp$19773$U0r&n g$rest$19774$U0r&n) (g$get-import$19694$U0r&n g$C$28908$U0r&n g$isp$19773$U0r&n))) g$ls/false$19768$U0r&n) ((case-lambda ((g$C$28911$U0r&n g$t$19775$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$28912$U0r&n) ((case-lambda ((g$C$28910$U0r&n g$ls/false$19776$U0r&n) (if g$ls/false$19776$U0r&n (apply g$C$28910$U0r&n (case-lambda ((g$C$28909$U0r&n g$spec$19777$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28909$U0r&n 'import '"invalid import spec" g$spec$19777$U0r&n))) g$ls/false$19776$U0r&n) (g$syntax-violation$17186$U0r&n g$C$28910$U0r&n '#f '"invalid syntax" g$t$19775$U0r&n)))) g$C$28911$U0r&n g$V$28912$U0r&n))) g$t$19775$U0r&n 'any))) g$C$28913$U0r&n g$t$19767$U0r&n))))))) g$C$28916$U0r&n g$V$28917$U0r&n))) g$t$19767$U0r&n '(any any . any)))) g$C$28918$U0r&n g$t$19761$U0r&n))))))) g$C$28921$U0r&n g$V$28922$U0r&n))) g$t$19761$U0r&n '(any each-any)))) g$C$28923$U0r&n g$t$19750$U0r&n))))))) g$C$28926$U0r&n g$V$28927$U0r&n))) g$t$19750$U0r&n '(any any any)))) g$C$28928$U0r&n g$t$19738$U0r&n))))))) g$C$28931$U0r&n g$V$28932$U0r&n))) g$t$19738$U0r&n '(any any . each-any)))) g$C$28933$U0r&n g$t$19729$U0r&n))))))) g$C$28936$U0r&n g$V$28937$U0r&n))) g$t$19729$U0r&n '(any any . each-any)))) g$C$28938$U0r&n g$t$19714$U0r&n))))))) g$C$28941$U0r&n g$V$28942$U0r&n))) g$t$19714$U0r&n '(any any . #(each (any any)))))) g$C$28943$U0r&n g$t$19708$U0r&n))))))) g$C$28946$U0r&n g$V$28947$U0r&n))) g$t$19708$U0r&n '(any . each-any)))) g$C$28948$U0r&n g$spec$19707$U0r&n)))) (begin (set! g$add-imports!$19695$U0r&n (case-lambda ((g$C$28959$U0r&n g$imp$19699$U0r&n g$h$19700$U0r&n) (g$get-import$19694$U0r&n (case-lambda ((g$V$28960$U0r&n) ((case-lambda ((g$C$28958$U0r&n g$subst$19701$U0r&n) (g$for-each$12754$U0r&n g$C$28958$U0r&n (case-lambda ((g$C$28955$U0r&n g$x$19702$U0r&n) (cdr (case-lambda ((g$V$28956$U0r&n) (car (case-lambda ((g$V$28957$U0r&n) ((case-lambda ((g$C$28953$U0r&n g$name$19703$U0r&n g$label$19704$U0r&n) (g$hashtable-ref$13600$U0r&n (case-lambda ((g$V$28954$U0r&n) ((case-lambda ((g$C$28952$U0r&n g$t$19705$U0r&n) (if g$t$19705$U0r&n ((case-lambda ((g$C$28949$U0r&n g$l$19706$U0r&n) (eq? (case-lambda ((g$V$28950$U0r&n) (not (case-lambda ((g$T$28951$U0r&n) (if g$T$28951$U0r&n (g$dup-error$19686$U0r&n g$C$28949$U0r&n g$name$19703$U0r&n) (void g$C$28949$U0r&n)))) g$V$28950$U0r&n))) g$l$19706$U0r&n g$label$19704$U0r&n))) g$C$28952$U0r&n g$t$19705$U0r&n) (g$hashtable-set!$13601$U0r&n g$C$28952$U0r&n g$h$19700$U0r&n g$name$19703$U0r&n g$label$19704$U0r&n)))) g$C$28953$U0r&n g$V$28954$U0r&n))) g$h$19700$U0r&n g$name$19703$U0r&n '#f))) g$C$28955$U0r&n g$V$28957$U0r&n g$V$28956$U0r&n))) g$x$19702$U0r&n))) g$x$19702$U0r&n))) g$subst$19701$U0r&n))) g$C$28959$U0r&n g$V$28960$U0r&n))) g$imp$19699$U0r&n)))) (g$make-eq-hashtable$13597$U0r&n (case-lambda ((g$V$28970$U0r&n) ((case-lambda ((g$C$28968$U0r&n g$f$19696$U0r&n) ((case-lambda ((g$C$28962$U0r&n g$f$28961$U0r&n) (begin (set! g$f$19696$U0r&n g$f$28961$U0r&n) (g$C$28962$U0r&n g$f$19696$U0r&n)))) g$C$28968$U0r&n (case-lambda ((g$C$28963$U0r&n g$imp*$19697$U0r&n g$h$19698$U0r&n) (null? (case-lambda ((g$T$28964$U0r&n) (if g$T$28964$U0r&n (hashtable-entries g$C$28963$U0r&n g$h$19698$U0r&n) (car (case-lambda ((g$V$28965$U0r&n) (g$add-imports!$19695$U0r&n (case-lambda (g$IGNORE$28966$U0r&n (cdr (case-lambda ((g$V$28967$U0r&n) (g$f$19696$U0r&n g$C$28963$U0r&n g$V$28967$U0r&n g$h$19698$U0r&n))) g$imp*$19697$U0r&n))) g$V$28965$U0r&n g$h$19698$U0r&n))) g$imp*$19697$U0r&n)))) g$imp*$19697$U0r&n)))))) (case-lambda ((g$V$28971$U0r&n) (g$V$28971$U0r&n g$C$28969$U0r&n g$imp*$19684$U0r&n g$V$28970$U0r&n))) uninitialized))))))))))))))))) g$C$28972$U0r&n uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized)))))) (library-letrec*-identity 'g$parse-import-spec*$17119$U0r&n))) (g$make-top-rib$17120$U0r&n g$make-top-rib$20715$U0r&n ((case-lambda ((g$C$29785$U0r&n) (g$C$29785$U0r&n (case-lambda ((g$C$28981$U0r&n g$names$19946$U0r&n g$labels$19947$U0r&n) (g$make-cache-rib$16528$U0r&n (case-lambda ((g$V$28982$U0r&n) ((case-lambda ((g$C$28979$U0r&n g$rib$19948$U0r&n) (g$vector-for-each$13558$U0r&n (case-lambda (g$IGNORE$28980$U0r&n (g$C$28979$U0r&n g$rib$19948$U0r&n))) (case-lambda ((g$C$28973$U0r&n g$name$19949$U0r&n g$label$19950$U0r&n) ((case-lambda ((g$J$28976$U0r&n) (g$symbol?$13496$U0r&n (case-lambda ((g$V$28977$U0r&n) (not (case-lambda ((g$T$28978$U0r&n) (if g$T$28978$U0r&n (g$error$13787$U0r&n g$J$28976$U0r&n 'make-top-rib '"BUG: not a symbol" g$name$19949$U0r&n) (void g$J$28976$U0r&n)))) g$V$28977$U0r&n))) g$name$19949$U0r&n))) (case-lambda (g$IGNORE$28974$U0r&n (g$make-stx$16542$U0r&n (case-lambda ((g$V$28975$U0r&n) (g$extend-rib/nc!$16531$U0r&n g$C$28973$U0r&n g$rib$19948$U0r&n g$V$28975$U0r&n g$label$19950$U0r&n))) g$name$19949$U0r&n g$top-mark*$16502$U0r&n '() '())))))) g$names$19946$U0r&n g$labels$19947$U0r&n))) g$C$28981$U0r&n g$V$28982$U0r&n))))))))) (library-letrec*-identity 'g$make-top-rib$17120$U0r&n))) (g$make-collector$17121$U0r&n g$make-collector$20716$U0r&n ((case-lambda ((g$C$29786$U0r&n) (g$C$29786$U0r&n (case-lambda ((g$C$28986$U0r&n) ((case-lambda ((g$C$28985$U0r&n g$ls$19951$U0r&n) (g$C$28985$U0r&n (case-lambda ((g$C$28983$U0r&n) (g$C$28983$U0r&n g$ls$19951$U0r&n)) ((g$C$28983$U0r&n g$x$19952$U0r&n) (g$set-cons$16499$U0r&n (case-lambda ((g$V$28984$U0r&n) (begin (set! g$ls$19951$U0r&n g$V$28984$U0r&n) (g$C$28983$U0r&n (cps-void))))) g$x$19952$U0r&n g$ls$19951$U0r&n)))))) g$C$28986$U0r&n '())))))) (library-letrec*-identity 'g$make-collector$17121$U0r&n))) (g$inv-collector$17122$U0r&n g$inv-collector$20717$U0r&n ((case-lambda ((g$C$29787$U0r&n) (g$make-parameter$15428$U0r&n g$C$29787$U0r&n (case-lambda ((g$C$28987$U0r&n . g$args$19953$U0r&n) (g$assertion-violation$13786$U0r&n g$C$28987$U0r&n 'inv-collector '"BUG: not initialized"))) (case-lambda ((g$C$28988$U0r&n g$x$19954$U0r&n) ((case-lambda ((g$J$28990$U0r&n) (g$procedure?$13498$U0r&n (case-lambda ((g$V$28991$U0r&n) (not (case-lambda ((g$T$28992$U0r&n) (if g$T$28992$U0r&n (g$assertion-violation$13786$U0r&n g$J$28990$U0r&n 'inv-collector '"BUG: not a procedure" g$x$19954$U0r&n) (void g$J$28990$U0r&n)))) g$V$28991$U0r&n))) g$x$19954$U0r&n))) (case-lambda (g$IGNORE$28989$U0r&n (g$C$28988$U0r&n g$x$19954$U0r&n))))))))) (library-letrec*-identity 'g$inv-collector$17122$U0r&n))) (g$vis-collector$17123$U0r&n g$vis-collector$20718$U0r&n ((case-lambda ((g$C$29788$U0r&n) (g$make-parameter$15428$U0r&n g$C$29788$U0r&n (case-lambda ((g$C$28993$U0r&n . g$args$19955$U0r&n) (g$assertion-violation$13786$U0r&n g$C$28993$U0r&n 'vis-collector '"BUG: not initialized"))) (case-lambda ((g$C$28994$U0r&n g$x$19956$U0r&n) ((case-lambda ((g$J$28996$U0r&n) (g$procedure?$13498$U0r&n (case-lambda ((g$V$28997$U0r&n) (not (case-lambda ((g$T$28998$U0r&n) (if g$T$28998$U0r&n (g$assertion-violation$13786$U0r&n g$J$28996$U0r&n 'vis-collector '"BUG: not a procedure" g$x$19956$U0r&n) (void g$J$28996$U0r&n)))) g$V$28997$U0r&n))) g$x$19956$U0r&n))) (case-lambda (g$IGNORE$28995$U0r&n (g$C$28994$U0r&n g$x$19956$U0r&n))))))))) (library-letrec*-identity 'g$vis-collector$17123$U0r&n))) (g$imp-collector$17124$U0r&n g$imp-collector$20719$U0r&n ((case-lambda ((g$C$29789$U0r&n) (g$make-parameter$15428$U0r&n g$C$29789$U0r&n (case-lambda ((g$C$28999$U0r&n . g$args$19957$U0r&n) (g$assertion-violation$13786$U0r&n g$C$28999$U0r&n 'imp-collector '"BUG: not initialized"))) (case-lambda ((g$C$29000$U0r&n g$x$19958$U0r&n) ((case-lambda ((g$J$29002$U0r&n) (g$procedure?$13498$U0r&n (case-lambda ((g$V$29003$U0r&n) (not (case-lambda ((g$T$29004$U0r&n) (if g$T$29004$U0r&n (g$assertion-violation$13786$U0r&n g$J$29002$U0r&n 'imp-collector '"BUG: not a procedure" g$x$19958$U0r&n) (void g$J$29002$U0r&n)))) g$V$29003$U0r&n))) g$x$19958$U0r&n))) (case-lambda (g$IGNORE$29001$U0r&n (g$C$29000$U0r&n g$x$19958$U0r&n))))))))) (library-letrec*-identity 'g$imp-collector$17124$U0r&n))) (g$chi-library-internal$17125$U0r&n g$chi-library-internal$20720$U0r&n ((case-lambda ((g$C$29790$U0r&n) (g$C$29790$U0r&n (case-lambda ((g$C$29013$U0r&n g$e*$19959$U0r&n g$rib$19960$U0r&n g$mix?$19961$U0r&n) (call-with-values g$C$29013$U0r&n (case-lambda ((g$C$29005$U0r&n) (g$chi-body*$17114$U0r&n g$C$29005$U0r&n g$e*$19959$U0r&n '() '() '() '() '() '() '() g$rib$19960$U0r&n g$mix?$19961$U0r&n '#t))) (case-lambda ((g$C$29012$U0r&n g$e*$19970$U0r&n g$r$19971$U0r&n g$mr$19972$U0r&n g$lex*$19973$U0r&n g$rhs*$19974$U0r&n g$mod**$19975$U0r&n g$_kwd*$19976$U0r&n g$exp*$19977$U0r&n) ((case-lambda ((g$C$29006$U0r&n g$exp*$19978$U0r&n g$_kwd*$19979$U0r&n g$mod**$19980$U0r&n g$rhs*$19981$U0r&n g$lex*$19982$U0r&n g$mr$19983$U0r&n g$r$19984$U0r&n g$e*$19985$U0r&n) (g$reverse$13504$U0r&n (case-lambda ((g$V$29007$U0r&n) (g$reverse$13504$U0r&n (case-lambda ((g$V$29008$U0r&n) (g$reverse$13504$U0r&n (case-lambda ((g$V$29009$U0r&n) (apply (case-lambda ((g$V$29010$U0r&n) (append (case-lambda ((g$V$29011$U0r&n) (values g$C$29006$U0r&n g$V$29011$U0r&n g$r$19984$U0r&n g$mr$19983$U0r&n g$V$29008$U0r&n g$V$29007$U0r&n g$exp*$19978$U0r&n))) g$V$29010$U0r&n g$e*$19985$U0r&n))) append g$V$29009$U0r&n))) g$mod**$19980$U0r&n))) g$lex*$19982$U0r&n))) g$rhs*$19981$U0r&n))) g$C$29012$U0r&n g$exp*$19977$U0r&n g$_kwd*$19976$U0r&n g$mod**$19975$U0r&n g$rhs*$19974$U0r&n g$lex*$19973$U0r&n g$mr$19972$U0r&n g$r$19971$U0r&n g$e*$19970$U0r&n))))))))) (library-letrec*-identity 'g$chi-library-internal$17125$U0r&n))) (g$chi-interaction-expr$17126$U0r&n g$chi-interaction-expr$20721$U0r&n ((case-lambda ((g$C$29791$U0r&n) (g$C$29791$U0r&n (case-lambda ((g$C$29031$U0r&n g$e$19986$U0r&n g$rib$19987$U0r&n g$r$19988$U0r&n) (call-with-values g$C$29031$U0r&n (case-lambda ((g$C$29014$U0r&n) (list (case-lambda ((g$V$29015$U0r&n) (g$chi-body*$17114$U0r&n g$C$29014$U0r&n g$V$29015$U0r&n g$r$19988$U0r&n g$r$19988$U0r&n '() '() '() '() '() g$rib$19987$U0r&n '#t '#f))) g$e$19986$U0r&n))) (case-lambda ((g$C$29030$U0r&n g$e*$19997$U0r&n g$r$19998$U0r&n g$mr$19999$U0r&n g$lex*$20000$U0r&n g$rhs*$20001$U0r&n g$mod**$20002$U0r&n g$_kwd*$20003$U0r&n g$_exp*$20004$U0r&n) ((case-lambda ((g$C$29023$U0r&n g$_exp*$20005$U0r&n g$_kwd*$20006$U0r&n g$mod**$20007$U0r&n g$rhs*$20008$U0r&n g$lex*$20009$U0r&n g$mr$20010$U0r&n g$r$20011$U0r&n g$e*$20012$U0r&n) (g$reverse$13504$U0r&n (case-lambda ((g$V$29024$U0r&n) (apply (case-lambda ((g$V$29025$U0r&n) (append (case-lambda ((g$V$29026$U0r&n) (g$reverse$13504$U0r&n (case-lambda ((g$V$29027$U0r&n) (g$reverse$13504$U0r&n (case-lambda ((g$V$29028$U0r&n) (g$expand-interaction-rhs*/init*$17092$U0r&n (case-lambda ((g$V$29029$U0r&n) ((case-lambda ((g$C$29017$U0r&n g$e*$20013$U0r&n) ((case-lambda ((g$J$29019$U0r&n) (null? (case-lambda ((g$T$29020$U0r&n) (if g$T$29020$U0r&n (g$build-void$16495$U0r&n g$J$29019$U0r&n) (cdr (case-lambda ((g$V$29021$U0r&n) (null? (case-lambda ((g$T$29022$U0r&n) (if g$T$29022$U0r&n (car g$J$29019$U0r&n g$e*$20013$U0r&n) (g$build-sequence$16494$U0r&n g$J$29019$U0r&n '#f g$e*$20013$U0r&n)))) g$V$29021$U0r&n))) g$e*$20013$U0r&n)))) g$e*$20013$U0r&n))) (case-lambda ((g$V$29018$U0r&n) ((case-lambda ((g$C$29016$U0r&n g$e$20014$U0r&n) (values g$C$29016$U0r&n g$e$20014$U0r&n g$r$20011$U0r&n))) g$C$29017$U0r&n g$V$29018$U0r&n)))))) g$C$29023$U0r&n g$V$29029$U0r&n))) g$V$29028$U0r&n g$V$29027$U0r&n g$V$29026$U0r&n g$r$20011$U0r&n g$mr$20010$U0r&n))) g$lex*$20009$U0r&n))) g$rhs*$20008$U0r&n))) g$V$29025$U0r&n g$e*$20012$U0r&n))) append g$V$29024$U0r&n))) g$mod**$20007$U0r&n))) g$C$29030$U0r&n g$_exp*$20004$U0r&n g$_kwd*$20003$U0r&n g$mod**$20002$U0r&n g$rhs*$20001$U0r&n g$lex*$20000$U0r&n g$mr$19999$U0r&n g$r$19998$U0r&n g$e*$19997$U0r&n))))))))) (library-letrec*-identity 'g$chi-interaction-expr$17126$U0r&n))) (g$library-body-expander$17127$U0r&n g$library-body-expander$20722$U0r&n ((case-lambda ((g$C$29792$U0r&n) (g$C$29792$U0r&n (case-lambda ((g$C$29114$U0r&n g$name$20015$U0r&n g$main-exp*$20016$U0r&n g$imp*$20017$U0r&n g$b*$20018$U0r&n g$mix?$20019$U0r&n) ((case-lambda ((g$C$29112$U0r&n g$itc$20020$U0r&n) (g$make-collector$17121$U0r&n (case-lambda ((g$V$29113$U0r&n) (begin (set! g$itc$20020$U0r&n g$V$29113$U0r&n) ((case-lambda ((g$C$29111$U0r&n g$imp-collector$20025$U0r&n g$top-level-context$20026$U0r&n g$imp-collector$20027$U0r&n g$top-level-context$20028$U0r&n) ((case-lambda ((g$C$29102$U0r&n g$swap$20029$U0r&n) (dynamic-wind g$C$29102$U0r&n g$swap$20029$U0r&n (case-lambda ((g$C$29101$U0r&n) (call-with-values g$C$29101$U0r&n (case-lambda ((g$C$29032$U0r&n) (g$parse-import-spec*$17119$U0r&n g$C$29032$U0r&n g$imp*$20017$U0r&n))) (case-lambda ((g$C$29100$U0r&n g$subst-names$20032$U0r&n g$subst-labels$20033$U0r&n) ((case-lambda ((g$C$29098$U0r&n g$subst-labels$20034$U0r&n g$subst-names$20035$U0r&n) (g$make-top-rib$17120$U0r&n (case-lambda ((g$V$29099$U0r&n) ((case-lambda ((g$C$29097$U0r&n g$rib$20036$U0r&n) ((case-lambda ((g$C$29092$U0r&n g$wrap$20037$U0r&n) (begin (set! g$wrap$20037$U0r&n (case-lambda ((g$C$29033$U0r&n g$x$20099$U0r&n) (list (case-lambda ((g$V$29034$U0r&n) (g$make-stx$16542$U0r&n g$C$29033$U0r&n g$x$20099$U0r&n g$top-mark*$16502$U0r&n g$V$29034$U0r&n '()))) g$rib$20036$U0r&n)))) (g$make-collector$17121$U0r&n (case-lambda ((g$V$29093$U0r&n) (g$make-collector$17121$U0r&n (case-lambda ((g$V$29094$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$29095$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$29096$U0r&n) ((case-lambda ((g$C$29091$U0r&n g$b*$20038$U0r&n g$main-exp*$20039$U0r&n g$rtc$20040$U0r&n g$vtc$20041$U0r&n) ((case-lambda ((g$C$29090$U0r&n g$inv-collector$20046$U0r&n g$vis-collector$20047$U0r&n g$inv-collector$20048$U0r&n g$vis-collector$20049$U0r&n) ((case-lambda ((g$C$29081$U0r&n g$swap$20050$U0r&n) (dynamic-wind g$C$29081$U0r&n g$swap$20050$U0r&n (case-lambda ((g$C$29080$U0r&n) (call-with-values g$C$29080$U0r&n (case-lambda ((g$C$29035$U0r&n) (g$chi-library-internal$17125$U0r&n g$C$29035$U0r&n g$b*$20038$U0r&n g$rib$20036$U0r&n g$mix?$20019$U0r&n))) (case-lambda ((g$C$29079$U0r&n g$init*$20057$U0r&n g$r$20058$U0r&n g$mr$20059$U0r&n g$lex*$20060$U0r&n g$rhs*$20061$U0r&n g$internal-exp*$20062$U0r&n) ((case-lambda ((g$C$29078$U0r&n g$internal-exp*$20063$U0r&n g$rhs*$20064$U0r&n g$lex*$20065$U0r&n g$mr$20066$U0r&n g$r$20067$U0r&n g$init*$20068$U0r&n) (call-with-values g$C$29078$U0r&n (case-lambda ((g$C$29036$U0r&n) (append (case-lambda ((g$V$29037$U0r&n) (g$parse-exports$17116$U0r&n g$C$29036$U0r&n g$V$29037$U0r&n))) g$main-exp*$20039$U0r&n g$internal-exp*$20063$U0r&n))) (case-lambda ((g$C$29077$U0r&n g$exp-name*$20071$U0r&n g$exp-id*$20072$U0r&n) ((case-lambda ((g$C$29074$U0r&n g$exp-id*$20073$U0r&n g$exp-name*$20074$U0r&n) (g$seal-rib!$16533$U0r&n (case-lambda (g$IGNORE$29075$U0r&n (g$chi-expr*$17083$U0r&n (case-lambda ((g$V$29076$U0r&n) ((case-lambda ((g$C$29072$U0r&n g$init*$20075$U0r&n) (g$chi-rhs*$17093$U0r&n (case-lambda ((g$V$29073$U0r&n) ((case-lambda ((g$C$29068$U0r&n g$rhs*$20076$U0r&n) (g$unseal-rib!$16534$U0r&n (case-lambda (g$IGNORE$29069$U0r&n (g$make-export-subst$17174$U0r&n (case-lambda ((g$V$29070$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$29071$U0r&n) ((case-lambda ((g$C$29067$U0r&n g$loc*$20077$U0r&n g$export-subst$20078$U0r&n) ((case-lambda ((g$C$29066$U0r&n g$errstr$20079$U0r&n) (begin (set! g$errstr$20079$U0r&n '"attempt to export mutated variable") (call-with-values g$C$29066$U0r&n (case-lambda ((g$C$29038$U0r&n) (g$make-export-env/macros$17175$U0r&n g$C$29038$U0r&n g$lex*$20065$U0r&n g$loc*$20077$U0r&n g$r$20067$U0r&n))) (case-lambda ((g$C$29065$U0r&n g$export-env$20083$U0r&n g$global*$20084$U0r&n g$macro*$20085$U0r&n) ((case-lambda ((g$C$29057$U0r&n g$macro*$20086$U0r&n g$global*$20087$U0r&n g$export-env$20088$U0r&n) (g$for-each$12754$U0r&n (case-lambda (g$IGNORE$29058$U0r&n (g$map$12753$U0r&n (case-lambda ((g$V$29059$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$29060$U0r&n) ((case-lambda ((g$J$29063$U0r&n) (null? (case-lambda ((g$T$29064$U0r&n) (if g$T$29064$U0r&n (g$build-void$16495$U0r&n g$J$29063$U0r&n) (g$build-sequence$16494$U0r&n g$J$29063$U0r&n '#f g$init*$20075$U0r&n)))) g$init*$20075$U0r&n))) (case-lambda ((g$V$29061$U0r&n) (g$build-library-letrec*$16498$U0r&n (case-lambda ((g$V$29062$U0r&n) ((case-lambda ((g$C$29050$U0r&n g$invoke-body$20095$U0r&n g$invoke-definitions$20096$U0r&n) (list (case-lambda ((g$V$29051$U0r&n) (append (case-lambda ((g$V$29052$U0r&n) (g$build-sequence$16494$U0r&n (case-lambda ((g$V$29053$U0r&n) (g$vtc$20041$U0r&n (case-lambda ((g$V$29054$U0r&n) (g$rtc$20040$U0r&n (case-lambda ((g$V$29055$U0r&n) (g$itc$20020$U0r&n (case-lambda ((g$V$29056$U0r&n) (values g$C$29050$U0r&n g$V$29056$U0r&n g$V$29055$U0r&n g$V$29054$U0r&n g$V$29053$U0r&n g$macro*$20086$U0r&n g$export-subst$20078$U0r&n g$export-env$20088$U0r&n)))))))))))) '#f g$V$29052$U0r&n))) g$invoke-definitions$20096$U0r&n g$V$29051$U0r&n))) g$invoke-body$20095$U0r&n))) g$C$29057$U0r&n g$V$29062$U0r&n g$V$29060$U0r&n))) '#f g$name$20015$U0r&n g$lex*$20065$U0r&n g$loc*$20077$U0r&n g$rhs*$20076$U0r&n g$V$29061$U0r&n)))))) g$build-global-define$16490$U0r&n g$V$29059$U0r&n))) cdr g$global*$20087$U0r&n))) (case-lambda ((g$C$29047$U0r&n g$s$20089$U0r&n) (cdr (case-lambda ((g$V$29048$U0r&n) (car (case-lambda ((g$V$29049$U0r&n) ((case-lambda ((g$C$29045$U0r&n g$name$20090$U0r&n g$label$20091$U0r&n) (g$assq$12741$U0r&n (case-lambda ((g$V$29046$U0r&n) ((case-lambda ((g$C$29043$U0r&n g$p$20092$U0r&n) (if g$p$20092$U0r&n (cdr (case-lambda ((g$V$29044$U0r&n) ((case-lambda ((g$C$29041$U0r&n g$b$20093$U0r&n) (car (case-lambda ((g$V$29042$U0r&n) ((case-lambda ((g$C$29039$U0r&n g$type$20094$U0r&n) (eq? (case-lambda ((g$T$29040$U0r&n) (if g$T$29040$U0r&n (g$syntax-violation$17186$U0r&n g$C$29039$U0r&n 'export g$errstr$20079$U0r&n g$name$20090$U0r&n) (void g$C$29039$U0r&n)))) g$type$20094$U0r&n 'mutable))) g$C$29041$U0r&n g$V$29042$U0r&n))) g$b$20093$U0r&n))) g$C$29043$U0r&n g$V$29044$U0r&n))) g$p$20092$U0r&n) (void g$C$29043$U0r&n)))) g$C$29045$U0r&n g$V$29046$U0r&n))) g$label$20091$U0r&n g$export-env$20088$U0r&n))) g$C$29047$U0r&n g$V$29049$U0r&n g$V$29048$U0r&n))) g$s$20089$U0r&n))) g$s$20089$U0r&n))) g$export-subst$20078$U0r&n))) g$C$29065$U0r&n g$macro*$20085$U0r&n g$global*$20084$U0r&n g$export-env$20083$U0r&n))))))) g$C$29067$U0r&n uninitialized))) g$C$29068$U0r&n g$V$29071$U0r&n g$V$29070$U0r&n))) g$gen-global$16505$U0r&n g$lex*$20065$U0r&n))) g$exp-name*$20074$U0r&n g$exp-id*$20073$U0r&n))) g$rib$20036$U0r&n))) g$C$29072$U0r&n g$V$29073$U0r&n))) g$rhs*$20064$U0r&n g$r$20067$U0r&n g$mr$20066$U0r&n))) g$C$29074$U0r&n g$V$29076$U0r&n))) g$init*$20068$U0r&n g$r$20067$U0r&n g$mr$20066$U0r&n))) g$rib$20036$U0r&n))) g$C$29077$U0r&n g$exp-id*$20072$U0r&n g$exp-name*$20071$U0r&n)))))) g$C$29079$U0r&n g$internal-exp*$20062$U0r&n g$rhs*$20061$U0r&n g$lex*$20060$U0r&n g$mr$20059$U0r&n g$r$20058$U0r&n g$init*$20057$U0r&n)))))) g$swap$20050$U0r&n))) g$C$29090$U0r&n (case-lambda ((g$C$29086$U0r&n) (g$inv-collector$20046$U0r&n (case-lambda ((g$V$29087$U0r&n) ((case-lambda ((g$C$29082$U0r&n g$t$20097$U0r&n) (g$inv-collector$20046$U0r&n (case-lambda (g$IGNORE$29083$U0r&n (begin (set! g$inv-collector$20048$U0r&n g$t$20097$U0r&n) (g$C$29082$U0r&n (cps-void))))) g$inv-collector$20048$U0r&n))) (case-lambda (g$IGNORE$29088$U0r&n (g$vis-collector$20047$U0r&n (case-lambda ((g$V$29089$U0r&n) ((case-lambda ((g$C$29084$U0r&n g$t$20098$U0r&n) (g$vis-collector$20047$U0r&n (case-lambda (g$IGNORE$29085$U0r&n (begin (set! g$vis-collector$20049$U0r&n g$t$20098$U0r&n) (g$C$29084$U0r&n (cps-void))))) g$vis-collector$20049$U0r&n))) g$C$29086$U0r&n g$V$29089$U0r&n)))))) g$V$29087$U0r&n))))))))) g$C$29091$U0r&n g$inv-collector$17122$U0r&n g$vis-collector$17123$U0r&n g$rtc$20040$U0r&n g$vtc$20041$U0r&n))) g$C$29092$U0r&n g$V$29096$U0r&n g$V$29095$U0r&n g$V$29094$U0r&n g$V$29093$U0r&n))) g$wrap$20037$U0r&n g$b*$20018$U0r&n))) g$wrap$20037$U0r&n g$main-exp*$20016$U0r&n)))))))))) g$C$29097$U0r&n uninitialized))) g$C$29098$U0r&n g$V$29099$U0r&n))) g$subst-names$20035$U0r&n g$subst-labels$20034$U0r&n))) g$C$29100$U0r&n g$subst-labels$20033$U0r&n g$subst-names$20032$U0r&n)))))) g$swap$20029$U0r&n))) g$C$29111$U0r&n (case-lambda ((g$C$29107$U0r&n) (g$imp-collector$20025$U0r&n (case-lambda ((g$V$29108$U0r&n) ((case-lambda ((g$C$29103$U0r&n g$t$20100$U0r&n) (g$imp-collector$20025$U0r&n (case-lambda (g$IGNORE$29104$U0r&n (begin (set! g$imp-collector$20027$U0r&n g$t$20100$U0r&n) (g$C$29103$U0r&n (cps-void))))) g$imp-collector$20027$U0r&n))) (case-lambda (g$IGNORE$29109$U0r&n (g$top-level-context$20026$U0r&n (case-lambda ((g$V$29110$U0r&n) ((case-lambda ((g$C$29105$U0r&n g$t$20101$U0r&n) (g$top-level-context$20026$U0r&n (case-lambda (g$IGNORE$29106$U0r&n (begin (set! g$top-level-context$20028$U0r&n g$t$20101$U0r&n) (g$C$29105$U0r&n (cps-void))))) g$top-level-context$20028$U0r&n))) g$C$29107$U0r&n g$V$29110$U0r&n)))))) g$V$29108$U0r&n))))))))) g$C$29112$U0r&n g$imp-collector$17124$U0r&n g$top-level-context$17194$U0r&n g$itc$20020$U0r&n '#f))))))) g$C$29114$U0r&n uninitialized)))))) (library-letrec*-identity 'g$library-body-expander$17127$U0r&n))) (g$core-library-expander$17128$U0r&n g$core-library-expander$20723$U0r&n ((case-lambda ((g$C$29793$U0r&n) (g$C$29793$U0r&n (case-lambda ((g$C$29125$U0r&n g$e$20102$U0r&n g$verify-name$20103$U0r&n) (call-with-values g$C$29125$U0r&n (case-lambda ((g$C$29115$U0r&n) (g$parse-library$17118$U0r&n g$C$29115$U0r&n g$e$20102$U0r&n))) (case-lambda ((g$C$29124$U0r&n g$name*$20108$U0r&n g$exp*$20109$U0r&n g$imp*$20110$U0r&n g$b*$20111$U0r&n) ((case-lambda ((g$C$29123$U0r&n g$b*$20112$U0r&n g$imp*$20113$U0r&n g$exp*$20114$U0r&n g$name*$20115$U0r&n) (call-with-values g$C$29123$U0r&n (case-lambda ((g$C$29116$U0r&n) (g$parse-library-name$17117$U0r&n g$C$29116$U0r&n g$name*$20115$U0r&n))) (case-lambda ((g$C$29122$U0r&n g$name$20118$U0r&n g$ver$20119$U0r&n) ((case-lambda ((g$C$29120$U0r&n g$ver$20120$U0r&n g$name$20121$U0r&n) (g$verify-name$20103$U0r&n (case-lambda (g$IGNORE$29121$U0r&n (call-with-values g$C$29120$U0r&n (case-lambda ((g$C$29117$U0r&n) (g$library-body-expander$17127$U0r&n g$C$29117$U0r&n g$name$20121$U0r&n g$exp*$20114$U0r&n g$imp*$20113$U0r&n g$b*$20112$U0r&n '#f))) (case-lambda ((g$C$29119$U0r&n g$imp*$20129$U0r&n g$invoke-req*$20130$U0r&n g$visit-req*$20131$U0r&n g$invoke-code$20132$U0r&n g$visit-code$20133$U0r&n g$export-subst$20134$U0r&n g$export-env$20135$U0r&n) ((case-lambda ((g$C$29118$U0r&n g$export-env$20136$U0r&n g$export-subst$20137$U0r&n g$visit-code$20138$U0r&n g$invoke-code$20139$U0r&n g$visit-req*$20140$U0r&n g$invoke-req*$20141$U0r&n g$imp*$20142$U0r&n) (values g$C$29118$U0r&n g$name$20121$U0r&n g$ver$20120$U0r&n g$imp*$20142$U0r&n g$invoke-req*$20141$U0r&n g$visit-req*$20140$U0r&n g$invoke-code$20139$U0r&n g$visit-code$20138$U0r&n g$export-subst$20137$U0r&n g$export-env$20136$U0r&n))) g$C$29119$U0r&n g$export-env$20135$U0r&n g$export-subst$20134$U0r&n g$visit-code$20133$U0r&n g$invoke-code$20132$U0r&n g$visit-req*$20131$U0r&n g$invoke-req*$20130$U0r&n g$imp*$20129$U0r&n)))))) g$name$20121$U0r&n))) g$C$29122$U0r&n g$ver$20119$U0r&n g$name$20118$U0r&n)))))) g$C$29124$U0r&n g$b*$20111$U0r&n g$imp*$20110$U0r&n g$exp*$20109$U0r&n g$name*$20108$U0r&n))))))))) (library-letrec*-identity 'g$core-library-expander$17128$U0r&n))) (g$parse-top-level-program$17129$U0r&n g$parse-top-level-program$20724$U0r&n ((case-lambda ((g$C$29794$U0r&n) (g$C$29794$U0r&n (case-lambda ((g$C$29147$U0r&n g$e*$20143$U0r&n) ((case-lambda ((g$C$29145$U0r&n g$t$20144$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$29146$U0r&n) ((case-lambda ((g$C$29142$U0r&n g$ls/false$20145$U0r&n) ((case-lambda ((g$J$29144$U0r&n) (if g$ls/false$20145$U0r&n (apply g$J$29144$U0r&n (case-lambda ((g$C$29126$U0r&n g$import$20146$U0r&n g$imp*$20147$U0r&n g$b*$20148$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$29127$U0r&n) (eq? g$C$29126$U0r&n g$V$29127$U0r&n 'import))) g$import$20146$U0r&n))) g$ls/false$20145$U0r&n) (g$J$29144$U0r&n '#f)))) (case-lambda ((g$T$29143$U0r&n) (if g$T$29143$U0r&n (apply g$C$29142$U0r&n (case-lambda ((g$C$29128$U0r&n g$import$20149$U0r&n g$imp*$20150$U0r&n g$b*$20151$U0r&n) (values g$C$29128$U0r&n g$imp*$20150$U0r&n g$b*$20151$U0r&n))) g$ls/false$20145$U0r&n) ((case-lambda ((g$C$29140$U0r&n g$t$20152$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$29141$U0r&n) ((case-lambda ((g$C$29137$U0r&n g$ls/false$20153$U0r&n) ((case-lambda ((g$J$29139$U0r&n) (if g$ls/false$20153$U0r&n (apply g$J$29139$U0r&n (case-lambda ((g$C$29129$U0r&n g$import$20154$U0r&n g$x$20155$U0r&n g$y$20156$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$29130$U0r&n) (eq? g$C$29129$U0r&n g$V$29130$U0r&n 'import))) g$import$20154$U0r&n))) g$ls/false$20153$U0r&n) (g$J$29139$U0r&n '#f)))) (case-lambda ((g$T$29138$U0r&n) (if g$T$29138$U0r&n (apply g$C$29137$U0r&n (case-lambda ((g$C$29131$U0r&n g$import$20157$U0r&n g$x$20158$U0r&n g$y$20159$U0r&n) (g$syntax-car$16566$U0r&n (case-lambda ((g$V$29132$U0r&n) (g$syntax-violation$17186$U0r&n g$C$29131$U0r&n 'expander '"invalid syntax of top-level program" g$V$29132$U0r&n))) g$e*$20143$U0r&n))) g$ls/false$20153$U0r&n) ((case-lambda ((g$C$29135$U0r&n g$t$20160$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$29136$U0r&n) ((case-lambda ((g$C$29134$U0r&n g$ls/false$20161$U0r&n) (if g$ls/false$20161$U0r&n (apply g$C$29134$U0r&n (case-lambda ((g$C$29133$U0r&n) (g$assertion-violation$13786$U0r&n g$C$29133$U0r&n 'expander '"top-level program is missing an (import ---) clause"))) g$ls/false$20161$U0r&n) (g$syntax-violation$17186$U0r&n g$C$29134$U0r&n '#f '"invalid syntax" g$t$20160$U0r&n)))) g$C$29135$U0r&n g$V$29136$U0r&n))) g$t$20160$U0r&n '_))) g$C$29137$U0r&n g$t$20152$U0r&n))))))) g$C$29140$U0r&n g$V$29141$U0r&n))) g$t$20152$U0r&n '((any . any) . any)))) g$C$29142$U0r&n g$t$20144$U0r&n))))))) g$C$29145$U0r&n g$V$29146$U0r&n))) g$t$20144$U0r&n '((any . each-any) . each-any)))) g$C$29147$U0r&n g$e*$20143$U0r&n)))))) (library-letrec*-identity 'g$parse-top-level-program$17129$U0r&n))) (g$top-level-expander$17130$U0r&n g$top-level-expander$20725$U0r&n ((case-lambda ((g$C$29795$U0r&n) (g$C$29795$U0r&n (case-lambda ((g$C$29154$U0r&n g$e*$20162$U0r&n) (call-with-values g$C$29154$U0r&n (case-lambda ((g$C$29148$U0r&n) (g$parse-top-level-program$17129$U0r&n g$C$29148$U0r&n g$e*$20162$U0r&n))) (case-lambda ((g$C$29153$U0r&n g$imp*$20165$U0r&n g$b*$20166$U0r&n) ((case-lambda ((g$C$29152$U0r&n g$b*$20167$U0r&n g$imp*$20168$U0r&n) (call-with-values g$C$29152$U0r&n (case-lambda ((g$C$29149$U0r&n) (g$library-body-expander$17127$U0r&n g$C$29149$U0r&n '() '() g$imp*$20168$U0r&n g$b*$20167$U0r&n '#t))) (case-lambda ((g$C$29151$U0r&n g$imp*$20176$U0r&n g$invoke-req*$20177$U0r&n g$visit-req*$20178$U0r&n g$invoke-code$20179$U0r&n g$visit-code$20180$U0r&n g$export-subst$20181$U0r&n g$export-env$20182$U0r&n) ((case-lambda ((g$C$29150$U0r&n g$export-env$20183$U0r&n g$export-subst$20184$U0r&n g$visit-code$20185$U0r&n g$invoke-code$20186$U0r&n g$visit-req*$20187$U0r&n g$invoke-req*$20188$U0r&n g$imp*$20189$U0r&n) (values g$C$29150$U0r&n g$invoke-req*$20188$U0r&n g$invoke-code$20186$U0r&n))) g$C$29151$U0r&n g$export-env$20182$U0r&n g$export-subst$20181$U0r&n g$visit-code$20180$U0r&n g$invoke-code$20179$U0r&n g$visit-req*$20178$U0r&n g$invoke-req*$20177$U0r&n g$imp*$20176$U0r&n)))))) g$C$29153$U0r&n g$b*$20166$U0r&n g$imp*$20165$U0r&n))))))))) (library-letrec*-identity 'g$top-level-expander$17130$U0r&n))) (g$8532$17131$U0r&n g$8532$20726$U0r&n ((case-lambda ((g$C$29796$U0r&n) (make-record-type-descriptor g$C$29796$U0r&n 'env '#f 'g$8535$U0r&n '#t '#t '#((mutable names) (mutable labels) (mutable itc))))) (library-letrec*-identity 'g$8532$17131$U0r&n))) (g$8534$17132$U0r&n g$8534$20727$U0r&n ((case-lambda ((g$C$29797$U0r&n) (g$C$29797$U0r&n '#f))) (library-letrec*-identity 'g$8534$17132$U0r&n))) (g$8533$17133$U0r&n g$8533$20728$U0r&n ((case-lambda ((g$C$29798$U0r&n) (make-record-constructor-descriptor g$C$29798$U0r&n g$8532$17131$U0r&n '#f g$8534$17132$U0r&n))) (library-letrec*-identity 'g$8533$17133$U0r&n))) (g$env?$17136$U0r&n g$env?$20729$U0r&n ((case-lambda ((g$C$29799$U0r&n) (record-predicate g$C$29799$U0r&n g$8532$17131$U0r&n))) (library-letrec*-identity 'g$env?$17136$U0r&n))) (g$make-env$17137$U0r&n g$make-env$20730$U0r&n ((case-lambda ((g$C$29800$U0r&n) (record-constructor g$C$29800$U0r&n g$8533$17133$U0r&n))) (library-letrec*-identity 'g$make-env$17137$U0r&n))) (g$env-names$17138$U0r&n g$env-names$20731$U0r&n ((case-lambda ((g$C$29801$U0r&n) (record-accessor g$C$29801$U0r&n g$8532$17131$U0r&n '0))) (library-letrec*-identity 'g$env-names$17138$U0r&n))) (g$env-labels$17139$U0r&n g$env-labels$20732$U0r&n ((case-lambda ((g$C$29802$U0r&n) (record-accessor g$C$29802$U0r&n g$8532$17131$U0r&n '1))) (library-letrec*-identity 'g$env-labels$17139$U0r&n))) (g$env-itc$17140$U0r&n g$env-itc$20733$U0r&n ((case-lambda ((g$C$29803$U0r&n) (record-accessor g$C$29803$U0r&n g$8532$17131$U0r&n '2))) (library-letrec*-identity 'g$env-itc$17140$U0r&n))) (g$set-env-names!$17141$U0r&n g$set-env-names!$20734$U0r&n ((case-lambda ((g$C$29804$U0r&n) (record-mutator g$C$29804$U0r&n g$8532$17131$U0r&n '0))) (library-letrec*-identity 'g$set-env-names!$17141$U0r&n))) (g$set-env-labels!$17142$U0r&n g$set-env-labels!$20735$U0r&n ((case-lambda ((g$C$29805$U0r&n) (record-mutator g$C$29805$U0r&n g$8532$17131$U0r&n '1))) (library-letrec*-identity 'g$set-env-labels!$17142$U0r&n))) (g$set-env-itc!$17143$U0r&n g$set-env-itc!$20736$U0r&n ((case-lambda ((g$C$29806$U0r&n) (record-mutator g$C$29806$U0r&n g$8532$17131$U0r&n '2))) (library-letrec*-identity 'g$set-env-itc!$17143$U0r&n))) (g$rp$17144$U0r&n g$rp$20737$U0r&n ((case-lambda ((g$C$29807$U0r&n) (make-record-printer g$C$29807$U0r&n 'env (case-lambda ((g$C$29155$U0r&n g$x$20190$U0r&n g$p$20191$U0r&n g$wr$20192$U0r&n) (display g$C$29155$U0r&n '"#<environment>" g$p$20191$U0r&n)))))) (library-letrec*-identity 'g$rp$17144$U0r&n))) (g$8549$17145$U0r&n g$8549$20738$U0r&n ((case-lambda ((g$C$29808$U0r&n) (make-record-type-descriptor g$C$29808$U0r&n 'interaction-env '#f 'g$8552$U0r&n '#t '#t '#((mutable rib) (mutable r) (mutable locs))))) (library-letrec*-identity 'g$8549$17145$U0r&n))) (g$8551$17146$U0r&n g$8551$20739$U0r&n ((case-lambda ((g$C$29809$U0r&n) (g$C$29809$U0r&n '#f))) (library-letrec*-identity 'g$8551$17146$U0r&n))) (g$8550$17147$U0r&n g$8550$20740$U0r&n ((case-lambda ((g$C$29810$U0r&n) (make-record-constructor-descriptor g$C$29810$U0r&n g$8549$17145$U0r&n '#f g$8551$17146$U0r&n))) (library-letrec*-identity 'g$8550$17147$U0r&n))) (g$interaction-env?$17150$U0r&n g$interaction-env?$20741$U0r&n ((case-lambda ((g$C$29811$U0r&n) (record-predicate g$C$29811$U0r&n g$8549$17145$U0r&n))) (library-letrec*-identity 'g$interaction-env?$17150$U0r&n))) (g$make-interaction-env$17151$U0r&n g$make-interaction-env$20742$U0r&n ((case-lambda ((g$C$29812$U0r&n) (record-constructor g$C$29812$U0r&n g$8550$17147$U0r&n))) (library-letrec*-identity 'g$make-interaction-env$17151$U0r&n))) (g$interaction-env-rib$17152$U0r&n g$interaction-env-rib$20743$U0r&n ((case-lambda ((g$C$29813$U0r&n) (record-accessor g$C$29813$U0r&n g$8549$17145$U0r&n '0))) (library-letrec*-identity 'g$interaction-env-rib$17152$U0r&n))) (g$interaction-env-r$17153$U0r&n g$interaction-env-r$20744$U0r&n ((case-lambda ((g$C$29814$U0r&n) (record-accessor g$C$29814$U0r&n g$8549$17145$U0r&n '1))) (library-letrec*-identity 'g$interaction-env-r$17153$U0r&n))) (g$interaction-env-locs$17154$U0r&n g$interaction-env-locs$20745$U0r&n ((case-lambda ((g$C$29815$U0r&n) (record-accessor g$C$29815$U0r&n g$8549$17145$U0r&n '2))) (library-letrec*-identity 'g$interaction-env-locs$17154$U0r&n))) (g$set-interaction-env-rib!$17155$U0r&n g$set-interaction-env-rib!$20746$U0r&n ((case-lambda ((g$C$29816$U0r&n) (record-mutator g$C$29816$U0r&n g$8549$17145$U0r&n '0))) (library-letrec*-identity 'g$set-interaction-env-rib!$17155$U0r&n))) (g$set-interaction-env-r!$17156$U0r&n g$set-interaction-env-r!$20747$U0r&n ((case-lambda ((g$C$29817$U0r&n) (record-mutator g$C$29817$U0r&n g$8549$17145$U0r&n '1))) (library-letrec*-identity 'g$set-interaction-env-r!$17156$U0r&n))) (g$set-interaction-env-locs!$17157$U0r&n g$set-interaction-env-locs!$20748$U0r&n ((case-lambda ((g$C$29818$U0r&n) (record-mutator g$C$29818$U0r&n g$8549$17145$U0r&n '2))) (library-letrec*-identity 'g$set-interaction-env-locs!$17157$U0r&n))) (g$rp$17158$U0r&n g$rp$20749$U0r&n ((case-lambda ((g$C$29819$U0r&n) (make-record-printer g$C$29819$U0r&n 'interaction-env (case-lambda ((g$C$29156$U0r&n g$x$20193$U0r&n g$p$20194$U0r&n g$wr$20195$U0r&n) (display g$C$29156$U0r&n '"#<environment>" g$p$20194$U0r&n)))))) (library-letrec*-identity 'g$rp$17158$U0r&n))) (g$interaction-environment-symbols$17159$U0r&n g$interaction-environment-symbols$20750$U0r&n ((case-lambda ((g$C$29820$U0r&n) (g$C$29820$U0r&n (case-lambda ((g$C$29157$U0r&n) (g$interaction-environment$17193$U0r&n (case-lambda ((g$V$29158$U0r&n) (g$environment-symbols$17163$U0r&n g$C$29157$U0r&n g$V$29158$U0r&n))))))))) (library-letrec*-identity 'g$interaction-environment-symbols$17159$U0r&n))) (g$environment-bindings$17160$U0r&n g$environment-bindings$20751$U0r&n ((case-lambda ((g$C$29821$U0r&n) (g$C$29821$U0r&n (case-lambda ((g$C$29162$U0r&n g$e$20196$U0r&n) (g$env-labels$17139$U0r&n (case-lambda ((g$V$29163$U0r&n) (g$env-names$17138$U0r&n (case-lambda ((g$V$29164$U0r&n) (g$vector-map$13557$U0r&n (case-lambda ((g$V$29165$U0r&n) (vector->list g$C$29162$U0r&n g$V$29165$U0r&n))) (case-lambda ((g$C$29159$U0r&n g$name$20197$U0r&n g$label$20198$U0r&n) (g$imported-label->binding$16271$U0r&n (case-lambda ((g$V$29160$U0r&n) (cons (case-lambda ((g$V$29161$U0r&n) (g$parse-binding$17161$U0r&n g$C$29159$U0r&n g$V$29161$U0r&n))) g$name$20197$U0r&n g$V$29160$U0r&n))) g$label$20198$U0r&n))) g$V$29164$U0r&n g$V$29163$U0r&n))) g$e$20196$U0r&n))) g$e$20196$U0r&n)))))) (library-letrec*-identity 'g$environment-bindings$17160$U0r&n))) (g$parse-binding$17161$U0r&n g$parse-binding$20752$U0r&n ((case-lambda ((g$C$29822$U0r&n) (g$C$29822$U0r&n (case-lambda ((g$C$29173$U0r&n g$b$20199$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$29174$U0r&n) ((case-lambda ((g$C$29166$U0r&n g$t$20200$U0r&n) (g$memv$12746$U0r&n (case-lambda ((g$T$29167$U0r&n) (if g$T$29167$U0r&n (g$C$29166$U0r&n 'procedure) (g$memv$12746$U0r&n (case-lambda ((g$T$29168$U0r&n) (if g$T$29168$U0r&n (g$C$29166$U0r&n 'syntax) (eqv? (case-lambda ((g$T$29169$U0r&n) (if g$T$29169$U0r&n (g$C$29166$U0r&n 'record) (g$cadr$13506$U0r&n (case-lambda ((g$V$29170$U0r&n) (car (case-lambda ((g$V$29171$U0r&n) (eq? (case-lambda ((g$T$29172$U0r&n) (if g$T$29172$U0r&n (g$C$29166$U0r&n 'syntax) (g$C$29166$U0r&n 'unknown)))) g$V$29171$U0r&n g$V$29170$U0r&n))) g$b$20199$U0r&n))) g$b$20199$U0r&n)))) g$t$20200$U0r&n '$core-rtd)))) g$t$20200$U0r&n '(core-macro macro global-macro))))) g$t$20200$U0r&n '(core-prim global)))) (case-lambda ((g$V$29175$U0r&n) (car (case-lambda ((g$V$29176$U0r&n) (cons g$C$29173$U0r&n g$V$29176$U0r&n g$V$29175$U0r&n))) g$b$20199$U0r&n))) g$V$29174$U0r&n))) g$b$20199$U0r&n)))))) (library-letrec*-identity 'g$parse-binding$17161$U0r&n))) (g$environment?$17162$U0r&n g$environment?$20753$U0r&n ((case-lambda ((g$C$29823$U0r&n) (g$C$29823$U0r&n (case-lambda ((g$C$29178$U0r&n g$x$20201$U0r&n) (g$env?$17136$U0r&n (case-lambda ((g$V$29179$U0r&n) ((case-lambda ((g$C$29177$U0r&n g$t$20202$U0r&n) (if g$t$20202$U0r&n (g$C$29177$U0r&n g$t$20202$U0r&n) (g$interaction-env?$17150$U0r&n g$C$29177$U0r&n g$x$20201$U0r&n)))) g$C$29178$U0r&n g$V$29179$U0r&n))) g$x$20201$U0r&n)))))) (library-letrec*-identity 'g$environment?$17162$U0r&n))) (g$environment-symbols$17163$U0r&n g$environment-symbols$20754$U0r&n ((case-lambda ((g$C$29824$U0r&n) (g$C$29824$U0r&n (case-lambda ((g$C$29180$U0r&n g$x$20203$U0r&n) (g$env?$17136$U0r&n (case-lambda ((g$T$29181$U0r&n) (if g$T$29181$U0r&n (g$env-names$17138$U0r&n (case-lambda ((g$V$29182$U0r&n) (vector->list g$C$29180$U0r&n g$V$29182$U0r&n))) g$x$20203$U0r&n) (g$interaction-env?$17150$U0r&n (case-lambda ((g$T$29183$U0r&n) (if g$T$29183$U0r&n (g$interaction-env-rib$17152$U0r&n (case-lambda ((g$V$29184$U0r&n) (g$rib-sym*$16517$U0r&n (case-lambda ((g$V$29185$U0r&n) (g$map$12753$U0r&n g$C$29180$U0r&n values g$V$29185$U0r&n))) g$V$29184$U0r&n))) g$x$20203$U0r&n) (g$assertion-violation$13786$U0r&n g$C$29180$U0r&n 'environment-symbols '"not an environment" g$x$20203$U0r&n)))) g$x$20203$U0r&n)))) g$x$20203$U0r&n)))))) (library-letrec*-identity 'g$environment-symbols$17163$U0r&n))) (g$environment$17164$U0r&n g$environment$20755$U0r&n ((case-lambda ((g$C$29825$U0r&n) (g$C$29825$U0r&n (case-lambda ((g$C$29197$U0r&n . g$imp*$20204$U0r&n) (g$make-collector$17121$U0r&n (case-lambda ((g$V$29198$U0r&n) ((case-lambda ((g$C$29196$U0r&n g$itc$20205$U0r&n) ((case-lambda ((g$C$29195$U0r&n g$imp-collector$20208$U0r&n g$imp-collector$20209$U0r&n) ((case-lambda ((g$C$29190$U0r&n g$swap$20210$U0r&n) (dynamic-wind g$C$29190$U0r&n g$swap$20210$U0r&n (case-lambda ((g$C$29189$U0r&n) (call-with-values g$C$29189$U0r&n (case-lambda ((g$C$29186$U0r&n) (g$parse-import-spec*$17119$U0r&n g$C$29186$U0r&n g$imp*$20204$U0r&n))) (case-lambda ((g$C$29188$U0r&n g$subst-names$20213$U0r&n g$subst-labels$20214$U0r&n) ((case-lambda ((g$C$29187$U0r&n g$subst-labels$20215$U0r&n g$subst-names$20216$U0r&n) (g$make-env$17137$U0r&n g$C$29187$U0r&n g$subst-names$20216$U0r&n g$subst-labels$20215$U0r&n g$itc$20205$U0r&n))) g$C$29188$U0r&n g$subst-labels$20214$U0r&n g$subst-names$20213$U0r&n)))))) g$swap$20210$U0r&n))) g$C$29195$U0r&n (case-lambda ((g$C$29193$U0r&n) (g$imp-collector$20208$U0r&n (case-lambda ((g$V$29194$U0r&n) ((case-lambda ((g$C$29191$U0r&n g$t$20217$U0r&n) (g$imp-collector$20208$U0r&n (case-lambda (g$IGNORE$29192$U0r&n (begin (set! g$imp-collector$20209$U0r&n g$t$20217$U0r&n) (g$C$29191$U0r&n (cps-void))))) g$imp-collector$20209$U0r&n))) g$C$29193$U0r&n g$V$29194$U0r&n))))))))) g$C$29196$U0r&n g$imp-collector$17124$U0r&n g$itc$20205$U0r&n))) g$C$29197$U0r&n g$V$29198$U0r&n))))))))) (library-letrec*-identity 'g$environment$17164$U0r&n))) (g$null-environment$17165$U0r&n g$null-environment$20756$U0r&n ((case-lambda ((g$C$29826$U0r&n) (g$C$29826$U0r&n (case-lambda ((g$C$29199$U0r&n g$n$20218$U0r&n) ((case-lambda ((g$J$29201$U0r&n) (eqv? (case-lambda ((g$V$29202$U0r&n) (not (case-lambda ((g$T$29203$U0r&n) (if g$T$29203$U0r&n (g$assertion-violation$13786$U0r&n g$J$29201$U0r&n 'null-environment '"not 5" g$n$20218$U0r&n) (void g$J$29201$U0r&n)))) g$V$29202$U0r&n))) g$n$20218$U0r&n '5))) (case-lambda (g$IGNORE$29200$U0r&n (g$environment$17164$U0r&n g$C$29199$U0r&n '(psyntax null-environment-5)))))))))) (library-letrec*-identity 'g$null-environment$17165$U0r&n))) (g$scheme-report-environment$17166$U0r&n g$scheme-report-environment$20757$U0r&n ((case-lambda ((g$C$29827$U0r&n) (g$C$29827$U0r&n (case-lambda ((g$C$29204$U0r&n g$n$20219$U0r&n) ((case-lambda ((g$J$29206$U0r&n) (eqv? (case-lambda ((g$V$29207$U0r&n) (not (case-lambda ((g$T$29208$U0r&n) (if g$T$29208$U0r&n (g$assertion-violation$13786$U0r&n g$J$29206$U0r&n 'scheme-report-environment '"not 5" g$n$20219$U0r&n) (void g$J$29206$U0r&n)))) g$V$29207$U0r&n))) g$n$20219$U0r&n '5))) (case-lambda (g$IGNORE$29205$U0r&n (g$environment$17164$U0r&n g$C$29204$U0r&n '(psyntax scheme-report-environment-5)))))))))) (library-letrec*-identity 'g$scheme-report-environment$17166$U0r&n))) (g$expand$17167$U0r&n g$expand$20758$U0r&n ((case-lambda ((g$C$29828$U0r&n) (g$C$29828$U0r&n (case-lambda ((g$C$29269$U0r&n g$x$20220$U0r&n g$env$20221$U0r&n) (g$env?$17136$U0r&n (case-lambda ((g$T$29270$U0r&n) (if g$T$29270$U0r&n (g$env-labels$17139$U0r&n (case-lambda ((g$V$29271$U0r&n) (g$env-names$17138$U0r&n (case-lambda ((g$V$29272$U0r&n) (g$make-top-rib$17120$U0r&n (case-lambda ((g$V$29273$U0r&n) ((case-lambda ((g$C$29233$U0r&n g$rib$20222$U0r&n) (g$make-collector$17121$U0r&n (case-lambda ((g$V$29234$U0r&n) (g$make-collector$17121$U0r&n (case-lambda ((g$V$29235$U0r&n) (g$env-itc$17140$U0r&n (case-lambda ((g$V$29236$U0r&n) (list (case-lambda ((g$V$29237$U0r&n) (g$make-stx$16542$U0r&n (case-lambda ((g$V$29238$U0r&n) ((case-lambda ((g$C$29231$U0r&n g$x$20223$U0r&n g$itc$20224$U0r&n g$rtc$20225$U0r&n g$vtc$20226$U0r&n) ((case-lambda ((g$C$29230$U0r&n g$top-level-context$20236$U0r&n g$inv-collector$20237$U0r&n g$vis-collector$20238$U0r&n g$imp-collector$20239$U0r&n g$top-level-context$20240$U0r&n g$inv-collector$20241$U0r&n g$vis-collector$20242$U0r&n g$imp-collector$20243$U0r&n) ((case-lambda ((g$C$29213$U0r&n g$swap$20244$U0r&n) (dynamic-wind g$C$29213$U0r&n g$swap$20244$U0r&n (case-lambda ((g$C$29212$U0r&n) (g$chi-expr$17085$U0r&n g$C$29212$U0r&n g$x$20223$U0r&n '() '()))) g$swap$20244$U0r&n))) g$C$29230$U0r&n (case-lambda ((g$C$29222$U0r&n) (g$top-level-context$20236$U0r&n (case-lambda ((g$V$29223$U0r&n) ((case-lambda ((g$C$29214$U0r&n g$t$20245$U0r&n) (g$top-level-context$20236$U0r&n (case-lambda (g$IGNORE$29215$U0r&n (begin (set! g$top-level-context$20240$U0r&n g$t$20245$U0r&n) (g$C$29214$U0r&n (cps-void))))) g$top-level-context$20240$U0r&n))) (case-lambda (g$IGNORE$29224$U0r&n (g$inv-collector$20237$U0r&n (case-lambda ((g$V$29225$U0r&n) ((case-lambda ((g$C$29216$U0r&n g$t$20246$U0r&n) (g$inv-collector$20237$U0r&n (case-lambda (g$IGNORE$29217$U0r&n (begin (set! g$inv-collector$20241$U0r&n g$t$20246$U0r&n) (g$C$29216$U0r&n (cps-void))))) g$inv-collector$20241$U0r&n))) (case-lambda (g$IGNORE$29226$U0r&n (g$vis-collector$20238$U0r&n (case-lambda ((g$V$29227$U0r&n) ((case-lambda ((g$C$29218$U0r&n g$t$20247$U0r&n) (g$vis-collector$20238$U0r&n (case-lambda (g$IGNORE$29219$U0r&n (begin (set! g$vis-collector$20242$U0r&n g$t$20247$U0r&n) (g$C$29218$U0r&n (cps-void))))) g$vis-collector$20242$U0r&n))) (case-lambda (g$IGNORE$29228$U0r&n (g$imp-collector$20239$U0r&n (case-lambda ((g$V$29229$U0r&n) ((case-lambda ((g$C$29220$U0r&n g$t$20248$U0r&n) (g$imp-collector$20239$U0r&n (case-lambda (g$IGNORE$29221$U0r&n (begin (set! g$imp-collector$20243$U0r&n g$t$20248$U0r&n) (g$C$29220$U0r&n (cps-void))))) g$imp-collector$20243$U0r&n))) g$C$29222$U0r&n g$V$29229$U0r&n)))))) g$V$29227$U0r&n)))))) g$V$29225$U0r&n)))))) g$V$29223$U0r&n))))))))) (case-lambda ((g$V$29232$U0r&n) ((case-lambda ((g$C$29209$U0r&n g$x$20227$U0r&n) (g$seal-rib!$16533$U0r&n (case-lambda (g$IGNORE$29210$U0r&n (g$rtc$20225$U0r&n (case-lambda ((g$V$29211$U0r&n) (values g$C$29209$U0r&n g$x$20227$U0r&n g$V$29211$U0r&n)))))) g$rib$20222$U0r&n))) g$C$29231$U0r&n g$V$29232$U0r&n))) g$top-level-context$17194$U0r&n g$inv-collector$17122$U0r&n g$vis-collector$17123$U0r&n g$imp-collector$17124$U0r&n '#f g$rtc$20225$U0r&n g$vtc$20226$U0r&n g$itc$20224$U0r&n))) g$C$29233$U0r&n g$V$29238$U0r&n g$V$29236$U0r&n g$V$29235$U0r&n g$V$29234$U0r&n))) g$x$20220$U0r&n g$top-mark*$16502$U0r&n g$V$29237$U0r&n '()))) g$rib$20222$U0r&n))) g$env$20221$U0r&n))))))))) g$C$29269$U0r&n g$V$29273$U0r&n))) g$V$29272$U0r&n g$V$29271$U0r&n))) g$env$20221$U0r&n))) g$env$20221$U0r&n) (g$interaction-env?$17150$U0r&n (case-lambda ((g$T$29274$U0r&n) (if g$T$29274$U0r&n (g$make-collector$17121$U0r&n (case-lambda ((g$V$29275$U0r&n) (g$interaction-env-r$17153$U0r&n (case-lambda ((g$V$29276$U0r&n) (g$interaction-env-rib$17152$U0r&n (case-lambda ((g$V$29277$U0r&n) ((case-lambda ((g$C$29266$U0r&n g$rib$20249$U0r&n g$r$20250$U0r&n g$rtc$20251$U0r&n) (list (case-lambda ((g$V$29267$U0r&n) (g$make-stx$16542$U0r&n (case-lambda ((g$V$29268$U0r&n) ((case-lambda ((g$C$29265$U0r&n g$x$20252$U0r&n) (call-with-values g$C$29265$U0r&n (case-lambda ((g$C$29258$U0r&n) (g$make-collector$17121$U0r&n (case-lambda ((g$V$29259$U0r&n) (g$make-collector$17121$U0r&n (case-lambda ((g$V$29260$U0r&n) ((case-lambda ((g$C$29257$U0r&n g$top-level-context$20263$U0r&n g$inv-collector$20264$U0r&n g$vis-collector$20265$U0r&n g$imp-collector$20266$U0r&n g$top-level-context$20267$U0r&n g$inv-collector$20268$U0r&n g$vis-collector$20269$U0r&n g$imp-collector$20270$U0r&n) ((case-lambda ((g$C$29240$U0r&n g$swap$20271$U0r&n) (dynamic-wind g$C$29240$U0r&n g$swap$20271$U0r&n (case-lambda ((g$C$29239$U0r&n) (g$chi-interaction-expr$17126$U0r&n g$C$29239$U0r&n g$x$20252$U0r&n g$rib$20249$U0r&n g$r$20250$U0r&n))) g$swap$20271$U0r&n))) g$C$29257$U0r&n (case-lambda ((g$C$29249$U0r&n) (g$top-level-context$20263$U0r&n (case-lambda ((g$V$29250$U0r&n) ((case-lambda ((g$C$29241$U0r&n g$t$20272$U0r&n) (g$top-level-context$20263$U0r&n (case-lambda (g$IGNORE$29242$U0r&n (begin (set! g$top-level-context$20267$U0r&n g$t$20272$U0r&n) (g$C$29241$U0r&n (cps-void))))) g$top-level-context$20267$U0r&n))) (case-lambda (g$IGNORE$29251$U0r&n (g$inv-collector$20264$U0r&n (case-lambda ((g$V$29252$U0r&n) ((case-lambda ((g$C$29243$U0r&n g$t$20273$U0r&n) (g$inv-collector$20264$U0r&n (case-lambda (g$IGNORE$29244$U0r&n (begin (set! g$inv-collector$20268$U0r&n g$t$20273$U0r&n) (g$C$29243$U0r&n (cps-void))))) g$inv-collector$20268$U0r&n))) (case-lambda (g$IGNORE$29253$U0r&n (g$vis-collector$20265$U0r&n (case-lambda ((g$V$29254$U0r&n) ((case-lambda ((g$C$29245$U0r&n g$t$20274$U0r&n) (g$vis-collector$20265$U0r&n (case-lambda (g$IGNORE$29246$U0r&n (begin (set! g$vis-collector$20269$U0r&n g$t$20274$U0r&n) (g$C$29245$U0r&n (cps-void))))) g$vis-collector$20269$U0r&n))) (case-lambda (g$IGNORE$29255$U0r&n (g$imp-collector$20266$U0r&n (case-lambda ((g$V$29256$U0r&n) ((case-lambda ((g$C$29247$U0r&n g$t$20275$U0r&n) (g$imp-collector$20266$U0r&n (case-lambda (g$IGNORE$29248$U0r&n (begin (set! g$imp-collector$20270$U0r&n g$t$20275$U0r&n) (g$C$29247$U0r&n (cps-void))))) g$imp-collector$20270$U0r&n))) g$C$29249$U0r&n g$V$29256$U0r&n)))))) g$V$29254$U0r&n)))))) g$V$29252$U0r&n)))))) g$V$29250$U0r&n))))))))) g$C$29258$U0r&n g$top-level-context$17194$U0r&n g$inv-collector$17122$U0r&n g$vis-collector$17123$U0r&n g$imp-collector$17124$U0r&n g$env$20221$U0r&n g$rtc$20251$U0r&n g$V$29260$U0r&n g$V$29259$U0r&n))))))))) (case-lambda ((g$C$29264$U0r&n g$e$20276$U0r&n g$r^$20277$U0r&n) ((case-lambda ((g$C$29261$U0r&n g$r^$20278$U0r&n g$e$20279$U0r&n) (g$set-interaction-env-r!$17156$U0r&n (case-lambda (g$IGNORE$29262$U0r&n (g$rtc$20251$U0r&n (case-lambda ((g$V$29263$U0r&n) (values g$C$29261$U0r&n g$e$20279$U0r&n g$V$29263$U0r&n)))))) g$env$20221$U0r&n g$r^$20278$U0r&n))) g$C$29264$U0r&n g$r^$20277$U0r&n g$e$20276$U0r&n)))))) g$C$29266$U0r&n g$V$29268$U0r&n))) g$x$20220$U0r&n g$top-mark*$16502$U0r&n g$V$29267$U0r&n '()))) g$rib$20249$U0r&n))) g$C$29269$U0r&n g$V$29277$U0r&n g$V$29276$U0r&n g$V$29275$U0r&n))) g$env$20221$U0r&n))) g$env$20221$U0r&n)))) (g$assertion-violation$13786$U0r&n g$C$29269$U0r&n 'expand '"not an environment" g$env$20221$U0r&n)))) g$env$20221$U0r&n)))) g$env$20221$U0r&n)))))) (library-letrec*-identity 'g$expand$17167$U0r&n))) (g$eval$17168$U0r&n g$eval$20759$U0r&n ((case-lambda ((g$C$29829$U0r&n) (g$C$29829$U0r&n (case-lambda ((g$C$29283$U0r&n g$x$20280$U0r&n g$env$20281$U0r&n) ((case-lambda ((g$J$29285$U0r&n) (g$environment?$17162$U0r&n (case-lambda ((g$V$29286$U0r&n) (not (case-lambda ((g$T$29287$U0r&n) (if g$T$29287$U0r&n (g$error$13787$U0r&n g$J$29285$U0r&n 'eval '"not an environment" g$env$20281$U0r&n) (void g$J$29285$U0r&n)))) g$V$29286$U0r&n))) g$env$20281$U0r&n))) (case-lambda (g$IGNORE$29284$U0r&n (call-with-values g$C$29283$U0r&n (case-lambda ((g$C$29278$U0r&n) (g$expand$17167$U0r&n g$C$29278$U0r&n g$x$20280$U0r&n g$env$20281$U0r&n))) (case-lambda ((g$C$29282$U0r&n g$x$20284$U0r&n g$invoke-req*$20285$U0r&n) ((case-lambda ((g$C$29279$U0r&n g$invoke-req*$20286$U0r&n g$x$20287$U0r&n) (g$for-each$12754$U0r&n (case-lambda (g$IGNORE$29280$U0r&n (g$expanded->core$16005$U0r&n (case-lambda ((g$V$29281$U0r&n) (eval-core g$C$29279$U0r&n g$V$29281$U0r&n))) g$x$20287$U0r&n))) g$invoke-library$16272$U0r&n g$invoke-req*$20286$U0r&n))) g$C$29282$U0r&n g$invoke-req*$20285$U0r&n g$x$20284$U0r&n)))))))))))) (library-letrec*-identity 'g$eval$17168$U0r&n))) (g$expand->core$17169$U0r&n g$expand->core$20760$U0r&n ((case-lambda ((g$C$29830$U0r&n) (g$C$29830$U0r&n (case-lambda ((g$C$29292$U0r&n g$x$20288$U0r&n g$env$20289$U0r&n) ((case-lambda ((g$J$29294$U0r&n) (g$environment?$17162$U0r&n (case-lambda ((g$V$29295$U0r&n) (not (case-lambda ((g$T$29296$U0r&n) (if g$T$29296$U0r&n (g$error$13787$U0r&n g$J$29294$U0r&n 'eval '"not an environment" g$env$20289$U0r&n) (void g$J$29294$U0r&n)))) g$V$29295$U0r&n))) g$env$20289$U0r&n))) (case-lambda (g$IGNORE$29293$U0r&n (call-with-values g$C$29292$U0r&n (case-lambda ((g$C$29288$U0r&n) (g$expand$17167$U0r&n g$C$29288$U0r&n g$x$20288$U0r&n g$env$20289$U0r&n))) (case-lambda ((g$C$29291$U0r&n g$x$20292$U0r&n g$invoke-req*$20293$U0r&n) ((case-lambda ((g$C$29289$U0r&n g$invoke-req*$20294$U0r&n g$x$20295$U0r&n) (g$for-each$12754$U0r&n (case-lambda (g$IGNORE$29290$U0r&n (g$expanded->core$16005$U0r&n g$C$29289$U0r&n g$x$20295$U0r&n))) g$invoke-library$16272$U0r&n g$invoke-req*$20294$U0r&n))) g$C$29291$U0r&n g$invoke-req*$20293$U0r&n g$x$20292$U0r&n)))))))))))) (library-letrec*-identity 'g$expand->core$17169$U0r&n))) (g$library-expander$17170$U0r&n g$library-expander$20761$U0r&n ((case-lambda ((g$C$29831$U0r&n) (g$C$29831$U0r&n (case-lambda ((g$C$29325$U0r&n g$x$20296$U0r&n g$filename$20297$U0r&n g$verify-name$20298$U0r&n) ((case-lambda ((g$C$29322$U0r&n g$build-visit-code$20299$U0r&n g$visit!$20300$U0r&n) (begin (set! g$build-visit-code$20299$U0r&n (case-lambda ((g$C$29301$U0r&n g$macro*$20342$U0r&n) (null? (case-lambda ((g$T$29302$U0r&n) (if g$T$29302$U0r&n (g$build-void$16495$U0r&n g$C$29301$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$29303$U0r&n) (g$build-sequence$16494$U0r&n g$C$29301$U0r&n '#f g$V$29303$U0r&n))) (case-lambda ((g$C$29298$U0r&n g$x$20343$U0r&n) (g$cddr$13508$U0r&n (case-lambda ((g$V$29299$U0r&n) (car (case-lambda ((g$V$29300$U0r&n) ((case-lambda ((g$C$29297$U0r&n g$loc$20344$U0r&n g$src$20345$U0r&n) (list g$C$29297$U0r&n 'set! g$loc$20344$U0r&n g$src$20345$U0r&n))) g$C$29298$U0r&n g$V$29300$U0r&n g$V$29299$U0r&n))) g$x$20343$U0r&n))) g$x$20343$U0r&n))) g$macro*$20342$U0r&n)))) g$macro*$20342$U0r&n)))) (begin (set! g$visit!$20300$U0r&n (case-lambda ((g$C$29308$U0r&n g$macro*$20338$U0r&n) (g$for-each$12754$U0r&n g$C$29308$U0r&n (case-lambda ((g$C$29305$U0r&n g$x$20339$U0r&n) (g$cadr$13506$U0r&n (case-lambda ((g$V$29306$U0r&n) (car (case-lambda ((g$V$29307$U0r&n) ((case-lambda ((g$C$29304$U0r&n g$loc$20340$U0r&n g$proc$20341$U0r&n) (set-symbol-value! g$C$29304$U0r&n g$loc$20340$U0r&n g$proc$20341$U0r&n))) g$C$29305$U0r&n g$V$29307$U0r&n g$V$29306$U0r&n))) g$x$20339$U0r&n))) g$x$20339$U0r&n))) g$macro*$20338$U0r&n)))) (call-with-values g$C$29322$U0r&n (case-lambda ((g$C$29309$U0r&n) (g$core-library-expander$17128$U0r&n g$C$29309$U0r&n g$x$20296$U0r&n g$verify-name$20298$U0r&n))) (case-lambda ((g$C$29321$U0r&n g$name$20310$U0r&n g$ver$20311$U0r&n g$imp*$20312$U0r&n g$inv*$20313$U0r&n g$vis*$20314$U0r&n g$invoke-code$20315$U0r&n g$macro*$20316$U0r&n g$export-subst$20317$U0r&n g$export-env$20318$U0r&n) ((case-lambda ((g$C$29315$U0r&n g$export-env$20319$U0r&n g$export-subst$20320$U0r&n g$macro*$20321$U0r&n g$invoke-code$20322$U0r&n g$vis*$20323$U0r&n g$inv*$20324$U0r&n g$imp*$20325$U0r&n g$ver$20326$U0r&n g$name$20327$U0r&n) (g$build-visit-code$20299$U0r&n (case-lambda ((g$V$29316$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$29317$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$29318$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$29319$U0r&n) (gensym (case-lambda ((g$V$29320$U0r&n) ((case-lambda ((g$C$29310$U0r&n g$id$20328$U0r&n g$name$20329$U0r&n g$ver$20330$U0r&n g$imp*$20331$U0r&n g$vis*$20332$U0r&n g$inv*$20333$U0r&n g$visit-proc$20334$U0r&n g$invoke-proc$20335$U0r&n g$visit-code$20336$U0r&n g$invoke-code$20337$U0r&n) (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29311$U0r&n (values g$C$29310$U0r&n g$id$20328$U0r&n g$name$20329$U0r&n g$ver$20330$U0r&n g$imp*$20331$U0r&n g$vis*$20332$U0r&n g$inv*$20333$U0r&n g$invoke-code$20337$U0r&n g$visit-code$20336$U0r&n g$export-subst$20320$U0r&n g$export-env$20319$U0r&n))) g$id$20328$U0r&n g$name$20329$U0r&n g$ver$20330$U0r&n g$imp*$20331$U0r&n g$vis*$20332$U0r&n g$inv*$20333$U0r&n g$export-subst$20320$U0r&n g$export-env$20319$U0r&n g$visit-proc$20334$U0r&n g$invoke-proc$20335$U0r&n g$visit-code$20336$U0r&n g$invoke-code$20337$U0r&n '#t g$filename$20297$U0r&n))) g$C$29315$U0r&n g$V$29320$U0r&n g$name$20327$U0r&n g$ver$20326$U0r&n g$V$29319$U0r&n g$V$29318$U0r&n g$V$29317$U0r&n (case-lambda ((g$C$29312$U0r&n) (g$visit!$20300$U0r&n g$C$29312$U0r&n g$macro*$20321$U0r&n))) (case-lambda ((g$C$29313$U0r&n) (g$expanded->core$16005$U0r&n (case-lambda ((g$V$29314$U0r&n) (eval-core g$C$29313$U0r&n g$V$29314$U0r&n))) g$invoke-code$20322$U0r&n))) g$V$29316$U0r&n g$invoke-code$20322$U0r&n)))))) g$library-spec$16276$U0r&n g$imp*$20325$U0r&n))) g$library-spec$16276$U0r&n g$vis*$20323$U0r&n))) g$library-spec$16276$U0r&n g$inv*$20324$U0r&n))) g$macro*$20321$U0r&n))) g$C$29321$U0r&n g$export-env$20318$U0r&n g$export-subst$20317$U0r&n g$macro*$20316$U0r&n g$invoke-code$20315$U0r&n g$vis*$20314$U0r&n g$inv*$20313$U0r&n g$imp*$20312$U0r&n g$ver$20311$U0r&n g$name$20310$U0r&n)))))))) g$C$29325$U0r&n uninitialized uninitialized)) ((g$C$29325$U0r&n g$x$20346$U0r&n g$filename$20347$U0r&n) (g$library-expander$17170$U0r&n g$C$29325$U0r&n g$x$20346$U0r&n g$filename$20347$U0r&n (case-lambda ((g$C$29323$U0r&n g$x$20348$U0r&n) (values g$C$29323$U0r&n))))) ((g$C$29325$U0r&n g$x$20349$U0r&n) (g$library-expander$17170$U0r&n g$C$29325$U0r&n g$x$20349$U0r&n '#f (case-lambda ((g$C$29324$U0r&n g$x$20350$U0r&n) (values g$C$29324$U0r&n))))))))) (library-letrec*-identity 'g$library-expander$17170$U0r&n))) (g$boot-library-expand$17171$U0r&n g$boot-library-expand$20762$U0r&n ((case-lambda ((g$C$29832$U0r&n) (g$C$29832$U0r&n (case-lambda ((g$C$29329$U0r&n g$x$20351$U0r&n) (call-with-values g$C$29329$U0r&n (case-lambda ((g$C$29326$U0r&n) (g$library-expander$17170$U0r&n g$C$29326$U0r&n g$x$20351$U0r&n))) (case-lambda ((g$C$29328$U0r&n g$id$20362$U0r&n g$name$20363$U0r&n g$ver$20364$U0r&n g$imp*$20365$U0r&n g$vis*$20366$U0r&n g$inv*$20367$U0r&n g$invoke-code$20368$U0r&n g$visit-code$20369$U0r&n g$export-subst$20370$U0r&n g$export-env$20371$U0r&n) ((case-lambda ((g$C$29327$U0r&n g$export-env$20372$U0r&n g$export-subst$20373$U0r&n g$visit-code$20374$U0r&n g$invoke-code$20375$U0r&n g$inv*$20376$U0r&n g$vis*$20377$U0r&n g$imp*$20378$U0r&n g$ver$20379$U0r&n g$name$20380$U0r&n g$id$20381$U0r&n) (values g$C$29327$U0r&n g$name$20380$U0r&n g$invoke-code$20375$U0r&n g$export-subst$20373$U0r&n g$export-env$20372$U0r&n))) g$C$29328$U0r&n g$export-env$20371$U0r&n g$export-subst$20370$U0r&n g$visit-code$20369$U0r&n g$invoke-code$20368$U0r&n g$inv*$20367$U0r&n g$vis*$20366$U0r&n g$imp*$20365$U0r&n g$ver$20364$U0r&n g$name$20363$U0r&n g$id$20362$U0r&n))))))))) (library-letrec*-identity 'g$boot-library-expand$17171$U0r&n))) (g$rev-map-append$17172$U0r&n g$rev-map-append$20763$U0r&n ((case-lambda ((g$C$29833$U0r&n) (g$C$29833$U0r&n (case-lambda ((g$C$29330$U0r&n g$f$20382$U0r&n g$ls$20383$U0r&n g$ac$20384$U0r&n) (null? (case-lambda ((g$T$29331$U0r&n) (if g$T$29331$U0r&n (g$C$29330$U0r&n g$ac$20384$U0r&n) (car (case-lambda ((g$V$29332$U0r&n) (g$f$20382$U0r&n (case-lambda ((g$V$29333$U0r&n) (cons (case-lambda ((g$V$29334$U0r&n) (cdr (case-lambda ((g$V$29335$U0r&n) (g$rev-map-append$17172$U0r&n g$C$29330$U0r&n g$f$20382$U0r&n g$V$29335$U0r&n g$V$29334$U0r&n))) g$ls$20383$U0r&n))) g$V$29333$U0r&n g$ac$20384$U0r&n))) g$V$29332$U0r&n))) g$ls$20383$U0r&n)))) g$ls$20383$U0r&n)))))) (library-letrec*-identity 'g$rev-map-append$17172$U0r&n))) (g$build-exports$17173$U0r&n g$build-exports$20764$U0r&n ((case-lambda ((g$C$29834$U0r&n) (g$C$29834$U0r&n (case-lambda ((g$C$29339$U0r&n g$lex*+loc*$20385$U0r&n g$init*$20386$U0r&n) (g$rev-map-append$17172$U0r&n (case-lambda ((g$V$29340$U0r&n) (g$build-void$16495$U0r&n (case-lambda ((g$V$29341$U0r&n) (cons (case-lambda ((g$V$29342$U0r&n) (g$build-sequence$16494$U0r&n g$C$29339$U0r&n '#f g$V$29342$U0r&n))) g$V$29341$U0r&n g$V$29340$U0r&n)))))) (case-lambda ((g$C$29336$U0r&n g$x$20387$U0r&n) (car (case-lambda ((g$V$29337$U0r&n) (cdr (case-lambda ((g$V$29338$U0r&n) (list g$C$29336$U0r&n 'set! g$V$29338$U0r&n g$V$29337$U0r&n))) g$x$20387$U0r&n))) g$x$20387$U0r&n))) g$lex*+loc*$20385$U0r&n g$init*$20386$U0r&n)))))) (library-letrec*-identity 'g$build-exports$17173$U0r&n))) (g$make-export-subst$17174$U0r&n g$make-export-subst$20765$U0r&n ((case-lambda ((g$C$29835$U0r&n) (g$C$29835$U0r&n (case-lambda ((g$C$29349$U0r&n g$name*$20388$U0r&n g$id*$20389$U0r&n) (g$map$12753$U0r&n g$C$29349$U0r&n (case-lambda ((g$C$29347$U0r&n g$name$20390$U0r&n g$id$20391$U0r&n) (g$id->label$16582$U0r&n (case-lambda ((g$V$29348$U0r&n) ((case-lambda ((g$C$29343$U0r&n g$label$20392$U0r&n) ((case-lambda ((g$J$29345$U0r&n) (not (case-lambda ((g$T$29346$U0r&n) (if g$T$29346$U0r&n (g$syntax-violation$17186$U0r&n g$J$29345$U0r&n '#f '"cannot export unbound identifier" g$id$20391$U0r&n) (void g$J$29345$U0r&n)))) g$label$20392$U0r&n))) (case-lambda (g$IGNORE$29344$U0r&n (cons g$C$29343$U0r&n g$name$20390$U0r&n g$label$20392$U0r&n)))))) g$C$29347$U0r&n g$V$29348$U0r&n))) g$id$20391$U0r&n))) g$name*$20388$U0r&n g$id*$20389$U0r&n)))))) (library-letrec*-identity 'g$make-export-subst$17174$U0r&n))) (g$make-export-env/macros$17175$U0r&n g$make-export-env/macros$20766$U0r&n ((case-lambda ((g$C$29836$U0r&n) (g$C$29836$U0r&n (case-lambda ((g$C$29422$U0r&n g$lex*$20393$U0r&n g$loc*$20394$U0r&n g$r$20395$U0r&n) ((case-lambda ((g$C$29420$U0r&n g$lookup$20396$U0r&n) (begin (set! g$lookup$20396$U0r&n (case-lambda ((g$C$29359$U0r&n g$x$20412$U0r&n) ((case-lambda ((g$C$29358$U0r&n g$f$20413$U0r&n) ((case-lambda ((g$C$29351$U0r&n g$f$29350$U0r&n) (begin (set! g$f$20413$U0r&n g$f$29350$U0r&n) (g$C$29351$U0r&n g$f$20413$U0r&n)))) g$C$29358$U0r&n (case-lambda ((g$C$29352$U0r&n g$x$20414$U0r&n g$lex*$20415$U0r&n g$loc*$20416$U0r&n) (pair? (case-lambda ((g$T$29353$U0r&n) (if g$T$29353$U0r&n (car (case-lambda ((g$V$29354$U0r&n) (eq? (case-lambda ((g$T$29355$U0r&n) (if g$T$29355$U0r&n (car g$C$29352$U0r&n g$loc*$20416$U0r&n) (cdr (case-lambda ((g$V$29356$U0r&n) (cdr (case-lambda ((g$V$29357$U0r&n) (g$f$20413$U0r&n g$C$29352$U0r&n g$x$20414$U0r&n g$V$29357$U0r&n g$V$29356$U0r&n))) g$lex*$20415$U0r&n))) g$loc*$20416$U0r&n)))) g$x$20414$U0r&n g$V$29354$U0r&n))) g$lex*$20415$U0r&n) (g$assertion-violation$13786$U0r&n g$C$29352$U0r&n 'lookup-make-export '"BUG")))) g$lex*$20415$U0r&n)))))) (case-lambda ((g$V$29360$U0r&n) (g$V$29360$U0r&n g$C$29359$U0r&n g$x$20412$U0r&n g$lex*$20393$U0r&n g$loc*$20394$U0r&n))) uninitialized)))) ((case-lambda ((g$C$29419$U0r&n g$f$20397$U0r&n) ((case-lambda ((g$C$29362$U0r&n g$f$29361$U0r&n) (begin (set! g$f$20397$U0r&n g$f$29361$U0r&n) (g$C$29362$U0r&n g$f$20397$U0r&n)))) g$C$29419$U0r&n (case-lambda ((g$C$29416$U0r&n g$r$20398$U0r&n g$env$20399$U0r&n g$global*$20400$U0r&n g$macro*$20401$U0r&n) (null? (case-lambda ((g$T$29417$U0r&n) (if g$T$29417$U0r&n (values g$C$29416$U0r&n g$env$20399$U0r&n g$global*$20400$U0r&n g$macro*$20401$U0r&n) (car (case-lambda ((g$V$29418$U0r&n) ((case-lambda ((g$C$29413$U0r&n g$x$20402$U0r&n) (cdr (case-lambda ((g$V$29414$U0r&n) (car (case-lambda ((g$V$29415$U0r&n) ((case-lambda ((g$C$29411$U0r&n g$label$20403$U0r&n g$b$20404$U0r&n) (g$binding-type$16586$U0r&n (case-lambda ((g$V$29412$U0r&n) ((case-lambda ((g$C$29397$U0r&n g$t$20405$U0r&n) (eqv? (case-lambda ((g$T$29398$U0r&n) (if g$T$29398$U0r&n (g$binding-value$16587$U0r&n (case-lambda ((g$V$29399$U0r&n) ((case-lambda ((g$C$29370$U0r&n g$v$20406$U0r&n) ((case-lambda ((g$J$29374$U0r&n) (g$lexical-mutable?$17012$U0r&n (case-lambda ((g$T$29375$U0r&n) (if g$T$29375$U0r&n (g$J$29374$U0r&n 'mutable) (g$J$29374$U0r&n 'global)))) g$v$20406$U0r&n))) (case-lambda ((g$V$29371$U0r&n) (g$lexical-var$17011$U0r&n (case-lambda ((g$V$29372$U0r&n) (g$lookup$20396$U0r&n (case-lambda ((g$V$29373$U0r&n) ((case-lambda ((g$C$29363$U0r&n g$loc$20407$U0r&n g$type$20408$U0r&n) (g$lexical-var$17011$U0r&n (case-lambda ((g$V$29364$U0r&n) (cons (case-lambda ((g$V$29365$U0r&n) (cons (case-lambda ((g$V$29366$U0r&n) (g$cons*$12755$U0r&n (case-lambda ((g$V$29367$U0r&n) (cons (case-lambda ((g$V$29368$U0r&n) (cdr (case-lambda ((g$V$29369$U0r&n) (g$f$20397$U0r&n g$C$29363$U0r&n g$V$29369$U0r&n g$V$29368$U0r&n g$V$29366$U0r&n g$macro*$20401$U0r&n))) g$r$20398$U0r&n))) g$V$29367$U0r&n g$env$20399$U0r&n))) g$label$20403$U0r&n g$type$20408$U0r&n g$loc$20407$U0r&n))) g$V$29365$U0r&n g$global*$20400$U0r&n))) g$V$29364$U0r&n g$loc$20407$U0r&n))) g$v$20406$U0r&n))) g$C$29370$U0r&n g$V$29373$U0r&n g$V$29371$U0r&n))) g$V$29372$U0r&n))) g$v$20406$U0r&n)))))) g$C$29397$U0r&n g$V$29399$U0r&n))) g$b$20404$U0r&n) (eqv? (case-lambda ((g$T$29400$U0r&n) (if g$T$29400$U0r&n (gensym (case-lambda ((g$V$29401$U0r&n) ((case-lambda ((g$C$29376$U0r&n g$loc$20409$U0r&n) (g$binding-value$16587$U0r&n (case-lambda ((g$V$29377$U0r&n) (cons (case-lambda ((g$V$29378$U0r&n) (cons (case-lambda ((g$V$29379$U0r&n) (g$cons*$12755$U0r&n (case-lambda ((g$V$29380$U0r&n) (cons (case-lambda ((g$V$29381$U0r&n) (cdr (case-lambda ((g$V$29382$U0r&n) (g$f$20397$U0r&n g$C$29376$U0r&n g$V$29382$U0r&n g$V$29381$U0r&n g$global*$20400$U0r&n g$V$29379$U0r&n))) g$r$20398$U0r&n))) g$V$29380$U0r&n g$env$20399$U0r&n))) g$label$20403$U0r&n 'global-macro g$loc$20409$U0r&n))) g$V$29378$U0r&n g$macro*$20401$U0r&n))) g$loc$20409$U0r&n g$V$29377$U0r&n))) g$b$20404$U0r&n))) g$C$29397$U0r&n g$V$29401$U0r&n)))) (eqv? (case-lambda ((g$T$29402$U0r&n) (if g$T$29402$U0r&n (gensym (case-lambda ((g$V$29403$U0r&n) ((case-lambda ((g$C$29383$U0r&n g$loc$20410$U0r&n) (g$binding-value$16587$U0r&n (case-lambda ((g$V$29384$U0r&n) (cons (case-lambda ((g$V$29385$U0r&n) (cons (case-lambda ((g$V$29386$U0r&n) (g$cons*$12755$U0r&n (case-lambda ((g$V$29387$U0r&n) (cons (case-lambda ((g$V$29388$U0r&n) (cdr (case-lambda ((g$V$29389$U0r&n) (g$f$20397$U0r&n g$C$29383$U0r&n g$V$29389$U0r&n g$V$29388$U0r&n g$global*$20400$U0r&n g$V$29386$U0r&n))) g$r$20398$U0r&n))) g$V$29387$U0r&n g$env$20399$U0r&n))) g$label$20403$U0r&n 'global-macro! g$loc$20410$U0r&n))) g$V$29385$U0r&n g$macro*$20401$U0r&n))) g$loc$20410$U0r&n g$V$29384$U0r&n))) g$b$20404$U0r&n))) g$C$29397$U0r&n g$V$29403$U0r&n)))) (eqv? (case-lambda ((g$T$29404$U0r&n) (if g$T$29404$U0r&n (gensym (case-lambda ((g$V$29405$U0r&n) ((case-lambda ((g$C$29390$U0r&n g$loc$20411$U0r&n) (g$binding-value$16587$U0r&n (case-lambda ((g$V$29391$U0r&n) (cons (case-lambda ((g$V$29392$U0r&n) (cons (case-lambda ((g$V$29393$U0r&n) (g$cons*$12755$U0r&n (case-lambda ((g$V$29394$U0r&n) (cons (case-lambda ((g$V$29395$U0r&n) (cdr (case-lambda ((g$V$29396$U0r&n) (g$f$20397$U0r&n g$C$29390$U0r&n g$V$29396$U0r&n g$V$29395$U0r&n g$global*$20400$U0r&n g$V$29393$U0r&n))) g$r$20398$U0r&n))) g$V$29394$U0r&n g$env$20399$U0r&n))) g$label$20403$U0r&n 'global-ctv g$loc$20411$U0r&n))) g$V$29392$U0r&n g$macro*$20401$U0r&n))) g$loc$20411$U0r&n g$V$29391$U0r&n))) g$b$20404$U0r&n))) g$C$29397$U0r&n g$V$29405$U0r&n)))) (g$memv$12746$U0r&n (case-lambda ((g$T$29406$U0r&n) (if g$T$29406$U0r&n (cons (case-lambda ((g$V$29407$U0r&n) (cdr (case-lambda ((g$V$29408$U0r&n) (g$f$20397$U0r&n g$C$29397$U0r&n g$V$29408$U0r&n g$V$29407$U0r&n g$global*$20400$U0r&n g$macro*$20401$U0r&n))) g$r$20398$U0r&n))) g$x$20402$U0r&n g$env$20399$U0r&n) (g$binding-value$16587$U0r&n (case-lambda ((g$V$29409$U0r&n) (g$binding-type$16586$U0r&n (case-lambda ((g$V$29410$U0r&n) (g$assertion-violation$13786$U0r&n g$C$29397$U0r&n 'expander '"BUG: do not know how to export" g$V$29410$U0r&n g$V$29409$U0r&n))) g$b$20404$U0r&n))) g$b$20404$U0r&n)))) g$t$20405$U0r&n '($rtd $module))))) g$t$20405$U0r&n 'local-ctv)))) g$t$20405$U0r&n 'local-macro!)))) g$t$20405$U0r&n 'local-macro)))) g$t$20405$U0r&n 'lexical))) g$C$29411$U0r&n g$V$29412$U0r&n))) g$b$20404$U0r&n))) g$C$29413$U0r&n g$V$29415$U0r&n g$V$29414$U0r&n))) g$x$20402$U0r&n))) g$x$20402$U0r&n))) g$C$29416$U0r&n g$V$29418$U0r&n))) g$r$20398$U0r&n)))) g$r$20398$U0r&n)))))) (case-lambda ((g$V$29421$U0r&n) (g$V$29421$U0r&n g$C$29420$U0r&n g$r$20395$U0r&n '() '() '()))) uninitialized)))) g$C$29422$U0r&n uninitialized)))))) (library-letrec*-identity 'g$make-export-env/macros$17175$U0r&n))) (g$generate-temporaries$17176$U0r&n g$generate-temporaries$20767$U0r&n ((case-lambda ((g$C$29837$U0r&n) (g$C$29837$U0r&n (case-lambda ((g$C$29438$U0r&n g$ls$20417$U0r&n) ((case-lambda ((g$C$29436$U0r&n g$t$20418$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$29437$U0r&n) ((case-lambda ((g$C$29435$U0r&n g$ls/false$20419$U0r&n) (if g$ls/false$20419$U0r&n (apply g$C$29435$U0r&n (case-lambda ((g$C$29430$U0r&n g$ls$20420$U0r&n) (g$map$12753$U0r&n g$C$29430$U0r&n (case-lambda ((g$C$29427$U0r&n g$x$20421$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$29428$U0r&n) ((case-lambda ((g$C$29424$U0r&n g$x$20422$U0r&n) (g$symbol?$13496$U0r&n (case-lambda ((g$V$29425$U0r&n) ((case-lambda ((g$C$29423$U0r&n g$t$20423$U0r&n) (if g$t$20423$U0r&n (g$C$29423$U0r&n g$t$20423$U0r&n) (string? g$C$29423$U0r&n g$x$20422$U0r&n)))) (case-lambda ((g$T$29426$U0r&n) (if g$T$29426$U0r&n (gensym g$C$29424$U0r&n g$x$20422$U0r&n) (gensym g$C$29424$U0r&n 't)))) g$V$29425$U0r&n))) g$x$20422$U0r&n))) (case-lambda ((g$V$29429$U0r&n) (g$make-stx$16542$U0r&n g$C$29427$U0r&n g$V$29429$U0r&n g$top-mark*$16502$U0r&n '() '()))) g$V$29428$U0r&n))) g$x$20421$U0r&n))) g$ls$20420$U0r&n))) g$ls/false$20419$U0r&n) ((case-lambda ((g$C$29433$U0r&n g$t$20424$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$29434$U0r&n) ((case-lambda ((g$C$29432$U0r&n g$ls/false$20425$U0r&n) (if g$ls/false$20425$U0r&n (apply g$C$29432$U0r&n (case-lambda ((g$C$29431$U0r&n) (g$assertion-violation$13786$U0r&n g$C$29431$U0r&n 'generate-temporaries '"not a list"))) g$ls/false$20425$U0r&n) (g$syntax-violation$17186$U0r&n g$C$29432$U0r&n '#f '"invalid syntax" g$t$20424$U0r&n)))) g$C$29433$U0r&n g$V$29434$U0r&n))) g$t$20424$U0r&n '_))) g$C$29435$U0r&n g$t$20418$U0r&n)))) g$C$29436$U0r&n g$V$29437$U0r&n))) g$t$20418$U0r&n 'each-any))) g$C$29438$U0r&n g$ls$20417$U0r&n)))))) (library-letrec*-identity 'g$generate-temporaries$17176$U0r&n))) (g$free-identifier=?$17177$U0r&n g$free-identifier=?$20768$U0r&n ((case-lambda ((g$C$29838$U0r&n) (g$C$29838$U0r&n (case-lambda ((g$C$29439$U0r&n g$x$20426$U0r&n g$y$20427$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$T$29440$U0r&n) (if g$T$29440$U0r&n (g$id?$16569$U0r&n (case-lambda ((g$T$29441$U0r&n) (if g$T$29441$U0r&n (g$free-id=?$16573$U0r&n g$C$29439$U0r&n g$x$20426$U0r&n g$y$20427$U0r&n) (g$assertion-violation$13786$U0r&n g$C$29439$U0r&n 'free-identifier=? '"not an identifier" g$y$20427$U0r&n)))) g$y$20427$U0r&n) (g$assertion-violation$13786$U0r&n g$C$29439$U0r&n 'free-identifier=? '"not an identifier" g$x$20426$U0r&n)))) g$x$20426$U0r&n)))))) (library-letrec*-identity 'g$free-identifier=?$17177$U0r&n))) (g$bound-identifier=?$17178$U0r&n g$bound-identifier=?$20769$U0r&n ((case-lambda ((g$C$29839$U0r&n) (g$C$29839$U0r&n (case-lambda ((g$C$29442$U0r&n g$x$20428$U0r&n g$y$20429$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$T$29443$U0r&n) (if g$T$29443$U0r&n (g$id?$16569$U0r&n (case-lambda ((g$T$29444$U0r&n) (if g$T$29444$U0r&n (g$bound-id=?$16572$U0r&n g$C$29442$U0r&n g$x$20428$U0r&n g$y$20429$U0r&n) (g$assertion-violation$13786$U0r&n g$C$29442$U0r&n 'bound-identifier=? '"not an identifier" g$y$20429$U0r&n)))) g$y$20429$U0r&n) (g$assertion-violation$13786$U0r&n g$C$29442$U0r&n 'bound-identifier=? '"not an identifier" g$x$20428$U0r&n)))) g$x$20428$U0r&n)))))) (library-letrec*-identity 'g$bound-identifier=?$17178$U0r&n))) (g$make-source-condition$17179$U0r&n g$make-source-condition$20770$U0r&n ((case-lambda ((g$C$29840$U0r&n) (g$C$29840$U0r&n (case-lambda ((g$C$29458$U0r&n g$x$20430$U0r&n) ((case-lambda ((g$C$29445$U0r&n g$11523$20431$U0r&n g$11525$20432$U0r&n g$11524$20433$U0r&n g$11522$20436$U0r&n g$make-source-condition$20437$U0r&n g$11520$20438$U0r&n g$11521$20439$U0r&n g$source-condition?$20440$U0r&n g$source-filename$20441$U0r&n g$source-character$20442$U0r&n) (make-record-type-descriptor (case-lambda ((g$V$29446$U0r&n) (begin (set! g$11523$20431$U0r&n g$V$29446$U0r&n) (begin (set! g$11525$20432$U0r&n '#f) (make-record-constructor-descriptor (case-lambda ((g$V$29447$U0r&n) (begin (set! g$11524$20433$U0r&n g$V$29447$U0r&n) (record-predicate (case-lambda ((g$V$29448$U0r&n) (begin (set! g$11522$20436$U0r&n g$V$29448$U0r&n) (record-constructor (case-lambda ((g$V$29449$U0r&n) (begin (set! g$make-source-condition$20437$U0r&n g$V$29449$U0r&n) (record-accessor (case-lambda ((g$V$29450$U0r&n) (begin (set! g$11520$20438$U0r&n g$V$29450$U0r&n) (record-accessor (case-lambda ((g$V$29451$U0r&n) (begin (set! g$11521$20439$U0r&n g$V$29451$U0r&n) (condition-predicate (case-lambda ((g$V$29452$U0r&n) (begin (set! g$source-condition?$20440$U0r&n g$V$29452$U0r&n) (condition-accessor (case-lambda ((g$V$29453$U0r&n) (begin (set! g$source-filename$20441$U0r&n g$V$29453$U0r&n) (condition-accessor (case-lambda ((g$V$29454$U0r&n) (begin (set! g$source-character$20442$U0r&n g$V$29454$U0r&n) (pair? (case-lambda ((g$T$29455$U0r&n) (if g$T$29455$U0r&n (cdr (case-lambda ((g$V$29456$U0r&n) (car (case-lambda ((g$V$29457$U0r&n) (g$make-source-condition$20437$U0r&n g$C$29445$U0r&n g$V$29457$U0r&n g$V$29456$U0r&n))) g$x$20430$U0r&n))) g$x$20430$U0r&n) (condition g$C$29445$U0r&n)))) g$x$20430$U0r&n)))) g$11523$20431$U0r&n g$11521$20439$U0r&n)))) g$11523$20431$U0r&n g$11520$20438$U0r&n)))) g$11523$20431$U0r&n)))) g$11523$20431$U0r&n '1)))) g$11523$20431$U0r&n '0)))) g$11524$20433$U0r&n)))) g$11523$20431$U0r&n)))) g$11523$20431$U0r&n g$&condition-rcd$14196$U0r&n g$11525$20432$U0r&n))))) '&source-information g$&condition-rtd$14195$U0r&n 'g$11526$U0r&n '#f '#f '#((immutable file-name) (immutable character))))) g$C$29458$U0r&n uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized)))))) (library-letrec*-identity 'g$make-source-condition$17179$U0r&n))) (g$extract-position-condition$17180$U0r&n g$extract-position-condition$20771$U0r&n ((case-lambda ((g$C$29841$U0r&n) (g$C$29841$U0r&n (case-lambda ((g$C$29459$U0r&n g$x$20443$U0r&n) (g$expression-position$17181$U0r&n (case-lambda ((g$V$29460$U0r&n) (g$make-source-condition$17179$U0r&n g$C$29459$U0r&n g$V$29460$U0r&n))) g$x$20443$U0r&n)))))) (library-letrec*-identity 'g$extract-position-condition$17180$U0r&n))) (g$expression-position$17181$U0r&n g$expression-position$20772$U0r&n ((case-lambda ((g$C$29842$U0r&n) (g$C$29842$U0r&n (case-lambda ((g$C$29463$U0r&n g$x$20444$U0r&n) (g$stx?$16541$U0r&n (case-lambda ((g$T$29464$U0r&n) (if g$T$29464$U0r&n (g$stx-expr$16543$U0r&n (case-lambda ((g$V$29465$U0r&n) ((case-lambda ((g$C$29461$U0r&n g$x$20445$U0r&n) (annotation? (case-lambda ((g$T$29462$U0r&n) (if g$T$29462$U0r&n (annotation-source g$C$29461$U0r&n g$x$20445$U0r&n) (g$C$29461$U0r&n '#f)))) g$x$20445$U0r&n))) g$C$29463$U0r&n g$V$29465$U0r&n))) g$x$20444$U0r&n) (g$C$29463$U0r&n '#f)))) g$x$20444$U0r&n)))))) (library-letrec*-identity 'g$expression-position$17181$U0r&n))) (g$assertion-error$17182$U0r&n g$assertion-error$20773$U0r&n ((case-lambda ((g$C$29843$U0r&n) (g$C$29843$U0r&n (case-lambda ((g$C$29466$U0r&n g$expr$20446$U0r&n g$pos$20447$U0r&n) (g$make-source-condition$17179$U0r&n (case-lambda ((g$V$29467$U0r&n) (list (case-lambda ((g$V$29468$U0r&n) (g$make-irritants-condition$14251$U0r&n (case-lambda ((g$V$29469$U0r&n) (g$make-message-condition$14201$U0r&n (case-lambda ((g$V$29470$U0r&n) (g$make-who-condition$14261$U0r&n (case-lambda ((g$V$29471$U0r&n) (g$make-assertion-violation$14243$U0r&n (case-lambda ((g$V$29472$U0r&n) (condition (case-lambda ((g$V$29473$U0r&n) (g$raise$13784$U0r&n g$C$29466$U0r&n g$V$29473$U0r&n))) g$V$29472$U0r&n g$V$29471$U0r&n g$V$29470$U0r&n g$V$29469$U0r&n g$V$29467$U0r&n)))))) 'assert))) '"assertion failed"))) g$V$29468$U0r&n))) g$expr$20446$U0r&n))) g$pos$20447$U0r&n)))))) (library-letrec*-identity 'g$assertion-error$17182$U0r&n))) (g$syntax-error$17183$U0r&n g$syntax-error$20774$U0r&n ((case-lambda ((g$C$29844$U0r&n) (g$C$29844$U0r&n (case-lambda ((g$C$29474$U0r&n g$x$20448$U0r&n . g$args$20449$U0r&n) ((case-lambda ((g$J$29485$U0r&n) (g$for-all$12751$U0r&n (case-lambda ((g$V$29486$U0r&n) (not (case-lambda ((g$T$29487$U0r&n) (if g$T$29487$U0r&n (g$assertion-violation$13786$U0r&n g$J$29485$U0r&n 'syntax-error '"invalid argument" g$args$20449$U0r&n) (void g$J$29485$U0r&n)))) g$V$29486$U0r&n))) string? g$args$20449$U0r&n))) (case-lambda (g$IGNORE$29475$U0r&n (g$extract-trace$17184$U0r&n (case-lambda ((g$V$29476$U0r&n) (g$extract-position-condition$17180$U0r&n (case-lambda ((g$V$29477$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$29478$U0r&n) (g$make-syntax-violation$14295$U0r&n (case-lambda ((g$V$29479$U0r&n) ((case-lambda ((g$J$29483$U0r&n) (null? (case-lambda ((g$T$29484$U0r&n) (if g$T$29484$U0r&n (g$J$29483$U0r&n '"invalid syntax") (apply g$J$29483$U0r&n string-append g$args$20449$U0r&n)))) g$args$20449$U0r&n))) (case-lambda ((g$V$29480$U0r&n) (g$make-message-condition$14201$U0r&n (case-lambda ((g$V$29481$U0r&n) (condition (case-lambda ((g$V$29482$U0r&n) (g$raise$13784$U0r&n g$C$29474$U0r&n g$V$29482$U0r&n))) g$V$29481$U0r&n g$V$29479$U0r&n g$V$29477$U0r&n g$V$29476$U0r&n))) g$V$29480$U0r&n)))))) g$V$29478$U0r&n '#f))) g$x$20448$U0r&n))) g$x$20448$U0r&n))) g$x$20448$U0r&n))))))))) (library-letrec*-identity 'g$syntax-error$17183$U0r&n))) (g$extract-trace$17184$U0r&n g$extract-trace$20775$U0r&n ((case-lambda ((g$C$29845$U0r&n) (g$C$29845$U0r&n (case-lambda ((g$C$29507$U0r&n g$x$20450$U0r&n) ((case-lambda ((g$C$29498$U0r&n g$11548$20451$U0r&n g$11550$20452$U0r&n g$11549$20453$U0r&n g$11547$20456$U0r&n g$make-trace$20457$U0r&n g$11546$20458$U0r&n g$trace?$20459$U0r&n g$trace-form$20460$U0r&n) (make-record-type-descriptor (case-lambda ((g$V$29499$U0r&n) (begin (set! g$11548$20451$U0r&n g$V$29499$U0r&n) (begin (set! g$11550$20452$U0r&n '#f) (make-record-constructor-descriptor (case-lambda ((g$V$29500$U0r&n) (begin (set! g$11549$20453$U0r&n g$V$29500$U0r&n) (record-predicate (case-lambda ((g$V$29501$U0r&n) (begin (set! g$11547$20456$U0r&n g$V$29501$U0r&n) (record-constructor (case-lambda ((g$V$29502$U0r&n) (begin (set! g$make-trace$20457$U0r&n g$V$29502$U0r&n) (record-accessor (case-lambda ((g$V$29503$U0r&n) (begin (set! g$11546$20458$U0r&n g$V$29503$U0r&n) (condition-predicate (case-lambda ((g$V$29504$U0r&n) (begin (set! g$trace?$20459$U0r&n g$V$29504$U0r&n) (condition-accessor (case-lambda ((g$V$29505$U0r&n) (begin (set! g$trace-form$20460$U0r&n g$V$29505$U0r&n) ((case-lambda ((g$C$29497$U0r&n g$f$20461$U0r&n) ((case-lambda ((g$C$29489$U0r&n g$f$29488$U0r&n) (begin (set! g$f$20461$U0r&n g$f$29488$U0r&n) (g$C$29489$U0r&n g$f$20461$U0r&n)))) g$C$29497$U0r&n (case-lambda ((g$C$29490$U0r&n g$x$20462$U0r&n) (g$stx?$16541$U0r&n (case-lambda ((g$T$29491$U0r&n) (if g$T$29491$U0r&n (g$stx-ae*$16546$U0r&n (case-lambda ((g$V$29492$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$29493$U0r&n) (g$make-trace$20457$U0r&n (case-lambda ((g$V$29494$U0r&n) (apply g$C$29490$U0r&n condition g$V$29494$U0r&n g$V$29493$U0r&n))) g$x$20462$U0r&n))) g$f$20461$U0r&n g$V$29492$U0r&n))) g$x$20462$U0r&n) (annotation? (case-lambda ((g$T$29495$U0r&n) (if g$T$29495$U0r&n (g$make-stx$16542$U0r&n (case-lambda ((g$V$29496$U0r&n) (g$make-trace$20457$U0r&n g$C$29490$U0r&n g$V$29496$U0r&n))) g$x$20462$U0r&n '() '() '()) (condition g$C$29490$U0r&n)))) g$x$20462$U0r&n)))) g$x$20462$U0r&n)))))) (case-lambda ((g$V$29506$U0r&n) (g$V$29506$U0r&n g$C$29498$U0r&n g$x$20450$U0r&n))) uninitialized)))) g$11548$20451$U0r&n g$11546$20458$U0r&n)))) g$11548$20451$U0r&n)))) g$11548$20451$U0r&n '0)))) g$11549$20453$U0r&n)))) g$11548$20451$U0r&n)))) g$11548$20451$U0r&n g$&condition-rcd$14196$U0r&n g$11550$20452$U0r&n))))) '&trace g$&condition-rtd$14195$U0r&n 'g$11551$U0r&n '#f '#f '#((immutable form))))) g$C$29507$U0r&n uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized)))))) (library-letrec*-identity 'g$extract-trace$17184$U0r&n))) (g$syntax-violation*$17185$U0r&n g$syntax-violation*$20776$U0r&n ((case-lambda ((g$C$29846$U0r&n) (g$C$29846$U0r&n (case-lambda ((g$C$29534$U0r&n g$who$20463$U0r&n g$msg$20464$U0r&n g$form$20465$U0r&n g$condition-object$20466$U0r&n) ((case-lambda ((g$J$29541$U0r&n) (string? (case-lambda ((g$V$29542$U0r&n) (not (case-lambda ((g$T$29543$U0r&n) (if g$T$29543$U0r&n (g$assertion-violation$13786$U0r&n g$J$29541$U0r&n 'syntax-violation '"message is not a string" g$msg$20464$U0r&n) (void g$J$29541$U0r&n)))) g$V$29542$U0r&n))) g$msg$20464$U0r&n))) (case-lambda (g$IGNORE$29535$U0r&n ((case-lambda ((g$J$29537$U0r&n) (string? (case-lambda ((g$V$29538$U0r&n) ((case-lambda ((g$C$29515$U0r&n g$t$20468$U0r&n) (if g$t$20468$U0r&n (g$C$29515$U0r&n g$t$20468$U0r&n) (g$symbol?$13496$U0r&n g$C$29515$U0r&n g$who$20463$U0r&n)))) (case-lambda ((g$T$29539$U0r&n) (if g$T$29539$U0r&n (g$J$29537$U0r&n g$who$20463$U0r&n) (not (case-lambda ((g$T$29540$U0r&n) (if g$T$29540$U0r&n ((case-lambda ((g$C$29532$U0r&n g$t$20469$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$29533$U0r&n) ((case-lambda ((g$C$29529$U0r&n g$ls/false$20470$U0r&n) ((case-lambda ((g$J$29531$U0r&n) (if g$ls/false$20470$U0r&n (apply g$J$29531$U0r&n (case-lambda ((g$C$29516$U0r&n g$id$20471$U0r&n) (g$id?$16569$U0r&n g$C$29516$U0r&n g$id$20471$U0r&n))) g$ls/false$20470$U0r&n) (g$J$29531$U0r&n '#f)))) (case-lambda ((g$T$29530$U0r&n) (if g$T$29530$U0r&n (apply g$C$29529$U0r&n (case-lambda ((g$C$29517$U0r&n g$id$20472$U0r&n) (g$syntax->datum$17189$U0r&n g$C$29517$U0r&n g$id$20472$U0r&n))) g$ls/false$20470$U0r&n) ((case-lambda ((g$C$29527$U0r&n g$t$20473$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$29528$U0r&n) ((case-lambda ((g$C$29524$U0r&n g$ls/false$20474$U0r&n) ((case-lambda ((g$J$29526$U0r&n) (if g$ls/false$20474$U0r&n (apply g$J$29526$U0r&n (case-lambda ((g$C$29518$U0r&n g$id$20475$U0r&n g$rest$20476$U0r&n) (g$id?$16569$U0r&n g$C$29518$U0r&n g$id$20475$U0r&n))) g$ls/false$20474$U0r&n) (g$J$29526$U0r&n '#f)))) (case-lambda ((g$T$29525$U0r&n) (if g$T$29525$U0r&n (apply g$C$29524$U0r&n (case-lambda ((g$C$29519$U0r&n g$id$20477$U0r&n g$rest$20478$U0r&n) (g$syntax->datum$17189$U0r&n g$C$29519$U0r&n g$id$20477$U0r&n))) g$ls/false$20474$U0r&n) ((case-lambda ((g$C$29522$U0r&n g$t$20479$U0r&n) (g$syntax-dispatch$17067$U0r&n (case-lambda ((g$V$29523$U0r&n) ((case-lambda ((g$C$29521$U0r&n g$ls/false$20480$U0r&n) (if g$ls/false$20480$U0r&n (apply g$C$29521$U0r&n (case-lambda ((g$C$29520$U0r&n) (g$C$29520$U0r&n '#f))) g$ls/false$20480$U0r&n) (g$syntax-violation$17186$U0r&n g$C$29521$U0r&n '#f '"invalid syntax" g$t$20479$U0r&n)))) g$C$29522$U0r&n g$V$29523$U0r&n))) g$t$20479$U0r&n '_))) g$C$29524$U0r&n g$t$20473$U0r&n))))))) g$C$29527$U0r&n g$V$29528$U0r&n))) g$t$20473$U0r&n '(any . any)))) g$C$29529$U0r&n g$t$20469$U0r&n))))))) g$C$29532$U0r&n g$V$29533$U0r&n))) g$t$20469$U0r&n 'any))) g$J$29537$U0r&n g$form$20465$U0r&n) (g$assertion-violation$13786$U0r&n g$J$29537$U0r&n 'syntax-violation '"invalid who argument" g$who$20463$U0r&n)))) g$who$20463$U0r&n)))) g$V$29538$U0r&n))) g$who$20463$U0r&n))) (case-lambda ((g$V$29536$U0r&n) ((case-lambda ((g$C$29508$U0r&n g$who$20467$U0r&n) (g$extract-trace$17184$U0r&n (case-lambda ((g$V$29509$U0r&n) (g$extract-position-condition$17180$U0r&n (case-lambda ((g$V$29510$U0r&n) (g$make-message-condition$14201$U0r&n (case-lambda ((g$V$29511$U0r&n) ((case-lambda ((g$J$29514$U0r&n) (if g$who$20467$U0r&n (g$make-who-condition$14261$U0r&n g$J$29514$U0r&n g$who$20467$U0r&n) (condition g$J$29514$U0r&n)))) (case-lambda ((g$V$29512$U0r&n) (condition (case-lambda ((g$V$29513$U0r&n) (g$raise$13784$U0r&n g$C$29508$U0r&n g$V$29513$U0r&n))) g$V$29512$U0r&n g$V$29511$U0r&n g$condition-object$20466$U0r&n g$V$29510$U0r&n g$V$29509$U0r&n)))))) g$msg$20464$U0r&n))) g$form$20465$U0r&n))) g$form$20465$U0r&n))) g$C$29534$U0r&n g$V$29536$U0r&n)))))))))))) (library-letrec*-identity 'g$syntax-violation*$17185$U0r&n))) (g$syntax-violation$17186$U0r&n g$syntax-violation$20777$U0r&n ((case-lambda ((g$C$29847$U0r&n) (g$C$29847$U0r&n (case-lambda ((g$C$29544$U0r&n g$who$20481$U0r&n g$msg$20482$U0r&n g$form$20483$U0r&n) (g$syntax-violation$17186$U0r&n g$C$29544$U0r&n g$who$20481$U0r&n g$msg$20482$U0r&n g$form$20483$U0r&n '#f)) ((g$C$29544$U0r&n g$who$20484$U0r&n g$msg$20485$U0r&n g$form$20486$U0r&n g$subform$20487$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$29545$U0r&n) (g$syntax->datum$17189$U0r&n (case-lambda ((g$V$29546$U0r&n) (g$make-syntax-violation$14295$U0r&n (case-lambda ((g$V$29547$U0r&n) (g$syntax-violation*$17185$U0r&n g$C$29544$U0r&n g$who$20484$U0r&n g$msg$20485$U0r&n g$form$20486$U0r&n g$V$29547$U0r&n))) g$V$29546$U0r&n g$V$29545$U0r&n))) g$form$20486$U0r&n))) g$subform$20487$U0r&n)))))) (library-letrec*-identity 'g$syntax-violation$17186$U0r&n))) (g$identifier?$17187$U0r&n g$identifier?$20778$U0r&n ((case-lambda ((g$C$29848$U0r&n) (g$C$29848$U0r&n (case-lambda ((g$C$29548$U0r&n g$x$20488$U0r&n) (g$id?$16569$U0r&n g$C$29548$U0r&n g$x$20488$U0r&n)))))) (library-letrec*-identity 'g$identifier?$17187$U0r&n))) (g$datum->syntax$17188$U0r&n g$datum->syntax$20779$U0r&n ((case-lambda ((g$C$29849$U0r&n) (g$C$29849$U0r&n (case-lambda ((g$C$29549$U0r&n g$id$20489$U0r&n g$datum$20490$U0r&n) (g$id?$16569$U0r&n (case-lambda ((g$T$29550$U0r&n) (if g$T$29550$U0r&n (g$datum->stx$16552$U0r&n g$C$29549$U0r&n g$id$20489$U0r&n g$datum$20490$U0r&n) (g$assertion-violation$13786$U0r&n g$C$29549$U0r&n 'datum->syntax '"not an identifier" g$id$20489$U0r&n)))) g$id$20489$U0r&n)))))) (library-letrec*-identity 'g$datum->syntax$17188$U0r&n))) (g$syntax->datum$17189$U0r&n g$syntax->datum$20780$U0r&n ((case-lambda ((g$C$29850$U0r&n) (g$C$29850$U0r&n (case-lambda ((g$C$29551$U0r&n g$x$20491$U0r&n) (g$stx->datum$16580$U0r&n g$C$29551$U0r&n g$x$20491$U0r&n)))))) (library-letrec*-identity 'g$syntax->datum$17189$U0r&n))) (g$compile-r6rs-top-level$17190$U0r&n g$compile-r6rs-top-level$20781$U0r&n ((case-lambda ((g$C$29851$U0r&n) (g$C$29851$U0r&n (case-lambda ((g$C$29558$U0r&n g$x*$20492$U0r&n) (call-with-values g$C$29558$U0r&n (case-lambda ((g$C$29552$U0r&n) (g$top-level-expander$17130$U0r&n g$C$29552$U0r&n g$x*$20492$U0r&n))) (case-lambda ((g$C$29557$U0r&n g$lib*$20495$U0r&n g$invoke-code$20496$U0r&n) ((case-lambda ((g$C$29556$U0r&n g$invoke-code$20497$U0r&n g$lib*$20498$U0r&n) (g$C$29556$U0r&n (case-lambda ((g$C$29553$U0r&n) (g$for-each$12754$U0r&n (case-lambda (g$IGNORE$29554$U0r&n (g$expanded->core$16005$U0r&n (case-lambda ((g$V$29555$U0r&n) (eval-core g$C$29553$U0r&n g$V$29555$U0r&n))) g$invoke-code$20497$U0r&n))) g$invoke-library$16272$U0r&n g$lib*$20498$U0r&n)))))) g$C$29557$U0r&n g$invoke-code$20496$U0r&n g$lib*$20495$U0r&n))))))))) (library-letrec*-identity 'g$compile-r6rs-top-level$17190$U0r&n))) (g$pre-compile-r6rs-top-level$17191$U0r&n g$pre-compile-r6rs-top-level$20782$U0r&n ((case-lambda ((g$C$29852$U0r&n) (g$C$29852$U0r&n (case-lambda ((g$C$29564$U0r&n g$x*$20499$U0r&n) (call-with-values g$C$29564$U0r&n (case-lambda ((g$C$29559$U0r&n) (g$top-level-expander$17130$U0r&n g$C$29559$U0r&n g$x*$20499$U0r&n))) (case-lambda ((g$C$29563$U0r&n g$lib*$20502$U0r&n g$invoke-code$20503$U0r&n) ((case-lambda ((g$C$29560$U0r&n g$invoke-code$20504$U0r&n g$lib*$20505$U0r&n) (g$for-each$12754$U0r&n (case-lambda (g$IGNORE$29561$U0r&n (g$expanded->core$16005$U0r&n (case-lambda ((g$V$29562$U0r&n) (compile-core g$C$29560$U0r&n g$V$29562$U0r&n))) g$invoke-code$20504$U0r&n))) g$invoke-library$16272$U0r&n g$lib*$20505$U0r&n))) g$C$29563$U0r&n g$invoke-code$20503$U0r&n g$lib*$20502$U0r&n))))))))) (library-letrec*-identity 'g$pre-compile-r6rs-top-level$17191$U0r&n))) (g$new-interaction-environment$17192$U0r&n g$new-interaction-environment$20783$U0r&n ((case-lambda ((g$C$29853$U0r&n) (g$C$29853$U0r&n (case-lambda ((g$C$29575$U0r&n) (g$make-empty-rib$16527$U0r&n (case-lambda ((g$V$29576$U0r&n) (g$find-library-by-name$16265$U0r&n (case-lambda ((g$V$29577$U0r&n) ((case-lambda ((g$C$29572$U0r&n g$lib$20506$U0r&n g$rib$20507$U0r&n) (g$library-subst$16229$U0r&n (case-lambda ((g$V$29573$U0r&n) ((case-lambda ((g$C$29566$U0r&n g$subst$20508$U0r&n) (g$map$12753$U0r&n (case-lambda ((g$V$29567$U0r&n) (g$set-rib-sym*!$16522$U0r&n (case-lambda (g$IGNORE$29568$U0r&n (g$map$12753$U0r&n (case-lambda ((g$V$29569$U0r&n) (g$set-rib-mark**!$16523$U0r&n (case-lambda (g$IGNORE$29570$U0r&n (g$map$12753$U0r&n (case-lambda ((g$V$29571$U0r&n) (g$set-rib-label*!$16524$U0r&n g$C$29566$U0r&n g$rib$20507$U0r&n g$V$29571$U0r&n))) cdr g$subst$20508$U0r&n))) g$rib$20507$U0r&n g$V$29569$U0r&n))) (case-lambda ((g$C$29565$U0r&n g$x$20509$U0r&n) (g$C$29565$U0r&n g$top-mark*$16502$U0r&n))) g$subst$20508$U0r&n))) g$rib$20507$U0r&n g$V$29567$U0r&n))) car g$subst$20508$U0r&n))) (case-lambda (g$IGNORE$29574$U0r&n (g$make-interaction-env$17151$U0r&n g$C$29572$U0r&n g$rib$20507$U0r&n '() '()))) g$V$29573$U0r&n))) g$lib$20506$U0r&n))) g$C$29575$U0r&n g$V$29577$U0r&n g$V$29576$U0r&n))) '(ironscheme)))))))))) (library-letrec*-identity 'g$new-interaction-environment$17192$U0r&n))) (g$interaction-environment$17193$U0r&n g$interaction-environment$20784$U0r&n ((case-lambda ((g$C$29854$U0r&n) ((case-lambda ((g$C$29581$U0r&n g$e$20510$U0r&n) (g$C$29581$U0r&n (case-lambda ((g$C$29580$U0r&n) ((case-lambda ((g$C$29578$U0r&n g$t$20511$U0r&n) (if g$t$20511$U0r&n (g$C$29578$U0r&n g$t$20511$U0r&n) (g$new-interaction-environment$17192$U0r&n (case-lambda ((g$V$29579$U0r&n) (begin (set! g$e$20510$U0r&n g$V$29579$U0r&n) (g$C$29578$U0r&n g$e$20510$U0r&n)))))))) g$C$29580$U0r&n g$e$20510$U0r&n)))))) g$C$29854$U0r&n '#f))) (library-letrec*-identity 'g$interaction-environment$17193$U0r&n))) (g$top-level-context$17194$U0r&n g$top-level-context$20785$U0r&n ((case-lambda ((g$C$29855$U0r&n) (g$make-parameter$15428$U0r&n g$C$29855$U0r&n '#f))) (library-letrec*-identity 'g$top-level-context$17194$U0r&n)))) (g$current-library-expander$16262$U0r&n identity-for-cps g$library-expander$17170$U0r&n))(library-letrec* (psyntax primlocs) () (g$current-primitive-locations$16002$U0r&n (case-lambda (g$IGNORE$29859$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29860$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29861$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29862$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29863$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29864$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29865$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29866$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29867$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29868$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29869$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29870$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29871$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29872$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29873$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29874$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29875$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29876$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29877$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29878$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29879$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29880$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29881$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29882$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29883$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29884$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29885$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29886$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29887$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29888$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29889$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29890$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29891$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29892$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29893$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29894$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29895$U0r&n (g$install-library$16270$U0r&n (case-lambda (g$IGNORE$29896$U0r&n (g$install-library$16270$U0r&n identity-for-cps 'g$12193$U0r&n '(psyntax system $bootstrap) '() '() '() '() '((compile-core . g$12131$U0r&n) (eval-core . g$12130$U0r&n) (set-symbol-value! . g$12128$U0r&n) (symbol-value . g$12127$U0r&n) (gensym . g$12124$U0r&n) (void . g$12123$U0r&n)) '() values values '#f '#f '#f '#f))) 'g$12192$U0r&n '(psyntax system $all) '() '() '() '() '((ellipsis-map . g$8470$U0r&n) (&no-nans-rcd . g$6717$U0r&n) (&no-nans-rtd . g$6716$U0r&n) (&no-infinities-rcd . g$6704$U0r&n) (&no-infinities-rtd . g$6703$U0r&n) (&i/o-encoding-rcd . g$6691$U0r&n) (&i/o-encoding-rtd . g$6690$U0r&n) (&i/o-decoding-rcd . g$6676$U0r&n) (&i/o-decoding-rtd . g$6675$U0r&n) (&i/o-port-rcd . g$6663$U0r&n) (&i/o-port-rtd . g$6662$U0r&n) (&i/o-file-does-not-exist-rcd . g$6648$U0r&n) (&i/o-file-does-not-exist-rtd . g$6647$U0r&n) (&i/o-file-already-exists-rcd . g$6635$U0r&n) (&i/o-file-already-exists-rtd . g$6634$U0r&n) (&i/o-file-is-read-only-rcd . g$6622$U0r&n) (&i/o-file-is-read-only-rtd . g$6621$U0r&n) (&i/o-file-protection-rcd . g$6609$U0r&n) (&i/o-file-protection-rtd . g$6608$U0r&n) (&i/o-filename-rcd . g$6596$U0r&n) (&i/o-filename-rtd . g$6595$U0r&n) (&i/o-invalid-position-rcd . g$6581$U0r&n) (&i/o-invalid-position-rtd . g$6580$U0r&n) (&i/o-write-rcd . g$6566$U0r&n) (&i/o-write-rtd . g$6565$U0r&n) (&i/o-read-rcd . g$6553$U0r&n) (&i/o-read-rtd . g$6552$U0r&n) (&i/o-rcd . g$6540$U0r&n) (&i/o-rtd . g$6539$U0r&n) (&undefined-rcd . g$6527$U0r&n) (&undefined-rtd . g$6526$U0r&n) (&syntax-rcd . g$6514$U0r&n) (&syntax-rtd . g$6513$U0r&n) (&lexical-rcd . g$6497$U0r&n) (&lexical-rtd . g$6496$U0r&n) (&implementation-restriction-rcd . g$6484$U0r&n) (&implementation-restriction-rtd . g$6483$U0r&n) (&non-continuable-rcd . g$6471$U0r&n) (&non-continuable-rtd . g$6470$U0r&n) (&who-rcd . g$6458$U0r&n) (&who-rtd . g$6457$U0r&n) (&irritants-rcd . g$6443$U0r&n) (&irritants-rtd . g$6442$U0r&n) (&assertion-rcd . g$6428$U0r&n) (&assertion-rtd . g$6427$U0r&n) (&violation-rcd . g$6415$U0r&n) (&violation-rtd . g$6414$U0r&n) (&error-rcd . g$6402$U0r&n) (&error-rtd . g$6401$U0r&n) (&serious-rcd . g$6389$U0r&n) (&serious-rtd . g$6388$U0r&n) (&warning-rcd . g$6376$U0r&n) (&warning-rtd . g$6375$U0r&n) (&message-rcd . g$6363$U0r&n) (&message-rtd . g$6362$U0r&n) (&condition-rcd . g$6323$U0r&n) (&condition-rtd . g$6322$U0r&n) (library-letrec* . g$12155$U0r&n) (annotation-stripped . g$12154$U0r&n) (annotation-source . g$12153$U0r&n) (annotation-expression . g$12152$U0r&n) (annotation? . g$12151$U0r&n) (read-annotated . g$12150$U0r&n) (tanh . g$12149$U0r&n) (cosh . g$12148$U0r&n) (sinh . g$12147$U0r&n) (make-guid . g$12146$U0r&n) (unspecified? . g$12145$U0r&n) (make-list . g$5555$U0r&n) (last-pair . g$5554$U0r&n) (load-r5rs . g$12144$U0r&n) (license . g$12143$U0r&n) (stacktrace . g$12142$U0r&n) (ironscheme-build . g$11618$U0r&n) (define-clr-class-internal . g$12141$U0r&n) (clr-field-set!-internal . g$12140$U0r&n) (clr-field-get-internal . g$12139$U0r&n) (clr-cast-internal . g$12138$U0r&n) (clr-call-internal . g$12137$U0r&n) (clr-new-internal . g$12136$U0r&n) (clr-new-array-internal . g$12135$U0r&n) (clr-is-internal . g$12134$U0r&n) (clr-reference-internal . g$12133$U0r&n) (clr-using-internal . g$12132$U0r&n) (syntax-error . g$8590$U0r&n) (syntax-dispatch . g$8465$U0r&n) (compile-core . g$12131$U0r&n) (eval-core . g$12130$U0r&n) (remove-location . g$12129$U0r&n) (set-symbol-value! . g$12128$U0r&n) (symbol-value . g$12127$U0r&n) (symbol-bound? . g$12126$U0r&n) (ungensym . g$12125$U0r&n) (gensym . g$12124$U0r&n) (void . g$12123$U0r&n) (load-serialized-library . g$12122$U0r&n) (serialize-library . g$12121$U0r&n) (compile-system-libraries . g$11622$U0r&n) (compile->closure . g$11624$U0r&n) (compile . g$11623$U0r&n) (load . g$11617$U0r&n) (string-normalize . g$12120$U0r&n) (interaction-environment . g$8600$U0r&n) (char-ready? . g$12119$U0r&n) (string-upcase . g$12118$U0r&n) (string-titlecase . g$12117$U0r&n) (string-normalize-nfkd . g$6800$U0r&n) (string-normalize-nfkc . g$6799$U0r&n) (string-normalize-nfd . g$6798$U0r&n) (string-normalize-nfc . g$6797$U0r&n) (string-foldcase . g$12116$U0r&n) (string-downcase . g$12115$U0r&n) (string-ci>? . g$6784$U0r&n) (string-ci>=? . g$6786$U0r&n) (string-ci=? . g$6782$U0r&n) (string-ci<? . g$6783$U0r&n) (string-ci<=? . g$6785$U0r&n) (char-whitespace? . g$12114$U0r&n) (char-upper-case? . g$12113$U0r&n) (char-title-case? . g$12112$U0r&n) (char-numeric? . g$12111$U0r&n) (char-lower-case? . g$12110$U0r&n) (char-general-category . g$12109$U0r&n) (char-upcase . g$12108$U0r&n) (char-titlecase . g$12107$U0r&n) (char-foldcase . g$12106$U0r&n) (char-downcase . g$12105$U0r&n) (char-ci>? . g$6794$U0r&n) (char-ci>=? . g$6796$U0r&n) (char-ci=? . g$6792$U0r&n) (char-ci<? . g$6793$U0r&n) (char-ci<=? . g$6795$U0r&n) (char-alphabetic? . g$12104$U0r&n) (variable-transformer-procedure . g$8277$U0r&n) (variable-transformer? . g$8276$U0r&n) (make-variable-transformer . g$8274$U0r&n) (identifier? . g$8594$U0r&n) (generate-temporaries . g$8583$U0r&n) (free-identifier=? . g$8584$U0r&n) (syntax->datum . g$8596$U0r&n) (datum->syntax . g$8595$U0r&n) (bound-identifier=? . g$8585$U0r&n) (record-type-descriptor? . g$12103$U0r&n) (record-predicate . g$12102$U0r&n) (record-mutator . g$12101$U0r&n) (record-constructor . g$12100$U0r&n) (record-accessor . g$12099$U0r&n) (make-record-type-descriptor . g$12098$U0r&n) (make-record-constructor-descriptor . g$12097$U0r&n) (record? . g$12096$U0r&n) (record-type-uid . g$12095$U0r&n) (record-type-sealed? . g$12094$U0r&n) (record-type-parent . g$12093$U0r&n) (record-type-opaque? . g$12092$U0r&n) (record-type-name . g$12091$U0r&n) (record-type-generative? . g$12090$U0r&n) (record-type-field-names . g$12089$U0r&n) (record-rtd . g$12088$U0r&n) (record-field-mutable? . g$12087$U0r&n) (delete-file . g$6168$U0r&n) (file-exists? . g$6167$U0r&n) (vector-sort! . g$12086$U0r&n) (vector-sort . g$12085$U0r&n) (list-sort . g$6753$U0r&n) (symbol-hash . g$12084$U0r&n) (string-ci-hash . g$12083$U0r&n) (string-hash . g$12082$U0r&n) (equal-hash . g$12081$U0r&n) (hashtable-equivalence-function . g$12080$U0r&n) (make-hashtable . g$12079$U0r&n) (hashtable-hash-function . g$12078$U0r&n) (make-eqv-hashtable . g$6135$U0r&n) (make-eq-hashtable . g$6134$U0r&n) (hashtable? . g$12077$U0r&n) (hashtable-update! . g$6141$U0r&n) (hashtable-size . g$6136$U0r&n) (hashtable-set! . g$6138$U0r&n) (hashtable-ref . g$6137$U0r&n) (hashtable-mutable? . g$12076$U0r&n) (hashtable-keys . g$12075$U0r&n) (hashtable-entries . g$12074$U0r&n) (hashtable-delete! . g$6139$U0r&n) (hashtable-copy . g$12073$U0r&n) (hashtable-contains? . g$6140$U0r&n) (hashtable-clear! . g$6142$U0r&n) (call-with-output-file . g$7096$U0r&n) (call-with-input-file . g$7095$U0r&n) (write-char . g$7087$U0r&n) (write . g$12072$U0r&n) (with-output-to-file . g$7094$U0r&n) (with-input-from-file . g$7093$U0r&n) (read-char . g$7086$U0r&n) (read . g$12071$U0r&n) (peek-char . g$7085$U0r&n) (open-output-file . g$12070$U0r&n) (open-input-file . g$12069$U0r&n) (newline . g$7097$U0r&n) (display . g$12068$U0r&n) (close-output-port . g$12067$U0r&n) (close-input-port . g$12066$U0r&n) (eof-object? . g$12065$U0r&n) (eof-object . g$12064$U0r&n) (current-error-port . g$12063$U0r&n) (current-output-port . g$12062$U0r&n) (current-input-port . g$12061$U0r&n) (output-port? . g$12060$U0r&n) (input-port? . g$12059$U0r&n) (utf-8-codec . g$12058$U0r&n) (utf-16-codec . g$12057$U0r&n) (transcoder-error-handling-mode . g$12056$U0r&n) (transcoder-eol-style . g$12055$U0r&n) (transcoder-codec . g$12054$U0r&n) (transcoded-port . g$12053$U0r&n) (textual-port? . g$12052$U0r&n) (string->bytevector . g$12051$U0r&n) (standard-output-port . g$12050$U0r&n) (standard-input-port . g$12049$U0r&n) (standard-error-port . g$12048$U0r&n) (set-port-position! . g$12047$U0r&n) (put-u8 . g$12046$U0r&n) (put-string . g$12045$U0r&n) (put-datum . g$7065$U0r&n) (put-char . g$12044$U0r&n) (put-bytevector . g$12043$U0r&n) (port? . g$7070$U0r&n) (port-transcoder . g$12042$U0r&n) (port-position . g$12041$U0r&n) (port-has-set-port-position!? . g$12040$U0r&n) (port-has-port-position? . g$12039$U0r&n) (port-eof? . g$12038$U0r&n) (output-port-buffer-mode . g$12037$U0r&n) (open-string-output-port . g$7069$U0r&n) (open-string-input-port . g$12036$U0r&n) (open-file-output-port . g$12035$U0r&n) (open-file-input/output-port . g$12034$U0r&n) (open-file-input-port . g$12033$U0r&n) (open-bytevector-output-port . g$12032$U0r&n) (open-bytevector-input-port . g$12031$U0r&n) (native-transcoder . g$12030$U0r&n) (native-eol-style . g$12029$U0r&n) (make-transcoder . g$12028$U0r&n) (latin-1-codec . g$12027$U0r&n) (make-i/o-write-error . g$6563$U0r&n) (make-i/o-read-error . g$6550$U0r&n) (make-i/o-port-error . g$6658$U0r&n) (make-i/o-invalid-position-error . g$6576$U0r&n) (make-i/o-filename-error . g$6591$U0r&n) (make-i/o-file-protection-error . g$6606$U0r&n) (make-i/o-file-is-read-only-error . g$6619$U0r&n) (make-i/o-file-does-not-exist-error . g$6645$U0r&n) (make-i/o-file-already-exists-error . g$6632$U0r&n) (make-i/o-error . g$6537$U0r&n) (make-i/o-encoding-error . g$6686$U0r&n) (make-i/o-decoding-error . g$6673$U0r&n) (make-custom-textual-output-port . g$12026$U0r&n) (make-custom-textual-input/output-port . g$12025$U0r&n) (make-custom-textual-input-port . g$12024$U0r&n) (make-custom-binary-output-port . g$12023$U0r&n) (make-custom-binary-input/output-port . g$12022$U0r&n) (make-custom-binary-input-port . g$12021$U0r&n) (make-bytevector . g$12020$U0r&n) (lookahead-u8 . g$12019$U0r&n) (lookahead-char . g$12018$U0r&n) (i/o-write-error? . g$6564$U0r&n) (i/o-read-error? . g$6551$U0r&n) (i/o-port-error? . g$6660$U0r&n) (i/o-invalid-position-error? . g$6578$U0r&n) (i/o-error-position . g$6579$U0r&n) (i/o-filename-error? . g$6593$U0r&n) (i/o-file-protection-error? . g$6607$U0r&n) (i/o-file-is-read-only-error? . g$6620$U0r&n) (i/o-file-does-not-exist-error? . g$6646$U0r&n) (i/o-file-already-exists-error? . g$6633$U0r&n) (i/o-error? . g$6538$U0r&n) (i/o-error-port . g$6661$U0r&n) (i/o-error-filename . g$6594$U0r&n) (i/o-encoding-error? . g$6688$U0r&n) (i/o-encoding-error-char . g$6689$U0r&n) (i/o-decoding-error? . g$6674$U0r&n) (get-u8 . g$12017$U0r&n) (get-string-n! . g$12016$U0r&n) (get-string-n . g$12015$U0r&n) (get-string-all . g$12014$U0r&n) (get-line . g$12013$U0r&n) (get-datum . g$7066$U0r&n) (get-char . g$12012$U0r&n) (get-bytevector-some . g$12011$U0r&n) (get-bytevector-n! . g$12010$U0r&n) (get-bytevector-n . g$12009$U0r&n) (get-bytevector-all . g$12008$U0r&n) (flush-output-port . g$12007$U0r&n) (close-port . g$12006$U0r&n) (call-with-string-output-port . g$7071$U0r&n) (call-with-port . g$7072$U0r&n) (call-with-bytevector-output-port . g$12005$U0r&n) (bytevector->string . g$12004$U0r&n) (buffer-mode? . g$12003$U0r&n) (binary-port? . g$12002$U0r&n) (scheme-report-environment . g$8573$U0r&n) (quotient . g$6732$U0r&n) (null-environment . g$8572$U0r&n) (remainder . g$6733$U0r&n) (modulo . g$6734$U0r&n) (inexact->exact . g$6729$U0r&n) (force . g$6736$U0r&n) (exact->inexact . g$6730$U0r&n) (exit . g$12001$U0r&n) (command-line . g$11613$U0r&n) (string-fill! . g$12000$U0r&n) (string-set! . g$11999$U0r&n) (set-cdr! . g$11998$U0r&n) (set-car! . g$11997$U0r&n) (remove . g$5577$U0r&n) (remv . g$5578$U0r&n) (remp . g$5558$U0r&n) (remq . g$5579$U0r&n) (partition . g$5557$U0r&n) (memv . g$5565$U0r&n) (memq . g$5564$U0r&n) (memp . g$5567$U0r&n) (member . g$5566$U0r&n) (exists . g$5571$U0r&n) (for-all . g$5570$U0r&n) (fold-right . g$5576$U0r&n) (fold-left . g$5575$U0r&n) (find . g$5556$U0r&n) (filter . g$5559$U0r&n) (cons* . g$5574$U0r&n) (assv . g$5561$U0r&n) (assq . g$5560$U0r&n) (assp . g$5563$U0r&n) (assoc . g$5562$U0r&n) (with-exception-handler . g$6289$U0r&n) (raise-continuable . g$6292$U0r&n) (raise . g$6291$U0r&n) (eval . g$8575$U0r&n) (environment . g$8571$U0r&n) (make-enumeration . g$7157$U0r&n) (enum-set=? . g$7164$U0r&n) (enum-set-universe . g$7158$U0r&n) (enum-set-union . g$7165$U0r&n) (enum-set-subset? . g$7163$U0r&n) (enum-set-projection . g$7169$U0r&n) (enum-set-member? . g$7162$U0r&n) (enum-set-intersection . g$7166$U0r&n) (enum-set-indexer . g$7159$U0r&n) (enum-set-difference . g$7167$U0r&n) (enum-set-constructor . g$7160$U0r&n) (enum-set-complement . g$7168$U0r&n) (enum-set->list . g$7161$U0r&n) (who-condition? . g$6455$U0r&n) (warning? . g$6374$U0r&n) (violation? . g$6413$U0r&n) (undefined-violation? . g$6525$U0r&n) (syntax-violation? . g$6510$U0r&n) (syntax-violation-subform . g$6512$U0r&n) (syntax-violation-form . g$6511$U0r&n) (syntax-violation . g$8593$U0r&n) (simple-conditions . g$11996$U0r&n) (serious-condition? . g$6387$U0r&n) (non-continuable-violation? . g$6469$U0r&n) (message-condition? . g$6360$U0r&n) (make-who-condition . g$6453$U0r&n) (make-warning . g$6373$U0r&n) (make-violation . g$6412$U0r&n) (make-undefined-violation . g$6524$U0r&n) (make-syntax-violation . g$6507$U0r&n) (make-serious-condition . g$6386$U0r&n) (make-non-continuable-violation . g$6468$U0r&n) (make-message-condition . g$6358$U0r&n) (make-lexical-violation . g$6494$U0r&n) (make-irritants-condition . g$6438$U0r&n) (make-implementation-restriction-violation . g$6481$U0r&n) (make-error . g$6399$U0r&n) (make-assertion-violation . g$6425$U0r&n) (lexical-violation? . g$6495$U0r&n) (irritants-condition? . g$6440$U0r&n) (implementation-restriction-violation? . g$6482$U0r&n) (error? . g$6400$U0r&n) (condition-who . g$6456$U0r&n) (condition-predicate . g$11995$U0r&n) (condition-message . g$6361$U0r&n) (condition-irritants . g$6441$U0r&n) (condition-accessor . g$11994$U0r&n) (condition . g$11993$U0r&n) (assertion-violation? . g$6426$U0r&n) (condition? . g$11992$U0r&n) (utf32->string . g$11991$U0r&n) (utf16->string . g$11990$U0r&n) (utf8->string . g$11989$U0r&n) (uint-list->bytevector . g$11988$U0r&n) (u8-list->bytevector . g$11987$U0r&n) (string->utf8 . g$11986$U0r&n) (string->utf32 . g$11985$U0r&n) (string->utf16 . g$11984$U0r&n) (sint-list->bytevector . g$11983$U0r&n) (native-endianness . g$6174$U0r&n) (bytevector? . g$5876$U0r&n) (bytevector=? . g$11982$U0r&n) (bytevector-uint-set! . g$11981$U0r&n) (bytevector-uint-ref . g$11980$U0r&n) (bytevector-u8-set! . g$11979$U0r&n) (bytevector-u8-ref . g$11978$U0r&n) (bytevector-u64-set! . g$6195$U0r&n) (bytevector-u64-ref . g$6191$U0r&n) (bytevector-u64-native-set! . g$6197$U0r&n) (bytevector-u64-native-ref . g$6193$U0r&n) (bytevector-u32-set! . g$6187$U0r&n) (bytevector-u32-ref . g$6183$U0r&n) (bytevector-u32-native-set! . g$6189$U0r&n) (bytevector-u32-native-ref . g$6185$U0r&n) (bytevector-u16-set! . g$6179$U0r&n) (bytevector-u16-ref . g$6175$U0r&n) (bytevector-u16-native-set! . g$6181$U0r&n) (bytevector-u16-native-ref . g$6177$U0r&n) (bytevector-sint-set! . g$11977$U0r&n) (bytevector-sint-ref . g$11976$U0r&n) (bytevector-s8-set! . g$11975$U0r&n) (bytevector-s8-ref . g$11974$U0r&n) (bytevector-s64-set! . g$6196$U0r&n) (bytevector-s64-ref . g$6192$U0r&n) (bytevector-s64-native-set! . g$6198$U0r&n) (bytevector-s64-native-ref . g$6194$U0r&n) (bytevector-s32-set! . g$6188$U0r&n) (bytevector-s32-ref . g$6184$U0r&n) (bytevector-s32-native-set! . g$6190$U0r&n) (bytevector-s32-native-ref . g$6186$U0r&n) (bytevector-s16-set! . g$6180$U0r&n) (bytevector-s16-ref . g$6176$U0r&n) (bytevector-s16-native-set! . g$6182$U0r&n) (bytevector-s16-native-ref . g$6178$U0r&n) (bytevector-length . g$11973$U0r&n) (bytevector-ieee-single-set! . g$11972$U0r&n) (bytevector-ieee-single-ref . g$11971$U0r&n) (bytevector-ieee-single-native-set! . g$6201$U0r&n) (bytevector-ieee-single-native-ref . g$6199$U0r&n) (bytevector-ieee-double-set! . g$11970$U0r&n) (bytevector-ieee-double-ref . g$11969$U0r&n) (bytevector-ieee-double-native-set! . g$6202$U0r&n) (bytevector-ieee-double-native-ref . g$6200$U0r&n) (bytevector-fill! . g$11968$U0r&n) (bytevector-copy! . g$11967$U0r&n) (bytevector-copy . g$11966$U0r&n) (bytevector->uint-list . g$11965$U0r&n) (bytevector->u8-list . g$11964$U0r&n) (bytevector->sint-list . g$11963$U0r&n) (no-nans-violation? . g$6715$U0r&n) (no-infinities-violation? . g$6702$U0r&n) (make-no-nans-violation . g$6714$U0r&n) (make-no-infinities-violation . g$6701$U0r&n) (real->flonum . g$11962$U0r&n) (flzero? . g$7011$U0r&n) (fltruncate . g$7006$U0r&n) (fltan . g$6996$U0r&n) (flsqrt . g$7001$U0r&n) (flsin . g$6994$U0r&n) (flround . g$7007$U0r&n) (flpositive? . g$7009$U0r&n) (flonum? . g$5881$U0r&n) (flodd? . g$7013$U0r&n) (flnumerator . g$11961$U0r&n) (flnegative? . g$7010$U0r&n) (flnan? . g$6993$U0r&n) (flmod0 . g$6987$U0r&n) (flmod . g$6986$U0r&n) (flmin . g$7015$U0r&n) (flmax . g$7014$U0r&n) (fllog . g$7000$U0r&n) (flinteger? . g$6990$U0r&n) (flinfinite? . g$6992$U0r&n) (flfloor . g$7005$U0r&n) (flfinite? . g$6991$U0r&n) (flexpt . g$7003$U0r&n) (flexp . g$7002$U0r&n) (fleven? . g$7012$U0r&n) (fldiv0-and-mod0 . g$6989$U0r&n) (fldiv0 . g$11960$U0r&n) (fldiv-and-mod . g$6988$U0r&n) (fldiv . g$11959$U0r&n) (fldenominator . g$11958$U0r&n) (flcos . g$6995$U0r&n) (flceiling . g$7004$U0r&n) (flatan . g$6999$U0r&n) (flasin . g$6997$U0r&n) (flacos . g$6998$U0r&n) (flabs . g$7008$U0r&n) (fl>? . g$11957$U0r&n) (fl>=? . g$11956$U0r&n) (fl=? . g$11955$U0r&n) (fl<? . g$11954$U0r&n) (fl<=? . g$11953$U0r&n) (fl/ . g$11952$U0r&n) (fl- . g$11951$U0r&n) (fl+ . g$11950$U0r&n) (fl* . g$11949$U0r&n) (fixnum->flonum . g$11948$U0r&n) (fxzero? . g$6907$U0r&n) (fxxor . g$11947$U0r&n) (fxrotate-bit-field . g$6921$U0r&n) (fxreverse-bit-field . g$11946$U0r&n) (fxpositive? . g$6905$U0r&n) (fxodd? . g$6909$U0r&n) (fxnot . g$11945$U0r&n) (fxnegative? . g$6906$U0r&n) (fxmod0 . g$6902$U0r&n) (fxmod . g$6901$U0r&n) (fxmin . g$6911$U0r&n) (fxmax . g$6910$U0r&n) (fxlength . g$11944$U0r&n) (fxior . g$11943$U0r&n) (fxif . g$6915$U0r&n) (fxfirst-bit-set . g$11942$U0r&n) (fxeven? . g$6908$U0r&n) (fxdiv0-and-mod0 . g$6904$U0r&n) (fxdiv0 . g$11941$U0r&n) (fxdiv-and-mod . g$6903$U0r&n) (fxdiv . g$11940$U0r&n) (fxcopy-bit-field . g$6918$U0r&n) (fxcopy-bit . g$6916$U0r&n) (fxbit-set? . g$11939$U0r&n) (fxbit-field . g$6917$U0r&n) (fxbit-count . g$11938$U0r&n) (fxarithmetic-shift-right . g$6920$U0r&n) (fxarithmetic-shift-left . g$6919$U0r&n) (fxarithmetic-shift . g$11937$U0r&n) (fxand . g$11936$U0r&n) (fx>? . g$11935$U0r&n) (fx>=? . g$11934$U0r&n) (fx=? . g$11933$U0r&n) (fx<? . g$11932$U0r&n) (fx<=? . g$11931$U0r&n) (fx-/carry . g$6913$U0r&n) (fx- . g$11930$U0r&n) (fx+/carry . g$6914$U0r&n) (fx+ . g$11929$U0r&n) (fx*/carry . g$6912$U0r&n) (fx* . g$11928$U0r&n) (greatest-fixnum . g$11927$U0r&n) (least-fixnum . g$11926$U0r&n) (fixnum-width . g$5882$U0r&n) (fixnum? . g$5880$U0r&n) (bitwise-rotate-bit-field . g$6864$U0r&n) (bitwise-reverse-bit-field . g$11925$U0r&n) (bitwise-length . g$11924$U0r&n) (bitwise-if . g$6858$U0r&n) (bitwise-first-bit-set . g$11923$U0r&n) (bitwise-copy-bit-field . g$6861$U0r&n) (bitwise-copy-bit . g$6859$U0r&n) (bitwise-bit-set? . g$11922$U0r&n) (bitwise-bit-field . g$6860$U0r&n) (bitwise-bit-count . g$11921$U0r&n) (bitwise-xor . g$11920$U0r&n) (bitwise-ior . g$11919$U0r&n) (bitwise-and . g$11918$U0r&n) (bitwise-not . g$11917$U0r&n) (bitwise-arithmetic-shift-right . g$6863$U0r&n) (bitwise-arithmetic-shift-left . g$6862$U0r&n) (bitwise-arithmetic-shift . g$11916$U0r&n) (zero? . g$5916$U0r&n) (vector? . g$5875$U0r&n) (vector-set! . g$11915$U0r&n) (vector-ref . g$11914$U0r&n) (vector-map . g$5948$U0r&n) (vector-length . g$11913$U0r&n) (vector-for-each . g$5949$U0r&n) (vector-fill! . g$5883$U0r&n) (vector->list . g$11912$U0r&n) (vector . g$11911$U0r&n) (values . g$11910$U0r&n) (truncate . g$11909$U0r&n) (tan . g$11908$U0r&n) (symbol? . g$5877$U0r&n) (symbol=? . g$5933$U0r&n) (symbol->string . g$11907$U0r&n) (substring . g$11906$U0r&n) (string? . g$11905$U0r&n) (string>? . g$5930$U0r&n) (string>=? . g$5932$U0r&n) (string=? . g$5928$U0r&n) (string<? . g$5929$U0r&n) (string<=? . g$5931$U0r&n) (string-ref . g$11904$U0r&n) (string-length . g$11903$U0r&n) (string-for-each . g$5950$U0r&n) (string-copy . g$11902$U0r&n) (string-append . g$11901$U0r&n) (string->symbol . g$11900$U0r&n) (string->number . g$11899$U0r&n) (string->list . g$11898$U0r&n) (string . g$11897$U0r&n) (sqrt . g$11896$U0r&n) (sin . g$11895$U0r&n) (round . g$11894$U0r&n) (reverse . g$5885$U0r&n) (real? . g$11893$U0r&n) (real-valued? . g$11892$U0r&n) (real-part . g$11891$U0r&n) (rationalize . g$5945$U0r&n) (rational? . g$11890$U0r&n) (rational-valued? . g$11889$U0r&n) (procedure? . g$5879$U0r&n) (positive? . g$5914$U0r&n) (pair? . g$11888$U0r&n) (odd? . g$5918$U0r&n) (numerator . g$11887$U0r&n) (number? . g$11886$U0r&n) (number->string . g$11885$U0r&n) (null? . g$11884$U0r&n) (not . g$11883$U0r&n) (negative? . g$5915$U0r&n) (nan? . g$11882$U0r&n) (min . g$5920$U0r&n) (max . g$5919$U0r&n) (map . g$5572$U0r&n) (make-vector . g$11881$U0r&n) (make-string . g$11880$U0r&n) (make-rectangular . g$11879$U0r&n) (make-polar . g$11878$U0r&n) (magnitude . g$11877$U0r&n) (log . g$11876$U0r&n) (list? . g$11875$U0r&n) (list-tail . g$5552$U0r&n) (list-ref . g$5553$U0r&n) (list->vector . g$5872$U0r&n) (list->string . g$5873$U0r&n) (list . g$11874$U0r&n) (length . g$11873$U0r&n) (lcm . g$5922$U0r&n) (integer? . g$11872$U0r&n) (integer-valued? . g$11871$U0r&n) (integer->char . g$11870$U0r&n) (infinite? . g$11869$U0r&n) (inexact? . g$11868$U0r&n) (inexact . g$11867$U0r&n) (imag-part . g$11866$U0r&n) (gcd . g$5921$U0r&n) (for-each . g$5573$U0r&n) (floor . g$11865$U0r&n) (finite? . g$11864$U0r&n) (expt . g$11863$U0r&n) (exp . g$11862$U0r&n) (exact? . g$11861$U0r&n) (exact-integer-sqrt . g$11860$U0r&n) (exact . g$11859$U0r&n) (even? . g$5917$U0r&n) (error . g$6294$U0r&n) (eqv? . g$11858$U0r&n) (equal? . g$11857$U0r&n) (eq? . g$11856$U0r&n) (dynamic-wind . g$11855$U0r&n) (div0-and-mod0 . g$5871$U0r&n) (mod0 . g$5869$U0r&n) (div0 . g$11854$U0r&n) (div-and-mod . g$5870$U0r&n) (mod . g$5868$U0r&n) (div . g$11853$U0r&n) (denominator . g$11852$U0r&n) (cos . g$11851$U0r&n) (cons . g$11850$U0r&n) (complex? . g$11849$U0r&n) (char? . g$5874$U0r&n) (char>? . g$5942$U0r&n) (char>=? . g$5944$U0r&n) (char=? . g$5940$U0r&n) (char<? . g$5941$U0r&n) (char<=? . g$5943$U0r&n) (char->integer . g$11848$U0r&n) (ceiling . g$11847$U0r&n) (call-with-values . g$11846$U0r&n) (call/cc . g$11845$U0r&n) (call-with-current-continuation . g$11844$U0r&n) (cddddr . g$5913$U0r&n) (cdddar . g$5912$U0r&n) (cddadr . g$5911$U0r&n) (cddaar . g$5910$U0r&n) (cdaddr . g$5909$U0r&n) (cdadar . g$5908$U0r&n) (cdaadr . g$5907$U0r&n) (cdaaar . g$5906$U0r&n) (cadddr . g$5905$U0r&n) (caddar . g$5904$U0r&n) (cadadr . g$5903$U0r&n) (cadaar . g$5902$U0r&n) (caaddr . g$5901$U0r&n) (caadar . g$5900$U0r&n) (caaadr . g$5899$U0r&n) (caaaar . g$5898$U0r&n) (cdddr . g$5897$U0r&n) (cddar . g$5896$U0r&n) (cdadr . g$5895$U0r&n) (cdaar . g$5894$U0r&n) (caddr . g$5893$U0r&n) (cadar . g$5892$U0r&n) (caadr . g$5891$U0r&n) (caaar . g$5890$U0r&n) (cddr . g$5889$U0r&n) (cdar . g$5888$U0r&n) (cadr . g$5887$U0r&n) (caar . g$5886$U0r&n) (cdr . g$11843$U0r&n) (car . g$11842$U0r&n) (boolean? . g$5878$U0r&n) (boolean=? . g$5934$U0r&n) (atan . g$11841$U0r&n) (assertion-violation . g$6293$U0r&n) (asin . g$11840$U0r&n) (apply . g$11839$U0r&n) (append . g$11838$U0r&n) (angle . g$11837$U0r&n) (acos . g$11836$U0r&n) (abs . g$11835$U0r&n) (/ . g$11834$U0r&n) (* . g$11833$U0r&n) (- . g$11832$U0r&n) (+ . g$11831$U0r&n) (>= . g$11830$U0r&n) (> . g$11829$U0r&n) (= . g$11828$U0r&n) (<= . g$11827$U0r&n) (< . g$11826$U0r&n) ($$fxnot . g$11825$U0r&n) ($$fx- . g$11824$U0r&n) ($$fx* . g$11823$U0r&n) ($$fx+ . g$11822$U0r&n) ($fxxor . g$11821$U0r&n) ($fxior . g$11820$U0r&n) ($fxand . g$11819$U0r&n) ($fx>=? . g$11818$U0r&n) ($fx>? . g$11817$U0r&n) ($fx<=? . g$11816$U0r&n) ($fx<? . g$11815$U0r&n) ($fx- . g$11814$U0r&n) ($fx* . g$11813$U0r&n) ($fx+ . g$11812$U0r&n) ($fx=? . g$11811$U0r&n) ($vector-set! . g$11810$U0r&n) ($vector-ref . g$11809$U0r&n) ($cdr . g$11808$U0r&n) ($car . g$11807$U0r&n) (make-record-printer . g$11806$U0r&n) (eqv-hash . g$11805$U0r&n) (reverse! . g$11804$U0r&n) (deserialize-port . g$11803$U0r&n) (serialize-port . g$11802$U0r&n) (enum-set? . g$7134$U0r&n) (make-promise . g$6735$U0r&n) (load/unload . g$11616$U0r&n) (load/args . g$11615$U0r&n) (printf . g$7243$U0r&n) (fprintf . g$7244$U0r&n) (format . g$7245$U0r&n) (procedure-form . g$11801$U0r&n) (procedure-environment . g$11800$U0r&n) (procedure-name . g$11799$U0r&n) (procedure-arity . g$11798$U0r&n) (gc-collect . g$11797$U0r&n) (typeof . g$11796$U0r&n) (clr-type? . g$11795$U0r&n) (get-clr-type . g$11794$U0r&n) (get-command-line . g$11793$U0r&n) (vector-append . g$11792$U0r&n) (vector-filter . g$11791$U0r&n) (vector-reverse! . g$11790$U0r&n) (vector-contains? . g$11789$U0r&n) (vector-index-of . g$11788$U0r&n) (vector-copy . g$11787$U0r&n) (vector-binary-search . g$11786$U0r&n) (string-ci-compare . g$11785$U0r&n) (string-compare . g$11784$U0r&n) (string-format . g$11783$U0r&n) (trace-printer . g$11612$U0r&n) (make-traced-procedure . g$11782$U0r&n) (make-traced-macro . g$7265$U0r&n) (assertion-error . g$8589$U0r&n) (time-it . g$11781$U0r&n) (make-parameter . g$7272$U0r&n) (library-locator . g$11780$U0r&n) (get-library-paths . g$11779$U0r&n) (open-tcp-input/output-port . g$11778$U0r&n) (hashtable-for-each . g$11777$U0r&n) (hashtable-map . g$11776$U0r&n) (environment-bindings . g$8567$U0r&n) (environment-symbols . g$8570$U0r&n) (interaction-environment-symbols . g$8566$U0r&n) (optimization-level . g$11775$U0r&n) (library-path . g$7894$U0r&n) (make-compile-time-value . g$8275$U0r&n) (expand->core . g$8576$U0r&n) (expand . g$8574$U0r&n) (syntax-transpose . g$8513$U0r&n) (convert->cps . g$7591$U0r&n) (installed-libraries . g$7915$U0r&n) (uninstall-library . g$7906$U0r&n) (pretty-gensyms . g$7355$U0r&n) (pretty-width . g$7352$U0r&n) (pretty-print . g$7357$U0r&n) (&no-nans . g$11774$U0r&n) (&no-infinities . g$11773$U0r&n) (&i/o-encoding . g$11772$U0r&n) (&i/o-decoding . g$11771$U0r&n) (&i/o-port . g$11770$U0r&n) (&i/o-file-does-not-exist . g$11769$U0r&n) (&i/o-file-already-exists . g$11768$U0r&n) (&i/o-file-is-read-only . g$11767$U0r&n) (&i/o-file-protection . g$11766$U0r&n) (&i/o-filename . g$11765$U0r&n) (&i/o-invalid-position . g$11764$U0r&n) (&i/o-write . g$11763$U0r&n) (&i/o-read . g$11762$U0r&n) (&i/o . g$11761$U0r&n) (&non-continuable . g$11760$U0r&n) (&undefined . g$11759$U0r&n) (&syntax . g$11758$U0r&n) (&lexical . g$11757$U0r&n) (&implementation-restriction . g$11756$U0r&n) (&who . g$11755$U0r&n) (&irritants . g$11754$U0r&n) (&assertion . g$11753$U0r&n) (&violation . g$11752$U0r&n) (&error . g$11751$U0r&n) (&serious . g$11750$U0r&n) (&warning . g$11749$U0r&n) (&message . g$11748$U0r&n) (&condition . g$11747$U0r&n) (define-condition-type . g$11746$U0r&n) (define-enumeration . g$11745$U0r&n) (define-record-type . g$11744$U0r&n) (parent-rtd . g$11743$U0r&n) (nongenerative . g$11742$U0r&n) (opaque . g$11741$U0r&n) (sealed . g$11740$U0r&n) (protocol . g$11739$U0r&n) (parent . g$11738$U0r&n) (immutable . g$11737$U0r&n) (mutable . g$11736$U0r&n) (fields . g$11735$U0r&n) (error-handling-mode . g$11734$U0r&n) (file-options . g$11733$U0r&n) (buffer-mode . g$11732$U0r&n) (eol-style . g$11731$U0r&n) (guard . g$11730$U0r&n) (trace-letrec-syntax . g$11729$U0r&n) (trace-let-syntax . g$11728$U0r&n) (trace-define-syntax . g$11727$U0r&n) (trace-define . g$11726$U0r&n) (trace-lambda . g$11725$U0r&n) (unsyntax-splicing . g$11724$U0r&n) (unsyntax . g$11723$U0r&n) (unquote-splicing . g$11722$U0r&n) (unquote . g$11721$U0r&n) (_ . g$11720$U0r&n) (else . g$11719$U0r&n) (=> . g$11718$U0r&n) (... . g$11717$U0r&n) (assert . g$11716$U0r&n) (endianness . g$11715$U0r&n) (delay . g$11714$U0r&n) (time . g$11713$U0r&n) (or . g$11712$U0r&n) (and . g$11711$U0r&n) (do . g$11710$U0r&n) (cond . g$11709$U0r&n) (let* . g$11708$U0r&n) (let . g$11707$U0r&n) (identifier-syntax . g$11706$U0r&n) (with-syntax . g$11705$U0r&n) (quasisyntax . g$11704$U0r&n) (quasiquote . g$11703$U0r&n) (syntax-rules . g$11702$U0r&n) (include-into . g$11701$U0r&n) (include . g$11700$U0r&n) (define-struct . g$11699$U0r&n) (let-values . g$11698$U0r&n) (let*-values . g$11697$U0r&n) (record-constructor-descriptor . g$11696$U0r&n) (record-type-descriptor . g$11695$U0r&n) (fluid-let-syntax . g$11694$U0r&n) (case . g$11693$U0r&n) (parameterize . g$11692$U0r&n) (unless . g$11691$U0r&n) (when . g$11690$U0r&n) (if . g$11689$U0r&n) (letrec* . g$11688$U0r&n) (letrec . g$11687$U0r&n) (type-descriptor . g$11686$U0r&n) (case-lambda . g$11685$U0r&n) (lambda . g$11684$U0r&n) (syntax . g$11683$U0r&n) (syntax-case . g$11682$U0r&n) (quote . g$11681$U0r&n) (foreign-call . g$11680$U0r&n) (letrec-syntax . g$11679$U0r&n) (let-syntax . g$11678$U0r&n) (set! . g$11677$U0r&n) (export . g$11676$U0r&n) (import . g$11675$U0r&n) (library . g$11674$U0r&n) (begin . g$11673$U0r&n) (module . g$11672$U0r&n) (define-syntax . g$11671$U0r&n) (define . g$11670$U0r&n)) '((g$8470$U0r&n core-prim . ellipsis-map) (g$6717$U0r&n core-prim . &no-nans-rcd) (g$6716$U0r&n core-prim . &no-nans-rtd) (g$6704$U0r&n core-prim . &no-infinities-rcd) (g$6703$U0r&n core-prim . &no-infinities-rtd) (g$6691$U0r&n core-prim . &i/o-encoding-rcd) (g$6690$U0r&n core-prim . &i/o-encoding-rtd) (g$6676$U0r&n core-prim . &i/o-decoding-rcd) (g$6675$U0r&n core-prim . &i/o-decoding-rtd) (g$6663$U0r&n core-prim . &i/o-port-rcd) (g$6662$U0r&n core-prim . &i/o-port-rtd) (g$6648$U0r&n core-prim . &i/o-file-does-not-exist-rcd) (g$6647$U0r&n core-prim . &i/o-file-does-not-exist-rtd) (g$6635$U0r&n core-prim . &i/o-file-already-exists-rcd) (g$6634$U0r&n core-prim . &i/o-file-already-exists-rtd) (g$6622$U0r&n core-prim . &i/o-file-is-read-only-rcd) (g$6621$U0r&n core-prim . &i/o-file-is-read-only-rtd) (g$6609$U0r&n core-prim . &i/o-file-protection-rcd) (g$6608$U0r&n core-prim . &i/o-file-protection-rtd) (g$6596$U0r&n core-prim . &i/o-filename-rcd) (g$6595$U0r&n core-prim . &i/o-filename-rtd) (g$6581$U0r&n core-prim . &i/o-invalid-position-rcd) (g$6580$U0r&n core-prim . &i/o-invalid-position-rtd) (g$6566$U0r&n core-prim . &i/o-write-rcd) (g$6565$U0r&n core-prim . &i/o-write-rtd) (g$6553$U0r&n core-prim . &i/o-read-rcd) (g$6552$U0r&n core-prim . &i/o-read-rtd) (g$6540$U0r&n core-prim . &i/o-rcd) (g$6539$U0r&n core-prim . &i/o-rtd) (g$6527$U0r&n core-prim . &undefined-rcd) (g$6526$U0r&n core-prim . &undefined-rtd) (g$6514$U0r&n core-prim . &syntax-rcd) (g$6513$U0r&n core-prim . &syntax-rtd) (g$6497$U0r&n core-prim . &lexical-rcd) (g$6496$U0r&n core-prim . &lexical-rtd) (g$6484$U0r&n core-prim . &implementation-restriction-rcd) (g$6483$U0r&n core-prim . &implementation-restriction-rtd) (g$6471$U0r&n core-prim . &non-continuable-rcd) (g$6470$U0r&n core-prim . &non-continuable-rtd) (g$6458$U0r&n core-prim . &who-rcd) (g$6457$U0r&n core-prim . &who-rtd) (g$6443$U0r&n core-prim . &irritants-rcd) (g$6442$U0r&n core-prim . &irritants-rtd) (g$6428$U0r&n core-prim . &assertion-rcd) (g$6427$U0r&n core-prim . &assertion-rtd) (g$6415$U0r&n core-prim . &violation-rcd) (g$6414$U0r&n core-prim . &violation-rtd) (g$6402$U0r&n core-prim . &error-rcd) (g$6401$U0r&n core-prim . &error-rtd) (g$6389$U0r&n core-prim . &serious-rcd) (g$6388$U0r&n core-prim . &serious-rtd) (g$6376$U0r&n core-prim . &warning-rcd) (g$6375$U0r&n core-prim . &warning-rtd) (g$6363$U0r&n core-prim . &message-rcd) (g$6362$U0r&n core-prim . &message-rtd) (g$6323$U0r&n core-prim . &condition-rcd) (g$6322$U0r&n core-prim . &condition-rtd) (g$12155$U0r&n core-prim . library-letrec*) (g$12154$U0r&n core-prim . annotation-stripped) (g$12153$U0r&n core-prim . annotation-source) (g$12152$U0r&n core-prim . annotation-expression) (g$12151$U0r&n core-prim . annotation?) (g$12150$U0r&n core-prim . read-annotated) (g$12149$U0r&n core-prim . tanh) (g$12148$U0r&n core-prim . cosh) (g$12147$U0r&n core-prim . sinh) (g$12146$U0r&n core-prim . make-guid) (g$12145$U0r&n core-prim . unspecified?) (g$5555$U0r&n core-prim . make-list) (g$5554$U0r&n core-prim . last-pair) (g$12144$U0r&n core-prim . load-r5rs) (g$12143$U0r&n core-prim . license) (g$12142$U0r&n core-prim . stacktrace) (g$11618$U0r&n core-prim . ironscheme-build) (g$12141$U0r&n core-prim . define-clr-class-internal) (g$12140$U0r&n core-prim . clr-field-set!-internal) (g$12139$U0r&n core-prim . clr-field-get-internal) (g$12138$U0r&n core-prim . clr-cast-internal) (g$12137$U0r&n core-prim . clr-call-internal) (g$12136$U0r&n core-prim . clr-new-internal) (g$12135$U0r&n core-prim . clr-new-array-internal) (g$12134$U0r&n core-prim . clr-is-internal) (g$12133$U0r&n core-prim . clr-reference-internal) (g$12132$U0r&n core-prim . clr-using-internal) (g$8590$U0r&n core-prim . syntax-error) (g$8465$U0r&n core-prim . syntax-dispatch) (g$12131$U0r&n core-prim . compile-core) (g$12130$U0r&n core-prim . eval-core) (g$12129$U0r&n core-prim . remove-location) (g$12128$U0r&n core-prim . set-symbol-value!) (g$12127$U0r&n core-prim . symbol-value) (g$12126$U0r&n core-prim . symbol-bound?) (g$12125$U0r&n core-prim . ungensym) (g$12124$U0r&n core-prim . gensym) (g$12123$U0r&n core-prim . void) (g$12122$U0r&n core-prim . load-serialized-library) (g$12121$U0r&n core-prim . serialize-library) (g$11622$U0r&n core-prim . compile-system-libraries) (g$11624$U0r&n core-prim . compile->closure) (g$11623$U0r&n core-prim . compile) (g$11617$U0r&n core-prim . load) (g$12120$U0r&n core-prim . string-normalize) (g$8600$U0r&n core-prim . interaction-environment) (g$12119$U0r&n core-prim . char-ready?) (g$12118$U0r&n core-prim . string-upcase) (g$12117$U0r&n core-prim . string-titlecase) (g$6800$U0r&n core-prim . string-normalize-nfkd) (g$6799$U0r&n core-prim . string-normalize-nfkc) (g$6798$U0r&n core-prim . string-normalize-nfd) (g$6797$U0r&n core-prim . string-normalize-nfc) (g$12116$U0r&n core-prim . string-foldcase) (g$12115$U0r&n core-prim . string-downcase) (g$6784$U0r&n core-prim . string-ci>?) (g$6786$U0r&n core-prim . string-ci>=?) (g$6782$U0r&n core-prim . string-ci=?) (g$6783$U0r&n core-prim . string-ci<?) (g$6785$U0r&n core-prim . string-ci<=?) (g$12114$U0r&n core-prim . char-whitespace?) (g$12113$U0r&n core-prim . char-upper-case?) (g$12112$U0r&n core-prim . char-title-case?) (g$12111$U0r&n core-prim . char-numeric?) (g$12110$U0r&n core-prim . char-lower-case?) (g$12109$U0r&n core-prim . char-general-category) (g$12108$U0r&n core-prim . char-upcase) (g$12107$U0r&n core-prim . char-titlecase) (g$12106$U0r&n core-prim . char-foldcase) (g$12105$U0r&n core-prim . char-downcase) (g$6794$U0r&n core-prim . char-ci>?) (g$6796$U0r&n core-prim . char-ci>=?) (g$6792$U0r&n core-prim . char-ci=?) (g$6793$U0r&n core-prim . char-ci<?) (g$6795$U0r&n core-prim . char-ci<=?) (g$12104$U0r&n core-prim . char-alphabetic?) (g$8277$U0r&n core-prim . variable-transformer-procedure) (g$8276$U0r&n core-prim . variable-transformer?) (g$8274$U0r&n core-prim . make-variable-transformer) (g$8594$U0r&n core-prim . identifier?) (g$8583$U0r&n core-prim . generate-temporaries) (g$8584$U0r&n core-prim . free-identifier=?) (g$8596$U0r&n core-prim . syntax->datum) (g$8595$U0r&n core-prim . datum->syntax) (g$8585$U0r&n core-prim . bound-identifier=?) (g$12103$U0r&n core-prim . record-type-descriptor?) (g$12102$U0r&n core-prim . record-predicate) (g$12101$U0r&n core-prim . record-mutator) (g$12100$U0r&n core-prim . record-constructor) (g$12099$U0r&n core-prim . record-accessor) (g$12098$U0r&n core-prim . make-record-type-descriptor) (g$12097$U0r&n core-prim . make-record-constructor-descriptor) (g$12096$U0r&n core-prim . record?) (g$12095$U0r&n core-prim . record-type-uid) (g$12094$U0r&n core-prim . record-type-sealed?) (g$12093$U0r&n core-prim . record-type-parent) (g$12092$U0r&n core-prim . record-type-opaque?) (g$12091$U0r&n core-prim . record-type-name) (g$12090$U0r&n core-prim . record-type-generative?) (g$12089$U0r&n core-prim . record-type-field-names) (g$12088$U0r&n core-prim . record-rtd) (g$12087$U0r&n core-prim . record-field-mutable?) (g$6168$U0r&n core-prim . delete-file) (g$6167$U0r&n core-prim . file-exists?) (g$12086$U0r&n core-prim . vector-sort!) (g$12085$U0r&n core-prim . vector-sort) (g$6753$U0r&n core-prim . list-sort) (g$12084$U0r&n core-prim . symbol-hash) (g$12083$U0r&n core-prim . string-ci-hash) (g$12082$U0r&n core-prim . string-hash) (g$12081$U0r&n core-prim . equal-hash) (g$12080$U0r&n core-prim . hashtable-equivalence-function) (g$12079$U0r&n core-prim . make-hashtable) (g$12078$U0r&n core-prim . hashtable-hash-function) (g$6135$U0r&n core-prim . make-eqv-hashtable) (g$6134$U0r&n core-prim . make-eq-hashtable) (g$12077$U0r&n core-prim . hashtable?) (g$6141$U0r&n core-prim . hashtable-update!) (g$6136$U0r&n core-prim . hashtable-size) (g$6138$U0r&n core-prim . hashtable-set!) (g$6137$U0r&n core-prim . hashtable-ref) (g$12076$U0r&n core-prim . hashtable-mutable?) (g$12075$U0r&n core-prim . hashtable-keys) (g$12074$U0r&n core-prim . hashtable-entries) (g$6139$U0r&n core-prim . hashtable-delete!) (g$12073$U0r&n core-prim . hashtable-copy) (g$6140$U0r&n core-prim . hashtable-contains?) (g$6142$U0r&n core-prim . hashtable-clear!) (g$7096$U0r&n core-prim . call-with-output-file) (g$7095$U0r&n core-prim . call-with-input-file) (g$7087$U0r&n core-prim . write-char) (g$12072$U0r&n core-prim . write) (g$7094$U0r&n core-prim . with-output-to-file) (g$7093$U0r&n core-prim . with-input-from-file) (g$7086$U0r&n core-prim . read-char) (g$12071$U0r&n core-prim . read) (g$7085$U0r&n core-prim . peek-char) (g$12070$U0r&n core-prim . open-output-file) (g$12069$U0r&n core-prim . open-input-file) (g$7097$U0r&n core-prim . newline) (g$12068$U0r&n core-prim . display) (g$12067$U0r&n core-prim . close-output-port) (g$12066$U0r&n core-prim . close-input-port) (g$12065$U0r&n core-prim . eof-object?) (g$12064$U0r&n core-prim . eof-object) (g$12063$U0r&n core-prim . current-error-port) (g$12062$U0r&n core-prim . current-output-port) (g$12061$U0r&n core-prim . current-input-port) (g$12060$U0r&n core-prim . output-port?) (g$12059$U0r&n core-prim . input-port?) (g$12058$U0r&n core-prim . utf-8-codec) (g$12057$U0r&n core-prim . utf-16-codec) (g$12056$U0r&n core-prim . transcoder-error-handling-mode) (g$12055$U0r&n core-prim . transcoder-eol-style) (g$12054$U0r&n core-prim . transcoder-codec) (g$12053$U0r&n core-prim . transcoded-port) (g$12052$U0r&n core-prim . textual-port?) (g$12051$U0r&n core-prim . string->bytevector) (g$12050$U0r&n core-prim . standard-output-port) (g$12049$U0r&n core-prim . standard-input-port) (g$12048$U0r&n core-prim . standard-error-port) (g$12047$U0r&n core-prim . set-port-position!) (g$12046$U0r&n core-prim . put-u8) (g$12045$U0r&n core-prim . put-string) (g$7065$U0r&n core-prim . put-datum) (g$12044$U0r&n core-prim . put-char) (g$12043$U0r&n core-prim . put-bytevector) (g$7070$U0r&n core-prim . port?) (g$12042$U0r&n core-prim . port-transcoder) (g$12041$U0r&n core-prim . port-position) (g$12040$U0r&n core-prim . port-has-set-port-position!?) (g$12039$U0r&n core-prim . port-has-port-position?) (g$12038$U0r&n core-prim . port-eof?) (g$12037$U0r&n core-prim . output-port-buffer-mode) (g$7069$U0r&n core-prim . open-string-output-port) (g$12036$U0r&n core-prim . open-string-input-port) (g$12035$U0r&n core-prim . open-file-output-port) (g$12034$U0r&n core-prim . open-file-input/output-port) (g$12033$U0r&n core-prim . open-file-input-port) (g$12032$U0r&n core-prim . open-bytevector-output-port) (g$12031$U0r&n core-prim . open-bytevector-input-port) (g$12030$U0r&n core-prim . native-transcoder) (g$12029$U0r&n core-prim . native-eol-style) (g$12028$U0r&n core-prim . make-transcoder) (g$12027$U0r&n core-prim . latin-1-codec) (g$6563$U0r&n core-prim . make-i/o-write-error) (g$6550$U0r&n core-prim . make-i/o-read-error) (g$6658$U0r&n core-prim . make-i/o-port-error) (g$6576$U0r&n core-prim . make-i/o-invalid-position-error) (g$6591$U0r&n core-prim . make-i/o-filename-error) (g$6606$U0r&n core-prim . make-i/o-file-protection-error) (g$6619$U0r&n core-prim . make-i/o-file-is-read-only-error) (g$6645$U0r&n core-prim . make-i/o-file-does-not-exist-error) (g$6632$U0r&n core-prim . make-i/o-file-already-exists-error) (g$6537$U0r&n core-prim . make-i/o-error) (g$6686$U0r&n core-prim . make-i/o-encoding-error) (g$6673$U0r&n core-prim . make-i/o-decoding-error) (g$12026$U0r&n core-prim . make-custom-textual-output-port) (g$12025$U0r&n core-prim . make-custom-textual-input/output-port) (g$12024$U0r&n core-prim . make-custom-textual-input-port) (g$12023$U0r&n core-prim . make-custom-binary-output-port) (g$12022$U0r&n core-prim . make-custom-binary-input/output-port) (g$12021$U0r&n core-prim . make-custom-binary-input-port) (g$12020$U0r&n core-prim . make-bytevector) (g$12019$U0r&n core-prim . lookahead-u8) (g$12018$U0r&n core-prim . lookahead-char) (g$6564$U0r&n core-prim . i/o-write-error?) (g$6551$U0r&n core-prim . i/o-read-error?) (g$6660$U0r&n core-prim . i/o-port-error?) (g$6578$U0r&n core-prim . i/o-invalid-position-error?) (g$6579$U0r&n core-prim . i/o-error-position) (g$6593$U0r&n core-prim . i/o-filename-error?) (g$6607$U0r&n core-prim . i/o-file-protection-error?) (g$6620$U0r&n core-prim . i/o-file-is-read-only-error?) (g$6646$U0r&n core-prim . i/o-file-does-not-exist-error?) (g$6633$U0r&n core-prim . i/o-file-already-exists-error?) (g$6538$U0r&n core-prim . i/o-error?) (g$6661$U0r&n core-prim . i/o-error-port) (g$6594$U0r&n core-prim . i/o-error-filename) (g$6688$U0r&n core-prim . i/o-encoding-error?) (g$6689$U0r&n core-prim . i/o-encoding-error-char) (g$6674$U0r&n core-prim . i/o-decoding-error?) (g$12017$U0r&n core-prim . get-u8) (g$12016$U0r&n core-prim . get-string-n!) (g$12015$U0r&n core-prim . get-string-n) (g$12014$U0r&n core-prim . get-string-all) (g$12013$U0r&n core-prim . get-line) (g$7066$U0r&n core-prim . get-datum) (g$12012$U0r&n core-prim . get-char) (g$12011$U0r&n core-prim . get-bytevector-some) (g$12010$U0r&n core-prim . get-bytevector-n!) (g$12009$U0r&n core-prim . get-bytevector-n) (g$12008$U0r&n core-prim . get-bytevector-all) (g$12007$U0r&n core-prim . flush-output-port) (g$12006$U0r&n core-prim . close-port) (g$7071$U0r&n core-prim . call-with-string-output-port) (g$7072$U0r&n core-prim . call-with-port) (g$12005$U0r&n core-prim . call-with-bytevector-output-port) (g$12004$U0r&n core-prim . bytevector->string) (g$12003$U0r&n core-prim . buffer-mode?) (g$12002$U0r&n core-prim . binary-port?) (g$8573$U0r&n core-prim . scheme-report-environment) (g$6732$U0r&n core-prim . quotient) (g$8572$U0r&n core-prim . null-environment) (g$6733$U0r&n core-prim . remainder) (g$6734$U0r&n core-prim . modulo) (g$6729$U0r&n core-prim . inexact->exact) (g$6736$U0r&n core-prim . force) (g$6730$U0r&n core-prim . exact->inexact) (g$12001$U0r&n core-prim . exit) (g$11613$U0r&n core-prim . command-line) (g$12000$U0r&n core-prim . string-fill!) (g$11999$U0r&n core-prim . string-set!) (g$11998$U0r&n core-prim . set-cdr!) (g$11997$U0r&n core-prim . set-car!) (g$5577$U0r&n core-prim . remove) (g$5578$U0r&n core-prim . remv) (g$5558$U0r&n core-prim . remp) (g$5579$U0r&n core-prim . remq) (g$5557$U0r&n core-prim . partition) (g$5565$U0r&n core-prim . memv) (g$5564$U0r&n core-prim . memq) (g$5567$U0r&n core-prim . memp) (g$5566$U0r&n core-prim . member) (g$5571$U0r&n core-prim . exists) (g$5570$U0r&n core-prim . for-all) (g$5576$U0r&n core-prim . fold-right) (g$5575$U0r&n core-prim . fold-left) (g$5556$U0r&n core-prim . find) (g$5559$U0r&n core-prim . filter) (g$5574$U0r&n core-prim . cons*) (g$5561$U0r&n core-prim . assv) (g$5560$U0r&n core-prim . assq) (g$5563$U0r&n core-prim . assp) (g$5562$U0r&n core-prim . assoc) (g$6289$U0r&n core-prim . with-exception-handler) (g$6292$U0r&n core-prim . raise-continuable) (g$6291$U0r&n core-prim . raise) (g$8575$U0r&n core-prim . eval) (g$8571$U0r&n core-prim . environment) (g$7157$U0r&n core-prim . make-enumeration) (g$7164$U0r&n core-prim . enum-set=?) (g$7158$U0r&n core-prim . enum-set-universe) (g$7165$U0r&n core-prim . enum-set-union) (g$7163$U0r&n core-prim . enum-set-subset?) (g$7169$U0r&n core-prim . enum-set-projection) (g$7162$U0r&n core-prim . enum-set-member?) (g$7166$U0r&n core-prim . enum-set-intersection) (g$7159$U0r&n core-prim . enum-set-indexer) (g$7167$U0r&n core-prim . enum-set-difference) (g$7160$U0r&n core-prim . enum-set-constructor) (g$7168$U0r&n core-prim . enum-set-complement) (g$7161$U0r&n core-prim . enum-set->list) (g$6455$U0r&n core-prim . who-condition?) (g$6374$U0r&n core-prim . warning?) (g$6413$U0r&n core-prim . violation?) (g$6525$U0r&n core-prim . undefined-violation?) (g$6510$U0r&n core-prim . syntax-violation?) (g$6512$U0r&n core-prim . syntax-violation-subform) (g$6511$U0r&n core-prim . syntax-violation-form) (g$8593$U0r&n core-prim . syntax-violation) (g$11996$U0r&n core-prim . simple-conditions) (g$6387$U0r&n core-prim . serious-condition?) (g$6469$U0r&n core-prim . non-continuable-violation?) (g$6360$U0r&n core-prim . message-condition?) (g$6453$U0r&n core-prim . make-who-condition) (g$6373$U0r&n core-prim . make-warning) (g$6412$U0r&n core-prim . make-violation) (g$6524$U0r&n core-prim . make-undefined-violation) (g$6507$U0r&n core-prim . make-syntax-violation) (g$6386$U0r&n core-prim . make-serious-condition) (g$6468$U0r&n core-prim . make-non-continuable-violation) (g$6358$U0r&n core-prim . make-message-condition) (g$6494$U0r&n core-prim . make-lexical-violation) (g$6438$U0r&n core-prim . make-irritants-condition) (g$6481$U0r&n core-prim . make-implementation-restriction-violation) (g$6399$U0r&n core-prim . make-error) (g$6425$U0r&n core-prim . make-assertion-violation) (g$6495$U0r&n core-prim . lexical-violation?) (g$6440$U0r&n core-prim . irritants-condition?) (g$6482$U0r&n core-prim . implementation-restriction-violation?) (g$6400$U0r&n core-prim . error?) (g$6456$U0r&n core-prim . condition-who) (g$11995$U0r&n core-prim . condition-predicate) (g$6361$U0r&n core-prim . condition-message) (g$6441$U0r&n core-prim . condition-irritants) (g$11994$U0r&n core-prim . condition-accessor) (g$11993$U0r&n core-prim . condition) (g$6426$U0r&n core-prim . assertion-violation?) (g$11992$U0r&n core-prim . condition?) (g$11991$U0r&n core-prim . utf32->string) (g$11990$U0r&n core-prim . utf16->string) (g$11989$U0r&n core-prim . utf8->string) (g$11988$U0r&n core-prim . uint-list->bytevector) (g$11987$U0r&n core-prim . u8-list->bytevector) (g$11986$U0r&n core-prim . string->utf8) (g$11985$U0r&n core-prim . string->utf32) (g$11984$U0r&n core-prim . string->utf16) (g$11983$U0r&n core-prim . sint-list->bytevector) (g$6174$U0r&n core-prim . native-endianness) (g$5876$U0r&n core-prim . bytevector?) (g$11982$U0r&n core-prim . bytevector=?) (g$11981$U0r&n core-prim . bytevector-uint-set!) (g$11980$U0r&n core-prim . bytevector-uint-ref) (g$11979$U0r&n core-prim . bytevector-u8-set!) (g$11978$U0r&n core-prim . bytevector-u8-ref) (g$6195$U0r&n core-prim . bytevector-u64-set!) (g$6191$U0r&n core-prim . bytevector-u64-ref) (g$6197$U0r&n core-prim . bytevector-u64-native-set!) (g$6193$U0r&n core-prim . bytevector-u64-native-ref) (g$6187$U0r&n core-prim . bytevector-u32-set!) (g$6183$U0r&n core-prim . bytevector-u32-ref) (g$6189$U0r&n core-prim . bytevector-u32-native-set!) (g$6185$U0r&n core-prim . bytevector-u32-native-ref) (g$6179$U0r&n core-prim . bytevector-u16-set!) (g$6175$U0r&n core-prim . bytevector-u16-ref) (g$6181$U0r&n core-prim . bytevector-u16-native-set!) (g$6177$U0r&n core-prim . bytevector-u16-native-ref) (g$11977$U0r&n core-prim . bytevector-sint-set!) (g$11976$U0r&n core-prim . bytevector-sint-ref) (g$11975$U0r&n core-prim . bytevector-s8-set!) (g$11974$U0r&n core-prim . bytevector-s8-ref) (g$6196$U0r&n core-prim . bytevector-s64-set!) (g$6192$U0r&n core-prim . bytevector-s64-ref) (g$6198$U0r&n core-prim . bytevector-s64-native-set!) (g$6194$U0r&n core-prim . bytevector-s64-native-ref) (g$6188$U0r&n core-prim . bytevector-s32-set!) (g$6184$U0r&n core-prim . bytevector-s32-ref) (g$6190$U0r&n core-prim . bytevector-s32-native-set!) (g$6186$U0r&n core-prim . bytevector-s32-native-ref) (g$6180$U0r&n core-prim . bytevector-s16-set!) (g$6176$U0r&n core-prim . bytevector-s16-ref) (g$6182$U0r&n core-prim . bytevector-s16-native-set!) (g$6178$U0r&n core-prim . bytevector-s16-native-ref) (g$11973$U0r&n core-prim . bytevector-length) (g$11972$U0r&n core-prim . bytevector-ieee-single-set!) (g$11971$U0r&n core-prim . bytevector-ieee-single-ref) (g$6201$U0r&n core-prim . bytevector-ieee-single-native-set!) (g$6199$U0r&n core-prim . bytevector-ieee-single-native-ref) (g$11970$U0r&n core-prim . bytevector-ieee-double-set!) (g$11969$U0r&n core-prim . bytevector-ieee-double-ref) (g$6202$U0r&n core-prim . bytevector-ieee-double-native-set!) (g$6200$U0r&n core-prim . bytevector-ieee-double-native-ref) (g$11968$U0r&n core-prim . bytevector-fill!) (g$11967$U0r&n core-prim . bytevector-copy!) (g$11966$U0r&n core-prim . bytevector-copy) (g$11965$U0r&n core-prim . bytevector->uint-list) (g$11964$U0r&n core-prim . bytevector->u8-list) (g$11963$U0r&n core-prim . bytevector->sint-list) (g$6715$U0r&n core-prim . no-nans-violation?) (g$6702$U0r&n core-prim . no-infinities-violation?) (g$6714$U0r&n core-prim . make-no-nans-violation) (g$6701$U0r&n core-prim . make-no-infinities-violation) (g$11962$U0r&n core-prim . real->flonum) (g$7011$U0r&n core-prim . flzero?) (g$7006$U0r&n core-prim . fltruncate) (g$6996$U0r&n core-prim . fltan) (g$7001$U0r&n core-prim . flsqrt) (g$6994$U0r&n core-prim . flsin) (g$7007$U0r&n core-prim . flround) (g$7009$U0r&n core-prim . flpositive?) (g$5881$U0r&n core-prim . flonum?) (g$7013$U0r&n core-prim . flodd?) (g$11961$U0r&n core-prim . flnumerator) (g$7010$U0r&n core-prim . flnegative?) (g$6993$U0r&n core-prim . flnan?) (g$6987$U0r&n core-prim . flmod0) (g$6986$U0r&n core-prim . flmod) (g$7015$U0r&n core-prim . flmin) (g$7014$U0r&n core-prim . flmax) (g$7000$U0r&n core-prim . fllog) (g$6990$U0r&n core-prim . flinteger?) (g$6992$U0r&n core-prim . flinfinite?) (g$7005$U0r&n core-prim . flfloor) (g$6991$U0r&n core-prim . flfinite?) (g$7003$U0r&n core-prim . flexpt) (g$7002$U0r&n core-prim . flexp) (g$7012$U0r&n core-prim . fleven?) (g$6989$U0r&n core-prim . fldiv0-and-mod0) (g$11960$U0r&n core-prim . fldiv0) (g$6988$U0r&n core-prim . fldiv-and-mod) (g$11959$U0r&n core-prim . fldiv) (g$11958$U0r&n core-prim . fldenominator) (g$6995$U0r&n core-prim . flcos) (g$7004$U0r&n core-prim . flceiling) (g$6999$U0r&n core-prim . flatan) (g$6997$U0r&n core-prim . flasin) (g$6998$U0r&n core-prim . flacos) (g$7008$U0r&n core-prim . flabs) (g$11957$U0r&n core-prim . fl>?) (g$11956$U0r&n core-prim . fl>=?) (g$11955$U0r&n core-prim . fl=?) (g$11954$U0r&n core-prim . fl<?) (g$11953$U0r&n core-prim . fl<=?) (g$11952$U0r&n core-prim . fl/) (g$11951$U0r&n core-prim . fl-) (g$11950$U0r&n core-prim . fl+) (g$11949$U0r&n core-prim . fl*) (g$11948$U0r&n core-prim . fixnum->flonum) (g$6907$U0r&n core-prim . fxzero?) (g$11947$U0r&n core-prim . fxxor) (g$6921$U0r&n core-prim . fxrotate-bit-field) (g$11946$U0r&n core-prim . fxreverse-bit-field) (g$6905$U0r&n core-prim . fxpositive?) (g$6909$U0r&n core-prim . fxodd?) (g$11945$U0r&n core-prim . fxnot) (g$6906$U0r&n core-prim . fxnegative?) (g$6902$U0r&n core-prim . fxmod0) (g$6901$U0r&n core-prim . fxmod) (g$6911$U0r&n core-prim . fxmin) (g$6910$U0r&n core-prim . fxmax) (g$11944$U0r&n core-prim . fxlength) (g$11943$U0r&n core-prim . fxior) (g$6915$U0r&n core-prim . fxif) (g$11942$U0r&n core-prim . fxfirst-bit-set) (g$6908$U0r&n core-prim . fxeven?) (g$6904$U0r&n core-prim . fxdiv0-and-mod0) (g$11941$U0r&n core-prim . fxdiv0) (g$6903$U0r&n core-prim . fxdiv-and-mod) (g$11940$U0r&n core-prim . fxdiv) (g$6918$U0r&n core-prim . fxcopy-bit-field) (g$6916$U0r&n core-prim . fxcopy-bit) (g$11939$U0r&n core-prim . fxbit-set?) (g$6917$U0r&n core-prim . fxbit-field) (g$11938$U0r&n core-prim . fxbit-count) (g$6920$U0r&n core-prim . fxarithmetic-shift-right) (g$6919$U0r&n core-prim . fxarithmetic-shift-left) (g$11937$U0r&n core-prim . fxarithmetic-shift) (g$11936$U0r&n core-prim . fxand) (g$11935$U0r&n core-prim . fx>?) (g$11934$U0r&n core-prim . fx>=?) (g$11933$U0r&n core-prim . fx=?) (g$11932$U0r&n core-prim . fx<?) (g$11931$U0r&n core-prim . fx<=?) (g$6913$U0r&n core-prim . fx-/carry) (g$11930$U0r&n core-prim . fx-) (g$6914$U0r&n core-prim . fx+/carry) (g$11929$U0r&n core-prim . fx+) (g$6912$U0r&n core-prim . fx*/carry) (g$11928$U0r&n core-prim . fx*) (g$11927$U0r&n core-prim . greatest-fixnum) (g$11926$U0r&n core-prim . least-fixnum) (g$5882$U0r&n core-prim . fixnum-width) (g$5880$U0r&n core-prim . fixnum?) (g$6864$U0r&n core-prim . bitwise-rotate-bit-field) (g$11925$U0r&n core-prim . bitwise-reverse-bit-field) (g$11924$U0r&n core-prim . bitwise-length) (g$6858$U0r&n core-prim . bitwise-if) (g$11923$U0r&n core-prim . bitwise-first-bit-set) (g$6861$U0r&n core-prim . bitwise-copy-bit-field) (g$6859$U0r&n core-prim . bitwise-copy-bit) (g$11922$U0r&n core-prim . bitwise-bit-set?) (g$6860$U0r&n core-prim . bitwise-bit-field) (g$11921$U0r&n core-prim . bitwise-bit-count) (g$11920$U0r&n core-prim . bitwise-xor) (g$11919$U0r&n core-prim . bitwise-ior) (g$11918$U0r&n core-prim . bitwise-and) (g$11917$U0r&n core-prim . bitwise-not) (g$6863$U0r&n core-prim . bitwise-arithmetic-shift-right) (g$6862$U0r&n core-prim . bitwise-arithmetic-shift-left) (g$11916$U0r&n core-prim . bitwise-arithmetic-shift) (g$5916$U0r&n core-prim . zero?) (g$5875$U0r&n core-prim . vector?) (g$11915$U0r&n core-prim . vector-set!) (g$11914$U0r&n core-prim . vector-ref) (g$5948$U0r&n core-prim . vector-map) (g$11913$U0r&n core-prim . vector-length) (g$5949$U0r&n core-prim . vector-for-each) (g$5883$U0r&n core-prim . vector-fill!) (g$11912$U0r&n core-prim . vector->list) (g$11911$U0r&n core-prim . vector) (g$11910$U0r&n core-prim . values) (g$11909$U0r&n core-prim . truncate) (g$11908$U0r&n core-prim . tan) (g$5877$U0r&n core-prim . symbol?) (g$5933$U0r&n core-prim . symbol=?) (g$11907$U0r&n core-prim . symbol->string) (g$11906$U0r&n core-prim . substring) (g$11905$U0r&n core-prim . string?) (g$5930$U0r&n core-prim . string>?) (g$5932$U0r&n core-prim . string>=?) (g$5928$U0r&n core-prim . string=?) (g$5929$U0r&n core-prim . string<?) (g$5931$U0r&n core-prim . string<=?) (g$11904$U0r&n core-prim . string-ref) (g$11903$U0r&n core-prim . string-length) (g$5950$U0r&n core-prim . string-for-each) (g$11902$U0r&n core-prim . string-copy) (g$11901$U0r&n core-prim . string-append) (g$11900$U0r&n core-prim . string->symbol) (g$11899$U0r&n core-prim . string->number) (g$11898$U0r&n core-prim . string->list) (g$11897$U0r&n core-prim . string) (g$11896$U0r&n core-prim . sqrt) (g$11895$U0r&n core-prim . sin) (g$11894$U0r&n core-prim . round) (g$5885$U0r&n core-prim . reverse) (g$11893$U0r&n core-prim . real?) (g$11892$U0r&n core-prim . real-valued?) (g$11891$U0r&n core-prim . real-part) (g$5945$U0r&n core-prim . rationalize) (g$11890$U0r&n core-prim . rational?) (g$11889$U0r&n core-prim . rational-valued?) (g$5879$U0r&n core-prim . procedure?) (g$5914$U0r&n core-prim . positive?) (g$11888$U0r&n core-prim . pair?) (g$5918$U0r&n core-prim . odd?) (g$11887$U0r&n core-prim . numerator) (g$11886$U0r&n core-prim . number?) (g$11885$U0r&n core-prim . number->string) (g$11884$U0r&n core-prim . null?) (g$11883$U0r&n core-prim . not) (g$5915$U0r&n core-prim . negative?) (g$11882$U0r&n core-prim . nan?) (g$5920$U0r&n core-prim . min) (g$5919$U0r&n core-prim . max) (g$5572$U0r&n core-prim . map) (g$11881$U0r&n core-prim . make-vector) (g$11880$U0r&n core-prim . make-string) (g$11879$U0r&n core-prim . make-rectangular) (g$11878$U0r&n core-prim . make-polar) (g$11877$U0r&n core-prim . magnitude) (g$11876$U0r&n core-prim . log) (g$11875$U0r&n core-prim . list?) (g$5552$U0r&n core-prim . list-tail) (g$5553$U0r&n core-prim . list-ref) (g$5872$U0r&n core-prim . list->vector) (g$5873$U0r&n core-prim . list->string) (g$11874$U0r&n core-prim . list) (g$11873$U0r&n core-prim . length) (g$5922$U0r&n core-prim . lcm) (g$11872$U0r&n core-prim . integer?) (g$11871$U0r&n core-prim . integer-valued?) (g$11870$U0r&n core-prim . integer->char) (g$11869$U0r&n core-prim . infinite?) (g$11868$U0r&n core-prim . inexact?) (g$11867$U0r&n core-prim . inexact) (g$11866$U0r&n core-prim . imag-part) (g$5921$U0r&n core-prim . gcd) (g$5573$U0r&n core-prim . for-each) (g$11865$U0r&n core-prim . floor) (g$11864$U0r&n core-prim . finite?) (g$11863$U0r&n core-prim . expt) (g$11862$U0r&n core-prim . exp) (g$11861$U0r&n core-prim . exact?) (g$11860$U0r&n core-prim . exact-integer-sqrt) (g$11859$U0r&n core-prim . exact) (g$5917$U0r&n core-prim . even?) (g$6294$U0r&n core-prim . error) (g$11858$U0r&n core-prim . eqv?) (g$11857$U0r&n core-prim . equal?) (g$11856$U0r&n core-prim . eq?) (g$11855$U0r&n core-prim . dynamic-wind) (g$5871$U0r&n core-prim . div0-and-mod0) (g$5869$U0r&n core-prim . mod0) (g$11854$U0r&n core-prim . div0) (g$5870$U0r&n core-prim . div-and-mod) (g$5868$U0r&n core-prim . mod) (g$11853$U0r&n core-prim . div) (g$11852$U0r&n core-prim . denominator) (g$11851$U0r&n core-prim . cos) (g$11850$U0r&n core-prim . cons) (g$11849$U0r&n core-prim . complex?) (g$5874$U0r&n core-prim . char?) (g$5942$U0r&n core-prim . char>?) (g$5944$U0r&n core-prim . char>=?) (g$5940$U0r&n core-prim . char=?) (g$5941$U0r&n core-prim . char<?) (g$5943$U0r&n core-prim . char<=?) (g$11848$U0r&n core-prim . char->integer) (g$11847$U0r&n core-prim . ceiling) (g$11846$U0r&n core-prim . call-with-values) (g$11845$U0r&n core-prim . call/cc) (g$11844$U0r&n core-prim . call-with-current-continuation) (g$5913$U0r&n core-prim . cddddr) (g$5912$U0r&n core-prim . cdddar) (g$5911$U0r&n core-prim . cddadr) (g$5910$U0r&n core-prim . cddaar) (g$5909$U0r&n core-prim . cdaddr) (g$5908$U0r&n core-prim . cdadar) (g$5907$U0r&n core-prim . cdaadr) (g$5906$U0r&n core-prim . cdaaar) (g$5905$U0r&n core-prim . cadddr) (g$5904$U0r&n core-prim . caddar) (g$5903$U0r&n core-prim . cadadr) (g$5902$U0r&n core-prim . cadaar) (g$5901$U0r&n core-prim . caaddr) (g$5900$U0r&n core-prim . caadar) (g$5899$U0r&n core-prim . caaadr) (g$5898$U0r&n core-prim . caaaar) (g$5897$U0r&n core-prim . cdddr) (g$5896$U0r&n core-prim . cddar) (g$5895$U0r&n core-prim . cdadr) (g$5894$U0r&n core-prim . cdaar) (g$5893$U0r&n core-prim . caddr) (g$5892$U0r&n core-prim . cadar) (g$5891$U0r&n core-prim . caadr) (g$5890$U0r&n core-prim . caaar) (g$5889$U0r&n core-prim . cddr) (g$5888$U0r&n core-prim . cdar) (g$5887$U0r&n core-prim . cadr) (g$5886$U0r&n core-prim . caar) (g$11843$U0r&n core-prim . cdr) (g$11842$U0r&n core-prim . car) (g$5878$U0r&n core-prim . boolean?) (g$5934$U0r&n core-prim . boolean=?) (g$11841$U0r&n core-prim . atan) (g$6293$U0r&n core-prim . assertion-violation) (g$11840$U0r&n core-prim . asin) (g$11839$U0r&n core-prim . apply) (g$11838$U0r&n core-prim . append) (g$11837$U0r&n core-prim . angle) (g$11836$U0r&n core-prim . acos) (g$11835$U0r&n core-prim . abs) (g$11834$U0r&n core-prim . /) (g$11833$U0r&n core-prim . *) (g$11832$U0r&n core-prim . -) (g$11831$U0r&n core-prim . +) (g$11830$U0r&n core-prim . >=) (g$11829$U0r&n core-prim . >) (g$11828$U0r&n core-prim . =) (g$11827$U0r&n core-prim . <=) (g$11826$U0r&n core-prim . <) (g$11825$U0r&n core-prim . $$fxnot) (g$11824$U0r&n core-prim . $$fx-) (g$11823$U0r&n core-prim . $$fx*) (g$11822$U0r&n core-prim . $$fx+) (g$11821$U0r&n core-prim . $fxxor) (g$11820$U0r&n core-prim . $fxior) (g$11819$U0r&n core-prim . $fxand) (g$11818$U0r&n core-prim . $fx>=?) (g$11817$U0r&n core-prim . $fx>?) (g$11816$U0r&n core-prim . $fx<=?) (g$11815$U0r&n core-prim . $fx<?) (g$11814$U0r&n core-prim . $fx-) (g$11813$U0r&n core-prim . $fx*) (g$11812$U0r&n core-prim . $fx+) (g$11811$U0r&n core-prim . $fx=?) (g$11810$U0r&n core-prim . $vector-set!) (g$11809$U0r&n core-prim . $vector-ref) (g$11808$U0r&n core-prim . $cdr) (g$11807$U0r&n core-prim . $car) (g$11806$U0r&n core-prim . make-record-printer) (g$11805$U0r&n core-prim . eqv-hash) (g$11804$U0r&n core-prim . reverse!) (g$11803$U0r&n core-prim . deserialize-port) (g$11802$U0r&n core-prim . serialize-port) (g$7134$U0r&n core-prim . enum-set?) (g$6735$U0r&n core-prim . make-promise) (g$11616$U0r&n core-prim . load/unload) (g$11615$U0r&n core-prim . load/args) (g$7243$U0r&n core-prim . printf) (g$7244$U0r&n core-prim . fprintf) (g$7245$U0r&n core-prim . format) (g$11801$U0r&n core-prim . procedure-form) (g$11800$U0r&n core-prim . procedure-environment) (g$11799$U0r&n core-prim . procedure-name) (g$11798$U0r&n core-prim . procedure-arity) (g$11797$U0r&n core-prim . gc-collect) (g$11796$U0r&n core-prim . typeof) (g$11795$U0r&n core-prim . clr-type?) (g$11794$U0r&n core-prim . get-clr-type) (g$11793$U0r&n core-prim . get-command-line) (g$11792$U0r&n core-prim . vector-append) (g$11791$U0r&n core-prim . vector-filter) (g$11790$U0r&n core-prim . vector-reverse!) (g$11789$U0r&n core-prim . vector-contains?) (g$11788$U0r&n core-prim . vector-index-of) (g$11787$U0r&n core-prim . vector-copy) (g$11786$U0r&n core-prim . vector-binary-search) (g$11785$U0r&n core-prim . string-ci-compare) (g$11784$U0r&n core-prim . string-compare) (g$11783$U0r&n core-prim . string-format) (g$11612$U0r&n core-prim . trace-printer) (g$11782$U0r&n core-prim . make-traced-procedure) (g$7265$U0r&n core-prim . make-traced-macro) (g$8589$U0r&n core-prim . assertion-error) (g$11781$U0r&n core-prim . time-it) (g$7272$U0r&n core-prim . make-parameter) (g$11780$U0r&n core-prim . library-locator) (g$11779$U0r&n core-prim . get-library-paths) (g$11778$U0r&n core-prim . open-tcp-input/output-port) (g$11777$U0r&n core-prim . hashtable-for-each) (g$11776$U0r&n core-prim . hashtable-map) (g$8567$U0r&n core-prim . environment-bindings) (g$8570$U0r&n core-prim . environment-symbols) (g$8566$U0r&n core-prim . interaction-environment-symbols) (g$11775$U0r&n core-prim . optimization-level) (g$7894$U0r&n core-prim . library-path) (g$8275$U0r&n core-prim . make-compile-time-value) (g$8576$U0r&n core-prim . expand->core) (g$8574$U0r&n core-prim . expand) (g$8513$U0r&n core-prim . syntax-transpose) (g$7591$U0r&n core-prim . convert->cps) (g$7915$U0r&n core-prim . installed-libraries) (g$7906$U0r&n core-prim . uninstall-library) (g$7355$U0r&n core-prim . pretty-gensyms) (g$7352$U0r&n core-prim . pretty-width) (g$7357$U0r&n core-prim . pretty-print) (g$11774$U0r&n $core-rtd &no-nans-rtd &no-nans-rcd) (g$11773$U0r&n $core-rtd &no-infinities-rtd &no-infinities-rcd) (g$11772$U0r&n $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd) (g$11771$U0r&n $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd) (g$11770$U0r&n $core-rtd &i/o-port-rtd &i/o-port-rcd) (g$11769$U0r&n $core-rtd &i/o-file-does-not-exist-rtd &i/o-file-does-not-exist-rcd) (g$11768$U0r&n $core-rtd &i/o-file-already-exists-rtd &i/o-file-already-exists-rcd) (g$11767$U0r&n $core-rtd &i/o-file-is-read-only-rtd &i/o-fie-is-read-only-rcd) (g$11766$U0r&n $core-rtd &i/o-file-protection-rtd &i/o-file-protection-rcd) (g$11765$U0r&n $core-rtd &i/o-filename-rtd &i/o-filename-rcd) (g$11764$U0r&n $core-rtd &i/o-invalid-position-rtd &i/o-invalid-position-rcd) (g$11763$U0r&n $core-rtd &i/o-write-rtd &i/o-write-rcd) (g$11762$U0r&n $core-rtd &i/o-read-rtd &i/o-read-rcd) (g$11761$U0r&n $core-rtd &i/o-rtd &i/o-rcd) (g$11760$U0r&n $core-rtd &non-continuable-rtd &non-continuable-rcd) (g$11759$U0r&n $core-rtd &undefined-rtd &undefined-rcd) (g$11758$U0r&n $core-rtd &syntax-rtd &syntax-rcd) (g$11757$U0r&n $core-rtd &lexical-rtd &lexical-rcd) (g$11756$U0r&n $core-rtd &implementation-restriction-rtd &implementation-restriction-rcd) (g$11755$U0r&n $core-rtd &who-rtd &who-rcd) (g$11754$U0r&n $core-rtd &irritants-rtd &irritants-rcd) (g$11753$U0r&n $core-rtd &assertion-rtd &assertion-rcd) (g$11752$U0r&n $core-rtd &violation-rtd &violation-rcd) (g$11751$U0r&n $core-rtd &error-rtd &error-rcd) (g$11750$U0r&n $core-rtd &serious-rtd &serious-rcd) (g$11749$U0r&n $core-rtd &warning-rtd &warning-rcd) (g$11748$U0r&n $core-rtd &message-rtd &message-rcd) (g$11747$U0r&n $core-rtd &condition-rtd &condition-rcd) (g$11746$U0r&n macro . define-condition-type) (g$11745$U0r&n macro . define-enumeration) (g$11744$U0r&n macro . define-record-type) (g$11743$U0r&n macro . parent-rtd) (g$11742$U0r&n macro . nongenerative) (g$11741$U0r&n macro . opaque) (g$11740$U0r&n macro . sealed) (g$11739$U0r&n macro . protocol) (g$11738$U0r&n macro . parent) (g$11737$U0r&n macro . immutable) (g$11736$U0r&n macro . mutable) (g$11735$U0r&n macro . fields) (g$11734$U0r&n macro . error-handling-mode) (g$11733$U0r&n macro . file-options) (g$11732$U0r&n macro . buffer-mode) (g$11731$U0r&n macro . eol-style) (g$11730$U0r&n macro . guard) (g$11729$U0r&n macro . trace-letrec-syntax) (g$11728$U0r&n macro . trace-let-syntax) (g$11727$U0r&n macro . trace-define-syntax) (g$11726$U0r&n macro . trace-define) (g$11725$U0r&n macro . trace-lambda) (g$11724$U0r&n macro . unsyntax-splicing) (g$11723$U0r&n macro . unsyntax) (g$11722$U0r&n macro . unquote-splicing) (g$11721$U0r&n macro . unquote) (g$11720$U0r&n macro . _) (g$11719$U0r&n macro . else) (g$11718$U0r&n macro . =>) (g$11717$U0r&n macro . ...) (g$11716$U0r&n macro . assert) (g$11715$U0r&n macro . endianness) (g$11714$U0r&n macro . delay) (g$11713$U0r&n macro . time) (g$11712$U0r&n macro . or) (g$11711$U0r&n macro . and) (g$11710$U0r&n macro . do) (g$11709$U0r&n macro . cond) (g$11708$U0r&n macro . let*) (g$11707$U0r&n macro . let) (g$11706$U0r&n macro . identifier-syntax) (g$11705$U0r&n macro . with-syntax) (g$11704$U0r&n macro . quasisyntax) (g$11703$U0r&n macro . quasiquote) (g$11702$U0r&n macro . syntax-rules) (g$11701$U0r&n macro . include-into) (g$11700$U0r&n macro . include) (g$11699$U0r&n macro . define-struct) (g$11698$U0r&n macro . let-values) (g$11697$U0r&n macro . let*-values) (g$11696$U0r&n core-macro . record-constructor-descriptor) (g$11695$U0r&n core-macro . record-type-descriptor) (g$11694$U0r&n core-macro . fluid-let-syntax) (g$11693$U0r&n macro . case) (g$11692$U0r&n macro . parameterize) (g$11691$U0r&n macro . unless) (g$11690$U0r&n macro . when) (g$11689$U0r&n core-macro . if) (g$11688$U0r&n core-macro . letrec*) (g$11687$U0r&n core-macro . letrec) (g$11686$U0r&n core-macro . type-descriptor) (g$11685$U0r&n core-macro . case-lambda) (g$11684$U0r&n core-macro . lambda) (g$11683$U0r&n core-macro . syntax) (g$11682$U0r&n core-macro . syntax-case) (g$11681$U0r&n core-macro . quote) (g$11680$U0r&n core-macro . foreign-call) (g$11679$U0r&n letrec-syntax) (g$11678$U0r&n let-syntax) (g$11677$U0r&n set!) (g$11676$U0r&n export) (g$11675$U0r&n import) (g$11674$U0r&n library) (g$11673$U0r&n begin) (g$11672$U0r&n module) (g$11671$U0r&n define-syntax) (g$11670$U0r&n define)) values values '#f '#f '#f '#f))) 'g$12191$U0r&n '(rnrs records syntactic) '(6) '() '() '() '((define-record-type . g$11744$U0r&n) (parent-rtd . g$11743$U0r&n) (nongenerative . g$11742$U0r&n) (opaque . g$11741$U0r&n) (sealed . g$11740$U0r&n) (protocol . g$11739$U0r&n) (parent . g$11738$U0r&n) (immutable . g$11737$U0r&n) (mutable . g$11736$U0r&n) (fields . g$11735$U0r&n) (record-constructor-descriptor . g$11696$U0r&n) (record-type-descriptor . g$11695$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12190$U0r&n '(rnrs records procedural) '(6) '() '() '() '((record-type-descriptor? . g$12103$U0r&n) (record-predicate . g$12102$U0r&n) (record-mutator . g$12101$U0r&n) (record-constructor . g$12100$U0r&n) (record-accessor . g$12099$U0r&n) (make-record-type-descriptor . g$12098$U0r&n) (make-record-constructor-descriptor . g$12097$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12189$U0r&n '(rnrs records inspection) '(6) '() '() '() '((record? . g$12096$U0r&n) (record-type-uid . g$12095$U0r&n) (record-type-sealed? . g$12094$U0r&n) (record-type-parent . g$12093$U0r&n) (record-type-opaque? . g$12092$U0r&n) (record-type-name . g$12091$U0r&n) (record-type-generative? . g$12090$U0r&n) (record-type-field-names . g$12089$U0r&n) (record-rtd . g$12088$U0r&n) (record-field-mutable? . g$12087$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12188$U0r&n '(rnrs conditions) '(6) '() '() '() '((who-condition? . g$6455$U0r&n) (warning? . g$6374$U0r&n) (violation? . g$6413$U0r&n) (undefined-violation? . g$6525$U0r&n) (syntax-violation? . g$6510$U0r&n) (syntax-violation-subform . g$6512$U0r&n) (syntax-violation-form . g$6511$U0r&n) (simple-conditions . g$11996$U0r&n) (serious-condition? . g$6387$U0r&n) (non-continuable-violation? . g$6469$U0r&n) (message-condition? . g$6360$U0r&n) (make-who-condition . g$6453$U0r&n) (make-warning . g$6373$U0r&n) (make-violation . g$6412$U0r&n) (make-undefined-violation . g$6524$U0r&n) (make-syntax-violation . g$6507$U0r&n) (make-serious-condition . g$6386$U0r&n) (make-non-continuable-violation . g$6468$U0r&n) (make-message-condition . g$6358$U0r&n) (make-lexical-violation . g$6494$U0r&n) (make-irritants-condition . g$6438$U0r&n) (make-implementation-restriction-violation . g$6481$U0r&n) (make-error . g$6399$U0r&n) (make-assertion-violation . g$6425$U0r&n) (lexical-violation? . g$6495$U0r&n) (irritants-condition? . g$6440$U0r&n) (implementation-restriction-violation? . g$6482$U0r&n) (error? . g$6400$U0r&n) (condition-who . g$6456$U0r&n) (condition-predicate . g$11995$U0r&n) (condition-message . g$6361$U0r&n) (condition-irritants . g$6441$U0r&n) (condition-accessor . g$11994$U0r&n) (condition . g$11993$U0r&n) (assertion-violation? . g$6426$U0r&n) (condition? . g$11992$U0r&n) (&non-continuable . g$11760$U0r&n) (&undefined . g$11759$U0r&n) (&syntax . g$11758$U0r&n) (&lexical . g$11757$U0r&n) (&implementation-restriction . g$11756$U0r&n) (&who . g$11755$U0r&n) (&irritants . g$11754$U0r&n) (&assertion . g$11753$U0r&n) (&violation . g$11752$U0r&n) (&error . g$11751$U0r&n) (&serious . g$11750$U0r&n) (&warning . g$11749$U0r&n) (&message . g$11748$U0r&n) (&condition . g$11747$U0r&n) (define-condition-type . g$11746$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12187$U0r&n '(rnrs enums) '(6) '() '() '() '((make-enumeration . g$7157$U0r&n) (enum-set=? . g$7164$U0r&n) (enum-set-universe . g$7158$U0r&n) (enum-set-union . g$7165$U0r&n) (enum-set-subset? . g$7163$U0r&n) (enum-set-projection . g$7169$U0r&n) (enum-set-member? . g$7162$U0r&n) (enum-set-intersection . g$7166$U0r&n) (enum-set-indexer . g$7159$U0r&n) (enum-set-difference . g$7167$U0r&n) (enum-set-constructor . g$7160$U0r&n) (enum-set-complement . g$7168$U0r&n) (enum-set->list . g$7161$U0r&n) (define-enumeration . g$11745$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12186$U0r&n '(rnrs io ports) '(6) '() '() '() '((eof-object? . g$12065$U0r&n) (eof-object . g$12064$U0r&n) (current-error-port . g$12063$U0r&n) (current-output-port . g$12062$U0r&n) (current-input-port . g$12061$U0r&n) (output-port? . g$12060$U0r&n) (input-port? . g$12059$U0r&n) (utf-8-codec . g$12058$U0r&n) (utf-16-codec . g$12057$U0r&n) (transcoder-error-handling-mode . g$12056$U0r&n) (transcoder-eol-style . g$12055$U0r&n) (transcoder-codec . g$12054$U0r&n) (transcoded-port . g$12053$U0r&n) (textual-port? . g$12052$U0r&n) (string->bytevector . g$12051$U0r&n) (standard-output-port . g$12050$U0r&n) (standard-input-port . g$12049$U0r&n) (standard-error-port . g$12048$U0r&n) (set-port-position! . g$12047$U0r&n) (put-u8 . g$12046$U0r&n) (put-string . g$12045$U0r&n) (put-datum . g$7065$U0r&n) (put-char . g$12044$U0r&n) (put-bytevector . g$12043$U0r&n) (port? . g$7070$U0r&n) (port-transcoder . g$12042$U0r&n) (port-position . g$12041$U0r&n) (port-has-set-port-position!? . g$12040$U0r&n) (port-has-port-position? . g$12039$U0r&n) (port-eof? . g$12038$U0r&n) (output-port-buffer-mode . g$12037$U0r&n) (open-string-output-port . g$7069$U0r&n) (open-string-input-port . g$12036$U0r&n) (open-file-output-port . g$12035$U0r&n) (open-file-input/output-port . g$12034$U0r&n) (open-file-input-port . g$12033$U0r&n) (open-bytevector-output-port . g$12032$U0r&n) (open-bytevector-input-port . g$12031$U0r&n) (native-transcoder . g$12030$U0r&n) (native-eol-style . g$12029$U0r&n) (make-transcoder . g$12028$U0r&n) (latin-1-codec . g$12027$U0r&n) (make-i/o-write-error . g$6563$U0r&n) (make-i/o-read-error . g$6550$U0r&n) (make-i/o-port-error . g$6658$U0r&n) (make-i/o-invalid-position-error . g$6576$U0r&n) (make-i/o-filename-error . g$6591$U0r&n) (make-i/o-file-protection-error . g$6606$U0r&n) (make-i/o-file-is-read-only-error . g$6619$U0r&n) (make-i/o-file-does-not-exist-error . g$6645$U0r&n) (make-i/o-file-already-exists-error . g$6632$U0r&n) (make-i/o-error . g$6537$U0r&n) (make-i/o-encoding-error . g$6686$U0r&n) (make-i/o-decoding-error . g$6673$U0r&n) (make-custom-textual-output-port . g$12026$U0r&n) (make-custom-textual-input/output-port . g$12025$U0r&n) (make-custom-textual-input-port . g$12024$U0r&n) (make-custom-binary-output-port . g$12023$U0r&n) (make-custom-binary-input/output-port . g$12022$U0r&n) (make-custom-binary-input-port . g$12021$U0r&n) (lookahead-u8 . g$12019$U0r&n) (lookahead-char . g$12018$U0r&n) (i/o-write-error? . g$6564$U0r&n) (i/o-read-error? . g$6551$U0r&n) (i/o-port-error? . g$6660$U0r&n) (i/o-invalid-position-error? . g$6578$U0r&n) (i/o-error-position . g$6579$U0r&n) (i/o-filename-error? . g$6593$U0r&n) (i/o-file-protection-error? . g$6607$U0r&n) (i/o-file-is-read-only-error? . g$6620$U0r&n) (i/o-file-does-not-exist-error? . g$6646$U0r&n) (i/o-file-already-exists-error? . g$6633$U0r&n) (i/o-error? . g$6538$U0r&n) (i/o-error-port . g$6661$U0r&n) (i/o-error-filename . g$6594$U0r&n) (i/o-encoding-error? . g$6688$U0r&n) (i/o-encoding-error-char . g$6689$U0r&n) (i/o-decoding-error? . g$6674$U0r&n) (get-u8 . g$12017$U0r&n) (get-string-n! . g$12016$U0r&n) (get-string-n . g$12015$U0r&n) (get-string-all . g$12014$U0r&n) (get-line . g$12013$U0r&n) (get-datum . g$7066$U0r&n) (get-char . g$12012$U0r&n) (get-bytevector-some . g$12011$U0r&n) (get-bytevector-n! . g$12010$U0r&n) (get-bytevector-n . g$12009$U0r&n) (get-bytevector-all . g$12008$U0r&n) (flush-output-port . g$12007$U0r&n) (close-port . g$12006$U0r&n) (call-with-string-output-port . g$7071$U0r&n) (call-with-port . g$7072$U0r&n) (call-with-bytevector-output-port . g$12005$U0r&n) (bytevector->string . g$12004$U0r&n) (buffer-mode? . g$12003$U0r&n) (binary-port? . g$12002$U0r&n) (&i/o-encoding . g$11772$U0r&n) (&i/o-decoding . g$11771$U0r&n) (&i/o-port . g$11770$U0r&n) (&i/o-file-does-not-exist . g$11769$U0r&n) (&i/o-file-already-exists . g$11768$U0r&n) (&i/o-file-is-read-only . g$11767$U0r&n) (&i/o-file-protection . g$11766$U0r&n) (&i/o-filename . g$11765$U0r&n) (&i/o-invalid-position . g$11764$U0r&n) (&i/o-write . g$11763$U0r&n) (&i/o-read . g$11762$U0r&n) (&i/o . g$11761$U0r&n) (error-handling-mode . g$11734$U0r&n) (file-options . g$11733$U0r&n) (buffer-mode . g$11732$U0r&n) (eol-style . g$11731$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12185$U0r&n '(rnrs hashtables) '(6) '() '() '() '((symbol-hash . g$12084$U0r&n) (string-ci-hash . g$12083$U0r&n) (string-hash . g$12082$U0r&n) (equal-hash . g$12081$U0r&n) (hashtable-equivalence-function . g$12080$U0r&n) (make-hashtable . g$12079$U0r&n) (hashtable-hash-function . g$12078$U0r&n) (make-eqv-hashtable . g$6135$U0r&n) (make-eq-hashtable . g$6134$U0r&n) (hashtable? . g$12077$U0r&n) (hashtable-update! . g$6141$U0r&n) (hashtable-size . g$6136$U0r&n) (hashtable-set! . g$6138$U0r&n) (hashtable-ref . g$6137$U0r&n) (hashtable-mutable? . g$12076$U0r&n) (hashtable-keys . g$12075$U0r&n) (hashtable-entries . g$12074$U0r&n) (hashtable-delete! . g$6139$U0r&n) (hashtable-copy . g$12073$U0r&n) (hashtable-contains? . g$6140$U0r&n) (hashtable-clear! . g$6142$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12184$U0r&n '(rnrs arithmetic flonums) '(6) '() '() '() '((no-nans-violation? . g$6715$U0r&n) (no-infinities-violation? . g$6702$U0r&n) (make-no-nans-violation . g$6714$U0r&n) (make-no-infinities-violation . g$6701$U0r&n) (real->flonum . g$11962$U0r&n) (flzero? . g$7011$U0r&n) (fltruncate . g$7006$U0r&n) (fltan . g$6996$U0r&n) (flsqrt . g$7001$U0r&n) (flsin . g$6994$U0r&n) (flround . g$7007$U0r&n) (flpositive? . g$7009$U0r&n) (flonum? . g$5881$U0r&n) (flodd? . g$7013$U0r&n) (flnumerator . g$11961$U0r&n) (flnegative? . g$7010$U0r&n) (flnan? . g$6993$U0r&n) (flmod0 . g$6987$U0r&n) (flmod . g$6986$U0r&n) (flmin . g$7015$U0r&n) (flmax . g$7014$U0r&n) (fllog . g$7000$U0r&n) (flinteger? . g$6990$U0r&n) (flinfinite? . g$6992$U0r&n) (flfloor . g$7005$U0r&n) (flfinite? . g$6991$U0r&n) (flexpt . g$7003$U0r&n) (flexp . g$7002$U0r&n) (fleven? . g$7012$U0r&n) (fldiv0-and-mod0 . g$6989$U0r&n) (fldiv0 . g$11960$U0r&n) (fldiv-and-mod . g$6988$U0r&n) (fldiv . g$11959$U0r&n) (fldenominator . g$11958$U0r&n) (flcos . g$6995$U0r&n) (flceiling . g$7004$U0r&n) (flatan . g$6999$U0r&n) (flasin . g$6997$U0r&n) (flacos . g$6998$U0r&n) (flabs . g$7008$U0r&n) (fl>? . g$11957$U0r&n) (fl>=? . g$11956$U0r&n) (fl=? . g$11955$U0r&n) (fl<? . g$11954$U0r&n) (fl<=? . g$11953$U0r&n) (fl/ . g$11952$U0r&n) (fl- . g$11951$U0r&n) (fl+ . g$11950$U0r&n) (fl* . g$11949$U0r&n) (fixnum->flonum . g$11948$U0r&n) (&no-nans . g$11774$U0r&n) (&no-infinities . g$11773$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12183$U0r&n '(rnrs arithmetic fixnums) '(6) '() '() '() '((fxzero? . g$6907$U0r&n) (fxxor . g$11947$U0r&n) (fxrotate-bit-field . g$6921$U0r&n) (fxreverse-bit-field . g$11946$U0r&n) (fxpositive? . g$6905$U0r&n) (fxodd? . g$6909$U0r&n) (fxnot . g$11945$U0r&n) (fxnegative? . g$6906$U0r&n) (fxmod0 . g$6902$U0r&n) (fxmod . g$6901$U0r&n) (fxmin . g$6911$U0r&n) (fxmax . g$6910$U0r&n) (fxlength . g$11944$U0r&n) (fxior . g$11943$U0r&n) (fxif . g$6915$U0r&n) (fxfirst-bit-set . g$11942$U0r&n) (fxeven? . g$6908$U0r&n) (fxdiv0-and-mod0 . g$6904$U0r&n) (fxdiv0 . g$11941$U0r&n) (fxdiv-and-mod . g$6903$U0r&n) (fxdiv . g$11940$U0r&n) (fxcopy-bit-field . g$6918$U0r&n) (fxcopy-bit . g$6916$U0r&n) (fxbit-set? . g$11939$U0r&n) (fxbit-field . g$6917$U0r&n) (fxbit-count . g$11938$U0r&n) (fxarithmetic-shift-right . g$6920$U0r&n) (fxarithmetic-shift-left . g$6919$U0r&n) (fxarithmetic-shift . g$11937$U0r&n) (fxand . g$11936$U0r&n) (fx>? . g$11935$U0r&n) (fx>=? . g$11934$U0r&n) (fx=? . g$11933$U0r&n) (fx<? . g$11932$U0r&n) (fx<=? . g$11931$U0r&n) (fx-/carry . g$6913$U0r&n) (fx- . g$11930$U0r&n) (fx+/carry . g$6914$U0r&n) (fx+ . g$11929$U0r&n) (fx*/carry . g$6912$U0r&n) (fx* . g$11928$U0r&n) (greatest-fixnum . g$11927$U0r&n) (least-fixnum . g$11926$U0r&n) (fixnum-width . g$5882$U0r&n) (fixnum? . g$5880$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12182$U0r&n '(rnrs arithmetic bitwise) '(6) '() '() '() '((bitwise-rotate-bit-field . g$6864$U0r&n) (bitwise-reverse-bit-field . g$11925$U0r&n) (bitwise-length . g$11924$U0r&n) (bitwise-if . g$6858$U0r&n) (bitwise-first-bit-set . g$11923$U0r&n) (bitwise-copy-bit-field . g$6861$U0r&n) (bitwise-copy-bit . g$6859$U0r&n) (bitwise-bit-set? . g$11922$U0r&n) (bitwise-bit-field . g$6860$U0r&n) (bitwise-bit-count . g$11921$U0r&n) (bitwise-xor . g$11920$U0r&n) (bitwise-ior . g$11919$U0r&n) (bitwise-and . g$11918$U0r&n) (bitwise-not . g$11917$U0r&n) (bitwise-arithmetic-shift-right . g$6863$U0r&n) (bitwise-arithmetic-shift-left . g$6862$U0r&n) (bitwise-arithmetic-shift . g$11916$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12181$U0r&n '(rnrs exceptions) '(6) '() '() '() '((with-exception-handler . g$6289$U0r&n) (raise-continuable . g$6292$U0r&n) (raise . g$6291$U0r&n) (guard . g$11730$U0r&n) (else . g$11719$U0r&n) (=> . g$11718$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12180$U0r&n '(rnrs unicode) '(6) '() '() '() '((string-upcase . g$12118$U0r&n) (string-titlecase . g$12117$U0r&n) (string-normalize-nfkd . g$6800$U0r&n) (string-normalize-nfkc . g$6799$U0r&n) (string-normalize-nfd . g$6798$U0r&n) (string-normalize-nfc . g$6797$U0r&n) (string-foldcase . g$12116$U0r&n) (string-downcase . g$12115$U0r&n) (string-ci>? . g$6784$U0r&n) (string-ci>=? . g$6786$U0r&n) (string-ci=? . g$6782$U0r&n) (string-ci<? . g$6783$U0r&n) (string-ci<=? . g$6785$U0r&n) (char-whitespace? . g$12114$U0r&n) (char-upper-case? . g$12113$U0r&n) (char-title-case? . g$12112$U0r&n) (char-numeric? . g$12111$U0r&n) (char-lower-case? . g$12110$U0r&n) (char-general-category . g$12109$U0r&n) (char-upcase . g$12108$U0r&n) (char-titlecase . g$12107$U0r&n) (char-foldcase . g$12106$U0r&n) (char-downcase . g$12105$U0r&n) (char-ci>? . g$6794$U0r&n) (char-ci>=? . g$6796$U0r&n) (char-ci=? . g$6792$U0r&n) (char-ci<? . g$6793$U0r&n) (char-ci<=? . g$6795$U0r&n) (char-alphabetic? . g$12104$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12179$U0r&n '(rnrs bytevectors) '(6) '() '() '() '((make-bytevector . g$12020$U0r&n) (utf32->string . g$11991$U0r&n) (utf16->string . g$11990$U0r&n) (utf8->string . g$11989$U0r&n) (uint-list->bytevector . g$11988$U0r&n) (u8-list->bytevector . g$11987$U0r&n) (string->utf8 . g$11986$U0r&n) (string->utf32 . g$11985$U0r&n) (string->utf16 . g$11984$U0r&n) (sint-list->bytevector . g$11983$U0r&n) (native-endianness . g$6174$U0r&n) (bytevector? . g$5876$U0r&n) (bytevector=? . g$11982$U0r&n) (bytevector-uint-set! . g$11981$U0r&n) (bytevector-uint-ref . g$11980$U0r&n) (bytevector-u8-set! . g$11979$U0r&n) (bytevector-u8-ref . g$11978$U0r&n) (bytevector-u64-set! . g$6195$U0r&n) (bytevector-u64-ref . g$6191$U0r&n) (bytevector-u64-native-set! . g$6197$U0r&n) (bytevector-u64-native-ref . g$6193$U0r&n) (bytevector-u32-set! . g$6187$U0r&n) (bytevector-u32-ref . g$6183$U0r&n) (bytevector-u32-native-set! . g$6189$U0r&n) (bytevector-u32-native-ref . g$6185$U0r&n) (bytevector-u16-set! . g$6179$U0r&n) (bytevector-u16-ref . g$6175$U0r&n) (bytevector-u16-native-set! . g$6181$U0r&n) (bytevector-u16-native-ref . g$6177$U0r&n) (bytevector-sint-set! . g$11977$U0r&n) (bytevector-sint-ref . g$11976$U0r&n) (bytevector-s8-set! . g$11975$U0r&n) (bytevector-s8-ref . g$11974$U0r&n) (bytevector-s64-set! . g$6196$U0r&n) (bytevector-s64-ref . g$6192$U0r&n) (bytevector-s64-native-set! . g$6198$U0r&n) (bytevector-s64-native-ref . g$6194$U0r&n) (bytevector-s32-set! . g$6188$U0r&n) (bytevector-s32-ref . g$6184$U0r&n) (bytevector-s32-native-set! . g$6190$U0r&n) (bytevector-s32-native-ref . g$6186$U0r&n) (bytevector-s16-set! . g$6180$U0r&n) (bytevector-s16-ref . g$6176$U0r&n) (bytevector-s16-native-set! . g$6182$U0r&n) (bytevector-s16-native-ref . g$6178$U0r&n) (bytevector-length . g$11973$U0r&n) (bytevector-ieee-single-set! . g$11972$U0r&n) (bytevector-ieee-single-ref . g$11971$U0r&n) (bytevector-ieee-single-native-set! . g$6201$U0r&n) (bytevector-ieee-single-native-ref . g$6199$U0r&n) (bytevector-ieee-double-set! . g$11970$U0r&n) (bytevector-ieee-double-ref . g$11969$U0r&n) (bytevector-ieee-double-native-set! . g$6202$U0r&n) (bytevector-ieee-double-native-ref . g$6200$U0r&n) (bytevector-fill! . g$11968$U0r&n) (bytevector-copy! . g$11967$U0r&n) (bytevector-copy . g$11966$U0r&n) (bytevector->uint-list . g$11965$U0r&n) (bytevector->u8-list . g$11964$U0r&n) (bytevector->sint-list . g$11963$U0r&n) (endianness . g$11715$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12178$U0r&n '(rnrs io simple) '(6) '() '() '() '((call-with-output-file . g$7096$U0r&n) (call-with-input-file . g$7095$U0r&n) (write-char . g$7087$U0r&n) (write . g$12072$U0r&n) (with-output-to-file . g$7094$U0r&n) (with-input-from-file . g$7093$U0r&n) (read-char . g$7086$U0r&n) (read . g$12071$U0r&n) (peek-char . g$7085$U0r&n) (open-output-file . g$12070$U0r&n) (open-input-file . g$12069$U0r&n) (newline . g$7097$U0r&n) (display . g$12068$U0r&n) (close-output-port . g$12067$U0r&n) (close-input-port . g$12066$U0r&n) (eof-object? . g$12065$U0r&n) (eof-object . g$12064$U0r&n) (current-error-port . g$12063$U0r&n) (current-output-port . g$12062$U0r&n) (current-input-port . g$12061$U0r&n) (output-port? . g$12060$U0r&n) (input-port? . g$12059$U0r&n) (make-i/o-write-error . g$6563$U0r&n) (make-i/o-read-error . g$6550$U0r&n) (make-i/o-port-error . g$6658$U0r&n) (make-i/o-invalid-position-error . g$6576$U0r&n) (make-i/o-filename-error . g$6591$U0r&n) (make-i/o-file-protection-error . g$6606$U0r&n) (make-i/o-file-is-read-only-error . g$6619$U0r&n) (make-i/o-file-does-not-exist-error . g$6645$U0r&n) (make-i/o-file-already-exists-error . g$6632$U0r&n) (make-i/o-error . g$6537$U0r&n) (i/o-write-error? . g$6564$U0r&n) (i/o-read-error? . g$6551$U0r&n) (i/o-port-error? . g$6660$U0r&n) (i/o-invalid-position-error? . g$6578$U0r&n) (i/o-error-position . g$6579$U0r&n) (i/o-filename-error? . g$6593$U0r&n) (i/o-file-protection-error? . g$6607$U0r&n) (i/o-file-is-read-only-error? . g$6620$U0r&n) (i/o-file-does-not-exist-error? . g$6646$U0r&n) (i/o-file-already-exists-error? . g$6633$U0r&n) (i/o-error? . g$6538$U0r&n) (i/o-error-port . g$6661$U0r&n) (i/o-error-filename . g$6594$U0r&n) (&i/o-port . g$11770$U0r&n) (&i/o-file-does-not-exist . g$11769$U0r&n) (&i/o-file-already-exists . g$11768$U0r&n) (&i/o-file-is-read-only . g$11767$U0r&n) (&i/o-file-protection . g$11766$U0r&n) (&i/o-filename . g$11765$U0r&n) (&i/o-invalid-position . g$11764$U0r&n) (&i/o-write . g$11763$U0r&n) (&i/o-read . g$11762$U0r&n) (&i/o . g$11761$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12177$U0r&n '(rnrs lists) '(6) '() '() '() '((remove . g$5577$U0r&n) (remv . g$5578$U0r&n) (remp . g$5558$U0r&n) (remq . g$5579$U0r&n) (partition . g$5557$U0r&n) (memv . g$5565$U0r&n) (memq . g$5564$U0r&n) (memp . g$5567$U0r&n) (member . g$5566$U0r&n) (exists . g$5571$U0r&n) (for-all . g$5570$U0r&n) (fold-right . g$5576$U0r&n) (fold-left . g$5575$U0r&n) (find . g$5556$U0r&n) (filter . g$5559$U0r&n) (cons* . g$5574$U0r&n) (assv . g$5561$U0r&n) (assq . g$5560$U0r&n) (assp . g$5563$U0r&n) (assoc . g$5562$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12176$U0r&n '(rnrs base) '(6) '() '() '() '((zero? . g$5916$U0r&n) (vector? . g$5875$U0r&n) (vector-set! . g$11915$U0r&n) (vector-ref . g$11914$U0r&n) (vector-map . g$5948$U0r&n) (vector-length . g$11913$U0r&n) (vector-for-each . g$5949$U0r&n) (vector-fill! . g$5883$U0r&n) (vector->list . g$11912$U0r&n) (vector . g$11911$U0r&n) (values . g$11910$U0r&n) (truncate . g$11909$U0r&n) (tan . g$11908$U0r&n) (symbol? . g$5877$U0r&n) (symbol=? . g$5933$U0r&n) (symbol->string . g$11907$U0r&n) (substring . g$11906$U0r&n) (string? . g$11905$U0r&n) (string>? . g$5930$U0r&n) (string>=? . g$5932$U0r&n) (string=? . g$5928$U0r&n) (string<? . g$5929$U0r&n) (string<=? . g$5931$U0r&n) (string-ref . g$11904$U0r&n) (string-length . g$11903$U0r&n) (string-for-each . g$5950$U0r&n) (string-copy . g$11902$U0r&n) (string-append . g$11901$U0r&n) (string->symbol . g$11900$U0r&n) (string->number . g$11899$U0r&n) (string->list . g$11898$U0r&n) (string . g$11897$U0r&n) (sqrt . g$11896$U0r&n) (sin . g$11895$U0r&n) (round . g$11894$U0r&n) (reverse . g$5885$U0r&n) (real? . g$11893$U0r&n) (real-valued? . g$11892$U0r&n) (real-part . g$11891$U0r&n) (rationalize . g$5945$U0r&n) (rational? . g$11890$U0r&n) (rational-valued? . g$11889$U0r&n) (procedure? . g$5879$U0r&n) (positive? . g$5914$U0r&n) (pair? . g$11888$U0r&n) (odd? . g$5918$U0r&n) (numerator . g$11887$U0r&n) (number? . g$11886$U0r&n) (number->string . g$11885$U0r&n) (null? . g$11884$U0r&n) (not . g$11883$U0r&n) (negative? . g$5915$U0r&n) (nan? . g$11882$U0r&n) (min . g$5920$U0r&n) (max . g$5919$U0r&n) (map . g$5572$U0r&n) (make-vector . g$11881$U0r&n) (make-string . g$11880$U0r&n) (make-rectangular . g$11879$U0r&n) (make-polar . g$11878$U0r&n) (magnitude . g$11877$U0r&n) (log . g$11876$U0r&n) (list? . g$11875$U0r&n) (list-tail . g$5552$U0r&n) (list-ref . g$5553$U0r&n) (list->vector . g$5872$U0r&n) (list->string . g$5873$U0r&n) (list . g$11874$U0r&n) (length . g$11873$U0r&n) (lcm . g$5922$U0r&n) (integer? . g$11872$U0r&n) (integer-valued? . g$11871$U0r&n) (integer->char . g$11870$U0r&n) (infinite? . g$11869$U0r&n) (inexact? . g$11868$U0r&n) (inexact . g$11867$U0r&n) (imag-part . g$11866$U0r&n) (gcd . g$5921$U0r&n) (for-each . g$5573$U0r&n) (floor . g$11865$U0r&n) (finite? . g$11864$U0r&n) (expt . g$11863$U0r&n) (exp . g$11862$U0r&n) (exact? . g$11861$U0r&n) (exact-integer-sqrt . g$11860$U0r&n) (exact . g$11859$U0r&n) (even? . g$5917$U0r&n) (error . g$6294$U0r&n) (eqv? . g$11858$U0r&n) (equal? . g$11857$U0r&n) (eq? . g$11856$U0r&n) (dynamic-wind . g$11855$U0r&n) (div0-and-mod0 . g$5871$U0r&n) (mod0 . g$5869$U0r&n) (div0 . g$11854$U0r&n) (div-and-mod . g$5870$U0r&n) (mod . g$5868$U0r&n) (div . g$11853$U0r&n) (denominator . g$11852$U0r&n) (cos . g$11851$U0r&n) (cons . g$11850$U0r&n) (complex? . g$11849$U0r&n) (char? . g$5874$U0r&n) (char>? . g$5942$U0r&n) (char>=? . g$5944$U0r&n) (char=? . g$5940$U0r&n) (char<? . g$5941$U0r&n) (char<=? . g$5943$U0r&n) (char->integer . g$11848$U0r&n) (ceiling . g$11847$U0r&n) (call-with-values . g$11846$U0r&n) (call/cc . g$11845$U0r&n) (call-with-current-continuation . g$11844$U0r&n) (cddddr . g$5913$U0r&n) (cdddar . g$5912$U0r&n) (cddadr . g$5911$U0r&n) (cddaar . g$5910$U0r&n) (cdaddr . g$5909$U0r&n) (cdadar . g$5908$U0r&n) (cdaadr . g$5907$U0r&n) (cdaaar . g$5906$U0r&n) (cadddr . g$5905$U0r&n) (caddar . g$5904$U0r&n) (cadadr . g$5903$U0r&n) (cadaar . g$5902$U0r&n) (caaddr . g$5901$U0r&n) (caadar . g$5900$U0r&n) (caaadr . g$5899$U0r&n) (caaaar . g$5898$U0r&n) (cdddr . g$5897$U0r&n) (cddar . g$5896$U0r&n) (cdadr . g$5895$U0r&n) (cdaar . g$5894$U0r&n) (caddr . g$5893$U0r&n) (cadar . g$5892$U0r&n) (caadr . g$5891$U0r&n) (caaar . g$5890$U0r&n) (cddr . g$5889$U0r&n) (cdar . g$5888$U0r&n) (cadr . g$5887$U0r&n) (caar . g$5886$U0r&n) (cdr . g$11843$U0r&n) (car . g$11842$U0r&n) (boolean? . g$5878$U0r&n) (boolean=? . g$5934$U0r&n) (atan . g$11841$U0r&n) (assertion-violation . g$6293$U0r&n) (asin . g$11840$U0r&n) (apply . g$11839$U0r&n) (append . g$11838$U0r&n) (angle . g$11837$U0r&n) (acos . g$11836$U0r&n) (abs . g$11835$U0r&n) (/ . g$11834$U0r&n) (* . g$11833$U0r&n) (- . g$11832$U0r&n) (+ . g$11831$U0r&n) (>= . g$11830$U0r&n) (> . g$11829$U0r&n) (= . g$11828$U0r&n) (<= . g$11827$U0r&n) (< . g$11826$U0r&n) (unquote-splicing . g$11722$U0r&n) (unquote . g$11721$U0r&n) (_ . g$11720$U0r&n) (else . g$11719$U0r&n) (=> . g$11718$U0r&n) (... . g$11717$U0r&n) (assert . g$11716$U0r&n) (or . g$11712$U0r&n) (and . g$11711$U0r&n) (cond . g$11709$U0r&n) (let* . g$11708$U0r&n) (let . g$11707$U0r&n) (identifier-syntax . g$11706$U0r&n) (quasiquote . g$11703$U0r&n) (syntax-rules . g$11702$U0r&n) (let-values . g$11698$U0r&n) (let*-values . g$11697$U0r&n) (case . g$11693$U0r&n) (if . g$11689$U0r&n) (letrec* . g$11688$U0r&n) (letrec . g$11687$U0r&n) (lambda . g$11684$U0r&n) (quote . g$11681$U0r&n) (letrec-syntax . g$11679$U0r&n) (let-syntax . g$11678$U0r&n) (set! . g$11677$U0r&n) (begin . g$11673$U0r&n) (define-syntax . g$11671$U0r&n) (define . g$11670$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12175$U0r&n '(rnrs sorting) '(6) '() '() '() '((vector-sort! . g$12086$U0r&n) (vector-sort . g$12085$U0r&n) (list-sort . g$6753$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12174$U0r&n '(rnrs files) '(6) '() '() '() '((delete-file . g$6168$U0r&n) (file-exists? . g$6167$U0r&n) (make-i/o-write-error . g$6563$U0r&n) (make-i/o-read-error . g$6550$U0r&n) (make-i/o-port-error . g$6658$U0r&n) (make-i/o-invalid-position-error . g$6576$U0r&n) (make-i/o-filename-error . g$6591$U0r&n) (make-i/o-file-protection-error . g$6606$U0r&n) (make-i/o-file-is-read-only-error . g$6619$U0r&n) (make-i/o-file-does-not-exist-error . g$6645$U0r&n) (make-i/o-file-already-exists-error . g$6632$U0r&n) (make-i/o-error . g$6537$U0r&n) (i/o-write-error? . g$6564$U0r&n) (i/o-read-error? . g$6551$U0r&n) (i/o-port-error? . g$6660$U0r&n) (i/o-invalid-position-error? . g$6578$U0r&n) (i/o-error-position . g$6579$U0r&n) (i/o-filename-error? . g$6593$U0r&n) (i/o-file-protection-error? . g$6607$U0r&n) (i/o-file-is-read-only-error? . g$6620$U0r&n) (i/o-file-does-not-exist-error? . g$6646$U0r&n) (i/o-file-already-exists-error? . g$6633$U0r&n) (i/o-error? . g$6538$U0r&n) (i/o-error-port . g$6661$U0r&n) (i/o-error-filename . g$6594$U0r&n) (&i/o-port . g$11770$U0r&n) (&i/o-file-does-not-exist . g$11769$U0r&n) (&i/o-file-already-exists . g$11768$U0r&n) (&i/o-file-is-read-only . g$11767$U0r&n) (&i/o-file-protection . g$11766$U0r&n) (&i/o-filename . g$11765$U0r&n) (&i/o-invalid-position . g$11764$U0r&n) (&i/o-write . g$11763$U0r&n) (&i/o-read . g$11762$U0r&n) (&i/o . g$11761$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12173$U0r&n '(rnrs syntax-case) '(6) '() '() '() '((make-variable-transformer . g$8274$U0r&n) (identifier? . g$8594$U0r&n) (generate-temporaries . g$8583$U0r&n) (free-identifier=? . g$8584$U0r&n) (syntax->datum . g$8596$U0r&n) (datum->syntax . g$8595$U0r&n) (bound-identifier=? . g$8585$U0r&n) (syntax-violation . g$8593$U0r&n) (unsyntax-splicing . g$11724$U0r&n) (unsyntax . g$11723$U0r&n) (_ . g$11720$U0r&n) (... . g$11717$U0r&n) (with-syntax . g$11705$U0r&n) (quasisyntax . g$11704$U0r&n) (syntax . g$11683$U0r&n) (syntax-case . g$11682$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12172$U0r&n '(rnrs programs) '(6) '() '() '() '((exit . g$12001$U0r&n) (command-line . g$11613$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12171$U0r&n '(rnrs mutable-strings) '(6) '() '() '() '((string-fill! . g$12000$U0r&n) (string-set! . g$11999$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12170$U0r&n '(rnrs mutable-pairs) '(6) '() '() '() '((set-cdr! . g$11998$U0r&n) (set-car! . g$11997$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12169$U0r&n '(rnrs eval) '(6) '() '() '() '((eval . g$8575$U0r&n) (environment . g$8571$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12168$U0r&n '(rnrs control) '(6) '() '() '() '((do . g$11710$U0r&n) (unless . g$11691$U0r&n) (when . g$11690$U0r&n) (case-lambda . g$11685$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12167$U0r&n '(rnrs r5rs) '(6) '() '() '() '((scheme-report-environment . g$8573$U0r&n) (quotient . g$6732$U0r&n) (null-environment . g$8572$U0r&n) (remainder . g$6733$U0r&n) (modulo . g$6734$U0r&n) (inexact->exact . g$6729$U0r&n) (force . g$6736$U0r&n) (exact->inexact . g$6730$U0r&n) (delay . g$11714$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12166$U0r&n '(rnrs) '(6) '() '() '() '((string-upcase . g$12118$U0r&n) (string-titlecase . g$12117$U0r&n) (string-normalize-nfkd . g$6800$U0r&n) (string-normalize-nfkc . g$6799$U0r&n) (string-normalize-nfd . g$6798$U0r&n) (string-normalize-nfc . g$6797$U0r&n) (string-foldcase . g$12116$U0r&n) (string-downcase . g$12115$U0r&n) (string-ci>? . g$6784$U0r&n) (string-ci>=? . g$6786$U0r&n) (string-ci=? . g$6782$U0r&n) (string-ci<? . g$6783$U0r&n) (string-ci<=? . g$6785$U0r&n) (char-whitespace? . g$12114$U0r&n) (char-upper-case? . g$12113$U0r&n) (char-title-case? . g$12112$U0r&n) (char-numeric? . g$12111$U0r&n) (char-lower-case? . g$12110$U0r&n) (char-general-category . g$12109$U0r&n) (char-upcase . g$12108$U0r&n) (char-titlecase . g$12107$U0r&n) (char-foldcase . g$12106$U0r&n) (char-downcase . g$12105$U0r&n) (char-ci>? . g$6794$U0r&n) (char-ci>=? . g$6796$U0r&n) (char-ci=? . g$6792$U0r&n) (char-ci<? . g$6793$U0r&n) (char-ci<=? . g$6795$U0r&n) (char-alphabetic? . g$12104$U0r&n) (make-variable-transformer . g$8274$U0r&n) (identifier? . g$8594$U0r&n) (generate-temporaries . g$8583$U0r&n) (free-identifier=? . g$8584$U0r&n) (syntax->datum . g$8596$U0r&n) (datum->syntax . g$8595$U0r&n) (bound-identifier=? . g$8585$U0r&n) (record-type-descriptor? . g$12103$U0r&n) (record-predicate . g$12102$U0r&n) (record-mutator . g$12101$U0r&n) (record-constructor . g$12100$U0r&n) (record-accessor . g$12099$U0r&n) (make-record-type-descriptor . g$12098$U0r&n) (make-record-constructor-descriptor . g$12097$U0r&n) (record? . g$12096$U0r&n) (record-type-uid . g$12095$U0r&n) (record-type-sealed? . g$12094$U0r&n) (record-type-parent . g$12093$U0r&n) (record-type-opaque? . g$12092$U0r&n) (record-type-name . g$12091$U0r&n) (record-type-generative? . g$12090$U0r&n) (record-type-field-names . g$12089$U0r&n) (record-rtd . g$12088$U0r&n) (record-field-mutable? . g$12087$U0r&n) (delete-file . g$6168$U0r&n) (file-exists? . g$6167$U0r&n) (vector-sort! . g$12086$U0r&n) (vector-sort . g$12085$U0r&n) (list-sort . g$6753$U0r&n) (symbol-hash . g$12084$U0r&n) (string-ci-hash . g$12083$U0r&n) (string-hash . g$12082$U0r&n) (equal-hash . g$12081$U0r&n) (hashtable-equivalence-function . g$12080$U0r&n) (make-hashtable . g$12079$U0r&n) (hashtable-hash-function . g$12078$U0r&n) (make-eqv-hashtable . g$6135$U0r&n) (make-eq-hashtable . g$6134$U0r&n) (hashtable? . g$12077$U0r&n) (hashtable-update! . g$6141$U0r&n) (hashtable-size . g$6136$U0r&n) (hashtable-set! . g$6138$U0r&n) (hashtable-ref . g$6137$U0r&n) (hashtable-mutable? . g$12076$U0r&n) (hashtable-keys . g$12075$U0r&n) (hashtable-entries . g$12074$U0r&n) (hashtable-delete! . g$6139$U0r&n) (hashtable-copy . g$12073$U0r&n) (hashtable-contains? . g$6140$U0r&n) (hashtable-clear! . g$6142$U0r&n) (call-with-output-file . g$7096$U0r&n) (call-with-input-file . g$7095$U0r&n) (write-char . g$7087$U0r&n) (write . g$12072$U0r&n) (with-output-to-file . g$7094$U0r&n) (with-input-from-file . g$7093$U0r&n) (read-char . g$7086$U0r&n) (read . g$12071$U0r&n) (peek-char . g$7085$U0r&n) (open-output-file . g$12070$U0r&n) (open-input-file . g$12069$U0r&n) (newline . g$7097$U0r&n) (display . g$12068$U0r&n) (close-output-port . g$12067$U0r&n) (close-input-port . g$12066$U0r&n) (eof-object? . g$12065$U0r&n) (eof-object . g$12064$U0r&n) (current-error-port . g$12063$U0r&n) (current-output-port . g$12062$U0r&n) (current-input-port . g$12061$U0r&n) (output-port? . g$12060$U0r&n) (input-port? . g$12059$U0r&n) (utf-8-codec . g$12058$U0r&n) (utf-16-codec . g$12057$U0r&n) (transcoder-error-handling-mode . g$12056$U0r&n) (transcoder-eol-style . g$12055$U0r&n) (transcoder-codec . g$12054$U0r&n) (transcoded-port . g$12053$U0r&n) (textual-port? . g$12052$U0r&n) (string->bytevector . g$12051$U0r&n) (standard-output-port . g$12050$U0r&n) (standard-input-port . g$12049$U0r&n) (standard-error-port . g$12048$U0r&n) (set-port-position! . g$12047$U0r&n) (put-u8 . g$12046$U0r&n) (put-string . g$12045$U0r&n) (put-datum . g$7065$U0r&n) (put-char . g$12044$U0r&n) (put-bytevector . g$12043$U0r&n) (port? . g$7070$U0r&n) (port-transcoder . g$12042$U0r&n) (port-position . g$12041$U0r&n) (port-has-set-port-position!? . g$12040$U0r&n) (port-has-port-position? . g$12039$U0r&n) (port-eof? . g$12038$U0r&n) (output-port-buffer-mode . g$12037$U0r&n) (open-string-output-port . g$7069$U0r&n) (open-string-input-port . g$12036$U0r&n) (open-file-output-port . g$12035$U0r&n) (open-file-input/output-port . g$12034$U0r&n) (open-file-input-port . g$12033$U0r&n) (open-bytevector-output-port . g$12032$U0r&n) (open-bytevector-input-port . g$12031$U0r&n) (native-transcoder . g$12030$U0r&n) (native-eol-style . g$12029$U0r&n) (make-transcoder . g$12028$U0r&n) (latin-1-codec . g$12027$U0r&n) (make-i/o-write-error . g$6563$U0r&n) (make-i/o-read-error . g$6550$U0r&n) (make-i/o-port-error . g$6658$U0r&n) (make-i/o-invalid-position-error . g$6576$U0r&n) (make-i/o-filename-error . g$6591$U0r&n) (make-i/o-file-protection-error . g$6606$U0r&n) (make-i/o-file-is-read-only-error . g$6619$U0r&n) (make-i/o-file-does-not-exist-error . g$6645$U0r&n) (make-i/o-file-already-exists-error . g$6632$U0r&n) (make-i/o-error . g$6537$U0r&n) (make-i/o-encoding-error . g$6686$U0r&n) (make-i/o-decoding-error . g$6673$U0r&n) (make-custom-textual-output-port . g$12026$U0r&n) (make-custom-textual-input/output-port . g$12025$U0r&n) (make-custom-textual-input-port . g$12024$U0r&n) (make-custom-binary-output-port . g$12023$U0r&n) (make-custom-binary-input/output-port . g$12022$U0r&n) (make-custom-binary-input-port . g$12021$U0r&n) (make-bytevector . g$12020$U0r&n) (lookahead-u8 . g$12019$U0r&n) (lookahead-char . g$12018$U0r&n) (i/o-write-error? . g$6564$U0r&n) (i/o-read-error? . g$6551$U0r&n) (i/o-port-error? . g$6660$U0r&n) (i/o-invalid-position-error? . g$6578$U0r&n) (i/o-error-position . g$6579$U0r&n) (i/o-filename-error? . g$6593$U0r&n) (i/o-file-protection-error? . g$6607$U0r&n) (i/o-file-is-read-only-error? . g$6620$U0r&n) (i/o-file-does-not-exist-error? . g$6646$U0r&n) (i/o-file-already-exists-error? . g$6633$U0r&n) (i/o-error? . g$6538$U0r&n) (i/o-error-port . g$6661$U0r&n) (i/o-error-filename . g$6594$U0r&n) (i/o-encoding-error? . g$6688$U0r&n) (i/o-encoding-error-char . g$6689$U0r&n) (i/o-decoding-error? . g$6674$U0r&n) (get-u8 . g$12017$U0r&n) (get-string-n! . g$12016$U0r&n) (get-string-n . g$12015$U0r&n) (get-string-all . g$12014$U0r&n) (get-line . g$12013$U0r&n) (get-datum . g$7066$U0r&n) (get-char . g$12012$U0r&n) (get-bytevector-some . g$12011$U0r&n) (get-bytevector-n! . g$12010$U0r&n) (get-bytevector-n . g$12009$U0r&n) (get-bytevector-all . g$12008$U0r&n) (flush-output-port . g$12007$U0r&n) (close-port . g$12006$U0r&n) (call-with-string-output-port . g$7071$U0r&n) (call-with-port . g$7072$U0r&n) (call-with-bytevector-output-port . g$12005$U0r&n) (bytevector->string . g$12004$U0r&n) (buffer-mode? . g$12003$U0r&n) (binary-port? . g$12002$U0r&n) (exit . g$12001$U0r&n) (command-line . g$11613$U0r&n) (remove . g$5577$U0r&n) (remv . g$5578$U0r&n) (remp . g$5558$U0r&n) (remq . g$5579$U0r&n) (partition . g$5557$U0r&n) (memv . g$5565$U0r&n) (memq . g$5564$U0r&n) (memp . g$5567$U0r&n) (member . g$5566$U0r&n) (exists . g$5571$U0r&n) (for-all . g$5570$U0r&n) (fold-right . g$5576$U0r&n) (fold-left . g$5575$U0r&n) (find . g$5556$U0r&n) (filter . g$5559$U0r&n) (cons* . g$5574$U0r&n) (assv . g$5561$U0r&n) (assq . g$5560$U0r&n) (assp . g$5563$U0r&n) (assoc . g$5562$U0r&n) (with-exception-handler . g$6289$U0r&n) (raise-continuable . g$6292$U0r&n) (raise . g$6291$U0r&n) (make-enumeration . g$7157$U0r&n) (enum-set=? . g$7164$U0r&n) (enum-set-universe . g$7158$U0r&n) (enum-set-union . g$7165$U0r&n) (enum-set-subset? . g$7163$U0r&n) (enum-set-projection . g$7169$U0r&n) (enum-set-member? . g$7162$U0r&n) (enum-set-intersection . g$7166$U0r&n) (enum-set-indexer . g$7159$U0r&n) (enum-set-difference . g$7167$U0r&n) (enum-set-constructor . g$7160$U0r&n) (enum-set-complement . g$7168$U0r&n) (enum-set->list . g$7161$U0r&n) (who-condition? . g$6455$U0r&n) (warning? . g$6374$U0r&n) (violation? . g$6413$U0r&n) (undefined-violation? . g$6525$U0r&n) (syntax-violation? . g$6510$U0r&n) (syntax-violation-subform . g$6512$U0r&n) (syntax-violation-form . g$6511$U0r&n) (syntax-violation . g$8593$U0r&n) (simple-conditions . g$11996$U0r&n) (serious-condition? . g$6387$U0r&n) (non-continuable-violation? . g$6469$U0r&n) (message-condition? . g$6360$U0r&n) (make-who-condition . g$6453$U0r&n) (make-warning . g$6373$U0r&n) (make-violation . g$6412$U0r&n) (make-undefined-violation . g$6524$U0r&n) (make-syntax-violation . g$6507$U0r&n) (make-serious-condition . g$6386$U0r&n) (make-non-continuable-violation . g$6468$U0r&n) (make-message-condition . g$6358$U0r&n) (make-lexical-violation . g$6494$U0r&n) (make-irritants-condition . g$6438$U0r&n) (make-implementation-restriction-violation . g$6481$U0r&n) (make-error . g$6399$U0r&n) (make-assertion-violation . g$6425$U0r&n) (lexical-violation? . g$6495$U0r&n) (irritants-condition? . g$6440$U0r&n) (implementation-restriction-violation? . g$6482$U0r&n) (error? . g$6400$U0r&n) (condition-who . g$6456$U0r&n) (condition-predicate . g$11995$U0r&n) (condition-message . g$6361$U0r&n) (condition-irritants . g$6441$U0r&n) (condition-accessor . g$11994$U0r&n) (condition . g$11993$U0r&n) (assertion-violation? . g$6426$U0r&n) (condition? . g$11992$U0r&n) (utf32->string . g$11991$U0r&n) (utf16->string . g$11990$U0r&n) (utf8->string . g$11989$U0r&n) (uint-list->bytevector . g$11988$U0r&n) (u8-list->bytevector . g$11987$U0r&n) (string->utf8 . g$11986$U0r&n) (string->utf32 . g$11985$U0r&n) (string->utf16 . g$11984$U0r&n) (sint-list->bytevector . g$11983$U0r&n) (native-endianness . g$6174$U0r&n) (bytevector? . g$5876$U0r&n) (bytevector=? . g$11982$U0r&n) (bytevector-uint-set! . g$11981$U0r&n) (bytevector-uint-ref . g$11980$U0r&n) (bytevector-u8-set! . g$11979$U0r&n) (bytevector-u8-ref . g$11978$U0r&n) (bytevector-u64-set! . g$6195$U0r&n) (bytevector-u64-ref . g$6191$U0r&n) (bytevector-u64-native-set! . g$6197$U0r&n) (bytevector-u64-native-ref . g$6193$U0r&n) (bytevector-u32-set! . g$6187$U0r&n) (bytevector-u32-ref . g$6183$U0r&n) (bytevector-u32-native-set! . g$6189$U0r&n) (bytevector-u32-native-ref . g$6185$U0r&n) (bytevector-u16-set! . g$6179$U0r&n) (bytevector-u16-ref . g$6175$U0r&n) (bytevector-u16-native-set! . g$6181$U0r&n) (bytevector-u16-native-ref . g$6177$U0r&n) (bytevector-sint-set! . g$11977$U0r&n) (bytevector-sint-ref . g$11976$U0r&n) (bytevector-s8-set! . g$11975$U0r&n) (bytevector-s8-ref . g$11974$U0r&n) (bytevector-s64-set! . g$6196$U0r&n) (bytevector-s64-ref . g$6192$U0r&n) (bytevector-s64-native-set! . g$6198$U0r&n) (bytevector-s64-native-ref . g$6194$U0r&n) (bytevector-s32-set! . g$6188$U0r&n) (bytevector-s32-ref . g$6184$U0r&n) (bytevector-s32-native-set! . g$6190$U0r&n) (bytevector-s32-native-ref . g$6186$U0r&n) (bytevector-s16-set! . g$6180$U0r&n) (bytevector-s16-ref . g$6176$U0r&n) (bytevector-s16-native-set! . g$6182$U0r&n) (bytevector-s16-native-ref . g$6178$U0r&n) (bytevector-length . g$11973$U0r&n) (bytevector-ieee-single-set! . g$11972$U0r&n) (bytevector-ieee-single-ref . g$11971$U0r&n) (bytevector-ieee-single-native-set! . g$6201$U0r&n) (bytevector-ieee-single-native-ref . g$6199$U0r&n) (bytevector-ieee-double-set! . g$11970$U0r&n) (bytevector-ieee-double-ref . g$11969$U0r&n) (bytevector-ieee-double-native-set! . g$6202$U0r&n) (bytevector-ieee-double-native-ref . g$6200$U0r&n) (bytevector-fill! . g$11968$U0r&n) (bytevector-copy! . g$11967$U0r&n) (bytevector-copy . g$11966$U0r&n) (bytevector->uint-list . g$11965$U0r&n) (bytevector->u8-list . g$11964$U0r&n) (bytevector->sint-list . g$11963$U0r&n) (no-nans-violation? . g$6715$U0r&n) (no-infinities-violation? . g$6702$U0r&n) (make-no-nans-violation . g$6714$U0r&n) (make-no-infinities-violation . g$6701$U0r&n) (real->flonum . g$11962$U0r&n) (flzero? . g$7011$U0r&n) (fltruncate . g$7006$U0r&n) (fltan . g$6996$U0r&n) (flsqrt . g$7001$U0r&n) (flsin . g$6994$U0r&n) (flround . g$7007$U0r&n) (flpositive? . g$7009$U0r&n) (flonum? . g$5881$U0r&n) (flodd? . g$7013$U0r&n) (flnumerator . g$11961$U0r&n) (flnegative? . g$7010$U0r&n) (flnan? . g$6993$U0r&n) (flmod0 . g$6987$U0r&n) (flmod . g$6986$U0r&n) (flmin . g$7015$U0r&n) (flmax . g$7014$U0r&n) (fllog . g$7000$U0r&n) (flinteger? . g$6990$U0r&n) (flinfinite? . g$6992$U0r&n) (flfloor . g$7005$U0r&n) (flfinite? . g$6991$U0r&n) (flexpt . g$7003$U0r&n) (flexp . g$7002$U0r&n) (fleven? . g$7012$U0r&n) (fldiv0-and-mod0 . g$6989$U0r&n) (fldiv0 . g$11960$U0r&n) (fldiv-and-mod . g$6988$U0r&n) (fldiv . g$11959$U0r&n) (fldenominator . g$11958$U0r&n) (flcos . g$6995$U0r&n) (flceiling . g$7004$U0r&n) (flatan . g$6999$U0r&n) (flasin . g$6997$U0r&n) (flacos . g$6998$U0r&n) (flabs . g$7008$U0r&n) (fl>? . g$11957$U0r&n) (fl>=? . g$11956$U0r&n) (fl=? . g$11955$U0r&n) (fl<? . g$11954$U0r&n) (fl<=? . g$11953$U0r&n) (fl/ . g$11952$U0r&n) (fl- . g$11951$U0r&n) (fl+ . g$11950$U0r&n) (fl* . g$11949$U0r&n) (fixnum->flonum . g$11948$U0r&n) (fxzero? . g$6907$U0r&n) (fxxor . g$11947$U0r&n) (fxrotate-bit-field . g$6921$U0r&n) (fxreverse-bit-field . g$11946$U0r&n) (fxpositive? . g$6905$U0r&n) (fxodd? . g$6909$U0r&n) (fxnot . g$11945$U0r&n) (fxnegative? . g$6906$U0r&n) (fxmod0 . g$6902$U0r&n) (fxmod . g$6901$U0r&n) (fxmin . g$6911$U0r&n) (fxmax . g$6910$U0r&n) (fxlength . g$11944$U0r&n) (fxior . g$11943$U0r&n) (fxif . g$6915$U0r&n) (fxfirst-bit-set . g$11942$U0r&n) (fxeven? . g$6908$U0r&n) (fxdiv0-and-mod0 . g$6904$U0r&n) (fxdiv0 . g$11941$U0r&n) (fxdiv-and-mod . g$6903$U0r&n) (fxdiv . g$11940$U0r&n) (fxcopy-bit-field . g$6918$U0r&n) (fxcopy-bit . g$6916$U0r&n) (fxbit-set? . g$11939$U0r&n) (fxbit-field . g$6917$U0r&n) (fxbit-count . g$11938$U0r&n) (fxarithmetic-shift-right . g$6920$U0r&n) (fxarithmetic-shift-left . g$6919$U0r&n) (fxarithmetic-shift . g$11937$U0r&n) (fxand . g$11936$U0r&n) (fx>? . g$11935$U0r&n) (fx>=? . g$11934$U0r&n) (fx=? . g$11933$U0r&n) (fx<? . g$11932$U0r&n) (fx<=? . g$11931$U0r&n) (fx-/carry . g$6913$U0r&n) (fx- . g$11930$U0r&n) (fx+/carry . g$6914$U0r&n) (fx+ . g$11929$U0r&n) (fx*/carry . g$6912$U0r&n) (fx* . g$11928$U0r&n) (greatest-fixnum . g$11927$U0r&n) (least-fixnum . g$11926$U0r&n) (fixnum-width . g$5882$U0r&n) (fixnum? . g$5880$U0r&n) (bitwise-rotate-bit-field . g$6864$U0r&n) (bitwise-reverse-bit-field . g$11925$U0r&n) (bitwise-length . g$11924$U0r&n) (bitwise-if . g$6858$U0r&n) (bitwise-first-bit-set . g$11923$U0r&n) (bitwise-copy-bit-field . g$6861$U0r&n) (bitwise-copy-bit . g$6859$U0r&n) (bitwise-bit-set? . g$11922$U0r&n) (bitwise-bit-field . g$6860$U0r&n) (bitwise-bit-count . g$11921$U0r&n) (bitwise-xor . g$11920$U0r&n) (bitwise-ior . g$11919$U0r&n) (bitwise-and . g$11918$U0r&n) (bitwise-not . g$11917$U0r&n) (bitwise-arithmetic-shift-right . g$6863$U0r&n) (bitwise-arithmetic-shift-left . g$6862$U0r&n) (bitwise-arithmetic-shift . g$11916$U0r&n) (zero? . g$5916$U0r&n) (vector? . g$5875$U0r&n) (vector-set! . g$11915$U0r&n) (vector-ref . g$11914$U0r&n) (vector-map . g$5948$U0r&n) (vector-length . g$11913$U0r&n) (vector-for-each . g$5949$U0r&n) (vector-fill! . g$5883$U0r&n) (vector->list . g$11912$U0r&n) (vector . g$11911$U0r&n) (values . g$11910$U0r&n) (truncate . g$11909$U0r&n) (tan . g$11908$U0r&n) (symbol? . g$5877$U0r&n) (symbol=? . g$5933$U0r&n) (symbol->string . g$11907$U0r&n) (substring . g$11906$U0r&n) (string? . g$11905$U0r&n) (string>? . g$5930$U0r&n) (string>=? . g$5932$U0r&n) (string=? . g$5928$U0r&n) (string<? . g$5929$U0r&n) (string<=? . g$5931$U0r&n) (string-ref . g$11904$U0r&n) (string-length . g$11903$U0r&n) (string-for-each . g$5950$U0r&n) (string-copy . g$11902$U0r&n) (string-append . g$11901$U0r&n) (string->symbol . g$11900$U0r&n) (string->number . g$11899$U0r&n) (string->list . g$11898$U0r&n) (string . g$11897$U0r&n) (sqrt . g$11896$U0r&n) (sin . g$11895$U0r&n) (round . g$11894$U0r&n) (reverse . g$5885$U0r&n) (real? . g$11893$U0r&n) (real-valued? . g$11892$U0r&n) (real-part . g$11891$U0r&n) (rationalize . g$5945$U0r&n) (rational? . g$11890$U0r&n) (rational-valued? . g$11889$U0r&n) (procedure? . g$5879$U0r&n) (positive? . g$5914$U0r&n) (pair? . g$11888$U0r&n) (odd? . g$5918$U0r&n) (numerator . g$11887$U0r&n) (number? . g$11886$U0r&n) (number->string . g$11885$U0r&n) (null? . g$11884$U0r&n) (not . g$11883$U0r&n) (negative? . g$5915$U0r&n) (nan? . g$11882$U0r&n) (min . g$5920$U0r&n) (max . g$5919$U0r&n) (map . g$5572$U0r&n) (make-vector . g$11881$U0r&n) (make-string . g$11880$U0r&n) (make-rectangular . g$11879$U0r&n) (make-polar . g$11878$U0r&n) (magnitude . g$11877$U0r&n) (log . g$11876$U0r&n) (list? . g$11875$U0r&n) (list-tail . g$5552$U0r&n) (list-ref . g$5553$U0r&n) (list->vector . g$5872$U0r&n) (list->string . g$5873$U0r&n) (list . g$11874$U0r&n) (length . g$11873$U0r&n) (lcm . g$5922$U0r&n) (integer? . g$11872$U0r&n) (integer-valued? . g$11871$U0r&n) (integer->char . g$11870$U0r&n) (infinite? . g$11869$U0r&n) (inexact? . g$11868$U0r&n) (inexact . g$11867$U0r&n) (imag-part . g$11866$U0r&n) (gcd . g$5921$U0r&n) (for-each . g$5573$U0r&n) (floor . g$11865$U0r&n) (finite? . g$11864$U0r&n) (expt . g$11863$U0r&n) (exp . g$11862$U0r&n) (exact? . g$11861$U0r&n) (exact-integer-sqrt . g$11860$U0r&n) (exact . g$11859$U0r&n) (even? . g$5917$U0r&n) (error . g$6294$U0r&n) (eqv? . g$11858$U0r&n) (equal? . g$11857$U0r&n) (eq? . g$11856$U0r&n) (dynamic-wind . g$11855$U0r&n) (div0-and-mod0 . g$5871$U0r&n) (mod0 . g$5869$U0r&n) (div0 . g$11854$U0r&n) (div-and-mod . g$5870$U0r&n) (mod . g$5868$U0r&n) (div . g$11853$U0r&n) (denominator . g$11852$U0r&n) (cos . g$11851$U0r&n) (cons . g$11850$U0r&n) (complex? . g$11849$U0r&n) (char? . g$5874$U0r&n) (char>? . g$5942$U0r&n) (char>=? . g$5944$U0r&n) (char=? . g$5940$U0r&n) (char<? . g$5941$U0r&n) (char<=? . g$5943$U0r&n) (char->integer . g$11848$U0r&n) (ceiling . g$11847$U0r&n) (call-with-values . g$11846$U0r&n) (call/cc . g$11845$U0r&n) (call-with-current-continuation . g$11844$U0r&n) (cddddr . g$5913$U0r&n) (cdddar . g$5912$U0r&n) (cddadr . g$5911$U0r&n) (cddaar . g$5910$U0r&n) (cdaddr . g$5909$U0r&n) (cdadar . g$5908$U0r&n) (cdaadr . g$5907$U0r&n) (cdaaar . g$5906$U0r&n) (cadddr . g$5905$U0r&n) (caddar . g$5904$U0r&n) (cadadr . g$5903$U0r&n) (cadaar . g$5902$U0r&n) (caaddr . g$5901$U0r&n) (caadar . g$5900$U0r&n) (caaadr . g$5899$U0r&n) (caaaar . g$5898$U0r&n) (cdddr . g$5897$U0r&n) (cddar . g$5896$U0r&n) (cdadr . g$5895$U0r&n) (cdaar . g$5894$U0r&n) (caddr . g$5893$U0r&n) (cadar . g$5892$U0r&n) (caadr . g$5891$U0r&n) (caaar . g$5890$U0r&n) (cddr . g$5889$U0r&n) (cdar . g$5888$U0r&n) (cadr . g$5887$U0r&n) (caar . g$5886$U0r&n) (cdr . g$11843$U0r&n) (car . g$11842$U0r&n) (boolean? . g$5878$U0r&n) (boolean=? . g$5934$U0r&n) (atan . g$11841$U0r&n) (assertion-violation . g$6293$U0r&n) (asin . g$11840$U0r&n) (apply . g$11839$U0r&n) (append . g$11838$U0r&n) (angle . g$11837$U0r&n) (acos . g$11836$U0r&n) (abs . g$11835$U0r&n) (/ . g$11834$U0r&n) (* . g$11833$U0r&n) (- . g$11832$U0r&n) (+ . g$11831$U0r&n) (>= . g$11830$U0r&n) (> . g$11829$U0r&n) (= . g$11828$U0r&n) (<= . g$11827$U0r&n) (< . g$11826$U0r&n) (&no-nans . g$11774$U0r&n) (&no-infinities . g$11773$U0r&n) (&i/o-encoding . g$11772$U0r&n) (&i/o-decoding . g$11771$U0r&n) (&i/o-port . g$11770$U0r&n) (&i/o-file-does-not-exist . g$11769$U0r&n) (&i/o-file-already-exists . g$11768$U0r&n) (&i/o-file-is-read-only . g$11767$U0r&n) (&i/o-file-protection . g$11766$U0r&n) (&i/o-filename . g$11765$U0r&n) (&i/o-invalid-position . g$11764$U0r&n) (&i/o-write . g$11763$U0r&n) (&i/o-read . g$11762$U0r&n) (&i/o . g$11761$U0r&n) (&non-continuable . g$11760$U0r&n) (&undefined . g$11759$U0r&n) (&syntax . g$11758$U0r&n) (&lexical . g$11757$U0r&n) (&implementation-restriction . g$11756$U0r&n) (&who . g$11755$U0r&n) (&irritants . g$11754$U0r&n) (&assertion . g$11753$U0r&n) (&violation . g$11752$U0r&n) (&error . g$11751$U0r&n) (&serious . g$11750$U0r&n) (&warning . g$11749$U0r&n) (&message . g$11748$U0r&n) (&condition . g$11747$U0r&n) (define-condition-type . g$11746$U0r&n) (define-enumeration . g$11745$U0r&n) (define-record-type . g$11744$U0r&n) (parent-rtd . g$11743$U0r&n) (nongenerative . g$11742$U0r&n) (opaque . g$11741$U0r&n) (sealed . g$11740$U0r&n) (protocol . g$11739$U0r&n) (parent . g$11738$U0r&n) (immutable . g$11737$U0r&n) (mutable . g$11736$U0r&n) (fields . g$11735$U0r&n) (error-handling-mode . g$11734$U0r&n) (file-options . g$11733$U0r&n) (buffer-mode . g$11732$U0r&n) (eol-style . g$11731$U0r&n) (guard . g$11730$U0r&n) (unsyntax-splicing . g$11724$U0r&n) (unsyntax . g$11723$U0r&n) (unquote-splicing . g$11722$U0r&n) (unquote . g$11721$U0r&n) (_ . g$11720$U0r&n) (else . g$11719$U0r&n) (=> . g$11718$U0r&n) (... . g$11717$U0r&n) (assert . g$11716$U0r&n) (endianness . g$11715$U0r&n) (or . g$11712$U0r&n) (and . g$11711$U0r&n) (do . g$11710$U0r&n) (cond . g$11709$U0r&n) (let* . g$11708$U0r&n) (let . g$11707$U0r&n) (identifier-syntax . g$11706$U0r&n) (with-syntax . g$11705$U0r&n) (quasisyntax . g$11704$U0r&n) (quasiquote . g$11703$U0r&n) (syntax-rules . g$11702$U0r&n) (let-values . g$11698$U0r&n) (let*-values . g$11697$U0r&n) (record-constructor-descriptor . g$11696$U0r&n) (record-type-descriptor . g$11695$U0r&n) (case . g$11693$U0r&n) (unless . g$11691$U0r&n) (when . g$11690$U0r&n) (if . g$11689$U0r&n) (letrec* . g$11688$U0r&n) (letrec . g$11687$U0r&n) (case-lambda . g$11685$U0r&n) (lambda . g$11684$U0r&n) (syntax . g$11683$U0r&n) (syntax-case . g$11682$U0r&n) (quote . g$11681$U0r&n) (letrec-syntax . g$11679$U0r&n) (let-syntax . g$11678$U0r&n) (set! . g$11677$U0r&n) (begin . g$11673$U0r&n) (define-syntax . g$11671$U0r&n) (define . g$11670$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12165$U0r&n '(psyntax scheme-report-environment-5) '() '() '() '() '((char-ready? . g$12119$U0r&n) (string-ci>? . g$6784$U0r&n) (string-ci>=? . g$6786$U0r&n) (string-ci=? . g$6782$U0r&n) (string-ci<? . g$6783$U0r&n) (string-ci<=? . g$6785$U0r&n) (char-whitespace? . g$12114$U0r&n) (char-upper-case? . g$12113$U0r&n) (char-numeric? . g$12111$U0r&n) (char-lower-case? . g$12110$U0r&n) (char-upcase . g$12108$U0r&n) (char-downcase . g$12105$U0r&n) (char-ci>? . g$6794$U0r&n) (char-ci>=? . g$6796$U0r&n) (char-ci=? . g$6792$U0r&n) (char-ci<? . g$6793$U0r&n) (char-ci<=? . g$6795$U0r&n) (char-alphabetic? . g$12104$U0r&n) (call-with-output-file . g$7096$U0r&n) (call-with-input-file . g$7095$U0r&n) (write-char . g$7087$U0r&n) (write . g$12072$U0r&n) (with-output-to-file . g$7094$U0r&n) (with-input-from-file . g$7093$U0r&n) (read-char . g$7086$U0r&n) (read . g$12071$U0r&n) (peek-char . g$7085$U0r&n) (open-output-file . g$12070$U0r&n) (open-input-file . g$12069$U0r&n) (newline . g$7097$U0r&n) (display . g$12068$U0r&n) (close-output-port . g$12067$U0r&n) (close-input-port . g$12066$U0r&n) (eof-object? . g$12065$U0r&n) (current-error-port . g$12063$U0r&n) (current-output-port . g$12062$U0r&n) (current-input-port . g$12061$U0r&n) (output-port? . g$12060$U0r&n) (input-port? . g$12059$U0r&n) (scheme-report-environment . g$8573$U0r&n) (quotient . g$6732$U0r&n) (null-environment . g$8572$U0r&n) (remainder . g$6733$U0r&n) (modulo . g$6734$U0r&n) (inexact->exact . g$6729$U0r&n) (force . g$6736$U0r&n) (exact->inexact . g$6730$U0r&n) (string-fill! . g$12000$U0r&n) (string-set! . g$11999$U0r&n) (set-cdr! . g$11998$U0r&n) (set-car! . g$11997$U0r&n) (memv . g$5565$U0r&n) (memq . g$5564$U0r&n) (member . g$5566$U0r&n) (assv . g$5561$U0r&n) (assq . g$5560$U0r&n) (assoc . g$5562$U0r&n) (eval . g$8575$U0r&n) (zero? . g$5916$U0r&n) (vector? . g$5875$U0r&n) (vector-set! . g$11915$U0r&n) (vector-ref . g$11914$U0r&n) (vector-length . g$11913$U0r&n) (vector-fill! . g$5883$U0r&n) (vector->list . g$11912$U0r&n) (vector . g$11911$U0r&n) (values . g$11910$U0r&n) (truncate . g$11909$U0r&n) (tan . g$11908$U0r&n) (symbol? . g$5877$U0r&n) (symbol->string . g$11907$U0r&n) (substring . g$11906$U0r&n) (string? . g$11905$U0r&n) (string>? . g$5930$U0r&n) (string>=? . g$5932$U0r&n) (string=? . g$5928$U0r&n) (string<? . g$5929$U0r&n) (string<=? . g$5931$U0r&n) (string-ref . g$11904$U0r&n) (string-length . g$11903$U0r&n) (string-copy . g$11902$U0r&n) (string-append . g$11901$U0r&n) (string->symbol . g$11900$U0r&n) (string->number . g$11899$U0r&n) (string->list . g$11898$U0r&n) (string . g$11897$U0r&n) (sqrt . g$11896$U0r&n) (sin . g$11895$U0r&n) (round . g$11894$U0r&n) (reverse . g$5885$U0r&n) (real? . g$11893$U0r&n) (real-part . g$11891$U0r&n) (rationalize . g$5945$U0r&n) (rational? . g$11890$U0r&n) (procedure? . g$5879$U0r&n) (positive? . g$5914$U0r&n) (pair? . g$11888$U0r&n) (odd? . g$5918$U0r&n) (numerator . g$11887$U0r&n) (number? . g$11886$U0r&n) (number->string . g$11885$U0r&n) (null? . g$11884$U0r&n) (not . g$11883$U0r&n) (negative? . g$5915$U0r&n) (min . g$5920$U0r&n) (max . g$5919$U0r&n) (map . g$5572$U0r&n) (make-vector . g$11881$U0r&n) (make-string . g$11880$U0r&n) (make-rectangular . g$11879$U0r&n) (make-polar . g$11878$U0r&n) (magnitude . g$11877$U0r&n) (log . g$11876$U0r&n) (list? . g$11875$U0r&n) (list-tail . g$5552$U0r&n) (list-ref . g$5553$U0r&n) (list->vector . g$5872$U0r&n) (list->string . g$5873$U0r&n) (list . g$11874$U0r&n) (length . g$11873$U0r&n) (lcm . g$5922$U0r&n) (integer? . g$11872$U0r&n) (integer->char . g$11870$U0r&n) (inexact? . g$11868$U0r&n) (imag-part . g$11866$U0r&n) (gcd . g$5921$U0r&n) (for-each . g$5573$U0r&n) (floor . g$11865$U0r&n) (expt . g$11863$U0r&n) (exp . g$11862$U0r&n) (exact? . g$11861$U0r&n) (even? . g$5917$U0r&n) (eqv? . g$11858$U0r&n) (equal? . g$11857$U0r&n) (eq? . g$11856$U0r&n) (dynamic-wind . g$11855$U0r&n) (denominator . g$11852$U0r&n) (cos . g$11851$U0r&n) (cons . g$11850$U0r&n) (complex? . g$11849$U0r&n) (char? . g$5874$U0r&n) (char>? . g$5942$U0r&n) (char>=? . g$5944$U0r&n) (char=? . g$5940$U0r&n) (char<? . g$5941$U0r&n) (char<=? . g$5943$U0r&n) (char->integer . g$11848$U0r&n) (ceiling . g$11847$U0r&n) (call-with-values . g$11846$U0r&n) (call-with-current-continuation . g$11844$U0r&n) (cddddr . g$5913$U0r&n) (cdddar . g$5912$U0r&n) (cddadr . g$5911$U0r&n) (cddaar . g$5910$U0r&n) (cdaddr . g$5909$U0r&n) (cdadar . g$5908$U0r&n) (cdaadr . g$5907$U0r&n) (cdaaar . g$5906$U0r&n) (cadddr . g$5905$U0r&n) (caddar . g$5904$U0r&n) (cadadr . g$5903$U0r&n) (cadaar . g$5902$U0r&n) (caaddr . g$5901$U0r&n) (caadar . g$5900$U0r&n) (caaadr . g$5899$U0r&n) (caaaar . g$5898$U0r&n) (cdddr . g$5897$U0r&n) (cddar . g$5896$U0r&n) (cdadr . g$5895$U0r&n) (cdaar . g$5894$U0r&n) (caddr . g$5893$U0r&n) (cadar . g$5892$U0r&n) (caadr . g$5891$U0r&n) (caaar . g$5890$U0r&n) (cddr . g$5889$U0r&n) (cdar . g$5888$U0r&n) (cadr . g$5887$U0r&n) (caar . g$5886$U0r&n) (cdr . g$11843$U0r&n) (car . g$11842$U0r&n) (boolean? . g$5878$U0r&n) (atan . g$11841$U0r&n) (asin . g$11840$U0r&n) (apply . g$11839$U0r&n) (append . g$11838$U0r&n) (angle . g$11837$U0r&n) (acos . g$11836$U0r&n) (abs . g$11835$U0r&n) (/ . g$11834$U0r&n) (* . g$11833$U0r&n) (- . g$11832$U0r&n) (+ . g$11831$U0r&n) (>= . g$11830$U0r&n) (> . g$11829$U0r&n) (= . g$11828$U0r&n) (<= . g$11827$U0r&n) (< . g$11826$U0r&n) (unquote-splicing . g$11722$U0r&n) (unquote . g$11721$U0r&n) (else . g$11719$U0r&n) (=> . g$11718$U0r&n) (... . g$11717$U0r&n) (delay . g$11714$U0r&n) (or . g$11712$U0r&n) (and . g$11711$U0r&n) (do . g$11710$U0r&n) (cond . g$11709$U0r&n) (let* . g$11708$U0r&n) (let . g$11707$U0r&n) (quasiquote . g$11703$U0r&n) (syntax-rules . g$11702$U0r&n) (case . g$11693$U0r&n) (if . g$11689$U0r&n) (letrec . g$11687$U0r&n) (lambda . g$11684$U0r&n) (quote . g$11681$U0r&n) (letrec-syntax . g$11679$U0r&n) (let-syntax . g$11678$U0r&n) (set! . g$11677$U0r&n) (begin . g$11673$U0r&n) (define-syntax . g$11671$U0r&n) (define . g$11670$U0r&n)) '() values values '#f '#f '#f '#f))) 'g$12164$U0r&n '(psyntax null-environment-5) '() '() '() '() '((unquote-splicing . g$11722$U0r&n) (unquote . g$11721$U0r&n) (else . g$11719$U0r&n) (=> . g$11718$U0r&n) (delay . g$11714$U0r&n) (or . g$11712$U0r&n) (and . g$11711$U0r&n) (do . g$11710$U0r&n) (cond . g$11709$U0r&n) (let* . g$11708$U0r&n) (let . g$11707$U0r&n) (quasiquote . g$11703$U0r&n) (syntax-rules . g$11702$U0r&n) (case . g$11693$U0r&n) (if . g$11689$U0r&n) (letrec . g$11687$U0r&n) (lambda . g$11684$U0r&n) (quote . g$11681$U0r&n) (letrec-syntax . g$11679$U0r&n) (let-syntax . g$11678$U0r&n) (set! . g$11677$U0r&n) (begin . g$11673$U0r&n) (define-syntax . g$11671$U0r&n) (define . g$11670$U0r&n)) '() values values '#f '#f '#f '#f))) 'g$12163$U0r&n '(ironscheme clr internal) '() '() '() '() '((define-clr-class-internal . g$12141$U0r&n) (clr-field-set!-internal . g$12140$U0r&n) (clr-field-get-internal . g$12139$U0r&n) (clr-cast-internal . g$12138$U0r&n) (clr-call-internal . g$12137$U0r&n) (clr-new-internal . g$12136$U0r&n) (clr-new-array-internal . g$12135$U0r&n) (clr-is-internal . g$12134$U0r&n) (clr-reference-internal . g$12133$U0r&n) (clr-using-internal . g$12132$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12162$U0r&n '(ironscheme records printer) '() '() '() '() '((make-record-printer . g$11806$U0r&n)) '() values values '#f '#f '#t '#f))) 'g$12161$U0r&n '(ironscheme unsafe) '() '() '() '() '(($$fxnot . g$11825$U0r&n) ($$fx- . g$11824$U0r&n) ($$fx* . g$11823$U0r&n) ($$fx+ . g$11822$U0r&n) ($fxxor . g$11821$U0r&n) ($fxior . g$11820$U0r&n) ($fxand . g$11819$U0r&n) ($fx>=? . g$11818$U0r&n) ($fx>? . g$11817$U0r&n) ($fx<=? . g$11816$U0r&n) ($fx<? . g$11815$U0r&n) ($fx- . g$11814$U0r&n) ($fx* . g$11813$U0r&n) ($fx+ . g$11812$U0r&n) ($fx=? . g$11811$U0r&n) ($vector-set! . g$11810$U0r&n) ($vector-ref . g$11809$U0r&n) ($cdr . g$11808$U0r&n) ($car . g$11807$U0r&n)) '() values values '#f '#f '#f '#f))) 'g$12160$U0r&n '(ironscheme core) '() '() '() '() '((string-normalize . g$12120$U0r&n) (variable-transformer-procedure . g$8277$U0r&n) (variable-transformer? . g$8276$U0r&n) (eqv-hash . g$11805$U0r&n) (reverse! . g$11804$U0r&n) (make-promise . g$6735$U0r&n) (format . g$7245$U0r&n) (get-command-line . g$11793$U0r&n) (make-traced-procedure . g$11782$U0r&n) (make-traced-macro . g$7265$U0r&n) (assertion-error . g$8589$U0r&n) (library-locator . g$11780$U0r&n) (get-library-paths . g$11779$U0r&n) (library-path . g$7894$U0r&n)) '() values values '#f '#f '#f '#f))) 'g$12159$U0r&n '(ironscheme serialization) '() '() '() '() '((load-serialized-library . g$12122$U0r&n) (serialize-library . g$12121$U0r&n)) '() values values '#f '#f '#f '#f))) 'g$12158$U0r&n '(ironscheme reader) '() '() '() '() '((annotation-stripped . g$12154$U0r&n) (annotation-source . g$12153$U0r&n) (annotation-expression . g$12152$U0r&n) (annotation? . g$12151$U0r&n) (read-annotated . g$12150$U0r&n)) '() values values '#f '#f '#f '#f))) 'g$12157$U0r&n '(ironscheme library) '() '() '() '() '((get-library-paths . g$11779$U0r&n)) '() values values '#f '#f '#f '#f))) 'g$12156$U0r&n '(ironscheme) '() '() '() '() '((tanh . g$12149$U0r&n) (cosh . g$12148$U0r&n) (sinh . g$12147$U0r&n) (make-guid . g$12146$U0r&n) (unspecified? . g$12145$U0r&n) (make-list . g$5555$U0r&n) (last-pair . g$5554$U0r&n) (load-r5rs . g$12144$U0r&n) (license . g$12143$U0r&n) (stacktrace . g$12142$U0r&n) (ironscheme-build . g$11618$U0r&n) (remove-location . g$12129$U0r&n) (set-symbol-value! . g$12128$U0r&n) (symbol-value . g$12127$U0r&n) (symbol-bound? . g$12126$U0r&n) (ungensym . g$12125$U0r&n) (gensym . g$12124$U0r&n) (void . g$12123$U0r&n) (compile-system-libraries . g$11622$U0r&n) (compile->closure . g$11624$U0r&n) (compile . g$11623$U0r&n) (load . g$11617$U0r&n) (interaction-environment . g$8600$U0r&n) (string-upcase . g$12118$U0r&n) (string-titlecase . g$12117$U0r&n) (string-normalize-nfkd . g$6800$U0r&n) (string-normalize-nfkc . g$6799$U0r&n) (string-normalize-nfd . g$6798$U0r&n) (string-normalize-nfc . g$6797$U0r&n) (string-foldcase . g$12116$U0r&n) (string-downcase . g$12115$U0r&n) (string-ci>? . g$6784$U0r&n) (string-ci>=? . g$6786$U0r&n) (string-ci=? . g$6782$U0r&n) (string-ci<? . g$6783$U0r&n) (string-ci<=? . g$6785$U0r&n) (char-whitespace? . g$12114$U0r&n) (char-upper-case? . g$12113$U0r&n) (char-title-case? . g$12112$U0r&n) (char-numeric? . g$12111$U0r&n) (char-lower-case? . g$12110$U0r&n) (char-general-category . g$12109$U0r&n) (char-upcase . g$12108$U0r&n) (char-titlecase . g$12107$U0r&n) (char-foldcase . g$12106$U0r&n) (char-downcase . g$12105$U0r&n) (char-ci>? . g$6794$U0r&n) (char-ci>=? . g$6796$U0r&n) (char-ci=? . g$6792$U0r&n) (char-ci<? . g$6793$U0r&n) (char-ci<=? . g$6795$U0r&n) (char-alphabetic? . g$12104$U0r&n) (make-variable-transformer . g$8274$U0r&n) (identifier? . g$8594$U0r&n) (generate-temporaries . g$8583$U0r&n) (free-identifier=? . g$8584$U0r&n) (syntax->datum . g$8596$U0r&n) (datum->syntax . g$8595$U0r&n) (bound-identifier=? . g$8585$U0r&n) (record-type-descriptor? . g$12103$U0r&n) (record-predicate . g$12102$U0r&n) (record-mutator . g$12101$U0r&n) (record-constructor . g$12100$U0r&n) (record-accessor . g$12099$U0r&n) (make-record-type-descriptor . g$12098$U0r&n) (make-record-constructor-descriptor . g$12097$U0r&n) (record? . g$12096$U0r&n) (record-type-uid . g$12095$U0r&n) (record-type-sealed? . g$12094$U0r&n) (record-type-parent . g$12093$U0r&n) (record-type-opaque? . g$12092$U0r&n) (record-type-name . g$12091$U0r&n) (record-type-generative? . g$12090$U0r&n) (record-type-field-names . g$12089$U0r&n) (record-rtd . g$12088$U0r&n) (record-field-mutable? . g$12087$U0r&n) (delete-file . g$6168$U0r&n) (file-exists? . g$6167$U0r&n) (vector-sort! . g$12086$U0r&n) (vector-sort . g$12085$U0r&n) (list-sort . g$6753$U0r&n) (symbol-hash . g$12084$U0r&n) (string-ci-hash . g$12083$U0r&n) (string-hash . g$12082$U0r&n) (equal-hash . g$12081$U0r&n) (hashtable-equivalence-function . g$12080$U0r&n) (make-hashtable . g$12079$U0r&n) (hashtable-hash-function . g$12078$U0r&n) (make-eqv-hashtable . g$6135$U0r&n) (make-eq-hashtable . g$6134$U0r&n) (hashtable? . g$12077$U0r&n) (hashtable-update! . g$6141$U0r&n) (hashtable-size . g$6136$U0r&n) (hashtable-set! . g$6138$U0r&n) (hashtable-ref . g$6137$U0r&n) (hashtable-mutable? . g$12076$U0r&n) (hashtable-keys . g$12075$U0r&n) (hashtable-entries . g$12074$U0r&n) (hashtable-delete! . g$6139$U0r&n) (hashtable-copy . g$12073$U0r&n) (hashtable-contains? . g$6140$U0r&n) (hashtable-clear! . g$6142$U0r&n) (call-with-output-file . g$7096$U0r&n) (call-with-input-file . g$7095$U0r&n) (write-char . g$7087$U0r&n) (write . g$12072$U0r&n) (with-output-to-file . g$7094$U0r&n) (with-input-from-file . g$7093$U0r&n) (read-char . g$7086$U0r&n) (read . g$12071$U0r&n) (peek-char . g$7085$U0r&n) (open-output-file . g$12070$U0r&n) (open-input-file . g$12069$U0r&n) (newline . g$7097$U0r&n) (display . g$12068$U0r&n) (close-output-port . g$12067$U0r&n) (close-input-port . g$12066$U0r&n) (eof-object? . g$12065$U0r&n) (eof-object . g$12064$U0r&n) (current-error-port . g$12063$U0r&n) (current-output-port . g$12062$U0r&n) (current-input-port . g$12061$U0r&n) (output-port? . g$12060$U0r&n) (input-port? . g$12059$U0r&n) (utf-8-codec . g$12058$U0r&n) (utf-16-codec . g$12057$U0r&n) (transcoder-error-handling-mode . g$12056$U0r&n) (transcoder-eol-style . g$12055$U0r&n) (transcoder-codec . g$12054$U0r&n) (transcoded-port . g$12053$U0r&n) (textual-port? . g$12052$U0r&n) (string->bytevector . g$12051$U0r&n) (standard-output-port . g$12050$U0r&n) (standard-input-port . g$12049$U0r&n) (standard-error-port . g$12048$U0r&n) (set-port-position! . g$12047$U0r&n) (put-u8 . g$12046$U0r&n) (put-string . g$12045$U0r&n) (put-datum . g$7065$U0r&n) (put-char . g$12044$U0r&n) (put-bytevector . g$12043$U0r&n) (port? . g$7070$U0r&n) (port-transcoder . g$12042$U0r&n) (port-position . g$12041$U0r&n) (port-has-set-port-position!? . g$12040$U0r&n) (port-has-port-position? . g$12039$U0r&n) (port-eof? . g$12038$U0r&n) (output-port-buffer-mode . g$12037$U0r&n) (open-string-output-port . g$7069$U0r&n) (open-string-input-port . g$12036$U0r&n) (open-file-output-port . g$12035$U0r&n) (open-file-input/output-port . g$12034$U0r&n) (open-file-input-port . g$12033$U0r&n) (open-bytevector-output-port . g$12032$U0r&n) (open-bytevector-input-port . g$12031$U0r&n) (native-transcoder . g$12030$U0r&n) (native-eol-style . g$12029$U0r&n) (make-transcoder . g$12028$U0r&n) (latin-1-codec . g$12027$U0r&n) (make-i/o-write-error . g$6563$U0r&n) (make-i/o-read-error . g$6550$U0r&n) (make-i/o-port-error . g$6658$U0r&n) (make-i/o-invalid-position-error . g$6576$U0r&n) (make-i/o-filename-error . g$6591$U0r&n) (make-i/o-file-protection-error . g$6606$U0r&n) (make-i/o-file-is-read-only-error . g$6619$U0r&n) (make-i/o-file-does-not-exist-error . g$6645$U0r&n) (make-i/o-file-already-exists-error . g$6632$U0r&n) (make-i/o-error . g$6537$U0r&n) (make-i/o-encoding-error . g$6686$U0r&n) (make-i/o-decoding-error . g$6673$U0r&n) (make-custom-textual-output-port . g$12026$U0r&n) (make-custom-textual-input/output-port . g$12025$U0r&n) (make-custom-textual-input-port . g$12024$U0r&n) (make-custom-binary-output-port . g$12023$U0r&n) (make-custom-binary-input/output-port . g$12022$U0r&n) (make-custom-binary-input-port . g$12021$U0r&n) (make-bytevector . g$12020$U0r&n) (lookahead-u8 . g$12019$U0r&n) (lookahead-char . g$12018$U0r&n) (i/o-write-error? . g$6564$U0r&n) (i/o-read-error? . g$6551$U0r&n) (i/o-port-error? . g$6660$U0r&n) (i/o-invalid-position-error? . g$6578$U0r&n) (i/o-error-position . g$6579$U0r&n) (i/o-filename-error? . g$6593$U0r&n) (i/o-file-protection-error? . g$6607$U0r&n) (i/o-file-is-read-only-error? . g$6620$U0r&n) (i/o-file-does-not-exist-error? . g$6646$U0r&n) (i/o-file-already-exists-error? . g$6633$U0r&n) (i/o-error? . g$6538$U0r&n) (i/o-error-port . g$6661$U0r&n) (i/o-error-filename . g$6594$U0r&n) (i/o-encoding-error? . g$6688$U0r&n) (i/o-encoding-error-char . g$6689$U0r&n) (i/o-decoding-error? . g$6674$U0r&n) (get-u8 . g$12017$U0r&n) (get-string-n! . g$12016$U0r&n) (get-string-n . g$12015$U0r&n) (get-string-all . g$12014$U0r&n) (get-line . g$12013$U0r&n) (get-datum . g$7066$U0r&n) (get-char . g$12012$U0r&n) (get-bytevector-some . g$12011$U0r&n) (get-bytevector-n! . g$12010$U0r&n) (get-bytevector-n . g$12009$U0r&n) (get-bytevector-all . g$12008$U0r&n) (flush-output-port . g$12007$U0r&n) (close-port . g$12006$U0r&n) (call-with-string-output-port . g$7071$U0r&n) (call-with-port . g$7072$U0r&n) (call-with-bytevector-output-port . g$12005$U0r&n) (bytevector->string . g$12004$U0r&n) (buffer-mode? . g$12003$U0r&n) (binary-port? . g$12002$U0r&n) (scheme-report-environment . g$8573$U0r&n) (quotient . g$6732$U0r&n) (null-environment . g$8572$U0r&n) (remainder . g$6733$U0r&n) (modulo . g$6734$U0r&n) (inexact->exact . g$6729$U0r&n) (force . g$6736$U0r&n) (exact->inexact . g$6730$U0r&n) (exit . g$12001$U0r&n) (command-line . g$11613$U0r&n) (string-fill! . g$12000$U0r&n) (string-set! . g$11999$U0r&n) (set-cdr! . g$11998$U0r&n) (set-car! . g$11997$U0r&n) (remove . g$5577$U0r&n) (remv . g$5578$U0r&n) (remp . g$5558$U0r&n) (remq . g$5579$U0r&n) (partition . g$5557$U0r&n) (memv . g$5565$U0r&n) (memq . g$5564$U0r&n) (memp . g$5567$U0r&n) (member . g$5566$U0r&n) (exists . g$5571$U0r&n) (for-all . g$5570$U0r&n) (fold-right . g$5576$U0r&n) (fold-left . g$5575$U0r&n) (find . g$5556$U0r&n) (filter . g$5559$U0r&n) (cons* . g$5574$U0r&n) (assv . g$5561$U0r&n) (assq . g$5560$U0r&n) (assp . g$5563$U0r&n) (assoc . g$5562$U0r&n) (with-exception-handler . g$6289$U0r&n) (raise-continuable . g$6292$U0r&n) (raise . g$6291$U0r&n) (eval . g$8575$U0r&n) (environment . g$8571$U0r&n) (make-enumeration . g$7157$U0r&n) (enum-set=? . g$7164$U0r&n) (enum-set-universe . g$7158$U0r&n) (enum-set-union . g$7165$U0r&n) (enum-set-subset? . g$7163$U0r&n) (enum-set-projection . g$7169$U0r&n) (enum-set-member? . g$7162$U0r&n) (enum-set-intersection . g$7166$U0r&n) (enum-set-indexer . g$7159$U0r&n) (enum-set-difference . g$7167$U0r&n) (enum-set-constructor . g$7160$U0r&n) (enum-set-complement . g$7168$U0r&n) (enum-set->list . g$7161$U0r&n) (who-condition? . g$6455$U0r&n) (warning? . g$6374$U0r&n) (violation? . g$6413$U0r&n) (undefined-violation? . g$6525$U0r&n) (syntax-violation? . g$6510$U0r&n) (syntax-violation-subform . g$6512$U0r&n) (syntax-violation-form . g$6511$U0r&n) (syntax-violation . g$8593$U0r&n) (simple-conditions . g$11996$U0r&n) (serious-condition? . g$6387$U0r&n) (non-continuable-violation? . g$6469$U0r&n) (message-condition? . g$6360$U0r&n) (make-who-condition . g$6453$U0r&n) (make-warning . g$6373$U0r&n) (make-violation . g$6412$U0r&n) (make-undefined-violation . g$6524$U0r&n) (make-syntax-violation . g$6507$U0r&n) (make-serious-condition . g$6386$U0r&n) (make-non-continuable-violation . g$6468$U0r&n) (make-message-condition . g$6358$U0r&n) (make-lexical-violation . g$6494$U0r&n) (make-irritants-condition . g$6438$U0r&n) (make-implementation-restriction-violation . g$6481$U0r&n) (make-error . g$6399$U0r&n) (make-assertion-violation . g$6425$U0r&n) (lexical-violation? . g$6495$U0r&n) (irritants-condition? . g$6440$U0r&n) (implementation-restriction-violation? . g$6482$U0r&n) (error? . g$6400$U0r&n) (condition-who . g$6456$U0r&n) (condition-predicate . g$11995$U0r&n) (condition-message . g$6361$U0r&n) (condition-irritants . g$6441$U0r&n) (condition-accessor . g$11994$U0r&n) (condition . g$11993$U0r&n) (assertion-violation? . g$6426$U0r&n) (condition? . g$11992$U0r&n) (utf32->string . g$11991$U0r&n) (utf16->string . g$11990$U0r&n) (utf8->string . g$11989$U0r&n) (uint-list->bytevector . g$11988$U0r&n) (u8-list->bytevector . g$11987$U0r&n) (string->utf8 . g$11986$U0r&n) (string->utf32 . g$11985$U0r&n) (string->utf16 . g$11984$U0r&n) (sint-list->bytevector . g$11983$U0r&n) (native-endianness . g$6174$U0r&n) (bytevector? . g$5876$U0r&n) (bytevector=? . g$11982$U0r&n) (bytevector-uint-set! . g$11981$U0r&n) (bytevector-uint-ref . g$11980$U0r&n) (bytevector-u8-set! . g$11979$U0r&n) (bytevector-u8-ref . g$11978$U0r&n) (bytevector-u64-set! . g$6195$U0r&n) (bytevector-u64-ref . g$6191$U0r&n) (bytevector-u64-native-set! . g$6197$U0r&n) (bytevector-u64-native-ref . g$6193$U0r&n) (bytevector-u32-set! . g$6187$U0r&n) (bytevector-u32-ref . g$6183$U0r&n) (bytevector-u32-native-set! . g$6189$U0r&n) (bytevector-u32-native-ref . g$6185$U0r&n) (bytevector-u16-set! . g$6179$U0r&n) (bytevector-u16-ref . g$6175$U0r&n) (bytevector-u16-native-set! . g$6181$U0r&n) (bytevector-u16-native-ref . g$6177$U0r&n) (bytevector-sint-set! . g$11977$U0r&n) (bytevector-sint-ref . g$11976$U0r&n) (bytevector-s8-set! . g$11975$U0r&n) (bytevector-s8-ref . g$11974$U0r&n) (bytevector-s64-set! . g$6196$U0r&n) (bytevector-s64-ref . g$6192$U0r&n) (bytevector-s64-native-set! . g$6198$U0r&n) (bytevector-s64-native-ref . g$6194$U0r&n) (bytevector-s32-set! . g$6188$U0r&n) (bytevector-s32-ref . g$6184$U0r&n) (bytevector-s32-native-set! . g$6190$U0r&n) (bytevector-s32-native-ref . g$6186$U0r&n) (bytevector-s16-set! . g$6180$U0r&n) (bytevector-s16-ref . g$6176$U0r&n) (bytevector-s16-native-set! . g$6182$U0r&n) (bytevector-s16-native-ref . g$6178$U0r&n) (bytevector-length . g$11973$U0r&n) (bytevector-ieee-single-set! . g$11972$U0r&n) (bytevector-ieee-single-ref . g$11971$U0r&n) (bytevector-ieee-single-native-set! . g$6201$U0r&n) (bytevector-ieee-single-native-ref . g$6199$U0r&n) (bytevector-ieee-double-set! . g$11970$U0r&n) (bytevector-ieee-double-ref . g$11969$U0r&n) (bytevector-ieee-double-native-set! . g$6202$U0r&n) (bytevector-ieee-double-native-ref . g$6200$U0r&n) (bytevector-fill! . g$11968$U0r&n) (bytevector-copy! . g$11967$U0r&n) (bytevector-copy . g$11966$U0r&n) (bytevector->uint-list . g$11965$U0r&n) (bytevector->u8-list . g$11964$U0r&n) (bytevector->sint-list . g$11963$U0r&n) (no-nans-violation? . g$6715$U0r&n) (no-infinities-violation? . g$6702$U0r&n) (make-no-nans-violation . g$6714$U0r&n) (make-no-infinities-violation . g$6701$U0r&n) (real->flonum . g$11962$U0r&n) (flzero? . g$7011$U0r&n) (fltruncate . g$7006$U0r&n) (fltan . g$6996$U0r&n) (flsqrt . g$7001$U0r&n) (flsin . g$6994$U0r&n) (flround . g$7007$U0r&n) (flpositive? . g$7009$U0r&n) (flonum? . g$5881$U0r&n) (flodd? . g$7013$U0r&n) (flnumerator . g$11961$U0r&n) (flnegative? . g$7010$U0r&n) (flnan? . g$6993$U0r&n) (flmod0 . g$6987$U0r&n) (flmod . g$6986$U0r&n) (flmin . g$7015$U0r&n) (flmax . g$7014$U0r&n) (fllog . g$7000$U0r&n) (flinteger? . g$6990$U0r&n) (flinfinite? . g$6992$U0r&n) (flfloor . g$7005$U0r&n) (flfinite? . g$6991$U0r&n) (flexpt . g$7003$U0r&n) (flexp . g$7002$U0r&n) (fleven? . g$7012$U0r&n) (fldiv0-and-mod0 . g$6989$U0r&n) (fldiv0 . g$11960$U0r&n) (fldiv-and-mod . g$6988$U0r&n) (fldiv . g$11959$U0r&n) (fldenominator . g$11958$U0r&n) (flcos . g$6995$U0r&n) (flceiling . g$7004$U0r&n) (flatan . g$6999$U0r&n) (flasin . g$6997$U0r&n) (flacos . g$6998$U0r&n) (flabs . g$7008$U0r&n) (fl>? . g$11957$U0r&n) (fl>=? . g$11956$U0r&n) (fl=? . g$11955$U0r&n) (fl<? . g$11954$U0r&n) (fl<=? . g$11953$U0r&n) (fl/ . g$11952$U0r&n) (fl- . g$11951$U0r&n) (fl+ . g$11950$U0r&n) (fl* . g$11949$U0r&n) (fixnum->flonum . g$11948$U0r&n) (fxzero? . g$6907$U0r&n) (fxxor . g$11947$U0r&n) (fxrotate-bit-field . g$6921$U0r&n) (fxreverse-bit-field . g$11946$U0r&n) (fxpositive? . g$6905$U0r&n) (fxodd? . g$6909$U0r&n) (fxnot . g$11945$U0r&n) (fxnegative? . g$6906$U0r&n) (fxmod0 . g$6902$U0r&n) (fxmod . g$6901$U0r&n) (fxmin . g$6911$U0r&n) (fxmax . g$6910$U0r&n) (fxlength . g$11944$U0r&n) (fxior . g$11943$U0r&n) (fxif . g$6915$U0r&n) (fxfirst-bit-set . g$11942$U0r&n) (fxeven? . g$6908$U0r&n) (fxdiv0-and-mod0 . g$6904$U0r&n) (fxdiv0 . g$11941$U0r&n) (fxdiv-and-mod . g$6903$U0r&n) (fxdiv . g$11940$U0r&n) (fxcopy-bit-field . g$6918$U0r&n) (fxcopy-bit . g$6916$U0r&n) (fxbit-set? . g$11939$U0r&n) (fxbit-field . g$6917$U0r&n) (fxbit-count . g$11938$U0r&n) (fxarithmetic-shift-right . g$6920$U0r&n) (fxarithmetic-shift-left . g$6919$U0r&n) (fxarithmetic-shift . g$11937$U0r&n) (fxand . g$11936$U0r&n) (fx>? . g$11935$U0r&n) (fx>=? . g$11934$U0r&n) (fx=? . g$11933$U0r&n) (fx<? . g$11932$U0r&n) (fx<=? . g$11931$U0r&n) (fx-/carry . g$6913$U0r&n) (fx- . g$11930$U0r&n) (fx+/carry . g$6914$U0r&n) (fx+ . g$11929$U0r&n) (fx*/carry . g$6912$U0r&n) (fx* . g$11928$U0r&n) (greatest-fixnum . g$11927$U0r&n) (least-fixnum . g$11926$U0r&n) (fixnum-width . g$5882$U0r&n) (fixnum? . g$5880$U0r&n) (bitwise-rotate-bit-field . g$6864$U0r&n) (bitwise-reverse-bit-field . g$11925$U0r&n) (bitwise-length . g$11924$U0r&n) (bitwise-if . g$6858$U0r&n) (bitwise-first-bit-set . g$11923$U0r&n) (bitwise-copy-bit-field . g$6861$U0r&n) (bitwise-copy-bit . g$6859$U0r&n) (bitwise-bit-set? . g$11922$U0r&n) (bitwise-bit-field . g$6860$U0r&n) (bitwise-bit-count . g$11921$U0r&n) (bitwise-xor . g$11920$U0r&n) (bitwise-ior . g$11919$U0r&n) (bitwise-and . g$11918$U0r&n) (bitwise-not . g$11917$U0r&n) (bitwise-arithmetic-shift-right . g$6863$U0r&n) (bitwise-arithmetic-shift-left . g$6862$U0r&n) (bitwise-arithmetic-shift . g$11916$U0r&n) (zero? . g$5916$U0r&n) (vector? . g$5875$U0r&n) (vector-set! . g$11915$U0r&n) (vector-ref . g$11914$U0r&n) (vector-map . g$5948$U0r&n) (vector-length . g$11913$U0r&n) (vector-for-each . g$5949$U0r&n) (vector-fill! . g$5883$U0r&n) (vector->list . g$11912$U0r&n) (vector . g$11911$U0r&n) (values . g$11910$U0r&n) (truncate . g$11909$U0r&n) (tan . g$11908$U0r&n) (symbol? . g$5877$U0r&n) (symbol=? . g$5933$U0r&n) (symbol->string . g$11907$U0r&n) (substring . g$11906$U0r&n) (string? . g$11905$U0r&n) (string>? . g$5930$U0r&n) (string>=? . g$5932$U0r&n) (string=? . g$5928$U0r&n) (string<? . g$5929$U0r&n) (string<=? . g$5931$U0r&n) (string-ref . g$11904$U0r&n) (string-length . g$11903$U0r&n) (string-for-each . g$5950$U0r&n) (string-copy . g$11902$U0r&n) (string-append . g$11901$U0r&n) (string->symbol . g$11900$U0r&n) (string->number . g$11899$U0r&n) (string->list . g$11898$U0r&n) (string . g$11897$U0r&n) (sqrt . g$11896$U0r&n) (sin . g$11895$U0r&n) (round . g$11894$U0r&n) (reverse . g$5885$U0r&n) (real? . g$11893$U0r&n) (real-valued? . g$11892$U0r&n) (real-part . g$11891$U0r&n) (rationalize . g$5945$U0r&n) (rational? . g$11890$U0r&n) (rational-valued? . g$11889$U0r&n) (procedure? . g$5879$U0r&n) (positive? . g$5914$U0r&n) (pair? . g$11888$U0r&n) (odd? . g$5918$U0r&n) (numerator . g$11887$U0r&n) (number? . g$11886$U0r&n) (number->string . g$11885$U0r&n) (null? . g$11884$U0r&n) (not . g$11883$U0r&n) (negative? . g$5915$U0r&n) (nan? . g$11882$U0r&n) (min . g$5920$U0r&n) (max . g$5919$U0r&n) (map . g$5572$U0r&n) (make-vector . g$11881$U0r&n) (make-string . g$11880$U0r&n) (make-rectangular . g$11879$U0r&n) (make-polar . g$11878$U0r&n) (magnitude . g$11877$U0r&n) (log . g$11876$U0r&n) (list? . g$11875$U0r&n) (list-tail . g$5552$U0r&n) (list-ref . g$5553$U0r&n) (list->vector . g$5872$U0r&n) (list->string . g$5873$U0r&n) (list . g$11874$U0r&n) (length . g$11873$U0r&n) (lcm . g$5922$U0r&n) (integer? . g$11872$U0r&n) (integer-valued? . g$11871$U0r&n) (integer->char . g$11870$U0r&n) (infinite? . g$11869$U0r&n) (inexact? . g$11868$U0r&n) (inexact . g$11867$U0r&n) (imag-part . g$11866$U0r&n) (gcd . g$5921$U0r&n) (for-each . g$5573$U0r&n) (floor . g$11865$U0r&n) (finite? . g$11864$U0r&n) (expt . g$11863$U0r&n) (exp . g$11862$U0r&n) (exact? . g$11861$U0r&n) (exact-integer-sqrt . g$11860$U0r&n) (exact . g$11859$U0r&n) (even? . g$5917$U0r&n) (error . g$6294$U0r&n) (eqv? . g$11858$U0r&n) (equal? . g$11857$U0r&n) (eq? . g$11856$U0r&n) (dynamic-wind . g$11855$U0r&n) (div0-and-mod0 . g$5871$U0r&n) (mod0 . g$5869$U0r&n) (div0 . g$11854$U0r&n) (div-and-mod . g$5870$U0r&n) (mod . g$5868$U0r&n) (div . g$11853$U0r&n) (denominator . g$11852$U0r&n) (cos . g$11851$U0r&n) (cons . g$11850$U0r&n) (complex? . g$11849$U0r&n) (char? . g$5874$U0r&n) (char>? . g$5942$U0r&n) (char>=? . g$5944$U0r&n) (char=? . g$5940$U0r&n) (char<? . g$5941$U0r&n) (char<=? . g$5943$U0r&n) (char->integer . g$11848$U0r&n) (ceiling . g$11847$U0r&n) (call-with-values . g$11846$U0r&n) (call/cc . g$11845$U0r&n) (call-with-current-continuation . g$11844$U0r&n) (cddddr . g$5913$U0r&n) (cdddar . g$5912$U0r&n) (cddadr . g$5911$U0r&n) (cddaar . g$5910$U0r&n) (cdaddr . g$5909$U0r&n) (cdadar . g$5908$U0r&n) (cdaadr . g$5907$U0r&n) (cdaaar . g$5906$U0r&n) (cadddr . g$5905$U0r&n) (caddar . g$5904$U0r&n) (cadadr . g$5903$U0r&n) (cadaar . g$5902$U0r&n) (caaddr . g$5901$U0r&n) (caadar . g$5900$U0r&n) (caaadr . g$5899$U0r&n) (caaaar . g$5898$U0r&n) (cdddr . g$5897$U0r&n) (cddar . g$5896$U0r&n) (cdadr . g$5895$U0r&n) (cdaar . g$5894$U0r&n) (caddr . g$5893$U0r&n) (cadar . g$5892$U0r&n) (caadr . g$5891$U0r&n) (caaar . g$5890$U0r&n) (cddr . g$5889$U0r&n) (cdar . g$5888$U0r&n) (cadr . g$5887$U0r&n) (caar . g$5886$U0r&n) (cdr . g$11843$U0r&n) (car . g$11842$U0r&n) (boolean? . g$5878$U0r&n) (boolean=? . g$5934$U0r&n) (atan . g$11841$U0r&n) (assertion-violation . g$6293$U0r&n) (asin . g$11840$U0r&n) (apply . g$11839$U0r&n) (append . g$11838$U0r&n) (angle . g$11837$U0r&n) (acos . g$11836$U0r&n) (abs . g$11835$U0r&n) (/ . g$11834$U0r&n) (* . g$11833$U0r&n) (- . g$11832$U0r&n) (+ . g$11831$U0r&n) (>= . g$11830$U0r&n) (> . g$11829$U0r&n) (= . g$11828$U0r&n) (<= . g$11827$U0r&n) (< . g$11826$U0r&n) (deserialize-port . g$11803$U0r&n) (serialize-port . g$11802$U0r&n) (enum-set? . g$7134$U0r&n) (load/unload . g$11616$U0r&n) (load/args . g$11615$U0r&n) (printf . g$7243$U0r&n) (fprintf . g$7244$U0r&n) (format . g$7245$U0r&n) (procedure-form . g$11801$U0r&n) (procedure-environment . g$11800$U0r&n) (procedure-name . g$11799$U0r&n) (procedure-arity . g$11798$U0r&n) (gc-collect . g$11797$U0r&n) (typeof . g$11796$U0r&n) (clr-type? . g$11795$U0r&n) (get-clr-type . g$11794$U0r&n) (vector-append . g$11792$U0r&n) (vector-filter . g$11791$U0r&n) (vector-reverse! . g$11790$U0r&n) (vector-contains? . g$11789$U0r&n) (vector-index-of . g$11788$U0r&n) (vector-copy . g$11787$U0r&n) (vector-binary-search . g$11786$U0r&n) (string-ci-compare . g$11785$U0r&n) (string-compare . g$11784$U0r&n) (string-format . g$11783$U0r&n) (trace-printer . g$11612$U0r&n) (time-it . g$11781$U0r&n) (make-parameter . g$7272$U0r&n) (open-tcp-input/output-port . g$11778$U0r&n) (hashtable-for-each . g$11777$U0r&n) (hashtable-map . g$11776$U0r&n) (environment-bindings . g$8567$U0r&n) (environment-symbols . g$8570$U0r&n) (interaction-environment-symbols . g$8566$U0r&n) (optimization-level . g$11775$U0r&n) (library-path . g$7894$U0r&n) (make-compile-time-value . g$8275$U0r&n) (expand->core . g$8576$U0r&n) (expand . g$8574$U0r&n) (syntax-transpose . g$8513$U0r&n) (convert->cps . g$7591$U0r&n) (installed-libraries . g$7915$U0r&n) (uninstall-library . g$7906$U0r&n) (pretty-gensyms . g$7355$U0r&n) (pretty-width . g$7352$U0r&n) (pretty-print . g$7357$U0r&n) (&no-nans . g$11774$U0r&n) (&no-infinities . g$11773$U0r&n) (&i/o-encoding . g$11772$U0r&n) (&i/o-decoding . g$11771$U0r&n) (&i/o-port . g$11770$U0r&n) (&i/o-file-does-not-exist . g$11769$U0r&n) (&i/o-file-already-exists . g$11768$U0r&n) (&i/o-file-is-read-only . g$11767$U0r&n) (&i/o-file-protection . g$11766$U0r&n) (&i/o-filename . g$11765$U0r&n) (&i/o-invalid-position . g$11764$U0r&n) (&i/o-write . g$11763$U0r&n) (&i/o-read . g$11762$U0r&n) (&i/o . g$11761$U0r&n) (&non-continuable . g$11760$U0r&n) (&undefined . g$11759$U0r&n) (&syntax . g$11758$U0r&n) (&lexical . g$11757$U0r&n) (&implementation-restriction . g$11756$U0r&n) (&who . g$11755$U0r&n) (&irritants . g$11754$U0r&n) (&assertion . g$11753$U0r&n) (&violation . g$11752$U0r&n) (&error . g$11751$U0r&n) (&serious . g$11750$U0r&n) (&warning . g$11749$U0r&n) (&message . g$11748$U0r&n) (&condition . g$11747$U0r&n) (define-condition-type . g$11746$U0r&n) (define-enumeration . g$11745$U0r&n) (define-record-type . g$11744$U0r&n) (parent-rtd . g$11743$U0r&n) (nongenerative . g$11742$U0r&n) (opaque . g$11741$U0r&n) (sealed . g$11740$U0r&n) (protocol . g$11739$U0r&n) (parent . g$11738$U0r&n) (immutable . g$11737$U0r&n) (mutable . g$11736$U0r&n) (fields . g$11735$U0r&n) (error-handling-mode . g$11734$U0r&n) (file-options . g$11733$U0r&n) (buffer-mode . g$11732$U0r&n) (eol-style . g$11731$U0r&n) (guard . g$11730$U0r&n) (trace-letrec-syntax . g$11729$U0r&n) (trace-let-syntax . g$11728$U0r&n) (trace-define-syntax . g$11727$U0r&n) (trace-define . g$11726$U0r&n) (trace-lambda . g$11725$U0r&n) (unsyntax-splicing . g$11724$U0r&n) (unsyntax . g$11723$U0r&n) (unquote-splicing . g$11722$U0r&n) (unquote . g$11721$U0r&n) (_ . g$11720$U0r&n) (else . g$11719$U0r&n) (=> . g$11718$U0r&n) (... . g$11717$U0r&n) (assert . g$11716$U0r&n) (endianness . g$11715$U0r&n) (delay . g$11714$U0r&n) (time . g$11713$U0r&n) (or . g$11712$U0r&n) (and . g$11711$U0r&n) (do . g$11710$U0r&n) (cond . g$11709$U0r&n) (let* . g$11708$U0r&n) (let . g$11707$U0r&n) (identifier-syntax . g$11706$U0r&n) (with-syntax . g$11705$U0r&n) (quasisyntax . g$11704$U0r&n) (quasiquote . g$11703$U0r&n) (syntax-rules . g$11702$U0r&n) (include-into . g$11701$U0r&n) (include . g$11700$U0r&n) (let-values . g$11698$U0r&n) (let*-values . g$11697$U0r&n) (record-constructor-descriptor . g$11696$U0r&n) (record-type-descriptor . g$11695$U0r&n) (fluid-let-syntax . g$11694$U0r&n) (case . g$11693$U0r&n) (parameterize . g$11692$U0r&n) (unless . g$11691$U0r&n) (when . g$11690$U0r&n) (if . g$11689$U0r&n) (letrec* . g$11688$U0r&n) (letrec . g$11687$U0r&n) (case-lambda . g$11685$U0r&n) (lambda . g$11684$U0r&n) (syntax . g$11683$U0r&n) (syntax-case . g$11682$U0r&n) (quote . g$11681$U0r&n) (letrec-syntax . g$11679$U0r&n) (let-syntax . g$11678$U0r&n) (set! . g$11677$U0r&n) (export . g$11676$U0r&n) (import . g$11675$U0r&n) (library . g$11674$U0r&n) (begin . g$11673$U0r&n) (module . g$11672$U0r&n) (define-syntax . g$11671$U0r&n) (define . g$11670$U0r&n)) '() values values '#f '#f '#t '#f))) (case-lambda ((g$C$29857$U0r&n g$x$20866$U0r&n) (g$assq$12741$U0r&n (case-lambda ((g$V$29858$U0r&n) ((case-lambda ((g$C$29856$U0r&n g$t$20867$U0r&n) (if g$t$20867$U0r&n (cdr g$C$29856$U0r&n g$t$20867$U0r&n) (g$C$29856$U0r&n '#f)))) g$C$29857$U0r&n g$V$29858$U0r&n))) g$x$20866$U0r&n '((ellipsis-map . g$ellipsis-map$20669$U0r&n) (&no-nans-rcd . g$&no-nans-rcd$14430$U0r&n) (&no-nans-rtd . g$&no-nans-rtd$14429$U0r&n) (&no-infinities-rcd . g$&no-infinities-rcd$14422$U0r&n) (&no-infinities-rtd . g$&no-infinities-rtd$14421$U0r&n) (&i/o-encoding-rcd . g$&i/o-encoding-rcd$14414$U0r&n) (&i/o-encoding-rtd . g$&i/o-encoding-rtd$14413$U0r&n) (&i/o-decoding-rcd . g$&i/o-decoding-rcd$14404$U0r&n) (&i/o-decoding-rtd . g$&i/o-decoding-rtd$14403$U0r&n) (&i/o-port-rcd . g$&i/o-port-rcd$14396$U0r&n) (&i/o-port-rtd . g$&i/o-port-rtd$14395$U0r&n) (&i/o-file-does-not-exist-rcd . g$&i/o-file-does-not-exist-rcd$14386$U0r&n) (&i/o-file-does-not-exist-rtd . g$&i/o-file-does-not-exist-rtd$14385$U0r&n) (&i/o-file-already-exists-rcd . g$&i/o-file-already-exists-rcd$14378$U0r&n) (&i/o-file-already-exists-rtd . g$&i/o-file-already-exists-rtd$14377$U0r&n) (&i/o-file-is-read-only-rcd . g$&i/o-file-is-read-only-rcd$14370$U0r&n) (&i/o-file-is-read-only-rtd . g$&i/o-file-is-read-only-rtd$14369$U0r&n) (&i/o-file-protection-rcd . g$&i/o-file-protection-rcd$14362$U0r&n) (&i/o-file-protection-rtd . g$&i/o-file-protection-rtd$14361$U0r&n) (&i/o-filename-rcd . g$&i/o-filename-rcd$14354$U0r&n) (&i/o-filename-rtd . g$&i/o-filename-rtd$14353$U0r&n) (&i/o-invalid-position-rcd . g$&i/o-invalid-position-rcd$14344$U0r&n) (&i/o-invalid-position-rtd . g$&i/o-invalid-position-rtd$14343$U0r&n) (&i/o-write-rcd . g$&i/o-write-rcd$14334$U0r&n) (&i/o-write-rtd . g$&i/o-write-rtd$14333$U0r&n) (&i/o-read-rcd . g$&i/o-read-rcd$14326$U0r&n) (&i/o-read-rtd . g$&i/o-read-rtd$14325$U0r&n) (&i/o-rcd . g$&i/o-rcd$14318$U0r&n) (&i/o-rtd . g$&i/o-rtd$14317$U0r&n) (&undefined-rcd . g$&undefined-rcd$14310$U0r&n) (&undefined-rtd . g$&undefined-rtd$14309$U0r&n) (&syntax-rcd . g$&syntax-rcd$14302$U0r&n) (&syntax-rtd . g$&syntax-rtd$14301$U0r&n) (&lexical-rcd . g$&lexical-rcd$14290$U0r&n) (&lexical-rtd . g$&lexical-rtd$14289$U0r&n) (&implementation-restriction-rcd . g$&implementation-restriction-rcd$14282$U0r&n) (&implementation-restriction-rtd . g$&implementation-restriction-rtd$14281$U0r&n) (&non-continuable-rcd . g$&non-continuable-rcd$14274$U0r&n) (&non-continuable-rtd . g$&non-continuable-rtd$14273$U0r&n) (&who-rcd . g$&who-rcd$14266$U0r&n) (&who-rtd . g$&who-rtd$14265$U0r&n) (&irritants-rcd . g$&irritants-rcd$14256$U0r&n) (&irritants-rtd . g$&irritants-rtd$14255$U0r&n) (&assertion-rcd . g$&assertion-rcd$14246$U0r&n) (&assertion-rtd . g$&assertion-rtd$14245$U0r&n) (&violation-rcd . g$&violation-rcd$14238$U0r&n) (&violation-rtd . g$&violation-rtd$14237$U0r&n) (&error-rcd . g$&error-rcd$14230$U0r&n) (&error-rtd . g$&error-rtd$14229$U0r&n) (&serious-rcd . g$&serious-rcd$14222$U0r&n) (&serious-rtd . g$&serious-rtd$14221$U0r&n) (&warning-rcd . g$&warning-rcd$14214$U0r&n) (&warning-rtd . g$&warning-rtd$14213$U0r&n) (&message-rcd . g$&message-rcd$14206$U0r&n) (&message-rtd . g$&message-rtd$14205$U0r&n) (&condition-rcd . g$&condition-rcd$14196$U0r&n) (&condition-rtd . g$&condition-rtd$14195$U0r&n) (make-list . g$make-list$12736$U0r&n) (last-pair . g$last-pair$12735$U0r&n) (ironscheme-build . g$ironscheme-build$20857$U0r&n) (syntax-error . g$syntax-error$20774$U0r&n) (syntax-dispatch . g$syntax-dispatch$20664$U0r&n) (compile-system-libraries . g$compile-system-libraries$20861$U0r&n) (compile->closure . g$compile->closure$20863$U0r&n) (compile . g$compile$20862$U0r&n) (load . g$load$20856$U0r&n) (interaction-environment . g$interaction-environment$20784$U0r&n) (string-normalize-nfkd . g$string-normalize-nfkd$14652$U0r&n) (string-normalize-nfkc . g$string-normalize-nfkc$14651$U0r&n) (string-normalize-nfd . g$string-normalize-nfd$14650$U0r&n) (string-normalize-nfc . g$string-normalize-nfc$14649$U0r&n) (string-ci>? . g$string-ci>?$14641$U0r&n) (string-ci>=? . g$string-ci>=?$14643$U0r&n) (string-ci=? . g$string-ci=?$14639$U0r&n) (string-ci<? . g$string-ci<?$14640$U0r&n) (string-ci<=? . g$string-ci<=?$14642$U0r&n) (char-ci>? . g$char-ci>?$14646$U0r&n) (char-ci>=? . g$char-ci>=?$14648$U0r&n) (char-ci=? . g$char-ci=?$14644$U0r&n) (char-ci<? . g$char-ci<?$14645$U0r&n) (char-ci<=? . g$char-ci<=?$14647$U0r&n) (variable-transformer-procedure . g$variable-transformer-procedure$20602$U0r&n) (variable-transformer? . g$variable-transformer?$20601$U0r&n) (make-variable-transformer . g$make-variable-transformer$20599$U0r&n) (identifier? . g$identifier?$20778$U0r&n) (generate-temporaries . g$generate-temporaries$20767$U0r&n) (free-identifier=? . g$free-identifier=?$20768$U0r&n) (syntax->datum . g$syntax->datum$20780$U0r&n) (datum->syntax . g$datum->syntax$20779$U0r&n) (bound-identifier=? . g$bound-identifier=?$20769$U0r&n) (delete-file . g$delete-file$13616$U0r&n) (file-exists? . g$file-exists?$13615$U0r&n) (list-sort . g$list-sort$14494$U0r&n) (make-eqv-hashtable . g$make-eqv-hashtable$13598$U0r&n) (make-eq-hashtable . g$make-eq-hashtable$13597$U0r&n) (hashtable-update! . g$hashtable-update!$13604$U0r&n) (hashtable-size . g$hashtable-size$13599$U0r&n) (hashtable-set! . g$hashtable-set!$13601$U0r&n) (hashtable-ref . g$hashtable-ref$13600$U0r&n) (hashtable-delete! . g$hashtable-delete!$13602$U0r&n) (hashtable-contains? . g$hashtable-contains?$13603$U0r&n) (hashtable-clear! . g$hashtable-clear!$13605$U0r&n) (call-with-output-file . g$call-with-output-file$15044$U0r&n) (call-with-input-file . g$call-with-input-file$15043$U0r&n) (write-char . g$write-char$15040$U0r&n) (with-output-to-file . g$with-output-to-file$15042$U0r&n) (with-input-from-file . g$with-input-from-file$15041$U0r&n) (read-char . g$read-char$15039$U0r&n) (peek-char . g$peek-char$15038$U0r&n) (newline . g$newline$15045$U0r&n) (put-datum . g$put-datum$14975$U0r&n) (port? . g$port?$14980$U0r&n) (open-string-output-port . g$open-string-output-port$14979$U0r&n) (make-i/o-write-error . g$make-i/o-write-error$14331$U0r&n) (make-i/o-read-error . g$make-i/o-read-error$14323$U0r&n) (make-i/o-port-error . g$make-i/o-port-error$14391$U0r&n) (make-i/o-invalid-position-error . g$make-i/o-invalid-position-error$14339$U0r&n) (make-i/o-filename-error . g$make-i/o-filename-error$14349$U0r&n) (make-i/o-file-protection-error . g$make-i/o-file-protection-error$14359$U0r&n) (make-i/o-file-is-read-only-error . g$make-i/o-file-is-read-only-error$14367$U0r&n) (make-i/o-file-does-not-exist-error . g$make-i/o-file-does-not-exist-error$14383$U0r&n) (make-i/o-file-already-exists-error . g$make-i/o-file-already-exists-error$14375$U0r&n) (make-i/o-error . g$make-i/o-error$14315$U0r&n) (make-i/o-encoding-error . g$make-i/o-encoding-error$14409$U0r&n) (make-i/o-decoding-error . g$make-i/o-decoding-error$14401$U0r&n) (i/o-write-error? . g$i/o-write-error?$14332$U0r&n) (i/o-read-error? . g$i/o-read-error?$14324$U0r&n) (i/o-port-error? . g$i/o-port-error?$14393$U0r&n) (i/o-invalid-position-error? . g$i/o-invalid-position-error?$14341$U0r&n) (i/o-error-position . g$i/o-error-position$14342$U0r&n) (i/o-filename-error? . g$i/o-filename-error?$14351$U0r&n) (i/o-file-protection-error? . g$i/o-file-protection-error?$14360$U0r&n) (i/o-file-is-read-only-error? . g$i/o-file-is-read-only-error?$14368$U0r&n) (i/o-file-does-not-exist-error? . g$i/o-file-does-not-exist-error?$14384$U0r&n) (i/o-file-already-exists-error? . g$i/o-file-already-exists-error?$14376$U0r&n) (i/o-error? . g$i/o-error?$14316$U0r&n) (i/o-error-port . g$i/o-error-port$14394$U0r&n) (i/o-error-filename . g$i/o-error-filename$14352$U0r&n) (i/o-encoding-error? . g$i/o-encoding-error?$14411$U0r&n) (i/o-encoding-error-char . g$i/o-encoding-error-char$14412$U0r&n) (i/o-decoding-error? . g$i/o-decoding-error?$14402$U0r&n) (get-datum . g$get-datum$14976$U0r&n) (call-with-string-output-port . g$call-with-string-output-port$14981$U0r&n) (call-with-port . g$call-with-port$14982$U0r&n) (scheme-report-environment . g$scheme-report-environment$20757$U0r&n) (quotient . g$quotient$14461$U0r&n) (null-environment . g$null-environment$20756$U0r&n) (remainder . g$remainder$14462$U0r&n) (modulo . g$modulo$14463$U0r&n) (inexact->exact . g$inexact->exact$14458$U0r&n) (force . g$force$14465$U0r&n) (exact->inexact . g$exact->inexact$14459$U0r&n) (command-line . g$command-line$20852$U0r&n) (remove . g$remove$12758$U0r&n) (remv . g$remv$12759$U0r&n) (remp . g$remp$12739$U0r&n) (remq . g$remq$12760$U0r&n) (partition . g$partition$12738$U0r&n) (memv . g$memv$12746$U0r&n) (memq . g$memq$12745$U0r&n) (memp . g$memp$12748$U0r&n) (member . g$member$12747$U0r&n) (exists . g$exists$12752$U0r&n) (for-all . g$for-all$12751$U0r&n) (fold-right . g$fold-right$12757$U0r&n) (fold-left . g$fold-left$12756$U0r&n) (find . g$find$12737$U0r&n) (filter . g$filter$12740$U0r&n) (cons* . g$cons*$12755$U0r&n) (assv . g$assv$12742$U0r&n) (assq . g$assq$12741$U0r&n) (assp . g$assp$12744$U0r&n) (assoc . g$assoc$12743$U0r&n) (with-exception-handler . g$with-exception-handler$13782$U0r&n) (raise-continuable . g$raise-continuable$13785$U0r&n) (raise . g$raise$13784$U0r&n) (eval . g$eval$20759$U0r&n) (environment . g$environment$20755$U0r&n) (make-enumeration . g$make-enumeration$15181$U0r&n) (enum-set=? . g$enum-set=?$15188$U0r&n) (enum-set-universe . g$enum-set-universe$15182$U0r&n) (enum-set-union . g$enum-set-union$15189$U0r&n) (enum-set-subset? . g$enum-set-subset?$15187$U0r&n) (enum-set-projection . g$enum-set-projection$15193$U0r&n) (enum-set-member? . g$enum-set-member?$15186$U0r&n) (enum-set-intersection . g$enum-set-intersection$15190$U0r&n) (enum-set-indexer . g$enum-set-indexer$15183$U0r&n) (enum-set-difference . g$enum-set-difference$15191$U0r&n) (enum-set-constructor . g$enum-set-constructor$15184$U0r&n) (enum-set-complement . g$enum-set-complement$15192$U0r&n) (enum-set->list . g$enum-set->list$15185$U0r&n) (who-condition? . g$who-condition?$14263$U0r&n) (warning? . g$warning?$14212$U0r&n) (violation? . g$violation?$14236$U0r&n) (undefined-violation? . g$undefined-violation?$14308$U0r&n) (syntax-violation? . g$syntax-violation?$14298$U0r&n) (syntax-violation-subform . g$syntax-violation-subform$14300$U0r&n) (syntax-violation-form . g$syntax-violation-form$14299$U0r&n) (syntax-violation . g$syntax-violation$20777$U0r&n) (serious-condition? . g$serious-condition?$14220$U0r&n) (non-continuable-violation? . g$non-continuable-violation?$14272$U0r&n) (message-condition? . g$message-condition?$14203$U0r&n) (make-who-condition . g$make-who-condition$14261$U0r&n) (make-warning . g$make-warning$14211$U0r&n) (make-violation . g$make-violation$14235$U0r&n) (make-undefined-violation . g$make-undefined-violation$14307$U0r&n) (make-syntax-violation . g$make-syntax-violation$14295$U0r&n) (make-serious-condition . g$make-serious-condition$14219$U0r&n) (make-non-continuable-violation . g$make-non-continuable-violation$14271$U0r&n) (make-message-condition . g$make-message-condition$14201$U0r&n) (make-lexical-violation . g$make-lexical-violation$14287$U0r&n) (make-irritants-condition . g$make-irritants-condition$14251$U0r&n) (make-implementation-restriction-violation . g$make-implementation-restriction-violation$14279$U0r&n) (make-error . g$make-error$14227$U0r&n) (make-assertion-violation . g$make-assertion-violation$14243$U0r&n) (lexical-violation? . g$lexical-violation?$14288$U0r&n) (irritants-condition? . g$irritants-condition?$14253$U0r&n) (implementation-restriction-violation? . g$implementation-restriction-violation?$14280$U0r&n) (error? . g$error?$14228$U0r&n) (condition-who . g$condition-who$14264$U0r&n) (condition-message . g$condition-message$14204$U0r&n) (condition-irritants . g$condition-irritants$14254$U0r&n) (assertion-violation? . g$assertion-violation?$14244$U0r&n) (native-endianness . g$native-endianness$13729$U0r&n) (bytevector? . g$bytevector?$13495$U0r&n) (bytevector-u64-set! . g$bytevector-u64-set!$13750$U0r&n) (bytevector-u64-ref . g$bytevector-u64-ref$13746$U0r&n) (bytevector-u64-native-set! . g$bytevector-u64-native-set!$13752$U0r&n) (bytevector-u64-native-ref . g$bytevector-u64-native-ref$13748$U0r&n) (bytevector-u32-set! . g$bytevector-u32-set!$13742$U0r&n) (bytevector-u32-ref . g$bytevector-u32-ref$13738$U0r&n) (bytevector-u32-native-set! . g$bytevector-u32-native-set!$13744$U0r&n) (bytevector-u32-native-ref . g$bytevector-u32-native-ref$13740$U0r&n) (bytevector-u16-set! . g$bytevector-u16-set!$13734$U0r&n) (bytevector-u16-ref . g$bytevector-u16-ref$13730$U0r&n) (bytevector-u16-native-set! . g$bytevector-u16-native-set!$13736$U0r&n) (bytevector-u16-native-ref . g$bytevector-u16-native-ref$13732$U0r&n) (bytevector-s64-set! . g$bytevector-s64-set!$13751$U0r&n) (bytevector-s64-ref . g$bytevector-s64-ref$13747$U0r&n) (bytevector-s64-native-set! . g$bytevector-s64-native-set!$13753$U0r&n) (bytevector-s64-native-ref . g$bytevector-s64-native-ref$13749$U0r&n) (bytevector-s32-set! . g$bytevector-s32-set!$13743$U0r&n) (bytevector-s32-ref . g$bytevector-s32-ref$13739$U0r&n) (bytevector-s32-native-set! . g$bytevector-s32-native-set!$13745$U0r&n) (bytevector-s32-native-ref . g$bytevector-s32-native-ref$13741$U0r&n) (bytevector-s16-set! . g$bytevector-s16-set!$13735$U0r&n) (bytevector-s16-ref . g$bytevector-s16-ref$13731$U0r&n) (bytevector-s16-native-set! . g$bytevector-s16-native-set!$13737$U0r&n) (bytevector-s16-native-ref . g$bytevector-s16-native-ref$13733$U0r&n) (bytevector-ieee-single-native-set! . g$bytevector-ieee-single-native-set!$13756$U0r&n) (bytevector-ieee-single-native-ref . g$bytevector-ieee-single-native-ref$13754$U0r&n) (bytevector-ieee-double-native-set! . g$bytevector-ieee-double-native-set!$13757$U0r&n) (bytevector-ieee-double-native-ref . g$bytevector-ieee-double-native-ref$13755$U0r&n) (no-nans-violation? . g$no-nans-violation?$14428$U0r&n) (no-infinities-violation? . g$no-infinities-violation?$14420$U0r&n) (make-no-nans-violation . g$make-no-nans-violation$14427$U0r&n) (make-no-infinities-violation . g$make-no-infinities-violation$14419$U0r&n) (flzero? . g$flzero?$14948$U0r&n) (fltruncate . g$fltruncate$14943$U0r&n) (fltan . g$fltan$14933$U0r&n) (flsqrt . g$flsqrt$14938$U0r&n) (flsin . g$flsin$14931$U0r&n) (flround . g$flround$14944$U0r&n) (flpositive? . g$flpositive?$14946$U0r&n) (flonum? . g$flonum?$13500$U0r&n) (flodd? . g$flodd?$14950$U0r&n) (flnegative? . g$flnegative?$14947$U0r&n) (flnan? . g$flnan?$14930$U0r&n) (flmod0 . g$flmod0$14924$U0r&n) (flmod . g$flmod$14923$U0r&n) (flmin . g$flmin$14952$U0r&n) (flmax . g$flmax$14951$U0r&n) (fllog . g$fllog$14937$U0r&n) (flinteger? . g$flinteger?$14927$U0r&n) (flinfinite? . g$flinfinite?$14929$U0r&n) (flfloor . g$flfloor$14942$U0r&n) (flfinite? . g$flfinite?$14928$U0r&n) (flexpt . g$flexpt$14940$U0r&n) (flexp . g$flexp$14939$U0r&n) (fleven? . g$fleven?$14949$U0r&n) (fldiv0-and-mod0 . g$fldiv0-and-mod0$14926$U0r&n) (fldiv-and-mod . g$fldiv-and-mod$14925$U0r&n) (flcos . g$flcos$14932$U0r&n) (flceiling . g$flceiling$14941$U0r&n) (flatan . g$flatan$14936$U0r&n) (flasin . g$flasin$14934$U0r&n) (flacos . g$flacos$14935$U0r&n) (flabs . g$flabs$14945$U0r&n) (fxzero? . g$fxzero?$14831$U0r&n) (fxrotate-bit-field . g$fxrotate-bit-field$14845$U0r&n) (fxpositive? . g$fxpositive?$14829$U0r&n) (fxodd? . g$fxodd?$14833$U0r&n) (fxnegative? . g$fxnegative?$14830$U0r&n) (fxmod0 . g$fxmod0$14826$U0r&n) (fxmod . g$fxmod$14825$U0r&n) (fxmin . g$fxmin$14835$U0r&n) (fxmax . g$fxmax$14834$U0r&n) (fxif . g$fxif$14839$U0r&n) (fxeven? . g$fxeven?$14832$U0r&n) (fxdiv0-and-mod0 . g$fxdiv0-and-mod0$14828$U0r&n) (fxdiv-and-mod . g$fxdiv-and-mod$14827$U0r&n) (fxcopy-bit-field . g$fxcopy-bit-field$14842$U0r&n) (fxcopy-bit . g$fxcopy-bit$14840$U0r&n) (fxbit-field . g$fxbit-field$14841$U0r&n) (fxarithmetic-shift-right . g$fxarithmetic-shift-right$14844$U0r&n) (fxarithmetic-shift-left . g$fxarithmetic-shift-left$14843$U0r&n) (fx-/carry . g$fx-/carry$14837$U0r&n) (fx+/carry . g$fx+/carry$14838$U0r&n) (fx*/carry . g$fx*/carry$14836$U0r&n) (fixnum-width . g$fixnum-width$13501$U0r&n) (fixnum? . g$fixnum?$13499$U0r&n) (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$14690$U0r&n) (bitwise-if . g$bitwise-if$14684$U0r&n) (bitwise-copy-bit-field . g$bitwise-copy-bit-field$14687$U0r&n) (bitwise-copy-bit . g$bitwise-copy-bit$14685$U0r&n) (bitwise-bit-field . g$bitwise-bit-field$14686$U0r&n) (bitwise-arithmetic-shift-right . g$bitwise-arithmetic-shift-right$14689$U0r&n) (bitwise-arithmetic-shift-left . g$bitwise-arithmetic-shift-left$14688$U0r&n) (zero? . g$zero?$13535$U0r&n) (vector? . g$vector?$13494$U0r&n) (vector-map . g$vector-map$13557$U0r&n) (vector-for-each . g$vector-for-each$13558$U0r&n) (vector-fill! . g$vector-fill!$13502$U0r&n) (symbol? . g$symbol?$13496$U0r&n) (symbol=? . g$symbol=?$13547$U0r&n) (string>? . g$string>?$13544$U0r&n) (string>=? . g$string>=?$13546$U0r&n) (string=? . g$string=?$13542$U0r&n) (string<? . g$string<?$13543$U0r&n) (string<=? . g$string<=?$13545$U0r&n) (string-for-each . g$string-for-each$13559$U0r&n) (reverse . g$reverse$13504$U0r&n) (rationalize . g$rationalize$13554$U0r&n) (procedure? . g$procedure?$13498$U0r&n) (positive? . g$positive?$13533$U0r&n) (odd? . g$odd?$13537$U0r&n) (negative? . g$negative?$13534$U0r&n) (min . g$min$13539$U0r&n) (max . g$max$13538$U0r&n) (map . g$map$12753$U0r&n) (list-tail . g$list-tail$12733$U0r&n) (list-ref . g$list-ref$12734$U0r&n) (list->vector . g$list->vector$13491$U0r&n) (list->string . g$list->string$13492$U0r&n) (lcm . g$lcm$13541$U0r&n) (gcd . g$gcd$13540$U0r&n) (for-each . g$for-each$12754$U0r&n) (even? . g$even?$13536$U0r&n) (error . g$error$13787$U0r&n) (div0-and-mod0 . g$div0-and-mod0$13490$U0r&n) (mod0 . g$mod0$13488$U0r&n) (div-and-mod . g$div-and-mod$13489$U0r&n) (mod . g$mod$13487$U0r&n) (char? . g$char?$13493$U0r&n) (char>? . g$char>?$13551$U0r&n) (char>=? . g$char>=?$13553$U0r&n) (char=? . g$char=?$13549$U0r&n) (char<? . g$char<?$13550$U0r&n) (char<=? . g$char<=?$13552$U0r&n) (cddddr . g$cddddr$13532$U0r&n) (cdddar . g$cdddar$13531$U0r&n) (cddadr . g$cddadr$13530$U0r&n) (cddaar . g$cddaar$13529$U0r&n) (cdaddr . g$cdaddr$13528$U0r&n) (cdadar . g$cdadar$13527$U0r&n) (cdaadr . g$cdaadr$13526$U0r&n) (cdaaar . g$cdaaar$13525$U0r&n) (cadddr . g$cadddr$13524$U0r&n) (caddar . g$caddar$13523$U0r&n) (cadadr . g$cadadr$13522$U0r&n) (cadaar . g$cadaar$13521$U0r&n) (caaddr . g$caaddr$13520$U0r&n) (caadar . g$caadar$13519$U0r&n) (caaadr . g$caaadr$13518$U0r&n) (caaaar . g$caaaar$13517$U0r&n) (cdddr . g$cdddr$13516$U0r&n) (cddar . g$cddar$13515$U0r&n) (cdadr . g$cdadr$13514$U0r&n) (cdaar . g$cdaar$13513$U0r&n) (caddr . g$caddr$13512$U0r&n) (cadar . g$cadar$13511$U0r&n) (caadr . g$caadr$13510$U0r&n) (caaar . g$caaar$13509$U0r&n) (cddr . g$cddr$13508$U0r&n) (cdar . g$cdar$13507$U0r&n) (cadr . g$cadr$13506$U0r&n) (caar . g$caar$13505$U0r&n) (boolean? . g$boolean?$13497$U0r&n) (boolean=? . g$boolean=?$13548$U0r&n) (assertion-violation . g$assertion-violation$13786$U0r&n) (enum-set? . g$enum?$15162$U0r&n) (make-promise . g$make-promise$14464$U0r&n) (load/unload . g$load/unload$20855$U0r&n) (load/args . g$load/args$20854$U0r&n) (printf . g$printf$15217$U0r&n) (fprintf . g$fprintf$15218$U0r&n) (format . g$format$15219$U0r&n) (trace-printer . g$trace-printer$20851$U0r&n) (make-traced-macro . g$make-traced-macro$15223$U0r&n) (assertion-error . g$assertion-error$20773$U0r&n) (make-parameter . g$make-parameter$15428$U0r&n) (environment-bindings . g$environment-bindings$20751$U0r&n) (environment-symbols . g$environment-symbols$20754$U0r&n) (interaction-environment-symbols . g$interaction-environment-symbols$20750$U0r&n) (library-path . g$library-path$16254$U0r&n) (make-compile-time-value . g$make-compile-time-value$20600$U0r&n) (expand->core . g$expand->core$20760$U0r&n) (expand . g$expand$20758$U0r&n) (syntax-transpose . g$syntax-transpose$20707$U0r&n) (convert->cps . g$convert->cps$15956$U0r&n) (installed-libraries . g$installed-libraries$16275$U0r&n) (uninstall-library . g$uninstall-library$16266$U0r&n) (pretty-gensyms . g$pretty-gensyms$15636$U0r&n) (pretty-width . g$pretty-width$15633$U0r&n) (pretty-print . g$pretty-print$15638$U0r&n)))))))(library-letrec* (psyntax main) ((g$trace-printer$20786$U0r&n g$trace-printer$20851$U0r&n ((case-lambda ((g$C$30012$U0r&n) (g$make-parameter$15428$U0r&n g$C$30012$U0r&n g$pretty-print$15638$U0r&n))) (library-letrec*-identity 'g$trace-printer$20786$U0r&n))) (g$command-line$20787$U0r&n g$command-line$20852$U0r&n ((case-lambda ((g$C$30013$U0r&n) (get-command-line (case-lambda ((g$V$30014$U0r&n) (g$make-parameter$15428$U0r&n g$C$30013$U0r&n g$V$30014$U0r&n)))))) (library-letrec*-identity 'g$command-line$20787$U0r&n))) (g$local-library-path$20788$U0r&n g$local-library-path$20853$U0r&n ((case-lambda ((g$C$30015$U0r&n) (g$C$30015$U0r&n (case-lambda ((g$C$29897$U0r&n g$filename$20802$U0r&n) (g$library-path$16254$U0r&n (case-lambda ((g$V$29898$U0r&n) (g$get-directory-name$13617$U0r&n (case-lambda ((g$V$29899$U0r&n) (cons g$C$29897$U0r&n g$V$29899$U0r&n g$V$29898$U0r&n))) g$filename$20802$U0r&n))))))))) (library-letrec*-identity 'g$local-library-path$20788$U0r&n))) (g$load/args$20789$U0r&n g$load/args$20854$U0r&n ((case-lambda ((g$C$30016$U0r&n) (g$C$30016$U0r&n (case-lambda ((g$C$29900$U0r&n g$filename$20803$U0r&n . g$args$20804$U0r&n) (apply (case-lambda (g$IGNORE$29901$U0r&n (void g$C$29900$U0r&n))) g$load-r6rs-top-level$20799$U0r&n g$filename$20803$U0r&n 'load g$args$20804$U0r&n)))))) (library-letrec*-identity 'g$load/args$20789$U0r&n))) (g$load/unload$20790$U0r&n g$load/unload$20855$U0r&n ((case-lambda ((g$C$30017$U0r&n) (g$C$30017$U0r&n (case-lambda ((g$C$29908$U0r&n g$filename$20805$U0r&n) (g$installed-libraries$16275$U0r&n (case-lambda ((g$V$29909$U0r&n) ((case-lambda ((g$C$29905$U0r&n g$libs$20806$U0r&n) (g$load$20791$U0r&n (case-lambda (g$IGNORE$29906$U0r&n (g$installed-libraries$16275$U0r&n (case-lambda ((g$V$29907$U0r&n) (g$for-each$12754$U0r&n g$C$29905$U0r&n (case-lambda ((g$C$29902$U0r&n g$lib$20807$U0r&n) (g$memq$12745$U0r&n (case-lambda ((g$V$29903$U0r&n) (not (case-lambda ((g$T$29904$U0r&n) (if g$T$29904$U0r&n (g$uninstall-library$16266$U0r&n g$C$29902$U0r&n g$lib$20807$U0r&n) (void g$C$29902$U0r&n)))) g$V$29903$U0r&n))) g$lib$20807$U0r&n g$libs$20806$U0r&n))) g$V$29907$U0r&n)))))) g$filename$20805$U0r&n))) g$C$29908$U0r&n g$V$29909$U0r&n))))))))) (library-letrec*-identity 'g$load/unload$20790$U0r&n))) (g$load$20791$U0r&n g$load$20856$U0r&n ((case-lambda ((g$C$30018$U0r&n) (g$C$30018$U0r&n (case-lambda ((g$C$29910$U0r&n g$filename$20808$U0r&n) (g$command-line$20787$U0r&n (case-lambda ((g$V$29911$U0r&n) (cdr (case-lambda ((g$V$29912$U0r&n) (apply (case-lambda (g$IGNORE$29913$U0r&n (void g$C$29910$U0r&n))) g$load-r6rs-top-level$20799$U0r&n g$filename$20808$U0r&n 'load g$V$29912$U0r&n))) g$V$29911$U0r&n))))))))) (library-letrec*-identity 'g$load$20791$U0r&n))) (g$ironscheme-build$20792$U0r&n g$ironscheme-build$20857$U0r&n ((case-lambda ((g$C$30019$U0r&n) (g$C$30019$U0r&n (case-lambda ((g$C$29920$U0r&n) (g$ironscheme-build$20792$U0r&n g$C$29920$U0r&n '#f)) ((g$C$29920$U0r&n g$cps?$20809$U0r&n) (g$call-with-output-file$15044$U0r&n (case-lambda (g$IGNORE$29921$U0r&n (g$load$20791$U0r&n g$C$29920$U0r&n '"ironscheme-buildscript.ss"))) '"build-options.ss" (case-lambda ((g$C$29914$U0r&n g$p$20810$U0r&n) (list (case-lambda ((g$V$29915$U0r&n) (write (case-lambda (g$IGNORE$29916$U0r&n (not (case-lambda ((g$V$29917$U0r&n) (list (case-lambda ((g$V$29918$U0r&n) (write (case-lambda (g$IGNORE$29919$U0r&n (g$newline$15045$U0r&n g$C$29914$U0r&n g$p$20810$U0r&n))) g$V$29918$U0r&n g$p$20810$U0r&n))) 'define-option 'if-wants-letrec* g$V$29917$U0r&n))) g$cps?$20809$U0r&n))) g$V$29915$U0r&n g$p$20810$U0r&n))) 'define-option 'cps-mode g$cps?$20809$U0r&n))))))))) (library-letrec*-identity 'g$ironscheme-build$20792$U0r&n))) (g$foreground-color$20793$U0r&n g$foreground-color$20858$U0r&n ((case-lambda ((g$C$30020$U0r&n) (g$C$30020$U0r&n (case-lambda ((g$C$29922$U0r&n) (g$C$29922$U0r&n (clr-call-internal 'console 'get_foregroundcolor '()))) ((g$C$29922$U0r&n g$color$20811$U0r&n) (g$C$29922$U0r&n (clr-call-internal 'console 'set_foregroundcolor '() g$color$20811$U0r&n))))))) (library-letrec*-identity 'g$foreground-color$20793$U0r&n))) (g$system-exception?$20794$U0r&n g$system-exception?$20859$U0r&n ((case-lambda ((g$C$30021$U0r&n) (g$C$30021$U0r&n (case-lambda ((g$C$29923$U0r&n g$e$20812$U0r&n) (g$C$29923$U0r&n (clr-is-internal 'SystemException g$e$20812$U0r&n))))))) (library-letrec*-identity 'g$system-exception?$20794$U0r&n))) (g$eval-top-level$20795$U0r&n g$eval-top-level$20860$U0r&n ((case-lambda ((g$C$30022$U0r&n) (g$C$30022$U0r&n (case-lambda ((g$C$29950$U0r&n g$x$20813$U0r&n) (call/cc g$C$29950$U0r&n (case-lambda ((g$C$29949$U0r&n g$k$20814$U0r&n) (g$with-exception-handler$13782$U0r&n g$C$29949$U0r&n (case-lambda ((g$C$29944$U0r&n g$e$20815$U0r&n) (g$serious-condition?$14220$U0r&n (case-lambda ((g$V$29945$U0r&n) ((case-lambda ((g$C$29943$U0r&n g$t$20828$U0r&n) (if g$t$20828$U0r&n (g$C$29943$U0r&n g$t$20828$U0r&n) (g$system-exception?$20794$U0r&n g$C$29943$U0r&n g$e$20815$U0r&n)))) (case-lambda ((g$V$29946$U0r&n) ((case-lambda ((g$C$29938$U0r&n g$serious?$20816$U0r&n) (current-error-port (case-lambda ((g$V$29939$U0r&n) ((case-lambda ((g$J$29942$U0r&n) (if g$serious?$20816$U0r&n (g$J$29942$U0r&n 'red) (g$J$29942$U0r&n 'yellow)))) (case-lambda ((g$V$29940$U0r&n) ((case-lambda ((g$C$29937$U0r&n g$foreground-color$20821$U0r&n g$current-output-port$20822$U0r&n g$foreground-color$20823$U0r&n g$current-output-port$20824$U0r&n) ((case-lambda ((g$C$29928$U0r&n g$swap$20825$U0r&n) (dynamic-wind g$C$29928$U0r&n g$swap$20825$U0r&n (case-lambda ((g$C$29924$U0r&n) ((case-lambda ((g$J$29927$U0r&n) (if g$serious?$20816$U0r&n (display g$J$29927$U0r&n '"Unhandled exception during evaluation:\n") (void g$J$29927$U0r&n)))) (case-lambda (g$IGNORE$29925$U0r&n (display (case-lambda (g$IGNORE$29926$U0r&n (g$newline$15045$U0r&n g$C$29924$U0r&n))) g$e$20815$U0r&n)))))) g$swap$20825$U0r&n))) g$C$29937$U0r&n (case-lambda ((g$C$29933$U0r&n) (g$foreground-color$20821$U0r&n (case-lambda ((g$V$29934$U0r&n) ((case-lambda ((g$C$29929$U0r&n g$t$20826$U0r&n) (g$foreground-color$20821$U0r&n (case-lambda (g$IGNORE$29930$U0r&n (begin (set! g$foreground-color$20823$U0r&n g$t$20826$U0r&n) (g$C$29929$U0r&n (cps-void))))) g$foreground-color$20823$U0r&n))) (case-lambda (g$IGNORE$29935$U0r&n (g$current-output-port$20822$U0r&n (case-lambda ((g$V$29936$U0r&n) ((case-lambda ((g$C$29931$U0r&n g$t$20827$U0r&n) (g$current-output-port$20822$U0r&n (case-lambda (g$IGNORE$29932$U0r&n (begin (set! g$current-output-port$20824$U0r&n g$t$20827$U0r&n) (g$C$29931$U0r&n (cps-void))))) g$current-output-port$20824$U0r&n))) g$C$29933$U0r&n g$V$29936$U0r&n)))))) g$V$29934$U0r&n))))))))) (case-lambda (g$IGNORE$29941$U0r&n (if g$serious?$20816$U0r&n (g$k$20814$U0r&n g$C$29938$U0r&n) (void g$C$29938$U0r&n)))) g$foreground-color$20793$U0r&n current-output-port g$V$29940$U0r&n g$V$29939$U0r&n))))))))) g$C$29944$U0r&n g$V$29946$U0r&n))) g$V$29945$U0r&n))) g$e$20815$U0r&n))) (case-lambda ((g$C$29947$U0r&n) (g$interaction-environment$20784$U0r&n (case-lambda ((g$V$29948$U0r&n) (g$eval$20759$U0r&n g$C$29947$U0r&n g$x$20813$U0r&n g$V$29948$U0r&n))))))))))))))) (library-letrec*-identity 'g$eval-top-level$20795$U0r&n))) (g$compile-system-libraries$20796$U0r&n g$compile-system-libraries$20861$U0r&n ((case-lambda ((g$C$30023$U0r&n) (g$C$30023$U0r&n (case-lambda ((g$C$29951$U0r&n) (g$eval-top-level$20795$U0r&n g$C$29951$U0r&n '(begin (include "system-libraries.ss") (compile "system-libraries.ss")))))))) (library-letrec*-identity 'g$compile-system-libraries$20796$U0r&n))) (g$compile$20797$U0r&n g$compile$20862$U0r&n ((case-lambda ((g$C$30024$U0r&n) (g$C$30024$U0r&n (case-lambda ((g$C$29952$U0r&n g$filename$20829$U0r&n) (g$load-r6rs-top-level$20799$U0r&n g$C$29952$U0r&n g$filename$20829$U0r&n 'compile)))))) (library-letrec*-identity 'g$compile$20797$U0r&n))) (g$compile->closure$20798$U0r&n g$compile->closure$20863$U0r&n ((case-lambda ((g$C$30025$U0r&n) (g$C$30025$U0r&n (case-lambda ((g$C$29953$U0r&n g$filename$20830$U0r&n) (g$load-r6rs-top-level$20799$U0r&n g$C$29953$U0r&n g$filename$20830$U0r&n 'closure)))))) (library-letrec*-identity 'g$compile->closure$20798$U0r&n))) (g$load-r6rs-top-level$20799$U0r&n g$load-r6rs-top-level$20864$U0r&n ((case-lambda ((g$C$30026$U0r&n) (g$C$30026$U0r&n (case-lambda ((g$C$29989$U0r&n g$filename$20831$U0r&n g$how$20832$U0r&n . g$args$20833$U0r&n) (g$local-library-path$20788$U0r&n (case-lambda ((g$V$29990$U0r&n) ((case-lambda ((g$C$29988$U0r&n g$library-path$20836$U0r&n g$library-path$20837$U0r&n) ((case-lambda ((g$C$29983$U0r&n g$swap$20838$U0r&n) (dynamic-wind g$C$29983$U0r&n g$swap$20838$U0r&n (case-lambda ((g$C$29981$U0r&n) (g$with-input-from-file$15041$U0r&n (case-lambda ((g$V$29982$U0r&n) ((case-lambda ((g$C$29970$U0r&n g$x*$20839$U0r&n) ((case-lambda ((g$C$29963$U0r&n g$t$20840$U0r&n) (eqv? (case-lambda ((g$T$29964$U0r&n) (if g$T$29964$U0r&n (g$pre-compile-r6rs-top-level$20782$U0r&n g$C$29963$U0r&n g$x*$20839$U0r&n) (eqv? (case-lambda ((g$T$29965$U0r&n) (if g$T$29965$U0r&n (g$map$12753$U0r&n (case-lambda ((g$V$29966$U0r&n) (cons (case-lambda ((g$V$29967$U0r&n) ((case-lambda ((g$C$29961$U0r&n g$command-line$20843$U0r&n g$command-line$20844$U0r&n) ((case-lambda ((g$C$29956$U0r&n g$swap$20845$U0r&n) (dynamic-wind g$C$29956$U0r&n g$swap$20845$U0r&n (case-lambda ((g$C$29954$U0r&n) (g$compile-r6rs-top-level$20781$U0r&n (case-lambda ((g$V$29955$U0r&n) (g$V$29955$U0r&n g$C$29954$U0r&n))) g$x*$20839$U0r&n))) g$swap$20845$U0r&n))) g$C$29961$U0r&n (case-lambda ((g$C$29959$U0r&n) (g$command-line$20843$U0r&n (case-lambda ((g$V$29960$U0r&n) ((case-lambda ((g$C$29957$U0r&n g$t$20846$U0r&n) (g$command-line$20843$U0r&n (case-lambda (g$IGNORE$29958$U0r&n (begin (set! g$command-line$20844$U0r&n g$t$20846$U0r&n) (g$C$29957$U0r&n (cps-void))))) g$command-line$20844$U0r&n))) g$C$29959$U0r&n g$V$29960$U0r&n))))))))) g$C$29963$U0r&n g$command-line$20787$U0r&n g$V$29967$U0r&n))) g$filename$20831$U0r&n g$V$29966$U0r&n))) (case-lambda ((g$C$29962$U0r&n g$x$20847$U0r&n) (g$format$15219$U0r&n g$C$29962$U0r&n '"~a" g$x$20847$U0r&n))) g$args$20833$U0r&n) (eqv? (case-lambda ((g$T$29968$U0r&n) (if g$T$29968$U0r&n (g$compile-r6rs-top-level$20781$U0r&n (case-lambda (g$IGNORE$29969$U0r&n (g$serialize-all$16258$U0r&n g$C$29963$U0r&n serialize-library g$compile-core-expr$16006$U0r&n))) g$x*$20839$U0r&n) (if '#f (g$C$29963$U0r&n '#f) (void g$C$29963$U0r&n))))) g$t$20840$U0r&n 'compile)))) g$t$20840$U0r&n 'load)))) g$t$20840$U0r&n 'closure))) g$C$29970$U0r&n g$how$20832$U0r&n))) g$C$29981$U0r&n g$V$29982$U0r&n))) g$filename$20831$U0r&n (case-lambda ((g$C$29979$U0r&n) ((case-lambda ((g$C$29978$U0r&n g$f$20848$U0r&n) ((case-lambda ((g$C$29972$U0r&n g$f$29971$U0r&n) (begin (set! g$f$20848$U0r&n g$f$29971$U0r&n) (g$C$29972$U0r&n g$f$20848$U0r&n)))) g$C$29978$U0r&n (case-lambda ((g$C$29976$U0r&n) (read-annotated (case-lambda ((g$V$29977$U0r&n) ((case-lambda ((g$C$29973$U0r&n g$x$20849$U0r&n) (eof-object? (case-lambda ((g$T$29974$U0r&n) (if g$T$29974$U0r&n (g$C$29973$U0r&n '()) (g$f$20848$U0r&n (case-lambda ((g$V$29975$U0r&n) (cons g$C$29973$U0r&n g$x$20849$U0r&n g$V$29975$U0r&n))))))) g$x$20849$U0r&n))) g$C$29976$U0r&n g$V$29977$U0r&n))))))))) (case-lambda ((g$V$29980$U0r&n) (g$V$29980$U0r&n g$C$29979$U0r&n))) uninitialized)))))) g$swap$20838$U0r&n))) g$C$29988$U0r&n (case-lambda ((g$C$29986$U0r&n) (g$library-path$20836$U0r&n (case-lambda ((g$V$29987$U0r&n) ((case-lambda ((g$C$29984$U0r&n g$t$20850$U0r&n) (g$library-path$20836$U0r&n (case-lambda (g$IGNORE$29985$U0r&n (begin (set! g$library-path$20837$U0r&n g$t$20850$U0r&n) (g$C$29984$U0r&n (cps-void))))) g$library-path$20837$U0r&n))) g$C$29986$U0r&n g$V$29987$U0r&n))))))))) g$C$29989$U0r&n g$library-path$16254$U0r&n g$V$29990$U0r&n))) g$filename$20831$U0r&n)))))) (library-letrec*-identity 'g$load-r6rs-top-level$20799$U0r&n))) (g$fo$20800$U0r&n g$fo$20865$U0r&n ((case-lambda ((g$C$30027$U0r&n) (g$make-enumeration$15181$U0r&n g$C$30027$U0r&n '(no-fail no-create no-truncate)))) (library-letrec*-identity 'g$fo$20800$U0r&n)))) (g$current-precompiled-library-loader$16259$U0r&n (case-lambda (g$IGNORE$29994$U0r&n (set-symbol-value! (case-lambda (g$IGNORE$29995$U0r&n (set-symbol-value! (case-lambda (g$IGNORE$29996$U0r&n (set-symbol-value! (case-lambda (g$IGNORE$29997$U0r&n (set-symbol-value! (case-lambda (g$IGNORE$29998$U0r&n (set-symbol-value! (case-lambda (g$IGNORE$29999$U0r&n (set-symbol-value! (case-lambda (g$IGNORE$30000$U0r&n (set-symbol-value! (case-lambda (g$IGNORE$30001$U0r&n (set-symbol-value! (case-lambda (g$IGNORE$30002$U0r&n (set-symbol-value! (case-lambda (g$IGNORE$30003$U0r&n (set-symbol-value! (case-lambda (g$IGNORE$30004$U0r&n (set-symbol-value! (case-lambda (g$IGNORE$30005$U0r&n (g$enum-set-constructor$15184$U0r&n (case-lambda ((g$V$30006$U0r&n) (g$file-options-constructor$15429$U0r&n (case-lambda (g$IGNORE$30007$U0r&n (get-library-paths (case-lambda ((g$V$30008$U0r&n) (g$library-path$16254$U0r&n (case-lambda (g$IGNORE$30009$U0r&n (g$library-extensions$16255$U0r&n (case-lambda ((g$V$30010$U0r&n) (cons (case-lambda ((g$V$30011$U0r&n) (g$library-extensions$16255$U0r&n identity-for-cps g$V$30011$U0r&n))) '".ironscheme.sls" g$V$30010$U0r&n)))))) g$V$30008$U0r&n)))))) g$V$30006$U0r&n))) g$fo$20800$U0r&n))) 'raise g$raise$13784$U0r&n))) 'assertion-violation g$assertion-violation$13786$U0r&n))) 'convert->cps g$convert->cps$15956$U0r&n))) 'trace-printer g$trace-printer$20786$U0r&n))) 'expanded2core g$expanded->core$16005$U0r&n))) 'int-env-syms g$interaction-environment-symbols$20750$U0r&n))) 'eval-r6rs g$eval-top-level$20795$U0r&n))) 'compile->closure g$compile->closure$20798$U0r&n))) 'compile g$compile$20797$U0r&n))) 'load g$load$20791$U0r&n))) 'default-exception-handler (case-lambda ((g$C$29991$U0r&n g$ex$20801$U0r&n) (g$serious-condition?$14220$U0r&n (case-lambda ((g$T$29992$U0r&n) (if g$T$29992$U0r&n (g$raise$13784$U0r&n g$C$29991$U0r&n g$ex$20801$U0r&n) (display (case-lambda (g$IGNORE$29993$U0r&n (g$newline$15045$U0r&n g$C$29991$U0r&n))) g$ex$20801$U0r&n)))) g$ex$20801$U0r&n)))))) load-serialized-library))