;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme lists)
  ((g$list-tail$5600$1XjQw
     g$list-tail$5737$1XjQw
     (case-lambda
       ((g$lst$5628$1XjQw g$index$5629$1XjQw)
        (if ((case-lambda
               ((g$t$5630$1XjQw)
                (if g$t$5630$1XjQw
                  g$t$5630$1XjQw
                  (begin '#f (negative? g$index$5629$1XjQw)))))
             (null? g$lst$5628$1XjQw))
          (assertion-violation
            'list-tail
            '"index out of range"
            g$lst$5628$1XjQw
            g$index$5629$1XjQw)
          (if (zero? g$index$5629$1XjQw)
            g$lst$5628$1XjQw
            (g$list-tail$5600$1XjQw
              (cdr g$lst$5628$1XjQw)
              (- g$index$5629$1XjQw '1)))))))
   (g$list-ref$5601$1XjQw
     g$list-ref$5738$1XjQw
     (case-lambda
       ((g$lst$5631$1XjQw g$index$5632$1XjQw)
        (car (g$list-tail$5600$1XjQw g$lst$5631$1XjQw g$index$5632$1XjQw)))))
   (g$last-pair$5602$1XjQw
     g$last-pair$5739$1XjQw
     (case-lambda
       ((g$lst$5633$1XjQw)
        (if (null? g$lst$5633$1XjQw)
          g$lst$5633$1XjQw
          (if (null? (cdr g$lst$5633$1XjQw))
            g$lst$5633$1XjQw
            (g$last-pair$5602$1XjQw (cdr g$lst$5633$1XjQw)))))))
   (g$make-list$5603$1XjQw
     g$make-list$5740$1XjQw
     (case-lambda
       ((g$n$5634$1XjQw) (list->vector (make-vector g$n$5634$1XjQw)))
       ((g$n$5635$1XjQw g$fill$5636$1XjQw)
        (list->vector (make-vector g$n$5635$1XjQw g$fill$5636$1XjQw)))))
   (g$find$5604$1XjQw
     g$find$5741$1XjQw
     (case-lambda
       ((g$proc$5637$1XjQw g$l$5638$1XjQw)
        (if (null? g$l$5638$1XjQw)
          '#f
          ((case-lambda
             ((g$e$5639$1XjQw g$r$5640$1XjQw g$proc$5641$1XjQw)
              (if (g$proc$5641$1XjQw g$e$5639$1XjQw)
                g$e$5639$1XjQw
                (g$find$5604$1XjQw g$proc$5641$1XjQw g$r$5640$1XjQw))))
           (car g$l$5638$1XjQw)
           (cdr g$l$5638$1XjQw)
           g$proc$5637$1XjQw)))))
   (g$partition$5605$1XjQw
     g$partition$5742$1XjQw
     (case-lambda
       ((g$proc$5642$1XjQw g$l$5643$1XjQw)
        ((letrec ((g$f$5644$1XjQw
                    (case-lambda
                      ((g$l$5645$1XjQw g$a$5646$1XjQw g$b$5647$1XjQw)
                       (if (null? g$l$5645$1XjQw)
                         (values
                           (reverse! g$a$5646$1XjQw)
                           (reverse! g$b$5647$1XjQw))
                         ((case-lambda
                            ((g$e$5648$1XjQw)
                             (if (g$proc$5642$1XjQw g$e$5648$1XjQw)
                               (g$f$5644$1XjQw
                                 (cdr g$l$5645$1XjQw)
                                 (cons g$e$5648$1XjQw g$a$5646$1XjQw)
                                 g$b$5647$1XjQw)
                               (g$f$5644$1XjQw
                                 (cdr g$l$5645$1XjQw)
                                 g$a$5646$1XjQw
                                 (cons g$e$5648$1XjQw g$b$5647$1XjQw)))))
                          (car g$l$5645$1XjQw)))))))
           g$f$5644$1XjQw)
         g$l$5643$1XjQw
         '()
         '()))))
   (g$remp$5606$1XjQw
     g$remp$5743$1XjQw
     (case-lambda
       ((g$proc$5649$1XjQw g$l$5650$1XjQw)
        ((letrec ((g$f$5651$1XjQw
                    (case-lambda
                      ((g$l$5652$1XjQw g$a$5653$1XjQw)
                       (if (null? g$l$5652$1XjQw)
                         (reverse! g$a$5653$1XjQw)
                         ((case-lambda
                            ((g$e$5654$1XjQw)
                             (if (g$proc$5649$1XjQw g$e$5654$1XjQw)
                               (g$f$5651$1XjQw
                                 (cdr g$l$5652$1XjQw)
                                 g$a$5653$1XjQw)
                               (g$f$5651$1XjQw
                                 (cdr g$l$5652$1XjQw)
                                 (cons g$e$5654$1XjQw g$a$5653$1XjQw)))))
                          (car g$l$5652$1XjQw)))))))
           g$f$5651$1XjQw)
         g$l$5650$1XjQw
         '()))))
   (g$filter$5607$1XjQw
     g$filter$5744$1XjQw
     (case-lambda
       ((g$proc$5655$1XjQw g$l$5656$1XjQw)
        ((letrec ((g$f$5657$1XjQw
                    (case-lambda
                      ((g$l$5658$1XjQw g$a$5659$1XjQw)
                       (if (null? g$l$5658$1XjQw)
                         (reverse! g$a$5659$1XjQw)
                         ((case-lambda
                            ((g$e$5660$1XjQw)
                             (if (g$proc$5655$1XjQw g$e$5660$1XjQw)
                               (g$f$5657$1XjQw
                                 (cdr g$l$5658$1XjQw)
                                 (cons g$e$5660$1XjQw g$a$5659$1XjQw))
                               (g$f$5657$1XjQw
                                 (cdr g$l$5658$1XjQw)
                                 g$a$5659$1XjQw))))
                          (car g$l$5658$1XjQw)))))))
           g$f$5657$1XjQw)
         g$l$5656$1XjQw
         '()))))
   (g$assq$5608$1XjQw
     g$assq$5745$1XjQw
     (case-lambda
       ((g$obj$5661$1XjQw g$lst$5662$1XjQw)
        (if (null? g$lst$5662$1XjQw)
          '#f
          ((case-lambda
             ((g$obj$5663$1XjQw g$t$5664$1XjQw g$r$5665$1XjQw)
              (if (eq? g$obj$5663$1XjQw (car g$t$5664$1XjQw))
                g$t$5664$1XjQw
                (g$assq$5608$1XjQw g$obj$5663$1XjQw g$r$5665$1XjQw))))
           g$obj$5661$1XjQw
           (car g$lst$5662$1XjQw)
           (cdr g$lst$5662$1XjQw))))))
   (g$assv$5609$1XjQw
     g$assv$5746$1XjQw
     (case-lambda
       ((g$obj$5666$1XjQw g$lst$5667$1XjQw)
        (if (null? g$lst$5667$1XjQw)
          '#f
          ((case-lambda
             ((g$obj$5668$1XjQw g$t$5669$1XjQw g$r$5670$1XjQw)
              (if (eqv? g$obj$5668$1XjQw (car g$t$5669$1XjQw))
                g$t$5669$1XjQw
                (g$assv$5609$1XjQw g$obj$5668$1XjQw g$r$5670$1XjQw))))
           g$obj$5666$1XjQw
           (car g$lst$5667$1XjQw)
           (cdr g$lst$5667$1XjQw))))))
   (g$assoc$5610$1XjQw
     g$assoc$5747$1XjQw
     (case-lambda
       ((g$obj$5671$1XjQw g$lst$5672$1XjQw)
        (if (null? g$lst$5672$1XjQw)
          '#f
          ((case-lambda
             ((g$obj$5673$1XjQw g$t$5674$1XjQw g$r$5675$1XjQw)
              (if (equal? g$obj$5673$1XjQw (car g$t$5674$1XjQw))
                g$t$5674$1XjQw
                (g$assoc$5610$1XjQw g$obj$5673$1XjQw g$r$5675$1XjQw))))
           g$obj$5671$1XjQw
           (car g$lst$5672$1XjQw)
           (cdr g$lst$5672$1XjQw))))))
   (g$assp$5611$1XjQw
     g$assp$5748$1XjQw
     (case-lambda
       ((g$p?$5676$1XjQw g$lst$5677$1XjQw)
        (if (null? g$lst$5677$1XjQw)
          '#f
          ((case-lambda
             ((g$p?$5678$1XjQw g$t$5679$1XjQw g$r$5680$1XjQw)
              (if (g$p?$5678$1XjQw (car g$t$5679$1XjQw))
                g$t$5679$1XjQw
                (g$assp$5611$1XjQw g$p?$5678$1XjQw g$r$5680$1XjQw))))
           g$p?$5676$1XjQw
           (car g$lst$5677$1XjQw)
           (cdr g$lst$5677$1XjQw))))))
   (g$memq$5612$1XjQw
     g$memq$5749$1XjQw
     (case-lambda
       ((g$obj$5681$1XjQw g$lst$5682$1XjQw)
        (if (null? g$lst$5682$1XjQw)
          '#f
          (if (eq? g$obj$5681$1XjQw (car g$lst$5682$1XjQw))
            g$lst$5682$1XjQw
            (g$memq$5612$1XjQw g$obj$5681$1XjQw (cdr g$lst$5682$1XjQw)))))))
   (g$memv$5613$1XjQw
     g$memv$5750$1XjQw
     (case-lambda
       ((g$obj$5683$1XjQw g$lst$5684$1XjQw)
        (if (null? g$lst$5684$1XjQw)
          '#f
          (if (eqv? g$obj$5683$1XjQw (car g$lst$5684$1XjQw))
            g$lst$5684$1XjQw
            (g$memv$5613$1XjQw g$obj$5683$1XjQw (cdr g$lst$5684$1XjQw)))))))
   (g$member$5614$1XjQw
     g$member$5751$1XjQw
     (case-lambda
       ((g$obj$5685$1XjQw g$lst$5686$1XjQw)
        (if (null? g$lst$5686$1XjQw)
          '#f
          (if (equal? g$obj$5685$1XjQw (car g$lst$5686$1XjQw))
            g$lst$5686$1XjQw
            (g$member$5614$1XjQw g$obj$5685$1XjQw (cdr g$lst$5686$1XjQw)))))))
   (g$memp$5615$1XjQw
     g$memp$5752$1XjQw
     (case-lambda
       ((g$p?$5687$1XjQw g$lst$5688$1XjQw)
        (if (null? g$lst$5688$1XjQw)
          '#f
          (if (g$p?$5687$1XjQw (car g$lst$5688$1XjQw))
            g$lst$5688$1XjQw
            (g$memp$5615$1XjQw g$p?$5687$1XjQw (cdr g$lst$5688$1XjQw)))))))
   (g$all-empty?$5616$1XjQw
     g$all-empty?$5753$1XjQw
     (case-lambda
       ((g$ls$5689$1XjQw)
        ((case-lambda
           ((g$t$5690$1XjQw)
            (if g$t$5690$1XjQw
              g$t$5690$1XjQw
              (begin
                '#f
                (if (null? (car g$ls$5689$1XjQw))
                  (begin '#f (g$all-empty?$5616$1XjQw (cdr g$ls$5689$1XjQw)))
                  '#f)))))
         (null? g$ls$5689$1XjQw)))))
   (g$split$5617$1XjQw
     g$split$5754$1XjQw
     (case-lambda
       ((g$ls$5691$1XjQw)
        (if (null? g$ls$5691$1XjQw)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5617$1XjQw (cdr g$ls$5691$1XjQw))))
            (case-lambda
              ((g$cars$5692$1XjQw g$cdrs$5693$1XjQw)
               ((case-lambda
                  ((g$a$5694$1XjQw)
                   (values
                     (cons (car g$a$5694$1XjQw) g$cars$5692$1XjQw)
                     (cons (cdr g$a$5694$1XjQw) g$cdrs$5693$1XjQw))))
                (car g$ls$5691$1XjQw)))))))))
   (g$for-all$5618$1XjQw
     g$for-all$5755$1XjQw
     (case-lambda
       ((g$f$5695$1XjQw . g$args$5696$1XjQw)
        (if (g$all-empty?$5616$1XjQw g$args$5696$1XjQw)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5617$1XjQw g$args$5696$1XjQw)))
            (case-lambda
              ((g$cars$5697$1XjQw g$cdrs$5698$1XjQw)
               (if (g$all-empty?$5616$1XjQw g$cdrs$5698$1XjQw)
                 (apply g$f$5695$1XjQw g$cars$5697$1XjQw)
                 (if (apply g$f$5695$1XjQw g$cars$5697$1XjQw)
                   (begin
                     '#f
                     (apply
                       g$for-all$5618$1XjQw
                       g$f$5695$1XjQw
                       g$cdrs$5698$1XjQw))
                   '#f)))))))))
   (g$exists$5619$1XjQw
     g$exists$5756$1XjQw
     (case-lambda
       ((g$f$5699$1XjQw . g$args$5700$1XjQw)
        (if (g$all-empty?$5616$1XjQw g$args$5700$1XjQw)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5617$1XjQw g$args$5700$1XjQw)))
            (case-lambda
              ((g$cars$5701$1XjQw g$cdrs$5702$1XjQw)
               ((case-lambda
                  ((g$t$5703$1XjQw)
                   (if g$t$5703$1XjQw
                     g$t$5703$1XjQw
                     (begin
                       '#f
                       (apply
                         g$exists$5619$1XjQw
                         g$f$5699$1XjQw
                         g$cdrs$5702$1XjQw)))))
                (apply g$f$5699$1XjQw g$cars$5701$1XjQw)))))))))
   (g$map$5620$1XjQw
     g$map$5757$1XjQw
     (case-lambda
       ((g$proc$5704$1XjQw . g$lists$5705$1XjQw)
        ((letrec ((g$f$5706$1XjQw
                    (case-lambda
                      ((g$lists$5707$1XjQw g$a$5708$1XjQw)
                       (if (g$all-empty?$5616$1XjQw g$lists$5707$1XjQw)
                         (reverse! g$a$5708$1XjQw)
                         (call-with-values
                           (case-lambda
                             (() (g$split$5617$1XjQw g$lists$5707$1XjQw)))
                           (case-lambda
                             ((g$cars$5709$1XjQw g$cdrs$5710$1XjQw)
                              (g$f$5706$1XjQw
                                g$cdrs$5710$1XjQw
                                (cons
                                  (apply g$proc$5704$1XjQw g$cars$5709$1XjQw)
                                  g$a$5708$1XjQw))))))))))
           g$f$5706$1XjQw)
         g$lists$5705$1XjQw
         '()))))
   (g$for-each$5621$1XjQw
     g$for-each$5758$1XjQw
     (case-lambda
       ((g$f$5711$1XjQw . g$args$5712$1XjQw)
        (if (not (g$all-empty?$5616$1XjQw g$args$5712$1XjQw))
          (call-with-values
            (case-lambda (() (g$split$5617$1XjQw g$args$5712$1XjQw)))
            (case-lambda
              ((g$cars$5713$1XjQw g$cdrs$5714$1XjQw)
               (begin
                 (apply g$f$5711$1XjQw g$cars$5713$1XjQw)
                 (apply
                   g$for-each$5621$1XjQw
                   g$f$5711$1XjQw
                   g$cdrs$5714$1XjQw)))))
          (void)))))
   (g$cons*$5622$1XjQw
     g$cons*$5759$1XjQw
     (case-lambda
       ((g$a$5715$1XjQw . g$rest$5716$1XjQw)
        ((letrec ((g$f$5717$1XjQw
                    (case-lambda
                      ((g$a$5718$1XjQw g$rest$5719$1XjQw)
                       (if (null? g$rest$5719$1XjQw)
                         g$a$5718$1XjQw
                         (cons
                           g$a$5718$1XjQw
                           (g$f$5717$1XjQw
                             (car g$rest$5719$1XjQw)
                             (cdr g$rest$5719$1XjQw))))))))
           g$f$5717$1XjQw)
         g$a$5715$1XjQw
         g$rest$5716$1XjQw))))
   (g$fold-left$5623$1XjQw
     g$fold-left$5760$1XjQw
     (case-lambda
       ((g$combine$5720$1XjQw
          g$nil$5721$1XjQw
          g$list1$5722$1XjQw
          .
          g$lists$5723$1XjQw)
        (if (null? g$list1$5722$1XjQw)
          g$nil$5721$1XjQw
          (apply
            g$fold-left$5623$1XjQw
            (g$cons*$5622$1XjQw
              g$combine$5720$1XjQw
              (apply
                g$combine$5720$1XjQw
                (g$cons*$5622$1XjQw
                  g$nil$5721$1XjQw
                  (car g$list1$5722$1XjQw)
                  (g$map$5620$1XjQw car g$lists$5723$1XjQw)))
              (cdr g$list1$5722$1XjQw)
              (g$map$5620$1XjQw cdr g$lists$5723$1XjQw)))))))
   (g$fold-right$5624$1XjQw
     g$fold-right$5761$1XjQw
     (case-lambda
       ((g$combine$5724$1XjQw
          g$nil$5725$1XjQw
          g$list1$5726$1XjQw
          .
          g$lists$5727$1XjQw)
        (if (null? g$list1$5726$1XjQw)
          g$nil$5725$1XjQw
          (apply
            g$combine$5724$1XjQw
            (append
              (list (car g$list1$5726$1XjQw))
              (g$map$5620$1XjQw car g$lists$5727$1XjQw)
              (list
                (apply
                  g$fold-right$5624$1XjQw
                  (g$cons*$5622$1XjQw
                    g$combine$5724$1XjQw
                    g$nil$5725$1XjQw
                    (cdr g$list1$5726$1XjQw)
                    (g$map$5620$1XjQw cdr g$lists$5727$1XjQw))))))))))
   (g$remove$5625$1XjQw
     g$remove$5762$1XjQw
     (case-lambda
       ((g$obj$5728$1XjQw g$list$5729$1XjQw)
        (g$remp$5606$1XjQw
          (case-lambda
            ((g$x$5730$1XjQw) (equal? g$obj$5728$1XjQw g$x$5730$1XjQw)))
          g$list$5729$1XjQw))))
   (g$remv$5626$1XjQw
     g$remv$5763$1XjQw
     (case-lambda
       ((g$obj$5731$1XjQw g$list$5732$1XjQw)
        (g$remp$5606$1XjQw
          (case-lambda
            ((g$x$5733$1XjQw) (eqv? g$obj$5731$1XjQw g$x$5733$1XjQw)))
          g$list$5732$1XjQw))))
   (g$remq$5627$1XjQw
     g$remq$5764$1XjQw
     (case-lambda
       ((g$obj$5734$1XjQw g$list$5735$1XjQw)
        (g$remp$5606$1XjQw
          (case-lambda ((g$x$5736$1XjQw) (eq? g$obj$5734$1XjQw g$x$5736$1XjQw)))
          g$list$5735$1XjQw)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$caar$5765$1XjQw
     g$caar$5920$1XjQw
     (case-lambda ((g$x$5820$1XjQw) (car (car g$x$5820$1XjQw)))))
   (g$cadr$5766$1XjQw
     g$cadr$5921$1XjQw
     (case-lambda ((g$x$5821$1XjQw) (car (cdr g$x$5821$1XjQw)))))
   (g$cdar$5767$1XjQw
     g$cdar$5922$1XjQw
     (case-lambda ((g$x$5822$1XjQw) (cdr (car g$x$5822$1XjQw)))))
   (g$cddr$5768$1XjQw
     g$cddr$5923$1XjQw
     (case-lambda ((g$x$5823$1XjQw) (cdr (cdr g$x$5823$1XjQw)))))
   (g$caaar$5769$1XjQw
     g$caaar$5924$1XjQw
     (case-lambda
       ((g$x$5824$1XjQw) (g$caar$5765$1XjQw (car g$x$5824$1XjQw)))))
   (g$caadr$5770$1XjQw
     g$caadr$5925$1XjQw
     (case-lambda
       ((g$x$5825$1XjQw) (g$caar$5765$1XjQw (cdr g$x$5825$1XjQw)))))
   (g$cadar$5771$1XjQw
     g$cadar$5926$1XjQw
     (case-lambda
       ((g$x$5826$1XjQw) (g$cadr$5766$1XjQw (car g$x$5826$1XjQw)))))
   (g$caddr$5772$1XjQw
     g$caddr$5927$1XjQw
     (case-lambda
       ((g$x$5827$1XjQw) (g$cadr$5766$1XjQw (cdr g$x$5827$1XjQw)))))
   (g$cdaar$5773$1XjQw
     g$cdaar$5928$1XjQw
     (case-lambda
       ((g$x$5828$1XjQw) (g$cdar$5767$1XjQw (car g$x$5828$1XjQw)))))
   (g$cdadr$5774$1XjQw
     g$cdadr$5929$1XjQw
     (case-lambda
       ((g$x$5829$1XjQw) (g$cdar$5767$1XjQw (cdr g$x$5829$1XjQw)))))
   (g$cddar$5775$1XjQw
     g$cddar$5930$1XjQw
     (case-lambda
       ((g$x$5830$1XjQw) (g$cddr$5768$1XjQw (car g$x$5830$1XjQw)))))
   (g$cdddr$5776$1XjQw
     g$cdddr$5931$1XjQw
     (case-lambda
       ((g$x$5831$1XjQw) (g$cddr$5768$1XjQw (cdr g$x$5831$1XjQw)))))
   (g$caaaar$5777$1XjQw
     g$caaaar$5932$1XjQw
     (case-lambda
       ((g$x$5832$1XjQw) (g$caaar$5769$1XjQw (car g$x$5832$1XjQw)))))
   (g$caaadr$5778$1XjQw
     g$caaadr$5933$1XjQw
     (case-lambda
       ((g$x$5833$1XjQw) (g$caaar$5769$1XjQw (cdr g$x$5833$1XjQw)))))
   (g$caadar$5779$1XjQw
     g$caadar$5934$1XjQw
     (case-lambda
       ((g$x$5834$1XjQw) (g$caadr$5770$1XjQw (car g$x$5834$1XjQw)))))
   (g$caaddr$5780$1XjQw
     g$caaddr$5935$1XjQw
     (case-lambda
       ((g$x$5835$1XjQw) (g$caadr$5770$1XjQw (cdr g$x$5835$1XjQw)))))
   (g$cadaar$5781$1XjQw
     g$cadaar$5936$1XjQw
     (case-lambda
       ((g$x$5836$1XjQw) (g$cadar$5771$1XjQw (car g$x$5836$1XjQw)))))
   (g$cadadr$5782$1XjQw
     g$cadadr$5937$1XjQw
     (case-lambda
       ((g$x$5837$1XjQw) (g$cadar$5771$1XjQw (cdr g$x$5837$1XjQw)))))
   (g$caddar$5783$1XjQw
     g$caddar$5938$1XjQw
     (case-lambda
       ((g$x$5838$1XjQw) (g$caddr$5772$1XjQw (car g$x$5838$1XjQw)))))
   (g$cadddr$5784$1XjQw
     g$cadddr$5939$1XjQw
     (case-lambda
       ((g$x$5839$1XjQw) (g$caddr$5772$1XjQw (cdr g$x$5839$1XjQw)))))
   (g$cdaaar$5785$1XjQw
     g$cdaaar$5940$1XjQw
     (case-lambda
       ((g$x$5840$1XjQw) (g$cdaar$5773$1XjQw (car g$x$5840$1XjQw)))))
   (g$cdaadr$5786$1XjQw
     g$cdaadr$5941$1XjQw
     (case-lambda
       ((g$x$5841$1XjQw) (g$cdaar$5773$1XjQw (cdr g$x$5841$1XjQw)))))
   (g$cdadar$5787$1XjQw
     g$cdadar$5942$1XjQw
     (case-lambda
       ((g$x$5842$1XjQw) (g$cdadr$5774$1XjQw (car g$x$5842$1XjQw)))))
   (g$cdaddr$5788$1XjQw
     g$cdaddr$5943$1XjQw
     (case-lambda
       ((g$x$5843$1XjQw) (g$cdadr$5774$1XjQw (cdr g$x$5843$1XjQw)))))
   (g$cddaar$5789$1XjQw
     g$cddaar$5944$1XjQw
     (case-lambda
       ((g$x$5844$1XjQw) (g$cddar$5775$1XjQw (car g$x$5844$1XjQw)))))
   (g$cddadr$5790$1XjQw
     g$cddadr$5945$1XjQw
     (case-lambda
       ((g$x$5845$1XjQw) (g$cddar$5775$1XjQw (cdr g$x$5845$1XjQw)))))
   (g$cdddar$5791$1XjQw
     g$cdddar$5946$1XjQw
     (case-lambda
       ((g$x$5846$1XjQw) (g$cdddr$5776$1XjQw (car g$x$5846$1XjQw)))))
   (g$cddddr$5792$1XjQw
     g$cddddr$5947$1XjQw
     (case-lambda
       ((g$x$5847$1XjQw) (g$cdddr$5776$1XjQw (cdr g$x$5847$1XjQw)))))
   (g$string=?$5799$1XjQw
     g$string=?$5948$1XjQw
     (case-lambda
       ((g$a$5848$1XjQw g$b$5849$1XjQw . g$rest$5850$1XjQw)
        (begin
          (if (not (string? g$a$5848$1XjQw))
            (assertion-violation 'string=? '"not a string" g$a$5848$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$5851$1XjQw)
               (begin
                 (if (not (string? g$x$5851$1XjQw))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$5851$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$5852$1XjQw)
                     (begin
                       (set! g$a$5848$1XjQw g$x$5851$1XjQw)
                       g$r$5852$1XjQw)))
                  (= (string-compare g$a$5848$1XjQw g$x$5851$1XjQw) '0)))))
            (cons g$b$5849$1XjQw g$rest$5850$1XjQw))))))
   (g$string<?$5800$1XjQw
     g$string<?$5949$1XjQw
     (case-lambda
       ((g$a$5853$1XjQw g$b$5854$1XjQw . g$rest$5855$1XjQw)
        (begin
          (if (not (string? g$a$5853$1XjQw))
            (assertion-violation 'string<? '"not a string" g$a$5853$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$5856$1XjQw)
               (begin
                 (if (not (string? g$x$5856$1XjQw))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$5856$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$5857$1XjQw)
                     (begin
                       (set! g$a$5853$1XjQw g$x$5856$1XjQw)
                       g$r$5857$1XjQw)))
                  (< (string-compare g$a$5853$1XjQw g$x$5856$1XjQw) '0)))))
            (cons g$b$5854$1XjQw g$rest$5855$1XjQw))))))
   (g$string>?$5801$1XjQw
     g$string>?$5950$1XjQw
     (case-lambda
       ((g$a$5858$1XjQw g$b$5859$1XjQw . g$rest$5860$1XjQw)
        (begin
          (if (not (string? g$a$5858$1XjQw))
            (assertion-violation 'string>? '"not a string" g$a$5858$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$5861$1XjQw)
               (begin
                 (if (not (string? g$x$5861$1XjQw))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$5861$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$5862$1XjQw)
                     (begin
                       (set! g$a$5858$1XjQw g$x$5861$1XjQw)
                       g$r$5862$1XjQw)))
                  (> (string-compare g$a$5858$1XjQw g$x$5861$1XjQw) '0)))))
            (cons g$b$5859$1XjQw g$rest$5860$1XjQw))))))
   (g$string<=?$5802$1XjQw
     g$string<=?$5951$1XjQw
     (case-lambda
       ((g$a$5863$1XjQw g$b$5864$1XjQw . g$rest$5865$1XjQw)
        (begin
          (if (not (string? g$a$5863$1XjQw))
            (assertion-violation 'string<=? '"not a string" g$a$5863$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$5866$1XjQw)
               (begin
                 (if (not (string? g$x$5866$1XjQw))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$5866$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$5867$1XjQw)
                     (begin
                       (set! g$a$5863$1XjQw g$x$5866$1XjQw)
                       g$r$5867$1XjQw)))
                  (<= (string-compare g$a$5863$1XjQw g$x$5866$1XjQw) '0)))))
            (cons g$b$5864$1XjQw g$rest$5865$1XjQw))))))
   (g$string>=?$5803$1XjQw
     g$string>=?$5952$1XjQw
     (case-lambda
       ((g$a$5868$1XjQw g$b$5869$1XjQw . g$rest$5870$1XjQw)
        (begin
          (if (not (string? g$a$5868$1XjQw))
            (assertion-violation 'string>=? '"not a string" g$a$5868$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$5871$1XjQw)
               (begin
                 (if (not (string? g$x$5871$1XjQw))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$5871$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$5872$1XjQw)
                     (begin
                       (set! g$a$5868$1XjQw g$x$5871$1XjQw)
                       g$r$5872$1XjQw)))
                  (>= (string-compare g$a$5868$1XjQw g$x$5871$1XjQw) '0)))))
            (cons g$b$5869$1XjQw g$rest$5870$1XjQw))))))
   (g$symbol=?$5804$1XjQw
     g$symbol=?$5953$1XjQw
     (case-lambda
       ((g$a$5873$1XjQw g$b$5874$1XjQw . g$rest$5875$1XjQw)
        (begin
          (if (not (symbol? g$a$5873$1XjQw))
            (assertion-violation 'symbol=? '"not a symbol" g$a$5873$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$5876$1XjQw)
               (begin
                 (if (not (symbol? g$x$5876$1XjQw))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$5876$1XjQw)
                   (void))
                 (eq? g$a$5873$1XjQw g$x$5876$1XjQw))))
            (cons g$b$5874$1XjQw g$rest$5875$1XjQw))))))
   (g$boolean=?$5805$1XjQw
     g$boolean=?$5954$1XjQw
     (case-lambda
       ((g$a$5877$1XjQw g$b$5878$1XjQw . g$rest$5879$1XjQw)
        (begin
          (if (not (boolean? g$a$5877$1XjQw))
            (assertion-violation 'boolean=? '"not a boolean" g$a$5877$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$5880$1XjQw)
               (begin
                 (if (not (boolean? g$x$5880$1XjQw))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$5880$1XjQw)
                   (void))
                 (eq? g$a$5877$1XjQw g$x$5880$1XjQw))))
            (cons g$b$5878$1XjQw g$rest$5879$1XjQw))))))
   (g$char=?$5812$1XjQw
     g$char=?$5955$1XjQw
     (case-lambda
       ((g$a$5881$1XjQw g$b$5882$1XjQw . g$rest$5883$1XjQw)
        (begin
          (if (not (char? g$a$5881$1XjQw))
            (assertion-violation 'char=? '"not a char" g$a$5881$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$5884$1XjQw)
               (begin
                 (if (not (char? g$x$5884$1XjQw))
                   (assertion-violation 'char=? '"not a char" g$x$5884$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$5885$1XjQw)
                     (begin
                       (set! g$a$5881$1XjQw g$x$5884$1XjQw)
                       g$r$5885$1XjQw)))
                  (= (char->integer g$a$5881$1XjQw)
                     (char->integer g$x$5884$1XjQw))))))
            (cons g$b$5882$1XjQw g$rest$5883$1XjQw))))))
   (g$char<?$5813$1XjQw
     g$char<?$5956$1XjQw
     (case-lambda
       ((g$a$5886$1XjQw g$b$5887$1XjQw . g$rest$5888$1XjQw)
        (begin
          (if (not (char? g$a$5886$1XjQw))
            (assertion-violation 'char<? '"not a char" g$a$5886$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$5889$1XjQw)
               (begin
                 (if (not (char? g$x$5889$1XjQw))
                   (assertion-violation 'char<? '"not a char" g$x$5889$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$5890$1XjQw)
                     (begin
                       (set! g$a$5886$1XjQw g$x$5889$1XjQw)
                       g$r$5890$1XjQw)))
                  (< (char->integer g$a$5886$1XjQw)
                     (char->integer g$x$5889$1XjQw))))))
            (cons g$b$5887$1XjQw g$rest$5888$1XjQw))))))
   (g$char>?$5814$1XjQw
     g$char>?$5957$1XjQw
     (case-lambda
       ((g$a$5891$1XjQw g$b$5892$1XjQw . g$rest$5893$1XjQw)
        (begin
          (if (not (char? g$a$5891$1XjQw))
            (assertion-violation 'char>? '"not a char" g$a$5891$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$5894$1XjQw)
               (begin
                 (if (not (char? g$x$5894$1XjQw))
                   (assertion-violation 'char>? '"not a char" g$x$5894$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$5895$1XjQw)
                     (begin
                       (set! g$a$5891$1XjQw g$x$5894$1XjQw)
                       g$r$5895$1XjQw)))
                  (> (char->integer g$a$5891$1XjQw)
                     (char->integer g$x$5894$1XjQw))))))
            (cons g$b$5892$1XjQw g$rest$5893$1XjQw))))))
   (g$char<=?$5815$1XjQw
     g$char<=?$5958$1XjQw
     (case-lambda
       ((g$a$5896$1XjQw g$b$5897$1XjQw . g$rest$5898$1XjQw)
        (begin
          (if (not (char? g$a$5896$1XjQw))
            (assertion-violation 'char<=? '"not a char" g$a$5896$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$5899$1XjQw)
               (begin
                 (if (not (char? g$x$5899$1XjQw))
                   (assertion-violation 'char<=? '"not a char" g$x$5899$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$5900$1XjQw)
                     (begin
                       (set! g$a$5896$1XjQw g$x$5899$1XjQw)
                       g$r$5900$1XjQw)))
                  (<= (char->integer g$a$5896$1XjQw)
                      (char->integer g$x$5899$1XjQw))))))
            (cons g$b$5897$1XjQw g$rest$5898$1XjQw))))))
   (g$char>=?$5816$1XjQw
     g$char>=?$5959$1XjQw
     (case-lambda
       ((g$a$5901$1XjQw g$b$5902$1XjQw . g$rest$5903$1XjQw)
        (begin
          (if (not (char? g$a$5901$1XjQw))
            (assertion-violation 'char>=? '"not a char" g$a$5901$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$5904$1XjQw)
               (begin
                 (if (not (char? g$x$5904$1XjQw))
                   (assertion-violation 'char>=? '"not a char" g$x$5904$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$5905$1XjQw)
                     (begin
                       (set! g$a$5901$1XjQw g$x$5904$1XjQw)
                       g$r$5905$1XjQw)))
                  (>= (char->integer g$a$5901$1XjQw)
                      (char->integer g$x$5904$1XjQw))))))
            (cons g$b$5902$1XjQw g$rest$5903$1XjQw))))))
   (g$rationalize$5817$1XjQw
     g$rationalize$5960$1XjQw
     (case-lambda
       ((g$x$5906$1XjQw g$e$5907$1XjQw)
        (if (if (infinite? g$x$5906$1XjQw)
              (begin '#f (infinite? g$e$5907$1XjQw))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$5908$1XjQw)
              (if (if (exact? g$x$5906$1XjQw)
                    (begin '#f (exact? g$e$5907$1XjQw))
                    '#f)
                g$r$5908$1XjQw
                (inexact g$r$5908$1XjQw))))
           (apply
             /
             (g$find-ratio$5818$1XjQw g$x$5906$1XjQw g$e$5907$1XjQw)))))))
   (g$find-ratio$5818$1XjQw
     g$find-ratio$5961$1XjQw
     (case-lambda
       ((g$x$5909$1XjQw g$e$5910$1XjQw)
        (g$find-ratio-between$5819$1XjQw
          (- g$x$5909$1XjQw g$e$5910$1XjQw)
          (+ g$x$5909$1XjQw g$e$5910$1XjQw)))))
   (g$find-ratio-between$5819$1XjQw
     g$find-ratio-between$5962$1XjQw
     (case-lambda
       ((g$x$5911$1XjQw g$y$5912$1XjQw)
        (letrec* ((g$sr$5913$1XjQw
                    (case-lambda
                      ((g$x$5915$1XjQw g$y$5916$1XjQw)
                       ((case-lambda
                          ((g$fx$5917$1XjQw g$fy$5918$1XjQw)
                           (if (>= g$fx$5917$1XjQw g$x$5915$1XjQw)
                             (list g$fx$5917$1XjQw '1)
                             (if (= g$fx$5917$1XjQw g$fy$5918$1XjQw)
                               ((case-lambda
                                  ((g$rat$5919$1XjQw)
                                   (list
                                     (+ (g$cadr$5766$1XjQw g$rat$5919$1XjQw)
                                        (* g$fx$5917$1XjQw
                                           (car g$rat$5919$1XjQw)))
                                     (car g$rat$5919$1XjQw))))
                                (g$sr$5913$1XjQw
                                  (/ (- g$y$5916$1XjQw g$fy$5918$1XjQw))
                                  (/ (- g$x$5915$1XjQw g$fx$5917$1XjQw))))
                               (list (+ '1 g$fx$5917$1XjQw) '1)))))
                        (exact (floor g$x$5915$1XjQw))
                        (exact (floor g$y$5916$1XjQw)))))))
          (if (< g$y$5912$1XjQw g$x$5911$1XjQw)
            (g$find-ratio-between$5819$1XjQw g$y$5912$1XjQw g$x$5911$1XjQw)
            (if (>= g$x$5911$1XjQw g$y$5912$1XjQw)
              (list g$x$5911$1XjQw '1)
              (if (positive? g$x$5911$1XjQw)
                (g$sr$5913$1XjQw g$x$5911$1XjQw g$y$5912$1XjQw)
                (if (negative? g$y$5912$1XjQw)
                  ((case-lambda
                     ((g$rat$5914$1XjQw)
                      (list
                        (- (car g$rat$5914$1XjQw))
                        (g$cadr$5766$1XjQw g$rat$5914$1XjQw))))
                   (g$sr$5913$1XjQw (- g$y$5912$1XjQw) (- g$x$5911$1XjQw)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$6158$1XjQw g$using$6193$1XjQw (clr-using-internal 'system))
   (g$using$6160$1XjQw
     g$using$6194$1XjQw
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$6161$1XjQw
     g$make-eq-hashtable$6195$1XjQw
     (case-lambda
       (() (g$make-eq-hashtable$6161$1XjQw '32))
       ((g$k$6172$1XjQw)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$6172$1XjQw)))))
   (g$make-eqv-hashtable$6162$1XjQw
     g$make-eqv-hashtable$6196$1XjQw
     (case-lambda
       (() (g$make-eqv-hashtable$6162$1XjQw '32))
       ((g$k$6173$1XjQw) (make-hashtable eqv-hash eqv? g$k$6173$1XjQw))))
   (g$hashtable-size$6163$1XjQw
     g$hashtable-size$6197$1XjQw
     (case-lambda
       ((g$ht$6174$1XjQw)
        (clr-call-internal 'hashtable 'get_count g$ht$6174$1XjQw))))
   (g$hashtable-ref$6164$1XjQw
     g$hashtable-ref$6198$1XjQw
     (case-lambda
       ((g$ht$6175$1XjQw g$key$6176$1XjQw g$default$6177$1XjQw)
        (letrec* ((g$r$6178$1XjQw
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$6175$1XjQw
                      g$key$6176$1XjQw)))
          (if (not (null? g$r$6178$1XjQw))
            g$r$6178$1XjQw
            g$default$6177$1XjQw)))))
   (g$hashtable-set!$6165$1XjQw
     g$hashtable-set!$6199$1XjQw
     (case-lambda
       ((g$ht$6179$1XjQw g$key$6180$1XjQw g$obj$6181$1XjQw)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$6179$1XjQw
          g$key$6180$1XjQw
          g$obj$6181$1XjQw))))
   (g$hashtable-delete!$6166$1XjQw
     g$hashtable-delete!$6200$1XjQw
     (case-lambda
       ((g$ht$6182$1XjQw g$key$6183$1XjQw)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$6182$1XjQw
          g$key$6183$1XjQw))))
   (g$hashtable-contains?$6167$1XjQw
     g$hashtable-contains?$6201$1XjQw
     (case-lambda
       ((g$ht$6184$1XjQw g$key$6185$1XjQw)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$6184$1XjQw
          g$key$6185$1XjQw))))
   (g$hashtable-update!$6168$1XjQw
     g$hashtable-update!$6202$1XjQw
     (case-lambda
       ((g$ht$6186$1XjQw
          g$key$6187$1XjQw
          g$proc$6188$1XjQw
          g$default$6189$1XjQw)
        (g$hashtable-set!$6165$1XjQw
          g$ht$6186$1XjQw
          g$key$6187$1XjQw
          (g$proc$6188$1XjQw
            (g$hashtable-ref$6164$1XjQw
              g$ht$6186$1XjQw
              g$key$6187$1XjQw
              g$default$6189$1XjQw))))))
   (g$hashtable-clear!$6169$1XjQw
     g$hashtable-clear!$6203$1XjQw
     (case-lambda
       ((g$ht$6190$1XjQw) (g$hashtable-clear!$6169$1XjQw g$ht$6190$1XjQw '32))
       ((g$ht$6191$1XjQw g$k$6192$1XjQw)
        (clr-call-internal 'hashtable 'clear g$ht$6191$1XjQw))))
   (g$clear-usings$6171$1XjQw
     g$clear-usings$6204$1XjQw
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$6206$1XjQw g$using$6213$1XjQw (clr-using-internal 'system.io))
   (g$file-exists?$6207$1XjQw
     g$file-exists?$6214$1XjQw
     (case-lambda
       ((g$fn$6210$1XjQw)
        (clr-call-internal 'file 'exists '() g$fn$6210$1XjQw))))
   (g$delete-file$6208$1XjQw
     g$delete-file$6215$1XjQw
     (case-lambda
       ((g$fn$6211$1XjQw)
        (clr-call-internal 'file 'delete '() g$fn$6211$1XjQw))))
   (g$get-directory-name$6209$1XjQw
     g$get-directory-name$6216$1XjQw
     (case-lambda
       ((g$path$6212$1XjQw)
        (clr-call-internal 'path 'getdirectoryname '() g$path$6212$1XjQw)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$6217$1XjQw
     g$native-endianness$6328$1XjQw
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$6218$1XjQw
     g$bytevector-u16-ref$6329$1XjQw
     (case-lambda
       ((g$bytevector$6246$1XjQw g$k$6247$1XjQw g$endianness$6248$1XjQw)
        (bytevector-uint-ref
          g$bytevector$6246$1XjQw
          g$k$6247$1XjQw
          g$endianness$6248$1XjQw
          '2))))
   (g$bytevector-s16-ref$6219$1XjQw
     g$bytevector-s16-ref$6330$1XjQw
     (case-lambda
       ((g$bytevector$6249$1XjQw g$k$6250$1XjQw g$endianness$6251$1XjQw)
        (bytevector-sint-ref
          g$bytevector$6249$1XjQw
          g$k$6250$1XjQw
          g$endianness$6251$1XjQw
          '2))))
   (g$bytevector-u16-native-ref$6220$1XjQw
     g$bytevector-u16-native-ref$6331$1XjQw
     (case-lambda
       ((g$bytevector$6252$1XjQw g$k$6253$1XjQw)
        (bytevector-uint-ref
          g$bytevector$6252$1XjQw
          g$k$6253$1XjQw
          (g$native-endianness$6217$1XjQw)
          '2))))
   (g$bytevector-s16-native-ref$6221$1XjQw
     g$bytevector-s16-native-ref$6332$1XjQw
     (case-lambda
       ((g$bytevector$6254$1XjQw g$k$6255$1XjQw)
        (bytevector-sint-ref
          g$bytevector$6254$1XjQw
          g$k$6255$1XjQw
          (g$native-endianness$6217$1XjQw)
          '2))))
   (g$bytevector-u16-set!$6222$1XjQw
     g$bytevector-u16-set!$6333$1XjQw
     (case-lambda
       ((g$bytevector$6256$1XjQw
          g$k$6257$1XjQw
          g$n$6258$1XjQw
          g$endianness$6259$1XjQw)
        (bytevector-uint-set!
          g$bytevector$6256$1XjQw
          g$k$6257$1XjQw
          g$n$6258$1XjQw
          g$endianness$6259$1XjQw
          '2))))
   (g$bytevector-s16-set!$6223$1XjQw
     g$bytevector-s16-set!$6334$1XjQw
     (case-lambda
       ((g$bytevector$6260$1XjQw
          g$k$6261$1XjQw
          g$n$6262$1XjQw
          g$endianness$6263$1XjQw)
        (bytevector-sint-set!
          g$bytevector$6260$1XjQw
          g$k$6261$1XjQw
          g$n$6262$1XjQw
          g$endianness$6263$1XjQw
          '2))))
   (g$bytevector-u16-native-set!$6224$1XjQw
     g$bytevector-u16-native-set!$6335$1XjQw
     (case-lambda
       ((g$bytevector$6264$1XjQw g$k$6265$1XjQw g$n$6266$1XjQw)
        (bytevector-uint-set!
          g$bytevector$6264$1XjQw
          g$k$6265$1XjQw
          g$n$6266$1XjQw
          (g$native-endianness$6217$1XjQw)
          '2))))
   (g$bytevector-s16-native-set!$6225$1XjQw
     g$bytevector-s16-native-set!$6336$1XjQw
     (case-lambda
       ((g$bytevector$6267$1XjQw g$k$6268$1XjQw g$n$6269$1XjQw)
        (bytevector-sint-set!
          g$bytevector$6267$1XjQw
          g$k$6268$1XjQw
          g$n$6269$1XjQw
          (g$native-endianness$6217$1XjQw)
          '2))))
   (g$bytevector-u32-ref$6226$1XjQw
     g$bytevector-u32-ref$6337$1XjQw
     (case-lambda
       ((g$bytevector$6270$1XjQw g$k$6271$1XjQw g$endianness$6272$1XjQw)
        (bytevector-uint-ref
          g$bytevector$6270$1XjQw
          g$k$6271$1XjQw
          g$endianness$6272$1XjQw
          '4))))
   (g$bytevector-s32-ref$6227$1XjQw
     g$bytevector-s32-ref$6338$1XjQw
     (case-lambda
       ((g$bytevector$6273$1XjQw g$k$6274$1XjQw g$endianness$6275$1XjQw)
        (bytevector-sint-ref
          g$bytevector$6273$1XjQw
          g$k$6274$1XjQw
          g$endianness$6275$1XjQw
          '4))))
   (g$bytevector-u32-native-ref$6228$1XjQw
     g$bytevector-u32-native-ref$6339$1XjQw
     (case-lambda
       ((g$bytevector$6276$1XjQw g$k$6277$1XjQw)
        (bytevector-uint-ref
          g$bytevector$6276$1XjQw
          g$k$6277$1XjQw
          (g$native-endianness$6217$1XjQw)
          '4))))
   (g$bytevector-s32-native-ref$6229$1XjQw
     g$bytevector-s32-native-ref$6340$1XjQw
     (case-lambda
       ((g$bytevector$6278$1XjQw g$k$6279$1XjQw)
        (bytevector-sint-ref
          g$bytevector$6278$1XjQw
          g$k$6279$1XjQw
          (g$native-endianness$6217$1XjQw)
          '4))))
   (g$bytevector-u32-set!$6230$1XjQw
     g$bytevector-u32-set!$6341$1XjQw
     (case-lambda
       ((g$bytevector$6280$1XjQw
          g$k$6281$1XjQw
          g$n$6282$1XjQw
          g$endianness$6283$1XjQw)
        (bytevector-uint-set!
          g$bytevector$6280$1XjQw
          g$k$6281$1XjQw
          g$n$6282$1XjQw
          g$endianness$6283$1XjQw
          '4))))
   (g$bytevector-s32-set!$6231$1XjQw
     g$bytevector-s32-set!$6342$1XjQw
     (case-lambda
       ((g$bytevector$6284$1XjQw
          g$k$6285$1XjQw
          g$n$6286$1XjQw
          g$endianness$6287$1XjQw)
        (bytevector-sint-set!
          g$bytevector$6284$1XjQw
          g$k$6285$1XjQw
          g$n$6286$1XjQw
          g$endianness$6287$1XjQw
          '4))))
   (g$bytevector-u32-native-set!$6232$1XjQw
     g$bytevector-u32-native-set!$6343$1XjQw
     (case-lambda
       ((g$bytevector$6288$1XjQw g$k$6289$1XjQw g$n$6290$1XjQw)
        (bytevector-uint-set!
          g$bytevector$6288$1XjQw
          g$k$6289$1XjQw
          g$n$6290$1XjQw
          (g$native-endianness$6217$1XjQw)
          '4))))
   (g$bytevector-s32-native-set!$6233$1XjQw
     g$bytevector-s32-native-set!$6344$1XjQw
     (case-lambda
       ((g$bytevector$6291$1XjQw g$k$6292$1XjQw g$n$6293$1XjQw)
        (bytevector-sint-set!
          g$bytevector$6291$1XjQw
          g$k$6292$1XjQw
          g$n$6293$1XjQw
          (g$native-endianness$6217$1XjQw)
          '4))))
   (g$bytevector-u64-ref$6234$1XjQw
     g$bytevector-u64-ref$6345$1XjQw
     (case-lambda
       ((g$bytevector$6294$1XjQw g$k$6295$1XjQw g$endianness$6296$1XjQw)
        (bytevector-uint-ref
          g$bytevector$6294$1XjQw
          g$k$6295$1XjQw
          g$endianness$6296$1XjQw
          '8))))
   (g$bytevector-s64-ref$6235$1XjQw
     g$bytevector-s64-ref$6346$1XjQw
     (case-lambda
       ((g$bytevector$6297$1XjQw g$k$6298$1XjQw g$endianness$6299$1XjQw)
        (bytevector-sint-ref
          g$bytevector$6297$1XjQw
          g$k$6298$1XjQw
          g$endianness$6299$1XjQw
          '8))))
   (g$bytevector-u64-native-ref$6236$1XjQw
     g$bytevector-u64-native-ref$6347$1XjQw
     (case-lambda
       ((g$bytevector$6300$1XjQw g$k$6301$1XjQw)
        (bytevector-uint-ref
          g$bytevector$6300$1XjQw
          g$k$6301$1XjQw
          (g$native-endianness$6217$1XjQw)
          '8))))
   (g$bytevector-s64-native-ref$6237$1XjQw
     g$bytevector-s64-native-ref$6348$1XjQw
     (case-lambda
       ((g$bytevector$6302$1XjQw g$k$6303$1XjQw)
        (bytevector-sint-ref
          g$bytevector$6302$1XjQw
          g$k$6303$1XjQw
          (g$native-endianness$6217$1XjQw)
          '8))))
   (g$bytevector-u64-set!$6238$1XjQw
     g$bytevector-u64-set!$6349$1XjQw
     (case-lambda
       ((g$bytevector$6304$1XjQw
          g$k$6305$1XjQw
          g$n$6306$1XjQw
          g$endianness$6307$1XjQw)
        (bytevector-uint-set!
          g$bytevector$6304$1XjQw
          g$k$6305$1XjQw
          g$n$6306$1XjQw
          g$endianness$6307$1XjQw
          '8))))
   (g$bytevector-s64-set!$6239$1XjQw
     g$bytevector-s64-set!$6350$1XjQw
     (case-lambda
       ((g$bytevector$6308$1XjQw
          g$k$6309$1XjQw
          g$n$6310$1XjQw
          g$endianness$6311$1XjQw)
        (bytevector-sint-set!
          g$bytevector$6308$1XjQw
          g$k$6309$1XjQw
          g$n$6310$1XjQw
          g$endianness$6311$1XjQw
          '8))))
   (g$bytevector-u64-native-set!$6240$1XjQw
     g$bytevector-u64-native-set!$6351$1XjQw
     (case-lambda
       ((g$bytevector$6312$1XjQw g$k$6313$1XjQw g$n$6314$1XjQw)
        (bytevector-uint-set!
          g$bytevector$6312$1XjQw
          g$k$6313$1XjQw
          g$n$6314$1XjQw
          (g$native-endianness$6217$1XjQw)
          '8))))
   (g$bytevector-s64-native-set!$6241$1XjQw
     g$bytevector-s64-native-set!$6352$1XjQw
     (case-lambda
       ((g$bytevector$6315$1XjQw g$k$6316$1XjQw g$n$6317$1XjQw)
        (bytevector-sint-set!
          g$bytevector$6315$1XjQw
          g$k$6316$1XjQw
          g$n$6317$1XjQw
          (g$native-endianness$6217$1XjQw)
          '8))))
   (g$bytevector-ieee-single-native-ref$6242$1XjQw
     g$bytevector-ieee-single-native-ref$6353$1XjQw
     (case-lambda
       ((g$bytevector$6318$1XjQw g$k$6319$1XjQw)
        (if (not (zero? (mod g$k$6319$1XjQw '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$6319$1XjQw)
          (bytevector-ieee-single-ref
            g$bytevector$6318$1XjQw
            g$k$6319$1XjQw
            (g$native-endianness$6217$1XjQw))))))
   (g$bytevector-ieee-double-native-ref$6243$1XjQw
     g$bytevector-ieee-double-native-ref$6354$1XjQw
     (case-lambda
       ((g$bytevector$6320$1XjQw g$k$6321$1XjQw)
        (if (not (zero? (mod g$k$6321$1XjQw '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$6321$1XjQw)
          (bytevector-ieee-double-ref
            g$bytevector$6320$1XjQw
            g$k$6321$1XjQw
            (g$native-endianness$6217$1XjQw))))))
   (g$bytevector-ieee-single-native-set!$6244$1XjQw
     g$bytevector-ieee-single-native-set!$6355$1XjQw
     (case-lambda
       ((g$bytevector$6322$1XjQw g$k$6323$1XjQw g$x$6324$1XjQw)
        (if (not (zero? (mod g$k$6323$1XjQw '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$6323$1XjQw)
          (bytevector-ieee-single-set!
            g$bytevector$6322$1XjQw
            g$k$6323$1XjQw
            g$x$6324$1XjQw
            (g$native-endianness$6217$1XjQw))))))
   (g$bytevector-ieee-double-native-set!$6245$1XjQw
     g$bytevector-ieee-double-native-set!$6356$1XjQw
     (case-lambda
       ((g$bytevector$6325$1XjQw g$k$6326$1XjQw g$x$6327$1XjQw)
        (if (not (zero? (mod g$k$6326$1XjQw '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$6326$1XjQw)
          (bytevector-ieee-double-set!
            g$bytevector$6325$1XjQw
            g$k$6326$1XjQw
            g$x$6327$1XjQw
            (g$native-endianness$6217$1XjQw)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$7353$6357$1XjQw
     g$7353$6452$1XjQw
     (make-record-type-descriptor
       '&condition
       '#f
       'g$7356$1XjQw
       '#f
       '#f
       '#()))
   (g$7355$6358$1XjQw g$7355$6453$1XjQw '#f)
   (g$7354$6359$1XjQw
     g$7354$6454$1XjQw
     (make-record-constructor-descriptor
       g$7353$6357$1XjQw
       '#f
       g$7355$6358$1XjQw))
   (g$&condition?$6360$1XjQw
     g$&condition?$6455$1XjQw
     (record-predicate g$7353$6357$1XjQw))
   (g$make-&condition$6361$1XjQw
     g$make-&condition$6456$1XjQw
     (record-constructor g$7354$6359$1XjQw))
   (g$&condition-rtd$6362$1XjQw
     g$&condition-rtd$6457$1XjQw
     g$7353$6357$1XjQw)
   (g$&condition-rcd$6363$1XjQw
     g$&condition-rcd$6458$1XjQw
     g$7354$6359$1XjQw)
   (g$7369$6364$1XjQw
     g$7369$6459$1XjQw
     (make-record-type-descriptor
       '&message
       g$7353$6357$1XjQw
       'g$7372$1XjQw
       '#f
       '#f
       '#((immutable message))))
   (g$7371$6365$1XjQw g$7371$6460$1XjQw '#f)
   (g$7370$6366$1XjQw
     g$7370$6461$1XjQw
     (make-record-constructor-descriptor
       g$7369$6364$1XjQw
       g$7354$6359$1XjQw
       g$7371$6365$1XjQw))
   (g$7368$6367$1XjQw
     g$7368$6462$1XjQw
     (record-predicate g$7369$6364$1XjQw))
   (g$make-message-condition$6368$1XjQw
     g$make-message-condition$6463$1XjQw
     (record-constructor g$7370$6366$1XjQw))
   (g$7367$6369$1XjQw
     g$7367$6464$1XjQw
     (record-accessor g$7369$6364$1XjQw '0))
   (g$message-condition?$6370$1XjQw
     g$message-condition?$6465$1XjQw
     (condition-predicate g$7369$6364$1XjQw))
   (g$condition-message$6371$1XjQw
     g$condition-message$6466$1XjQw
     (condition-accessor g$7369$6364$1XjQw g$7367$6369$1XjQw))
   (g$7385$6372$1XjQw
     g$7385$6467$1XjQw
     (make-record-type-descriptor
       '&warning
       g$7353$6357$1XjQw
       'g$7388$1XjQw
       '#f
       '#f
       '#()))
   (g$7387$6373$1XjQw g$7387$6468$1XjQw '#f)
   (g$7386$6374$1XjQw
     g$7386$6469$1XjQw
     (make-record-constructor-descriptor
       g$7385$6372$1XjQw
       g$7354$6359$1XjQw
       g$7387$6373$1XjQw))
   (g$7384$6375$1XjQw
     g$7384$6470$1XjQw
     (record-predicate g$7385$6372$1XjQw))
   (g$make-warning$6376$1XjQw
     g$make-warning$6471$1XjQw
     (record-constructor g$7386$6374$1XjQw))
   (g$warning?$6377$1XjQw
     g$warning?$6472$1XjQw
     (condition-predicate g$7385$6372$1XjQw))
   (g$7399$6378$1XjQw
     g$7399$6473$1XjQw
     (make-record-type-descriptor
       '&serious
       g$7353$6357$1XjQw
       'g$7402$1XjQw
       '#f
       '#f
       '#()))
   (g$7401$6379$1XjQw g$7401$6474$1XjQw '#f)
   (g$7400$6380$1XjQw
     g$7400$6475$1XjQw
     (make-record-constructor-descriptor
       g$7399$6378$1XjQw
       g$7354$6359$1XjQw
       g$7401$6379$1XjQw))
   (g$7398$6381$1XjQw
     g$7398$6476$1XjQw
     (record-predicate g$7399$6378$1XjQw))
   (g$make-serious-condition$6382$1XjQw
     g$make-serious-condition$6477$1XjQw
     (record-constructor g$7400$6380$1XjQw))
   (g$serious-condition?$6383$1XjQw
     g$serious-condition?$6478$1XjQw
     (condition-predicate g$7399$6378$1XjQw))
   (g$7413$6384$1XjQw
     g$7413$6479$1XjQw
     (make-record-type-descriptor
       '&error
       g$7399$6378$1XjQw
       'g$7416$1XjQw
       '#f
       '#f
       '#()))
   (g$7415$6385$1XjQw g$7415$6480$1XjQw '#f)
   (g$7414$6386$1XjQw
     g$7414$6481$1XjQw
     (make-record-constructor-descriptor
       g$7413$6384$1XjQw
       g$7400$6380$1XjQw
       g$7415$6385$1XjQw))
   (g$7412$6387$1XjQw
     g$7412$6482$1XjQw
     (record-predicate g$7413$6384$1XjQw))
   (g$make-error$6388$1XjQw
     g$make-error$6483$1XjQw
     (record-constructor g$7414$6386$1XjQw))
   (g$error?$6389$1XjQw
     g$error?$6484$1XjQw
     (condition-predicate g$7413$6384$1XjQw))
   (g$7427$6390$1XjQw
     g$7427$6485$1XjQw
     (make-record-type-descriptor
       '&violation
       g$7399$6378$1XjQw
       'g$7430$1XjQw
       '#f
       '#f
       '#()))
   (g$7429$6391$1XjQw g$7429$6486$1XjQw '#f)
   (g$7428$6392$1XjQw
     g$7428$6487$1XjQw
     (make-record-constructor-descriptor
       g$7427$6390$1XjQw
       g$7400$6380$1XjQw
       g$7429$6391$1XjQw))
   (g$7426$6393$1XjQw
     g$7426$6488$1XjQw
     (record-predicate g$7427$6390$1XjQw))
   (g$make-violation$6394$1XjQw
     g$make-violation$6489$1XjQw
     (record-constructor g$7428$6392$1XjQw))
   (g$violation?$6395$1XjQw
     g$violation?$6490$1XjQw
     (condition-predicate g$7427$6390$1XjQw))
   (g$7441$6396$1XjQw
     g$7441$6491$1XjQw
     (make-record-type-descriptor
       '&assertion
       g$7427$6390$1XjQw
       'g$7444$1XjQw
       '#f
       '#f
       '#()))
   (g$7443$6397$1XjQw g$7443$6492$1XjQw '#f)
   (g$7442$6398$1XjQw
     g$7442$6493$1XjQw
     (make-record-constructor-descriptor
       g$7441$6396$1XjQw
       g$7428$6392$1XjQw
       g$7443$6397$1XjQw))
   (g$7440$6399$1XjQw
     g$7440$6494$1XjQw
     (record-predicate g$7441$6396$1XjQw))
   (g$make-assertion-violation$6400$1XjQw
     g$make-assertion-violation$6495$1XjQw
     (record-constructor g$7442$6398$1XjQw))
   (g$assertion-violation?$6401$1XjQw
     g$assertion-violation?$6496$1XjQw
     (condition-predicate g$7441$6396$1XjQw))
   (g$7456$6402$1XjQw
     g$7456$6497$1XjQw
     (make-record-type-descriptor
       '&irritants
       g$7353$6357$1XjQw
       'g$7459$1XjQw
       '#f
       '#f
       '#((immutable irritants))))
   (g$7458$6403$1XjQw g$7458$6498$1XjQw '#f)
   (g$7457$6404$1XjQw
     g$7457$6499$1XjQw
     (make-record-constructor-descriptor
       g$7456$6402$1XjQw
       g$7354$6359$1XjQw
       g$7458$6403$1XjQw))
   (g$7455$6405$1XjQw
     g$7455$6500$1XjQw
     (record-predicate g$7456$6402$1XjQw))
   (g$make-irritants-condition$6406$1XjQw
     g$make-irritants-condition$6501$1XjQw
     (record-constructor g$7457$6404$1XjQw))
   (g$7454$6407$1XjQw
     g$7454$6502$1XjQw
     (record-accessor g$7456$6402$1XjQw '0))
   (g$irritants-condition?$6408$1XjQw
     g$irritants-condition?$6503$1XjQw
     (condition-predicate g$7456$6402$1XjQw))
   (g$condition-irritants$6409$1XjQw
     g$condition-irritants$6504$1XjQw
     (condition-accessor g$7456$6402$1XjQw g$7454$6407$1XjQw))
   (g$7473$6410$1XjQw
     g$7473$6505$1XjQw
     (make-record-type-descriptor
       '&who
       g$7353$6357$1XjQw
       'g$7476$1XjQw
       '#f
       '#f
       '#((immutable who))))
   (g$7475$6411$1XjQw g$7475$6506$1XjQw '#f)
   (g$7474$6412$1XjQw
     g$7474$6507$1XjQw
     (make-record-constructor-descriptor
       g$7473$6410$1XjQw
       g$7354$6359$1XjQw
       g$7475$6411$1XjQw))
   (g$7472$6413$1XjQw
     g$7472$6508$1XjQw
     (record-predicate g$7473$6410$1XjQw))
   (g$make-who-condition$6414$1XjQw
     g$make-who-condition$6509$1XjQw
     (record-constructor g$7474$6412$1XjQw))
   (g$7471$6415$1XjQw
     g$7471$6510$1XjQw
     (record-accessor g$7473$6410$1XjQw '0))
   (g$who-condition?$6416$1XjQw
     g$who-condition?$6511$1XjQw
     (condition-predicate g$7473$6410$1XjQw))
   (g$condition-who$6417$1XjQw
     g$condition-who$6512$1XjQw
     (condition-accessor g$7473$6410$1XjQw g$7471$6415$1XjQw))
   (g$7489$6418$1XjQw
     g$7489$6513$1XjQw
     (make-record-type-descriptor
       '&non-continuable
       g$7427$6390$1XjQw
       'g$7492$1XjQw
       '#f
       '#f
       '#()))
   (g$7491$6419$1XjQw g$7491$6514$1XjQw '#f)
   (g$7490$6420$1XjQw
     g$7490$6515$1XjQw
     (make-record-constructor-descriptor
       g$7489$6418$1XjQw
       g$7428$6392$1XjQw
       g$7491$6419$1XjQw))
   (g$7488$6421$1XjQw
     g$7488$6516$1XjQw
     (record-predicate g$7489$6418$1XjQw))
   (g$make-non-continuable-violation$6422$1XjQw
     g$make-non-continuable-violation$6517$1XjQw
     (record-constructor g$7490$6420$1XjQw))
   (g$non-continuable-violation?$6423$1XjQw
     g$non-continuable-violation?$6518$1XjQw
     (condition-predicate g$7489$6418$1XjQw))
   (g$7503$6424$1XjQw
     g$7503$6519$1XjQw
     (make-record-type-descriptor
       '&implementation-restriction
       g$7427$6390$1XjQw
       'g$7506$1XjQw
       '#f
       '#f
       '#()))
   (g$7505$6425$1XjQw g$7505$6520$1XjQw '#f)
   (g$7504$6426$1XjQw
     g$7504$6521$1XjQw
     (make-record-constructor-descriptor
       g$7503$6424$1XjQw
       g$7428$6392$1XjQw
       g$7505$6425$1XjQw))
   (g$7502$6427$1XjQw
     g$7502$6522$1XjQw
     (record-predicate g$7503$6424$1XjQw))
   (g$make-implementation-restriction-violation$6428$1XjQw
     g$make-implementation-restriction-violation$6523$1XjQw
     (record-constructor g$7504$6426$1XjQw))
   (g$implementation-restriction-violation?$6429$1XjQw
     g$implementation-restriction-violation?$6524$1XjQw
     (condition-predicate g$7503$6424$1XjQw))
   (g$7517$6430$1XjQw
     g$7517$6525$1XjQw
     (make-record-type-descriptor
       '&lexical
       g$7427$6390$1XjQw
       'g$7520$1XjQw
       '#f
       '#f
       '#()))
   (g$7519$6431$1XjQw g$7519$6526$1XjQw '#f)
   (g$7518$6432$1XjQw
     g$7518$6527$1XjQw
     (make-record-constructor-descriptor
       g$7517$6430$1XjQw
       g$7428$6392$1XjQw
       g$7519$6431$1XjQw))
   (g$7516$6433$1XjQw
     g$7516$6528$1XjQw
     (record-predicate g$7517$6430$1XjQw))
   (g$make-lexical-violation$6434$1XjQw
     g$make-lexical-violation$6529$1XjQw
     (record-constructor g$7518$6432$1XjQw))
   (g$lexical-violation?$6435$1XjQw
     g$lexical-violation?$6530$1XjQw
     (condition-predicate g$7517$6430$1XjQw))
   (g$7533$6436$1XjQw
     g$7533$6531$1XjQw
     (make-record-type-descriptor
       '&syntax
       g$7427$6390$1XjQw
       'g$7536$1XjQw
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$7535$6437$1XjQw g$7535$6532$1XjQw '#f)
   (g$7534$6438$1XjQw
     g$7534$6533$1XjQw
     (make-record-constructor-descriptor
       g$7533$6436$1XjQw
       g$7428$6392$1XjQw
       g$7535$6437$1XjQw))
   (g$7532$6439$1XjQw
     g$7532$6534$1XjQw
     (record-predicate g$7533$6436$1XjQw))
   (g$make-syntax-violation$6440$1XjQw
     g$make-syntax-violation$6535$1XjQw
     (record-constructor g$7534$6438$1XjQw))
   (g$7530$6441$1XjQw
     g$7530$6536$1XjQw
     (record-accessor g$7533$6436$1XjQw '0))
   (g$7531$6442$1XjQw
     g$7531$6537$1XjQw
     (record-accessor g$7533$6436$1XjQw '1))
   (g$syntax-violation?$6443$1XjQw
     g$syntax-violation?$6538$1XjQw
     (condition-predicate g$7533$6436$1XjQw))
   (g$syntax-violation-form$6444$1XjQw
     g$syntax-violation-form$6539$1XjQw
     (condition-accessor g$7533$6436$1XjQw g$7530$6441$1XjQw))
   (g$syntax-violation-subform$6445$1XjQw
     g$syntax-violation-subform$6540$1XjQw
     (condition-accessor g$7533$6436$1XjQw g$7531$6442$1XjQw))
   (g$7551$6446$1XjQw
     g$7551$6541$1XjQw
     (make-record-type-descriptor
       '&undefined
       g$7427$6390$1XjQw
       'g$7554$1XjQw
       '#f
       '#f
       '#()))
   (g$7553$6447$1XjQw g$7553$6542$1XjQw '#f)
   (g$7552$6448$1XjQw
     g$7552$6543$1XjQw
     (make-record-constructor-descriptor
       g$7551$6446$1XjQw
       g$7428$6392$1XjQw
       g$7553$6447$1XjQw))
   (g$7550$6449$1XjQw
     g$7550$6544$1XjQw
     (record-predicate g$7551$6446$1XjQw))
   (g$make-undefined-violation$6450$1XjQw
     g$make-undefined-violation$6545$1XjQw
     (record-constructor g$7552$6448$1XjQw))
   (g$undefined-violation?$6451$1XjQw
     g$undefined-violation?$6546$1XjQw
     (condition-predicate g$7551$6446$1XjQw)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$6547$1XjQw
     g$append!$6553$1XjQw
     (case-lambda
       ((g$a$6548$1XjQw . g$b$6549$1XjQw)
        (if (null? g$a$6548$1XjQw)
          g$b$6549$1XjQw
          (if (null? g$b$6549$1XjQw)
            g$a$6548$1XjQw
            (begin
              ((letrec ((g$f$6550$1XjQw
                          (case-lambda
                            ((g$a$6551$1XjQw)
                             ((case-lambda
                                ((g$n$6552$1XjQw)
                                 (if (null? g$n$6552$1XjQw)
                                   (set-cdr! g$a$6551$1XjQw g$b$6549$1XjQw)
                                   (g$f$6550$1XjQw g$n$6552$1XjQw))))
                              (cdr g$a$6551$1XjQw))))))
                 g$f$6550$1XjQw)
               g$a$6548$1XjQw)
              g$a$6548$1XjQw)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$6554$1XjQw
     g$sign$6572$1XjQw
     (case-lambda
       ((g$n$6560$1XjQw)
        (if (> g$n$6560$1XjQw '0) '1 (if (< g$n$6560$1XjQw '0) '-1 '0)))))
   (g$quotient$6555$1XjQw
     g$quotient$6573$1XjQw
     (case-lambda
       ((g$n1$6561$1XjQw g$n2$6562$1XjQw)
        (begin
          (if (not (integer-valued? g$n1$6561$1XjQw))
            (assertion-violation 'quotient '"not an integer" g$n1$6561$1XjQw)
            (void))
          (if (not (integer-valued? g$n2$6562$1XjQw))
            (assertion-violation 'quotient '"not an integer" g$n2$6562$1XjQw)
            (void))
          (* (g$sign$6554$1XjQw g$n1$6561$1XjQw)
             (g$sign$6554$1XjQw g$n2$6562$1XjQw)
             (div (abs g$n1$6561$1XjQw) (abs g$n2$6562$1XjQw)))))))
   (g$remainder$6556$1XjQw
     g$remainder$6574$1XjQw
     (case-lambda
       ((g$n1$6563$1XjQw g$n2$6564$1XjQw)
        (begin
          (if (not (integer-valued? g$n1$6563$1XjQw))
            (assertion-violation 'remainder '"not an integer" g$n1$6563$1XjQw)
            (void))
          (if (not (integer-valued? g$n2$6564$1XjQw))
            (assertion-violation 'remainder '"not an integer" g$n2$6564$1XjQw)
            (void))
          (* (g$sign$6554$1XjQw g$n1$6563$1XjQw)
             (mod (abs g$n1$6563$1XjQw) (abs g$n2$6564$1XjQw)))))))
   (g$modulo$6557$1XjQw
     g$modulo$6575$1XjQw
     (case-lambda
       ((g$n1$6565$1XjQw g$n2$6566$1XjQw)
        (begin
          (if (not (integer-valued? g$n1$6565$1XjQw))
            (assertion-violation 'modulo '"not an integer" g$n1$6565$1XjQw)
            (void))
          (if (not (integer-valued? g$n2$6566$1XjQw))
            (assertion-violation 'modulo '"not an integer" g$n2$6566$1XjQw)
            (void))
          (* (g$sign$6554$1XjQw g$n2$6566$1XjQw)
             (mod (* (g$sign$6554$1XjQw g$n2$6566$1XjQw) g$n1$6565$1XjQw)
                  (abs g$n2$6566$1XjQw)))))))
   (g$make-promise$6558$1XjQw
     g$make-promise$6576$1XjQw
     (case-lambda
       ((g$proc$6567$1XjQw)
        ((case-lambda
           ((g$result-ready?$6568$1XjQw g$result$6569$1XjQw)
            (case-lambda
              (()
               (if g$result-ready?$6568$1XjQw
                 g$result$6569$1XjQw
                 ((case-lambda
                    ((g$x$6570$1XjQw)
                     (if g$result-ready?$6568$1XjQw
                       g$result$6569$1XjQw
                       (begin
                         (set! g$result-ready?$6568$1XjQw '#t)
                         (set! g$result$6569$1XjQw g$x$6570$1XjQw)
                         g$result$6569$1XjQw))))
                  (g$proc$6567$1XjQw)))))))
         '#f
         '#f))))
   (g$force$6559$1XjQw
     g$force$6577$1XjQw
     (case-lambda ((g$object$6571$1XjQw) (g$object$6571$1XjQw)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$6578$1XjQw
     g$split$6604$1XjQw
     (case-lambda
       ((g$ls$6581$1XjQw)
        ((letrec ((g$loop$6582$1XjQw
                    (case-lambda
                      ((g$rest$6583$1XjQw g$left$6584$1XjQw g$right$6585$1XjQw)
                       (if (null? g$rest$6583$1XjQw)
                         (cons g$left$6584$1XjQw g$right$6585$1XjQw)
                         (if (null? (cdr g$rest$6583$1XjQw))
                           (cons
                             (cons (car g$rest$6583$1XjQw) g$left$6584$1XjQw)
                             g$right$6585$1XjQw)
                           (g$loop$6582$1XjQw
                             (g$cddr$5923$1XjQw g$rest$6583$1XjQw)
                             (cons (car g$rest$6583$1XjQw) g$left$6584$1XjQw)
                             (cons
                               (g$cadr$5921$1XjQw g$rest$6583$1XjQw)
                               g$right$6585$1XjQw))))))))
           g$loop$6582$1XjQw)
         g$ls$6581$1XjQw
         '()
         '()))))
   (g$reverse-it$6579$1XjQw
     g$reverse-it$6605$1XjQw
     (case-lambda
       ((g$head$6586$1XjQw g$tail$6587$1XjQw)
        (if (null? g$head$6586$1XjQw)
          g$tail$6587$1XjQw
          ((case-lambda
             ((g$hd$6588$1XjQw g$tl$6589$1XjQw)
              (g$reverse-it$6579$1XjQw
                g$tl$6589$1XjQw
                (cons g$hd$6588$1XjQw g$tail$6587$1XjQw))))
           (car g$head$6586$1XjQw)
           (cdr g$head$6586$1XjQw))))))
   (g$list-sort$6580$1XjQw
     g$list-sort$6606$1XjQw
     (case-lambda
       ((g$precedes?$6590$1XjQw g$ls$6591$1XjQw)
        ((case-lambda
           ((g$merge$6592$1XjQw)
            ((case-lambda
               (()
                (if (null? g$ls$6591$1XjQw)
                  '()
                  ((letrec ((g$helper$6593$1XjQw
                              (case-lambda
                                ((g$piece$6594$1XjQw)
                                 (if (null? (cdr g$piece$6594$1XjQw))
                                   g$piece$6594$1XjQw
                                   ((case-lambda
                                      ((g$parts$6595$1XjQw)
                                       (g$merge$6592$1XjQw
                                         (g$helper$6593$1XjQw
                                           (car g$parts$6595$1XjQw))
                                         (g$helper$6593$1XjQw
                                           (cdr g$parts$6595$1XjQw)))))
                                    (g$split$6578$1XjQw
                                      g$piece$6594$1XjQw)))))))
                     g$helper$6593$1XjQw)
                   g$ls$6591$1XjQw)))))))
         (case-lambda
           ((g$list-1$6596$1XjQw g$list-2$6597$1XjQw)
            ((letrec ((g$loop$6598$1XjQw
                        (case-lambda
                          ((g$source-1$6599$1XjQw
                             g$source-2$6600$1XjQw
                             g$so-far$6601$1XjQw)
                           (if (null? g$source-1$6599$1XjQw)
                             (g$reverse-it$6579$1XjQw
                               g$so-far$6601$1XjQw
                               g$source-2$6600$1XjQw)
                             (if (null? g$source-2$6600$1XjQw)
                               (g$reverse-it$6579$1XjQw
                                 g$so-far$6601$1XjQw
                                 g$source-1$6599$1XjQw)
                               ((case-lambda
                                  ((g$car-1$6602$1XjQw g$car-2$6603$1XjQw)
                                   (if (g$precedes?$6590$1XjQw
                                         g$car-2$6603$1XjQw
                                         g$car-1$6602$1XjQw)
                                     (g$loop$6598$1XjQw
                                       g$source-1$6599$1XjQw
                                       (cdr g$source-2$6600$1XjQw)
                                       (cons
                                         g$car-2$6603$1XjQw
                                         g$so-far$6601$1XjQw))
                                     (g$loop$6598$1XjQw
                                       g$source-2$6600$1XjQw
                                       (cdr g$source-1$6599$1XjQw)
                                       (cons
                                         g$car-1$6602$1XjQw
                                         g$so-far$6601$1XjQw)))))
                                (car g$source-1$6599$1XjQw)
                                (car g$source-2$6600$1XjQw))))))))
               g$loop$6598$1XjQw)
             g$list-1$6596$1XjQw
             g$list-2$6597$1XjQw
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$6613$1XjQw
     g$string-ci=?$6679$1XjQw
     (case-lambda
       ((g$a$6629$1XjQw g$b$6630$1XjQw . g$rest$6631$1XjQw)
        (begin
          (if (not (string? g$a$6629$1XjQw))
            (assertion-violation 'string-ci=? '"not a string" g$a$6629$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$6632$1XjQw)
               (begin
                 (if (not (string? g$x$6632$1XjQw))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$6632$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$6633$1XjQw)
                     (begin
                       (set! g$a$6629$1XjQw g$x$6632$1XjQw)
                       g$r$6633$1XjQw)))
                  (= (string-ci-compare g$a$6629$1XjQw g$x$6632$1XjQw) '0)))))
            (cons g$b$6630$1XjQw g$rest$6631$1XjQw))))))
   (g$string-ci<?$6614$1XjQw
     g$string-ci<?$6680$1XjQw
     (case-lambda
       ((g$a$6634$1XjQw g$b$6635$1XjQw . g$rest$6636$1XjQw)
        (begin
          (if (not (string? g$a$6634$1XjQw))
            (assertion-violation 'string-ci<? '"not a string" g$a$6634$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$6637$1XjQw)
               (begin
                 (if (not (string? g$x$6637$1XjQw))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$6637$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$6638$1XjQw)
                     (begin
                       (set! g$a$6634$1XjQw g$x$6637$1XjQw)
                       g$r$6638$1XjQw)))
                  (< (string-ci-compare g$a$6634$1XjQw g$x$6637$1XjQw) '0)))))
            (cons g$b$6635$1XjQw g$rest$6636$1XjQw))))))
   (g$string-ci>?$6615$1XjQw
     g$string-ci>?$6681$1XjQw
     (case-lambda
       ((g$a$6639$1XjQw g$b$6640$1XjQw . g$rest$6641$1XjQw)
        (begin
          (if (not (string? g$a$6639$1XjQw))
            (assertion-violation 'string-ci>? '"not a string" g$a$6639$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$6642$1XjQw)
               (begin
                 (if (not (string? g$x$6642$1XjQw))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$6642$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$6643$1XjQw)
                     (begin
                       (set! g$a$6639$1XjQw g$x$6642$1XjQw)
                       g$r$6643$1XjQw)))
                  (> (string-ci-compare g$a$6639$1XjQw g$x$6642$1XjQw) '0)))))
            (cons g$b$6640$1XjQw g$rest$6641$1XjQw))))))
   (g$string-ci<=?$6616$1XjQw
     g$string-ci<=?$6682$1XjQw
     (case-lambda
       ((g$a$6644$1XjQw g$b$6645$1XjQw . g$rest$6646$1XjQw)
        (begin
          (if (not (string? g$a$6644$1XjQw))
            (assertion-violation 'string-ci<=? '"not a string" g$a$6644$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$6647$1XjQw)
               (begin
                 (if (not (string? g$x$6647$1XjQw))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$6647$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$6648$1XjQw)
                     (begin
                       (set! g$a$6644$1XjQw g$x$6647$1XjQw)
                       g$r$6648$1XjQw)))
                  (<= (string-ci-compare g$a$6644$1XjQw g$x$6647$1XjQw) '0)))))
            (cons g$b$6645$1XjQw g$rest$6646$1XjQw))))))
   (g$string-ci>=?$6617$1XjQw
     g$string-ci>=?$6683$1XjQw
     (case-lambda
       ((g$a$6649$1XjQw g$b$6650$1XjQw . g$rest$6651$1XjQw)
        (begin
          (if (not (string? g$a$6649$1XjQw))
            (assertion-violation 'string-ci>=? '"not a string" g$a$6649$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$6652$1XjQw)
               (begin
                 (if (not (string? g$x$6652$1XjQw))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$6652$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$6653$1XjQw)
                     (begin
                       (set! g$a$6649$1XjQw g$x$6652$1XjQw)
                       g$r$6653$1XjQw)))
                  (>= (string-ci-compare g$a$6649$1XjQw g$x$6652$1XjQw) '0)))))
            (cons g$b$6650$1XjQw g$rest$6651$1XjQw))))))
   (g$char-ci=?$6624$1XjQw
     g$char-ci=?$6684$1XjQw
     (case-lambda
       ((g$a$6654$1XjQw g$b$6655$1XjQw . g$rest$6656$1XjQw)
        (begin
          (if (not (char? g$a$6654$1XjQw))
            (assertion-violation 'char-ci=? '"not a char" g$a$6654$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$6657$1XjQw)
               (begin
                 (if (not (char? g$x$6657$1XjQw))
                   (assertion-violation 'char-ci=? '"not a char" g$x$6657$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$6658$1XjQw)
                     (begin
                       (set! g$a$6654$1XjQw g$x$6657$1XjQw)
                       g$r$6658$1XjQw)))
                  (= (char->integer (char-upcase g$a$6654$1XjQw))
                     (char->integer (char-upcase g$x$6657$1XjQw)))))))
            (cons g$b$6655$1XjQw g$rest$6656$1XjQw))))))
   (g$char-ci<?$6625$1XjQw
     g$char-ci<?$6685$1XjQw
     (case-lambda
       ((g$a$6659$1XjQw g$b$6660$1XjQw . g$rest$6661$1XjQw)
        (begin
          (if (not (char? g$a$6659$1XjQw))
            (assertion-violation 'char-ci<? '"not a char" g$a$6659$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$6662$1XjQw)
               (begin
                 (if (not (char? g$x$6662$1XjQw))
                   (assertion-violation 'char-ci<? '"not a char" g$x$6662$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$6663$1XjQw)
                     (begin
                       (set! g$a$6659$1XjQw g$x$6662$1XjQw)
                       g$r$6663$1XjQw)))
                  (< (char->integer (char-upcase g$a$6659$1XjQw))
                     (char->integer (char-upcase g$x$6662$1XjQw)))))))
            (cons g$b$6660$1XjQw g$rest$6661$1XjQw))))))
   (g$char-ci>?$6626$1XjQw
     g$char-ci>?$6686$1XjQw
     (case-lambda
       ((g$a$6664$1XjQw g$b$6665$1XjQw . g$rest$6666$1XjQw)
        (begin
          (if (not (char? g$a$6664$1XjQw))
            (assertion-violation 'char-ci>? '"not a char" g$a$6664$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$6667$1XjQw)
               (begin
                 (if (not (char? g$x$6667$1XjQw))
                   (assertion-violation 'char-ci>? '"not a char" g$x$6667$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$6668$1XjQw)
                     (begin
                       (set! g$a$6664$1XjQw g$x$6667$1XjQw)
                       g$r$6668$1XjQw)))
                  (> (char->integer (char-upcase g$a$6664$1XjQw))
                     (char->integer (char-upcase g$x$6667$1XjQw)))))))
            (cons g$b$6665$1XjQw g$rest$6666$1XjQw))))))
   (g$char-ci<=?$6627$1XjQw
     g$char-ci<=?$6687$1XjQw
     (case-lambda
       ((g$a$6669$1XjQw g$b$6670$1XjQw . g$rest$6671$1XjQw)
        (begin
          (if (not (char? g$a$6669$1XjQw))
            (assertion-violation 'char-ci<=? '"not a char" g$a$6669$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$6672$1XjQw)
               (begin
                 (if (not (char? g$x$6672$1XjQw))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$6672$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$6673$1XjQw)
                     (begin
                       (set! g$a$6669$1XjQw g$x$6672$1XjQw)
                       g$r$6673$1XjQw)))
                  (<= (char->integer (char-upcase g$a$6669$1XjQw))
                      (char->integer (char-upcase g$x$6672$1XjQw)))))))
            (cons g$b$6670$1XjQw g$rest$6671$1XjQw))))))
   (g$char-ci>=?$6628$1XjQw
     g$char-ci>=?$6688$1XjQw
     (case-lambda
       ((g$a$6674$1XjQw g$b$6675$1XjQw . g$rest$6676$1XjQw)
        (begin
          (if (not (char? g$a$6674$1XjQw))
            (assertion-violation 'char-ci>=? '"not a char" g$a$6674$1XjQw)
            (void))
          (g$for-all$5755$1XjQw
            (case-lambda
              ((g$x$6677$1XjQw)
               (begin
                 (if (not (char? g$x$6677$1XjQw))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$6677$1XjQw)
                   (void))
                 ((case-lambda
                    ((g$r$6678$1XjQw)
                     (begin
                       (set! g$a$6674$1XjQw g$x$6677$1XjQw)
                       g$r$6678$1XjQw)))
                  (>= (char->integer (char-upcase g$a$6674$1XjQw))
                      (char->integer (char-upcase g$x$6677$1XjQw)))))))
            (cons g$b$6675$1XjQw g$rest$6676$1XjQw)))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$6689$1XjQw
     g$bitwise-if$6720$1XjQw
     (case-lambda
       ((g$ei1$6696$1XjQw g$ei2$6697$1XjQw g$ei3$6698$1XjQw)
        (bitwise-ior
          (bitwise-and g$ei1$6696$1XjQw g$ei2$6697$1XjQw)
          (bitwise-and (bitwise-not g$ei1$6696$1XjQw) g$ei3$6698$1XjQw)))))
   (g$bitwise-copy-bit$6690$1XjQw
     g$bitwise-copy-bit$6721$1XjQw
     (case-lambda
       ((g$ei1$6699$1XjQw g$ei2$6700$1XjQw g$ei3$6701$1XjQw)
        (g$bitwise-if$6689$1XjQw
          (g$bitwise-arithmetic-shift-left$6693$1XjQw '1 g$ei2$6700$1XjQw)
          (g$bitwise-arithmetic-shift-left$6693$1XjQw
            g$ei3$6701$1XjQw
            g$ei2$6700$1XjQw)
          g$ei1$6699$1XjQw))))
   (g$bitwise-bit-field$6691$1XjQw
     g$bitwise-bit-field$6722$1XjQw
     (case-lambda
       ((g$ei1$6702$1XjQw g$ei2$6703$1XjQw g$ei3$6704$1XjQw)
        (g$bitwise-arithmetic-shift-right$6694$1XjQw
          (bitwise-and
            g$ei1$6702$1XjQw
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$6693$1XjQw
                '-1
                g$ei3$6704$1XjQw)))
          g$ei2$6703$1XjQw))))
   (g$bitwise-copy-bit-field$6692$1XjQw
     g$bitwise-copy-bit-field$6723$1XjQw
     (case-lambda
       ((g$to$6705$1XjQw g$start$6706$1XjQw g$end$6707$1XjQw g$from$6708$1XjQw)
        (g$bitwise-if$6689$1XjQw
          (bitwise-and
            (g$bitwise-arithmetic-shift-left$6693$1XjQw '-1 g$start$6706$1XjQw)
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$6693$1XjQw
                '-1
                g$end$6707$1XjQw)))
          (g$bitwise-arithmetic-shift-left$6693$1XjQw
            g$from$6708$1XjQw
            g$start$6706$1XjQw)
          g$to$6705$1XjQw))))
   (g$bitwise-arithmetic-shift-left$6693$1XjQw
     g$bitwise-arithmetic-shift-left$6724$1XjQw
     (case-lambda
       ((g$ei1$6709$1XjQw g$ei2$6710$1XjQw)
        (bitwise-arithmetic-shift g$ei1$6709$1XjQw g$ei2$6710$1XjQw))))
   (g$bitwise-arithmetic-shift-right$6694$1XjQw
     g$bitwise-arithmetic-shift-right$6725$1XjQw
     (case-lambda
       ((g$ei1$6711$1XjQw g$ei2$6712$1XjQw)
        (bitwise-arithmetic-shift g$ei1$6711$1XjQw (- g$ei2$6712$1XjQw)))))
   (g$bitwise-rotate-bit-field$6695$1XjQw
     g$bitwise-rotate-bit-field$6726$1XjQw
     (case-lambda
       ((g$n$6713$1XjQw g$start$6714$1XjQw g$end$6715$1XjQw g$count$6716$1XjQw)
        ((case-lambda
           ((g$width$6717$1XjQw)
            (begin
              (if (positive? g$width$6717$1XjQw)
                ((case-lambda
                   ((g$count$6718$1XjQw g$field$6719$1XjQw)
                    (g$bitwise-copy-bit-field$6692$1XjQw
                      g$n$6713$1XjQw
                      g$start$6714$1XjQw
                      g$end$6715$1XjQw
                      (bitwise-ior
                        (g$bitwise-arithmetic-shift-left$6693$1XjQw
                          g$field$6719$1XjQw
                          g$count$6718$1XjQw)
                        (g$bitwise-arithmetic-shift-right$6694$1XjQw
                          g$field$6719$1XjQw
                          (- g$width$6717$1XjQw g$count$6718$1XjQw))))))
                 (mod g$count$6716$1XjQw g$width$6717$1XjQw)
                 (g$bitwise-bit-field$6691$1XjQw
                   g$n$6713$1XjQw
                   g$start$6714$1XjQw
                   g$end$6715$1XjQw))
                (void))
              g$n$6713$1XjQw)))
         (- g$end$6715$1XjQw g$start$6714$1XjQw))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fx*/carry$6727$1XjQw
     g$fx*/carry$6776$1XjQw
     (case-lambda
       ((g$fx1$6737$1XjQw g$fx2$6738$1XjQw g$fx3$6739$1XjQw)
        ((case-lambda
           ((g$s$6740$1XjQw g$e$6741$1XjQw)
            (values
              (mod0 g$s$6740$1XjQw g$e$6741$1XjQw)
              (div0 g$s$6740$1XjQw g$e$6741$1XjQw))))
         (+ (* g$fx1$6737$1XjQw g$fx2$6738$1XjQw) g$fx3$6739$1XjQw)
         (expt '2 (fixnum-width))))))
   (g$fx-/carry$6728$1XjQw
     g$fx-/carry$6777$1XjQw
     (case-lambda
       ((g$fx1$6742$1XjQw g$fx2$6743$1XjQw g$fx3$6744$1XjQw)
        ((case-lambda
           ((g$s$6745$1XjQw g$e$6746$1XjQw)
            (values
              (mod0 g$s$6745$1XjQw g$e$6746$1XjQw)
              (div0 g$s$6745$1XjQw g$e$6746$1XjQw))))
         (- g$fx1$6742$1XjQw g$fx2$6743$1XjQw g$fx3$6744$1XjQw)
         (expt '2 (fixnum-width))))))
   (g$fx+/carry$6729$1XjQw
     g$fx+/carry$6778$1XjQw
     (case-lambda
       ((g$fx1$6747$1XjQw g$fx2$6748$1XjQw g$fx3$6749$1XjQw)
        ((case-lambda
           ((g$s$6750$1XjQw g$e$6751$1XjQw)
            (values
              (mod0 g$s$6750$1XjQw g$e$6751$1XjQw)
              (div0 g$s$6750$1XjQw g$e$6751$1XjQw))))
         (+ g$fx1$6747$1XjQw g$fx2$6748$1XjQw g$fx3$6749$1XjQw)
         (expt '2 (fixnum-width))))))
   (g$fxif$6730$1XjQw
     g$fxif$6779$1XjQw
     (case-lambda
       ((g$fx1$6752$1XjQw g$fx2$6753$1XjQw g$fx3$6754$1XjQw)
        (fxior
          (fxand g$fx1$6752$1XjQw g$fx2$6753$1XjQw)
          (fxand (fxnot g$fx1$6752$1XjQw) g$fx3$6754$1XjQw)))))
   (g$fxcopy-bit$6731$1XjQw
     g$fxcopy-bit$6780$1XjQw
     (case-lambda
       ((g$fx1$6755$1XjQw g$fx2$6756$1XjQw g$fx3$6757$1XjQw)
        (g$fxif$6730$1XjQw
          (g$fxarithmetic-shift-left$6734$1XjQw '1 g$fx2$6756$1XjQw)
          (g$fxarithmetic-shift-left$6734$1XjQw
            g$fx3$6757$1XjQw
            g$fx2$6756$1XjQw)
          g$fx1$6755$1XjQw))))
   (g$fxbit-field$6732$1XjQw
     g$fxbit-field$6781$1XjQw
     (case-lambda
       ((g$fx1$6758$1XjQw g$fx2$6759$1XjQw g$fx3$6760$1XjQw)
        (g$fxarithmetic-shift-right$6735$1XjQw
          (fxand
            g$fx1$6758$1XjQw
            (fxnot (g$fxarithmetic-shift-left$6734$1XjQw '-1 g$fx3$6760$1XjQw)))
          g$fx2$6759$1XjQw))))
   (g$fxcopy-bit-field$6733$1XjQw
     g$fxcopy-bit-field$6782$1XjQw
     (case-lambda
       ((g$to$6761$1XjQw g$start$6762$1XjQw g$end$6763$1XjQw g$from$6764$1XjQw)
        (g$fxif$6730$1XjQw
          (fxand
            (g$fxarithmetic-shift-left$6734$1XjQw '-1 g$start$6762$1XjQw)
            (fxnot (g$fxarithmetic-shift-left$6734$1XjQw '-1 g$end$6763$1XjQw)))
          (g$fxarithmetic-shift-left$6734$1XjQw
            g$from$6764$1XjQw
            g$start$6762$1XjQw)
          g$to$6761$1XjQw))))
   (g$fxarithmetic-shift-left$6734$1XjQw
     g$fxarithmetic-shift-left$6783$1XjQw
     (case-lambda
       ((g$fx1$6765$1XjQw g$fx2$6766$1XjQw)
        (fxarithmetic-shift g$fx1$6765$1XjQw g$fx2$6766$1XjQw))))
   (g$fxarithmetic-shift-right$6735$1XjQw
     g$fxarithmetic-shift-right$6784$1XjQw
     (case-lambda
       ((g$fx1$6767$1XjQw g$fx2$6768$1XjQw)
        (fxarithmetic-shift g$fx1$6767$1XjQw (fx- g$fx2$6768$1XjQw)))))
   (g$fxrotate-bit-field$6736$1XjQw
     g$fxrotate-bit-field$6785$1XjQw
     (case-lambda
       ((g$n$6769$1XjQw g$start$6770$1XjQw g$end$6771$1XjQw g$count$6772$1XjQw)
        ((case-lambda
           ((g$width$6773$1XjQw)
            (if (fxpositive? g$width$6773$1XjQw)
              ((case-lambda
                 ((g$count$6774$1XjQw g$field$6775$1XjQw)
                  (g$fxcopy-bit-field$6733$1XjQw
                    g$n$6769$1XjQw
                    g$start$6770$1XjQw
                    g$end$6771$1XjQw
                    (fxior
                      (g$fxarithmetic-shift-left$6734$1XjQw
                        g$field$6775$1XjQw
                        g$count$6774$1XjQw)
                      (g$fxarithmetic-shift-right$6735$1XjQw
                        g$field$6775$1XjQw
                        (fx- g$width$6773$1XjQw g$count$6774$1XjQw))))))
               (fxmod g$count$6772$1XjQw g$width$6773$1XjQw)
               (g$fxbit-field$6732$1XjQw
                 g$n$6769$1XjQw
                 g$start$6770$1XjQw
                 g$end$6771$1XjQw))
              g$n$6769$1XjQw)))
         (fx- g$end$6771$1XjQw g$start$6770$1XjQw))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7835$6786$1XjQw
     g$7835$6798$1XjQw
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7838$1XjQw
       '#f
       '#f
       '#()))
   (g$7837$6787$1XjQw g$7837$6799$1XjQw '#f)
   (g$7836$6788$1XjQw
     g$7836$6800$1XjQw
     (make-record-constructor-descriptor
       g$7835$6786$1XjQw
       &implementation-restriction-rcd
       g$7837$6787$1XjQw))
   (g$7834$6789$1XjQw
     g$7834$6801$1XjQw
     (record-predicate g$7835$6786$1XjQw))
   (g$make-no-infinities-violation$6790$1XjQw
     g$make-no-infinities-violation$6802$1XjQw
     (record-constructor g$7836$6788$1XjQw))
   (g$no-infinities-violation?$6791$1XjQw
     g$no-infinities-violation?$6803$1XjQw
     (condition-predicate g$7835$6786$1XjQw))
   (g$7849$6792$1XjQw
     g$7849$6804$1XjQw
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7852$1XjQw
       '#f
       '#f
       '#()))
   (g$7851$6793$1XjQw g$7851$6805$1XjQw '#f)
   (g$7850$6794$1XjQw
     g$7850$6806$1XjQw
     (make-record-constructor-descriptor
       g$7849$6792$1XjQw
       &implementation-restriction-rcd
       g$7851$6793$1XjQw))
   (g$7848$6795$1XjQw
     g$7848$6807$1XjQw
     (record-predicate g$7849$6792$1XjQw))
   (g$make-no-nans-violation$6796$1XjQw
     g$make-no-nans-violation$6808$1XjQw
     (record-constructor g$7850$6794$1XjQw))
   (g$no-nans-violation?$6797$1XjQw
     g$no-nans-violation?$6809$1XjQw
     (condition-predicate g$7849$6792$1XjQw)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7864$6810$1XjQw
     g$7864$6890$1XjQw
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7867$1XjQw
       '#f
       '#f
       '#()))
   (g$7866$6811$1XjQw g$7866$6891$1XjQw '#f)
   (g$7865$6812$1XjQw
     g$7865$6892$1XjQw
     (make-record-constructor-descriptor
       g$7864$6810$1XjQw
       &error-rcd
       g$7866$6811$1XjQw))
   (g$7863$6813$1XjQw
     g$7863$6893$1XjQw
     (record-predicate g$7864$6810$1XjQw))
   (g$make-i/o-error$6814$1XjQw
     g$make-i/o-error$6894$1XjQw
     (record-constructor g$7865$6812$1XjQw))
   (g$i/o-error?$6815$1XjQw
     g$i/o-error?$6895$1XjQw
     (condition-predicate g$7864$6810$1XjQw))
   (g$7878$6816$1XjQw
     g$7878$6896$1XjQw
     (make-record-type-descriptor
       '&i/o-read
       g$7864$6810$1XjQw
       'g$7881$1XjQw
       '#f
       '#f
       '#()))
   (g$7880$6817$1XjQw g$7880$6897$1XjQw '#f)
   (g$7879$6818$1XjQw
     g$7879$6898$1XjQw
     (make-record-constructor-descriptor
       g$7878$6816$1XjQw
       g$7865$6812$1XjQw
       g$7880$6817$1XjQw))
   (g$7877$6819$1XjQw
     g$7877$6899$1XjQw
     (record-predicate g$7878$6816$1XjQw))
   (g$make-i/o-read-error$6820$1XjQw
     g$make-i/o-read-error$6900$1XjQw
     (record-constructor g$7879$6818$1XjQw))
   (g$i/o-read-error?$6821$1XjQw
     g$i/o-read-error?$6901$1XjQw
     (condition-predicate g$7878$6816$1XjQw))
   (g$7892$6822$1XjQw
     g$7892$6902$1XjQw
     (make-record-type-descriptor
       '&i/o-write
       g$7864$6810$1XjQw
       'g$7895$1XjQw
       '#f
       '#f
       '#()))
   (g$7894$6823$1XjQw g$7894$6903$1XjQw '#f)
   (g$7893$6824$1XjQw
     g$7893$6904$1XjQw
     (make-record-constructor-descriptor
       g$7892$6822$1XjQw
       g$7865$6812$1XjQw
       g$7894$6823$1XjQw))
   (g$7891$6825$1XjQw
     g$7891$6905$1XjQw
     (record-predicate g$7892$6822$1XjQw))
   (g$make-i/o-write-error$6826$1XjQw
     g$make-i/o-write-error$6906$1XjQw
     (record-constructor g$7893$6824$1XjQw))
   (g$i/o-write-error?$6827$1XjQw
     g$i/o-write-error?$6907$1XjQw
     (condition-predicate g$7892$6822$1XjQw))
   (g$7907$6828$1XjQw
     g$7907$6908$1XjQw
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7864$6810$1XjQw
       'g$7910$1XjQw
       '#f
       '#f
       '#((immutable position))))
   (g$7909$6829$1XjQw g$7909$6909$1XjQw '#f)
   (g$7908$6830$1XjQw
     g$7908$6910$1XjQw
     (make-record-constructor-descriptor
       g$7907$6828$1XjQw
       g$7865$6812$1XjQw
       g$7909$6829$1XjQw))
   (g$7906$6831$1XjQw
     g$7906$6911$1XjQw
     (record-predicate g$7907$6828$1XjQw))
   (g$make-i/o-invalid-position-error$6832$1XjQw
     g$make-i/o-invalid-position-error$6912$1XjQw
     (record-constructor g$7908$6830$1XjQw))
   (g$7905$6833$1XjQw
     g$7905$6913$1XjQw
     (record-accessor g$7907$6828$1XjQw '0))
   (g$i/o-invalid-position-error?$6834$1XjQw
     g$i/o-invalid-position-error?$6914$1XjQw
     (condition-predicate g$7907$6828$1XjQw))
   (g$i/o-error-position$6835$1XjQw
     g$i/o-error-position$6915$1XjQw
     (condition-accessor g$7907$6828$1XjQw g$7905$6833$1XjQw))
   (g$7924$6836$1XjQw
     g$7924$6916$1XjQw
     (make-record-type-descriptor
       '&i/o-filename
       g$7864$6810$1XjQw
       'g$7927$1XjQw
       '#f
       '#f
       '#((immutable filename))))
   (g$7926$6837$1XjQw g$7926$6917$1XjQw '#f)
   (g$7925$6838$1XjQw
     g$7925$6918$1XjQw
     (make-record-constructor-descriptor
       g$7924$6836$1XjQw
       g$7865$6812$1XjQw
       g$7926$6837$1XjQw))
   (g$7923$6839$1XjQw
     g$7923$6919$1XjQw
     (record-predicate g$7924$6836$1XjQw))
   (g$make-i/o-filename-error$6840$1XjQw
     g$make-i/o-filename-error$6920$1XjQw
     (record-constructor g$7925$6838$1XjQw))
   (g$7922$6841$1XjQw
     g$7922$6921$1XjQw
     (record-accessor g$7924$6836$1XjQw '0))
   (g$i/o-filename-error?$6842$1XjQw
     g$i/o-filename-error?$6922$1XjQw
     (condition-predicate g$7924$6836$1XjQw))
   (g$i/o-error-filename$6843$1XjQw
     g$i/o-error-filename$6923$1XjQw
     (condition-accessor g$7924$6836$1XjQw g$7922$6841$1XjQw))
   (g$7940$6844$1XjQw
     g$7940$6924$1XjQw
     (make-record-type-descriptor
       '&i/o-file-protection
       g$7924$6836$1XjQw
       'g$7943$1XjQw
       '#f
       '#f
       '#()))
   (g$7942$6845$1XjQw g$7942$6925$1XjQw '#f)
   (g$7941$6846$1XjQw
     g$7941$6926$1XjQw
     (make-record-constructor-descriptor
       g$7940$6844$1XjQw
       g$7925$6838$1XjQw
       g$7942$6845$1XjQw))
   (g$7939$6847$1XjQw
     g$7939$6927$1XjQw
     (record-predicate g$7940$6844$1XjQw))
   (g$make-i/o-file-protection-error$6848$1XjQw
     g$make-i/o-file-protection-error$6928$1XjQw
     (record-constructor g$7941$6846$1XjQw))
   (g$i/o-file-protection-error?$6849$1XjQw
     g$i/o-file-protection-error?$6929$1XjQw
     (condition-predicate g$7940$6844$1XjQw))
   (g$7954$6850$1XjQw
     g$7954$6930$1XjQw
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$7940$6844$1XjQw
       'g$7957$1XjQw
       '#f
       '#f
       '#()))
   (g$7956$6851$1XjQw g$7956$6931$1XjQw '#f)
   (g$7955$6852$1XjQw
     g$7955$6932$1XjQw
     (make-record-constructor-descriptor
       g$7954$6850$1XjQw
       g$7941$6846$1XjQw
       g$7956$6851$1XjQw))
   (g$7953$6853$1XjQw
     g$7953$6933$1XjQw
     (record-predicate g$7954$6850$1XjQw))
   (g$make-i/o-file-is-read-only-error$6854$1XjQw
     g$make-i/o-file-is-read-only-error$6934$1XjQw
     (record-constructor g$7955$6852$1XjQw))
   (g$i/o-file-is-read-only-error?$6855$1XjQw
     g$i/o-file-is-read-only-error?$6935$1XjQw
     (condition-predicate g$7954$6850$1XjQw))
   (g$7968$6856$1XjQw
     g$7968$6936$1XjQw
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$7924$6836$1XjQw
       'g$7971$1XjQw
       '#f
       '#f
       '#()))
   (g$7970$6857$1XjQw g$7970$6937$1XjQw '#f)
   (g$7969$6858$1XjQw
     g$7969$6938$1XjQw
     (make-record-constructor-descriptor
       g$7968$6856$1XjQw
       g$7925$6838$1XjQw
       g$7970$6857$1XjQw))
   (g$7967$6859$1XjQw
     g$7967$6939$1XjQw
     (record-predicate g$7968$6856$1XjQw))
   (g$make-i/o-file-already-exists-error$6860$1XjQw
     g$make-i/o-file-already-exists-error$6940$1XjQw
     (record-constructor g$7969$6858$1XjQw))
   (g$i/o-file-already-exists-error?$6861$1XjQw
     g$i/o-file-already-exists-error?$6941$1XjQw
     (condition-predicate g$7968$6856$1XjQw))
   (g$7982$6862$1XjQw
     g$7982$6942$1XjQw
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$7924$6836$1XjQw
       'g$7985$1XjQw
       '#f
       '#f
       '#()))
   (g$7984$6863$1XjQw g$7984$6943$1XjQw '#f)
   (g$7983$6864$1XjQw
     g$7983$6944$1XjQw
     (make-record-constructor-descriptor
       g$7982$6862$1XjQw
       g$7925$6838$1XjQw
       g$7984$6863$1XjQw))
   (g$7981$6865$1XjQw
     g$7981$6945$1XjQw
     (record-predicate g$7982$6862$1XjQw))
   (g$make-i/o-file-does-not-exist-error$6866$1XjQw
     g$make-i/o-file-does-not-exist-error$6946$1XjQw
     (record-constructor g$7983$6864$1XjQw))
   (g$i/o-file-does-not-exist-error?$6867$1XjQw
     g$i/o-file-does-not-exist-error?$6947$1XjQw
     (condition-predicate g$7982$6862$1XjQw))
   (g$7997$6868$1XjQw
     g$7997$6948$1XjQw
     (make-record-type-descriptor
       '&i/o-port
       g$7864$6810$1XjQw
       'g$8000$1XjQw
       '#f
       '#f
       '#((immutable port))))
   (g$7999$6869$1XjQw g$7999$6949$1XjQw '#f)
   (g$7998$6870$1XjQw
     g$7998$6950$1XjQw
     (make-record-constructor-descriptor
       g$7997$6868$1XjQw
       g$7865$6812$1XjQw
       g$7999$6869$1XjQw))
   (g$7996$6871$1XjQw
     g$7996$6951$1XjQw
     (record-predicate g$7997$6868$1XjQw))
   (g$make-i/o-port-error$6872$1XjQw
     g$make-i/o-port-error$6952$1XjQw
     (record-constructor g$7998$6870$1XjQw))
   (g$7995$6873$1XjQw
     g$7995$6953$1XjQw
     (record-accessor g$7997$6868$1XjQw '0))
   (g$i/o-port-error?$6874$1XjQw
     g$i/o-port-error?$6954$1XjQw
     (condition-predicate g$7997$6868$1XjQw))
   (g$i/o-error-port$6875$1XjQw
     g$i/o-error-port$6955$1XjQw
     (condition-accessor g$7997$6868$1XjQw g$7995$6873$1XjQw))
   (g$8013$6876$1XjQw
     g$8013$6956$1XjQw
     (make-record-type-descriptor
       '&i/o-decoding
       g$7997$6868$1XjQw
       'g$8016$1XjQw
       '#f
       '#f
       '#()))
   (g$8015$6877$1XjQw g$8015$6957$1XjQw '#f)
   (g$8014$6878$1XjQw
     g$8014$6958$1XjQw
     (make-record-constructor-descriptor
       g$8013$6876$1XjQw
       g$7998$6870$1XjQw
       g$8015$6877$1XjQw))
   (g$8012$6879$1XjQw
     g$8012$6959$1XjQw
     (record-predicate g$8013$6876$1XjQw))
   (g$make-i/o-decoding-error$6880$1XjQw
     g$make-i/o-decoding-error$6960$1XjQw
     (record-constructor g$8014$6878$1XjQw))
   (g$i/o-decoding-error?$6881$1XjQw
     g$i/o-decoding-error?$6961$1XjQw
     (condition-predicate g$8013$6876$1XjQw))
   (g$8028$6882$1XjQw
     g$8028$6962$1XjQw
     (make-record-type-descriptor
       '&i/o-encoding
       g$7997$6868$1XjQw
       'g$8031$1XjQw
       '#f
       '#f
       '#((immutable char))))
   (g$8030$6883$1XjQw g$8030$6963$1XjQw '#f)
   (g$8029$6884$1XjQw
     g$8029$6964$1XjQw
     (make-record-constructor-descriptor
       g$8028$6882$1XjQw
       g$7998$6870$1XjQw
       g$8030$6883$1XjQw))
   (g$8027$6885$1XjQw
     g$8027$6965$1XjQw
     (record-predicate g$8028$6882$1XjQw))
   (g$make-i/o-encoding-error$6886$1XjQw
     g$make-i/o-encoding-error$6966$1XjQw
     (record-constructor g$8029$6884$1XjQw))
   (g$8026$6887$1XjQw
     g$8026$6967$1XjQw
     (record-accessor g$8028$6882$1XjQw '0))
   (g$i/o-encoding-error?$6888$1XjQw
     g$i/o-encoding-error?$6968$1XjQw
     (condition-predicate g$8028$6882$1XjQw))
   (g$i/o-encoding-error-char$6889$1XjQw
     g$i/o-encoding-error-char$6969$1XjQw
     (condition-accessor g$8028$6882$1XjQw g$8026$6887$1XjQw)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6970$1XjQw
     g$get-output-string$6981$1XjQw
     (case-lambda
       ((g$port$6975$1XjQw)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$6975$1XjQw))))
   (g$open-output-string$6971$1XjQw
     g$open-output-string$6982$1XjQw
     (case-lambda (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$6972$1XjQw
     g$open-string-output-port$6983$1XjQw
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6976$1XjQw)
            (values
              g$p$6976$1XjQw
              (case-lambda
                (() (g$get-output-string$6970$1XjQw g$p$6976$1XjQw))))))
         (g$open-output-string$6971$1XjQw)))))
   (g$port?$6973$1XjQw
     g$port?$6984$1XjQw
     (case-lambda
       ((g$obj$6977$1XjQw)
        ((case-lambda
           ((g$t$6978$1XjQw)
            (if g$t$6978$1XjQw
              g$t$6978$1XjQw
              (begin '#f (binary-port? g$obj$6977$1XjQw)))))
         (textual-port? g$obj$6977$1XjQw)))))
   (g$call-with-string-output-port$6974$1XjQw
     g$call-with-string-output-port$6985$1XjQw
     (case-lambda
       ((g$proc$6979$1XjQw)
        ((case-lambda
           ((g$p$6980$1XjQw)
            (begin
              (call-with-port g$p$6980$1XjQw g$proc$6979$1XjQw)
              (g$get-output-string$6970$1XjQw g$p$6980$1XjQw))))
         (g$open-output-string$6971$1XjQw))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$with-input-from-file$6992$1XjQw
     g$with-input-from-file$7018$1XjQw
     (case-lambda
       ((g$filename$6996$1XjQw g$thunk$6997$1XjQw)
        ((case-lambda
           ((g$current-input-port$7000$1XjQw g$t$7001$1XjQw)
            ((case-lambda
               ((g$swap$7002$1XjQw)
                (dynamic-wind
                  g$swap$7002$1XjQw
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6997$1XjQw)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$7002$1XjQw)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$7003$1XjQw)
                    (begin
                      (g$current-input-port$7000$1XjQw g$t$7001$1XjQw)
                      (set! g$t$7001$1XjQw g$t$7003$1XjQw))))
                 (g$current-input-port$7000$1XjQw)))))))
         current-input-port
         (open-input-file g$filename$6996$1XjQw)))))
   (g$with-output-to-file$6993$1XjQw
     g$with-output-to-file$7019$1XjQw
     (case-lambda
       ((g$filename$7004$1XjQw g$thunk$7005$1XjQw)
        ((case-lambda
           ((g$current-output-port$7008$1XjQw g$t$7009$1XjQw)
            ((case-lambda
               ((g$swap$7010$1XjQw)
                (dynamic-wind
                  g$swap$7010$1XjQw
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$7005$1XjQw)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$7010$1XjQw)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$7011$1XjQw)
                    (begin
                      (g$current-output-port$7008$1XjQw g$t$7009$1XjQw)
                      (set! g$t$7009$1XjQw g$t$7011$1XjQw))))
                 (g$current-output-port$7008$1XjQw)))))))
         current-output-port
         (open-output-file g$filename$7004$1XjQw)))))
   (g$call-with-input-file$6994$1XjQw
     g$call-with-input-file$7020$1XjQw
     (case-lambda
       ((g$filename$7012$1XjQw g$proc$7013$1XjQw)
        ((case-lambda
           ((g$p$7014$1XjQw)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$7013$1XjQw g$p$7014$1XjQw)))
              (case-lambda (() (close-input-port g$p$7014$1XjQw))))))
         (open-input-file g$filename$7012$1XjQw)))))
   (g$call-with-output-file$6995$1XjQw
     g$call-with-output-file$7021$1XjQw
     (case-lambda
       ((g$filename$7015$1XjQw g$proc$7016$1XjQw)
        ((case-lambda
           ((g$p$7017$1XjQw)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$7016$1XjQw g$p$7017$1XjQw)))
              (case-lambda (() (close-output-port g$p$7017$1XjQw))))))
         (open-output-file g$filename$7015$1XjQw))))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$8098$7022$1XjQw
     g$8098$7131$1XjQw
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$8100$7023$1XjQw g$8100$7132$1XjQw '#f)
   (g$8099$7024$1XjQw
     g$8099$7133$1XjQw
     (make-record-constructor-descriptor
       g$8098$7022$1XjQw
       '#f
       g$8100$7023$1XjQw))
   (g$enum?$7025$1XjQw
     g$enum?$7134$1XjQw
     (record-predicate g$8098$7022$1XjQw))
   (g$make-enum$7026$1XjQw
     g$make-enum$7135$1XjQw
     (record-constructor g$8099$7024$1XjQw))
   (g$enum-value$7027$1XjQw
     g$enum-value$7136$1XjQw
     (record-accessor g$8098$7022$1XjQw '0))
   (g$enum-info$7028$1XjQw
     g$enum-info$7137$1XjQw
     (record-accessor g$8098$7022$1XjQw '1))
   (g$8111$7029$1XjQw
     g$8111$7138$1XjQw
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$8113$7030$1XjQw g$8113$7139$1XjQw '#f)
   (g$8112$7031$1XjQw
     g$8112$7140$1XjQw
     (make-record-constructor-descriptor
       g$8111$7029$1XjQw
       '#f
       g$8113$7030$1XjQw))
   (g$enum-universe?$7032$1XjQw
     g$enum-universe?$7141$1XjQw
     (record-predicate g$8111$7029$1XjQw))
   (g$make-enum-universe$7033$1XjQw
     g$make-enum-universe$7142$1XjQw
     (record-constructor g$8112$7031$1XjQw))
   (g$enum-universe-id$7034$1XjQw
     g$enum-universe-id$7143$1XjQw
     (record-accessor g$8111$7029$1XjQw '0))
   (g$enum-universe-symbols$7035$1XjQw
     g$enum-universe-symbols$7144$1XjQw
     (record-accessor g$8111$7029$1XjQw '1))
   (g$enum-universe-mapping$7036$1XjQw
     g$enum-universe-mapping$7145$1XjQw
     (record-accessor g$8111$7029$1XjQw '2))
   (g$enum-universe-value$7037$1XjQw
     g$enum-universe-value$7146$1XjQw
     (record-accessor g$8111$7029$1XjQw '3))
   (g$enum-type=?$7038$1XjQw
     g$enum-type=?$7147$1XjQw
     (case-lambda
       ((g$enumset1$7060$1XjQw g$enumset2$7061$1XjQw)
        (eq? (g$enum-universe-id$7034$1XjQw
               (g$enum-info$7028$1XjQw g$enumset1$7060$1XjQw))
             (g$enum-universe-id$7034$1XjQw
               (g$enum-info$7028$1XjQw g$enumset2$7061$1XjQw))))))
   (g$get-symbols$7039$1XjQw
     g$get-symbols$7148$1XjQw
     (case-lambda
       ((g$enumset$7062$1XjQw)
        (g$enum-universe-symbols$7035$1XjQw
          (g$enum-info$7028$1XjQw g$enumset$7062$1XjQw)))))
   (g$get-value$7040$1XjQw
     g$get-value$7149$1XjQw
     (case-lambda
       ((g$enumset$7063$1XjQw g$s$7064$1XjQw)
        (g$hashtable-ref$6198$1XjQw
          (g$enum-universe-mapping$7036$1XjQw
            (g$enum-info$7028$1XjQw g$enumset$7063$1XjQw))
          g$s$7064$1XjQw
          '#f))))
   (g$assert-enum$7041$1XjQw
     g$assert-enum$7150$1XjQw
     (case-lambda
       ((g$who$7065$1XjQw g$enumset$7066$1XjQw)
        (if (not (g$enum?$7025$1XjQw g$enumset$7066$1XjQw))
          (assertion-violation
            g$who$7065$1XjQw
            '"not an enumeration"
            g$enumset$7066$1XjQw)
          (void)))))
   (g$make-info$7042$1XjQw
     g$make-info$7151$1XjQw
     (case-lambda
       ((g$symbols$7067$1XjQw)
        ((case-lambda
           ((g$ht$7068$1XjQw)
            ((letrec ((g$f$7069$1XjQw
                        (case-lambda
                          ((g$s$7070$1XjQw g$a$7071$1XjQw g$mask$7072$1XjQw)
                           (if (null? g$s$7070$1XjQw)
                             (values
                               (reverse! g$a$7071$1XjQw)
                               g$ht$7068$1XjQw
                               (- g$mask$7072$1XjQw '1))
                             ((case-lambda
                                ((g$n$7073$1XjQw)
                                 (if (symbol? g$n$7073$1XjQw)
                                   (if (g$hashtable-contains?$6201$1XjQw
                                         g$ht$7068$1XjQw
                                         g$n$7073$1XjQw)
                                     (g$f$7069$1XjQw
                                       (cdr g$s$7070$1XjQw)
                                       g$a$7071$1XjQw
                                       g$mask$7072$1XjQw)
                                     (begin
                                       (g$hashtable-set!$6199$1XjQw
                                         g$ht$7068$1XjQw
                                         g$n$7073$1XjQw
                                         g$mask$7072$1XjQw)
                                       (g$f$7069$1XjQw
                                         (cdr g$s$7070$1XjQw)
                                         (cons g$n$7073$1XjQw g$a$7071$1XjQw)
                                         (g$bitwise-arithmetic-shift-left$6724$1XjQw
                                           g$mask$7072$1XjQw
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$7073$1XjQw))))
                              (car g$s$7070$1XjQw)))))))
               g$f$7069$1XjQw)
             g$symbols$7067$1XjQw
             '()
             '1)))
         (g$make-eq-hashtable$6195$1XjQw)))))
   (g$make-name$7043$1XjQw
     g$make-name$7152$1XjQw
     (case-lambda
       ((g$symbols$7074$1XjQw)
        (string->symbol (g$format$7191$1XjQw '"~a" g$symbols$7074$1XjQw)))))
   (g$make-enumeration$7044$1XjQw
     g$make-enumeration$7153$1XjQw
     (case-lambda
       ((g$symbols$7075$1XjQw)
        (call-with-values
          (case-lambda (() (g$make-info$7042$1XjQw g$symbols$7075$1XjQw)))
          (case-lambda
            ((g$s$7079$1XjQw g$mapping$7080$1XjQw g$mask$7081$1XjQw)
             ((case-lambda
                ((g$mask$7082$1XjQw g$mapping$7083$1XjQw g$s$7084$1XjQw)
                 (g$make-enum$7026$1XjQw
                   g$mask$7082$1XjQw
                   (g$make-enum-universe$7033$1XjQw
                     (g$make-name$7043$1XjQw g$s$7084$1XjQw)
                     g$s$7084$1XjQw
                     g$mapping$7083$1XjQw
                     g$mask$7082$1XjQw))))
              g$mask$7081$1XjQw
              g$mapping$7080$1XjQw
              g$s$7079$1XjQw)))))))
   (g$enum-set-universe$7045$1XjQw
     g$enum-set-universe$7154$1XjQw
     (case-lambda
       ((g$enumset$7085$1XjQw)
        (begin
          (g$assert-enum$7041$1XjQw 'enum-set-universe g$enumset$7085$1XjQw)
          ((case-lambda
             ((g$ei$7086$1XjQw)
              (g$make-enum$7026$1XjQw
                (g$enum-universe-value$7037$1XjQw g$ei$7086$1XjQw)
                g$ei$7086$1XjQw)))
           (g$enum-info$7028$1XjQw g$enumset$7085$1XjQw))))))
   (g$enum-set-indexer$7046$1XjQw
     g$enum-set-indexer$7155$1XjQw
     (case-lambda
       ((g$enumset$7087$1XjQw)
        (begin
          (g$assert-enum$7041$1XjQw 'enum-set-indexer g$enumset$7087$1XjQw)
          (case-lambda
            ((g$symbol$7088$1XjQw)
             (begin
               (if (not (symbol? g$symbol$7088$1XjQw))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$7088$1XjQw)
                 (void))
               ((case-lambda
                  ((g$v$7089$1XjQw)
                   (if g$v$7089$1XjQw
                     (- (bitwise-length g$v$7089$1XjQw) '1)
                     '#f)))
                (g$get-value$7040$1XjQw
                  g$enumset$7087$1XjQw
                  g$symbol$7088$1XjQw)))))))))
   (g$enum-set-constructor$7047$1XjQw
     g$enum-set-constructor$7156$1XjQw
     (case-lambda
       ((g$enumset$7090$1XjQw)
        (begin
          (g$assert-enum$7041$1XjQw 'enum-set-constructor g$enumset$7090$1XjQw)
          (case-lambda
            ((g$symbols$7091$1XjQw)
             ((letrec ((g$f$7092$1XjQw
                         (case-lambda
                           ((g$v$7093$1XjQw g$s$7094$1XjQw)
                            (if (null? g$s$7094$1XjQw)
                              (g$make-enum$7026$1XjQw
                                g$v$7093$1XjQw
                                (g$enum-info$7028$1XjQw g$enumset$7090$1XjQw))
                              ((case-lambda
                                 ((g$n$7095$1XjQw)
                                  (if (symbol? g$n$7095$1XjQw)
                                    ((case-lambda
                                       ((g$v*$7096$1XjQw)
                                        (if g$v*$7096$1XjQw
                                          (g$f$7092$1XjQw
                                            (bitwise-ior
                                              g$v$7093$1XjQw
                                              g$v*$7096$1XjQw)
                                            (cdr g$s$7094$1XjQw))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$7095$1XjQw))))
                                     (g$get-value$7040$1XjQw
                                       g$enumset$7090$1XjQw
                                       g$n$7095$1XjQw))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$7095$1XjQw))))
                               (car g$s$7094$1XjQw)))))))
                g$f$7092$1XjQw)
              '0
              g$symbols$7091$1XjQw)))))))
   (g$enum-set->list$7048$1XjQw
     g$enum-set->list$7157$1XjQw
     (case-lambda
       ((g$enumset$7097$1XjQw)
        (begin
          (g$assert-enum$7041$1XjQw 'enum-set->list g$enumset$7097$1XjQw)
          ((case-lambda
             ((g$value$7098$1XjQw)
              ((letrec ((g$f$7099$1XjQw
                          (case-lambda
                            ((g$s$7100$1XjQw g$l$7101$1XjQw)
                             (if (null? g$s$7100$1XjQw)
                               (reverse! g$l$7101$1XjQw)
                               (if (zero?
                                     (bitwise-and
                                       (g$get-value$7040$1XjQw
                                         g$enumset$7097$1XjQw
                                         (car g$s$7100$1XjQw))
                                       g$value$7098$1XjQw))
                                 (g$f$7099$1XjQw
                                   (cdr g$s$7100$1XjQw)
                                   g$l$7101$1XjQw)
                                 (g$f$7099$1XjQw
                                   (cdr g$s$7100$1XjQw)
                                   (cons
                                     (car g$s$7100$1XjQw)
                                     g$l$7101$1XjQw))))))))
                 g$f$7099$1XjQw)
               (g$get-symbols$7039$1XjQw g$enumset$7097$1XjQw)
               '())))
           (g$enum-value$7027$1XjQw g$enumset$7097$1XjQw))))))
   (g$enum-set-member?$7049$1XjQw
     g$enum-set-member?$7158$1XjQw
     (case-lambda
       ((g$symbol$7102$1XjQw g$enumset$7103$1XjQw)
        (begin
          (if (not (symbol? g$symbol$7102$1XjQw))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$7102$1XjQw)
            (void))
          (g$assert-enum$7041$1XjQw 'enum-set-member? g$enumset$7103$1XjQw)
          ((case-lambda
             ((g$v$7104$1XjQw)
              (if g$v$7104$1XjQw
                (not (zero?
                       (bitwise-and
                         g$v$7104$1XjQw
                         (g$enum-value$7027$1XjQw g$enumset$7103$1XjQw))))
                '#f)))
           (g$get-value$7040$1XjQw
             g$enumset$7103$1XjQw
             g$symbol$7102$1XjQw))))))
   (g$enum-set-subset?$7050$1XjQw
     g$enum-set-subset?$7159$1XjQw
     (case-lambda
       ((g$enumset1$7105$1XjQw g$enumset2$7106$1XjQw)
        (begin
          (g$assert-enum$7041$1XjQw 'enum-set-subset? g$enumset1$7105$1XjQw)
          (g$assert-enum$7041$1XjQw 'enum-set-subset? g$enumset2$7106$1XjQw)
          ((case-lambda
             ((g$v1$7107$1XjQw g$v2$7108$1XjQw)
              (if (g$enum-type=?$7038$1XjQw
                    g$enumset1$7105$1XjQw
                    g$enumset2$7106$1XjQw)
                (= (bitwise-and g$v1$7107$1XjQw g$v2$7108$1XjQw)
                   g$v1$7107$1XjQw)
                ((letrec ((g$f$7109$1XjQw
                            (case-lambda
                              ((g$s$7110$1XjQw)
                               (if (null? g$s$7110$1XjQw)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$7111$1XjQw g$v2*$7112$1XjQw)
                                     (if g$v2*$7112$1XjQw
                                       ((case-lambda
                                          ((g$has1$7113$1XjQw g$has2$7114$1XjQw)
                                           (if (if g$has1$7113$1XjQw
                                                 (begin
                                                   '#f
                                                   (not g$has2$7114$1XjQw))
                                                 '#f)
                                             '#f
                                             (g$f$7109$1XjQw
                                               (cdr g$s$7110$1XjQw)))))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v1$7107$1XjQw
                                                 g$v1*$7111$1XjQw)))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v2$7108$1XjQw
                                                 g$v2*$7112$1XjQw))))
                                       '#f)))
                                  (g$get-value$7040$1XjQw
                                    g$enumset1$7105$1XjQw
                                    (car g$s$7110$1XjQw))
                                  (g$get-value$7040$1XjQw
                                    g$enumset2$7106$1XjQw
                                    (car g$s$7110$1XjQw))))))))
                   g$f$7109$1XjQw)
                 (g$get-symbols$7039$1XjQw g$enumset1$7105$1XjQw)))))
           (g$enum-value$7027$1XjQw g$enumset1$7105$1XjQw)
           (g$enum-value$7027$1XjQw g$enumset2$7106$1XjQw))))))
   (g$enum-set=?$7051$1XjQw
     g$enum-set=?$7160$1XjQw
     (case-lambda
       ((g$enumset1$7115$1XjQw g$enumset2$7116$1XjQw)
        (begin
          (g$assert-enum$7041$1XjQw 'enum-set=? g$enumset1$7115$1XjQw)
          (g$assert-enum$7041$1XjQw 'enum-set=? g$enumset2$7116$1XjQw)
          (if (g$enum-set-subset?$7050$1XjQw
                g$enumset1$7115$1XjQw
                g$enumset2$7116$1XjQw)
            (begin
              '#f
              (g$enum-set-subset?$7050$1XjQw
                g$enumset2$7116$1XjQw
                g$enumset1$7115$1XjQw))
            '#f)))))
   (g$enum-set-union$7052$1XjQw
     g$enum-set-union$7161$1XjQw
     (case-lambda
       ((g$enumset1$7117$1XjQw g$enumset2$7118$1XjQw)
        (begin
          (g$assert-enum$7041$1XjQw 'enum-set-union g$enumset1$7117$1XjQw)
          (g$assert-enum$7041$1XjQw 'enum-set-union g$enumset2$7118$1XjQw)
          (if (g$enum-type=?$7038$1XjQw
                g$enumset1$7117$1XjQw
                g$enumset2$7118$1XjQw)
            (g$make-enum$7026$1XjQw
              (bitwise-ior
                (g$enum-value$7027$1XjQw g$enumset1$7117$1XjQw)
                (g$enum-value$7027$1XjQw g$enumset2$7118$1XjQw))
              (g$enum-info$7028$1XjQw g$enumset1$7117$1XjQw))
            '#f)))))
   (g$enum-set-intersection$7053$1XjQw
     g$enum-set-intersection$7162$1XjQw
     (case-lambda
       ((g$enumset1$7119$1XjQw g$enumset2$7120$1XjQw)
        (begin
          (g$assert-enum$7041$1XjQw
            'enum-set-intersection
            g$enumset1$7119$1XjQw)
          (g$assert-enum$7041$1XjQw
            'enum-set-intersection
            g$enumset2$7120$1XjQw)
          (if (g$enum-type=?$7038$1XjQw
                g$enumset1$7119$1XjQw
                g$enumset2$7120$1XjQw)
            (g$make-enum$7026$1XjQw
              (bitwise-and
                (g$enum-value$7027$1XjQw g$enumset1$7119$1XjQw)
                (g$enum-value$7027$1XjQw g$enumset2$7120$1XjQw))
              (g$enum-info$7028$1XjQw g$enumset1$7119$1XjQw))
            '#f)))))
   (g$enum-set-difference$7054$1XjQw
     g$enum-set-difference$7163$1XjQw
     (case-lambda
       ((g$enumset1$7121$1XjQw g$enumset2$7122$1XjQw)
        (begin
          (g$assert-enum$7041$1XjQw 'enum-set-difference g$enumset1$7121$1XjQw)
          (g$assert-enum$7041$1XjQw 'enum-set-difference g$enumset2$7122$1XjQw)
          (if (g$enum-type=?$7038$1XjQw
                g$enumset1$7121$1XjQw
                g$enumset2$7122$1XjQw)
            (g$make-enum$7026$1XjQw
              (bitwise-and
                (g$enum-value$7027$1XjQw g$enumset1$7121$1XjQw)
                (bitwise-not (g$enum-value$7027$1XjQw g$enumset2$7122$1XjQw)))
              (g$enum-info$7028$1XjQw g$enumset1$7121$1XjQw))
            '#f)))))
   (g$enum-set-complement$7055$1XjQw
     g$enum-set-complement$7164$1XjQw
     (case-lambda
       ((g$enumset$7123$1XjQw)
        (begin
          (g$assert-enum$7041$1XjQw 'enum-set-complement g$enumset$7123$1XjQw)
          (g$make-enum$7026$1XjQw
            (bitwise-not (g$enum-value$7027$1XjQw g$enumset$7123$1XjQw))
            (g$enum-info$7028$1XjQw g$enumset$7123$1XjQw))))))
   (g$enum-set-projection$7056$1XjQw
     g$enum-set-projection$7165$1XjQw
     (case-lambda
       ((g$enumset1$7124$1XjQw g$enumset2$7125$1XjQw)
        (begin
          (g$assert-enum$7041$1XjQw 'enum-set-projection g$enumset1$7124$1XjQw)
          (g$assert-enum$7041$1XjQw 'enum-set-projection g$enumset2$7125$1XjQw)
          ((case-lambda
             ((g$v1$7126$1XjQw)
              ((letrec ((g$f$7127$1XjQw
                          (case-lambda
                            ((g$s$7128$1XjQw g$v$7129$1XjQw)
                             (if (null? g$s$7128$1XjQw)
                               (g$make-enum$7026$1XjQw
                                 g$v$7129$1XjQw
                                 (g$enum-info$7028$1XjQw g$enumset2$7125$1XjQw))
                               (if (zero?
                                     (bitwise-and
                                       g$v1$7126$1XjQw
                                       (g$get-value$7040$1XjQw
                                         g$enumset1$7124$1XjQw
                                         (car g$s$7128$1XjQw))))
                                 (g$f$7127$1XjQw
                                   (cdr g$s$7128$1XjQw)
                                   g$v$7129$1XjQw)
                                 ((case-lambda
                                    ((g$v2$7130$1XjQw)
                                     (if g$v2$7130$1XjQw
                                       (g$f$7127$1XjQw
                                         (cdr g$s$7128$1XjQw)
                                         (bitwise-ior
                                           g$v$7129$1XjQw
                                           g$v2$7130$1XjQw))
                                       (g$f$7127$1XjQw
                                         (cdr g$s$7128$1XjQw)
                                         g$v$7129$1XjQw))))
                                  (g$get-value$7040$1XjQw
                                    g$enumset2$7125$1XjQw
                                    (car g$s$7128$1XjQw)))))))))
                 g$f$7127$1XjQw)
               (g$get-symbols$7039$1XjQw g$enumset1$7124$1XjQw)
               '0)))
           (g$enum-value$7027$1XjQw g$enumset1$7124$1XjQw)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$7057$1XjQw g$p$7058$1XjQw g$wr$7059$1XjQw)
       (g$fprintf$7190$1XjQw
         g$p$7058$1XjQw
         '"#[enum-set ~a]"
         (g$enum-set->list$7048$1XjQw g$x$7057$1XjQw))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$7166$1XjQw
     g$dofmt$7188$1XjQw
     (case-lambda
       ((g$p$7170$1XjQw g$cntl$7171$1XjQw g$args$7172$1XjQw)
        ((case-lambda
           ((g$nmax$7173$1XjQw)
            ((letrec ((g$loop$7174$1XjQw
                        (case-lambda
                          ((g$n$7175$1XjQw g$a$7176$1XjQw)
                           (if (fx<=? g$n$7175$1XjQw g$nmax$7173$1XjQw)
                             ((case-lambda
                                ((g$c$7177$1XjQw)
                                 (if (if (g$char=?$5955$1XjQw
                                           g$c$7177$1XjQw
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$7175$1XjQw
                                           g$nmax$7173$1XjQw))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$7178$1XjQw)
                                       (if (g$memv$5750$1XjQw
                                             g$t$7178$1XjQw
                                             '(#\a))
                                         (begin
                                           (display
                                             (car g$a$7176$1XjQw)
                                             g$p$7170$1XjQw)
                                           (g$loop$7174$1XjQw
                                             (fx+ g$n$7175$1XjQw '2)
                                             (cdr g$a$7176$1XjQw)))
                                         (if (g$memv$5750$1XjQw
                                               g$t$7178$1XjQw
                                               '(#\s))
                                           (begin
                                             (write
                                               (car g$a$7176$1XjQw)
                                               g$p$7170$1XjQw)
                                             (g$loop$7174$1XjQw
                                               (fx+ g$n$7175$1XjQw '2)
                                               (cdr g$a$7176$1XjQw)))
                                           (if (g$memv$5750$1XjQw
                                                 g$t$7178$1XjQw
                                                 '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$7176$1XjQw)
                                                   '2)
                                                 g$p$7170$1XjQw)
                                               (g$loop$7174$1XjQw
                                                 (fx+ g$n$7175$1XjQw '2)
                                                 (cdr g$a$7176$1XjQw)))
                                             (if (g$memv$5750$1XjQw
                                                   g$t$7178$1XjQw
                                                   '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$7176$1XjQw)
                                                     '8)
                                                   g$p$7170$1XjQw)
                                                 (g$loop$7174$1XjQw
                                                   (fx+ g$n$7175$1XjQw '2)
                                                   (cdr g$a$7176$1XjQw)))
                                               (if (g$memv$5750$1XjQw
                                                     g$t$7178$1XjQw
                                                     '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$7176$1XjQw)
                                                       '16)
                                                     g$p$7170$1XjQw)
                                                   (g$loop$7174$1XjQw
                                                     (fx+ g$n$7175$1XjQw '2)
                                                     (cdr g$a$7176$1XjQw)))
                                                 (if (g$memv$5750$1XjQw
                                                       g$t$7178$1XjQw
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$7176$1XjQw)
                                                         '10)
                                                       g$p$7170$1XjQw)
                                                     (g$loop$7174$1XjQw
                                                       (fx+ g$n$7175$1XjQw '2)
                                                       (cdr g$a$7176$1XjQw)))
                                                   (if (g$memv$5750$1XjQw
                                                         g$t$7178$1XjQw
                                                         '(#\~))
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$7170$1XjQw)
                                                       (g$loop$7174$1XjQw
                                                         (fx+ g$n$7175$1XjQw '2)
                                                         g$a$7176$1XjQw))
                                                     (begin
                                                       (write-char
                                                         g$c$7177$1XjQw
                                                         g$p$7170$1XjQw)
                                                       (g$loop$7174$1XjQw
                                                         (fx+ g$n$7175$1XjQw '1)
                                                         g$a$7176$1XjQw)))))))))))
                                    (string-ref
                                      g$cntl$7171$1XjQw
                                      (fx+ g$n$7175$1XjQw '1)))
                                   (begin
                                     (write-char g$c$7177$1XjQw g$p$7170$1XjQw)
                                     (g$loop$7174$1XjQw
                                       (fx+ g$n$7175$1XjQw '1)
                                       g$a$7176$1XjQw)))))
                              (string-ref g$cntl$7171$1XjQw g$n$7175$1XjQw))
                             (void))))))
               g$loop$7174$1XjQw)
             '0
             g$args$7172$1XjQw)))
         (fx- (string-length g$cntl$7171$1XjQw) '1)))))
   (g$printf$7167$1XjQw
     g$printf$7189$1XjQw
     (case-lambda
       ((g$control$7179$1XjQw . g$args$7180$1XjQw)
        (g$dofmt$7166$1XjQw
          (current-output-port)
          g$control$7179$1XjQw
          g$args$7180$1XjQw))))
   (g$fprintf$7168$1XjQw
     g$fprintf$7190$1XjQw
     (case-lambda
       ((g$p$7181$1XjQw g$control$7182$1XjQw . g$args$7183$1XjQw)
        (g$dofmt$7166$1XjQw
          g$p$7181$1XjQw
          g$control$7182$1XjQw
          g$args$7183$1XjQw))))
   (g$format$7169$1XjQw
     g$format$7191$1XjQw
     (case-lambda
       ((g$control$7184$1XjQw . g$args$7185$1XjQw)
        (call-with-values
          g$open-string-output-port$6983$1XjQw
          (case-lambda
            ((g$p$7186$1XjQw g$c$7187$1XjQw)
             (begin
               (g$dofmt$7166$1XjQw
                 g$p$7186$1XjQw
                 g$control$7184$1XjQw
                 g$args$7185$1XjQw)
               (g$c$7187$1XjQw)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$7192$1XjQw
     g$make-traced-macro$7195$1XjQw
     (case-lambda
       ((g$name$7193$1XjQw g$x$7194$1XjQw)
        (if (procedure? g$x$7194$1XjQw)
          (make-traced-procedure
            g$name$7193$1XjQw
            g$x$7194$1XjQw
            g$syntax->datum$11906$1XjQw)
          (if (g$variable-transformer?$11729$1XjQw g$x$7194$1XjQw)
            (g$make-variable-transformer$11728$1XjQw
              (make-traced-procedure
                g$name$7193$1XjQw
                (g$variable-transformer-procedure$11730$1XjQw g$x$7194$1XjQw)
                g$syntax->datum$11906$1XjQw))
            g$x$7194$1XjQw))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$7196$1XjQw
     g$library-version-mismatch-warning$7292$1XjQw
     (case-lambda
       ((g$name$7269$1XjQw g$depname$7270$1XjQw g$filename$7271$1XjQw)
        (g$fprintf$7190$1XjQw
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$7269$1XjQw
          g$depname$7270$1XjQw
          g$filename$7271$1XjQw))))
   (g$file-locator-resolution-error$7197$1XjQw
     g$file-locator-resolution-error$7293$1XjQw
     (case-lambda
       ((g$libname$7272$1XjQw g$failed-list$7273$1XjQw)
        (letrec* ((g$8343$7274$1XjQw
                    (make-record-type-descriptor
                      '&library-resolution
                      &condition-rtd
                      'g$8346$1XjQw
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$8345$7275$1XjQw '#f)
                  (g$8344$7276$1XjQw
                    (make-record-constructor-descriptor
                      g$8343$7274$1XjQw
                      &condition-rcd
                      g$8345$7275$1XjQw))
                  (g$8342$7277$1XjQw (record-predicate g$8343$7274$1XjQw))
                  (g$make-library-resolution-condition$7278$1XjQw
                    (record-constructor g$8344$7276$1XjQw))
                  (g$8340$7279$1XjQw (record-accessor g$8343$7274$1XjQw '0))
                  (g$8341$7280$1XjQw (record-accessor g$8343$7274$1XjQw '1))
                  (g$library-resolution-condition?$7281$1XjQw
                    (condition-predicate g$8343$7274$1XjQw))
                  (g$condition-library$7282$1XjQw
                    (condition-accessor g$8343$7274$1XjQw g$8340$7279$1XjQw))
                  (g$condition-files$7283$1XjQw
                    (condition-accessor g$8343$7274$1XjQw g$8341$7280$1XjQw)))
          (raise
            (condition
              (g$make-error$6483$1XjQw)
              (g$make-who-condition$6509$1XjQw 'expander)
              (g$make-message-condition$6463$1XjQw
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$7278$1XjQw
                g$libname$7272$1XjQw
                g$failed-list$7273$1XjQw)))))))
   (g$read-library-source-file$7198$1XjQw
     g$read-library-source-file$7294$1XjQw
     (case-lambda
       ((g$file-name$7284$1XjQw)
        (g$with-input-from-file$7018$1XjQw
          g$file-name$7284$1XjQw
          read-annotated))))
   (g$make-parameter$7199$1XjQw
     g$make-parameter$7295$1XjQw
     (case-lambda
       ((g$x$7285$1XjQw)
        (g$make-parameter$7199$1XjQw
          g$x$7285$1XjQw
          (case-lambda ((g$x$7286$1XjQw) g$x$7286$1XjQw))))
       ((g$x$7287$1XjQw g$fender$7288$1XjQw)
        (begin
          (if (not (procedure? g$fender$7288$1XjQw))
            (g$assertion-error$11899$1XjQw
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(89,8) - (89,36)"))
            (void))
          ((case-lambda
             ((g$x$7289$1XjQw)
              (case-lambda
                (() g$x$7289$1XjQw)
                ((g$v$7290$1XjQw)
                 (set! g$x$7289$1XjQw (g$fender$7288$1XjQw g$v$7290$1XjQw))))))
           (g$fender$7288$1XjQw g$x$7287$1XjQw))))))
   (g$file-options-constructor$7267$1XjQw
     g$file-options-constructor$7296$1XjQw
     (g$make-parameter$7199$1XjQw '#f))
   (g$file-options-spec$7268$1XjQw
     g$file-options-spec$7297$1XjQw
     (case-lambda
       ((g$x$7291$1XjQw)
        ((g$file-options-constructor$7267$1XjQw) g$x$7291$1XjQw)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$7493$1XjQw
     g$current-primitive-locations$7538$1XjQw
     (g$make-parameter$7295$1XjQw
       (case-lambda ((g$x$7499$1XjQw) '#f))
       (case-lambda
         ((g$p$7500$1XjQw)
          (begin
            (if (not (procedure? g$p$7500$1XjQw))
              (g$assertion-error$11899$1XjQw
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$7500$1XjQw)))))
   (g$mutable?$7494$1XjQw
     g$mutable?$7539$1XjQw
     (case-lambda
       ((g$x$7501$1XjQw)
        (letrec* ((g$simple?$7502$1XjQw
                    (case-lambda
                      ((g$x$7503$1XjQw)
                       ((case-lambda
                          ((g$t$7504$1XjQw)
                           (if g$t$7504$1XjQw
                             g$t$7504$1XjQw
                             ((case-lambda
                                ((g$t$7505$1XjQw)
                                 (if g$t$7505$1XjQw
                                   g$t$7505$1XjQw
                                   ((case-lambda
                                      ((g$t$7506$1XjQw)
                                       (if g$t$7506$1XjQw
                                         g$t$7506$1XjQw
                                         ((case-lambda
                                            ((g$t$7507$1XjQw)
                                             (if g$t$7507$1XjQw
                                               g$t$7507$1XjQw
                                               ((case-lambda
                                                  ((g$t$7508$1XjQw)
                                                   (if g$t$7508$1XjQw
                                                     g$t$7508$1XjQw
                                                     ((case-lambda
                                                        ((g$t$7509$1XjQw)
                                                         (if g$t$7509$1XjQw
                                                           g$t$7509$1XjQw
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$7503$1XjQw)))))
                                                      (bytevector?
                                                        g$x$7503$1XjQw)))))
                                                (string? g$x$7503$1XjQw)))))
                                          (boolean? g$x$7503$1XjQw)))))
                                    (symbol? g$x$7503$1XjQw)))))
                              (char? g$x$7503$1XjQw)))))
                        (null? g$x$7503$1XjQw))))))
          (not (g$simple?$7502$1XjQw g$x$7501$1XjQw))))))
   (g$rewriter$7495$1XjQw
     g$rewriter$7540$1XjQw
     (case-lambda
       ((g$quote-hack?$7510$1XjQw)
        (letrec* ((g$f$7511$1XjQw
                    (case-lambda
                      ((g$x$7512$1XjQw)
                       (if (pair? g$x$7512$1XjQw)
                         ((case-lambda
                            ((g$t$7513$1XjQw)
                             (if (g$memv$5750$1XjQw g$t$7513$1XjQw '(quote))
                               (if (if g$quote-hack?$7510$1XjQw
                                     (begin
                                       '#f
                                       (g$mutable?$7494$1XjQw
                                         (g$cadr$5921$1XjQw g$x$7512$1XjQw)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$7514$1XjQw)
                                     (begin
                                       (set-symbol-value!
                                         g$g$7514$1XjQw
                                         (g$cadr$5921$1XjQw g$x$7512$1XjQw))
                                       g$g$7514$1XjQw)))
                                  (gensym))
                                 g$x$7512$1XjQw)
                               (if (g$memv$5750$1XjQw
                                     g$t$7513$1XjQw
                                     '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (g$map$5757$1XjQw
                                     (case-lambda
                                       ((g$x$7515$1XjQw)
                                        (cons
                                          (car g$x$7515$1XjQw)
                                          (g$map$5757$1XjQw
                                            g$f$7511$1XjQw
                                            (cdr g$x$7515$1XjQw)))))
                                     (cdr g$x$7512$1XjQw)))
                                 (if (g$memv$5750$1XjQw
                                       g$t$7513$1XjQw
                                       '(lambda))
                                   (g$cons*$5759$1XjQw
                                     'lambda
                                     (g$cadr$5921$1XjQw g$x$7512$1XjQw)
                                     (g$map$5757$1XjQw
                                       g$f$7511$1XjQw
                                       (g$cddr$5923$1XjQw g$x$7512$1XjQw)))
                                   (if (g$memv$5750$1XjQw
                                         g$t$7513$1XjQw
                                         '(letrec))
                                     ((case-lambda
                                        ((g$bindings$7516$1XjQw
                                           g$body*$7517$1XjQw)
                                         ((case-lambda
                                            ((g$lhs*$7518$1XjQw
                                               g$rhs*$7519$1XjQw)
                                             (g$cons*$5759$1XjQw
                                               'letrec
                                               (g$map$5757$1XjQw
                                                 list
                                                 g$lhs*$7518$1XjQw
                                                 (g$map$5757$1XjQw
                                                   g$f$7511$1XjQw
                                                   g$rhs*$7519$1XjQw))
                                               (g$map$5757$1XjQw
                                                 g$f$7511$1XjQw
                                                 g$body*$7517$1XjQw))))
                                          (g$map$5757$1XjQw
                                            car
                                            g$bindings$7516$1XjQw)
                                          (g$map$5757$1XjQw
                                            g$cadr$5921$1XjQw
                                            g$bindings$7516$1XjQw))))
                                      (g$cadr$5921$1XjQw g$x$7512$1XjQw)
                                      (g$cddr$5923$1XjQw g$x$7512$1XjQw))
                                     (if (g$memv$5750$1XjQw
                                           g$t$7513$1XjQw
                                           '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$7520$1XjQw
                                             g$body*$7521$1XjQw)
                                           ((case-lambda
                                              ((g$lhs*$7522$1XjQw
                                                 g$rhs*$7523$1XjQw)
                                               (g$cons*$5759$1XjQw
                                                 'letrec*
                                                 (g$map$5757$1XjQw
                                                   list
                                                   g$lhs*$7522$1XjQw
                                                   (g$map$5757$1XjQw
                                                     g$f$7511$1XjQw
                                                     g$rhs*$7523$1XjQw))
                                                 (g$map$5757$1XjQw
                                                   g$f$7511$1XjQw
                                                   g$body*$7521$1XjQw))))
                                            (g$map$5757$1XjQw
                                              car
                                              g$bindings$7520$1XjQw)
                                            (g$map$5757$1XjQw
                                              g$cadr$5921$1XjQw
                                              g$bindings$7520$1XjQw))))
                                        (g$cadr$5921$1XjQw g$x$7512$1XjQw)
                                        (g$cddr$5923$1XjQw g$x$7512$1XjQw))
                                       (if (g$memv$5750$1XjQw
                                             g$t$7513$1XjQw
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$7524$1XjQw g$x$7525$1XjQw)
                                             ((case-lambda
                                                ((g$bindings$7526$1XjQw
                                                   g$body*$7527$1XjQw)
                                                 ((case-lambda
                                                    ((g$lhs*$7528$1XjQw
                                                       g$lhs**$7529$1XjQw
                                                       g$rhs*$7530$1XjQw)
                                                     (g$cons*$5759$1XjQw
                                                       'library-letrec*
                                                       g$name$7524$1XjQw
                                                       (g$map$5757$1XjQw
                                                         list
                                                         g$lhs*$7528$1XjQw
                                                         g$lhs**$7529$1XjQw
                                                         (g$map$5757$1XjQw
                                                           g$f$7511$1XjQw
                                                           g$rhs*$7530$1XjQw))
                                                       (g$map$5757$1XjQw
                                                         g$f$7511$1XjQw
                                                         g$body*$7527$1XjQw))))
                                                  (g$map$5757$1XjQw
                                                    car
                                                    g$bindings$7526$1XjQw)
                                                  (g$map$5757$1XjQw
                                                    g$cadr$5921$1XjQw
                                                    g$bindings$7526$1XjQw)
                                                  (g$map$5757$1XjQw
                                                    g$caddr$5927$1XjQw
                                                    g$bindings$7526$1XjQw))))
                                              (g$cadr$5921$1XjQw g$x$7525$1XjQw)
                                              (g$cddr$5923$1XjQw
                                                g$x$7525$1XjQw))))
                                          (g$cadr$5921$1XjQw g$x$7512$1XjQw)
                                          (cdr g$x$7512$1XjQw))
                                         (if (g$memv$5750$1XjQw
                                               g$t$7513$1XjQw
                                               '(begin))
                                           (cons
                                             'begin
                                             (g$map$5757$1XjQw
                                               g$f$7511$1XjQw
                                               (cdr g$x$7512$1XjQw)))
                                           (if (g$memv$5750$1XjQw
                                                 g$t$7513$1XjQw
                                                 '(set!))
                                             (list
                                               'set!
                                               (g$cadr$5921$1XjQw
                                                 g$x$7512$1XjQw)
                                               (g$f$7511$1XjQw
                                                 (g$caddr$5927$1XjQw
                                                   g$x$7512$1XjQw)))
                                             (if (g$memv$5750$1XjQw
                                                   g$t$7513$1XjQw
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$7531$1XjQw)
                                                   ((case-lambda
                                                      ((g$t$7532$1XjQw)
                                                       (if g$t$7532$1XjQw
                                                         ((case-lambda
                                                            ((g$loc$7533$1XjQw)
                                                             g$loc$7533$1XjQw))
                                                          g$t$7532$1XjQw)
                                                         g$op$7531$1XjQw)))
                                                    ((g$current-primitive-locations$7493$1XjQw)
                                                     g$op$7531$1XjQw))))
                                                (g$cadr$5921$1XjQw
                                                  g$x$7512$1XjQw))
                                               (if (g$memv$5750$1XjQw
                                                     g$t$7513$1XjQw
                                                     '(define))
                                                 g$x$7512$1XjQw
                                                 (if (list? g$x$7512$1XjQw)
                                                   (g$map$5757$1XjQw
                                                     g$f$7511$1XjQw
                                                     g$x$7512$1XjQw)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$7512$1XjQw
                                                     (list?
                                                       g$x$7512$1XjQw)))))))))))))))
                          (car g$x$7512$1XjQw))
                         g$x$7512$1XjQw)))))
          g$f$7511$1XjQw))))
   (g$expanded->core$7496$1XjQw
     g$expanded->core$7541$1XjQw
     (case-lambda
       ((g$x$7534$1XjQw) ((g$rewriter$7495$1XjQw '#t) g$x$7534$1XjQw))))
   (g$compile-core-expr$7497$1XjQw
     g$compile-core-expr$7542$1XjQw
     (case-lambda
       ((g$x$7535$1XjQw) ((g$rewriter$7495$1XjQw '#f) g$x$7535$1XjQw))))
   (g$compile-core-expr-to-port$7498$1XjQw
     g$compile-core-expr-to-port$7543$1XjQw
     (case-lambda
       ((g$x$7536$1XjQw g$p$7537$1XjQw)
        (g$pretty-print$7492$1XjQw
          ((g$rewriter$7495$1XjQw '#f) g$x$7536$1XjQw)
          g$p$7537$1XjQw)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$7582$1XjQw
     g$make-collection$7777$1XjQw
     (case-lambda
       (()
        ((case-lambda
           ((g$set$7643$1XjQw)
            (letrec* ((g$set-cons$7644$1XjQw
                        (case-lambda
                          ((g$x$7646$1XjQw g$ls$7647$1XjQw)
                           (if (g$memq$5749$1XjQw
                                 g$x$7646$1XjQw
                                 g$ls$7647$1XjQw)
                             g$ls$7647$1XjQw
                             (cons g$x$7646$1XjQw g$ls$7647$1XjQw))))))
              (case-lambda
                (() g$set$7643$1XjQw)
                ((g$x$7645$1XjQw)
                 (set! g$set$7643$1XjQw
                   (g$set-cons$7644$1XjQw g$x$7645$1XjQw g$set$7643$1XjQw)))))))
         '()))))
   (g$current-library-collection$7583$1XjQw
     g$current-library-collection$7778$1XjQw
     (g$make-parameter$7295$1XjQw
       (g$make-collection$7582$1XjQw)
       (case-lambda
         ((g$x$7648$1XjQw)
          (begin
            (if (not (procedure? g$x$7648$1XjQw))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$7648$1XjQw)
              (void))
            g$x$7648$1XjQw)))))
   (g$8659$7584$1XjQw
     g$8659$7779$1XjQw
     (make-record-type-descriptor
       'library
       '#f
       'g$8662$1XjQw
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$8661$7585$1XjQw g$8661$7780$1XjQw '#f)
   (g$8660$7586$1XjQw
     g$8660$7781$1XjQw
     (make-record-constructor-descriptor
       g$8659$7584$1XjQw
       '#f
       g$8661$7585$1XjQw))
   (g$library?$7587$1XjQw
     g$library?$7782$1XjQw
     (record-predicate g$8659$7584$1XjQw))
   (g$make-library$7588$1XjQw
     g$make-library$7783$1XjQw
     (record-constructor g$8660$7586$1XjQw))
   (g$library-id$7589$1XjQw
     g$library-id$7784$1XjQw
     (record-accessor g$8659$7584$1XjQw '0))
   (g$library-name$7590$1XjQw
     g$library-name$7785$1XjQw
     (record-accessor g$8659$7584$1XjQw '1))
   (g$library-version$7591$1XjQw
     g$library-version$7786$1XjQw
     (record-accessor g$8659$7584$1XjQw '2))
   (g$library-imp*$7592$1XjQw
     g$library-imp*$7787$1XjQw
     (record-accessor g$8659$7584$1XjQw '3))
   (g$library-vis*$7593$1XjQw
     g$library-vis*$7788$1XjQw
     (record-accessor g$8659$7584$1XjQw '4))
   (g$library-inv*$7594$1XjQw
     g$library-inv*$7789$1XjQw
     (record-accessor g$8659$7584$1XjQw '5))
   (g$library-subst$7595$1XjQw
     g$library-subst$7790$1XjQw
     (record-accessor g$8659$7584$1XjQw '6))
   (g$library-env$7596$1XjQw
     g$library-env$7791$1XjQw
     (record-accessor g$8659$7584$1XjQw '7))
   (g$library-visit-state$7597$1XjQw
     g$library-visit-state$7792$1XjQw
     (record-accessor g$8659$7584$1XjQw '8))
   (g$library-invoke-state$7598$1XjQw
     g$library-invoke-state$7793$1XjQw
     (record-accessor g$8659$7584$1XjQw '9))
   (g$library-visit-code$7599$1XjQw
     g$library-visit-code$7794$1XjQw
     (record-accessor g$8659$7584$1XjQw '10))
   (g$library-invoke-code$7600$1XjQw
     g$library-invoke-code$7795$1XjQw
     (record-accessor g$8659$7584$1XjQw '11))
   (g$library-visible?$7601$1XjQw
     g$library-visible?$7796$1XjQw
     (record-accessor g$8659$7584$1XjQw '12))
   (g$library-source-file-name$7602$1XjQw
     g$library-source-file-name$7797$1XjQw
     (record-accessor g$8659$7584$1XjQw '13))
   (g$set-library-id!$7603$1XjQw
     g$set-library-id!$7798$1XjQw
     (record-mutator g$8659$7584$1XjQw '0))
   (g$set-library-name!$7604$1XjQw
     g$set-library-name!$7799$1XjQw
     (record-mutator g$8659$7584$1XjQw '1))
   (g$set-library-version!$7605$1XjQw
     g$set-library-version!$7800$1XjQw
     (record-mutator g$8659$7584$1XjQw '2))
   (g$set-library-imp*!$7606$1XjQw
     g$set-library-imp*!$7801$1XjQw
     (record-mutator g$8659$7584$1XjQw '3))
   (g$set-library-vis*!$7607$1XjQw
     g$set-library-vis*!$7802$1XjQw
     (record-mutator g$8659$7584$1XjQw '4))
   (g$set-library-inv*!$7608$1XjQw
     g$set-library-inv*!$7803$1XjQw
     (record-mutator g$8659$7584$1XjQw '5))
   (g$set-library-subst!$7609$1XjQw
     g$set-library-subst!$7804$1XjQw
     (record-mutator g$8659$7584$1XjQw '6))
   (g$set-library-env!$7610$1XjQw
     g$set-library-env!$7805$1XjQw
     (record-mutator g$8659$7584$1XjQw '7))
   (g$set-library-visit-state!$7611$1XjQw
     g$set-library-visit-state!$7806$1XjQw
     (record-mutator g$8659$7584$1XjQw '8))
   (g$set-library-invoke-state!$7612$1XjQw
     g$set-library-invoke-state!$7807$1XjQw
     (record-mutator g$8659$7584$1XjQw '9))
   (g$set-library-visit-code!$7613$1XjQw
     g$set-library-visit-code!$7808$1XjQw
     (record-mutator g$8659$7584$1XjQw '10))
   (g$set-library-invoke-code!$7614$1XjQw
     g$set-library-invoke-code!$7809$1XjQw
     (record-mutator g$8659$7584$1XjQw '11))
   (g$set-library-visible?!$7615$1XjQw
     g$set-library-visible?!$7810$1XjQw
     (record-mutator g$8659$7584$1XjQw '12))
   (g$set-library-source-file-name!$7616$1XjQw
     g$set-library-source-file-name!$7811$1XjQw
     (record-mutator g$8659$7584$1XjQw '13))
   (g$rp$7617$1XjQw
     g$rp$7812$1XjQw
     (make-record-printer
       'library
       (case-lambda
         ((g$x$7649$1XjQw g$p$7650$1XjQw g$wr$7651$1XjQw)
          (begin
            (if (not (g$library?$7587$1XjQw g$x$7649$1XjQw))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$7191$1XjQw
                '"#<library ~s>"
                (if (null? (g$library-version$7591$1XjQw g$x$7649$1XjQw))
                  (g$library-name$7590$1XjQw g$x$7649$1XjQw)
                  (append
                    (g$library-name$7590$1XjQw g$x$7649$1XjQw)
                    (list (g$library-version$7591$1XjQw g$x$7649$1XjQw)))))
              g$p$7650$1XjQw))))))
   (g$find-dependencies$7618$1XjQw
     g$find-dependencies$7813$1XjQw
     (case-lambda
       ((g$ls$7652$1XjQw)
        (if (null? g$ls$7652$1XjQw)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$7619$1XjQw
     g$find-library-by$7814$1XjQw
     (case-lambda
       ((g$pred$7653$1XjQw)
        ((letrec ((g$f$7654$1XjQw
                    (case-lambda
                      ((g$ls$7655$1XjQw)
                       (if (null? g$ls$7655$1XjQw)
                         '#f
                         (if (g$pred$7653$1XjQw (car g$ls$7655$1XjQw))
                           (car g$ls$7655$1XjQw)
                           (g$f$7654$1XjQw (cdr g$ls$7655$1XjQw))))))))
           g$f$7654$1XjQw)
         ((g$current-library-collection$7583$1XjQw))))))
   (g$library-path$7620$1XjQw
     g$library-path$7815$1XjQw
     (g$make-parameter$7295$1XjQw
       '(".")
       (case-lambda
         ((g$x$7656$1XjQw)
          (if (if (list? g$x$7656$1XjQw)
                (begin '#f (g$for-all$5755$1XjQw string? g$x$7656$1XjQw))
                '#f)
            (g$map$5757$1XjQw
              (case-lambda ((g$x$7657$1XjQw) g$x$7657$1XjQw))
              g$x$7656$1XjQw)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$7656$1XjQw))))))
   (g$library-extensions$7621$1XjQw
     g$library-extensions$7816$1XjQw
     (g$make-parameter$7295$1XjQw
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$7658$1XjQw)
          (if (if (list? g$x$7658$1XjQw)
                (begin '#f (g$for-all$5755$1XjQw string? g$x$7658$1XjQw))
                '#f)
            (g$map$5757$1XjQw
              (case-lambda ((g$x$7659$1XjQw) g$x$7659$1XjQw))
              g$x$7658$1XjQw)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$7658$1XjQw))))))
   (g$library-name->file-name$7622$1XjQw
     g$library-name->file-name$7817$1XjQw
     (case-lambda
       ((g$x$7660$1XjQw)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6983$1XjQw)))
          (case-lambda
            ((g$p$7663$1XjQw g$extract$7664$1XjQw)
             ((case-lambda
                ((g$extract$7665$1XjQw g$p$7666$1XjQw)
                 (letrec* ((g$display-hex$7667$1XjQw
                             (case-lambda
                               ((g$n$7675$1XjQw)
                                (if (<= '0 g$n$7675$1XjQw '9)
                                  (display g$n$7675$1XjQw g$p$7666$1XjQw)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$7675$1XjQw '10)))
                                    g$p$7666$1XjQw))))))
                   (begin
                     ((letrec ((g$f$7668$1XjQw
                                 (case-lambda
                                   ((g$ls$7669$1XjQw)
                                    (if (not (null? g$ls$7669$1XjQw))
                                      (begin
                                        (display '"/" g$p$7666$1XjQw)
                                        (g$for-each$5758$1XjQw
                                          (case-lambda
                                            ((g$c$7670$1XjQw)
                                             (if ((case-lambda
                                                    ((g$t$7671$1XjQw)
                                                     (if g$t$7671$1XjQw
                                                       g$t$7671$1XjQw
                                                       ((case-lambda
                                                          ((g$t$7672$1XjQw)
                                                           (if g$t$7672$1XjQw
                                                             g$t$7672$1XjQw
                                                             ((case-lambda
                                                                ((g$t$7673$1XjQw)
                                                                 (if g$t$7673$1XjQw
                                                                   g$t$7673$1XjQw
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$5750$1XjQw
                                                                       g$c$7670$1XjQw
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$5958$1XjQw
                                                                '#\0
                                                                g$c$7670$1XjQw
                                                                '#\9)))))
                                                        (g$char<=?$5958$1XjQw
                                                          '#\A
                                                          g$c$7670$1XjQw
                                                          '#\Z)))))
                                                  (g$char<=?$5958$1XjQw
                                                    '#\a
                                                    g$c$7670$1XjQw
                                                    '#\z))
                                               (display
                                                 g$c$7670$1XjQw
                                                 g$p$7666$1XjQw)
                                               (begin
                                                 (display '"%" g$p$7666$1XjQw)
                                                 ((case-lambda
                                                    ((g$n$7674$1XjQw)
                                                     (begin
                                                       (g$display-hex$7667$1XjQw
                                                         (g$quotient$6573$1XjQw
                                                           g$n$7674$1XjQw
                                                           '16))
                                                       (g$display-hex$7667$1XjQw
                                                         (g$remainder$6574$1XjQw
                                                           g$n$7674$1XjQw
                                                           '16)))))
                                                  (char->integer
                                                    g$c$7670$1XjQw))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$7669$1XjQw))))
                                        (g$f$7668$1XjQw (cdr g$ls$7669$1XjQw)))
                                      (void))))))
                        g$f$7668$1XjQw)
                      g$x$7660$1XjQw)
                     (g$extract$7665$1XjQw)))))
              g$extract$7664$1XjQw
              g$p$7663$1XjQw)))))))
   (g$file-locator$7623$1XjQw
     g$file-locator$7818$1XjQw
     (g$make-parameter$7295$1XjQw
       (case-lambda
         ((g$x$7676$1XjQw)
          ((case-lambda
             ((g$str$7677$1XjQw)
              ((letrec ((g$f$7678$1XjQw
                          (case-lambda
                            ((g$ls$7679$1XjQw
                               g$exts$7680$1XjQw
                               g$failed-list$7681$1XjQw)
                             (if (null? g$ls$7679$1XjQw)
                               (g$file-locator-resolution-error$7293$1XjQw
                                 g$x$7676$1XjQw
                                 (reverse g$failed-list$7681$1XjQw))
                               (if (null? g$exts$7680$1XjQw)
                                 (g$f$7678$1XjQw
                                   (cdr g$ls$7679$1XjQw)
                                   (g$library-extensions$7621$1XjQw)
                                   g$failed-list$7681$1XjQw)
                                 ((case-lambda
                                    ((g$name$7682$1XjQw)
                                     (if (g$file-exists?$6214$1XjQw
                                           g$name$7682$1XjQw)
                                       g$name$7682$1XjQw
                                       (g$f$7678$1XjQw
                                         g$ls$7679$1XjQw
                                         (cdr g$exts$7680$1XjQw)
                                         (cons
                                           g$name$7682$1XjQw
                                           g$failed-list$7681$1XjQw)))))
                                  (string-append
                                    (car g$ls$7679$1XjQw)
                                    g$str$7677$1XjQw
                                    (car g$exts$7680$1XjQw)))))))))
                 g$f$7678$1XjQw)
               (g$library-path$7620$1XjQw)
               (g$library-extensions$7621$1XjQw)
               '())))
           (g$library-name->file-name$7622$1XjQw g$x$7676$1XjQw))))
       (case-lambda
         ((g$f$7683$1XjQw)
          (if (procedure? g$f$7683$1XjQw)
            g$f$7683$1XjQw
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$7683$1XjQw))))))
   (g$serialize-all$7624$1XjQw
     g$serialize-all$7819$1XjQw
     (case-lambda
       ((g$serialize$7684$1XjQw g$compile$7685$1XjQw)
        (letrec* ((g$library-desc$7686$1XjQw
                    (case-lambda
                      ((g$x$7688$1XjQw)
                       (list
                         (g$library-id$7589$1XjQw g$x$7688$1XjQw)
                         (g$library-name$7590$1XjQw g$x$7688$1XjQw))))))
          (g$for-each$5758$1XjQw
            (case-lambda
              ((g$x$7687$1XjQw)
               (if (g$library-source-file-name$7602$1XjQw g$x$7687$1XjQw)
                 (g$serialize$7684$1XjQw
                   (g$library-source-file-name$7602$1XjQw g$x$7687$1XjQw)
                   (list
                     (g$library-id$7589$1XjQw g$x$7687$1XjQw)
                     (g$library-name$7590$1XjQw g$x$7687$1XjQw)
                     (g$library-version$7591$1XjQw g$x$7687$1XjQw)
                     (g$map$5757$1XjQw
                       g$library-desc$7686$1XjQw
                       (g$library-imp*$7592$1XjQw g$x$7687$1XjQw))
                     (g$map$5757$1XjQw
                       g$library-desc$7686$1XjQw
                       (g$library-vis*$7593$1XjQw g$x$7687$1XjQw))
                     (g$map$5757$1XjQw
                       g$library-desc$7686$1XjQw
                       (g$library-inv*$7594$1XjQw g$x$7687$1XjQw))
                     (g$library-subst$7595$1XjQw g$x$7687$1XjQw)
                     (g$library-env$7596$1XjQw g$x$7687$1XjQw)
                     (g$compile$7685$1XjQw
                       (g$library-visit-code$7599$1XjQw g$x$7687$1XjQw))
                     (g$compile$7685$1XjQw
                       (g$library-invoke-code$7600$1XjQw g$x$7687$1XjQw))
                     (g$library-visible?$7601$1XjQw g$x$7687$1XjQw)))
                 (void))))
            ((g$current-library-collection$7583$1XjQw)))))))
   (g$current-precompiled-library-loader$7625$1XjQw
     g$current-precompiled-library-loader$7820$1XjQw
     (g$make-parameter$7295$1XjQw
       (case-lambda ((g$filename$7689$1XjQw g$sk$7690$1XjQw) '#f))))
   (g$try-load-from-file$7626$1XjQw
     g$try-load-from-file$7821$1XjQw
     (case-lambda
       ((g$filename$7691$1XjQw)
        ((g$current-precompiled-library-loader$7625$1XjQw)
         g$filename$7691$1XjQw
         (case-lambda
           ((g$id$7692$1XjQw
              g$name$7693$1XjQw
              g$ver$7694$1XjQw
              g$imp*$7695$1XjQw
              g$vis*$7696$1XjQw
              g$inv*$7697$1XjQw
              g$exp-subst$7698$1XjQw
              g$exp-env$7699$1XjQw
              g$visit-proc$7700$1XjQw
              g$invoke-proc$7701$1XjQw
              g$visible?$7702$1XjQw)
            ((letrec ((g$f$7703$1XjQw
                        (case-lambda
                          ((g$deps$7704$1XjQw)
                           (if (null? g$deps$7704$1XjQw)
                             (begin
                               (g$install-library$7636$1XjQw
                                 g$id$7692$1XjQw
                                 g$name$7693$1XjQw
                                 g$ver$7694$1XjQw
                                 g$imp*$7695$1XjQw
                                 g$vis*$7696$1XjQw
                                 g$inv*$7697$1XjQw
                                 g$exp-subst$7698$1XjQw
                                 g$exp-env$7699$1XjQw
                                 g$visit-proc$7700$1XjQw
                                 g$invoke-proc$7701$1XjQw
                                 '#f
                                 '#f
                                 g$visible?$7702$1XjQw
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$7705$1XjQw)
                                 ((case-lambda
                                    ((g$label$7706$1XjQw g$dname$7707$1XjQw)
                                     ((case-lambda
                                        ((g$l$7708$1XjQw)
                                         (if (if (g$library?$7587$1XjQw
                                                   g$l$7708$1XjQw)
                                               (begin
                                                 '#f
                                                 (eq? g$label$7706$1XjQw
                                                      (g$library-id$7589$1XjQw
                                                        g$l$7708$1XjQw)))
                                               '#f)
                                           (g$f$7703$1XjQw
                                             (cdr g$deps$7704$1XjQw))
                                           (begin
                                             (g$library-version-mismatch-warning$7292$1XjQw
                                               g$name$7693$1XjQw
                                               g$dname$7707$1XjQw
                                               g$filename$7691$1XjQw)
                                             '#f))))
                                      (g$find-library-by-name$7631$1XjQw
                                        g$dname$7707$1XjQw))))
                                  (car g$d$7705$1XjQw)
                                  (g$cadr$5921$1XjQw g$d$7705$1XjQw))))
                              (car g$deps$7704$1XjQw)))))))
               g$f$7703$1XjQw)
             (append g$imp*$7695$1XjQw g$vis*$7696$1XjQw g$inv*$7697$1XjQw)))
           (g$others$7709$1XjQw '#f))))))
   (g$library-loader$7627$1XjQw
     g$library-loader$7822$1XjQw
     (g$make-parameter$7295$1XjQw
       (case-lambda
         ((g$x$7710$1XjQw)
          ((case-lambda
             ((g$file-name$7711$1XjQw)
              (if (not g$file-name$7711$1XjQw)
                (assertion-violation '#f '"cannot file library" g$x$7710$1XjQw)
                ((case-lambda
                   ((g$t$7712$1XjQw)
                    (if g$t$7712$1XjQw
                      g$t$7712$1XjQw
                      (begin
                        '#f
                        ((g$current-library-expander$7628$1XjQw)
                         (g$read-library-source-file$7294$1XjQw
                           g$file-name$7711$1XjQw)
                         g$file-name$7711$1XjQw
                         (case-lambda
                           ((g$name$7713$1XjQw)
                            (if (not (equal? g$name$7713$1XjQw g$x$7710$1XjQw))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (() (g$open-string-output-port$6983$1XjQw)))
                                  (case-lambda
                                    ((g$p$7716$1XjQw g$e$7717$1XjQw)
                                     ((case-lambda
                                        ((g$e$7718$1XjQw g$p$7719$1XjQw)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$7719$1XjQw)
                                           (write g$x$7710$1XjQw g$p$7719$1XjQw)
                                           (display '" in file " g$p$7719$1XjQw)
                                           (display
                                             g$file-name$7711$1XjQw
                                             g$p$7719$1XjQw)
                                           (display '", found " g$p$7719$1XjQw)
                                           (write
                                             g$name$7713$1XjQw
                                             g$p$7719$1XjQw)
                                           (display '" instead" g$p$7719$1XjQw)
                                           (g$e$7718$1XjQw))))
                                      g$e$7717$1XjQw
                                      g$p$7716$1XjQw)))))
                              (void)))))))))
                 (g$try-load-from-file$7626$1XjQw g$file-name$7711$1XjQw)))))
           ((g$file-locator$7623$1XjQw) g$x$7710$1XjQw))))
       (case-lambda
         ((g$f$7720$1XjQw)
          (if (procedure? g$f$7720$1XjQw)
            g$f$7720$1XjQw
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$7720$1XjQw))))))
   (g$current-library-expander$7628$1XjQw
     g$current-library-expander$7823$1XjQw
     (g$make-parameter$7295$1XjQw
       (case-lambda
         ((g$x$7721$1XjQw)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$7722$1XjQw)
          (if (procedure? g$f$7722$1XjQw)
            g$f$7722$1XjQw
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$7722$1XjQw))))))
   (g$external-pending-libraries$7629$1XjQw
     g$external-pending-libraries$7824$1XjQw
     (g$make-parameter$7295$1XjQw '()))
   (g$find-external-library$7630$1XjQw
     g$find-external-library$7825$1XjQw
     (case-lambda
       ((g$name$7723$1XjQw)
        (begin
          (if (g$member$5751$1XjQw
                g$name$7723$1XjQw
                (g$external-pending-libraries$7629$1XjQw))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$7723$1XjQw)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$7726$1XjQw
                g$external-pending-libraries$7727$1XjQw)
              ((case-lambda
                 ((g$swap$7728$1XjQw)
                  (dynamic-wind
                    g$swap$7728$1XjQw
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$7627$1XjQw) g$name$7723$1XjQw)
                         ((case-lambda
                            ((g$t$7729$1XjQw)
                             (if g$t$7729$1XjQw
                               g$t$7729$1XjQw
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$7723$1XjQw)))))
                          (g$find-library-by$7619$1XjQw
                            (case-lambda
                              ((g$x$7730$1XjQw)
                               (equal?
                                 (g$library-name$7590$1XjQw g$x$7730$1XjQw)
                                 g$name$7723$1XjQw))))))))
                    g$swap$7728$1XjQw)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$7731$1XjQw)
                      (begin
                        (g$external-pending-libraries$7726$1XjQw
                          g$external-pending-libraries$7727$1XjQw)
                        (set! g$external-pending-libraries$7727$1XjQw
                          g$t$7731$1XjQw))))
                   (g$external-pending-libraries$7726$1XjQw)))))))
           g$external-pending-libraries$7629$1XjQw
           (cons
             g$name$7723$1XjQw
             (g$external-pending-libraries$7629$1XjQw)))))))
   (g$find-library-by-name$7631$1XjQw
     g$find-library-by-name$7826$1XjQw
     (case-lambda
       ((g$name$7732$1XjQw)
        ((case-lambda
           ((g$t$7733$1XjQw)
            (if g$t$7733$1XjQw
              g$t$7733$1XjQw
              (begin
                '#f
                (g$find-external-library$7630$1XjQw g$name$7732$1XjQw)))))
         (g$find-library-by$7619$1XjQw
           (case-lambda
             ((g$x$7734$1XjQw)
              (equal?
                (g$library-name$7590$1XjQw g$x$7734$1XjQw)
                g$name$7732$1XjQw))))))))
   (g$library-exists?$7632$1XjQw
     g$library-exists?$7827$1XjQw
     (case-lambda
       ((g$name$7735$1XjQw)
        (if (g$find-library-by$7619$1XjQw
              (case-lambda
                ((g$x$7736$1XjQw)
                 (equal?
                   (g$library-name$7590$1XjQw g$x$7736$1XjQw)
                   g$name$7735$1XjQw))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$7633$1XjQw
     g$find-library-by-spec/die$7828$1XjQw
     (case-lambda
       ((g$spec$7737$1XjQw)
        ((case-lambda
           ((g$id$7738$1XjQw)
            ((case-lambda
               ((g$t$7739$1XjQw)
                (if g$t$7739$1XjQw
                  g$t$7739$1XjQw
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$7737$1XjQw)))))
             (g$find-library-by$7619$1XjQw
               (case-lambda
                 ((g$x$7740$1XjQw)
                  (eq? g$id$7738$1XjQw
                       (g$library-id$7589$1XjQw g$x$7740$1XjQw))))))))
         (car g$spec$7737$1XjQw)))))
   (g$label->binding-table$7634$1XjQw
     g$label->binding-table$7829$1XjQw
     (g$make-eq-hashtable$6195$1XjQw))
   (g$install-library-record$7635$1XjQw
     g$install-library-record$7830$1XjQw
     (case-lambda
       ((g$lib$7741$1XjQw)
        (begin
          ((case-lambda
             ((g$exp-env$7742$1XjQw)
              (g$for-each$5758$1XjQw
                (case-lambda
                  ((g$x$7743$1XjQw)
                   ((case-lambda
                      ((g$label$7744$1XjQw g$binding$7745$1XjQw)
                       ((case-lambda
                          ((g$binding$7746$1XjQw)
                           (g$hashtable-set!$6199$1XjQw
                             g$label->binding-table$7634$1XjQw
                             g$label$7744$1XjQw
                             g$binding$7746$1XjQw)))
                        ((case-lambda
                           ((g$t$7747$1XjQw)
                            (if (g$memv$5750$1XjQw g$t$7747$1XjQw '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$7741$1XjQw
                                  (cdr g$binding$7745$1XjQw)))
                              (if (g$memv$5750$1XjQw
                                    g$t$7747$1XjQw
                                    '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$7741$1XjQw
                                    (cdr g$binding$7745$1XjQw)))
                                (if (g$memv$5750$1XjQw
                                      g$t$7747$1XjQw
                                      '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$7741$1XjQw
                                      (cdr g$binding$7745$1XjQw)))
                                  g$binding$7745$1XjQw)))))
                         (car g$binding$7745$1XjQw)))))
                    (car g$x$7743$1XjQw)
                    (cdr g$x$7743$1XjQw))))
                g$exp-env$7742$1XjQw)))
           (g$library-env$7596$1XjQw g$lib$7741$1XjQw))
          ((g$current-library-collection$7583$1XjQw) g$lib$7741$1XjQw)))))
   (g$install-library$7636$1XjQw
     g$install-library$7831$1XjQw
     (case-lambda
       ((g$id$7748$1XjQw
          g$name$7749$1XjQw
          g$ver$7750$1XjQw
          g$imp*$7751$1XjQw
          g$vis*$7752$1XjQw
          g$inv*$7753$1XjQw
          g$exp-subst$7754$1XjQw
          g$exp-env$7755$1XjQw
          g$visit-proc$7756$1XjQw
          g$invoke-proc$7757$1XjQw
          g$visit-code$7758$1XjQw
          g$invoke-code$7759$1XjQw
          g$visible?$7760$1XjQw
          g$source-file-name$7761$1XjQw)
        ((case-lambda
           ((g$imp-lib*$7762$1XjQw g$vis-lib*$7763$1XjQw g$inv-lib*$7764$1XjQw)
            (begin
              (if (not (if (symbol? g$id$7748$1XjQw)
                         (if (list? g$name$7749$1XjQw)
                           (begin '#f (list? g$ver$7750$1XjQw))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$7748$1XjQw
                  g$name$7749$1XjQw
                  g$ver$7750$1XjQw)
                (void))
              (if (g$library-exists?$7632$1XjQw g$name$7749$1XjQw)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$7749$1XjQw)
                (void))
              ((case-lambda
                 ((g$lib$7765$1XjQw)
                  (g$install-library-record$7635$1XjQw g$lib$7765$1XjQw)))
               (g$make-library$7588$1XjQw
                 g$id$7748$1XjQw
                 g$name$7749$1XjQw
                 g$ver$7750$1XjQw
                 g$imp-lib*$7762$1XjQw
                 g$vis-lib*$7763$1XjQw
                 g$inv-lib*$7764$1XjQw
                 g$exp-subst$7754$1XjQw
                 g$exp-env$7755$1XjQw
                 g$visit-proc$7756$1XjQw
                 g$invoke-proc$7757$1XjQw
                 g$visit-code$7758$1XjQw
                 g$invoke-code$7759$1XjQw
                 g$visible?$7760$1XjQw
                 g$source-file-name$7761$1XjQw)))))
         (g$map$5757$1XjQw
           g$find-library-by-spec/die$7633$1XjQw
           g$imp*$7751$1XjQw)
         (g$map$5757$1XjQw
           g$find-library-by-spec/die$7633$1XjQw
           g$vis*$7752$1XjQw)
         (g$map$5757$1XjQw
           g$find-library-by-spec/die$7633$1XjQw
           g$inv*$7753$1XjQw)))))
   (g$imported-label->binding$7637$1XjQw
     g$imported-label->binding$7832$1XjQw
     (case-lambda
       ((g$lab$7766$1XjQw)
        (g$hashtable-ref$6198$1XjQw
          g$label->binding-table$7634$1XjQw
          g$lab$7766$1XjQw
          '#f))))
   (g$invoke-library$7638$1XjQw
     g$invoke-library$7833$1XjQw
     (case-lambda
       ((g$lib$7767$1XjQw)
        ((case-lambda
           ((g$invoke$7768$1XjQw)
            (if (procedure? g$invoke$7768$1XjQw)
              (begin
                (g$set-library-invoke-state!$7612$1XjQw
                  g$lib$7767$1XjQw
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7767$1XjQw))))
                (g$for-each$5758$1XjQw
                  g$invoke-library$7638$1XjQw
                  (g$library-inv*$7594$1XjQw g$lib$7767$1XjQw))
                (g$set-library-invoke-state!$7612$1XjQw
                  g$lib$7767$1XjQw
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7767$1XjQw))))
                (g$invoke$7768$1XjQw)
                (g$set-library-invoke-state!$7612$1XjQw g$lib$7767$1XjQw '#t))
              (void))))
         (g$library-invoke-state$7598$1XjQw g$lib$7767$1XjQw)))))
   (g$visit-library$7639$1XjQw
     g$visit-library$7834$1XjQw
     (case-lambda
       ((g$lib$7769$1XjQw)
        ((case-lambda
           ((g$visit$7770$1XjQw)
            (if (procedure? g$visit$7770$1XjQw)
              (begin
                (g$set-library-visit-state!$7611$1XjQw
                  g$lib$7769$1XjQw
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7769$1XjQw))))
                (g$for-each$5758$1XjQw
                  g$invoke-library$7638$1XjQw
                  (g$library-vis*$7593$1XjQw g$lib$7769$1XjQw))
                (g$set-library-visit-state!$7611$1XjQw
                  g$lib$7769$1XjQw
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7769$1XjQw))))
                (g$visit$7770$1XjQw)
                (g$set-library-visit-state!$7611$1XjQw g$lib$7769$1XjQw '#t))
              (void))))
         (g$library-visit-state$7597$1XjQw g$lib$7769$1XjQw)))))
   (g$invoke-library-by-spec$7640$1XjQw
     g$invoke-library-by-spec$7835$1XjQw
     (case-lambda
       ((g$spec$7771$1XjQw)
        (g$invoke-library$7638$1XjQw
          (g$find-library-by-spec/die$7633$1XjQw g$spec$7771$1XjQw)))))
   (g$installed-libraries$7641$1XjQw
     g$installed-libraries$7836$1XjQw
     (case-lambda
       ((g$all?$7772$1XjQw)
        ((letrec ((g$f$7773$1XjQw
                    (case-lambda
                      ((g$ls$7774$1XjQw)
                       (if (null? g$ls$7774$1XjQw)
                         '()
                         (if ((case-lambda
                                ((g$t$7775$1XjQw)
                                 (if g$t$7775$1XjQw
                                   g$t$7775$1XjQw
                                   (begin
                                     '#f
                                     (g$library-visible?$7601$1XjQw
                                       (car g$ls$7774$1XjQw))))))
                              g$all?$7772$1XjQw)
                           (cons
                             (car g$ls$7774$1XjQw)
                             (g$f$7773$1XjQw (cdr g$ls$7774$1XjQw)))
                           (g$f$7773$1XjQw (cdr g$ls$7774$1XjQw))))))))
           g$f$7773$1XjQw)
         ((g$current-library-collection$7583$1XjQw))))
       (() (g$installed-libraries$7641$1XjQw '#f))))
   (g$library-spec$7642$1XjQw
     g$library-spec$7837$1XjQw
     (case-lambda
       ((g$x$7776$1XjQw)
        (begin
          (if (not (g$library?$7587$1XjQw g$x$7776$1XjQw))
            (assertion-violation 'library-spec '"not a library" g$x$7776$1XjQw)
            (void))
          (list
            (g$library-id$7589$1XjQw g$x$7776$1XjQw)
            (g$library-name$7590$1XjQw g$x$7776$1XjQw)
            (g$library-version$7591$1XjQw g$x$7776$1XjQw)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7838$1XjQw
     g$build-global-define$7948$1XjQw
     (case-lambda ((g$x$7919$1XjQw) (g$build-void$7915$1XjQw))))
   (g$build-lambda$7887$1XjQw
     g$build-lambda$7949$1XjQw
     (case-lambda
       ((g$ae$7920$1XjQw g$vars$7921$1XjQw g$exp$7922$1XjQw)
        (list 'case-lambda (list g$vars$7921$1XjQw g$exp$7922$1XjQw)))))
   (g$build-case-lambda$7888$1XjQw
     g$build-case-lambda$7950$1XjQw
     (case-lambda
       ((g$ae$7923$1XjQw g$vars*$7924$1XjQw g$exp*$7925$1XjQw)
        (cons
          'case-lambda
          (g$map$5757$1XjQw list g$vars*$7924$1XjQw g$exp*$7925$1XjQw)))))
   (g$build-let$7889$1XjQw
     g$build-let$7951$1XjQw
     (case-lambda
       ((g$ae$7926$1XjQw g$lhs*$7927$1XjQw g$rhs*$7928$1XjQw g$body$7929$1XjQw)
        (cons
          (g$build-lambda$7887$1XjQw
            g$ae$7926$1XjQw
            g$lhs*$7927$1XjQw
            g$body$7929$1XjQw)
          g$rhs*$7928$1XjQw))))
   (g$build-sequence$7914$1XjQw
     g$build-sequence$7952$1XjQw
     (case-lambda
       ((g$ae$7930$1XjQw g$exps$7931$1XjQw)
        ((letrec ((g$loop$7932$1XjQw
                    (case-lambda
                      ((g$exps$7933$1XjQw)
                       (if (null? (cdr g$exps$7933$1XjQw))
                         (car g$exps$7933$1XjQw)
                         (if (equal?
                               (car g$exps$7933$1XjQw)
                               (g$build-void$7915$1XjQw))
                           (g$loop$7932$1XjQw (cdr g$exps$7933$1XjQw))
                           (cons 'begin g$exps$7933$1XjQw)))))))
           g$loop$7932$1XjQw)
         g$exps$7931$1XjQw))))
   (g$build-void$7915$1XjQw
     g$build-void$7953$1XjQw
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7916$1XjQw
     g$build-letrec$7954$1XjQw
     (case-lambda
       ((g$ae$7934$1XjQw
          g$vars$7935$1XjQw
          g$val-exps$7936$1XjQw
          g$body-exp$7937$1XjQw)
        (if (null? g$vars$7935$1XjQw)
          g$body-exp$7937$1XjQw
          (list
            'letrec
            (g$map$5757$1XjQw list g$vars$7935$1XjQw g$val-exps$7936$1XjQw)
            g$body-exp$7937$1XjQw)))))
   (g$build-letrec*$7917$1XjQw
     g$build-letrec*$7955$1XjQw
     (case-lambda
       ((g$ae$7938$1XjQw
          g$vars$7939$1XjQw
          g$val-exps$7940$1XjQw
          g$body-exp$7941$1XjQw)
        (if (null? g$vars$7939$1XjQw)
          g$body-exp$7941$1XjQw
          (list
            'letrec*
            (g$map$5757$1XjQw list g$vars$7939$1XjQw g$val-exps$7940$1XjQw)
            g$body-exp$7941$1XjQw)))))
   (g$build-library-letrec*$7918$1XjQw
     g$build-library-letrec*$7956$1XjQw
     (case-lambda
       ((g$ae$7942$1XjQw
          g$name$7943$1XjQw
          g$vars$7944$1XjQw
          g$locs$7945$1XjQw
          g$val-exps$7946$1XjQw
          g$body-exp$7947$1XjQw)
        (list
          'library-letrec*
          g$name$7943$1XjQw
          (g$map$5757$1XjQw
            list
            g$vars$7944$1XjQw
            g$locs$7945$1XjQw
            g$val-exps$7946$1XjQw)
          g$body-exp$7947$1XjQw)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7957$1XjQw
     g$set-cons$11641$1XjQw
     (case-lambda
       ((g$x$8420$1XjQw g$ls$8421$1XjQw)
        (if (g$memq$5749$1XjQw g$x$8420$1XjQw g$ls$8421$1XjQw)
          g$ls$8421$1XjQw
          (cons g$x$8420$1XjQw g$ls$8421$1XjQw)))))
   (g$set-union$7958$1XjQw
     g$set-union$11642$1XjQw
     (case-lambda
       ((g$ls1$8422$1XjQw g$ls2$8423$1XjQw)
        (if (null? g$ls1$8422$1XjQw)
          g$ls2$8423$1XjQw
          (if (g$memq$5749$1XjQw (car g$ls1$8422$1XjQw) g$ls2$8423$1XjQw)
            (g$set-union$7958$1XjQw (cdr g$ls1$8422$1XjQw) g$ls2$8423$1XjQw)
            (cons
              (car g$ls1$8422$1XjQw)
              (g$set-union$7958$1XjQw
                (cdr g$ls1$8422$1XjQw)
                g$ls2$8423$1XjQw)))))))
   (g$top-mark*$7960$1XjQw g$top-mark*$11643$1XjQw '(top))
   (g$top-marked?$7961$1XjQw
     g$top-marked?$11644$1XjQw
     (case-lambda
       ((g$m*$8424$1XjQw) (g$memq$5749$1XjQw 'top g$m*$8424$1XjQw))))
   (g$gen-lexical$7962$1XjQw
     g$gen-lexical$11645$1XjQw
     (case-lambda
       ((g$sym$8425$1XjQw)
        (if (symbol? g$sym$8425$1XjQw)
          (gensym g$sym$8425$1XjQw)
          (if (g$stx?$7995$1XjQw g$sym$8425$1XjQw)
            (g$gen-lexical$7962$1XjQw (g$id->sym$8024$1XjQw g$sym$8425$1XjQw))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$8425$1XjQw))))))
   (g$gen-global$7963$1XjQw
     g$gen-global$11646$1XjQw
     (case-lambda
       ((g$x$8426$1XjQw) (g$gen-lexical$7962$1XjQw g$x$8426$1XjQw))))
   (g$gen-label$7964$1XjQw
     g$gen-label$11647$1XjQw
     (case-lambda ((g$_$8427$1XjQw) (gensym))))
   (g$gen-top-level-label$7965$1XjQw
     g$gen-top-level-label$11648$1XjQw
     (case-lambda
       ((g$id$8428$1XjQw g$rib$8429$1XjQw)
        (letrec* ((g$find$8430$1XjQw
                    (case-lambda
                      ((g$sym$8436$1XjQw
                         g$mark*$8437$1XjQw
                         g$sym*$8438$1XjQw
                         g$mark**$8439$1XjQw
                         g$label*$8440$1XjQw)
                       (if (pair? g$sym*$8438$1XjQw)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8436$1XjQw
                                        (car g$sym*$8438$1XjQw))
                                 (begin
                                   '#f
                                   (g$same-marks?$8025$1XjQw
                                     g$mark*$8437$1XjQw
                                     (car g$mark**$8439$1XjQw)))
                                 '#f)
                             (car g$label*$8440$1XjQw)
                             (g$find$8430$1XjQw
                               g$sym$8436$1XjQw
                               g$mark*$8437$1XjQw
                               (cdr g$sym*$8438$1XjQw)
                               (cdr g$mark**$8439$1XjQw)
                               (cdr g$label*$8440$1XjQw))))
                         '#f)))))
          ((case-lambda
             ((g$sym$8431$1XjQw g$mark*$8432$1XjQw)
              ((case-lambda
                 ((g$sym*$8433$1XjQw)
                  ((case-lambda
                     ((g$t$8434$1XjQw)
                      (if g$t$8434$1XjQw
                        ((case-lambda
                           ((g$label$8435$1XjQw)
                            (if (g$imported-label->binding$7832$1XjQw
                                  g$label$8435$1XjQw)
                              (gensym)
                              g$label$8435$1XjQw)))
                         g$t$8434$1XjQw)
                        (gensym))))
                   (if (g$memq$5749$1XjQw
                         g$sym$8431$1XjQw
                         (g$rib-sym*$7973$1XjQw g$rib$8429$1XjQw))
                     (begin
                       '#f
                       (g$find$8430$1XjQw
                         g$sym$8431$1XjQw
                         g$mark*$8432$1XjQw
                         g$sym*$8433$1XjQw
                         (g$rib-mark**$7974$1XjQw g$rib$8429$1XjQw)
                         (g$rib-label*$7975$1XjQw g$rib$8429$1XjQw)))
                     '#f))))
               (g$rib-sym*$7973$1XjQw g$rib$8429$1XjQw))))
           (g$id->sym$8024$1XjQw g$id$8428$1XjQw)
           (g$stx-mark*$7998$1XjQw g$id$8428$1XjQw))))))
   (g$gen-define-label+loc$7966$1XjQw
     g$gen-define-label+loc$11649$1XjQw
     (case-lambda
       ((g$id$8441$1XjQw g$rib$8442$1XjQw)
        ((case-lambda
           ((g$t$8443$1XjQw)
            (if g$t$8443$1XjQw
              ((case-lambda
                 ((g$env$8444$1XjQw)
                  ((case-lambda
                     ((g$label$8445$1XjQw g$locs$8446$1XjQw)
                      (values
                        g$label$8445$1XjQw
                        ((case-lambda
                           ((g$t$8447$1XjQw)
                            (if g$t$8447$1XjQw
                              (cdr g$t$8447$1XjQw)
                              ((case-lambda
                                 ((g$loc$8448$1XjQw)
                                  (begin
                                    (g$set-interaction-env-locs!$8384$1XjQw
                                      g$env$8444$1XjQw
                                      (cons
                                        (cons
                                          g$label$8445$1XjQw
                                          g$loc$8448$1XjQw)
                                        g$locs$8446$1XjQw))
                                    g$loc$8448$1XjQw)))
                               (g$gen-lexical$7962$1XjQw g$id$8441$1XjQw)))))
                         (g$assq$5745$1XjQw
                           g$label$8445$1XjQw
                           g$locs$8446$1XjQw)))))
                   (g$gen-top-level-label$7965$1XjQw
                     g$id$8441$1XjQw
                     g$rib$8442$1XjQw)
                   (g$interaction-env-locs$8381$1XjQw g$env$8444$1XjQw))))
               g$t$8443$1XjQw)
              (values (gensym) (g$gen-lexical$7962$1XjQw g$id$8441$1XjQw)))))
         (g$top-level-context$8419$1XjQw)))))
   (g$gen-define-label$7967$1XjQw
     g$gen-define-label$11650$1XjQw
     (case-lambda
       ((g$id$8449$1XjQw g$rib$8450$1XjQw)
        (if (g$top-level-context$8419$1XjQw)
          (g$gen-top-level-label$7965$1XjQw g$id$8449$1XjQw g$rib$8450$1XjQw)
          (gensym)))))
   (g$9043$7968$1XjQw
     g$9043$11651$1XjQw
     (make-record-type-descriptor
       'rib
       '#f
       'g$9046$1XjQw
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$9045$7969$1XjQw g$9045$11652$1XjQw '#f)
   (g$9044$7970$1XjQw
     g$9044$11653$1XjQw
     (make-record-constructor-descriptor
       g$9043$7968$1XjQw
       '#f
       g$9045$7969$1XjQw))
   (g$rib?$7971$1XjQw
     g$rib?$11654$1XjQw
     (record-predicate g$9043$7968$1XjQw))
   (g$make-rib$7972$1XjQw
     g$make-rib$11655$1XjQw
     (record-constructor g$9044$7970$1XjQw))
   (g$rib-sym*$7973$1XjQw
     g$rib-sym*$11656$1XjQw
     (record-accessor g$9043$7968$1XjQw '0))
   (g$rib-mark**$7974$1XjQw
     g$rib-mark**$11657$1XjQw
     (record-accessor g$9043$7968$1XjQw '1))
   (g$rib-label*$7975$1XjQw
     g$rib-label*$11658$1XjQw
     (record-accessor g$9043$7968$1XjQw '2))
   (g$rib-sealed/freq$7976$1XjQw
     g$rib-sealed/freq$11659$1XjQw
     (record-accessor g$9043$7968$1XjQw '3))
   (g$rib-cache$7977$1XjQw
     g$rib-cache$11660$1XjQw
     (record-accessor g$9043$7968$1XjQw '4))
   (g$set-rib-sym*!$7978$1XjQw
     g$set-rib-sym*!$11661$1XjQw
     (record-mutator g$9043$7968$1XjQw '0))
   (g$set-rib-mark**!$7979$1XjQw
     g$set-rib-mark**!$11662$1XjQw
     (record-mutator g$9043$7968$1XjQw '1))
   (g$set-rib-label*!$7980$1XjQw
     g$set-rib-label*!$11663$1XjQw
     (record-mutator g$9043$7968$1XjQw '2))
   (g$set-rib-sealed/freq!$7981$1XjQw
     g$set-rib-sealed/freq!$11664$1XjQw
     (record-mutator g$9043$7968$1XjQw '3))
   (g$set-rib-cache!$7982$1XjQw
     g$set-rib-cache!$11665$1XjQw
     (record-mutator g$9043$7968$1XjQw '4))
   (g$make-empty-rib$7983$1XjQw
     g$make-empty-rib$11666$1XjQw
     (case-lambda (() (g$make-rib$7972$1XjQw '() '() '() '#f '#f))))
   (g$make-cache-rib$7984$1XjQw
     g$make-cache-rib$11667$1XjQw
     (case-lambda
       (()
        (g$make-rib$7972$1XjQw
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$6195$1XjQw)))))
   (g$find-label$7985$1XjQw
     g$find-label$11668$1XjQw
     (case-lambda
       ((g$rib$8451$1XjQw g$sym$8452$1XjQw g$mark*$8453$1XjQw)
        ((case-lambda
           ((g$ht$8454$1XjQw)
            (if g$ht$8454$1XjQw
              (begin
                '#f
                ((case-lambda
                   ((g$cv$8455$1XjQw)
                    ((case-lambda
                       ((g$t$8456$1XjQw)
                        (if g$t$8456$1XjQw (cdr g$t$8456$1XjQw) '#f)))
                     (if g$cv$8455$1XjQw
                       (begin
                         '#f
                         (g$assp$5748$1XjQw
                           (case-lambda
                             ((g$m$8457$1XjQw)
                              (g$same-marks?$8025$1XjQw
                                g$mark*$8453$1XjQw
                                g$m$8457$1XjQw)))
                           g$cv$8455$1XjQw))
                       '#f))))
                 (g$hashtable-ref$6198$1XjQw
                   g$ht$8454$1XjQw
                   g$sym$8452$1XjQw
                   '#f)))
              '#f)))
         (g$rib-cache$7977$1XjQw g$rib$8451$1XjQw)))))
   (g$extend-rib!$7986$1XjQw
     g$extend-rib!$11669$1XjQw
     (case-lambda
       ((g$rib$8458$1XjQw g$id$8459$1XjQw g$label$8460$1XjQw)
        (letrec* ((g$find$8461$1XjQw
                    (case-lambda
                      ((g$sym$8470$1XjQw
                         g$mark*$8471$1XjQw
                         g$sym*$8472$1XjQw
                         g$mark**$8473$1XjQw
                         g$label*$8474$1XjQw)
                       (if (pair? g$sym*$8472$1XjQw)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8470$1XjQw
                                        (car g$sym*$8472$1XjQw))
                                 (begin
                                   '#f
                                   (g$same-marks?$8025$1XjQw
                                     g$mark*$8471$1XjQw
                                     (car g$mark**$8473$1XjQw)))
                                 '#f)
                             g$label*$8474$1XjQw
                             (g$find$8461$1XjQw
                               g$sym$8470$1XjQw
                               g$mark*$8471$1XjQw
                               (cdr g$sym*$8472$1XjQw)
                               (cdr g$mark**$8473$1XjQw)
                               (cdr g$label*$8474$1XjQw))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7976$1XjQw g$rib$8458$1XjQw)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$8458$1XjQw)
              (void))
            ((case-lambda
               ((g$sym$8462$1XjQw g$mark*$8463$1XjQw)
                ((case-lambda
                   ((g$sym*$8464$1XjQw)
                    ((case-lambda
                       ((g$t$8465$1XjQw)
                        (if g$t$8465$1XjQw
                          ((case-lambda
                             ((g$p$8466$1XjQw)
                              (if (not (eq? g$label$8460$1XjQw g$p$8466$1XjQw))
                                (g$syntax-violation$8412$1XjQw
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$8459$1XjQw)
                                (void))))
                           g$t$8465$1XjQw)
                          ((case-lambda
                             ((g$t$8467$1XjQw)
                              (if g$t$8467$1XjQw
                                ((case-lambda
                                   ((g$p$8468$1XjQw)
                                    (if (not (eq? g$label$8460$1XjQw
                                                  (car g$p$8468$1XjQw)))
                                      (if (g$top-level-context$8419$1XjQw)
                                        (set-car!
                                          g$p$8468$1XjQw
                                          g$label$8460$1XjQw)
                                        (g$syntax-violation$8412$1XjQw
                                          '#f
                                          '"multiple definitions of identifier"
                                          g$id$8459$1XjQw))
                                      (void))))
                                 g$t$8467$1XjQw)
                                (begin
                                  (if (g$rib-cache$7977$1XjQw g$rib$8458$1XjQw)
                                    (g$hashtable-update!$6202$1XjQw
                                      (g$rib-cache$7977$1XjQw g$rib$8458$1XjQw)
                                      g$sym$8462$1XjQw
                                      (case-lambda
                                        ((g$e$8469$1XjQw)
                                         (cons
                                           (cons
                                             g$mark*$8463$1XjQw
                                             g$label$8460$1XjQw)
                                           g$e$8469$1XjQw)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$7978$1XjQw
                                    g$rib$8458$1XjQw
                                    (cons g$sym$8462$1XjQw g$sym*$8464$1XjQw))
                                  (g$set-rib-mark**!$7979$1XjQw
                                    g$rib$8458$1XjQw
                                    (cons
                                      g$mark*$8463$1XjQw
                                      (g$rib-mark**$7974$1XjQw
                                        g$rib$8458$1XjQw)))
                                  (g$set-rib-label*!$7980$1XjQw
                                    g$rib$8458$1XjQw
                                    (cons
                                      g$label$8460$1XjQw
                                      (g$rib-label*$7975$1XjQw
                                        g$rib$8458$1XjQw)))))))
                           (if (g$memq$5749$1XjQw
                                 g$sym$8462$1XjQw
                                 (g$rib-sym*$7973$1XjQw g$rib$8458$1XjQw))
                             (begin
                               '#f
                               (g$find$8461$1XjQw
                                 g$sym$8462$1XjQw
                                 g$mark*$8463$1XjQw
                                 g$sym*$8464$1XjQw
                                 (g$rib-mark**$7974$1XjQw g$rib$8458$1XjQw)
                                 (g$rib-label*$7975$1XjQw g$rib$8458$1XjQw)))
                             '#f)))))
                     (g$find-label$7985$1XjQw
                       g$rib$8458$1XjQw
                       g$sym$8462$1XjQw
                       g$mark*$8463$1XjQw))))
                 (g$rib-sym*$7973$1XjQw g$rib$8458$1XjQw))))
             (g$id->sym$8024$1XjQw g$id$8459$1XjQw)
             (g$stx-mark*$7998$1XjQw g$id$8459$1XjQw)))))))
   (g$extend-rib/nc!$7987$1XjQw
     g$extend-rib/nc!$11670$1XjQw
     (case-lambda
       ((g$rib$8475$1XjQw g$id$8476$1XjQw g$label$8477$1XjQw)
        ((case-lambda
           ((g$sym$8478$1XjQw g$mark*$8479$1XjQw)
            ((case-lambda
               ((g$sym*$8480$1XjQw)
                (begin
                  (if (g$rib-cache$7977$1XjQw g$rib$8475$1XjQw)
                    (g$hashtable-update!$6202$1XjQw
                      (g$rib-cache$7977$1XjQw g$rib$8475$1XjQw)
                      g$sym$8478$1XjQw
                      (case-lambda
                        ((g$e$8481$1XjQw)
                         (cons
                           (cons g$mark*$8479$1XjQw g$label$8477$1XjQw)
                           g$e$8481$1XjQw)))
                      '())
                    (void))
                  (g$set-rib-sym*!$7978$1XjQw
                    g$rib$8475$1XjQw
                    (cons g$sym$8478$1XjQw g$sym*$8480$1XjQw))
                  (g$set-rib-mark**!$7979$1XjQw
                    g$rib$8475$1XjQw
                    (cons
                      g$mark*$8479$1XjQw
                      (g$rib-mark**$7974$1XjQw g$rib$8475$1XjQw)))
                  (g$set-rib-label*!$7980$1XjQw
                    g$rib$8475$1XjQw
                    (cons
                      g$label$8477$1XjQw
                      (g$rib-label*$7975$1XjQw g$rib$8475$1XjQw))))))
             (g$rib-sym*$7973$1XjQw g$rib$8475$1XjQw))))
         (g$id->sym$8024$1XjQw g$id$8476$1XjQw)
         (g$stx-mark*$7998$1XjQw g$id$8476$1XjQw)))))
   (g$make-rib-map$7988$1XjQw
     g$make-rib-map$11671$1XjQw
     (case-lambda
       ((g$sym*$8482$1XjQw)
        ((case-lambda
           ((g$ht$8483$1XjQw)
            ((letrec ((g$f$8484$1XjQw
                        (case-lambda
                          ((g$i$8485$1XjQw g$sym*$8486$1XjQw)
                           (if (null? g$sym*$8486$1XjQw)
                             g$ht$8483$1XjQw
                             (begin
                               (g$hashtable-update!$6202$1XjQw
                                 g$ht$8483$1XjQw
                                 (car g$sym*$8486$1XjQw)
                                 (case-lambda
                                   ((g$x$8487$1XjQw)
                                    (cons g$i$8485$1XjQw g$x$8487$1XjQw)))
                                 '())
                               (g$f$8484$1XjQw
                                 (+ g$i$8485$1XjQw '1)
                                 (cdr g$sym*$8486$1XjQw))))))))
               g$f$8484$1XjQw)
             '0
             g$sym*$8482$1XjQw)))
         (g$make-eq-hashtable$6195$1XjQw)))))
   (g$seal-rib!$7989$1XjQw
     g$seal-rib!$11672$1XjQw
     (case-lambda
       ((g$rib$8488$1XjQw)
        ((case-lambda
           ((g$sym*$8489$1XjQw)
            (if (not (null? g$sym*$8489$1XjQw))
              (begin
                (g$set-rib-sym*!$7978$1XjQw
                  g$rib$8488$1XjQw
                  (list->vector g$sym*$8489$1XjQw))
                (g$set-rib-mark**!$7979$1XjQw
                  g$rib$8488$1XjQw
                  (list->vector (g$rib-mark**$7974$1XjQw g$rib$8488$1XjQw)))
                (g$set-rib-label*!$7980$1XjQw
                  g$rib$8488$1XjQw
                  (list->vector (g$rib-label*$7975$1XjQw g$rib$8488$1XjQw)))
                (g$set-rib-sealed/freq!$7981$1XjQw
                  g$rib$8488$1XjQw
                  (g$make-rib-map$7988$1XjQw g$sym*$8489$1XjQw)))
              (void))))
         (g$rib-sym*$7973$1XjQw g$rib$8488$1XjQw)))))
   (g$unseal-rib!$7990$1XjQw
     g$unseal-rib!$11673$1XjQw
     (case-lambda
       ((g$rib$8490$1XjQw)
        (if (g$rib-sealed/freq$7976$1XjQw g$rib$8490$1XjQw)
          (begin
            (g$set-rib-sealed/freq!$7981$1XjQw g$rib$8490$1XjQw '#f)
            (g$set-rib-sym*!$7978$1XjQw
              g$rib$8490$1XjQw
              (vector->list (g$rib-sym*$7973$1XjQw g$rib$8490$1XjQw)))
            (g$set-rib-mark**!$7979$1XjQw
              g$rib$8490$1XjQw
              (vector->list (g$rib-mark**$7974$1XjQw g$rib$8490$1XjQw)))
            (g$set-rib-label*!$7980$1XjQw
              g$rib$8490$1XjQw
              (vector->list (g$rib-label*$7975$1XjQw g$rib$8490$1XjQw))))
          (void)))))
   (g$make-full-rib$7991$1XjQw
     g$make-full-rib$11674$1XjQw
     (case-lambda
       ((g$id*$8491$1XjQw g$label*$8492$1XjQw)
        ((case-lambda
           ((g$r$8493$1XjQw)
            (begin (g$seal-rib!$7989$1XjQw g$r$8493$1XjQw) g$r$8493$1XjQw)))
         (g$make-rib$7972$1XjQw
           (g$map$5757$1XjQw g$id->sym$8024$1XjQw g$id*$8491$1XjQw)
           (g$map$5757$1XjQw g$stx-mark*$7998$1XjQw g$id*$8491$1XjQw)
           g$label*$8492$1XjQw
           '#f
           '#f)))))
   (g$9074$7992$1XjQw
     g$9074$11675$1XjQw
     (make-record-type-descriptor
       'stx
       '#f
       'g$9077$1XjQw
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$9076$7993$1XjQw g$9076$11676$1XjQw '#f)
   (g$9075$7994$1XjQw
     g$9075$11677$1XjQw
     (make-record-constructor-descriptor
       g$9074$7992$1XjQw
       '#f
       g$9076$7993$1XjQw))
   (g$stx?$7995$1XjQw
     g$stx?$11678$1XjQw
     (record-predicate g$9074$7992$1XjQw))
   (g$make-stx$7996$1XjQw
     g$make-stx$11679$1XjQw
     (record-constructor g$9075$7994$1XjQw))
   (g$stx-expr$7997$1XjQw
     g$stx-expr$11680$1XjQw
     (record-accessor g$9074$7992$1XjQw '0))
   (g$stx-mark*$7998$1XjQw
     g$stx-mark*$11681$1XjQw
     (record-accessor g$9074$7992$1XjQw '1))
   (g$stx-subst*$7999$1XjQw
     g$stx-subst*$11682$1XjQw
     (record-accessor g$9074$7992$1XjQw '2))
   (g$stx-ae*$8000$1XjQw
     g$stx-ae*$11683$1XjQw
     (record-accessor g$9074$7992$1XjQw '3))
   (g$set-stx-expr!$8001$1XjQw
     g$set-stx-expr!$11684$1XjQw
     (record-mutator g$9074$7992$1XjQw '0))
   (g$set-stx-mark*!$8002$1XjQw
     g$set-stx-mark*!$11685$1XjQw
     (record-mutator g$9074$7992$1XjQw '1))
   (g$set-stx-subst*!$8003$1XjQw
     g$set-stx-subst*!$11686$1XjQw
     (record-mutator g$9074$7992$1XjQw '2))
   (g$set-stx-ae*!$8004$1XjQw
     g$set-stx-ae*!$11687$1XjQw
     (record-mutator g$9074$7992$1XjQw '3))
   (g$rp$8005$1XjQw
     g$rp$11688$1XjQw
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$8494$1XjQw g$p$8495$1XjQw g$wr$8496$1XjQw)
          (begin
            (display '"#<syntax " g$p$8495$1XjQw)
            (write (g$stx->datum$8034$1XjQw g$x$8494$1XjQw) g$p$8495$1XjQw)
            ((case-lambda
               ((g$expr$8497$1XjQw)
                (if (annotation? g$expr$8497$1XjQw)
                  ((case-lambda
                     ((g$src$8498$1XjQw)
                      (if (pair? g$src$8498$1XjQw)
                        (begin
                          (display '" (" g$p$8495$1XjQw)
                          (display (cdr g$src$8498$1XjQw) g$p$8495$1XjQw)
                          (display '" of " g$p$8495$1XjQw)
                          (display (car g$src$8498$1XjQw) g$p$8495$1XjQw)
                          (display '")" g$p$8495$1XjQw))
                        (void))))
                   (annotation-source g$expr$8497$1XjQw))
                  (void))))
             (g$stx-expr$7997$1XjQw g$x$8494$1XjQw))
            (display '">" g$p$8495$1XjQw))))))
   (g$datum->stx$8006$1XjQw
     g$datum->stx$11689$1XjQw
     (case-lambda
       ((g$id$8499$1XjQw g$datum$8500$1XjQw)
        (g$make-stx$7996$1XjQw
          g$datum$8500$1XjQw
          (g$stx-mark*$7998$1XjQw g$id$8499$1XjQw)
          (g$stx-subst*$7999$1XjQw g$id$8499$1XjQw)
          (g$stx-ae*$8000$1XjQw g$id$8499$1XjQw)))))
   (g$gen-mark$8007$1XjQw
     g$gen-mark$11690$1XjQw
     (case-lambda (() (string '#\m))))
   (g$anti-mark$8008$1XjQw g$anti-mark$11691$1XjQw '#f)
   (g$anti-mark?$8009$1XjQw g$anti-mark?$11692$1XjQw not)
   (g$join-wraps$8010$1XjQw
     g$join-wraps$11693$1XjQw
     (case-lambda
       ((g$m1*$8501$1XjQw g$s1*$8502$1XjQw g$ae1*$8503$1XjQw g$e$8504$1XjQw)
        (letrec* ((g$cancel$8505$1XjQw
                    (case-lambda
                      ((g$ls1$8509$1XjQw g$ls2$8510$1XjQw)
                       ((letrec ((g$f$8511$1XjQw
                                   (case-lambda
                                     ((g$x$8512$1XjQw g$ls1$8513$1XjQw)
                                      (if (null? g$ls1$8513$1XjQw)
                                        (cdr g$ls2$8510$1XjQw)
                                        (cons
                                          g$x$8512$1XjQw
                                          (g$f$8511$1XjQw
                                            (car g$ls1$8513$1XjQw)
                                            (cdr g$ls1$8513$1XjQw))))))))
                          g$f$8511$1XjQw)
                        (car g$ls1$8509$1XjQw)
                        (cdr g$ls1$8509$1XjQw))))))
          ((case-lambda
             ((g$m2*$8506$1XjQw g$s2*$8507$1XjQw g$ae2*$8508$1XjQw)
              (if (if (not (null? g$m1*$8501$1XjQw))
                    (if (not (null? g$m2*$8506$1XjQw))
                      (begin
                        '#f
                        (g$anti-mark?$8009$1XjQw (car g$m2*$8506$1XjQw)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$8505$1XjQw g$m1*$8501$1XjQw g$m2*$8506$1XjQw)
                  (g$cancel$8505$1XjQw g$s1*$8502$1XjQw g$s2*$8507$1XjQw)
                  (g$cancel$8505$1XjQw g$ae1*$8503$1XjQw g$ae2*$8508$1XjQw))
                (values
                  (append g$m1*$8501$1XjQw g$m2*$8506$1XjQw)
                  (append g$s1*$8502$1XjQw g$s2*$8507$1XjQw)
                  (append g$ae1*$8503$1XjQw g$ae2*$8508$1XjQw)))))
           (g$stx-mark*$7998$1XjQw g$e$8504$1XjQw)
           (g$stx-subst*$7999$1XjQw g$e$8504$1XjQw)
           (g$stx-ae*$8000$1XjQw g$e$8504$1XjQw))))))
   (g$mkstx$8011$1XjQw
     g$mkstx$11694$1XjQw
     (case-lambda
       ((g$e$8514$1XjQw g$m*$8515$1XjQw g$s*$8516$1XjQw g$ae*$8517$1XjQw)
        (if (if (g$stx?$7995$1XjQw g$e$8514$1XjQw)
              (begin '#f (not (g$top-marked?$7961$1XjQw g$m*$8515$1XjQw)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$8010$1XjQw
                 g$m*$8515$1XjQw
                 g$s*$8516$1XjQw
                 g$ae*$8517$1XjQw
                 g$e$8514$1XjQw)))
            (case-lambda
              ((g$m*$8521$1XjQw g$s*$8522$1XjQw g$ae*$8523$1XjQw)
               ((case-lambda
                  ((g$ae*$8524$1XjQw g$s*$8525$1XjQw g$m*$8526$1XjQw)
                   (g$make-stx$7996$1XjQw
                     (g$stx-expr$7997$1XjQw g$e$8514$1XjQw)
                     g$m*$8526$1XjQw
                     g$s*$8525$1XjQw
                     g$ae*$8524$1XjQw)))
                g$ae*$8523$1XjQw
                g$s*$8522$1XjQw
                g$m*$8521$1XjQw))))
          (g$make-stx$7996$1XjQw
            g$e$8514$1XjQw
            g$m*$8515$1XjQw
            g$s*$8516$1XjQw
            g$ae*$8517$1XjQw)))))
   (g$add-mark$8012$1XjQw
     g$add-mark$11695$1XjQw
     (case-lambda
       ((g$m$8527$1XjQw g$e$8528$1XjQw g$ae$8529$1XjQw)
        (g$mkstx$8011$1XjQw
          g$e$8528$1XjQw
          (list g$m$8527$1XjQw)
          '(shift)
          (list g$ae$8529$1XjQw)))))
   (g$add-subst$8013$1XjQw
     g$add-subst$11696$1XjQw
     (case-lambda
       ((g$subst$8530$1XjQw g$e$8531$1XjQw)
        (g$mkstx$8011$1XjQw g$e$8531$1XjQw '() (list g$subst$8530$1XjQw) '()))))
   (g$syntax-kind?$8014$1XjQw
     g$syntax-kind?$11697$1XjQw
     (case-lambda
       ((g$x$8532$1XjQw g$p?$8533$1XjQw)
        (if (g$stx?$7995$1XjQw g$x$8532$1XjQw)
          (g$syntax-kind?$8014$1XjQw
            (g$stx-expr$7997$1XjQw g$x$8532$1XjQw)
            g$p?$8533$1XjQw)
          (if (annotation? g$x$8532$1XjQw)
            (g$syntax-kind?$8014$1XjQw
              (annotation-expression g$x$8532$1XjQw)
              g$p?$8533$1XjQw)
            (g$p?$8533$1XjQw g$x$8532$1XjQw))))))
   (g$syntax-vector->list$8015$1XjQw
     g$syntax-vector->list$11698$1XjQw
     (case-lambda
       ((g$x$8534$1XjQw)
        (if (g$stx?$7995$1XjQw g$x$8534$1XjQw)
          ((case-lambda
             ((g$ls$8535$1XjQw g$m*$8536$1XjQw g$s*$8537$1XjQw g$ae*$8538$1XjQw)
              (g$map$5757$1XjQw
                (case-lambda
                  ((g$x$8539$1XjQw)
                   (g$mkstx$8011$1XjQw
                     g$x$8539$1XjQw
                     g$m*$8536$1XjQw
                     g$s*$8537$1XjQw
                     g$ae*$8538$1XjQw)))
                g$ls$8535$1XjQw)))
           (g$syntax-vector->list$8015$1XjQw
             (g$stx-expr$7997$1XjQw g$x$8534$1XjQw))
           (g$stx-mark*$7998$1XjQw g$x$8534$1XjQw)
           (g$stx-subst*$7999$1XjQw g$x$8534$1XjQw)
           (g$stx-ae*$8000$1XjQw g$x$8534$1XjQw))
          (if (annotation? g$x$8534$1XjQw)
            (g$syntax-vector->list$8015$1XjQw
              (annotation-expression g$x$8534$1XjQw))
            (if (vector? g$x$8534$1XjQw)
              (vector->list g$x$8534$1XjQw)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$8534$1XjQw)))))))
   (g$syntax-pair?$8016$1XjQw
     g$syntax-pair?$11699$1XjQw
     (case-lambda
       ((g$x$8540$1XjQw) (g$syntax-kind?$8014$1XjQw g$x$8540$1XjQw pair?))))
   (g$syntax-vector?$8017$1XjQw
     g$syntax-vector?$11700$1XjQw
     (case-lambda
       ((g$x$8541$1XjQw) (g$syntax-kind?$8014$1XjQw g$x$8541$1XjQw vector?))))
   (g$syntax-null?$8018$1XjQw
     g$syntax-null?$11701$1XjQw
     (case-lambda
       ((g$x$8542$1XjQw) (g$syntax-kind?$8014$1XjQw g$x$8542$1XjQw null?))))
   (g$syntax-list?$8019$1XjQw
     g$syntax-list?$11702$1XjQw
     (case-lambda
       ((g$x$8543$1XjQw)
        ((case-lambda
           ((g$t$8544$1XjQw)
            (if g$t$8544$1XjQw
              g$t$8544$1XjQw
              (begin
                '#f
                (if (g$syntax-pair?$8016$1XjQw g$x$8543$1XjQw)
                  (begin
                    '#f
                    (g$syntax-list?$8019$1XjQw
                      (g$syntax-cdr$8021$1XjQw g$x$8543$1XjQw)))
                  '#f)))))
         (g$syntax-null?$8018$1XjQw g$x$8543$1XjQw)))))
   (g$syntax-car$8020$1XjQw
     g$syntax-car$11703$1XjQw
     (case-lambda
       ((g$x$8545$1XjQw)
        (if (g$stx?$7995$1XjQw g$x$8545$1XjQw)
          (g$mkstx$8011$1XjQw
            (g$syntax-car$8020$1XjQw (g$stx-expr$7997$1XjQw g$x$8545$1XjQw))
            (g$stx-mark*$7998$1XjQw g$x$8545$1XjQw)
            (g$stx-subst*$7999$1XjQw g$x$8545$1XjQw)
            (g$stx-ae*$8000$1XjQw g$x$8545$1XjQw))
          (if (annotation? g$x$8545$1XjQw)
            (g$syntax-car$8020$1XjQw (annotation-expression g$x$8545$1XjQw))
            (if (pair? g$x$8545$1XjQw)
              (car g$x$8545$1XjQw)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$8545$1XjQw)))))))
   (g$syntax-cdr$8021$1XjQw
     g$syntax-cdr$11704$1XjQw
     (case-lambda
       ((g$x$8546$1XjQw)
        (if (g$stx?$7995$1XjQw g$x$8546$1XjQw)
          (g$mkstx$8011$1XjQw
            (g$syntax-cdr$8021$1XjQw (g$stx-expr$7997$1XjQw g$x$8546$1XjQw))
            (g$stx-mark*$7998$1XjQw g$x$8546$1XjQw)
            (g$stx-subst*$7999$1XjQw g$x$8546$1XjQw)
            (g$stx-ae*$8000$1XjQw g$x$8546$1XjQw))
          (if (annotation? g$x$8546$1XjQw)
            (g$syntax-cdr$8021$1XjQw (annotation-expression g$x$8546$1XjQw))
            (if (pair? g$x$8546$1XjQw)
              (cdr g$x$8546$1XjQw)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$8546$1XjQw)))))))
   (g$syntax->list$8022$1XjQw
     g$syntax->list$11705$1XjQw
     (case-lambda
       ((g$x$8547$1XjQw)
        (if (g$syntax-pair?$8016$1XjQw g$x$8547$1XjQw)
          (cons
            (g$syntax-car$8020$1XjQw g$x$8547$1XjQw)
            (g$syntax->list$8022$1XjQw
              (g$syntax-cdr$8021$1XjQw g$x$8547$1XjQw)))
          (if (g$syntax-null?$8018$1XjQw g$x$8547$1XjQw)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$8547$1XjQw))))))
   (g$id?$8023$1XjQw
     g$id?$11706$1XjQw
     (case-lambda
       ((g$x$8548$1XjQw)
        (if (g$stx?$7995$1XjQw g$x$8548$1XjQw)
          (begin
            '#f
            ((case-lambda
               ((g$expr$8549$1XjQw)
                (symbol?
                  (if (annotation? g$expr$8549$1XjQw)
                    (annotation-stripped g$expr$8549$1XjQw)
                    g$expr$8549$1XjQw))))
             (g$stx-expr$7997$1XjQw g$x$8548$1XjQw)))
          '#f))))
   (g$id->sym$8024$1XjQw
     g$id->sym$11707$1XjQw
     (case-lambda
       ((g$x$8550$1XjQw)
        (begin
          (if (not (g$stx?$7995$1XjQw g$x$8550$1XjQw))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$8550$1XjQw)
            (void))
          ((case-lambda
             ((g$expr$8551$1XjQw)
              ((case-lambda
                 ((g$sym$8552$1XjQw)
                  (if (symbol? g$sym$8552$1XjQw)
                    g$sym$8552$1XjQw
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$8550$1XjQw))))
               (if (annotation? g$expr$8551$1XjQw)
                 (annotation-stripped g$expr$8551$1XjQw)
                 g$expr$8551$1XjQw))))
           (g$stx-expr$7997$1XjQw g$x$8550$1XjQw))))))
   (g$same-marks?$8025$1XjQw
     g$same-marks?$11708$1XjQw
     (case-lambda
       ((g$x$8553$1XjQw g$y$8554$1XjQw)
        ((case-lambda
           ((g$t$8555$1XjQw)
            (if g$t$8555$1XjQw
              g$t$8555$1XjQw
              (begin
                '#f
                (if (pair? g$x$8553$1XjQw)
                  (if (pair? g$y$8554$1XjQw)
                    (if (eq? (car g$x$8553$1XjQw) (car g$y$8554$1XjQw))
                      (begin
                        '#f
                        (g$same-marks?$8025$1XjQw
                          (cdr g$x$8553$1XjQw)
                          (cdr g$y$8554$1XjQw)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$8553$1XjQw) (begin '#f (null? g$y$8554$1XjQw)) '#f)))))
   (g$bound-id=?$8026$1XjQw
     g$bound-id=?$11709$1XjQw
     (case-lambda
       ((g$x$8556$1XjQw g$y$8557$1XjQw)
        (if (eq? (g$id->sym$8024$1XjQw g$x$8556$1XjQw)
                 (g$id->sym$8024$1XjQw g$y$8557$1XjQw))
          (begin
            '#f
            (g$same-marks?$8025$1XjQw
              (g$stx-mark*$7998$1XjQw g$x$8556$1XjQw)
              (g$stx-mark*$7998$1XjQw g$y$8557$1XjQw)))
          '#f))))
   (g$free-id=?$8027$1XjQw
     g$free-id=?$11710$1XjQw
     (case-lambda
       ((g$i$8558$1XjQw g$j$8559$1XjQw)
        ((case-lambda
           ((g$t0$8560$1XjQw g$t1$8561$1XjQw)
            (if ((case-lambda
                   ((g$t$8562$1XjQw)
                    (if g$t$8562$1XjQw
                      g$t$8562$1XjQw
                      (begin '#f g$t1$8561$1XjQw))))
                 g$t0$8560$1XjQw)
              (eq? g$t0$8560$1XjQw g$t1$8561$1XjQw)
              (eq? (g$id->sym$8024$1XjQw g$i$8558$1XjQw)
                   (g$id->sym$8024$1XjQw g$j$8559$1XjQw)))))
         (g$id->real-label$8037$1XjQw g$i$8558$1XjQw)
         (g$id->real-label$8037$1XjQw g$j$8559$1XjQw)))))
   (g$valid-bound-ids?$8028$1XjQw
     g$valid-bound-ids?$11711$1XjQw
     (case-lambda
       ((g$id*$8563$1XjQw)
        (if (g$for-all$5755$1XjQw g$id?$8023$1XjQw g$id*$8563$1XjQw)
          (begin '#f (g$distinct-bound-ids?$8029$1XjQw g$id*$8563$1XjQw))
          '#f))))
   (g$distinct-bound-ids?$8029$1XjQw
     g$distinct-bound-ids?$11712$1XjQw
     (case-lambda
       ((g$id*$8564$1XjQw)
        ((case-lambda
           ((g$t$8565$1XjQw)
            (if g$t$8565$1XjQw
              g$t$8565$1XjQw
              (begin
                '#f
                (if (not (g$bound-id-member?$8030$1XjQw
                           (car g$id*$8564$1XjQw)
                           (cdr g$id*$8564$1XjQw)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$8029$1XjQw (cdr g$id*$8564$1XjQw)))
                  '#f)))))
         (null? g$id*$8564$1XjQw)))))
   (g$bound-id-member?$8030$1XjQw
     g$bound-id-member?$11713$1XjQw
     (case-lambda
       ((g$id$8566$1XjQw g$id*$8567$1XjQw)
        (if (pair? g$id*$8567$1XjQw)
          (begin
            '#f
            ((case-lambda
               ((g$t$8568$1XjQw)
                (if g$t$8568$1XjQw
                  g$t$8568$1XjQw
                  (begin
                    '#f
                    (g$bound-id-member?$8030$1XjQw
                      g$id$8566$1XjQw
                      (cdr g$id*$8567$1XjQw))))))
             (g$bound-id=?$8026$1XjQw g$id$8566$1XjQw (car g$id*$8567$1XjQw))))
          '#f))))
   (g$self-evaluating?$8031$1XjQw
     g$self-evaluating?$11714$1XjQw
     (case-lambda
       ((g$x$8569$1XjQw)
        ((case-lambda
           ((g$t$8570$1XjQw)
            (if g$t$8570$1XjQw
              g$t$8570$1XjQw
              ((case-lambda
                 ((g$t$8571$1XjQw)
                  (if g$t$8571$1XjQw
                    g$t$8571$1XjQw
                    ((case-lambda
                       ((g$t$8572$1XjQw)
                        (if g$t$8572$1XjQw
                          g$t$8572$1XjQw
                          ((case-lambda
                             ((g$t$8573$1XjQw)
                              (if g$t$8573$1XjQw
                                g$t$8573$1XjQw
                                (begin '#f (bytevector? g$x$8569$1XjQw)))))
                           (boolean? g$x$8569$1XjQw)))))
                     (char? g$x$8569$1XjQw)))))
               (string? g$x$8569$1XjQw)))))
         (number? g$x$8569$1XjQw)))))
   (g$strip-annotations$8032$1XjQw
     g$strip-annotations$11715$1XjQw
     (case-lambda
       ((g$x$8574$1XjQw)
        (if (pair? g$x$8574$1XjQw)
          (cons
            (g$strip-annotations$8032$1XjQw (car g$x$8574$1XjQw))
            (g$strip-annotations$8032$1XjQw (cdr g$x$8574$1XjQw)))
          (if (vector? g$x$8574$1XjQw)
            (vector-map g$strip-annotations$8032$1XjQw g$x$8574$1XjQw)
            (if (annotation? g$x$8574$1XjQw)
              (annotation-stripped g$x$8574$1XjQw)
              g$x$8574$1XjQw))))))
   (g$strip$8033$1XjQw
     g$strip$11716$1XjQw
     (case-lambda
       ((g$x$8575$1XjQw g$m*$8576$1XjQw)
        (if (g$top-marked?$7961$1XjQw g$m*$8576$1XjQw)
          (if ((case-lambda
                 ((g$t$8577$1XjQw)
                  (if g$t$8577$1XjQw
                    g$t$8577$1XjQw
                    ((case-lambda
                       ((g$t$8578$1XjQw)
                        (if g$t$8578$1XjQw
                          g$t$8578$1XjQw
                          (begin
                            '#f
                            (if (vector? g$x$8575$1XjQw)
                              (if (> (vector-length g$x$8575$1XjQw) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$8575$1XjQw '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$8575$1XjQw)
                       (begin '#f (annotation? (car g$x$8575$1XjQw)))
                       '#f)))))
               (annotation? g$x$8575$1XjQw))
            (g$strip-annotations$8032$1XjQw g$x$8575$1XjQw)
            g$x$8575$1XjQw)
          ((letrec ((g$f$8579$1XjQw
                      (case-lambda
                        ((g$x$8580$1XjQw)
                         (if (g$stx?$7995$1XjQw g$x$8580$1XjQw)
                           (g$strip$8033$1XjQw
                             (g$stx-expr$7997$1XjQw g$x$8580$1XjQw)
                             (g$stx-mark*$7998$1XjQw g$x$8580$1XjQw))
                           (if (annotation? g$x$8580$1XjQw)
                             (annotation-stripped g$x$8580$1XjQw)
                             (if (pair? g$x$8580$1XjQw)
                               ((case-lambda
                                  ((g$a$8581$1XjQw g$d$8582$1XjQw)
                                   (if (if (eq? g$a$8581$1XjQw
                                                (car g$x$8580$1XjQw))
                                         (begin
                                           '#f
                                           (eq? g$d$8582$1XjQw
                                                (cdr g$x$8580$1XjQw)))
                                         '#f)
                                     g$x$8580$1XjQw
                                     (cons g$a$8581$1XjQw g$d$8582$1XjQw))))
                                (g$f$8579$1XjQw (car g$x$8580$1XjQw))
                                (g$f$8579$1XjQw (cdr g$x$8580$1XjQw)))
                               (if (vector? g$x$8580$1XjQw)
                                 ((case-lambda
                                    ((g$old$8583$1XjQw)
                                     ((case-lambda
                                        ((g$new$8584$1XjQw)
                                         (if (g$for-all$5755$1XjQw
                                               eq?
                                               g$old$8583$1XjQw
                                               g$new$8584$1XjQw)
                                           g$x$8580$1XjQw
                                           (list->vector g$new$8584$1XjQw))))
                                      (g$map$5757$1XjQw
                                        g$f$8579$1XjQw
                                        g$old$8583$1XjQw))))
                                  (vector->list g$x$8580$1XjQw))
                                 g$x$8580$1XjQw))))))))
             g$f$8579$1XjQw)
           g$x$8575$1XjQw)))))
   (g$stx->datum$8034$1XjQw
     g$stx->datum$11717$1XjQw
     (case-lambda
       ((g$x$8585$1XjQw) (g$strip$8033$1XjQw g$x$8585$1XjQw '()))))
   (g$same-marks*?$8035$1XjQw
     g$same-marks*?$11718$1XjQw
     (case-lambda
       ((g$mark*$8586$1XjQw g$mark**$8587$1XjQw g$si$8588$1XjQw)
        (if (null? g$si$8588$1XjQw)
          '#f
          (if (g$same-marks?$8025$1XjQw
                g$mark*$8586$1XjQw
                (vector-ref g$mark**$8587$1XjQw (car g$si$8588$1XjQw)))
            (car g$si$8588$1XjQw)
            (g$same-marks*?$8035$1XjQw
              g$mark*$8586$1XjQw
              g$mark**$8587$1XjQw
              (cdr g$si$8588$1XjQw)))))))
   (g$id->label$8036$1XjQw
     g$id->label$11719$1XjQw
     (case-lambda
       ((g$id$8589$1XjQw)
        ((case-lambda
           ((g$t$8590$1XjQw)
            (if g$t$8590$1XjQw
              g$t$8590$1XjQw
              (begin
                '#f
                ((case-lambda
                   ((g$t$8591$1XjQw)
                    (if g$t$8591$1XjQw
                      ((case-lambda
                         ((g$env$8592$1XjQw)
                          ((case-lambda
                             ((g$rib$8593$1XjQw)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7966$1XjQw
                                     g$id$8589$1XjQw
                                     g$rib$8593$1XjQw)))
                                (case-lambda
                                  ((g$lab$8596$1XjQw g$loc_$8597$1XjQw)
                                   ((case-lambda
                                      ((g$loc_$8598$1XjQw g$lab$8599$1XjQw)
                                       (begin
                                         (g$extend-rib!$7986$1XjQw
                                           g$rib$8593$1XjQw
                                           g$id$8589$1XjQw
                                           g$lab$8599$1XjQw)
                                         g$lab$8599$1XjQw)))
                                    g$loc_$8597$1XjQw
                                    g$lab$8596$1XjQw))))))
                           (g$interaction-env-rib$8379$1XjQw
                             g$env$8592$1XjQw))))
                       g$t$8591$1XjQw)
                      '#f)))
                 (g$top-level-context$8419$1XjQw))))))
         (g$id->real-label$8037$1XjQw g$id$8589$1XjQw)))))
   (g$id->real-label$8037$1XjQw
     g$id->real-label$11720$1XjQw
     (case-lambda
       ((g$id$8600$1XjQw)
        ((case-lambda
           ((g$sym$8601$1XjQw)
            ((letrec ((g$search$8602$1XjQw
                        (case-lambda
                          ((g$subst*$8603$1XjQw g$mark*$8604$1XjQw)
                           (if (null? g$subst*$8603$1XjQw)
                             '#f
                             (if (eq? (car g$subst*$8603$1XjQw) 'shift)
                               (g$search$8602$1XjQw
                                 (cdr g$subst*$8603$1XjQw)
                                 (cdr g$mark*$8604$1XjQw))
                               ((case-lambda
                                  ((g$rib$8605$1XjQw)
                                   ((case-lambda
                                      ((g$t$8606$1XjQw)
                                       (if g$t$8606$1XjQw
                                         ((case-lambda
                                            ((g$ht$8607$1XjQw)
                                             ((case-lambda
                                                ((g$si$8608$1XjQw)
                                                 ((case-lambda
                                                    ((g$i$8609$1XjQw)
                                                     (if g$i$8609$1XjQw
                                                       (vector-ref
                                                         (g$rib-label*$7975$1XjQw
                                                           g$rib$8605$1XjQw)
                                                         g$i$8609$1XjQw)
                                                       (g$search$8602$1XjQw
                                                         (cdr g$subst*$8603$1XjQw)
                                                         g$mark*$8604$1XjQw))))
                                                  (if g$si$8608$1XjQw
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$8035$1XjQw
                                                        g$mark*$8604$1XjQw
                                                        (g$rib-mark**$7974$1XjQw
                                                          g$rib$8605$1XjQw)
                                                        (reverse
                                                          g$si$8608$1XjQw)))
                                                    '#f))))
                                              (g$hashtable-ref$6198$1XjQw
                                                g$ht$8607$1XjQw
                                                g$sym$8601$1XjQw
                                                '#f))))
                                          g$t$8606$1XjQw)
                                         ((case-lambda
                                            ((g$t$8610$1XjQw)
                                             (if g$t$8610$1XjQw
                                               g$t$8610$1XjQw
                                               (begin
                                                 '#f
                                                 ((letrec ((g$f$8611$1XjQw
                                                             (case-lambda
                                                               ((g$sym*$8612$1XjQw
                                                                  g$mark**$8613$1XjQw
                                                                  g$label*$8614$1XjQw)
                                                                (if (null?
                                                                      g$sym*$8612$1XjQw)
                                                                  (g$search$8602$1XjQw
                                                                    (cdr g$subst*$8603$1XjQw)
                                                                    g$mark*$8604$1XjQw)
                                                                  (if (if (eq? (car g$sym*$8612$1XjQw)
                                                                               g$sym$8601$1XjQw)
                                                                        (begin
                                                                          '#f
                                                                          (g$same-marks?$8025$1XjQw
                                                                            (car g$mark**$8613$1XjQw)
                                                                            g$mark*$8604$1XjQw))
                                                                        '#f)
                                                                    (car g$label*$8614$1XjQw)
                                                                    (g$f$8611$1XjQw
                                                                      (cdr g$sym*$8612$1XjQw)
                                                                      (cdr g$mark**$8613$1XjQw)
                                                                      (cdr g$label*$8614$1XjQw))))))))
                                                    g$f$8611$1XjQw)
                                                  (g$rib-sym*$7973$1XjQw
                                                    g$rib$8605$1XjQw)
                                                  (g$rib-mark**$7974$1XjQw
                                                    g$rib$8605$1XjQw)
                                                  (g$rib-label*$7975$1XjQw
                                                    g$rib$8605$1XjQw))))))
                                          (g$find-label$7985$1XjQw
                                            g$rib$8605$1XjQw
                                            g$sym$8601$1XjQw
                                            g$mark*$8604$1XjQw)))))
                                    (g$rib-sealed/freq$7976$1XjQw
                                      g$rib$8605$1XjQw))))
                                (car g$subst*$8603$1XjQw))))))))
               g$search$8602$1XjQw)
             (g$stx-subst*$7999$1XjQw g$id$8600$1XjQw)
             (g$stx-mark*$7998$1XjQw g$id$8600$1XjQw))))
         (g$id->sym$8024$1XjQw g$id$8600$1XjQw)))))
   (g$label->binding$8038$1XjQw
     g$label->binding$11721$1XjQw
     (case-lambda
       ((g$x$8615$1XjQw g$r$8616$1XjQw)
        ((case-lambda
           ((g$t$8617$1XjQw)
            (if g$t$8617$1XjQw
              ((case-lambda
                 ((g$b$8618$1XjQw)
                  (if (if (pair? g$b$8618$1XjQw)
                        (begin '#f (eq? (car g$b$8618$1XjQw) '$core-rtd))
                        '#f)
                    (cons
                      '$rtd
                      (g$map$5757$1XjQw
                        g$bless$8264$1XjQw
                        (cdr g$b$8618$1XjQw)))
                    (if (if (pair? g$b$8618$1XjQw)
                          (begin '#f (eq? (car g$b$8618$1XjQw) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$8619$1XjQw g$loc$8620$1XjQw)
                          (cons '$rtd (symbol-value g$loc$8620$1XjQw))))
                       (g$cadr$5921$1XjQw g$b$8618$1XjQw)
                       (g$cddr$5923$1XjQw g$b$8618$1XjQw))
                      g$b$8618$1XjQw))))
               g$t$8617$1XjQw)
              ((case-lambda
                 ((g$t$8621$1XjQw)
                  (if g$t$8621$1XjQw
                    (cdr g$t$8621$1XjQw)
                    ((case-lambda
                       ((g$t$8622$1XjQw)
                        (if g$t$8622$1XjQw
                          ((case-lambda
                             ((g$env$8623$1XjQw)
                              ((case-lambda
                                 ((g$t$8624$1XjQw)
                                  (if g$t$8624$1XjQw
                                    ((case-lambda
                                       ((g$p$8625$1XjQw)
                                        (g$cons*$5759$1XjQw
                                          'lexical
                                          (cdr g$p$8625$1XjQw)
                                          '#f)))
                                     g$t$8624$1XjQw)
                                    '(displaced-lexical . #f))))
                               (g$assq$5745$1XjQw
                                 g$x$8615$1XjQw
                                 (g$interaction-env-locs$8381$1XjQw
                                   g$env$8623$1XjQw)))))
                           g$t$8622$1XjQw)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$8419$1XjQw)))))
               (g$assq$5745$1XjQw g$x$8615$1XjQw g$r$8616$1XjQw)))))
         (g$imported-label->binding$7832$1XjQw g$x$8615$1XjQw)))))
   (g$make-binding$8039$1XjQw g$make-binding$11722$1XjQw cons)
   (g$binding-type$8040$1XjQw g$binding-type$11723$1XjQw car)
   (g$binding-value$8041$1XjQw g$binding-value$11724$1XjQw cdr)
   (g$raise-unbound-error$8042$1XjQw
     g$raise-unbound-error$11725$1XjQw
     (case-lambda
       ((g$id$8626$1XjQw)
        (g$syntax-violation*$8411$1XjQw
          '#f
          '"unbound identifier"
          g$id$8626$1XjQw
          (g$make-undefined-violation$6545$1XjQw)))))
   (g$syntax-type$8043$1XjQw
     g$syntax-type$11726$1XjQw
     (case-lambda
       ((g$e$8627$1XjQw g$r$8628$1XjQw)
        (if (g$id?$8023$1XjQw g$e$8627$1XjQw)
          ((case-lambda
             ((g$id$8629$1XjQw)
              ((case-lambda
                 ((g$label$8630$1XjQw)
                  ((case-lambda
                     ((g$b$8631$1XjQw)
                      ((case-lambda
                         ((g$type$8632$1XjQw)
                          ((case-lambda
                             (()
                              (begin
                                (if (not g$label$8630$1XjQw)
                                  (g$raise-unbound-error$8042$1XjQw
                                    g$id$8629$1XjQw)
                                  (void))
                                ((case-lambda
                                   ((g$t$8633$1XjQw)
                                    (if (g$memv$5750$1XjQw
                                          g$t$8633$1XjQw
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             export
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$8632$1XjQw
                                        (g$binding-value$8041$1XjQw
                                          g$b$8631$1XjQw)
                                        g$id$8629$1XjQw)
                                      (values 'other '#f '#f))))
                                 g$type$8632$1XjQw)))))))
                       (g$binding-type$8040$1XjQw g$b$8631$1XjQw))))
                   (g$label->binding$8038$1XjQw
                     g$label$8630$1XjQw
                     g$r$8628$1XjQw))))
               (g$id->label$8036$1XjQw g$id$8629$1XjQw))))
           g$e$8627$1XjQw)
          (if (g$syntax-pair?$8016$1XjQw g$e$8627$1XjQw)
            ((case-lambda
               ((g$id$8634$1XjQw)
                (if (g$id?$8023$1XjQw g$id$8634$1XjQw)
                  ((case-lambda
                     ((g$label$8635$1XjQw)
                      ((case-lambda
                         ((g$b$8636$1XjQw)
                          ((case-lambda
                             ((g$type$8637$1XjQw)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if (not g$label$8635$1XjQw)
                                      (g$raise-unbound-error$8042$1XjQw
                                        g$id$8634$1XjQw)
                                      (void))
                                    ((case-lambda
                                       ((g$t$8638$1XjQw)
                                        (if (g$memv$5750$1XjQw
                                              g$t$8638$1XjQw
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 export
                                                 $core-rtd))
                                          (values
                                            g$type$8637$1XjQw
                                            (g$binding-value$8041$1XjQw
                                              g$b$8636$1XjQw)
                                            g$id$8634$1XjQw)
                                          (values 'call '#f '#f))))
                                     g$type$8637$1XjQw)))))))
                           (g$binding-type$8040$1XjQw g$b$8636$1XjQw))))
                       (g$label->binding$8038$1XjQw
                         g$label$8635$1XjQw
                         g$r$8628$1XjQw))))
                   (g$id->label$8036$1XjQw g$id$8634$1XjQw))
                  (values 'call '#f '#f))))
             (g$syntax-car$8020$1XjQw g$e$8627$1XjQw))
            ((case-lambda
               ((g$d$8639$1XjQw)
                (if (g$self-evaluating?$8031$1XjQw g$d$8639$1XjQw)
                  (values 'constant g$d$8639$1XjQw '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$8034$1XjQw g$e$8627$1XjQw)))))))
   (g$sanitize-binding$8051$1XjQw
     g$sanitize-binding$11727$1XjQw
     (case-lambda
       ((g$x$8640$1XjQw g$src$8641$1XjQw)
        (if (procedure? g$x$8640$1XjQw)
          (g$cons*$5759$1XjQw 'local-macro g$x$8640$1XjQw g$src$8641$1XjQw)
          (if (if (pair? g$x$8640$1XjQw)
                (if (eq? (car g$x$8640$1XjQw) 'macro!)
                  (begin '#f (procedure? (cdr g$x$8640$1XjQw)))
                  '#f)
                '#f)
            (g$cons*$5759$1XjQw
              'local-macro!
              (cdr g$x$8640$1XjQw)
              g$src$8641$1XjQw)
            (if (if (pair? g$x$8640$1XjQw)
                  (begin '#f (eq? (car g$x$8640$1XjQw) '$rtd))
                  '#f)
              g$x$8640$1XjQw
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$8640$1XjQw)))))))
   (g$make-variable-transformer$8052$1XjQw
     g$make-variable-transformer$11728$1XjQw
     (case-lambda
       ((g$x$8642$1XjQw)
        (if (procedure? g$x$8642$1XjQw)
          (cons 'macro! g$x$8642$1XjQw)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$8642$1XjQw)))))
   (g$variable-transformer?$8053$1XjQw
     g$variable-transformer?$11729$1XjQw
     (case-lambda
       ((g$x$8643$1XjQw)
        (if (pair? g$x$8643$1XjQw)
          (if (eq? (car g$x$8643$1XjQw) 'macro!)
            (begin '#f (procedure? (cdr g$x$8643$1XjQw)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$8054$1XjQw
     g$variable-transformer-procedure$11730$1XjQw
     (case-lambda
       ((g$x$8644$1XjQw)
        (if (g$variable-transformer?$8053$1XjQw g$x$8644$1XjQw)
          (cdr g$x$8644$1XjQw)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$8644$1XjQw)))))
   (g$make-eval-transformer$8055$1XjQw
     g$make-eval-transformer$11731$1XjQw
     (case-lambda
       ((g$x$8645$1XjQw)
        (g$sanitize-binding$8051$1XjQw
          (eval-core (g$expanded->core$7541$1XjQw g$x$8645$1XjQw))
          g$x$8645$1XjQw))))
   (g$parse-define$8241$1XjQw
     g$parse-define$11732$1XjQw
     (case-lambda
       ((g$x$8646$1XjQw)
        ((case-lambda
           ((g$t$8647$1XjQw)
            ((case-lambda
               ((g$ls/false$8648$1XjQw)
                (if (if g$ls/false$8648$1XjQw
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8649$1XjQw
                               g$fmls$8650$1XjQw
                               g$b$8651$1XjQw
                               g$b*$8652$1XjQw)
                             (g$id?$8023$1XjQw g$id$8649$1XjQw)))
                          g$ls/false$8648$1XjQw))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8653$1XjQw
                         g$fmls$8654$1XjQw
                         g$b$8655$1XjQw
                         g$b*$8656$1XjQw)
                       (begin
                         (g$verify-formals$8321$1XjQw
                           g$fmls$8654$1XjQw
                           g$x$8646$1XjQw)
                         (values
                           g$id$8653$1XjQw
                           (cons
                             'defun
                             (cons
                               g$fmls$8654$1XjQw
                               (cons g$b$8655$1XjQw g$b*$8656$1XjQw)))))))
                    g$ls/false$8648$1XjQw)
                  ((case-lambda
                     ((g$t$8657$1XjQw)
                      ((case-lambda
                         ((g$ls/false$8658$1XjQw)
                          (if (if g$ls/false$8658$1XjQw
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$8659$1XjQw g$val$8660$1XjQw)
                                       (g$id?$8023$1XjQw g$id$8659$1XjQw)))
                                    g$ls/false$8658$1XjQw))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$8661$1XjQw g$val$8662$1XjQw)
                                 (values
                                   g$id$8661$1XjQw
                                   (cons 'expr g$val$8662$1XjQw))))
                              g$ls/false$8658$1XjQw)
                            ((case-lambda
                               ((g$t$8663$1XjQw)
                                ((case-lambda
                                   ((g$ls/false$8664$1XjQw)
                                    (if (if g$ls/false$8664$1XjQw
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$8665$1XjQw)
                                                 (g$id?$8023$1XjQw
                                                   g$id$8665$1XjQw)))
                                              g$ls/false$8664$1XjQw))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$8666$1XjQw)
                                           (values
                                             g$id$8666$1XjQw
                                             (cons
                                               'expr
                                               (g$bless$8264$1XjQw '(void))))))
                                        g$ls/false$8664$1XjQw)
                                      (g$syntax-violation$8412$1XjQw
                                        '#f
                                        '"invalid syntax"
                                        g$t$8663$1XjQw))))
                                 (g$syntax-dispatch$8301$1XjQw
                                   g$t$8663$1XjQw
                                   '(_ any)))))
                             g$t$8657$1XjQw))))
                       (g$syntax-dispatch$8301$1XjQw
                         g$t$8657$1XjQw
                         '(_ any any)))))
                   g$t$8647$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw
               g$t$8647$1XjQw
               '(_ (any . any) any . each-any)))))
         g$x$8646$1XjQw))))
   (g$parse-define-syntax$8242$1XjQw
     g$parse-define-syntax$11733$1XjQw
     (case-lambda
       ((g$x$8667$1XjQw)
        ((case-lambda
           ((g$t$8668$1XjQw)
            ((case-lambda
               ((g$ls/false$8669$1XjQw)
                (if (if g$ls/false$8669$1XjQw
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8670$1XjQw g$val$8671$1XjQw)
                             (g$id?$8023$1XjQw g$id$8670$1XjQw)))
                          g$ls/false$8669$1XjQw))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8672$1XjQw g$val$8673$1XjQw)
                       (values g$id$8672$1XjQw g$val$8673$1XjQw)))
                    g$ls/false$8669$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$8668$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$8668$1XjQw '(_ any any)))))
         g$x$8667$1XjQw))))
   (g$scheme-stx-hashtable$8243$1XjQw
     g$scheme-stx-hashtable$11734$1XjQw
     (g$make-eq-hashtable$6195$1XjQw))
   (g$scheme-stx$8244$1XjQw
     g$scheme-stx$11735$1XjQw
     (case-lambda
       ((g$sym$8674$1XjQw)
        ((case-lambda
           ((g$t$8675$1XjQw)
            (if g$t$8675$1XjQw
              g$t$8675$1XjQw
              (begin
                '#f
                ((case-lambda
                   ((g$subst$8676$1XjQw)
                    ((case-lambda
                       ((g$stx$8677$1XjQw)
                        ((case-lambda
                           ((g$stx$8678$1XjQw)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$6199$1XjQw
                                    g$scheme-stx-hashtable$8243$1XjQw
                                    g$sym$8674$1XjQw
                                    g$stx$8678$1XjQw)
                                  g$stx$8678$1XjQw))))))
                         ((case-lambda
                            ((g$t$8679$1XjQw)
                             (if g$t$8679$1XjQw
                               ((case-lambda
                                  ((g$x$8680$1XjQw)
                                   ((case-lambda
                                      ((g$name$8681$1XjQw g$label$8682$1XjQw)
                                       (g$add-subst$8013$1XjQw
                                         (g$make-rib$7972$1XjQw
                                           (list g$name$8681$1XjQw)
                                           (list g$top-mark*$7960$1XjQw)
                                           (list g$label$8682$1XjQw)
                                           '#f
                                           '#f)
                                         g$stx$8677$1XjQw)))
                                    (car g$x$8680$1XjQw)
                                    (cdr g$x$8680$1XjQw))))
                                g$t$8679$1XjQw)
                               g$stx$8677$1XjQw)))
                          (g$assq$5745$1XjQw
                            g$sym$8674$1XjQw
                            g$subst$8676$1XjQw)))))
                     (g$make-stx$7996$1XjQw
                       g$sym$8674$1XjQw
                       g$top-mark*$7960$1XjQw
                       '()
                       '()))))
                 (g$library-subst$7790$1XjQw
                   (g$find-library-by-name$7826$1XjQw
                     '(psyntax system $all))))))))
         (g$hashtable-ref$6198$1XjQw
           g$scheme-stx-hashtable$8243$1XjQw
           g$sym$8674$1XjQw
           '#f)))))
   (g$lexical-var$8245$1XjQw g$lexical-var$11736$1XjQw car)
   (g$lexical-mutable?$8246$1XjQw g$lexical-mutable?$11737$1XjQw cdr)
   (g$set-lexical-mutable!$8247$1XjQw
     g$set-lexical-mutable!$11738$1XjQw
     set-cdr!)
   (g$add-lexical$8248$1XjQw
     g$add-lexical$11739$1XjQw
     (case-lambda
       ((g$lab$8683$1XjQw g$lex$8684$1XjQw g$r$8685$1XjQw)
        (cons
          (g$cons*$5759$1XjQw g$lab$8683$1XjQw 'lexical g$lex$8684$1XjQw '#f)
          g$r$8685$1XjQw))))
   (g$add-lexicals$8249$1XjQw
     g$add-lexicals$11740$1XjQw
     (case-lambda
       ((g$lab*$8686$1XjQw g$lex*$8687$1XjQw g$r$8688$1XjQw)
        (if (null? g$lab*$8686$1XjQw)
          g$r$8688$1XjQw
          (g$add-lexicals$8249$1XjQw
            (cdr g$lab*$8686$1XjQw)
            (cdr g$lex*$8687$1XjQw)
            (g$add-lexical$8248$1XjQw
              (car g$lab*$8686$1XjQw)
              (car g$lex*$8687$1XjQw)
              g$r$8688$1XjQw))))))
   (g$letrec-helper$8250$1XjQw
     g$letrec-helper$11741$1XjQw
     (case-lambda
       ((g$e$8689$1XjQw g$r$8690$1XjQw g$mr$8691$1XjQw g$build$8692$1XjQw)
        ((case-lambda
           ((g$t$8693$1XjQw)
            ((case-lambda
               ((g$ls/false$8694$1XjQw)
                (if g$ls/false$8694$1XjQw
                  (apply
                    (case-lambda
                      ((g$lhs*$8695$1XjQw
                         g$rhs*$8696$1XjQw
                         g$b$8697$1XjQw
                         g$b*$8698$1XjQw)
                       (if (not (g$valid-bound-ids?$8028$1XjQw
                                  g$lhs*$8695$1XjQw))
                         (g$invalid-fmls-error$8266$1XjQw
                           g$e$8689$1XjQw
                           g$lhs*$8695$1XjQw)
                         ((case-lambda
                            ((g$lex*$8699$1XjQw g$lab*$8700$1XjQw)
                             ((case-lambda
                                ((g$rib$8701$1XjQw g$r$8702$1XjQw)
                                 ((case-lambda
                                    ((g$body$8703$1XjQw g$rhs*$8704$1XjQw)
                                     (g$build$8692$1XjQw
                                       '#f
                                       g$lex*$8699$1XjQw
                                       g$rhs*$8704$1XjQw
                                       g$body$8703$1XjQw)))
                                  (g$chi-internal$8330$1XjQw
                                    (g$add-subst$8013$1XjQw
                                      g$rib$8701$1XjQw
                                      (cons g$b$8697$1XjQw g$b*$8698$1XjQw))
                                    g$r$8702$1XjQw
                                    g$mr$8691$1XjQw)
                                  (g$chi-expr*$8317$1XjQw
                                    (g$map$5757$1XjQw
                                      (case-lambda
                                        ((g$x$8705$1XjQw)
                                         (g$add-subst$8013$1XjQw
                                           g$rib$8701$1XjQw
                                           g$x$8705$1XjQw)))
                                      g$rhs*$8696$1XjQw)
                                    g$r$8702$1XjQw
                                    g$mr$8691$1XjQw))))
                              (g$make-full-rib$7991$1XjQw
                                g$lhs*$8695$1XjQw
                                g$lab*$8700$1XjQw)
                              (g$add-lexicals$8249$1XjQw
                                g$lab*$8700$1XjQw
                                g$lex*$8699$1XjQw
                                g$r$8690$1XjQw))))
                          (g$map$5757$1XjQw
                            g$gen-lexical$7962$1XjQw
                            g$lhs*$8695$1XjQw)
                          (g$map$5757$1XjQw
                            g$gen-label$7964$1XjQw
                            g$lhs*$8695$1XjQw)))))
                    g$ls/false$8694$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$8693$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw
               g$t$8693$1XjQw
               '(_ #(each (any any)) any . each-any)))))
         g$e$8689$1XjQw))))
   (g$letrec-transformer$8251$1XjQw
     g$letrec-transformer$11742$1XjQw
     (case-lambda
       ((g$e$8706$1XjQw g$r$8707$1XjQw g$mr$8708$1XjQw)
        (g$letrec-helper$8250$1XjQw
          g$e$8706$1XjQw
          g$r$8707$1XjQw
          g$mr$8708$1XjQw
          g$build-letrec$7954$1XjQw))))
   (g$letrec*-transformer$8252$1XjQw
     g$letrec*-transformer$11743$1XjQw
     (case-lambda
       ((g$e$8709$1XjQw g$r$8710$1XjQw g$mr$8711$1XjQw)
        (g$letrec-helper$8250$1XjQw
          g$e$8709$1XjQw
          g$r$8710$1XjQw
          g$mr$8711$1XjQw
          g$build-letrec*$7955$1XjQw))))
   (g$fluid-let-syntax-transformer$8253$1XjQw
     g$fluid-let-syntax-transformer$11744$1XjQw
     (case-lambda
       ((g$e$8712$1XjQw g$r$8713$1XjQw g$mr$8714$1XjQw)
        (letrec* ((g$lookup$8715$1XjQw
                    (case-lambda
                      ((g$x$8725$1XjQw)
                       ((case-lambda
                          ((g$t$8726$1XjQw)
                           (if g$t$8726$1XjQw
                             g$t$8726$1XjQw
                             (begin
                               '#f
                               (g$syntax-violation$8412$1XjQw
                                 '#f
                                 '"unbound identifier"
                                 g$e$8712$1XjQw
                                 g$x$8725$1XjQw)))))
                        (g$id->label$8036$1XjQw g$x$8725$1XjQw))))))
          ((case-lambda
             ((g$t$8716$1XjQw)
              ((case-lambda
                 ((g$ls/false$8717$1XjQw)
                  (if g$ls/false$8717$1XjQw
                    (apply
                      (case-lambda
                        ((g$lhs*$8718$1XjQw
                           g$rhs*$8719$1XjQw
                           g$b$8720$1XjQw
                           g$b*$8721$1XjQw)
                         (if (not (g$valid-bound-ids?$8028$1XjQw
                                    g$lhs*$8718$1XjQw))
                           (g$invalid-fmls-error$8266$1XjQw
                             g$e$8712$1XjQw
                             g$lhs*$8718$1XjQw)
                           ((case-lambda
                              ((g$lab*$8722$1XjQw g$rhs*$8723$1XjQw)
                               (g$chi-internal$8330$1XjQw
                                 (cons g$b$8720$1XjQw g$b*$8721$1XjQw)
                                 (append
                                   (g$map$5757$1XjQw
                                     cons
                                     g$lab*$8722$1XjQw
                                     g$rhs*$8723$1XjQw)
                                   g$r$8713$1XjQw)
                                 (append
                                   (g$map$5757$1XjQw
                                     cons
                                     g$lab*$8722$1XjQw
                                     g$rhs*$8723$1XjQw)
                                   g$mr$8714$1XjQw))))
                            (g$map$5757$1XjQw
                              g$lookup$8715$1XjQw
                              g$lhs*$8718$1XjQw)
                            (g$map$5757$1XjQw
                              (case-lambda
                                ((g$x$8724$1XjQw)
                                 (g$make-eval-transformer$8055$1XjQw
                                   (g$expand-transformer$8346$1XjQw
                                     g$x$8724$1XjQw
                                     g$mr$8714$1XjQw))))
                              g$rhs*$8719$1XjQw)))))
                      g$ls/false$8717$1XjQw)
                    (g$syntax-violation$8412$1XjQw
                      '#f
                      '"invalid syntax"
                      g$t$8716$1XjQw))))
               (g$syntax-dispatch$8301$1XjQw
                 g$t$8716$1XjQw
                 '(_ #(each (any any)) any . each-any)))))
           g$e$8712$1XjQw)))))
   (g$type-descriptor-transformer$8254$1XjQw
     g$type-descriptor-transformer$11745$1XjQw
     (case-lambda
       ((g$e$8727$1XjQw g$r$8728$1XjQw g$mr$8729$1XjQw)
        ((case-lambda
           ((g$t$8730$1XjQw)
            ((case-lambda
               ((g$ls/false$8731$1XjQw)
                (if (if g$ls/false$8731$1XjQw
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8732$1XjQw)
                             (g$id?$8023$1XjQw g$id$8732$1XjQw)))
                          g$ls/false$8731$1XjQw))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8733$1XjQw)
                       ((case-lambda
                          ((g$lab$8734$1XjQw)
                           ((case-lambda
                              ((g$b$8735$1XjQw)
                               ((case-lambda
                                  ((g$type$8736$1XjQw)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8734$1XjQw)
                                           (g$raise-unbound-error$8042$1XjQw
                                             g$id$8733$1XjQw)
                                           (void))
                                         (if (not (if (eq? g$type$8736$1XjQw
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (not (list?
                                                             (g$binding-value$8041$1XjQw
                                                               g$b$8735$1XjQw))))
                                                    '#f))
                                           (g$syntax-violation$8412$1XjQw
                                             '#f
                                             '"not a record type"
                                             g$e$8727$1XjQw)
                                           (void))
                                         (list
                                           'quote
                                           (g$binding-value$8041$1XjQw
                                             g$b$8735$1XjQw))))))))
                                (g$binding-type$8040$1XjQw g$b$8735$1XjQw))))
                            (g$label->binding$8038$1XjQw
                              g$lab$8734$1XjQw
                              g$r$8728$1XjQw))))
                        (g$id->label$8036$1XjQw g$id$8733$1XjQw))))
                    g$ls/false$8731$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$8730$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$8730$1XjQw '(_ any)))))
         g$e$8727$1XjQw))))
   (g$record-type-descriptor-transformer$8255$1XjQw
     g$record-type-descriptor-transformer$11746$1XjQw
     (case-lambda
       ((g$e$8737$1XjQw g$r$8738$1XjQw g$mr$8739$1XjQw)
        ((case-lambda
           ((g$t$8740$1XjQw)
            ((case-lambda
               ((g$ls/false$8741$1XjQw)
                (if (if g$ls/false$8741$1XjQw
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8742$1XjQw)
                             (g$id?$8023$1XjQw g$id$8742$1XjQw)))
                          g$ls/false$8741$1XjQw))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8743$1XjQw)
                       ((case-lambda
                          ((g$lab$8744$1XjQw)
                           ((case-lambda
                              ((g$b$8745$1XjQw)
                               ((case-lambda
                                  ((g$type$8746$1XjQw)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8744$1XjQw)
                                           (g$raise-unbound-error$8042$1XjQw
                                             g$id$8743$1XjQw)
                                           (void))
                                         (if (not (if (eq? g$type$8746$1XjQw
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$8041$1XjQw
                                                          g$b$8745$1XjQw)))
                                                    '#f))
                                           (g$syntax-violation$8412$1XjQw
                                             '#f
                                             '"not a record type"
                                             g$e$8737$1XjQw)
                                           (void))
                                         (g$chi-expr$8319$1XjQw
                                           (car (g$binding-value$8041$1XjQw
                                                  g$b$8745$1XjQw))
                                           g$r$8738$1XjQw
                                           g$mr$8739$1XjQw)))))))
                                (g$binding-type$8040$1XjQw g$b$8745$1XjQw))))
                            (g$label->binding$8038$1XjQw
                              g$lab$8744$1XjQw
                              g$r$8738$1XjQw))))
                        (g$id->label$8036$1XjQw g$id$8743$1XjQw))))
                    g$ls/false$8741$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$8740$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$8740$1XjQw '(_ any)))))
         g$e$8737$1XjQw))))
   (g$record-constructor-descriptor-transformer$8256$1XjQw
     g$record-constructor-descriptor-transformer$11747$1XjQw
     (case-lambda
       ((g$e$8747$1XjQw g$r$8748$1XjQw g$mr$8749$1XjQw)
        ((case-lambda
           ((g$t$8750$1XjQw)
            ((case-lambda
               ((g$ls/false$8751$1XjQw)
                (if (if g$ls/false$8751$1XjQw
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8752$1XjQw)
                             (g$id?$8023$1XjQw g$id$8752$1XjQw)))
                          g$ls/false$8751$1XjQw))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8753$1XjQw)
                       ((case-lambda
                          ((g$lab$8754$1XjQw)
                           ((case-lambda
                              ((g$b$8755$1XjQw)
                               ((case-lambda
                                  ((g$type$8756$1XjQw)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8754$1XjQw)
                                           (g$raise-unbound-error$8042$1XjQw
                                             g$id$8753$1XjQw)
                                           (void))
                                         (if (not (if (eq? g$type$8756$1XjQw
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$8041$1XjQw
                                                          g$b$8755$1XjQw)))
                                                    '#f))
                                           (g$syntax-violation$8412$1XjQw
                                             '#f
                                             '"invalid type"
                                             g$e$8747$1XjQw)
                                           (void))
                                         (g$chi-expr$8319$1XjQw
                                           (g$cadr$5921$1XjQw
                                             (g$binding-value$8041$1XjQw
                                               g$b$8755$1XjQw))
                                           g$r$8748$1XjQw
                                           g$mr$8749$1XjQw)))))))
                                (g$binding-type$8040$1XjQw g$b$8755$1XjQw))))
                            (g$label->binding$8038$1XjQw
                              g$lab$8754$1XjQw
                              g$r$8748$1XjQw))))
                        (g$id->label$8036$1XjQw g$id$8753$1XjQw))))
                    g$ls/false$8751$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$8750$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$8750$1XjQw '(_ any)))))
         g$e$8747$1XjQw))))
   (g$when-macro$8257$1XjQw
     g$when-macro$11748$1XjQw
     (case-lambda
       ((g$e$8757$1XjQw)
        ((case-lambda
           ((g$t$8758$1XjQw)
            ((case-lambda
               ((g$ls/false$8759$1XjQw)
                (if g$ls/false$8759$1XjQw
                  (apply
                    (case-lambda
                      ((g$test$8760$1XjQw g$e$8761$1XjQw g$e*$8762$1XjQw)
                       (g$bless$8264$1XjQw
                         (list
                           'if
                           g$test$8760$1XjQw
                           (cons
                             'begin
                             (cons g$e$8761$1XjQw g$e*$8762$1XjQw))))))
                    g$ls/false$8759$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$8758$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw
               g$t$8758$1XjQw
               '(_ any any . each-any)))))
         g$e$8757$1XjQw))))
   (g$unless-macro$8258$1XjQw
     g$unless-macro$11749$1XjQw
     (case-lambda
       ((g$e$8763$1XjQw)
        ((case-lambda
           ((g$t$8764$1XjQw)
            ((case-lambda
               ((g$ls/false$8765$1XjQw)
                (if g$ls/false$8765$1XjQw
                  (apply
                    (case-lambda
                      ((g$test$8766$1XjQw g$e$8767$1XjQw g$e*$8768$1XjQw)
                       (g$bless$8264$1XjQw
                         (list
                           'if
                           (list 'not g$test$8766$1XjQw)
                           (cons
                             'begin
                             (cons g$e$8767$1XjQw g$e*$8768$1XjQw))))))
                    g$ls/false$8765$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$8764$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw
               g$t$8764$1XjQw
               '(_ any any . each-any)))))
         g$e$8763$1XjQw))))
   (g$if-transformer$8259$1XjQw
     g$if-transformer$11750$1XjQw
     (case-lambda
       ((g$e$8769$1XjQw g$r$8770$1XjQw g$mr$8771$1XjQw)
        ((case-lambda
           ((g$t$8772$1XjQw)
            ((case-lambda
               ((g$ls/false$8773$1XjQw)
                (if g$ls/false$8773$1XjQw
                  (apply
                    (case-lambda
                      ((g$e0$8774$1XjQw g$e1$8775$1XjQw g$e2$8776$1XjQw)
                       (list
                         'if
                         (g$chi-expr$8319$1XjQw
                           g$e0$8774$1XjQw
                           g$r$8770$1XjQw
                           g$mr$8771$1XjQw)
                         (g$chi-expr$8319$1XjQw
                           g$e1$8775$1XjQw
                           g$r$8770$1XjQw
                           g$mr$8771$1XjQw)
                         (g$chi-expr$8319$1XjQw
                           g$e2$8776$1XjQw
                           g$r$8770$1XjQw
                           g$mr$8771$1XjQw))))
                    g$ls/false$8773$1XjQw)
                  ((case-lambda
                     ((g$t$8777$1XjQw)
                      ((case-lambda
                         ((g$ls/false$8778$1XjQw)
                          (if g$ls/false$8778$1XjQw
                            (apply
                              (case-lambda
                                ((g$e0$8779$1XjQw g$e1$8780$1XjQw)
                                 (list
                                   'if
                                   (g$chi-expr$8319$1XjQw
                                     g$e0$8779$1XjQw
                                     g$r$8770$1XjQw
                                     g$mr$8771$1XjQw)
                                   (g$chi-expr$8319$1XjQw
                                     g$e1$8780$1XjQw
                                     g$r$8770$1XjQw
                                     g$mr$8771$1XjQw)
                                   (g$build-void$7953$1XjQw))))
                              g$ls/false$8778$1XjQw)
                            (g$syntax-violation$8412$1XjQw
                              '#f
                              '"invalid syntax"
                              g$t$8777$1XjQw))))
                       (g$syntax-dispatch$8301$1XjQw
                         g$t$8777$1XjQw
                         '(_ any any)))))
                   g$t$8772$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$8772$1XjQw '(_ any any any)))))
         g$e$8769$1XjQw))))
   (g$case-macro$8260$1XjQw
     g$case-macro$11751$1XjQw
     (case-lambda
       ((g$e$8781$1XjQw)
        (letrec* ((g$build-last$8782$1XjQw
                    (case-lambda
                      ((g$cls$8802$1XjQw)
                       ((case-lambda
                          ((g$t$8803$1XjQw)
                           ((case-lambda
                              ((g$ls/false$8804$1XjQw)
                               (if g$ls/false$8804$1XjQw
                                 (apply
                                   (case-lambda
                                     ((g$e$8805$1XjQw g$e*$8806$1XjQw)
                                      (cons
                                        'begin
                                        (cons g$e$8805$1XjQw g$e*$8806$1XjQw))))
                                   g$ls/false$8804$1XjQw)
                                 ((case-lambda
                                    ((g$t$8807$1XjQw)
                                     ((case-lambda
                                        ((g$ls/false$8808$1XjQw)
                                         (if g$ls/false$8808$1XjQw
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$8783$1XjQw
                                                  g$cls$8802$1XjQw
                                                  '(if #f #f))))
                                             g$ls/false$8808$1XjQw)
                                           (g$syntax-violation$8412$1XjQw
                                             '#f
                                             '"invalid syntax"
                                             g$t$8807$1XjQw))))
                                      (g$syntax-dispatch$8301$1XjQw
                                        g$t$8807$1XjQw
                                        '_))))
                                  g$t$8803$1XjQw))))
                            (g$syntax-dispatch$8301$1XjQw
                              g$t$8803$1XjQw
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$8802$1XjQw))))
                  (g$build-one$8783$1XjQw
                    (case-lambda
                      ((g$cls$8795$1XjQw g$k$8796$1XjQw)
                       ((case-lambda
                          ((g$t$8797$1XjQw)
                           ((case-lambda
                              ((g$ls/false$8798$1XjQw)
                               (if g$ls/false$8798$1XjQw
                                 (apply
                                   (case-lambda
                                     ((g$d*$8799$1XjQw
                                        g$e$8800$1XjQw
                                        g$e*$8801$1XjQw)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$8799$1XjQw))
                                        (cons
                                          'begin
                                          (cons g$e$8800$1XjQw g$e*$8801$1XjQw))
                                        g$k$8796$1XjQw)))
                                   g$ls/false$8798$1XjQw)
                                 (g$syntax-violation$8412$1XjQw
                                   '#f
                                   '"invalid syntax"
                                   g$t$8797$1XjQw))))
                            (g$syntax-dispatch$8301$1XjQw
                              g$t$8797$1XjQw
                              '(each-any any . each-any)))))
                        g$cls$8795$1XjQw)))))
          ((case-lambda
             ((g$t$8784$1XjQw)
              ((case-lambda
                 ((g$ls/false$8785$1XjQw)
                  (if g$ls/false$8785$1XjQw
                    (apply
                      (case-lambda
                        ((g$expr$8786$1XjQw)
                         (g$bless$8264$1XjQw
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$8786$1XjQw))
                               '((if #f #f)))))))
                      g$ls/false$8785$1XjQw)
                    ((case-lambda
                       ((g$t$8787$1XjQw)
                        ((case-lambda
                           ((g$ls/false$8788$1XjQw)
                            (if g$ls/false$8788$1XjQw
                              (apply
                                (case-lambda
                                  ((g$expr$8789$1XjQw
                                     g$cls$8790$1XjQw
                                     g$cls*$8791$1XjQw)
                                   (g$bless$8264$1XjQw
                                     (list
                                       'let
                                       (list (list 't g$expr$8789$1XjQw))
                                       ((letrec ((g$f$8792$1XjQw
                                                   (case-lambda
                                                     ((g$cls$8793$1XjQw
                                                        g$cls*$8794$1XjQw)
                                                      (if (null?
                                                            g$cls*$8794$1XjQw)
                                                        (g$build-last$8782$1XjQw
                                                          g$cls$8793$1XjQw)
                                                        (g$build-one$8783$1XjQw
                                                          g$cls$8793$1XjQw
                                                          (g$f$8792$1XjQw
                                                            (car g$cls*$8794$1XjQw)
                                                            (cdr g$cls*$8794$1XjQw))))))))
                                          g$f$8792$1XjQw)
                                        g$cls$8790$1XjQw
                                        g$cls*$8791$1XjQw)))))
                                g$ls/false$8788$1XjQw)
                              (g$syntax-violation$8412$1XjQw
                                '#f
                                '"invalid syntax"
                                g$t$8787$1XjQw))))
                         (g$syntax-dispatch$8301$1XjQw
                           g$t$8787$1XjQw
                           '(_ any any . each-any)))))
                     g$t$8784$1XjQw))))
               (g$syntax-dispatch$8301$1XjQw g$t$8784$1XjQw '(_ any)))))
           g$e$8781$1XjQw)))))
   (g$quote-transformer$8261$1XjQw
     g$quote-transformer$11752$1XjQw
     (case-lambda
       ((g$e$8809$1XjQw g$r$8810$1XjQw g$mr$8811$1XjQw)
        ((case-lambda
           ((g$t$8812$1XjQw)
            ((case-lambda
               ((g$ls/false$8813$1XjQw)
                (if g$ls/false$8813$1XjQw
                  (apply
                    (case-lambda
                      ((g$datum$8814$1XjQw)
                       (list
                         'quote
                         (g$stx->datum$8034$1XjQw g$datum$8814$1XjQw))))
                    g$ls/false$8813$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$8812$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$8812$1XjQw '(_ any)))))
         g$e$8809$1XjQw))))
   (g$case-lambda-transformer$8262$1XjQw
     g$case-lambda-transformer$11753$1XjQw
     (case-lambda
       ((g$e$8815$1XjQw g$r$8816$1XjQw g$mr$8817$1XjQw)
        ((case-lambda
           ((g$t$8818$1XjQw)
            ((case-lambda
               ((g$ls/false$8819$1XjQw)
                (if g$ls/false$8819$1XjQw
                  (apply
                    (case-lambda
                      ((g$fmls*$8820$1XjQw g$b*$8821$1XjQw g$b**$8822$1XjQw)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$8323$1XjQw
                              g$e$8815$1XjQw
                              g$fmls*$8820$1XjQw
                              (g$map$5757$1XjQw
                                cons
                                g$b*$8821$1XjQw
                                g$b**$8822$1XjQw)
                              g$r$8816$1XjQw
                              g$mr$8817$1XjQw)))
                         (case-lambda
                           ((g$fmls*$8825$1XjQw g$body*$8826$1XjQw)
                            ((case-lambda
                               ((g$body*$8827$1XjQw g$fmls*$8828$1XjQw)
                                (g$build-case-lambda$7950$1XjQw
                                  '#f
                                  g$fmls*$8828$1XjQw
                                  g$body*$8827$1XjQw)))
                             g$body*$8826$1XjQw
                             g$fmls*$8825$1XjQw))))))
                    g$ls/false$8819$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$8818$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw
               g$t$8818$1XjQw
               '(_ . #(each (any any . each-any)))))))
         g$e$8815$1XjQw))))
   (g$lambda-transformer$8263$1XjQw
     g$lambda-transformer$11754$1XjQw
     (case-lambda
       ((g$e$8829$1XjQw g$r$8830$1XjQw g$mr$8831$1XjQw)
        ((case-lambda
           ((g$t$8832$1XjQw)
            ((case-lambda
               ((g$ls/false$8833$1XjQw)
                (if g$ls/false$8833$1XjQw
                  (apply
                    (case-lambda
                      ((g$fmls$8834$1XjQw g$b$8835$1XjQw g$b*$8836$1XjQw)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$8322$1XjQw
                              g$e$8829$1XjQw
                              g$fmls$8834$1XjQw
                              (cons g$b$8835$1XjQw g$b*$8836$1XjQw)
                              g$r$8830$1XjQw
                              g$mr$8831$1XjQw)))
                         (case-lambda
                           ((g$fmls$8839$1XjQw g$body$8840$1XjQw)
                            ((case-lambda
                               ((g$body$8841$1XjQw g$fmls$8842$1XjQw)
                                (g$build-lambda$7949$1XjQw
                                  '#f
                                  g$fmls$8842$1XjQw
                                  g$body$8841$1XjQw)))
                             g$body$8840$1XjQw
                             g$fmls$8839$1XjQw))))))
                    g$ls/false$8833$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$8832$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw
               g$t$8832$1XjQw
               '(_ any any . each-any)))))
         g$e$8829$1XjQw))))
   (g$bless$8264$1XjQw
     g$bless$11755$1XjQw
     (case-lambda
       ((g$x$8843$1XjQw)
        (g$mkstx$8011$1XjQw
          ((letrec ((g$f$8844$1XjQw
                      (case-lambda
                        ((g$x$8845$1XjQw)
                         (if (g$stx?$7995$1XjQw g$x$8845$1XjQw)
                           g$x$8845$1XjQw
                           (if (pair? g$x$8845$1XjQw)
                             (cons
                               (g$f$8844$1XjQw (car g$x$8845$1XjQw))
                               (g$f$8844$1XjQw (cdr g$x$8845$1XjQw)))
                             (if (symbol? g$x$8845$1XjQw)
                               (g$scheme-stx$8244$1XjQw g$x$8845$1XjQw)
                               (if (vector? g$x$8845$1XjQw)
                                 (vector-map g$f$8844$1XjQw g$x$8845$1XjQw)
                                 g$x$8845$1XjQw))))))))
             g$f$8844$1XjQw)
           g$x$8843$1XjQw)
          '()
          '()
          '()))))
   (g$with-syntax-macro$8265$1XjQw
     g$with-syntax-macro$11756$1XjQw
     (case-lambda
       ((g$e$8846$1XjQw)
        ((case-lambda
           ((g$t$8847$1XjQw)
            ((case-lambda
               ((g$ls/false$8848$1XjQw)
                (if g$ls/false$8848$1XjQw
                  (apply
                    (case-lambda
                      ((g$pat*$8849$1XjQw
                         g$expr*$8850$1XjQw
                         g$b$8851$1XjQw
                         g$b*$8852$1XjQw)
                       ((case-lambda
                          ((g$idn*$8853$1XjQw)
                           (begin
                             (g$verify-formals$8321$1XjQw
                               (g$map$5757$1XjQw car g$idn*$8853$1XjQw)
                               g$e$8846$1XjQw)
                             ((case-lambda
                                ((g$t*$8854$1XjQw)
                                 (g$bless$8264$1XjQw
                                   (list
                                     'let
                                     (g$map$5757$1XjQw
                                       list
                                       g$t*$8854$1XjQw
                                       g$expr*$8850$1XjQw)
                                     ((letrec ((g$f$8855$1XjQw
                                                 (case-lambda
                                                   ((g$pat*$8856$1XjQw
                                                      g$t*$8857$1XjQw)
                                                    (if (null?
                                                          g$pat*$8856$1XjQw)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8851$1XjQw
                                                            g$b*$8852$1XjQw)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8857$1XjQw)
                                                        '()
                                                        (list
                                                          (car g$pat*$8856$1XjQw)
                                                          (g$f$8855$1XjQw
                                                            (cdr g$pat*$8856$1XjQw)
                                                            (cdr g$t*$8857$1XjQw)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8856$1XjQw))
                                                            (car g$t*$8857$1XjQw)))))))))
                                        g$f$8855$1XjQw)
                                      g$pat*$8849$1XjQw
                                      g$t*$8854$1XjQw)))))
                              (g$generate-temporaries$8402$1XjQw
                                g$expr*$8850$1XjQw)))))
                        ((letrec ((g$f$8858$1XjQw
                                    (case-lambda
                                      ((g$pat*$8859$1XjQw)
                                       (if (null? g$pat*$8859$1XjQw)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$8300$1XjQw
                                                (car g$pat*$8859$1XjQw)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8862$1XjQw
                                                g$idn*$8863$1XjQw)
                                              ((case-lambda
                                                 ((g$idn*$8864$1XjQw
                                                    g$pat$8865$1XjQw)
                                                  (append
                                                    g$idn*$8864$1XjQw
                                                    (g$f$8858$1XjQw
                                                      (cdr g$pat*$8859$1XjQw)))))
                                               g$idn*$8863$1XjQw
                                               g$pat$8862$1XjQw)))))))))
                           g$f$8858$1XjQw)
                         g$pat*$8849$1XjQw))))
                    g$ls/false$8848$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$8847$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw
               g$t$8847$1XjQw
               '(_ #(each (any any)) any . each-any)))))
         g$e$8846$1XjQw))))
   (g$invalid-fmls-error$8266$1XjQw
     g$invalid-fmls-error$11757$1XjQw
     (case-lambda
       ((g$stx$8866$1XjQw g$fmls$8867$1XjQw)
        ((case-lambda
           ((g$t$8868$1XjQw)
            ((case-lambda
               ((g$ls/false$8869$1XjQw)
                (if g$ls/false$8869$1XjQw
                  (apply
                    (case-lambda
                      ((g$id*$8870$1XjQw g$last$8871$1XjQw)
                       ((letrec ((g$f$8872$1XjQw
                                   (case-lambda
                                     ((g$id*$8873$1XjQw)
                                      (if (null? g$id*$8873$1XjQw)
                                        (values)
                                        (if (not (g$id?$8023$1XjQw
                                                   (car g$id*$8873$1XjQw)))
                                          (g$syntax-violation$8412$1XjQw
                                            '#f
                                            '"not an identifier"
                                            g$stx$8866$1XjQw
                                            (car g$id*$8873$1XjQw))
                                          (begin
                                            (g$f$8872$1XjQw
                                              (cdr g$id*$8873$1XjQw))
                                            (if (g$bound-id-member?$8030$1XjQw
                                                  (car g$id*$8873$1XjQw)
                                                  (cdr g$id*$8873$1XjQw))
                                              (g$syntax-violation$8412$1XjQw
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8866$1XjQw
                                                (car g$id*$8873$1XjQw))
                                              (void)))))))))
                          g$f$8872$1XjQw)
                        (if (g$id?$8023$1XjQw g$last$8871$1XjQw)
                          (cons g$last$8871$1XjQw g$id*$8870$1XjQw)
                          (if (g$syntax-null?$8018$1XjQw g$last$8871$1XjQw)
                            g$id*$8870$1XjQw
                            (g$syntax-violation$8412$1XjQw
                              '#f
                              '"not an identifier"
                              g$stx$8866$1XjQw
                              g$last$8871$1XjQw))))))
                    g$ls/false$8869$1XjQw)
                  ((case-lambda
                     ((g$t$8874$1XjQw)
                      ((case-lambda
                         ((g$ls/false$8875$1XjQw)
                          (if g$ls/false$8875$1XjQw
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$8412$1XjQw
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8866$1XjQw
                                   g$fmls$8867$1XjQw)))
                              g$ls/false$8875$1XjQw)
                            (g$syntax-violation$8412$1XjQw
                              '#f
                              '"invalid syntax"
                              g$t$8874$1XjQw))))
                       (g$syntax-dispatch$8301$1XjQw g$t$8874$1XjQw '_))))
                   g$t$8868$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw
               g$t$8868$1XjQw
               '#(each+ any () any)))))
         g$fmls$8867$1XjQw))))
   (g$let-macro$8267$1XjQw
     g$let-macro$11758$1XjQw
     (case-lambda
       ((g$stx$8876$1XjQw)
        ((case-lambda
           ((g$t$8877$1XjQw)
            ((case-lambda
               ((g$ls/false$8878$1XjQw)
                (if g$ls/false$8878$1XjQw
                  (apply
                    (case-lambda
                      ((g$lhs*$8879$1XjQw
                         g$rhs*$8880$1XjQw
                         g$b$8881$1XjQw
                         g$b*$8882$1XjQw)
                       (if (g$valid-bound-ids?$8028$1XjQw g$lhs*$8879$1XjQw)
                         (g$bless$8264$1XjQw
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8879$1XjQw
                                 (cons g$b$8881$1XjQw g$b*$8882$1XjQw)))
                             g$rhs*$8880$1XjQw))
                         (g$invalid-fmls-error$8266$1XjQw
                           g$stx$8876$1XjQw
                           g$lhs*$8879$1XjQw))))
                    g$ls/false$8878$1XjQw)
                  ((case-lambda
                     ((g$t$8883$1XjQw)
                      ((case-lambda
                         ((g$ls/false$8884$1XjQw)
                          (if (if g$ls/false$8884$1XjQw
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8885$1XjQw
                                         g$lhs*$8886$1XjQw
                                         g$rhs*$8887$1XjQw
                                         g$b$8888$1XjQw
                                         g$b*$8889$1XjQw)
                                       (g$id?$8023$1XjQw g$f$8885$1XjQw)))
                                    g$ls/false$8884$1XjQw))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8890$1XjQw
                                   g$lhs*$8891$1XjQw
                                   g$rhs*$8892$1XjQw
                                   g$b$8893$1XjQw
                                   g$b*$8894$1XjQw)
                                 (if (g$valid-bound-ids?$8028$1XjQw
                                       g$lhs*$8891$1XjQw)
                                   (g$bless$8264$1XjQw
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8890$1XjQw
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$8891$1XjQw
                                                 (cons
                                                   g$b$8893$1XjQw
                                                   g$b*$8894$1XjQw)))))
                                         g$f$8890$1XjQw)
                                       g$rhs*$8892$1XjQw))
                                   (g$invalid-fmls-error$8266$1XjQw
                                     g$stx$8876$1XjQw
                                     g$lhs*$8891$1XjQw))))
                              g$ls/false$8884$1XjQw)
                            (g$syntax-violation$8412$1XjQw
                              '#f
                              '"invalid syntax"
                              g$t$8883$1XjQw))))
                       (g$syntax-dispatch$8301$1XjQw
                         g$t$8883$1XjQw
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8877$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw
               g$t$8877$1XjQw
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8876$1XjQw))))
   (g$let-values-macro$8268$1XjQw
     g$let-values-macro$11759$1XjQw
     (case-lambda
       ((g$stx$8895$1XjQw)
        (letrec* ((g$rename$8896$1XjQw
                    (case-lambda
                      ((g$x$8947$1XjQw g$old*$8948$1XjQw g$new*$8949$1XjQw)
                       (begin
                         (if (not (g$id?$8023$1XjQw g$x$8947$1XjQw))
                           (g$syntax-violation$8412$1XjQw
                             '#f
                             '"not an indentifier"
                             g$stx$8895$1XjQw
                             g$x$8947$1XjQw)
                           (void))
                         (if (g$bound-id-member?$8030$1XjQw
                               g$x$8947$1XjQw
                               g$old*$8948$1XjQw)
                           (g$syntax-violation$8412$1XjQw
                             '#f
                             '"duplicate binding"
                             g$stx$8895$1XjQw
                             g$x$8947$1XjQw)
                           (void))
                         ((case-lambda
                            ((g$y$8950$1XjQw)
                             (values
                               g$y$8950$1XjQw
                               (cons g$x$8947$1XjQw g$old*$8948$1XjQw)
                               (cons g$y$8950$1XjQw g$new*$8949$1XjQw))))
                          (gensym
                            (g$syntax->datum$8415$1XjQw g$x$8947$1XjQw)))))))
                  (g$rename*$8897$1XjQw
                    (case-lambda
                      ((g$x*$8938$1XjQw g$old*$8939$1XjQw g$new*$8940$1XjQw)
                       (if (null? g$x*$8938$1XjQw)
                         (values '() g$old*$8939$1XjQw g$new*$8940$1XjQw)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$8896$1XjQw
                                (car g$x*$8938$1XjQw)
                                g$old*$8939$1XjQw
                                g$new*$8940$1XjQw)))
                           (case-lambda
                             ((g$x$8941$1XjQw
                                g$old*$8942$1XjQw
                                g$new*$8943$1XjQw)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$8897$1XjQw
                                     (cdr g$x*$8938$1XjQw)
                                     g$old*$8942$1XjQw
                                     g$new*$8943$1XjQw)))
                                (case-lambda
                                  ((g$x*$8944$1XjQw
                                     g$old*$8945$1XjQw
                                     g$new*$8946$1XjQw)
                                   (values
                                     (cons g$x$8941$1XjQw g$x*$8944$1XjQw)
                                     g$old*$8945$1XjQw
                                     g$new*$8946$1XjQw))))))))))))
          ((case-lambda
             ((g$t$8898$1XjQw)
              ((case-lambda
                 ((g$ls/false$8899$1XjQw)
                  (if g$ls/false$8899$1XjQw
                    (apply
                      (case-lambda
                        ((g$b$8900$1XjQw g$b*$8901$1XjQw)
                         (g$cons*$5759$1XjQw
                           (g$bless$8264$1XjQw 'let)
                           '()
                           g$b$8900$1XjQw
                           g$b*$8901$1XjQw)))
                      g$ls/false$8899$1XjQw)
                    ((case-lambda
                       ((g$t$8902$1XjQw)
                        ((case-lambda
                           ((g$ls/false$8903$1XjQw)
                            (if g$ls/false$8903$1XjQw
                              (apply
                                (case-lambda
                                  ((g$lhs*$8904$1XjQw
                                     g$rhs*$8905$1XjQw
                                     g$b$8906$1XjQw
                                     g$b*$8907$1XjQw)
                                   (g$bless$8264$1XjQw
                                     ((letrec ((g$f$8908$1XjQw
                                                 (case-lambda
                                                   ((g$lhs*$8909$1XjQw
                                                      g$rhs*$8910$1XjQw
                                                      g$old*$8911$1XjQw
                                                      g$new*$8912$1XjQw)
                                                    (if (null?
                                                          g$lhs*$8909$1XjQw)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$5757$1XjQw
                                                            list
                                                            g$old*$8911$1XjQw
                                                            g$new*$8912$1XjQw)
                                                          (cons
                                                            g$b$8906$1XjQw
                                                            g$b*$8907$1XjQw)))
                                                      ((case-lambda
                                                         ((g$t$8913$1XjQw)
                                                          ((case-lambda
                                                             ((g$ls/false$8914$1XjQw)
                                                              (if g$ls/false$8914$1XjQw
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8915$1XjQw)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$8897$1XjQw
                                                                            g$x*$8915$1XjQw
                                                                            g$old*$8911$1XjQw
                                                                            g$new*$8912$1XjQw)))
                                                                       (case-lambda
                                                                         ((g$y*$8919$1XjQw
                                                                            g$old*$8920$1XjQw
                                                                            g$new*$8921$1XjQw)
                                                                          ((case-lambda
                                                                             ((g$new*$8922$1XjQw
                                                                                g$old*$8923$1XjQw
                                                                                g$y*$8924$1XjQw)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$8910$1XjQw))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$8924$1XjQw
                                                                                  (g$f$8908$1XjQw
                                                                                    (cdr g$lhs*$8909$1XjQw)
                                                                                    (cdr g$rhs*$8910$1XjQw)
                                                                                    g$old*$8923$1XjQw
                                                                                    g$new*$8922$1XjQw)))))
                                                                           g$new*$8921$1XjQw
                                                                           g$old*$8920$1XjQw
                                                                           g$y*$8919$1XjQw))))))
                                                                  g$ls/false$8914$1XjQw)
                                                                ((case-lambda
                                                                   ((g$t$8925$1XjQw)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8926$1XjQw)
                                                                        (if g$ls/false$8926$1XjQw
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8927$1XjQw
                                                                                 g$x$8928$1XjQw)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$8896$1XjQw
                                                                                      g$x$8928$1XjQw
                                                                                      g$old*$8911$1XjQw
                                                                                      g$new*$8912$1XjQw)))
                                                                                 (case-lambda
                                                                                   ((g$y$8929$1XjQw
                                                                                      g$old*$8930$1XjQw
                                                                                      g$new*$8931$1XjQw)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$8897$1XjQw
                                                                                           g$x*$8927$1XjQw
                                                                                           g$old*$8930$1XjQw
                                                                                           g$new*$8931$1XjQw)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8932$1XjQw
                                                                                           g$old*$8933$1XjQw
                                                                                           g$new*$8934$1XjQw)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$8910$1XjQw))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8932$1XjQw
                                                                                               g$y$8929$1XjQw)
                                                                                             (g$f$8908$1XjQw
                                                                                               (cdr g$lhs*$8909$1XjQw)
                                                                                               (cdr g$rhs*$8910$1XjQw)
                                                                                               g$old*$8933$1XjQw
                                                                                               g$new*$8934$1XjQw)))))))))))
                                                                            g$ls/false$8926$1XjQw)
                                                                          ((case-lambda
                                                                             ((g$t$8935$1XjQw)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8936$1XjQw)
                                                                                  (if g$ls/false$8936$1XjQw
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8937$1XjQw)
                                                                                         (g$syntax-violation$8412$1XjQw
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8895$1XjQw
                                                                                           g$others$8937$1XjQw)))
                                                                                      g$ls/false$8936$1XjQw)
                                                                                    (g$syntax-violation$8412$1XjQw
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8935$1XjQw))))
                                                                               (g$syntax-dispatch$8301$1XjQw
                                                                                 g$t$8935$1XjQw
                                                                                 'any))))
                                                                           g$t$8925$1XjQw))))
                                                                     (g$syntax-dispatch$8301$1XjQw
                                                                       g$t$8925$1XjQw
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8913$1XjQw))))
                                                           (g$syntax-dispatch$8301$1XjQw
                                                             g$t$8913$1XjQw
                                                             'each-any))))
                                                       (car g$lhs*$8909$1XjQw)))))))
                                        g$f$8908$1XjQw)
                                      g$lhs*$8904$1XjQw
                                      g$rhs*$8905$1XjQw
                                      '()
                                      '()))))
                                g$ls/false$8903$1XjQw)
                              (g$syntax-violation$8412$1XjQw
                                '#f
                                '"invalid syntax"
                                g$t$8902$1XjQw))))
                         (g$syntax-dispatch$8301$1XjQw
                           g$t$8902$1XjQw
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8898$1XjQw))))
               (g$syntax-dispatch$8301$1XjQw
                 g$t$8898$1XjQw
                 '(_ () any . each-any)))))
           g$stx$8895$1XjQw)))))
   (g$let*-values-macro$8269$1XjQw
     g$let*-values-macro$11760$1XjQw
     (case-lambda
       ((g$stx$8951$1XjQw)
        (letrec* ((g$check$8952$1XjQw
                    (case-lambda
                      ((g$x*$8976$1XjQw)
                       (if (not (null? g$x*$8976$1XjQw))
                         ((case-lambda
                            ((g$x$8977$1XjQw)
                             (begin
                               (if (not (g$id?$8023$1XjQw g$x$8977$1XjQw))
                                 (g$syntax-violation$8412$1XjQw
                                   '#f
                                   '"not an identifier"
                                   g$stx$8951$1XjQw
                                   g$x$8977$1XjQw)
                                 (void))
                               (g$check$8952$1XjQw (cdr g$x*$8976$1XjQw))
                               (if (g$bound-id-member?$8030$1XjQw
                                     g$x$8977$1XjQw
                                     (cdr g$x*$8976$1XjQw))
                                 (g$syntax-violation$8412$1XjQw
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8951$1XjQw
                                   g$x$8977$1XjQw)
                                 (void)))))
                          (car g$x*$8976$1XjQw))
                         (void))))))
          ((case-lambda
             ((g$t$8953$1XjQw)
              ((case-lambda
                 ((g$ls/false$8954$1XjQw)
                  (if g$ls/false$8954$1XjQw
                    (apply
                      (case-lambda
                        ((g$b$8955$1XjQw g$b*$8956$1XjQw)
                         (g$cons*$5759$1XjQw
                           (g$bless$8264$1XjQw 'let)
                           '()
                           g$b$8955$1XjQw
                           g$b*$8956$1XjQw)))
                      g$ls/false$8954$1XjQw)
                    ((case-lambda
                       ((g$t$8957$1XjQw)
                        ((case-lambda
                           ((g$ls/false$8958$1XjQw)
                            (if g$ls/false$8958$1XjQw
                              (apply
                                (case-lambda
                                  ((g$lhs*$8959$1XjQw
                                     g$rhs*$8960$1XjQw
                                     g$b$8961$1XjQw
                                     g$b*$8962$1XjQw)
                                   (g$bless$8264$1XjQw
                                     ((letrec ((g$f$8963$1XjQw
                                                 (case-lambda
                                                   ((g$lhs*$8964$1XjQw
                                                      g$rhs*$8965$1XjQw)
                                                    (if (null?
                                                          g$lhs*$8964$1XjQw)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8961$1XjQw
                                                          g$b*$8962$1XjQw))
                                                      ((case-lambda
                                                         ((g$t$8966$1XjQw)
                                                          ((case-lambda
                                                             ((g$ls/false$8967$1XjQw)
                                                              (if g$ls/false$8967$1XjQw
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8968$1XjQw)
                                                                     (begin
                                                                       (g$check$8952$1XjQw
                                                                         g$x*$8968$1XjQw)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8965$1XjQw))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8968$1XjQw
                                                                           (g$f$8963$1XjQw
                                                                             (cdr g$lhs*$8964$1XjQw)
                                                                             (cdr g$rhs*$8965$1XjQw)))))))
                                                                  g$ls/false$8967$1XjQw)
                                                                ((case-lambda
                                                                   ((g$t$8969$1XjQw)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8970$1XjQw)
                                                                        (if g$ls/false$8970$1XjQw
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8971$1XjQw
                                                                                 g$x$8972$1XjQw)
                                                                               (begin
                                                                                 (g$check$8952$1XjQw
                                                                                   (cons
                                                                                     g$x$8972$1XjQw
                                                                                     g$x*$8971$1XjQw))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8965$1XjQw))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8971$1XjQw
                                                                                       g$x$8972$1XjQw)
                                                                                     (g$f$8963$1XjQw
                                                                                       (cdr g$lhs*$8964$1XjQw)
                                                                                       (cdr g$rhs*$8965$1XjQw)))))))
                                                                            g$ls/false$8970$1XjQw)
                                                                          ((case-lambda
                                                                             ((g$t$8973$1XjQw)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8974$1XjQw)
                                                                                  (if g$ls/false$8974$1XjQw
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8975$1XjQw)
                                                                                         (g$syntax-violation$8412$1XjQw
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8951$1XjQw
                                                                                           g$others$8975$1XjQw)))
                                                                                      g$ls/false$8974$1XjQw)
                                                                                    (g$syntax-violation$8412$1XjQw
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8973$1XjQw))))
                                                                               (g$syntax-dispatch$8301$1XjQw
                                                                                 g$t$8973$1XjQw
                                                                                 'any))))
                                                                           g$t$8969$1XjQw))))
                                                                     (g$syntax-dispatch$8301$1XjQw
                                                                       g$t$8969$1XjQw
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8966$1XjQw))))
                                                           (g$syntax-dispatch$8301$1XjQw
                                                             g$t$8966$1XjQw
                                                             'each-any))))
                                                       (car g$lhs*$8964$1XjQw)))))))
                                        g$f$8963$1XjQw)
                                      g$lhs*$8959$1XjQw
                                      g$rhs*$8960$1XjQw))))
                                g$ls/false$8958$1XjQw)
                              (g$syntax-violation$8412$1XjQw
                                '#f
                                '"invalid syntax"
                                g$t$8957$1XjQw))))
                         (g$syntax-dispatch$8301$1XjQw
                           g$t$8957$1XjQw
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8953$1XjQw))))
               (g$syntax-dispatch$8301$1XjQw
                 g$t$8953$1XjQw
                 '(_ () any . each-any)))))
           g$stx$8951$1XjQw)))))
   (g$trace-lambda-macro$8270$1XjQw
     g$trace-lambda-macro$11761$1XjQw
     (case-lambda
       ((g$stx$8978$1XjQw)
        ((case-lambda
           ((g$t$8979$1XjQw)
            ((case-lambda
               ((g$ls/false$8980$1XjQw)
                (if g$ls/false$8980$1XjQw
                  (apply
                    (case-lambda
                      ((g$who$8981$1XjQw
                         g$fmls$8982$1XjQw
                         g$b$8983$1XjQw
                         g$b*$8984$1XjQw)
                       (if (g$valid-bound-ids?$8028$1XjQw g$fmls$8982$1XjQw)
                         (g$bless$8264$1XjQw
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8981$1XjQw)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8982$1XjQw
                                 (cons g$b$8983$1XjQw g$b*$8984$1XjQw)))))
                         (g$invalid-fmls-error$8266$1XjQw
                           g$stx$8978$1XjQw
                           g$fmls$8982$1XjQw))))
                    g$ls/false$8980$1XjQw)
                  ((case-lambda
                     ((g$t$8985$1XjQw)
                      ((case-lambda
                         ((g$ls/false$8986$1XjQw)
                          (if g$ls/false$8986$1XjQw
                            (apply
                              (case-lambda
                                ((g$who$8987$1XjQw
                                   g$fmls$8988$1XjQw
                                   g$last$8989$1XjQw
                                   g$b$8990$1XjQw
                                   g$b*$8991$1XjQw)
                                 (if (g$valid-bound-ids?$8028$1XjQw
                                       (cons
                                         g$last$8989$1XjQw
                                         g$fmls$8988$1XjQw))
                                   (g$bless$8264$1XjQw
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8987$1XjQw)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8988$1XjQw
                                             g$last$8989$1XjQw)
                                           (cons
                                             g$b$8990$1XjQw
                                             g$b*$8991$1XjQw)))))
                                   (g$invalid-fmls-error$8266$1XjQw
                                     g$stx$8978$1XjQw
                                     (append
                                       g$fmls$8988$1XjQw
                                       g$last$8989$1XjQw)))))
                              g$ls/false$8986$1XjQw)
                            (g$syntax-violation$8412$1XjQw
                              '#f
                              '"invalid syntax"
                              g$t$8985$1XjQw))))
                       (g$syntax-dispatch$8301$1XjQw
                         g$t$8985$1XjQw
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8979$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw
               g$t$8979$1XjQw
               '(_ any each-any any . each-any)))))
         g$stx$8978$1XjQw))))
   (g$trace-define-macro$8271$1XjQw
     g$trace-define-macro$11762$1XjQw
     (case-lambda
       ((g$stx$8992$1XjQw)
        ((case-lambda
           ((g$t$8993$1XjQw)
            ((case-lambda
               ((g$ls/false$8994$1XjQw)
                (if g$ls/false$8994$1XjQw
                  (apply
                    (case-lambda
                      ((g$who$8995$1XjQw
                         g$fmls$8996$1XjQw
                         g$b$8997$1XjQw
                         g$b*$8998$1XjQw)
                       (if (g$valid-bound-ids?$8028$1XjQw g$fmls$8996$1XjQw)
                         (g$bless$8264$1XjQw
                           (list
                             'define
                             g$who$8995$1XjQw
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8995$1XjQw)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8996$1XjQw
                                   (cons g$b$8997$1XjQw g$b*$8998$1XjQw))))))
                         (g$invalid-fmls-error$8266$1XjQw
                           g$stx$8992$1XjQw
                           g$fmls$8996$1XjQw))))
                    g$ls/false$8994$1XjQw)
                  ((case-lambda
                     ((g$t$8999$1XjQw)
                      ((case-lambda
                         ((g$ls/false$9000$1XjQw)
                          (if g$ls/false$9000$1XjQw
                            (apply
                              (case-lambda
                                ((g$who$9001$1XjQw
                                   g$fmls$9002$1XjQw
                                   g$last$9003$1XjQw
                                   g$b$9004$1XjQw
                                   g$b*$9005$1XjQw)
                                 (if (g$valid-bound-ids?$8028$1XjQw
                                       (cons
                                         g$last$9003$1XjQw
                                         g$fmls$9002$1XjQw))
                                   (g$bless$8264$1XjQw
                                     (list
                                       'define
                                       g$who$9001$1XjQw
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$9001$1XjQw)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$9002$1XjQw
                                               g$last$9003$1XjQw)
                                             (cons
                                               g$b$9004$1XjQw
                                               g$b*$9005$1XjQw))))))
                                   (g$invalid-fmls-error$8266$1XjQw
                                     g$stx$8992$1XjQw
                                     (append
                                       g$fmls$9002$1XjQw
                                       g$last$9003$1XjQw)))))
                              g$ls/false$9000$1XjQw)
                            ((case-lambda
                               ((g$t$9006$1XjQw)
                                ((case-lambda
                                   ((g$ls/false$9007$1XjQw)
                                    (if g$ls/false$9007$1XjQw
                                      (apply
                                        (case-lambda
                                          ((g$who$9008$1XjQw g$expr$9009$1XjQw)
                                           (if (g$id?$8023$1XjQw
                                                 g$who$9008$1XjQw)
                                             (g$bless$8264$1XjQw
                                               (list
                                                 'define
                                                 g$who$9008$1XjQw
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$9009$1XjQw))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$9008$1XjQw)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$8412$1XjQw
                                               '#f
                                               '"invalid name"
                                               g$stx$8992$1XjQw))))
                                        g$ls/false$9007$1XjQw)
                                      (g$syntax-violation$8412$1XjQw
                                        '#f
                                        '"invalid syntax"
                                        g$t$9006$1XjQw))))
                                 (g$syntax-dispatch$8301$1XjQw
                                   g$t$9006$1XjQw
                                   '(_ any any)))))
                             g$t$8999$1XjQw))))
                       (g$syntax-dispatch$8301$1XjQw
                         g$t$8999$1XjQw
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8993$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw
               g$t$8993$1XjQw
               '(_ (any . each-any) any . each-any)))))
         g$stx$8992$1XjQw))))
   (g$trace-define-syntax-macro$8272$1XjQw
     g$trace-define-syntax-macro$11763$1XjQw
     (case-lambda
       ((g$stx$9010$1XjQw)
        ((case-lambda
           ((g$t$9011$1XjQw)
            ((case-lambda
               ((g$ls/false$9012$1XjQw)
                (if g$ls/false$9012$1XjQw
                  (apply
                    (case-lambda
                      ((g$who$9013$1XjQw g$expr$9014$1XjQw)
                       (if (g$id?$8023$1XjQw g$who$9013$1XjQw)
                         (g$bless$8264$1XjQw
                           (list
                             'define-syntax
                             g$who$9013$1XjQw
                             (list
                               'make-traced-macro
                               (list 'quote g$who$9013$1XjQw)
                               g$expr$9014$1XjQw)))
                         (g$syntax-violation$8412$1XjQw
                           '#f
                           '"invalid name"
                           g$stx$9010$1XjQw))))
                    g$ls/false$9012$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$9011$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$9011$1XjQw '(_ any any)))))
         g$stx$9010$1XjQw))))
   (g$trace-let/rec-syntax$8273$1XjQw
     g$trace-let/rec-syntax$11764$1XjQw
     (case-lambda
       ((g$who$9015$1XjQw)
        (case-lambda
          ((g$stx$9016$1XjQw)
           ((case-lambda
              ((g$t$9017$1XjQw)
               ((case-lambda
                  ((g$ls/false$9018$1XjQw)
                   (if g$ls/false$9018$1XjQw
                     (apply
                       (case-lambda
                         ((g$lhs*$9019$1XjQw
                            g$rhs*$9020$1XjQw
                            g$b$9021$1XjQw
                            g$b*$9022$1XjQw)
                          (if (g$valid-bound-ids?$8028$1XjQw g$lhs*$9019$1XjQw)
                            ((case-lambda
                               ((g$rhs*$9023$1XjQw)
                                (g$bless$8264$1XjQw
                                  (cons
                                    g$who$9015$1XjQw
                                    (cons
                                      (g$map$5757$1XjQw
                                        list
                                        g$lhs*$9019$1XjQw
                                        g$rhs*$9023$1XjQw)
                                      (cons g$b$9021$1XjQw g$b*$9022$1XjQw))))))
                             (g$map$5757$1XjQw
                               (case-lambda
                                 ((g$lhs$9024$1XjQw g$rhs$9025$1XjQw)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$9024$1XjQw)
                                    g$rhs$9025$1XjQw)))
                               g$lhs*$9019$1XjQw
                               g$rhs*$9020$1XjQw))
                            (g$invalid-fmls-error$8266$1XjQw
                              g$stx$9016$1XjQw
                              g$lhs*$9019$1XjQw))))
                       g$ls/false$9018$1XjQw)
                     (g$syntax-violation$8412$1XjQw
                       '#f
                       '"invalid syntax"
                       g$t$9017$1XjQw))))
                (g$syntax-dispatch$8301$1XjQw
                  g$t$9017$1XjQw
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$9016$1XjQw))))))
   (g$trace-let-syntax-macro$8274$1XjQw
     g$trace-let-syntax-macro$11765$1XjQw
     (g$trace-let/rec-syntax$8273$1XjQw 'let-syntax))
   (g$trace-letrec-syntax-macro$8275$1XjQw
     g$trace-letrec-syntax-macro$11766$1XjQw
     (g$trace-let/rec-syntax$8273$1XjQw 'letrec-syntax))
   (g$guard-macro$8276$1XjQw
     g$guard-macro$11767$1XjQw
     (case-lambda
       ((g$x$9026$1XjQw)
        (letrec* ((g$gen-clauses$9027$1XjQw
                    (case-lambda
                      ((g$con$9039$1XjQw
                         g$outerk$9040$1XjQw
                         g$clause*$9041$1XjQw)
                       (letrec* ((g$f$9042$1XjQw
                                   (case-lambda
                                     ((g$x$9070$1XjQw g$k$9071$1XjQw)
                                      ((case-lambda
                                         ((g$t$9072$1XjQw)
                                          ((case-lambda
                                             ((g$ls/false$9073$1XjQw)
                                              (if g$ls/false$9073$1XjQw
                                                (apply
                                                  (case-lambda
                                                    ((g$e$9074$1XjQw
                                                       g$p$9075$1XjQw)
                                                     ((case-lambda
                                                        ((g$t$9076$1XjQw)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$9076$1XjQw
                                                               g$e$9074$1XjQw))
                                                           (list
                                                             'if
                                                             g$t$9076$1XjQw
                                                             (list
                                                               g$p$9075$1XjQw
                                                               g$t$9076$1XjQw)
                                                             g$k$9071$1XjQw))))
                                                      (gensym))))
                                                  g$ls/false$9073$1XjQw)
                                                ((case-lambda
                                                   ((g$t$9077$1XjQw)
                                                    ((case-lambda
                                                       ((g$ls/false$9078$1XjQw)
                                                        (if g$ls/false$9078$1XjQw
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$9079$1XjQw)
                                                               ((case-lambda
                                                                  ((g$t$9080$1XjQw)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$9080$1XjQw
                                                                         g$e$9079$1XjQw))
                                                                     (list
                                                                       'if
                                                                       g$t$9080$1XjQw
                                                                       g$t$9080$1XjQw
                                                                       g$k$9071$1XjQw))))
                                                                (gensym))))
                                                            g$ls/false$9078$1XjQw)
                                                          ((case-lambda
                                                             ((g$t$9081$1XjQw)
                                                              ((case-lambda
                                                                 ((g$ls/false$9082$1XjQw)
                                                                  (if g$ls/false$9082$1XjQw
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$9083$1XjQw
                                                                           g$v$9084$1XjQw
                                                                           g$v*$9085$1XjQw)
                                                                         (list
                                                                           'if
                                                                           g$e$9083$1XjQw
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$9084$1XjQw
                                                                               g$v*$9085$1XjQw))
                                                                           g$k$9071$1XjQw)))
                                                                      g$ls/false$9082$1XjQw)
                                                                    ((case-lambda
                                                                       ((g$t$9086$1XjQw)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9087$1XjQw)
                                                                            (if g$ls/false$9087$1XjQw
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$8412$1XjQw
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$9070$1XjQw)))
                                                                                g$ls/false$9087$1XjQw)
                                                                              (g$syntax-violation$8412$1XjQw
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9086$1XjQw))))
                                                                         (g$syntax-dispatch$8301$1XjQw
                                                                           g$t$9086$1XjQw
                                                                           '_))))
                                                                     g$t$9081$1XjQw))))
                                                               (g$syntax-dispatch$8301$1XjQw
                                                                 g$t$9081$1XjQw
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$9077$1XjQw))))
                                                     (g$syntax-dispatch$8301$1XjQw
                                                       g$t$9077$1XjQw
                                                       '(any)))))
                                                 g$t$9072$1XjQw))))
                                           (g$syntax-dispatch$8301$1XjQw
                                             g$t$9072$1XjQw
                                             '(any #(scheme-id =>) any)))))
                                       g$x$9070$1XjQw))))
                                 (g$f*$9043$1XjQw
                                   (case-lambda
                                     ((g$x*$9050$1XjQw)
                                      ((case-lambda
                                         ((g$t$9051$1XjQw)
                                          ((case-lambda
                                             ((g$ls/false$9052$1XjQw)
                                              (if g$ls/false$9052$1XjQw
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$9039$1XjQw)
                                                       '#t)))
                                                  g$ls/false$9052$1XjQw)
                                                ((case-lambda
                                                   ((g$t$9053$1XjQw)
                                                    ((case-lambda
                                                       ((g$ls/false$9054$1XjQw)
                                                        (if g$ls/false$9054$1XjQw
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$9055$1XjQw
                                                                 g$e*$9056$1XjQw)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$9055$1XjQw
                                                                     g$e*$9056$1XjQw))
                                                                 '#f)))
                                                            g$ls/false$9054$1XjQw)
                                                          ((case-lambda
                                                             ((g$t$9057$1XjQw)
                                                              ((case-lambda
                                                                 ((g$ls/false$9058$1XjQw)
                                                                  (if g$ls/false$9058$1XjQw
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$9059$1XjQw
                                                                           g$cls*$9060$1XjQw)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$9043$1XjQw
                                                                                g$cls*$9060$1XjQw)))
                                                                           (case-lambda
                                                                             ((g$e$9063$1XjQw
                                                                                g$g$9064$1XjQw)
                                                                              ((case-lambda
                                                                                 ((g$g$9065$1XjQw
                                                                                    g$e$9066$1XjQw)
                                                                                  (values
                                                                                    (g$f$9042$1XjQw
                                                                                      g$cls$9059$1XjQw
                                                                                      g$e$9066$1XjQw)
                                                                                    g$g$9065$1XjQw)))
                                                                               g$g$9064$1XjQw
                                                                               g$e$9063$1XjQw))))))
                                                                      g$ls/false$9058$1XjQw)
                                                                    ((case-lambda
                                                                       ((g$t$9067$1XjQw)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9068$1XjQw)
                                                                            (if g$ls/false$9068$1XjQw
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$9069$1XjQw)
                                                                                   (g$syntax-violation$8412$1XjQw
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$9069$1XjQw)))
                                                                                g$ls/false$9068$1XjQw)
                                                                              (g$syntax-violation$8412$1XjQw
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9067$1XjQw))))
                                                                         (g$syntax-dispatch$8301$1XjQw
                                                                           g$t$9067$1XjQw
                                                                           'any))))
                                                                     g$t$9057$1XjQw))))
                                                               (g$syntax-dispatch$8301$1XjQw
                                                                 g$t$9057$1XjQw
                                                                 '(any .
                                                                       any)))))
                                                           g$t$9053$1XjQw))))
                                                     (g$syntax-dispatch$8301$1XjQw
                                                       g$t$9053$1XjQw
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$9051$1XjQw))))
                                           (g$syntax-dispatch$8301$1XjQw
                                             g$t$9051$1XjQw
                                             '()))))
                                       g$x*$9050$1XjQw)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$9043$1XjQw g$clause*$9041$1XjQw)))
                           (case-lambda
                             ((g$code$9046$1XjQw g$raisek$9047$1XjQw)
                              ((case-lambda
                                 ((g$raisek$9048$1XjQw g$code$9049$1XjQw)
                                  (if g$raisek$9048$1XjQw
                                    (list g$outerk$9040$1XjQw g$code$9049$1XjQw)
                                    g$code$9049$1XjQw)))
                               g$raisek$9047$1XjQw
                               g$code$9046$1XjQw)))))))))
          ((case-lambda
             ((g$t$9028$1XjQw)
              ((case-lambda
                 ((g$ls/false$9029$1XjQw)
                  (if (if g$ls/false$9029$1XjQw
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$9030$1XjQw
                                 g$clause*$9031$1XjQw
                                 g$b$9032$1XjQw
                                 g$b*$9033$1XjQw)
                               (g$id?$8023$1XjQw g$con$9030$1XjQw)))
                            g$ls/false$9029$1XjQw))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$9034$1XjQw
                           g$clause*$9035$1XjQw
                           g$b$9036$1XjQw
                           g$b*$9037$1XjQw)
                         ((case-lambda
                            ((g$outerk$9038$1XjQw)
                             (g$bless$8264$1XjQw
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$9038$1XjQw)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$9034$1XjQw)
                                           (g$gen-clauses$9027$1XjQw
                                             g$con$9034$1XjQw
                                             g$outerk$9038$1XjQw
                                             g$clause*$9035$1XjQw))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$9036$1XjQw
                                                 g$b*$9037$1XjQw))))))))))))
                          (gensym))))
                      g$ls/false$9029$1XjQw)
                    (g$syntax-violation$8412$1XjQw
                      '#f
                      '"invalid syntax"
                      g$t$9028$1XjQw))))
               (g$syntax-dispatch$8301$1XjQw
                 g$t$9028$1XjQw
                 '(_ (any . each-any) any . each-any)))))
           g$x$9026$1XjQw)))))
   (g$define-enumeration-macro$8277$1XjQw
     g$define-enumeration-macro$11768$1XjQw
     (case-lambda
       ((g$stx$9088$1XjQw)
        (letrec* ((g$set?$9089$1XjQw
                    (case-lambda
                      ((g$x$9102$1XjQw)
                       ((case-lambda
                          ((g$t$9103$1XjQw)
                           (if g$t$9103$1XjQw
                             g$t$9103$1XjQw
                             (begin
                               '#f
                               (if (not (g$memq$5749$1XjQw
                                          (car g$x$9102$1XjQw)
                                          (cdr g$x$9102$1XjQw)))
                                 (begin
                                   '#f
                                   (g$set?$9089$1XjQw (cdr g$x$9102$1XjQw)))
                                 '#f)))))
                        (null? g$x$9102$1XjQw)))))
                  (g$remove-dups$9090$1XjQw
                    (case-lambda
                      ((g$ls$9101$1XjQw)
                       (if (null? g$ls$9101$1XjQw)
                         '()
                         (cons
                           (car g$ls$9101$1XjQw)
                           (g$remove-dups$9090$1XjQw
                             (g$remq$5764$1XjQw
                               (car g$ls$9101$1XjQw)
                               (cdr g$ls$9101$1XjQw)))))))))
          ((case-lambda
             ((g$t$9091$1XjQw)
              ((case-lambda
                 ((g$ls/false$9092$1XjQw)
                  (if (if g$ls/false$9092$1XjQw
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$9093$1XjQw
                                 g$id*$9094$1XjQw
                                 g$maker$9095$1XjQw)
                               (if (g$id?$8023$1XjQw g$name$9093$1XjQw)
                                 (if (g$id?$8023$1XjQw g$maker$9095$1XjQw)
                                   (begin
                                     '#f
                                     (g$for-all$5755$1XjQw
                                       g$id?$8023$1XjQw
                                       g$id*$9094$1XjQw))
                                   '#f)
                                 '#f)))
                            g$ls/false$9092$1XjQw))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$9096$1XjQw g$id*$9097$1XjQw g$maker$9098$1XjQw)
                         ((case-lambda
                            ((g$name*$9099$1XjQw g$mk$9100$1XjQw)
                             (g$bless$8264$1XjQw
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$9100$1XjQw
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$9099$1XjQw))))
                                 (list
                                   'define-syntax
                                   g$name$9096$1XjQw
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$9099$1XjQw))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$9096$1XjQw)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$9098$1XjQw
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$9098$1XjQw)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$9099$1XjQw))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$9098$1XjQw)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$9100$1XjQw
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$9090$1XjQw
                            (g$syntax->datum$8415$1XjQw g$id*$9097$1XjQw))
                          (gensym))))
                      g$ls/false$9092$1XjQw)
                    (g$syntax-violation$8412$1XjQw
                      '#f
                      '"invalid syntax"
                      g$t$9091$1XjQw))))
               (g$syntax-dispatch$8301$1XjQw
                 g$t$9091$1XjQw
                 '(_ any each-any any)))))
           g$stx$9088$1XjQw)))))
   (g$time-macro$8278$1XjQw
     g$time-macro$11769$1XjQw
     (case-lambda
       ((g$stx$9104$1XjQw)
        ((case-lambda
           ((g$t$9105$1XjQw)
            ((case-lambda
               ((g$ls/false$9106$1XjQw)
                (if g$ls/false$9106$1XjQw
                  (apply
                    (case-lambda
                      ((g$expr$9107$1XjQw)
                       ((case-lambda
                          ((g$str$9108$1XjQw)
                           (g$bless$8264$1XjQw
                             (list
                               'time-it
                               g$str$9108$1XjQw
                               (list 'lambda '() g$expr$9107$1XjQw)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6983$1XjQw)))
                          (case-lambda
                            ((g$p$9111$1XjQw g$e$9112$1XjQw)
                             ((case-lambda
                                ((g$e$9113$1XjQw g$p$9114$1XjQw)
                                 (begin
                                   (write
                                     (g$syntax->datum$8415$1XjQw
                                       g$expr$9107$1XjQw)
                                     g$p$9114$1XjQw)
                                   (g$e$9113$1XjQw))))
                              g$e$9112$1XjQw
                              g$p$9111$1XjQw)))))))
                    g$ls/false$9106$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$9105$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$9105$1XjQw '(_ any)))))
         g$stx$9104$1XjQw))))
   (g$delay-macro$8279$1XjQw
     g$delay-macro$11770$1XjQw
     (case-lambda
       ((g$stx$9115$1XjQw)
        ((case-lambda
           ((g$t$9116$1XjQw)
            ((case-lambda
               ((g$ls/false$9117$1XjQw)
                (if g$ls/false$9117$1XjQw
                  (apply
                    (case-lambda
                      ((g$expr$9118$1XjQw)
                       (g$bless$8264$1XjQw
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$9118$1XjQw)))))
                    g$ls/false$9117$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$9116$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$9116$1XjQw '(_ any)))))
         g$stx$9115$1XjQw))))
   (g$assert-macro$8280$1XjQw
     g$assert-macro$11771$1XjQw
     (case-lambda
       ((g$stx$9119$1XjQw)
        ((case-lambda
           ((g$t$9120$1XjQw)
            ((case-lambda
               ((g$ls/false$9121$1XjQw)
                (if g$ls/false$9121$1XjQw
                  (apply
                    (case-lambda
                      ((g$expr$9122$1XjQw)
                       ((case-lambda
                          ((g$pos$9123$1XjQw)
                           (g$bless$8264$1XjQw
                             (list
                               'unless
                               g$expr$9122$1XjQw
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$9122$1XjQw)
                                 (list 'quote g$pos$9123$1XjQw))))))
                        ((case-lambda
                           ((g$t$9124$1XjQw)
                            (if g$t$9124$1XjQw
                              g$t$9124$1XjQw
                              (begin
                                '#f
                                (g$expression-position$8407$1XjQw
                                  g$expr$9122$1XjQw)))))
                         (g$expression-position$8407$1XjQw g$stx$9119$1XjQw)))))
                    g$ls/false$9121$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$9120$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$9120$1XjQw '(_ any)))))
         g$stx$9119$1XjQw))))
   (g$endianness-macro$8281$1XjQw
     g$endianness-macro$11772$1XjQw
     (case-lambda
       ((g$stx$9125$1XjQw)
        ((case-lambda
           ((g$t$9126$1XjQw)
            ((case-lambda
               ((g$ls/false$9127$1XjQw)
                (if g$ls/false$9127$1XjQw
                  (apply
                    (case-lambda
                      ((g$e$9128$1XjQw)
                       ((case-lambda
                          ((g$t$9129$1XjQw)
                           (if (g$memv$5750$1XjQw g$t$9129$1XjQw '(little))
                             (g$bless$8264$1XjQw ''little)
                             (if (g$memv$5750$1XjQw g$t$9129$1XjQw '(big))
                               (g$bless$8264$1XjQw ''big)
                               (g$syntax-violation$8412$1XjQw
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$9125$1XjQw)))))
                        (g$syntax->datum$8415$1XjQw g$e$9128$1XjQw))))
                    g$ls/false$9127$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$9126$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$9126$1XjQw '(_ any)))))
         g$stx$9125$1XjQw))))
   (g$identifier-syntax-macro$8282$1XjQw
     g$identifier-syntax-macro$11773$1XjQw
     (case-lambda
       ((g$stx$9130$1XjQw)
        ((case-lambda
           ((g$t$9131$1XjQw)
            ((case-lambda
               ((g$ls/false$9132$1XjQw)
                (if g$ls/false$9132$1XjQw
                  (apply
                    (case-lambda
                      ((g$expr$9133$1XjQw)
                       (g$bless$8264$1XjQw
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$9133$1XjQw))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$9133$1XjQw)
                                   '(#'(e* ...))))))))))
                    g$ls/false$9132$1XjQw)
                  ((case-lambda
                     ((g$t$9134$1XjQw)
                      ((case-lambda
                         ((g$ls/false$9135$1XjQw)
                          (if (if g$ls/false$9135$1XjQw
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$9136$1XjQw
                                         g$expr1$9137$1XjQw
                                         g$id2$9138$1XjQw
                                         g$expr2$9139$1XjQw
                                         g$expr3$9140$1XjQw)
                                       (if (g$id?$8023$1XjQw g$id1$9136$1XjQw)
                                         (if (g$id?$8023$1XjQw g$id2$9138$1XjQw)
                                           (begin
                                             '#f
                                             (g$id?$8023$1XjQw
                                               g$expr2$9139$1XjQw))
                                           '#f)
                                         '#f)))
                                    g$ls/false$9135$1XjQw))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$9141$1XjQw
                                   g$expr1$9142$1XjQw
                                   g$id2$9143$1XjQw
                                   g$expr2$9144$1XjQw
                                   g$expr3$9145$1XjQw)
                                 (g$bless$8264$1XjQw
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$9142$1XjQw))
                                         (list
                                           (list 'set! 'id g$expr2$9144$1XjQw)
                                           (list 'syntax g$expr3$9145$1XjQw))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$9142$1XjQw
                                               '(e* ...))))))))))
                              g$ls/false$9135$1XjQw)
                            (g$syntax-violation$8412$1XjQw
                              '#f
                              '"invalid syntax"
                              g$t$9134$1XjQw))))
                       (g$syntax-dispatch$8301$1XjQw
                         g$t$9134$1XjQw
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$9131$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$9131$1XjQw '(_ any)))))
         g$stx$9130$1XjQw))))
   (g$do-macro$8283$1XjQw
     g$do-macro$11774$1XjQw
     (case-lambda
       ((g$stx$9146$1XjQw)
        (letrec* ((g$bind$9147$1XjQw
                    (case-lambda
                      ((g$x$9159$1XjQw)
                       ((case-lambda
                          ((g$t$9160$1XjQw)
                           ((case-lambda
                              ((g$ls/false$9161$1XjQw)
                               (if g$ls/false$9161$1XjQw
                                 (apply
                                   (case-lambda
                                     ((g$x$9162$1XjQw g$init$9163$1XjQw)
                                      (list
                                        g$x$9162$1XjQw
                                        g$init$9163$1XjQw
                                        g$x$9162$1XjQw)))
                                   g$ls/false$9161$1XjQw)
                                 ((case-lambda
                                    ((g$t$9164$1XjQw)
                                     ((case-lambda
                                        ((g$ls/false$9165$1XjQw)
                                         (if g$ls/false$9165$1XjQw
                                           (apply
                                             (case-lambda
                                               ((g$x$9166$1XjQw
                                                  g$init$9167$1XjQw
                                                  g$step$9168$1XjQw)
                                                (list
                                                  g$x$9166$1XjQw
                                                  g$init$9167$1XjQw
                                                  g$step$9168$1XjQw)))
                                             g$ls/false$9165$1XjQw)
                                           ((case-lambda
                                              ((g$t$9169$1XjQw)
                                               ((case-lambda
                                                  ((g$ls/false$9170$1XjQw)
                                                   (if g$ls/false$9170$1XjQw
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$8412$1XjQw
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$9146$1XjQw)))
                                                       g$ls/false$9170$1XjQw)
                                                     (g$syntax-violation$8412$1XjQw
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9169$1XjQw))))
                                                (g$syntax-dispatch$8301$1XjQw
                                                  g$t$9169$1XjQw
                                                  '_))))
                                            g$t$9164$1XjQw))))
                                      (g$syntax-dispatch$8301$1XjQw
                                        g$t$9164$1XjQw
                                        '(any any any)))))
                                  g$t$9160$1XjQw))))
                            (g$syntax-dispatch$8301$1XjQw
                              g$t$9160$1XjQw
                              '(any any)))))
                        g$x$9159$1XjQw)))))
          ((case-lambda
             ((g$t$9148$1XjQw)
              ((case-lambda
                 ((g$ls/false$9149$1XjQw)
                  (if g$ls/false$9149$1XjQw
                    (apply
                      (case-lambda
                        ((g$binding*$9150$1XjQw
                           g$test$9151$1XjQw
                           g$expr*$9152$1XjQw
                           g$command*$9153$1XjQw)
                         ((case-lambda
                            ((g$t$9154$1XjQw)
                             ((case-lambda
                                ((g$ls/false$9155$1XjQw)
                                 (if g$ls/false$9155$1XjQw
                                   (apply
                                     (case-lambda
                                       ((g$x*$9156$1XjQw
                                          g$init*$9157$1XjQw
                                          g$step*$9158$1XjQw)
                                        (if (g$valid-bound-ids?$8028$1XjQw
                                              g$x*$9156$1XjQw)
                                          (g$bless$8264$1XjQw
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$9156$1XjQw
                                                    (list
                                                      'if
                                                      g$test$9151$1XjQw
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$9152$1XjQw))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$9153$1XjQw
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$9158$1XjQw))))))))
                                              (cons 'loop g$init*$9157$1XjQw)))
                                          (g$syntax-violation$8412$1XjQw
                                            '#f
                                            '"invalid bindings"
                                            g$stx$9146$1XjQw))))
                                     g$ls/false$9155$1XjQw)
                                   (g$syntax-violation$8412$1XjQw
                                     '#f
                                     '"invalid syntax"
                                     g$t$9154$1XjQw))))
                              (g$syntax-dispatch$8301$1XjQw
                                g$t$9154$1XjQw
                                '#(each (any any any))))))
                          (g$map$5757$1XjQw
                            g$bind$9147$1XjQw
                            g$binding*$9150$1XjQw))))
                      g$ls/false$9149$1XjQw)
                    (g$syntax-violation$8412$1XjQw
                      '#f
                      '"invalid syntax"
                      g$t$9148$1XjQw))))
               (g$syntax-dispatch$8301$1XjQw
                 g$t$9148$1XjQw
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$9146$1XjQw)))))
   (g$let*-macro$8284$1XjQw
     g$let*-macro$11775$1XjQw
     (case-lambda
       ((g$stx$9171$1XjQw)
        ((case-lambda
           ((g$t$9172$1XjQw)
            ((case-lambda
               ((g$ls/false$9173$1XjQw)
                (if (if g$ls/false$9173$1XjQw
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$9174$1XjQw
                               g$rhs*$9175$1XjQw
                               g$b$9176$1XjQw
                               g$b*$9177$1XjQw)
                             (g$for-all$5755$1XjQw
                               g$id?$8023$1XjQw
                               g$lhs*$9174$1XjQw)))
                          g$ls/false$9173$1XjQw))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$9178$1XjQw
                         g$rhs*$9179$1XjQw
                         g$b$9180$1XjQw
                         g$b*$9181$1XjQw)
                       (g$bless$8264$1XjQw
                         ((letrec ((g$f$9182$1XjQw
                                     (case-lambda
                                       ((g$x*$9183$1XjQw)
                                        (if (null? g$x*$9183$1XjQw)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$9180$1XjQw
                                                g$b*$9181$1XjQw)))
                                          (list
                                            'let
                                            (list (car g$x*$9183$1XjQw))
                                            (g$f$9182$1XjQw
                                              (cdr g$x*$9183$1XjQw))))))))
                            g$f$9182$1XjQw)
                          (g$map$5757$1XjQw
                            list
                            g$lhs*$9178$1XjQw
                            g$rhs*$9179$1XjQw)))))
                    g$ls/false$9173$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$9172$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw
               g$t$9172$1XjQw
               '(_ #(each (any any)) any . each-any)))))
         g$stx$9171$1XjQw))))
   (g$or-macro$8285$1XjQw
     g$or-macro$11776$1XjQw
     (case-lambda
       ((g$stx$9184$1XjQw)
        ((case-lambda
           ((g$t$9185$1XjQw)
            ((case-lambda
               ((g$ls/false$9186$1XjQw)
                (if g$ls/false$9186$1XjQw
                  (apply (case-lambda (() '#f)) g$ls/false$9186$1XjQw)
                  ((case-lambda
                     ((g$t$9187$1XjQw)
                      ((case-lambda
                         ((g$ls/false$9188$1XjQw)
                          (if g$ls/false$9188$1XjQw
                            (apply
                              (case-lambda
                                ((g$e$9189$1XjQw g$e*$9190$1XjQw)
                                 (g$bless$8264$1XjQw
                                   ((letrec ((g$f$9191$1XjQw
                                               (case-lambda
                                                 ((g$e$9192$1XjQw
                                                    g$e*$9193$1XjQw)
                                                  (if (null? g$e*$9193$1XjQw)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$9192$1XjQw)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$9192$1XjQw))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$9191$1XjQw
                                                          (car g$e*$9193$1XjQw)
                                                          (cdr g$e*$9193$1XjQw)))))))))
                                      g$f$9191$1XjQw)
                                    g$e$9189$1XjQw
                                    g$e*$9190$1XjQw))))
                              g$ls/false$9188$1XjQw)
                            (g$syntax-violation$8412$1XjQw
                              '#f
                              '"invalid syntax"
                              g$t$9187$1XjQw))))
                       (g$syntax-dispatch$8301$1XjQw
                         g$t$9187$1XjQw
                         '(_ any . each-any)))))
                   g$t$9185$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$9185$1XjQw '(_)))))
         g$stx$9184$1XjQw))))
   (g$and-macro$8286$1XjQw
     g$and-macro$11777$1XjQw
     (case-lambda
       ((g$stx$9194$1XjQw)
        ((case-lambda
           ((g$t$9195$1XjQw)
            ((case-lambda
               ((g$ls/false$9196$1XjQw)
                (if g$ls/false$9196$1XjQw
                  (apply (case-lambda (() '#t)) g$ls/false$9196$1XjQw)
                  ((case-lambda
                     ((g$t$9197$1XjQw)
                      ((case-lambda
                         ((g$ls/false$9198$1XjQw)
                          (if g$ls/false$9198$1XjQw
                            (apply
                              (case-lambda
                                ((g$e$9199$1XjQw g$e*$9200$1XjQw)
                                 (g$bless$8264$1XjQw
                                   ((letrec ((g$f$9201$1XjQw
                                               (case-lambda
                                                 ((g$e$9202$1XjQw
                                                    g$e*$9203$1XjQw)
                                                  (if (null? g$e*$9203$1XjQw)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$9202$1XjQw)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$9202$1XjQw
                                                        (cons
                                                          (g$f$9201$1XjQw
                                                            (car g$e*$9203$1XjQw)
                                                            (cdr g$e*$9203$1XjQw))
                                                          '(#f)))))))))
                                      g$f$9201$1XjQw)
                                    g$e$9199$1XjQw
                                    g$e*$9200$1XjQw))))
                              g$ls/false$9198$1XjQw)
                            (g$syntax-violation$8412$1XjQw
                              '#f
                              '"invalid syntax"
                              g$t$9197$1XjQw))))
                       (g$syntax-dispatch$8301$1XjQw
                         g$t$9197$1XjQw
                         '(_ any . each-any)))))
                   g$t$9195$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$9195$1XjQw '(_)))))
         g$stx$9194$1XjQw))))
   (g$cond-macro$8287$1XjQw
     g$cond-macro$11778$1XjQw
     (case-lambda
       ((g$stx$9204$1XjQw)
        ((case-lambda
           ((g$t$9205$1XjQw)
            ((case-lambda
               ((g$ls/false$9206$1XjQw)
                (if g$ls/false$9206$1XjQw
                  (apply
                    (case-lambda
                      ((g$cls$9207$1XjQw g$cls*$9208$1XjQw)
                       (g$bless$8264$1XjQw
                         ((letrec ((g$f$9209$1XjQw
                                     (case-lambda
                                       ((g$cls$9210$1XjQw g$cls*$9211$1XjQw)
                                        (if (null? g$cls*$9211$1XjQw)
                                          ((case-lambda
                                             ((g$t$9212$1XjQw)
                                              ((case-lambda
                                                 ((g$ls/false$9213$1XjQw)
                                                  (if g$ls/false$9213$1XjQw
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$9214$1XjQw
                                                           g$e*$9215$1XjQw)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$9214$1XjQw
                                                             g$e*$9215$1XjQw))))
                                                      g$ls/false$9213$1XjQw)
                                                    ((case-lambda
                                                       ((g$t$9216$1XjQw)
                                                        ((case-lambda
                                                           ((g$ls/false$9217$1XjQw)
                                                            (if g$ls/false$9217$1XjQw
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$9218$1XjQw
                                                                     g$p$9219$1XjQw)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$9218$1XjQw))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$9219$1XjQw
                                                                         '(t))))))
                                                                g$ls/false$9217$1XjQw)
                                                              ((case-lambda
                                                                 ((g$t$9220$1XjQw)
                                                                  ((case-lambda
                                                                     ((g$ls/false$9221$1XjQw)
                                                                      (if g$ls/false$9221$1XjQw
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$9222$1XjQw)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$9222$1XjQw
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$9221$1XjQw)
                                                                        ((case-lambda
                                                                           ((g$t$9223$1XjQw)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9224$1XjQw)
                                                                                (if g$ls/false$9224$1XjQw
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$9225$1XjQw
                                                                                         g$e*$9226$1XjQw)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$9225$1XjQw
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$9226$1XjQw))))
                                                                                    g$ls/false$9224$1XjQw)
                                                                                  ((case-lambda
                                                                                     ((g$t$9227$1XjQw)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9228$1XjQw)
                                                                                          (if g$ls/false$9228$1XjQw
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8412$1XjQw
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$9204$1XjQw)))
                                                                                              g$ls/false$9228$1XjQw)
                                                                                            (g$syntax-violation$8412$1XjQw
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9227$1XjQw))))
                                                                                       (g$syntax-dispatch$8301$1XjQw
                                                                                         g$t$9227$1XjQw
                                                                                         '_))))
                                                                                   g$t$9223$1XjQw))))
                                                                             (g$syntax-dispatch$8301$1XjQw
                                                                               g$t$9223$1XjQw
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$9220$1XjQw))))
                                                                   (g$syntax-dispatch$8301$1XjQw
                                                                     g$t$9220$1XjQw
                                                                     '(any)))))
                                                               g$t$9216$1XjQw))))
                                                         (g$syntax-dispatch$8301$1XjQw
                                                           g$t$9216$1XjQw
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$9212$1XjQw))))
                                               (g$syntax-dispatch$8301$1XjQw
                                                 g$t$9212$1XjQw
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$9210$1XjQw)
                                          ((case-lambda
                                             ((g$t$9229$1XjQw)
                                              ((case-lambda
                                                 ((g$ls/false$9230$1XjQw)
                                                  (if g$ls/false$9230$1XjQw
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$9231$1XjQw
                                                           g$e*$9232$1XjQw)
                                                         (g$syntax-violation$8412$1XjQw
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$9204$1XjQw)))
                                                      g$ls/false$9230$1XjQw)
                                                    ((case-lambda
                                                       ((g$t$9233$1XjQw)
                                                        ((case-lambda
                                                           ((g$ls/false$9234$1XjQw)
                                                            (if g$ls/false$9234$1XjQw
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$9235$1XjQw
                                                                     g$p$9236$1XjQw)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$9235$1XjQw))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$9236$1XjQw
                                                                         '(t))
                                                                       (g$f$9209$1XjQw
                                                                         (car g$cls*$9211$1XjQw)
                                                                         (cdr g$cls*$9211$1XjQw))))))
                                                                g$ls/false$9234$1XjQw)
                                                              ((case-lambda
                                                                 ((g$t$9237$1XjQw)
                                                                  ((case-lambda
                                                                     ((g$ls/false$9238$1XjQw)
                                                                      (if g$ls/false$9238$1XjQw
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$9239$1XjQw)
                                                                             (list
                                                                               'or
                                                                               g$e$9239$1XjQw
                                                                               (g$f$9209$1XjQw
                                                                                 (car g$cls*$9211$1XjQw)
                                                                                 (cdr g$cls*$9211$1XjQw)))))
                                                                          g$ls/false$9238$1XjQw)
                                                                        ((case-lambda
                                                                           ((g$t$9240$1XjQw)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9241$1XjQw)
                                                                                (if g$ls/false$9241$1XjQw
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$9242$1XjQw
                                                                                         g$e*$9243$1XjQw)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$9242$1XjQw
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$9243$1XjQw)
                                                                                         (g$f$9209$1XjQw
                                                                                           (car g$cls*$9211$1XjQw)
                                                                                           (cdr g$cls*$9211$1XjQw)))))
                                                                                    g$ls/false$9241$1XjQw)
                                                                                  ((case-lambda
                                                                                     ((g$t$9244$1XjQw)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9245$1XjQw)
                                                                                          (if g$ls/false$9245$1XjQw
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8412$1XjQw
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$9204$1XjQw)))
                                                                                              g$ls/false$9245$1XjQw)
                                                                                            (g$syntax-violation$8412$1XjQw
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9244$1XjQw))))
                                                                                       (g$syntax-dispatch$8301$1XjQw
                                                                                         g$t$9244$1XjQw
                                                                                         '_))))
                                                                                   g$t$9240$1XjQw))))
                                                                             (g$syntax-dispatch$8301$1XjQw
                                                                               g$t$9240$1XjQw
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$9237$1XjQw))))
                                                                   (g$syntax-dispatch$8301$1XjQw
                                                                     g$t$9237$1XjQw
                                                                     '(any)))))
                                                               g$t$9233$1XjQw))))
                                                         (g$syntax-dispatch$8301$1XjQw
                                                           g$t$9233$1XjQw
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$9229$1XjQw))))
                                               (g$syntax-dispatch$8301$1XjQw
                                                 g$t$9229$1XjQw
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$9210$1XjQw))))))
                            g$f$9209$1XjQw)
                          g$cls$9207$1XjQw
                          g$cls*$9208$1XjQw))))
                    g$ls/false$9206$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$9205$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw
               g$t$9205$1XjQw
               '(_ any . each-any)))))
         g$stx$9204$1XjQw))))
   (g$do-include$8288$1XjQw
     g$do-include$11779$1XjQw
     (case-lambda
       ((g$stx$9246$1XjQw g$id$9247$1XjQw g$filename$9248$1XjQw)
        ((case-lambda
           ((g$filename$9249$1XjQw)
            (begin
              (if (not (if (string? g$filename$9249$1XjQw)
                         (begin '#f (g$id?$8023$1XjQw g$id$9247$1XjQw))
                         '#f))
                (g$syntax-violation$8412$1XjQw
                  '#f
                  '"invalid syntax"
                  g$stx$9246$1XjQw)
                (void))
              (cons
                (g$bless$8264$1XjQw 'begin)
                (g$with-input-from-file$7018$1XjQw
                  g$filename$9249$1XjQw
                  (case-lambda
                    (()
                     ((letrec ((g$f$9250$1XjQw
                                 (case-lambda
                                   ((g$ls$9251$1XjQw)
                                    ((case-lambda
                                       ((g$x$9252$1XjQw)
                                        (if (eof-object? g$x$9252$1XjQw)
                                          (reverse g$ls$9251$1XjQw)
                                          (g$f$9250$1XjQw
                                            (cons
                                              (g$datum->stx$8006$1XjQw
                                                g$id$9247$1XjQw
                                                g$x$9252$1XjQw)
                                              g$ls$9251$1XjQw)))))
                                     (read-annotated))))))
                        g$f$9250$1XjQw)
                      '()))))))))
         (g$stx->datum$8034$1XjQw g$filename$9248$1XjQw)))))
   (g$include-macro$8289$1XjQw
     g$include-macro$11780$1XjQw
     (case-lambda
       ((g$e$9253$1XjQw)
        ((case-lambda
           ((g$t$9254$1XjQw)
            ((case-lambda
               ((g$ls/false$9255$1XjQw)
                (if g$ls/false$9255$1XjQw
                  (apply
                    (case-lambda
                      ((g$id$9256$1XjQw g$filename$9257$1XjQw)
                       (g$do-include$8288$1XjQw
                         g$e$9253$1XjQw
                         g$id$9256$1XjQw
                         g$filename$9257$1XjQw)))
                    g$ls/false$9255$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$9254$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$9254$1XjQw '(any any)))))
         g$e$9253$1XjQw))))
   (g$include-into-macro$8290$1XjQw
     g$include-into-macro$11781$1XjQw
     (case-lambda
       ((g$e$9258$1XjQw)
        ((case-lambda
           ((g$t$9259$1XjQw)
            ((case-lambda
               ((g$ls/false$9260$1XjQw)
                (if g$ls/false$9260$1XjQw
                  (apply
                    (case-lambda
                      ((g$id$9261$1XjQw g$filename$9262$1XjQw)
                       (g$do-include$8288$1XjQw
                         g$e$9258$1XjQw
                         g$id$9261$1XjQw
                         g$filename$9262$1XjQw)))
                    g$ls/false$9260$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$9259$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$9259$1XjQw '(_ any any)))))
         g$e$9258$1XjQw))))
   (g$syntax-rules-macro$8291$1XjQw
     g$syntax-rules-macro$11782$1XjQw
     (case-lambda
       ((g$e$9263$1XjQw)
        ((case-lambda
           ((g$t$9264$1XjQw)
            ((case-lambda
               ((g$ls/false$9265$1XjQw)
                (if g$ls/false$9265$1XjQw
                  (apply
                    (case-lambda
                      ((g$lits$9266$1XjQw g$pat*$9267$1XjQw g$tmp*$9268$1XjQw)
                       (begin
                         (g$verify-literals$8304$1XjQw
                           g$lits$9266$1XjQw
                           g$e$9263$1XjQw)
                         (g$bless$8264$1XjQw
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$9266$1XjQw
                                   (g$map$5757$1XjQw
                                     (case-lambda
                                       ((g$pat$9269$1XjQw g$tmp$9270$1XjQw)
                                        ((case-lambda
                                           ((g$t$9271$1XjQw)
                                            ((case-lambda
                                               ((g$ls/false$9272$1XjQw)
                                                (if g$ls/false$9272$1XjQw
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$9273$1XjQw)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$9273$1XjQw)
                                                         (list
                                                           'syntax
                                                           g$tmp$9270$1XjQw))))
                                                    g$ls/false$9272$1XjQw)
                                                  ((case-lambda
                                                     ((g$t$9274$1XjQw)
                                                      ((case-lambda
                                                         ((g$ls/false$9275$1XjQw)
                                                          (if g$ls/false$9275$1XjQw
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$8412$1XjQw
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$9263$1XjQw
                                                                   g$pat$9269$1XjQw)))
                                                              g$ls/false$9275$1XjQw)
                                                            (g$syntax-violation$8412$1XjQw
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$9274$1XjQw))))
                                                       (g$syntax-dispatch$8301$1XjQw
                                                         g$t$9274$1XjQw
                                                         '_))))
                                                   g$t$9271$1XjQw))))
                                             (g$syntax-dispatch$8301$1XjQw
                                               g$t$9271$1XjQw
                                               '(_ . any)))))
                                         g$pat$9269$1XjQw)))
                                     g$pat*$9267$1XjQw
                                     g$tmp*$9268$1XjQw)))))))))
                    g$ls/false$9265$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$9264$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw
               g$t$9264$1XjQw
               '(_ each-any . #(each (any any)))))))
         g$e$9263$1XjQw))))
   (g$quasiquote-macro$8292$1XjQw
     g$quasiquote-macro$11783$1XjQw
     ((case-lambda
        (()
         (letrec* ((g$datum$9276$1XjQw
                     (case-lambda
                       ((g$x$9407$1XjQw)
                        (list
                          (g$scheme-stx$8244$1XjQw 'quote)
                          (g$mkstx$8011$1XjQw g$x$9407$1XjQw '() '() '())))))
                   (g$quasicons*$9292$1XjQw
                     (case-lambda
                       ((g$x$9403$1XjQw g$y$9404$1XjQw)
                        ((letrec ((g$f$9405$1XjQw
                                    (case-lambda
                                      ((g$x$9406$1XjQw)
                                       (if (null? g$x$9406$1XjQw)
                                         g$y$9404$1XjQw
                                         (g$quasicons$9293$1XjQw
                                           (car g$x$9406$1XjQw)
                                           (g$f$9405$1XjQw
                                             (cdr g$x$9406$1XjQw))))))))
                           g$f$9405$1XjQw)
                         g$x$9403$1XjQw))))
                   (g$quasicons$9293$1XjQw
                     (case-lambda
                       ((g$x$9384$1XjQw g$y$9385$1XjQw)
                        ((case-lambda
                           ((g$t$9386$1XjQw)
                            ((case-lambda
                               ((g$ls/false$9387$1XjQw)
                                (if g$ls/false$9387$1XjQw
                                  (apply
                                    (case-lambda
                                      ((g$dy$9388$1XjQw)
                                       ((case-lambda
                                          ((g$t$9389$1XjQw)
                                           ((case-lambda
                                              ((g$ls/false$9390$1XjQw)
                                               (if g$ls/false$9390$1XjQw
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$9391$1XjQw)
                                                      (list
                                                        (g$scheme-stx$8244$1XjQw
                                                          'quote)
                                                        (cons
                                                          g$dx$9391$1XjQw
                                                          g$dy$9388$1XjQw))))
                                                   g$ls/false$9390$1XjQw)
                                                 ((case-lambda
                                                    ((g$t$9392$1XjQw)
                                                     ((case-lambda
                                                        ((g$ls/false$9393$1XjQw)
                                                         (if g$ls/false$9393$1XjQw
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$9394$1XjQw)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9395$1XjQw)
                                                                        (if g$ls/false$9395$1XjQw
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$8244$1XjQw
                                                                                   'list)
                                                                                 g$x$9384$1XjQw)))
                                                                            g$ls/false$9395$1XjQw)
                                                                          ((case-lambda
                                                                             ((g$t$9396$1XjQw)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9397$1XjQw)
                                                                                  (if g$ls/false$9397$1XjQw
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$8244$1XjQw
                                                                                             'cons)
                                                                                           g$x$9384$1XjQw
                                                                                           g$y$9385$1XjQw)))
                                                                                      g$ls/false$9397$1XjQw)
                                                                                    (g$syntax-violation$8412$1XjQw
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$9396$1XjQw))))
                                                                               (g$syntax-dispatch$8301$1XjQw
                                                                                 g$t$9396$1XjQw
                                                                                 '_))))
                                                                           g$t$9394$1XjQw))))
                                                                     (g$syntax-dispatch$8301$1XjQw
                                                                       g$t$9394$1XjQw
                                                                       '()))))
                                                                 g$dy$9388$1XjQw)))
                                                             g$ls/false$9393$1XjQw)
                                                           (g$syntax-violation$8412$1XjQw
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$9392$1XjQw))))
                                                      (g$syntax-dispatch$8301$1XjQw
                                                        g$t$9392$1XjQw
                                                        '_))))
                                                  g$t$9389$1XjQw))))
                                            (g$syntax-dispatch$8301$1XjQw
                                              g$t$9389$1XjQw
                                              '(#(scheme-id quote) any)))))
                                        g$x$9384$1XjQw)))
                                    g$ls/false$9387$1XjQw)
                                  ((case-lambda
                                     ((g$t$9398$1XjQw)
                                      ((case-lambda
                                         ((g$ls/false$9399$1XjQw)
                                          (if g$ls/false$9399$1XjQw
                                            (apply
                                              (case-lambda
                                                ((g$stuff$9400$1XjQw)
                                                 (g$cons*$5759$1XjQw
                                                   (g$scheme-stx$8244$1XjQw
                                                     'list)
                                                   g$x$9384$1XjQw
                                                   g$stuff$9400$1XjQw)))
                                              g$ls/false$9399$1XjQw)
                                            ((case-lambda
                                               ((g$t$9401$1XjQw)
                                                ((case-lambda
                                                   ((g$ls/false$9402$1XjQw)
                                                    (if g$ls/false$9402$1XjQw
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$8244$1XjQw
                                                               'cons)
                                                             g$x$9384$1XjQw
                                                             g$y$9385$1XjQw)))
                                                        g$ls/false$9402$1XjQw)
                                                      (g$syntax-violation$8412$1XjQw
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$9401$1XjQw))))
                                                 (g$syntax-dispatch$8301$1XjQw
                                                   g$t$9401$1XjQw
                                                   '_))))
                                             g$t$9398$1XjQw))))
                                       (g$syntax-dispatch$8301$1XjQw
                                         g$t$9398$1XjQw
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$9386$1XjQw))))
                             (g$syntax-dispatch$8301$1XjQw
                               g$t$9386$1XjQw
                               '(#(scheme-id quote) any)))))
                         g$y$9385$1XjQw))))
                   (g$quasiappend$9294$1XjQw
                     (case-lambda
                       ((g$x$9371$1XjQw g$y$9372$1XjQw)
                        ((case-lambda
                           ((g$ls$9373$1XjQw)
                            (if (null? g$ls$9373$1XjQw)
                              (list (g$scheme-stx$8244$1XjQw 'quote) '())
                              (if (null? (cdr g$ls$9373$1XjQw))
                                (car g$ls$9373$1XjQw)
                                (g$cons*$5759$1XjQw
                                  (g$scheme-stx$8244$1XjQw 'append)
                                  g$ls$9373$1XjQw)))))
                         ((letrec ((g$f$9374$1XjQw
                                     (case-lambda
                                       ((g$x$9375$1XjQw)
                                        (if (null? g$x$9375$1XjQw)
                                          ((case-lambda
                                             ((g$t$9376$1XjQw)
                                              ((case-lambda
                                                 ((g$ls/false$9377$1XjQw)
                                                  (if g$ls/false$9377$1XjQw
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$9377$1XjQw)
                                                    ((case-lambda
                                                       ((g$t$9378$1XjQw)
                                                        ((case-lambda
                                                           ((g$ls/false$9379$1XjQw)
                                                            (if g$ls/false$9379$1XjQw
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$9372$1XjQw)))
                                                                g$ls/false$9379$1XjQw)
                                                              (g$syntax-violation$8412$1XjQw
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9378$1XjQw))))
                                                         (g$syntax-dispatch$8301$1XjQw
                                                           g$t$9378$1XjQw
                                                           '_))))
                                                     g$t$9376$1XjQw))))
                                               (g$syntax-dispatch$8301$1XjQw
                                                 g$t$9376$1XjQw
                                                 '(#(scheme-id quote) ())))))
                                           g$y$9372$1XjQw)
                                          ((case-lambda
                                             ((g$t$9380$1XjQw)
                                              ((case-lambda
                                                 ((g$ls/false$9381$1XjQw)
                                                  (if g$ls/false$9381$1XjQw
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$9374$1XjQw
                                                           (cdr g$x$9375$1XjQw))))
                                                      g$ls/false$9381$1XjQw)
                                                    ((case-lambda
                                                       ((g$t$9382$1XjQw)
                                                        ((case-lambda
                                                           ((g$ls/false$9383$1XjQw)
                                                            (if g$ls/false$9383$1XjQw
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$9375$1XjQw)
                                                                     (g$f$9374$1XjQw
                                                                       (cdr g$x$9375$1XjQw)))))
                                                                g$ls/false$9383$1XjQw)
                                                              (g$syntax-violation$8412$1XjQw
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9382$1XjQw))))
                                                         (g$syntax-dispatch$8301$1XjQw
                                                           g$t$9382$1XjQw
                                                           '_))))
                                                     g$t$9380$1XjQw))))
                                               (g$syntax-dispatch$8301$1XjQw
                                                 g$t$9380$1XjQw
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$9375$1XjQw)))))))
                            g$f$9374$1XjQw)
                          g$x$9371$1XjQw)))))
                   (g$quasivector$9295$1XjQw
                     (case-lambda
                       ((g$x$9346$1XjQw)
                        ((case-lambda
                           ((g$pat-x$9347$1XjQw)
                            ((case-lambda
                               ((g$t$9348$1XjQw)
                                ((case-lambda
                                   ((g$ls/false$9349$1XjQw)
                                    (if g$ls/false$9349$1XjQw
                                      (apply
                                        (case-lambda
                                          ((g$x*$9350$1XjQw)
                                           (list
                                             (g$scheme-stx$8244$1XjQw 'quote)
                                             (list->vector g$x*$9350$1XjQw))))
                                        g$ls/false$9349$1XjQw)
                                      ((case-lambda
                                         ((g$t$9351$1XjQw)
                                          ((case-lambda
                                             ((g$ls/false$9352$1XjQw)
                                              (if g$ls/false$9352$1XjQw
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$9353$1XjQw
                                                                 (case-lambda
                                                                   ((g$x$9354$1XjQw
                                                                      g$k$9355$1XjQw)
                                                                    ((case-lambda
                                                                       ((g$t$9356$1XjQw)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9357$1XjQw)
                                                                            (if g$ls/false$9357$1XjQw
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$9358$1XjQw)
                                                                                   (g$k$9355$1XjQw
                                                                                     (g$map$5757$1XjQw
                                                                                       (case-lambda
                                                                                         ((g$x$9359$1XjQw)
                                                                                          (list
                                                                                            (g$scheme-stx$8244$1XjQw
                                                                                              'quote)
                                                                                            g$x$9359$1XjQw)))
                                                                                       g$x*$9358$1XjQw))))
                                                                                g$ls/false$9357$1XjQw)
                                                                              ((case-lambda
                                                                                 ((g$t$9360$1XjQw)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$9361$1XjQw)
                                                                                      (if g$ls/false$9361$1XjQw
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$9362$1XjQw)
                                                                                             (g$k$9355$1XjQw
                                                                                               g$x*$9362$1XjQw)))
                                                                                          g$ls/false$9361$1XjQw)
                                                                                        ((case-lambda
                                                                                           ((g$t$9363$1XjQw)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$9364$1XjQw)
                                                                                                (if g$ls/false$9364$1XjQw
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$9365$1XjQw
                                                                                                         g$y$9366$1XjQw)
                                                                                                       (g$f$9353$1XjQw
                                                                                                         g$y$9366$1XjQw
                                                                                                         (case-lambda
                                                                                                           ((g$ls$9367$1XjQw)
                                                                                                            (g$k$9355$1XjQw
                                                                                                              (cons
                                                                                                                g$x$9365$1XjQw
                                                                                                                g$ls$9367$1XjQw)))))))
                                                                                                    g$ls/false$9364$1XjQw)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$9368$1XjQw)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$9369$1XjQw)
                                                                                                          (if g$ls/false$9369$1XjQw
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$8244$1XjQw
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$9347$1XjQw)))
                                                                                                              g$ls/false$9369$1XjQw)
                                                                                                            (g$syntax-violation$8412$1XjQw
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$9368$1XjQw))))
                                                                                                       (g$syntax-dispatch$8301$1XjQw
                                                                                                         g$t$9368$1XjQw
                                                                                                         '_))))
                                                                                                   g$t$9363$1XjQw))))
                                                                                             (g$syntax-dispatch$8301$1XjQw
                                                                                               g$t$9363$1XjQw
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$9360$1XjQw))))
                                                                                   (g$syntax-dispatch$8301$1XjQw
                                                                                     g$t$9360$1XjQw
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$9356$1XjQw))))
                                                                         (g$syntax-dispatch$8301$1XjQw
                                                                           g$t$9356$1XjQw
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$9354$1XjQw)))))
                                                        g$f$9353$1XjQw)
                                                      g$x$9346$1XjQw
                                                      (case-lambda
                                                        ((g$ls$9370$1XjQw)
                                                         (g$cons*$5759$1XjQw
                                                           (g$scheme-stx$8244$1XjQw
                                                             'vector)
                                                           g$ls$9370$1XjQw))))))
                                                  g$ls/false$9352$1XjQw)
                                                (g$syntax-violation$8412$1XjQw
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$9351$1XjQw))))
                                           (g$syntax-dispatch$8301$1XjQw
                                             g$t$9351$1XjQw
                                             '_))))
                                       g$t$9348$1XjQw))))
                                 (g$syntax-dispatch$8301$1XjQw
                                   g$t$9348$1XjQw
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$9347$1XjQw)))
                         g$x$9346$1XjQw))))
                   (g$vquasi$9296$1XjQw
                     (case-lambda
                       ((g$p$9329$1XjQw g$lev$9330$1XjQw)
                        ((case-lambda
                           ((g$t$9331$1XjQw)
                            ((case-lambda
                               ((g$ls/false$9332$1XjQw)
                                (if g$ls/false$9332$1XjQw
                                  (apply
                                    (case-lambda
                                      ((g$p$9333$1XjQw g$q$9334$1XjQw)
                                       ((case-lambda
                                          ((g$t$9335$1XjQw)
                                           ((case-lambda
                                              ((g$ls/false$9336$1XjQw)
                                               (if g$ls/false$9336$1XjQw
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9337$1XjQw)
                                                      (if (= g$lev$9330$1XjQw
                                                             '0)
                                                        (g$quasicons*$9292$1XjQw
                                                          g$p$9337$1XjQw
                                                          (g$vquasi$9296$1XjQw
                                                            g$q$9334$1XjQw
                                                            g$lev$9330$1XjQw))
                                                        (g$quasicons$9293$1XjQw
                                                          (g$quasicons$9293$1XjQw
                                                            (g$datum$9276$1XjQw
                                                              'unquote)
                                                            (g$quasi$9297$1XjQw
                                                              g$p$9337$1XjQw
                                                              (- g$lev$9330$1XjQw
                                                                 '1)))
                                                          (g$vquasi$9296$1XjQw
                                                            g$q$9334$1XjQw
                                                            g$lev$9330$1XjQw)))))
                                                   g$ls/false$9336$1XjQw)
                                                 ((case-lambda
                                                    ((g$t$9338$1XjQw)
                                                     ((case-lambda
                                                        ((g$ls/false$9339$1XjQw)
                                                         (if g$ls/false$9339$1XjQw
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$9340$1XjQw)
                                                                (if (= g$lev$9330$1XjQw
                                                                       '0)
                                                                  (g$quasiappend$9294$1XjQw
                                                                    g$p$9340$1XjQw
                                                                    (g$vquasi$9296$1XjQw
                                                                      g$q$9334$1XjQw
                                                                      g$lev$9330$1XjQw))
                                                                  (g$quasicons$9293$1XjQw
                                                                    (g$quasicons$9293$1XjQw
                                                                      (g$datum$9276$1XjQw
                                                                        'unquote-splicing)
                                                                      (g$quasi$9297$1XjQw
                                                                        g$p$9340$1XjQw
                                                                        (- g$lev$9330$1XjQw
                                                                           '1)))
                                                                    (g$vquasi$9296$1XjQw
                                                                      g$q$9334$1XjQw
                                                                      g$lev$9330$1XjQw)))))
                                                             g$ls/false$9339$1XjQw)
                                                           ((case-lambda
                                                              ((g$t$9341$1XjQw)
                                                               ((case-lambda
                                                                  ((g$ls/false$9342$1XjQw)
                                                                   (if g$ls/false$9342$1XjQw
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$9343$1XjQw)
                                                                          (g$quasicons$9293$1XjQw
                                                                            (g$quasi$9297$1XjQw
                                                                              g$p$9343$1XjQw
                                                                              g$lev$9330$1XjQw)
                                                                            (g$vquasi$9296$1XjQw
                                                                              g$q$9334$1XjQw
                                                                              g$lev$9330$1XjQw))))
                                                                       g$ls/false$9342$1XjQw)
                                                                     (g$syntax-violation$8412$1XjQw
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$9341$1XjQw))))
                                                                (g$syntax-dispatch$8301$1XjQw
                                                                  g$t$9341$1XjQw
                                                                  'any))))
                                                            g$t$9338$1XjQw))))
                                                      (g$syntax-dispatch$8301$1XjQw
                                                        g$t$9338$1XjQw
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$9335$1XjQw))))
                                            (g$syntax-dispatch$8301$1XjQw
                                              g$t$9335$1XjQw
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$9333$1XjQw)))
                                    g$ls/false$9332$1XjQw)
                                  ((case-lambda
                                     ((g$t$9344$1XjQw)
                                      ((case-lambda
                                         ((g$ls/false$9345$1XjQw)
                                          (if g$ls/false$9345$1XjQw
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$8244$1XjQw
                                                     'quote)
                                                   '())))
                                              g$ls/false$9345$1XjQw)
                                            (g$syntax-violation$8412$1XjQw
                                              '#f
                                              '"invalid syntax"
                                              g$t$9344$1XjQw))))
                                       (g$syntax-dispatch$8301$1XjQw
                                         g$t$9344$1XjQw
                                         '()))))
                                   g$t$9331$1XjQw))))
                             (g$syntax-dispatch$8301$1XjQw
                               g$t$9331$1XjQw
                               '(any . any)))))
                         g$p$9329$1XjQw))))
                   (g$quasi$9297$1XjQw
                     (case-lambda
                       ((g$p$9302$1XjQw g$lev$9303$1XjQw)
                        ((case-lambda
                           ((g$t$9304$1XjQw)
                            ((case-lambda
                               ((g$ls/false$9305$1XjQw)
                                (if g$ls/false$9305$1XjQw
                                  (apply
                                    (case-lambda
                                      ((g$p$9306$1XjQw)
                                       (if (= g$lev$9303$1XjQw '0)
                                         g$p$9306$1XjQw
                                         (g$quasicons$9293$1XjQw
                                           (g$datum$9276$1XjQw 'unquote)
                                           (g$quasi$9297$1XjQw
                                             (list g$p$9306$1XjQw)
                                             (- g$lev$9303$1XjQw '1))))))
                                    g$ls/false$9305$1XjQw)
                                  ((case-lambda
                                     ((g$t$9307$1XjQw)
                                      ((case-lambda
                                         ((g$ls/false$9308$1XjQw)
                                          (if g$ls/false$9308$1XjQw
                                            (apply
                                              (case-lambda
                                                ((g$p$9309$1XjQw g$q$9310$1XjQw)
                                                 (if (= g$lev$9303$1XjQw '0)
                                                   (g$quasicons*$9292$1XjQw
                                                     g$p$9309$1XjQw
                                                     (g$quasi$9297$1XjQw
                                                       g$q$9310$1XjQw
                                                       g$lev$9303$1XjQw))
                                                   (g$quasicons$9293$1XjQw
                                                     (g$quasicons$9293$1XjQw
                                                       (g$datum$9276$1XjQw
                                                         'unquote)
                                                       (g$quasi$9297$1XjQw
                                                         g$p$9309$1XjQw
                                                         (- g$lev$9303$1XjQw
                                                            '1)))
                                                     (g$quasi$9297$1XjQw
                                                       g$q$9310$1XjQw
                                                       g$lev$9303$1XjQw)))))
                                              g$ls/false$9308$1XjQw)
                                            ((case-lambda
                                               ((g$t$9311$1XjQw)
                                                ((case-lambda
                                                   ((g$ls/false$9312$1XjQw)
                                                    (if g$ls/false$9312$1XjQw
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$9313$1XjQw
                                                             g$q$9314$1XjQw)
                                                           (if (= g$lev$9303$1XjQw
                                                                  '0)
                                                             (g$quasiappend$9294$1XjQw
                                                               g$p$9313$1XjQw
                                                               (g$quasi$9297$1XjQw
                                                                 g$q$9314$1XjQw
                                                                 g$lev$9303$1XjQw))
                                                             (g$quasicons$9293$1XjQw
                                                               (g$quasicons$9293$1XjQw
                                                                 (g$datum$9276$1XjQw
                                                                   'unquote-splicing)
                                                                 (g$quasi$9297$1XjQw
                                                                   g$p$9313$1XjQw
                                                                   (- g$lev$9303$1XjQw
                                                                      '1)))
                                                               (g$quasi$9297$1XjQw
                                                                 g$q$9314$1XjQw
                                                                 g$lev$9303$1XjQw)))))
                                                        g$ls/false$9312$1XjQw)
                                                      ((case-lambda
                                                         ((g$t$9315$1XjQw)
                                                          ((case-lambda
                                                             ((g$ls/false$9316$1XjQw)
                                                              (if g$ls/false$9316$1XjQw
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$9317$1XjQw)
                                                                     (g$quasicons$9293$1XjQw
                                                                       (g$datum$9276$1XjQw
                                                                         'quasiquote)
                                                                       (g$quasi$9297$1XjQw
                                                                         (list
                                                                           g$p$9317$1XjQw)
                                                                         (+ g$lev$9303$1XjQw
                                                                            '1)))))
                                                                  g$ls/false$9316$1XjQw)
                                                                ((case-lambda
                                                                   ((g$t$9318$1XjQw)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9319$1XjQw)
                                                                        (if g$ls/false$9319$1XjQw
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$9320$1XjQw
                                                                                 g$q$9321$1XjQw)
                                                                               (g$quasicons$9293$1XjQw
                                                                                 (g$quasi$9297$1XjQw
                                                                                   g$p$9320$1XjQw
                                                                                   g$lev$9303$1XjQw)
                                                                                 (g$quasi$9297$1XjQw
                                                                                   g$q$9321$1XjQw
                                                                                   g$lev$9303$1XjQw))))
                                                                            g$ls/false$9319$1XjQw)
                                                                          ((case-lambda
                                                                             ((g$t$9322$1XjQw)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9323$1XjQw)
                                                                                  (if (if g$ls/false$9323$1XjQw
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$9324$1XjQw)
                                                                                               (not (g$stx?$7995$1XjQw
                                                                                                      g$x$9324$1XjQw))))
                                                                                            g$ls/false$9323$1XjQw))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$9325$1XjQw)
                                                                                         (g$quasivector$9295$1XjQw
                                                                                           (g$vquasi$9296$1XjQw
                                                                                             g$x$9325$1XjQw
                                                                                             g$lev$9303$1XjQw))))
                                                                                      g$ls/false$9323$1XjQw)
                                                                                    ((case-lambda
                                                                                       ((g$t$9326$1XjQw)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9327$1XjQw)
                                                                                            (if g$ls/false$9327$1XjQw
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$9328$1XjQw)
                                                                                                   (list
                                                                                                     (g$scheme-stx$8244$1XjQw
                                                                                                       'quote)
                                                                                                     g$p$9328$1XjQw)))
                                                                                                g$ls/false$9327$1XjQw)
                                                                                              (g$syntax-violation$8412$1XjQw
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9326$1XjQw))))
                                                                                         (g$syntax-dispatch$8301$1XjQw
                                                                                           g$t$9326$1XjQw
                                                                                           'any))))
                                                                                     g$t$9322$1XjQw))))
                                                                               (g$syntax-dispatch$8301$1XjQw
                                                                                 g$t$9322$1XjQw
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9318$1XjQw))))
                                                                     (g$syntax-dispatch$8301$1XjQw
                                                                       g$t$9318$1XjQw
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9315$1XjQw))))
                                                           (g$syntax-dispatch$8301$1XjQw
                                                             g$t$9315$1XjQw
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$9311$1XjQw))))
                                                 (g$syntax-dispatch$8301$1XjQw
                                                   g$t$9311$1XjQw
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$9307$1XjQw))))
                                       (g$syntax-dispatch$8301$1XjQw
                                         g$t$9307$1XjQw
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$9304$1XjQw))))
                             (g$syntax-dispatch$8301$1XjQw
                               g$t$9304$1XjQw
                               '(#(scheme-id unquote) any)))))
                         g$p$9302$1XjQw)))))
           (case-lambda
             ((g$x$9298$1XjQw)
              ((case-lambda
                 ((g$t$9299$1XjQw)
                  ((case-lambda
                     ((g$ls/false$9300$1XjQw)
                      (if g$ls/false$9300$1XjQw
                        (apply
                          (case-lambda
                            ((g$e$9301$1XjQw)
                             (g$quasi$9297$1XjQw g$e$9301$1XjQw '0)))
                          g$ls/false$9300$1XjQw)
                        (g$syntax-violation$8412$1XjQw
                          '#f
                          '"invalid syntax"
                          g$t$9299$1XjQw))))
                   (g$syntax-dispatch$8301$1XjQw g$t$9299$1XjQw '(_ any)))))
               g$x$9298$1XjQw))))))))
   (g$quasisyntax-macro$8293$1XjQw
     g$quasisyntax-macro$11784$1XjQw
     ((case-lambda
        (()
         (letrec* ((g$quasi$9408$1XjQw
                     (case-lambda
                       ((g$p$9422$1XjQw g$lev$9423$1XjQw)
                        ((case-lambda
                           ((g$t$9424$1XjQw)
                            ((case-lambda
                               ((g$ls/false$9425$1XjQw)
                                (if g$ls/false$9425$1XjQw
                                  (apply
                                    (case-lambda
                                      ((g$p$9426$1XjQw)
                                       (if (= g$lev$9423$1XjQw '0)
                                         ((case-lambda
                                            ((g$g$9427$1XjQw)
                                             (values
                                               (list g$g$9427$1XjQw)
                                               (list g$p$9426$1XjQw)
                                               g$g$9427$1XjQw)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$9408$1XjQw
                                                g$p$9426$1XjQw
                                                (- g$lev$9423$1XjQw '1))))
                                           (case-lambda
                                             ((g$lhs*$9431$1XjQw
                                                g$rhs*$9432$1XjQw
                                                g$p$9433$1XjQw)
                                              ((case-lambda
                                                 ((g$p$9434$1XjQw
                                                    g$rhs*$9435$1XjQw
                                                    g$lhs*$9436$1XjQw)
                                                  (values
                                                    g$lhs*$9436$1XjQw
                                                    g$rhs*$9435$1XjQw
                                                    (list
                                                      'unsyntax
                                                      g$p$9434$1XjQw))))
                                               g$p$9433$1XjQw
                                               g$rhs*$9432$1XjQw
                                               g$lhs*$9431$1XjQw)))))))
                                    g$ls/false$9425$1XjQw)
                                  ((case-lambda
                                     ((g$t$9437$1XjQw)
                                      ((case-lambda
                                         ((g$ls/false$9438$1XjQw)
                                          (if (if g$ls/false$9438$1XjQw
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$9423$1XjQw '0)))
                                                    g$ls/false$9438$1XjQw))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$8412$1XjQw
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$9422$1XjQw)))
                                              g$ls/false$9438$1XjQw)
                                            ((case-lambda
                                               ((g$t$9439$1XjQw)
                                                ((case-lambda
                                                   ((g$ls/false$9440$1XjQw)
                                                    (if g$ls/false$9440$1XjQw
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$9441$1XjQw
                                                             g$q$9442$1XjQw)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$9408$1XjQw
                                                                  g$q$9442$1XjQw
                                                                  g$lev$9423$1XjQw)))
                                                             (case-lambda
                                                               ((g$lhs*$9446$1XjQw
                                                                  g$rhs*$9447$1XjQw
                                                                  g$q$9448$1XjQw)
                                                                ((case-lambda
                                                                   ((g$q$9449$1XjQw
                                                                      g$rhs*$9450$1XjQw
                                                                      g$lhs*$9451$1XjQw)
                                                                    (if (= g$lev$9423$1XjQw
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$9452$1XjQw)
                                                                          (values
                                                                            (append
                                                                              g$g*$9452$1XjQw
                                                                              g$lhs*$9451$1XjQw)
                                                                            (append
                                                                              g$p*$9441$1XjQw
                                                                              g$rhs*$9450$1XjQw)
                                                                            (append
                                                                              g$g*$9452$1XjQw
                                                                              g$q$9449$1XjQw))))
                                                                       (g$map$5757$1XjQw
                                                                         (case-lambda
                                                                           ((g$x$9453$1XjQw)
                                                                            (gensym)))
                                                                         g$p*$9441$1XjQw))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$9408$1XjQw
                                                                             g$p*$9441$1XjQw
                                                                             (- g$lev$9423$1XjQw
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$9457$1XjQw
                                                                             g$rhs2*$9458$1XjQw
                                                                             g$p*$9459$1XjQw)
                                                                           ((case-lambda
                                                                              ((g$p*$9460$1XjQw
                                                                                 g$rhs2*$9461$1XjQw
                                                                                 g$lhs2*$9462$1XjQw)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$9462$1XjQw
                                                                                   g$lhs*$9451$1XjQw)
                                                                                 (append
                                                                                   g$rhs2*$9461$1XjQw
                                                                                   g$rhs*$9450$1XjQw)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$9460$1XjQw)
                                                                                   g$q$9449$1XjQw))))
                                                                            g$p*$9459$1XjQw
                                                                            g$rhs2*$9458$1XjQw
                                                                            g$lhs2*$9457$1XjQw)))))))
                                                                 g$q$9448$1XjQw
                                                                 g$rhs*$9447$1XjQw
                                                                 g$lhs*$9446$1XjQw))))))
                                                        g$ls/false$9440$1XjQw)
                                                      ((case-lambda
                                                         ((g$t$9463$1XjQw)
                                                          ((case-lambda
                                                             ((g$ls/false$9464$1XjQw)
                                                              (if g$ls/false$9464$1XjQw
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$9465$1XjQw
                                                                       g$q$9466$1XjQw)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$9408$1XjQw
                                                                            g$q$9466$1XjQw
                                                                            g$lev$9423$1XjQw)))
                                                                       (case-lambda
                                                                         ((g$lhs*$9470$1XjQw
                                                                            g$rhs*$9471$1XjQw
                                                                            g$q$9472$1XjQw)
                                                                          ((case-lambda
                                                                             ((g$q$9473$1XjQw
                                                                                g$rhs*$9474$1XjQw
                                                                                g$lhs*$9475$1XjQw)
                                                                              (if (= g$lev$9423$1XjQw
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$9476$1XjQw)
                                                                                    (values
                                                                                      (append
                                                                                        (g$map$5757$1XjQw
                                                                                          (case-lambda
                                                                                            ((g$g$9477$1XjQw)
                                                                                             (cons
                                                                                               g$g$9477$1XjQw
                                                                                               '(...))))
                                                                                          g$g*$9476$1XjQw)
                                                                                        g$lhs*$9475$1XjQw)
                                                                                      (append
                                                                                        g$p*$9465$1XjQw
                                                                                        g$rhs*$9474$1XjQw)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (g$map$5757$1XjQw
                                                                                            (case-lambda
                                                                                              ((g$g$9478$1XjQw)
                                                                                               (cons
                                                                                                 g$g$9478$1XjQw
                                                                                                 '(...))))
                                                                                            g$g*$9476$1XjQw))
                                                                                        g$q$9473$1XjQw))))
                                                                                 (g$map$5757$1XjQw
                                                                                   (case-lambda
                                                                                     ((g$x$9479$1XjQw)
                                                                                      (gensym)))
                                                                                   g$p*$9465$1XjQw))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$9408$1XjQw
                                                                                       g$p*$9465$1XjQw
                                                                                       (- g$lev$9423$1XjQw
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$9483$1XjQw
                                                                                       g$rhs2*$9484$1XjQw
                                                                                       g$p*$9485$1XjQw)
                                                                                     ((case-lambda
                                                                                        ((g$p*$9486$1XjQw
                                                                                           g$rhs2*$9487$1XjQw
                                                                                           g$lhs2*$9488$1XjQw)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$9488$1XjQw
                                                                                             g$lhs*$9475$1XjQw)
                                                                                           (append
                                                                                             g$rhs2*$9487$1XjQw
                                                                                             g$rhs*$9474$1XjQw)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$9486$1XjQw)
                                                                                             g$q$9473$1XjQw))))
                                                                                      g$p*$9485$1XjQw
                                                                                      g$rhs2*$9484$1XjQw
                                                                                      g$lhs2*$9483$1XjQw)))))))
                                                                           g$q$9472$1XjQw
                                                                           g$rhs*$9471$1XjQw
                                                                           g$lhs*$9470$1XjQw))))))
                                                                  g$ls/false$9464$1XjQw)
                                                                ((case-lambda
                                                                   ((g$t$9489$1XjQw)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9490$1XjQw)
                                                                        (if (if g$ls/false$9490$1XjQw
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$9423$1XjQw
                                                                                        '0)))
                                                                                  g$ls/false$9490$1XjQw))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$8412$1XjQw
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$9422$1XjQw)))
                                                                            g$ls/false$9490$1XjQw)
                                                                          ((case-lambda
                                                                             ((g$t$9491$1XjQw)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9492$1XjQw)
                                                                                  (if g$ls/false$9492$1XjQw
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$9493$1XjQw)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$9408$1XjQw
                                                                                                g$p$9493$1XjQw
                                                                                                (+ g$lev$9423$1XjQw
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$9497$1XjQw
                                                                                                g$rhs*$9498$1XjQw
                                                                                                g$p$9499$1XjQw)
                                                                                              ((case-lambda
                                                                                                 ((g$p$9500$1XjQw
                                                                                                    g$rhs*$9501$1XjQw
                                                                                                    g$lhs*$9502$1XjQw)
                                                                                                  (values
                                                                                                    g$lhs*$9502$1XjQw
                                                                                                    g$rhs*$9501$1XjQw
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$9500$1XjQw))))
                                                                                               g$p$9499$1XjQw
                                                                                               g$rhs*$9498$1XjQw
                                                                                               g$lhs*$9497$1XjQw))))))
                                                                                      g$ls/false$9492$1XjQw)
                                                                                    ((case-lambda
                                                                                       ((g$t$9503$1XjQw)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9504$1XjQw)
                                                                                            (if g$ls/false$9504$1XjQw
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$9505$1XjQw
                                                                                                     g$q$9506$1XjQw)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$9408$1XjQw
                                                                                                          g$p$9505$1XjQw
                                                                                                          g$lev$9423$1XjQw)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$9513$1XjQw
                                                                                                          g$rhs*$9514$1XjQw
                                                                                                          g$p$9515$1XjQw)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$9408$1XjQw
                                                                                                               g$q$9506$1XjQw
                                                                                                               g$lev$9423$1XjQw)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$9516$1XjQw
                                                                                                               g$rhs2*$9517$1XjQw
                                                                                                               g$q$9518$1XjQw)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$9519$1XjQw
                                                                                                                   g$rhs2*$9520$1XjQw
                                                                                                                   g$lhs2*$9521$1XjQw
                                                                                                                   g$p$9522$1XjQw
                                                                                                                   g$rhs*$9523$1XjQw
                                                                                                                   g$lhs*$9524$1XjQw)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$9521$1XjQw
                                                                                                                     g$lhs*$9524$1XjQw)
                                                                                                                   (append
                                                                                                                     g$rhs2*$9520$1XjQw
                                                                                                                     g$rhs*$9523$1XjQw)
                                                                                                                   (cons
                                                                                                                     g$p$9522$1XjQw
                                                                                                                     g$q$9519$1XjQw))))
                                                                                                              g$q$9518$1XjQw
                                                                                                              g$rhs2*$9517$1XjQw
                                                                                                              g$lhs2*$9516$1XjQw
                                                                                                              g$p$9515$1XjQw
                                                                                                              g$rhs*$9514$1XjQw
                                                                                                              g$lhs*$9513$1XjQw)))))))))
                                                                                                g$ls/false$9504$1XjQw)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9525$1XjQw)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9526$1XjQw)
                                                                                                      (if g$ls/false$9526$1XjQw
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$9527$1XjQw)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$9408$1XjQw
                                                                                                                    g$x*$9527$1XjQw
                                                                                                                    g$lev$9423$1XjQw)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$9531$1XjQw
                                                                                                                    g$rhs*$9532$1XjQw
                                                                                                                    g$x*$9533$1XjQw)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$9534$1XjQw
                                                                                                                        g$rhs*$9535$1XjQw
                                                                                                                        g$lhs*$9536$1XjQw)
                                                                                                                      (values
                                                                                                                        g$lhs*$9536$1XjQw
                                                                                                                        g$rhs*$9535$1XjQw
                                                                                                                        (list->vector
                                                                                                                          g$x*$9534$1XjQw))))
                                                                                                                   g$x*$9533$1XjQw
                                                                                                                   g$rhs*$9532$1XjQw
                                                                                                                   g$lhs*$9531$1XjQw))))))
                                                                                                          g$ls/false$9526$1XjQw)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9537$1XjQw)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9538$1XjQw)
                                                                                                                (if g$ls/false$9538$1XjQw
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$9422$1XjQw)))
                                                                                                                    g$ls/false$9538$1XjQw)
                                                                                                                  (g$syntax-violation$8412$1XjQw
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9537$1XjQw))))
                                                                                                             (g$syntax-dispatch$8301$1XjQw
                                                                                                               g$t$9537$1XjQw
                                                                                                               '_))))
                                                                                                         g$t$9525$1XjQw))))
                                                                                                   (g$syntax-dispatch$8301$1XjQw
                                                                                                     g$t$9525$1XjQw
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$9503$1XjQw))))
                                                                                         (g$syntax-dispatch$8301$1XjQw
                                                                                           g$t$9503$1XjQw
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$9491$1XjQw))))
                                                                               (g$syntax-dispatch$8301$1XjQw
                                                                                 g$t$9491$1XjQw
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$9489$1XjQw))))
                                                                     (g$syntax-dispatch$8301$1XjQw
                                                                       g$t$9489$1XjQw
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$9463$1XjQw))))
                                                           (g$syntax-dispatch$8301$1XjQw
                                                             g$t$9463$1XjQw
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$9439$1XjQw))))
                                                 (g$syntax-dispatch$8301$1XjQw
                                                   g$t$9439$1XjQw
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$9437$1XjQw))))
                                       (g$syntax-dispatch$8301$1XjQw
                                         g$t$9437$1XjQw
                                         '#(scheme-id unsyntax)))))
                                   g$t$9424$1XjQw))))
                             (g$syntax-dispatch$8301$1XjQw
                               g$t$9424$1XjQw
                               '(#(scheme-id unsyntax) any)))))
                         g$p$9422$1XjQw)))))
           (case-lambda
             ((g$x$9409$1XjQw)
              ((case-lambda
                 ((g$t$9410$1XjQw)
                  ((case-lambda
                     ((g$ls/false$9411$1XjQw)
                      (if g$ls/false$9411$1XjQw
                        (apply
                          (case-lambda
                            ((g$e$9412$1XjQw)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$9408$1XjQw g$e$9412$1XjQw '0)))
                               (case-lambda
                                 ((g$lhs*$9416$1XjQw
                                    g$rhs*$9417$1XjQw
                                    g$v$9418$1XjQw)
                                  ((case-lambda
                                     ((g$v$9419$1XjQw
                                        g$rhs*$9420$1XjQw
                                        g$lhs*$9421$1XjQw)
                                      (g$bless$8264$1XjQw
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$9420$1XjQw)
                                          '()
                                          (list
                                            g$lhs*$9421$1XjQw
                                            (list 'syntax g$v$9419$1XjQw))))))
                                   g$v$9418$1XjQw
                                   g$rhs*$9417$1XjQw
                                   g$lhs*$9416$1XjQw))))))
                          g$ls/false$9411$1XjQw)
                        (g$syntax-violation$8412$1XjQw
                          '#f
                          '"invalid syntax"
                          g$t$9410$1XjQw))))
                   (g$syntax-dispatch$8301$1XjQw g$t$9410$1XjQw '(_ any)))))
               g$x$9409$1XjQw))))))))
   (g$define-struct-macro$8294$1XjQw
     g$define-struct-macro$11785$1XjQw
     (case-lambda
       ((g$stx$9539$1XjQw)
        (g$syntax-violation$8412$1XjQw
          '#f
          '"define-struct not supported"
          g$stx$9539$1XjQw))))
   (g$define-record-type-macro$8295$1XjQw
     g$define-record-type-macro$11786$1XjQw
     (case-lambda
       ((g$x$9540$1XjQw)
        (letrec* ((g$id$9541$1XjQw
                    (case-lambda
                      ((g$ctxt$9793$1XjQw . g$str*$9794$1XjQw)
                       (g$datum->syntax$8414$1XjQw
                         g$ctxt$9793$1XjQw
                         (string->symbol
                           (apply
                             string-append
                             (g$map$5757$1XjQw
                               (case-lambda
                                 ((g$x$9795$1XjQw)
                                  (if (symbol? g$x$9795$1XjQw)
                                    (symbol->string g$x$9795$1XjQw)
                                    (if (string? g$x$9795$1XjQw)
                                      g$x$9795$1XjQw
                                      (assertion-violation
                                        'define-record-type
                                        '"BUG")))))
                               g$str*$9794$1XjQw)))))))
                  (g$get-record-name$9542$1XjQw
                    (case-lambda
                      ((g$spec$9784$1XjQw)
                       ((case-lambda
                          ((g$t$9785$1XjQw)
                           ((case-lambda
                              ((g$ls/false$9786$1XjQw)
                               (if g$ls/false$9786$1XjQw
                                 (apply
                                   (case-lambda
                                     ((g$foo$9787$1XjQw
                                        g$make-foo$9788$1XjQw
                                        g$foo?$9789$1XjQw)
                                      g$foo$9787$1XjQw))
                                   g$ls/false$9786$1XjQw)
                                 ((case-lambda
                                    ((g$t$9790$1XjQw)
                                     ((case-lambda
                                        ((g$ls/false$9791$1XjQw)
                                         (if g$ls/false$9791$1XjQw
                                           (apply
                                             (case-lambda
                                               ((g$foo$9792$1XjQw)
                                                g$foo$9792$1XjQw))
                                             g$ls/false$9791$1XjQw)
                                           (g$syntax-violation$8412$1XjQw
                                             '#f
                                             '"invalid syntax"
                                             g$t$9790$1XjQw))))
                                      (g$syntax-dispatch$8301$1XjQw
                                        g$t$9790$1XjQw
                                        'any))))
                                  g$t$9785$1XjQw))))
                            (g$syntax-dispatch$8301$1XjQw
                              g$t$9785$1XjQw
                              '(any any any)))))
                        g$spec$9784$1XjQw))))
                  (g$get-record-constructor-name$9543$1XjQw
                    (case-lambda
                      ((g$spec$9774$1XjQw)
                       ((case-lambda
                          ((g$t$9775$1XjQw)
                           ((case-lambda
                              ((g$ls/false$9776$1XjQw)
                               (if g$ls/false$9776$1XjQw
                                 (apply
                                   (case-lambda
                                     ((g$foo$9777$1XjQw
                                        g$make-foo$9778$1XjQw
                                        g$foo?$9779$1XjQw)
                                      g$make-foo$9778$1XjQw))
                                   g$ls/false$9776$1XjQw)
                                 ((case-lambda
                                    ((g$t$9780$1XjQw)
                                     ((case-lambda
                                        ((g$ls/false$9781$1XjQw)
                                         (if (if g$ls/false$9781$1XjQw
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9782$1XjQw)
                                                      (g$id?$8023$1XjQw
                                                        g$foo$9782$1XjQw)))
                                                   g$ls/false$9781$1XjQw))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9783$1XjQw)
                                                (g$id$9541$1XjQw
                                                  g$foo$9783$1XjQw
                                                  '"make-"
                                                  (g$stx->datum$8034$1XjQw
                                                    g$foo$9783$1XjQw))))
                                             g$ls/false$9781$1XjQw)
                                           (g$syntax-violation$8412$1XjQw
                                             '#f
                                             '"invalid syntax"
                                             g$t$9780$1XjQw))))
                                      (g$syntax-dispatch$8301$1XjQw
                                        g$t$9780$1XjQw
                                        'any))))
                                  g$t$9775$1XjQw))))
                            (g$syntax-dispatch$8301$1XjQw
                              g$t$9775$1XjQw
                              '(any any any)))))
                        g$spec$9774$1XjQw))))
                  (g$get-record-predicate-name$9544$1XjQw
                    (case-lambda
                      ((g$spec$9764$1XjQw)
                       ((case-lambda
                          ((g$t$9765$1XjQw)
                           ((case-lambda
                              ((g$ls/false$9766$1XjQw)
                               (if g$ls/false$9766$1XjQw
                                 (apply
                                   (case-lambda
                                     ((g$foo$9767$1XjQw
                                        g$make-foo$9768$1XjQw
                                        g$foo?$9769$1XjQw)
                                      g$foo?$9769$1XjQw))
                                   g$ls/false$9766$1XjQw)
                                 ((case-lambda
                                    ((g$t$9770$1XjQw)
                                     ((case-lambda
                                        ((g$ls/false$9771$1XjQw)
                                         (if (if g$ls/false$9771$1XjQw
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9772$1XjQw)
                                                      (g$id?$8023$1XjQw
                                                        g$foo$9772$1XjQw)))
                                                   g$ls/false$9771$1XjQw))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9773$1XjQw)
                                                (g$id$9541$1XjQw
                                                  g$foo$9773$1XjQw
                                                  (g$stx->datum$8034$1XjQw
                                                    g$foo$9773$1XjQw)
                                                  '"?")))
                                             g$ls/false$9771$1XjQw)
                                           (g$syntax-violation$8412$1XjQw
                                             '#f
                                             '"invalid syntax"
                                             g$t$9770$1XjQw))))
                                      (g$syntax-dispatch$8301$1XjQw
                                        g$t$9770$1XjQw
                                        'any))))
                                  g$t$9765$1XjQw))))
                            (g$syntax-dispatch$8301$1XjQw
                              g$t$9765$1XjQw
                              '(any any any)))))
                        g$spec$9764$1XjQw))))
                  (g$get-clause$9545$1XjQw
                    (case-lambda
                      ((g$id$9755$1XjQw g$ls$9756$1XjQw)
                       ((case-lambda
                          ((g$t$9757$1XjQw)
                           ((case-lambda
                              ((g$ls/false$9758$1XjQw)
                               (if g$ls/false$9758$1XjQw
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$9758$1XjQw)
                                 ((case-lambda
                                    ((g$t$9759$1XjQw)
                                     ((case-lambda
                                        ((g$ls/false$9760$1XjQw)
                                         (if g$ls/false$9760$1XjQw
                                           (apply
                                             (case-lambda
                                               ((g$x$9761$1XjQw
                                                  g$rest$9762$1XjQw
                                                  g$ls$9763$1XjQw)
                                                (if (g$free-id=?$8027$1XjQw
                                                      (g$bless$8264$1XjQw
                                                        g$id$9755$1XjQw)
                                                      g$x$9761$1XjQw)
                                                  (cons
                                                    g$x$9761$1XjQw
                                                    g$rest$9762$1XjQw)
                                                  (g$get-clause$9545$1XjQw
                                                    g$id$9755$1XjQw
                                                    g$ls$9763$1XjQw))))
                                             g$ls/false$9760$1XjQw)
                                           (g$syntax-violation$8412$1XjQw
                                             '#f
                                             '"invalid syntax"
                                             g$t$9759$1XjQw))))
                                      (g$syntax-dispatch$8301$1XjQw
                                        g$t$9759$1XjQw
                                        '((any . any) . any)))))
                                  g$t$9757$1XjQw))))
                            (g$syntax-dispatch$8301$1XjQw g$t$9757$1XjQw '()))))
                        g$ls$9756$1XjQw))))
                  (g$foo-rtd-code$9546$1XjQw
                    (case-lambda
                      ((g$name$9714$1XjQw
                         g$clause*$9715$1XjQw
                         g$parent-rtd-code$9716$1XjQw)
                       (letrec* ((g$convert-field-spec*$9717$1XjQw
                                   (case-lambda
                                     ((g$ls$9742$1XjQw)
                                      (list->vector
                                        (g$map$5757$1XjQw
                                          (case-lambda
                                            ((g$x$9743$1XjQw)
                                             ((case-lambda
                                                ((g$t$9744$1XjQw)
                                                 ((case-lambda
                                                    ((g$ls/false$9745$1XjQw)
                                                     (if g$ls/false$9745$1XjQw
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$9746$1XjQw
                                                              g$rest$9747$1XjQw)
                                                            (list
                                                              'mutable
                                                              g$name$9746$1XjQw)))
                                                         g$ls/false$9745$1XjQw)
                                                       ((case-lambda
                                                          ((g$t$9748$1XjQw)
                                                           ((case-lambda
                                                              ((g$ls/false$9749$1XjQw)
                                                               (if g$ls/false$9749$1XjQw
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$9750$1XjQw
                                                                        g$rest$9751$1XjQw)
                                                                      (list
                                                                        'immutable
                                                                        g$name$9750$1XjQw)))
                                                                   g$ls/false$9749$1XjQw)
                                                                 ((case-lambda
                                                                    ((g$t$9752$1XjQw)
                                                                     ((case-lambda
                                                                        ((g$ls/false$9753$1XjQw)
                                                                         (if g$ls/false$9753$1XjQw
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$9754$1XjQw)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$9754$1XjQw)))
                                                                             g$ls/false$9753$1XjQw)
                                                                           (g$syntax-violation$8412$1XjQw
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$9752$1XjQw))))
                                                                      (g$syntax-dispatch$8301$1XjQw
                                                                        g$t$9752$1XjQw
                                                                        'any))))
                                                                  g$t$9748$1XjQw))))
                                                            (g$syntax-dispatch$8301$1XjQw
                                                              g$t$9748$1XjQw
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$9744$1XjQw))))
                                                  (g$syntax-dispatch$8301$1XjQw
                                                    g$t$9744$1XjQw
                                                    '(#(scheme-id mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$9743$1XjQw)))
                                          g$ls$9742$1XjQw))))))
                         ((case-lambda
                            ((g$uid-code$9718$1XjQw
                               g$sealed?$9719$1XjQw
                               g$opaque?$9720$1XjQw
                               g$fields$9721$1XjQw)
                             (g$bless$8264$1XjQw
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$9714$1XjQw)
                                 g$parent-rtd-code$9716$1XjQw
                                 g$uid-code$9718$1XjQw
                                 g$sealed?$9719$1XjQw
                                 g$opaque?$9720$1XjQw
                                 g$fields$9721$1XjQw))))
                          ((case-lambda
                             ((g$t$9722$1XjQw)
                              ((case-lambda
                                 ((g$ls/false$9723$1XjQw)
                                  (if g$ls/false$9723$1XjQw
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$9723$1XjQw)
                                    ((case-lambda
                                       ((g$t$9724$1XjQw)
                                        ((case-lambda
                                           ((g$ls/false$9725$1XjQw)
                                            (if g$ls/false$9725$1XjQw
                                              (apply
                                                (case-lambda
                                                  ((g$uid$9726$1XjQw)
                                                   (list
                                                     'quote
                                                     g$uid$9726$1XjQw)))
                                                g$ls/false$9725$1XjQw)
                                              ((case-lambda
                                                 ((g$t$9727$1XjQw)
                                                  ((case-lambda
                                                     ((g$ls/false$9728$1XjQw)
                                                      (if g$ls/false$9728$1XjQw
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$9728$1XjQw)
                                                        (g$syntax-violation$8412$1XjQw
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$9727$1XjQw))))
                                                   (g$syntax-dispatch$8301$1XjQw
                                                     g$t$9727$1XjQw
                                                     '_))))
                                               g$t$9724$1XjQw))))
                                         (g$syntax-dispatch$8301$1XjQw
                                           g$t$9724$1XjQw
                                           '(_ any)))))
                                     g$t$9722$1XjQw))))
                               (g$syntax-dispatch$8301$1XjQw
                                 g$t$9722$1XjQw
                                 '(_)))))
                           (g$get-clause$9545$1XjQw
                             'nongenerative
                             g$clause*$9715$1XjQw))
                          ((case-lambda
                             ((g$t$9729$1XjQw)
                              ((case-lambda
                                 ((g$ls/false$9730$1XjQw)
                                  (if g$ls/false$9730$1XjQw
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9730$1XjQw)
                                    ((case-lambda
                                       ((g$t$9731$1XjQw)
                                        ((case-lambda
                                           ((g$ls/false$9732$1XjQw)
                                            (if g$ls/false$9732$1XjQw
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9732$1XjQw)
                                              (g$syntax-violation$8412$1XjQw
                                                '#f
                                                '"invalid syntax"
                                                g$t$9731$1XjQw))))
                                         (g$syntax-dispatch$8301$1XjQw
                                           g$t$9731$1XjQw
                                           '_))))
                                     g$t$9729$1XjQw))))
                               (g$syntax-dispatch$8301$1XjQw
                                 g$t$9729$1XjQw
                                 '(_ #(atom #t))))))
                           (g$get-clause$9545$1XjQw
                             'sealed
                             g$clause*$9715$1XjQw))
                          ((case-lambda
                             ((g$t$9733$1XjQw)
                              ((case-lambda
                                 ((g$ls/false$9734$1XjQw)
                                  (if g$ls/false$9734$1XjQw
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9734$1XjQw)
                                    ((case-lambda
                                       ((g$t$9735$1XjQw)
                                        ((case-lambda
                                           ((g$ls/false$9736$1XjQw)
                                            (if g$ls/false$9736$1XjQw
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9736$1XjQw)
                                              (g$syntax-violation$8412$1XjQw
                                                '#f
                                                '"invalid syntax"
                                                g$t$9735$1XjQw))))
                                         (g$syntax-dispatch$8301$1XjQw
                                           g$t$9735$1XjQw
                                           '_))))
                                     g$t$9733$1XjQw))))
                               (g$syntax-dispatch$8301$1XjQw
                                 g$t$9733$1XjQw
                                 '(_ #(atom #t))))))
                           (g$get-clause$9545$1XjQw
                             'opaque
                             g$clause*$9715$1XjQw))
                          ((case-lambda
                             ((g$t$9737$1XjQw)
                              ((case-lambda
                                 ((g$ls/false$9738$1XjQw)
                                  (if g$ls/false$9738$1XjQw
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$9739$1XjQw)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$9717$1XjQw
                                             g$field-spec*$9739$1XjQw))))
                                      g$ls/false$9738$1XjQw)
                                    ((case-lambda
                                       ((g$t$9740$1XjQw)
                                        ((case-lambda
                                           ((g$ls/false$9741$1XjQw)
                                            (if g$ls/false$9741$1XjQw
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$9741$1XjQw)
                                              (g$syntax-violation$8412$1XjQw
                                                '#f
                                                '"invalid syntax"
                                                g$t$9740$1XjQw))))
                                         (g$syntax-dispatch$8301$1XjQw
                                           g$t$9740$1XjQw
                                           '_))))
                                     g$t$9737$1XjQw))))
                               (g$syntax-dispatch$8301$1XjQw
                                 g$t$9737$1XjQw
                                 '(_ . each-any)))))
                           (g$get-clause$9545$1XjQw
                             'fields
                             g$clause*$9715$1XjQw)))))))
                  (g$parent-rtd-code$9547$1XjQw
                    (case-lambda
                      ((g$clause*$9702$1XjQw)
                       ((case-lambda
                          ((g$t$9703$1XjQw)
                           ((case-lambda
                              ((g$ls/false$9704$1XjQw)
                               (if g$ls/false$9704$1XjQw
                                 (apply
                                   (case-lambda
                                     ((g$name$9705$1XjQw)
                                      (list
                                        'record-type-descriptor
                                        g$name$9705$1XjQw)))
                                   g$ls/false$9704$1XjQw)
                                 ((case-lambda
                                    ((g$t$9706$1XjQw)
                                     ((case-lambda
                                        ((g$ls/false$9707$1XjQw)
                                         (if g$ls/false$9707$1XjQw
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9708$1XjQw)
                                                    ((case-lambda
                                                       ((g$ls/false$9709$1XjQw)
                                                        (if g$ls/false$9709$1XjQw
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9710$1XjQw
                                                                 g$rcd$9711$1XjQw)
                                                               g$rtd$9710$1XjQw))
                                                            g$ls/false$9709$1XjQw)
                                                          ((case-lambda
                                                             ((g$t$9712$1XjQw)
                                                              ((case-lambda
                                                                 ((g$ls/false$9713$1XjQw)
                                                                  (if g$ls/false$9713$1XjQw
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9713$1XjQw)
                                                                    (g$syntax-violation$8412$1XjQw
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9712$1XjQw))))
                                                               (g$syntax-dispatch$8301$1XjQw
                                                                 g$t$9712$1XjQw
                                                                 '#(atom #f)))))
                                                           g$t$9708$1XjQw))))
                                                     (g$syntax-dispatch$8301$1XjQw
                                                       g$t$9708$1XjQw
                                                       '(_ any any)))))
                                                 (g$get-clause$9545$1XjQw
                                                   'parent-rtd
                                                   g$clause*$9702$1XjQw))))
                                             g$ls/false$9707$1XjQw)
                                           (g$syntax-violation$8412$1XjQw
                                             '#f
                                             '"invalid syntax"
                                             g$t$9706$1XjQw))))
                                      (g$syntax-dispatch$8301$1XjQw
                                        g$t$9706$1XjQw
                                        '#(atom #f)))))
                                  g$t$9703$1XjQw))))
                            (g$syntax-dispatch$8301$1XjQw
                              g$t$9703$1XjQw
                              '(_ any)))))
                        (g$get-clause$9545$1XjQw
                          'parent
                          g$clause*$9702$1XjQw)))))
                  (g$parent-rcd-code$9548$1XjQw
                    (case-lambda
                      ((g$clause*$9690$1XjQw)
                       ((case-lambda
                          ((g$t$9691$1XjQw)
                           ((case-lambda
                              ((g$ls/false$9692$1XjQw)
                               (if g$ls/false$9692$1XjQw
                                 (apply
                                   (case-lambda
                                     ((g$name$9693$1XjQw)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$9693$1XjQw)))
                                   g$ls/false$9692$1XjQw)
                                 ((case-lambda
                                    ((g$t$9694$1XjQw)
                                     ((case-lambda
                                        ((g$ls/false$9695$1XjQw)
                                         (if g$ls/false$9695$1XjQw
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9696$1XjQw)
                                                    ((case-lambda
                                                       ((g$ls/false$9697$1XjQw)
                                                        (if g$ls/false$9697$1XjQw
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9698$1XjQw
                                                                 g$rcd$9699$1XjQw)
                                                               g$rcd$9699$1XjQw))
                                                            g$ls/false$9697$1XjQw)
                                                          ((case-lambda
                                                             ((g$t$9700$1XjQw)
                                                              ((case-lambda
                                                                 ((g$ls/false$9701$1XjQw)
                                                                  (if g$ls/false$9701$1XjQw
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9701$1XjQw)
                                                                    (g$syntax-violation$8412$1XjQw
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9700$1XjQw))))
                                                               (g$syntax-dispatch$8301$1XjQw
                                                                 g$t$9700$1XjQw
                                                                 '#(atom #f)))))
                                                           g$t$9696$1XjQw))))
                                                     (g$syntax-dispatch$8301$1XjQw
                                                       g$t$9696$1XjQw
                                                       '(_ any any)))))
                                                 (g$get-clause$9545$1XjQw
                                                   'parent-rtd
                                                   g$clause*$9690$1XjQw))))
                                             g$ls/false$9695$1XjQw)
                                           (g$syntax-violation$8412$1XjQw
                                             '#f
                                             '"invalid syntax"
                                             g$t$9694$1XjQw))))
                                      (g$syntax-dispatch$8301$1XjQw
                                        g$t$9694$1XjQw
                                        '#(atom #f)))))
                                  g$t$9691$1XjQw))))
                            (g$syntax-dispatch$8301$1XjQw
                              g$t$9691$1XjQw
                              '(_ any)))))
                        (g$get-clause$9545$1XjQw
                          'parent
                          g$clause*$9690$1XjQw)))))
                  (g$foo-rcd-code$9549$1XjQw
                    (case-lambda
                      ((g$clause*$9686$1XjQw
                         g$foo-rtd$9687$1XjQw
                         g$protocol$9688$1XjQw
                         g$parent-rcd-code$9689$1XjQw)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$9687$1XjQw
                         g$parent-rcd-code$9689$1XjQw
                         g$protocol$9688$1XjQw))))
                  (g$get-protocol-code$9550$1XjQw
                    (case-lambda
                      ((g$clause*$9680$1XjQw)
                       ((case-lambda
                          ((g$t$9681$1XjQw)
                           ((case-lambda
                              ((g$ls/false$9682$1XjQw)
                               (if g$ls/false$9682$1XjQw
                                 (apply
                                   (case-lambda
                                     ((g$expr$9683$1XjQw) g$expr$9683$1XjQw))
                                   g$ls/false$9682$1XjQw)
                                 ((case-lambda
                                    ((g$t$9684$1XjQw)
                                     ((case-lambda
                                        ((g$ls/false$9685$1XjQw)
                                         (if g$ls/false$9685$1XjQw
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$9685$1XjQw)
                                           (g$syntax-violation$8412$1XjQw
                                             '#f
                                             '"invalid syntax"
                                             g$t$9684$1XjQw))))
                                      (g$syntax-dispatch$8301$1XjQw
                                        g$t$9684$1XjQw
                                        '_))))
                                  g$t$9681$1XjQw))))
                            (g$syntax-dispatch$8301$1XjQw
                              g$t$9681$1XjQw
                              '(_ any)))))
                        (g$get-clause$9545$1XjQw
                          'protocol
                          g$clause*$9680$1XjQw)))))
                  (g$get-fields$9551$1XjQw
                    (case-lambda
                      ((g$clause*$9671$1XjQw)
                       ((case-lambda
                          ((g$t$9672$1XjQw)
                           ((case-lambda
                              ((g$ls/false$9673$1XjQw)
                               (if g$ls/false$9673$1XjQw
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$9673$1XjQw)
                                 ((case-lambda
                                    ((g$t$9674$1XjQw)
                                     ((case-lambda
                                        ((g$ls/false$9675$1XjQw)
                                         (if g$ls/false$9675$1XjQw
                                           (apply
                                             (case-lambda
                                               ((g$f*$9676$1XjQw)
                                                g$f*$9676$1XjQw))
                                             g$ls/false$9675$1XjQw)
                                           ((case-lambda
                                              ((g$t$9677$1XjQw)
                                               ((case-lambda
                                                  ((g$ls/false$9678$1XjQw)
                                                   (if g$ls/false$9678$1XjQw
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$9679$1XjQw)
                                                          (g$get-fields$9551$1XjQw
                                                            g$rest$9679$1XjQw)))
                                                       g$ls/false$9678$1XjQw)
                                                     (g$syntax-violation$8412$1XjQw
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9677$1XjQw))))
                                                (g$syntax-dispatch$8301$1XjQw
                                                  g$t$9677$1XjQw
                                                  '(_ . any)))))
                                            g$t$9674$1XjQw))))
                                      (g$syntax-dispatch$8301$1XjQw
                                        g$t$9674$1XjQw
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$9672$1XjQw))))
                            (g$syntax-dispatch$8301$1XjQw g$t$9672$1XjQw '()))))
                        g$clause*$9671$1XjQw))))
                  (g$get-mutator-indices$9552$1XjQw
                    (case-lambda
                      ((g$fields$9659$1XjQw)
                       ((letrec ((g$f$9660$1XjQw
                                   (case-lambda
                                     ((g$fields$9661$1XjQw g$i$9662$1XjQw)
                                      ((case-lambda
                                         ((g$t$9663$1XjQw)
                                          ((case-lambda
                                             ((g$ls/false$9664$1XjQw)
                                              (if g$ls/false$9664$1XjQw
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$9664$1XjQw)
                                                ((case-lambda
                                                   ((g$t$9665$1XjQw)
                                                    ((case-lambda
                                                       ((g$ls/false$9666$1XjQw)
                                                        (if g$ls/false$9666$1XjQw
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$9667$1XjQw)
                                                               (cons
                                                                 g$i$9662$1XjQw
                                                                 (g$f$9660$1XjQw
                                                                   g$rest$9667$1XjQw
                                                                   (+ g$i$9662$1XjQw
                                                                      '1)))))
                                                            g$ls/false$9666$1XjQw)
                                                          ((case-lambda
                                                             ((g$t$9668$1XjQw)
                                                              ((case-lambda
                                                                 ((g$ls/false$9669$1XjQw)
                                                                  (if g$ls/false$9669$1XjQw
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$9670$1XjQw)
                                                                         (g$f$9660$1XjQw
                                                                           g$rest$9670$1XjQw
                                                                           (+ g$i$9662$1XjQw
                                                                              '1))))
                                                                      g$ls/false$9669$1XjQw)
                                                                    (g$syntax-violation$8412$1XjQw
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9668$1XjQw))))
                                                               (g$syntax-dispatch$8301$1XjQw
                                                                 g$t$9668$1XjQw
                                                                 '(_ . any)))))
                                                           g$t$9665$1XjQw))))
                                                     (g$syntax-dispatch$8301$1XjQw
                                                       g$t$9665$1XjQw
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$9663$1XjQw))))
                                           (g$syntax-dispatch$8301$1XjQw
                                             g$t$9663$1XjQw
                                             '()))))
                                       g$fields$9661$1XjQw)))))
                          g$f$9660$1XjQw)
                        g$fields$9659$1XjQw
                        '0))))
                  (g$get-mutators$9553$1XjQw
                    (case-lambda
                      ((g$foo$9638$1XjQw g$fields$9639$1XjQw)
                       (letrec* ((g$gen-name$9640$1XjQw
                                   (case-lambda
                                     ((g$x$9658$1XjQw)
                                      (g$datum->syntax$8414$1XjQw
                                        g$foo$9638$1XjQw
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$8415$1XjQw
                                                g$foo$9638$1XjQw))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$8415$1XjQw
                                                g$x$9658$1XjQw))
                                            '"-set!")))))))
                         ((letrec ((g$f$9641$1XjQw
                                     (case-lambda
                                       ((g$fields$9642$1XjQw)
                                        ((case-lambda
                                           ((g$t$9643$1XjQw)
                                            ((case-lambda
                                               ((g$ls/false$9644$1XjQw)
                                                (if g$ls/false$9644$1XjQw
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$9644$1XjQw)
                                                  ((case-lambda
                                                     ((g$t$9645$1XjQw)
                                                      ((case-lambda
                                                         ((g$ls/false$9646$1XjQw)
                                                          (if g$ls/false$9646$1XjQw
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$9647$1XjQw
                                                                   g$accessor$9648$1XjQw
                                                                   g$mutator$9649$1XjQw
                                                                   g$rest$9650$1XjQw)
                                                                 (cons
                                                                   g$mutator$9649$1XjQw
                                                                   (g$f$9641$1XjQw
                                                                     g$rest$9650$1XjQw))))
                                                              g$ls/false$9646$1XjQw)
                                                            ((case-lambda
                                                               ((g$t$9651$1XjQw)
                                                                ((case-lambda
                                                                   ((g$ls/false$9652$1XjQw)
                                                                    (if g$ls/false$9652$1XjQw
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$9653$1XjQw
                                                                             g$rest$9654$1XjQw)
                                                                           (cons
                                                                             (g$gen-name$9640$1XjQw
                                                                               g$name$9653$1XjQw)
                                                                             (g$f$9641$1XjQw
                                                                               g$rest$9654$1XjQw))))
                                                                        g$ls/false$9652$1XjQw)
                                                                      ((case-lambda
                                                                         ((g$t$9655$1XjQw)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9656$1XjQw)
                                                                              (if g$ls/false$9656$1XjQw
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$9657$1XjQw)
                                                                                     (g$f$9641$1XjQw
                                                                                       g$rest$9657$1XjQw)))
                                                                                  g$ls/false$9656$1XjQw)
                                                                                (g$syntax-violation$8412$1XjQw
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$9655$1XjQw))))
                                                                           (g$syntax-dispatch$8301$1XjQw
                                                                             g$t$9655$1XjQw
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$9651$1XjQw))))
                                                                 (g$syntax-dispatch$8301$1XjQw
                                                                   g$t$9651$1XjQw
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$9645$1XjQw))))
                                                       (g$syntax-dispatch$8301$1XjQw
                                                         g$t$9645$1XjQw
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$9643$1XjQw))))
                                             (g$syntax-dispatch$8301$1XjQw
                                               g$t$9643$1XjQw
                                               '()))))
                                         g$fields$9642$1XjQw)))))
                            g$f$9641$1XjQw)
                          g$fields$9639$1XjQw)))))
                  (g$get-accessors$9554$1XjQw
                    (case-lambda
                      ((g$foo$9604$1XjQw g$fields$9605$1XjQw)
                       (letrec* ((g$gen-name$9606$1XjQw
                                   (case-lambda
                                     ((g$x$9637$1XjQw)
                                      (g$datum->syntax$8414$1XjQw
                                        g$foo$9604$1XjQw
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$8415$1XjQw
                                                g$foo$9604$1XjQw))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$8415$1XjQw
                                                g$x$9637$1XjQw)))))))))
                         (g$map$5757$1XjQw
                           (case-lambda
                             ((g$field$9607$1XjQw)
                              ((case-lambda
                                 ((g$t$9608$1XjQw)
                                  ((case-lambda
                                     ((g$ls/false$9609$1XjQw)
                                      (if (if g$ls/false$9609$1XjQw
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$9610$1XjQw
                                                     g$accessor$9611$1XjQw
                                                     g$mutator$9612$1XjQw)
                                                   (g$id?$8023$1XjQw
                                                     g$accessor$9611$1XjQw)))
                                                g$ls/false$9609$1XjQw))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$9613$1XjQw
                                               g$accessor$9614$1XjQw
                                               g$mutator$9615$1XjQw)
                                             g$accessor$9614$1XjQw))
                                          g$ls/false$9609$1XjQw)
                                        ((case-lambda
                                           ((g$t$9616$1XjQw)
                                            ((case-lambda
                                               ((g$ls/false$9617$1XjQw)
                                                (if (if g$ls/false$9617$1XjQw
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$9618$1XjQw
                                                               g$accessor$9619$1XjQw)
                                                             (g$id?$8023$1XjQw
                                                               g$accessor$9619$1XjQw)))
                                                          g$ls/false$9617$1XjQw))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$9620$1XjQw
                                                         g$accessor$9621$1XjQw)
                                                       g$accessor$9621$1XjQw))
                                                    g$ls/false$9617$1XjQw)
                                                  ((case-lambda
                                                     ((g$t$9622$1XjQw)
                                                      ((case-lambda
                                                         ((g$ls/false$9623$1XjQw)
                                                          (if (if g$ls/false$9623$1XjQw
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$9624$1XjQw)
                                                                       (g$id?$8023$1XjQw
                                                                         g$name$9624$1XjQw)))
                                                                    g$ls/false$9623$1XjQw))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$9625$1XjQw)
                                                                 (g$gen-name$9606$1XjQw
                                                                   g$name$9625$1XjQw)))
                                                              g$ls/false$9623$1XjQw)
                                                            ((case-lambda
                                                               ((g$t$9626$1XjQw)
                                                                ((case-lambda
                                                                   ((g$ls/false$9627$1XjQw)
                                                                    (if (if g$ls/false$9627$1XjQw
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$9628$1XjQw)
                                                                                 (g$id?$8023$1XjQw
                                                                                   g$name$9628$1XjQw)))
                                                                              g$ls/false$9627$1XjQw))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$9629$1XjQw)
                                                                           (g$gen-name$9606$1XjQw
                                                                             g$name$9629$1XjQw)))
                                                                        g$ls/false$9627$1XjQw)
                                                                      ((case-lambda
                                                                         ((g$t$9630$1XjQw)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9631$1XjQw)
                                                                              (if (if g$ls/false$9631$1XjQw
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$9632$1XjQw)
                                                                                           (g$id?$8023$1XjQw
                                                                                             g$name$9632$1XjQw)))
                                                                                        g$ls/false$9631$1XjQw))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$9633$1XjQw)
                                                                                     (g$gen-name$9606$1XjQw
                                                                                       g$name$9633$1XjQw)))
                                                                                  g$ls/false$9631$1XjQw)
                                                                                ((case-lambda
                                                                                   ((g$t$9634$1XjQw)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$9635$1XjQw)
                                                                                        (if g$ls/false$9635$1XjQw
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$9636$1XjQw)
                                                                                               (g$syntax-violation$8412$1XjQw
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$9607$1XjQw)))
                                                                                            g$ls/false$9635$1XjQw)
                                                                                          (g$syntax-violation$8412$1XjQw
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$9634$1XjQw))))
                                                                                     (g$syntax-dispatch$8301$1XjQw
                                                                                       g$t$9634$1XjQw
                                                                                       'any))))
                                                                                 g$t$9630$1XjQw))))
                                                                           (g$syntax-dispatch$8301$1XjQw
                                                                             g$t$9630$1XjQw
                                                                             'any))))
                                                                       g$t$9626$1XjQw))))
                                                                 (g$syntax-dispatch$8301$1XjQw
                                                                   g$t$9626$1XjQw
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$9622$1XjQw))))
                                                       (g$syntax-dispatch$8301$1XjQw
                                                         g$t$9622$1XjQw
                                                         '(#(scheme-id mutable)
                                                           any)))))
                                                   g$t$9616$1XjQw))))
                                             (g$syntax-dispatch$8301$1XjQw
                                               g$t$9616$1XjQw
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$9608$1XjQw))))
                                   (g$syntax-dispatch$8301$1XjQw
                                     g$t$9608$1XjQw
                                     '(#(scheme-id mutable) any any any)))))
                               g$field$9607$1XjQw)))
                           g$fields$9605$1XjQw)))))
                  (g$enumerate$9555$1XjQw
                    (case-lambda
                      ((g$ls$9600$1XjQw)
                       ((letrec ((g$f$9601$1XjQw
                                   (case-lambda
                                     ((g$ls$9602$1XjQw g$i$9603$1XjQw)
                                      (if (null? g$ls$9602$1XjQw)
                                        '()
                                        (cons
                                          g$i$9603$1XjQw
                                          (g$f$9601$1XjQw
                                            (cdr g$ls$9602$1XjQw)
                                            (+ g$i$9603$1XjQw '1))))))))
                          g$f$9601$1XjQw)
                        g$ls$9600$1XjQw
                        '0))))
                  (g$do-define-record$9556$1XjQw
                    (case-lambda
                      ((g$namespec$9580$1XjQw g$clause*$9581$1XjQw)
                       ((case-lambda
                          ((g$foo$9582$1XjQw)
                           ((case-lambda
                              ((g$foo-rtd$9583$1XjQw)
                               ((case-lambda
                                  ((g$foo-rcd$9584$1XjQw)
                                   ((case-lambda
                                      ((g$protocol$9585$1XjQw)
                                       ((case-lambda
                                          ((g$make-foo$9586$1XjQw)
                                           ((case-lambda
                                              ((g$fields$9587$1XjQw)
                                               ((case-lambda
                                                  ((g$idx*$9588$1XjQw)
                                                   ((case-lambda
                                                      ((g$foo-x*$9589$1XjQw)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$9590$1XjQw)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$9591$1XjQw)
                                                               ((case-lambda
                                                                  ((g$foo?$9592$1XjQw)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$9593$1XjQw)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$9594$1XjQw)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$9595$1XjQw)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$8264$1XjQw
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$9583$1XjQw
                                                                                           g$foo-rtd-code$9593$1XjQw)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$9585$1XjQw
                                                                                             g$protocol-code$9595$1XjQw)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$9584$1XjQw
                                                                                               g$foo-rcd-code$9594$1XjQw)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$9582$1XjQw
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$9583$1XjQw)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$9584$1XjQw)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$9592$1XjQw
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$9583$1XjQw))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$9586$1XjQw
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$9584$1XjQw))
                                                                                                   (append
                                                                                                     (g$map$5757$1XjQw
                                                                                                       (case-lambda
                                                                                                         ((g$foo-x$9596$1XjQw
                                                                                                            g$idx$9597$1XjQw)
                                                                                                          (list
                                                                                                            'define
                                                                                                            g$foo-x$9596$1XjQw
                                                                                                            (list
                                                                                                              'record-accessor
                                                                                                              g$foo-rtd$9583$1XjQw
                                                                                                              g$idx$9597$1XjQw))))
                                                                                                       g$foo-x*$9589$1XjQw
                                                                                                       g$idx*$9588$1XjQw)
                                                                                                     (g$map$5757$1XjQw
                                                                                                       (case-lambda
                                                                                                         ((g$set-foo-x!$9598$1XjQw
                                                                                                            g$idx$9599$1XjQw)
                                                                                                          (list
                                                                                                            'define
                                                                                                            g$set-foo-x!$9598$1XjQw
                                                                                                            (list
                                                                                                              'record-mutator
                                                                                                              g$foo-rtd$9583$1XjQw
                                                                                                              g$idx$9599$1XjQw))))
                                                                                                       g$set-foo-x!*$9590$1XjQw
                                                                                                       g$set-foo-idx*$9591$1XjQw)))))))))))))))
                                                                            (g$get-protocol-code$9550$1XjQw
                                                                              g$clause*$9581$1XjQw))))
                                                                        (g$foo-rcd-code$9549$1XjQw
                                                                          g$clause*$9581$1XjQw
                                                                          g$foo-rtd$9583$1XjQw
                                                                          g$protocol$9585$1XjQw
                                                                          (g$parent-rcd-code$9548$1XjQw
                                                                            g$clause*$9581$1XjQw)))))
                                                                    (g$foo-rtd-code$9546$1XjQw
                                                                      g$foo$9582$1XjQw
                                                                      g$clause*$9581$1XjQw
                                                                      (g$parent-rtd-code$9547$1XjQw
                                                                        g$clause*$9581$1XjQw)))))
                                                                (g$get-record-predicate-name$9544$1XjQw
                                                                  g$namespec$9580$1XjQw))))
                                                            (g$get-mutator-indices$9552$1XjQw
                                                              g$fields$9587$1XjQw))))
                                                        (g$get-mutators$9553$1XjQw
                                                          g$foo$9582$1XjQw
                                                          g$fields$9587$1XjQw))))
                                                    (g$get-accessors$9554$1XjQw
                                                      g$foo$9582$1XjQw
                                                      g$fields$9587$1XjQw))))
                                                (g$enumerate$9555$1XjQw
                                                  g$fields$9587$1XjQw))))
                                            (g$get-fields$9551$1XjQw
                                              g$clause*$9581$1XjQw))))
                                        (g$get-record-constructor-name$9543$1XjQw
                                          g$namespec$9580$1XjQw))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$9542$1XjQw g$namespec$9580$1XjQw)))))
                  (g$verify-clauses$9557$1XjQw
                    (case-lambda
                      ((g$x$9562$1XjQw g$cls*$9563$1XjQw)
                       (letrec* ((g$valid-kwds$9564$1XjQw
                                   (g$map$5757$1XjQw
                                     g$bless$8264$1XjQw
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$9565$1XjQw
                                   (case-lambda
                                     ((g$x$9577$1XjQw g$ls$9578$1XjQw)
                                      (if (pair? g$ls$9578$1XjQw)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$9579$1XjQw)
                                              (if g$t$9579$1XjQw
                                                g$t$9579$1XjQw
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$9565$1XjQw
                                                    g$x$9577$1XjQw
                                                    (cdr g$ls$9578$1XjQw))))))
                                           (g$free-id=?$8027$1XjQw
                                             g$x$9577$1XjQw
                                             (car g$ls$9578$1XjQw))))
                                        '#f)))))
                         ((letrec ((g$f$9566$1XjQw
                                     (case-lambda
                                       ((g$cls*$9567$1XjQw g$seen*$9568$1XjQw)
                                        (if (not (null? g$cls*$9567$1XjQw))
                                          ((case-lambda
                                             ((g$t$9569$1XjQw)
                                              ((case-lambda
                                                 ((g$ls/false$9570$1XjQw)
                                                  (if g$ls/false$9570$1XjQw
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$9571$1XjQw
                                                           g$rest$9572$1XjQw)
                                                         (if ((case-lambda
                                                                ((g$t$9573$1XjQw)
                                                                 (if g$t$9573$1XjQw
                                                                   g$t$9573$1XjQw
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$9565$1XjQw
                                                                            g$kwd$9571$1XjQw
                                                                            g$valid-kwds$9564$1XjQw))))))
                                                              (not (g$id?$8023$1XjQw
                                                                     g$kwd$9571$1XjQw)))
                                                           (g$syntax-violation$8412$1XjQw
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$9571$1XjQw)
                                                           (if (g$bound-id-member?$8030$1XjQw
                                                                 g$kwd$9571$1XjQw
                                                                 g$seen*$9568$1XjQw)
                                                             (g$syntax-violation$8412$1XjQw
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$9562$1XjQw
                                                               g$kwd$9571$1XjQw)
                                                             (g$f$9566$1XjQw
                                                               (cdr g$cls*$9567$1XjQw)
                                                               (cons
                                                                 g$kwd$9571$1XjQw
                                                                 g$seen*$9568$1XjQw))))))
                                                      g$ls/false$9570$1XjQw)
                                                    ((case-lambda
                                                       ((g$t$9574$1XjQw)
                                                        ((case-lambda
                                                           ((g$ls/false$9575$1XjQw)
                                                            (if g$ls/false$9575$1XjQw
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$9576$1XjQw)
                                                                   (g$syntax-violation$8412$1XjQw
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$9576$1XjQw)))
                                                                g$ls/false$9575$1XjQw)
                                                              (g$syntax-violation$8412$1XjQw
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9574$1XjQw))))
                                                         (g$syntax-dispatch$8301$1XjQw
                                                           g$t$9574$1XjQw
                                                           'any))))
                                                     g$t$9569$1XjQw))))
                                               (g$syntax-dispatch$8301$1XjQw
                                                 g$t$9569$1XjQw
                                                 '(any . any)))))
                                           (car g$cls*$9567$1XjQw))
                                          (void))))))
                            g$f$9566$1XjQw)
                          g$cls*$9563$1XjQw
                          '()))))))
          ((case-lambda
             ((g$t$9558$1XjQw)
              ((case-lambda
                 ((g$ls/false$9559$1XjQw)
                  (if g$ls/false$9559$1XjQw
                    (apply
                      (case-lambda
                        ((g$namespec$9560$1XjQw g$clause*$9561$1XjQw)
                         (begin
                           (g$verify-clauses$9557$1XjQw
                             g$x$9540$1XjQw
                             g$clause*$9561$1XjQw)
                           (g$do-define-record$9556$1XjQw
                             g$namespec$9560$1XjQw
                             g$clause*$9561$1XjQw))))
                      g$ls/false$9559$1XjQw)
                    (g$syntax-violation$8412$1XjQw
                      '#f
                      '"invalid syntax"
                      g$t$9558$1XjQw))))
               (g$syntax-dispatch$8301$1XjQw
                 g$t$9558$1XjQw
                 '(_ any . each-any)))))
           g$x$9540$1XjQw)))))
   (g$define-condition-type-macro$8296$1XjQw
     g$define-condition-type-macro$11787$1XjQw
     (case-lambda
       ((g$x$9796$1XjQw)
        (letrec* ((g$mkname$9797$1XjQw
                    (case-lambda
                      ((g$name$9820$1XjQw g$suffix$9821$1XjQw)
                       (g$datum->syntax$8414$1XjQw
                         g$name$9820$1XjQw
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$8415$1XjQw g$name$9820$1XjQw))
                             g$suffix$9821$1XjQw)))))))
          ((case-lambda
             ((g$t$9798$1XjQw)
              ((case-lambda
                 ((g$ls/false$9799$1XjQw)
                  (if (if g$ls/false$9799$1XjQw
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9800$1XjQw
                                 g$name$9801$1XjQw
                                 g$super$9802$1XjQw
                                 g$constructor$9803$1XjQw
                                 g$predicate$9804$1XjQw
                                 g$field*$9805$1XjQw
                                 g$accessor*$9806$1XjQw)
                               (if (g$id?$8023$1XjQw g$name$9801$1XjQw)
                                 (if (g$id?$8023$1XjQw g$super$9802$1XjQw)
                                   (if (g$id?$8023$1XjQw
                                         g$constructor$9803$1XjQw)
                                     (if (g$id?$8023$1XjQw
                                           g$predicate$9804$1XjQw)
                                       (if (g$for-all$5755$1XjQw
                                             g$id?$8023$1XjQw
                                             g$field*$9805$1XjQw)
                                         (begin
                                           '#f
                                           (g$for-all$5755$1XjQw
                                             g$id?$8023$1XjQw
                                             g$accessor*$9806$1XjQw))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9799$1XjQw))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9807$1XjQw
                           g$name$9808$1XjQw
                           g$super$9809$1XjQw
                           g$constructor$9810$1XjQw
                           g$predicate$9811$1XjQw
                           g$field*$9812$1XjQw
                           g$accessor*$9813$1XjQw)
                         ((case-lambda
                            ((g$aux-accessor*$9814$1XjQw)
                             (g$bless$8264$1XjQw
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9808$1XjQw
                                         g$constructor$9810$1XjQw
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9809$1XjQw)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$5757$1XjQw
                                               (case-lambda
                                                 ((g$field$9815$1XjQw
                                                    g$aux$9816$1XjQw)
                                                  (list
                                                    'immutable
                                                    g$field$9815$1XjQw
                                                    g$aux$9816$1XjQw)))
                                               g$field*$9812$1XjQw
                                               g$aux-accessor*$9814$1XjQw))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9811$1XjQw
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9808$1XjQw)))
                                     (g$map$5757$1XjQw
                                       (case-lambda
                                         ((g$accessor$9817$1XjQw
                                            g$aux$9818$1XjQw)
                                          (list
                                            'define
                                            g$accessor$9817$1XjQw
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$9808$1XjQw)
                                              g$aux$9818$1XjQw))))
                                       g$accessor*$9813$1XjQw
                                       g$aux-accessor*$9814$1XjQw)))))))
                          (g$map$5757$1XjQw
                            (case-lambda ((g$x$9819$1XjQw) (gensym)))
                            g$accessor*$9813$1XjQw))))
                      g$ls/false$9799$1XjQw)
                    (g$syntax-violation$8412$1XjQw
                      '#f
                      '"invalid syntax"
                      g$t$9798$1XjQw))))
               (g$syntax-dispatch$8301$1XjQw
                 g$t$9798$1XjQw
                 '(any any any any any . #(each (any any)))))))
           g$x$9796$1XjQw)))))
   (g$incorrect-usage-macro$8297$1XjQw
     g$incorrect-usage-macro$11788$1XjQw
     (case-lambda
       ((g$e$9822$1XjQw)
        (g$syntax-violation$8412$1XjQw
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9822$1XjQw))))
   (g$parameterize-macro$8298$1XjQw
     g$parameterize-macro$11789$1XjQw
     (case-lambda
       ((g$e$9823$1XjQw)
        ((case-lambda
           ((g$t$9824$1XjQw)
            ((case-lambda
               ((g$ls/false$9825$1XjQw)
                (if g$ls/false$9825$1XjQw
                  (apply
                    (case-lambda
                      ((g$b$9826$1XjQw g$b*$9827$1XjQw)
                       (g$bless$8264$1XjQw
                         (cons
                           'let
                           (cons '() (cons g$b$9826$1XjQw g$b*$9827$1XjQw))))))
                    g$ls/false$9825$1XjQw)
                  ((case-lambda
                     ((g$t$9828$1XjQw)
                      ((case-lambda
                         ((g$ls/false$9829$1XjQw)
                          (if g$ls/false$9829$1XjQw
                            (apply
                              (case-lambda
                                ((g$olhs*$9830$1XjQw
                                   g$orhs*$9831$1XjQw
                                   g$b$9832$1XjQw
                                   g$b*$9833$1XjQw)
                                 ((case-lambda
                                    ((g$lhs*$9834$1XjQw g$rhs*$9835$1XjQw)
                                     (g$bless$8264$1XjQw
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$9834$1XjQw
                                             g$rhs*$9835$1XjQw)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$5757$1XjQw
                                                       (case-lambda
                                                         ((g$lhs$9836$1XjQw
                                                            g$rhs$9837$1XjQw)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$9836$1XjQw)))
                                                            (list
                                                              g$lhs$9836$1XjQw
                                                              g$rhs$9837$1XjQw)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$9837$1XjQw
                                                                '(t))))))
                                                       g$lhs*$9834$1XjQw
                                                       g$rhs*$9835$1XjQw)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$9832$1XjQw
                                                         g$b*$9833$1XjQw)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$9830$1XjQw
                                           g$orhs*$9831$1XjQw)))))
                                  (g$generate-temporaries$8402$1XjQw
                                    g$olhs*$9830$1XjQw)
                                  (g$generate-temporaries$8402$1XjQw
                                    g$orhs*$9831$1XjQw))))
                              g$ls/false$9829$1XjQw)
                            (g$syntax-violation$8412$1XjQw
                              '#f
                              '"invalid syntax"
                              g$t$9828$1XjQw))))
                       (g$syntax-dispatch$8301$1XjQw
                         g$t$9828$1XjQw
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9824$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw
               g$t$9824$1XjQw
               '(_ () any . each-any)))))
         g$e$9823$1XjQw))))
   (g$foreign-call-transformer$8299$1XjQw
     g$foreign-call-transformer$11790$1XjQw
     (case-lambda
       ((g$e$9838$1XjQw g$r$9839$1XjQw g$mr$9840$1XjQw)
        ((case-lambda
           ((g$t$9841$1XjQw)
            ((case-lambda
               ((g$ls/false$9842$1XjQw)
                (if g$ls/false$9842$1XjQw
                  (apply
                    (case-lambda
                      ((g$name$9843$1XjQw g$arg*$9844$1XjQw)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$8319$1XjQw
                             g$name$9843$1XjQw
                             g$r$9839$1XjQw
                             g$mr$9840$1XjQw)
                           (g$chi-expr*$8317$1XjQw
                             g$arg*$9844$1XjQw
                             g$r$9839$1XjQw
                             g$mr$9840$1XjQw)))))
                    g$ls/false$9842$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$9841$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw
               g$t$9841$1XjQw
               '(_ any . each-any)))))
         g$e$9838$1XjQw))))
   (g$convert-pattern$8300$1XjQw
     g$convert-pattern$11791$1XjQw
     (case-lambda
       ((g$pattern$9845$1XjQw g$keys$9846$1XjQw)
        (letrec* ((g$cvt*$9847$1XjQw
                    (case-lambda
                      ((g$p*$9927$1XjQw g$n$9928$1XjQw g$ids$9929$1XjQw)
                       (if (null? g$p*$9927$1XjQw)
                         (values '() g$ids$9929$1XjQw)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9847$1XjQw
                                (cdr g$p*$9927$1XjQw)
                                g$n$9928$1XjQw
                                g$ids$9929$1XjQw)))
                           (case-lambda
                             ((g$y$9932$1XjQw g$ids$9933$1XjQw)
                              ((case-lambda
                                 ((g$ids$9934$1XjQw g$y$9935$1XjQw)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9848$1XjQw
                                         (car g$p*$9927$1XjQw)
                                         g$n$9928$1XjQw
                                         g$ids$9934$1XjQw)))
                                    (case-lambda
                                      ((g$x$9938$1XjQw g$ids$9939$1XjQw)
                                       ((case-lambda
                                          ((g$ids$9940$1XjQw g$x$9941$1XjQw)
                                           (values
                                             (cons
                                               g$x$9941$1XjQw
                                               g$y$9935$1XjQw)
                                             g$ids$9940$1XjQw)))
                                        g$ids$9939$1XjQw
                                        g$x$9938$1XjQw))))))
                               g$ids$9933$1XjQw
                               g$y$9932$1XjQw))))))))
                  (g$cvt$9848$1XjQw
                    (case-lambda
                      ((g$p$9849$1XjQw g$n$9850$1XjQw g$ids$9851$1XjQw)
                       ((case-lambda
                          ((g$t$9852$1XjQw)
                           ((case-lambda
                              ((g$ls/false$9853$1XjQw)
                               (if (if g$ls/false$9853$1XjQw
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9854$1XjQw)
                                            (g$id?$8023$1XjQw g$id$9854$1XjQw)))
                                         g$ls/false$9853$1XjQw))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9855$1XjQw)
                                      (if (g$bound-id-member?$8030$1XjQw
                                            g$p$9849$1XjQw
                                            g$keys$9846$1XjQw)
                                        (values
                                          (vector 'free-id g$p$9849$1XjQw)
                                          g$ids$9851$1XjQw)
                                        (if (g$free-id=?$8027$1XjQw
                                              g$p$9849$1XjQw
                                              (g$scheme-stx$8244$1XjQw '_))
                                          (values '_ g$ids$9851$1XjQw)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9849$1XjQw
                                                g$n$9850$1XjQw)
                                              g$ids$9851$1XjQw))))))
                                   g$ls/false$9853$1XjQw)
                                 ((case-lambda
                                    ((g$t$9856$1XjQw)
                                     ((case-lambda
                                        ((g$ls/false$9857$1XjQw)
                                         (if (if g$ls/false$9857$1XjQw
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9858$1XjQw
                                                        g$dots$9859$1XjQw)
                                                      (g$ellipsis?$8302$1XjQw
                                                        g$dots$9859$1XjQw)))
                                                   g$ls/false$9857$1XjQw))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9860$1XjQw
                                                  g$dots$9861$1XjQw)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9848$1XjQw
                                                       g$p$9860$1XjQw
                                                       (+ g$n$9850$1XjQw '1)
                                                       g$ids$9851$1XjQw)))
                                                  (case-lambda
                                                    ((g$p$9864$1XjQw
                                                       g$ids$9865$1XjQw)
                                                     ((case-lambda
                                                        ((g$ids$9866$1XjQw
                                                           g$p$9867$1XjQw)
                                                         (values
                                                           (if (eq? g$p$9867$1XjQw
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9867$1XjQw))
                                                           g$ids$9866$1XjQw)))
                                                      g$ids$9865$1XjQw
                                                      g$p$9864$1XjQw))))))
                                             g$ls/false$9857$1XjQw)
                                           ((case-lambda
                                              ((g$t$9868$1XjQw)
                                               ((case-lambda
                                                  ((g$ls/false$9869$1XjQw)
                                                   (if (if g$ls/false$9869$1XjQw
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9870$1XjQw
                                                                  g$dots$9871$1XjQw
                                                                  g$ys$9872$1XjQw
                                                                  g$z$9873$1XjQw)
                                                                (g$ellipsis?$8302$1XjQw
                                                                  g$dots$9871$1XjQw)))
                                                             g$ls/false$9869$1XjQw))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9874$1XjQw
                                                            g$dots$9875$1XjQw
                                                            g$ys$9876$1XjQw
                                                            g$z$9877$1XjQw)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9848$1XjQw
                                                                 g$z$9877$1XjQw
                                                                 g$n$9850$1XjQw
                                                                 g$ids$9851$1XjQw)))
                                                            (case-lambda
                                                              ((g$z$9880$1XjQw
                                                                 g$ids$9881$1XjQw)
                                                               ((case-lambda
                                                                  ((g$ids$9882$1XjQw
                                                                     g$z$9883$1XjQw)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9847$1XjQw
                                                                          g$ys$9876$1XjQw
                                                                          g$n$9850$1XjQw
                                                                          g$ids$9882$1XjQw)))
                                                                     (case-lambda
                                                                       ((g$ys$9886$1XjQw
                                                                          g$ids$9887$1XjQw)
                                                                        ((case-lambda
                                                                           ((g$ids$9888$1XjQw
                                                                              g$ys$9889$1XjQw)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9848$1XjQw
                                                                                   g$x$9874$1XjQw
                                                                                   (+ g$n$9850$1XjQw
                                                                                      '1)
                                                                                   g$ids$9888$1XjQw)))
                                                                              (case-lambda
                                                                                ((g$x$9892$1XjQw
                                                                                   g$ids$9893$1XjQw)
                                                                                 ((case-lambda
                                                                                    ((g$ids$9894$1XjQw
                                                                                       g$x$9895$1XjQw)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$9895$1XjQw
                                                                                         (reverse
                                                                                           g$ys$9889$1XjQw)
                                                                                         g$z$9883$1XjQw)
                                                                                       g$ids$9894$1XjQw)))
                                                                                  g$ids$9893$1XjQw
                                                                                  g$x$9892$1XjQw))))))
                                                                         g$ids$9887$1XjQw
                                                                         g$ys$9886$1XjQw))))))
                                                                g$ids$9881$1XjQw
                                                                g$z$9880$1XjQw))))))
                                                       g$ls/false$9869$1XjQw)
                                                     ((case-lambda
                                                        ((g$t$9896$1XjQw)
                                                         ((case-lambda
                                                            ((g$ls/false$9897$1XjQw)
                                                             (if g$ls/false$9897$1XjQw
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$9898$1XjQw
                                                                      g$y$9899$1XjQw)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9848$1XjQw
                                                                           g$y$9899$1XjQw
                                                                           g$n$9850$1XjQw
                                                                           g$ids$9851$1XjQw)))
                                                                      (case-lambda
                                                                        ((g$y$9902$1XjQw
                                                                           g$ids$9903$1XjQw)
                                                                         ((case-lambda
                                                                            ((g$ids$9904$1XjQw
                                                                               g$y$9905$1XjQw)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9848$1XjQw
                                                                                    g$x$9898$1XjQw
                                                                                    g$n$9850$1XjQw
                                                                                    g$ids$9904$1XjQw)))
                                                                               (case-lambda
                                                                                 ((g$x$9908$1XjQw
                                                                                    g$ids$9909$1XjQw)
                                                                                  ((case-lambda
                                                                                     ((g$ids$9910$1XjQw
                                                                                        g$x$9911$1XjQw)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$9911$1XjQw
                                                                                          g$y$9905$1XjQw)
                                                                                        g$ids$9910$1XjQw)))
                                                                                   g$ids$9909$1XjQw
                                                                                   g$x$9908$1XjQw))))))
                                                                          g$ids$9903$1XjQw
                                                                          g$y$9902$1XjQw))))))
                                                                 g$ls/false$9897$1XjQw)
                                                               ((case-lambda
                                                                  ((g$t$9912$1XjQw)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9913$1XjQw)
                                                                       (if g$ls/false$9913$1XjQw
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9851$1XjQw)))
                                                                           g$ls/false$9913$1XjQw)
                                                                         ((case-lambda
                                                                            ((g$t$9914$1XjQw)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9915$1XjQw)
                                                                                 (if (if g$ls/false$9915$1XjQw
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$9916$1XjQw)
                                                                                              (not (g$stx?$7995$1XjQw
                                                                                                     g$p$9916$1XjQw))))
                                                                                           g$ls/false$9915$1XjQw))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$9917$1XjQw)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9848$1XjQw
                                                                                               g$p$9917$1XjQw
                                                                                               g$n$9850$1XjQw
                                                                                               g$ids$9851$1XjQw)))
                                                                                          (case-lambda
                                                                                            ((g$p$9920$1XjQw
                                                                                               g$ids$9921$1XjQw)
                                                                                             ((case-lambda
                                                                                                ((g$ids$9922$1XjQw
                                                                                                   g$p$9923$1XjQw)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$9923$1XjQw)
                                                                                                   g$ids$9922$1XjQw)))
                                                                                              g$ids$9921$1XjQw
                                                                                              g$p$9920$1XjQw))))))
                                                                                     g$ls/false$9915$1XjQw)
                                                                                   ((case-lambda
                                                                                      ((g$t$9924$1XjQw)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9925$1XjQw)
                                                                                           (if g$ls/false$9925$1XjQw
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$9926$1XjQw)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$8034$1XjQw
                                                                                                        g$datum$9926$1XjQw))
                                                                                                    g$ids$9851$1XjQw)))
                                                                                               g$ls/false$9925$1XjQw)
                                                                                             (g$syntax-violation$8412$1XjQw
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9924$1XjQw))))
                                                                                        (g$syntax-dispatch$8301$1XjQw
                                                                                          g$t$9924$1XjQw
                                                                                          'any))))
                                                                                    g$t$9914$1XjQw))))
                                                                              (g$syntax-dispatch$8301$1XjQw
                                                                                g$t$9914$1XjQw
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$9912$1XjQw))))
                                                                    (g$syntax-dispatch$8301$1XjQw
                                                                      g$t$9912$1XjQw
                                                                      '()))))
                                                                g$t$9896$1XjQw))))
                                                          (g$syntax-dispatch$8301$1XjQw
                                                            g$t$9896$1XjQw
                                                            '(any . any)))))
                                                      g$t$9868$1XjQw))))
                                                (g$syntax-dispatch$8301$1XjQw
                                                  g$t$9868$1XjQw
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9856$1XjQw))))
                                      (g$syntax-dispatch$8301$1XjQw
                                        g$t$9856$1XjQw
                                        '(any any)))))
                                  g$t$9852$1XjQw))))
                            (g$syntax-dispatch$8301$1XjQw
                              g$t$9852$1XjQw
                              'any))))
                        g$p$9849$1XjQw)))))
          (g$cvt$9848$1XjQw g$pattern$9845$1XjQw '0 '())))))
   (g$syntax-dispatch$8301$1XjQw
     g$syntax-dispatch$11792$1XjQw
     ((case-lambda
        (()
         (letrec* ((g$stx^$9942$1XjQw
                     (case-lambda
                       ((g$e$10052$1XjQw
                          g$m*$10053$1XjQw
                          g$s*$10054$1XjQw
                          g$ae*$10055$1XjQw)
                        (if (if (null? g$m*$10053$1XjQw)
                              (if (null? g$s*$10054$1XjQw)
                                (begin '#f (null? g$ae*$10055$1XjQw))
                                '#f)
                              '#f)
                          g$e$10052$1XjQw
                          (g$mkstx$8011$1XjQw
                            g$e$10052$1XjQw
                            g$m*$10053$1XjQw
                            g$s*$10054$1XjQw
                            g$ae*$10055$1XjQw)))))
                   (g$match-each$9943$1XjQw
                     (case-lambda
                       ((g$e$10036$1XjQw
                          g$p$10037$1XjQw
                          g$m*$10038$1XjQw
                          g$s*$10039$1XjQw
                          g$ae*$10040$1XjQw)
                        (if (pair? g$e$10036$1XjQw)
                          ((case-lambda
                             ((g$first$10041$1XjQw)
                              (if g$first$10041$1XjQw
                                (begin
                                  '#f
                                  ((case-lambda
                                     ((g$rest$10042$1XjQw)
                                      (if g$rest$10042$1XjQw
                                        (begin
                                          '#f
                                          (cons
                                            g$first$10041$1XjQw
                                            g$rest$10042$1XjQw))
                                        '#f)))
                                   (g$match-each$9943$1XjQw
                                     (cdr g$e$10036$1XjQw)
                                     g$p$10037$1XjQw
                                     g$m*$10038$1XjQw
                                     g$s*$10039$1XjQw
                                     g$ae*$10040$1XjQw)))
                                '#f)))
                           (g$match$9949$1XjQw
                             (car g$e$10036$1XjQw)
                             g$p$10037$1XjQw
                             g$m*$10038$1XjQw
                             g$s*$10039$1XjQw
                             g$ae*$10040$1XjQw
                             '()))
                          (if (null? g$e$10036$1XjQw)
                            '()
                            (if (g$stx?$7995$1XjQw g$e$10036$1XjQw)
                              (if (not (g$top-marked?$7961$1XjQw
                                         g$m*$10038$1XjQw))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$8010$1XjQw
                                         g$m*$10038$1XjQw
                                         g$s*$10039$1XjQw
                                         g$ae*$10040$1XjQw
                                         g$e$10036$1XjQw)))
                                    (case-lambda
                                      ((g$m*$10046$1XjQw
                                         g$s*$10047$1XjQw
                                         g$ae*$10048$1XjQw)
                                       ((case-lambda
                                          ((g$ae*$10049$1XjQw
                                             g$s*$10050$1XjQw
                                             g$m*$10051$1XjQw)
                                           (g$match-each$9943$1XjQw
                                             (g$stx-expr$7997$1XjQw
                                               g$e$10036$1XjQw)
                                             g$p$10037$1XjQw
                                             g$m*$10051$1XjQw
                                             g$s*$10050$1XjQw
                                             g$ae*$10049$1XjQw)))
                                        g$ae*$10048$1XjQw
                                        g$s*$10047$1XjQw
                                        g$m*$10046$1XjQw)))))
                                '#f)
                              (if (annotation? g$e$10036$1XjQw)
                                (g$match-each$9943$1XjQw
                                  (annotation-expression g$e$10036$1XjQw)
                                  g$p$10037$1XjQw
                                  g$m*$10038$1XjQw
                                  g$s*$10039$1XjQw
                                  g$ae*$10040$1XjQw)
                                '#f)))))))
                   (g$match-each+$9944$1XjQw
                     (case-lambda
                       ((g$e$10004$1XjQw
                          g$x-pat$10005$1XjQw
                          g$y-pat$10006$1XjQw
                          g$z-pat$10007$1XjQw
                          g$m*$10008$1XjQw
                          g$s*$10009$1XjQw
                          g$ae*$10010$1XjQw
                          g$r$10011$1XjQw)
                        ((letrec ((g$f$10012$1XjQw
                                    (case-lambda
                                      ((g$e$10013$1XjQw
                                         g$m*$10014$1XjQw
                                         g$s*$10015$1XjQw
                                         g$ae*$10016$1XjQw)
                                       (if (pair? g$e$10013$1XjQw)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$f$10012$1XjQw
                                                (cdr g$e$10013$1XjQw)
                                                g$m*$10014$1XjQw
                                                g$s*$10015$1XjQw
                                                g$ae*$10016$1XjQw)))
                                           (case-lambda
                                             ((g$xr*$10020$1XjQw
                                                g$y-pat$10021$1XjQw
                                                g$r$10022$1XjQw)
                                              ((case-lambda
                                                 ((g$r$10023$1XjQw
                                                    g$y-pat$10024$1XjQw
                                                    g$xr*$10025$1XjQw)
                                                  (if g$r$10023$1XjQw
                                                    (if (null?
                                                          g$y-pat$10024$1XjQw)
                                                      ((case-lambda
                                                         ((g$xr$10026$1XjQw)
                                                          (if g$xr$10026$1XjQw
                                                            (values
                                                              (cons
                                                                g$xr$10026$1XjQw
                                                                g$xr*$10025$1XjQw)
                                                              g$y-pat$10024$1XjQw
                                                              g$r$10023$1XjQw)
                                                            (values
                                                              '#f
                                                              '#f
                                                              '#f))))
                                                       (g$match$9949$1XjQw
                                                         (car g$e$10013$1XjQw)
                                                         g$x-pat$10005$1XjQw
                                                         g$m*$10014$1XjQw
                                                         g$s*$10015$1XjQw
                                                         g$ae*$10016$1XjQw
                                                         '()))
                                                      (values
                                                        '()
                                                        (cdr g$y-pat$10024$1XjQw)
                                                        (g$match$9949$1XjQw
                                                          (car g$e$10013$1XjQw)
                                                          (car g$y-pat$10024$1XjQw)
                                                          g$m*$10014$1XjQw
                                                          g$s*$10015$1XjQw
                                                          g$ae*$10016$1XjQw
                                                          g$r$10023$1XjQw)))
                                                    (values '#f '#f '#f))))
                                               g$r$10022$1XjQw
                                               g$y-pat$10021$1XjQw
                                               g$xr*$10020$1XjQw))))
                                         (if (g$stx?$7995$1XjQw g$e$10013$1XjQw)
                                           (if (g$top-marked?$7961$1XjQw
                                                 g$m*$10014$1XjQw)
                                             (values
                                               '()
                                               g$y-pat$10006$1XjQw
                                               (g$match$9949$1XjQw
                                                 g$e$10013$1XjQw
                                                 g$z-pat$10007$1XjQw
                                                 g$m*$10014$1XjQw
                                                 g$s*$10015$1XjQw
                                                 g$ae*$10016$1XjQw
                                                 g$r$10011$1XjQw))
                                             (call-with-values
                                               (case-lambda
                                                 (()
                                                  (g$join-wraps$8010$1XjQw
                                                    g$m*$10014$1XjQw
                                                    g$s*$10015$1XjQw
                                                    g$ae*$10016$1XjQw
                                                    g$e$10013$1XjQw)))
                                               (case-lambda
                                                 ((g$m*$10030$1XjQw
                                                    g$s*$10031$1XjQw
                                                    g$ae*$10032$1XjQw)
                                                  ((case-lambda
                                                     ((g$ae*$10033$1XjQw
                                                        g$s*$10034$1XjQw
                                                        g$m*$10035$1XjQw)
                                                      (g$f$10012$1XjQw
                                                        (g$stx-expr$7997$1XjQw
                                                          g$e$10013$1XjQw)
                                                        g$m*$10035$1XjQw
                                                        g$s*$10034$1XjQw
                                                        g$ae*$10033$1XjQw)))
                                                   g$ae*$10032$1XjQw
                                                   g$s*$10031$1XjQw
                                                   g$m*$10030$1XjQw)))))
                                           (if (annotation? g$e$10013$1XjQw)
                                             (g$f$10012$1XjQw
                                               (annotation-expression
                                                 g$e$10013$1XjQw)
                                               g$m*$10014$1XjQw
                                               g$s*$10015$1XjQw
                                               g$ae*$10016$1XjQw)
                                             (values
                                               '()
                                               g$y-pat$10006$1XjQw
                                               (g$match$9949$1XjQw
                                                 g$e$10013$1XjQw
                                                 g$z-pat$10007$1XjQw
                                                 g$m*$10014$1XjQw
                                                 g$s*$10015$1XjQw
                                                 g$ae*$10016$1XjQw
                                                 g$r$10011$1XjQw)))))))))
                           g$f$10012$1XjQw)
                         g$e$10004$1XjQw
                         g$m*$10008$1XjQw
                         g$s*$10009$1XjQw
                         g$ae*$10010$1XjQw))))
                   (g$match-each-any$9945$1XjQw
                     (case-lambda
                       ((g$e$9990$1XjQw
                          g$m*$9991$1XjQw
                          g$s*$9992$1XjQw
                          g$ae*$9993$1XjQw)
                        (if (pair? g$e$9990$1XjQw)
                          ((case-lambda
                             ((g$l$9994$1XjQw)
                              (if g$l$9994$1XjQw
                                (begin
                                  '#f
                                  (cons
                                    (g$stx^$9942$1XjQw
                                      (car g$e$9990$1XjQw)
                                      g$m*$9991$1XjQw
                                      g$s*$9992$1XjQw
                                      g$ae*$9993$1XjQw)
                                    g$l$9994$1XjQw))
                                '#f)))
                           (g$match-each-any$9945$1XjQw
                             (cdr g$e$9990$1XjQw)
                             g$m*$9991$1XjQw
                             g$s*$9992$1XjQw
                             g$ae*$9993$1XjQw))
                          (if (null? g$e$9990$1XjQw)
                            '()
                            (if (g$stx?$7995$1XjQw g$e$9990$1XjQw)
                              (if (not (g$top-marked?$7961$1XjQw
                                         g$m*$9991$1XjQw))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$8010$1XjQw
                                         g$m*$9991$1XjQw
                                         g$s*$9992$1XjQw
                                         g$ae*$9993$1XjQw
                                         g$e$9990$1XjQw)))
                                    (case-lambda
                                      ((g$m*$9998$1XjQw
                                         g$s*$9999$1XjQw
                                         g$ae*$10000$1XjQw)
                                       ((case-lambda
                                          ((g$ae*$10001$1XjQw
                                             g$s*$10002$1XjQw
                                             g$m*$10003$1XjQw)
                                           (g$match-each-any$9945$1XjQw
                                             (g$stx-expr$7997$1XjQw
                                               g$e$9990$1XjQw)
                                             g$m*$10003$1XjQw
                                             g$s*$10002$1XjQw
                                             g$ae*$10001$1XjQw)))
                                        g$ae*$10000$1XjQw
                                        g$s*$9999$1XjQw
                                        g$m*$9998$1XjQw)))))
                                '#f)
                              (if (annotation? g$e$9990$1XjQw)
                                (g$match-each-any$9945$1XjQw
                                  (annotation-expression g$e$9990$1XjQw)
                                  g$m*$9991$1XjQw
                                  g$s*$9992$1XjQw
                                  g$ae*$9993$1XjQw)
                                '#f)))))))
                   (g$match-empty$9946$1XjQw
                     (case-lambda
                       ((g$p$9987$1XjQw g$r$9988$1XjQw)
                        (if (null? g$p$9987$1XjQw)
                          g$r$9988$1XjQw
                          (if (eq? g$p$9987$1XjQw '_)
                            g$r$9988$1XjQw
                            (if (eq? g$p$9987$1XjQw 'any)
                              (cons '() g$r$9988$1XjQw)
                              (if (pair? g$p$9987$1XjQw)
                                (g$match-empty$9946$1XjQw
                                  (car g$p$9987$1XjQw)
                                  (g$match-empty$9946$1XjQw
                                    (cdr g$p$9987$1XjQw)
                                    g$r$9988$1XjQw))
                                (if (eq? g$p$9987$1XjQw 'each-any)
                                  (cons '() g$r$9988$1XjQw)
                                  ((case-lambda
                                     ((g$t$9989$1XjQw)
                                      (if (g$memv$5750$1XjQw
                                            g$t$9989$1XjQw
                                            '(each))
                                        (g$match-empty$9946$1XjQw
                                          (vector-ref g$p$9987$1XjQw '1)
                                          g$r$9988$1XjQw)
                                        (if (g$memv$5750$1XjQw
                                              g$t$9989$1XjQw
                                              '(each+))
                                          (g$match-empty$9946$1XjQw
                                            (vector-ref g$p$9987$1XjQw '1)
                                            (g$match-empty$9946$1XjQw
                                              (reverse
                                                (vector-ref g$p$9987$1XjQw '2))
                                              (g$match-empty$9946$1XjQw
                                                (vector-ref g$p$9987$1XjQw '3)
                                                g$r$9988$1XjQw)))
                                          (if (g$memv$5750$1XjQw
                                                g$t$9989$1XjQw
                                                '(free-id atom))
                                            g$r$9988$1XjQw
                                            (if (g$memv$5750$1XjQw
                                                  g$t$9989$1XjQw
                                                  '(scheme-id atom))
                                              g$r$9988$1XjQw
                                              (if (g$memv$5750$1XjQw
                                                    g$t$9989$1XjQw
                                                    '(vector))
                                                (g$match-empty$9946$1XjQw
                                                  (vector-ref g$p$9987$1XjQw '1)
                                                  g$r$9988$1XjQw)
                                                (assertion-violation
                                                  'syntax-dispatch
                                                  '"invalid pattern"
                                                  g$p$9987$1XjQw))))))))
                                   (vector-ref g$p$9987$1XjQw '0))))))))))
                   (g$combine$9947$1XjQw
                     (case-lambda
                       ((g$r*$9985$1XjQw g$r$9986$1XjQw)
                        (if (null? (car g$r*$9985$1XjQw))
                          g$r$9986$1XjQw
                          (cons
                            (g$map$5757$1XjQw car g$r*$9985$1XjQw)
                            (g$combine$9947$1XjQw
                              (g$map$5757$1XjQw cdr g$r*$9985$1XjQw)
                              g$r$9986$1XjQw))))))
                   (g$match*$9948$1XjQw
                     (case-lambda
                       ((g$e$9967$1XjQw
                          g$p$9968$1XjQw
                          g$m*$9969$1XjQw
                          g$s*$9970$1XjQw
                          g$ae*$9971$1XjQw
                          g$r$9972$1XjQw)
                        (if (null? g$p$9968$1XjQw)
                          (if (null? g$e$9967$1XjQw)
                            (begin '#f g$r$9972$1XjQw)
                            '#f)
                          (if (pair? g$p$9968$1XjQw)
                            (if (pair? g$e$9967$1XjQw)
                              (begin
                                '#f
                                (g$match$9949$1XjQw
                                  (car g$e$9967$1XjQw)
                                  (car g$p$9968$1XjQw)
                                  g$m*$9969$1XjQw
                                  g$s*$9970$1XjQw
                                  g$ae*$9971$1XjQw
                                  (g$match$9949$1XjQw
                                    (cdr g$e$9967$1XjQw)
                                    (cdr g$p$9968$1XjQw)
                                    g$m*$9969$1XjQw
                                    g$s*$9970$1XjQw
                                    g$ae*$9971$1XjQw
                                    g$r$9972$1XjQw)))
                              '#f)
                            (if (eq? g$p$9968$1XjQw 'each-any)
                              ((case-lambda
                                 ((g$l$9973$1XjQw)
                                  (if g$l$9973$1XjQw
                                    (begin
                                      '#f
                                      (cons g$l$9973$1XjQw g$r$9972$1XjQw))
                                    '#f)))
                               (g$match-each-any$9945$1XjQw
                                 g$e$9967$1XjQw
                                 g$m*$9969$1XjQw
                                 g$s*$9970$1XjQw
                                 g$ae*$9971$1XjQw))
                              ((case-lambda
                                 ((g$t$9974$1XjQw)
                                  (if (g$memv$5750$1XjQw g$t$9974$1XjQw '(each))
                                    (if (null? g$e$9967$1XjQw)
                                      (g$match-empty$9946$1XjQw
                                        (vector-ref g$p$9968$1XjQw '1)
                                        g$r$9972$1XjQw)
                                      ((case-lambda
                                         ((g$r*$9975$1XjQw)
                                          (if g$r*$9975$1XjQw
                                            (begin
                                              '#f
                                              (g$combine$9947$1XjQw
                                                g$r*$9975$1XjQw
                                                g$r$9972$1XjQw))
                                            '#f)))
                                       (g$match-each$9943$1XjQw
                                         g$e$9967$1XjQw
                                         (vector-ref g$p$9968$1XjQw '1)
                                         g$m*$9969$1XjQw
                                         g$s*$9970$1XjQw
                                         g$ae*$9971$1XjQw)))
                                    (if (g$memv$5750$1XjQw
                                          g$t$9974$1XjQw
                                          '(free-id))
                                      (if (symbol? g$e$9967$1XjQw)
                                        (if (g$top-marked?$7961$1XjQw
                                              g$m*$9969$1XjQw)
                                          (if (g$free-id=?$8027$1XjQw
                                                (g$stx^$9942$1XjQw
                                                  g$e$9967$1XjQw
                                                  g$m*$9969$1XjQw
                                                  g$s*$9970$1XjQw
                                                  g$ae*$9971$1XjQw)
                                                (vector-ref g$p$9968$1XjQw '1))
                                            (begin '#f g$r$9972$1XjQw)
                                            '#f)
                                          '#f)
                                        '#f)
                                      (if (g$memv$5750$1XjQw
                                            g$t$9974$1XjQw
                                            '(scheme-id))
                                        (if (symbol? g$e$9967$1XjQw)
                                          (if (g$top-marked?$7961$1XjQw
                                                g$m*$9969$1XjQw)
                                            (if (g$free-id=?$8027$1XjQw
                                                  (g$stx^$9942$1XjQw
                                                    g$e$9967$1XjQw
                                                    g$m*$9969$1XjQw
                                                    g$s*$9970$1XjQw
                                                    g$ae*$9971$1XjQw)
                                                  (g$scheme-stx$8244$1XjQw
                                                    (vector-ref
                                                      g$p$9968$1XjQw
                                                      '1)))
                                              (begin '#f g$r$9972$1XjQw)
                                              '#f)
                                            '#f)
                                          '#f)
                                        (if (g$memv$5750$1XjQw
                                              g$t$9974$1XjQw
                                              '(each+))
                                          (call-with-values
                                            (case-lambda
                                              (()
                                               (g$match-each+$9944$1XjQw
                                                 g$e$9967$1XjQw
                                                 (vector-ref g$p$9968$1XjQw '1)
                                                 (vector-ref g$p$9968$1XjQw '2)
                                                 (vector-ref g$p$9968$1XjQw '3)
                                                 g$m*$9969$1XjQw
                                                 g$s*$9970$1XjQw
                                                 g$ae*$9971$1XjQw
                                                 g$r$9972$1XjQw)))
                                            (case-lambda
                                              ((g$xr*$9979$1XjQw
                                                 g$y-pat$9980$1XjQw
                                                 g$r$9981$1XjQw)
                                               ((case-lambda
                                                  ((g$r$9982$1XjQw
                                                     g$y-pat$9983$1XjQw
                                                     g$xr*$9984$1XjQw)
                                                   (if g$r$9982$1XjQw
                                                     (if (null?
                                                           g$y-pat$9983$1XjQw)
                                                       (begin
                                                         '#f
                                                         (if (null?
                                                               g$xr*$9984$1XjQw)
                                                           (g$match-empty$9946$1XjQw
                                                             (vector-ref
                                                               g$p$9968$1XjQw
                                                               '1)
                                                             g$r$9982$1XjQw)
                                                           (g$combine$9947$1XjQw
                                                             g$xr*$9984$1XjQw
                                                             g$r$9982$1XjQw)))
                                                       '#f)
                                                     '#f)))
                                                g$r$9981$1XjQw
                                                g$y-pat$9980$1XjQw
                                                g$xr*$9979$1XjQw))))
                                          (if (g$memv$5750$1XjQw
                                                g$t$9974$1XjQw
                                                '(atom))
                                            (if (equal?
                                                  (vector-ref g$p$9968$1XjQw '1)
                                                  (g$strip$8033$1XjQw
                                                    g$e$9967$1XjQw
                                                    g$m*$9969$1XjQw))
                                              (begin '#f g$r$9972$1XjQw)
                                              '#f)
                                            (if (g$memv$5750$1XjQw
                                                  g$t$9974$1XjQw
                                                  '(vector))
                                              (if (vector? g$e$9967$1XjQw)
                                                (begin
                                                  '#f
                                                  (g$match$9949$1XjQw
                                                    (vector->list
                                                      g$e$9967$1XjQw)
                                                    (vector-ref
                                                      g$p$9968$1XjQw
                                                      '1)
                                                    g$m*$9969$1XjQw
                                                    g$s*$9970$1XjQw
                                                    g$ae*$9971$1XjQw
                                                    g$r$9972$1XjQw))
                                                '#f)
                                              (assertion-violation
                                                'syntax-dispatch
                                                '"invalid pattern"
                                                g$p$9968$1XjQw)))))))))
                               (vector-ref g$p$9968$1XjQw '0))))))))
                   (g$match$9949$1XjQw
                     (case-lambda
                       ((g$e$9952$1XjQw
                          g$p$9953$1XjQw
                          g$m*$9954$1XjQw
                          g$s*$9955$1XjQw
                          g$ae*$9956$1XjQw
                          g$r$9957$1XjQw)
                        (if (not g$r$9957$1XjQw)
                          '#f
                          (if (eq? g$p$9953$1XjQw '_)
                            g$r$9957$1XjQw
                            (if (eq? g$p$9953$1XjQw 'any)
                              (cons
                                (g$stx^$9942$1XjQw
                                  g$e$9952$1XjQw
                                  g$m*$9954$1XjQw
                                  g$s*$9955$1XjQw
                                  g$ae*$9956$1XjQw)
                                g$r$9957$1XjQw)
                              (if (g$stx?$7995$1XjQw g$e$9952$1XjQw)
                                (if (not (g$top-marked?$7961$1XjQw
                                           g$m*$9954$1XjQw))
                                  (begin
                                    '#f
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$join-wraps$8010$1XjQw
                                           g$m*$9954$1XjQw
                                           g$s*$9955$1XjQw
                                           g$ae*$9956$1XjQw
                                           g$e$9952$1XjQw)))
                                      (case-lambda
                                        ((g$m*$9961$1XjQw
                                           g$s*$9962$1XjQw
                                           g$ae*$9963$1XjQw)
                                         ((case-lambda
                                            ((g$ae*$9964$1XjQw
                                               g$s*$9965$1XjQw
                                               g$m*$9966$1XjQw)
                                             (g$match$9949$1XjQw
                                               (g$stx-expr$7997$1XjQw
                                                 g$e$9952$1XjQw)
                                               g$p$9953$1XjQw
                                               g$m*$9966$1XjQw
                                               g$s*$9965$1XjQw
                                               g$ae*$9964$1XjQw
                                               g$r$9957$1XjQw)))
                                          g$ae*$9963$1XjQw
                                          g$s*$9962$1XjQw
                                          g$m*$9961$1XjQw)))))
                                  '#f)
                                (if (annotation? g$e$9952$1XjQw)
                                  (g$match$9949$1XjQw
                                    (annotation-expression g$e$9952$1XjQw)
                                    g$p$9953$1XjQw
                                    g$m*$9954$1XjQw
                                    g$s*$9955$1XjQw
                                    g$ae*$9956$1XjQw
                                    g$r$9957$1XjQw)
                                  (g$match*$9948$1XjQw
                                    g$e$9952$1XjQw
                                    g$p$9953$1XjQw
                                    g$m*$9954$1XjQw
                                    g$s*$9955$1XjQw
                                    g$ae*$9956$1XjQw
                                    g$r$9957$1XjQw))))))))))
           (case-lambda
             ((g$e$9950$1XjQw g$p$9951$1XjQw)
              (g$match$9949$1XjQw
                g$e$9950$1XjQw
                g$p$9951$1XjQw
                '()
                '()
                '()
                '()))))))))
   (g$ellipsis?$8302$1XjQw
     g$ellipsis?$11793$1XjQw
     (case-lambda
       ((g$x$10056$1XjQw)
        (if (g$id?$8023$1XjQw g$x$10056$1XjQw)
          (begin
            '#f
            (g$free-id=?$8027$1XjQw
              g$x$10056$1XjQw
              (g$scheme-stx$8244$1XjQw '...)))
          '#f))))
   (g$underscore?$8303$1XjQw
     g$underscore?$11794$1XjQw
     (case-lambda
       ((g$x$10057$1XjQw)
        (if (g$id?$8023$1XjQw g$x$10057$1XjQw)
          (begin
            '#f
            (g$free-id=?$8027$1XjQw
              g$x$10057$1XjQw
              (g$scheme-stx$8244$1XjQw '_)))
          '#f))))
   (g$verify-literals$8304$1XjQw
     g$verify-literals$11795$1XjQw
     (case-lambda
       ((g$lits$10058$1XjQw g$expr$10059$1XjQw)
        (g$for-each$5758$1XjQw
          (case-lambda
            ((g$x$10060$1XjQw)
             (if ((case-lambda
                    ((g$t$10061$1XjQw)
                     (if g$t$10061$1XjQw
                       g$t$10061$1XjQw
                       ((case-lambda
                          ((g$t$10062$1XjQw)
                           (if g$t$10062$1XjQw
                             g$t$10062$1XjQw
                             (begin
                               '#f
                               (g$underscore?$8303$1XjQw g$x$10060$1XjQw)))))
                        (g$ellipsis?$8302$1XjQw g$x$10060$1XjQw)))))
                  (not (g$id?$8023$1XjQw g$x$10060$1XjQw)))
               (g$syntax-violation$8412$1XjQw
                 '#f
                 '"invalid literal"
                 g$expr$10059$1XjQw
                 g$x$10060$1XjQw)
               (void))))
          g$lits$10058$1XjQw))))
   (g$syntax-case-transformer$8305$1XjQw
     g$syntax-case-transformer$11796$1XjQw
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$10063$1XjQw
                     (case-lambda
                       ((g$pvars$10120$1XjQw
                          g$expr$10121$1XjQw
                          g$y$10122$1XjQw
                          g$r$10123$1XjQw
                          g$mr$10124$1XjQw)
                        ((case-lambda
                           ((g$ids$10125$1XjQw g$levels$10126$1XjQw)
                            ((case-lambda
                               ((g$labels$10127$1XjQw g$new-vars$10128$1XjQw)
                                ((case-lambda
                                   ((g$body$10129$1XjQw)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7949$1XjQw
                                        '#f
                                        g$new-vars$10128$1XjQw
                                        g$body$10129$1XjQw)
                                      g$y$10122$1XjQw)))
                                 (g$chi-expr$8319$1XjQw
                                   (g$add-subst$8013$1XjQw
                                     (g$make-full-rib$7991$1XjQw
                                       g$ids$10125$1XjQw
                                       g$labels$10127$1XjQw)
                                     g$expr$10121$1XjQw)
                                   (append
                                     (g$map$5757$1XjQw
                                       (case-lambda
                                         ((g$label$10130$1XjQw
                                            g$var$10131$1XjQw
                                            g$level$10132$1XjQw)
                                          (cons
                                            g$label$10130$1XjQw
                                            (g$make-binding$8039$1XjQw
                                              'syntax
                                              (cons
                                                g$var$10131$1XjQw
                                                g$level$10132$1XjQw)))))
                                       g$labels$10127$1XjQw
                                       g$new-vars$10128$1XjQw
                                       (g$map$5757$1XjQw
                                         cdr
                                         g$pvars$10120$1XjQw))
                                     g$r$10123$1XjQw)
                                   g$mr$10124$1XjQw))))
                             (g$map$5757$1XjQw
                               g$gen-label$7964$1XjQw
                               g$ids$10125$1XjQw)
                             (g$map$5757$1XjQw
                               g$gen-lexical$7962$1XjQw
                               g$ids$10125$1XjQw))))
                         (g$map$5757$1XjQw car g$pvars$10120$1XjQw)
                         (g$map$5757$1XjQw cdr g$pvars$10120$1XjQw)))))
                   (g$invalid-ids-error$10064$1XjQw
                     (case-lambda
                       ((g$id*$10114$1XjQw g$e$10115$1XjQw g$class$10116$1XjQw)
                        ((letrec ((g$find$10117$1XjQw
                                    (case-lambda
                                      ((g$id*$10118$1XjQw g$ok*$10119$1XjQw)
                                       (if (null? g$id*$10118$1XjQw)
                                         (g$syntax-violation$8412$1XjQw
                                           '#f
                                           '"invalid syntax"
                                           g$e$10115$1XjQw)
                                         (if (g$id?$8023$1XjQw
                                               (car g$id*$10118$1XjQw))
                                           (if (g$bound-id-member?$8030$1XjQw
                                                 (car g$id*$10118$1XjQw)
                                                 g$ok*$10119$1XjQw)
                                             (g$syntax-error$8409$1XjQw
                                               (car g$id*$10118$1XjQw)
                                               '"duplicate "
                                               g$class$10116$1XjQw)
                                             (g$find$10117$1XjQw
                                               (cdr g$id*$10118$1XjQw)
                                               (cons
                                                 (car g$id*$10118$1XjQw)
                                                 g$ok*$10119$1XjQw)))
                                           (g$syntax-error$8409$1XjQw
                                             (car g$id*$10118$1XjQw)
                                             '"invalid "
                                             g$class$10116$1XjQw)))))))
                           g$find$10117$1XjQw)
                         g$id*$10114$1XjQw
                         '()))))
                   (g$gen-clause$10065$1XjQw
                     (case-lambda
                       ((g$x$10094$1XjQw
                          g$keys$10095$1XjQw
                          g$clauses$10096$1XjQw
                          g$r$10097$1XjQw
                          g$mr$10098$1XjQw
                          g$pat$10099$1XjQw
                          g$fender$10100$1XjQw
                          g$expr$10101$1XjQw)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$8300$1XjQw
                               g$pat$10099$1XjQw
                               g$keys$10095$1XjQw)))
                          (case-lambda
                            ((g$p$10104$1XjQw g$pvars$10105$1XjQw)
                             ((case-lambda
                                ((g$pvars$10106$1XjQw g$p$10107$1XjQw)
                                 (if (not (g$distinct-bound-ids?$8029$1XjQw
                                            (g$map$5757$1XjQw
                                              car
                                              g$pvars$10106$1XjQw)))
                                   (g$invalid-ids-error$10064$1XjQw
                                     (g$map$5757$1XjQw car g$pvars$10106$1XjQw)
                                     g$pat$10099$1XjQw
                                     '"pattern variable")
                                   (if (not (g$for-all$5755$1XjQw
                                              (case-lambda
                                                ((g$x$10108$1XjQw)
                                                 (not (g$ellipsis?$8302$1XjQw
                                                        (car g$x$10108$1XjQw)))))
                                              g$pvars$10106$1XjQw))
                                     (g$syntax-violation$8412$1XjQw
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$10099$1XjQw)
                                     ((case-lambda
                                        ((g$y$10109$1XjQw)
                                         ((case-lambda
                                            ((g$test$10110$1XjQw)
                                             ((case-lambda
                                                ((g$conseq$10111$1XjQw)
                                                 ((case-lambda
                                                    ((g$altern$10112$1XjQw)
                                                     (list
                                                       (g$build-lambda$7949$1XjQw
                                                         '#f
                                                         (list g$y$10109$1XjQw)
                                                         (list
                                                           'if
                                                           g$test$10110$1XjQw
                                                           g$conseq$10111$1XjQw
                                                           g$altern$10112$1XjQw))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$10094$1XjQw
                                                         (list
                                                           'quote
                                                           g$p$10107$1XjQw)))))
                                                  (g$gen-syntax-case$10066$1XjQw
                                                    g$x$10094$1XjQw
                                                    g$keys$10095$1XjQw
                                                    g$clauses$10096$1XjQw
                                                    g$r$10097$1XjQw
                                                    g$mr$10098$1XjQw))))
                                              (g$build-dispatch-call$10063$1XjQw
                                                g$pvars$10106$1XjQw
                                                g$expr$10101$1XjQw
                                                g$y$10109$1XjQw
                                                g$r$10097$1XjQw
                                                g$mr$10098$1XjQw))))
                                          (if (eq? g$fender$10100$1XjQw '#t)
                                            g$y$10109$1XjQw
                                            ((case-lambda
                                               ((g$call$10113$1XjQw)
                                                (list
                                                  'if
                                                  g$y$10109$1XjQw
                                                  g$call$10113$1XjQw
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$10063$1XjQw
                                               g$pvars$10106$1XjQw
                                               g$fender$10100$1XjQw
                                               g$y$10109$1XjQw
                                               g$r$10097$1XjQw
                                               g$mr$10098$1XjQw))))))
                                      (g$gen-lexical$7962$1XjQw 'tmp))))))
                              g$pvars$10105$1XjQw
                              g$p$10104$1XjQw)))))))
                   (g$gen-syntax-case$10066$1XjQw
                     (case-lambda
                       ((g$x$10077$1XjQw
                          g$keys$10078$1XjQw
                          g$clauses$10079$1XjQw
                          g$r$10080$1XjQw
                          g$mr$10081$1XjQw)
                        (if (null? g$clauses$10079$1XjQw)
                          (list '(primitive syntax-error) g$x$10077$1XjQw)
                          ((case-lambda
                             ((g$t$10082$1XjQw)
                              ((case-lambda
                                 ((g$ls/false$10083$1XjQw)
                                  (if g$ls/false$10083$1XjQw
                                    (apply
                                      (case-lambda
                                        ((g$pat$10084$1XjQw g$expr$10085$1XjQw)
                                         (if (if (g$id?$8023$1XjQw
                                                   g$pat$10084$1XjQw)
                                               (if (not (g$bound-id-member?$8030$1XjQw
                                                          g$pat$10084$1XjQw
                                                          g$keys$10078$1XjQw))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$8302$1XjQw
                                                          g$pat$10084$1XjQw)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$8027$1XjQw
                                                 g$pat$10084$1XjQw
                                                 (g$scheme-stx$8244$1XjQw '_))
                                             (g$chi-expr$8319$1XjQw
                                               g$expr$10085$1XjQw
                                               g$r$10080$1XjQw
                                               g$mr$10081$1XjQw)
                                             ((case-lambda
                                                ((g$lab$10086$1XjQw
                                                   g$lex$10087$1XjQw)
                                                 ((case-lambda
                                                    ((g$body$10088$1XjQw)
                                                     (list
                                                       (g$build-lambda$7949$1XjQw
                                                         '#f
                                                         (list
                                                           g$lex$10087$1XjQw)
                                                         g$body$10088$1XjQw)
                                                       g$x$10077$1XjQw)))
                                                  (g$chi-expr$8319$1XjQw
                                                    (g$add-subst$8013$1XjQw
                                                      (g$make-full-rib$7991$1XjQw
                                                        (list g$pat$10084$1XjQw)
                                                        (list
                                                          g$lab$10086$1XjQw))
                                                      g$expr$10085$1XjQw)
                                                    (cons
                                                      (cons
                                                        g$lab$10086$1XjQw
                                                        (g$make-binding$8039$1XjQw
                                                          'syntax
                                                          (cons
                                                            g$lex$10087$1XjQw
                                                            '0)))
                                                      g$r$10080$1XjQw)
                                                    g$mr$10081$1XjQw))))
                                              (g$gen-label$7964$1XjQw
                                                g$pat$10084$1XjQw)
                                              (g$gen-lexical$7962$1XjQw
                                                g$pat$10084$1XjQw)))
                                           (g$gen-clause$10065$1XjQw
                                             g$x$10077$1XjQw
                                             g$keys$10078$1XjQw
                                             (cdr g$clauses$10079$1XjQw)
                                             g$r$10080$1XjQw
                                             g$mr$10081$1XjQw
                                             g$pat$10084$1XjQw
                                             '#t
                                             g$expr$10085$1XjQw))))
                                      g$ls/false$10083$1XjQw)
                                    ((case-lambda
                                       ((g$t$10089$1XjQw)
                                        ((case-lambda
                                           ((g$ls/false$10090$1XjQw)
                                            (if g$ls/false$10090$1XjQw
                                              (apply
                                                (case-lambda
                                                  ((g$pat$10091$1XjQw
                                                     g$fender$10092$1XjQw
                                                     g$expr$10093$1XjQw)
                                                   (g$gen-clause$10065$1XjQw
                                                     g$x$10077$1XjQw
                                                     g$keys$10078$1XjQw
                                                     (cdr g$clauses$10079$1XjQw)
                                                     g$r$10080$1XjQw
                                                     g$mr$10081$1XjQw
                                                     g$pat$10091$1XjQw
                                                     g$fender$10092$1XjQw
                                                     g$expr$10093$1XjQw)))
                                                g$ls/false$10090$1XjQw)
                                              (g$syntax-violation$8412$1XjQw
                                                '#f
                                                '"invalid syntax"
                                                g$t$10089$1XjQw))))
                                         (g$syntax-dispatch$8301$1XjQw
                                           g$t$10089$1XjQw
                                           '(any any any)))))
                                     g$t$10082$1XjQw))))
                               (g$syntax-dispatch$8301$1XjQw
                                 g$t$10082$1XjQw
                                 '(any any)))))
                           (car g$clauses$10079$1XjQw)))))))
           (case-lambda
             ((g$e$10067$1XjQw g$r$10068$1XjQw g$mr$10069$1XjQw)
              ((case-lambda
                 ((g$t$10070$1XjQw)
                  ((case-lambda
                     ((g$ls/false$10071$1XjQw)
                      (if g$ls/false$10071$1XjQw
                        (apply
                          (case-lambda
                            ((g$expr$10072$1XjQw
                               g$keys$10073$1XjQw
                               g$clauses$10074$1XjQw)
                             (begin
                               (g$verify-literals$8304$1XjQw
                                 g$keys$10073$1XjQw
                                 g$e$10067$1XjQw)
                               ((case-lambda
                                  ((g$x$10075$1XjQw)
                                   ((case-lambda
                                      ((g$body$10076$1XjQw)
                                       (list
                                         (g$build-lambda$7949$1XjQw
                                           '#f
                                           (list g$x$10075$1XjQw)
                                           g$body$10076$1XjQw)
                                         (g$chi-expr$8319$1XjQw
                                           g$expr$10072$1XjQw
                                           g$r$10068$1XjQw
                                           g$mr$10069$1XjQw))))
                                    (g$gen-syntax-case$10066$1XjQw
                                      g$x$10075$1XjQw
                                      g$keys$10073$1XjQw
                                      g$clauses$10074$1XjQw
                                      g$r$10068$1XjQw
                                      g$mr$10069$1XjQw))))
                                (g$gen-lexical$7962$1XjQw 'tmp)))))
                          g$ls/false$10071$1XjQw)
                        (g$syntax-violation$8412$1XjQw
                          '#f
                          '"invalid syntax"
                          g$t$10070$1XjQw))))
                   (g$syntax-dispatch$8301$1XjQw
                     g$t$10070$1XjQw
                     '(_ any each-any . each-any)))))
               g$e$10067$1XjQw))))))))
   (g$ellipsis-map$8306$1XjQw
     g$ellipsis-map$11797$1XjQw
     (case-lambda
       ((g$proc$10133$1XjQw g$ls$10134$1XjQw . g$ls*$10135$1XjQw)
        (letrec* ((g$who$10136$1XjQw '...))
          (begin
            (if (not (list? g$ls$10134$1XjQw))
              (assertion-violation
                g$who$10136$1XjQw
                '"not a list"
                g$ls$10134$1XjQw)
              (void))
            (if (not (null? g$ls*$10135$1XjQw))
              ((case-lambda
                 ((g$n$10137$1XjQw)
                  (g$for-each$5758$1XjQw
                    (case-lambda
                      ((g$x$10138$1XjQw)
                       (begin
                         (if (not (list? g$x$10138$1XjQw))
                           (assertion-violation
                             g$who$10136$1XjQw
                             '"not a list"
                             g$x$10138$1XjQw)
                           (void))
                         (if (not (= (length g$x$10138$1XjQw) g$n$10137$1XjQw))
                           (assertion-violation
                             g$who$10136$1XjQw
                             '"length mismatch"
                             g$ls$10134$1XjQw
                             g$x$10138$1XjQw)
                           (void)))))
                    g$ls*$10135$1XjQw)))
               (length g$ls$10134$1XjQw))
              (void))
            (apply
              g$map$5757$1XjQw
              g$proc$10133$1XjQw
              g$ls$10134$1XjQw
              g$ls*$10135$1XjQw))))))
   (g$syntax-transformer$8307$1XjQw
     g$syntax-transformer$11798$1XjQw
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$10139$1XjQw
                     (case-lambda
                       ((g$src$10199$1XjQw
                          g$e$10200$1XjQw
                          g$r$10201$1XjQw
                          g$maps$10202$1XjQw
                          g$ellipsis?$10203$1XjQw
                          g$vec?$10204$1XjQw)
                        ((case-lambda
                           ((g$t$10205$1XjQw)
                            ((case-lambda
                               ((g$ls/false$10206$1XjQw)
                                (if (if g$ls/false$10206$1XjQw
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$10207$1XjQw)
                                             (g$ellipsis?$10203$1XjQw
                                               g$dots$10207$1XjQw)))
                                          g$ls/false$10206$1XjQw))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$10208$1XjQw)
                                       (g$syntax-violation$8412$1XjQw
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$10199$1XjQw)))
                                    g$ls/false$10206$1XjQw)
                                  ((case-lambda
                                     ((g$t$10209$1XjQw)
                                      ((case-lambda
                                         ((g$ls/false$10210$1XjQw)
                                          (if (if g$ls/false$10210$1XjQw
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$10211$1XjQw)
                                                       (g$id?$8023$1XjQw
                                                         g$id$10211$1XjQw)))
                                                    g$ls/false$10210$1XjQw))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$10212$1XjQw)
                                                 ((case-lambda
                                                    ((g$label$10213$1XjQw)
                                                     ((case-lambda
                                                        ((g$b$10214$1XjQw)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$8040$1XjQw
                                                                        g$b$10214$1XjQw)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$10217$1XjQw)
                                                                        (g$gen-ref$10140$1XjQw
                                                                          g$src$10199$1XjQw
                                                                          (car g$var.lev$10217$1XjQw)
                                                                          (cdr g$var.lev$10217$1XjQw)
                                                                          g$maps$10202$1XjQw)))
                                                                     (g$binding-value$8041$1XjQw
                                                                       g$b$10214$1XjQw))))
                                                                 (case-lambda
                                                                   ((g$var$10218$1XjQw
                                                                      g$maps$10219$1XjQw)
                                                                    ((case-lambda
                                                                       ((g$maps$10220$1XjQw
                                                                          g$var$10221$1XjQw)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$10221$1XjQw)
                                                                          g$maps$10220$1XjQw)))
                                                                     g$maps$10219$1XjQw
                                                                     g$var$10218$1XjQw))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$10200$1XjQw)
                                                                 g$maps$10202$1XjQw)))))))
                                                      (g$label->binding$8038$1XjQw
                                                        g$label$10213$1XjQw
                                                        g$r$10201$1XjQw))))
                                                  (g$id->label$8036$1XjQw
                                                    g$e$10200$1XjQw))))
                                              g$ls/false$10210$1XjQw)
                                            ((case-lambda
                                               ((g$t$10222$1XjQw)
                                                ((case-lambda
                                                   ((g$ls/false$10223$1XjQw)
                                                    (if (if g$ls/false$10223$1XjQw
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$10224$1XjQw
                                                                   g$e$10225$1XjQw)
                                                                 (g$ellipsis?$10203$1XjQw
                                                                   g$dots$10224$1XjQw)))
                                                              g$ls/false$10223$1XjQw))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$10226$1XjQw
                                                             g$e$10227$1XjQw)
                                                           (if g$vec?$10204$1XjQw
                                                             (g$syntax-violation$8412$1XjQw
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$10199$1XjQw)
                                                             (g$gen-syntax$10139$1XjQw
                                                               g$src$10199$1XjQw
                                                               g$e$10227$1XjQw
                                                               g$r$10201$1XjQw
                                                               g$maps$10202$1XjQw
                                                               (case-lambda
                                                                 ((g$x$10228$1XjQw)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$10223$1XjQw)
                                                      ((case-lambda
                                                         ((g$t$10229$1XjQw)
                                                          ((case-lambda
                                                             ((g$ls/false$10230$1XjQw)
                                                              (if (if g$ls/false$10230$1XjQw
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$10231$1XjQw
                                                                             g$dots$10232$1XjQw
                                                                             g$y$10233$1XjQw)
                                                                           (g$ellipsis?$10203$1XjQw
                                                                             g$dots$10232$1XjQw)))
                                                                        g$ls/false$10230$1XjQw))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$10234$1XjQw
                                                                       g$dots$10235$1XjQw
                                                                       g$y$10236$1XjQw)
                                                                     ((letrec ((g$f$10237$1XjQw
                                                                                 (case-lambda
                                                                                   ((g$y$10238$1XjQw
                                                                                      g$k$10239$1XjQw)
                                                                                    ((case-lambda
                                                                                       ((g$t$10240$1XjQw)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10241$1XjQw)
                                                                                            (if g$ls/false$10241$1XjQw
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$10239$1XjQw
                                                                                                     g$maps$10202$1XjQw)))
                                                                                                g$ls/false$10241$1XjQw)
                                                                                              ((case-lambda
                                                                                                 ((g$t$10242$1XjQw)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$10243$1XjQw)
                                                                                                      (if (if g$ls/false$10243$1XjQw
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$10244$1XjQw
                                                                                                                     g$y$10245$1XjQw)
                                                                                                                   (g$ellipsis?$10203$1XjQw
                                                                                                                     g$dots$10244$1XjQw)))
                                                                                                                g$ls/false$10243$1XjQw))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$10246$1XjQw
                                                                                                               g$y$10247$1XjQw)
                                                                                                             (g$f$10237$1XjQw
                                                                                                               g$y$10247$1XjQw
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$10248$1XjQw)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$10239$1XjQw
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$10248$1XjQw))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$10251$1XjQw
                                                                                                                         g$maps$10252$1XjQw)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$10253$1XjQw
                                                                                                                             g$x$10254$1XjQw)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$10253$1XjQw))
                                                                                                                             (g$syntax-violation$8412$1XjQw
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$10199$1XjQw)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$10142$1XjQw
                                                                                                                                 g$x$10254$1XjQw
                                                                                                                                 (car g$maps$10253$1XjQw))
                                                                                                                               (cdr g$maps$10253$1XjQw)))))
                                                                                                                        g$maps$10252$1XjQw
                                                                                                                        g$x$10251$1XjQw)))))))))
                                                                                                          g$ls/false$10243$1XjQw)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$10255$1XjQw)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$10256$1XjQw)
                                                                                                                (if g$ls/false$10256$1XjQw
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$10139$1XjQw
                                                                                                                              g$src$10199$1XjQw
                                                                                                                              g$y$10238$1XjQw
                                                                                                                              g$r$10201$1XjQw
                                                                                                                              g$maps$10202$1XjQw
                                                                                                                              g$ellipsis?$10203$1XjQw
                                                                                                                              g$vec?$10204$1XjQw)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$10259$1XjQw
                                                                                                                              g$maps$10260$1XjQw)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$10261$1XjQw
                                                                                                                                  g$y$10262$1XjQw)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$10239$1XjQw
                                                                                                                                       g$maps$10261$1XjQw)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$10265$1XjQw
                                                                                                                                       g$maps$10266$1XjQw)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$10267$1XjQw
                                                                                                                                           g$x$10268$1XjQw)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$10141$1XjQw
                                                                                                                                             g$x$10268$1XjQw
                                                                                                                                             g$y$10262$1XjQw)
                                                                                                                                           g$maps$10267$1XjQw)))
                                                                                                                                      g$maps$10266$1XjQw
                                                                                                                                      g$x$10265$1XjQw))))))
                                                                                                                             g$maps$10260$1XjQw
                                                                                                                             g$y$10259$1XjQw))))))
                                                                                                                    g$ls/false$10256$1XjQw)
                                                                                                                  (g$syntax-violation$8412$1XjQw
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$10255$1XjQw))))
                                                                                                             (g$syntax-dispatch$8301$1XjQw
                                                                                                               g$t$10255$1XjQw
                                                                                                               '_))))
                                                                                                         g$t$10242$1XjQw))))
                                                                                                   (g$syntax-dispatch$8301$1XjQw
                                                                                                     g$t$10242$1XjQw
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$10240$1XjQw))))
                                                                                         (g$syntax-dispatch$8301$1XjQw
                                                                                           g$t$10240$1XjQw
                                                                                           '()))))
                                                                                     g$y$10238$1XjQw)))))
                                                                        g$f$10237$1XjQw)
                                                                      g$y$10236$1XjQw
                                                                      (case-lambda
                                                                        ((g$maps$10269$1XjQw)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$10139$1XjQw
                                                                                g$src$10199$1XjQw
                                                                                g$x$10234$1XjQw
                                                                                g$r$10201$1XjQw
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$10269$1XjQw)
                                                                                g$ellipsis?$10203$1XjQw
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$10272$1XjQw
                                                                                g$maps$10273$1XjQw)
                                                                              ((case-lambda
                                                                                 ((g$maps$10274$1XjQw
                                                                                    g$x$10275$1XjQw)
                                                                                  (if (null?
                                                                                        (car g$maps$10274$1XjQw))
                                                                                    (g$syntax-violation$8412$1XjQw
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$10199$1XjQw)
                                                                                    (values
                                                                                      (g$gen-map$10143$1XjQw
                                                                                        g$x$10275$1XjQw
                                                                                        (car g$maps$10274$1XjQw))
                                                                                      (cdr g$maps$10274$1XjQw)))))
                                                                               g$maps$10273$1XjQw
                                                                               g$x$10272$1XjQw)))))))))
                                                                  g$ls/false$10230$1XjQw)
                                                                ((case-lambda
                                                                   ((g$t$10276$1XjQw)
                                                                    ((case-lambda
                                                                       ((g$ls/false$10277$1XjQw)
                                                                        (if g$ls/false$10277$1XjQw
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$10278$1XjQw
                                                                                 g$y$10279$1XjQw)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$10139$1XjQw
                                                                                      g$src$10199$1XjQw
                                                                                      g$x$10278$1XjQw
                                                                                      g$r$10201$1XjQw
                                                                                      g$maps$10202$1XjQw
                                                                                      g$ellipsis?$10203$1XjQw
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$10282$1XjQw
                                                                                      g$maps$10283$1XjQw)
                                                                                    ((case-lambda
                                                                                       ((g$maps$10284$1XjQw
                                                                                          g$xnew$10285$1XjQw)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$10139$1XjQw
                                                                                               g$src$10199$1XjQw
                                                                                               g$y$10279$1XjQw
                                                                                               g$r$10201$1XjQw
                                                                                               g$maps$10284$1XjQw
                                                                                               g$ellipsis?$10203$1XjQw
                                                                                               g$vec?$10204$1XjQw)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$10288$1XjQw
                                                                                               g$maps$10289$1XjQw)
                                                                                             ((case-lambda
                                                                                                ((g$maps$10290$1XjQw
                                                                                                   g$ynew$10291$1XjQw)
                                                                                                 (values
                                                                                                   (g$gen-cons$10144$1XjQw
                                                                                                     g$e$10200$1XjQw
                                                                                                     g$x$10278$1XjQw
                                                                                                     g$y$10279$1XjQw
                                                                                                     g$xnew$10285$1XjQw
                                                                                                     g$ynew$10291$1XjQw)
                                                                                                   g$maps$10290$1XjQw)))
                                                                                              g$maps$10289$1XjQw
                                                                                              g$ynew$10288$1XjQw))))))
                                                                                     g$maps$10283$1XjQw
                                                                                     g$xnew$10282$1XjQw))))))
                                                                            g$ls/false$10277$1XjQw)
                                                                          ((case-lambda
                                                                             ((g$t$10292$1XjQw)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10293$1XjQw)
                                                                                  (if g$ls/false$10293$1XjQw
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$10294$1XjQw)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$10139$1XjQw
                                                                                                g$src$10199$1XjQw
                                                                                                g$ls$10294$1XjQw
                                                                                                g$r$10201$1XjQw
                                                                                                g$maps$10202$1XjQw
                                                                                                g$ellipsis?$10203$1XjQw
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$10297$1XjQw
                                                                                                g$maps$10298$1XjQw)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$10299$1XjQw
                                                                                                    g$lsnew$10300$1XjQw)
                                                                                                  (values
                                                                                                    (g$gen-vector$10145$1XjQw
                                                                                                      g$e$10200$1XjQw
                                                                                                      g$ls$10294$1XjQw
                                                                                                      g$lsnew$10300$1XjQw)
                                                                                                    g$maps$10299$1XjQw)))
                                                                                               g$maps$10298$1XjQw
                                                                                               g$lsnew$10297$1XjQw))))))
                                                                                      g$ls/false$10293$1XjQw)
                                                                                    ((case-lambda
                                                                                       ((g$t$10301$1XjQw)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10302$1XjQw)
                                                                                            (if g$ls/false$10302$1XjQw
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$10200$1XjQw)
                                                                                                     g$maps$10202$1XjQw)))
                                                                                                g$ls/false$10302$1XjQw)
                                                                                              (g$syntax-violation$8412$1XjQw
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$10301$1XjQw))))
                                                                                         (g$syntax-dispatch$8301$1XjQw
                                                                                           g$t$10301$1XjQw
                                                                                           '_))))
                                                                                     g$t$10292$1XjQw))))
                                                                               (g$syntax-dispatch$8301$1XjQw
                                                                                 g$t$10292$1XjQw
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$10276$1XjQw))))
                                                                     (g$syntax-dispatch$8301$1XjQw
                                                                       g$t$10276$1XjQw
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$10229$1XjQw))))
                                                           (g$syntax-dispatch$8301$1XjQw
                                                             g$t$10229$1XjQw
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$10222$1XjQw))))
                                                 (g$syntax-dispatch$8301$1XjQw
                                                   g$t$10222$1XjQw
                                                   '(any any)))))
                                             g$t$10209$1XjQw))))
                                       (g$syntax-dispatch$8301$1XjQw
                                         g$t$10209$1XjQw
                                         'any))))
                                   g$t$10205$1XjQw))))
                             (g$syntax-dispatch$8301$1XjQw
                               g$t$10205$1XjQw
                               'any))))
                         g$e$10200$1XjQw))))
                   (g$gen-ref$10140$1XjQw
                     (case-lambda
                       ((g$src$10186$1XjQw
                          g$var$10187$1XjQw
                          g$level$10188$1XjQw
                          g$maps$10189$1XjQw)
                        (if (= g$level$10188$1XjQw '0)
                          (values g$var$10187$1XjQw g$maps$10189$1XjQw)
                          (if (null? g$maps$10189$1XjQw)
                            (g$syntax-violation$8412$1XjQw
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$10186$1XjQw)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$10140$1XjQw
                                   g$src$10186$1XjQw
                                   g$var$10187$1XjQw
                                   (- g$level$10188$1XjQw '1)
                                   (cdr g$maps$10189$1XjQw))))
                              (case-lambda
                                ((g$outer-var$10192$1XjQw
                                   g$outer-maps$10193$1XjQw)
                                 ((case-lambda
                                    ((g$outer-maps$10194$1XjQw
                                       g$outer-var$10195$1XjQw)
                                     ((case-lambda
                                        ((g$t$10196$1XjQw)
                                         (if g$t$10196$1XjQw
                                           ((case-lambda
                                              ((g$b$10197$1XjQw)
                                               (values
                                                 (cdr g$b$10197$1XjQw)
                                                 g$maps$10189$1XjQw)))
                                            g$t$10196$1XjQw)
                                           ((case-lambda
                                              ((g$inner-var$10198$1XjQw)
                                               (values
                                                 g$inner-var$10198$1XjQw
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$10195$1XjQw
                                                       g$inner-var$10198$1XjQw)
                                                     (car g$maps$10189$1XjQw))
                                                   g$outer-maps$10194$1XjQw))))
                                            (g$gen-lexical$7962$1XjQw 'tmp)))))
                                      (g$assq$5745$1XjQw
                                        g$outer-var$10195$1XjQw
                                        (car g$maps$10189$1XjQw)))))
                                  g$outer-maps$10193$1XjQw
                                  g$outer-var$10192$1XjQw)))))))))
                   (g$gen-append$10141$1XjQw
                     (case-lambda
                       ((g$x$10184$1XjQw g$y$10185$1XjQw)
                        (if (equal? g$y$10185$1XjQw ''())
                          g$x$10184$1XjQw
                          (list 'append g$x$10184$1XjQw g$y$10185$1XjQw)))))
                   (g$gen-mappend$10142$1XjQw
                     (case-lambda
                       ((g$e$10182$1XjQw g$map-env$10183$1XjQw)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$10143$1XjQw
                            g$e$10182$1XjQw
                            g$map-env$10183$1XjQw)))))
                   (g$gen-map$10143$1XjQw
                     (case-lambda
                       ((g$e$10173$1XjQw g$map-env$10174$1XjQw)
                        ((case-lambda
                           ((g$formals$10175$1XjQw g$actuals$10176$1XjQw)
                            (if (eq? (car g$e$10173$1XjQw) 'ref)
                              (car g$actuals$10176$1XjQw)
                              (if (g$for-all$5755$1XjQw
                                    (case-lambda
                                      ((g$x$10177$1XjQw)
                                       (if (eq? (car g$x$10177$1XjQw) 'ref)
                                         (begin
                                           '#f
                                           (g$memq$5749$1XjQw
                                             (g$cadr$5921$1XjQw g$x$10177$1XjQw)
                                             g$formals$10175$1XjQw))
                                         '#f)))
                                    (cdr g$e$10173$1XjQw))
                                ((case-lambda
                                   ((g$args$10178$1XjQw)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$10173$1XjQw))
                                        g$args$10178$1XjQw))))
                                 (g$map$5757$1XjQw
                                   ((case-lambda
                                      ((g$r$10179$1XjQw)
                                       (case-lambda
                                         ((g$x$10180$1XjQw)
                                          (cdr (g$assq$5745$1XjQw
                                                 (g$cadr$5921$1XjQw
                                                   g$x$10180$1XjQw)
                                                 g$r$10179$1XjQw))))))
                                    (g$map$5757$1XjQw
                                      cons
                                      g$formals$10175$1XjQw
                                      g$actuals$10176$1XjQw))
                                   (cdr g$e$10173$1XjQw)))
                                (g$cons*$5759$1XjQw
                                  'map
                                  (list
                                    'lambda
                                    g$formals$10175$1XjQw
                                    g$e$10173$1XjQw)
                                  g$actuals$10176$1XjQw)))))
                         (g$map$5757$1XjQw cdr g$map-env$10174$1XjQw)
                         (g$map$5757$1XjQw
                           (case-lambda
                             ((g$x$10181$1XjQw)
                              (list 'ref (car g$x$10181$1XjQw))))
                           g$map-env$10174$1XjQw)))))
                   (g$gen-cons$10144$1XjQw
                     (case-lambda
                       ((g$e$10165$1XjQw
                          g$x$10166$1XjQw
                          g$y$10167$1XjQw
                          g$xnew$10168$1XjQw
                          g$ynew$10169$1XjQw)
                        ((case-lambda
                           ((g$t$10170$1XjQw)
                            (if (g$memv$5750$1XjQw g$t$10170$1XjQw '(quote))
                              (if (eq? (car g$xnew$10168$1XjQw) 'quote)
                                ((case-lambda
                                   ((g$xnew$10171$1XjQw g$ynew$10172$1XjQw)
                                    (if (if (eq? g$xnew$10171$1XjQw
                                                 g$x$10166$1XjQw)
                                          (begin
                                            '#f
                                            (eq? g$ynew$10172$1XjQw
                                                 g$y$10167$1XjQw))
                                          '#f)
                                      (list 'quote g$e$10165$1XjQw)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$10171$1XjQw
                                          g$ynew$10172$1XjQw)))))
                                 (g$cadr$5921$1XjQw g$xnew$10168$1XjQw)
                                 (g$cadr$5921$1XjQw g$ynew$10169$1XjQw))
                                (if (null?
                                      (g$cadr$5921$1XjQw g$ynew$10169$1XjQw))
                                  (list 'list g$xnew$10168$1XjQw)
                                  (list
                                    'cons
                                    g$xnew$10168$1XjQw
                                    g$ynew$10169$1XjQw)))
                              (if (g$memv$5750$1XjQw g$t$10170$1XjQw '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$10168$1XjQw
                                    (cdr g$ynew$10169$1XjQw)))
                                (list
                                  'cons
                                  g$xnew$10168$1XjQw
                                  g$ynew$10169$1XjQw)))))
                         (car g$ynew$10169$1XjQw)))))
                   (g$gen-vector$10145$1XjQw
                     (case-lambda
                       ((g$e$10162$1XjQw g$ls$10163$1XjQw g$lsnew$10164$1XjQw)
                        (if (eq? (car g$lsnew$10164$1XjQw) 'quote)
                          (if (eq? (g$cadr$5921$1XjQw g$lsnew$10164$1XjQw)
                                   g$ls$10163$1XjQw)
                            (list 'quote g$e$10162$1XjQw)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$5921$1XjQw g$lsnew$10164$1XjQw))))
                          (if (eq? (car g$lsnew$10164$1XjQw) 'list)
                            (cons 'vector (cdr g$lsnew$10164$1XjQw))
                            (list 'list->vector g$lsnew$10164$1XjQw))))))
                   (g$regen$10146$1XjQw
                     (case-lambda
                       ((g$x$10159$1XjQw)
                        ((case-lambda
                           ((g$t$10160$1XjQw)
                            (if (g$memv$5750$1XjQw g$t$10160$1XjQw '(ref))
                              (g$cadr$5921$1XjQw g$x$10159$1XjQw)
                              (if (g$memv$5750$1XjQw
                                    g$t$10160$1XjQw
                                    '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$5921$1XjQw g$x$10159$1XjQw))
                                (if (g$memv$5750$1XjQw g$t$10160$1XjQw '(quote))
                                  (list
                                    'quote
                                    (g$cadr$5921$1XjQw g$x$10159$1XjQw))
                                  (if (g$memv$5750$1XjQw
                                        g$t$10160$1XjQw
                                        '(lambda))
                                    (g$build-lambda$7949$1XjQw
                                      '#f
                                      (g$cadr$5921$1XjQw g$x$10159$1XjQw)
                                      (g$regen$10146$1XjQw
                                        (g$caddr$5927$1XjQw g$x$10159$1XjQw)))
                                    (if (g$memv$5750$1XjQw
                                          g$t$10160$1XjQw
                                          '(map))
                                      ((case-lambda
                                         ((g$ls$10161$1XjQw)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$10161$1XjQw)))
                                       (g$map$5757$1XjQw
                                         g$regen$10146$1XjQw
                                         (cdr g$x$10159$1XjQw)))
                                      (cons
                                        (list 'primitive (car g$x$10159$1XjQw))
                                        (g$map$5757$1XjQw
                                          g$regen$10146$1XjQw
                                          (cdr g$x$10159$1XjQw))))))))))
                         (car g$x$10159$1XjQw))))))
           (case-lambda
             ((g$e$10147$1XjQw g$r$10148$1XjQw g$mr$10149$1XjQw)
              ((case-lambda
                 ((g$t$10150$1XjQw)
                  ((case-lambda
                     ((g$ls/false$10151$1XjQw)
                      (if g$ls/false$10151$1XjQw
                        (apply
                          (case-lambda
                            ((g$x$10152$1XjQw)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$10139$1XjQw
                                    g$e$10147$1XjQw
                                    g$x$10152$1XjQw
                                    g$r$10148$1XjQw
                                    '()
                                    g$ellipsis?$8302$1XjQw
                                    '#f)))
                               (case-lambda
                                 ((g$e$10155$1XjQw g$maps$10156$1XjQw)
                                  ((case-lambda
                                     ((g$maps$10157$1XjQw g$e$10158$1XjQw)
                                      (g$regen$10146$1XjQw g$e$10158$1XjQw)))
                                   g$maps$10156$1XjQw
                                   g$e$10155$1XjQw))))))
                          g$ls/false$10151$1XjQw)
                        (g$syntax-violation$8412$1XjQw
                          '#f
                          '"invalid syntax"
                          g$t$10150$1XjQw))))
                   (g$syntax-dispatch$8301$1XjQw g$t$10150$1XjQw '(_ any)))))
               g$e$10147$1XjQw))))))))
   (g$core-macro-transformer$8308$1XjQw
     g$core-macro-transformer$11799$1XjQw
     (case-lambda
       ((g$name$10303$1XjQw)
        ((case-lambda
           ((g$t$10304$1XjQw)
            (if (g$memv$5750$1XjQw g$t$10304$1XjQw '(quote))
              g$quote-transformer$8261$1XjQw
              (if (g$memv$5750$1XjQw g$t$10304$1XjQw '(lambda))
                g$lambda-transformer$8263$1XjQw
                (if (g$memv$5750$1XjQw g$t$10304$1XjQw '(case-lambda))
                  g$case-lambda-transformer$8262$1XjQw
                  (if (g$memv$5750$1XjQw g$t$10304$1XjQw '(letrec))
                    g$letrec-transformer$8251$1XjQw
                    (if (g$memv$5750$1XjQw g$t$10304$1XjQw '(letrec*))
                      g$letrec*-transformer$8252$1XjQw
                      (if (g$memv$5750$1XjQw g$t$10304$1XjQw '(if))
                        g$if-transformer$8259$1XjQw
                        (if (g$memv$5750$1XjQw g$t$10304$1XjQw '(foreign-call))
                          g$foreign-call-transformer$8299$1XjQw
                          (if (g$memv$5750$1XjQw g$t$10304$1XjQw '(syntax-case))
                            g$syntax-case-transformer$8305$1XjQw
                            (if (g$memv$5750$1XjQw g$t$10304$1XjQw '(syntax))
                              g$syntax-transformer$8307$1XjQw
                              (if (g$memv$5750$1XjQw
                                    g$t$10304$1XjQw
                                    '(type-descriptor))
                                g$type-descriptor-transformer$8254$1XjQw
                                (if (g$memv$5750$1XjQw
                                      g$t$10304$1XjQw
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$8255$1XjQw
                                  (if (g$memv$5750$1XjQw
                                        g$t$10304$1XjQw
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$8256$1XjQw
                                    (if (g$memv$5750$1XjQw
                                          g$t$10304$1XjQw
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$8253$1XjQw
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$10303$1XjQw))))))))))))))))
         g$name$10303$1XjQw))))
   (g$file-options-macro$8309$1XjQw
     g$file-options-macro$11800$1XjQw
     (case-lambda
       ((g$x$10305$1XjQw)
        (letrec* ((g$valid-option?$10306$1XjQw
                    (case-lambda
                      ((g$x$10311$1XjQw)
                       (if (g$id?$8023$1XjQw g$x$10311$1XjQw)
                         (begin
                           '#f
                           (g$memq$5749$1XjQw
                             (g$id->sym$8024$1XjQw g$x$10311$1XjQw)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$10307$1XjQw)
              ((case-lambda
                 ((g$ls/false$10308$1XjQw)
                  (if (if g$ls/false$10308$1XjQw
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$10309$1XjQw)
                               (if (g$for-all$5755$1XjQw
                                     g$valid-option?$10306$1XjQw
                                     g$opt*$10309$1XjQw)
                                 (begin
                                   '#f
                                   (g$file-options-spec$7297$1XjQw
                                     (g$map$5757$1XjQw
                                       g$id->sym$8024$1XjQw
                                       g$opt*$10309$1XjQw)))
                                 '#f)))
                            g$ls/false$10308$1XjQw))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$10310$1XjQw)
                         (g$bless$8264$1XjQw
                           (list
                             'quote
                             (g$file-options-spec$7297$1XjQw
                               (g$map$5757$1XjQw
                                 g$id->sym$8024$1XjQw
                                 g$opt*$10310$1XjQw))))))
                      g$ls/false$10308$1XjQw)
                    (g$syntax-violation$8412$1XjQw
                      '#f
                      '"invalid syntax"
                      g$t$10307$1XjQw))))
               (g$syntax-dispatch$8301$1XjQw g$t$10307$1XjQw '(_ . each-any)))))
           g$x$10305$1XjQw)))))
   (g$symbol-macro$8310$1XjQw
     g$symbol-macro$11801$1XjQw
     (case-lambda
       ((g$x$10312$1XjQw g$set$10313$1XjQw)
        ((case-lambda
           ((g$t$10314$1XjQw)
            ((case-lambda
               ((g$ls/false$10315$1XjQw)
                (if (if g$ls/false$10315$1XjQw
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$10316$1XjQw)
                             (if (g$id?$8023$1XjQw g$name$10316$1XjQw)
                               (begin
                                 '#f
                                 (g$memq$5749$1XjQw
                                   (g$id->sym$8024$1XjQw g$name$10316$1XjQw)
                                   g$set$10313$1XjQw))
                               '#f)))
                          g$ls/false$10315$1XjQw))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$10317$1XjQw)
                       (g$bless$8264$1XjQw (list 'quote g$name$10317$1XjQw))))
                    g$ls/false$10315$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$10314$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$10314$1XjQw '(_ any)))))
         g$x$10312$1XjQw))))
   (g$macro-transformer$8311$1XjQw
     g$macro-transformer$11802$1XjQw
     (case-lambda
       ((g$x$10318$1XjQw)
        (if (procedure? g$x$10318$1XjQw)
          g$x$10318$1XjQw
          (if (symbol? g$x$10318$1XjQw)
            ((case-lambda
               ((g$t$10319$1XjQw)
                (if (g$memv$5750$1XjQw g$t$10319$1XjQw '(define-record-type))
                  g$define-record-type-macro$8295$1XjQw
                  (if (g$memv$5750$1XjQw g$t$10319$1XjQw '(define-struct))
                    g$define-struct-macro$8294$1XjQw
                    (if (g$memv$5750$1XjQw g$t$10319$1XjQw '(include))
                      g$include-macro$8289$1XjQw
                      (if (g$memv$5750$1XjQw g$t$10319$1XjQw '(cond))
                        g$cond-macro$8287$1XjQw
                        (if (g$memv$5750$1XjQw g$t$10319$1XjQw '(let))
                          g$let-macro$8267$1XjQw
                          (if (g$memv$5750$1XjQw g$t$10319$1XjQw '(do))
                            g$do-macro$8283$1XjQw
                            (if (g$memv$5750$1XjQw g$t$10319$1XjQw '(or))
                              g$or-macro$8285$1XjQw
                              (if (g$memv$5750$1XjQw g$t$10319$1XjQw '(and))
                                g$and-macro$8286$1XjQw
                                (if (g$memv$5750$1XjQw g$t$10319$1XjQw '(let*))
                                  g$let*-macro$8284$1XjQw
                                  (if (g$memv$5750$1XjQw
                                        g$t$10319$1XjQw
                                        '(let-values))
                                    g$let-values-macro$8268$1XjQw
                                    (if (g$memv$5750$1XjQw
                                          g$t$10319$1XjQw
                                          '(let*-values))
                                      g$let*-values-macro$8269$1XjQw
                                      (if (g$memv$5750$1XjQw
                                            g$t$10319$1XjQw
                                            '(syntax-rules))
                                        g$syntax-rules-macro$8291$1XjQw
                                        (if (g$memv$5750$1XjQw
                                              g$t$10319$1XjQw
                                              '(quasiquote))
                                          g$quasiquote-macro$8292$1XjQw
                                          (if (g$memv$5750$1XjQw
                                                g$t$10319$1XjQw
                                                '(quasisyntax))
                                            g$quasisyntax-macro$8293$1XjQw
                                            (if (g$memv$5750$1XjQw
                                                  g$t$10319$1XjQw
                                                  '(with-syntax))
                                              g$with-syntax-macro$8265$1XjQw
                                              (if (g$memv$5750$1XjQw
                                                    g$t$10319$1XjQw
                                                    '(when))
                                                g$when-macro$8257$1XjQw
                                                (if (g$memv$5750$1XjQw
                                                      g$t$10319$1XjQw
                                                      '(unless))
                                                  g$unless-macro$8258$1XjQw
                                                  (if (g$memv$5750$1XjQw
                                                        g$t$10319$1XjQw
                                                        '(case))
                                                    g$case-macro$8260$1XjQw
                                                    (if (g$memv$5750$1XjQw
                                                          g$t$10319$1XjQw
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$8282$1XjQw
                                                      (if (g$memv$5750$1XjQw
                                                            g$t$10319$1XjQw
                                                            '(time))
                                                        g$time-macro$8278$1XjQw
                                                        (if (g$memv$5750$1XjQw
                                                              g$t$10319$1XjQw
                                                              '(delay))
                                                          g$delay-macro$8279$1XjQw
                                                          (if (g$memv$5750$1XjQw
                                                                g$t$10319$1XjQw
                                                                '(assert))
                                                            g$assert-macro$8280$1XjQw
                                                            (if (g$memv$5750$1XjQw
                                                                  g$t$10319$1XjQw
                                                                  '(endianness))
                                                              g$endianness-macro$8281$1XjQw
                                                              (if (g$memv$5750$1XjQw
                                                                    g$t$10319$1XjQw
                                                                    '(guard))
                                                                g$guard-macro$8276$1XjQw
                                                                (if (g$memv$5750$1XjQw
                                                                      g$t$10319$1XjQw
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$8277$1XjQw
                                                                  (if (g$memv$5750$1XjQw
                                                                        g$t$10319$1XjQw
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$8270$1XjQw
                                                                    (if (g$memv$5750$1XjQw
                                                                          g$t$10319$1XjQw
                                                                          '(trace-define))
                                                                      g$trace-define-macro$8271$1XjQw
                                                                      (if (g$memv$5750$1XjQw
                                                                            g$t$10319$1XjQw
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$8272$1XjQw
                                                                        (if (g$memv$5750$1XjQw
                                                                              g$t$10319$1XjQw
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$8274$1XjQw
                                                                          (if (g$memv$5750$1XjQw
                                                                                g$t$10319$1XjQw
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$8275$1XjQw
                                                                            (if (g$memv$5750$1XjQw
                                                                                  g$t$10319$1XjQw
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$8296$1XjQw
                                                                              (if (g$memv$5750$1XjQw
                                                                                    g$t$10319$1XjQw
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$8298$1XjQw
                                                                                (if (g$memv$5750$1XjQw
                                                                                      g$t$10319$1XjQw
                                                                                      '(include-into))
                                                                                  g$include-into-macro$8290$1XjQw
                                                                                  (if (g$memv$5750$1XjQw
                                                                                        g$t$10319$1XjQw
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$10320$1XjQw)
                                                                                       (g$symbol-macro$8310$1XjQw
                                                                                         g$x$10320$1XjQw
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (g$memv$5750$1XjQw
                                                                                          g$t$10319$1XjQw
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$10321$1XjQw)
                                                                                         (g$symbol-macro$8310$1XjQw
                                                                                           g$x$10321$1XjQw
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (g$memv$5750$1XjQw
                                                                                            g$t$10319$1XjQw
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$10322$1XjQw)
                                                                                           (g$symbol-macro$8310$1XjQw
                                                                                             g$x$10322$1XjQw
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (g$memv$5750$1XjQw
                                                                                              g$t$10319$1XjQw
                                                                                              '(file-options))
                                                                                          g$file-options-macro$8309$1XjQw
                                                                                          (if (g$memv$5750$1XjQw
                                                                                                g$t$10319$1XjQw
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$8297$1XjQw
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$10318$1XjQw)))))))))))))))))))))))))))))))))))))))))
             g$x$10318$1XjQw)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$10318$1XjQw))))))
   (g$local-macro-transformer$8312$1XjQw
     g$local-macro-transformer$11803$1XjQw
     (case-lambda ((g$x$10323$1XjQw) (car g$x$10323$1XjQw))))
   (g$do-macro-call$8313$1XjQw
     g$do-macro-call$11804$1XjQw
     (case-lambda
       ((g$transformer$10324$1XjQw g$expr$10325$1XjQw)
        ((case-lambda
           ((g$out$10326$1XjQw)
            (begin
              ((letrec ((g$f$10327$1XjQw
                          (case-lambda
                            ((g$x$10328$1XjQw)
                             (if (not (g$stx?$7995$1XjQw g$x$10328$1XjQw))
                               (if (pair? g$x$10328$1XjQw)
                                 (begin
                                   (g$f$10327$1XjQw (car g$x$10328$1XjQw))
                                   (g$f$10327$1XjQw (cdr g$x$10328$1XjQw)))
                                 (if (vector? g$x$10328$1XjQw)
                                   (vector-for-each
                                     g$f$10327$1XjQw
                                     g$x$10328$1XjQw)
                                   (if (symbol? g$x$10328$1XjQw)
                                     (g$syntax-violation$8412$1XjQw
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$10325$1XjQw
                                       g$x$10328$1XjQw)
                                     (void))))
                               (void))))))
                 g$f$10327$1XjQw)
               g$out$10326$1XjQw)
              (g$add-mark$8012$1XjQw
                (g$gen-mark$8007$1XjQw)
                g$out$10326$1XjQw
                g$expr$10325$1XjQw))))
         (g$transformer$10324$1XjQw
           (g$add-mark$8012$1XjQw
             g$anti-mark$8008$1XjQw
             g$expr$10325$1XjQw
             '#f))))))
   (g$chi-macro$8314$1XjQw
     g$chi-macro$11805$1XjQw
     (case-lambda
       ((g$p$10329$1XjQw g$e$10330$1XjQw)
        (g$do-macro-call$8313$1XjQw
          (g$macro-transformer$8311$1XjQw g$p$10329$1XjQw)
          g$e$10330$1XjQw))))
   (g$chi-local-macro$8315$1XjQw
     g$chi-local-macro$11806$1XjQw
     (case-lambda
       ((g$p$10331$1XjQw g$e$10332$1XjQw)
        (g$do-macro-call$8313$1XjQw
          (g$local-macro-transformer$8312$1XjQw g$p$10331$1XjQw)
          g$e$10332$1XjQw))))
   (g$chi-global-macro$8316$1XjQw
     g$chi-global-macro$11807$1XjQw
     (case-lambda
       ((g$p$10333$1XjQw g$e$10334$1XjQw)
        ((case-lambda
           ((g$lib$10335$1XjQw g$loc$10336$1XjQw)
            (begin
              (g$visit-library$7834$1XjQw g$lib$10335$1XjQw)
              ((case-lambda
                 ((g$x$10337$1XjQw)
                  ((case-lambda
                     ((g$transformer$10338$1XjQw)
                      (g$do-macro-call$8313$1XjQw
                        g$transformer$10338$1XjQw
                        g$e$10334$1XjQw)))
                   (if (procedure? g$x$10337$1XjQw)
                     g$x$10337$1XjQw
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$10337$1XjQw)))))
               (symbol-value g$loc$10336$1XjQw)))))
         (car g$p$10333$1XjQw)
         (cdr g$p$10333$1XjQw)))))
   (g$chi-expr*$8317$1XjQw
     g$chi-expr*$11808$1XjQw
     (case-lambda
       ((g$e*$10339$1XjQw g$r$10340$1XjQw g$mr$10341$1XjQw)
        (if (null? g$e*$10339$1XjQw)
          '()
          ((case-lambda
             ((g$e$10342$1XjQw)
              (cons
                g$e$10342$1XjQw
                (g$chi-expr*$8317$1XjQw
                  (cdr g$e*$10339$1XjQw)
                  g$r$10340$1XjQw
                  g$mr$10341$1XjQw))))
           (g$chi-expr$8319$1XjQw
             (car g$e*$10339$1XjQw)
             g$r$10340$1XjQw
             g$mr$10341$1XjQw))))))
   (g$chi-application$8318$1XjQw
     g$chi-application$11809$1XjQw
     (case-lambda
       ((g$e$10343$1XjQw g$r$10344$1XjQw g$mr$10345$1XjQw)
        ((case-lambda
           ((g$t$10346$1XjQw)
            ((case-lambda
               ((g$ls/false$10347$1XjQw)
                (if g$ls/false$10347$1XjQw
                  (apply
                    (case-lambda
                      ((g$rator$10348$1XjQw g$rands$10349$1XjQw)
                       ((case-lambda
                          ((g$rator$10350$1XjQw)
                           (cons
                             g$rator$10350$1XjQw
                             (g$chi-expr*$8317$1XjQw
                               g$rands$10349$1XjQw
                               g$r$10344$1XjQw
                               g$mr$10345$1XjQw))))
                        (g$chi-expr$8319$1XjQw
                          g$rator$10348$1XjQw
                          g$r$10344$1XjQw
                          g$mr$10345$1XjQw))))
                    g$ls/false$10347$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$10346$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$10346$1XjQw '(any . each-any)))))
         g$e$10343$1XjQw))))
   (g$chi-expr$8319$1XjQw
     g$chi-expr$11810$1XjQw
     (case-lambda
       ((g$e$10351$1XjQw g$r$10352$1XjQw g$mr$10353$1XjQw)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$8043$1XjQw g$e$10351$1XjQw g$r$10352$1XjQw)))
          (case-lambda
            ((g$type$10357$1XjQw g$value$10358$1XjQw g$kwd$10359$1XjQw)
             ((case-lambda
                ((g$kwd$10360$1XjQw g$value$10361$1XjQw g$type$10362$1XjQw)
                 ((case-lambda
                    ((g$t$10363$1XjQw)
                     (if (g$memv$5750$1XjQw g$t$10363$1XjQw '(core-macro))
                       ((case-lambda
                          ((g$transformer$10364$1XjQw)
                           (g$transformer$10364$1XjQw
                             g$e$10351$1XjQw
                             g$r$10352$1XjQw
                             g$mr$10353$1XjQw)))
                        (g$core-macro-transformer$8308$1XjQw
                          g$value$10361$1XjQw))
                       (if (g$memv$5750$1XjQw g$t$10363$1XjQw '(global))
                         ((case-lambda
                            ((g$lib$10365$1XjQw)
                             ((case-lambda
                                ((g$loc$10366$1XjQw)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$8353$1XjQw)
                                        g$lib$10365$1XjQw)
                                       g$loc$10366$1XjQw))))))
                              (cdr g$value$10361$1XjQw))))
                          (car g$value$10361$1XjQw))
                         (if (g$memv$5750$1XjQw g$t$10363$1XjQw '(core-prim))
                           ((case-lambda
                              ((g$name$10367$1XjQw)
                               (list 'primitive g$name$10367$1XjQw)))
                            g$value$10361$1XjQw)
                           (if (g$memv$5750$1XjQw g$t$10363$1XjQw '(call))
                             (g$chi-application$8318$1XjQw
                               g$e$10351$1XjQw
                               g$r$10352$1XjQw
                               g$mr$10353$1XjQw)
                             (if (g$memv$5750$1XjQw g$t$10363$1XjQw '(lexical))
                               ((case-lambda
                                  ((g$lex$10368$1XjQw) g$lex$10368$1XjQw))
                                (g$lexical-var$8245$1XjQw g$value$10361$1XjQw))
                               (if (g$memv$5750$1XjQw
                                     g$t$10363$1XjQw
                                     '(global-macro global-macro!))
                                 (g$chi-expr$8319$1XjQw
                                   (g$chi-global-macro$8316$1XjQw
                                     g$value$10361$1XjQw
                                     g$e$10351$1XjQw)
                                   g$r$10352$1XjQw
                                   g$mr$10353$1XjQw)
                                 (if (g$memv$5750$1XjQw
                                       g$t$10363$1XjQw
                                       '(local-macro local-macro!))
                                   (g$chi-expr$8319$1XjQw
                                     (g$chi-local-macro$8315$1XjQw
                                       g$value$10361$1XjQw
                                       g$e$10351$1XjQw)
                                     g$r$10352$1XjQw
                                     g$mr$10353$1XjQw)
                                   (if (g$memv$5750$1XjQw
                                         g$t$10363$1XjQw
                                         '(macro macro!))
                                     (g$chi-expr$8319$1XjQw
                                       (g$chi-macro$8314$1XjQw
                                         g$value$10361$1XjQw
                                         g$e$10351$1XjQw)
                                       g$r$10352$1XjQw
                                       g$mr$10353$1XjQw)
                                     (if (g$memv$5750$1XjQw
                                           g$t$10363$1XjQw
                                           '(constant))
                                       ((case-lambda
                                          ((g$datum$10369$1XjQw)
                                           (list 'quote g$datum$10369$1XjQw)))
                                        g$value$10361$1XjQw)
                                       (if (g$memv$5750$1XjQw
                                             g$t$10363$1XjQw
                                             '(set!))
                                         (g$chi-set!$8320$1XjQw
                                           g$e$10351$1XjQw
                                           g$r$10352$1XjQw
                                           g$mr$10353$1XjQw)
                                         (if (g$memv$5750$1XjQw
                                               g$t$10363$1XjQw
                                               '(begin))
                                           ((case-lambda
                                              ((g$t$10370$1XjQw)
                                               ((case-lambda
                                                  ((g$ls/false$10371$1XjQw)
                                                   (if g$ls/false$10371$1XjQw
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$10372$1XjQw
                                                            g$x*$10373$1XjQw)
                                                          (g$build-sequence$7952$1XjQw
                                                            '#f
                                                            (g$chi-expr*$8317$1XjQw
                                                              (cons
                                                                g$x$10372$1XjQw
                                                                g$x*$10373$1XjQw)
                                                              g$r$10352$1XjQw
                                                              g$mr$10353$1XjQw))))
                                                       g$ls/false$10371$1XjQw)
                                                     (g$syntax-violation$8412$1XjQw
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$10370$1XjQw))))
                                                (g$syntax-dispatch$8301$1XjQw
                                                  g$t$10370$1XjQw
                                                  '(_ any . each-any)))))
                                            g$e$10351$1XjQw)
                                           (if (g$memv$5750$1XjQw
                                                 g$t$10363$1XjQw
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$10374$1XjQw)
                                                 ((case-lambda
                                                    ((g$ls/false$10375$1XjQw)
                                                     (if (if g$ls/false$10375$1XjQw
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$10376$1XjQw
                                                                    g$xrhs*$10377$1XjQw
                                                                    g$xbody$10378$1XjQw
                                                                    g$xbody*$10379$1XjQw)
                                                                  (if (not (g$valid-bound-ids?$8028$1XjQw
                                                                             g$xlhs*$10376$1XjQw))
                                                                    (g$syntax-violation$8412$1XjQw
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$10351$1XjQw)
                                                                    (void))))
                                                               g$ls/false$10375$1XjQw))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$10380$1XjQw
                                                              g$xrhs*$10381$1XjQw
                                                              g$xbody$10382$1XjQw
                                                              g$xbody*$10383$1XjQw)
                                                            ((case-lambda
                                                               ((g$xlab*$10384$1XjQw)
                                                                ((case-lambda
                                                                   ((g$xrib$10385$1XjQw)
                                                                    ((case-lambda
                                                                       ((g$xb*$10386$1XjQw)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$7952$1XjQw
                                                                              '#f
                                                                              (g$chi-expr*$8317$1XjQw
                                                                                (g$map$5757$1XjQw
                                                                                  (case-lambda
                                                                                    ((g$x$10387$1XjQw)
                                                                                     (g$add-subst$8013$1XjQw
                                                                                       g$xrib$10385$1XjQw
                                                                                       g$x$10387$1XjQw)))
                                                                                  (cons
                                                                                    g$xbody$10382$1XjQw
                                                                                    g$xbody*$10383$1XjQw))
                                                                                (append
                                                                                  (g$map$5757$1XjQw
                                                                                    cons
                                                                                    g$xlab*$10384$1XjQw
                                                                                    g$xb*$10386$1XjQw)
                                                                                  g$r$10352$1XjQw)
                                                                                (append
                                                                                  (g$map$5757$1XjQw
                                                                                    cons
                                                                                    g$xlab*$10384$1XjQw
                                                                                    g$xb*$10386$1XjQw)
                                                                                  g$mr$10353$1XjQw))))))))
                                                                     (g$map$5757$1XjQw
                                                                       (case-lambda
                                                                         ((g$x$10388$1XjQw)
                                                                          (g$make-eval-transformer$8055$1XjQw
                                                                            (g$expand-transformer$8346$1XjQw
                                                                              (if (eq? g$type$10362$1XjQw
                                                                                       'let-syntax)
                                                                                g$x$10388$1XjQw
                                                                                (g$add-subst$8013$1XjQw
                                                                                  g$xrib$10385$1XjQw
                                                                                  g$x$10388$1XjQw))
                                                                              g$mr$10353$1XjQw))))
                                                                       g$xrhs*$10381$1XjQw))))
                                                                 (g$make-full-rib$7991$1XjQw
                                                                   g$xlhs*$10380$1XjQw
                                                                   g$xlab*$10384$1XjQw))))
                                                             (g$map$5757$1XjQw
                                                               g$gen-label$7964$1XjQw
                                                               g$xlhs*$10380$1XjQw))))
                                                         g$ls/false$10375$1XjQw)
                                                       (g$syntax-violation$8412$1XjQw
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$10374$1XjQw))))
                                                  (g$syntax-dispatch$8301$1XjQw
                                                    g$t$10374$1XjQw
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$10351$1XjQw)
                                             (if (g$memv$5750$1XjQw
                                                   g$t$10363$1XjQw
                                                   '(displaced-lexical))
                                               (g$syntax-violation$8412$1XjQw
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$10351$1XjQw)
                                               (if (g$memv$5750$1XjQw
                                                     g$t$10363$1XjQw
                                                     '(syntax))
                                                 (g$syntax-violation$8412$1XjQw
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$10351$1XjQw)
                                                 (if (g$memv$5750$1XjQw
                                                       g$t$10363$1XjQw
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$8412$1XjQw
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$10389$1XjQw)
                                                           (if (g$memv$5750$1XjQw
                                                                 g$t$10389$1XjQw
                                                                 '(define))
                                                             '"a definition"
                                                             (if (g$memv$5750$1XjQw
                                                                   g$t$10389$1XjQw
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (g$memv$5750$1XjQw
                                                                     g$t$10389$1XjQw
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (g$memv$5750$1XjQw
                                                                       g$t$10389$1XjQw
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (g$memv$5750$1XjQw
                                                                         g$t$10389$1XjQw
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     (if (g$memv$5750$1XjQw
                                                                           g$t$10389$1XjQw
                                                                           '(export))
                                                                       '"an export declaration"
                                                                       '"a non-expression"))))))))
                                                        g$type$10362$1XjQw)
                                                       '" was found where an expression was expected")
                                                     g$e$10351$1XjQw)
                                                   (if (g$memv$5750$1XjQw
                                                         g$t$10363$1XjQw
                                                         '(mutable))
                                                     (g$syntax-violation$8412$1XjQw
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$10351$1XjQw)
                                                     (g$syntax-violation$8412$1XjQw
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$10351$1XjQw)))))))))))))))))))
                  g$type$10362$1XjQw)))
              g$kwd$10359$1XjQw
              g$value$10358$1XjQw
              g$type$10357$1XjQw)))))))
   (g$chi-set!$8320$1XjQw
     g$chi-set!$11811$1XjQw
     (case-lambda
       ((g$e$10390$1XjQw g$r$10391$1XjQw g$mr$10392$1XjQw)
        ((case-lambda
           ((g$t$10393$1XjQw)
            ((case-lambda
               ((g$ls/false$10394$1XjQw)
                (if (if g$ls/false$10394$1XjQw
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$10395$1XjQw g$v$10396$1XjQw)
                             (g$id?$8023$1XjQw g$x$10395$1XjQw)))
                          g$ls/false$10394$1XjQw))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$10397$1XjQw g$v$10398$1XjQw)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$8043$1XjQw
                              g$x$10397$1XjQw
                              g$r$10391$1XjQw)))
                         (case-lambda
                           ((g$type$10402$1XjQw
                              g$value$10403$1XjQw
                              g$kwd$10404$1XjQw)
                            ((case-lambda
                               ((g$kwd$10405$1XjQw
                                  g$value$10406$1XjQw
                                  g$type$10407$1XjQw)
                                ((case-lambda
                                   ((g$t$10408$1XjQw)
                                    (if (g$memv$5750$1XjQw
                                          g$t$10408$1XjQw
                                          '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$8247$1XjQw
                                          g$value$10406$1XjQw
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$8245$1XjQw
                                            g$value$10406$1XjQw)
                                          (g$chi-expr$8319$1XjQw
                                            g$v$10398$1XjQw
                                            g$r$10391$1XjQw
                                            g$mr$10392$1XjQw)))
                                      (if (g$memv$5750$1XjQw
                                            g$t$10408$1XjQw
                                            '(core-prim))
                                        (g$syntax-violation$8412$1XjQw
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$10390$1XjQw)
                                        (if (g$memv$5750$1XjQw
                                              g$t$10408$1XjQw
                                              '(global))
                                          (g$syntax-violation$8412$1XjQw
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$10390$1XjQw)
                                          (if (g$memv$5750$1XjQw
                                                g$t$10408$1XjQw
                                                '(global-macro!))
                                            (g$chi-expr$8319$1XjQw
                                              (g$chi-global-macro$8316$1XjQw
                                                g$value$10406$1XjQw
                                                g$e$10390$1XjQw)
                                              g$r$10391$1XjQw
                                              g$mr$10392$1XjQw)
                                            (if (g$memv$5750$1XjQw
                                                  g$t$10408$1XjQw
                                                  '(local-macro!))
                                              (g$chi-expr$8319$1XjQw
                                                (g$chi-local-macro$8315$1XjQw
                                                  g$value$10406$1XjQw
                                                  g$e$10390$1XjQw)
                                                g$r$10391$1XjQw
                                                g$mr$10392$1XjQw)
                                              (if (g$memv$5750$1XjQw
                                                    g$t$10408$1XjQw
                                                    '(mutable))
                                                (g$syntax-violation$8412$1XjQw
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$10390$1XjQw)
                                                (g$syntax-violation$8412$1XjQw
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$10390$1XjQw)))))))))
                                 g$type$10407$1XjQw)))
                             g$kwd$10404$1XjQw
                             g$value$10403$1XjQw
                             g$type$10402$1XjQw))))))
                    g$ls/false$10394$1XjQw)
                  (g$syntax-violation$8412$1XjQw
                    '#f
                    '"invalid syntax"
                    g$t$10393$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$10393$1XjQw '(_ any any)))))
         g$e$10390$1XjQw))))
   (g$verify-formals$8321$1XjQw
     g$verify-formals$11812$1XjQw
     (case-lambda
       ((g$fmls$10409$1XjQw g$stx$10410$1XjQw)
        ((case-lambda
           ((g$t$10411$1XjQw)
            ((case-lambda
               ((g$ls/false$10412$1XjQw)
                (if g$ls/false$10412$1XjQw
                  (apply
                    (case-lambda
                      ((g$x*$10413$1XjQw)
                       (if (not (g$valid-bound-ids?$8028$1XjQw
                                  g$x*$10413$1XjQw))
                         (g$invalid-fmls-error$8266$1XjQw
                           g$stx$10410$1XjQw
                           g$fmls$10409$1XjQw)
                         (void))))
                    g$ls/false$10412$1XjQw)
                  ((case-lambda
                     ((g$t$10414$1XjQw)
                      ((case-lambda
                         ((g$ls/false$10415$1XjQw)
                          (if g$ls/false$10415$1XjQw
                            (apply
                              (case-lambda
                                ((g$x*$10416$1XjQw g$x$10417$1XjQw)
                                 (if (not (g$valid-bound-ids?$8028$1XjQw
                                            (cons
                                              g$x$10417$1XjQw
                                              g$x*$10416$1XjQw)))
                                   (g$invalid-fmls-error$8266$1XjQw
                                     g$stx$10410$1XjQw
                                     g$fmls$10409$1XjQw)
                                   (void))))
                              g$ls/false$10415$1XjQw)
                            ((case-lambda
                               ((g$t$10418$1XjQw)
                                ((case-lambda
                                   ((g$ls/false$10419$1XjQw)
                                    (if g$ls/false$10419$1XjQw
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$8412$1XjQw
                                             '#f
                                             '"invalid syntax"
                                             g$stx$10410$1XjQw)))
                                        g$ls/false$10419$1XjQw)
                                      (g$syntax-violation$8412$1XjQw
                                        '#f
                                        '"invalid syntax"
                                        g$t$10418$1XjQw))))
                                 (g$syntax-dispatch$8301$1XjQw
                                   g$t$10418$1XjQw
                                   '_))))
                             g$t$10414$1XjQw))))
                       (g$syntax-dispatch$8301$1XjQw
                         g$t$10414$1XjQw
                         '#(each+ any () any)))))
                   g$t$10411$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$10411$1XjQw 'each-any))))
         g$fmls$10409$1XjQw))))
   (g$chi-lambda-clause$8322$1XjQw
     g$chi-lambda-clause$11813$1XjQw
     (case-lambda
       ((g$stx$10420$1XjQw
          g$fmls$10421$1XjQw
          g$body*$10422$1XjQw
          g$r$10423$1XjQw
          g$mr$10424$1XjQw)
        ((case-lambda
           ((g$t$10425$1XjQw)
            ((case-lambda
               ((g$ls/false$10426$1XjQw)
                (if g$ls/false$10426$1XjQw
                  (apply
                    (case-lambda
                      ((g$x*$10427$1XjQw)
                       (begin
                         (g$verify-formals$8321$1XjQw
                           g$fmls$10421$1XjQw
                           g$stx$10420$1XjQw)
                         ((case-lambda
                            ((g$lex*$10428$1XjQw g$lab*$10429$1XjQw)
                             (values
                               g$lex*$10428$1XjQw
                               (g$chi-internal$8330$1XjQw
                                 (g$add-subst$8013$1XjQw
                                   (g$make-full-rib$7991$1XjQw
                                     g$x*$10427$1XjQw
                                     g$lab*$10429$1XjQw)
                                   g$body*$10422$1XjQw)
                                 (g$add-lexicals$8249$1XjQw
                                   g$lab*$10429$1XjQw
                                   g$lex*$10428$1XjQw
                                   g$r$10423$1XjQw)
                                 g$mr$10424$1XjQw))))
                          (g$map$5757$1XjQw
                            g$gen-lexical$7962$1XjQw
                            g$x*$10427$1XjQw)
                          (g$map$5757$1XjQw
                            g$gen-label$7964$1XjQw
                            g$x*$10427$1XjQw)))))
                    g$ls/false$10426$1XjQw)
                  ((case-lambda
                     ((g$t$10430$1XjQw)
                      ((case-lambda
                         ((g$ls/false$10431$1XjQw)
                          (if g$ls/false$10431$1XjQw
                            (apply
                              (case-lambda
                                ((g$x*$10432$1XjQw g$x$10433$1XjQw)
                                 (begin
                                   (g$verify-formals$8321$1XjQw
                                     g$fmls$10421$1XjQw
                                     g$stx$10420$1XjQw)
                                   ((case-lambda
                                      ((g$lex*$10434$1XjQw
                                         g$lab*$10435$1XjQw
                                         g$lex$10436$1XjQw
                                         g$lab$10437$1XjQw)
                                       (values
                                         (append
                                           g$lex*$10434$1XjQw
                                           g$lex$10436$1XjQw)
                                         (g$chi-internal$8330$1XjQw
                                           (g$add-subst$8013$1XjQw
                                             (g$make-full-rib$7991$1XjQw
                                               (cons
                                                 g$x$10433$1XjQw
                                                 g$x*$10432$1XjQw)
                                               (cons
                                                 g$lab$10437$1XjQw
                                                 g$lab*$10435$1XjQw))
                                             g$body*$10422$1XjQw)
                                           (g$add-lexicals$8249$1XjQw
                                             (cons
                                               g$lab$10437$1XjQw
                                               g$lab*$10435$1XjQw)
                                             (cons
                                               g$lex$10436$1XjQw
                                               g$lex*$10434$1XjQw)
                                             g$r$10423$1XjQw)
                                           g$mr$10424$1XjQw))))
                                    (g$map$5757$1XjQw
                                      g$gen-lexical$7962$1XjQw
                                      g$x*$10432$1XjQw)
                                    (g$map$5757$1XjQw
                                      g$gen-label$7964$1XjQw
                                      g$x*$10432$1XjQw)
                                    (g$gen-lexical$7962$1XjQw g$x$10433$1XjQw)
                                    (g$gen-label$7964$1XjQw g$x$10433$1XjQw)))))
                              g$ls/false$10431$1XjQw)
                            ((case-lambda
                               ((g$t$10438$1XjQw)
                                ((case-lambda
                                   ((g$ls/false$10439$1XjQw)
                                    (if g$ls/false$10439$1XjQw
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$8412$1XjQw
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$10421$1XjQw)))
                                        g$ls/false$10439$1XjQw)
                                      (g$syntax-violation$8412$1XjQw
                                        '#f
                                        '"invalid syntax"
                                        g$t$10438$1XjQw))))
                                 (g$syntax-dispatch$8301$1XjQw
                                   g$t$10438$1XjQw
                                   '_))))
                             g$t$10430$1XjQw))))
                       (g$syntax-dispatch$8301$1XjQw
                         g$t$10430$1XjQw
                         '#(each+ any () any)))))
                   g$t$10425$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$10425$1XjQw 'each-any))))
         g$fmls$10421$1XjQw))))
   (g$chi-lambda-clause*$8323$1XjQw
     g$chi-lambda-clause*$11814$1XjQw
     (case-lambda
       ((g$stx$10440$1XjQw
          g$fmls*$10441$1XjQw
          g$body**$10442$1XjQw
          g$r$10443$1XjQw
          g$mr$10444$1XjQw)
        (if (null? g$fmls*$10441$1XjQw)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$8322$1XjQw
                 g$stx$10440$1XjQw
                 (car g$fmls*$10441$1XjQw)
                 (car g$body**$10442$1XjQw)
                 g$r$10443$1XjQw
                 g$mr$10444$1XjQw)))
            (case-lambda
              ((g$a$10447$1XjQw g$b$10448$1XjQw)
               ((case-lambda
                  ((g$b$10449$1XjQw g$a$10450$1XjQw)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$8323$1XjQw
                          g$stx$10440$1XjQw
                          (cdr g$fmls*$10441$1XjQw)
                          (cdr g$body**$10442$1XjQw)
                          g$r$10443$1XjQw
                          g$mr$10444$1XjQw)))
                     (case-lambda
                       ((g$a*$10453$1XjQw g$b*$10454$1XjQw)
                        ((case-lambda
                           ((g$b*$10455$1XjQw g$a*$10456$1XjQw)
                            (values
                              (cons g$a$10450$1XjQw g$a*$10456$1XjQw)
                              (cons g$b$10449$1XjQw g$b*$10455$1XjQw))))
                         g$b*$10454$1XjQw
                         g$a*$10453$1XjQw))))))
                g$b$10448$1XjQw
                g$a$10447$1XjQw))))))))
   (g$chi-defun$8324$1XjQw
     g$chi-defun$11815$1XjQw
     (case-lambda
       ((g$x$10457$1XjQw g$r$10458$1XjQw g$mr$10459$1XjQw)
        ((case-lambda
           ((g$fmls$10460$1XjQw g$body*$10461$1XjQw)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$8322$1XjQw
                   g$fmls$10460$1XjQw
                   g$fmls$10460$1XjQw
                   g$body*$10461$1XjQw
                   g$r$10458$1XjQw
                   g$mr$10459$1XjQw)))
              (case-lambda
                ((g$fmls$10464$1XjQw g$body$10465$1XjQw)
                 ((case-lambda
                    ((g$body$10466$1XjQw g$fmls$10467$1XjQw)
                     (g$build-lambda$7949$1XjQw
                       '#f
                       g$fmls$10467$1XjQw
                       g$body$10466$1XjQw)))
                  g$body$10465$1XjQw
                  g$fmls$10464$1XjQw))))))
         (car g$x$10457$1XjQw)
         (cdr g$x$10457$1XjQw)))))
   (g$chi-rhs$8325$1XjQw
     g$chi-rhs$11816$1XjQw
     (case-lambda
       ((g$rhs$10468$1XjQw g$r$10469$1XjQw g$mr$10470$1XjQw)
        ((case-lambda
           ((g$t$10471$1XjQw)
            (if (g$memv$5750$1XjQw g$t$10471$1XjQw '(defun))
              (g$chi-defun$8324$1XjQw
                (cdr g$rhs$10468$1XjQw)
                g$r$10469$1XjQw
                g$mr$10470$1XjQw)
              (if (g$memv$5750$1XjQw g$t$10471$1XjQw '(expr))
                ((case-lambda
                   ((g$expr$10472$1XjQw)
                    (g$chi-expr$8319$1XjQw
                      g$expr$10472$1XjQw
                      g$r$10469$1XjQw
                      g$mr$10470$1XjQw)))
                 (cdr g$rhs$10468$1XjQw))
                (if (g$memv$5750$1XjQw g$t$10471$1XjQw '(top-expr))
                  ((case-lambda
                     ((g$expr$10473$1XjQw)
                      (g$build-sequence$7952$1XjQw
                        '#f
                        (list
                          (g$chi-expr$8319$1XjQw
                            g$expr$10473$1XjQw
                            g$r$10469$1XjQw
                            g$mr$10470$1XjQw)
                          (g$build-void$7953$1XjQw)))))
                   (cdr g$rhs$10468$1XjQw))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$10468$1XjQw))))))
         (car g$rhs$10468$1XjQw)))))
   (g$expand-interaction-rhs*/init*$8326$1XjQw
     g$expand-interaction-rhs*/init*$11817$1XjQw
     (case-lambda
       ((g$lhs*$10474$1XjQw
          g$rhs*$10475$1XjQw
          g$init*$10476$1XjQw
          g$r$10477$1XjQw
          g$mr$10478$1XjQw)
        ((letrec ((g$f$10479$1XjQw
                    (case-lambda
                      ((g$lhs*$10480$1XjQw g$rhs*$10481$1XjQw)
                       (if (null? g$lhs*$10480$1XjQw)
                         (g$map$5757$1XjQw
                           (case-lambda
                             ((g$x$10482$1XjQw)
                              (g$chi-expr$8319$1XjQw
                                g$x$10482$1XjQw
                                g$r$10477$1XjQw
                                g$mr$10478$1XjQw)))
                           g$init*$10476$1XjQw)
                         ((case-lambda
                            ((g$lhs$10483$1XjQw g$rhs$10484$1XjQw)
                             ((case-lambda
                                ((g$t$10485$1XjQw)
                                 (if (g$memv$5750$1XjQw
                                       g$t$10485$1XjQw
                                       '(defun))
                                   ((case-lambda
                                      ((g$rhs$10486$1XjQw)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$10483$1XjQw
                                           g$rhs$10486$1XjQw)
                                         (g$f$10479$1XjQw
                                           (cdr g$lhs*$10480$1XjQw)
                                           (cdr g$rhs*$10481$1XjQw)))))
                                    (g$chi-defun$8324$1XjQw
                                      (cdr g$rhs$10484$1XjQw)
                                      g$r$10477$1XjQw
                                      g$mr$10478$1XjQw))
                                   (if (g$memv$5750$1XjQw
                                         g$t$10485$1XjQw
                                         '(expr))
                                     ((case-lambda
                                        ((g$rhs$10487$1XjQw)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$10483$1XjQw
                                             g$rhs$10487$1XjQw)
                                           (g$f$10479$1XjQw
                                             (cdr g$lhs*$10480$1XjQw)
                                             (cdr g$rhs*$10481$1XjQw)))))
                                      (g$chi-expr$8319$1XjQw
                                        (cdr g$rhs$10484$1XjQw)
                                        g$r$10477$1XjQw
                                        g$mr$10478$1XjQw))
                                     (if (g$memv$5750$1XjQw
                                           g$t$10485$1XjQw
                                           '(top-expr))
                                       ((case-lambda
                                          ((g$e$10488$1XjQw)
                                           (cons
                                             g$e$10488$1XjQw
                                             (g$f$10479$1XjQw
                                               (cdr g$lhs*$10480$1XjQw)
                                               (cdr g$rhs*$10481$1XjQw)))))
                                        (g$chi-expr$8319$1XjQw
                                          (cdr g$rhs$10484$1XjQw)
                                          g$r$10477$1XjQw
                                          g$mr$10478$1XjQw))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$10484$1XjQw))))))
                              (car g$rhs$10484$1XjQw))))
                          (car g$lhs*$10480$1XjQw)
                          (car g$rhs*$10481$1XjQw)))))))
           g$f$10479$1XjQw)
         g$lhs*$10474$1XjQw
         g$rhs*$10475$1XjQw))))
   (g$chi-rhs*$8327$1XjQw
     g$chi-rhs*$11818$1XjQw
     (case-lambda
       ((g$rhs*$10489$1XjQw g$r$10490$1XjQw g$mr$10491$1XjQw)
        ((letrec ((g$f$10492$1XjQw
                    (case-lambda
                      ((g$ls$10493$1XjQw)
                       (if (null? g$ls$10493$1XjQw)
                         '()
                         ((case-lambda
                            ((g$a$10494$1XjQw)
                             (cons
                               g$a$10494$1XjQw
                               (g$f$10492$1XjQw (cdr g$ls$10493$1XjQw)))))
                          (g$chi-rhs$8325$1XjQw
                            (car g$ls$10493$1XjQw)
                            g$r$10490$1XjQw
                            g$mr$10491$1XjQw)))))))
           g$f$10492$1XjQw)
         g$rhs*$10489$1XjQw))))
   (g$find-bound=?$8328$1XjQw
     g$find-bound=?$11819$1XjQw
     (case-lambda
       ((g$x$10495$1XjQw g$lhs*$10496$1XjQw g$rhs*$10497$1XjQw)
        (if (null? g$lhs*$10496$1XjQw)
          '#f
          (if (g$bound-id=?$8026$1XjQw g$x$10495$1XjQw (car g$lhs*$10496$1XjQw))
            (car g$rhs*$10497$1XjQw)
            (g$find-bound=?$8328$1XjQw
              g$x$10495$1XjQw
              (cdr g$lhs*$10496$1XjQw)
              (cdr g$rhs*$10497$1XjQw)))))))
   (g$find-dups$8329$1XjQw
     g$find-dups$11820$1XjQw
     (case-lambda
       ((g$ls$10498$1XjQw)
        ((letrec ((g$f$10499$1XjQw
                    (case-lambda
                      ((g$ls$10500$1XjQw g$dups$10501$1XjQw)
                       (if (null? g$ls$10500$1XjQw)
                         g$dups$10501$1XjQw
                         ((case-lambda
                            ((g$t$10502$1XjQw)
                             (if g$t$10502$1XjQw
                               ((case-lambda
                                  ((g$x$10503$1XjQw)
                                   (g$f$10499$1XjQw
                                     (cdr g$ls$10500$1XjQw)
                                     (cons
                                       (list
                                         (car g$ls$10500$1XjQw)
                                         g$x$10503$1XjQw)
                                       g$dups$10501$1XjQw))))
                                g$t$10502$1XjQw)
                               (g$f$10499$1XjQw
                                 (cdr g$ls$10500$1XjQw)
                                 g$dups$10501$1XjQw))))
                          (g$find-bound=?$8328$1XjQw
                            (car g$ls$10500$1XjQw)
                            (cdr g$ls$10500$1XjQw)
                            (cdr g$ls$10500$1XjQw))))))))
           g$f$10499$1XjQw)
         g$ls$10498$1XjQw
         '()))))
   (g$chi-internal$8330$1XjQw
     g$chi-internal$11821$1XjQw
     (case-lambda
       ((g$e*$10504$1XjQw g$r$10505$1XjQw g$mr$10506$1XjQw)
        ((case-lambda
           ((g$rib$10507$1XjQw)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$8345$1XjQw
                   (g$map$5757$1XjQw
                     (case-lambda
                       ((g$x$10516$1XjQw)
                        (g$add-subst$8013$1XjQw
                          g$rib$10507$1XjQw
                          g$x$10516$1XjQw)))
                     (g$syntax->list$8022$1XjQw g$e*$10504$1XjQw))
                   g$r$10505$1XjQw
                   g$mr$10506$1XjQw
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$10507$1XjQw
                   '#f)))
              (case-lambda
                ((g$e*$10517$1XjQw
                   g$r$10518$1XjQw
                   g$mr$10519$1XjQw
                   g$lex*$10520$1XjQw
                   g$rhs*$10521$1XjQw
                   g$mod**$10522$1XjQw
                   g$kwd*$10523$1XjQw
                   g$_exp*$10524$1XjQw)
                 ((case-lambda
                    ((g$_exp*$10525$1XjQw
                       g$kwd*$10526$1XjQw
                       g$mod**$10527$1XjQw
                       g$rhs*$10528$1XjQw
                       g$lex*$10529$1XjQw
                       g$mr$10530$1XjQw
                       g$r$10531$1XjQw
                       g$e*$10532$1XjQw)
                     (begin
                       (if (null? g$e*$10532$1XjQw)
                         (g$syntax-violation$8412$1XjQw
                           '#f
                           '"no expression in body"
                           g$e*$10532$1XjQw)
                         (void))
                       ((case-lambda
                          ((g$init*$10533$1XjQw)
                           ((case-lambda
                              ((g$rhs*$10534$1XjQw)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$7955$1XjQw
                                     '#f
                                     (reverse g$lex*$10529$1XjQw)
                                     (reverse g$rhs*$10534$1XjQw)
                                     (g$build-sequence$7952$1XjQw
                                       '#f
                                       g$init*$10533$1XjQw)))))))
                            (g$chi-rhs*$8327$1XjQw
                              g$rhs*$10528$1XjQw
                              g$r$10531$1XjQw
                              g$mr$10530$1XjQw))))
                        (g$chi-expr*$8317$1XjQw
                          (append
                            (apply append (reverse g$mod**$10527$1XjQw))
                            g$e*$10532$1XjQw)
                          g$r$10531$1XjQw
                          g$mr$10530$1XjQw)))))
                  g$_exp*$10524$1XjQw
                  g$kwd*$10523$1XjQw
                  g$mod**$10522$1XjQw
                  g$rhs*$10521$1XjQw
                  g$lex*$10520$1XjQw
                  g$mr$10519$1XjQw
                  g$r$10518$1XjQw
                  g$e*$10517$1XjQw))))))
         (g$make-empty-rib$7983$1XjQw)))))
   (g$parse-module$8331$1XjQw
     g$parse-module$11822$1XjQw
     (case-lambda
       ((g$e$10535$1XjQw)
        ((case-lambda
           ((g$t$10536$1XjQw)
            ((case-lambda
               ((g$ls/false$10537$1XjQw)
                (if g$ls/false$10537$1XjQw
                  (apply
                    (case-lambda
                      ((g$export*$10538$1XjQw g$b*$10539$1XjQw)
                       (begin
                         (if (not (g$for-all$5755$1XjQw
                                    g$id?$8023$1XjQw
                                    g$export*$10538$1XjQw))
                           (g$syntax-violation$8412$1XjQw
                             '#f
                             '"module exports must be identifiers"
                             g$e$10535$1XjQw)
                           (void))
                         (values
                           '#f
                           (list->vector g$export*$10538$1XjQw)
                           g$b*$10539$1XjQw))))
                    g$ls/false$10537$1XjQw)
                  ((case-lambda
                     ((g$t$10540$1XjQw)
                      ((case-lambda
                         ((g$ls/false$10541$1XjQw)
                          (if g$ls/false$10541$1XjQw
                            (apply
                              (case-lambda
                                ((g$name$10542$1XjQw
                                   g$export*$10543$1XjQw
                                   g$b*$10544$1XjQw)
                                 (begin
                                   (if (not (g$id?$8023$1XjQw
                                              g$name$10542$1XjQw))
                                     (g$syntax-violation$8412$1XjQw
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$10535$1XjQw)
                                     (void))
                                   (if (not (g$for-all$5755$1XjQw
                                              g$id?$8023$1XjQw
                                              g$export*$10543$1XjQw))
                                     (g$syntax-violation$8412$1XjQw
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$10535$1XjQw)
                                     (void))
                                   (values
                                     g$name$10542$1XjQw
                                     (list->vector g$export*$10543$1XjQw)
                                     g$b*$10544$1XjQw))))
                              g$ls/false$10541$1XjQw)
                            (g$syntax-violation$8412$1XjQw
                              '#f
                              '"invalid syntax"
                              g$t$10540$1XjQw))))
                       (g$syntax-dispatch$8301$1XjQw
                         g$t$10540$1XjQw
                         '(_ any each-any . each-any)))))
                   g$t$10536$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw
               g$t$10536$1XjQw
               '(_ each-any . each-any)))))
         g$e$10535$1XjQw))))
   (g$9444$8332$1XjQw
     g$9444$11823$1XjQw
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$9447$1XjQw
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$9446$8333$1XjQw g$9446$11824$1XjQw '#f)
   (g$9445$8334$1XjQw
     g$9445$11825$1XjQw
     (make-record-constructor-descriptor
       g$9444$8332$1XjQw
       '#f
       g$9446$8333$1XjQw))
   (g$module-interface?$8335$1XjQw
     g$module-interface?$11826$1XjQw
     (record-predicate g$9444$8332$1XjQw))
   (g$make-module-interface$8336$1XjQw
     g$make-module-interface$11827$1XjQw
     (record-constructor g$9445$8334$1XjQw))
   (g$module-interface-first-mark$8337$1XjQw
     g$module-interface-first-mark$11828$1XjQw
     (record-accessor g$9444$8332$1XjQw '0))
   (g$module-interface-exp-id-vec$8338$1XjQw
     g$module-interface-exp-id-vec$11829$1XjQw
     (record-accessor g$9444$8332$1XjQw '1))
   (g$module-interface-exp-lab-vec$8339$1XjQw
     g$module-interface-exp-lab-vec$11830$1XjQw
     (record-accessor g$9444$8332$1XjQw '2))
   (g$set-module-interface-first-mark!$8340$1XjQw
     g$set-module-interface-first-mark!$11831$1XjQw
     (record-mutator g$9444$8332$1XjQw '0))
   (g$set-module-interface-exp-id-vec!$8341$1XjQw
     g$set-module-interface-exp-id-vec!$11832$1XjQw
     (record-mutator g$9444$8332$1XjQw '1))
   (g$set-module-interface-exp-lab-vec!$8342$1XjQw
     g$set-module-interface-exp-lab-vec!$11833$1XjQw
     (record-mutator g$9444$8332$1XjQw '2))
   (g$module-interface-exp-id*$8343$1XjQw
     g$module-interface-exp-id*$11834$1XjQw
     (case-lambda
       ((g$iface$10545$1XjQw g$id$10546$1XjQw)
        (letrec* ((g$diff-marks$10547$1XjQw
                    (case-lambda
                      ((g$ls$10551$1XjQw g$x$10552$1XjQw)
                       (begin
                         (if (null? g$ls$10551$1XjQw)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$10553$1XjQw)
                             (if (eq? g$a$10553$1XjQw g$x$10552$1XjQw)
                               '()
                               (cons
                                 g$a$10553$1XjQw
                                 (g$diff-marks$10547$1XjQw
                                   (cdr g$ls$10551$1XjQw)
                                   g$x$10552$1XjQw)))))
                          (car g$ls$10551$1XjQw)))))))
          ((case-lambda
             ((g$diff$10548$1XjQw g$id-vec$10549$1XjQw)
              (if (null? g$diff$10548$1XjQw)
                g$id-vec$10549$1XjQw
                (vector-map
                  (case-lambda
                    ((g$x$10550$1XjQw)
                     (g$make-stx$7996$1XjQw
                       (g$stx-expr$7997$1XjQw g$x$10550$1XjQw)
                       (append
                         g$diff$10548$1XjQw
                         (g$stx-mark*$7998$1XjQw g$x$10550$1XjQw))
                       '()
                       '())))
                  g$id-vec$10549$1XjQw))))
           (g$diff-marks$10547$1XjQw
             (g$stx-mark*$7998$1XjQw g$id$10546$1XjQw)
             (g$module-interface-first-mark$8337$1XjQw g$iface$10545$1XjQw))
           (g$module-interface-exp-id-vec$8338$1XjQw g$iface$10545$1XjQw))))))
   (g$chi-internal-module$8344$1XjQw
     g$chi-internal-module$11835$1XjQw
     (case-lambda
       ((g$e$10554$1XjQw
          g$r$10555$1XjQw
          g$mr$10556$1XjQw
          g$lex*$10557$1XjQw
          g$rhs*$10558$1XjQw
          g$mod**$10559$1XjQw
          g$kwd*$10560$1XjQw)
        (call-with-values
          (case-lambda (() (g$parse-module$8331$1XjQw g$e$10554$1XjQw)))
          (case-lambda
            ((g$name$10564$1XjQw g$exp-id*$10565$1XjQw g$e*$10566$1XjQw)
             ((case-lambda
                ((g$e*$10567$1XjQw g$exp-id*$10568$1XjQw g$name$10569$1XjQw)
                 ((case-lambda
                    ((g$rib$10570$1XjQw)
                     ((case-lambda
                        ((g$e*$10571$1XjQw)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$8345$1XjQw
                                    g$e*$10571$1XjQw
                                    g$r$10555$1XjQw
                                    g$mr$10556$1XjQw
                                    g$lex*$10557$1XjQw
                                    g$rhs*$10558$1XjQw
                                    g$mod**$10559$1XjQw
                                    g$kwd*$10560$1XjQw
                                    '()
                                    g$rib$10570$1XjQw
                                    '#f)))
                               (case-lambda
                                 ((g$e*$10580$1XjQw
                                    g$r$10581$1XjQw
                                    g$mr$10582$1XjQw
                                    g$lex*$10583$1XjQw
                                    g$rhs*$10584$1XjQw
                                    g$mod**$10585$1XjQw
                                    g$kwd*$10586$1XjQw
                                    g$_exp*$10587$1XjQw)
                                  ((case-lambda
                                     ((g$_exp*$10588$1XjQw
                                        g$kwd*$10589$1XjQw
                                        g$mod**$10590$1XjQw
                                        g$rhs*$10591$1XjQw
                                        g$lex*$10592$1XjQw
                                        g$mr$10593$1XjQw
                                        g$r$10594$1XjQw
                                        g$e*$10595$1XjQw)
                                      ((case-lambda
                                         ((g$exp-lab*$10596$1XjQw
                                            g$mod**$10597$1XjQw)
                                          (if (not g$name$10569$1XjQw)
                                            (values
                                              g$lex*$10592$1XjQw
                                              g$rhs*$10591$1XjQw
                                              g$exp-id*$10568$1XjQw
                                              g$exp-lab*$10596$1XjQw
                                              g$r$10594$1XjQw
                                              g$mr$10593$1XjQw
                                              g$mod**$10597$1XjQw
                                              g$kwd*$10589$1XjQw)
                                            ((case-lambda
                                               ((g$lab$10598$1XjQw
                                                  g$iface$10599$1XjQw)
                                                (values
                                                  g$lex*$10592$1XjQw
                                                  g$rhs*$10591$1XjQw
                                                  (vector g$name$10569$1XjQw)
                                                  (vector g$lab$10598$1XjQw)
                                                  (cons
                                                    (cons
                                                      g$lab$10598$1XjQw
                                                      (cons
                                                        '$module
                                                        g$iface$10599$1XjQw))
                                                    g$r$10594$1XjQw)
                                                  (cons
                                                    (cons
                                                      g$lab$10598$1XjQw
                                                      (cons
                                                        '$module
                                                        g$iface$10599$1XjQw))
                                                    g$mr$10593$1XjQw)
                                                  g$mod**$10597$1XjQw
                                                  g$kwd*$10589$1XjQw)))
                                             (g$gen-label$7964$1XjQw 'module)
                                             (g$make-module-interface$8336$1XjQw
                                               (car (g$stx-mark*$7998$1XjQw
                                                      g$name$10569$1XjQw))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$10600$1XjQw)
                                                    (g$make-stx$7996$1XjQw
                                                      (g$stx-expr$7997$1XjQw
                                                        g$x$10600$1XjQw)
                                                      (g$stx-mark*$7998$1XjQw
                                                        g$x$10600$1XjQw)
                                                      '()
                                                      '())))
                                                 g$exp-id*$10568$1XjQw)
                                               g$exp-lab*$10596$1XjQw)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$10601$1XjQw)
                                            ((case-lambda
                                               ((g$t$10602$1XjQw)
                                                (if g$t$10602$1XjQw
                                                  g$t$10602$1XjQw
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$8412$1XjQw
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$10601$1XjQw)))))
                                             (g$id->label$8036$1XjQw
                                               (g$make-stx$7996$1XjQw
                                                 (g$id->sym$8024$1XjQw
                                                   g$x$10601$1XjQw)
                                                 (g$stx-mark*$7998$1XjQw
                                                   g$x$10601$1XjQw)
                                                 (list g$rib$10570$1XjQw)
                                                 '())))))
                                         g$exp-id*$10568$1XjQw)
                                       (cons
                                         g$e*$10595$1XjQw
                                         g$mod**$10590$1XjQw))))
                                   g$_exp*$10587$1XjQw
                                   g$kwd*$10586$1XjQw
                                   g$mod**$10585$1XjQw
                                   g$rhs*$10584$1XjQw
                                   g$lex*$10583$1XjQw
                                   g$mr$10582$1XjQw
                                   g$r$10581$1XjQw
                                   g$e*$10580$1XjQw)))))))))
                      (g$map$5757$1XjQw
                        (case-lambda
                          ((g$x$10603$1XjQw)
                           (g$add-subst$8013$1XjQw
                             g$rib$10570$1XjQw
                             g$x$10603$1XjQw)))
                        (g$syntax->list$8022$1XjQw g$e*$10567$1XjQw)))))
                  (g$make-empty-rib$7983$1XjQw))))
              g$e*$10566$1XjQw
              g$exp-id*$10565$1XjQw
              g$name$10564$1XjQw)))))))
   (g$chi-body*$8345$1XjQw
     g$chi-body*$11836$1XjQw
     (case-lambda
       ((g$e*$10604$1XjQw
          g$r$10605$1XjQw
          g$mr$10606$1XjQw
          g$lex*$10607$1XjQw
          g$rhs*$10608$1XjQw
          g$mod**$10609$1XjQw
          g$kwd*$10610$1XjQw
          g$exp*$10611$1XjQw
          g$rib$10612$1XjQw
          g$top?$10613$1XjQw)
        (if (null? g$e*$10604$1XjQw)
          (values
            g$e*$10604$1XjQw
            g$r$10605$1XjQw
            g$mr$10606$1XjQw
            g$lex*$10607$1XjQw
            g$rhs*$10608$1XjQw
            g$mod**$10609$1XjQw
            g$kwd*$10610$1XjQw
            g$exp*$10611$1XjQw)
          ((case-lambda
             ((g$e$10614$1XjQw)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$8043$1XjQw g$e$10614$1XjQw g$r$10605$1XjQw)))
                (case-lambda
                  ((g$type$10618$1XjQw g$value$10619$1XjQw g$kwd$10620$1XjQw)
                   ((case-lambda
                      ((g$kwd$10621$1XjQw
                         g$value$10622$1XjQw
                         g$type$10623$1XjQw)
                       ((case-lambda
                          ((g$kwd*$10624$1XjQw)
                           ((case-lambda
                              ((g$t$10625$1XjQw)
                               (if (g$memv$5750$1XjQw g$t$10625$1XjQw '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$8241$1XjQw
                                        g$e$10614$1XjQw)))
                                   (case-lambda
                                     ((g$id$10628$1XjQw g$rhs$10629$1XjQw)
                                      ((case-lambda
                                         ((g$rhs$10630$1XjQw g$id$10631$1XjQw)
                                          (begin
                                            (if (g$bound-id-member?$8030$1XjQw
                                                  g$id$10631$1XjQw
                                                  g$kwd*$10624$1XjQw)
                                              (g$syntax-violation$8412$1XjQw
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$10614$1XjQw)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7966$1XjQw
                                                   g$id$10631$1XjQw
                                                   g$rib$10612$1XjQw)))
                                              (case-lambda
                                                ((g$lab$10634$1XjQw
                                                   g$lex$10635$1XjQw)
                                                 ((case-lambda
                                                    ((g$lex$10636$1XjQw
                                                       g$lab$10637$1XjQw)
                                                     (begin
                                                       (g$extend-rib!$7986$1XjQw
                                                         g$rib$10612$1XjQw
                                                         g$id$10631$1XjQw
                                                         g$lab$10637$1XjQw)
                                                       (g$chi-body*$8345$1XjQw
                                                         (cdr g$e*$10604$1XjQw)
                                                         (g$add-lexical$8248$1XjQw
                                                           g$lab$10637$1XjQw
                                                           g$lex$10636$1XjQw
                                                           g$r$10605$1XjQw)
                                                         g$mr$10606$1XjQw
                                                         (cons
                                                           g$lex$10636$1XjQw
                                                           g$lex*$10607$1XjQw)
                                                         (cons
                                                           g$rhs$10630$1XjQw
                                                           g$rhs*$10608$1XjQw)
                                                         g$mod**$10609$1XjQw
                                                         g$kwd*$10624$1XjQw
                                                         g$exp*$10611$1XjQw
                                                         g$rib$10612$1XjQw
                                                         g$top?$10613$1XjQw))))
                                                  g$lex$10635$1XjQw
                                                  g$lab$10634$1XjQw)))))))
                                       g$rhs$10629$1XjQw
                                       g$id$10628$1XjQw))))
                                 (if (g$memv$5750$1XjQw
                                       g$t$10625$1XjQw
                                       '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$8242$1XjQw
                                          g$e$10614$1XjQw)))
                                     (case-lambda
                                       ((g$id$10640$1XjQw g$rhs$10641$1XjQw)
                                        ((case-lambda
                                           ((g$rhs$10642$1XjQw g$id$10643$1XjQw)
                                            (begin
                                              (if (g$bound-id-member?$8030$1XjQw
                                                    g$id$10643$1XjQw
                                                    g$kwd*$10624$1XjQw)
                                                (g$syntax-violation$8412$1XjQw
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$10614$1XjQw)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$10644$1XjQw
                                                    g$expanded-rhs$10645$1XjQw)
                                                  (begin
                                                    (g$extend-rib!$7986$1XjQw
                                                      g$rib$10612$1XjQw
                                                      g$id$10643$1XjQw
                                                      g$lab$10644$1XjQw)
                                                    ((case-lambda
                                                       ((g$b$10646$1XjQw)
                                                        (g$chi-body*$8345$1XjQw
                                                          (cdr g$e*$10604$1XjQw)
                                                          (cons
                                                            (cons
                                                              g$lab$10644$1XjQw
                                                              g$b$10646$1XjQw)
                                                            g$r$10605$1XjQw)
                                                          (cons
                                                            (cons
                                                              g$lab$10644$1XjQw
                                                              g$b$10646$1XjQw)
                                                            g$mr$10606$1XjQw)
                                                          g$lex*$10607$1XjQw
                                                          g$rhs*$10608$1XjQw
                                                          g$mod**$10609$1XjQw
                                                          g$kwd*$10624$1XjQw
                                                          g$exp*$10611$1XjQw
                                                          g$rib$10612$1XjQw
                                                          g$top?$10613$1XjQw)))
                                                     (g$make-eval-transformer$8055$1XjQw
                                                       g$expanded-rhs$10645$1XjQw)))))
                                               (g$gen-define-label$7967$1XjQw
                                                 g$id$10643$1XjQw
                                                 g$rib$10612$1XjQw)
                                               (g$expand-transformer$8346$1XjQw
                                                 g$rhs$10642$1XjQw
                                                 g$mr$10606$1XjQw)))))
                                         g$rhs$10641$1XjQw
                                         g$id$10640$1XjQw))))
                                   (if (g$memv$5750$1XjQw
                                         g$t$10625$1XjQw
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$10647$1XjQw)
                                         ((case-lambda
                                            ((g$ls/false$10648$1XjQw)
                                             (if (if g$ls/false$10648$1XjQw
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$10649$1XjQw
                                                            g$xrhs*$10650$1XjQw
                                                            g$xbody*$10651$1XjQw)
                                                          (if (not (g$valid-bound-ids?$8028$1XjQw
                                                                     g$xlhs*$10649$1XjQw))
                                                            (g$syntax-violation$8412$1XjQw
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$10614$1XjQw)
                                                            (void))))
                                                       g$ls/false$10648$1XjQw))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$10652$1XjQw
                                                      g$xrhs*$10653$1XjQw
                                                      g$xbody*$10654$1XjQw)
                                                    ((case-lambda
                                                       ((g$xlab*$10655$1XjQw)
                                                        ((case-lambda
                                                           ((g$xrib$10656$1XjQw)
                                                            ((case-lambda
                                                               ((g$xb*$10657$1XjQw)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$8345$1XjQw
                                                                      (append
                                                                        (g$map$5757$1XjQw
                                                                          (case-lambda
                                                                            ((g$x$10658$1XjQw)
                                                                             (g$add-subst$8013$1XjQw
                                                                               g$xrib$10656$1XjQw
                                                                               g$x$10658$1XjQw)))
                                                                          g$xbody*$10654$1XjQw)
                                                                        (cdr g$e*$10604$1XjQw))
                                                                      (append
                                                                        (g$map$5757$1XjQw
                                                                          cons
                                                                          g$xlab*$10655$1XjQw
                                                                          g$xb*$10657$1XjQw)
                                                                        g$r$10605$1XjQw)
                                                                      (append
                                                                        (g$map$5757$1XjQw
                                                                          cons
                                                                          g$xlab*$10655$1XjQw
                                                                          g$xb*$10657$1XjQw)
                                                                        g$mr$10606$1XjQw)
                                                                      g$lex*$10607$1XjQw
                                                                      g$rhs*$10608$1XjQw
                                                                      g$mod**$10609$1XjQw
                                                                      g$kwd*$10624$1XjQw
                                                                      g$exp*$10611$1XjQw
                                                                      g$rib$10612$1XjQw
                                                                      g$top?$10613$1XjQw))))))
                                                             (g$map$5757$1XjQw
                                                               (case-lambda
                                                                 ((g$x$10659$1XjQw)
                                                                  (g$make-eval-transformer$8055$1XjQw
                                                                    (g$expand-transformer$8346$1XjQw
                                                                      (if (eq? g$type$10623$1XjQw
                                                                               'let-syntax)
                                                                        g$x$10659$1XjQw
                                                                        (g$add-subst$8013$1XjQw
                                                                          g$xrib$10656$1XjQw
                                                                          g$x$10659$1XjQw))
                                                                      g$mr$10606$1XjQw))))
                                                               g$xrhs*$10653$1XjQw))))
                                                         (g$make-full-rib$7991$1XjQw
                                                           g$xlhs*$10652$1XjQw
                                                           g$xlab*$10655$1XjQw))))
                                                     (g$map$5757$1XjQw
                                                       g$gen-label$7964$1XjQw
                                                       g$xlhs*$10652$1XjQw))))
                                                 g$ls/false$10648$1XjQw)
                                               (g$syntax-violation$8412$1XjQw
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10647$1XjQw))))
                                          (g$syntax-dispatch$8301$1XjQw
                                            g$t$10647$1XjQw
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$10614$1XjQw)
                                     (if (g$memv$5750$1XjQw
                                           g$t$10625$1XjQw
                                           '(begin))
                                       ((case-lambda
                                          ((g$t$10660$1XjQw)
                                           ((case-lambda
                                              ((g$ls/false$10661$1XjQw)
                                               (if g$ls/false$10661$1XjQw
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$10662$1XjQw)
                                                      (g$chi-body*$8345$1XjQw
                                                        (append
                                                          g$x*$10662$1XjQw
                                                          (cdr g$e*$10604$1XjQw))
                                                        g$r$10605$1XjQw
                                                        g$mr$10606$1XjQw
                                                        g$lex*$10607$1XjQw
                                                        g$rhs*$10608$1XjQw
                                                        g$mod**$10609$1XjQw
                                                        g$kwd*$10624$1XjQw
                                                        g$exp*$10611$1XjQw
                                                        g$rib$10612$1XjQw
                                                        g$top?$10613$1XjQw)))
                                                   g$ls/false$10661$1XjQw)
                                                 (g$syntax-violation$8412$1XjQw
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$10660$1XjQw))))
                                            (g$syntax-dispatch$8301$1XjQw
                                              g$t$10660$1XjQw
                                              '(_ . each-any)))))
                                        g$e$10614$1XjQw)
                                       (if (g$memv$5750$1XjQw
                                             g$t$10625$1XjQw
                                             '(global-macro global-macro!))
                                         (g$chi-body*$8345$1XjQw
                                           (cons
                                             (g$add-subst$8013$1XjQw
                                               g$rib$10612$1XjQw
                                               (g$chi-global-macro$8316$1XjQw
                                                 g$value$10622$1XjQw
                                                 g$e$10614$1XjQw))
                                             (cdr g$e*$10604$1XjQw))
                                           g$r$10605$1XjQw
                                           g$mr$10606$1XjQw
                                           g$lex*$10607$1XjQw
                                           g$rhs*$10608$1XjQw
                                           g$mod**$10609$1XjQw
                                           g$kwd*$10624$1XjQw
                                           g$exp*$10611$1XjQw
                                           g$rib$10612$1XjQw
                                           g$top?$10613$1XjQw)
                                         (if (g$memv$5750$1XjQw
                                               g$t$10625$1XjQw
                                               '(local-macro local-macro!))
                                           (g$chi-body*$8345$1XjQw
                                             (cons
                                               (g$add-subst$8013$1XjQw
                                                 g$rib$10612$1XjQw
                                                 (g$chi-local-macro$8315$1XjQw
                                                   g$value$10622$1XjQw
                                                   g$e$10614$1XjQw))
                                               (cdr g$e*$10604$1XjQw))
                                             g$r$10605$1XjQw
                                             g$mr$10606$1XjQw
                                             g$lex*$10607$1XjQw
                                             g$rhs*$10608$1XjQw
                                             g$mod**$10609$1XjQw
                                             g$kwd*$10624$1XjQw
                                             g$exp*$10611$1XjQw
                                             g$rib$10612$1XjQw
                                             g$top?$10613$1XjQw)
                                           (if (g$memv$5750$1XjQw
                                                 g$t$10625$1XjQw
                                                 '(macro macro!))
                                             (g$chi-body*$8345$1XjQw
                                               (cons
                                                 (g$add-subst$8013$1XjQw
                                                   g$rib$10612$1XjQw
                                                   (g$chi-macro$8314$1XjQw
                                                     g$value$10622$1XjQw
                                                     g$e$10614$1XjQw))
                                                 (cdr g$e*$10604$1XjQw))
                                               g$r$10605$1XjQw
                                               g$mr$10606$1XjQw
                                               g$lex*$10607$1XjQw
                                               g$rhs*$10608$1XjQw
                                               g$mod**$10609$1XjQw
                                               g$kwd*$10624$1XjQw
                                               g$exp*$10611$1XjQw
                                               g$rib$10612$1XjQw
                                               g$top?$10613$1XjQw)
                                             (if (g$memv$5750$1XjQw
                                                   g$t$10625$1XjQw
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$8344$1XjQw
                                                      g$e$10614$1XjQw
                                                      g$r$10605$1XjQw
                                                      g$mr$10606$1XjQw
                                                      g$lex*$10607$1XjQw
                                                      g$rhs*$10608$1XjQw
                                                      g$mod**$10609$1XjQw
                                                      g$kwd*$10624$1XjQw)))
                                                 (case-lambda
                                                   ((g$lex*$10671$1XjQw
                                                      g$rhs*$10672$1XjQw
                                                      g$m-exp-id*$10673$1XjQw
                                                      g$m-exp-lab*$10674$1XjQw
                                                      g$r$10675$1XjQw
                                                      g$mr$10676$1XjQw
                                                      g$mod**$10677$1XjQw
                                                      g$kwd*$10678$1XjQw)
                                                    ((case-lambda
                                                       ((g$kwd*$10679$1XjQw
                                                          g$mod**$10680$1XjQw
                                                          g$mr$10681$1XjQw
                                                          g$r$10682$1XjQw
                                                          g$m-exp-lab*$10683$1XjQw
                                                          g$m-exp-id*$10684$1XjQw
                                                          g$rhs*$10685$1XjQw
                                                          g$lex*$10686$1XjQw)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$10687$1XjQw
                                                                 g$lab$10688$1XjQw)
                                                               (g$extend-rib!$7986$1XjQw
                                                                 g$rib$10612$1XjQw
                                                                 g$id$10687$1XjQw
                                                                 g$lab$10688$1XjQw)))
                                                            g$m-exp-id*$10684$1XjQw
                                                            g$m-exp-lab*$10683$1XjQw)
                                                          (g$chi-body*$8345$1XjQw
                                                            (cdr g$e*$10604$1XjQw)
                                                            g$r$10682$1XjQw
                                                            g$mr$10681$1XjQw
                                                            g$lex*$10686$1XjQw
                                                            g$rhs*$10685$1XjQw
                                                            g$mod**$10680$1XjQw
                                                            g$kwd*$10679$1XjQw
                                                            g$exp*$10611$1XjQw
                                                            g$rib$10612$1XjQw
                                                            g$top?$10613$1XjQw))))
                                                     g$kwd*$10678$1XjQw
                                                     g$mod**$10677$1XjQw
                                                     g$mr$10676$1XjQw
                                                     g$r$10675$1XjQw
                                                     g$m-exp-lab*$10674$1XjQw
                                                     g$m-exp-id*$10673$1XjQw
                                                     g$rhs*$10672$1XjQw
                                                     g$lex*$10671$1XjQw))))
                                               (if (g$memv$5750$1XjQw
                                                     g$t$10625$1XjQw
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$8396$1XjQw
                                                     (g$stx->datum$8034$1XjQw
                                                       g$e$10614$1XjQw))
                                                   (g$chi-body*$8345$1XjQw
                                                     (cdr g$e*$10604$1XjQw)
                                                     g$r$10605$1XjQw
                                                     g$mr$10606$1XjQw
                                                     g$lex*$10607$1XjQw
                                                     g$rhs*$10608$1XjQw
                                                     g$mod**$10609$1XjQw
                                                     g$kwd*$10624$1XjQw
                                                     g$exp*$10611$1XjQw
                                                     g$rib$10612$1XjQw
                                                     g$top?$10613$1XjQw))
                                                 (if (g$memv$5750$1XjQw
                                                       g$t$10625$1XjQw
                                                       '(export))
                                                   ((case-lambda
                                                      ((g$t$10689$1XjQw)
                                                       ((case-lambda
                                                          ((g$ls/false$10690$1XjQw)
                                                           (if g$ls/false$10690$1XjQw
                                                             (apply
                                                               (case-lambda
                                                                 ((g$exp-decl*$10691$1XjQw)
                                                                  (g$chi-body*$8345$1XjQw
                                                                    (cdr g$e*$10604$1XjQw)
                                                                    g$r$10605$1XjQw
                                                                    g$mr$10606$1XjQw
                                                                    g$lex*$10607$1XjQw
                                                                    g$rhs*$10608$1XjQw
                                                                    g$mod**$10609$1XjQw
                                                                    g$kwd*$10624$1XjQw
                                                                    (append
                                                                      g$exp-decl*$10691$1XjQw
                                                                      g$exp*$10611$1XjQw)
                                                                    g$rib$10612$1XjQw
                                                                    g$top?$10613$1XjQw)))
                                                               g$ls/false$10690$1XjQw)
                                                             (g$syntax-violation$8412$1XjQw
                                                               '#f
                                                               '"invalid syntax"
                                                               g$t$10689$1XjQw))))
                                                        (g$syntax-dispatch$8301$1XjQw
                                                          g$t$10689$1XjQw
                                                          '(_ . each-any)))))
                                                    g$e$10614$1XjQw)
                                                   (if (g$memv$5750$1XjQw
                                                         g$t$10625$1XjQw
                                                         '(import))
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$10692$1XjQw
                                                                     (case-lambda
                                                                       ((g$e$10734$1XjQw)
                                                                        ((case-lambda
                                                                           ((g$t$10735$1XjQw)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10736$1XjQw)
                                                                                (if (if g$ls/false$10736$1XjQw
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10737$1XjQw)
                                                                                             (g$id?$8023$1XjQw
                                                                                               g$id$10737$1XjQw)))
                                                                                          g$ls/false$10736$1XjQw))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10738$1XjQw)
                                                                                       '#t))
                                                                                    g$ls/false$10736$1XjQw)
                                                                                  ((case-lambda
                                                                                     ((g$t$10739$1XjQw)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10740$1XjQw)
                                                                                          (if g$ls/false$10740$1XjQw
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$10741$1XjQw)
                                                                                                 '#f))
                                                                                              g$ls/false$10740$1XjQw)
                                                                                            ((case-lambda
                                                                                               ((g$t$10742$1XjQw)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$10743$1XjQw)
                                                                                                    (if g$ls/false$10743$1XjQw
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$8412$1XjQw
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$10734$1XjQw)))
                                                                                                        g$ls/false$10743$1XjQw)
                                                                                                      (g$syntax-violation$8412$1XjQw
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$10742$1XjQw))))
                                                                                                 (g$syntax-dispatch$8301$1XjQw
                                                                                                   g$t$10742$1XjQw
                                                                                                   '_))))
                                                                                             g$t$10739$1XjQw))))
                                                                                       (g$syntax-dispatch$8301$1XjQw
                                                                                         g$t$10739$1XjQw
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$10735$1XjQw))))
                                                                             (g$syntax-dispatch$8301$1XjQw
                                                                               g$t$10735$1XjQw
                                                                               '(_ any)))))
                                                                         g$e$10734$1XjQw))))
                                                                   (g$module-import$10693$1XjQw
                                                                     (case-lambda
                                                                       ((g$e$10717$1XjQw
                                                                          g$r$10718$1XjQw)
                                                                        ((case-lambda
                                                                           ((g$t$10719$1XjQw)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10720$1XjQw)
                                                                                (if (if g$ls/false$10720$1XjQw
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10721$1XjQw)
                                                                                             (g$id?$8023$1XjQw
                                                                                               g$id$10721$1XjQw)))
                                                                                          g$ls/false$10720$1XjQw))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10722$1XjQw)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$8043$1XjQw
                                                                                              g$id$10722$1XjQw
                                                                                              g$r$10718$1XjQw)))
                                                                                         (case-lambda
                                                                                           ((g$type$10726$1XjQw
                                                                                              g$value$10727$1XjQw
                                                                                              g$kwd$10728$1XjQw)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$10729$1XjQw
                                                                                                  g$value$10730$1XjQw
                                                                                                  g$type$10731$1XjQw)
                                                                                                ((case-lambda
                                                                                                   ((g$t$10732$1XjQw)
                                                                                                    (if (g$memv$5750$1XjQw
                                                                                                          g$t$10732$1XjQw
                                                                                                          '($module))
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$10733$1XjQw)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$8343$1XjQw
                                                                                                              g$iface$10733$1XjQw
                                                                                                              g$id$10722$1XjQw)
                                                                                                            (g$module-interface-exp-lab-vec$8339$1XjQw
                                                                                                              g$iface$10733$1XjQw))))
                                                                                                       g$value$10730$1XjQw)
                                                                                                      (g$syntax-violation$8412$1XjQw
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$10717$1XjQw))))
                                                                                                 g$type$10731$1XjQw)))
                                                                                             g$kwd$10728$1XjQw
                                                                                             g$value$10727$1XjQw
                                                                                             g$type$10726$1XjQw))))))
                                                                                    g$ls/false$10720$1XjQw)
                                                                                  (g$syntax-violation$8412$1XjQw
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$10719$1XjQw))))
                                                                             (g$syntax-dispatch$8301$1XjQw
                                                                               g$t$10719$1XjQw
                                                                               '(_ any)))))
                                                                         g$e$10717$1XjQw))))
                                                                   (g$library-import$10694$1XjQw
                                                                     (case-lambda
                                                                       ((g$e$10703$1XjQw)
                                                                        ((case-lambda
                                                                           ((g$t$10704$1XjQw)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10705$1XjQw)
                                                                                (if g$ls/false$10705$1XjQw
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$10706$1XjQw
                                                                                         g$imp*$10707$1XjQw)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$8350$1XjQw
                                                                                              (g$syntax->datum$8415$1XjQw
                                                                                                g$imp*$10707$1XjQw))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$10710$1XjQw
                                                                                              g$subst-labels$10711$1XjQw)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$10712$1XjQw
                                                                                                  g$subst-names$10713$1XjQw)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$10714$1XjQw)
                                                                                                       (g$datum->stx$8006$1XjQw
                                                                                                         g$ctxt$10706$1XjQw
                                                                                                         g$name$10714$1XjQw)))
                                                                                                    g$subst-names$10713$1XjQw)
                                                                                                  g$subst-labels$10712$1XjQw)))
                                                                                             g$subst-labels$10711$1XjQw
                                                                                             g$subst-names$10710$1XjQw))))))
                                                                                    g$ls/false$10705$1XjQw)
                                                                                  ((case-lambda
                                                                                     ((g$t$10715$1XjQw)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10716$1XjQw)
                                                                                          (if g$ls/false$10716$1XjQw
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8412$1XjQw
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$10703$1XjQw)))
                                                                                              g$ls/false$10716$1XjQw)
                                                                                            (g$syntax-violation$8412$1XjQw
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$10715$1XjQw))))
                                                                                       (g$syntax-dispatch$8301$1XjQw
                                                                                         g$t$10715$1XjQw
                                                                                         '_))))
                                                                                   g$t$10704$1XjQw))))
                                                                             (g$syntax-dispatch$8301$1XjQw
                                                                               g$t$10704$1XjQw
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$10703$1XjQw)))))
                                                           (begin
                                                             (call-with-values
                                                               (case-lambda
                                                                 (()
                                                                  (if (g$module-import?$10692$1XjQw
                                                                        g$e$10614$1XjQw)
                                                                    (g$module-import$10693$1XjQw
                                                                      g$e$10614$1XjQw
                                                                      g$r$10605$1XjQw)
                                                                    (g$library-import$10694$1XjQw
                                                                      g$e$10614$1XjQw))))
                                                               (case-lambda
                                                                 ((g$id*$10697$1XjQw
                                                                    g$lab*$10698$1XjQw)
                                                                  ((case-lambda
                                                                     ((g$lab*$10699$1XjQw
                                                                        g$id*$10700$1XjQw)
                                                                      (vector-for-each
                                                                        (case-lambda
                                                                          ((g$id$10701$1XjQw
                                                                             g$lab$10702$1XjQw)
                                                                           (g$extend-rib!$7986$1XjQw
                                                                             g$rib$10612$1XjQw
                                                                             g$id$10701$1XjQw
                                                                             g$lab$10702$1XjQw)))
                                                                        g$id*$10700$1XjQw
                                                                        g$lab*$10699$1XjQw)))
                                                                   g$lab*$10698$1XjQw
                                                                   g$id*$10697$1XjQw))))
                                                             (g$chi-body*$8345$1XjQw
                                                               (cdr g$e*$10604$1XjQw)
                                                               g$r$10605$1XjQw
                                                               g$mr$10606$1XjQw
                                                               g$lex*$10607$1XjQw
                                                               g$rhs*$10608$1XjQw
                                                               g$mod**$10609$1XjQw
                                                               g$kwd*$10624$1XjQw
                                                               g$exp*$10611$1XjQw
                                                               g$rib$10612$1XjQw
                                                               g$top?$10613$1XjQw))))))
                                                     (if g$top?$10613$1XjQw
                                                       (g$chi-body*$8345$1XjQw
                                                         (cdr g$e*$10604$1XjQw)
                                                         g$r$10605$1XjQw
                                                         g$mr$10606$1XjQw
                                                         (cons
                                                           (g$gen-lexical$7962$1XjQw
                                                             'dummy)
                                                           g$lex*$10607$1XjQw)
                                                         (cons
                                                           (cons
                                                             'top-expr
                                                             g$e$10614$1XjQw)
                                                           g$rhs*$10608$1XjQw)
                                                         g$mod**$10609$1XjQw
                                                         g$kwd*$10624$1XjQw
                                                         g$exp*$10611$1XjQw
                                                         g$rib$10612$1XjQw
                                                         g$top?$10613$1XjQw)
                                                       (values
                                                         g$e*$10604$1XjQw
                                                         g$r$10605$1XjQw
                                                         g$mr$10606$1XjQw
                                                         g$lex*$10607$1XjQw
                                                         g$rhs*$10608$1XjQw
                                                         g$mod**$10609$1XjQw
                                                         g$kwd*$10624$1XjQw
                                                         g$exp*$10611$1XjQw)))))))))))))))
                            g$type$10623$1XjQw)))
                        (if (g$id?$8023$1XjQw g$kwd$10621$1XjQw)
                          (cons g$kwd$10621$1XjQw g$kwd*$10610$1XjQw)
                          g$kwd*$10610$1XjQw))))
                    g$kwd$10620$1XjQw
                    g$value$10619$1XjQw
                    g$type$10618$1XjQw))))))
           (car g$e*$10604$1XjQw))))))
   (g$expand-transformer$8346$1XjQw
     g$expand-transformer$11837$1XjQw
     (case-lambda
       ((g$expr$10744$1XjQw g$r$10745$1XjQw)
        ((case-lambda
           ((g$rtc$10746$1XjQw)
            ((case-lambda
               ((g$expanded-rhs$10747$1XjQw)
                (begin
                  (g$for-each$5758$1XjQw
                    ((case-lambda
                       ((g$mark-visit$10748$1XjQw)
                        (case-lambda
                          ((g$x$10749$1XjQw)
                           (begin
                             (g$invoke-library$7833$1XjQw g$x$10749$1XjQw)
                             (g$mark-visit$10748$1XjQw g$x$10749$1XjQw))))))
                     (g$vis-collector$8354$1XjQw))
                    (g$rtc$10746$1XjQw))
                  g$expanded-rhs$10747$1XjQw)))
             ((case-lambda
                ((g$inv-collector$10754$1XjQw
                   g$vis-collector$10755$1XjQw
                   g$inv-collector$10756$1XjQw
                   g$vis-collector$10757$1XjQw)
                 ((case-lambda
                    ((g$swap$10758$1XjQw)
                     (dynamic-wind
                       g$swap$10758$1XjQw
                       (case-lambda
                         (()
                          (g$chi-expr$8319$1XjQw
                            g$expr$10744$1XjQw
                            g$r$10745$1XjQw
                            g$r$10745$1XjQw)))
                       g$swap$10758$1XjQw)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$10759$1XjQw)
                           (begin
                             (g$inv-collector$10754$1XjQw
                               g$inv-collector$10756$1XjQw)
                             (set! g$inv-collector$10756$1XjQw
                               g$t$10759$1XjQw))))
                        (g$inv-collector$10754$1XjQw))
                       ((case-lambda
                          ((g$t$10760$1XjQw)
                           (begin
                             (g$vis-collector$10755$1XjQw
                               g$vis-collector$10757$1XjQw)
                             (set! g$vis-collector$10757$1XjQw
                               g$t$10760$1XjQw))))
                        (g$vis-collector$10755$1XjQw))))))))
              g$inv-collector$8353$1XjQw
              g$vis-collector$8354$1XjQw
              g$rtc$10746$1XjQw
              (case-lambda ((g$x$10761$1XjQw) (values)))))))
         (g$make-collector$8352$1XjQw)))))
   (g$parse-exports$8347$1XjQw
     g$parse-exports$11838$1XjQw
     (case-lambda
       ((g$exp*$10762$1XjQw)
        ((letrec ((g$f$10763$1XjQw
                    (case-lambda
                      ((g$exp*$10764$1XjQw
                         g$int*$10765$1XjQw
                         g$ext*$10766$1XjQw)
                       (if (null? g$exp*$10764$1XjQw)
                         (begin
                           (if (not (g$valid-bound-ids?$8028$1XjQw
                                      g$ext*$10766$1XjQw))
                             (g$syntax-violation$8412$1XjQw
                               'export
                               '"invalid exports"
                               (g$find-dups$8329$1XjQw g$ext*$10766$1XjQw))
                             (void))
                           (values
                             (g$map$5757$1XjQw
                               g$syntax->datum$8415$1XjQw
                               g$ext*$10766$1XjQw)
                             g$int*$10765$1XjQw))
                         ((case-lambda
                            ((g$t$10767$1XjQw)
                             ((case-lambda
                                ((g$ls/false$10768$1XjQw)
                                 (if g$ls/false$10768$1XjQw
                                   (apply
                                     (case-lambda
                                       ((g$rename$10769$1XjQw
                                          g$i*$10770$1XjQw
                                          g$e*$10771$1XjQw)
                                        (begin
                                          (if (not (if (eq? (g$syntax->datum$8415$1XjQw
                                                              g$rename$10769$1XjQw)
                                                            'rename)
                                                     (if (g$for-all$5755$1XjQw
                                                           g$id?$8023$1XjQw
                                                           g$i*$10770$1XjQw)
                                                       (begin
                                                         '#f
                                                         (g$for-all$5755$1XjQw
                                                           g$id?$8023$1XjQw
                                                           g$e*$10771$1XjQw))
                                                       '#f)
                                                     '#f))
                                            (g$syntax-violation$8412$1XjQw
                                              'export
                                              '"invalid export specifier"
                                              (car g$exp*$10764$1XjQw))
                                            (void))
                                          (g$f$10763$1XjQw
                                            (cdr g$exp*$10764$1XjQw)
                                            (append
                                              g$i*$10770$1XjQw
                                              g$int*$10765$1XjQw)
                                            (append
                                              g$e*$10771$1XjQw
                                              g$ext*$10766$1XjQw)))))
                                     g$ls/false$10768$1XjQw)
                                   ((case-lambda
                                      ((g$t$10772$1XjQw)
                                       ((case-lambda
                                          ((g$ls/false$10773$1XjQw)
                                           (if g$ls/false$10773$1XjQw
                                             (apply
                                               (case-lambda
                                                 ((g$ie$10774$1XjQw)
                                                  (begin
                                                    (if (not (g$id?$8023$1XjQw
                                                               g$ie$10774$1XjQw))
                                                      (g$syntax-violation$8412$1XjQw
                                                        'export
                                                        '"invalid export"
                                                        g$ie$10774$1XjQw)
                                                      (void))
                                                    (g$f$10763$1XjQw
                                                      (cdr g$exp*$10764$1XjQw)
                                                      (cons
                                                        g$ie$10774$1XjQw
                                                        g$int*$10765$1XjQw)
                                                      (cons
                                                        g$ie$10774$1XjQw
                                                        g$ext*$10766$1XjQw)))))
                                               g$ls/false$10773$1XjQw)
                                             (g$syntax-violation$8412$1XjQw
                                               '#f
                                               '"invalid syntax"
                                               g$t$10772$1XjQw))))
                                        (g$syntax-dispatch$8301$1XjQw
                                          g$t$10772$1XjQw
                                          'any))))
                                    g$t$10767$1XjQw))))
                              (g$syntax-dispatch$8301$1XjQw
                                g$t$10767$1XjQw
                                '(any . #(each (any any)))))))
                          (car g$exp*$10764$1XjQw)))))))
           g$f$10763$1XjQw)
         g$exp*$10762$1XjQw
         '()
         '()))))
   (g$parse-library-name$8348$1XjQw
     g$parse-library-name$11839$1XjQw
     (case-lambda
       ((g$spec$10775$1XjQw)
        (letrec* ((g$parse$10776$1XjQw
                    (case-lambda
                      ((g$x$10783$1XjQw)
                       ((case-lambda
                          ((g$t$10784$1XjQw)
                           ((case-lambda
                              ((g$ls/false$10785$1XjQw)
                               (if (if g$ls/false$10785$1XjQw
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$10786$1XjQw)
                                            (g$for-all$5755$1XjQw
                                              (case-lambda
                                                ((g$x$10787$1XjQw)
                                                 ((case-lambda
                                                    ((g$x$10788$1XjQw)
                                                     (if (integer?
                                                           g$x$10788$1XjQw)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$10788$1XjQw))
                                                       '#f)))
                                                  (g$syntax->datum$8415$1XjQw
                                                    g$x$10787$1XjQw))))
                                              g$v*$10786$1XjQw)))
                                         g$ls/false$10785$1XjQw))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$10789$1XjQw)
                                      (values
                                        '()
                                        (g$map$5757$1XjQw
                                          g$syntax->datum$8415$1XjQw
                                          g$v*$10789$1XjQw))))
                                   g$ls/false$10785$1XjQw)
                                 ((case-lambda
                                    ((g$t$10790$1XjQw)
                                     ((case-lambda
                                        ((g$ls/false$10791$1XjQw)
                                         (if (if g$ls/false$10791$1XjQw
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$10792$1XjQw
                                                        g$rest$10793$1XjQw)
                                                      (symbol?
                                                        (g$syntax->datum$8415$1XjQw
                                                          g$x$10792$1XjQw))))
                                                   g$ls/false$10791$1XjQw))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$10794$1XjQw
                                                  g$rest$10795$1XjQw)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$10776$1XjQw
                                                       g$rest$10795$1XjQw)))
                                                  (case-lambda
                                                    ((g$x*$10798$1XjQw
                                                       g$v*$10799$1XjQw)
                                                     ((case-lambda
                                                        ((g$v*$10800$1XjQw
                                                           g$x*$10801$1XjQw)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$8415$1XjQw
                                                               g$x$10794$1XjQw)
                                                             g$x*$10801$1XjQw)
                                                           g$v*$10800$1XjQw)))
                                                      g$v*$10799$1XjQw
                                                      g$x*$10798$1XjQw))))))
                                             g$ls/false$10791$1XjQw)
                                           ((case-lambda
                                              ((g$t$10802$1XjQw)
                                               ((case-lambda
                                                  ((g$ls/false$10803$1XjQw)
                                                   (if g$ls/false$10803$1XjQw
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10803$1XjQw)
                                                     ((case-lambda
                                                        ((g$t$10804$1XjQw)
                                                         ((case-lambda
                                                            ((g$ls/false$10805$1XjQw)
                                                             (if g$ls/false$10805$1XjQw
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$8412$1XjQw
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$10775$1XjQw)))
                                                                 g$ls/false$10805$1XjQw)
                                                               (g$syntax-violation$8412$1XjQw
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10804$1XjQw))))
                                                          (g$syntax-dispatch$8301$1XjQw
                                                            g$t$10804$1XjQw
                                                            '_))))
                                                      g$t$10802$1XjQw))))
                                                (g$syntax-dispatch$8301$1XjQw
                                                  g$t$10802$1XjQw
                                                  '()))))
                                            g$t$10790$1XjQw))))
                                      (g$syntax-dispatch$8301$1XjQw
                                        g$t$10790$1XjQw
                                        '(any . any)))))
                                  g$t$10784$1XjQw))))
                            (g$syntax-dispatch$8301$1XjQw
                              g$t$10784$1XjQw
                              '(each-any)))))
                        g$x$10783$1XjQw)))))
          (call-with-values
            (case-lambda (() (g$parse$10776$1XjQw g$spec$10775$1XjQw)))
            (case-lambda
              ((g$name*$10779$1XjQw g$ver*$10780$1XjQw)
               ((case-lambda
                  ((g$ver*$10781$1XjQw g$name*$10782$1XjQw)
                   (begin
                     (if (null? g$name*$10782$1XjQw)
                       (g$syntax-violation$8412$1XjQw
                         '#f
                         '"empty library name"
                         g$spec$10775$1XjQw)
                       (void))
                     (values g$name*$10782$1XjQw g$ver*$10781$1XjQw))))
                g$ver*$10780$1XjQw
                g$name*$10779$1XjQw))))))))
   (g$parse-library$8349$1XjQw
     g$parse-library$11840$1XjQw
     (case-lambda
       ((g$e$10806$1XjQw)
        ((case-lambda
           ((g$t$10807$1XjQw)
            ((case-lambda
               ((g$ls/false$10808$1XjQw)
                (if (if g$ls/false$10808$1XjQw
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10809$1XjQw
                               g$name*$10810$1XjQw
                               g$export$10811$1XjQw
                               g$exp*$10812$1XjQw
                               g$import$10813$1XjQw
                               g$imp*$10814$1XjQw
                               g$b*$10815$1XjQw)
                             (if (eq? (g$syntax->datum$8415$1XjQw
                                        g$export$10811$1XjQw)
                                      'export)
                               (if (eq? (g$syntax->datum$8415$1XjQw
                                          g$import$10813$1XjQw)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$8415$1XjQw
                                          g$library$10809$1XjQw)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10808$1XjQw))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10816$1XjQw
                         g$name*$10817$1XjQw
                         g$export$10818$1XjQw
                         g$exp*$10819$1XjQw
                         g$import$10820$1XjQw
                         g$imp*$10821$1XjQw
                         g$b*$10822$1XjQw)
                       (values
                         g$name*$10817$1XjQw
                         g$exp*$10819$1XjQw
                         g$imp*$10821$1XjQw
                         g$b*$10822$1XjQw)))
                    g$ls/false$10808$1XjQw)
                  ((case-lambda
                     ((g$t$10823$1XjQw)
                      ((case-lambda
                         ((g$ls/false$10824$1XjQw)
                          (if g$ls/false$10824$1XjQw
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$8412$1XjQw
                                   '#f
                                   '"malformed library"
                                   g$e$10806$1XjQw)))
                              g$ls/false$10824$1XjQw)
                            (g$syntax-violation$8412$1XjQw
                              '#f
                              '"invalid syntax"
                              g$t$10823$1XjQw))))
                       (g$syntax-dispatch$8301$1XjQw g$t$10823$1XjQw '_))))
                   g$t$10807$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw
               g$t$10807$1XjQw
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10806$1XjQw))))
   (g$parse-import-spec*$8350$1XjQw
     g$parse-import-spec*$11841$1XjQw
     ((case-lambda
        (()
         (letrec* ((g$idsyn?$10825$1XjQw
                     (case-lambda
                       ((g$x$11086$1XjQw)
                        (symbol?
                          (g$syntax->datum$8415$1XjQw g$x$11086$1XjQw)))))
                   (g$dup-error$10826$1XjQw
                     (case-lambda
                       ((g$name$11085$1XjQw)
                        (g$syntax-violation$8412$1XjQw
                          'import
                          '"two imports with different bindings"
                          g$name$11085$1XjQw))))
                   (g$merge-substs$10827$1XjQw
                     (case-lambda
                       ((g$s$11076$1XjQw g$subst$11077$1XjQw)
                        (letrec* ((g$insert-to-subst$11078$1XjQw
                                    (case-lambda
                                      ((g$a$11079$1XjQw g$subst$11080$1XjQw)
                                       ((case-lambda
                                          ((g$name$11081$1XjQw
                                             g$label$11082$1XjQw)
                                           ((case-lambda
                                              ((g$t$11083$1XjQw)
                                               (if g$t$11083$1XjQw
                                                 ((case-lambda
                                                    ((g$x$11084$1XjQw)
                                                     (if (eq? (cdr g$x$11084$1XjQw)
                                                              g$label$11082$1XjQw)
                                                       g$subst$11080$1XjQw
                                                       (g$dup-error$10826$1XjQw
                                                         g$name$11081$1XjQw))))
                                                  g$t$11083$1XjQw)
                                                 (cons
                                                   g$a$11079$1XjQw
                                                   g$subst$11080$1XjQw))))
                                            (g$assq$5745$1XjQw
                                              g$name$11081$1XjQw
                                              g$subst$11080$1XjQw))))
                                        (car g$a$11079$1XjQw)
                                        (cdr g$a$11079$1XjQw))))))
                          (if (null? g$s$11076$1XjQw)
                            g$subst$11077$1XjQw
                            (g$insert-to-subst$11078$1XjQw
                              (car g$s$11076$1XjQw)
                              (g$merge-substs$10827$1XjQw
                                (cdr g$s$11076$1XjQw)
                                g$subst$11077$1XjQw)))))))
                   (g$exclude*$10828$1XjQw
                     (case-lambda
                       ((g$sym*$11052$1XjQw g$subst$11053$1XjQw)
                        (letrec* ((g$exclude$11054$1XjQw
                                    (case-lambda
                                      ((g$sym$11067$1XjQw g$subst$11068$1XjQw)
                                       (if (null? g$subst$11068$1XjQw)
                                         (g$syntax-violation$8412$1XjQw
                                           'import
                                           '"cannot rename unbound identifier"
                                           g$sym$11067$1XjQw)
                                         (if (eq? g$sym$11067$1XjQw
                                                  (g$caar$5920$1XjQw
                                                    g$subst$11068$1XjQw))
                                           (values
                                             (g$cdar$5922$1XjQw
                                               g$subst$11068$1XjQw)
                                             (cdr g$subst$11068$1XjQw))
                                           ((case-lambda
                                              ((g$a$11069$1XjQw)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$exclude$11054$1XjQw
                                                      g$sym$11067$1XjQw
                                                      (cdr g$subst$11068$1XjQw))))
                                                 (case-lambda
                                                   ((g$old$11072$1XjQw
                                                      g$subst$11073$1XjQw)
                                                    ((case-lambda
                                                       ((g$subst$11074$1XjQw
                                                          g$old$11075$1XjQw)
                                                        (values
                                                          g$old$11075$1XjQw
                                                          (cons
                                                            g$a$11069$1XjQw
                                                            g$subst$11074$1XjQw))))
                                                     g$subst$11073$1XjQw
                                                     g$old$11072$1XjQw))))))
                                            (car g$subst$11068$1XjQw))))))))
                          (if (null? g$sym*$11052$1XjQw)
                            (values '() g$subst$11053$1XjQw)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$exclude$11054$1XjQw
                                   (car g$sym*$11052$1XjQw)
                                   g$subst$11053$1XjQw)))
                              (case-lambda
                                ((g$old$11057$1XjQw g$subst$11058$1XjQw)
                                 ((case-lambda
                                    ((g$subst$11059$1XjQw g$old$11060$1XjQw)
                                     (call-with-values
                                       (case-lambda
                                         (()
                                          (g$exclude*$10828$1XjQw
                                            (cdr g$sym*$11052$1XjQw)
                                            g$subst$11059$1XjQw)))
                                       (case-lambda
                                         ((g$old*$11063$1XjQw
                                            g$subst$11064$1XjQw)
                                          ((case-lambda
                                             ((g$subst$11065$1XjQw
                                                g$old*$11066$1XjQw)
                                              (values
                                                (cons
                                                  g$old$11060$1XjQw
                                                  g$old*$11066$1XjQw)
                                                g$subst$11065$1XjQw)))
                                           g$subst$11064$1XjQw
                                           g$old*$11063$1XjQw))))))
                                  g$subst$11058$1XjQw
                                  g$old$11057$1XjQw)))))))))
                   (g$find*$10829$1XjQw
                     (case-lambda
                       ((g$sym*$11048$1XjQw g$subst$11049$1XjQw)
                        (g$map$5757$1XjQw
                          (case-lambda
                            ((g$x$11050$1XjQw)
                             ((case-lambda
                                ((g$t$11051$1XjQw)
                                 (if g$t$11051$1XjQw
                                   (cdr g$t$11051$1XjQw)
                                   (g$syntax-violation$8412$1XjQw
                                     'import
                                     '"cannot find identifier"
                                     g$x$11050$1XjQw))))
                              (g$assq$5745$1XjQw
                                g$x$11050$1XjQw
                                g$subst$11049$1XjQw))))
                          g$sym*$11048$1XjQw))))
                   (g$rem*$10830$1XjQw
                     (case-lambda
                       ((g$sym*$11044$1XjQw g$subst$11045$1XjQw)
                        ((letrec ((g$f$11046$1XjQw
                                    (case-lambda
                                      ((g$subst$11047$1XjQw)
                                       (if (null? g$subst$11047$1XjQw)
                                         '()
                                         (if (g$memq$5749$1XjQw
                                               (g$caar$5920$1XjQw
                                                 g$subst$11047$1XjQw)
                                               g$sym*$11044$1XjQw)
                                           (g$f$11046$1XjQw
                                             (cdr g$subst$11047$1XjQw))
                                           (cons
                                             (car g$subst$11047$1XjQw)
                                             (g$f$11046$1XjQw
                                               (cdr g$subst$11047$1XjQw)))))))))
                           g$f$11046$1XjQw)
                         g$subst$11045$1XjQw))))
                   (g$remove-dups$10831$1XjQw
                     (case-lambda
                       ((g$ls$11043$1XjQw)
                        (if (null? g$ls$11043$1XjQw)
                          '()
                          (if (g$memq$5749$1XjQw
                                (car g$ls$11043$1XjQw)
                                (cdr g$ls$11043$1XjQw))
                            (g$remove-dups$10831$1XjQw (cdr g$ls$11043$1XjQw))
                            (cons
                              (car g$ls$11043$1XjQw)
                              (g$remove-dups$10831$1XjQw
                                (cdr g$ls$11043$1XjQw))))))))
                   (g$parse-library-name$10832$1XjQw
                     (case-lambda
                       ((g$spec$10927$1XjQw)
                        (letrec* ((g$subversion?$10928$1XjQw
                                    (case-lambda
                                      ((g$x$11041$1XjQw)
                                       ((case-lambda
                                          ((g$x$11042$1XjQw)
                                           (if (integer? g$x$11042$1XjQw)
                                             (if (exact? g$x$11042$1XjQw)
                                               (begin
                                                 '#f
                                                 (>= g$x$11042$1XjQw '0))
                                               '#f)
                                             '#f)))
                                        (g$syntax->datum$8415$1XjQw
                                          g$x$11041$1XjQw)))))
                                  (g$subversion-pred$10929$1XjQw
                                    (case-lambda
                                      ((g$x*$10993$1XjQw)
                                       ((case-lambda
                                          ((g$t$10994$1XjQw)
                                           ((case-lambda
                                              ((g$ls/false$10995$1XjQw)
                                               (if (if g$ls/false$10995$1XjQw
                                                     (begin
                                                       '#f
                                                       (apply
                                                         (case-lambda
                                                           ((g$n$10996$1XjQw)
                                                            (g$subversion?$10928$1XjQw
                                                              g$n$10996$1XjQw)))
                                                         g$ls/false$10995$1XjQw))
                                                     '#f)
                                                 (apply
                                                   (case-lambda
                                                     ((g$n$10997$1XjQw)
                                                      (case-lambda
                                                        ((g$x$10998$1XjQw)
                                                         (= g$x$10998$1XjQw
                                                            (g$syntax->datum$8415$1XjQw
                                                              g$n$10997$1XjQw))))))
                                                   g$ls/false$10995$1XjQw)
                                                 ((case-lambda
                                                    ((g$t$10999$1XjQw)
                                                     ((case-lambda
                                                        ((g$ls/false$11000$1XjQw)
                                                         (if (if g$ls/false$11000$1XjQw
                                                               (begin
                                                                 '#f
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$p?$11001$1XjQw
                                                                        g$sub*$11002$1XjQw)
                                                                      (eq? (g$syntax->datum$8415$1XjQw
                                                                             g$p?$11001$1XjQw)
                                                                           'and)))
                                                                   g$ls/false$11000$1XjQw))
                                                               '#f)
                                                           (apply
                                                             (case-lambda
                                                               ((g$p?$11003$1XjQw
                                                                  g$sub*$11004$1XjQw)
                                                                ((case-lambda
                                                                   ((g$p*$11005$1XjQw)
                                                                    (case-lambda
                                                                      ((g$x$11006$1XjQw)
                                                                       (g$for-all$5755$1XjQw
                                                                         (case-lambda
                                                                           ((g$p$11007$1XjQw)
                                                                            (g$p$11007$1XjQw
                                                                              g$x$11006$1XjQw)))
                                                                         g$p*$11005$1XjQw)))))
                                                                 (g$map$5757$1XjQw
                                                                   g$subversion-pred$10929$1XjQw
                                                                   g$sub*$11004$1XjQw))))
                                                             g$ls/false$11000$1XjQw)
                                                           ((case-lambda
                                                              ((g$t$11008$1XjQw)
                                                               ((case-lambda
                                                                  ((g$ls/false$11009$1XjQw)
                                                                   (if (if g$ls/false$11009$1XjQw
                                                                         (begin
                                                                           '#f
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$p?$11010$1XjQw
                                                                                  g$sub*$11011$1XjQw)
                                                                                (eq? (g$syntax->datum$8415$1XjQw
                                                                                       g$p?$11010$1XjQw)
                                                                                     'or)))
                                                                             g$ls/false$11009$1XjQw))
                                                                         '#f)
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p?$11012$1XjQw
                                                                            g$sub*$11013$1XjQw)
                                                                          ((case-lambda
                                                                             ((g$p*$11014$1XjQw)
                                                                              (case-lambda
                                                                                ((g$x$11015$1XjQw)
                                                                                 (g$exists$5756$1XjQw
                                                                                   (case-lambda
                                                                                     ((g$p$11016$1XjQw)
                                                                                      (g$p$11016$1XjQw
                                                                                        g$x$11015$1XjQw)))
                                                                                   g$p*$11014$1XjQw)))))
                                                                           (g$map$5757$1XjQw
                                                                             g$subversion-pred$10929$1XjQw
                                                                             g$sub*$11013$1XjQw))))
                                                                       g$ls/false$11009$1XjQw)
                                                                     ((case-lambda
                                                                        ((g$t$11017$1XjQw)
                                                                         ((case-lambda
                                                                            ((g$ls/false$11018$1XjQw)
                                                                             (if (if g$ls/false$11018$1XjQw
                                                                                   (begin
                                                                                     '#f
                                                                                     (apply
                                                                                       (case-lambda
                                                                                         ((g$p?$11019$1XjQw
                                                                                            g$sub$11020$1XjQw)
                                                                                          (eq? (g$syntax->datum$8415$1XjQw
                                                                                                 g$p?$11019$1XjQw)
                                                                                               'not)))
                                                                                       g$ls/false$11018$1XjQw))
                                                                                   '#f)
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$p?$11021$1XjQw
                                                                                      g$sub$11022$1XjQw)
                                                                                    ((case-lambda
                                                                                       ((g$p$11023$1XjQw)
                                                                                        (case-lambda
                                                                                          ((g$x$11024$1XjQw)
                                                                                           (not (g$p$11023$1XjQw
                                                                                                  g$x$11024$1XjQw))))))
                                                                                     (g$subversion-pred$10929$1XjQw
                                                                                       g$sub$11022$1XjQw))))
                                                                                 g$ls/false$11018$1XjQw)
                                                                               ((case-lambda
                                                                                  ((g$t$11025$1XjQw)
                                                                                   ((case-lambda
                                                                                      ((g$ls/false$11026$1XjQw)
                                                                                       (if (if g$ls/false$11026$1XjQw
                                                                                             (begin
                                                                                               '#f
                                                                                               (apply
                                                                                                 (case-lambda
                                                                                                   ((g$p?$11027$1XjQw
                                                                                                      g$n$11028$1XjQw)
                                                                                                    (if (eq? (g$syntax->datum$8415$1XjQw
                                                                                                               g$p?$11027$1XjQw)
                                                                                                             '<=)
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (g$subversion?$10928$1XjQw
                                                                                                          g$n$11028$1XjQw))
                                                                                                      '#f)))
                                                                                                 g$ls/false$11026$1XjQw))
                                                                                             '#f)
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p?$11029$1XjQw
                                                                                                g$n$11030$1XjQw)
                                                                                              (case-lambda
                                                                                                ((g$x$11031$1XjQw)
                                                                                                 (<= g$x$11031$1XjQw
                                                                                                     (g$syntax->datum$8415$1XjQw
                                                                                                       g$n$11030$1XjQw))))))
                                                                                           g$ls/false$11026$1XjQw)
                                                                                         ((case-lambda
                                                                                            ((g$t$11032$1XjQw)
                                                                                             ((case-lambda
                                                                                                ((g$ls/false$11033$1XjQw)
                                                                                                 (if (if g$ls/false$11033$1XjQw
                                                                                                       (begin
                                                                                                         '#f
                                                                                                         (apply
                                                                                                           (case-lambda
                                                                                                             ((g$p?$11034$1XjQw
                                                                                                                g$n$11035$1XjQw)
                                                                                                              (if (eq? (g$syntax->datum$8415$1XjQw
                                                                                                                         g$p?$11034$1XjQw)
                                                                                                                       '>=)
                                                                                                                (begin
                                                                                                                  '#f
                                                                                                                  (g$subversion?$10928$1XjQw
                                                                                                                    g$n$11035$1XjQw))
                                                                                                                '#f)))
                                                                                                           g$ls/false$11033$1XjQw))
                                                                                                       '#f)
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$p?$11036$1XjQw
                                                                                                          g$n$11037$1XjQw)
                                                                                                        (case-lambda
                                                                                                          ((g$x$11038$1XjQw)
                                                                                                           (>= g$x$11038$1XjQw
                                                                                                               (g$syntax->datum$8415$1XjQw
                                                                                                                 g$n$11037$1XjQw))))))
                                                                                                     g$ls/false$11033$1XjQw)
                                                                                                   ((case-lambda
                                                                                                      ((g$t$11039$1XjQw)
                                                                                                       ((case-lambda
                                                                                                          ((g$ls/false$11040$1XjQw)
                                                                                                           (if g$ls/false$11040$1XjQw
                                                                                                             (apply
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$syntax-violation$8412$1XjQw
                                                                                                                    'import
                                                                                                                    '"invalid sub-version spec"
                                                                                                                    g$spec$10927$1XjQw
                                                                                                                    g$x*$10993$1XjQw)))
                                                                                                               g$ls/false$11040$1XjQw)
                                                                                                             (g$syntax-violation$8412$1XjQw
                                                                                                               '#f
                                                                                                               '"invalid syntax"
                                                                                                               g$t$11039$1XjQw))))
                                                                                                        (g$syntax-dispatch$8301$1XjQw
                                                                                                          g$t$11039$1XjQw
                                                                                                          '_))))
                                                                                                    g$t$11032$1XjQw))))
                                                                                              (g$syntax-dispatch$8301$1XjQw
                                                                                                g$t$11032$1XjQw
                                                                                                '(any any)))))
                                                                                          g$t$11025$1XjQw))))
                                                                                    (g$syntax-dispatch$8301$1XjQw
                                                                                      g$t$11025$1XjQw
                                                                                      '(any any)))))
                                                                                g$t$11017$1XjQw))))
                                                                          (g$syntax-dispatch$8301$1XjQw
                                                                            g$t$11017$1XjQw
                                                                            '(any any)))))
                                                                      g$t$11008$1XjQw))))
                                                                (g$syntax-dispatch$8301$1XjQw
                                                                  g$t$11008$1XjQw
                                                                  '(any .
                                                                        each-any)))))
                                                            g$t$10999$1XjQw))))
                                                      (g$syntax-dispatch$8301$1XjQw
                                                        g$t$10999$1XjQw
                                                        '(any . each-any)))))
                                                  g$t$10994$1XjQw))))
                                            (g$syntax-dispatch$8301$1XjQw
                                              g$t$10994$1XjQw
                                              'any))))
                                        g$x*$10993$1XjQw))))
                                  (g$version-pred$10930$1XjQw
                                    (case-lambda
                                      ((g$x*$10953$1XjQw)
                                       ((case-lambda
                                          ((g$t$10954$1XjQw)
                                           ((case-lambda
                                              ((g$ls/false$10955$1XjQw)
                                               (if g$ls/false$10955$1XjQw
                                                 (apply
                                                   (case-lambda
                                                     (()
                                                      (case-lambda
                                                        ((g$x$10956$1XjQw)
                                                         '#t))))
                                                   g$ls/false$10955$1XjQw)
                                                 ((case-lambda
                                                    ((g$t$10957$1XjQw)
                                                     ((case-lambda
                                                        ((g$ls/false$10958$1XjQw)
                                                         (if (if g$ls/false$10958$1XjQw
                                                               (begin
                                                                 '#f
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$c$10959$1XjQw
                                                                        g$ver*$10960$1XjQw)
                                                                      (eq? (g$syntax->datum$8415$1XjQw
                                                                             g$c$10959$1XjQw)
                                                                           'and)))
                                                                   g$ls/false$10958$1XjQw))
                                                               '#f)
                                                           (apply
                                                             (case-lambda
                                                               ((g$c$10961$1XjQw
                                                                  g$ver*$10962$1XjQw)
                                                                ((case-lambda
                                                                   ((g$p*$10963$1XjQw)
                                                                    (case-lambda
                                                                      ((g$x$10964$1XjQw)
                                                                       (g$for-all$5755$1XjQw
                                                                         (case-lambda
                                                                           ((g$p$10965$1XjQw)
                                                                            (g$p$10965$1XjQw
                                                                              g$x$10964$1XjQw)))
                                                                         g$p*$10963$1XjQw)))))
                                                                 (g$map$5757$1XjQw
                                                                   g$version-pred$10930$1XjQw
                                                                   g$ver*$10962$1XjQw))))
                                                             g$ls/false$10958$1XjQw)
                                                           ((case-lambda
                                                              ((g$t$10966$1XjQw)
                                                               ((case-lambda
                                                                  ((g$ls/false$10967$1XjQw)
                                                                   (if (if g$ls/false$10967$1XjQw
                                                                         (begin
                                                                           '#f
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$c$10968$1XjQw
                                                                                  g$ver*$10969$1XjQw)
                                                                                (eq? (g$syntax->datum$8415$1XjQw
                                                                                       g$c$10968$1XjQw)
                                                                                     'or)))
                                                                             g$ls/false$10967$1XjQw))
                                                                         '#f)
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$c$10970$1XjQw
                                                                            g$ver*$10971$1XjQw)
                                                                          ((case-lambda
                                                                             ((g$p*$10972$1XjQw)
                                                                              (case-lambda
                                                                                ((g$x$10973$1XjQw)
                                                                                 (g$exists$5756$1XjQw
                                                                                   (case-lambda
                                                                                     ((g$p$10974$1XjQw)
                                                                                      (g$p$10974$1XjQw
                                                                                        g$x$10973$1XjQw)))
                                                                                   g$p*$10972$1XjQw)))))
                                                                           (g$map$5757$1XjQw
                                                                             g$version-pred$10930$1XjQw
                                                                             g$ver*$10971$1XjQw))))
                                                                       g$ls/false$10967$1XjQw)
                                                                     ((case-lambda
                                                                        ((g$t$10975$1XjQw)
                                                                         ((case-lambda
                                                                            ((g$ls/false$10976$1XjQw)
                                                                             (if (if g$ls/false$10976$1XjQw
                                                                                   (begin
                                                                                     '#f
                                                                                     (apply
                                                                                       (case-lambda
                                                                                         ((g$c$10977$1XjQw
                                                                                            g$ver$10978$1XjQw)
                                                                                          (eq? (g$syntax->datum$8415$1XjQw
                                                                                                 g$c$10977$1XjQw)
                                                                                               'not)))
                                                                                       g$ls/false$10976$1XjQw))
                                                                                   '#f)
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$c$10979$1XjQw
                                                                                      g$ver$10980$1XjQw)
                                                                                    ((case-lambda
                                                                                       ((g$p$10981$1XjQw)
                                                                                        (case-lambda
                                                                                          ((g$x$10982$1XjQw)
                                                                                           (not (g$p$10981$1XjQw
                                                                                                  g$x$10982$1XjQw))))))
                                                                                     (g$version-pred$10930$1XjQw
                                                                                       g$ver$10980$1XjQw))))
                                                                                 g$ls/false$10976$1XjQw)
                                                                               ((case-lambda
                                                                                  ((g$t$10983$1XjQw)
                                                                                   ((case-lambda
                                                                                      ((g$ls/false$10984$1XjQw)
                                                                                       (if g$ls/false$10984$1XjQw
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$sub*$10985$1XjQw)
                                                                                              ((case-lambda
                                                                                                 ((g$p*$10986$1XjQw)
                                                                                                  (case-lambda
                                                                                                    ((g$x$10987$1XjQw)
                                                                                                     ((letrec ((g$f$10988$1XjQw
                                                                                                                 (case-lambda
                                                                                                                   ((g$p*$10989$1XjQw
                                                                                                                      g$x$10990$1XjQw)
                                                                                                                    (if (null?
                                                                                                                          g$p*$10989$1XjQw)
                                                                                                                      '#t
                                                                                                                      (if (null?
                                                                                                                            g$x$10990$1XjQw)
                                                                                                                        '#f
                                                                                                                        (if ((car g$p*$10989$1XjQw)
                                                                                                                             (car g$x$10990$1XjQw))
                                                                                                                          (begin
                                                                                                                            '#f
                                                                                                                            (g$f$10988$1XjQw
                                                                                                                              (cdr g$p*$10989$1XjQw)
                                                                                                                              (cdr g$x$10990$1XjQw)))
                                                                                                                          '#f)))))))
                                                                                                        g$f$10988$1XjQw)
                                                                                                      g$p*$10986$1XjQw
                                                                                                      g$x$10987$1XjQw)))))
                                                                                               (g$map$5757$1XjQw
                                                                                                 g$subversion-pred$10929$1XjQw
                                                                                                 g$sub*$10985$1XjQw))))
                                                                                           g$ls/false$10984$1XjQw)
                                                                                         ((case-lambda
                                                                                            ((g$t$10991$1XjQw)
                                                                                             ((case-lambda
                                                                                                ((g$ls/false$10992$1XjQw)
                                                                                                 (if g$ls/false$10992$1XjQw
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$syntax-violation$8412$1XjQw
                                                                                                          'import
                                                                                                          '"invalid version spec"
                                                                                                          g$spec$10927$1XjQw
                                                                                                          g$x*$10953$1XjQw)))
                                                                                                     g$ls/false$10992$1XjQw)
                                                                                                   (g$syntax-violation$8412$1XjQw
                                                                                                     '#f
                                                                                                     '"invalid syntax"
                                                                                                     g$t$10991$1XjQw))))
                                                                                              (g$syntax-dispatch$8301$1XjQw
                                                                                                g$t$10991$1XjQw
                                                                                                '_))))
                                                                                          g$t$10983$1XjQw))))
                                                                                    (g$syntax-dispatch$8301$1XjQw
                                                                                      g$t$10983$1XjQw
                                                                                      'each-any))))
                                                                                g$t$10975$1XjQw))))
                                                                          (g$syntax-dispatch$8301$1XjQw
                                                                            g$t$10975$1XjQw
                                                                            '(any any)))))
                                                                      g$t$10966$1XjQw))))
                                                                (g$syntax-dispatch$8301$1XjQw
                                                                  g$t$10966$1XjQw
                                                                  '(any .
                                                                        each-any)))))
                                                            g$t$10957$1XjQw))))
                                                      (g$syntax-dispatch$8301$1XjQw
                                                        g$t$10957$1XjQw
                                                        '(any . each-any)))))
                                                  g$t$10954$1XjQw))))
                                            (g$syntax-dispatch$8301$1XjQw
                                              g$t$10954$1XjQw
                                              '()))))
                                        g$x*$10953$1XjQw)))))
                          ((letrec ((g$f$10931$1XjQw
                                      (case-lambda
                                        ((g$x$10932$1XjQw)
                                         ((case-lambda
                                            ((g$t$10933$1XjQw)
                                             ((case-lambda
                                                ((g$ls/false$10934$1XjQw)
                                                 (if g$ls/false$10934$1XjQw
                                                   (apply
                                                     (case-lambda
                                                       ((g$version-spec*$10935$1XjQw)
                                                        (values
                                                          '()
                                                          (g$version-pred$10930$1XjQw
                                                            g$version-spec*$10935$1XjQw))))
                                                     g$ls/false$10934$1XjQw)
                                                   ((case-lambda
                                                      ((g$t$10936$1XjQw)
                                                       ((case-lambda
                                                          ((g$ls/false$10937$1XjQw)
                                                           (if (if g$ls/false$10937$1XjQw
                                                                 (begin
                                                                   '#f
                                                                   (apply
                                                                     (case-lambda
                                                                       ((g$x$10938$1XjQw
                                                                          g$x*$10939$1XjQw)
                                                                        (g$idsyn?$10825$1XjQw
                                                                          g$x$10938$1XjQw)))
                                                                     g$ls/false$10937$1XjQw))
                                                                 '#f)
                                                             (apply
                                                               (case-lambda
                                                                 ((g$x$10940$1XjQw
                                                                    g$x*$10941$1XjQw)
                                                                  (call-with-values
                                                                    (case-lambda
                                                                      (()
                                                                       (g$f$10931$1XjQw
                                                                         g$x*$10941$1XjQw)))
                                                                    (case-lambda
                                                                      ((g$name$10944$1XjQw
                                                                         g$pred$10945$1XjQw)
                                                                       ((case-lambda
                                                                          ((g$pred$10946$1XjQw
                                                                             g$name$10947$1XjQw)
                                                                           (values
                                                                             (cons
                                                                               (g$syntax->datum$8415$1XjQw
                                                                                 g$x$10940$1XjQw)
                                                                               g$name$10947$1XjQw)
                                                                             g$pred$10946$1XjQw)))
                                                                        g$pred$10945$1XjQw
                                                                        g$name$10944$1XjQw))))))
                                                               g$ls/false$10937$1XjQw)
                                                             ((case-lambda
                                                                ((g$t$10948$1XjQw)
                                                                 ((case-lambda
                                                                    ((g$ls/false$10949$1XjQw)
                                                                     (if g$ls/false$10949$1XjQw
                                                                       (apply
                                                                         (case-lambda
                                                                           (()
                                                                            (values
                                                                              '()
                                                                              (case-lambda
                                                                                ((g$x$10950$1XjQw)
                                                                                 '#t)))))
                                                                         g$ls/false$10949$1XjQw)
                                                                       ((case-lambda
                                                                          ((g$t$10951$1XjQw)
                                                                           ((case-lambda
                                                                              ((g$ls/false$10952$1XjQw)
                                                                               (if g$ls/false$10952$1XjQw
                                                                                 (apply
                                                                                   (case-lambda
                                                                                     (()
                                                                                      (g$syntax-violation$8412$1XjQw
                                                                                        '#f
                                                                                        '"invalid import spec"
                                                                                        g$spec$10927$1XjQw)))
                                                                                   g$ls/false$10952$1XjQw)
                                                                                 (g$syntax-violation$8412$1XjQw
                                                                                   '#f
                                                                                   '"invalid syntax"
                                                                                   g$t$10951$1XjQw))))
                                                                            (g$syntax-dispatch$8301$1XjQw
                                                                              g$t$10951$1XjQw
                                                                              '_))))
                                                                        g$t$10948$1XjQw))))
                                                                  (g$syntax-dispatch$8301$1XjQw
                                                                    g$t$10948$1XjQw
                                                                    '()))))
                                                              g$t$10936$1XjQw))))
                                                        (g$syntax-dispatch$8301$1XjQw
                                                          g$t$10936$1XjQw
                                                          '(any . any)))))
                                                    g$t$10933$1XjQw))))
                                              (g$syntax-dispatch$8301$1XjQw
                                                g$t$10933$1XjQw
                                                '(each-any)))))
                                          g$x$10932$1XjQw)))))
                             g$f$10931$1XjQw)
                           g$spec$10927$1XjQw)))))
                   (g$import-library$10833$1XjQw
                     (case-lambda
                       ((g$spec*$10919$1XjQw)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$parse-library-name$10832$1XjQw
                               g$spec*$10919$1XjQw)))
                          (case-lambda
                            ((g$name$10922$1XjQw g$pred$10923$1XjQw)
                             ((case-lambda
                                ((g$pred$10924$1XjQw g$name$10925$1XjQw)
                                 (begin
                                   (if (null? g$name$10925$1XjQw)
                                     (g$syntax-violation$8412$1XjQw
                                       'import
                                       '"empty library name"
                                       g$spec*$10919$1XjQw)
                                     (void))
                                   ((case-lambda
                                      ((g$lib$10926$1XjQw)
                                       (begin
                                         (if (not g$lib$10926$1XjQw)
                                           (g$syntax-violation$8412$1XjQw
                                             'import
                                             '"cannot find library with required name"
                                             g$name$10925$1XjQw)
                                           (void))
                                         (if (not (g$pred$10924$1XjQw
                                                    (g$library-version$7786$1XjQw
                                                      g$lib$10926$1XjQw)))
                                           (g$syntax-violation$8412$1XjQw
                                             'import
                                             '"library does not satisfy version specification"
                                             g$spec*$10919$1XjQw
                                             g$lib$10926$1XjQw)
                                           (void))
                                         ((g$imp-collector$8355$1XjQw)
                                          g$lib$10926$1XjQw)
                                         (g$library-subst$7790$1XjQw
                                           g$lib$10926$1XjQw))))
                                    (g$find-library-by-name$7826$1XjQw
                                      g$name$10925$1XjQw)))))
                              g$pred$10923$1XjQw
                              g$name$10922$1XjQw)))))))
                   (g$get-import$10834$1XjQw
                     (case-lambda
                       ((g$spec$10848$1XjQw)
                        ((case-lambda
                           ((g$t$10849$1XjQw)
                            ((case-lambda
                               ((g$ls/false$10850$1XjQw)
                                (if (if g$ls/false$10850$1XjQw
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$x$10851$1XjQw g$x*$10852$1XjQw)
                                             (not (g$memq$5749$1XjQw
                                                    (g$syntax->datum$8415$1XjQw
                                                      g$x$10851$1XjQw)
                                                    '(for rename
                                                          except
                                                          only
                                                          prefix
                                                          library)))))
                                          g$ls/false$10850$1XjQw))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$x$10853$1XjQw g$x*$10854$1XjQw)
                                       (g$import-library$10833$1XjQw
                                         (cons
                                           g$x$10853$1XjQw
                                           g$x*$10854$1XjQw))))
                                    g$ls/false$10850$1XjQw)
                                  ((case-lambda
                                     ((g$t$10855$1XjQw)
                                      ((case-lambda
                                         ((g$ls/false$10856$1XjQw)
                                          (if (if g$ls/false$10856$1XjQw
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$rename$10857$1XjQw
                                                         g$isp$10858$1XjQw
                                                         g$old*$10859$1XjQw
                                                         g$new*$10860$1XjQw)
                                                       (if (eq? (g$syntax->datum$8415$1XjQw
                                                                  g$rename$10857$1XjQw)
                                                                'rename)
                                                         (if (g$for-all$5755$1XjQw
                                                               g$idsyn?$10825$1XjQw
                                                               g$old*$10859$1XjQw)
                                                           (begin
                                                             '#f
                                                             (g$for-all$5755$1XjQw
                                                               g$idsyn?$10825$1XjQw
                                                               g$new*$10860$1XjQw))
                                                           '#f)
                                                         '#f)))
                                                    g$ls/false$10856$1XjQw))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$rename$10861$1XjQw
                                                   g$isp$10862$1XjQw
                                                   g$old*$10863$1XjQw
                                                   g$new*$10864$1XjQw)
                                                 ((case-lambda
                                                    ((g$subst$10865$1XjQw
                                                       g$old*$10866$1XjQw
                                                       g$new*$10867$1XjQw)
                                                     ((case-lambda
                                                        ((g$old-label*$10868$1XjQw)
                                                         ((case-lambda
                                                            ((g$subst$10869$1XjQw)
                                                             (g$merge-substs$10827$1XjQw
                                                               (g$map$5757$1XjQw
                                                                 cons
                                                                 g$new*$10867$1XjQw
                                                                 g$old-label*$10868$1XjQw)
                                                               g$subst$10869$1XjQw)))
                                                          (g$rem*$10830$1XjQw
                                                            g$old*$10866$1XjQw
                                                            g$subst$10865$1XjQw))))
                                                      (g$find*$10829$1XjQw
                                                        g$old*$10866$1XjQw
                                                        g$subst$10865$1XjQw))))
                                                  (g$get-import$10834$1XjQw
                                                    g$isp$10862$1XjQw)
                                                  (g$map$5757$1XjQw
                                                    g$syntax->datum$8415$1XjQw
                                                    g$old*$10863$1XjQw)
                                                  (g$map$5757$1XjQw
                                                    g$syntax->datum$8415$1XjQw
                                                    g$new*$10864$1XjQw))))
                                              g$ls/false$10856$1XjQw)
                                            ((case-lambda
                                               ((g$t$10870$1XjQw)
                                                ((case-lambda
                                                   ((g$ls/false$10871$1XjQw)
                                                    (if (if g$ls/false$10871$1XjQw
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$except$10872$1XjQw
                                                                   g$isp$10873$1XjQw
                                                                   g$sym*$10874$1XjQw)
                                                                 (if (eq? (g$syntax->datum$8415$1XjQw
                                                                            g$except$10872$1XjQw)
                                                                          'except)
                                                                   (begin
                                                                     '#f
                                                                     (g$for-all$5755$1XjQw
                                                                       g$idsyn?$10825$1XjQw
                                                                       g$sym*$10874$1XjQw))
                                                                   '#f)))
                                                              g$ls/false$10871$1XjQw))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$except$10875$1XjQw
                                                             g$isp$10876$1XjQw
                                                             g$sym*$10877$1XjQw)
                                                           ((case-lambda
                                                              ((g$subst$10878$1XjQw)
                                                               (g$rem*$10830$1XjQw
                                                                 (g$map$5757$1XjQw
                                                                   g$syntax->datum$8415$1XjQw
                                                                   g$sym*$10877$1XjQw)
                                                                 g$subst$10878$1XjQw)))
                                                            (g$get-import$10834$1XjQw
                                                              g$isp$10876$1XjQw))))
                                                        g$ls/false$10871$1XjQw)
                                                      ((case-lambda
                                                         ((g$t$10879$1XjQw)
                                                          ((case-lambda
                                                             ((g$ls/false$10880$1XjQw)
                                                              (if (if g$ls/false$10880$1XjQw
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$only$10881$1XjQw
                                                                             g$isp$10882$1XjQw
                                                                             g$sym*$10883$1XjQw)
                                                                           (if (eq? (g$syntax->datum$8415$1XjQw
                                                                                      g$only$10881$1XjQw)
                                                                                    'only)
                                                                             (begin
                                                                               '#f
                                                                               (g$for-all$5755$1XjQw
                                                                                 g$idsyn?$10825$1XjQw
                                                                                 g$sym*$10883$1XjQw))
                                                                             '#f)))
                                                                        g$ls/false$10880$1XjQw))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$only$10884$1XjQw
                                                                       g$isp$10885$1XjQw
                                                                       g$sym*$10886$1XjQw)
                                                                     ((case-lambda
                                                                        ((g$subst$10887$1XjQw
                                                                           g$sym*$10888$1XjQw)
                                                                         ((case-lambda
                                                                            ((g$sym*$10889$1XjQw)
                                                                             ((case-lambda
                                                                                ((g$lab*$10890$1XjQw)
                                                                                 (g$map$5757$1XjQw
                                                                                   cons
                                                                                   g$sym*$10889$1XjQw
                                                                                   g$lab*$10890$1XjQw)))
                                                                              (g$find*$10829$1XjQw
                                                                                g$sym*$10889$1XjQw
                                                                                g$subst$10887$1XjQw))))
                                                                          (g$remove-dups$10831$1XjQw
                                                                            g$sym*$10888$1XjQw))))
                                                                      (g$get-import$10834$1XjQw
                                                                        g$isp$10885$1XjQw)
                                                                      (g$map$5757$1XjQw
                                                                        g$syntax->datum$8415$1XjQw
                                                                        g$sym*$10886$1XjQw))))
                                                                  g$ls/false$10880$1XjQw)
                                                                ((case-lambda
                                                                   ((g$t$10891$1XjQw)
                                                                    ((case-lambda
                                                                       ((g$ls/false$10892$1XjQw)
                                                                        (if (if g$ls/false$10892$1XjQw
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$prefix$10893$1XjQw
                                                                                       g$isp$10894$1XjQw
                                                                                       g$p$10895$1XjQw)
                                                                                     (if (eq? (g$syntax->datum$8415$1XjQw
                                                                                                g$prefix$10893$1XjQw)
                                                                                              'prefix)
                                                                                       (begin
                                                                                         '#f
                                                                                         (g$idsyn?$10825$1XjQw
                                                                                           g$p$10895$1XjQw))
                                                                                       '#f)))
                                                                                  g$ls/false$10892$1XjQw))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$prefix$10896$1XjQw
                                                                                 g$isp$10897$1XjQw
                                                                                 g$p$10898$1XjQw)
                                                                               ((case-lambda
                                                                                  ((g$subst$10899$1XjQw
                                                                                     g$prefix$10900$1XjQw)
                                                                                   (g$map$5757$1XjQw
                                                                                     (case-lambda
                                                                                       ((g$x$10901$1XjQw)
                                                                                        (cons
                                                                                          (string->symbol
                                                                                            (string-append
                                                                                              g$prefix$10900$1XjQw
                                                                                              (symbol->string
                                                                                                (car g$x$10901$1XjQw))))
                                                                                          (cdr g$x$10901$1XjQw))))
                                                                                     g$subst$10899$1XjQw)))
                                                                                (g$get-import$10834$1XjQw
                                                                                  g$isp$10897$1XjQw)
                                                                                (symbol->string
                                                                                  (g$syntax->datum$8415$1XjQw
                                                                                    g$p$10898$1XjQw)))))
                                                                            g$ls/false$10892$1XjQw)
                                                                          ((case-lambda
                                                                             ((g$t$10902$1XjQw)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10903$1XjQw)
                                                                                  (if (if g$ls/false$10903$1XjQw
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$library$10904$1XjQw
                                                                                                 g$spec*$10905$1XjQw)
                                                                                               (eq? (g$syntax->datum$8415$1XjQw
                                                                                                      g$library$10904$1XjQw)
                                                                                                    'library)))
                                                                                            g$ls/false$10903$1XjQw))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$library$10906$1XjQw
                                                                                           g$spec*$10907$1XjQw)
                                                                                         (g$import-library$10833$1XjQw
                                                                                           g$spec*$10907$1XjQw)))
                                                                                      g$ls/false$10903$1XjQw)
                                                                                    ((case-lambda
                                                                                       ((g$t$10908$1XjQw)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10909$1XjQw)
                                                                                            (if (if g$ls/false$10909$1XjQw
                                                                                                  (begin
                                                                                                    '#f
                                                                                                    (apply
                                                                                                      (case-lambda
                                                                                                        ((g$for$10910$1XjQw
                                                                                                           g$isp$10911$1XjQw
                                                                                                           g$rest$10912$1XjQw)
                                                                                                         (eq? (g$syntax->datum$8415$1XjQw
                                                                                                                g$for$10910$1XjQw)
                                                                                                              'for)))
                                                                                                      g$ls/false$10909$1XjQw))
                                                                                                  '#f)
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$for$10913$1XjQw
                                                                                                     g$isp$10914$1XjQw
                                                                                                     g$rest$10915$1XjQw)
                                                                                                   (g$get-import$10834$1XjQw
                                                                                                     g$isp$10914$1XjQw)))
                                                                                                g$ls/false$10909$1XjQw)
                                                                                              ((case-lambda
                                                                                                 ((g$t$10916$1XjQw)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$10917$1XjQw)
                                                                                                      (if g$ls/false$10917$1XjQw
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$spec$10918$1XjQw)
                                                                                                             (g$syntax-violation$8412$1XjQw
                                                                                                               'import
                                                                                                               '"invalid import spec"
                                                                                                               g$spec$10918$1XjQw)))
                                                                                                          g$ls/false$10917$1XjQw)
                                                                                                        (g$syntax-violation$8412$1XjQw
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$10916$1XjQw))))
                                                                                                   (g$syntax-dispatch$8301$1XjQw
                                                                                                     g$t$10916$1XjQw
                                                                                                     'any))))
                                                                                               g$t$10908$1XjQw))))
                                                                                         (g$syntax-dispatch$8301$1XjQw
                                                                                           g$t$10908$1XjQw
                                                                                           '(any any
                                                                                                 .
                                                                                                 any)))))
                                                                                     g$t$10902$1XjQw))))
                                                                               (g$syntax-dispatch$8301$1XjQw
                                                                                 g$t$10902$1XjQw
                                                                                 '(any each-any)))))
                                                                           g$t$10891$1XjQw))))
                                                                     (g$syntax-dispatch$8301$1XjQw
                                                                       g$t$10891$1XjQw
                                                                       '(any any
                                                                             any)))))
                                                                 g$t$10879$1XjQw))))
                                                           (g$syntax-dispatch$8301$1XjQw
                                                             g$t$10879$1XjQw
                                                             '(any any
                                                                   .
                                                                   each-any)))))
                                                       g$t$10870$1XjQw))))
                                                 (g$syntax-dispatch$8301$1XjQw
                                                   g$t$10870$1XjQw
                                                   '(any any . each-any)))))
                                             g$t$10855$1XjQw))))
                                       (g$syntax-dispatch$8301$1XjQw
                                         g$t$10855$1XjQw
                                         '(any any . #(each (any any)))))))
                                   g$t$10849$1XjQw))))
                             (g$syntax-dispatch$8301$1XjQw
                               g$t$10849$1XjQw
                               '(any . each-any)))))
                         g$spec$10848$1XjQw))))
                   (g$add-imports!$10835$1XjQw
                     (case-lambda
                       ((g$imp$10840$1XjQw g$h$10841$1XjQw)
                        ((case-lambda
                           ((g$subst$10842$1XjQw)
                            (g$for-each$5758$1XjQw
                              (case-lambda
                                ((g$x$10843$1XjQw)
                                 ((case-lambda
                                    ((g$name$10844$1XjQw g$label$10845$1XjQw)
                                     ((case-lambda
                                        ((g$t$10846$1XjQw)
                                         (if g$t$10846$1XjQw
                                           ((case-lambda
                                              ((g$l$10847$1XjQw)
                                               (if (not (eq? g$l$10847$1XjQw
                                                             g$label$10845$1XjQw))
                                                 (g$dup-error$10826$1XjQw
                                                   g$name$10844$1XjQw)
                                                 (void))))
                                            g$t$10846$1XjQw)
                                           (g$hashtable-set!$6199$1XjQw
                                             g$h$10841$1XjQw
                                             g$name$10844$1XjQw
                                             g$label$10845$1XjQw))))
                                      (g$hashtable-ref$6198$1XjQw
                                        g$h$10841$1XjQw
                                        g$name$10844$1XjQw
                                        '#f))))
                                  (car g$x$10843$1XjQw)
                                  (cdr g$x$10843$1XjQw))))
                              g$subst$10842$1XjQw)))
                         (g$get-import$10834$1XjQw g$imp$10840$1XjQw))))))
           (case-lambda
             ((g$imp*$10836$1XjQw)
              ((letrec ((g$f$10837$1XjQw
                          (case-lambda
                            ((g$imp*$10838$1XjQw g$h$10839$1XjQw)
                             (if (null? g$imp*$10838$1XjQw)
                               (hashtable-entries g$h$10839$1XjQw)
                               (begin
                                 (g$add-imports!$10835$1XjQw
                                   (car g$imp*$10838$1XjQw)
                                   g$h$10839$1XjQw)
                                 (g$f$10837$1XjQw
                                   (cdr g$imp*$10838$1XjQw)
                                   g$h$10839$1XjQw)))))))
                 g$f$10837$1XjQw)
               g$imp*$10836$1XjQw
               (g$make-eq-hashtable$6195$1XjQw)))))))))
   (g$make-top-rib$8351$1XjQw
     g$make-top-rib$11842$1XjQw
     (case-lambda
       ((g$names$11087$1XjQw g$labels$11088$1XjQw)
        ((case-lambda
           ((g$rib$11089$1XjQw)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$11090$1XjQw g$label$11091$1XjQw)
                   (begin
                     (if (not (symbol? g$name$11090$1XjQw))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$11090$1XjQw)
                       (void))
                     (g$extend-rib/nc!$7987$1XjQw
                       g$rib$11089$1XjQw
                       (g$make-stx$7996$1XjQw
                         g$name$11090$1XjQw
                         g$top-mark*$7960$1XjQw
                         '()
                         '())
                       g$label$11091$1XjQw))))
                g$names$11087$1XjQw
                g$labels$11088$1XjQw)
              g$rib$11089$1XjQw)))
         (g$make-cache-rib$7984$1XjQw)))))
   (g$make-collector$8352$1XjQw
     g$make-collector$11843$1XjQw
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$11092$1XjQw)
            (case-lambda
              (() g$ls$11092$1XjQw)
              ((g$x$11093$1XjQw)
               (set! g$ls$11092$1XjQw
                 (g$set-cons$7957$1XjQw g$x$11093$1XjQw g$ls$11092$1XjQw))))))
         '()))))
   (g$inv-collector$8353$1XjQw
     g$inv-collector$11844$1XjQw
     (g$make-parameter$7295$1XjQw
       (case-lambda
         (g$args$11094$1XjQw
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$11095$1XjQw)
          (begin
            (if (not (procedure? g$x$11095$1XjQw))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$11095$1XjQw)
              (void))
            g$x$11095$1XjQw)))))
   (g$vis-collector$8354$1XjQw
     g$vis-collector$11845$1XjQw
     (g$make-parameter$7295$1XjQw
       (case-lambda
         (g$args$11096$1XjQw
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$11097$1XjQw)
          (begin
            (if (not (procedure? g$x$11097$1XjQw))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$11097$1XjQw)
              (void))
            g$x$11097$1XjQw)))))
   (g$imp-collector$8355$1XjQw
     g$imp-collector$11846$1XjQw
     (g$make-parameter$7295$1XjQw
       (case-lambda
         (g$args$11098$1XjQw
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$11099$1XjQw)
          (begin
            (if (not (procedure? g$x$11099$1XjQw))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$11099$1XjQw)
              (void))
            g$x$11099$1XjQw)))))
   (g$chi-library-internal$8356$1XjQw
     g$chi-library-internal$11847$1XjQw
     (case-lambda
       ((g$e*$11100$1XjQw g$rib$11101$1XjQw g$top?$11102$1XjQw)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$8345$1XjQw
               g$e*$11100$1XjQw
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$11101$1XjQw
               g$top?$11102$1XjQw)))
          (case-lambda
            ((g$e*$11111$1XjQw
               g$r$11112$1XjQw
               g$mr$11113$1XjQw
               g$lex*$11114$1XjQw
               g$rhs*$11115$1XjQw
               g$mod**$11116$1XjQw
               g$_kwd*$11117$1XjQw
               g$exp*$11118$1XjQw)
             ((case-lambda
                ((g$exp*$11119$1XjQw
                   g$_kwd*$11120$1XjQw
                   g$mod**$11121$1XjQw
                   g$rhs*$11122$1XjQw
                   g$lex*$11123$1XjQw
                   g$mr$11124$1XjQw
                   g$r$11125$1XjQw
                   g$e*$11126$1XjQw)
                 (values
                   (append
                     (apply append (reverse g$mod**$11121$1XjQw))
                     g$e*$11126$1XjQw)
                   g$r$11125$1XjQw
                   g$mr$11124$1XjQw
                   (reverse g$lex*$11123$1XjQw)
                   (reverse g$rhs*$11122$1XjQw)
                   g$exp*$11119$1XjQw)))
              g$exp*$11118$1XjQw
              g$_kwd*$11117$1XjQw
              g$mod**$11116$1XjQw
              g$rhs*$11115$1XjQw
              g$lex*$11114$1XjQw
              g$mr$11113$1XjQw
              g$r$11112$1XjQw
              g$e*$11111$1XjQw)))))))
   (g$chi-interaction-expr$8357$1XjQw
     g$chi-interaction-expr$11848$1XjQw
     (case-lambda
       ((g$e$11127$1XjQw g$rib$11128$1XjQw g$r$11129$1XjQw)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$8345$1XjQw
               (list g$e$11127$1XjQw)
               g$r$11129$1XjQw
               g$r$11129$1XjQw
               '()
               '()
               '()
               '()
               '()
               g$rib$11128$1XjQw
               '#t)))
          (case-lambda
            ((g$e*$11138$1XjQw
               g$r$11139$1XjQw
               g$mr$11140$1XjQw
               g$lex*$11141$1XjQw
               g$rhs*$11142$1XjQw
               g$mod**$11143$1XjQw
               g$_kwd*$11144$1XjQw
               g$_exp*$11145$1XjQw)
             ((case-lambda
                ((g$_exp*$11146$1XjQw
                   g$_kwd*$11147$1XjQw
                   g$mod**$11148$1XjQw
                   g$rhs*$11149$1XjQw
                   g$lex*$11150$1XjQw
                   g$mr$11151$1XjQw
                   g$r$11152$1XjQw
                   g$e*$11153$1XjQw)
                 ((case-lambda
                    ((g$e*$11154$1XjQw)
                     ((case-lambda
                        ((g$e$11155$1XjQw)
                         (values g$e$11155$1XjQw g$r$11152$1XjQw)))
                      (if (null? g$e*$11154$1XjQw)
                        (g$build-void$7953$1XjQw)
                        (if (null? (cdr g$e*$11154$1XjQw))
                          (car g$e*$11154$1XjQw)
                          (g$build-sequence$7952$1XjQw
                            '#f
                            g$e*$11154$1XjQw))))))
                  (g$expand-interaction-rhs*/init*$8326$1XjQw
                    (reverse g$lex*$11150$1XjQw)
                    (reverse g$rhs*$11149$1XjQw)
                    (append
                      (apply append (reverse g$mod**$11148$1XjQw))
                      g$e*$11153$1XjQw)
                    g$r$11152$1XjQw
                    g$mr$11151$1XjQw))))
              g$_exp*$11145$1XjQw
              g$_kwd*$11144$1XjQw
              g$mod**$11143$1XjQw
              g$rhs*$11142$1XjQw
              g$lex*$11141$1XjQw
              g$mr$11140$1XjQw
              g$r$11139$1XjQw
              g$e*$11138$1XjQw)))))))
   (g$library-body-expander$8358$1XjQw
     g$library-body-expander$11849$1XjQw
     (case-lambda
       ((g$name$11156$1XjQw
          g$main-exp*$11157$1XjQw
          g$imp*$11158$1XjQw
          g$b*$11159$1XjQw
          g$top?$11160$1XjQw)
        (letrec* ((g$itc$11161$1XjQw (g$make-collector$8352$1XjQw)))
          ((case-lambda
             ((g$imp-collector$11166$1XjQw
                g$top-level-context$11167$1XjQw
                g$imp-collector$11168$1XjQw
                g$top-level-context$11169$1XjQw)
              ((case-lambda
                 ((g$swap$11170$1XjQw)
                  (dynamic-wind
                    g$swap$11170$1XjQw
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$8350$1XjQw
                              g$imp*$11158$1XjQw)))
                         (case-lambda
                           ((g$subst-names$11173$1XjQw
                              g$subst-labels$11174$1XjQw)
                            ((case-lambda
                               ((g$subst-labels$11175$1XjQw
                                  g$subst-names$11176$1XjQw)
                                ((case-lambda
                                   ((g$rib$11177$1XjQw)
                                    (letrec* ((g$wrap$11178$1XjQw
                                                (case-lambda
                                                  ((g$x$11240$1XjQw)
                                                   (g$make-stx$7996$1XjQw
                                                     g$x$11240$1XjQw
                                                     g$top-mark*$7960$1XjQw
                                                     (list g$rib$11177$1XjQw)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$11179$1XjQw
                                            g$main-exp*$11180$1XjQw
                                            g$rtc$11181$1XjQw
                                            g$vtc$11182$1XjQw)
                                          ((case-lambda
                                             ((g$inv-collector$11187$1XjQw
                                                g$vis-collector$11188$1XjQw
                                                g$inv-collector$11189$1XjQw
                                                g$vis-collector$11190$1XjQw)
                                              ((case-lambda
                                                 ((g$swap$11191$1XjQw)
                                                  (dynamic-wind
                                                    g$swap$11191$1XjQw
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$8356$1XjQw
                                                              g$b*$11179$1XjQw
                                                              g$rib$11177$1XjQw
                                                              g$top?$11160$1XjQw)))
                                                         (case-lambda
                                                           ((g$init*$11198$1XjQw
                                                              g$r$11199$1XjQw
                                                              g$mr$11200$1XjQw
                                                              g$lex*$11201$1XjQw
                                                              g$rhs*$11202$1XjQw
                                                              g$internal-exp*$11203$1XjQw)
                                                            ((case-lambda
                                                               ((g$internal-exp*$11204$1XjQw
                                                                  g$rhs*$11205$1XjQw
                                                                  g$lex*$11206$1XjQw
                                                                  g$mr$11207$1XjQw
                                                                  g$r$11208$1XjQw
                                                                  g$init*$11209$1XjQw)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$8347$1XjQw
                                                                       (append
                                                                         g$main-exp*$11180$1XjQw
                                                                         g$internal-exp*$11204$1XjQw))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$11212$1XjQw
                                                                       g$exp-id*$11213$1XjQw)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$11214$1XjQw
                                                                           g$exp-name*$11215$1XjQw)
                                                                         (begin
                                                                           (g$seal-rib!$7989$1XjQw
                                                                             g$rib$11177$1XjQw)
                                                                           ((case-lambda
                                                                              ((g$init*$11216$1XjQw)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$11217$1XjQw)
                                                                                   ((case-lambda
                                                                                      (()
                                                                                       (begin
                                                                                         (g$unseal-rib!$7990$1XjQw
                                                                                           g$rib$11177$1XjQw)
                                                                                         ((case-lambda
                                                                                            ((g$loc*$11218$1XjQw
                                                                                               g$export-subst$11219$1XjQw)
                                                                                             (letrec* ((g$errstr$11220$1XjQw
                                                                                                         '"attempt to export mutated variable"))
                                                                                               (call-with-values
                                                                                                 (case-lambda
                                                                                                   (()
                                                                                                    (g$make-export-env/macros$8401$1XjQw
                                                                                                      g$lex*$11206$1XjQw
                                                                                                      g$loc*$11218$1XjQw
                                                                                                      g$r$11208$1XjQw)))
                                                                                                 (case-lambda
                                                                                                   ((g$export-env$11224$1XjQw
                                                                                                      g$global*$11225$1XjQw
                                                                                                      g$macro*$11226$1XjQw)
                                                                                                    ((case-lambda
                                                                                                       ((g$macro*$11227$1XjQw
                                                                                                          g$global*$11228$1XjQw
                                                                                                          g$export-env$11229$1XjQw)
                                                                                                        (begin
                                                                                                          (g$for-each$5758$1XjQw
                                                                                                            (case-lambda
                                                                                                              ((g$s$11230$1XjQw)
                                                                                                               ((case-lambda
                                                                                                                  ((g$name$11231$1XjQw
                                                                                                                     g$label$11232$1XjQw)
                                                                                                                   ((case-lambda
                                                                                                                      ((g$p$11233$1XjQw)
                                                                                                                       (if g$p$11233$1XjQw
                                                                                                                         ((case-lambda
                                                                                                                            ((g$b$11234$1XjQw)
                                                                                                                             ((case-lambda
                                                                                                                                ((g$type$11235$1XjQw)
                                                                                                                                 (if (eq? g$type$11235$1XjQw
                                                                                                                                          'mutable)
                                                                                                                                   (g$syntax-violation$8412$1XjQw
                                                                                                                                     'export
                                                                                                                                     g$errstr$11220$1XjQw
                                                                                                                                     g$name$11231$1XjQw)
                                                                                                                                   (void))))
                                                                                                                              (car g$b$11234$1XjQw))))
                                                                                                                          (cdr g$p$11233$1XjQw))
                                                                                                                         (void))))
                                                                                                                    (g$assq$5745$1XjQw
                                                                                                                      g$label$11232$1XjQw
                                                                                                                      g$export-env$11229$1XjQw))))
                                                                                                                (car g$s$11230$1XjQw)
                                                                                                                (cdr g$s$11230$1XjQw))))
                                                                                                            g$export-subst$11219$1XjQw)
                                                                                                          ((case-lambda
                                                                                                             ((g$invoke-body$11236$1XjQw
                                                                                                                g$invoke-definitions$11237$1XjQw)
                                                                                                              (values
                                                                                                                (g$itc$11161$1XjQw)
                                                                                                                (g$rtc$11181$1XjQw)
                                                                                                                (g$vtc$11182$1XjQw)
                                                                                                                (g$build-sequence$7952$1XjQw
                                                                                                                  '#f
                                                                                                                  (append
                                                                                                                    g$invoke-definitions$11237$1XjQw
                                                                                                                    (list
                                                                                                                      g$invoke-body$11236$1XjQw)))
                                                                                                                g$macro*$11227$1XjQw
                                                                                                                g$export-subst$11219$1XjQw
                                                                                                                g$export-env$11229$1XjQw)))
                                                                                                           (g$build-library-letrec*$7956$1XjQw
                                                                                                             '#f
                                                                                                             g$name$11156$1XjQw
                                                                                                             g$lex*$11206$1XjQw
                                                                                                             g$loc*$11218$1XjQw
                                                                                                             g$rhs*$11217$1XjQw
                                                                                                             (if (null?
                                                                                                                   g$init*$11216$1XjQw)
                                                                                                               (g$build-void$7953$1XjQw)
                                                                                                               (g$build-sequence$7952$1XjQw
                                                                                                                 '#f
                                                                                                                 g$init*$11216$1XjQw)))
                                                                                                           (g$map$5757$1XjQw
                                                                                                             g$build-global-define$7948$1XjQw
                                                                                                             (g$map$5757$1XjQw
                                                                                                               cdr
                                                                                                               g$global*$11228$1XjQw))))))
                                                                                                     g$macro*$11226$1XjQw
                                                                                                     g$global*$11225$1XjQw
                                                                                                     g$export-env$11224$1XjQw)))))))
                                                                                          (g$map$5757$1XjQw
                                                                                            g$gen-global$7963$1XjQw
                                                                                            g$lex*$11206$1XjQw)
                                                                                          (g$make-export-subst$8400$1XjQw
                                                                                            g$exp-name*$11215$1XjQw
                                                                                            g$exp-id*$11214$1XjQw))))))))
                                                                                (g$chi-rhs*$8327$1XjQw
                                                                                  g$rhs*$11205$1XjQw
                                                                                  g$r$11208$1XjQw
                                                                                  g$mr$11207$1XjQw))))
                                                                            (g$chi-expr*$8317$1XjQw
                                                                              g$init*$11209$1XjQw
                                                                              g$r$11208$1XjQw
                                                                              g$mr$11207$1XjQw)))))
                                                                      g$exp-id*$11213$1XjQw
                                                                      g$exp-name*$11212$1XjQw))))))
                                                             g$internal-exp*$11203$1XjQw
                                                             g$rhs*$11202$1XjQw
                                                             g$lex*$11201$1XjQw
                                                             g$mr$11200$1XjQw
                                                             g$r$11199$1XjQw
                                                             g$init*$11198$1XjQw))))))
                                                    g$swap$11191$1XjQw)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$11238$1XjQw)
                                                        (begin
                                                          (g$inv-collector$11187$1XjQw
                                                            g$inv-collector$11189$1XjQw)
                                                          (set! g$inv-collector$11189$1XjQw
                                                            g$t$11238$1XjQw))))
                                                     (g$inv-collector$11187$1XjQw))
                                                    ((case-lambda
                                                       ((g$t$11239$1XjQw)
                                                        (begin
                                                          (g$vis-collector$11188$1XjQw
                                                            g$vis-collector$11190$1XjQw)
                                                          (set! g$vis-collector$11190$1XjQw
                                                            g$t$11239$1XjQw))))
                                                     (g$vis-collector$11188$1XjQw))))))))
                                           g$inv-collector$8353$1XjQw
                                           g$vis-collector$8354$1XjQw
                                           g$rtc$11181$1XjQw
                                           g$vtc$11182$1XjQw)))
                                       (g$map$5757$1XjQw
                                         g$wrap$11178$1XjQw
                                         g$b*$11159$1XjQw)
                                       (g$map$5757$1XjQw
                                         g$wrap$11178$1XjQw
                                         g$main-exp*$11157$1XjQw)
                                       (g$make-collector$8352$1XjQw)
                                       (g$make-collector$8352$1XjQw)))))
                                 (g$make-top-rib$8351$1XjQw
                                   g$subst-names$11176$1XjQw
                                   g$subst-labels$11175$1XjQw))))
                             g$subst-labels$11174$1XjQw
                             g$subst-names$11173$1XjQw))))))
                    g$swap$11170$1XjQw)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$11241$1XjQw)
                        (begin
                          (g$imp-collector$11166$1XjQw
                            g$imp-collector$11168$1XjQw)
                          (set! g$imp-collector$11168$1XjQw g$t$11241$1XjQw))))
                     (g$imp-collector$11166$1XjQw))
                    ((case-lambda
                       ((g$t$11242$1XjQw)
                        (begin
                          (g$top-level-context$11167$1XjQw
                            g$top-level-context$11169$1XjQw)
                          (set! g$top-level-context$11169$1XjQw
                            g$t$11242$1XjQw))))
                     (g$top-level-context$11167$1XjQw))))))))
           g$imp-collector$8355$1XjQw
           g$top-level-context$8419$1XjQw
           g$itc$11161$1XjQw
           '#f)))))
   (g$core-library-expander$8359$1XjQw
     g$core-library-expander$11850$1XjQw
     (case-lambda
       ((g$e$11243$1XjQw g$verify-name$11244$1XjQw)
        (call-with-values
          (case-lambda (() (g$parse-library$8349$1XjQw g$e$11243$1XjQw)))
          (case-lambda
            ((g$name*$11249$1XjQw
               g$exp*$11250$1XjQw
               g$imp*$11251$1XjQw
               g$b*$11252$1XjQw)
             ((case-lambda
                ((g$b*$11253$1XjQw
                   g$imp*$11254$1XjQw
                   g$exp*$11255$1XjQw
                   g$name*$11256$1XjQw)
                 (call-with-values
                   (case-lambda
                     (() (g$parse-library-name$8348$1XjQw g$name*$11256$1XjQw)))
                   (case-lambda
                     ((g$name$11259$1XjQw g$ver$11260$1XjQw)
                      ((case-lambda
                         ((g$ver$11261$1XjQw g$name$11262$1XjQw)
                          (begin
                            (g$verify-name$11244$1XjQw g$name$11262$1XjQw)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$8358$1XjQw
                                   g$name$11262$1XjQw
                                   g$exp*$11255$1XjQw
                                   g$imp*$11254$1XjQw
                                   g$b*$11253$1XjQw
                                   '#f)))
                              (case-lambda
                                ((g$imp*$11270$1XjQw
                                   g$invoke-req*$11271$1XjQw
                                   g$visit-req*$11272$1XjQw
                                   g$invoke-code$11273$1XjQw
                                   g$visit-code$11274$1XjQw
                                   g$export-subst$11275$1XjQw
                                   g$export-env$11276$1XjQw)
                                 ((case-lambda
                                    ((g$export-env$11277$1XjQw
                                       g$export-subst$11278$1XjQw
                                       g$visit-code$11279$1XjQw
                                       g$invoke-code$11280$1XjQw
                                       g$visit-req*$11281$1XjQw
                                       g$invoke-req*$11282$1XjQw
                                       g$imp*$11283$1XjQw)
                                     (values
                                       g$name$11262$1XjQw
                                       g$ver$11261$1XjQw
                                       g$imp*$11283$1XjQw
                                       g$invoke-req*$11282$1XjQw
                                       g$visit-req*$11281$1XjQw
                                       g$invoke-code$11280$1XjQw
                                       g$visit-code$11279$1XjQw
                                       g$export-subst$11278$1XjQw
                                       g$export-env$11277$1XjQw)))
                                  g$export-env$11276$1XjQw
                                  g$export-subst$11275$1XjQw
                                  g$visit-code$11274$1XjQw
                                  g$invoke-code$11273$1XjQw
                                  g$visit-req*$11272$1XjQw
                                  g$invoke-req*$11271$1XjQw
                                  g$imp*$11270$1XjQw)))))))
                       g$ver$11260$1XjQw
                       g$name$11259$1XjQw))))))
              g$b*$11252$1XjQw
              g$imp*$11251$1XjQw
              g$exp*$11250$1XjQw
              g$name*$11249$1XjQw)))))))
   (g$parse-top-level-program$8360$1XjQw
     g$parse-top-level-program$11851$1XjQw
     (case-lambda
       ((g$e*$11284$1XjQw)
        ((case-lambda
           ((g$t$11285$1XjQw)
            ((case-lambda
               ((g$ls/false$11286$1XjQw)
                (if (if g$ls/false$11286$1XjQw
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$11287$1XjQw
                               g$imp*$11288$1XjQw
                               g$b*$11289$1XjQw)
                             (eq? (g$syntax->datum$8415$1XjQw
                                    g$import$11287$1XjQw)
                                  'import)))
                          g$ls/false$11286$1XjQw))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$11290$1XjQw
                         g$imp*$11291$1XjQw
                         g$b*$11292$1XjQw)
                       (values g$imp*$11291$1XjQw g$b*$11292$1XjQw)))
                    g$ls/false$11286$1XjQw)
                  ((case-lambda
                     ((g$t$11293$1XjQw)
                      ((case-lambda
                         ((g$ls/false$11294$1XjQw)
                          (if (if g$ls/false$11294$1XjQw
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$11295$1XjQw
                                         g$x$11296$1XjQw
                                         g$y$11297$1XjQw)
                                       (eq? (g$syntax->datum$8415$1XjQw
                                              g$import$11295$1XjQw)
                                            'import)))
                                    g$ls/false$11294$1XjQw))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$11298$1XjQw
                                   g$x$11299$1XjQw
                                   g$y$11300$1XjQw)
                                 (g$syntax-violation$8412$1XjQw
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$8020$1XjQw g$e*$11284$1XjQw))))
                              g$ls/false$11294$1XjQw)
                            ((case-lambda
                               ((g$t$11301$1XjQw)
                                ((case-lambda
                                   ((g$ls/false$11302$1XjQw)
                                    (if g$ls/false$11302$1XjQw
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$11302$1XjQw)
                                      (g$syntax-violation$8412$1XjQw
                                        '#f
                                        '"invalid syntax"
                                        g$t$11301$1XjQw))))
                                 (g$syntax-dispatch$8301$1XjQw
                                   g$t$11301$1XjQw
                                   '_))))
                             g$t$11293$1XjQw))))
                       (g$syntax-dispatch$8301$1XjQw
                         g$t$11293$1XjQw
                         '((any . any) . any)))))
                   g$t$11285$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw
               g$t$11285$1XjQw
               '((any . each-any) . each-any)))))
         g$e*$11284$1XjQw))))
   (g$top-level-expander$8361$1XjQw
     g$top-level-expander$11852$1XjQw
     (case-lambda
       ((g$e*$11303$1XjQw)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$8360$1XjQw g$e*$11303$1XjQw)))
          (case-lambda
            ((g$imp*$11306$1XjQw g$b*$11307$1XjQw)
             ((case-lambda
                ((g$b*$11308$1XjQw g$imp*$11309$1XjQw)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$8358$1XjQw
                        '()
                        '()
                        g$imp*$11309$1XjQw
                        g$b*$11308$1XjQw
                        '#t)))
                   (case-lambda
                     ((g$imp*$11317$1XjQw
                        g$invoke-req*$11318$1XjQw
                        g$visit-req*$11319$1XjQw
                        g$invoke-code$11320$1XjQw
                        g$visit-code$11321$1XjQw
                        g$export-subst$11322$1XjQw
                        g$export-env$11323$1XjQw)
                      ((case-lambda
                         ((g$export-env$11324$1XjQw
                            g$export-subst$11325$1XjQw
                            g$visit-code$11326$1XjQw
                            g$invoke-code$11327$1XjQw
                            g$visit-req*$11328$1XjQw
                            g$invoke-req*$11329$1XjQw
                            g$imp*$11330$1XjQw)
                          (values
                            g$invoke-req*$11329$1XjQw
                            g$invoke-code$11327$1XjQw)))
                       g$export-env$11323$1XjQw
                       g$export-subst$11322$1XjQw
                       g$visit-code$11321$1XjQw
                       g$invoke-code$11320$1XjQw
                       g$visit-req*$11319$1XjQw
                       g$invoke-req*$11318$1XjQw
                       g$imp*$11317$1XjQw))))))
              g$b*$11307$1XjQw
              g$imp*$11306$1XjQw)))))))
   (g$9481$8362$1XjQw
     g$9481$11853$1XjQw
     (make-record-type-descriptor
       'env
       '#f
       'g$9484$1XjQw
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$9483$8363$1XjQw g$9483$11854$1XjQw '#f)
   (g$9482$8364$1XjQw
     g$9482$11855$1XjQw
     (make-record-constructor-descriptor
       g$9481$8362$1XjQw
       '#f
       g$9483$8363$1XjQw))
   (g$env?$8365$1XjQw
     g$env?$11856$1XjQw
     (record-predicate g$9481$8362$1XjQw))
   (g$make-env$8366$1XjQw
     g$make-env$11857$1XjQw
     (record-constructor g$9482$8364$1XjQw))
   (g$env-names$8367$1XjQw
     g$env-names$11858$1XjQw
     (record-accessor g$9481$8362$1XjQw '0))
   (g$env-labels$8368$1XjQw
     g$env-labels$11859$1XjQw
     (record-accessor g$9481$8362$1XjQw '1))
   (g$env-itc$8369$1XjQw
     g$env-itc$11860$1XjQw
     (record-accessor g$9481$8362$1XjQw '2))
   (g$set-env-names!$8370$1XjQw
     g$set-env-names!$11861$1XjQw
     (record-mutator g$9481$8362$1XjQw '0))
   (g$set-env-labels!$8371$1XjQw
     g$set-env-labels!$11862$1XjQw
     (record-mutator g$9481$8362$1XjQw '1))
   (g$set-env-itc!$8372$1XjQw
     g$set-env-itc!$11863$1XjQw
     (record-mutator g$9481$8362$1XjQw '2))
   (g$rp$8373$1XjQw
     g$rp$11864$1XjQw
     (make-record-printer
       'env
       (case-lambda
         ((g$x$11331$1XjQw g$p$11332$1XjQw g$wr$11333$1XjQw)
          (display '"#<environment>" g$p$11332$1XjQw)))))
   (g$9500$8374$1XjQw
     g$9500$11865$1XjQw
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$9503$1XjQw
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$9502$8375$1XjQw g$9502$11866$1XjQw '#f)
   (g$9501$8376$1XjQw
     g$9501$11867$1XjQw
     (make-record-constructor-descriptor
       g$9500$8374$1XjQw
       '#f
       g$9502$8375$1XjQw))
   (g$interaction-env?$8377$1XjQw
     g$interaction-env?$11868$1XjQw
     (record-predicate g$9500$8374$1XjQw))
   (g$make-interaction-env$8378$1XjQw
     g$make-interaction-env$11869$1XjQw
     (record-constructor g$9501$8376$1XjQw))
   (g$interaction-env-rib$8379$1XjQw
     g$interaction-env-rib$11870$1XjQw
     (record-accessor g$9500$8374$1XjQw '0))
   (g$interaction-env-r$8380$1XjQw
     g$interaction-env-r$11871$1XjQw
     (record-accessor g$9500$8374$1XjQw '1))
   (g$interaction-env-locs$8381$1XjQw
     g$interaction-env-locs$11872$1XjQw
     (record-accessor g$9500$8374$1XjQw '2))
   (g$set-interaction-env-rib!$8382$1XjQw
     g$set-interaction-env-rib!$11873$1XjQw
     (record-mutator g$9500$8374$1XjQw '0))
   (g$set-interaction-env-r!$8383$1XjQw
     g$set-interaction-env-r!$11874$1XjQw
     (record-mutator g$9500$8374$1XjQw '1))
   (g$set-interaction-env-locs!$8384$1XjQw
     g$set-interaction-env-locs!$11875$1XjQw
     (record-mutator g$9500$8374$1XjQw '2))
   (g$rp$8385$1XjQw
     g$rp$11876$1XjQw
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$11334$1XjQw g$p$11335$1XjQw g$wr$11336$1XjQw)
          (display '"#<environment>" g$p$11335$1XjQw)))))
   (g$interaction-environment-symbols$8386$1XjQw
     g$interaction-environment-symbols$11877$1XjQw
     (case-lambda
       (()
        (g$environment-symbols$8390$1XjQw
          (g$interaction-environment$8418$1XjQw)))))
   (g$environment-bindings$8387$1XjQw
     g$environment-bindings$11878$1XjQw
     (case-lambda
       ((g$e$11337$1XjQw)
        (vector->list
          (vector-map
            (case-lambda
              ((g$name$11338$1XjQw g$label$11339$1XjQw)
               (g$parse-binding$8388$1XjQw
                 (cons
                   g$name$11338$1XjQw
                   (g$imported-label->binding$7832$1XjQw
                     g$label$11339$1XjQw)))))
            (g$env-names$8367$1XjQw g$e$11337$1XjQw)
            (g$env-labels$8368$1XjQw g$e$11337$1XjQw))))))
   (g$parse-binding$8388$1XjQw
     g$parse-binding$11879$1XjQw
     (case-lambda
       ((g$b$11340$1XjQw)
        (cons
          (car g$b$11340$1XjQw)
          ((case-lambda
             ((g$t$11341$1XjQw)
              (if (g$memv$5750$1XjQw g$t$11341$1XjQw '(core-prim global))
                'procedure
                (if (g$memv$5750$1XjQw
                      g$t$11341$1XjQw
                      '(core-macro macro global-macro))
                  'syntax
                  (if (g$memv$5750$1XjQw g$t$11341$1XjQw '($core-rtd))
                    'record
                    (if (eq? (car g$b$11340$1XjQw)
                             (g$cadr$5921$1XjQw g$b$11340$1XjQw))
                      'syntax
                      'unknown))))))
           (g$cadr$5921$1XjQw g$b$11340$1XjQw))))))
   (g$environment?$8389$1XjQw
     g$environment?$11880$1XjQw
     (case-lambda
       ((g$x$11342$1XjQw)
        ((case-lambda
           ((g$t$11343$1XjQw)
            (if g$t$11343$1XjQw
              g$t$11343$1XjQw
              (begin '#f (g$interaction-env?$8377$1XjQw g$x$11342$1XjQw)))))
         (g$env?$8365$1XjQw g$x$11342$1XjQw)))))
   (g$environment-symbols$8390$1XjQw
     g$environment-symbols$11881$1XjQw
     (case-lambda
       ((g$x$11344$1XjQw)
        (if (g$env?$8365$1XjQw g$x$11344$1XjQw)
          (vector->list (g$env-names$8367$1XjQw g$x$11344$1XjQw))
          (if (g$interaction-env?$8377$1XjQw g$x$11344$1XjQw)
            (g$map$5757$1XjQw
              values
              (g$rib-sym*$7973$1XjQw
                (g$interaction-env-rib$8379$1XjQw g$x$11344$1XjQw)))
            (assertion-violation
              'environment-symbols
              '"not an environment"
              g$x$11344$1XjQw))))))
   (g$environment$8391$1XjQw
     g$environment$11882$1XjQw
     (case-lambda
       (g$imp*$11345$1XjQw
        ((case-lambda
           ((g$itc$11346$1XjQw)
            ((case-lambda
               ((g$imp-collector$11349$1XjQw g$imp-collector$11350$1XjQw)
                ((case-lambda
                   ((g$swap$11351$1XjQw)
                    (dynamic-wind
                      g$swap$11351$1XjQw
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$8350$1XjQw
                                g$imp*$11345$1XjQw)))
                           (case-lambda
                             ((g$subst-names$11354$1XjQw
                                g$subst-labels$11355$1XjQw)
                              ((case-lambda
                                 ((g$subst-labels$11356$1XjQw
                                    g$subst-names$11357$1XjQw)
                                  (g$make-env$8366$1XjQw
                                    g$subst-names$11357$1XjQw
                                    g$subst-labels$11356$1XjQw
                                    g$itc$11346$1XjQw)))
                               g$subst-labels$11355$1XjQw
                               g$subst-names$11354$1XjQw))))))
                      g$swap$11351$1XjQw)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$11358$1XjQw)
                        (begin
                          (g$imp-collector$11349$1XjQw
                            g$imp-collector$11350$1XjQw)
                          (set! g$imp-collector$11350$1XjQw g$t$11358$1XjQw))))
                     (g$imp-collector$11349$1XjQw)))))))
             g$imp-collector$8355$1XjQw
             g$itc$11346$1XjQw)))
         (g$make-collector$8352$1XjQw)))))
   (g$null-environment$8392$1XjQw
     g$null-environment$11883$1XjQw
     (case-lambda
       ((g$n$11359$1XjQw)
        (begin
          (if (not (eqv? g$n$11359$1XjQw '5))
            (assertion-violation 'null-environment '"not 5" g$n$11359$1XjQw)
            (void))
          (g$environment$8391$1XjQw '(psyntax null-environment-5))))))
   (g$scheme-report-environment$8393$1XjQw
     g$scheme-report-environment$11884$1XjQw
     (case-lambda
       ((g$n$11360$1XjQw)
        (begin
          (if (not (eqv? g$n$11360$1XjQw '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$11360$1XjQw)
            (void))
          (g$environment$8391$1XjQw '(psyntax scheme-report-environment-5))))))
   (g$expand$8394$1XjQw
     g$expand$11885$1XjQw
     (case-lambda
       ((g$x$11361$1XjQw g$env$11362$1XjQw)
        (if (g$env?$8365$1XjQw g$env$11362$1XjQw)
          ((case-lambda
             ((g$rib$11363$1XjQw)
              ((case-lambda
                 ((g$x$11364$1XjQw
                    g$itc$11365$1XjQw
                    g$rtc$11366$1XjQw
                    g$vtc$11367$1XjQw)
                  ((case-lambda
                     ((g$x$11368$1XjQw)
                      (begin
                        (g$seal-rib!$7989$1XjQw g$rib$11363$1XjQw)
                        (values g$x$11368$1XjQw (g$rtc$11366$1XjQw)))))
                   ((case-lambda
                      ((g$top-level-context$11377$1XjQw
                         g$inv-collector$11378$1XjQw
                         g$vis-collector$11379$1XjQw
                         g$imp-collector$11380$1XjQw
                         g$top-level-context$11381$1XjQw
                         g$inv-collector$11382$1XjQw
                         g$vis-collector$11383$1XjQw
                         g$imp-collector$11384$1XjQw)
                       ((case-lambda
                          ((g$swap$11385$1XjQw)
                           (dynamic-wind
                             g$swap$11385$1XjQw
                             (case-lambda
                               (()
                                (g$chi-expr$8319$1XjQw
                                  g$x$11364$1XjQw
                                  '()
                                  '())))
                             g$swap$11385$1XjQw)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$11386$1XjQw)
                                 (begin
                                   (g$top-level-context$11377$1XjQw
                                     g$top-level-context$11381$1XjQw)
                                   (set! g$top-level-context$11381$1XjQw
                                     g$t$11386$1XjQw))))
                              (g$top-level-context$11377$1XjQw))
                             ((case-lambda
                                ((g$t$11387$1XjQw)
                                 (begin
                                   (g$inv-collector$11378$1XjQw
                                     g$inv-collector$11382$1XjQw)
                                   (set! g$inv-collector$11382$1XjQw
                                     g$t$11387$1XjQw))))
                              (g$inv-collector$11378$1XjQw))
                             ((case-lambda
                                ((g$t$11388$1XjQw)
                                 (begin
                                   (g$vis-collector$11379$1XjQw
                                     g$vis-collector$11383$1XjQw)
                                   (set! g$vis-collector$11383$1XjQw
                                     g$t$11388$1XjQw))))
                              (g$vis-collector$11379$1XjQw))
                             ((case-lambda
                                ((g$t$11389$1XjQw)
                                 (begin
                                   (g$imp-collector$11380$1XjQw
                                     g$imp-collector$11384$1XjQw)
                                   (set! g$imp-collector$11384$1XjQw
                                     g$t$11389$1XjQw))))
                              (g$imp-collector$11380$1XjQw))))))))
                    g$top-level-context$8419$1XjQw
                    g$inv-collector$8353$1XjQw
                    g$vis-collector$8354$1XjQw
                    g$imp-collector$8355$1XjQw
                    '#f
                    g$rtc$11366$1XjQw
                    g$vtc$11367$1XjQw
                    g$itc$11365$1XjQw))))
               (g$make-stx$7996$1XjQw
                 g$x$11361$1XjQw
                 g$top-mark*$7960$1XjQw
                 (list g$rib$11363$1XjQw)
                 '())
               (g$env-itc$8369$1XjQw g$env$11362$1XjQw)
               (g$make-collector$8352$1XjQw)
               (g$make-collector$8352$1XjQw))))
           (g$make-top-rib$8351$1XjQw
             (g$env-names$8367$1XjQw g$env$11362$1XjQw)
             (g$env-labels$8368$1XjQw g$env$11362$1XjQw)))
          (if (g$interaction-env?$8377$1XjQw g$env$11362$1XjQw)
            ((case-lambda
               ((g$rib$11390$1XjQw g$r$11391$1XjQw g$rtc$11392$1XjQw)
                ((case-lambda
                   ((g$x$11393$1XjQw)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$11404$1XjQw
                               g$inv-collector$11405$1XjQw
                               g$vis-collector$11406$1XjQw
                               g$imp-collector$11407$1XjQw
                               g$top-level-context$11408$1XjQw
                               g$inv-collector$11409$1XjQw
                               g$vis-collector$11410$1XjQw
                               g$imp-collector$11411$1XjQw)
                             ((case-lambda
                                ((g$swap$11412$1XjQw)
                                 (dynamic-wind
                                   g$swap$11412$1XjQw
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$8357$1XjQw
                                        g$x$11393$1XjQw
                                        g$rib$11390$1XjQw
                                        g$r$11391$1XjQw)))
                                   g$swap$11412$1XjQw)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$11413$1XjQw)
                                       (begin
                                         (g$top-level-context$11404$1XjQw
                                           g$top-level-context$11408$1XjQw)
                                         (set! g$top-level-context$11408$1XjQw
                                           g$t$11413$1XjQw))))
                                    (g$top-level-context$11404$1XjQw))
                                   ((case-lambda
                                      ((g$t$11414$1XjQw)
                                       (begin
                                         (g$inv-collector$11405$1XjQw
                                           g$inv-collector$11409$1XjQw)
                                         (set! g$inv-collector$11409$1XjQw
                                           g$t$11414$1XjQw))))
                                    (g$inv-collector$11405$1XjQw))
                                   ((case-lambda
                                      ((g$t$11415$1XjQw)
                                       (begin
                                         (g$vis-collector$11406$1XjQw
                                           g$vis-collector$11410$1XjQw)
                                         (set! g$vis-collector$11410$1XjQw
                                           g$t$11415$1XjQw))))
                                    (g$vis-collector$11406$1XjQw))
                                   ((case-lambda
                                      ((g$t$11416$1XjQw)
                                       (begin
                                         (g$imp-collector$11407$1XjQw
                                           g$imp-collector$11411$1XjQw)
                                         (set! g$imp-collector$11411$1XjQw
                                           g$t$11416$1XjQw))))
                                    (g$imp-collector$11407$1XjQw))))))))
                          g$top-level-context$8419$1XjQw
                          g$inv-collector$8353$1XjQw
                          g$vis-collector$8354$1XjQw
                          g$imp-collector$8355$1XjQw
                          g$env$11362$1XjQw
                          g$rtc$11392$1XjQw
                          (g$make-collector$8352$1XjQw)
                          (g$make-collector$8352$1XjQw))))
                      (case-lambda
                        ((g$e$11417$1XjQw g$r^$11418$1XjQw)
                         ((case-lambda
                            ((g$r^$11419$1XjQw g$e$11420$1XjQw)
                             (begin
                               (g$set-interaction-env-r!$8383$1XjQw
                                 g$env$11362$1XjQw
                                 g$r^$11419$1XjQw)
                               (values g$e$11420$1XjQw (g$rtc$11392$1XjQw)))))
                          g$r^$11418$1XjQw
                          g$e$11417$1XjQw))))))
                 (g$make-stx$7996$1XjQw
                   g$x$11361$1XjQw
                   g$top-mark*$7960$1XjQw
                   (list g$rib$11390$1XjQw)
                   '()))))
             (g$interaction-env-rib$8379$1XjQw g$env$11362$1XjQw)
             (g$interaction-env-r$8380$1XjQw g$env$11362$1XjQw)
             (g$make-collector$8352$1XjQw))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$11362$1XjQw))))))
   (g$eval$8395$1XjQw
     g$eval$11886$1XjQw
     (case-lambda
       ((g$x$11421$1XjQw g$env$11422$1XjQw)
        (begin
          (if (not (g$environment?$8389$1XjQw g$env$11422$1XjQw))
            (error 'eval '"not an environment" g$env$11422$1XjQw)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$8394$1XjQw g$x$11421$1XjQw g$env$11422$1XjQw)))
            (case-lambda
              ((g$x$11425$1XjQw g$invoke-req*$11426$1XjQw)
               ((case-lambda
                  ((g$invoke-req*$11427$1XjQw g$x$11428$1XjQw)
                   (begin
                     (g$for-each$5758$1XjQw
                       g$invoke-library$7833$1XjQw
                       g$invoke-req*$11427$1XjQw)
                     (eval-core
                       (g$expanded->core$7541$1XjQw g$x$11428$1XjQw)))))
                g$invoke-req*$11426$1XjQw
                g$x$11425$1XjQw))))))))
   (g$library-expander$8396$1XjQw
     g$library-expander$11887$1XjQw
     (case-lambda
       ((g$x$11429$1XjQw g$filename$11430$1XjQw g$verify-name$11431$1XjQw)
        (letrec* ((g$build-visit-code$11432$1XjQw
                    (case-lambda
                      ((g$macro*$11475$1XjQw)
                       (if (null? g$macro*$11475$1XjQw)
                         (g$build-void$7953$1XjQw)
                         (g$build-sequence$7952$1XjQw
                           '#f
                           (g$map$5757$1XjQw
                             (case-lambda
                               ((g$x$11476$1XjQw)
                                ((case-lambda
                                   ((g$loc$11477$1XjQw g$src$11478$1XjQw)
                                    (list
                                      'set!
                                      g$loc$11477$1XjQw
                                      g$src$11478$1XjQw)))
                                 (car g$x$11476$1XjQw)
                                 (g$cddr$5923$1XjQw g$x$11476$1XjQw))))
                             g$macro*$11475$1XjQw))))))
                  (g$visit!$11433$1XjQw
                    (case-lambda
                      ((g$macro*$11471$1XjQw)
                       (g$for-each$5758$1XjQw
                         (case-lambda
                           ((g$x$11472$1XjQw)
                            ((case-lambda
                               ((g$loc$11473$1XjQw g$proc$11474$1XjQw)
                                (set-symbol-value!
                                  g$loc$11473$1XjQw
                                  g$proc$11474$1XjQw)))
                             (car g$x$11472$1XjQw)
                             (g$cadr$5921$1XjQw g$x$11472$1XjQw))))
                         g$macro*$11471$1XjQw)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$8359$1XjQw
                 g$x$11429$1XjQw
                 g$verify-name$11431$1XjQw)))
            (case-lambda
              ((g$name$11443$1XjQw
                 g$ver$11444$1XjQw
                 g$imp*$11445$1XjQw
                 g$inv*$11446$1XjQw
                 g$vis*$11447$1XjQw
                 g$invoke-code$11448$1XjQw
                 g$macro*$11449$1XjQw
                 g$export-subst$11450$1XjQw
                 g$export-env$11451$1XjQw)
               ((case-lambda
                  ((g$export-env$11452$1XjQw
                     g$export-subst$11453$1XjQw
                     g$macro*$11454$1XjQw
                     g$invoke-code$11455$1XjQw
                     g$vis*$11456$1XjQw
                     g$inv*$11457$1XjQw
                     g$imp*$11458$1XjQw
                     g$ver$11459$1XjQw
                     g$name$11460$1XjQw)
                   ((case-lambda
                      ((g$id$11461$1XjQw
                         g$name$11462$1XjQw
                         g$ver$11463$1XjQw
                         g$imp*$11464$1XjQw
                         g$vis*$11465$1XjQw
                         g$inv*$11466$1XjQw
                         g$visit-proc$11467$1XjQw
                         g$invoke-proc$11468$1XjQw
                         g$visit-code$11469$1XjQw
                         g$invoke-code$11470$1XjQw)
                       (begin
                         (g$install-library$7831$1XjQw
                           g$id$11461$1XjQw
                           g$name$11462$1XjQw
                           g$ver$11463$1XjQw
                           g$imp*$11464$1XjQw
                           g$vis*$11465$1XjQw
                           g$inv*$11466$1XjQw
                           g$export-subst$11453$1XjQw
                           g$export-env$11452$1XjQw
                           g$visit-proc$11467$1XjQw
                           g$invoke-proc$11468$1XjQw
                           g$visit-code$11469$1XjQw
                           g$invoke-code$11470$1XjQw
                           '#t
                           g$filename$11430$1XjQw)
                         (values
                           g$id$11461$1XjQw
                           g$name$11462$1XjQw
                           g$ver$11463$1XjQw
                           g$imp*$11464$1XjQw
                           g$vis*$11465$1XjQw
                           g$inv*$11466$1XjQw
                           g$invoke-code$11470$1XjQw
                           g$visit-code$11469$1XjQw
                           g$export-subst$11453$1XjQw
                           g$export-env$11452$1XjQw))))
                    (gensym)
                    g$name$11460$1XjQw
                    g$ver$11459$1XjQw
                    (g$map$5757$1XjQw
                      g$library-spec$7837$1XjQw
                      g$imp*$11458$1XjQw)
                    (g$map$5757$1XjQw
                      g$library-spec$7837$1XjQw
                      g$vis*$11456$1XjQw)
                    (g$map$5757$1XjQw
                      g$library-spec$7837$1XjQw
                      g$inv*$11457$1XjQw)
                    (case-lambda
                      (() (g$visit!$11433$1XjQw g$macro*$11454$1XjQw)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$7541$1XjQw
                           g$invoke-code$11455$1XjQw))))
                    (g$build-visit-code$11432$1XjQw g$macro*$11454$1XjQw)
                    g$invoke-code$11455$1XjQw)))
                g$export-env$11451$1XjQw
                g$export-subst$11450$1XjQw
                g$macro*$11449$1XjQw
                g$invoke-code$11448$1XjQw
                g$vis*$11447$1XjQw
                g$inv*$11446$1XjQw
                g$imp*$11445$1XjQw
                g$ver$11444$1XjQw
                g$name$11443$1XjQw))))))
       ((g$x$11479$1XjQw g$filename$11480$1XjQw)
        (g$library-expander$8396$1XjQw
          g$x$11479$1XjQw
          g$filename$11480$1XjQw
          (case-lambda ((g$x$11481$1XjQw) (values)))))
       ((g$x$11482$1XjQw)
        (g$library-expander$8396$1XjQw
          g$x$11482$1XjQw
          '#f
          (case-lambda ((g$x$11483$1XjQw) (values)))))))
   (g$boot-library-expand$8397$1XjQw
     g$boot-library-expand$11888$1XjQw
     (case-lambda
       ((g$x$11484$1XjQw)
        (call-with-values
          (case-lambda (() (g$library-expander$8396$1XjQw g$x$11484$1XjQw)))
          (case-lambda
            ((g$id$11495$1XjQw
               g$name$11496$1XjQw
               g$ver$11497$1XjQw
               g$imp*$11498$1XjQw
               g$vis*$11499$1XjQw
               g$inv*$11500$1XjQw
               g$invoke-code$11501$1XjQw
               g$visit-code$11502$1XjQw
               g$export-subst$11503$1XjQw
               g$export-env$11504$1XjQw)
             ((case-lambda
                ((g$export-env$11505$1XjQw
                   g$export-subst$11506$1XjQw
                   g$visit-code$11507$1XjQw
                   g$invoke-code$11508$1XjQw
                   g$inv*$11509$1XjQw
                   g$vis*$11510$1XjQw
                   g$imp*$11511$1XjQw
                   g$ver$11512$1XjQw
                   g$name$11513$1XjQw
                   g$id$11514$1XjQw)
                 (values
                   g$name$11513$1XjQw
                   g$invoke-code$11508$1XjQw
                   g$export-subst$11506$1XjQw
                   g$export-env$11505$1XjQw)))
              g$export-env$11504$1XjQw
              g$export-subst$11503$1XjQw
              g$visit-code$11502$1XjQw
              g$invoke-code$11501$1XjQw
              g$inv*$11500$1XjQw
              g$vis*$11499$1XjQw
              g$imp*$11498$1XjQw
              g$ver$11497$1XjQw
              g$name$11496$1XjQw
              g$id$11495$1XjQw)))))))
   (g$rev-map-append$8398$1XjQw
     g$rev-map-append$11889$1XjQw
     (case-lambda
       ((g$f$11515$1XjQw g$ls$11516$1XjQw g$ac$11517$1XjQw)
        (if (null? g$ls$11516$1XjQw)
          g$ac$11517$1XjQw
          (g$rev-map-append$8398$1XjQw
            g$f$11515$1XjQw
            (cdr g$ls$11516$1XjQw)
            (cons
              (g$f$11515$1XjQw (car g$ls$11516$1XjQw))
              g$ac$11517$1XjQw))))))
   (g$build-exports$8399$1XjQw
     g$build-exports$11890$1XjQw
     (case-lambda
       ((g$lex*+loc*$11518$1XjQw g$init*$11519$1XjQw)
        (g$build-sequence$7952$1XjQw
          '#f
          (cons
            (g$build-void$7953$1XjQw)
            (g$rev-map-append$8398$1XjQw
              (case-lambda
                ((g$x$11520$1XjQw)
                 (list 'set! (cdr g$x$11520$1XjQw) (car g$x$11520$1XjQw))))
              g$lex*+loc*$11518$1XjQw
              g$init*$11519$1XjQw))))))
   (g$make-export-subst$8400$1XjQw
     g$make-export-subst$11891$1XjQw
     (case-lambda
       ((g$name*$11521$1XjQw g$id*$11522$1XjQw)
        (g$map$5757$1XjQw
          (case-lambda
            ((g$name$11523$1XjQw g$id$11524$1XjQw)
             ((case-lambda
                ((g$label$11525$1XjQw)
                 (begin
                   (if (not g$label$11525$1XjQw)
                     (g$syntax-violation$8412$1XjQw
                       '#f
                       '"cannot export unbound identifier"
                       g$id$11524$1XjQw)
                     (void))
                   (cons g$name$11523$1XjQw g$label$11525$1XjQw))))
              (g$id->label$8036$1XjQw g$id$11524$1XjQw))))
          g$name*$11521$1XjQw
          g$id*$11522$1XjQw))))
   (g$make-export-env/macros$8401$1XjQw
     g$make-export-env/macros$11892$1XjQw
     (case-lambda
       ((g$lex*$11526$1XjQw g$loc*$11527$1XjQw g$r$11528$1XjQw)
        (letrec* ((g$lookup$11529$1XjQw
                    (case-lambda
                      ((g$x$11544$1XjQw)
                       ((letrec ((g$f$11545$1XjQw
                                   (case-lambda
                                     ((g$x$11546$1XjQw
                                        g$lex*$11547$1XjQw
                                        g$loc*$11548$1XjQw)
                                      (if (pair? g$lex*$11547$1XjQw)
                                        (if (eq? g$x$11546$1XjQw
                                                 (car g$lex*$11547$1XjQw))
                                          (car g$loc*$11548$1XjQw)
                                          (g$f$11545$1XjQw
                                            g$x$11546$1XjQw
                                            (cdr g$lex*$11547$1XjQw)
                                            (cdr g$loc*$11548$1XjQw)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$11545$1XjQw)
                        g$x$11544$1XjQw
                        g$lex*$11526$1XjQw
                        g$loc*$11527$1XjQw)))))
          ((letrec ((g$f$11530$1XjQw
                      (case-lambda
                        ((g$r$11531$1XjQw
                           g$env$11532$1XjQw
                           g$global*$11533$1XjQw
                           g$macro*$11534$1XjQw)
                         (if (null? g$r$11531$1XjQw)
                           (values
                             g$env$11532$1XjQw
                             g$global*$11533$1XjQw
                             g$macro*$11534$1XjQw)
                           ((case-lambda
                              ((g$x$11535$1XjQw)
                               ((case-lambda
                                  ((g$label$11536$1XjQw g$b$11537$1XjQw)
                                   ((case-lambda
                                      ((g$t$11538$1XjQw)
                                       (if (g$memv$5750$1XjQw
                                             g$t$11538$1XjQw
                                             '(lexical))
                                         ((case-lambda
                                            ((g$v$11539$1XjQw)
                                             ((case-lambda
                                                ((g$loc$11540$1XjQw
                                                   g$type$11541$1XjQw)
                                                 (g$f$11530$1XjQw
                                                   (cdr g$r$11531$1XjQw)
                                                   (cons
                                                     (g$cons*$5759$1XjQw
                                                       g$label$11536$1XjQw
                                                       g$type$11541$1XjQw
                                                       g$loc$11540$1XjQw)
                                                     g$env$11532$1XjQw)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$8245$1XjQw
                                                         g$v$11539$1XjQw)
                                                       g$loc$11540$1XjQw)
                                                     g$global*$11533$1XjQw)
                                                   g$macro*$11534$1XjQw)))
                                              (g$lookup$11529$1XjQw
                                                (g$lexical-var$8245$1XjQw
                                                  g$v$11539$1XjQw))
                                              (if (g$lexical-mutable?$8246$1XjQw
                                                    g$v$11539$1XjQw)
                                                'mutable
                                                'global))))
                                          (g$binding-value$8041$1XjQw
                                            g$b$11537$1XjQw))
                                         (if (g$memv$5750$1XjQw
                                               g$t$11538$1XjQw
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$11542$1XjQw)
                                               (g$f$11530$1XjQw
                                                 (cdr g$r$11531$1XjQw)
                                                 (cons
                                                   (g$cons*$5759$1XjQw
                                                     g$label$11536$1XjQw
                                                     'global-macro
                                                     g$loc$11542$1XjQw)
                                                   g$env$11532$1XjQw)
                                                 g$global*$11533$1XjQw
                                                 (cons
                                                   (cons
                                                     g$loc$11542$1XjQw
                                                     (g$binding-value$8041$1XjQw
                                                       g$b$11537$1XjQw))
                                                   g$macro*$11534$1XjQw))))
                                            (gensym))
                                           (if (g$memv$5750$1XjQw
                                                 g$t$11538$1XjQw
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$11543$1XjQw)
                                                 (g$f$11530$1XjQw
                                                   (cdr g$r$11531$1XjQw)
                                                   (cons
                                                     (g$cons*$5759$1XjQw
                                                       g$label$11536$1XjQw
                                                       'global-macro!
                                                       g$loc$11543$1XjQw)
                                                     g$env$11532$1XjQw)
                                                   g$global*$11533$1XjQw
                                                   (cons
                                                     (cons
                                                       g$loc$11543$1XjQw
                                                       (g$binding-value$8041$1XjQw
                                                         g$b$11537$1XjQw))
                                                     g$macro*$11534$1XjQw))))
                                              (gensym))
                                             (if (g$memv$5750$1XjQw
                                                   g$t$11538$1XjQw
                                                   '($rtd $module))
                                               (g$f$11530$1XjQw
                                                 (cdr g$r$11531$1XjQw)
                                                 (cons
                                                   g$x$11535$1XjQw
                                                   g$env$11532$1XjQw)
                                                 g$global*$11533$1XjQw
                                                 g$macro*$11534$1XjQw)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$8040$1XjQw
                                                   g$b$11537$1XjQw)
                                                 (g$binding-value$8041$1XjQw
                                                   g$b$11537$1XjQw))))))))
                                    (g$binding-type$8040$1XjQw
                                      g$b$11537$1XjQw))))
                                (car g$x$11535$1XjQw)
                                (cdr g$x$11535$1XjQw))))
                            (car g$r$11531$1XjQw)))))))
             g$f$11530$1XjQw)
           g$r$11528$1XjQw
           '()
           '()
           '())))))
   (g$generate-temporaries$8402$1XjQw
     g$generate-temporaries$11893$1XjQw
     (case-lambda
       ((g$ls$11549$1XjQw)
        ((case-lambda
           ((g$t$11550$1XjQw)
            ((case-lambda
               ((g$ls/false$11551$1XjQw)
                (if g$ls/false$11551$1XjQw
                  (apply
                    (case-lambda
                      ((g$ls$11552$1XjQw)
                       (g$map$5757$1XjQw
                         (case-lambda
                           ((g$x$11553$1XjQw)
                            (g$make-stx$7996$1XjQw
                              ((case-lambda
                                 ((g$x$11554$1XjQw)
                                  (if ((case-lambda
                                         ((g$t$11555$1XjQw)
                                          (if g$t$11555$1XjQw
                                            g$t$11555$1XjQw
                                            (begin
                                              '#f
                                              (string? g$x$11554$1XjQw)))))
                                       (symbol? g$x$11554$1XjQw))
                                    (gensym g$x$11554$1XjQw)
                                    (gensym 't))))
                               (g$syntax->datum$8415$1XjQw g$x$11553$1XjQw))
                              g$top-mark*$7960$1XjQw
                              '()
                              '())))
                         g$ls$11552$1XjQw)))
                    g$ls/false$11551$1XjQw)
                  ((case-lambda
                     ((g$t$11556$1XjQw)
                      ((case-lambda
                         ((g$ls/false$11557$1XjQw)
                          (if g$ls/false$11557$1XjQw
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$11557$1XjQw)
                            (g$syntax-violation$8412$1XjQw
                              '#f
                              '"invalid syntax"
                              g$t$11556$1XjQw))))
                       (g$syntax-dispatch$8301$1XjQw g$t$11556$1XjQw '_))))
                   g$t$11550$1XjQw))))
             (g$syntax-dispatch$8301$1XjQw g$t$11550$1XjQw 'each-any))))
         g$ls$11549$1XjQw))))
   (g$free-identifier=?$8403$1XjQw
     g$free-identifier=?$11894$1XjQw
     (case-lambda
       ((g$x$11558$1XjQw g$y$11559$1XjQw)
        (if (g$id?$8023$1XjQw g$x$11558$1XjQw)
          (if (g$id?$8023$1XjQw g$y$11559$1XjQw)
            (g$free-id=?$8027$1XjQw g$x$11558$1XjQw g$y$11559$1XjQw)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$11559$1XjQw))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$11558$1XjQw)))))
   (g$bound-identifier=?$8404$1XjQw
     g$bound-identifier=?$11895$1XjQw
     (case-lambda
       ((g$x$11560$1XjQw g$y$11561$1XjQw)
        (if (g$id?$8023$1XjQw g$x$11560$1XjQw)
          (if (g$id?$8023$1XjQw g$y$11561$1XjQw)
            (g$bound-id=?$8026$1XjQw g$x$11560$1XjQw g$y$11561$1XjQw)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$11561$1XjQw))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$11560$1XjQw)))))
   (g$make-source-condition$8405$1XjQw
     g$make-source-condition$11896$1XjQw
     (case-lambda
       ((g$x$11562$1XjQw)
        (letrec* ((g$12425$11563$1XjQw
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$12428$1XjQw
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$12427$11564$1XjQw '#f)
                  (g$12426$11565$1XjQw
                    (make-record-constructor-descriptor
                      g$12425$11563$1XjQw
                      &condition-rcd
                      g$12427$11564$1XjQw))
                  (g$12424$11566$1XjQw (record-predicate g$12425$11563$1XjQw))
                  (g$make-source-condition$11567$1XjQw
                    (record-constructor g$12426$11565$1XjQw))
                  (g$12422$11568$1XjQw (record-accessor g$12425$11563$1XjQw '0))
                  (g$12423$11569$1XjQw (record-accessor g$12425$11563$1XjQw '1))
                  (g$source-condition?$11570$1XjQw
                    (condition-predicate g$12425$11563$1XjQw))
                  (g$source-filename$11571$1XjQw
                    (condition-accessor
                      g$12425$11563$1XjQw
                      g$12422$11568$1XjQw))
                  (g$source-character$11572$1XjQw
                    (condition-accessor
                      g$12425$11563$1XjQw
                      g$12423$11569$1XjQw)))
          (if (pair? g$x$11562$1XjQw)
            (g$make-source-condition$11567$1XjQw
              (car g$x$11562$1XjQw)
              (cdr g$x$11562$1XjQw))
            (condition))))))
   (g$extract-position-condition$8406$1XjQw
     g$extract-position-condition$11897$1XjQw
     (case-lambda
       ((g$x$11573$1XjQw)
        (g$make-source-condition$8405$1XjQw
          (g$expression-position$8407$1XjQw g$x$11573$1XjQw)))))
   (g$expression-position$8407$1XjQw
     g$expression-position$11898$1XjQw
     (case-lambda
       ((g$x$11574$1XjQw)
        (if (g$stx?$7995$1XjQw g$x$11574$1XjQw)
          (begin
            '#f
            ((case-lambda
               ((g$x$11575$1XjQw)
                (if (annotation? g$x$11575$1XjQw)
                  (begin '#f (annotation-source g$x$11575$1XjQw))
                  '#f)))
             (g$stx-expr$7997$1XjQw g$x$11574$1XjQw)))
          '#f))))
   (g$assertion-error$8408$1XjQw
     g$assertion-error$11899$1XjQw
     (case-lambda
       ((g$expr$11576$1XjQw g$pos$11577$1XjQw)
        (raise
          (condition
            (g$make-assertion-violation$6495$1XjQw)
            (g$make-who-condition$6509$1XjQw 'assert)
            (g$make-message-condition$6463$1XjQw '"assertion failed")
            (g$make-irritants-condition$6501$1XjQw (list g$expr$11576$1XjQw))
            (g$make-source-condition$8405$1XjQw g$pos$11577$1XjQw))))))
   (g$syntax-error$8409$1XjQw
     g$syntax-error$11900$1XjQw
     (case-lambda
       ((g$x$11578$1XjQw . g$args$11579$1XjQw)
        (begin
          (if (not (g$for-all$5755$1XjQw string? g$args$11579$1XjQw))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$11579$1XjQw)
            (void))
          (raise
            (condition
              (g$make-message-condition$6463$1XjQw
                (if (null? g$args$11579$1XjQw)
                  '"invalid syntax"
                  (apply string-append g$args$11579$1XjQw)))
              (g$make-syntax-violation$6535$1XjQw
                (g$syntax->datum$8415$1XjQw g$x$11578$1XjQw)
                '#f)
              (g$extract-position-condition$8406$1XjQw g$x$11578$1XjQw)
              (g$extract-trace$8410$1XjQw g$x$11578$1XjQw)))))))
   (g$extract-trace$8410$1XjQw
     g$extract-trace$11901$1XjQw
     (case-lambda
       ((g$x$11580$1XjQw)
        (letrec* ((g$12452$11581$1XjQw
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$12455$1XjQw
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$12454$11582$1XjQw '#f)
                  (g$12453$11583$1XjQw
                    (make-record-constructor-descriptor
                      g$12452$11581$1XjQw
                      &condition-rcd
                      g$12454$11582$1XjQw))
                  (g$12451$11584$1XjQw (record-predicate g$12452$11581$1XjQw))
                  (g$make-trace$11585$1XjQw
                    (record-constructor g$12453$11583$1XjQw))
                  (g$12450$11586$1XjQw (record-accessor g$12452$11581$1XjQw '0))
                  (g$trace?$11587$1XjQw
                    (condition-predicate g$12452$11581$1XjQw))
                  (g$trace-form$11588$1XjQw
                    (condition-accessor
                      g$12452$11581$1XjQw
                      g$12450$11586$1XjQw)))
          ((letrec ((g$f$11589$1XjQw
                      (case-lambda
                        ((g$x$11590$1XjQw)
                         (if (g$stx?$7995$1XjQw g$x$11590$1XjQw)
                           (apply
                             condition
                             (g$make-trace$11585$1XjQw g$x$11590$1XjQw)
                             (g$map$5757$1XjQw
                               g$f$11589$1XjQw
                               (g$stx-ae*$8000$1XjQw g$x$11590$1XjQw)))
                           (if (annotation? g$x$11590$1XjQw)
                             (g$make-trace$11585$1XjQw
                               (g$make-stx$7996$1XjQw
                                 g$x$11590$1XjQw
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$11589$1XjQw)
           g$x$11580$1XjQw)))))
   (g$syntax-violation*$8411$1XjQw
     g$syntax-violation*$11902$1XjQw
     (case-lambda
       ((g$who$11591$1XjQw
          g$msg$11592$1XjQw
          g$form$11593$1XjQw
          g$condition-object$11594$1XjQw)
        (begin
          (if (not (string? g$msg$11592$1XjQw))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$11592$1XjQw)
            (void))
          ((case-lambda
             ((g$who$11595$1XjQw)
              (raise
                (condition
                  (if g$who$11595$1XjQw
                    (g$make-who-condition$6509$1XjQw g$who$11595$1XjQw)
                    (condition))
                  (g$make-message-condition$6463$1XjQw g$msg$11592$1XjQw)
                  g$condition-object$11594$1XjQw
                  (g$extract-position-condition$8406$1XjQw g$form$11593$1XjQw)
                  (g$extract-trace$8410$1XjQw g$form$11593$1XjQw)))))
           (if ((case-lambda
                  ((g$t$11596$1XjQw)
                   (if g$t$11596$1XjQw
                     g$t$11596$1XjQw
                     (begin '#f (symbol? g$who$11591$1XjQw)))))
                (string? g$who$11591$1XjQw))
             g$who$11591$1XjQw
             (if (not g$who$11591$1XjQw)
               ((case-lambda
                  ((g$t$11597$1XjQw)
                   ((case-lambda
                      ((g$ls/false$11598$1XjQw)
                       (if (if g$ls/false$11598$1XjQw
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$11599$1XjQw)
                                    (g$id?$8023$1XjQw g$id$11599$1XjQw)))
                                 g$ls/false$11598$1XjQw))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$11600$1XjQw)
                              (g$syntax->datum$8415$1XjQw g$id$11600$1XjQw)))
                           g$ls/false$11598$1XjQw)
                         ((case-lambda
                            ((g$t$11601$1XjQw)
                             ((case-lambda
                                ((g$ls/false$11602$1XjQw)
                                 (if (if g$ls/false$11602$1XjQw
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$11603$1XjQw
                                                g$rest$11604$1XjQw)
                                              (g$id?$8023$1XjQw
                                                g$id$11603$1XjQw)))
                                           g$ls/false$11602$1XjQw))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$11605$1XjQw g$rest$11606$1XjQw)
                                        (g$syntax->datum$8415$1XjQw
                                          g$id$11605$1XjQw)))
                                     g$ls/false$11602$1XjQw)
                                   ((case-lambda
                                      ((g$t$11607$1XjQw)
                                       ((case-lambda
                                          ((g$ls/false$11608$1XjQw)
                                           (if g$ls/false$11608$1XjQw
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$11608$1XjQw)
                                             (g$syntax-violation$8412$1XjQw
                                               '#f
                                               '"invalid syntax"
                                               g$t$11607$1XjQw))))
                                        (g$syntax-dispatch$8301$1XjQw
                                          g$t$11607$1XjQw
                                          '_))))
                                    g$t$11601$1XjQw))))
                              (g$syntax-dispatch$8301$1XjQw
                                g$t$11601$1XjQw
                                '(any . any)))))
                          g$t$11597$1XjQw))))
                    (g$syntax-dispatch$8301$1XjQw g$t$11597$1XjQw 'any))))
                g$form$11593$1XjQw)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$11591$1XjQw))))))))
   (g$syntax-violation$8412$1XjQw
     g$syntax-violation$11903$1XjQw
     (case-lambda
       ((g$who$11609$1XjQw g$msg$11610$1XjQw g$form$11611$1XjQw)
        (g$syntax-violation$8412$1XjQw
          g$who$11609$1XjQw
          g$msg$11610$1XjQw
          g$form$11611$1XjQw
          '#f))
       ((g$who$11612$1XjQw
          g$msg$11613$1XjQw
          g$form$11614$1XjQw
          g$subform$11615$1XjQw)
        (g$syntax-violation*$8411$1XjQw
          g$who$11612$1XjQw
          g$msg$11613$1XjQw
          g$form$11614$1XjQw
          (g$make-syntax-violation$6535$1XjQw
            (g$syntax->datum$8415$1XjQw g$form$11614$1XjQw)
            (g$syntax->datum$8415$1XjQw g$subform$11615$1XjQw))))))
   (g$identifier?$8413$1XjQw
     g$identifier?$11904$1XjQw
     (case-lambda ((g$x$11616$1XjQw) (g$id?$8023$1XjQw g$x$11616$1XjQw))))
   (g$datum->syntax$8414$1XjQw
     g$datum->syntax$11905$1XjQw
     (case-lambda
       ((g$id$11617$1XjQw g$datum$11618$1XjQw)
        (if (g$id?$8023$1XjQw g$id$11617$1XjQw)
          (g$datum->stx$8006$1XjQw g$id$11617$1XjQw g$datum$11618$1XjQw)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$11617$1XjQw)))))
   (g$syntax->datum$8415$1XjQw
     g$syntax->datum$11906$1XjQw
     (case-lambda
       ((g$x$11619$1XjQw) (g$stx->datum$8034$1XjQw g$x$11619$1XjQw))))
   (g$compile-r6rs-top-level$8416$1XjQw
     g$compile-r6rs-top-level$11907$1XjQw
     (case-lambda
       ((g$x*$11620$1XjQw)
        (call-with-values
          (case-lambda (() (g$top-level-expander$8361$1XjQw g$x*$11620$1XjQw)))
          (case-lambda
            ((g$lib*$11623$1XjQw g$invoke-code$11624$1XjQw)
             ((case-lambda
                ((g$invoke-code$11625$1XjQw g$lib*$11626$1XjQw)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$5758$1XjQw
                        g$invoke-library$7833$1XjQw
                        g$lib*$11626$1XjQw)
                      (eval-core
                        (g$expanded->core$7541$1XjQw
                          g$invoke-code$11625$1XjQw)))))))
              g$invoke-code$11624$1XjQw
              g$lib*$11623$1XjQw)))))))
   (g$pre-compile-r6rs-top-level$8417$1XjQw
     g$pre-compile-r6rs-top-level$11908$1XjQw
     (case-lambda
       ((g$x*$11627$1XjQw)
        (call-with-values
          (case-lambda (() (g$top-level-expander$8361$1XjQw g$x*$11627$1XjQw)))
          (case-lambda
            ((g$lib*$11630$1XjQw g$invoke-code$11631$1XjQw)
             ((case-lambda
                ((g$invoke-code$11632$1XjQw g$lib*$11633$1XjQw)
                 (begin
                   (g$for-each$5758$1XjQw
                     g$invoke-library$7833$1XjQw
                     g$lib*$11633$1XjQw)
                   (compile-core
                     (g$expanded->core$7541$1XjQw g$invoke-code$11632$1XjQw)))))
              g$invoke-code$11631$1XjQw
              g$lib*$11630$1XjQw)))))))
   (g$interaction-environment$8418$1XjQw
     g$interaction-environment$11909$1XjQw
     ((case-lambda
        ((g$the-env$11634$1XjQw)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$11635$1XjQw)
                (if g$t$11635$1XjQw
                  g$t$11635$1XjQw
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$11636$1XjQw g$rib$11637$1XjQw)
                        (begin
                          ((case-lambda
                             ((g$subst$11638$1XjQw)
                              (begin
                                (g$set-rib-sym*!$7978$1XjQw
                                  g$rib$11637$1XjQw
                                  (g$map$5757$1XjQw car g$subst$11638$1XjQw))
                                (g$set-rib-mark**!$7979$1XjQw
                                  g$rib$11637$1XjQw
                                  (g$map$5757$1XjQw
                                    (case-lambda
                                      ((g$x$11639$1XjQw)
                                       g$top-mark*$7960$1XjQw))
                                    g$subst$11638$1XjQw))
                                (g$set-rib-label*!$7980$1XjQw
                                  g$rib$11637$1XjQw
                                  (g$map$5757$1XjQw cdr g$subst$11638$1XjQw)))))
                           (g$library-subst$7790$1XjQw g$lib$11636$1XjQw))
                          ((case-lambda
                             ((g$env$11640$1XjQw)
                              (begin
                                (set! g$the-env$11634$1XjQw g$env$11640$1XjQw)
                                g$env$11640$1XjQw)))
                           (g$make-interaction-env$8378$1XjQw
                             g$rib$11637$1XjQw
                             '()
                             '())))))
                     (g$find-library-by-name$7826$1XjQw '(ironscheme))
                     (g$make-cache-rib$7984$1XjQw))))))
             g$the-env$11634$1XjQw)))))
      '#f))
   (g$top-level-context$8419$1XjQw
     g$top-level-context$11910$1XjQw
     (g$make-parameter$7295$1XjQw '#f)))
  (g$current-library-expander$7823$1XjQw g$library-expander$8396$1XjQw))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$7538$1XjQw
      (case-lambda
        ((g$x$11963$1XjQw)
         ((case-lambda
            ((g$t$11964$1XjQw) (if g$t$11964$1XjQw (cdr g$t$11964$1XjQw) '#f)))
          (g$assq$5745$1XjQw
            g$x$11963$1XjQw
            '((ellipsis-map . g$ellipsis-map$11797$1XjQw)
              (make-list . g$make-list$5740$1XjQw)
              (last-pair . g$last-pair$5739$1XjQw)
              (ironscheme-build . g$ironscheme-build$11956$1XjQw)
              (syntax-error . g$syntax-error$11900$1XjQw)
              (syntax-dispatch . g$syntax-dispatch$11792$1XjQw)
              (compile-system-libraries
                .
                g$compile-system-libraries$11958$1XjQw)
              (compile->closure . g$compile->closure$11960$1XjQw)
              (compile . g$compile$11959$1XjQw)
              (load . g$load$11955$1XjQw)
              (interaction-environment . g$interaction-environment$11909$1XjQw)
              (string-ci>? . g$string-ci>?$6681$1XjQw)
              (string-ci>=? . g$string-ci>=?$6683$1XjQw)
              (string-ci=? . g$string-ci=?$6679$1XjQw)
              (string-ci<? . g$string-ci<?$6680$1XjQw)
              (string-ci<=? . g$string-ci<=?$6682$1XjQw)
              (char-ci>? . g$char-ci>?$6686$1XjQw)
              (char-ci>=? . g$char-ci>=?$6688$1XjQw)
              (char-ci=? . g$char-ci=?$6684$1XjQw)
              (char-ci<? . g$char-ci<?$6685$1XjQw)
              (char-ci<=? . g$char-ci<=?$6687$1XjQw)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$11730$1XjQw)
              (variable-transformer? . g$variable-transformer?$11729$1XjQw)
              (make-variable-transformer
                .
                g$make-variable-transformer$11728$1XjQw)
              (identifier? . g$identifier?$11904$1XjQw)
              (generate-temporaries . g$generate-temporaries$11893$1XjQw)
              (free-identifier=? . g$free-identifier=?$11894$1XjQw)
              (syntax->datum . g$syntax->datum$11906$1XjQw)
              (datum->syntax . g$datum->syntax$11905$1XjQw)
              (bound-identifier=? . g$bound-identifier=?$11895$1XjQw)
              (delete-file . g$delete-file$6215$1XjQw)
              (file-exists? . g$file-exists?$6214$1XjQw)
              (list-sort . g$list-sort$6606$1XjQw)
              (make-eqv-hashtable . g$make-eqv-hashtable$6196$1XjQw)
              (make-eq-hashtable . g$make-eq-hashtable$6195$1XjQw)
              (hashtable-update! . g$hashtable-update!$6202$1XjQw)
              (hashtable-size . g$hashtable-size$6197$1XjQw)
              (hashtable-set! . g$hashtable-set!$6199$1XjQw)
              (hashtable-ref . g$hashtable-ref$6198$1XjQw)
              (hashtable-delete! . g$hashtable-delete!$6200$1XjQw)
              (hashtable-contains? . g$hashtable-contains?$6201$1XjQw)
              (hashtable-clear! . g$hashtable-clear!$6203$1XjQw)
              (call-with-output-file . g$call-with-output-file$7021$1XjQw)
              (call-with-input-file . g$call-with-input-file$7020$1XjQw)
              (with-output-to-file . g$with-output-to-file$7019$1XjQw)
              (with-input-from-file . g$with-input-from-file$7018$1XjQw)
              (port? . g$port?$6984$1XjQw)
              (open-string-output-port . g$open-string-output-port$6983$1XjQw)
              (make-i/o-write-error . g$make-i/o-write-error$6906$1XjQw)
              (make-i/o-read-error . g$make-i/o-read-error$6900$1XjQw)
              (make-i/o-port-error . g$make-i/o-port-error$6952$1XjQw)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6912$1XjQw)
              (make-i/o-filename-error . g$make-i/o-filename-error$6920$1XjQw)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6928$1XjQw)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6934$1XjQw)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6946$1XjQw)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6940$1XjQw)
              (make-i/o-error . g$make-i/o-error$6894$1XjQw)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6966$1XjQw)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6960$1XjQw)
              (i/o-write-error? . g$i/o-write-error?$6907$1XjQw)
              (i/o-read-error? . g$i/o-read-error?$6901$1XjQw)
              (i/o-port-error? . g$i/o-port-error?$6954$1XjQw)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6914$1XjQw)
              (i/o-error-position . g$i/o-error-position$6915$1XjQw)
              (i/o-filename-error? . g$i/o-filename-error?$6922$1XjQw)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6929$1XjQw)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6935$1XjQw)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6947$1XjQw)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6941$1XjQw)
              (i/o-error? . g$i/o-error?$6895$1XjQw)
              (i/o-error-port . g$i/o-error-port$6955$1XjQw)
              (i/o-error-filename . g$i/o-error-filename$6923$1XjQw)
              (i/o-encoding-error? . g$i/o-encoding-error?$6968$1XjQw)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6969$1XjQw)
              (i/o-decoding-error? . g$i/o-decoding-error?$6961$1XjQw)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$6985$1XjQw)
              (scheme-report-environment
                .
                g$scheme-report-environment$11884$1XjQw)
              (quotient . g$quotient$6573$1XjQw)
              (null-environment . g$null-environment$11883$1XjQw)
              (remainder . g$remainder$6574$1XjQw)
              (modulo . g$modulo$6575$1XjQw)
              (force . g$force$6577$1XjQw)
              (command-line . g$command-line$11952$1XjQw)
              (remove . g$remove$5762$1XjQw)
              (remv . g$remv$5763$1XjQw)
              (remp . g$remp$5743$1XjQw)
              (remq . g$remq$5764$1XjQw)
              (partition . g$partition$5742$1XjQw)
              (memv . g$memv$5750$1XjQw)
              (memq . g$memq$5749$1XjQw)
              (memp . g$memp$5752$1XjQw)
              (member . g$member$5751$1XjQw)
              (exists . g$exists$5756$1XjQw)
              (for-all . g$for-all$5755$1XjQw)
              (fold-right . g$fold-right$5761$1XjQw)
              (fold-left . g$fold-left$5760$1XjQw)
              (find . g$find$5741$1XjQw)
              (filter . g$filter$5744$1XjQw)
              (cons* . g$cons*$5759$1XjQw)
              (assv . g$assv$5746$1XjQw)
              (assq . g$assq$5745$1XjQw)
              (assp . g$assp$5748$1XjQw)
              (assoc . g$assoc$5747$1XjQw)
              (eval . g$eval$11886$1XjQw)
              (environment . g$environment$11882$1XjQw)
              (make-enumeration . g$make-enumeration$7153$1XjQw)
              (enum-set=? . g$enum-set=?$7160$1XjQw)
              (enum-set-universe . g$enum-set-universe$7154$1XjQw)
              (enum-set-union . g$enum-set-union$7161$1XjQw)
              (enum-set-subset? . g$enum-set-subset?$7159$1XjQw)
              (enum-set-projection . g$enum-set-projection$7165$1XjQw)
              (enum-set-member? . g$enum-set-member?$7158$1XjQw)
              (enum-set-intersection . g$enum-set-intersection$7162$1XjQw)
              (enum-set-indexer . g$enum-set-indexer$7155$1XjQw)
              (enum-set-difference . g$enum-set-difference$7163$1XjQw)
              (enum-set-constructor . g$enum-set-constructor$7156$1XjQw)
              (enum-set-complement . g$enum-set-complement$7164$1XjQw)
              (enum-set->list . g$enum-set->list$7157$1XjQw)
              (who-condition? . g$who-condition?$6511$1XjQw)
              (warning? . g$warning?$6472$1XjQw)
              (violation? . g$violation?$6490$1XjQw)
              (undefined-violation? . g$undefined-violation?$6546$1XjQw)
              (syntax-violation? . g$syntax-violation?$6538$1XjQw)
              (syntax-violation-subform . g$syntax-violation-subform$6540$1XjQw)
              (syntax-violation-form . g$syntax-violation-form$6539$1XjQw)
              (syntax-violation . g$syntax-violation$11903$1XjQw)
              (serious-condition? . g$serious-condition?$6478$1XjQw)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$6518$1XjQw)
              (message-condition? . g$message-condition?$6465$1XjQw)
              (make-who-condition . g$make-who-condition$6509$1XjQw)
              (make-warning . g$make-warning$6471$1XjQw)
              (make-violation . g$make-violation$6489$1XjQw)
              (make-undefined-violation . g$make-undefined-violation$6545$1XjQw)
              (make-syntax-violation . g$make-syntax-violation$6535$1XjQw)
              (make-serious-condition . g$make-serious-condition$6477$1XjQw)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$6517$1XjQw)
              (make-message-condition . g$make-message-condition$6463$1XjQw)
              (make-lexical-violation . g$make-lexical-violation$6529$1XjQw)
              (make-irritants-condition . g$make-irritants-condition$6501$1XjQw)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$6523$1XjQw)
              (make-error . g$make-error$6483$1XjQw)
              (make-assertion-violation . g$make-assertion-violation$6495$1XjQw)
              (lexical-violation? . g$lexical-violation?$6530$1XjQw)
              (irritants-condition? . g$irritants-condition?$6503$1XjQw)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$6524$1XjQw)
              (error? . g$error?$6484$1XjQw)
              (condition-who . g$condition-who$6512$1XjQw)
              (condition-message . g$condition-message$6466$1XjQw)
              (condition-irritants . g$condition-irritants$6504$1XjQw)
              (assertion-violation? . g$assertion-violation?$6496$1XjQw)
              (native-endianness . g$native-endianness$6328$1XjQw)
              (bytevector-u64-set! . g$bytevector-u64-set!$6349$1XjQw)
              (bytevector-u64-ref . g$bytevector-u64-ref$6345$1XjQw)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$6351$1XjQw)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$6347$1XjQw)
              (bytevector-u32-set! . g$bytevector-u32-set!$6341$1XjQw)
              (bytevector-u32-ref . g$bytevector-u32-ref$6337$1XjQw)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$6343$1XjQw)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$6339$1XjQw)
              (bytevector-u16-set! . g$bytevector-u16-set!$6333$1XjQw)
              (bytevector-u16-ref . g$bytevector-u16-ref$6329$1XjQw)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$6335$1XjQw)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$6331$1XjQw)
              (bytevector-s64-set! . g$bytevector-s64-set!$6350$1XjQw)
              (bytevector-s64-ref . g$bytevector-s64-ref$6346$1XjQw)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$6352$1XjQw)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$6348$1XjQw)
              (bytevector-s32-set! . g$bytevector-s32-set!$6342$1XjQw)
              (bytevector-s32-ref . g$bytevector-s32-ref$6338$1XjQw)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$6344$1XjQw)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$6340$1XjQw)
              (bytevector-s16-set! . g$bytevector-s16-set!$6334$1XjQw)
              (bytevector-s16-ref . g$bytevector-s16-ref$6330$1XjQw)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$6336$1XjQw)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$6332$1XjQw)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$6355$1XjQw)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$6353$1XjQw)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$6356$1XjQw)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$6354$1XjQw)
              (no-nans-violation? . g$no-nans-violation?$6809$1XjQw)
              (no-infinities-violation? . g$no-infinities-violation?$6803$1XjQw)
              (make-no-nans-violation . g$make-no-nans-violation$6808$1XjQw)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6802$1XjQw)
              (fxrotate-bit-field . g$fxrotate-bit-field$6785$1XjQw)
              (fxif . g$fxif$6779$1XjQw)
              (fxcopy-bit-field . g$fxcopy-bit-field$6782$1XjQw)
              (fxcopy-bit . g$fxcopy-bit$6780$1XjQw)
              (fxbit-field . g$fxbit-field$6781$1XjQw)
              (fxarithmetic-shift-right . g$fxarithmetic-shift-right$6784$1XjQw)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6783$1XjQw)
              (fx-/carry . g$fx-/carry$6777$1XjQw)
              (fx+/carry . g$fx+/carry$6778$1XjQw)
              (fx*/carry . g$fx*/carry$6776$1XjQw)
              (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$6726$1XjQw)
              (bitwise-if . g$bitwise-if$6720$1XjQw)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6723$1XjQw)
              (bitwise-copy-bit . g$bitwise-copy-bit$6721$1XjQw)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$6725$1XjQw)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$6724$1XjQw)
              (symbol=? . g$symbol=?$5953$1XjQw)
              (string>? . g$string>?$5950$1XjQw)
              (string>=? . g$string>=?$5952$1XjQw)
              (string=? . g$string=?$5948$1XjQw)
              (string<? . g$string<?$5949$1XjQw)
              (string<=? . g$string<=?$5951$1XjQw)
              (rationalize . g$rationalize$5960$1XjQw)
              (map . g$map$5757$1XjQw)
              (list-tail . g$list-tail$5737$1XjQw)
              (list-ref . g$list-ref$5738$1XjQw)
              (for-each . g$for-each$5758$1XjQw)
              (char>? . g$char>?$5957$1XjQw)
              (char>=? . g$char>=?$5959$1XjQw)
              (char=? . g$char=?$5955$1XjQw)
              (char<? . g$char<?$5956$1XjQw)
              (char<=? . g$char<=?$5958$1XjQw)
              (cddddr . g$cddddr$5947$1XjQw)
              (cdddar . g$cdddar$5946$1XjQw)
              (cddadr . g$cddadr$5945$1XjQw)
              (cddaar . g$cddaar$5944$1XjQw)
              (cdaddr . g$cdaddr$5943$1XjQw)
              (cdadar . g$cdadar$5942$1XjQw)
              (cdaadr . g$cdaadr$5941$1XjQw)
              (cdaaar . g$cdaaar$5940$1XjQw)
              (cadddr . g$cadddr$5939$1XjQw)
              (caddar . g$caddar$5938$1XjQw)
              (cadadr . g$cadadr$5937$1XjQw)
              (cadaar . g$cadaar$5936$1XjQw)
              (caaddr . g$caaddr$5935$1XjQw)
              (caadar . g$caadar$5934$1XjQw)
              (caaadr . g$caaadr$5933$1XjQw)
              (caaaar . g$caaaar$5932$1XjQw)
              (cdddr . g$cdddr$5931$1XjQw)
              (cddar . g$cddar$5930$1XjQw)
              (cdadr . g$cdadr$5929$1XjQw)
              (cdaar . g$cdaar$5928$1XjQw)
              (caddr . g$caddr$5927$1XjQw)
              (cadar . g$cadar$5926$1XjQw)
              (caadr . g$caadr$5925$1XjQw)
              (caaar . g$caaar$5924$1XjQw)
              (cddr . g$cddr$5923$1XjQw)
              (cdar . g$cdar$5922$1XjQw)
              (cadr . g$cadr$5921$1XjQw)
              (caar . g$caar$5920$1XjQw)
              (boolean=? . g$boolean=?$5954$1XjQw)
              (enum-set? . g$enum?$7134$1XjQw)
              (make-promise . g$make-promise$6576$1XjQw)
              (load/args . g$load/args$11954$1XjQw)
              (printf . g$printf$7189$1XjQw)
              (fprintf . g$fprintf$7190$1XjQw)
              (format . g$format$7191$1XjQw)
              (trace-printer . g$trace-printer$11951$1XjQw)
              (make-traced-macro . g$make-traced-macro$7195$1XjQw)
              (assertion-error . g$assertion-error$11899$1XjQw)
              (make-parameter . g$make-parameter$7295$1XjQw)
              (environment-bindings . g$environment-bindings$11878$1XjQw)
              (environment-symbols . g$environment-symbols$11881$1XjQw)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$11877$1XjQw)
              (library-path . g$library-path$7815$1XjQw)
              (expand . g$expand$11885$1XjQw)))))))
    (g$install-library$7831$1XjQw
      'g$13163$1XjQw
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$13100$1XjQw)
        (cosh . g$13099$1XjQw)
        (sinh . g$13098$1XjQw)
        (make-guid . g$13097$1XjQw)
        (unspecified? . g$13096$1XjQw)
        (make-trace . g$13095$1XjQw)
        (make-list . g$6545$1XjQw)
        (last-pair . g$6544$1XjQw)
        (load-r5rs . g$13094$1XjQw)
        (license . g$13093$1XjQw)
        (stacktrace . g$13092$1XjQw)
        (ironscheme-build . g$12524$1XjQw)
        (set-symbol-value! . g$13078$1XjQw)
        (symbol-value . g$13077$1XjQw)
        (ungensym . g$13076$1XjQw)
        (gensym . g$13075$1XjQw)
        (void . g$13074$1XjQw)
        (compile-system-libraries . g$12526$1XjQw)
        (compile->closure . g$12528$1XjQw)
        (compile . g$12527$1XjQw)
        (load . g$12523$1XjQw)
        (interaction-environment . g$9551$1XjQw)
        (string-upcase . g$13070$1XjQw)
        (string-titlecase . g$13069$1XjQw)
        (string-normalize-nfkd . g$13068$1XjQw)
        (string-normalize-nfkc . g$13067$1XjQw)
        (string-normalize-nfd . g$13066$1XjQw)
        (string-normalize-nfc . g$13065$1XjQw)
        (string-foldcase . g$13064$1XjQw)
        (string-downcase . g$13063$1XjQw)
        (string-ci>? . g$7657$1XjQw)
        (string-ci>=? . g$7659$1XjQw)
        (string-ci=? . g$7655$1XjQw)
        (string-ci<? . g$7656$1XjQw)
        (string-ci<=? . g$7658$1XjQw)
        (char-whitespace? . g$13062$1XjQw)
        (char-upper-case? . g$13061$1XjQw)
        (char-title-case? . g$13060$1XjQw)
        (char-numeric? . g$13059$1XjQw)
        (char-lower-case? . g$13058$1XjQw)
        (char-general-category . g$13057$1XjQw)
        (char-upcase . g$13056$1XjQw)
        (char-titlecase . g$13055$1XjQw)
        (char-foldcase . g$13054$1XjQw)
        (char-downcase . g$13053$1XjQw)
        (char-ci>? . g$7696$1XjQw)
        (char-ci>=? . g$7698$1XjQw)
        (char-ci=? . g$7694$1XjQw)
        (char-ci<? . g$7695$1XjQw)
        (char-ci<=? . g$7697$1XjQw)
        (char-alphabetic? . g$13052$1XjQw)
        (make-variable-transformer . g$9148$1XjQw)
        (identifier? . g$9546$1XjQw)
        (generate-temporaries . g$9535$1XjQw)
        (free-identifier=? . g$9536$1XjQw)
        (syntax->datum . g$9548$1XjQw)
        (datum->syntax . g$9547$1XjQw)
        (bound-identifier=? . g$9537$1XjQw)
        (record-type-descriptor? . g$13051$1XjQw)
        (record-predicate . g$13050$1XjQw)
        (record-mutator . g$13049$1XjQw)
        (record-constructor . g$13048$1XjQw)
        (record-accessor . g$13047$1XjQw)
        (make-record-type-descriptor . g$13046$1XjQw)
        (make-record-constructor-descriptor . g$13045$1XjQw)
        (record? . g$13044$1XjQw)
        (record-type-uid . g$13043$1XjQw)
        (record-type-sealed? . g$13042$1XjQw)
        (record-type-parent . g$13041$1XjQw)
        (record-type-opaque? . g$13040$1XjQw)
        (record-type-name . g$13039$1XjQw)
        (record-type-generative? . g$13038$1XjQw)
        (record-type-field-names . g$13037$1XjQw)
        (record-rtd . g$13036$1XjQw)
        (record-field-mutable? . g$13035$1XjQw)
        (delete-file . g$7232$1XjQw)
        (file-exists? . g$7231$1XjQw)
        (vector-sort! . g$13034$1XjQw)
        (vector-sort . g$13033$1XjQw)
        (list-sort . g$7595$1XjQw)
        (symbol-hash . g$13032$1XjQw)
        (string-ci-hash . g$13031$1XjQw)
        (string-hash . g$13030$1XjQw)
        (equal-hash . g$13029$1XjQw)
        (hashtable-equivalence-function . g$13028$1XjQw)
        (make-hashtable . g$13027$1XjQw)
        (hashtable-hash-function . g$13026$1XjQw)
        (make-eqv-hashtable . g$7199$1XjQw)
        (make-eq-hashtable . g$7198$1XjQw)
        (hashtable? . g$13025$1XjQw)
        (hashtable-update! . g$7205$1XjQw)
        (hashtable-size . g$7200$1XjQw)
        (hashtable-set! . g$7202$1XjQw)
        (hashtable-ref . g$7201$1XjQw)
        (hashtable-mutable? . g$13024$1XjQw)
        (hashtable-keys . g$13023$1XjQw)
        (hashtable-entries . g$13022$1XjQw)
        (hashtable-delete! . g$7203$1XjQw)
        (hashtable-copy . g$13021$1XjQw)
        (hashtable-contains? . g$7204$1XjQw)
        (hashtable-clear! . g$7206$1XjQw)
        (call-with-output-file . g$8074$1XjQw)
        (call-with-input-file . g$8073$1XjQw)
        (write-char . g$13020$1XjQw)
        (write . g$13019$1XjQw)
        (with-output-to-file . g$8072$1XjQw)
        (with-input-from-file . g$8071$1XjQw)
        (read-char . g$13018$1XjQw)
        (read . g$13017$1XjQw)
        (peek-char . g$13016$1XjQw)
        (open-output-file . g$13015$1XjQw)
        (open-input-file . g$13014$1XjQw)
        (newline . g$13013$1XjQw)
        (display . g$13012$1XjQw)
        (close-output-port . g$13011$1XjQw)
        (close-input-port . g$13010$1XjQw)
        (eof-object? . g$13009$1XjQw)
        (eof-object . g$13008$1XjQw)
        (current-error-port . g$13007$1XjQw)
        (current-output-port . g$13006$1XjQw)
        (current-input-port . g$13005$1XjQw)
        (output-port? . g$13004$1XjQw)
        (input-port? . g$13003$1XjQw)
        (utf-8-codec . g$13002$1XjQw)
        (utf-16-codec . g$13001$1XjQw)
        (transcoder-error-handling-mode . g$13000$1XjQw)
        (transcoder-eol-style . g$12999$1XjQw)
        (transcoder-codec . g$12998$1XjQw)
        (transcoded-port . g$12997$1XjQw)
        (textual-port? . g$12996$1XjQw)
        (string->bytevector . g$12995$1XjQw)
        (standard-output-port . g$12994$1XjQw)
        (standard-input-port . g$12993$1XjQw)
        (standard-error-port . g$12992$1XjQw)
        (set-port-position! . g$12991$1XjQw)
        (put-u8 . g$12990$1XjQw)
        (put-string . g$12989$1XjQw)
        (put-datum . g$12988$1XjQw)
        (put-char . g$12987$1XjQw)
        (put-bytevector . g$12986$1XjQw)
        (port? . g$8047$1XjQw)
        (port-transcoder . g$12985$1XjQw)
        (port-position . g$12984$1XjQw)
        (port-has-set-port-position!? . g$12983$1XjQw)
        (port-has-port-position? . g$12982$1XjQw)
        (port-eof? . g$12981$1XjQw)
        (output-port-buffer-mode . g$12980$1XjQw)
        (open-string-output-port . g$8046$1XjQw)
        (open-string-input-port . g$12979$1XjQw)
        (open-file-output-port . g$12978$1XjQw)
        (open-file-input/output-port . g$12977$1XjQw)
        (open-file-input-port . g$12976$1XjQw)
        (open-bytevector-output-port . g$12975$1XjQw)
        (open-bytevector-input-port . g$12974$1XjQw)
        (native-transcoder . g$12973$1XjQw)
        (native-eol-style . g$12972$1XjQw)
        (make-transcoder . g$12971$1XjQw)
        (latin-1-codec . g$12970$1XjQw)
        (make-i/o-write-error . g$7903$1XjQw)
        (make-i/o-read-error . g$7889$1XjQw)
        (make-i/o-port-error . g$8008$1XjQw)
        (make-i/o-invalid-position-error . g$7918$1XjQw)
        (make-i/o-filename-error . g$7935$1XjQw)
        (make-i/o-file-protection-error . g$7951$1XjQw)
        (make-i/o-file-is-read-only-error . g$7965$1XjQw)
        (make-i/o-file-does-not-exist-error . g$7993$1XjQw)
        (make-i/o-file-already-exists-error . g$7979$1XjQw)
        (make-i/o-error . g$7875$1XjQw)
        (make-i/o-encoding-error . g$8039$1XjQw)
        (make-i/o-decoding-error . g$8024$1XjQw)
        (make-custom-textual-output-port . g$12969$1XjQw)
        (make-custom-textual-input/output-port . g$12968$1XjQw)
        (make-custom-textual-input-port . g$12967$1XjQw)
        (make-custom-binary-output-port . g$12966$1XjQw)
        (make-custom-binary-input/output-port . g$12965$1XjQw)
        (make-custom-binary-input-port . g$12964$1XjQw)
        (make-bytevector . g$12963$1XjQw)
        (lookahead-u8 . g$12962$1XjQw)
        (lookahead-char . g$12961$1XjQw)
        (i/o-write-error? . g$7904$1XjQw)
        (i/o-read-error? . g$7890$1XjQw)
        (i/o-port-error? . g$8010$1XjQw)
        (i/o-invalid-position-error? . g$7920$1XjQw)
        (i/o-error-position . g$7921$1XjQw)
        (i/o-filename-error? . g$7937$1XjQw)
        (i/o-file-protection-error? . g$7952$1XjQw)
        (i/o-file-is-read-only-error? . g$7966$1XjQw)
        (i/o-file-does-not-exist-error? . g$7994$1XjQw)
        (i/o-file-already-exists-error? . g$7980$1XjQw)
        (i/o-error? . g$7876$1XjQw)
        (i/o-error-port . g$8011$1XjQw)
        (i/o-error-filename . g$7938$1XjQw)
        (i/o-encoding-error? . g$8041$1XjQw)
        (i/o-encoding-error-char . g$8042$1XjQw)
        (i/o-decoding-error? . g$8025$1XjQw)
        (get-u8 . g$12960$1XjQw)
        (get-string-n! . g$12959$1XjQw)
        (get-string-n . g$12958$1XjQw)
        (get-string-all . g$12957$1XjQw)
        (get-line . g$12956$1XjQw)
        (get-datum . g$12955$1XjQw)
        (get-char . g$12954$1XjQw)
        (get-bytevector-some . g$12953$1XjQw)
        (get-bytevector-n! . g$12952$1XjQw)
        (get-bytevector-n . g$12951$1XjQw)
        (get-bytevector-all . g$12950$1XjQw)
        (flush-output-port . g$12949$1XjQw)
        (close-port . g$12948$1XjQw)
        (call-with-string-output-port . g$8048$1XjQw)
        (call-with-port . g$12947$1XjQw)
        (call-with-bytevector-output-port . g$12946$1XjQw)
        (bytevector->string . g$12945$1XjQw)
        (buffer-mode? . g$12944$1XjQw)
        (binary-port? . g$12943$1XjQw)
        (scheme-report-environment . g$9526$1XjQw)
        (quotient . g$7575$1XjQw)
        (null-environment . g$9525$1XjQw)
        (remainder . g$7576$1XjQw)
        (modulo . g$7577$1XjQw)
        (inexact->exact . g$12942$1XjQw)
        (force . g$7579$1XjQw)
        (exact->inexact . g$12941$1XjQw)
        (exit . g$12940$1XjQw)
        (command-line . g$12520$1XjQw)
        (string-fill! . g$12939$1XjQw)
        (string-set! . g$12938$1XjQw)
        (set-cdr! . g$12937$1XjQw)
        (set-car! . g$12936$1XjQw)
        (remove . g$6567$1XjQw)
        (remv . g$6568$1XjQw)
        (remp . g$6548$1XjQw)
        (remq . g$6569$1XjQw)
        (partition . g$6547$1XjQw)
        (memv . g$6555$1XjQw)
        (memq . g$6554$1XjQw)
        (memp . g$6557$1XjQw)
        (member . g$6556$1XjQw)
        (exists . g$6561$1XjQw)
        (for-all . g$6560$1XjQw)
        (fold-right . g$6566$1XjQw)
        (fold-left . g$6565$1XjQw)
        (find . g$6546$1XjQw)
        (filter . g$6549$1XjQw)
        (cons* . g$6564$1XjQw)
        (assv . g$6551$1XjQw)
        (assq . g$6550$1XjQw)
        (assp . g$6553$1XjQw)
        (assoc . g$6552$1XjQw)
        (with-exception-handler . g$12935$1XjQw)
        (raise-continuable . g$12934$1XjQw)
        (raise . g$12933$1XjQw)
        (eval . g$9528$1XjQw)
        (environment . g$9524$1XjQw)
        (make-enumeration . g$8132$1XjQw)
        (enum-set=? . g$8139$1XjQw)
        (enum-set-universe . g$8133$1XjQw)
        (enum-set-union . g$8140$1XjQw)
        (enum-set-subset? . g$8138$1XjQw)
        (enum-set-projection . g$8144$1XjQw)
        (enum-set-member? . g$8137$1XjQw)
        (enum-set-intersection . g$8141$1XjQw)
        (enum-set-indexer . g$8134$1XjQw)
        (enum-set-difference . g$8142$1XjQw)
        (enum-set-constructor . g$8135$1XjQw)
        (enum-set-complement . g$8143$1XjQw)
        (enum-set->list . g$8136$1XjQw)
        (who-condition? . g$7486$1XjQw)
        (warning? . g$7397$1XjQw)
        (violation? . g$7439$1XjQw)
        (undefined-violation? . g$7563$1XjQw)
        (syntax-violation? . g$7547$1XjQw)
        (syntax-violation-subform . g$7549$1XjQw)
        (syntax-violation-form . g$7548$1XjQw)
        (syntax-violation . g$9545$1XjQw)
        (simple-conditions . g$12932$1XjQw)
        (serious-condition? . g$7411$1XjQw)
        (non-continuable-violation? . g$7501$1XjQw)
        (message-condition? . g$7382$1XjQw)
        (make-who-condition . g$7484$1XjQw)
        (make-warning . g$7396$1XjQw)
        (make-violation . g$7438$1XjQw)
        (make-undefined-violation . g$7562$1XjQw)
        (make-syntax-violation . g$7544$1XjQw)
        (make-serious-condition . g$7410$1XjQw)
        (make-non-continuable-violation . g$7500$1XjQw)
        (make-message-condition . g$7380$1XjQw)
        (make-lexical-violation . g$7528$1XjQw)
        (make-irritants-condition . g$7467$1XjQw)
        (make-implementation-restriction-violation . g$7514$1XjQw)
        (make-error . g$7424$1XjQw)
        (make-assertion-violation . g$7452$1XjQw)
        (lexical-violation? . g$7529$1XjQw)
        (irritants-condition? . g$7469$1XjQw)
        (implementation-restriction-violation? . g$7515$1XjQw)
        (error? . g$7425$1XjQw)
        (condition-who . g$7487$1XjQw)
        (condition-predicate . g$12931$1XjQw)
        (condition-message . g$7383$1XjQw)
        (condition-irritants . g$7470$1XjQw)
        (condition-accessor . g$12930$1XjQw)
        (condition . g$12929$1XjQw)
        (assertion-violation? . g$7453$1XjQw)
        (condition? . g$12928$1XjQw)
        (utf32->string . g$12927$1XjQw)
        (utf16->string . g$12926$1XjQw)
        (utf8->string . g$12925$1XjQw)
        (uint-list->bytevector . g$12924$1XjQw)
        (u8-list->bytevector . g$12923$1XjQw)
        (string->utf8 . g$12922$1XjQw)
        (string->utf32 . g$12921$1XjQw)
        (string->utf16 . g$12920$1XjQw)
        (sint-list->bytevector . g$12919$1XjQw)
        (native-endianness . g$7238$1XjQw)
        (bytevector? . g$12918$1XjQw)
        (bytevector=? . g$12917$1XjQw)
        (bytevector-uint-set! . g$12916$1XjQw)
        (bytevector-uint-ref . g$12915$1XjQw)
        (bytevector-u8-set! . g$12914$1XjQw)
        (bytevector-u8-ref . g$12913$1XjQw)
        (bytevector-u64-set! . g$7259$1XjQw)
        (bytevector-u64-ref . g$7255$1XjQw)
        (bytevector-u64-native-set! . g$7261$1XjQw)
        (bytevector-u64-native-ref . g$7257$1XjQw)
        (bytevector-u32-set! . g$7251$1XjQw)
        (bytevector-u32-ref . g$7247$1XjQw)
        (bytevector-u32-native-set! . g$7253$1XjQw)
        (bytevector-u32-native-ref . g$7249$1XjQw)
        (bytevector-u16-set! . g$7243$1XjQw)
        (bytevector-u16-ref . g$7239$1XjQw)
        (bytevector-u16-native-set! . g$7245$1XjQw)
        (bytevector-u16-native-ref . g$7241$1XjQw)
        (bytevector-sint-set! . g$12912$1XjQw)
        (bytevector-sint-ref . g$12911$1XjQw)
        (bytevector-s8-set! . g$12910$1XjQw)
        (bytevector-s8-ref . g$12909$1XjQw)
        (bytevector-s64-set! . g$7260$1XjQw)
        (bytevector-s64-ref . g$7256$1XjQw)
        (bytevector-s64-native-set! . g$7262$1XjQw)
        (bytevector-s64-native-ref . g$7258$1XjQw)
        (bytevector-s32-set! . g$7252$1XjQw)
        (bytevector-s32-ref . g$7248$1XjQw)
        (bytevector-s32-native-set! . g$7254$1XjQw)
        (bytevector-s32-native-ref . g$7250$1XjQw)
        (bytevector-s16-set! . g$7244$1XjQw)
        (bytevector-s16-ref . g$7240$1XjQw)
        (bytevector-s16-native-set! . g$7246$1XjQw)
        (bytevector-s16-native-ref . g$7242$1XjQw)
        (bytevector-length . g$12908$1XjQw)
        (bytevector-ieee-single-set! . g$12907$1XjQw)
        (bytevector-ieee-single-ref . g$12906$1XjQw)
        (bytevector-ieee-single-native-set! . g$7265$1XjQw)
        (bytevector-ieee-single-native-ref . g$7263$1XjQw)
        (bytevector-ieee-double-set! . g$12905$1XjQw)
        (bytevector-ieee-double-ref . g$12904$1XjQw)
        (bytevector-ieee-double-native-set! . g$7266$1XjQw)
        (bytevector-ieee-double-native-ref . g$7264$1XjQw)
        (bytevector-fill! . g$12903$1XjQw)
        (bytevector-copy! . g$12902$1XjQw)
        (bytevector-copy . g$12901$1XjQw)
        (bytevector->uint-list . g$12900$1XjQw)
        (bytevector->u8-list . g$12899$1XjQw)
        (bytevector->sint-list . g$12898$1XjQw)
        (no-nans-violation? . g$7861$1XjQw)
        (no-infinities-violation? . g$7847$1XjQw)
        (make-no-nans-violation . g$7860$1XjQw)
        (make-no-infinities-violation . g$7846$1XjQw)
        (real->flonum . g$12897$1XjQw)
        (flzero? . g$12896$1XjQw)
        (fltruncate . g$12895$1XjQw)
        (fltan . g$12894$1XjQw)
        (flsqrt . g$12893$1XjQw)
        (flsin . g$12892$1XjQw)
        (flround . g$12891$1XjQw)
        (flpositive? . g$12890$1XjQw)
        (flonum? . g$12889$1XjQw)
        (flodd? . g$12888$1XjQw)
        (flnumerator . g$12887$1XjQw)
        (flnegative? . g$12886$1XjQw)
        (flnan? . g$12885$1XjQw)
        (flmod0 . g$12884$1XjQw)
        (flmod . g$12883$1XjQw)
        (flmin . g$12882$1XjQw)
        (flmax . g$12881$1XjQw)
        (fllog . g$12880$1XjQw)
        (flinteger? . g$12879$1XjQw)
        (flinfinite? . g$12878$1XjQw)
        (flfloor . g$12877$1XjQw)
        (flfinite? . g$12876$1XjQw)
        (flexpt . g$12875$1XjQw)
        (flexp . g$12874$1XjQw)
        (fleven? . g$12873$1XjQw)
        (fldiv0-and-mod0 . g$12872$1XjQw)
        (fldiv0 . g$12871$1XjQw)
        (fldiv-and-mod . g$12870$1XjQw)
        (fldiv . g$12869$1XjQw)
        (fldenominator . g$12868$1XjQw)
        (flcos . g$12867$1XjQw)
        (flceiling . g$12866$1XjQw)
        (flatan . g$12865$1XjQw)
        (flasin . g$12864$1XjQw)
        (flacos . g$12863$1XjQw)
        (flabs . g$12862$1XjQw)
        (fl>? . g$12861$1XjQw)
        (fl>=? . g$12860$1XjQw)
        (fl=? . g$12859$1XjQw)
        (fl<? . g$12858$1XjQw)
        (fl<=? . g$12857$1XjQw)
        (fl/ . g$12856$1XjQw)
        (fl- . g$12855$1XjQw)
        (fl+ . g$12854$1XjQw)
        (fl* . g$12853$1XjQw)
        (fixnum->flonum . g$12852$1XjQw)
        (fxzero? . g$12851$1XjQw)
        (fxxor . g$12850$1XjQw)
        (fxrotate-bit-field . g$7793$1XjQw)
        (fxreverse-bit-field . g$12849$1XjQw)
        (fxpositive? . g$12848$1XjQw)
        (fxodd? . g$12847$1XjQw)
        (fxnot . g$12846$1XjQw)
        (fxnegative? . g$12845$1XjQw)
        (fxmod0 . g$12844$1XjQw)
        (fxmod . g$12843$1XjQw)
        (fxmin . g$12842$1XjQw)
        (fxmax . g$12841$1XjQw)
        (fxlength . g$12840$1XjQw)
        (fxior . g$12839$1XjQw)
        (fxif . g$7787$1XjQw)
        (fxfirst-bit-set . g$12838$1XjQw)
        (fxeven? . g$12837$1XjQw)
        (fxdiv0-and-mod0 . g$12836$1XjQw)
        (fxdiv0 . g$12835$1XjQw)
        (fxdiv-and-mod . g$12834$1XjQw)
        (fxdiv . g$12833$1XjQw)
        (fxcopy-bit-field . g$7790$1XjQw)
        (fxcopy-bit . g$7788$1XjQw)
        (fxbit-set? . g$12832$1XjQw)
        (fxbit-field . g$7789$1XjQw)
        (fxbit-count . g$12831$1XjQw)
        (fxarithmetic-shift-right . g$7792$1XjQw)
        (fxarithmetic-shift-left . g$7791$1XjQw)
        (fxarithmetic-shift . g$12830$1XjQw)
        (fxand . g$12829$1XjQw)
        (fx>? . g$12828$1XjQw)
        (fx>=? . g$12827$1XjQw)
        (fx=? . g$12826$1XjQw)
        (fx<? . g$12825$1XjQw)
        (fx<=? . g$12824$1XjQw)
        (fx-/carry . g$7785$1XjQw)
        (fx- . g$12823$1XjQw)
        (fx+/carry . g$7786$1XjQw)
        (fx+ . g$12822$1XjQw)
        (fx*/carry . g$7784$1XjQw)
        (fx* . g$12821$1XjQw)
        (greatest-fixnum . g$12820$1XjQw)
        (least-fixnum . g$12819$1XjQw)
        (fixnum-width . g$12818$1XjQw)
        (fixnum? . g$12817$1XjQw)
        (bitwise-rotate-bit-field . g$7758$1XjQw)
        (bitwise-reverse-bit-field . g$12816$1XjQw)
        (bitwise-length . g$12815$1XjQw)
        (bitwise-if . g$7752$1XjQw)
        (bitwise-first-bit-set . g$12814$1XjQw)
        (bitwise-copy-bit-field . g$7755$1XjQw)
        (bitwise-copy-bit . g$7753$1XjQw)
        (bitwise-bit-set? . g$12813$1XjQw)
        (bitwise-bit-field . g$12812$1XjQw)
        (bitwise-bit-count . g$12811$1XjQw)
        (bitwise-xor . g$12810$1XjQw)
        (bitwise-ior . g$12809$1XjQw)
        (bitwise-and . g$12808$1XjQw)
        (bitwise-not . g$12807$1XjQw)
        (bitwise-arithmetic-shift-right . g$7757$1XjQw)
        (bitwise-arithmetic-shift-left . g$7756$1XjQw)
        (bitwise-arithmetic-shift . g$12806$1XjQw)
        (zero? . g$12805$1XjQw)
        (vector? . g$12804$1XjQw)
        (vector-set! . g$12803$1XjQw)
        (vector-ref . g$12802$1XjQw)
        (vector-map . g$12801$1XjQw)
        (vector-length . g$12800$1XjQw)
        (vector-for-each . g$12799$1XjQw)
        (vector-fill! . g$12798$1XjQw)
        (vector->list . g$12797$1XjQw)
        (vector . g$12796$1XjQw)
        (values . g$12795$1XjQw)
        (truncate . g$12794$1XjQw)
        (tan . g$12793$1XjQw)
        (symbol? . g$12792$1XjQw)
        (symbol=? . g$6747$1XjQw)
        (symbol->string . g$12791$1XjQw)
        (substring . g$12790$1XjQw)
        (string? . g$12789$1XjQw)
        (string>? . g$6744$1XjQw)
        (string>=? . g$6746$1XjQw)
        (string=? . g$6742$1XjQw)
        (string<? . g$6743$1XjQw)
        (string<=? . g$6745$1XjQw)
        (string-ref . g$12788$1XjQw)
        (string-length . g$12787$1XjQw)
        (string-for-each . g$12786$1XjQw)
        (string-copy . g$12785$1XjQw)
        (string-append . g$12784$1XjQw)
        (string->symbol . g$12783$1XjQw)
        (string->number . g$12782$1XjQw)
        (string->list . g$12781$1XjQw)
        (string . g$12780$1XjQw)
        (sqrt . g$12779$1XjQw)
        (sin . g$12778$1XjQw)
        (round . g$12777$1XjQw)
        (reverse . g$12776$1XjQw)
        (real? . g$12775$1XjQw)
        (real-valued? . g$12774$1XjQw)
        (real-part . g$12773$1XjQw)
        (rationalize . g$6788$1XjQw)
        (rational? . g$12772$1XjQw)
        (rational-valued? . g$12771$1XjQw)
        (procedure? . g$12770$1XjQw)
        (positive? . g$12769$1XjQw)
        (pair? . g$12768$1XjQw)
        (odd? . g$12767$1XjQw)
        (numerator . g$12766$1XjQw)
        (number? . g$12765$1XjQw)
        (number->string . g$12764$1XjQw)
        (null? . g$12763$1XjQw)
        (not . g$12762$1XjQw)
        (negative? . g$12761$1XjQw)
        (nan? . g$12760$1XjQw)
        (min . g$12759$1XjQw)
        (max . g$12758$1XjQw)
        (map . g$6562$1XjQw)
        (make-vector . g$12757$1XjQw)
        (make-string . g$12756$1XjQw)
        (make-rectangular . g$12755$1XjQw)
        (make-polar . g$12754$1XjQw)
        (magnitude . g$12753$1XjQw)
        (log . g$12752$1XjQw)
        (list? . g$12751$1XjQw)
        (list-tail . g$6542$1XjQw)
        (list-ref . g$6543$1XjQw)
        (list->vector . g$12750$1XjQw)
        (list->string . g$12749$1XjQw)
        (list . g$12748$1XjQw)
        (length . g$12747$1XjQw)
        (lcm . g$12746$1XjQw)
        (integer? . g$12745$1XjQw)
        (integer-valued? . g$12744$1XjQw)
        (integer->char . g$12743$1XjQw)
        (infinite? . g$12742$1XjQw)
        (inexact? . g$12741$1XjQw)
        (inexact . g$12740$1XjQw)
        (imag-part . g$12739$1XjQw)
        (gcd . g$12738$1XjQw)
        (for-each . g$6563$1XjQw)
        (floor . g$12737$1XjQw)
        (finite? . g$12736$1XjQw)
        (expt . g$12735$1XjQw)
        (exp . g$12734$1XjQw)
        (exact? . g$12733$1XjQw)
        (exact-integer-sqrt . g$12732$1XjQw)
        (exact . g$12731$1XjQw)
        (even? . g$12730$1XjQw)
        (error . g$12729$1XjQw)
        (eqv? . g$12728$1XjQw)
        (equal? . g$12727$1XjQw)
        (eq? . g$12726$1XjQw)
        (dynamic-wind . g$12725$1XjQw)
        (div0-and-mod0 . g$12724$1XjQw)
        (mod0 . g$12723$1XjQw)
        (div0 . g$12722$1XjQw)
        (div-and-mod . g$12721$1XjQw)
        (mod . g$12720$1XjQw)
        (div . g$12719$1XjQw)
        (denominator . g$12718$1XjQw)
        (cos . g$12717$1XjQw)
        (cons . g$12716$1XjQw)
        (complex? . g$12715$1XjQw)
        (char? . g$12714$1XjQw)
        (char>? . g$6785$1XjQw)
        (char>=? . g$6787$1XjQw)
        (char=? . g$6783$1XjQw)
        (char<? . g$6784$1XjQw)
        (char<=? . g$6786$1XjQw)
        (char->integer . g$12713$1XjQw)
        (ceiling . g$12712$1XjQw)
        (call-with-values . g$12711$1XjQw)
        (call/cc . g$12710$1XjQw)
        (call-with-current-continuation . g$12709$1XjQw)
        (cddddr . g$6707$1XjQw)
        (cdddar . g$6706$1XjQw)
        (cddadr . g$6705$1XjQw)
        (cddaar . g$6704$1XjQw)
        (cdaddr . g$6703$1XjQw)
        (cdadar . g$6702$1XjQw)
        (cdaadr . g$6701$1XjQw)
        (cdaaar . g$6700$1XjQw)
        (cadddr . g$6699$1XjQw)
        (caddar . g$6698$1XjQw)
        (cadadr . g$6697$1XjQw)
        (cadaar . g$6696$1XjQw)
        (caaddr . g$6695$1XjQw)
        (caadar . g$6694$1XjQw)
        (caaadr . g$6693$1XjQw)
        (caaaar . g$6692$1XjQw)
        (cdddr . g$6691$1XjQw)
        (cddar . g$6690$1XjQw)
        (cdadr . g$6689$1XjQw)
        (cdaar . g$6688$1XjQw)
        (caddr . g$6687$1XjQw)
        (cadar . g$6686$1XjQw)
        (caadr . g$6685$1XjQw)
        (caaar . g$6684$1XjQw)
        (cddr . g$6683$1XjQw)
        (cdar . g$6682$1XjQw)
        (cadr . g$6681$1XjQw)
        (caar . g$6680$1XjQw)
        (cdr . g$12708$1XjQw)
        (car . g$12707$1XjQw)
        (boolean? . g$12706$1XjQw)
        (boolean=? . g$6748$1XjQw)
        (atan . g$12705$1XjQw)
        (assertion-violation . g$12704$1XjQw)
        (asin . g$12703$1XjQw)
        (apply . g$12702$1XjQw)
        (append . g$12701$1XjQw)
        (angle . g$12700$1XjQw)
        (acos . g$12699$1XjQw)
        (abs . g$12698$1XjQw)
        (/ . g$12697$1XjQw)
        (* . g$12696$1XjQw)
        (- . g$12695$1XjQw)
        (+ . g$12694$1XjQw)
        (>= . g$12693$1XjQw)
        (> . g$12692$1XjQw)
        (= . g$12691$1XjQw)
        (<= . g$12690$1XjQw)
        (< . g$12689$1XjQw)
        (deserialize-port . g$12685$1XjQw)
        (serialize-port . g$12684$1XjQw)
        (enum-set? . g$8107$1XjQw)
        (load/args . g$12522$1XjQw)
        (printf . g$8218$1XjQw)
        (fprintf . g$8219$1XjQw)
        (format . g$8220$1XjQw)
        (procedure-form . g$12683$1XjQw)
        (procedure-environment . g$12682$1XjQw)
        (procedure-name . g$12681$1XjQw)
        (procedure-arity . g$12680$1XjQw)
        (gc-collect . g$12679$1XjQw)
        (clr-type? . g$12678$1XjQw)
        (get-clr-type . g$12677$1XjQw)
        (vector-append . g$12675$1XjQw)
        (vector-filter . g$12674$1XjQw)
        (vector-reverse! . g$12673$1XjQw)
        (vector-contains? . g$12672$1XjQw)
        (vector-index-of . g$12671$1XjQw)
        (vector-copy . g$12670$1XjQw)
        (vector-binary-search . g$12669$1XjQw)
        (string-ci-compare . g$12668$1XjQw)
        (string-compare . g$12667$1XjQw)
        (string-format . g$12666$1XjQw)
        (trace-printer . g$12519$1XjQw)
        (time-it . g$12664$1XjQw)
        (make-parameter . g$8247$1XjQw)
        (environment-bindings . g$9520$1XjQw)
        (environment-symbols . g$9523$1XjQw)
        (interaction-environment-symbols . g$9519$1XjQw)
        (optimization-level . g$12661$1XjQw)
        (library-path . g$8702$1XjQw)
        (expand . g$9527$1XjQw)
        (&no-nans . g$12660$1XjQw)
        (&no-infinities . g$12659$1XjQw)
        (&i/o-encoding . g$12658$1XjQw)
        (&i/o-decoding . g$12657$1XjQw)
        (&i/o-port . g$12656$1XjQw)
        (&i/o-file-does-not-exist . g$12655$1XjQw)
        (&i/o-file-already-exists . g$12654$1XjQw)
        (&i/o-file-is-read-only . g$12653$1XjQw)
        (&i/o-file-protection . g$12652$1XjQw)
        (&i/o-filename . g$12651$1XjQw)
        (&i/o-invalid-position . g$12650$1XjQw)
        (&i/o-write . g$12649$1XjQw)
        (&i/o-read . g$12648$1XjQw)
        (&i/o . g$12647$1XjQw)
        (&non-continuable . g$12646$1XjQw)
        (&undefined . g$12645$1XjQw)
        (&syntax . g$12644$1XjQw)
        (&lexical . g$12643$1XjQw)
        (&implementation-restriction . g$12642$1XjQw)
        (&who . g$12641$1XjQw)
        (&irritants . g$12640$1XjQw)
        (&assertion . g$12639$1XjQw)
        (&violation . g$12638$1XjQw)
        (&error . g$12637$1XjQw)
        (&serious . g$12636$1XjQw)
        (&warning . g$12635$1XjQw)
        (&message . g$12634$1XjQw)
        (&condition . g$12633$1XjQw)
        (define-condition-type . g$12632$1XjQw)
        (define-enumeration . g$12631$1XjQw)
        (define-record-type . g$12630$1XjQw)
        (parent-rtd . g$12629$1XjQw)
        (nongenerative . g$12628$1XjQw)
        (opaque . g$12627$1XjQw)
        (sealed . g$12626$1XjQw)
        (protocol . g$12625$1XjQw)
        (parent . g$12624$1XjQw)
        (immutable . g$12623$1XjQw)
        (mutable . g$12622$1XjQw)
        (fields . g$12621$1XjQw)
        (error-handling-mode . g$12620$1XjQw)
        (file-options . g$12619$1XjQw)
        (buffer-mode . g$12618$1XjQw)
        (eol-style . g$12617$1XjQw)
        (guard . g$12616$1XjQw)
        (trace-letrec-syntax . g$12615$1XjQw)
        (trace-let-syntax . g$12614$1XjQw)
        (trace-define-syntax . g$12613$1XjQw)
        (trace-define . g$12612$1XjQw)
        (trace-lambda . g$12611$1XjQw)
        (unsyntax-splicing . g$12610$1XjQw)
        (unsyntax . g$12609$1XjQw)
        (unquote-splicing . g$12608$1XjQw)
        (unquote . g$12607$1XjQw)
        (_ . g$12606$1XjQw)
        (else . g$12605$1XjQw)
        (=> . g$12604$1XjQw)
        (... . g$12603$1XjQw)
        (assert . g$12602$1XjQw)
        (endianness . g$12601$1XjQw)
        (delay . g$12600$1XjQw)
        (time . g$12599$1XjQw)
        (or . g$12598$1XjQw)
        (and . g$12597$1XjQw)
        (do . g$12596$1XjQw)
        (cond . g$12595$1XjQw)
        (let* . g$12594$1XjQw)
        (let . g$12593$1XjQw)
        (identifier-syntax . g$12592$1XjQw)
        (with-syntax . g$12591$1XjQw)
        (quasisyntax . g$12590$1XjQw)
        (quasiquote . g$12589$1XjQw)
        (syntax-rules . g$12588$1XjQw)
        (include-into . g$12587$1XjQw)
        (include . g$12586$1XjQw)
        (let-values . g$12584$1XjQw)
        (let*-values . g$12583$1XjQw)
        (record-constructor-descriptor . g$12582$1XjQw)
        (record-type-descriptor . g$12581$1XjQw)
        (fluid-let-syntax . g$12580$1XjQw)
        (case . g$12579$1XjQw)
        (parameterize . g$12578$1XjQw)
        (unless . g$12577$1XjQw)
        (when . g$12576$1XjQw)
        (if . g$12575$1XjQw)
        (letrec* . g$12574$1XjQw)
        (letrec . g$12573$1XjQw)
        (case-lambda . g$12571$1XjQw)
        (lambda . g$12570$1XjQw)
        (syntax . g$12569$1XjQw)
        (syntax-case . g$12568$1XjQw)
        (quote . g$12567$1XjQw)
        (letrec-syntax . g$12565$1XjQw)
        (let-syntax . g$12564$1XjQw)
        (set! . g$12563$1XjQw)
        (export . g$12562$1XjQw)
        (import . g$12561$1XjQw)
        (library . g$12560$1XjQw)
        (begin . g$12559$1XjQw)
        (module . g$12558$1XjQw)
        (define-syntax . g$12557$1XjQw)
        (define . g$12556$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13164$1XjQw
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$12662$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7831$1XjQw
      'g$13165$1XjQw
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$13105$1XjQw)
        (annotation-source . g$13104$1XjQw)
        (annotation-expression . g$13103$1XjQw)
        (annotation? . g$13102$1XjQw)
        (read-annotated . g$13101$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7831$1XjQw
      'g$13166$1XjQw
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$13073$1XjQw)
        (serialize-library . g$13072$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7831$1XjQw
      'g$13167$1XjQw
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$9150$1XjQw)
        (variable-transformer? . g$9149$1XjQw)
        (eqv-hash . g$12687$1XjQw)
        (reverse! . g$12686$1XjQw)
        (make-promise . g$7578$1XjQw)
        (format . g$8220$1XjQw)
        (get-command-line . g$12676$1XjQw)
        (make-traced-procedure . g$12665$1XjQw)
        (make-traced-macro . g$8240$1XjQw)
        (assertion-error . g$9541$1XjQw)
        (library-locator . g$12663$1XjQw)
        (get-library-paths . g$12662$1XjQw)
        (library-path . g$8702$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7831$1XjQw
      'g$13168$1XjQw
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$12688$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13169$1XjQw
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$13091$1XjQw)
        (clr-field-set!-internal . g$13090$1XjQw)
        (clr-field-get-internal . g$13089$1XjQw)
        (clr-cast-internal . g$13088$1XjQw)
        (clr-call-internal . g$13087$1XjQw)
        (clr-new-internal . g$13086$1XjQw)
        (clr-new-array-internal . g$13085$1XjQw)
        (clr-is-internal . g$13084$1XjQw)
        (clr-reference-internal . g$13083$1XjQw)
        (clr-using-internal . g$13082$1XjQw)
        (clr-clear-usings-internal . g$13081$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13170$1XjQw
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$12608$1XjQw)
        (unquote . g$12607$1XjQw)
        (else . g$12605$1XjQw)
        (=> . g$12604$1XjQw)
        (delay . g$12600$1XjQw)
        (or . g$12598$1XjQw)
        (and . g$12597$1XjQw)
        (do . g$12596$1XjQw)
        (cond . g$12595$1XjQw)
        (let* . g$12594$1XjQw)
        (let . g$12593$1XjQw)
        (quasiquote . g$12589$1XjQw)
        (syntax-rules . g$12588$1XjQw)
        (case . g$12579$1XjQw)
        (if . g$12575$1XjQw)
        (letrec . g$12573$1XjQw)
        (lambda . g$12570$1XjQw)
        (quote . g$12567$1XjQw)
        (letrec-syntax . g$12565$1XjQw)
        (let-syntax . g$12564$1XjQw)
        (set! . g$12563$1XjQw)
        (begin . g$12559$1XjQw)
        (define-syntax . g$12557$1XjQw)
        (define . g$12556$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7831$1XjQw
      'g$13171$1XjQw
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$9551$1XjQw)
        (char-ready? . g$13071$1XjQw)
        (string-ci>? . g$7657$1XjQw)
        (string-ci>=? . g$7659$1XjQw)
        (string-ci=? . g$7655$1XjQw)
        (string-ci<? . g$7656$1XjQw)
        (string-ci<=? . g$7658$1XjQw)
        (char-whitespace? . g$13062$1XjQw)
        (char-upper-case? . g$13061$1XjQw)
        (char-numeric? . g$13059$1XjQw)
        (char-lower-case? . g$13058$1XjQw)
        (char-upcase . g$13056$1XjQw)
        (char-downcase . g$13053$1XjQw)
        (char-ci>? . g$7696$1XjQw)
        (char-ci>=? . g$7698$1XjQw)
        (char-ci=? . g$7694$1XjQw)
        (char-ci<? . g$7695$1XjQw)
        (char-ci<=? . g$7697$1XjQw)
        (char-alphabetic? . g$13052$1XjQw)
        (call-with-output-file . g$8074$1XjQw)
        (call-with-input-file . g$8073$1XjQw)
        (write-char . g$13020$1XjQw)
        (write . g$13019$1XjQw)
        (with-output-to-file . g$8072$1XjQw)
        (with-input-from-file . g$8071$1XjQw)
        (read-char . g$13018$1XjQw)
        (read . g$13017$1XjQw)
        (peek-char . g$13016$1XjQw)
        (open-output-file . g$13015$1XjQw)
        (open-input-file . g$13014$1XjQw)
        (newline . g$13013$1XjQw)
        (display . g$13012$1XjQw)
        (close-output-port . g$13011$1XjQw)
        (close-input-port . g$13010$1XjQw)
        (eof-object? . g$13009$1XjQw)
        (eof-object . g$13008$1XjQw)
        (current-error-port . g$13007$1XjQw)
        (current-output-port . g$13006$1XjQw)
        (current-input-port . g$13005$1XjQw)
        (output-port? . g$13004$1XjQw)
        (input-port? . g$13003$1XjQw)
        (scheme-report-environment . g$9526$1XjQw)
        (quotient . g$7575$1XjQw)
        (null-environment . g$9525$1XjQw)
        (remainder . g$7576$1XjQw)
        (modulo . g$7577$1XjQw)
        (inexact->exact . g$12942$1XjQw)
        (force . g$7579$1XjQw)
        (exact->inexact . g$12941$1XjQw)
        (string-fill! . g$12939$1XjQw)
        (string-set! . g$12938$1XjQw)
        (set-cdr! . g$12937$1XjQw)
        (set-car! . g$12936$1XjQw)
        (memv . g$6555$1XjQw)
        (memq . g$6554$1XjQw)
        (member . g$6556$1XjQw)
        (assv . g$6551$1XjQw)
        (assq . g$6550$1XjQw)
        (assoc . g$6552$1XjQw)
        (eval . g$9528$1XjQw)
        (zero? . g$12805$1XjQw)
        (vector? . g$12804$1XjQw)
        (vector-set! . g$12803$1XjQw)
        (vector-ref . g$12802$1XjQw)
        (vector-length . g$12800$1XjQw)
        (vector-fill! . g$12798$1XjQw)
        (vector->list . g$12797$1XjQw)
        (vector . g$12796$1XjQw)
        (values . g$12795$1XjQw)
        (truncate . g$12794$1XjQw)
        (tan . g$12793$1XjQw)
        (symbol? . g$12792$1XjQw)
        (symbol->string . g$12791$1XjQw)
        (substring . g$12790$1XjQw)
        (string? . g$12789$1XjQw)
        (string>? . g$6744$1XjQw)
        (string>=? . g$6746$1XjQw)
        (string=? . g$6742$1XjQw)
        (string<? . g$6743$1XjQw)
        (string<=? . g$6745$1XjQw)
        (string-ref . g$12788$1XjQw)
        (string-length . g$12787$1XjQw)
        (string-copy . g$12785$1XjQw)
        (string-append . g$12784$1XjQw)
        (string->symbol . g$12783$1XjQw)
        (string->number . g$12782$1XjQw)
        (string->list . g$12781$1XjQw)
        (string . g$12780$1XjQw)
        (sqrt . g$12779$1XjQw)
        (sin . g$12778$1XjQw)
        (round . g$12777$1XjQw)
        (reverse . g$12776$1XjQw)
        (real? . g$12775$1XjQw)
        (real-part . g$12773$1XjQw)
        (rationalize . g$6788$1XjQw)
        (rational? . g$12772$1XjQw)
        (procedure? . g$12770$1XjQw)
        (positive? . g$12769$1XjQw)
        (pair? . g$12768$1XjQw)
        (odd? . g$12767$1XjQw)
        (numerator . g$12766$1XjQw)
        (number? . g$12765$1XjQw)
        (number->string . g$12764$1XjQw)
        (null? . g$12763$1XjQw)
        (not . g$12762$1XjQw)
        (negative? . g$12761$1XjQw)
        (min . g$12759$1XjQw)
        (max . g$12758$1XjQw)
        (map . g$6562$1XjQw)
        (make-vector . g$12757$1XjQw)
        (make-string . g$12756$1XjQw)
        (make-rectangular . g$12755$1XjQw)
        (make-polar . g$12754$1XjQw)
        (magnitude . g$12753$1XjQw)
        (log . g$12752$1XjQw)
        (list? . g$12751$1XjQw)
        (list-tail . g$6542$1XjQw)
        (list-ref . g$6543$1XjQw)
        (list->vector . g$12750$1XjQw)
        (list->string . g$12749$1XjQw)
        (list . g$12748$1XjQw)
        (length . g$12747$1XjQw)
        (lcm . g$12746$1XjQw)
        (integer? . g$12745$1XjQw)
        (integer->char . g$12743$1XjQw)
        (inexact? . g$12741$1XjQw)
        (imag-part . g$12739$1XjQw)
        (gcd . g$12738$1XjQw)
        (for-each . g$6563$1XjQw)
        (floor . g$12737$1XjQw)
        (expt . g$12735$1XjQw)
        (exp . g$12734$1XjQw)
        (exact? . g$12733$1XjQw)
        (even? . g$12730$1XjQw)
        (eqv? . g$12728$1XjQw)
        (equal? . g$12727$1XjQw)
        (eq? . g$12726$1XjQw)
        (dynamic-wind . g$12725$1XjQw)
        (denominator . g$12718$1XjQw)
        (cos . g$12717$1XjQw)
        (cons . g$12716$1XjQw)
        (complex? . g$12715$1XjQw)
        (char? . g$12714$1XjQw)
        (char>? . g$6785$1XjQw)
        (char>=? . g$6787$1XjQw)
        (char=? . g$6783$1XjQw)
        (char<? . g$6784$1XjQw)
        (char<=? . g$6786$1XjQw)
        (char->integer . g$12713$1XjQw)
        (ceiling . g$12712$1XjQw)
        (call-with-values . g$12711$1XjQw)
        (call-with-current-continuation . g$12709$1XjQw)
        (cddddr . g$6707$1XjQw)
        (cdddar . g$6706$1XjQw)
        (cddadr . g$6705$1XjQw)
        (cddaar . g$6704$1XjQw)
        (cdaddr . g$6703$1XjQw)
        (cdadar . g$6702$1XjQw)
        (cdaadr . g$6701$1XjQw)
        (cdaaar . g$6700$1XjQw)
        (cadddr . g$6699$1XjQw)
        (caddar . g$6698$1XjQw)
        (cadadr . g$6697$1XjQw)
        (cadaar . g$6696$1XjQw)
        (caaddr . g$6695$1XjQw)
        (caadar . g$6694$1XjQw)
        (caaadr . g$6693$1XjQw)
        (caaaar . g$6692$1XjQw)
        (cdddr . g$6691$1XjQw)
        (cddar . g$6690$1XjQw)
        (cdadr . g$6689$1XjQw)
        (cdaar . g$6688$1XjQw)
        (caddr . g$6687$1XjQw)
        (cadar . g$6686$1XjQw)
        (caadr . g$6685$1XjQw)
        (caaar . g$6684$1XjQw)
        (cddr . g$6683$1XjQw)
        (cdar . g$6682$1XjQw)
        (cadr . g$6681$1XjQw)
        (caar . g$6680$1XjQw)
        (cdr . g$12708$1XjQw)
        (car . g$12707$1XjQw)
        (boolean? . g$12706$1XjQw)
        (atan . g$12705$1XjQw)
        (asin . g$12703$1XjQw)
        (apply . g$12702$1XjQw)
        (append . g$12701$1XjQw)
        (angle . g$12700$1XjQw)
        (acos . g$12699$1XjQw)
        (abs . g$12698$1XjQw)
        (/ . g$12697$1XjQw)
        (* . g$12696$1XjQw)
        (- . g$12695$1XjQw)
        (+ . g$12694$1XjQw)
        (>= . g$12693$1XjQw)
        (> . g$12692$1XjQw)
        (= . g$12691$1XjQw)
        (<= . g$12690$1XjQw)
        (< . g$12689$1XjQw)
        (unquote-splicing . g$12608$1XjQw)
        (unquote . g$12607$1XjQw)
        (else . g$12605$1XjQw)
        (=> . g$12604$1XjQw)
        (... . g$12603$1XjQw)
        (delay . g$12600$1XjQw)
        (or . g$12598$1XjQw)
        (and . g$12597$1XjQw)
        (do . g$12596$1XjQw)
        (cond . g$12595$1XjQw)
        (let* . g$12594$1XjQw)
        (let . g$12593$1XjQw)
        (quasiquote . g$12589$1XjQw)
        (syntax-rules . g$12588$1XjQw)
        (case . g$12579$1XjQw)
        (if . g$12575$1XjQw)
        (letrec . g$12573$1XjQw)
        (lambda . g$12570$1XjQw)
        (quote . g$12567$1XjQw)
        (letrec-syntax . g$12565$1XjQw)
        (let-syntax . g$12564$1XjQw)
        (set! . g$12563$1XjQw)
        (begin . g$12559$1XjQw)
        (define-syntax . g$12557$1XjQw)
        (define . g$12556$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7831$1XjQw
      'g$13172$1XjQw
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13070$1XjQw)
        (string-titlecase . g$13069$1XjQw)
        (string-normalize-nfkd . g$13068$1XjQw)
        (string-normalize-nfkc . g$13067$1XjQw)
        (string-normalize-nfd . g$13066$1XjQw)
        (string-normalize-nfc . g$13065$1XjQw)
        (string-foldcase . g$13064$1XjQw)
        (string-downcase . g$13063$1XjQw)
        (string-ci>? . g$7657$1XjQw)
        (string-ci>=? . g$7659$1XjQw)
        (string-ci=? . g$7655$1XjQw)
        (string-ci<? . g$7656$1XjQw)
        (string-ci<=? . g$7658$1XjQw)
        (char-whitespace? . g$13062$1XjQw)
        (char-upper-case? . g$13061$1XjQw)
        (char-title-case? . g$13060$1XjQw)
        (char-numeric? . g$13059$1XjQw)
        (char-lower-case? . g$13058$1XjQw)
        (char-general-category . g$13057$1XjQw)
        (char-upcase . g$13056$1XjQw)
        (char-titlecase . g$13055$1XjQw)
        (char-foldcase . g$13054$1XjQw)
        (char-downcase . g$13053$1XjQw)
        (char-ci>? . g$7696$1XjQw)
        (char-ci>=? . g$7698$1XjQw)
        (char-ci=? . g$7694$1XjQw)
        (char-ci<? . g$7695$1XjQw)
        (char-ci<=? . g$7697$1XjQw)
        (char-alphabetic? . g$13052$1XjQw)
        (make-variable-transformer . g$9148$1XjQw)
        (identifier? . g$9546$1XjQw)
        (generate-temporaries . g$9535$1XjQw)
        (free-identifier=? . g$9536$1XjQw)
        (syntax->datum . g$9548$1XjQw)
        (datum->syntax . g$9547$1XjQw)
        (bound-identifier=? . g$9537$1XjQw)
        (record-type-descriptor? . g$13051$1XjQw)
        (record-predicate . g$13050$1XjQw)
        (record-mutator . g$13049$1XjQw)
        (record-constructor . g$13048$1XjQw)
        (record-accessor . g$13047$1XjQw)
        (make-record-type-descriptor . g$13046$1XjQw)
        (make-record-constructor-descriptor . g$13045$1XjQw)
        (record? . g$13044$1XjQw)
        (record-type-uid . g$13043$1XjQw)
        (record-type-sealed? . g$13042$1XjQw)
        (record-type-parent . g$13041$1XjQw)
        (record-type-opaque? . g$13040$1XjQw)
        (record-type-name . g$13039$1XjQw)
        (record-type-generative? . g$13038$1XjQw)
        (record-type-field-names . g$13037$1XjQw)
        (record-rtd . g$13036$1XjQw)
        (record-field-mutable? . g$13035$1XjQw)
        (delete-file . g$7232$1XjQw)
        (file-exists? . g$7231$1XjQw)
        (vector-sort! . g$13034$1XjQw)
        (vector-sort . g$13033$1XjQw)
        (list-sort . g$7595$1XjQw)
        (symbol-hash . g$13032$1XjQw)
        (string-ci-hash . g$13031$1XjQw)
        (string-hash . g$13030$1XjQw)
        (equal-hash . g$13029$1XjQw)
        (hashtable-equivalence-function . g$13028$1XjQw)
        (make-hashtable . g$13027$1XjQw)
        (hashtable-hash-function . g$13026$1XjQw)
        (make-eqv-hashtable . g$7199$1XjQw)
        (make-eq-hashtable . g$7198$1XjQw)
        (hashtable? . g$13025$1XjQw)
        (hashtable-update! . g$7205$1XjQw)
        (hashtable-size . g$7200$1XjQw)
        (hashtable-set! . g$7202$1XjQw)
        (hashtable-ref . g$7201$1XjQw)
        (hashtable-mutable? . g$13024$1XjQw)
        (hashtable-keys . g$13023$1XjQw)
        (hashtable-entries . g$13022$1XjQw)
        (hashtable-delete! . g$7203$1XjQw)
        (hashtable-copy . g$13021$1XjQw)
        (hashtable-contains? . g$7204$1XjQw)
        (hashtable-clear! . g$7206$1XjQw)
        (call-with-output-file . g$8074$1XjQw)
        (call-with-input-file . g$8073$1XjQw)
        (write-char . g$13020$1XjQw)
        (write . g$13019$1XjQw)
        (with-output-to-file . g$8072$1XjQw)
        (with-input-from-file . g$8071$1XjQw)
        (read-char . g$13018$1XjQw)
        (read . g$13017$1XjQw)
        (peek-char . g$13016$1XjQw)
        (open-output-file . g$13015$1XjQw)
        (open-input-file . g$13014$1XjQw)
        (newline . g$13013$1XjQw)
        (display . g$13012$1XjQw)
        (close-output-port . g$13011$1XjQw)
        (close-input-port . g$13010$1XjQw)
        (eof-object? . g$13009$1XjQw)
        (eof-object . g$13008$1XjQw)
        (current-error-port . g$13007$1XjQw)
        (current-output-port . g$13006$1XjQw)
        (current-input-port . g$13005$1XjQw)
        (output-port? . g$13004$1XjQw)
        (input-port? . g$13003$1XjQw)
        (utf-8-codec . g$13002$1XjQw)
        (utf-16-codec . g$13001$1XjQw)
        (transcoder-error-handling-mode . g$13000$1XjQw)
        (transcoder-eol-style . g$12999$1XjQw)
        (transcoder-codec . g$12998$1XjQw)
        (transcoded-port . g$12997$1XjQw)
        (textual-port? . g$12996$1XjQw)
        (string->bytevector . g$12995$1XjQw)
        (standard-output-port . g$12994$1XjQw)
        (standard-input-port . g$12993$1XjQw)
        (standard-error-port . g$12992$1XjQw)
        (set-port-position! . g$12991$1XjQw)
        (put-u8 . g$12990$1XjQw)
        (put-string . g$12989$1XjQw)
        (put-datum . g$12988$1XjQw)
        (put-char . g$12987$1XjQw)
        (put-bytevector . g$12986$1XjQw)
        (port? . g$8047$1XjQw)
        (port-transcoder . g$12985$1XjQw)
        (port-position . g$12984$1XjQw)
        (port-has-set-port-position!? . g$12983$1XjQw)
        (port-has-port-position? . g$12982$1XjQw)
        (port-eof? . g$12981$1XjQw)
        (output-port-buffer-mode . g$12980$1XjQw)
        (open-string-output-port . g$8046$1XjQw)
        (open-string-input-port . g$12979$1XjQw)
        (open-file-output-port . g$12978$1XjQw)
        (open-file-input/output-port . g$12977$1XjQw)
        (open-file-input-port . g$12976$1XjQw)
        (open-bytevector-output-port . g$12975$1XjQw)
        (open-bytevector-input-port . g$12974$1XjQw)
        (native-transcoder . g$12973$1XjQw)
        (native-eol-style . g$12972$1XjQw)
        (make-transcoder . g$12971$1XjQw)
        (latin-1-codec . g$12970$1XjQw)
        (make-i/o-write-error . g$7903$1XjQw)
        (make-i/o-read-error . g$7889$1XjQw)
        (make-i/o-port-error . g$8008$1XjQw)
        (make-i/o-invalid-position-error . g$7918$1XjQw)
        (make-i/o-filename-error . g$7935$1XjQw)
        (make-i/o-file-protection-error . g$7951$1XjQw)
        (make-i/o-file-is-read-only-error . g$7965$1XjQw)
        (make-i/o-file-does-not-exist-error . g$7993$1XjQw)
        (make-i/o-file-already-exists-error . g$7979$1XjQw)
        (make-i/o-error . g$7875$1XjQw)
        (make-i/o-encoding-error . g$8039$1XjQw)
        (make-i/o-decoding-error . g$8024$1XjQw)
        (make-custom-textual-output-port . g$12969$1XjQw)
        (make-custom-textual-input/output-port . g$12968$1XjQw)
        (make-custom-textual-input-port . g$12967$1XjQw)
        (make-custom-binary-output-port . g$12966$1XjQw)
        (make-custom-binary-input/output-port . g$12965$1XjQw)
        (make-custom-binary-input-port . g$12964$1XjQw)
        (make-bytevector . g$12963$1XjQw)
        (lookahead-u8 . g$12962$1XjQw)
        (lookahead-char . g$12961$1XjQw)
        (i/o-write-error? . g$7904$1XjQw)
        (i/o-read-error? . g$7890$1XjQw)
        (i/o-port-error? . g$8010$1XjQw)
        (i/o-invalid-position-error? . g$7920$1XjQw)
        (i/o-error-position . g$7921$1XjQw)
        (i/o-filename-error? . g$7937$1XjQw)
        (i/o-file-protection-error? . g$7952$1XjQw)
        (i/o-file-is-read-only-error? . g$7966$1XjQw)
        (i/o-file-does-not-exist-error? . g$7994$1XjQw)
        (i/o-file-already-exists-error? . g$7980$1XjQw)
        (i/o-error? . g$7876$1XjQw)
        (i/o-error-port . g$8011$1XjQw)
        (i/o-error-filename . g$7938$1XjQw)
        (i/o-encoding-error? . g$8041$1XjQw)
        (i/o-encoding-error-char . g$8042$1XjQw)
        (i/o-decoding-error? . g$8025$1XjQw)
        (get-u8 . g$12960$1XjQw)
        (get-string-n! . g$12959$1XjQw)
        (get-string-n . g$12958$1XjQw)
        (get-string-all . g$12957$1XjQw)
        (get-line . g$12956$1XjQw)
        (get-datum . g$12955$1XjQw)
        (get-char . g$12954$1XjQw)
        (get-bytevector-some . g$12953$1XjQw)
        (get-bytevector-n! . g$12952$1XjQw)
        (get-bytevector-n . g$12951$1XjQw)
        (get-bytevector-all . g$12950$1XjQw)
        (flush-output-port . g$12949$1XjQw)
        (close-port . g$12948$1XjQw)
        (call-with-string-output-port . g$8048$1XjQw)
        (call-with-port . g$12947$1XjQw)
        (call-with-bytevector-output-port . g$12946$1XjQw)
        (bytevector->string . g$12945$1XjQw)
        (buffer-mode? . g$12944$1XjQw)
        (binary-port? . g$12943$1XjQw)
        (exit . g$12940$1XjQw)
        (command-line . g$12520$1XjQw)
        (remove . g$6567$1XjQw)
        (remv . g$6568$1XjQw)
        (remp . g$6548$1XjQw)
        (remq . g$6569$1XjQw)
        (partition . g$6547$1XjQw)
        (memv . g$6555$1XjQw)
        (memq . g$6554$1XjQw)
        (memp . g$6557$1XjQw)
        (member . g$6556$1XjQw)
        (exists . g$6561$1XjQw)
        (for-all . g$6560$1XjQw)
        (fold-right . g$6566$1XjQw)
        (fold-left . g$6565$1XjQw)
        (find . g$6546$1XjQw)
        (filter . g$6549$1XjQw)
        (cons* . g$6564$1XjQw)
        (assv . g$6551$1XjQw)
        (assq . g$6550$1XjQw)
        (assp . g$6553$1XjQw)
        (assoc . g$6552$1XjQw)
        (with-exception-handler . g$12935$1XjQw)
        (raise-continuable . g$12934$1XjQw)
        (raise . g$12933$1XjQw)
        (make-enumeration . g$8132$1XjQw)
        (enum-set=? . g$8139$1XjQw)
        (enum-set-universe . g$8133$1XjQw)
        (enum-set-union . g$8140$1XjQw)
        (enum-set-subset? . g$8138$1XjQw)
        (enum-set-projection . g$8144$1XjQw)
        (enum-set-member? . g$8137$1XjQw)
        (enum-set-intersection . g$8141$1XjQw)
        (enum-set-indexer . g$8134$1XjQw)
        (enum-set-difference . g$8142$1XjQw)
        (enum-set-constructor . g$8135$1XjQw)
        (enum-set-complement . g$8143$1XjQw)
        (enum-set->list . g$8136$1XjQw)
        (who-condition? . g$7486$1XjQw)
        (warning? . g$7397$1XjQw)
        (violation? . g$7439$1XjQw)
        (undefined-violation? . g$7563$1XjQw)
        (syntax-violation? . g$7547$1XjQw)
        (syntax-violation-subform . g$7549$1XjQw)
        (syntax-violation-form . g$7548$1XjQw)
        (syntax-violation . g$9545$1XjQw)
        (simple-conditions . g$12932$1XjQw)
        (serious-condition? . g$7411$1XjQw)
        (non-continuable-violation? . g$7501$1XjQw)
        (message-condition? . g$7382$1XjQw)
        (make-who-condition . g$7484$1XjQw)
        (make-warning . g$7396$1XjQw)
        (make-violation . g$7438$1XjQw)
        (make-undefined-violation . g$7562$1XjQw)
        (make-syntax-violation . g$7544$1XjQw)
        (make-serious-condition . g$7410$1XjQw)
        (make-non-continuable-violation . g$7500$1XjQw)
        (make-message-condition . g$7380$1XjQw)
        (make-lexical-violation . g$7528$1XjQw)
        (make-irritants-condition . g$7467$1XjQw)
        (make-implementation-restriction-violation . g$7514$1XjQw)
        (make-error . g$7424$1XjQw)
        (make-assertion-violation . g$7452$1XjQw)
        (lexical-violation? . g$7529$1XjQw)
        (irritants-condition? . g$7469$1XjQw)
        (implementation-restriction-violation? . g$7515$1XjQw)
        (error? . g$7425$1XjQw)
        (condition-who . g$7487$1XjQw)
        (condition-predicate . g$12931$1XjQw)
        (condition-message . g$7383$1XjQw)
        (condition-irritants . g$7470$1XjQw)
        (condition-accessor . g$12930$1XjQw)
        (condition . g$12929$1XjQw)
        (assertion-violation? . g$7453$1XjQw)
        (condition? . g$12928$1XjQw)
        (utf32->string . g$12927$1XjQw)
        (utf16->string . g$12926$1XjQw)
        (utf8->string . g$12925$1XjQw)
        (uint-list->bytevector . g$12924$1XjQw)
        (u8-list->bytevector . g$12923$1XjQw)
        (string->utf8 . g$12922$1XjQw)
        (string->utf32 . g$12921$1XjQw)
        (string->utf16 . g$12920$1XjQw)
        (sint-list->bytevector . g$12919$1XjQw)
        (native-endianness . g$7238$1XjQw)
        (bytevector? . g$12918$1XjQw)
        (bytevector=? . g$12917$1XjQw)
        (bytevector-uint-set! . g$12916$1XjQw)
        (bytevector-uint-ref . g$12915$1XjQw)
        (bytevector-u8-set! . g$12914$1XjQw)
        (bytevector-u8-ref . g$12913$1XjQw)
        (bytevector-u64-set! . g$7259$1XjQw)
        (bytevector-u64-ref . g$7255$1XjQw)
        (bytevector-u64-native-set! . g$7261$1XjQw)
        (bytevector-u64-native-ref . g$7257$1XjQw)
        (bytevector-u32-set! . g$7251$1XjQw)
        (bytevector-u32-ref . g$7247$1XjQw)
        (bytevector-u32-native-set! . g$7253$1XjQw)
        (bytevector-u32-native-ref . g$7249$1XjQw)
        (bytevector-u16-set! . g$7243$1XjQw)
        (bytevector-u16-ref . g$7239$1XjQw)
        (bytevector-u16-native-set! . g$7245$1XjQw)
        (bytevector-u16-native-ref . g$7241$1XjQw)
        (bytevector-sint-set! . g$12912$1XjQw)
        (bytevector-sint-ref . g$12911$1XjQw)
        (bytevector-s8-set! . g$12910$1XjQw)
        (bytevector-s8-ref . g$12909$1XjQw)
        (bytevector-s64-set! . g$7260$1XjQw)
        (bytevector-s64-ref . g$7256$1XjQw)
        (bytevector-s64-native-set! . g$7262$1XjQw)
        (bytevector-s64-native-ref . g$7258$1XjQw)
        (bytevector-s32-set! . g$7252$1XjQw)
        (bytevector-s32-ref . g$7248$1XjQw)
        (bytevector-s32-native-set! . g$7254$1XjQw)
        (bytevector-s32-native-ref . g$7250$1XjQw)
        (bytevector-s16-set! . g$7244$1XjQw)
        (bytevector-s16-ref . g$7240$1XjQw)
        (bytevector-s16-native-set! . g$7246$1XjQw)
        (bytevector-s16-native-ref . g$7242$1XjQw)
        (bytevector-length . g$12908$1XjQw)
        (bytevector-ieee-single-set! . g$12907$1XjQw)
        (bytevector-ieee-single-ref . g$12906$1XjQw)
        (bytevector-ieee-single-native-set! . g$7265$1XjQw)
        (bytevector-ieee-single-native-ref . g$7263$1XjQw)
        (bytevector-ieee-double-set! . g$12905$1XjQw)
        (bytevector-ieee-double-ref . g$12904$1XjQw)
        (bytevector-ieee-double-native-set! . g$7266$1XjQw)
        (bytevector-ieee-double-native-ref . g$7264$1XjQw)
        (bytevector-fill! . g$12903$1XjQw)
        (bytevector-copy! . g$12902$1XjQw)
        (bytevector-copy . g$12901$1XjQw)
        (bytevector->uint-list . g$12900$1XjQw)
        (bytevector->u8-list . g$12899$1XjQw)
        (bytevector->sint-list . g$12898$1XjQw)
        (no-nans-violation? . g$7861$1XjQw)
        (no-infinities-violation? . g$7847$1XjQw)
        (make-no-nans-violation . g$7860$1XjQw)
        (make-no-infinities-violation . g$7846$1XjQw)
        (real->flonum . g$12897$1XjQw)
        (flzero? . g$12896$1XjQw)
        (fltruncate . g$12895$1XjQw)
        (fltan . g$12894$1XjQw)
        (flsqrt . g$12893$1XjQw)
        (flsin . g$12892$1XjQw)
        (flround . g$12891$1XjQw)
        (flpositive? . g$12890$1XjQw)
        (flonum? . g$12889$1XjQw)
        (flodd? . g$12888$1XjQw)
        (flnumerator . g$12887$1XjQw)
        (flnegative? . g$12886$1XjQw)
        (flnan? . g$12885$1XjQw)
        (flmod0 . g$12884$1XjQw)
        (flmod . g$12883$1XjQw)
        (flmin . g$12882$1XjQw)
        (flmax . g$12881$1XjQw)
        (fllog . g$12880$1XjQw)
        (flinteger? . g$12879$1XjQw)
        (flinfinite? . g$12878$1XjQw)
        (flfloor . g$12877$1XjQw)
        (flfinite? . g$12876$1XjQw)
        (flexpt . g$12875$1XjQw)
        (flexp . g$12874$1XjQw)
        (fleven? . g$12873$1XjQw)
        (fldiv0-and-mod0 . g$12872$1XjQw)
        (fldiv0 . g$12871$1XjQw)
        (fldiv-and-mod . g$12870$1XjQw)
        (fldiv . g$12869$1XjQw)
        (fldenominator . g$12868$1XjQw)
        (flcos . g$12867$1XjQw)
        (flceiling . g$12866$1XjQw)
        (flatan . g$12865$1XjQw)
        (flasin . g$12864$1XjQw)
        (flacos . g$12863$1XjQw)
        (flabs . g$12862$1XjQw)
        (fl>? . g$12861$1XjQw)
        (fl>=? . g$12860$1XjQw)
        (fl=? . g$12859$1XjQw)
        (fl<? . g$12858$1XjQw)
        (fl<=? . g$12857$1XjQw)
        (fl/ . g$12856$1XjQw)
        (fl- . g$12855$1XjQw)
        (fl+ . g$12854$1XjQw)
        (fl* . g$12853$1XjQw)
        (fixnum->flonum . g$12852$1XjQw)
        (fxzero? . g$12851$1XjQw)
        (fxxor . g$12850$1XjQw)
        (fxrotate-bit-field . g$7793$1XjQw)
        (fxreverse-bit-field . g$12849$1XjQw)
        (fxpositive? . g$12848$1XjQw)
        (fxodd? . g$12847$1XjQw)
        (fxnot . g$12846$1XjQw)
        (fxnegative? . g$12845$1XjQw)
        (fxmod0 . g$12844$1XjQw)
        (fxmod . g$12843$1XjQw)
        (fxmin . g$12842$1XjQw)
        (fxmax . g$12841$1XjQw)
        (fxlength . g$12840$1XjQw)
        (fxior . g$12839$1XjQw)
        (fxif . g$7787$1XjQw)
        (fxfirst-bit-set . g$12838$1XjQw)
        (fxeven? . g$12837$1XjQw)
        (fxdiv0-and-mod0 . g$12836$1XjQw)
        (fxdiv0 . g$12835$1XjQw)
        (fxdiv-and-mod . g$12834$1XjQw)
        (fxdiv . g$12833$1XjQw)
        (fxcopy-bit-field . g$7790$1XjQw)
        (fxcopy-bit . g$7788$1XjQw)
        (fxbit-set? . g$12832$1XjQw)
        (fxbit-field . g$7789$1XjQw)
        (fxbit-count . g$12831$1XjQw)
        (fxarithmetic-shift-right . g$7792$1XjQw)
        (fxarithmetic-shift-left . g$7791$1XjQw)
        (fxarithmetic-shift . g$12830$1XjQw)
        (fxand . g$12829$1XjQw)
        (fx>? . g$12828$1XjQw)
        (fx>=? . g$12827$1XjQw)
        (fx=? . g$12826$1XjQw)
        (fx<? . g$12825$1XjQw)
        (fx<=? . g$12824$1XjQw)
        (fx-/carry . g$7785$1XjQw)
        (fx- . g$12823$1XjQw)
        (fx+/carry . g$7786$1XjQw)
        (fx+ . g$12822$1XjQw)
        (fx*/carry . g$7784$1XjQw)
        (fx* . g$12821$1XjQw)
        (greatest-fixnum . g$12820$1XjQw)
        (least-fixnum . g$12819$1XjQw)
        (fixnum-width . g$12818$1XjQw)
        (fixnum? . g$12817$1XjQw)
        (bitwise-rotate-bit-field . g$7758$1XjQw)
        (bitwise-reverse-bit-field . g$12816$1XjQw)
        (bitwise-length . g$12815$1XjQw)
        (bitwise-if . g$7752$1XjQw)
        (bitwise-first-bit-set . g$12814$1XjQw)
        (bitwise-copy-bit-field . g$7755$1XjQw)
        (bitwise-copy-bit . g$7753$1XjQw)
        (bitwise-bit-set? . g$12813$1XjQw)
        (bitwise-bit-field . g$12812$1XjQw)
        (bitwise-bit-count . g$12811$1XjQw)
        (bitwise-xor . g$12810$1XjQw)
        (bitwise-ior . g$12809$1XjQw)
        (bitwise-and . g$12808$1XjQw)
        (bitwise-not . g$12807$1XjQw)
        (bitwise-arithmetic-shift-right . g$7757$1XjQw)
        (bitwise-arithmetic-shift-left . g$7756$1XjQw)
        (bitwise-arithmetic-shift . g$12806$1XjQw)
        (zero? . g$12805$1XjQw)
        (vector? . g$12804$1XjQw)
        (vector-set! . g$12803$1XjQw)
        (vector-ref . g$12802$1XjQw)
        (vector-map . g$12801$1XjQw)
        (vector-length . g$12800$1XjQw)
        (vector-for-each . g$12799$1XjQw)
        (vector-fill! . g$12798$1XjQw)
        (vector->list . g$12797$1XjQw)
        (vector . g$12796$1XjQw)
        (values . g$12795$1XjQw)
        (truncate . g$12794$1XjQw)
        (tan . g$12793$1XjQw)
        (symbol? . g$12792$1XjQw)
        (symbol=? . g$6747$1XjQw)
        (symbol->string . g$12791$1XjQw)
        (substring . g$12790$1XjQw)
        (string? . g$12789$1XjQw)
        (string>? . g$6744$1XjQw)
        (string>=? . g$6746$1XjQw)
        (string=? . g$6742$1XjQw)
        (string<? . g$6743$1XjQw)
        (string<=? . g$6745$1XjQw)
        (string-ref . g$12788$1XjQw)
        (string-length . g$12787$1XjQw)
        (string-for-each . g$12786$1XjQw)
        (string-copy . g$12785$1XjQw)
        (string-append . g$12784$1XjQw)
        (string->symbol . g$12783$1XjQw)
        (string->number . g$12782$1XjQw)
        (string->list . g$12781$1XjQw)
        (string . g$12780$1XjQw)
        (sqrt . g$12779$1XjQw)
        (sin . g$12778$1XjQw)
        (round . g$12777$1XjQw)
        (reverse . g$12776$1XjQw)
        (real? . g$12775$1XjQw)
        (real-valued? . g$12774$1XjQw)
        (real-part . g$12773$1XjQw)
        (rationalize . g$6788$1XjQw)
        (rational? . g$12772$1XjQw)
        (rational-valued? . g$12771$1XjQw)
        (procedure? . g$12770$1XjQw)
        (positive? . g$12769$1XjQw)
        (pair? . g$12768$1XjQw)
        (odd? . g$12767$1XjQw)
        (numerator . g$12766$1XjQw)
        (number? . g$12765$1XjQw)
        (number->string . g$12764$1XjQw)
        (null? . g$12763$1XjQw)
        (not . g$12762$1XjQw)
        (negative? . g$12761$1XjQw)
        (nan? . g$12760$1XjQw)
        (min . g$12759$1XjQw)
        (max . g$12758$1XjQw)
        (map . g$6562$1XjQw)
        (make-vector . g$12757$1XjQw)
        (make-string . g$12756$1XjQw)
        (make-rectangular . g$12755$1XjQw)
        (make-polar . g$12754$1XjQw)
        (magnitude . g$12753$1XjQw)
        (log . g$12752$1XjQw)
        (list? . g$12751$1XjQw)
        (list-tail . g$6542$1XjQw)
        (list-ref . g$6543$1XjQw)
        (list->vector . g$12750$1XjQw)
        (list->string . g$12749$1XjQw)
        (list . g$12748$1XjQw)
        (length . g$12747$1XjQw)
        (lcm . g$12746$1XjQw)
        (integer? . g$12745$1XjQw)
        (integer-valued? . g$12744$1XjQw)
        (integer->char . g$12743$1XjQw)
        (infinite? . g$12742$1XjQw)
        (inexact? . g$12741$1XjQw)
        (inexact . g$12740$1XjQw)
        (imag-part . g$12739$1XjQw)
        (gcd . g$12738$1XjQw)
        (for-each . g$6563$1XjQw)
        (floor . g$12737$1XjQw)
        (finite? . g$12736$1XjQw)
        (expt . g$12735$1XjQw)
        (exp . g$12734$1XjQw)
        (exact? . g$12733$1XjQw)
        (exact-integer-sqrt . g$12732$1XjQw)
        (exact . g$12731$1XjQw)
        (even? . g$12730$1XjQw)
        (error . g$12729$1XjQw)
        (eqv? . g$12728$1XjQw)
        (equal? . g$12727$1XjQw)
        (eq? . g$12726$1XjQw)
        (dynamic-wind . g$12725$1XjQw)
        (div0-and-mod0 . g$12724$1XjQw)
        (mod0 . g$12723$1XjQw)
        (div0 . g$12722$1XjQw)
        (div-and-mod . g$12721$1XjQw)
        (mod . g$12720$1XjQw)
        (div . g$12719$1XjQw)
        (denominator . g$12718$1XjQw)
        (cos . g$12717$1XjQw)
        (cons . g$12716$1XjQw)
        (complex? . g$12715$1XjQw)
        (char? . g$12714$1XjQw)
        (char>? . g$6785$1XjQw)
        (char>=? . g$6787$1XjQw)
        (char=? . g$6783$1XjQw)
        (char<? . g$6784$1XjQw)
        (char<=? . g$6786$1XjQw)
        (char->integer . g$12713$1XjQw)
        (ceiling . g$12712$1XjQw)
        (call-with-values . g$12711$1XjQw)
        (call/cc . g$12710$1XjQw)
        (call-with-current-continuation . g$12709$1XjQw)
        (cddddr . g$6707$1XjQw)
        (cdddar . g$6706$1XjQw)
        (cddadr . g$6705$1XjQw)
        (cddaar . g$6704$1XjQw)
        (cdaddr . g$6703$1XjQw)
        (cdadar . g$6702$1XjQw)
        (cdaadr . g$6701$1XjQw)
        (cdaaar . g$6700$1XjQw)
        (cadddr . g$6699$1XjQw)
        (caddar . g$6698$1XjQw)
        (cadadr . g$6697$1XjQw)
        (cadaar . g$6696$1XjQw)
        (caaddr . g$6695$1XjQw)
        (caadar . g$6694$1XjQw)
        (caaadr . g$6693$1XjQw)
        (caaaar . g$6692$1XjQw)
        (cdddr . g$6691$1XjQw)
        (cddar . g$6690$1XjQw)
        (cdadr . g$6689$1XjQw)
        (cdaar . g$6688$1XjQw)
        (caddr . g$6687$1XjQw)
        (cadar . g$6686$1XjQw)
        (caadr . g$6685$1XjQw)
        (caaar . g$6684$1XjQw)
        (cddr . g$6683$1XjQw)
        (cdar . g$6682$1XjQw)
        (cadr . g$6681$1XjQw)
        (caar . g$6680$1XjQw)
        (cdr . g$12708$1XjQw)
        (car . g$12707$1XjQw)
        (boolean? . g$12706$1XjQw)
        (boolean=? . g$6748$1XjQw)
        (atan . g$12705$1XjQw)
        (assertion-violation . g$12704$1XjQw)
        (asin . g$12703$1XjQw)
        (apply . g$12702$1XjQw)
        (append . g$12701$1XjQw)
        (angle . g$12700$1XjQw)
        (acos . g$12699$1XjQw)
        (abs . g$12698$1XjQw)
        (/ . g$12697$1XjQw)
        (* . g$12696$1XjQw)
        (- . g$12695$1XjQw)
        (+ . g$12694$1XjQw)
        (>= . g$12693$1XjQw)
        (> . g$12692$1XjQw)
        (= . g$12691$1XjQw)
        (<= . g$12690$1XjQw)
        (< . g$12689$1XjQw)
        (&no-nans . g$12660$1XjQw)
        (&no-infinities . g$12659$1XjQw)
        (&i/o-encoding . g$12658$1XjQw)
        (&i/o-decoding . g$12657$1XjQw)
        (&i/o-port . g$12656$1XjQw)
        (&i/o-file-does-not-exist . g$12655$1XjQw)
        (&i/o-file-already-exists . g$12654$1XjQw)
        (&i/o-file-is-read-only . g$12653$1XjQw)
        (&i/o-file-protection . g$12652$1XjQw)
        (&i/o-filename . g$12651$1XjQw)
        (&i/o-invalid-position . g$12650$1XjQw)
        (&i/o-write . g$12649$1XjQw)
        (&i/o-read . g$12648$1XjQw)
        (&i/o . g$12647$1XjQw)
        (&non-continuable . g$12646$1XjQw)
        (&undefined . g$12645$1XjQw)
        (&syntax . g$12644$1XjQw)
        (&lexical . g$12643$1XjQw)
        (&implementation-restriction . g$12642$1XjQw)
        (&who . g$12641$1XjQw)
        (&irritants . g$12640$1XjQw)
        (&assertion . g$12639$1XjQw)
        (&violation . g$12638$1XjQw)
        (&error . g$12637$1XjQw)
        (&serious . g$12636$1XjQw)
        (&warning . g$12635$1XjQw)
        (&message . g$12634$1XjQw)
        (&condition . g$12633$1XjQw)
        (define-condition-type . g$12632$1XjQw)
        (define-enumeration . g$12631$1XjQw)
        (define-record-type . g$12630$1XjQw)
        (parent-rtd . g$12629$1XjQw)
        (nongenerative . g$12628$1XjQw)
        (opaque . g$12627$1XjQw)
        (sealed . g$12626$1XjQw)
        (protocol . g$12625$1XjQw)
        (parent . g$12624$1XjQw)
        (immutable . g$12623$1XjQw)
        (mutable . g$12622$1XjQw)
        (fields . g$12621$1XjQw)
        (error-handling-mode . g$12620$1XjQw)
        (file-options . g$12619$1XjQw)
        (buffer-mode . g$12618$1XjQw)
        (eol-style . g$12617$1XjQw)
        (guard . g$12616$1XjQw)
        (unsyntax-splicing . g$12610$1XjQw)
        (unsyntax . g$12609$1XjQw)
        (unquote-splicing . g$12608$1XjQw)
        (unquote . g$12607$1XjQw)
        (_ . g$12606$1XjQw)
        (else . g$12605$1XjQw)
        (=> . g$12604$1XjQw)
        (... . g$12603$1XjQw)
        (assert . g$12602$1XjQw)
        (endianness . g$12601$1XjQw)
        (or . g$12598$1XjQw)
        (and . g$12597$1XjQw)
        (do . g$12596$1XjQw)
        (cond . g$12595$1XjQw)
        (let* . g$12594$1XjQw)
        (let . g$12593$1XjQw)
        (identifier-syntax . g$12592$1XjQw)
        (with-syntax . g$12591$1XjQw)
        (quasisyntax . g$12590$1XjQw)
        (quasiquote . g$12589$1XjQw)
        (syntax-rules . g$12588$1XjQw)
        (let-values . g$12584$1XjQw)
        (let*-values . g$12583$1XjQw)
        (record-constructor-descriptor . g$12582$1XjQw)
        (record-type-descriptor . g$12581$1XjQw)
        (case . g$12579$1XjQw)
        (unless . g$12577$1XjQw)
        (when . g$12576$1XjQw)
        (if . g$12575$1XjQw)
        (letrec* . g$12574$1XjQw)
        (letrec . g$12573$1XjQw)
        (case-lambda . g$12571$1XjQw)
        (lambda . g$12570$1XjQw)
        (syntax . g$12569$1XjQw)
        (syntax-case . g$12568$1XjQw)
        (quote . g$12567$1XjQw)
        (letrec-syntax . g$12565$1XjQw)
        (let-syntax . g$12564$1XjQw)
        (set! . g$12563$1XjQw)
        (begin . g$12559$1XjQw)
        (define-syntax . g$12557$1XjQw)
        (define . g$12556$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13173$1XjQw
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$9551$1XjQw)
        (scheme-report-environment . g$9526$1XjQw)
        (quotient . g$7575$1XjQw)
        (null-environment . g$9525$1XjQw)
        (remainder . g$7576$1XjQw)
        (modulo . g$7577$1XjQw)
        (inexact->exact . g$12942$1XjQw)
        (force . g$7579$1XjQw)
        (exact->inexact . g$12941$1XjQw)
        (delay . g$12600$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13174$1XjQw
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$12596$1XjQw)
        (unless . g$12577$1XjQw)
        (when . g$12576$1XjQw)
        (case-lambda . g$12571$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13175$1XjQw
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$9528$1XjQw) (environment . g$9524$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13176$1XjQw
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$12937$1XjQw) (set-car! . g$12936$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13177$1XjQw
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$12939$1XjQw) (string-set! . g$12938$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13178$1XjQw
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$12940$1XjQw) (command-line . g$12520$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13179$1XjQw
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$9148$1XjQw)
        (identifier? . g$9546$1XjQw)
        (generate-temporaries . g$9535$1XjQw)
        (free-identifier=? . g$9536$1XjQw)
        (syntax->datum . g$9548$1XjQw)
        (datum->syntax . g$9547$1XjQw)
        (bound-identifier=? . g$9537$1XjQw)
        (syntax-violation . g$9545$1XjQw)
        (unsyntax-splicing . g$12610$1XjQw)
        (unsyntax . g$12609$1XjQw)
        (_ . g$12606$1XjQw)
        (... . g$12603$1XjQw)
        (with-syntax . g$12591$1XjQw)
        (quasisyntax . g$12590$1XjQw)
        (syntax . g$12569$1XjQw)
        (syntax-case . g$12568$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13180$1XjQw
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$7232$1XjQw)
        (file-exists? . g$7231$1XjQw)
        (make-i/o-write-error . g$7903$1XjQw)
        (make-i/o-read-error . g$7889$1XjQw)
        (make-i/o-port-error . g$8008$1XjQw)
        (make-i/o-invalid-position-error . g$7918$1XjQw)
        (make-i/o-filename-error . g$7935$1XjQw)
        (make-i/o-file-protection-error . g$7951$1XjQw)
        (make-i/o-file-is-read-only-error . g$7965$1XjQw)
        (make-i/o-file-does-not-exist-error . g$7993$1XjQw)
        (make-i/o-file-already-exists-error . g$7979$1XjQw)
        (make-i/o-error . g$7875$1XjQw)
        (i/o-write-error? . g$7904$1XjQw)
        (i/o-read-error? . g$7890$1XjQw)
        (i/o-port-error? . g$8010$1XjQw)
        (i/o-invalid-position-error? . g$7920$1XjQw)
        (i/o-error-position . g$7921$1XjQw)
        (i/o-filename-error? . g$7937$1XjQw)
        (i/o-file-protection-error? . g$7952$1XjQw)
        (i/o-file-is-read-only-error? . g$7966$1XjQw)
        (i/o-file-does-not-exist-error? . g$7994$1XjQw)
        (i/o-file-already-exists-error? . g$7980$1XjQw)
        (i/o-error? . g$7876$1XjQw)
        (i/o-error-port . g$8011$1XjQw)
        (i/o-error-filename . g$7938$1XjQw)
        (&i/o-port . g$12656$1XjQw)
        (&i/o-file-does-not-exist . g$12655$1XjQw)
        (&i/o-file-already-exists . g$12654$1XjQw)
        (&i/o-file-is-read-only . g$12653$1XjQw)
        (&i/o-file-protection . g$12652$1XjQw)
        (&i/o-filename . g$12651$1XjQw)
        (&i/o-invalid-position . g$12650$1XjQw)
        (&i/o-write . g$12649$1XjQw)
        (&i/o-read . g$12648$1XjQw)
        (&i/o . g$12647$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13181$1XjQw
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$13034$1XjQw)
        (vector-sort . g$13033$1XjQw)
        (list-sort . g$7595$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13182$1XjQw
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$12805$1XjQw)
        (vector? . g$12804$1XjQw)
        (vector-set! . g$12803$1XjQw)
        (vector-ref . g$12802$1XjQw)
        (vector-map . g$12801$1XjQw)
        (vector-length . g$12800$1XjQw)
        (vector-for-each . g$12799$1XjQw)
        (vector-fill! . g$12798$1XjQw)
        (vector->list . g$12797$1XjQw)
        (vector . g$12796$1XjQw)
        (values . g$12795$1XjQw)
        (truncate . g$12794$1XjQw)
        (tan . g$12793$1XjQw)
        (symbol? . g$12792$1XjQw)
        (symbol=? . g$6747$1XjQw)
        (symbol->string . g$12791$1XjQw)
        (substring . g$12790$1XjQw)
        (string? . g$12789$1XjQw)
        (string>? . g$6744$1XjQw)
        (string>=? . g$6746$1XjQw)
        (string=? . g$6742$1XjQw)
        (string<? . g$6743$1XjQw)
        (string<=? . g$6745$1XjQw)
        (string-ref . g$12788$1XjQw)
        (string-length . g$12787$1XjQw)
        (string-for-each . g$12786$1XjQw)
        (string-copy . g$12785$1XjQw)
        (string-append . g$12784$1XjQw)
        (string->symbol . g$12783$1XjQw)
        (string->number . g$12782$1XjQw)
        (string->list . g$12781$1XjQw)
        (string . g$12780$1XjQw)
        (sqrt . g$12779$1XjQw)
        (sin . g$12778$1XjQw)
        (round . g$12777$1XjQw)
        (reverse . g$12776$1XjQw)
        (real? . g$12775$1XjQw)
        (real-valued? . g$12774$1XjQw)
        (real-part . g$12773$1XjQw)
        (rationalize . g$6788$1XjQw)
        (rational? . g$12772$1XjQw)
        (rational-valued? . g$12771$1XjQw)
        (procedure? . g$12770$1XjQw)
        (positive? . g$12769$1XjQw)
        (pair? . g$12768$1XjQw)
        (odd? . g$12767$1XjQw)
        (numerator . g$12766$1XjQw)
        (number? . g$12765$1XjQw)
        (number->string . g$12764$1XjQw)
        (null? . g$12763$1XjQw)
        (not . g$12762$1XjQw)
        (negative? . g$12761$1XjQw)
        (nan? . g$12760$1XjQw)
        (min . g$12759$1XjQw)
        (max . g$12758$1XjQw)
        (map . g$6562$1XjQw)
        (make-vector . g$12757$1XjQw)
        (make-string . g$12756$1XjQw)
        (make-rectangular . g$12755$1XjQw)
        (make-polar . g$12754$1XjQw)
        (magnitude . g$12753$1XjQw)
        (log . g$12752$1XjQw)
        (list? . g$12751$1XjQw)
        (list-tail . g$6542$1XjQw)
        (list-ref . g$6543$1XjQw)
        (list->vector . g$12750$1XjQw)
        (list->string . g$12749$1XjQw)
        (list . g$12748$1XjQw)
        (length . g$12747$1XjQw)
        (lcm . g$12746$1XjQw)
        (integer? . g$12745$1XjQw)
        (integer-valued? . g$12744$1XjQw)
        (integer->char . g$12743$1XjQw)
        (infinite? . g$12742$1XjQw)
        (inexact? . g$12741$1XjQw)
        (inexact . g$12740$1XjQw)
        (imag-part . g$12739$1XjQw)
        (gcd . g$12738$1XjQw)
        (for-each . g$6563$1XjQw)
        (floor . g$12737$1XjQw)
        (finite? . g$12736$1XjQw)
        (expt . g$12735$1XjQw)
        (exp . g$12734$1XjQw)
        (exact? . g$12733$1XjQw)
        (exact-integer-sqrt . g$12732$1XjQw)
        (exact . g$12731$1XjQw)
        (even? . g$12730$1XjQw)
        (error . g$12729$1XjQw)
        (eqv? . g$12728$1XjQw)
        (equal? . g$12727$1XjQw)
        (eq? . g$12726$1XjQw)
        (dynamic-wind . g$12725$1XjQw)
        (div0-and-mod0 . g$12724$1XjQw)
        (mod0 . g$12723$1XjQw)
        (div0 . g$12722$1XjQw)
        (div-and-mod . g$12721$1XjQw)
        (mod . g$12720$1XjQw)
        (div . g$12719$1XjQw)
        (denominator . g$12718$1XjQw)
        (cos . g$12717$1XjQw)
        (cons . g$12716$1XjQw)
        (complex? . g$12715$1XjQw)
        (char? . g$12714$1XjQw)
        (char>? . g$6785$1XjQw)
        (char>=? . g$6787$1XjQw)
        (char=? . g$6783$1XjQw)
        (char<? . g$6784$1XjQw)
        (char<=? . g$6786$1XjQw)
        (char->integer . g$12713$1XjQw)
        (ceiling . g$12712$1XjQw)
        (call-with-values . g$12711$1XjQw)
        (call/cc . g$12710$1XjQw)
        (call-with-current-continuation . g$12709$1XjQw)
        (cddddr . g$6707$1XjQw)
        (cdddar . g$6706$1XjQw)
        (cddadr . g$6705$1XjQw)
        (cddaar . g$6704$1XjQw)
        (cdaddr . g$6703$1XjQw)
        (cdadar . g$6702$1XjQw)
        (cdaadr . g$6701$1XjQw)
        (cdaaar . g$6700$1XjQw)
        (cadddr . g$6699$1XjQw)
        (caddar . g$6698$1XjQw)
        (cadadr . g$6697$1XjQw)
        (cadaar . g$6696$1XjQw)
        (caaddr . g$6695$1XjQw)
        (caadar . g$6694$1XjQw)
        (caaadr . g$6693$1XjQw)
        (caaaar . g$6692$1XjQw)
        (cdddr . g$6691$1XjQw)
        (cddar . g$6690$1XjQw)
        (cdadr . g$6689$1XjQw)
        (cdaar . g$6688$1XjQw)
        (caddr . g$6687$1XjQw)
        (cadar . g$6686$1XjQw)
        (caadr . g$6685$1XjQw)
        (caaar . g$6684$1XjQw)
        (cddr . g$6683$1XjQw)
        (cdar . g$6682$1XjQw)
        (cadr . g$6681$1XjQw)
        (caar . g$6680$1XjQw)
        (cdr . g$12708$1XjQw)
        (car . g$12707$1XjQw)
        (boolean? . g$12706$1XjQw)
        (boolean=? . g$6748$1XjQw)
        (atan . g$12705$1XjQw)
        (assertion-violation . g$12704$1XjQw)
        (asin . g$12703$1XjQw)
        (apply . g$12702$1XjQw)
        (append . g$12701$1XjQw)
        (angle . g$12700$1XjQw)
        (acos . g$12699$1XjQw)
        (abs . g$12698$1XjQw)
        (/ . g$12697$1XjQw)
        (* . g$12696$1XjQw)
        (- . g$12695$1XjQw)
        (+ . g$12694$1XjQw)
        (>= . g$12693$1XjQw)
        (> . g$12692$1XjQw)
        (= . g$12691$1XjQw)
        (<= . g$12690$1XjQw)
        (< . g$12689$1XjQw)
        (unquote-splicing . g$12608$1XjQw)
        (unquote . g$12607$1XjQw)
        (_ . g$12606$1XjQw)
        (else . g$12605$1XjQw)
        (=> . g$12604$1XjQw)
        (... . g$12603$1XjQw)
        (assert . g$12602$1XjQw)
        (or . g$12598$1XjQw)
        (and . g$12597$1XjQw)
        (cond . g$12595$1XjQw)
        (let* . g$12594$1XjQw)
        (let . g$12593$1XjQw)
        (identifier-syntax . g$12592$1XjQw)
        (quasiquote . g$12589$1XjQw)
        (syntax-rules . g$12588$1XjQw)
        (let-values . g$12584$1XjQw)
        (let*-values . g$12583$1XjQw)
        (case . g$12579$1XjQw)
        (if . g$12575$1XjQw)
        (letrec* . g$12574$1XjQw)
        (letrec . g$12573$1XjQw)
        (lambda . g$12570$1XjQw)
        (quote . g$12567$1XjQw)
        (letrec-syntax . g$12565$1XjQw)
        (let-syntax . g$12564$1XjQw)
        (set! . g$12563$1XjQw)
        (begin . g$12559$1XjQw)
        (define-syntax . g$12557$1XjQw)
        (define . g$12556$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13183$1XjQw
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6567$1XjQw)
        (remv . g$6568$1XjQw)
        (remp . g$6548$1XjQw)
        (remq . g$6569$1XjQw)
        (partition . g$6547$1XjQw)
        (memv . g$6555$1XjQw)
        (memq . g$6554$1XjQw)
        (memp . g$6557$1XjQw)
        (member . g$6556$1XjQw)
        (exists . g$6561$1XjQw)
        (for-all . g$6560$1XjQw)
        (fold-right . g$6566$1XjQw)
        (fold-left . g$6565$1XjQw)
        (find . g$6546$1XjQw)
        (filter . g$6549$1XjQw)
        (cons* . g$6564$1XjQw)
        (assv . g$6551$1XjQw)
        (assq . g$6550$1XjQw)
        (assp . g$6553$1XjQw)
        (assoc . g$6552$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13184$1XjQw
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$8074$1XjQw)
        (call-with-input-file . g$8073$1XjQw)
        (write-char . g$13020$1XjQw)
        (write . g$13019$1XjQw)
        (with-output-to-file . g$8072$1XjQw)
        (with-input-from-file . g$8071$1XjQw)
        (read-char . g$13018$1XjQw)
        (read . g$13017$1XjQw)
        (peek-char . g$13016$1XjQw)
        (open-output-file . g$13015$1XjQw)
        (open-input-file . g$13014$1XjQw)
        (newline . g$13013$1XjQw)
        (display . g$13012$1XjQw)
        (close-output-port . g$13011$1XjQw)
        (close-input-port . g$13010$1XjQw)
        (eof-object? . g$13009$1XjQw)
        (eof-object . g$13008$1XjQw)
        (current-error-port . g$13007$1XjQw)
        (current-output-port . g$13006$1XjQw)
        (current-input-port . g$13005$1XjQw)
        (output-port? . g$13004$1XjQw)
        (input-port? . g$13003$1XjQw)
        (make-i/o-write-error . g$7903$1XjQw)
        (make-i/o-read-error . g$7889$1XjQw)
        (make-i/o-port-error . g$8008$1XjQw)
        (make-i/o-invalid-position-error . g$7918$1XjQw)
        (make-i/o-filename-error . g$7935$1XjQw)
        (make-i/o-file-protection-error . g$7951$1XjQw)
        (make-i/o-file-is-read-only-error . g$7965$1XjQw)
        (make-i/o-file-does-not-exist-error . g$7993$1XjQw)
        (make-i/o-file-already-exists-error . g$7979$1XjQw)
        (make-i/o-error . g$7875$1XjQw)
        (i/o-write-error? . g$7904$1XjQw)
        (i/o-read-error? . g$7890$1XjQw)
        (i/o-port-error? . g$8010$1XjQw)
        (i/o-invalid-position-error? . g$7920$1XjQw)
        (i/o-error-position . g$7921$1XjQw)
        (i/o-filename-error? . g$7937$1XjQw)
        (i/o-file-protection-error? . g$7952$1XjQw)
        (i/o-file-is-read-only-error? . g$7966$1XjQw)
        (i/o-file-does-not-exist-error? . g$7994$1XjQw)
        (i/o-file-already-exists-error? . g$7980$1XjQw)
        (i/o-error? . g$7876$1XjQw)
        (i/o-error-port . g$8011$1XjQw)
        (i/o-error-filename . g$7938$1XjQw)
        (&i/o-port . g$12656$1XjQw)
        (&i/o-file-does-not-exist . g$12655$1XjQw)
        (&i/o-file-already-exists . g$12654$1XjQw)
        (&i/o-file-is-read-only . g$12653$1XjQw)
        (&i/o-file-protection . g$12652$1XjQw)
        (&i/o-filename . g$12651$1XjQw)
        (&i/o-invalid-position . g$12650$1XjQw)
        (&i/o-write . g$12649$1XjQw)
        (&i/o-read . g$12648$1XjQw)
        (&i/o . g$12647$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13185$1XjQw
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$12963$1XjQw)
        (utf32->string . g$12927$1XjQw)
        (utf16->string . g$12926$1XjQw)
        (utf8->string . g$12925$1XjQw)
        (uint-list->bytevector . g$12924$1XjQw)
        (u8-list->bytevector . g$12923$1XjQw)
        (string->utf8 . g$12922$1XjQw)
        (string->utf32 . g$12921$1XjQw)
        (string->utf16 . g$12920$1XjQw)
        (sint-list->bytevector . g$12919$1XjQw)
        (native-endianness . g$7238$1XjQw)
        (bytevector? . g$12918$1XjQw)
        (bytevector=? . g$12917$1XjQw)
        (bytevector-uint-set! . g$12916$1XjQw)
        (bytevector-uint-ref . g$12915$1XjQw)
        (bytevector-u8-set! . g$12914$1XjQw)
        (bytevector-u8-ref . g$12913$1XjQw)
        (bytevector-u64-set! . g$7259$1XjQw)
        (bytevector-u64-ref . g$7255$1XjQw)
        (bytevector-u64-native-set! . g$7261$1XjQw)
        (bytevector-u64-native-ref . g$7257$1XjQw)
        (bytevector-u32-set! . g$7251$1XjQw)
        (bytevector-u32-ref . g$7247$1XjQw)
        (bytevector-u32-native-set! . g$7253$1XjQw)
        (bytevector-u32-native-ref . g$7249$1XjQw)
        (bytevector-u16-set! . g$7243$1XjQw)
        (bytevector-u16-ref . g$7239$1XjQw)
        (bytevector-u16-native-set! . g$7245$1XjQw)
        (bytevector-u16-native-ref . g$7241$1XjQw)
        (bytevector-sint-set! . g$12912$1XjQw)
        (bytevector-sint-ref . g$12911$1XjQw)
        (bytevector-s8-set! . g$12910$1XjQw)
        (bytevector-s8-ref . g$12909$1XjQw)
        (bytevector-s64-set! . g$7260$1XjQw)
        (bytevector-s64-ref . g$7256$1XjQw)
        (bytevector-s64-native-set! . g$7262$1XjQw)
        (bytevector-s64-native-ref . g$7258$1XjQw)
        (bytevector-s32-set! . g$7252$1XjQw)
        (bytevector-s32-ref . g$7248$1XjQw)
        (bytevector-s32-native-set! . g$7254$1XjQw)
        (bytevector-s32-native-ref . g$7250$1XjQw)
        (bytevector-s16-set! . g$7244$1XjQw)
        (bytevector-s16-ref . g$7240$1XjQw)
        (bytevector-s16-native-set! . g$7246$1XjQw)
        (bytevector-s16-native-ref . g$7242$1XjQw)
        (bytevector-length . g$12908$1XjQw)
        (bytevector-ieee-single-set! . g$12907$1XjQw)
        (bytevector-ieee-single-ref . g$12906$1XjQw)
        (bytevector-ieee-single-native-set! . g$7265$1XjQw)
        (bytevector-ieee-single-native-ref . g$7263$1XjQw)
        (bytevector-ieee-double-set! . g$12905$1XjQw)
        (bytevector-ieee-double-ref . g$12904$1XjQw)
        (bytevector-ieee-double-native-set! . g$7266$1XjQw)
        (bytevector-ieee-double-native-ref . g$7264$1XjQw)
        (bytevector-fill! . g$12903$1XjQw)
        (bytevector-copy! . g$12902$1XjQw)
        (bytevector-copy . g$12901$1XjQw)
        (bytevector->uint-list . g$12900$1XjQw)
        (bytevector->u8-list . g$12899$1XjQw)
        (bytevector->sint-list . g$12898$1XjQw)
        (endianness . g$12601$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13186$1XjQw
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13070$1XjQw)
        (string-titlecase . g$13069$1XjQw)
        (string-normalize-nfkd . g$13068$1XjQw)
        (string-normalize-nfkc . g$13067$1XjQw)
        (string-normalize-nfd . g$13066$1XjQw)
        (string-normalize-nfc . g$13065$1XjQw)
        (string-foldcase . g$13064$1XjQw)
        (string-downcase . g$13063$1XjQw)
        (string-ci>? . g$7657$1XjQw)
        (string-ci>=? . g$7659$1XjQw)
        (string-ci=? . g$7655$1XjQw)
        (string-ci<? . g$7656$1XjQw)
        (string-ci<=? . g$7658$1XjQw)
        (char-whitespace? . g$13062$1XjQw)
        (char-upper-case? . g$13061$1XjQw)
        (char-title-case? . g$13060$1XjQw)
        (char-numeric? . g$13059$1XjQw)
        (char-lower-case? . g$13058$1XjQw)
        (char-general-category . g$13057$1XjQw)
        (char-upcase . g$13056$1XjQw)
        (char-titlecase . g$13055$1XjQw)
        (char-foldcase . g$13054$1XjQw)
        (char-downcase . g$13053$1XjQw)
        (char-ci>? . g$7696$1XjQw)
        (char-ci>=? . g$7698$1XjQw)
        (char-ci=? . g$7694$1XjQw)
        (char-ci<? . g$7695$1XjQw)
        (char-ci<=? . g$7697$1XjQw)
        (char-alphabetic? . g$13052$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13187$1XjQw
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$12935$1XjQw)
        (raise-continuable . g$12934$1XjQw)
        (raise . g$12933$1XjQw)
        (guard . g$12616$1XjQw)
        (else . g$12605$1XjQw)
        (=> . g$12604$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13188$1XjQw
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7758$1XjQw)
        (bitwise-reverse-bit-field . g$12816$1XjQw)
        (bitwise-length . g$12815$1XjQw)
        (bitwise-if . g$7752$1XjQw)
        (bitwise-first-bit-set . g$12814$1XjQw)
        (bitwise-copy-bit-field . g$7755$1XjQw)
        (bitwise-copy-bit . g$7753$1XjQw)
        (bitwise-bit-set? . g$12813$1XjQw)
        (bitwise-bit-field . g$12812$1XjQw)
        (bitwise-bit-count . g$12811$1XjQw)
        (bitwise-xor . g$12810$1XjQw)
        (bitwise-ior . g$12809$1XjQw)
        (bitwise-and . g$12808$1XjQw)
        (bitwise-not . g$12807$1XjQw)
        (bitwise-arithmetic-shift-right . g$7757$1XjQw)
        (bitwise-arithmetic-shift-left . g$7756$1XjQw)
        (bitwise-arithmetic-shift . g$12806$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13189$1XjQw
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$12851$1XjQw)
        (fxxor . g$12850$1XjQw)
        (fxrotate-bit-field . g$7793$1XjQw)
        (fxreverse-bit-field . g$12849$1XjQw)
        (fxpositive? . g$12848$1XjQw)
        (fxodd? . g$12847$1XjQw)
        (fxnot . g$12846$1XjQw)
        (fxnegative? . g$12845$1XjQw)
        (fxmod0 . g$12844$1XjQw)
        (fxmod . g$12843$1XjQw)
        (fxmin . g$12842$1XjQw)
        (fxmax . g$12841$1XjQw)
        (fxlength . g$12840$1XjQw)
        (fxior . g$12839$1XjQw)
        (fxif . g$7787$1XjQw)
        (fxfirst-bit-set . g$12838$1XjQw)
        (fxeven? . g$12837$1XjQw)
        (fxdiv0-and-mod0 . g$12836$1XjQw)
        (fxdiv0 . g$12835$1XjQw)
        (fxdiv-and-mod . g$12834$1XjQw)
        (fxdiv . g$12833$1XjQw)
        (fxcopy-bit-field . g$7790$1XjQw)
        (fxcopy-bit . g$7788$1XjQw)
        (fxbit-set? . g$12832$1XjQw)
        (fxbit-field . g$7789$1XjQw)
        (fxbit-count . g$12831$1XjQw)
        (fxarithmetic-shift-right . g$7792$1XjQw)
        (fxarithmetic-shift-left . g$7791$1XjQw)
        (fxarithmetic-shift . g$12830$1XjQw)
        (fxand . g$12829$1XjQw)
        (fx>? . g$12828$1XjQw)
        (fx>=? . g$12827$1XjQw)
        (fx=? . g$12826$1XjQw)
        (fx<? . g$12825$1XjQw)
        (fx<=? . g$12824$1XjQw)
        (fx-/carry . g$7785$1XjQw)
        (fx- . g$12823$1XjQw)
        (fx+/carry . g$7786$1XjQw)
        (fx+ . g$12822$1XjQw)
        (fx*/carry . g$7784$1XjQw)
        (fx* . g$12821$1XjQw)
        (greatest-fixnum . g$12820$1XjQw)
        (least-fixnum . g$12819$1XjQw)
        (fixnum-width . g$12818$1XjQw)
        (fixnum? . g$12817$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13190$1XjQw
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7861$1XjQw)
        (no-infinities-violation? . g$7847$1XjQw)
        (make-no-nans-violation . g$7860$1XjQw)
        (make-no-infinities-violation . g$7846$1XjQw)
        (real->flonum . g$12897$1XjQw)
        (flzero? . g$12896$1XjQw)
        (fltruncate . g$12895$1XjQw)
        (fltan . g$12894$1XjQw)
        (flsqrt . g$12893$1XjQw)
        (flsin . g$12892$1XjQw)
        (flround . g$12891$1XjQw)
        (flpositive? . g$12890$1XjQw)
        (flonum? . g$12889$1XjQw)
        (flodd? . g$12888$1XjQw)
        (flnumerator . g$12887$1XjQw)
        (flnegative? . g$12886$1XjQw)
        (flnan? . g$12885$1XjQw)
        (flmod0 . g$12884$1XjQw)
        (flmod . g$12883$1XjQw)
        (flmin . g$12882$1XjQw)
        (flmax . g$12881$1XjQw)
        (fllog . g$12880$1XjQw)
        (flinteger? . g$12879$1XjQw)
        (flinfinite? . g$12878$1XjQw)
        (flfloor . g$12877$1XjQw)
        (flfinite? . g$12876$1XjQw)
        (flexpt . g$12875$1XjQw)
        (flexp . g$12874$1XjQw)
        (fleven? . g$12873$1XjQw)
        (fldiv0-and-mod0 . g$12872$1XjQw)
        (fldiv0 . g$12871$1XjQw)
        (fldiv-and-mod . g$12870$1XjQw)
        (fldiv . g$12869$1XjQw)
        (fldenominator . g$12868$1XjQw)
        (flcos . g$12867$1XjQw)
        (flceiling . g$12866$1XjQw)
        (flatan . g$12865$1XjQw)
        (flasin . g$12864$1XjQw)
        (flacos . g$12863$1XjQw)
        (flabs . g$12862$1XjQw)
        (fl>? . g$12861$1XjQw)
        (fl>=? . g$12860$1XjQw)
        (fl=? . g$12859$1XjQw)
        (fl<? . g$12858$1XjQw)
        (fl<=? . g$12857$1XjQw)
        (fl/ . g$12856$1XjQw)
        (fl- . g$12855$1XjQw)
        (fl+ . g$12854$1XjQw)
        (fl* . g$12853$1XjQw)
        (fixnum->flonum . g$12852$1XjQw)
        (&no-nans . g$12660$1XjQw)
        (&no-infinities . g$12659$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13191$1XjQw
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$13032$1XjQw)
        (string-ci-hash . g$13031$1XjQw)
        (string-hash . g$13030$1XjQw)
        (equal-hash . g$13029$1XjQw)
        (hashtable-equivalence-function . g$13028$1XjQw)
        (make-hashtable . g$13027$1XjQw)
        (hashtable-hash-function . g$13026$1XjQw)
        (make-eqv-hashtable . g$7199$1XjQw)
        (make-eq-hashtable . g$7198$1XjQw)
        (hashtable? . g$13025$1XjQw)
        (hashtable-update! . g$7205$1XjQw)
        (hashtable-size . g$7200$1XjQw)
        (hashtable-set! . g$7202$1XjQw)
        (hashtable-ref . g$7201$1XjQw)
        (hashtable-mutable? . g$13024$1XjQw)
        (hashtable-keys . g$13023$1XjQw)
        (hashtable-entries . g$13022$1XjQw)
        (hashtable-delete! . g$7203$1XjQw)
        (hashtable-copy . g$13021$1XjQw)
        (hashtable-contains? . g$7204$1XjQw)
        (hashtable-clear! . g$7206$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13192$1XjQw
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$13009$1XjQw)
        (eof-object . g$13008$1XjQw)
        (current-error-port . g$13007$1XjQw)
        (current-output-port . g$13006$1XjQw)
        (current-input-port . g$13005$1XjQw)
        (output-port? . g$13004$1XjQw)
        (input-port? . g$13003$1XjQw)
        (utf-8-codec . g$13002$1XjQw)
        (utf-16-codec . g$13001$1XjQw)
        (transcoder-error-handling-mode . g$13000$1XjQw)
        (transcoder-eol-style . g$12999$1XjQw)
        (transcoder-codec . g$12998$1XjQw)
        (transcoded-port . g$12997$1XjQw)
        (textual-port? . g$12996$1XjQw)
        (string->bytevector . g$12995$1XjQw)
        (standard-output-port . g$12994$1XjQw)
        (standard-input-port . g$12993$1XjQw)
        (standard-error-port . g$12992$1XjQw)
        (set-port-position! . g$12991$1XjQw)
        (put-u8 . g$12990$1XjQw)
        (put-string . g$12989$1XjQw)
        (put-datum . g$12988$1XjQw)
        (put-char . g$12987$1XjQw)
        (put-bytevector . g$12986$1XjQw)
        (port? . g$8047$1XjQw)
        (port-transcoder . g$12985$1XjQw)
        (port-position . g$12984$1XjQw)
        (port-has-set-port-position!? . g$12983$1XjQw)
        (port-has-port-position? . g$12982$1XjQw)
        (port-eof? . g$12981$1XjQw)
        (output-port-buffer-mode . g$12980$1XjQw)
        (open-string-output-port . g$8046$1XjQw)
        (open-string-input-port . g$12979$1XjQw)
        (open-file-output-port . g$12978$1XjQw)
        (open-file-input/output-port . g$12977$1XjQw)
        (open-file-input-port . g$12976$1XjQw)
        (open-bytevector-output-port . g$12975$1XjQw)
        (open-bytevector-input-port . g$12974$1XjQw)
        (native-transcoder . g$12973$1XjQw)
        (native-eol-style . g$12972$1XjQw)
        (make-transcoder . g$12971$1XjQw)
        (latin-1-codec . g$12970$1XjQw)
        (make-i/o-write-error . g$7903$1XjQw)
        (make-i/o-read-error . g$7889$1XjQw)
        (make-i/o-port-error . g$8008$1XjQw)
        (make-i/o-invalid-position-error . g$7918$1XjQw)
        (make-i/o-filename-error . g$7935$1XjQw)
        (make-i/o-file-protection-error . g$7951$1XjQw)
        (make-i/o-file-is-read-only-error . g$7965$1XjQw)
        (make-i/o-file-does-not-exist-error . g$7993$1XjQw)
        (make-i/o-file-already-exists-error . g$7979$1XjQw)
        (make-i/o-error . g$7875$1XjQw)
        (make-i/o-encoding-error . g$8039$1XjQw)
        (make-i/o-decoding-error . g$8024$1XjQw)
        (make-custom-textual-output-port . g$12969$1XjQw)
        (make-custom-textual-input/output-port . g$12968$1XjQw)
        (make-custom-textual-input-port . g$12967$1XjQw)
        (make-custom-binary-output-port . g$12966$1XjQw)
        (make-custom-binary-input/output-port . g$12965$1XjQw)
        (make-custom-binary-input-port . g$12964$1XjQw)
        (lookahead-u8 . g$12962$1XjQw)
        (lookahead-char . g$12961$1XjQw)
        (i/o-write-error? . g$7904$1XjQw)
        (i/o-read-error? . g$7890$1XjQw)
        (i/o-port-error? . g$8010$1XjQw)
        (i/o-invalid-position-error? . g$7920$1XjQw)
        (i/o-error-position . g$7921$1XjQw)
        (i/o-filename-error? . g$7937$1XjQw)
        (i/o-file-protection-error? . g$7952$1XjQw)
        (i/o-file-is-read-only-error? . g$7966$1XjQw)
        (i/o-file-does-not-exist-error? . g$7994$1XjQw)
        (i/o-file-already-exists-error? . g$7980$1XjQw)
        (i/o-error? . g$7876$1XjQw)
        (i/o-error-port . g$8011$1XjQw)
        (i/o-error-filename . g$7938$1XjQw)
        (i/o-encoding-error? . g$8041$1XjQw)
        (i/o-encoding-error-char . g$8042$1XjQw)
        (i/o-decoding-error? . g$8025$1XjQw)
        (get-u8 . g$12960$1XjQw)
        (get-string-n! . g$12959$1XjQw)
        (get-string-n . g$12958$1XjQw)
        (get-string-all . g$12957$1XjQw)
        (get-line . g$12956$1XjQw)
        (get-datum . g$12955$1XjQw)
        (get-char . g$12954$1XjQw)
        (get-bytevector-some . g$12953$1XjQw)
        (get-bytevector-n! . g$12952$1XjQw)
        (get-bytevector-n . g$12951$1XjQw)
        (get-bytevector-all . g$12950$1XjQw)
        (flush-output-port . g$12949$1XjQw)
        (close-port . g$12948$1XjQw)
        (call-with-string-output-port . g$8048$1XjQw)
        (call-with-port . g$12947$1XjQw)
        (call-with-bytevector-output-port . g$12946$1XjQw)
        (bytevector->string . g$12945$1XjQw)
        (buffer-mode? . g$12944$1XjQw)
        (binary-port? . g$12943$1XjQw)
        (&i/o-encoding . g$12658$1XjQw)
        (&i/o-decoding . g$12657$1XjQw)
        (&i/o-port . g$12656$1XjQw)
        (&i/o-file-does-not-exist . g$12655$1XjQw)
        (&i/o-file-already-exists . g$12654$1XjQw)
        (&i/o-file-is-read-only . g$12653$1XjQw)
        (&i/o-file-protection . g$12652$1XjQw)
        (&i/o-filename . g$12651$1XjQw)
        (&i/o-invalid-position . g$12650$1XjQw)
        (&i/o-write . g$12649$1XjQw)
        (&i/o-read . g$12648$1XjQw)
        (&i/o . g$12647$1XjQw)
        (error-handling-mode . g$12620$1XjQw)
        (file-options . g$12619$1XjQw)
        (buffer-mode . g$12618$1XjQw)
        (eol-style . g$12617$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13193$1XjQw
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$8132$1XjQw)
        (enum-set=? . g$8139$1XjQw)
        (enum-set-universe . g$8133$1XjQw)
        (enum-set-union . g$8140$1XjQw)
        (enum-set-subset? . g$8138$1XjQw)
        (enum-set-projection . g$8144$1XjQw)
        (enum-set-member? . g$8137$1XjQw)
        (enum-set-intersection . g$8141$1XjQw)
        (enum-set-indexer . g$8134$1XjQw)
        (enum-set-difference . g$8142$1XjQw)
        (enum-set-constructor . g$8135$1XjQw)
        (enum-set-complement . g$8143$1XjQw)
        (enum-set->list . g$8136$1XjQw)
        (define-enumeration . g$12631$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13194$1XjQw
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$7486$1XjQw)
        (warning? . g$7397$1XjQw)
        (violation? . g$7439$1XjQw)
        (undefined-violation? . g$7563$1XjQw)
        (syntax-violation? . g$7547$1XjQw)
        (syntax-violation-subform . g$7549$1XjQw)
        (syntax-violation-form . g$7548$1XjQw)
        (syntax-violation . g$9545$1XjQw)
        (simple-conditions . g$12932$1XjQw)
        (serious-condition? . g$7411$1XjQw)
        (non-continuable-violation? . g$7501$1XjQw)
        (message-condition? . g$7382$1XjQw)
        (make-who-condition . g$7484$1XjQw)
        (make-warning . g$7396$1XjQw)
        (make-violation . g$7438$1XjQw)
        (make-undefined-violation . g$7562$1XjQw)
        (make-syntax-violation . g$7544$1XjQw)
        (make-serious-condition . g$7410$1XjQw)
        (make-non-continuable-violation . g$7500$1XjQw)
        (make-message-condition . g$7380$1XjQw)
        (make-lexical-violation . g$7528$1XjQw)
        (make-irritants-condition . g$7467$1XjQw)
        (make-implementation-restriction-violation . g$7514$1XjQw)
        (make-error . g$7424$1XjQw)
        (make-assertion-violation . g$7452$1XjQw)
        (lexical-violation? . g$7529$1XjQw)
        (irritants-condition? . g$7469$1XjQw)
        (implementation-restriction-violation? . g$7515$1XjQw)
        (error? . g$7425$1XjQw)
        (condition-who . g$7487$1XjQw)
        (condition-predicate . g$12931$1XjQw)
        (condition-message . g$7383$1XjQw)
        (condition-irritants . g$7470$1XjQw)
        (condition-accessor . g$12930$1XjQw)
        (condition . g$12929$1XjQw)
        (assertion-violation? . g$7453$1XjQw)
        (condition? . g$12928$1XjQw)
        (&non-continuable . g$12646$1XjQw)
        (&undefined . g$12645$1XjQw)
        (&syntax . g$12644$1XjQw)
        (&lexical . g$12643$1XjQw)
        (&implementation-restriction . g$12642$1XjQw)
        (&who . g$12641$1XjQw)
        (&irritants . g$12640$1XjQw)
        (&assertion . g$12639$1XjQw)
        (&violation . g$12638$1XjQw)
        (&error . g$12637$1XjQw)
        (&serious . g$12636$1XjQw)
        (&warning . g$12635$1XjQw)
        (&message . g$12634$1XjQw)
        (&condition . g$12633$1XjQw)
        (define-condition-type . g$12632$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13195$1XjQw
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$13044$1XjQw)
        (record-type-uid . g$13043$1XjQw)
        (record-type-sealed? . g$13042$1XjQw)
        (record-type-parent . g$13041$1XjQw)
        (record-type-opaque? . g$13040$1XjQw)
        (record-type-name . g$13039$1XjQw)
        (record-type-generative? . g$13038$1XjQw)
        (record-type-field-names . g$13037$1XjQw)
        (record-rtd . g$13036$1XjQw)
        (record-field-mutable? . g$13035$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13196$1XjQw
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$13051$1XjQw)
        (record-predicate . g$13050$1XjQw)
        (record-mutator . g$13049$1XjQw)
        (record-constructor . g$13048$1XjQw)
        (record-accessor . g$13047$1XjQw)
        (make-record-type-descriptor . g$13046$1XjQw)
        (make-record-constructor-descriptor . g$13045$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13197$1XjQw
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$12630$1XjQw)
        (parent-rtd . g$12629$1XjQw)
        (nongenerative . g$12628$1XjQw)
        (opaque . g$12627$1XjQw)
        (sealed . g$12626$1XjQw)
        (protocol . g$12625$1XjQw)
        (parent . g$12624$1XjQw)
        (immutable . g$12623$1XjQw)
        (mutable . g$12622$1XjQw)
        (fields . g$12621$1XjQw)
        (record-constructor-descriptor . g$12582$1XjQw)
        (record-type-descriptor . g$12581$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7831$1XjQw
      'g$13198$1XjQw
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$9418$1XjQw)
        (&no-nans-rcd . g$13162$1XjQw)
        (&no-nans-rtd . g$13161$1XjQw)
        (&no-infinities-rcd . g$13160$1XjQw)
        (&no-infinities-rtd . g$13159$1XjQw)
        (&i/o-encoding-rcd . g$13158$1XjQw)
        (&i/o-encoding-rtd . g$13157$1XjQw)
        (&i/o-decoding-rcd . g$13156$1XjQw)
        (&i/o-decoding-rtd . g$13155$1XjQw)
        (&i/o-port-rcd . g$13154$1XjQw)
        (&i/o-port-rtd . g$13153$1XjQw)
        (&i/o-file-does-not-exist-rcd . g$13152$1XjQw)
        (&i/o-file-does-not-exist-rtd . g$13151$1XjQw)
        (&i/o-file-already-exists-rcd . g$13150$1XjQw)
        (&i/o-file-already-exists-rtd . g$13149$1XjQw)
        (&i/o-file-is-read-only-rcd . g$13148$1XjQw)
        (&i/o-file-is-read-only-rtd . g$13147$1XjQw)
        (&i/o-file-protection-rcd . g$13146$1XjQw)
        (&i/o-file-protection-rtd . g$13145$1XjQw)
        (&i/o-filename-rcd . g$13144$1XjQw)
        (&i/o-filename-rtd . g$13143$1XjQw)
        (&i/o-invalid-position-rcd . g$13142$1XjQw)
        (&i/o-invalid-position-rtd . g$13141$1XjQw)
        (&i/o-write-rcd . g$13140$1XjQw)
        (&i/o-write-rtd . g$13139$1XjQw)
        (&i/o-read-rcd . g$13138$1XjQw)
        (&i/o-read-rtd . g$13137$1XjQw)
        (&i/o-rcd . g$13136$1XjQw)
        (&i/o-rtd . g$13135$1XjQw)
        (&undefined-rcd . g$13134$1XjQw)
        (&undefined-rtd . g$13133$1XjQw)
        (&syntax-rcd . g$13132$1XjQw)
        (&syntax-rtd . g$13131$1XjQw)
        (&lexical-rcd . g$13130$1XjQw)
        (&lexical-rtd . g$13129$1XjQw)
        (&implementation-restriction-rcd . g$13128$1XjQw)
        (&implementation-restriction-rtd . g$13127$1XjQw)
        (&non-continuable-rcd . g$13126$1XjQw)
        (&non-continuable-rtd . g$13125$1XjQw)
        (&who-rcd . g$13124$1XjQw)
        (&who-rtd . g$13123$1XjQw)
        (&irritants-rcd . g$13122$1XjQw)
        (&irritants-rtd . g$13121$1XjQw)
        (&assertion-rcd . g$13120$1XjQw)
        (&assertion-rtd . g$13119$1XjQw)
        (&violation-rcd . g$13118$1XjQw)
        (&violation-rtd . g$13117$1XjQw)
        (&error-rcd . g$13116$1XjQw)
        (&error-rtd . g$13115$1XjQw)
        (&serious-rcd . g$13114$1XjQw)
        (&serious-rtd . g$13113$1XjQw)
        (&warning-rcd . g$13112$1XjQw)
        (&warning-rtd . g$13111$1XjQw)
        (&message-rcd . g$13110$1XjQw)
        (&message-rtd . g$13109$1XjQw)
        (&condition-rcd . g$13108$1XjQw)
        (&condition-rtd . g$13107$1XjQw)
        (library-letrec* . g$13106$1XjQw)
        (annotation-stripped . g$13105$1XjQw)
        (annotation-source . g$13104$1XjQw)
        (annotation-expression . g$13103$1XjQw)
        (annotation? . g$13102$1XjQw)
        (read-annotated . g$13101$1XjQw)
        (tanh . g$13100$1XjQw)
        (cosh . g$13099$1XjQw)
        (sinh . g$13098$1XjQw)
        (make-guid . g$13097$1XjQw)
        (unspecified? . g$13096$1XjQw)
        (make-trace . g$13095$1XjQw)
        (make-list . g$6545$1XjQw)
        (last-pair . g$6544$1XjQw)
        (load-r5rs . g$13094$1XjQw)
        (license . g$13093$1XjQw)
        (stacktrace . g$13092$1XjQw)
        (ironscheme-build . g$12524$1XjQw)
        (define-clr-class-internal . g$13091$1XjQw)
        (clr-field-set!-internal . g$13090$1XjQw)
        (clr-field-get-internal . g$13089$1XjQw)
        (clr-cast-internal . g$13088$1XjQw)
        (clr-call-internal . g$13087$1XjQw)
        (clr-new-internal . g$13086$1XjQw)
        (clr-new-array-internal . g$13085$1XjQw)
        (clr-is-internal . g$13084$1XjQw)
        (clr-reference-internal . g$13083$1XjQw)
        (clr-using-internal . g$13082$1XjQw)
        (clr-clear-usings-internal . g$13081$1XjQw)
        (syntax-error . g$9542$1XjQw)
        (syntax-dispatch . g$9413$1XjQw)
        (compile-core . g$13080$1XjQw)
        (eval-core . g$13079$1XjQw)
        (set-symbol-value! . g$13078$1XjQw)
        (symbol-value . g$13077$1XjQw)
        (ungensym . g$13076$1XjQw)
        (gensym . g$13075$1XjQw)
        (void . g$13074$1XjQw)
        (load-serialized-library . g$13073$1XjQw)
        (serialize-library . g$13072$1XjQw)
        (compile-system-libraries . g$12526$1XjQw)
        (compile->closure . g$12528$1XjQw)
        (compile . g$12527$1XjQw)
        (load . g$12523$1XjQw)
        (interaction-environment . g$9551$1XjQw)
        (char-ready? . g$13071$1XjQw)
        (string-upcase . g$13070$1XjQw)
        (string-titlecase . g$13069$1XjQw)
        (string-normalize-nfkd . g$13068$1XjQw)
        (string-normalize-nfkc . g$13067$1XjQw)
        (string-normalize-nfd . g$13066$1XjQw)
        (string-normalize-nfc . g$13065$1XjQw)
        (string-foldcase . g$13064$1XjQw)
        (string-downcase . g$13063$1XjQw)
        (string-ci>? . g$7657$1XjQw)
        (string-ci>=? . g$7659$1XjQw)
        (string-ci=? . g$7655$1XjQw)
        (string-ci<? . g$7656$1XjQw)
        (string-ci<=? . g$7658$1XjQw)
        (char-whitespace? . g$13062$1XjQw)
        (char-upper-case? . g$13061$1XjQw)
        (char-title-case? . g$13060$1XjQw)
        (char-numeric? . g$13059$1XjQw)
        (char-lower-case? . g$13058$1XjQw)
        (char-general-category . g$13057$1XjQw)
        (char-upcase . g$13056$1XjQw)
        (char-titlecase . g$13055$1XjQw)
        (char-foldcase . g$13054$1XjQw)
        (char-downcase . g$13053$1XjQw)
        (char-ci>? . g$7696$1XjQw)
        (char-ci>=? . g$7698$1XjQw)
        (char-ci=? . g$7694$1XjQw)
        (char-ci<? . g$7695$1XjQw)
        (char-ci<=? . g$7697$1XjQw)
        (char-alphabetic? . g$13052$1XjQw)
        (variable-transformer-procedure . g$9150$1XjQw)
        (variable-transformer? . g$9149$1XjQw)
        (make-variable-transformer . g$9148$1XjQw)
        (identifier? . g$9546$1XjQw)
        (generate-temporaries . g$9535$1XjQw)
        (free-identifier=? . g$9536$1XjQw)
        (syntax->datum . g$9548$1XjQw)
        (datum->syntax . g$9547$1XjQw)
        (bound-identifier=? . g$9537$1XjQw)
        (record-type-descriptor? . g$13051$1XjQw)
        (record-predicate . g$13050$1XjQw)
        (record-mutator . g$13049$1XjQw)
        (record-constructor . g$13048$1XjQw)
        (record-accessor . g$13047$1XjQw)
        (make-record-type-descriptor . g$13046$1XjQw)
        (make-record-constructor-descriptor . g$13045$1XjQw)
        (record? . g$13044$1XjQw)
        (record-type-uid . g$13043$1XjQw)
        (record-type-sealed? . g$13042$1XjQw)
        (record-type-parent . g$13041$1XjQw)
        (record-type-opaque? . g$13040$1XjQw)
        (record-type-name . g$13039$1XjQw)
        (record-type-generative? . g$13038$1XjQw)
        (record-type-field-names . g$13037$1XjQw)
        (record-rtd . g$13036$1XjQw)
        (record-field-mutable? . g$13035$1XjQw)
        (delete-file . g$7232$1XjQw)
        (file-exists? . g$7231$1XjQw)
        (vector-sort! . g$13034$1XjQw)
        (vector-sort . g$13033$1XjQw)
        (list-sort . g$7595$1XjQw)
        (symbol-hash . g$13032$1XjQw)
        (string-ci-hash . g$13031$1XjQw)
        (string-hash . g$13030$1XjQw)
        (equal-hash . g$13029$1XjQw)
        (hashtable-equivalence-function . g$13028$1XjQw)
        (make-hashtable . g$13027$1XjQw)
        (hashtable-hash-function . g$13026$1XjQw)
        (make-eqv-hashtable . g$7199$1XjQw)
        (make-eq-hashtable . g$7198$1XjQw)
        (hashtable? . g$13025$1XjQw)
        (hashtable-update! . g$7205$1XjQw)
        (hashtable-size . g$7200$1XjQw)
        (hashtable-set! . g$7202$1XjQw)
        (hashtable-ref . g$7201$1XjQw)
        (hashtable-mutable? . g$13024$1XjQw)
        (hashtable-keys . g$13023$1XjQw)
        (hashtable-entries . g$13022$1XjQw)
        (hashtable-delete! . g$7203$1XjQw)
        (hashtable-copy . g$13021$1XjQw)
        (hashtable-contains? . g$7204$1XjQw)
        (hashtable-clear! . g$7206$1XjQw)
        (call-with-output-file . g$8074$1XjQw)
        (call-with-input-file . g$8073$1XjQw)
        (write-char . g$13020$1XjQw)
        (write . g$13019$1XjQw)
        (with-output-to-file . g$8072$1XjQw)
        (with-input-from-file . g$8071$1XjQw)
        (read-char . g$13018$1XjQw)
        (read . g$13017$1XjQw)
        (peek-char . g$13016$1XjQw)
        (open-output-file . g$13015$1XjQw)
        (open-input-file . g$13014$1XjQw)
        (newline . g$13013$1XjQw)
        (display . g$13012$1XjQw)
        (close-output-port . g$13011$1XjQw)
        (close-input-port . g$13010$1XjQw)
        (eof-object? . g$13009$1XjQw)
        (eof-object . g$13008$1XjQw)
        (current-error-port . g$13007$1XjQw)
        (current-output-port . g$13006$1XjQw)
        (current-input-port . g$13005$1XjQw)
        (output-port? . g$13004$1XjQw)
        (input-port? . g$13003$1XjQw)
        (utf-8-codec . g$13002$1XjQw)
        (utf-16-codec . g$13001$1XjQw)
        (transcoder-error-handling-mode . g$13000$1XjQw)
        (transcoder-eol-style . g$12999$1XjQw)
        (transcoder-codec . g$12998$1XjQw)
        (transcoded-port . g$12997$1XjQw)
        (textual-port? . g$12996$1XjQw)
        (string->bytevector . g$12995$1XjQw)
        (standard-output-port . g$12994$1XjQw)
        (standard-input-port . g$12993$1XjQw)
        (standard-error-port . g$12992$1XjQw)
        (set-port-position! . g$12991$1XjQw)
        (put-u8 . g$12990$1XjQw)
        (put-string . g$12989$1XjQw)
        (put-datum . g$12988$1XjQw)
        (put-char . g$12987$1XjQw)
        (put-bytevector . g$12986$1XjQw)
        (port? . g$8047$1XjQw)
        (port-transcoder . g$12985$1XjQw)
        (port-position . g$12984$1XjQw)
        (port-has-set-port-position!? . g$12983$1XjQw)
        (port-has-port-position? . g$12982$1XjQw)
        (port-eof? . g$12981$1XjQw)
        (output-port-buffer-mode . g$12980$1XjQw)
        (open-string-output-port . g$8046$1XjQw)
        (open-string-input-port . g$12979$1XjQw)
        (open-file-output-port . g$12978$1XjQw)
        (open-file-input/output-port . g$12977$1XjQw)
        (open-file-input-port . g$12976$1XjQw)
        (open-bytevector-output-port . g$12975$1XjQw)
        (open-bytevector-input-port . g$12974$1XjQw)
        (native-transcoder . g$12973$1XjQw)
        (native-eol-style . g$12972$1XjQw)
        (make-transcoder . g$12971$1XjQw)
        (latin-1-codec . g$12970$1XjQw)
        (make-i/o-write-error . g$7903$1XjQw)
        (make-i/o-read-error . g$7889$1XjQw)
        (make-i/o-port-error . g$8008$1XjQw)
        (make-i/o-invalid-position-error . g$7918$1XjQw)
        (make-i/o-filename-error . g$7935$1XjQw)
        (make-i/o-file-protection-error . g$7951$1XjQw)
        (make-i/o-file-is-read-only-error . g$7965$1XjQw)
        (make-i/o-file-does-not-exist-error . g$7993$1XjQw)
        (make-i/o-file-already-exists-error . g$7979$1XjQw)
        (make-i/o-error . g$7875$1XjQw)
        (make-i/o-encoding-error . g$8039$1XjQw)
        (make-i/o-decoding-error . g$8024$1XjQw)
        (make-custom-textual-output-port . g$12969$1XjQw)
        (make-custom-textual-input/output-port . g$12968$1XjQw)
        (make-custom-textual-input-port . g$12967$1XjQw)
        (make-custom-binary-output-port . g$12966$1XjQw)
        (make-custom-binary-input/output-port . g$12965$1XjQw)
        (make-custom-binary-input-port . g$12964$1XjQw)
        (make-bytevector . g$12963$1XjQw)
        (lookahead-u8 . g$12962$1XjQw)
        (lookahead-char . g$12961$1XjQw)
        (i/o-write-error? . g$7904$1XjQw)
        (i/o-read-error? . g$7890$1XjQw)
        (i/o-port-error? . g$8010$1XjQw)
        (i/o-invalid-position-error? . g$7920$1XjQw)
        (i/o-error-position . g$7921$1XjQw)
        (i/o-filename-error? . g$7937$1XjQw)
        (i/o-file-protection-error? . g$7952$1XjQw)
        (i/o-file-is-read-only-error? . g$7966$1XjQw)
        (i/o-file-does-not-exist-error? . g$7994$1XjQw)
        (i/o-file-already-exists-error? . g$7980$1XjQw)
        (i/o-error? . g$7876$1XjQw)
        (i/o-error-port . g$8011$1XjQw)
        (i/o-error-filename . g$7938$1XjQw)
        (i/o-encoding-error? . g$8041$1XjQw)
        (i/o-encoding-error-char . g$8042$1XjQw)
        (i/o-decoding-error? . g$8025$1XjQw)
        (get-u8 . g$12960$1XjQw)
        (get-string-n! . g$12959$1XjQw)
        (get-string-n . g$12958$1XjQw)
        (get-string-all . g$12957$1XjQw)
        (get-line . g$12956$1XjQw)
        (get-datum . g$12955$1XjQw)
        (get-char . g$12954$1XjQw)
        (get-bytevector-some . g$12953$1XjQw)
        (get-bytevector-n! . g$12952$1XjQw)
        (get-bytevector-n . g$12951$1XjQw)
        (get-bytevector-all . g$12950$1XjQw)
        (flush-output-port . g$12949$1XjQw)
        (close-port . g$12948$1XjQw)
        (call-with-string-output-port . g$8048$1XjQw)
        (call-with-port . g$12947$1XjQw)
        (call-with-bytevector-output-port . g$12946$1XjQw)
        (bytevector->string . g$12945$1XjQw)
        (buffer-mode? . g$12944$1XjQw)
        (binary-port? . g$12943$1XjQw)
        (scheme-report-environment . g$9526$1XjQw)
        (quotient . g$7575$1XjQw)
        (null-environment . g$9525$1XjQw)
        (remainder . g$7576$1XjQw)
        (modulo . g$7577$1XjQw)
        (inexact->exact . g$12942$1XjQw)
        (force . g$7579$1XjQw)
        (exact->inexact . g$12941$1XjQw)
        (exit . g$12940$1XjQw)
        (command-line . g$12520$1XjQw)
        (string-fill! . g$12939$1XjQw)
        (string-set! . g$12938$1XjQw)
        (set-cdr! . g$12937$1XjQw)
        (set-car! . g$12936$1XjQw)
        (remove . g$6567$1XjQw)
        (remv . g$6568$1XjQw)
        (remp . g$6548$1XjQw)
        (remq . g$6569$1XjQw)
        (partition . g$6547$1XjQw)
        (memv . g$6555$1XjQw)
        (memq . g$6554$1XjQw)
        (memp . g$6557$1XjQw)
        (member . g$6556$1XjQw)
        (exists . g$6561$1XjQw)
        (for-all . g$6560$1XjQw)
        (fold-right . g$6566$1XjQw)
        (fold-left . g$6565$1XjQw)
        (find . g$6546$1XjQw)
        (filter . g$6549$1XjQw)
        (cons* . g$6564$1XjQw)
        (assv . g$6551$1XjQw)
        (assq . g$6550$1XjQw)
        (assp . g$6553$1XjQw)
        (assoc . g$6552$1XjQw)
        (with-exception-handler . g$12935$1XjQw)
        (raise-continuable . g$12934$1XjQw)
        (raise . g$12933$1XjQw)
        (eval . g$9528$1XjQw)
        (environment . g$9524$1XjQw)
        (make-enumeration . g$8132$1XjQw)
        (enum-set=? . g$8139$1XjQw)
        (enum-set-universe . g$8133$1XjQw)
        (enum-set-union . g$8140$1XjQw)
        (enum-set-subset? . g$8138$1XjQw)
        (enum-set-projection . g$8144$1XjQw)
        (enum-set-member? . g$8137$1XjQw)
        (enum-set-intersection . g$8141$1XjQw)
        (enum-set-indexer . g$8134$1XjQw)
        (enum-set-difference . g$8142$1XjQw)
        (enum-set-constructor . g$8135$1XjQw)
        (enum-set-complement . g$8143$1XjQw)
        (enum-set->list . g$8136$1XjQw)
        (who-condition? . g$7486$1XjQw)
        (warning? . g$7397$1XjQw)
        (violation? . g$7439$1XjQw)
        (undefined-violation? . g$7563$1XjQw)
        (syntax-violation? . g$7547$1XjQw)
        (syntax-violation-subform . g$7549$1XjQw)
        (syntax-violation-form . g$7548$1XjQw)
        (syntax-violation . g$9545$1XjQw)
        (simple-conditions . g$12932$1XjQw)
        (serious-condition? . g$7411$1XjQw)
        (non-continuable-violation? . g$7501$1XjQw)
        (message-condition? . g$7382$1XjQw)
        (make-who-condition . g$7484$1XjQw)
        (make-warning . g$7396$1XjQw)
        (make-violation . g$7438$1XjQw)
        (make-undefined-violation . g$7562$1XjQw)
        (make-syntax-violation . g$7544$1XjQw)
        (make-serious-condition . g$7410$1XjQw)
        (make-non-continuable-violation . g$7500$1XjQw)
        (make-message-condition . g$7380$1XjQw)
        (make-lexical-violation . g$7528$1XjQw)
        (make-irritants-condition . g$7467$1XjQw)
        (make-implementation-restriction-violation . g$7514$1XjQw)
        (make-error . g$7424$1XjQw)
        (make-assertion-violation . g$7452$1XjQw)
        (lexical-violation? . g$7529$1XjQw)
        (irritants-condition? . g$7469$1XjQw)
        (implementation-restriction-violation? . g$7515$1XjQw)
        (error? . g$7425$1XjQw)
        (condition-who . g$7487$1XjQw)
        (condition-predicate . g$12931$1XjQw)
        (condition-message . g$7383$1XjQw)
        (condition-irritants . g$7470$1XjQw)
        (condition-accessor . g$12930$1XjQw)
        (condition . g$12929$1XjQw)
        (assertion-violation? . g$7453$1XjQw)
        (condition? . g$12928$1XjQw)
        (utf32->string . g$12927$1XjQw)
        (utf16->string . g$12926$1XjQw)
        (utf8->string . g$12925$1XjQw)
        (uint-list->bytevector . g$12924$1XjQw)
        (u8-list->bytevector . g$12923$1XjQw)
        (string->utf8 . g$12922$1XjQw)
        (string->utf32 . g$12921$1XjQw)
        (string->utf16 . g$12920$1XjQw)
        (sint-list->bytevector . g$12919$1XjQw)
        (native-endianness . g$7238$1XjQw)
        (bytevector? . g$12918$1XjQw)
        (bytevector=? . g$12917$1XjQw)
        (bytevector-uint-set! . g$12916$1XjQw)
        (bytevector-uint-ref . g$12915$1XjQw)
        (bytevector-u8-set! . g$12914$1XjQw)
        (bytevector-u8-ref . g$12913$1XjQw)
        (bytevector-u64-set! . g$7259$1XjQw)
        (bytevector-u64-ref . g$7255$1XjQw)
        (bytevector-u64-native-set! . g$7261$1XjQw)
        (bytevector-u64-native-ref . g$7257$1XjQw)
        (bytevector-u32-set! . g$7251$1XjQw)
        (bytevector-u32-ref . g$7247$1XjQw)
        (bytevector-u32-native-set! . g$7253$1XjQw)
        (bytevector-u32-native-ref . g$7249$1XjQw)
        (bytevector-u16-set! . g$7243$1XjQw)
        (bytevector-u16-ref . g$7239$1XjQw)
        (bytevector-u16-native-set! . g$7245$1XjQw)
        (bytevector-u16-native-ref . g$7241$1XjQw)
        (bytevector-sint-set! . g$12912$1XjQw)
        (bytevector-sint-ref . g$12911$1XjQw)
        (bytevector-s8-set! . g$12910$1XjQw)
        (bytevector-s8-ref . g$12909$1XjQw)
        (bytevector-s64-set! . g$7260$1XjQw)
        (bytevector-s64-ref . g$7256$1XjQw)
        (bytevector-s64-native-set! . g$7262$1XjQw)
        (bytevector-s64-native-ref . g$7258$1XjQw)
        (bytevector-s32-set! . g$7252$1XjQw)
        (bytevector-s32-ref . g$7248$1XjQw)
        (bytevector-s32-native-set! . g$7254$1XjQw)
        (bytevector-s32-native-ref . g$7250$1XjQw)
        (bytevector-s16-set! . g$7244$1XjQw)
        (bytevector-s16-ref . g$7240$1XjQw)
        (bytevector-s16-native-set! . g$7246$1XjQw)
        (bytevector-s16-native-ref . g$7242$1XjQw)
        (bytevector-length . g$12908$1XjQw)
        (bytevector-ieee-single-set! . g$12907$1XjQw)
        (bytevector-ieee-single-ref . g$12906$1XjQw)
        (bytevector-ieee-single-native-set! . g$7265$1XjQw)
        (bytevector-ieee-single-native-ref . g$7263$1XjQw)
        (bytevector-ieee-double-set! . g$12905$1XjQw)
        (bytevector-ieee-double-ref . g$12904$1XjQw)
        (bytevector-ieee-double-native-set! . g$7266$1XjQw)
        (bytevector-ieee-double-native-ref . g$7264$1XjQw)
        (bytevector-fill! . g$12903$1XjQw)
        (bytevector-copy! . g$12902$1XjQw)
        (bytevector-copy . g$12901$1XjQw)
        (bytevector->uint-list . g$12900$1XjQw)
        (bytevector->u8-list . g$12899$1XjQw)
        (bytevector->sint-list . g$12898$1XjQw)
        (no-nans-violation? . g$7861$1XjQw)
        (no-infinities-violation? . g$7847$1XjQw)
        (make-no-nans-violation . g$7860$1XjQw)
        (make-no-infinities-violation . g$7846$1XjQw)
        (real->flonum . g$12897$1XjQw)
        (flzero? . g$12896$1XjQw)
        (fltruncate . g$12895$1XjQw)
        (fltan . g$12894$1XjQw)
        (flsqrt . g$12893$1XjQw)
        (flsin . g$12892$1XjQw)
        (flround . g$12891$1XjQw)
        (flpositive? . g$12890$1XjQw)
        (flonum? . g$12889$1XjQw)
        (flodd? . g$12888$1XjQw)
        (flnumerator . g$12887$1XjQw)
        (flnegative? . g$12886$1XjQw)
        (flnan? . g$12885$1XjQw)
        (flmod0 . g$12884$1XjQw)
        (flmod . g$12883$1XjQw)
        (flmin . g$12882$1XjQw)
        (flmax . g$12881$1XjQw)
        (fllog . g$12880$1XjQw)
        (flinteger? . g$12879$1XjQw)
        (flinfinite? . g$12878$1XjQw)
        (flfloor . g$12877$1XjQw)
        (flfinite? . g$12876$1XjQw)
        (flexpt . g$12875$1XjQw)
        (flexp . g$12874$1XjQw)
        (fleven? . g$12873$1XjQw)
        (fldiv0-and-mod0 . g$12872$1XjQw)
        (fldiv0 . g$12871$1XjQw)
        (fldiv-and-mod . g$12870$1XjQw)
        (fldiv . g$12869$1XjQw)
        (fldenominator . g$12868$1XjQw)
        (flcos . g$12867$1XjQw)
        (flceiling . g$12866$1XjQw)
        (flatan . g$12865$1XjQw)
        (flasin . g$12864$1XjQw)
        (flacos . g$12863$1XjQw)
        (flabs . g$12862$1XjQw)
        (fl>? . g$12861$1XjQw)
        (fl>=? . g$12860$1XjQw)
        (fl=? . g$12859$1XjQw)
        (fl<? . g$12858$1XjQw)
        (fl<=? . g$12857$1XjQw)
        (fl/ . g$12856$1XjQw)
        (fl- . g$12855$1XjQw)
        (fl+ . g$12854$1XjQw)
        (fl* . g$12853$1XjQw)
        (fixnum->flonum . g$12852$1XjQw)
        (fxzero? . g$12851$1XjQw)
        (fxxor . g$12850$1XjQw)
        (fxrotate-bit-field . g$7793$1XjQw)
        (fxreverse-bit-field . g$12849$1XjQw)
        (fxpositive? . g$12848$1XjQw)
        (fxodd? . g$12847$1XjQw)
        (fxnot . g$12846$1XjQw)
        (fxnegative? . g$12845$1XjQw)
        (fxmod0 . g$12844$1XjQw)
        (fxmod . g$12843$1XjQw)
        (fxmin . g$12842$1XjQw)
        (fxmax . g$12841$1XjQw)
        (fxlength . g$12840$1XjQw)
        (fxior . g$12839$1XjQw)
        (fxif . g$7787$1XjQw)
        (fxfirst-bit-set . g$12838$1XjQw)
        (fxeven? . g$12837$1XjQw)
        (fxdiv0-and-mod0 . g$12836$1XjQw)
        (fxdiv0 . g$12835$1XjQw)
        (fxdiv-and-mod . g$12834$1XjQw)
        (fxdiv . g$12833$1XjQw)
        (fxcopy-bit-field . g$7790$1XjQw)
        (fxcopy-bit . g$7788$1XjQw)
        (fxbit-set? . g$12832$1XjQw)
        (fxbit-field . g$7789$1XjQw)
        (fxbit-count . g$12831$1XjQw)
        (fxarithmetic-shift-right . g$7792$1XjQw)
        (fxarithmetic-shift-left . g$7791$1XjQw)
        (fxarithmetic-shift . g$12830$1XjQw)
        (fxand . g$12829$1XjQw)
        (fx>? . g$12828$1XjQw)
        (fx>=? . g$12827$1XjQw)
        (fx=? . g$12826$1XjQw)
        (fx<? . g$12825$1XjQw)
        (fx<=? . g$12824$1XjQw)
        (fx-/carry . g$7785$1XjQw)
        (fx- . g$12823$1XjQw)
        (fx+/carry . g$7786$1XjQw)
        (fx+ . g$12822$1XjQw)
        (fx*/carry . g$7784$1XjQw)
        (fx* . g$12821$1XjQw)
        (greatest-fixnum . g$12820$1XjQw)
        (least-fixnum . g$12819$1XjQw)
        (fixnum-width . g$12818$1XjQw)
        (fixnum? . g$12817$1XjQw)
        (bitwise-rotate-bit-field . g$7758$1XjQw)
        (bitwise-reverse-bit-field . g$12816$1XjQw)
        (bitwise-length . g$12815$1XjQw)
        (bitwise-if . g$7752$1XjQw)
        (bitwise-first-bit-set . g$12814$1XjQw)
        (bitwise-copy-bit-field . g$7755$1XjQw)
        (bitwise-copy-bit . g$7753$1XjQw)
        (bitwise-bit-set? . g$12813$1XjQw)
        (bitwise-bit-field . g$12812$1XjQw)
        (bitwise-bit-count . g$12811$1XjQw)
        (bitwise-xor . g$12810$1XjQw)
        (bitwise-ior . g$12809$1XjQw)
        (bitwise-and . g$12808$1XjQw)
        (bitwise-not . g$12807$1XjQw)
        (bitwise-arithmetic-shift-right . g$7757$1XjQw)
        (bitwise-arithmetic-shift-left . g$7756$1XjQw)
        (bitwise-arithmetic-shift . g$12806$1XjQw)
        (zero? . g$12805$1XjQw)
        (vector? . g$12804$1XjQw)
        (vector-set! . g$12803$1XjQw)
        (vector-ref . g$12802$1XjQw)
        (vector-map . g$12801$1XjQw)
        (vector-length . g$12800$1XjQw)
        (vector-for-each . g$12799$1XjQw)
        (vector-fill! . g$12798$1XjQw)
        (vector->list . g$12797$1XjQw)
        (vector . g$12796$1XjQw)
        (values . g$12795$1XjQw)
        (truncate . g$12794$1XjQw)
        (tan . g$12793$1XjQw)
        (symbol? . g$12792$1XjQw)
        (symbol=? . g$6747$1XjQw)
        (symbol->string . g$12791$1XjQw)
        (substring . g$12790$1XjQw)
        (string? . g$12789$1XjQw)
        (string>? . g$6744$1XjQw)
        (string>=? . g$6746$1XjQw)
        (string=? . g$6742$1XjQw)
        (string<? . g$6743$1XjQw)
        (string<=? . g$6745$1XjQw)
        (string-ref . g$12788$1XjQw)
        (string-length . g$12787$1XjQw)
        (string-for-each . g$12786$1XjQw)
        (string-copy . g$12785$1XjQw)
        (string-append . g$12784$1XjQw)
        (string->symbol . g$12783$1XjQw)
        (string->number . g$12782$1XjQw)
        (string->list . g$12781$1XjQw)
        (string . g$12780$1XjQw)
        (sqrt . g$12779$1XjQw)
        (sin . g$12778$1XjQw)
        (round . g$12777$1XjQw)
        (reverse . g$12776$1XjQw)
        (real? . g$12775$1XjQw)
        (real-valued? . g$12774$1XjQw)
        (real-part . g$12773$1XjQw)
        (rationalize . g$6788$1XjQw)
        (rational? . g$12772$1XjQw)
        (rational-valued? . g$12771$1XjQw)
        (procedure? . g$12770$1XjQw)
        (positive? . g$12769$1XjQw)
        (pair? . g$12768$1XjQw)
        (odd? . g$12767$1XjQw)
        (numerator . g$12766$1XjQw)
        (number? . g$12765$1XjQw)
        (number->string . g$12764$1XjQw)
        (null? . g$12763$1XjQw)
        (not . g$12762$1XjQw)
        (negative? . g$12761$1XjQw)
        (nan? . g$12760$1XjQw)
        (min . g$12759$1XjQw)
        (max . g$12758$1XjQw)
        (map . g$6562$1XjQw)
        (make-vector . g$12757$1XjQw)
        (make-string . g$12756$1XjQw)
        (make-rectangular . g$12755$1XjQw)
        (make-polar . g$12754$1XjQw)
        (magnitude . g$12753$1XjQw)
        (log . g$12752$1XjQw)
        (list? . g$12751$1XjQw)
        (list-tail . g$6542$1XjQw)
        (list-ref . g$6543$1XjQw)
        (list->vector . g$12750$1XjQw)
        (list->string . g$12749$1XjQw)
        (list . g$12748$1XjQw)
        (length . g$12747$1XjQw)
        (lcm . g$12746$1XjQw)
        (integer? . g$12745$1XjQw)
        (integer-valued? . g$12744$1XjQw)
        (integer->char . g$12743$1XjQw)
        (infinite? . g$12742$1XjQw)
        (inexact? . g$12741$1XjQw)
        (inexact . g$12740$1XjQw)
        (imag-part . g$12739$1XjQw)
        (gcd . g$12738$1XjQw)
        (for-each . g$6563$1XjQw)
        (floor . g$12737$1XjQw)
        (finite? . g$12736$1XjQw)
        (expt . g$12735$1XjQw)
        (exp . g$12734$1XjQw)
        (exact? . g$12733$1XjQw)
        (exact-integer-sqrt . g$12732$1XjQw)
        (exact . g$12731$1XjQw)
        (even? . g$12730$1XjQw)
        (error . g$12729$1XjQw)
        (eqv? . g$12728$1XjQw)
        (equal? . g$12727$1XjQw)
        (eq? . g$12726$1XjQw)
        (dynamic-wind . g$12725$1XjQw)
        (div0-and-mod0 . g$12724$1XjQw)
        (mod0 . g$12723$1XjQw)
        (div0 . g$12722$1XjQw)
        (div-and-mod . g$12721$1XjQw)
        (mod . g$12720$1XjQw)
        (div . g$12719$1XjQw)
        (denominator . g$12718$1XjQw)
        (cos . g$12717$1XjQw)
        (cons . g$12716$1XjQw)
        (complex? . g$12715$1XjQw)
        (char? . g$12714$1XjQw)
        (char>? . g$6785$1XjQw)
        (char>=? . g$6787$1XjQw)
        (char=? . g$6783$1XjQw)
        (char<? . g$6784$1XjQw)
        (char<=? . g$6786$1XjQw)
        (char->integer . g$12713$1XjQw)
        (ceiling . g$12712$1XjQw)
        (call-with-values . g$12711$1XjQw)
        (call/cc . g$12710$1XjQw)
        (call-with-current-continuation . g$12709$1XjQw)
        (cddddr . g$6707$1XjQw)
        (cdddar . g$6706$1XjQw)
        (cddadr . g$6705$1XjQw)
        (cddaar . g$6704$1XjQw)
        (cdaddr . g$6703$1XjQw)
        (cdadar . g$6702$1XjQw)
        (cdaadr . g$6701$1XjQw)
        (cdaaar . g$6700$1XjQw)
        (cadddr . g$6699$1XjQw)
        (caddar . g$6698$1XjQw)
        (cadadr . g$6697$1XjQw)
        (cadaar . g$6696$1XjQw)
        (caaddr . g$6695$1XjQw)
        (caadar . g$6694$1XjQw)
        (caaadr . g$6693$1XjQw)
        (caaaar . g$6692$1XjQw)
        (cdddr . g$6691$1XjQw)
        (cddar . g$6690$1XjQw)
        (cdadr . g$6689$1XjQw)
        (cdaar . g$6688$1XjQw)
        (caddr . g$6687$1XjQw)
        (cadar . g$6686$1XjQw)
        (caadr . g$6685$1XjQw)
        (caaar . g$6684$1XjQw)
        (cddr . g$6683$1XjQw)
        (cdar . g$6682$1XjQw)
        (cadr . g$6681$1XjQw)
        (caar . g$6680$1XjQw)
        (cdr . g$12708$1XjQw)
        (car . g$12707$1XjQw)
        (boolean? . g$12706$1XjQw)
        (boolean=? . g$6748$1XjQw)
        (atan . g$12705$1XjQw)
        (assertion-violation . g$12704$1XjQw)
        (asin . g$12703$1XjQw)
        (apply . g$12702$1XjQw)
        (append . g$12701$1XjQw)
        (angle . g$12700$1XjQw)
        (acos . g$12699$1XjQw)
        (abs . g$12698$1XjQw)
        (/ . g$12697$1XjQw)
        (* . g$12696$1XjQw)
        (- . g$12695$1XjQw)
        (+ . g$12694$1XjQw)
        (>= . g$12693$1XjQw)
        (> . g$12692$1XjQw)
        (= . g$12691$1XjQw)
        (<= . g$12690$1XjQw)
        (< . g$12689$1XjQw)
        (make-record-printer . g$12688$1XjQw)
        (eqv-hash . g$12687$1XjQw)
        (reverse! . g$12686$1XjQw)
        (deserialize-port . g$12685$1XjQw)
        (serialize-port . g$12684$1XjQw)
        (enum-set? . g$8107$1XjQw)
        (make-promise . g$7578$1XjQw)
        (load/args . g$12522$1XjQw)
        (printf . g$8218$1XjQw)
        (fprintf . g$8219$1XjQw)
        (format . g$8220$1XjQw)
        (procedure-form . g$12683$1XjQw)
        (procedure-environment . g$12682$1XjQw)
        (procedure-name . g$12681$1XjQw)
        (procedure-arity . g$12680$1XjQw)
        (gc-collect . g$12679$1XjQw)
        (clr-type? . g$12678$1XjQw)
        (get-clr-type . g$12677$1XjQw)
        (get-command-line . g$12676$1XjQw)
        (vector-append . g$12675$1XjQw)
        (vector-filter . g$12674$1XjQw)
        (vector-reverse! . g$12673$1XjQw)
        (vector-contains? . g$12672$1XjQw)
        (vector-index-of . g$12671$1XjQw)
        (vector-copy . g$12670$1XjQw)
        (vector-binary-search . g$12669$1XjQw)
        (string-ci-compare . g$12668$1XjQw)
        (string-compare . g$12667$1XjQw)
        (string-format . g$12666$1XjQw)
        (trace-printer . g$12519$1XjQw)
        (make-traced-procedure . g$12665$1XjQw)
        (make-traced-macro . g$8240$1XjQw)
        (assertion-error . g$9541$1XjQw)
        (time-it . g$12664$1XjQw)
        (make-parameter . g$8247$1XjQw)
        (library-locator . g$12663$1XjQw)
        (get-library-paths . g$12662$1XjQw)
        (environment-bindings . g$9520$1XjQw)
        (environment-symbols . g$9523$1XjQw)
        (interaction-environment-symbols . g$9519$1XjQw)
        (optimization-level . g$12661$1XjQw)
        (library-path . g$8702$1XjQw)
        (expand . g$9527$1XjQw)
        (&no-nans . g$12660$1XjQw)
        (&no-infinities . g$12659$1XjQw)
        (&i/o-encoding . g$12658$1XjQw)
        (&i/o-decoding . g$12657$1XjQw)
        (&i/o-port . g$12656$1XjQw)
        (&i/o-file-does-not-exist . g$12655$1XjQw)
        (&i/o-file-already-exists . g$12654$1XjQw)
        (&i/o-file-is-read-only . g$12653$1XjQw)
        (&i/o-file-protection . g$12652$1XjQw)
        (&i/o-filename . g$12651$1XjQw)
        (&i/o-invalid-position . g$12650$1XjQw)
        (&i/o-write . g$12649$1XjQw)
        (&i/o-read . g$12648$1XjQw)
        (&i/o . g$12647$1XjQw)
        (&non-continuable . g$12646$1XjQw)
        (&undefined . g$12645$1XjQw)
        (&syntax . g$12644$1XjQw)
        (&lexical . g$12643$1XjQw)
        (&implementation-restriction . g$12642$1XjQw)
        (&who . g$12641$1XjQw)
        (&irritants . g$12640$1XjQw)
        (&assertion . g$12639$1XjQw)
        (&violation . g$12638$1XjQw)
        (&error . g$12637$1XjQw)
        (&serious . g$12636$1XjQw)
        (&warning . g$12635$1XjQw)
        (&message . g$12634$1XjQw)
        (&condition . g$12633$1XjQw)
        (define-condition-type . g$12632$1XjQw)
        (define-enumeration . g$12631$1XjQw)
        (define-record-type . g$12630$1XjQw)
        (parent-rtd . g$12629$1XjQw)
        (nongenerative . g$12628$1XjQw)
        (opaque . g$12627$1XjQw)
        (sealed . g$12626$1XjQw)
        (protocol . g$12625$1XjQw)
        (parent . g$12624$1XjQw)
        (immutable . g$12623$1XjQw)
        (mutable . g$12622$1XjQw)
        (fields . g$12621$1XjQw)
        (error-handling-mode . g$12620$1XjQw)
        (file-options . g$12619$1XjQw)
        (buffer-mode . g$12618$1XjQw)
        (eol-style . g$12617$1XjQw)
        (guard . g$12616$1XjQw)
        (trace-letrec-syntax . g$12615$1XjQw)
        (trace-let-syntax . g$12614$1XjQw)
        (trace-define-syntax . g$12613$1XjQw)
        (trace-define . g$12612$1XjQw)
        (trace-lambda . g$12611$1XjQw)
        (unsyntax-splicing . g$12610$1XjQw)
        (unsyntax . g$12609$1XjQw)
        (unquote-splicing . g$12608$1XjQw)
        (unquote . g$12607$1XjQw)
        (_ . g$12606$1XjQw)
        (else . g$12605$1XjQw)
        (=> . g$12604$1XjQw)
        (... . g$12603$1XjQw)
        (assert . g$12602$1XjQw)
        (endianness . g$12601$1XjQw)
        (delay . g$12600$1XjQw)
        (time . g$12599$1XjQw)
        (or . g$12598$1XjQw)
        (and . g$12597$1XjQw)
        (do . g$12596$1XjQw)
        (cond . g$12595$1XjQw)
        (let* . g$12594$1XjQw)
        (let . g$12593$1XjQw)
        (identifier-syntax . g$12592$1XjQw)
        (with-syntax . g$12591$1XjQw)
        (quasisyntax . g$12590$1XjQw)
        (quasiquote . g$12589$1XjQw)
        (syntax-rules . g$12588$1XjQw)
        (include-into . g$12587$1XjQw)
        (include . g$12586$1XjQw)
        (define-struct . g$12585$1XjQw)
        (let-values . g$12584$1XjQw)
        (let*-values . g$12583$1XjQw)
        (record-constructor-descriptor . g$12582$1XjQw)
        (record-type-descriptor . g$12581$1XjQw)
        (fluid-let-syntax . g$12580$1XjQw)
        (case . g$12579$1XjQw)
        (parameterize . g$12578$1XjQw)
        (unless . g$12577$1XjQw)
        (when . g$12576$1XjQw)
        (if . g$12575$1XjQw)
        (letrec* . g$12574$1XjQw)
        (letrec . g$12573$1XjQw)
        (type-descriptor . g$12572$1XjQw)
        (case-lambda . g$12571$1XjQw)
        (lambda . g$12570$1XjQw)
        (syntax . g$12569$1XjQw)
        (syntax-case . g$12568$1XjQw)
        (quote . g$12567$1XjQw)
        (foreign-call . g$12566$1XjQw)
        (letrec-syntax . g$12565$1XjQw)
        (let-syntax . g$12564$1XjQw)
        (set! . g$12563$1XjQw)
        (export . g$12562$1XjQw)
        (import . g$12561$1XjQw)
        (library . g$12560$1XjQw)
        (begin . g$12559$1XjQw)
        (module . g$12558$1XjQw)
        (define-syntax . g$12557$1XjQw)
        (define . g$12556$1XjQw))
      '((g$9418$1XjQw core-prim . ellipsis-map)
        (g$13162$1XjQw core-prim . &no-nans-rcd)
        (g$13161$1XjQw core-prim . &no-nans-rtd)
        (g$13160$1XjQw core-prim . &no-infinities-rcd)
        (g$13159$1XjQw core-prim . &no-infinities-rtd)
        (g$13158$1XjQw core-prim . &i/o-encoding-rcd)
        (g$13157$1XjQw core-prim . &i/o-encoding-rtd)
        (g$13156$1XjQw core-prim . &i/o-decoding-rcd)
        (g$13155$1XjQw core-prim . &i/o-decoding-rtd)
        (g$13154$1XjQw core-prim . &i/o-port-rcd)
        (g$13153$1XjQw core-prim . &i/o-port-rtd)
        (g$13152$1XjQw core-prim . &i/o-file-does-not-exist-rcd)
        (g$13151$1XjQw core-prim . &i/o-file-does-not-exist-rtd)
        (g$13150$1XjQw core-prim . &i/o-file-already-exists-rcd)
        (g$13149$1XjQw core-prim . &i/o-file-already-exists-rtd)
        (g$13148$1XjQw core-prim . &i/o-file-is-read-only-rcd)
        (g$13147$1XjQw core-prim . &i/o-file-is-read-only-rtd)
        (g$13146$1XjQw core-prim . &i/o-file-protection-rcd)
        (g$13145$1XjQw core-prim . &i/o-file-protection-rtd)
        (g$13144$1XjQw core-prim . &i/o-filename-rcd)
        (g$13143$1XjQw core-prim . &i/o-filename-rtd)
        (g$13142$1XjQw core-prim . &i/o-invalid-position-rcd)
        (g$13141$1XjQw core-prim . &i/o-invalid-position-rtd)
        (g$13140$1XjQw core-prim . &i/o-write-rcd)
        (g$13139$1XjQw core-prim . &i/o-write-rtd)
        (g$13138$1XjQw core-prim . &i/o-read-rcd)
        (g$13137$1XjQw core-prim . &i/o-read-rtd)
        (g$13136$1XjQw core-prim . &i/o-rcd)
        (g$13135$1XjQw core-prim . &i/o-rtd)
        (g$13134$1XjQw core-prim . &undefined-rcd)
        (g$13133$1XjQw core-prim . &undefined-rtd)
        (g$13132$1XjQw core-prim . &syntax-rcd)
        (g$13131$1XjQw core-prim . &syntax-rtd)
        (g$13130$1XjQw core-prim . &lexical-rcd)
        (g$13129$1XjQw core-prim . &lexical-rtd)
        (g$13128$1XjQw core-prim . &implementation-restriction-rcd)
        (g$13127$1XjQw core-prim . &implementation-restriction-rtd)
        (g$13126$1XjQw core-prim . &non-continuable-rcd)
        (g$13125$1XjQw core-prim . &non-continuable-rtd)
        (g$13124$1XjQw core-prim . &who-rcd)
        (g$13123$1XjQw core-prim . &who-rtd)
        (g$13122$1XjQw core-prim . &irritants-rcd)
        (g$13121$1XjQw core-prim . &irritants-rtd)
        (g$13120$1XjQw core-prim . &assertion-rcd)
        (g$13119$1XjQw core-prim . &assertion-rtd)
        (g$13118$1XjQw core-prim . &violation-rcd)
        (g$13117$1XjQw core-prim . &violation-rtd)
        (g$13116$1XjQw core-prim . &error-rcd)
        (g$13115$1XjQw core-prim . &error-rtd)
        (g$13114$1XjQw core-prim . &serious-rcd)
        (g$13113$1XjQw core-prim . &serious-rtd)
        (g$13112$1XjQw core-prim . &warning-rcd)
        (g$13111$1XjQw core-prim . &warning-rtd)
        (g$13110$1XjQw core-prim . &message-rcd)
        (g$13109$1XjQw core-prim . &message-rtd)
        (g$13108$1XjQw core-prim . &condition-rcd)
        (g$13107$1XjQw core-prim . &condition-rtd)
        (g$13106$1XjQw core-prim . library-letrec*)
        (g$13105$1XjQw core-prim . annotation-stripped)
        (g$13104$1XjQw core-prim . annotation-source)
        (g$13103$1XjQw core-prim . annotation-expression)
        (g$13102$1XjQw core-prim . annotation?)
        (g$13101$1XjQw core-prim . read-annotated)
        (g$13100$1XjQw core-prim . tanh)
        (g$13099$1XjQw core-prim . cosh)
        (g$13098$1XjQw core-prim . sinh)
        (g$13097$1XjQw core-prim . make-guid)
        (g$13096$1XjQw core-prim . unspecified?)
        (g$13095$1XjQw core-prim . make-trace)
        (g$6545$1XjQw core-prim . make-list)
        (g$6544$1XjQw core-prim . last-pair)
        (g$13094$1XjQw core-prim . load-r5rs)
        (g$13093$1XjQw core-prim . license)
        (g$13092$1XjQw core-prim . stacktrace)
        (g$12524$1XjQw core-prim . ironscheme-build)
        (g$13091$1XjQw core-prim . define-clr-class-internal)
        (g$13090$1XjQw core-prim . clr-field-set!-internal)
        (g$13089$1XjQw core-prim . clr-field-get-internal)
        (g$13088$1XjQw core-prim . clr-cast-internal)
        (g$13087$1XjQw core-prim . clr-call-internal)
        (g$13086$1XjQw core-prim . clr-new-internal)
        (g$13085$1XjQw core-prim . clr-new-array-internal)
        (g$13084$1XjQw core-prim . clr-is-internal)
        (g$13083$1XjQw core-prim . clr-reference-internal)
        (g$13082$1XjQw core-prim . clr-using-internal)
        (g$13081$1XjQw core-prim . clr-clear-usings-internal)
        (g$9542$1XjQw core-prim . syntax-error)
        (g$9413$1XjQw core-prim . syntax-dispatch)
        (g$13080$1XjQw core-prim . compile-core)
        (g$13079$1XjQw core-prim . eval-core)
        (g$13078$1XjQw core-prim . set-symbol-value!)
        (g$13077$1XjQw core-prim . symbol-value)
        (g$13076$1XjQw core-prim . ungensym)
        (g$13075$1XjQw core-prim . gensym)
        (g$13074$1XjQw core-prim . void)
        (g$13073$1XjQw core-prim . load-serialized-library)
        (g$13072$1XjQw core-prim . serialize-library)
        (g$12526$1XjQw core-prim . compile-system-libraries)
        (g$12528$1XjQw core-prim . compile->closure)
        (g$12527$1XjQw core-prim . compile)
        (g$12523$1XjQw core-prim . load)
        (g$9551$1XjQw core-prim . interaction-environment)
        (g$13071$1XjQw core-prim . char-ready?)
        (g$13070$1XjQw core-prim . string-upcase)
        (g$13069$1XjQw core-prim . string-titlecase)
        (g$13068$1XjQw core-prim . string-normalize-nfkd)
        (g$13067$1XjQw core-prim . string-normalize-nfkc)
        (g$13066$1XjQw core-prim . string-normalize-nfd)
        (g$13065$1XjQw core-prim . string-normalize-nfc)
        (g$13064$1XjQw core-prim . string-foldcase)
        (g$13063$1XjQw core-prim . string-downcase)
        (g$7657$1XjQw core-prim . string-ci>?)
        (g$7659$1XjQw core-prim . string-ci>=?)
        (g$7655$1XjQw core-prim . string-ci=?)
        (g$7656$1XjQw core-prim . string-ci<?)
        (g$7658$1XjQw core-prim . string-ci<=?)
        (g$13062$1XjQw core-prim . char-whitespace?)
        (g$13061$1XjQw core-prim . char-upper-case?)
        (g$13060$1XjQw core-prim . char-title-case?)
        (g$13059$1XjQw core-prim . char-numeric?)
        (g$13058$1XjQw core-prim . char-lower-case?)
        (g$13057$1XjQw core-prim . char-general-category)
        (g$13056$1XjQw core-prim . char-upcase)
        (g$13055$1XjQw core-prim . char-titlecase)
        (g$13054$1XjQw core-prim . char-foldcase)
        (g$13053$1XjQw core-prim . char-downcase)
        (g$7696$1XjQw core-prim . char-ci>?)
        (g$7698$1XjQw core-prim . char-ci>=?)
        (g$7694$1XjQw core-prim . char-ci=?)
        (g$7695$1XjQw core-prim . char-ci<?)
        (g$7697$1XjQw core-prim . char-ci<=?)
        (g$13052$1XjQw core-prim . char-alphabetic?)
        (g$9150$1XjQw core-prim . variable-transformer-procedure)
        (g$9149$1XjQw core-prim . variable-transformer?)
        (g$9148$1XjQw core-prim . make-variable-transformer)
        (g$9546$1XjQw core-prim . identifier?)
        (g$9535$1XjQw core-prim . generate-temporaries)
        (g$9536$1XjQw core-prim . free-identifier=?)
        (g$9548$1XjQw core-prim . syntax->datum)
        (g$9547$1XjQw core-prim . datum->syntax)
        (g$9537$1XjQw core-prim . bound-identifier=?)
        (g$13051$1XjQw core-prim . record-type-descriptor?)
        (g$13050$1XjQw core-prim . record-predicate)
        (g$13049$1XjQw core-prim . record-mutator)
        (g$13048$1XjQw core-prim . record-constructor)
        (g$13047$1XjQw core-prim . record-accessor)
        (g$13046$1XjQw core-prim . make-record-type-descriptor)
        (g$13045$1XjQw core-prim . make-record-constructor-descriptor)
        (g$13044$1XjQw core-prim . record?)
        (g$13043$1XjQw core-prim . record-type-uid)
        (g$13042$1XjQw core-prim . record-type-sealed?)
        (g$13041$1XjQw core-prim . record-type-parent)
        (g$13040$1XjQw core-prim . record-type-opaque?)
        (g$13039$1XjQw core-prim . record-type-name)
        (g$13038$1XjQw core-prim . record-type-generative?)
        (g$13037$1XjQw core-prim . record-type-field-names)
        (g$13036$1XjQw core-prim . record-rtd)
        (g$13035$1XjQw core-prim . record-field-mutable?)
        (g$7232$1XjQw core-prim . delete-file)
        (g$7231$1XjQw core-prim . file-exists?)
        (g$13034$1XjQw core-prim . vector-sort!)
        (g$13033$1XjQw core-prim . vector-sort)
        (g$7595$1XjQw core-prim . list-sort)
        (g$13032$1XjQw core-prim . symbol-hash)
        (g$13031$1XjQw core-prim . string-ci-hash)
        (g$13030$1XjQw core-prim . string-hash)
        (g$13029$1XjQw core-prim . equal-hash)
        (g$13028$1XjQw core-prim . hashtable-equivalence-function)
        (g$13027$1XjQw core-prim . make-hashtable)
        (g$13026$1XjQw core-prim . hashtable-hash-function)
        (g$7199$1XjQw core-prim . make-eqv-hashtable)
        (g$7198$1XjQw core-prim . make-eq-hashtable)
        (g$13025$1XjQw core-prim . hashtable?)
        (g$7205$1XjQw core-prim . hashtable-update!)
        (g$7200$1XjQw core-prim . hashtable-size)
        (g$7202$1XjQw core-prim . hashtable-set!)
        (g$7201$1XjQw core-prim . hashtable-ref)
        (g$13024$1XjQw core-prim . hashtable-mutable?)
        (g$13023$1XjQw core-prim . hashtable-keys)
        (g$13022$1XjQw core-prim . hashtable-entries)
        (g$7203$1XjQw core-prim . hashtable-delete!)
        (g$13021$1XjQw core-prim . hashtable-copy)
        (g$7204$1XjQw core-prim . hashtable-contains?)
        (g$7206$1XjQw core-prim . hashtable-clear!)
        (g$8074$1XjQw core-prim . call-with-output-file)
        (g$8073$1XjQw core-prim . call-with-input-file)
        (g$13020$1XjQw core-prim . write-char)
        (g$13019$1XjQw core-prim . write)
        (g$8072$1XjQw core-prim . with-output-to-file)
        (g$8071$1XjQw core-prim . with-input-from-file)
        (g$13018$1XjQw core-prim . read-char)
        (g$13017$1XjQw core-prim . read)
        (g$13016$1XjQw core-prim . peek-char)
        (g$13015$1XjQw core-prim . open-output-file)
        (g$13014$1XjQw core-prim . open-input-file)
        (g$13013$1XjQw core-prim . newline)
        (g$13012$1XjQw core-prim . display)
        (g$13011$1XjQw core-prim . close-output-port)
        (g$13010$1XjQw core-prim . close-input-port)
        (g$13009$1XjQw core-prim . eof-object?)
        (g$13008$1XjQw core-prim . eof-object)
        (g$13007$1XjQw core-prim . current-error-port)
        (g$13006$1XjQw core-prim . current-output-port)
        (g$13005$1XjQw core-prim . current-input-port)
        (g$13004$1XjQw core-prim . output-port?)
        (g$13003$1XjQw core-prim . input-port?)
        (g$13002$1XjQw core-prim . utf-8-codec)
        (g$13001$1XjQw core-prim . utf-16-codec)
        (g$13000$1XjQw core-prim . transcoder-error-handling-mode)
        (g$12999$1XjQw core-prim . transcoder-eol-style)
        (g$12998$1XjQw core-prim . transcoder-codec)
        (g$12997$1XjQw core-prim . transcoded-port)
        (g$12996$1XjQw core-prim . textual-port?)
        (g$12995$1XjQw core-prim . string->bytevector)
        (g$12994$1XjQw core-prim . standard-output-port)
        (g$12993$1XjQw core-prim . standard-input-port)
        (g$12992$1XjQw core-prim . standard-error-port)
        (g$12991$1XjQw core-prim . set-port-position!)
        (g$12990$1XjQw core-prim . put-u8)
        (g$12989$1XjQw core-prim . put-string)
        (g$12988$1XjQw core-prim . put-datum)
        (g$12987$1XjQw core-prim . put-char)
        (g$12986$1XjQw core-prim . put-bytevector)
        (g$8047$1XjQw core-prim . port?)
        (g$12985$1XjQw core-prim . port-transcoder)
        (g$12984$1XjQw core-prim . port-position)
        (g$12983$1XjQw core-prim . port-has-set-port-position!?)
        (g$12982$1XjQw core-prim . port-has-port-position?)
        (g$12981$1XjQw core-prim . port-eof?)
        (g$12980$1XjQw core-prim . output-port-buffer-mode)
        (g$8046$1XjQw core-prim . open-string-output-port)
        (g$12979$1XjQw core-prim . open-string-input-port)
        (g$12978$1XjQw core-prim . open-file-output-port)
        (g$12977$1XjQw core-prim . open-file-input/output-port)
        (g$12976$1XjQw core-prim . open-file-input-port)
        (g$12975$1XjQw core-prim . open-bytevector-output-port)
        (g$12974$1XjQw core-prim . open-bytevector-input-port)
        (g$12973$1XjQw core-prim . native-transcoder)
        (g$12972$1XjQw core-prim . native-eol-style)
        (g$12971$1XjQw core-prim . make-transcoder)
        (g$12970$1XjQw core-prim . latin-1-codec)
        (g$7903$1XjQw core-prim . make-i/o-write-error)
        (g$7889$1XjQw core-prim . make-i/o-read-error)
        (g$8008$1XjQw core-prim . make-i/o-port-error)
        (g$7918$1XjQw core-prim . make-i/o-invalid-position-error)
        (g$7935$1XjQw core-prim . make-i/o-filename-error)
        (g$7951$1XjQw core-prim . make-i/o-file-protection-error)
        (g$7965$1XjQw core-prim . make-i/o-file-is-read-only-error)
        (g$7993$1XjQw core-prim . make-i/o-file-does-not-exist-error)
        (g$7979$1XjQw core-prim . make-i/o-file-already-exists-error)
        (g$7875$1XjQw core-prim . make-i/o-error)
        (g$8039$1XjQw core-prim . make-i/o-encoding-error)
        (g$8024$1XjQw core-prim . make-i/o-decoding-error)
        (g$12969$1XjQw core-prim . make-custom-textual-output-port)
        (g$12968$1XjQw core-prim . make-custom-textual-input/output-port)
        (g$12967$1XjQw core-prim . make-custom-textual-input-port)
        (g$12966$1XjQw core-prim . make-custom-binary-output-port)
        (g$12965$1XjQw core-prim . make-custom-binary-input/output-port)
        (g$12964$1XjQw core-prim . make-custom-binary-input-port)
        (g$12963$1XjQw core-prim . make-bytevector)
        (g$12962$1XjQw core-prim . lookahead-u8)
        (g$12961$1XjQw core-prim . lookahead-char)
        (g$7904$1XjQw core-prim . i/o-write-error?)
        (g$7890$1XjQw core-prim . i/o-read-error?)
        (g$8010$1XjQw core-prim . i/o-port-error?)
        (g$7920$1XjQw core-prim . i/o-invalid-position-error?)
        (g$7921$1XjQw core-prim . i/o-error-position)
        (g$7937$1XjQw core-prim . i/o-filename-error?)
        (g$7952$1XjQw core-prim . i/o-file-protection-error?)
        (g$7966$1XjQw core-prim . i/o-file-is-read-only-error?)
        (g$7994$1XjQw core-prim . i/o-file-does-not-exist-error?)
        (g$7980$1XjQw core-prim . i/o-file-already-exists-error?)
        (g$7876$1XjQw core-prim . i/o-error?)
        (g$8011$1XjQw core-prim . i/o-error-port)
        (g$7938$1XjQw core-prim . i/o-error-filename)
        (g$8041$1XjQw core-prim . i/o-encoding-error?)
        (g$8042$1XjQw core-prim . i/o-encoding-error-char)
        (g$8025$1XjQw core-prim . i/o-decoding-error?)
        (g$12960$1XjQw core-prim . get-u8)
        (g$12959$1XjQw core-prim . get-string-n!)
        (g$12958$1XjQw core-prim . get-string-n)
        (g$12957$1XjQw core-prim . get-string-all)
        (g$12956$1XjQw core-prim . get-line)
        (g$12955$1XjQw core-prim . get-datum)
        (g$12954$1XjQw core-prim . get-char)
        (g$12953$1XjQw core-prim . get-bytevector-some)
        (g$12952$1XjQw core-prim . get-bytevector-n!)
        (g$12951$1XjQw core-prim . get-bytevector-n)
        (g$12950$1XjQw core-prim . get-bytevector-all)
        (g$12949$1XjQw core-prim . flush-output-port)
        (g$12948$1XjQw core-prim . close-port)
        (g$8048$1XjQw core-prim . call-with-string-output-port)
        (g$12947$1XjQw core-prim . call-with-port)
        (g$12946$1XjQw core-prim . call-with-bytevector-output-port)
        (g$12945$1XjQw core-prim . bytevector->string)
        (g$12944$1XjQw core-prim . buffer-mode?)
        (g$12943$1XjQw core-prim . binary-port?)
        (g$9526$1XjQw core-prim . scheme-report-environment)
        (g$7575$1XjQw core-prim . quotient)
        (g$9525$1XjQw core-prim . null-environment)
        (g$7576$1XjQw core-prim . remainder)
        (g$7577$1XjQw core-prim . modulo)
        (g$12942$1XjQw core-prim . inexact->exact)
        (g$7579$1XjQw core-prim . force)
        (g$12941$1XjQw core-prim . exact->inexact)
        (g$12940$1XjQw core-prim . exit)
        (g$12520$1XjQw core-prim . command-line)
        (g$12939$1XjQw core-prim . string-fill!)
        (g$12938$1XjQw core-prim . string-set!)
        (g$12937$1XjQw core-prim . set-cdr!)
        (g$12936$1XjQw core-prim . set-car!)
        (g$6567$1XjQw core-prim . remove)
        (g$6568$1XjQw core-prim . remv)
        (g$6548$1XjQw core-prim . remp)
        (g$6569$1XjQw core-prim . remq)
        (g$6547$1XjQw core-prim . partition)
        (g$6555$1XjQw core-prim . memv)
        (g$6554$1XjQw core-prim . memq)
        (g$6557$1XjQw core-prim . memp)
        (g$6556$1XjQw core-prim . member)
        (g$6561$1XjQw core-prim . exists)
        (g$6560$1XjQw core-prim . for-all)
        (g$6566$1XjQw core-prim . fold-right)
        (g$6565$1XjQw core-prim . fold-left)
        (g$6546$1XjQw core-prim . find)
        (g$6549$1XjQw core-prim . filter)
        (g$6564$1XjQw core-prim . cons*)
        (g$6551$1XjQw core-prim . assv)
        (g$6550$1XjQw core-prim . assq)
        (g$6553$1XjQw core-prim . assp)
        (g$6552$1XjQw core-prim . assoc)
        (g$12935$1XjQw core-prim . with-exception-handler)
        (g$12934$1XjQw core-prim . raise-continuable)
        (g$12933$1XjQw core-prim . raise)
        (g$9528$1XjQw core-prim . eval)
        (g$9524$1XjQw core-prim . environment)
        (g$8132$1XjQw core-prim . make-enumeration)
        (g$8139$1XjQw core-prim . enum-set=?)
        (g$8133$1XjQw core-prim . enum-set-universe)
        (g$8140$1XjQw core-prim . enum-set-union)
        (g$8138$1XjQw core-prim . enum-set-subset?)
        (g$8144$1XjQw core-prim . enum-set-projection)
        (g$8137$1XjQw core-prim . enum-set-member?)
        (g$8141$1XjQw core-prim . enum-set-intersection)
        (g$8134$1XjQw core-prim . enum-set-indexer)
        (g$8142$1XjQw core-prim . enum-set-difference)
        (g$8135$1XjQw core-prim . enum-set-constructor)
        (g$8143$1XjQw core-prim . enum-set-complement)
        (g$8136$1XjQw core-prim . enum-set->list)
        (g$7486$1XjQw core-prim . who-condition?)
        (g$7397$1XjQw core-prim . warning?)
        (g$7439$1XjQw core-prim . violation?)
        (g$7563$1XjQw core-prim . undefined-violation?)
        (g$7547$1XjQw core-prim . syntax-violation?)
        (g$7549$1XjQw core-prim . syntax-violation-subform)
        (g$7548$1XjQw core-prim . syntax-violation-form)
        (g$9545$1XjQw core-prim . syntax-violation)
        (g$12932$1XjQw core-prim . simple-conditions)
        (g$7411$1XjQw core-prim . serious-condition?)
        (g$7501$1XjQw core-prim . non-continuable-violation?)
        (g$7382$1XjQw core-prim . message-condition?)
        (g$7484$1XjQw core-prim . make-who-condition)
        (g$7396$1XjQw core-prim . make-warning)
        (g$7438$1XjQw core-prim . make-violation)
        (g$7562$1XjQw core-prim . make-undefined-violation)
        (g$7544$1XjQw core-prim . make-syntax-violation)
        (g$7410$1XjQw core-prim . make-serious-condition)
        (g$7500$1XjQw core-prim . make-non-continuable-violation)
        (g$7380$1XjQw core-prim . make-message-condition)
        (g$7528$1XjQw core-prim . make-lexical-violation)
        (g$7467$1XjQw core-prim . make-irritants-condition)
        (g$7514$1XjQw core-prim . make-implementation-restriction-violation)
        (g$7424$1XjQw core-prim . make-error)
        (g$7452$1XjQw core-prim . make-assertion-violation)
        (g$7529$1XjQw core-prim . lexical-violation?)
        (g$7469$1XjQw core-prim . irritants-condition?)
        (g$7515$1XjQw core-prim . implementation-restriction-violation?)
        (g$7425$1XjQw core-prim . error?)
        (g$7487$1XjQw core-prim . condition-who)
        (g$12931$1XjQw core-prim . condition-predicate)
        (g$7383$1XjQw core-prim . condition-message)
        (g$7470$1XjQw core-prim . condition-irritants)
        (g$12930$1XjQw core-prim . condition-accessor)
        (g$12929$1XjQw core-prim . condition)
        (g$7453$1XjQw core-prim . assertion-violation?)
        (g$12928$1XjQw core-prim . condition?)
        (g$12927$1XjQw core-prim . utf32->string)
        (g$12926$1XjQw core-prim . utf16->string)
        (g$12925$1XjQw core-prim . utf8->string)
        (g$12924$1XjQw core-prim . uint-list->bytevector)
        (g$12923$1XjQw core-prim . u8-list->bytevector)
        (g$12922$1XjQw core-prim . string->utf8)
        (g$12921$1XjQw core-prim . string->utf32)
        (g$12920$1XjQw core-prim . string->utf16)
        (g$12919$1XjQw core-prim . sint-list->bytevector)
        (g$7238$1XjQw core-prim . native-endianness)
        (g$12918$1XjQw core-prim . bytevector?)
        (g$12917$1XjQw core-prim . bytevector=?)
        (g$12916$1XjQw core-prim . bytevector-uint-set!)
        (g$12915$1XjQw core-prim . bytevector-uint-ref)
        (g$12914$1XjQw core-prim . bytevector-u8-set!)
        (g$12913$1XjQw core-prim . bytevector-u8-ref)
        (g$7259$1XjQw core-prim . bytevector-u64-set!)
        (g$7255$1XjQw core-prim . bytevector-u64-ref)
        (g$7261$1XjQw core-prim . bytevector-u64-native-set!)
        (g$7257$1XjQw core-prim . bytevector-u64-native-ref)
        (g$7251$1XjQw core-prim . bytevector-u32-set!)
        (g$7247$1XjQw core-prim . bytevector-u32-ref)
        (g$7253$1XjQw core-prim . bytevector-u32-native-set!)
        (g$7249$1XjQw core-prim . bytevector-u32-native-ref)
        (g$7243$1XjQw core-prim . bytevector-u16-set!)
        (g$7239$1XjQw core-prim . bytevector-u16-ref)
        (g$7245$1XjQw core-prim . bytevector-u16-native-set!)
        (g$7241$1XjQw core-prim . bytevector-u16-native-ref)
        (g$12912$1XjQw core-prim . bytevector-sint-set!)
        (g$12911$1XjQw core-prim . bytevector-sint-ref)
        (g$12910$1XjQw core-prim . bytevector-s8-set!)
        (g$12909$1XjQw core-prim . bytevector-s8-ref)
        (g$7260$1XjQw core-prim . bytevector-s64-set!)
        (g$7256$1XjQw core-prim . bytevector-s64-ref)
        (g$7262$1XjQw core-prim . bytevector-s64-native-set!)
        (g$7258$1XjQw core-prim . bytevector-s64-native-ref)
        (g$7252$1XjQw core-prim . bytevector-s32-set!)
        (g$7248$1XjQw core-prim . bytevector-s32-ref)
        (g$7254$1XjQw core-prim . bytevector-s32-native-set!)
        (g$7250$1XjQw core-prim . bytevector-s32-native-ref)
        (g$7244$1XjQw core-prim . bytevector-s16-set!)
        (g$7240$1XjQw core-prim . bytevector-s16-ref)
        (g$7246$1XjQw core-prim . bytevector-s16-native-set!)
        (g$7242$1XjQw core-prim . bytevector-s16-native-ref)
        (g$12908$1XjQw core-prim . bytevector-length)
        (g$12907$1XjQw core-prim . bytevector-ieee-single-set!)
        (g$12906$1XjQw core-prim . bytevector-ieee-single-ref)
        (g$7265$1XjQw core-prim . bytevector-ieee-single-native-set!)
        (g$7263$1XjQw core-prim . bytevector-ieee-single-native-ref)
        (g$12905$1XjQw core-prim . bytevector-ieee-double-set!)
        (g$12904$1XjQw core-prim . bytevector-ieee-double-ref)
        (g$7266$1XjQw core-prim . bytevector-ieee-double-native-set!)
        (g$7264$1XjQw core-prim . bytevector-ieee-double-native-ref)
        (g$12903$1XjQw core-prim . bytevector-fill!)
        (g$12902$1XjQw core-prim . bytevector-copy!)
        (g$12901$1XjQw core-prim . bytevector-copy)
        (g$12900$1XjQw core-prim . bytevector->uint-list)
        (g$12899$1XjQw core-prim . bytevector->u8-list)
        (g$12898$1XjQw core-prim . bytevector->sint-list)
        (g$7861$1XjQw core-prim . no-nans-violation?)
        (g$7847$1XjQw core-prim . no-infinities-violation?)
        (g$7860$1XjQw core-prim . make-no-nans-violation)
        (g$7846$1XjQw core-prim . make-no-infinities-violation)
        (g$12897$1XjQw core-prim . real->flonum)
        (g$12896$1XjQw core-prim . flzero?)
        (g$12895$1XjQw core-prim . fltruncate)
        (g$12894$1XjQw core-prim . fltan)
        (g$12893$1XjQw core-prim . flsqrt)
        (g$12892$1XjQw core-prim . flsin)
        (g$12891$1XjQw core-prim . flround)
        (g$12890$1XjQw core-prim . flpositive?)
        (g$12889$1XjQw core-prim . flonum?)
        (g$12888$1XjQw core-prim . flodd?)
        (g$12887$1XjQw core-prim . flnumerator)
        (g$12886$1XjQw core-prim . flnegative?)
        (g$12885$1XjQw core-prim . flnan?)
        (g$12884$1XjQw core-prim . flmod0)
        (g$12883$1XjQw core-prim . flmod)
        (g$12882$1XjQw core-prim . flmin)
        (g$12881$1XjQw core-prim . flmax)
        (g$12880$1XjQw core-prim . fllog)
        (g$12879$1XjQw core-prim . flinteger?)
        (g$12878$1XjQw core-prim . flinfinite?)
        (g$12877$1XjQw core-prim . flfloor)
        (g$12876$1XjQw core-prim . flfinite?)
        (g$12875$1XjQw core-prim . flexpt)
        (g$12874$1XjQw core-prim . flexp)
        (g$12873$1XjQw core-prim . fleven?)
        (g$12872$1XjQw core-prim . fldiv0-and-mod0)
        (g$12871$1XjQw core-prim . fldiv0)
        (g$12870$1XjQw core-prim . fldiv-and-mod)
        (g$12869$1XjQw core-prim . fldiv)
        (g$12868$1XjQw core-prim . fldenominator)
        (g$12867$1XjQw core-prim . flcos)
        (g$12866$1XjQw core-prim . flceiling)
        (g$12865$1XjQw core-prim . flatan)
        (g$12864$1XjQw core-prim . flasin)
        (g$12863$1XjQw core-prim . flacos)
        (g$12862$1XjQw core-prim . flabs)
        (g$12861$1XjQw core-prim . fl>?)
        (g$12860$1XjQw core-prim . fl>=?)
        (g$12859$1XjQw core-prim . fl=?)
        (g$12858$1XjQw core-prim . fl<?)
        (g$12857$1XjQw core-prim . fl<=?)
        (g$12856$1XjQw core-prim . fl/)
        (g$12855$1XjQw core-prim . fl-)
        (g$12854$1XjQw core-prim . fl+)
        (g$12853$1XjQw core-prim . fl*)
        (g$12852$1XjQw core-prim . fixnum->flonum)
        (g$12851$1XjQw core-prim . fxzero?)
        (g$12850$1XjQw core-prim . fxxor)
        (g$7793$1XjQw core-prim . fxrotate-bit-field)
        (g$12849$1XjQw core-prim . fxreverse-bit-field)
        (g$12848$1XjQw core-prim . fxpositive?)
        (g$12847$1XjQw core-prim . fxodd?)
        (g$12846$1XjQw core-prim . fxnot)
        (g$12845$1XjQw core-prim . fxnegative?)
        (g$12844$1XjQw core-prim . fxmod0)
        (g$12843$1XjQw core-prim . fxmod)
        (g$12842$1XjQw core-prim . fxmin)
        (g$12841$1XjQw core-prim . fxmax)
        (g$12840$1XjQw core-prim . fxlength)
        (g$12839$1XjQw core-prim . fxior)
        (g$7787$1XjQw core-prim . fxif)
        (g$12838$1XjQw core-prim . fxfirst-bit-set)
        (g$12837$1XjQw core-prim . fxeven?)
        (g$12836$1XjQw core-prim . fxdiv0-and-mod0)
        (g$12835$1XjQw core-prim . fxdiv0)
        (g$12834$1XjQw core-prim . fxdiv-and-mod)
        (g$12833$1XjQw core-prim . fxdiv)
        (g$7790$1XjQw core-prim . fxcopy-bit-field)
        (g$7788$1XjQw core-prim . fxcopy-bit)
        (g$12832$1XjQw core-prim . fxbit-set?)
        (g$7789$1XjQw core-prim . fxbit-field)
        (g$12831$1XjQw core-prim . fxbit-count)
        (g$7792$1XjQw core-prim . fxarithmetic-shift-right)
        (g$7791$1XjQw core-prim . fxarithmetic-shift-left)
        (g$12830$1XjQw core-prim . fxarithmetic-shift)
        (g$12829$1XjQw core-prim . fxand)
        (g$12828$1XjQw core-prim . fx>?)
        (g$12827$1XjQw core-prim . fx>=?)
        (g$12826$1XjQw core-prim . fx=?)
        (g$12825$1XjQw core-prim . fx<?)
        (g$12824$1XjQw core-prim . fx<=?)
        (g$7785$1XjQw core-prim . fx-/carry)
        (g$12823$1XjQw core-prim . fx-)
        (g$7786$1XjQw core-prim . fx+/carry)
        (g$12822$1XjQw core-prim . fx+)
        (g$7784$1XjQw core-prim . fx*/carry)
        (g$12821$1XjQw core-prim . fx*)
        (g$12820$1XjQw core-prim . greatest-fixnum)
        (g$12819$1XjQw core-prim . least-fixnum)
        (g$12818$1XjQw core-prim . fixnum-width)
        (g$12817$1XjQw core-prim . fixnum?)
        (g$7758$1XjQw core-prim . bitwise-rotate-bit-field)
        (g$12816$1XjQw core-prim . bitwise-reverse-bit-field)
        (g$12815$1XjQw core-prim . bitwise-length)
        (g$7752$1XjQw core-prim . bitwise-if)
        (g$12814$1XjQw core-prim . bitwise-first-bit-set)
        (g$7755$1XjQw core-prim . bitwise-copy-bit-field)
        (g$7753$1XjQw core-prim . bitwise-copy-bit)
        (g$12813$1XjQw core-prim . bitwise-bit-set?)
        (g$12812$1XjQw core-prim . bitwise-bit-field)
        (g$12811$1XjQw core-prim . bitwise-bit-count)
        (g$12810$1XjQw core-prim . bitwise-xor)
        (g$12809$1XjQw core-prim . bitwise-ior)
        (g$12808$1XjQw core-prim . bitwise-and)
        (g$12807$1XjQw core-prim . bitwise-not)
        (g$7757$1XjQw core-prim . bitwise-arithmetic-shift-right)
        (g$7756$1XjQw core-prim . bitwise-arithmetic-shift-left)
        (g$12806$1XjQw core-prim . bitwise-arithmetic-shift)
        (g$12805$1XjQw core-prim . zero?)
        (g$12804$1XjQw core-prim . vector?)
        (g$12803$1XjQw core-prim . vector-set!)
        (g$12802$1XjQw core-prim . vector-ref)
        (g$12801$1XjQw core-prim . vector-map)
        (g$12800$1XjQw core-prim . vector-length)
        (g$12799$1XjQw core-prim . vector-for-each)
        (g$12798$1XjQw core-prim . vector-fill!)
        (g$12797$1XjQw core-prim . vector->list)
        (g$12796$1XjQw core-prim . vector)
        (g$12795$1XjQw core-prim . values)
        (g$12794$1XjQw core-prim . truncate)
        (g$12793$1XjQw core-prim . tan)
        (g$12792$1XjQw core-prim . symbol?)
        (g$6747$1XjQw core-prim . symbol=?)
        (g$12791$1XjQw core-prim . symbol->string)
        (g$12790$1XjQw core-prim . substring)
        (g$12789$1XjQw core-prim . string?)
        (g$6744$1XjQw core-prim . string>?)
        (g$6746$1XjQw core-prim . string>=?)
        (g$6742$1XjQw core-prim . string=?)
        (g$6743$1XjQw core-prim . string<?)
        (g$6745$1XjQw core-prim . string<=?)
        (g$12788$1XjQw core-prim . string-ref)
        (g$12787$1XjQw core-prim . string-length)
        (g$12786$1XjQw core-prim . string-for-each)
        (g$12785$1XjQw core-prim . string-copy)
        (g$12784$1XjQw core-prim . string-append)
        (g$12783$1XjQw core-prim . string->symbol)
        (g$12782$1XjQw core-prim . string->number)
        (g$12781$1XjQw core-prim . string->list)
        (g$12780$1XjQw core-prim . string)
        (g$12779$1XjQw core-prim . sqrt)
        (g$12778$1XjQw core-prim . sin)
        (g$12777$1XjQw core-prim . round)
        (g$12776$1XjQw core-prim . reverse)
        (g$12775$1XjQw core-prim . real?)
        (g$12774$1XjQw core-prim . real-valued?)
        (g$12773$1XjQw core-prim . real-part)
        (g$6788$1XjQw core-prim . rationalize)
        (g$12772$1XjQw core-prim . rational?)
        (g$12771$1XjQw core-prim . rational-valued?)
        (g$12770$1XjQw core-prim . procedure?)
        (g$12769$1XjQw core-prim . positive?)
        (g$12768$1XjQw core-prim . pair?)
        (g$12767$1XjQw core-prim . odd?)
        (g$12766$1XjQw core-prim . numerator)
        (g$12765$1XjQw core-prim . number?)
        (g$12764$1XjQw core-prim . number->string)
        (g$12763$1XjQw core-prim . null?)
        (g$12762$1XjQw core-prim . not)
        (g$12761$1XjQw core-prim . negative?)
        (g$12760$1XjQw core-prim . nan?)
        (g$12759$1XjQw core-prim . min)
        (g$12758$1XjQw core-prim . max)
        (g$6562$1XjQw core-prim . map)
        (g$12757$1XjQw core-prim . make-vector)
        (g$12756$1XjQw core-prim . make-string)
        (g$12755$1XjQw core-prim . make-rectangular)
        (g$12754$1XjQw core-prim . make-polar)
        (g$12753$1XjQw core-prim . magnitude)
        (g$12752$1XjQw core-prim . log)
        (g$12751$1XjQw core-prim . list?)
        (g$6542$1XjQw core-prim . list-tail)
        (g$6543$1XjQw core-prim . list-ref)
        (g$12750$1XjQw core-prim . list->vector)
        (g$12749$1XjQw core-prim . list->string)
        (g$12748$1XjQw core-prim . list)
        (g$12747$1XjQw core-prim . length)
        (g$12746$1XjQw core-prim . lcm)
        (g$12745$1XjQw core-prim . integer?)
        (g$12744$1XjQw core-prim . integer-valued?)
        (g$12743$1XjQw core-prim . integer->char)
        (g$12742$1XjQw core-prim . infinite?)
        (g$12741$1XjQw core-prim . inexact?)
        (g$12740$1XjQw core-prim . inexact)
        (g$12739$1XjQw core-prim . imag-part)
        (g$12738$1XjQw core-prim . gcd)
        (g$6563$1XjQw core-prim . for-each)
        (g$12737$1XjQw core-prim . floor)
        (g$12736$1XjQw core-prim . finite?)
        (g$12735$1XjQw core-prim . expt)
        (g$12734$1XjQw core-prim . exp)
        (g$12733$1XjQw core-prim . exact?)
        (g$12732$1XjQw core-prim . exact-integer-sqrt)
        (g$12731$1XjQw core-prim . exact)
        (g$12730$1XjQw core-prim . even?)
        (g$12729$1XjQw core-prim . error)
        (g$12728$1XjQw core-prim . eqv?)
        (g$12727$1XjQw core-prim . equal?)
        (g$12726$1XjQw core-prim . eq?)
        (g$12725$1XjQw core-prim . dynamic-wind)
        (g$12724$1XjQw core-prim . div0-and-mod0)
        (g$12723$1XjQw core-prim . mod0)
        (g$12722$1XjQw core-prim . div0)
        (g$12721$1XjQw core-prim . div-and-mod)
        (g$12720$1XjQw core-prim . mod)
        (g$12719$1XjQw core-prim . div)
        (g$12718$1XjQw core-prim . denominator)
        (g$12717$1XjQw core-prim . cos)
        (g$12716$1XjQw core-prim . cons)
        (g$12715$1XjQw core-prim . complex?)
        (g$12714$1XjQw core-prim . char?)
        (g$6785$1XjQw core-prim . char>?)
        (g$6787$1XjQw core-prim . char>=?)
        (g$6783$1XjQw core-prim . char=?)
        (g$6784$1XjQw core-prim . char<?)
        (g$6786$1XjQw core-prim . char<=?)
        (g$12713$1XjQw core-prim . char->integer)
        (g$12712$1XjQw core-prim . ceiling)
        (g$12711$1XjQw core-prim . call-with-values)
        (g$12710$1XjQw core-prim . call/cc)
        (g$12709$1XjQw core-prim . call-with-current-continuation)
        (g$6707$1XjQw core-prim . cddddr)
        (g$6706$1XjQw core-prim . cdddar)
        (g$6705$1XjQw core-prim . cddadr)
        (g$6704$1XjQw core-prim . cddaar)
        (g$6703$1XjQw core-prim . cdaddr)
        (g$6702$1XjQw core-prim . cdadar)
        (g$6701$1XjQw core-prim . cdaadr)
        (g$6700$1XjQw core-prim . cdaaar)
        (g$6699$1XjQw core-prim . cadddr)
        (g$6698$1XjQw core-prim . caddar)
        (g$6697$1XjQw core-prim . cadadr)
        (g$6696$1XjQw core-prim . cadaar)
        (g$6695$1XjQw core-prim . caaddr)
        (g$6694$1XjQw core-prim . caadar)
        (g$6693$1XjQw core-prim . caaadr)
        (g$6692$1XjQw core-prim . caaaar)
        (g$6691$1XjQw core-prim . cdddr)
        (g$6690$1XjQw core-prim . cddar)
        (g$6689$1XjQw core-prim . cdadr)
        (g$6688$1XjQw core-prim . cdaar)
        (g$6687$1XjQw core-prim . caddr)
        (g$6686$1XjQw core-prim . cadar)
        (g$6685$1XjQw core-prim . caadr)
        (g$6684$1XjQw core-prim . caaar)
        (g$6683$1XjQw core-prim . cddr)
        (g$6682$1XjQw core-prim . cdar)
        (g$6681$1XjQw core-prim . cadr)
        (g$6680$1XjQw core-prim . caar)
        (g$12708$1XjQw core-prim . cdr)
        (g$12707$1XjQw core-prim . car)
        (g$12706$1XjQw core-prim . boolean?)
        (g$6748$1XjQw core-prim . boolean=?)
        (g$12705$1XjQw core-prim . atan)
        (g$12704$1XjQw core-prim . assertion-violation)
        (g$12703$1XjQw core-prim . asin)
        (g$12702$1XjQw core-prim . apply)
        (g$12701$1XjQw core-prim . append)
        (g$12700$1XjQw core-prim . angle)
        (g$12699$1XjQw core-prim . acos)
        (g$12698$1XjQw core-prim . abs)
        (g$12697$1XjQw core-prim . /)
        (g$12696$1XjQw core-prim . *)
        (g$12695$1XjQw core-prim . -)
        (g$12694$1XjQw core-prim . +)
        (g$12693$1XjQw core-prim . >=)
        (g$12692$1XjQw core-prim . >)
        (g$12691$1XjQw core-prim . =)
        (g$12690$1XjQw core-prim . <=)
        (g$12689$1XjQw core-prim . <)
        (g$12688$1XjQw core-prim . make-record-printer)
        (g$12687$1XjQw core-prim . eqv-hash)
        (g$12686$1XjQw core-prim . reverse!)
        (g$12685$1XjQw core-prim . deserialize-port)
        (g$12684$1XjQw core-prim . serialize-port)
        (g$8107$1XjQw core-prim . enum-set?)
        (g$7578$1XjQw core-prim . make-promise)
        (g$12522$1XjQw core-prim . load/args)
        (g$8218$1XjQw core-prim . printf)
        (g$8219$1XjQw core-prim . fprintf)
        (g$8220$1XjQw core-prim . format)
        (g$12683$1XjQw core-prim . procedure-form)
        (g$12682$1XjQw core-prim . procedure-environment)
        (g$12681$1XjQw core-prim . procedure-name)
        (g$12680$1XjQw core-prim . procedure-arity)
        (g$12679$1XjQw core-prim . gc-collect)
        (g$12678$1XjQw core-prim . clr-type?)
        (g$12677$1XjQw core-prim . get-clr-type)
        (g$12676$1XjQw core-prim . get-command-line)
        (g$12675$1XjQw core-prim . vector-append)
        (g$12674$1XjQw core-prim . vector-filter)
        (g$12673$1XjQw core-prim . vector-reverse!)
        (g$12672$1XjQw core-prim . vector-contains?)
        (g$12671$1XjQw core-prim . vector-index-of)
        (g$12670$1XjQw core-prim . vector-copy)
        (g$12669$1XjQw core-prim . vector-binary-search)
        (g$12668$1XjQw core-prim . string-ci-compare)
        (g$12667$1XjQw core-prim . string-compare)
        (g$12666$1XjQw core-prim . string-format)
        (g$12519$1XjQw core-prim . trace-printer)
        (g$12665$1XjQw core-prim . make-traced-procedure)
        (g$8240$1XjQw core-prim . make-traced-macro)
        (g$9541$1XjQw core-prim . assertion-error)
        (g$12664$1XjQw core-prim . time-it)
        (g$8247$1XjQw core-prim . make-parameter)
        (g$12663$1XjQw core-prim . library-locator)
        (g$12662$1XjQw core-prim . get-library-paths)
        (g$9520$1XjQw core-prim . environment-bindings)
        (g$9523$1XjQw core-prim . environment-symbols)
        (g$9519$1XjQw core-prim . interaction-environment-symbols)
        (g$12661$1XjQw core-prim . optimization-level)
        (g$8702$1XjQw core-prim . library-path)
        (g$9527$1XjQw core-prim . expand)
        (g$12660$1XjQw $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$12659$1XjQw $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$12658$1XjQw $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$12657$1XjQw $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$12656$1XjQw $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$12655$1XjQw
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$12654$1XjQw
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$12653$1XjQw
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$12652$1XjQw
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$12651$1XjQw $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$12650$1XjQw
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$12649$1XjQw $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$12648$1XjQw $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$12647$1XjQw $core-rtd &i/o-rtd &i/o-rcd)
        (g$12646$1XjQw $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12645$1XjQw $core-rtd &undefined-rtd &undefined-rcd)
        (g$12644$1XjQw $core-rtd &syntax-rtd &syntax-rcd)
        (g$12643$1XjQw $core-rtd &lexical-rtd &lexical-rcd)
        (g$12642$1XjQw
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$12641$1XjQw $core-rtd &who-rtd &who-rcd)
        (g$12640$1XjQw $core-rtd &irritants-rtd &irritants-rcd)
        (g$12639$1XjQw $core-rtd &assertion-rtd &assertion-rcd)
        (g$12638$1XjQw $core-rtd &violation-rtd &violation-rcd)
        (g$12637$1XjQw $core-rtd &error-rtd &error-rcd)
        (g$12636$1XjQw $core-rtd &serious-rtd &serious-rcd)
        (g$12635$1XjQw $core-rtd &warning-rtd &warning-rcd)
        (g$12634$1XjQw $core-rtd &message-rtd &message-rcd)
        (g$12633$1XjQw $core-rtd &condition-rtd &condition-rcd)
        (g$12632$1XjQw macro . define-condition-type)
        (g$12631$1XjQw macro . define-enumeration)
        (g$12630$1XjQw macro . define-record-type)
        (g$12629$1XjQw macro . parent-rtd)
        (g$12628$1XjQw macro . nongenerative)
        (g$12627$1XjQw macro . opaque)
        (g$12626$1XjQw macro . sealed)
        (g$12625$1XjQw macro . protocol)
        (g$12624$1XjQw macro . parent)
        (g$12623$1XjQw macro . immutable)
        (g$12622$1XjQw macro . mutable)
        (g$12621$1XjQw macro . fields)
        (g$12620$1XjQw macro . error-handling-mode)
        (g$12619$1XjQw macro . file-options)
        (g$12618$1XjQw macro . buffer-mode)
        (g$12617$1XjQw macro . eol-style)
        (g$12616$1XjQw macro . guard)
        (g$12615$1XjQw macro . trace-letrec-syntax)
        (g$12614$1XjQw macro . trace-let-syntax)
        (g$12613$1XjQw macro . trace-define-syntax)
        (g$12612$1XjQw macro . trace-define)
        (g$12611$1XjQw macro . trace-lambda)
        (g$12610$1XjQw macro . unsyntax-splicing)
        (g$12609$1XjQw macro . unsyntax)
        (g$12608$1XjQw macro . unquote-splicing)
        (g$12607$1XjQw macro . unquote)
        (g$12606$1XjQw macro . _)
        (g$12605$1XjQw macro . else)
        (g$12604$1XjQw macro . =>)
        (g$12603$1XjQw macro . ...)
        (g$12602$1XjQw macro . assert)
        (g$12601$1XjQw macro . endianness)
        (g$12600$1XjQw macro . delay)
        (g$12599$1XjQw macro . time)
        (g$12598$1XjQw macro . or)
        (g$12597$1XjQw macro . and)
        (g$12596$1XjQw macro . do)
        (g$12595$1XjQw macro . cond)
        (g$12594$1XjQw macro . let*)
        (g$12593$1XjQw macro . let)
        (g$12592$1XjQw macro . identifier-syntax)
        (g$12591$1XjQw macro . with-syntax)
        (g$12590$1XjQw macro . quasisyntax)
        (g$12589$1XjQw macro . quasiquote)
        (g$12588$1XjQw macro . syntax-rules)
        (g$12587$1XjQw macro . include-into)
        (g$12586$1XjQw macro . include)
        (g$12585$1XjQw macro . define-struct)
        (g$12584$1XjQw macro . let-values)
        (g$12583$1XjQw macro . let*-values)
        (g$12582$1XjQw core-macro . record-constructor-descriptor)
        (g$12581$1XjQw core-macro . record-type-descriptor)
        (g$12580$1XjQw core-macro . fluid-let-syntax)
        (g$12579$1XjQw macro . case)
        (g$12578$1XjQw macro . parameterize)
        (g$12577$1XjQw macro . unless)
        (g$12576$1XjQw macro . when)
        (g$12575$1XjQw core-macro . if)
        (g$12574$1XjQw core-macro . letrec*)
        (g$12573$1XjQw core-macro . letrec)
        (g$12572$1XjQw core-macro . type-descriptor)
        (g$12571$1XjQw core-macro . case-lambda)
        (g$12570$1XjQw core-macro . lambda)
        (g$12569$1XjQw core-macro . syntax)
        (g$12568$1XjQw core-macro . syntax-case)
        (g$12567$1XjQw core-macro . quote)
        (g$12566$1XjQw core-macro . foreign-call)
        (g$12565$1XjQw letrec-syntax)
        (g$12564$1XjQw let-syntax)
        (g$12563$1XjQw set!)
        (g$12562$1XjQw export)
        (g$12561$1XjQw import)
        (g$12560$1XjQw library)
        (g$12559$1XjQw begin)
        (g$12558$1XjQw module)
        (g$12557$1XjQw define-syntax)
        (g$12556$1XjQw define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7831$1XjQw
      'g$13199$1XjQw
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$13080$1XjQw)
        (eval-core . g$13079$1XjQw)
        (set-symbol-value! . g$13078$1XjQw)
        (symbol-value . g$13077$1XjQw)
        (gensym . g$13075$1XjQw)
        (void . g$13074$1XjQw))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$11911$1XjQw
     g$trace-printer$11951$1XjQw
     (g$make-parameter$7295$1XjQw write))
   (g$command-line$11912$1XjQw
     g$command-line$11952$1XjQw
     (g$make-parameter$7295$1XjQw (get-command-line)))
   (g$local-library-path$11913$1XjQw
     g$local-library-path$11953$1XjQw
     (case-lambda
       ((g$filename$11924$1XjQw)
        (cons
          (g$get-directory-name$6216$1XjQw g$filename$11924$1XjQw)
          (g$library-path$7815$1XjQw)))))
   (g$load/args$11914$1XjQw
     g$load/args$11954$1XjQw
     (case-lambda
       ((g$filename$11925$1XjQw . g$args$11926$1XjQw)
        (begin
          (apply
            g$load-r6rs-top-level$11921$1XjQw
            g$filename$11925$1XjQw
            'load
            g$args$11926$1XjQw)
          (void)))))
   (g$load$11915$1XjQw
     g$load$11955$1XjQw
     (case-lambda
       ((g$filename$11927$1XjQw)
        (begin
          (apply
            g$load-r6rs-top-level$11921$1XjQw
            g$filename$11927$1XjQw
            'load
            (cdr (g$command-line$11912$1XjQw)))
          (void)))))
   (g$ironscheme-build$11916$1XjQw
     g$ironscheme-build$11956$1XjQw
     (case-lambda (() (g$load$11915$1XjQw '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$11917$1XjQw
     g$eval-top-level$11957$1XjQw
     (case-lambda
       ((g$x$11928$1XjQw)
        (g$eval$11886$1XjQw
          g$x$11928$1XjQw
          (g$interaction-environment$11909$1XjQw)))))
   (g$compile-system-libraries$11918$1XjQw
     g$compile-system-libraries$11958$1XjQw
     (case-lambda
       (()
        (g$eval-top-level$11917$1XjQw
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$11919$1XjQw
     g$compile$11959$1XjQw
     (case-lambda
       ((g$filename$11929$1XjQw)
        (g$load-r6rs-top-level$11921$1XjQw g$filename$11929$1XjQw 'compile))))
   (g$compile->closure$11920$1XjQw
     g$compile->closure$11960$1XjQw
     (case-lambda
       ((g$filename$11930$1XjQw)
        (g$load-r6rs-top-level$11921$1XjQw g$filename$11930$1XjQw 'closure))))
   (g$load-r6rs-top-level$11921$1XjQw
     g$load-r6rs-top-level$11961$1XjQw
     (case-lambda
       ((g$filename$11931$1XjQw g$how$11932$1XjQw . g$args$11933$1XjQw)
        ((case-lambda
           ((g$library-path$11936$1XjQw g$library-path$11937$1XjQw)
            ((case-lambda
               ((g$swap$11938$1XjQw)
                (dynamic-wind
                  g$swap$11938$1XjQw
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$11939$1XjQw)
                         ((case-lambda
                            ((g$t$11940$1XjQw)
                             (if (g$memv$5750$1XjQw g$t$11940$1XjQw '(closure))
                               (g$pre-compile-r6rs-top-level$11908$1XjQw
                                 g$x*$11939$1XjQw)
                               (if (g$memv$5750$1XjQw g$t$11940$1XjQw '(load))
                                 ((case-lambda
                                    ((g$command-line$11943$1XjQw
                                       g$command-line$11944$1XjQw)
                                     ((case-lambda
                                        ((g$swap$11945$1XjQw)
                                         (dynamic-wind
                                           g$swap$11945$1XjQw
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$11907$1XjQw
                                                 g$x*$11939$1XjQw))))
                                           g$swap$11945$1XjQw)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$11946$1XjQw)
                                             (begin
                                               (g$command-line$11943$1XjQw
                                                 g$command-line$11944$1XjQw)
                                               (set! g$command-line$11944$1XjQw
                                                 g$t$11946$1XjQw))))
                                          (g$command-line$11943$1XjQw)))))))
                                  g$command-line$11912$1XjQw
                                  (cons
                                    g$filename$11931$1XjQw
                                    (g$map$5757$1XjQw
                                      (case-lambda
                                        ((g$x$11947$1XjQw)
                                         (g$format$7191$1XjQw
                                           '"~a"
                                           g$x$11947$1XjQw)))
                                      g$args$11933$1XjQw)))
                                 (if (g$memv$5750$1XjQw
                                       g$t$11940$1XjQw
                                       '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$11907$1XjQw
                                       g$x*$11939$1XjQw)
                                     (g$serialize-all$7819$1XjQw
                                       serialize-library
                                       g$compile-core-expr$7542$1XjQw))
                                   (if '#f '#f (void)))))))
                          g$how$11932$1XjQw)))
                      (g$with-input-from-file$7018$1XjQw
                        g$filename$11931$1XjQw
                        (case-lambda
                          (()
                           ((letrec ((g$f$11948$1XjQw
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$11949$1XjQw)
                                              (if (eof-object? g$x$11949$1XjQw)
                                                '()
                                                (cons
                                                  g$x$11949$1XjQw
                                                  (g$f$11948$1XjQw)))))
                                           (read-annotated))))))
                              g$f$11948$1XjQw))))))))
                  g$swap$11938$1XjQw)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$11950$1XjQw)
                    (begin
                      (g$library-path$11936$1XjQw g$library-path$11937$1XjQw)
                      (set! g$library-path$11937$1XjQw g$t$11950$1XjQw))))
                 (g$library-path$11936$1XjQw)))))))
         g$library-path$7815$1XjQw
         (g$local-library-path$11913$1XjQw g$filename$11931$1XjQw)))))
   (g$fo$11922$1XjQw
     g$fo$11962$1XjQw
     (g$make-enumeration$7153$1XjQw '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$7820$1XjQw
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$11923$1XjQw)
         (if (g$serious-condition?$6478$1XjQw g$ex$11923$1XjQw)
           (raise g$ex$11923$1XjQw)
           (begin (display g$ex$11923$1XjQw) (newline))))))
    (set-symbol-value! 'load g$load$11915$1XjQw)
    (set-symbol-value! 'compile g$compile$11919$1XjQw)
    (set-symbol-value! 'compile->closure g$compile->closure$11920$1XjQw)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$11917$1XjQw)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$11877$1XjQw)
    (set-symbol-value! 'expanded2core g$expanded->core$7541$1XjQw)
    (set-symbol-value! 'trace-printer g$trace-printer$11911$1XjQw)
    (g$file-options-constructor$7296$1XjQw
      (g$enum-set-constructor$7156$1XjQw g$fo$11922$1XjQw))
    (g$library-path$7815$1XjQw (get-library-paths))))

