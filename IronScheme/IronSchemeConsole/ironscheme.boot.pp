;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme lists)
  ((g$list-tail$4906$bmrAn
     g$list-tail$5043$bmrAn
     (case-lambda
       ((g$lst$4934$bmrAn g$index$4935$bmrAn)
        (if ((case-lambda
               ((g$t$4936$bmrAn)
                (if g$t$4936$bmrAn
                  g$t$4936$bmrAn
                  (begin '#f (g$negative?$5292$bmrAn g$index$4935$bmrAn)))))
             (null? g$lst$4934$bmrAn))
          (assertion-violation
            'list-tail
            '"index out of range"
            g$lst$4934$bmrAn
            g$index$4935$bmrAn)
          (if (g$zero?$5293$bmrAn g$index$4935$bmrAn)
            g$lst$4934$bmrAn
            (g$list-tail$4906$bmrAn
              (cdr g$lst$4934$bmrAn)
              (- g$index$4935$bmrAn '1)))))))
   (g$list-ref$4907$bmrAn
     g$list-ref$5044$bmrAn
     (case-lambda
       ((g$lst$4937$bmrAn g$index$4938$bmrAn)
        (car (g$list-tail$4906$bmrAn g$lst$4937$bmrAn g$index$4938$bmrAn)))))
   (g$last-pair$4908$bmrAn
     g$last-pair$5045$bmrAn
     (case-lambda
       ((g$lst$4939$bmrAn)
        (if (null? g$lst$4939$bmrAn)
          g$lst$4939$bmrAn
          (if (null? (cdr g$lst$4939$bmrAn))
            g$lst$4939$bmrAn
            (g$last-pair$4908$bmrAn (cdr g$lst$4939$bmrAn)))))))
   (g$make-list$4909$bmrAn
     g$make-list$5046$bmrAn
     (case-lambda
       ((g$n$4940$bmrAn) (list->vector (make-vector g$n$4940$bmrAn)))
       ((g$n$4941$bmrAn g$fill$4942$bmrAn)
        (list->vector (make-vector g$n$4941$bmrAn g$fill$4942$bmrAn)))))
   (g$find$4910$bmrAn
     g$find$5047$bmrAn
     (case-lambda
       ((g$proc$4943$bmrAn g$l$4944$bmrAn)
        (if (null? g$l$4944$bmrAn)
          '#f
          ((case-lambda
             ((g$e$4945$bmrAn g$r$4946$bmrAn g$proc$4947$bmrAn)
              (if (g$proc$4947$bmrAn g$e$4945$bmrAn)
                g$e$4945$bmrAn
                (g$find$4910$bmrAn g$proc$4947$bmrAn g$r$4946$bmrAn))))
           (car g$l$4944$bmrAn)
           (cdr g$l$4944$bmrAn)
           g$proc$4943$bmrAn)))))
   (g$partition$4911$bmrAn
     g$partition$5048$bmrAn
     (case-lambda
       ((g$proc$4948$bmrAn g$l$4949$bmrAn)
        ((letrec ((g$f$4950$bmrAn
                    (case-lambda
                      ((g$l$4951$bmrAn g$a$4952$bmrAn g$b$4953$bmrAn)
                       (if (null? g$l$4951$bmrAn)
                         (values
                           (reverse! g$a$4952$bmrAn)
                           (reverse! g$b$4953$bmrAn))
                         ((case-lambda
                            ((g$e$4954$bmrAn)
                             (if (g$proc$4948$bmrAn g$e$4954$bmrAn)
                               (g$f$4950$bmrAn
                                 (cdr g$l$4951$bmrAn)
                                 (cons g$e$4954$bmrAn g$a$4952$bmrAn)
                                 g$b$4953$bmrAn)
                               (g$f$4950$bmrAn
                                 (cdr g$l$4951$bmrAn)
                                 g$a$4952$bmrAn
                                 (cons g$e$4954$bmrAn g$b$4953$bmrAn)))))
                          (car g$l$4951$bmrAn)))))))
           g$f$4950$bmrAn)
         g$l$4949$bmrAn
         '()
         '()))))
   (g$remp$4912$bmrAn
     g$remp$5049$bmrAn
     (case-lambda
       ((g$proc$4955$bmrAn g$l$4956$bmrAn)
        ((letrec ((g$f$4957$bmrAn
                    (case-lambda
                      ((g$l$4958$bmrAn g$a$4959$bmrAn)
                       (if (null? g$l$4958$bmrAn)
                         (reverse! g$a$4959$bmrAn)
                         ((case-lambda
                            ((g$e$4960$bmrAn)
                             (if (g$proc$4955$bmrAn g$e$4960$bmrAn)
                               (g$f$4957$bmrAn
                                 (cdr g$l$4958$bmrAn)
                                 g$a$4959$bmrAn)
                               (g$f$4957$bmrAn
                                 (cdr g$l$4958$bmrAn)
                                 (cons g$e$4960$bmrAn g$a$4959$bmrAn)))))
                          (car g$l$4958$bmrAn)))))))
           g$f$4957$bmrAn)
         g$l$4956$bmrAn
         '()))))
   (g$filter$4913$bmrAn
     g$filter$5050$bmrAn
     (case-lambda
       ((g$proc$4961$bmrAn g$l$4962$bmrAn)
        ((letrec ((g$f$4963$bmrAn
                    (case-lambda
                      ((g$l$4964$bmrAn g$a$4965$bmrAn)
                       (if (null? g$l$4964$bmrAn)
                         (reverse! g$a$4965$bmrAn)
                         ((case-lambda
                            ((g$e$4966$bmrAn)
                             (if (g$proc$4961$bmrAn g$e$4966$bmrAn)
                               (g$f$4963$bmrAn
                                 (cdr g$l$4964$bmrAn)
                                 (cons g$e$4966$bmrAn g$a$4965$bmrAn))
                               (g$f$4963$bmrAn
                                 (cdr g$l$4964$bmrAn)
                                 g$a$4965$bmrAn))))
                          (car g$l$4964$bmrAn)))))))
           g$f$4963$bmrAn)
         g$l$4962$bmrAn
         '()))))
   (g$assq$4914$bmrAn
     g$assq$5051$bmrAn
     (case-lambda
       ((g$obj$4967$bmrAn g$lst$4968$bmrAn)
        (if (null? g$lst$4968$bmrAn)
          '#f
          ((case-lambda
             ((g$obj$4969$bmrAn g$t$4970$bmrAn g$r$4971$bmrAn)
              (if (eq? g$obj$4969$bmrAn (car g$t$4970$bmrAn))
                g$t$4970$bmrAn
                (g$assq$4914$bmrAn g$obj$4969$bmrAn g$r$4971$bmrAn))))
           g$obj$4967$bmrAn
           (car g$lst$4968$bmrAn)
           (cdr g$lst$4968$bmrAn))))))
   (g$assv$4915$bmrAn
     g$assv$5052$bmrAn
     (case-lambda
       ((g$obj$4972$bmrAn g$lst$4973$bmrAn)
        (if (null? g$lst$4973$bmrAn)
          '#f
          ((case-lambda
             ((g$obj$4974$bmrAn g$t$4975$bmrAn g$r$4976$bmrAn)
              (if (eqv? g$obj$4974$bmrAn (car g$t$4975$bmrAn))
                g$t$4975$bmrAn
                (g$assv$4915$bmrAn g$obj$4974$bmrAn g$r$4976$bmrAn))))
           g$obj$4972$bmrAn
           (car g$lst$4973$bmrAn)
           (cdr g$lst$4973$bmrAn))))))
   (g$assoc$4916$bmrAn
     g$assoc$5053$bmrAn
     (case-lambda
       ((g$obj$4977$bmrAn g$lst$4978$bmrAn)
        (if (null? g$lst$4978$bmrAn)
          '#f
          ((case-lambda
             ((g$obj$4979$bmrAn g$t$4980$bmrAn g$r$4981$bmrAn)
              (if (equal? g$obj$4979$bmrAn (car g$t$4980$bmrAn))
                g$t$4980$bmrAn
                (g$assoc$4916$bmrAn g$obj$4979$bmrAn g$r$4981$bmrAn))))
           g$obj$4977$bmrAn
           (car g$lst$4978$bmrAn)
           (cdr g$lst$4978$bmrAn))))))
   (g$assp$4917$bmrAn
     g$assp$5054$bmrAn
     (case-lambda
       ((g$p?$4982$bmrAn g$lst$4983$bmrAn)
        (if (null? g$lst$4983$bmrAn)
          '#f
          ((case-lambda
             ((g$p?$4984$bmrAn g$t$4985$bmrAn g$r$4986$bmrAn)
              (if (g$p?$4984$bmrAn (car g$t$4985$bmrAn))
                g$t$4985$bmrAn
                (g$assp$4917$bmrAn g$p?$4984$bmrAn g$r$4986$bmrAn))))
           g$p?$4982$bmrAn
           (car g$lst$4983$bmrAn)
           (cdr g$lst$4983$bmrAn))))))
   (g$memq$4918$bmrAn
     g$memq$5055$bmrAn
     (case-lambda
       ((g$obj$4987$bmrAn g$lst$4988$bmrAn)
        (if (null? g$lst$4988$bmrAn)
          '#f
          (if (eq? g$obj$4987$bmrAn (car g$lst$4988$bmrAn))
            g$lst$4988$bmrAn
            (g$memq$4918$bmrAn g$obj$4987$bmrAn (cdr g$lst$4988$bmrAn)))))))
   (g$memv$4919$bmrAn
     g$memv$5056$bmrAn
     (case-lambda
       ((g$obj$4989$bmrAn g$lst$4990$bmrAn)
        (if (null? g$lst$4990$bmrAn)
          '#f
          (if (eqv? g$obj$4989$bmrAn (car g$lst$4990$bmrAn))
            g$lst$4990$bmrAn
            (g$memv$4919$bmrAn g$obj$4989$bmrAn (cdr g$lst$4990$bmrAn)))))))
   (g$member$4920$bmrAn
     g$member$5057$bmrAn
     (case-lambda
       ((g$obj$4991$bmrAn g$lst$4992$bmrAn)
        (if (null? g$lst$4992$bmrAn)
          '#f
          (if (equal? g$obj$4991$bmrAn (car g$lst$4992$bmrAn))
            g$lst$4992$bmrAn
            (g$member$4920$bmrAn g$obj$4991$bmrAn (cdr g$lst$4992$bmrAn)))))))
   (g$memp$4921$bmrAn
     g$memp$5058$bmrAn
     (case-lambda
       ((g$p?$4993$bmrAn g$lst$4994$bmrAn)
        (if (null? g$lst$4994$bmrAn)
          '#f
          (if (g$p?$4993$bmrAn (car g$lst$4994$bmrAn))
            g$lst$4994$bmrAn
            (g$memp$4921$bmrAn g$p?$4993$bmrAn (cdr g$lst$4994$bmrAn)))))))
   (g$all-empty?$4922$bmrAn
     g$all-empty?$5059$bmrAn
     (case-lambda
       ((g$ls$4995$bmrAn)
        ((case-lambda
           ((g$t$4996$bmrAn)
            (if g$t$4996$bmrAn
              g$t$4996$bmrAn
              (begin
                '#f
                (if (null? (car g$ls$4995$bmrAn))
                  (begin '#f (g$all-empty?$4922$bmrAn (cdr g$ls$4995$bmrAn)))
                  '#f)))))
         (null? g$ls$4995$bmrAn)))))
   (g$split$4923$bmrAn
     g$split$5060$bmrAn
     (case-lambda
       ((g$ls$4997$bmrAn)
        (if (null? g$ls$4997$bmrAn)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$4923$bmrAn (cdr g$ls$4997$bmrAn))))
            (case-lambda
              ((g$cars$4998$bmrAn g$cdrs$4999$bmrAn)
               ((case-lambda
                  ((g$a$5000$bmrAn)
                   (values
                     (cons (car g$a$5000$bmrAn) g$cars$4998$bmrAn)
                     (cons (cdr g$a$5000$bmrAn) g$cdrs$4999$bmrAn))))
                (car g$ls$4997$bmrAn)))))))))
   (g$for-all$4924$bmrAn
     g$for-all$5061$bmrAn
     (case-lambda
       ((g$f$5001$bmrAn . g$args$5002$bmrAn)
        (if (g$all-empty?$4922$bmrAn g$args$5002$bmrAn)
          '#t
          (call-with-values
            (case-lambda (() (g$split$4923$bmrAn g$args$5002$bmrAn)))
            (case-lambda
              ((g$cars$5003$bmrAn g$cdrs$5004$bmrAn)
               (if (g$all-empty?$4922$bmrAn g$cdrs$5004$bmrAn)
                 (apply g$f$5001$bmrAn g$cars$5003$bmrAn)
                 (if (apply g$f$5001$bmrAn g$cars$5003$bmrAn)
                   (begin
                     '#f
                     (apply
                       g$for-all$4924$bmrAn
                       g$f$5001$bmrAn
                       g$cdrs$5004$bmrAn))
                   '#f)))))))))
   (g$exists$4925$bmrAn
     g$exists$5062$bmrAn
     (case-lambda
       ((g$f$5005$bmrAn . g$args$5006$bmrAn)
        (if (g$all-empty?$4922$bmrAn g$args$5006$bmrAn)
          '#f
          (call-with-values
            (case-lambda (() (g$split$4923$bmrAn g$args$5006$bmrAn)))
            (case-lambda
              ((g$cars$5007$bmrAn g$cdrs$5008$bmrAn)
               ((case-lambda
                  ((g$t$5009$bmrAn)
                   (if g$t$5009$bmrAn
                     g$t$5009$bmrAn
                     (begin
                       '#f
                       (apply
                         g$exists$4925$bmrAn
                         g$f$5005$bmrAn
                         g$cdrs$5008$bmrAn)))))
                (apply g$f$5005$bmrAn g$cars$5007$bmrAn)))))))))
   (g$map$4926$bmrAn
     g$map$5063$bmrAn
     (case-lambda
       ((g$proc$5010$bmrAn . g$lists$5011$bmrAn)
        ((letrec ((g$f$5012$bmrAn
                    (case-lambda
                      ((g$lists$5013$bmrAn g$a$5014$bmrAn)
                       (if (g$all-empty?$4922$bmrAn g$lists$5013$bmrAn)
                         (reverse! g$a$5014$bmrAn)
                         (call-with-values
                           (case-lambda
                             (() (g$split$4923$bmrAn g$lists$5013$bmrAn)))
                           (case-lambda
                             ((g$cars$5015$bmrAn g$cdrs$5016$bmrAn)
                              (g$f$5012$bmrAn
                                g$cdrs$5016$bmrAn
                                (cons
                                  (apply g$proc$5010$bmrAn g$cars$5015$bmrAn)
                                  g$a$5014$bmrAn))))))))))
           g$f$5012$bmrAn)
         g$lists$5011$bmrAn
         '()))))
   (g$for-each$4927$bmrAn
     g$for-each$5064$bmrAn
     (case-lambda
       ((g$f$5017$bmrAn . g$args$5018$bmrAn)
        (if (not (g$all-empty?$4922$bmrAn g$args$5018$bmrAn))
          (call-with-values
            (case-lambda (() (g$split$4923$bmrAn g$args$5018$bmrAn)))
            (case-lambda
              ((g$cars$5019$bmrAn g$cdrs$5020$bmrAn)
               (begin
                 (apply g$f$5017$bmrAn g$cars$5019$bmrAn)
                 (apply
                   g$for-each$4927$bmrAn
                   g$f$5017$bmrAn
                   g$cdrs$5020$bmrAn)))))
          (void)))))
   (g$cons*$4928$bmrAn
     g$cons*$5065$bmrAn
     (case-lambda
       ((g$a$5021$bmrAn . g$rest$5022$bmrAn)
        ((letrec ((g$f$5023$bmrAn
                    (case-lambda
                      ((g$a$5024$bmrAn g$rest$5025$bmrAn)
                       (if (null? g$rest$5025$bmrAn)
                         g$a$5024$bmrAn
                         (cons
                           g$a$5024$bmrAn
                           (g$f$5023$bmrAn
                             (car g$rest$5025$bmrAn)
                             (cdr g$rest$5025$bmrAn))))))))
           g$f$5023$bmrAn)
         g$a$5021$bmrAn
         g$rest$5022$bmrAn))))
   (g$fold-left$4929$bmrAn
     g$fold-left$5066$bmrAn
     (case-lambda
       ((g$combine$5026$bmrAn
          g$nil$5027$bmrAn
          g$list1$5028$bmrAn
          .
          g$lists$5029$bmrAn)
        (if (null? g$list1$5028$bmrAn)
          g$nil$5027$bmrAn
          (apply
            g$fold-left$4929$bmrAn
            (g$cons*$4928$bmrAn
              g$combine$5026$bmrAn
              (apply
                g$combine$5026$bmrAn
                (g$cons*$4928$bmrAn
                  g$nil$5027$bmrAn
                  (car g$list1$5028$bmrAn)
                  (g$map$4926$bmrAn car g$lists$5029$bmrAn)))
              (cdr g$list1$5028$bmrAn)
              (g$map$4926$bmrAn cdr g$lists$5029$bmrAn)))))))
   (g$fold-right$4930$bmrAn
     g$fold-right$5067$bmrAn
     (case-lambda
       ((g$combine$5030$bmrAn
          g$nil$5031$bmrAn
          g$list1$5032$bmrAn
          .
          g$lists$5033$bmrAn)
        (if (null? g$list1$5032$bmrAn)
          g$nil$5031$bmrAn
          (apply
            g$combine$5030$bmrAn
            (append
              (list (car g$list1$5032$bmrAn))
              (g$map$4926$bmrAn car g$lists$5033$bmrAn)
              (list
                (apply
                  g$fold-right$4930$bmrAn
                  (g$cons*$4928$bmrAn
                    g$combine$5030$bmrAn
                    g$nil$5031$bmrAn
                    (cdr g$list1$5032$bmrAn)
                    (g$map$4926$bmrAn cdr g$lists$5033$bmrAn))))))))))
   (g$remove$4931$bmrAn
     g$remove$5068$bmrAn
     (case-lambda
       ((g$obj$5034$bmrAn g$list$5035$bmrAn)
        (g$remp$4912$bmrAn
          (case-lambda
            ((g$x$5036$bmrAn) (equal? g$obj$5034$bmrAn g$x$5036$bmrAn)))
          g$list$5035$bmrAn))))
   (g$remv$4932$bmrAn
     g$remv$5069$bmrAn
     (case-lambda
       ((g$obj$5037$bmrAn g$list$5038$bmrAn)
        (g$remp$4912$bmrAn
          (case-lambda
            ((g$x$5039$bmrAn) (eqv? g$obj$5037$bmrAn g$x$5039$bmrAn)))
          g$list$5038$bmrAn))))
   (g$remq$4933$bmrAn
     g$remq$5070$bmrAn
     (case-lambda
       ((g$obj$5040$bmrAn g$list$5041$bmrAn)
        (g$remp$4912$bmrAn
          (case-lambda ((g$x$5042$bmrAn) (eq? g$obj$5040$bmrAn g$x$5042$bmrAn)))
          g$list$5041$bmrAn)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$caar$5071$bmrAn
     g$caar$5263$bmrAn
     (case-lambda ((g$x$5135$bmrAn) (car (car g$x$5135$bmrAn)))))
   (g$cadr$5072$bmrAn
     g$cadr$5264$bmrAn
     (case-lambda ((g$x$5136$bmrAn) (car (cdr g$x$5136$bmrAn)))))
   (g$cdar$5073$bmrAn
     g$cdar$5265$bmrAn
     (case-lambda ((g$x$5137$bmrAn) (cdr (car g$x$5137$bmrAn)))))
   (g$cddr$5074$bmrAn
     g$cddr$5266$bmrAn
     (case-lambda ((g$x$5138$bmrAn) (cdr (cdr g$x$5138$bmrAn)))))
   (g$caaar$5075$bmrAn
     g$caaar$5267$bmrAn
     (case-lambda
       ((g$x$5139$bmrAn) (g$caar$5071$bmrAn (car g$x$5139$bmrAn)))))
   (g$caadr$5076$bmrAn
     g$caadr$5268$bmrAn
     (case-lambda
       ((g$x$5140$bmrAn) (g$caar$5071$bmrAn (cdr g$x$5140$bmrAn)))))
   (g$cadar$5077$bmrAn
     g$cadar$5269$bmrAn
     (case-lambda
       ((g$x$5141$bmrAn) (g$cadr$5072$bmrAn (car g$x$5141$bmrAn)))))
   (g$caddr$5078$bmrAn
     g$caddr$5270$bmrAn
     (case-lambda
       ((g$x$5142$bmrAn) (g$cadr$5072$bmrAn (cdr g$x$5142$bmrAn)))))
   (g$cdaar$5079$bmrAn
     g$cdaar$5271$bmrAn
     (case-lambda
       ((g$x$5143$bmrAn) (g$cdar$5073$bmrAn (car g$x$5143$bmrAn)))))
   (g$cdadr$5080$bmrAn
     g$cdadr$5272$bmrAn
     (case-lambda
       ((g$x$5144$bmrAn) (g$cdar$5073$bmrAn (cdr g$x$5144$bmrAn)))))
   (g$cddar$5081$bmrAn
     g$cddar$5273$bmrAn
     (case-lambda
       ((g$x$5145$bmrAn) (g$cddr$5074$bmrAn (car g$x$5145$bmrAn)))))
   (g$cdddr$5082$bmrAn
     g$cdddr$5274$bmrAn
     (case-lambda
       ((g$x$5146$bmrAn) (g$cddr$5074$bmrAn (cdr g$x$5146$bmrAn)))))
   (g$caaaar$5083$bmrAn
     g$caaaar$5275$bmrAn
     (case-lambda
       ((g$x$5147$bmrAn) (g$caaar$5075$bmrAn (car g$x$5147$bmrAn)))))
   (g$caaadr$5084$bmrAn
     g$caaadr$5276$bmrAn
     (case-lambda
       ((g$x$5148$bmrAn) (g$caaar$5075$bmrAn (cdr g$x$5148$bmrAn)))))
   (g$caadar$5085$bmrAn
     g$caadar$5277$bmrAn
     (case-lambda
       ((g$x$5149$bmrAn) (g$caadr$5076$bmrAn (car g$x$5149$bmrAn)))))
   (g$caaddr$5086$bmrAn
     g$caaddr$5278$bmrAn
     (case-lambda
       ((g$x$5150$bmrAn) (g$caadr$5076$bmrAn (cdr g$x$5150$bmrAn)))))
   (g$cadaar$5087$bmrAn
     g$cadaar$5279$bmrAn
     (case-lambda
       ((g$x$5151$bmrAn) (g$cadar$5077$bmrAn (car g$x$5151$bmrAn)))))
   (g$cadadr$5088$bmrAn
     g$cadadr$5280$bmrAn
     (case-lambda
       ((g$x$5152$bmrAn) (g$cadar$5077$bmrAn (cdr g$x$5152$bmrAn)))))
   (g$caddar$5089$bmrAn
     g$caddar$5281$bmrAn
     (case-lambda
       ((g$x$5153$bmrAn) (g$caddr$5078$bmrAn (car g$x$5153$bmrAn)))))
   (g$cadddr$5090$bmrAn
     g$cadddr$5282$bmrAn
     (case-lambda
       ((g$x$5154$bmrAn) (g$caddr$5078$bmrAn (cdr g$x$5154$bmrAn)))))
   (g$cdaaar$5091$bmrAn
     g$cdaaar$5283$bmrAn
     (case-lambda
       ((g$x$5155$bmrAn) (g$cdaar$5079$bmrAn (car g$x$5155$bmrAn)))))
   (g$cdaadr$5092$bmrAn
     g$cdaadr$5284$bmrAn
     (case-lambda
       ((g$x$5156$bmrAn) (g$cdaar$5079$bmrAn (cdr g$x$5156$bmrAn)))))
   (g$cdadar$5093$bmrAn
     g$cdadar$5285$bmrAn
     (case-lambda
       ((g$x$5157$bmrAn) (g$cdadr$5080$bmrAn (car g$x$5157$bmrAn)))))
   (g$cdaddr$5094$bmrAn
     g$cdaddr$5286$bmrAn
     (case-lambda
       ((g$x$5158$bmrAn) (g$cdadr$5080$bmrAn (cdr g$x$5158$bmrAn)))))
   (g$cddaar$5095$bmrAn
     g$cddaar$5287$bmrAn
     (case-lambda
       ((g$x$5159$bmrAn) (g$cddar$5081$bmrAn (car g$x$5159$bmrAn)))))
   (g$cddadr$5096$bmrAn
     g$cddadr$5288$bmrAn
     (case-lambda
       ((g$x$5160$bmrAn) (g$cddar$5081$bmrAn (cdr g$x$5160$bmrAn)))))
   (g$cdddar$5097$bmrAn
     g$cdddar$5289$bmrAn
     (case-lambda
       ((g$x$5161$bmrAn) (g$cdddr$5082$bmrAn (car g$x$5161$bmrAn)))))
   (g$cddddr$5098$bmrAn
     g$cddddr$5290$bmrAn
     (case-lambda
       ((g$x$5162$bmrAn) (g$cdddr$5082$bmrAn (cdr g$x$5162$bmrAn)))))
   (g$positive?$5099$bmrAn
     g$positive?$5291$bmrAn
     (case-lambda
       ((g$r$5163$bmrAn)
        (begin
          (if (not (real-valued? g$r$5163$bmrAn))
            (assertion-violation 'positive? '"not a real" g$r$5163$bmrAn)
            (void))
          (< '0 g$r$5163$bmrAn)))))
   (g$negative?$5100$bmrAn
     g$negative?$5292$bmrAn
     (case-lambda
       ((g$r$5164$bmrAn)
        (begin
          (if (not (real-valued? g$r$5164$bmrAn))
            (assertion-violation 'negative? '"not a real" g$r$5164$bmrAn)
            (void))
          (> '0 g$r$5164$bmrAn)))))
   (g$zero?$5101$bmrAn
     g$zero?$5293$bmrAn
     (case-lambda
       ((g$r$5165$bmrAn)
        (begin
          (if (not (real-valued? g$r$5165$bmrAn))
            (assertion-violation 'zero? '"not a real" g$r$5165$bmrAn)
            (void))
          (= '0 g$r$5165$bmrAn)))))
   (g$even?$5102$bmrAn
     g$even?$5294$bmrAn
     (case-lambda
       ((g$n$5166$bmrAn)
        (begin
          (if (not (integer-valued? g$n$5166$bmrAn))
            (assertion-violation 'even? '"not a integer" g$n$5166$bmrAn)
            (void))
          (= '0 (mod g$n$5166$bmrAn '2))))))
   (g$odd?$5103$bmrAn
     g$odd?$5295$bmrAn
     (case-lambda
       ((g$n$5167$bmrAn)
        (begin
          (if (not (integer-valued? g$n$5167$bmrAn))
            (assertion-violation 'odd? '"not a integer" g$n$5167$bmrAn)
            (void))
          (= '1 (mod g$n$5167$bmrAn '2))))))
   (g$max$5104$bmrAn
     g$max$5296$bmrAn
     (case-lambda
       ((g$a$5168$bmrAn . g$rest$5169$bmrAn)
        (g$fold-left$5066$bmrAn
          (case-lambda
            ((g$a$5170$bmrAn g$b$5171$bmrAn)
             ((case-lambda
                ((g$r$5172$bmrAn)
                 (if ((case-lambda
                        ((g$t$5173$bmrAn)
                         (if g$t$5173$bmrAn
                           g$t$5173$bmrAn
                           (begin '#f (inexact? g$b$5171$bmrAn)))))
                      (inexact? g$a$5170$bmrAn))
                   (inexact g$r$5172$bmrAn)
                   g$r$5172$bmrAn)))
              (if (< g$a$5170$bmrAn g$b$5171$bmrAn)
                g$b$5171$bmrAn
                g$a$5170$bmrAn))))
          g$a$5168$bmrAn
          g$rest$5169$bmrAn))))
   (g$min$5105$bmrAn
     g$min$5297$bmrAn
     (case-lambda
       ((g$a$5174$bmrAn . g$rest$5175$bmrAn)
        (g$fold-left$5066$bmrAn
          (case-lambda
            ((g$a$5176$bmrAn g$b$5177$bmrAn)
             ((case-lambda
                ((g$r$5178$bmrAn)
                 (if ((case-lambda
                        ((g$t$5179$bmrAn)
                         (if g$t$5179$bmrAn
                           g$t$5179$bmrAn
                           (begin '#f (inexact? g$b$5177$bmrAn)))))
                      (inexact? g$a$5176$bmrAn))
                   (inexact g$r$5178$bmrAn)
                   g$r$5178$bmrAn)))
              (if (> g$a$5176$bmrAn g$b$5177$bmrAn)
                g$b$5177$bmrAn
                g$a$5176$bmrAn))))
          g$a$5174$bmrAn
          g$rest$5175$bmrAn))))
   (g$gcd$5106$bmrAn
     g$gcd$5298$bmrAn
     (case-lambda
       (g$nums$5180$bmrAn
        ((case-lambda
           ((g$t$5181$bmrAn)
            (if (g$memv$5056$bmrAn g$t$5181$bmrAn '(0))
              '0
              (if (g$memv$5056$bmrAn g$t$5181$bmrAn '(1))
                ((case-lambda
                   ((g$n$5182$bmrAn)
                    (begin
                      (if (not (integer-valued? g$n$5182$bmrAn))
                        (assertion-violation
                          'gcd
                          '"not an integer"
                          g$n$5182$bmrAn)
                        (void))
                      (abs g$n$5182$bmrAn))))
                 (car g$nums$5180$bmrAn))
                (if (g$memv$5056$bmrAn g$t$5181$bmrAn '(2))
                  ((case-lambda
                     ((g$a$5183$bmrAn g$b$5184$bmrAn)
                      (begin
                        (if (not (integer-valued? g$a$5183$bmrAn))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$a$5183$bmrAn)
                          (void))
                        (if (not (integer-valued? g$b$5184$bmrAn))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$b$5184$bmrAn)
                          (void))
                        (if (g$zero?$5101$bmrAn g$b$5184$bmrAn)
                          (abs g$a$5183$bmrAn)
                          (abs (g$gcd$5106$bmrAn
                                 g$b$5184$bmrAn
                                 (mod g$a$5183$bmrAn g$b$5184$bmrAn)))))))
                   (car g$nums$5180$bmrAn)
                   (g$cadr$5072$bmrAn g$nums$5180$bmrAn))
                  (g$fold-left$5066$bmrAn
                    g$gcd$5106$bmrAn
                    (abs (car g$nums$5180$bmrAn))
                    (cdr g$nums$5180$bmrAn)))))))
         (length g$nums$5180$bmrAn)))))
   (g$lcm$5107$bmrAn
     g$lcm$5299$bmrAn
     (case-lambda
       (g$nums$5185$bmrAn
        ((case-lambda
           ((g$t$5186$bmrAn)
            (if (g$memv$5056$bmrAn g$t$5186$bmrAn '(0))
              '1
              (if (g$memv$5056$bmrAn g$t$5186$bmrAn '(1))
                ((case-lambda
                   ((g$n$5187$bmrAn)
                    (begin
                      (if (not (integer-valued? g$n$5187$bmrAn))
                        (assertion-violation
                          'lcm
                          '"not an integer"
                          g$n$5187$bmrAn)
                        (void))
                      (abs g$n$5187$bmrAn))))
                 (car g$nums$5185$bmrAn))
                (if (g$memv$5056$bmrAn g$t$5186$bmrAn '(2))
                  ((case-lambda
                     ((g$a$5188$bmrAn g$b$5189$bmrAn)
                      (begin
                        (if (not (integer-valued? g$a$5188$bmrAn))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$a$5188$bmrAn)
                          (void))
                        (if (not (integer-valued? g$b$5189$bmrAn))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$b$5189$bmrAn)
                          (void))
                        (if ((case-lambda
                               ((g$t$5190$bmrAn)
                                (if g$t$5190$bmrAn
                                  g$t$5190$bmrAn
                                  (begin
                                    '#f
                                    (g$zero?$5101$bmrAn g$b$5189$bmrAn)))))
                             (g$zero?$5101$bmrAn g$a$5188$bmrAn))
                          '0
                          (abs (* (/ g$a$5188$bmrAn
                                     (g$gcd$5106$bmrAn
                                       g$a$5188$bmrAn
                                       g$b$5189$bmrAn))
                                  g$b$5189$bmrAn))))))
                   (car g$nums$5185$bmrAn)
                   (g$cadr$5072$bmrAn g$nums$5185$bmrAn))
                  (g$fold-left$5066$bmrAn
                    g$lcm$5107$bmrAn
                    (abs (car g$nums$5185$bmrAn))
                    (cdr g$nums$5185$bmrAn)))))))
         (length g$nums$5185$bmrAn)))))
   (g$string=?$5114$bmrAn
     g$string=?$5300$bmrAn
     (case-lambda
       ((g$a$5191$bmrAn g$b$5192$bmrAn . g$rest$5193$bmrAn)
        (begin
          (if (not (string? g$a$5191$bmrAn))
            (assertion-violation 'string=? '"not a string" g$a$5191$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$5194$bmrAn)
               (begin
                 (if (not (string? g$x$5194$bmrAn))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$5194$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$5195$bmrAn)
                     (begin
                       (set! g$a$5191$bmrAn g$x$5194$bmrAn)
                       g$r$5195$bmrAn)))
                  (= (string-compare g$a$5191$bmrAn g$x$5194$bmrAn) '0)))))
            (cons g$b$5192$bmrAn g$rest$5193$bmrAn))))))
   (g$string<?$5115$bmrAn
     g$string<?$5301$bmrAn
     (case-lambda
       ((g$a$5196$bmrAn g$b$5197$bmrAn . g$rest$5198$bmrAn)
        (begin
          (if (not (string? g$a$5196$bmrAn))
            (assertion-violation 'string<? '"not a string" g$a$5196$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$5199$bmrAn)
               (begin
                 (if (not (string? g$x$5199$bmrAn))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$5199$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$5200$bmrAn)
                     (begin
                       (set! g$a$5196$bmrAn g$x$5199$bmrAn)
                       g$r$5200$bmrAn)))
                  (< (string-compare g$a$5196$bmrAn g$x$5199$bmrAn) '0)))))
            (cons g$b$5197$bmrAn g$rest$5198$bmrAn))))))
   (g$string>?$5116$bmrAn
     g$string>?$5302$bmrAn
     (case-lambda
       ((g$a$5201$bmrAn g$b$5202$bmrAn . g$rest$5203$bmrAn)
        (begin
          (if (not (string? g$a$5201$bmrAn))
            (assertion-violation 'string>? '"not a string" g$a$5201$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$5204$bmrAn)
               (begin
                 (if (not (string? g$x$5204$bmrAn))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$5204$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$5205$bmrAn)
                     (begin
                       (set! g$a$5201$bmrAn g$x$5204$bmrAn)
                       g$r$5205$bmrAn)))
                  (> (string-compare g$a$5201$bmrAn g$x$5204$bmrAn) '0)))))
            (cons g$b$5202$bmrAn g$rest$5203$bmrAn))))))
   (g$string<=?$5117$bmrAn
     g$string<=?$5303$bmrAn
     (case-lambda
       ((g$a$5206$bmrAn g$b$5207$bmrAn . g$rest$5208$bmrAn)
        (begin
          (if (not (string? g$a$5206$bmrAn))
            (assertion-violation 'string<=? '"not a string" g$a$5206$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$5209$bmrAn)
               (begin
                 (if (not (string? g$x$5209$bmrAn))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$5209$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$5210$bmrAn)
                     (begin
                       (set! g$a$5206$bmrAn g$x$5209$bmrAn)
                       g$r$5210$bmrAn)))
                  (<= (string-compare g$a$5206$bmrAn g$x$5209$bmrAn) '0)))))
            (cons g$b$5207$bmrAn g$rest$5208$bmrAn))))))
   (g$string>=?$5118$bmrAn
     g$string>=?$5304$bmrAn
     (case-lambda
       ((g$a$5211$bmrAn g$b$5212$bmrAn . g$rest$5213$bmrAn)
        (begin
          (if (not (string? g$a$5211$bmrAn))
            (assertion-violation 'string>=? '"not a string" g$a$5211$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$5214$bmrAn)
               (begin
                 (if (not (string? g$x$5214$bmrAn))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$5214$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$5215$bmrAn)
                     (begin
                       (set! g$a$5211$bmrAn g$x$5214$bmrAn)
                       g$r$5215$bmrAn)))
                  (>= (string-compare g$a$5211$bmrAn g$x$5214$bmrAn) '0)))))
            (cons g$b$5212$bmrAn g$rest$5213$bmrAn))))))
   (g$symbol=?$5119$bmrAn
     g$symbol=?$5305$bmrAn
     (case-lambda
       ((g$a$5216$bmrAn g$b$5217$bmrAn . g$rest$5218$bmrAn)
        (begin
          (if (not (symbol? g$a$5216$bmrAn))
            (assertion-violation 'symbol=? '"not a symbol" g$a$5216$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$5219$bmrAn)
               (begin
                 (if (not (symbol? g$x$5219$bmrAn))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$5219$bmrAn)
                   (void))
                 (eq? g$a$5216$bmrAn g$x$5219$bmrAn))))
            (cons g$b$5217$bmrAn g$rest$5218$bmrAn))))))
   (g$boolean=?$5120$bmrAn
     g$boolean=?$5306$bmrAn
     (case-lambda
       ((g$a$5220$bmrAn g$b$5221$bmrAn . g$rest$5222$bmrAn)
        (begin
          (if (not (boolean? g$a$5220$bmrAn))
            (assertion-violation 'boolean=? '"not a boolean" g$a$5220$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$5223$bmrAn)
               (begin
                 (if (not (boolean? g$x$5223$bmrAn))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$5223$bmrAn)
                   (void))
                 (eq? g$a$5220$bmrAn g$x$5223$bmrAn))))
            (cons g$b$5221$bmrAn g$rest$5222$bmrAn))))))
   (g$char=?$5127$bmrAn
     g$char=?$5307$bmrAn
     (case-lambda
       ((g$a$5224$bmrAn g$b$5225$bmrAn . g$rest$5226$bmrAn)
        (begin
          (if (not (char? g$a$5224$bmrAn))
            (assertion-violation 'char=? '"not a char" g$a$5224$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$5227$bmrAn)
               (begin
                 (if (not (char? g$x$5227$bmrAn))
                   (assertion-violation 'char=? '"not a char" g$x$5227$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$5228$bmrAn)
                     (begin
                       (set! g$a$5224$bmrAn g$x$5227$bmrAn)
                       g$r$5228$bmrAn)))
                  (= (char->integer g$a$5224$bmrAn)
                     (char->integer g$x$5227$bmrAn))))))
            (cons g$b$5225$bmrAn g$rest$5226$bmrAn))))))
   (g$char<?$5128$bmrAn
     g$char<?$5308$bmrAn
     (case-lambda
       ((g$a$5229$bmrAn g$b$5230$bmrAn . g$rest$5231$bmrAn)
        (begin
          (if (not (char? g$a$5229$bmrAn))
            (assertion-violation 'char<? '"not a char" g$a$5229$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$5232$bmrAn)
               (begin
                 (if (not (char? g$x$5232$bmrAn))
                   (assertion-violation 'char<? '"not a char" g$x$5232$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$5233$bmrAn)
                     (begin
                       (set! g$a$5229$bmrAn g$x$5232$bmrAn)
                       g$r$5233$bmrAn)))
                  (< (char->integer g$a$5229$bmrAn)
                     (char->integer g$x$5232$bmrAn))))))
            (cons g$b$5230$bmrAn g$rest$5231$bmrAn))))))
   (g$char>?$5129$bmrAn
     g$char>?$5309$bmrAn
     (case-lambda
       ((g$a$5234$bmrAn g$b$5235$bmrAn . g$rest$5236$bmrAn)
        (begin
          (if (not (char? g$a$5234$bmrAn))
            (assertion-violation 'char>? '"not a char" g$a$5234$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$5237$bmrAn)
               (begin
                 (if (not (char? g$x$5237$bmrAn))
                   (assertion-violation 'char>? '"not a char" g$x$5237$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$5238$bmrAn)
                     (begin
                       (set! g$a$5234$bmrAn g$x$5237$bmrAn)
                       g$r$5238$bmrAn)))
                  (> (char->integer g$a$5234$bmrAn)
                     (char->integer g$x$5237$bmrAn))))))
            (cons g$b$5235$bmrAn g$rest$5236$bmrAn))))))
   (g$char<=?$5130$bmrAn
     g$char<=?$5310$bmrAn
     (case-lambda
       ((g$a$5239$bmrAn g$b$5240$bmrAn . g$rest$5241$bmrAn)
        (begin
          (if (not (char? g$a$5239$bmrAn))
            (assertion-violation 'char<=? '"not a char" g$a$5239$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$5242$bmrAn)
               (begin
                 (if (not (char? g$x$5242$bmrAn))
                   (assertion-violation 'char<=? '"not a char" g$x$5242$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$5243$bmrAn)
                     (begin
                       (set! g$a$5239$bmrAn g$x$5242$bmrAn)
                       g$r$5243$bmrAn)))
                  (<= (char->integer g$a$5239$bmrAn)
                      (char->integer g$x$5242$bmrAn))))))
            (cons g$b$5240$bmrAn g$rest$5241$bmrAn))))))
   (g$char>=?$5131$bmrAn
     g$char>=?$5311$bmrAn
     (case-lambda
       ((g$a$5244$bmrAn g$b$5245$bmrAn . g$rest$5246$bmrAn)
        (begin
          (if (not (char? g$a$5244$bmrAn))
            (assertion-violation 'char>=? '"not a char" g$a$5244$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$5247$bmrAn)
               (begin
                 (if (not (char? g$x$5247$bmrAn))
                   (assertion-violation 'char>=? '"not a char" g$x$5247$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$5248$bmrAn)
                     (begin
                       (set! g$a$5244$bmrAn g$x$5247$bmrAn)
                       g$r$5248$bmrAn)))
                  (>= (char->integer g$a$5244$bmrAn)
                      (char->integer g$x$5247$bmrAn))))))
            (cons g$b$5245$bmrAn g$rest$5246$bmrAn))))))
   (g$rationalize$5132$bmrAn
     g$rationalize$5312$bmrAn
     (case-lambda
       ((g$x$5249$bmrAn g$e$5250$bmrAn)
        (if (if (infinite? g$x$5249$bmrAn)
              (begin '#f (infinite? g$e$5250$bmrAn))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$5251$bmrAn)
              (if (if (exact? g$x$5249$bmrAn)
                    (begin '#f (exact? g$e$5250$bmrAn))
                    '#f)
                g$r$5251$bmrAn
                (inexact g$r$5251$bmrAn))))
           (apply
             /
             (g$find-ratio$5133$bmrAn g$x$5249$bmrAn g$e$5250$bmrAn)))))))
   (g$find-ratio$5133$bmrAn
     g$find-ratio$5313$bmrAn
     (case-lambda
       ((g$x$5252$bmrAn g$e$5253$bmrAn)
        (g$find-ratio-between$5134$bmrAn
          (- g$x$5252$bmrAn g$e$5253$bmrAn)
          (+ g$x$5252$bmrAn g$e$5253$bmrAn)))))
   (g$find-ratio-between$5134$bmrAn
     g$find-ratio-between$5314$bmrAn
     (case-lambda
       ((g$x$5254$bmrAn g$y$5255$bmrAn)
        (letrec* ((g$sr$5256$bmrAn
                    (case-lambda
                      ((g$x$5258$bmrAn g$y$5259$bmrAn)
                       ((case-lambda
                          ((g$fx$5260$bmrAn g$fy$5261$bmrAn)
                           (if (>= g$fx$5260$bmrAn g$x$5258$bmrAn)
                             (list g$fx$5260$bmrAn '1)
                             (if (= g$fx$5260$bmrAn g$fy$5261$bmrAn)
                               ((case-lambda
                                  ((g$rat$5262$bmrAn)
                                   (list
                                     (+ (g$cadr$5072$bmrAn g$rat$5262$bmrAn)
                                        (* g$fx$5260$bmrAn
                                           (car g$rat$5262$bmrAn)))
                                     (car g$rat$5262$bmrAn))))
                                (g$sr$5256$bmrAn
                                  (/ (- g$y$5259$bmrAn g$fy$5261$bmrAn))
                                  (/ (- g$x$5258$bmrAn g$fx$5260$bmrAn))))
                               (list (+ '1 g$fx$5260$bmrAn) '1)))))
                        (exact (floor g$x$5258$bmrAn))
                        (exact (floor g$y$5259$bmrAn)))))))
          (if (< g$y$5255$bmrAn g$x$5254$bmrAn)
            (g$find-ratio-between$5134$bmrAn g$y$5255$bmrAn g$x$5254$bmrAn)
            (if (>= g$x$5254$bmrAn g$y$5255$bmrAn)
              (list g$x$5254$bmrAn '1)
              (if (g$positive?$5099$bmrAn g$x$5254$bmrAn)
                (g$sr$5256$bmrAn g$x$5254$bmrAn g$y$5255$bmrAn)
                (if (g$negative?$5100$bmrAn g$y$5255$bmrAn)
                  ((case-lambda
                     ((g$rat$5257$bmrAn)
                      (list
                        (- (car g$rat$5257$bmrAn))
                        (g$cadr$5072$bmrAn g$rat$5257$bmrAn))))
                   (g$sr$5256$bmrAn (- g$y$5255$bmrAn) (- g$x$5254$bmrAn)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5503$bmrAn g$using$5536$bmrAn (clr-using-internal 'system))
   (g$using$5505$bmrAn
     g$using$5537$bmrAn
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5506$bmrAn
     g$make-eq-hashtable$5538$bmrAn
     (case-lambda
       (() (g$make-eq-hashtable$5506$bmrAn '32))
       ((g$k$5515$bmrAn)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5515$bmrAn)))))
   (g$make-eqv-hashtable$5507$bmrAn
     g$make-eqv-hashtable$5539$bmrAn
     (case-lambda
       (() (g$make-eqv-hashtable$5507$bmrAn '32))
       ((g$k$5516$bmrAn) (make-hashtable eqv-hash eqv? g$k$5516$bmrAn))))
   (g$hashtable-size$5508$bmrAn
     g$hashtable-size$5540$bmrAn
     (case-lambda
       ((g$ht$5517$bmrAn)
        (clr-call-internal 'hashtable 'get_count g$ht$5517$bmrAn))))
   (g$hashtable-ref$5509$bmrAn
     g$hashtable-ref$5541$bmrAn
     (case-lambda
       ((g$ht$5518$bmrAn g$key$5519$bmrAn g$default$5520$bmrAn)
        (letrec* ((g$r$5521$bmrAn
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5518$bmrAn
                      g$key$5519$bmrAn)))
          (if (not (null? g$r$5521$bmrAn))
            g$r$5521$bmrAn
            g$default$5520$bmrAn)))))
   (g$hashtable-set!$5510$bmrAn
     g$hashtable-set!$5542$bmrAn
     (case-lambda
       ((g$ht$5522$bmrAn g$key$5523$bmrAn g$obj$5524$bmrAn)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5522$bmrAn
          g$key$5523$bmrAn
          g$obj$5524$bmrAn))))
   (g$hashtable-delete!$5511$bmrAn
     g$hashtable-delete!$5543$bmrAn
     (case-lambda
       ((g$ht$5525$bmrAn g$key$5526$bmrAn)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5525$bmrAn
          g$key$5526$bmrAn))))
   (g$hashtable-contains?$5512$bmrAn
     g$hashtable-contains?$5544$bmrAn
     (case-lambda
       ((g$ht$5527$bmrAn g$key$5528$bmrAn)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5527$bmrAn
          g$key$5528$bmrAn))))
   (g$hashtable-update!$5513$bmrAn
     g$hashtable-update!$5545$bmrAn
     (case-lambda
       ((g$ht$5529$bmrAn
          g$key$5530$bmrAn
          g$proc$5531$bmrAn
          g$default$5532$bmrAn)
        (g$hashtable-set!$5510$bmrAn
          g$ht$5529$bmrAn
          g$key$5530$bmrAn
          (g$proc$5531$bmrAn
            (g$hashtable-ref$5509$bmrAn
              g$ht$5529$bmrAn
              g$key$5530$bmrAn
              g$default$5532$bmrAn))))))
   (g$hashtable-clear!$5514$bmrAn
     g$hashtable-clear!$5546$bmrAn
     (case-lambda
       ((g$ht$5533$bmrAn) (g$hashtable-clear!$5514$bmrAn g$ht$5533$bmrAn '32))
       ((g$ht$5534$bmrAn g$k$5535$bmrAn)
        (clr-call-internal 'hashtable 'clear g$ht$5534$bmrAn)))))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5548$bmrAn g$using$5555$bmrAn (clr-using-internal 'system.io))
   (g$file-exists?$5549$bmrAn
     g$file-exists?$5556$bmrAn
     (case-lambda
       ((g$fn$5552$bmrAn)
        (clr-call-internal 'file 'exists '() g$fn$5552$bmrAn))))
   (g$delete-file$5550$bmrAn
     g$delete-file$5557$bmrAn
     (case-lambda
       ((g$fn$5553$bmrAn)
        (clr-call-internal 'file 'delete '() g$fn$5553$bmrAn))))
   (g$get-directory-name$5551$bmrAn
     g$get-directory-name$5558$bmrAn
     (case-lambda
       ((g$path$5554$bmrAn)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5554$bmrAn)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5559$bmrAn
     g$native-endianness$5670$bmrAn
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5560$bmrAn
     g$bytevector-u16-ref$5671$bmrAn
     (case-lambda
       ((g$bytevector$5588$bmrAn g$k$5589$bmrAn g$endianness$5590$bmrAn)
        (bytevector-uint-ref
          g$bytevector$5588$bmrAn
          g$k$5589$bmrAn
          g$endianness$5590$bmrAn
          '2))))
   (g$bytevector-s16-ref$5561$bmrAn
     g$bytevector-s16-ref$5672$bmrAn
     (case-lambda
       ((g$bytevector$5591$bmrAn g$k$5592$bmrAn g$endianness$5593$bmrAn)
        (bytevector-sint-ref
          g$bytevector$5591$bmrAn
          g$k$5592$bmrAn
          g$endianness$5593$bmrAn
          '2))))
   (g$bytevector-u16-native-ref$5562$bmrAn
     g$bytevector-u16-native-ref$5673$bmrAn
     (case-lambda
       ((g$bytevector$5594$bmrAn g$k$5595$bmrAn)
        (bytevector-uint-ref
          g$bytevector$5594$bmrAn
          g$k$5595$bmrAn
          (g$native-endianness$5559$bmrAn)
          '2))))
   (g$bytevector-s16-native-ref$5563$bmrAn
     g$bytevector-s16-native-ref$5674$bmrAn
     (case-lambda
       ((g$bytevector$5596$bmrAn g$k$5597$bmrAn)
        (bytevector-sint-ref
          g$bytevector$5596$bmrAn
          g$k$5597$bmrAn
          (g$native-endianness$5559$bmrAn)
          '2))))
   (g$bytevector-u16-set!$5564$bmrAn
     g$bytevector-u16-set!$5675$bmrAn
     (case-lambda
       ((g$bytevector$5598$bmrAn
          g$k$5599$bmrAn
          g$n$5600$bmrAn
          g$endianness$5601$bmrAn)
        (bytevector-uint-set!
          g$bytevector$5598$bmrAn
          g$k$5599$bmrAn
          g$n$5600$bmrAn
          g$endianness$5601$bmrAn
          '2))))
   (g$bytevector-s16-set!$5565$bmrAn
     g$bytevector-s16-set!$5676$bmrAn
     (case-lambda
       ((g$bytevector$5602$bmrAn
          g$k$5603$bmrAn
          g$n$5604$bmrAn
          g$endianness$5605$bmrAn)
        (bytevector-sint-set!
          g$bytevector$5602$bmrAn
          g$k$5603$bmrAn
          g$n$5604$bmrAn
          g$endianness$5605$bmrAn
          '2))))
   (g$bytevector-u16-native-set!$5566$bmrAn
     g$bytevector-u16-native-set!$5677$bmrAn
     (case-lambda
       ((g$bytevector$5606$bmrAn g$k$5607$bmrAn g$n$5608$bmrAn)
        (bytevector-uint-set!
          g$bytevector$5606$bmrAn
          g$k$5607$bmrAn
          g$n$5608$bmrAn
          (g$native-endianness$5559$bmrAn)
          '2))))
   (g$bytevector-s16-native-set!$5567$bmrAn
     g$bytevector-s16-native-set!$5678$bmrAn
     (case-lambda
       ((g$bytevector$5609$bmrAn g$k$5610$bmrAn g$n$5611$bmrAn)
        (bytevector-sint-set!
          g$bytevector$5609$bmrAn
          g$k$5610$bmrAn
          g$n$5611$bmrAn
          (g$native-endianness$5559$bmrAn)
          '2))))
   (g$bytevector-u32-ref$5568$bmrAn
     g$bytevector-u32-ref$5679$bmrAn
     (case-lambda
       ((g$bytevector$5612$bmrAn g$k$5613$bmrAn g$endianness$5614$bmrAn)
        (bytevector-uint-ref
          g$bytevector$5612$bmrAn
          g$k$5613$bmrAn
          g$endianness$5614$bmrAn
          '4))))
   (g$bytevector-s32-ref$5569$bmrAn
     g$bytevector-s32-ref$5680$bmrAn
     (case-lambda
       ((g$bytevector$5615$bmrAn g$k$5616$bmrAn g$endianness$5617$bmrAn)
        (bytevector-sint-ref
          g$bytevector$5615$bmrAn
          g$k$5616$bmrAn
          g$endianness$5617$bmrAn
          '4))))
   (g$bytevector-u32-native-ref$5570$bmrAn
     g$bytevector-u32-native-ref$5681$bmrAn
     (case-lambda
       ((g$bytevector$5618$bmrAn g$k$5619$bmrAn)
        (bytevector-uint-ref
          g$bytevector$5618$bmrAn
          g$k$5619$bmrAn
          (g$native-endianness$5559$bmrAn)
          '4))))
   (g$bytevector-s32-native-ref$5571$bmrAn
     g$bytevector-s32-native-ref$5682$bmrAn
     (case-lambda
       ((g$bytevector$5620$bmrAn g$k$5621$bmrAn)
        (bytevector-sint-ref
          g$bytevector$5620$bmrAn
          g$k$5621$bmrAn
          (g$native-endianness$5559$bmrAn)
          '4))))
   (g$bytevector-u32-set!$5572$bmrAn
     g$bytevector-u32-set!$5683$bmrAn
     (case-lambda
       ((g$bytevector$5622$bmrAn
          g$k$5623$bmrAn
          g$n$5624$bmrAn
          g$endianness$5625$bmrAn)
        (bytevector-uint-set!
          g$bytevector$5622$bmrAn
          g$k$5623$bmrAn
          g$n$5624$bmrAn
          g$endianness$5625$bmrAn
          '4))))
   (g$bytevector-s32-set!$5573$bmrAn
     g$bytevector-s32-set!$5684$bmrAn
     (case-lambda
       ((g$bytevector$5626$bmrAn
          g$k$5627$bmrAn
          g$n$5628$bmrAn
          g$endianness$5629$bmrAn)
        (bytevector-sint-set!
          g$bytevector$5626$bmrAn
          g$k$5627$bmrAn
          g$n$5628$bmrAn
          g$endianness$5629$bmrAn
          '4))))
   (g$bytevector-u32-native-set!$5574$bmrAn
     g$bytevector-u32-native-set!$5685$bmrAn
     (case-lambda
       ((g$bytevector$5630$bmrAn g$k$5631$bmrAn g$n$5632$bmrAn)
        (bytevector-uint-set!
          g$bytevector$5630$bmrAn
          g$k$5631$bmrAn
          g$n$5632$bmrAn
          (g$native-endianness$5559$bmrAn)
          '4))))
   (g$bytevector-s32-native-set!$5575$bmrAn
     g$bytevector-s32-native-set!$5686$bmrAn
     (case-lambda
       ((g$bytevector$5633$bmrAn g$k$5634$bmrAn g$n$5635$bmrAn)
        (bytevector-sint-set!
          g$bytevector$5633$bmrAn
          g$k$5634$bmrAn
          g$n$5635$bmrAn
          (g$native-endianness$5559$bmrAn)
          '4))))
   (g$bytevector-u64-ref$5576$bmrAn
     g$bytevector-u64-ref$5687$bmrAn
     (case-lambda
       ((g$bytevector$5636$bmrAn g$k$5637$bmrAn g$endianness$5638$bmrAn)
        (bytevector-uint-ref
          g$bytevector$5636$bmrAn
          g$k$5637$bmrAn
          g$endianness$5638$bmrAn
          '8))))
   (g$bytevector-s64-ref$5577$bmrAn
     g$bytevector-s64-ref$5688$bmrAn
     (case-lambda
       ((g$bytevector$5639$bmrAn g$k$5640$bmrAn g$endianness$5641$bmrAn)
        (bytevector-sint-ref
          g$bytevector$5639$bmrAn
          g$k$5640$bmrAn
          g$endianness$5641$bmrAn
          '8))))
   (g$bytevector-u64-native-ref$5578$bmrAn
     g$bytevector-u64-native-ref$5689$bmrAn
     (case-lambda
       ((g$bytevector$5642$bmrAn g$k$5643$bmrAn)
        (bytevector-uint-ref
          g$bytevector$5642$bmrAn
          g$k$5643$bmrAn
          (g$native-endianness$5559$bmrAn)
          '8))))
   (g$bytevector-s64-native-ref$5579$bmrAn
     g$bytevector-s64-native-ref$5690$bmrAn
     (case-lambda
       ((g$bytevector$5644$bmrAn g$k$5645$bmrAn)
        (bytevector-sint-ref
          g$bytevector$5644$bmrAn
          g$k$5645$bmrAn
          (g$native-endianness$5559$bmrAn)
          '8))))
   (g$bytevector-u64-set!$5580$bmrAn
     g$bytevector-u64-set!$5691$bmrAn
     (case-lambda
       ((g$bytevector$5646$bmrAn
          g$k$5647$bmrAn
          g$n$5648$bmrAn
          g$endianness$5649$bmrAn)
        (bytevector-uint-set!
          g$bytevector$5646$bmrAn
          g$k$5647$bmrAn
          g$n$5648$bmrAn
          g$endianness$5649$bmrAn
          '8))))
   (g$bytevector-s64-set!$5581$bmrAn
     g$bytevector-s64-set!$5692$bmrAn
     (case-lambda
       ((g$bytevector$5650$bmrAn
          g$k$5651$bmrAn
          g$n$5652$bmrAn
          g$endianness$5653$bmrAn)
        (bytevector-sint-set!
          g$bytevector$5650$bmrAn
          g$k$5651$bmrAn
          g$n$5652$bmrAn
          g$endianness$5653$bmrAn
          '8))))
   (g$bytevector-u64-native-set!$5582$bmrAn
     g$bytevector-u64-native-set!$5693$bmrAn
     (case-lambda
       ((g$bytevector$5654$bmrAn g$k$5655$bmrAn g$n$5656$bmrAn)
        (bytevector-uint-set!
          g$bytevector$5654$bmrAn
          g$k$5655$bmrAn
          g$n$5656$bmrAn
          (g$native-endianness$5559$bmrAn)
          '8))))
   (g$bytevector-s64-native-set!$5583$bmrAn
     g$bytevector-s64-native-set!$5694$bmrAn
     (case-lambda
       ((g$bytevector$5657$bmrAn g$k$5658$bmrAn g$n$5659$bmrAn)
        (bytevector-sint-set!
          g$bytevector$5657$bmrAn
          g$k$5658$bmrAn
          g$n$5659$bmrAn
          (g$native-endianness$5559$bmrAn)
          '8))))
   (g$bytevector-ieee-single-native-ref$5584$bmrAn
     g$bytevector-ieee-single-native-ref$5695$bmrAn
     (case-lambda
       ((g$bytevector$5660$bmrAn g$k$5661$bmrAn)
        (if (not (g$zero?$5293$bmrAn (mod g$k$5661$bmrAn '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$5661$bmrAn)
          (bytevector-ieee-single-ref
            g$bytevector$5660$bmrAn
            g$k$5661$bmrAn
            (g$native-endianness$5559$bmrAn))))))
   (g$bytevector-ieee-double-native-ref$5585$bmrAn
     g$bytevector-ieee-double-native-ref$5696$bmrAn
     (case-lambda
       ((g$bytevector$5662$bmrAn g$k$5663$bmrAn)
        (if (not (g$zero?$5293$bmrAn (mod g$k$5663$bmrAn '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$5663$bmrAn)
          (bytevector-ieee-double-ref
            g$bytevector$5662$bmrAn
            g$k$5663$bmrAn
            (g$native-endianness$5559$bmrAn))))))
   (g$bytevector-ieee-single-native-set!$5586$bmrAn
     g$bytevector-ieee-single-native-set!$5697$bmrAn
     (case-lambda
       ((g$bytevector$5664$bmrAn g$k$5665$bmrAn g$x$5666$bmrAn)
        (if (not (g$zero?$5293$bmrAn (mod g$k$5665$bmrAn '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$5665$bmrAn)
          (bytevector-ieee-single-set!
            g$bytevector$5664$bmrAn
            g$k$5665$bmrAn
            g$x$5666$bmrAn
            (g$native-endianness$5559$bmrAn))))))
   (g$bytevector-ieee-double-native-set!$5587$bmrAn
     g$bytevector-ieee-double-native-set!$5698$bmrAn
     (case-lambda
       ((g$bytevector$5667$bmrAn g$k$5668$bmrAn g$x$5669$bmrAn)
        (if (not (g$zero?$5293$bmrAn (mod g$k$5668$bmrAn '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$5668$bmrAn)
          (bytevector-ieee-double-set!
            g$bytevector$5667$bmrAn
            g$k$5668$bmrAn
            g$x$5669$bmrAn
            (g$native-endianness$5559$bmrAn)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6687$5699$bmrAn
     g$6687$5794$bmrAn
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6690$bmrAn
       '#f
       '#f
       '#()))
   (g$6689$5700$bmrAn g$6689$5795$bmrAn '#f)
   (g$6688$5701$bmrAn
     g$6688$5796$bmrAn
     (make-record-constructor-descriptor
       g$6687$5699$bmrAn
       '#f
       g$6689$5700$bmrAn))
   (g$&condition?$5702$bmrAn
     g$&condition?$5797$bmrAn
     (record-predicate g$6687$5699$bmrAn))
   (g$make-&condition$5703$bmrAn
     g$make-&condition$5798$bmrAn
     (record-constructor g$6688$5701$bmrAn))
   (g$&condition-rtd$5704$bmrAn
     g$&condition-rtd$5799$bmrAn
     g$6687$5699$bmrAn)
   (g$&condition-rcd$5705$bmrAn
     g$&condition-rcd$5800$bmrAn
     g$6688$5701$bmrAn)
   (g$6703$5706$bmrAn
     g$6703$5801$bmrAn
     (make-record-type-descriptor
       '&message
       g$6687$5699$bmrAn
       'g$6706$bmrAn
       '#f
       '#f
       '#((immutable message))))
   (g$6705$5707$bmrAn g$6705$5802$bmrAn '#f)
   (g$6704$5708$bmrAn
     g$6704$5803$bmrAn
     (make-record-constructor-descriptor
       g$6703$5706$bmrAn
       g$6688$5701$bmrAn
       g$6705$5707$bmrAn))
   (g$6702$5709$bmrAn
     g$6702$5804$bmrAn
     (record-predicate g$6703$5706$bmrAn))
   (g$make-message-condition$5710$bmrAn
     g$make-message-condition$5805$bmrAn
     (record-constructor g$6704$5708$bmrAn))
   (g$6701$5711$bmrAn
     g$6701$5806$bmrAn
     (record-accessor g$6703$5706$bmrAn '0))
   (g$message-condition?$5712$bmrAn
     g$message-condition?$5807$bmrAn
     (condition-predicate g$6703$5706$bmrAn))
   (g$condition-message$5713$bmrAn
     g$condition-message$5808$bmrAn
     (condition-accessor g$6703$5706$bmrAn g$6701$5711$bmrAn))
   (g$6719$5714$bmrAn
     g$6719$5809$bmrAn
     (make-record-type-descriptor
       '&warning
       g$6687$5699$bmrAn
       'g$6722$bmrAn
       '#f
       '#f
       '#()))
   (g$6721$5715$bmrAn g$6721$5810$bmrAn '#f)
   (g$6720$5716$bmrAn
     g$6720$5811$bmrAn
     (make-record-constructor-descriptor
       g$6719$5714$bmrAn
       g$6688$5701$bmrAn
       g$6721$5715$bmrAn))
   (g$6718$5717$bmrAn
     g$6718$5812$bmrAn
     (record-predicate g$6719$5714$bmrAn))
   (g$make-warning$5718$bmrAn
     g$make-warning$5813$bmrAn
     (record-constructor g$6720$5716$bmrAn))
   (g$warning?$5719$bmrAn
     g$warning?$5814$bmrAn
     (condition-predicate g$6719$5714$bmrAn))
   (g$6733$5720$bmrAn
     g$6733$5815$bmrAn
     (make-record-type-descriptor
       '&serious
       g$6687$5699$bmrAn
       'g$6736$bmrAn
       '#f
       '#f
       '#()))
   (g$6735$5721$bmrAn g$6735$5816$bmrAn '#f)
   (g$6734$5722$bmrAn
     g$6734$5817$bmrAn
     (make-record-constructor-descriptor
       g$6733$5720$bmrAn
       g$6688$5701$bmrAn
       g$6735$5721$bmrAn))
   (g$6732$5723$bmrAn
     g$6732$5818$bmrAn
     (record-predicate g$6733$5720$bmrAn))
   (g$make-serious-condition$5724$bmrAn
     g$make-serious-condition$5819$bmrAn
     (record-constructor g$6734$5722$bmrAn))
   (g$serious-condition?$5725$bmrAn
     g$serious-condition?$5820$bmrAn
     (condition-predicate g$6733$5720$bmrAn))
   (g$6747$5726$bmrAn
     g$6747$5821$bmrAn
     (make-record-type-descriptor
       '&error
       g$6733$5720$bmrAn
       'g$6750$bmrAn
       '#f
       '#f
       '#()))
   (g$6749$5727$bmrAn g$6749$5822$bmrAn '#f)
   (g$6748$5728$bmrAn
     g$6748$5823$bmrAn
     (make-record-constructor-descriptor
       g$6747$5726$bmrAn
       g$6734$5722$bmrAn
       g$6749$5727$bmrAn))
   (g$6746$5729$bmrAn
     g$6746$5824$bmrAn
     (record-predicate g$6747$5726$bmrAn))
   (g$make-error$5730$bmrAn
     g$make-error$5825$bmrAn
     (record-constructor g$6748$5728$bmrAn))
   (g$error?$5731$bmrAn
     g$error?$5826$bmrAn
     (condition-predicate g$6747$5726$bmrAn))
   (g$6761$5732$bmrAn
     g$6761$5827$bmrAn
     (make-record-type-descriptor
       '&violation
       g$6733$5720$bmrAn
       'g$6764$bmrAn
       '#f
       '#f
       '#()))
   (g$6763$5733$bmrAn g$6763$5828$bmrAn '#f)
   (g$6762$5734$bmrAn
     g$6762$5829$bmrAn
     (make-record-constructor-descriptor
       g$6761$5732$bmrAn
       g$6734$5722$bmrAn
       g$6763$5733$bmrAn))
   (g$6760$5735$bmrAn
     g$6760$5830$bmrAn
     (record-predicate g$6761$5732$bmrAn))
   (g$make-violation$5736$bmrAn
     g$make-violation$5831$bmrAn
     (record-constructor g$6762$5734$bmrAn))
   (g$violation?$5737$bmrAn
     g$violation?$5832$bmrAn
     (condition-predicate g$6761$5732$bmrAn))
   (g$6775$5738$bmrAn
     g$6775$5833$bmrAn
     (make-record-type-descriptor
       '&assertion
       g$6761$5732$bmrAn
       'g$6778$bmrAn
       '#f
       '#f
       '#()))
   (g$6777$5739$bmrAn g$6777$5834$bmrAn '#f)
   (g$6776$5740$bmrAn
     g$6776$5835$bmrAn
     (make-record-constructor-descriptor
       g$6775$5738$bmrAn
       g$6762$5734$bmrAn
       g$6777$5739$bmrAn))
   (g$6774$5741$bmrAn
     g$6774$5836$bmrAn
     (record-predicate g$6775$5738$bmrAn))
   (g$make-assertion-violation$5742$bmrAn
     g$make-assertion-violation$5837$bmrAn
     (record-constructor g$6776$5740$bmrAn))
   (g$assertion-violation?$5743$bmrAn
     g$assertion-violation?$5838$bmrAn
     (condition-predicate g$6775$5738$bmrAn))
   (g$6790$5744$bmrAn
     g$6790$5839$bmrAn
     (make-record-type-descriptor
       '&irritants
       g$6687$5699$bmrAn
       'g$6793$bmrAn
       '#f
       '#f
       '#((immutable irritants))))
   (g$6792$5745$bmrAn g$6792$5840$bmrAn '#f)
   (g$6791$5746$bmrAn
     g$6791$5841$bmrAn
     (make-record-constructor-descriptor
       g$6790$5744$bmrAn
       g$6688$5701$bmrAn
       g$6792$5745$bmrAn))
   (g$6789$5747$bmrAn
     g$6789$5842$bmrAn
     (record-predicate g$6790$5744$bmrAn))
   (g$make-irritants-condition$5748$bmrAn
     g$make-irritants-condition$5843$bmrAn
     (record-constructor g$6791$5746$bmrAn))
   (g$6788$5749$bmrAn
     g$6788$5844$bmrAn
     (record-accessor g$6790$5744$bmrAn '0))
   (g$irritants-condition?$5750$bmrAn
     g$irritants-condition?$5845$bmrAn
     (condition-predicate g$6790$5744$bmrAn))
   (g$condition-irritants$5751$bmrAn
     g$condition-irritants$5846$bmrAn
     (condition-accessor g$6790$5744$bmrAn g$6788$5749$bmrAn))
   (g$6807$5752$bmrAn
     g$6807$5847$bmrAn
     (make-record-type-descriptor
       '&who
       g$6687$5699$bmrAn
       'g$6810$bmrAn
       '#f
       '#f
       '#((immutable who))))
   (g$6809$5753$bmrAn g$6809$5848$bmrAn '#f)
   (g$6808$5754$bmrAn
     g$6808$5849$bmrAn
     (make-record-constructor-descriptor
       g$6807$5752$bmrAn
       g$6688$5701$bmrAn
       g$6809$5753$bmrAn))
   (g$6806$5755$bmrAn
     g$6806$5850$bmrAn
     (record-predicate g$6807$5752$bmrAn))
   (g$make-who-condition$5756$bmrAn
     g$make-who-condition$5851$bmrAn
     (record-constructor g$6808$5754$bmrAn))
   (g$6805$5757$bmrAn
     g$6805$5852$bmrAn
     (record-accessor g$6807$5752$bmrAn '0))
   (g$who-condition?$5758$bmrAn
     g$who-condition?$5853$bmrAn
     (condition-predicate g$6807$5752$bmrAn))
   (g$condition-who$5759$bmrAn
     g$condition-who$5854$bmrAn
     (condition-accessor g$6807$5752$bmrAn g$6805$5757$bmrAn))
   (g$6823$5760$bmrAn
     g$6823$5855$bmrAn
     (make-record-type-descriptor
       '&non-continuable
       g$6761$5732$bmrAn
       'g$6826$bmrAn
       '#f
       '#f
       '#()))
   (g$6825$5761$bmrAn g$6825$5856$bmrAn '#f)
   (g$6824$5762$bmrAn
     g$6824$5857$bmrAn
     (make-record-constructor-descriptor
       g$6823$5760$bmrAn
       g$6762$5734$bmrAn
       g$6825$5761$bmrAn))
   (g$6822$5763$bmrAn
     g$6822$5858$bmrAn
     (record-predicate g$6823$5760$bmrAn))
   (g$make-non-continuable-violation$5764$bmrAn
     g$make-non-continuable-violation$5859$bmrAn
     (record-constructor g$6824$5762$bmrAn))
   (g$non-continuable-violation?$5765$bmrAn
     g$non-continuable-violation?$5860$bmrAn
     (condition-predicate g$6823$5760$bmrAn))
   (g$6837$5766$bmrAn
     g$6837$5861$bmrAn
     (make-record-type-descriptor
       '&implementation-restriction
       g$6761$5732$bmrAn
       'g$6840$bmrAn
       '#f
       '#f
       '#()))
   (g$6839$5767$bmrAn g$6839$5862$bmrAn '#f)
   (g$6838$5768$bmrAn
     g$6838$5863$bmrAn
     (make-record-constructor-descriptor
       g$6837$5766$bmrAn
       g$6762$5734$bmrAn
       g$6839$5767$bmrAn))
   (g$6836$5769$bmrAn
     g$6836$5864$bmrAn
     (record-predicate g$6837$5766$bmrAn))
   (g$make-implementation-restriction-violation$5770$bmrAn
     g$make-implementation-restriction-violation$5865$bmrAn
     (record-constructor g$6838$5768$bmrAn))
   (g$implementation-restriction-violation?$5771$bmrAn
     g$implementation-restriction-violation?$5866$bmrAn
     (condition-predicate g$6837$5766$bmrAn))
   (g$6851$5772$bmrAn
     g$6851$5867$bmrAn
     (make-record-type-descriptor
       '&lexical
       g$6761$5732$bmrAn
       'g$6854$bmrAn
       '#f
       '#f
       '#()))
   (g$6853$5773$bmrAn g$6853$5868$bmrAn '#f)
   (g$6852$5774$bmrAn
     g$6852$5869$bmrAn
     (make-record-constructor-descriptor
       g$6851$5772$bmrAn
       g$6762$5734$bmrAn
       g$6853$5773$bmrAn))
   (g$6850$5775$bmrAn
     g$6850$5870$bmrAn
     (record-predicate g$6851$5772$bmrAn))
   (g$make-lexical-violation$5776$bmrAn
     g$make-lexical-violation$5871$bmrAn
     (record-constructor g$6852$5774$bmrAn))
   (g$lexical-violation?$5777$bmrAn
     g$lexical-violation?$5872$bmrAn
     (condition-predicate g$6851$5772$bmrAn))
   (g$6867$5778$bmrAn
     g$6867$5873$bmrAn
     (make-record-type-descriptor
       '&syntax
       g$6761$5732$bmrAn
       'g$6870$bmrAn
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6869$5779$bmrAn g$6869$5874$bmrAn '#f)
   (g$6868$5780$bmrAn
     g$6868$5875$bmrAn
     (make-record-constructor-descriptor
       g$6867$5778$bmrAn
       g$6762$5734$bmrAn
       g$6869$5779$bmrAn))
   (g$6866$5781$bmrAn
     g$6866$5876$bmrAn
     (record-predicate g$6867$5778$bmrAn))
   (g$make-syntax-violation$5782$bmrAn
     g$make-syntax-violation$5877$bmrAn
     (record-constructor g$6868$5780$bmrAn))
   (g$6864$5783$bmrAn
     g$6864$5878$bmrAn
     (record-accessor g$6867$5778$bmrAn '0))
   (g$6865$5784$bmrAn
     g$6865$5879$bmrAn
     (record-accessor g$6867$5778$bmrAn '1))
   (g$syntax-violation?$5785$bmrAn
     g$syntax-violation?$5880$bmrAn
     (condition-predicate g$6867$5778$bmrAn))
   (g$syntax-violation-form$5786$bmrAn
     g$syntax-violation-form$5881$bmrAn
     (condition-accessor g$6867$5778$bmrAn g$6864$5783$bmrAn))
   (g$syntax-violation-subform$5787$bmrAn
     g$syntax-violation-subform$5882$bmrAn
     (condition-accessor g$6867$5778$bmrAn g$6865$5784$bmrAn))
   (g$6885$5788$bmrAn
     g$6885$5883$bmrAn
     (make-record-type-descriptor
       '&undefined
       g$6761$5732$bmrAn
       'g$6888$bmrAn
       '#f
       '#f
       '#()))
   (g$6887$5789$bmrAn g$6887$5884$bmrAn '#f)
   (g$6886$5790$bmrAn
     g$6886$5885$bmrAn
     (make-record-constructor-descriptor
       g$6885$5788$bmrAn
       g$6762$5734$bmrAn
       g$6887$5789$bmrAn))
   (g$6884$5791$bmrAn
     g$6884$5886$bmrAn
     (record-predicate g$6885$5788$bmrAn))
   (g$make-undefined-violation$5792$bmrAn
     g$make-undefined-violation$5887$bmrAn
     (record-constructor g$6886$5790$bmrAn))
   (g$undefined-violation?$5793$bmrAn
     g$undefined-violation?$5888$bmrAn
     (condition-predicate g$6885$5788$bmrAn)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$5889$bmrAn
     g$append!$5895$bmrAn
     (case-lambda
       ((g$a$5890$bmrAn . g$b$5891$bmrAn)
        (if (null? g$a$5890$bmrAn)
          g$b$5891$bmrAn
          (if (null? g$b$5891$bmrAn)
            g$a$5890$bmrAn
            (begin
              ((letrec ((g$f$5892$bmrAn
                          (case-lambda
                            ((g$a$5893$bmrAn)
                             ((case-lambda
                                ((g$n$5894$bmrAn)
                                 (if (null? g$n$5894$bmrAn)
                                   (set-cdr! g$a$5893$bmrAn g$b$5891$bmrAn)
                                   (g$f$5892$bmrAn g$n$5894$bmrAn))))
                              (cdr g$a$5893$bmrAn))))))
                 g$f$5892$bmrAn)
               g$a$5890$bmrAn)
              g$a$5890$bmrAn)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$inexact->exact$5896$bmrAn g$inexact->exact$5916$bmrAn exact)
   (g$exact->inexact$5897$bmrAn g$exact->inexact$5917$bmrAn inexact)
   (g$sign$5898$bmrAn
     g$sign$5918$bmrAn
     (case-lambda
       ((g$n$5904$bmrAn)
        (if (> g$n$5904$bmrAn '0) '1 (if (< g$n$5904$bmrAn '0) '-1 '0)))))
   (g$quotient$5899$bmrAn
     g$quotient$5919$bmrAn
     (case-lambda
       ((g$n1$5905$bmrAn g$n2$5906$bmrAn)
        (begin
          (if (not (integer-valued? g$n1$5905$bmrAn))
            (assertion-violation 'quotient '"not an integer" g$n1$5905$bmrAn)
            (void))
          (if (not (integer-valued? g$n2$5906$bmrAn))
            (assertion-violation 'quotient '"not an integer" g$n2$5906$bmrAn)
            (void))
          (* (g$sign$5898$bmrAn g$n1$5905$bmrAn)
             (g$sign$5898$bmrAn g$n2$5906$bmrAn)
             (div (abs g$n1$5905$bmrAn) (abs g$n2$5906$bmrAn)))))))
   (g$remainder$5900$bmrAn
     g$remainder$5920$bmrAn
     (case-lambda
       ((g$n1$5907$bmrAn g$n2$5908$bmrAn)
        (begin
          (if (not (integer-valued? g$n1$5907$bmrAn))
            (assertion-violation 'remainder '"not an integer" g$n1$5907$bmrAn)
            (void))
          (if (not (integer-valued? g$n2$5908$bmrAn))
            (assertion-violation 'remainder '"not an integer" g$n2$5908$bmrAn)
            (void))
          (* (g$sign$5898$bmrAn g$n1$5907$bmrAn)
             (mod (abs g$n1$5907$bmrAn) (abs g$n2$5908$bmrAn)))))))
   (g$modulo$5901$bmrAn
     g$modulo$5921$bmrAn
     (case-lambda
       ((g$n1$5909$bmrAn g$n2$5910$bmrAn)
        (begin
          (if (not (integer-valued? g$n1$5909$bmrAn))
            (assertion-violation 'modulo '"not an integer" g$n1$5909$bmrAn)
            (void))
          (if (not (integer-valued? g$n2$5910$bmrAn))
            (assertion-violation 'modulo '"not an integer" g$n2$5910$bmrAn)
            (void))
          (* (g$sign$5898$bmrAn g$n2$5910$bmrAn)
             (mod (* (g$sign$5898$bmrAn g$n2$5910$bmrAn) g$n1$5909$bmrAn)
                  (abs g$n2$5910$bmrAn)))))))
   (g$make-promise$5902$bmrAn
     g$make-promise$5922$bmrAn
     (case-lambda
       ((g$proc$5911$bmrAn)
        ((case-lambda
           ((g$result-ready?$5912$bmrAn g$result$5913$bmrAn)
            (case-lambda
              (()
               (if g$result-ready?$5912$bmrAn
                 g$result$5913$bmrAn
                 ((case-lambda
                    ((g$x$5914$bmrAn)
                     (if g$result-ready?$5912$bmrAn
                       g$result$5913$bmrAn
                       (begin
                         (set! g$result-ready?$5912$bmrAn '#t)
                         (set! g$result$5913$bmrAn g$x$5914$bmrAn)
                         g$result$5913$bmrAn))))
                  (g$proc$5911$bmrAn)))))))
         '#f
         '#f))))
   (g$force$5903$bmrAn
     g$force$5923$bmrAn
     (case-lambda ((g$object$5915$bmrAn) (g$object$5915$bmrAn)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$5924$bmrAn
     g$split$5949$bmrAn
     (case-lambda
       ((g$ls$5928$bmrAn)
        ((letrec ((g$loop$5929$bmrAn
                    (case-lambda
                      ((g$rest$5930$bmrAn g$left$5931$bmrAn g$right$5932$bmrAn)
                       (if (null? g$rest$5930$bmrAn)
                         (cons g$left$5931$bmrAn g$right$5932$bmrAn)
                         (if (null? (cdr g$rest$5930$bmrAn))
                           (cons
                             (cons (car g$rest$5930$bmrAn) g$left$5931$bmrAn)
                             g$right$5932$bmrAn)
                           (g$loop$5929$bmrAn
                             (g$cddr$5266$bmrAn g$rest$5930$bmrAn)
                             (cons (car g$rest$5930$bmrAn) g$left$5931$bmrAn)
                             (cons
                               (g$cadr$5264$bmrAn g$rest$5930$bmrAn)
                               g$right$5932$bmrAn))))))))
           g$loop$5929$bmrAn)
         g$ls$5928$bmrAn
         '()
         '()))))
   (g$reverse-it$5925$bmrAn
     g$reverse-it$5950$bmrAn
     (case-lambda
       ((g$head$5933$bmrAn g$tail$5934$bmrAn)
        (if (null? g$head$5933$bmrAn)
          g$tail$5934$bmrAn
          (g$reverse-it$5925$bmrAn
            (cdr g$head$5933$bmrAn)
            (cons (car g$head$5933$bmrAn) g$tail$5934$bmrAn))))))
   (g$merge$5926$bmrAn
     g$merge$5951$bmrAn
     (case-lambda
       ((g$list-1$5935$bmrAn g$list-2$5936$bmrAn g$precedes?$5937$bmrAn)
        ((letrec ((g$loop$5938$bmrAn
                    (case-lambda
                      ((g$source-1$5939$bmrAn
                         g$source-2$5940$bmrAn
                         g$so-far$5941$bmrAn)
                       (if (null? g$source-1$5939$bmrAn)
                         (g$reverse-it$5925$bmrAn
                           g$so-far$5941$bmrAn
                           g$source-2$5940$bmrAn)
                         (if (null? g$source-2$5940$bmrAn)
                           (g$reverse-it$5925$bmrAn
                             g$so-far$5941$bmrAn
                             g$source-1$5939$bmrAn)
                           ((case-lambda
                              ((g$car-1$5942$bmrAn g$car-2$5943$bmrAn)
                               (if (g$precedes?$5937$bmrAn
                                     g$car-2$5943$bmrAn
                                     g$car-1$5942$bmrAn)
                                 (g$loop$5938$bmrAn
                                   g$source-1$5939$bmrAn
                                   (cdr g$source-2$5940$bmrAn)
                                   (cons
                                     g$car-2$5943$bmrAn
                                     g$so-far$5941$bmrAn))
                                 (g$loop$5938$bmrAn
                                   g$source-2$5940$bmrAn
                                   (cdr g$source-1$5939$bmrAn)
                                   (cons
                                     g$car-1$5942$bmrAn
                                     g$so-far$5941$bmrAn)))))
                            (car g$source-1$5939$bmrAn)
                            (car g$source-2$5940$bmrAn))))))))
           g$loop$5938$bmrAn)
         g$list-1$5935$bmrAn
         g$list-2$5936$bmrAn
         '()))))
   (g$list-sort$5927$bmrAn
     g$list-sort$5952$bmrAn
     (case-lambda
       ((g$precedes?$5944$bmrAn g$ls$5945$bmrAn)
        (if (null? g$ls$5945$bmrAn)
          '()
          ((letrec ((g$helper$5946$bmrAn
                      (case-lambda
                        ((g$piece$5947$bmrAn)
                         (if (null? (cdr g$piece$5947$bmrAn))
                           g$piece$5947$bmrAn
                           ((case-lambda
                              ((g$parts$5948$bmrAn)
                               (g$merge$5926$bmrAn
                                 (g$helper$5946$bmrAn (car g$parts$5948$bmrAn))
                                 (g$helper$5946$bmrAn (cdr g$parts$5948$bmrAn))
                                 g$precedes?$5944$bmrAn)))
                            (g$split$5924$bmrAn g$piece$5947$bmrAn)))))))
             g$helper$5946$bmrAn)
           g$ls$5945$bmrAn))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$5959$bmrAn
     g$string-ci=?$6025$bmrAn
     (case-lambda
       ((g$a$5975$bmrAn g$b$5976$bmrAn . g$rest$5977$bmrAn)
        (begin
          (if (not (string? g$a$5975$bmrAn))
            (assertion-violation 'string-ci=? '"not a string" g$a$5975$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$5978$bmrAn)
               (begin
                 (if (not (string? g$x$5978$bmrAn))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$5978$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$5979$bmrAn)
                     (begin
                       (set! g$a$5975$bmrAn g$x$5978$bmrAn)
                       g$r$5979$bmrAn)))
                  (= (string-ci-compare g$a$5975$bmrAn g$x$5978$bmrAn) '0)))))
            (cons g$b$5976$bmrAn g$rest$5977$bmrAn))))))
   (g$string-ci<?$5960$bmrAn
     g$string-ci<?$6026$bmrAn
     (case-lambda
       ((g$a$5980$bmrAn g$b$5981$bmrAn . g$rest$5982$bmrAn)
        (begin
          (if (not (string? g$a$5980$bmrAn))
            (assertion-violation 'string-ci<? '"not a string" g$a$5980$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$5983$bmrAn)
               (begin
                 (if (not (string? g$x$5983$bmrAn))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$5983$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$5984$bmrAn)
                     (begin
                       (set! g$a$5980$bmrAn g$x$5983$bmrAn)
                       g$r$5984$bmrAn)))
                  (< (string-ci-compare g$a$5980$bmrAn g$x$5983$bmrAn) '0)))))
            (cons g$b$5981$bmrAn g$rest$5982$bmrAn))))))
   (g$string-ci>?$5961$bmrAn
     g$string-ci>?$6027$bmrAn
     (case-lambda
       ((g$a$5985$bmrAn g$b$5986$bmrAn . g$rest$5987$bmrAn)
        (begin
          (if (not (string? g$a$5985$bmrAn))
            (assertion-violation 'string-ci>? '"not a string" g$a$5985$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$5988$bmrAn)
               (begin
                 (if (not (string? g$x$5988$bmrAn))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$5988$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$5989$bmrAn)
                     (begin
                       (set! g$a$5985$bmrAn g$x$5988$bmrAn)
                       g$r$5989$bmrAn)))
                  (> (string-ci-compare g$a$5985$bmrAn g$x$5988$bmrAn) '0)))))
            (cons g$b$5986$bmrAn g$rest$5987$bmrAn))))))
   (g$string-ci<=?$5962$bmrAn
     g$string-ci<=?$6028$bmrAn
     (case-lambda
       ((g$a$5990$bmrAn g$b$5991$bmrAn . g$rest$5992$bmrAn)
        (begin
          (if (not (string? g$a$5990$bmrAn))
            (assertion-violation 'string-ci<=? '"not a string" g$a$5990$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$5993$bmrAn)
               (begin
                 (if (not (string? g$x$5993$bmrAn))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$5993$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$5994$bmrAn)
                     (begin
                       (set! g$a$5990$bmrAn g$x$5993$bmrAn)
                       g$r$5994$bmrAn)))
                  (<= (string-ci-compare g$a$5990$bmrAn g$x$5993$bmrAn) '0)))))
            (cons g$b$5991$bmrAn g$rest$5992$bmrAn))))))
   (g$string-ci>=?$5963$bmrAn
     g$string-ci>=?$6029$bmrAn
     (case-lambda
       ((g$a$5995$bmrAn g$b$5996$bmrAn . g$rest$5997$bmrAn)
        (begin
          (if (not (string? g$a$5995$bmrAn))
            (assertion-violation 'string-ci>=? '"not a string" g$a$5995$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$5998$bmrAn)
               (begin
                 (if (not (string? g$x$5998$bmrAn))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$5998$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$5999$bmrAn)
                     (begin
                       (set! g$a$5995$bmrAn g$x$5998$bmrAn)
                       g$r$5999$bmrAn)))
                  (>= (string-ci-compare g$a$5995$bmrAn g$x$5998$bmrAn) '0)))))
            (cons g$b$5996$bmrAn g$rest$5997$bmrAn))))))
   (g$char-ci=?$5970$bmrAn
     g$char-ci=?$6030$bmrAn
     (case-lambda
       ((g$a$6000$bmrAn g$b$6001$bmrAn . g$rest$6002$bmrAn)
        (begin
          (if (not (char? g$a$6000$bmrAn))
            (assertion-violation 'char-ci=? '"not a char" g$a$6000$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$6003$bmrAn)
               (begin
                 (if (not (char? g$x$6003$bmrAn))
                   (assertion-violation 'char-ci=? '"not a char" g$x$6003$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$6004$bmrAn)
                     (begin
                       (set! g$a$6000$bmrAn g$x$6003$bmrAn)
                       g$r$6004$bmrAn)))
                  (= (char->integer (char-upcase g$a$6000$bmrAn))
                     (char->integer (char-upcase g$x$6003$bmrAn)))))))
            (cons g$b$6001$bmrAn g$rest$6002$bmrAn))))))
   (g$char-ci<?$5971$bmrAn
     g$char-ci<?$6031$bmrAn
     (case-lambda
       ((g$a$6005$bmrAn g$b$6006$bmrAn . g$rest$6007$bmrAn)
        (begin
          (if (not (char? g$a$6005$bmrAn))
            (assertion-violation 'char-ci<? '"not a char" g$a$6005$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$6008$bmrAn)
               (begin
                 (if (not (char? g$x$6008$bmrAn))
                   (assertion-violation 'char-ci<? '"not a char" g$x$6008$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$6009$bmrAn)
                     (begin
                       (set! g$a$6005$bmrAn g$x$6008$bmrAn)
                       g$r$6009$bmrAn)))
                  (< (char->integer (char-upcase g$a$6005$bmrAn))
                     (char->integer (char-upcase g$x$6008$bmrAn)))))))
            (cons g$b$6006$bmrAn g$rest$6007$bmrAn))))))
   (g$char-ci>?$5972$bmrAn
     g$char-ci>?$6032$bmrAn
     (case-lambda
       ((g$a$6010$bmrAn g$b$6011$bmrAn . g$rest$6012$bmrAn)
        (begin
          (if (not (char? g$a$6010$bmrAn))
            (assertion-violation 'char-ci>? '"not a char" g$a$6010$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$6013$bmrAn)
               (begin
                 (if (not (char? g$x$6013$bmrAn))
                   (assertion-violation 'char-ci>? '"not a char" g$x$6013$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$6014$bmrAn)
                     (begin
                       (set! g$a$6010$bmrAn g$x$6013$bmrAn)
                       g$r$6014$bmrAn)))
                  (> (char->integer (char-upcase g$a$6010$bmrAn))
                     (char->integer (char-upcase g$x$6013$bmrAn)))))))
            (cons g$b$6011$bmrAn g$rest$6012$bmrAn))))))
   (g$char-ci<=?$5973$bmrAn
     g$char-ci<=?$6033$bmrAn
     (case-lambda
       ((g$a$6015$bmrAn g$b$6016$bmrAn . g$rest$6017$bmrAn)
        (begin
          (if (not (char? g$a$6015$bmrAn))
            (assertion-violation 'char-ci<=? '"not a char" g$a$6015$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$6018$bmrAn)
               (begin
                 (if (not (char? g$x$6018$bmrAn))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$6018$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$6019$bmrAn)
                     (begin
                       (set! g$a$6015$bmrAn g$x$6018$bmrAn)
                       g$r$6019$bmrAn)))
                  (<= (char->integer (char-upcase g$a$6015$bmrAn))
                      (char->integer (char-upcase g$x$6018$bmrAn)))))))
            (cons g$b$6016$bmrAn g$rest$6017$bmrAn))))))
   (g$char-ci>=?$5974$bmrAn
     g$char-ci>=?$6034$bmrAn
     (case-lambda
       ((g$a$6020$bmrAn g$b$6021$bmrAn . g$rest$6022$bmrAn)
        (begin
          (if (not (char? g$a$6020$bmrAn))
            (assertion-violation 'char-ci>=? '"not a char" g$a$6020$bmrAn)
            (void))
          (g$for-all$5061$bmrAn
            (case-lambda
              ((g$x$6023$bmrAn)
               (begin
                 (if (not (char? g$x$6023$bmrAn))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$6023$bmrAn)
                   (void))
                 ((case-lambda
                    ((g$r$6024$bmrAn)
                     (begin
                       (set! g$a$6020$bmrAn g$x$6023$bmrAn)
                       g$r$6024$bmrAn)))
                  (>= (char->integer (char-upcase g$a$6020$bmrAn))
                      (char->integer (char-upcase g$x$6023$bmrAn)))))))
            (cons g$b$6021$bmrAn g$rest$6022$bmrAn)))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$6035$bmrAn
     g$bitwise-if$6066$bmrAn
     (case-lambda
       ((g$ei1$6042$bmrAn g$ei2$6043$bmrAn g$ei3$6044$bmrAn)
        (bitwise-ior
          (bitwise-and g$ei1$6042$bmrAn g$ei2$6043$bmrAn)
          (bitwise-and (bitwise-not g$ei1$6042$bmrAn) g$ei3$6044$bmrAn)))))
   (g$bitwise-copy-bit$6036$bmrAn
     g$bitwise-copy-bit$6067$bmrAn
     (case-lambda
       ((g$ei1$6045$bmrAn g$ei2$6046$bmrAn g$ei3$6047$bmrAn)
        (g$bitwise-if$6035$bmrAn
          (g$bitwise-arithmetic-shift-left$6039$bmrAn '1 g$ei2$6046$bmrAn)
          (g$bitwise-arithmetic-shift-left$6039$bmrAn
            g$ei3$6047$bmrAn
            g$ei2$6046$bmrAn)
          g$ei1$6045$bmrAn))))
   (g$bitwise-bit-field$6037$bmrAn
     g$bitwise-bit-field$6068$bmrAn
     (case-lambda
       ((g$ei1$6048$bmrAn g$ei2$6049$bmrAn g$ei3$6050$bmrAn)
        (g$bitwise-arithmetic-shift-right$6040$bmrAn
          (bitwise-and
            g$ei1$6048$bmrAn
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$6039$bmrAn
                '-1
                g$ei3$6050$bmrAn)))
          g$ei2$6049$bmrAn))))
   (g$bitwise-copy-bit-field$6038$bmrAn
     g$bitwise-copy-bit-field$6069$bmrAn
     (case-lambda
       ((g$to$6051$bmrAn g$start$6052$bmrAn g$end$6053$bmrAn g$from$6054$bmrAn)
        (g$bitwise-if$6035$bmrAn
          (bitwise-and
            (g$bitwise-arithmetic-shift-left$6039$bmrAn '-1 g$start$6052$bmrAn)
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$6039$bmrAn
                '-1
                g$end$6053$bmrAn)))
          (g$bitwise-arithmetic-shift-left$6039$bmrAn
            g$from$6054$bmrAn
            g$start$6052$bmrAn)
          g$to$6051$bmrAn))))
   (g$bitwise-arithmetic-shift-left$6039$bmrAn
     g$bitwise-arithmetic-shift-left$6070$bmrAn
     (case-lambda
       ((g$ei1$6055$bmrAn g$ei2$6056$bmrAn)
        (bitwise-arithmetic-shift g$ei1$6055$bmrAn g$ei2$6056$bmrAn))))
   (g$bitwise-arithmetic-shift-right$6040$bmrAn
     g$bitwise-arithmetic-shift-right$6071$bmrAn
     (case-lambda
       ((g$ei1$6057$bmrAn g$ei2$6058$bmrAn)
        (bitwise-arithmetic-shift g$ei1$6057$bmrAn (- g$ei2$6058$bmrAn)))))
   (g$bitwise-rotate-bit-field$6041$bmrAn
     g$bitwise-rotate-bit-field$6072$bmrAn
     (case-lambda
       ((g$n$6059$bmrAn g$start$6060$bmrAn g$end$6061$bmrAn g$count$6062$bmrAn)
        ((case-lambda
           ((g$width$6063$bmrAn)
            (if (g$positive?$5291$bmrAn g$width$6063$bmrAn)
              ((case-lambda
                 ((g$count$6064$bmrAn g$field$6065$bmrAn)
                  (g$bitwise-copy-bit-field$6038$bmrAn
                    g$n$6059$bmrAn
                    g$start$6060$bmrAn
                    g$end$6061$bmrAn
                    (bitwise-ior
                      (g$bitwise-arithmetic-shift-left$6039$bmrAn
                        g$field$6065$bmrAn
                        g$count$6064$bmrAn)
                      (g$bitwise-arithmetic-shift-right$6040$bmrAn
                        g$field$6065$bmrAn
                        (- g$width$6063$bmrAn g$count$6064$bmrAn))))))
               (mod g$count$6062$bmrAn g$width$6063$bmrAn)
               (g$bitwise-bit-field$6037$bmrAn
                 g$n$6059$bmrAn
                 g$start$6060$bmrAn
                 g$end$6061$bmrAn))
              g$n$6059$bmrAn)))
         (- g$end$6061$bmrAn g$start$6060$bmrAn))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fx*/carry$6073$bmrAn
     g$fx*/carry$6122$bmrAn
     (case-lambda
       ((g$fx1$6083$bmrAn g$fx2$6084$bmrAn g$fx3$6085$bmrAn)
        ((case-lambda
           ((g$s$6086$bmrAn g$e$6087$bmrAn)
            (values
              (mod0 g$s$6086$bmrAn g$e$6087$bmrAn)
              (div0 g$s$6086$bmrAn g$e$6087$bmrAn))))
         (+ (* g$fx1$6083$bmrAn g$fx2$6084$bmrAn) g$fx3$6085$bmrAn)
         (expt '2 (fixnum-width))))))
   (g$fx-/carry$6074$bmrAn
     g$fx-/carry$6123$bmrAn
     (case-lambda
       ((g$fx1$6088$bmrAn g$fx2$6089$bmrAn g$fx3$6090$bmrAn)
        ((case-lambda
           ((g$s$6091$bmrAn g$e$6092$bmrAn)
            (values
              (mod0 g$s$6091$bmrAn g$e$6092$bmrAn)
              (div0 g$s$6091$bmrAn g$e$6092$bmrAn))))
         (- g$fx1$6088$bmrAn g$fx2$6089$bmrAn g$fx3$6090$bmrAn)
         (expt '2 (fixnum-width))))))
   (g$fx+/carry$6075$bmrAn
     g$fx+/carry$6124$bmrAn
     (case-lambda
       ((g$fx1$6093$bmrAn g$fx2$6094$bmrAn g$fx3$6095$bmrAn)
        ((case-lambda
           ((g$s$6096$bmrAn g$e$6097$bmrAn)
            (values
              (mod0 g$s$6096$bmrAn g$e$6097$bmrAn)
              (div0 g$s$6096$bmrAn g$e$6097$bmrAn))))
         (+ g$fx1$6093$bmrAn g$fx2$6094$bmrAn g$fx3$6095$bmrAn)
         (expt '2 (fixnum-width))))))
   (g$fxif$6076$bmrAn
     g$fxif$6125$bmrAn
     (case-lambda
       ((g$fx1$6098$bmrAn g$fx2$6099$bmrAn g$fx3$6100$bmrAn)
        (fxior
          (fxand g$fx1$6098$bmrAn g$fx2$6099$bmrAn)
          (fxand (fxnot g$fx1$6098$bmrAn) g$fx3$6100$bmrAn)))))
   (g$fxcopy-bit$6077$bmrAn
     g$fxcopy-bit$6126$bmrAn
     (case-lambda
       ((g$fx1$6101$bmrAn g$fx2$6102$bmrAn g$fx3$6103$bmrAn)
        (g$fxif$6076$bmrAn
          (g$fxarithmetic-shift-left$6080$bmrAn '1 g$fx2$6102$bmrAn)
          (g$fxarithmetic-shift-left$6080$bmrAn
            g$fx3$6103$bmrAn
            g$fx2$6102$bmrAn)
          g$fx1$6101$bmrAn))))
   (g$fxbit-field$6078$bmrAn
     g$fxbit-field$6127$bmrAn
     (case-lambda
       ((g$fx1$6104$bmrAn g$fx2$6105$bmrAn g$fx3$6106$bmrAn)
        (g$fxarithmetic-shift-right$6081$bmrAn
          (fxand
            g$fx1$6104$bmrAn
            (fxnot (g$fxarithmetic-shift-left$6080$bmrAn '-1 g$fx3$6106$bmrAn)))
          g$fx2$6105$bmrAn))))
   (g$fxcopy-bit-field$6079$bmrAn
     g$fxcopy-bit-field$6128$bmrAn
     (case-lambda
       ((g$to$6107$bmrAn g$start$6108$bmrAn g$end$6109$bmrAn g$from$6110$bmrAn)
        (g$fxif$6076$bmrAn
          (fxand
            (g$fxarithmetic-shift-left$6080$bmrAn '-1 g$start$6108$bmrAn)
            (fxnot (g$fxarithmetic-shift-left$6080$bmrAn '-1 g$end$6109$bmrAn)))
          (g$fxarithmetic-shift-left$6080$bmrAn
            g$from$6110$bmrAn
            g$start$6108$bmrAn)
          g$to$6107$bmrAn))))
   (g$fxarithmetic-shift-left$6080$bmrAn
     g$fxarithmetic-shift-left$6129$bmrAn
     (case-lambda
       ((g$fx1$6111$bmrAn g$fx2$6112$bmrAn)
        (fxarithmetic-shift g$fx1$6111$bmrAn g$fx2$6112$bmrAn))))
   (g$fxarithmetic-shift-right$6081$bmrAn
     g$fxarithmetic-shift-right$6130$bmrAn
     (case-lambda
       ((g$fx1$6113$bmrAn g$fx2$6114$bmrAn)
        (fxarithmetic-shift g$fx1$6113$bmrAn (fx- g$fx2$6114$bmrAn)))))
   (g$fxrotate-bit-field$6082$bmrAn
     g$fxrotate-bit-field$6131$bmrAn
     (case-lambda
       ((g$n$6115$bmrAn g$start$6116$bmrAn g$end$6117$bmrAn g$count$6118$bmrAn)
        ((case-lambda
           ((g$width$6119$bmrAn)
            (if (fxpositive? g$width$6119$bmrAn)
              ((case-lambda
                 ((g$count$6120$bmrAn g$field$6121$bmrAn)
                  (g$fxcopy-bit-field$6079$bmrAn
                    g$n$6115$bmrAn
                    g$start$6116$bmrAn
                    g$end$6117$bmrAn
                    (fxior
                      (g$fxarithmetic-shift-left$6080$bmrAn
                        g$field$6121$bmrAn
                        g$count$6120$bmrAn)
                      (g$fxarithmetic-shift-right$6081$bmrAn
                        g$field$6121$bmrAn
                        (fx- g$width$6119$bmrAn g$count$6120$bmrAn))))))
               (fxmod g$count$6118$bmrAn g$width$6119$bmrAn)
               (g$fxbit-field$6078$bmrAn
                 g$n$6115$bmrAn
                 g$start$6116$bmrAn
                 g$end$6117$bmrAn))
              g$n$6115$bmrAn)))
         (fx- g$end$6117$bmrAn g$start$6116$bmrAn))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7170$6132$bmrAn
     g$7170$6144$bmrAn
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7173$bmrAn
       '#f
       '#f
       '#()))
   (g$7172$6133$bmrAn g$7172$6145$bmrAn '#f)
   (g$7171$6134$bmrAn
     g$7171$6146$bmrAn
     (make-record-constructor-descriptor
       g$7170$6132$bmrAn
       &implementation-restriction-rcd
       g$7172$6133$bmrAn))
   (g$7169$6135$bmrAn
     g$7169$6147$bmrAn
     (record-predicate g$7170$6132$bmrAn))
   (g$make-no-infinities-violation$6136$bmrAn
     g$make-no-infinities-violation$6148$bmrAn
     (record-constructor g$7171$6134$bmrAn))
   (g$no-infinities-violation?$6137$bmrAn
     g$no-infinities-violation?$6149$bmrAn
     (condition-predicate g$7170$6132$bmrAn))
   (g$7184$6138$bmrAn
     g$7184$6150$bmrAn
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7187$bmrAn
       '#f
       '#f
       '#()))
   (g$7186$6139$bmrAn g$7186$6151$bmrAn '#f)
   (g$7185$6140$bmrAn
     g$7185$6152$bmrAn
     (make-record-constructor-descriptor
       g$7184$6138$bmrAn
       &implementation-restriction-rcd
       g$7186$6139$bmrAn))
   (g$7183$6141$bmrAn
     g$7183$6153$bmrAn
     (record-predicate g$7184$6138$bmrAn))
   (g$make-no-nans-violation$6142$bmrAn
     g$make-no-nans-violation$6154$bmrAn
     (record-constructor g$7185$6140$bmrAn))
   (g$no-nans-violation?$6143$bmrAn
     g$no-nans-violation?$6155$bmrAn
     (condition-predicate g$7184$6138$bmrAn)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7199$6156$bmrAn
     g$7199$6236$bmrAn
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7202$bmrAn
       '#f
       '#f
       '#()))
   (g$7201$6157$bmrAn g$7201$6237$bmrAn '#f)
   (g$7200$6158$bmrAn
     g$7200$6238$bmrAn
     (make-record-constructor-descriptor
       g$7199$6156$bmrAn
       &error-rcd
       g$7201$6157$bmrAn))
   (g$7198$6159$bmrAn
     g$7198$6239$bmrAn
     (record-predicate g$7199$6156$bmrAn))
   (g$make-i/o-error$6160$bmrAn
     g$make-i/o-error$6240$bmrAn
     (record-constructor g$7200$6158$bmrAn))
   (g$i/o-error?$6161$bmrAn
     g$i/o-error?$6241$bmrAn
     (condition-predicate g$7199$6156$bmrAn))
   (g$7213$6162$bmrAn
     g$7213$6242$bmrAn
     (make-record-type-descriptor
       '&i/o-read
       g$7199$6156$bmrAn
       'g$7216$bmrAn
       '#f
       '#f
       '#()))
   (g$7215$6163$bmrAn g$7215$6243$bmrAn '#f)
   (g$7214$6164$bmrAn
     g$7214$6244$bmrAn
     (make-record-constructor-descriptor
       g$7213$6162$bmrAn
       g$7200$6158$bmrAn
       g$7215$6163$bmrAn))
   (g$7212$6165$bmrAn
     g$7212$6245$bmrAn
     (record-predicate g$7213$6162$bmrAn))
   (g$make-i/o-read-error$6166$bmrAn
     g$make-i/o-read-error$6246$bmrAn
     (record-constructor g$7214$6164$bmrAn))
   (g$i/o-read-error?$6167$bmrAn
     g$i/o-read-error?$6247$bmrAn
     (condition-predicate g$7213$6162$bmrAn))
   (g$7227$6168$bmrAn
     g$7227$6248$bmrAn
     (make-record-type-descriptor
       '&i/o-write
       g$7199$6156$bmrAn
       'g$7230$bmrAn
       '#f
       '#f
       '#()))
   (g$7229$6169$bmrAn g$7229$6249$bmrAn '#f)
   (g$7228$6170$bmrAn
     g$7228$6250$bmrAn
     (make-record-constructor-descriptor
       g$7227$6168$bmrAn
       g$7200$6158$bmrAn
       g$7229$6169$bmrAn))
   (g$7226$6171$bmrAn
     g$7226$6251$bmrAn
     (record-predicate g$7227$6168$bmrAn))
   (g$make-i/o-write-error$6172$bmrAn
     g$make-i/o-write-error$6252$bmrAn
     (record-constructor g$7228$6170$bmrAn))
   (g$i/o-write-error?$6173$bmrAn
     g$i/o-write-error?$6253$bmrAn
     (condition-predicate g$7227$6168$bmrAn))
   (g$7242$6174$bmrAn
     g$7242$6254$bmrAn
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7199$6156$bmrAn
       'g$7245$bmrAn
       '#f
       '#f
       '#((immutable position))))
   (g$7244$6175$bmrAn g$7244$6255$bmrAn '#f)
   (g$7243$6176$bmrAn
     g$7243$6256$bmrAn
     (make-record-constructor-descriptor
       g$7242$6174$bmrAn
       g$7200$6158$bmrAn
       g$7244$6175$bmrAn))
   (g$7241$6177$bmrAn
     g$7241$6257$bmrAn
     (record-predicate g$7242$6174$bmrAn))
   (g$make-i/o-invalid-position-error$6178$bmrAn
     g$make-i/o-invalid-position-error$6258$bmrAn
     (record-constructor g$7243$6176$bmrAn))
   (g$7240$6179$bmrAn
     g$7240$6259$bmrAn
     (record-accessor g$7242$6174$bmrAn '0))
   (g$i/o-invalid-position-error?$6180$bmrAn
     g$i/o-invalid-position-error?$6260$bmrAn
     (condition-predicate g$7242$6174$bmrAn))
   (g$i/o-error-position$6181$bmrAn
     g$i/o-error-position$6261$bmrAn
     (condition-accessor g$7242$6174$bmrAn g$7240$6179$bmrAn))
   (g$7259$6182$bmrAn
     g$7259$6262$bmrAn
     (make-record-type-descriptor
       '&i/o-filename
       g$7199$6156$bmrAn
       'g$7262$bmrAn
       '#f
       '#f
       '#((immutable filename))))
   (g$7261$6183$bmrAn g$7261$6263$bmrAn '#f)
   (g$7260$6184$bmrAn
     g$7260$6264$bmrAn
     (make-record-constructor-descriptor
       g$7259$6182$bmrAn
       g$7200$6158$bmrAn
       g$7261$6183$bmrAn))
   (g$7258$6185$bmrAn
     g$7258$6265$bmrAn
     (record-predicate g$7259$6182$bmrAn))
   (g$make-i/o-filename-error$6186$bmrAn
     g$make-i/o-filename-error$6266$bmrAn
     (record-constructor g$7260$6184$bmrAn))
   (g$7257$6187$bmrAn
     g$7257$6267$bmrAn
     (record-accessor g$7259$6182$bmrAn '0))
   (g$i/o-filename-error?$6188$bmrAn
     g$i/o-filename-error?$6268$bmrAn
     (condition-predicate g$7259$6182$bmrAn))
   (g$i/o-error-filename$6189$bmrAn
     g$i/o-error-filename$6269$bmrAn
     (condition-accessor g$7259$6182$bmrAn g$7257$6187$bmrAn))
   (g$7275$6190$bmrAn
     g$7275$6270$bmrAn
     (make-record-type-descriptor
       '&i/o-file-protection
       g$7259$6182$bmrAn
       'g$7278$bmrAn
       '#f
       '#f
       '#()))
   (g$7277$6191$bmrAn g$7277$6271$bmrAn '#f)
   (g$7276$6192$bmrAn
     g$7276$6272$bmrAn
     (make-record-constructor-descriptor
       g$7275$6190$bmrAn
       g$7260$6184$bmrAn
       g$7277$6191$bmrAn))
   (g$7274$6193$bmrAn
     g$7274$6273$bmrAn
     (record-predicate g$7275$6190$bmrAn))
   (g$make-i/o-file-protection-error$6194$bmrAn
     g$make-i/o-file-protection-error$6274$bmrAn
     (record-constructor g$7276$6192$bmrAn))
   (g$i/o-file-protection-error?$6195$bmrAn
     g$i/o-file-protection-error?$6275$bmrAn
     (condition-predicate g$7275$6190$bmrAn))
   (g$7289$6196$bmrAn
     g$7289$6276$bmrAn
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$7275$6190$bmrAn
       'g$7292$bmrAn
       '#f
       '#f
       '#()))
   (g$7291$6197$bmrAn g$7291$6277$bmrAn '#f)
   (g$7290$6198$bmrAn
     g$7290$6278$bmrAn
     (make-record-constructor-descriptor
       g$7289$6196$bmrAn
       g$7276$6192$bmrAn
       g$7291$6197$bmrAn))
   (g$7288$6199$bmrAn
     g$7288$6279$bmrAn
     (record-predicate g$7289$6196$bmrAn))
   (g$make-i/o-file-is-read-only-error$6200$bmrAn
     g$make-i/o-file-is-read-only-error$6280$bmrAn
     (record-constructor g$7290$6198$bmrAn))
   (g$i/o-file-is-read-only-error?$6201$bmrAn
     g$i/o-file-is-read-only-error?$6281$bmrAn
     (condition-predicate g$7289$6196$bmrAn))
   (g$7303$6202$bmrAn
     g$7303$6282$bmrAn
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$7259$6182$bmrAn
       'g$7306$bmrAn
       '#f
       '#f
       '#()))
   (g$7305$6203$bmrAn g$7305$6283$bmrAn '#f)
   (g$7304$6204$bmrAn
     g$7304$6284$bmrAn
     (make-record-constructor-descriptor
       g$7303$6202$bmrAn
       g$7260$6184$bmrAn
       g$7305$6203$bmrAn))
   (g$7302$6205$bmrAn
     g$7302$6285$bmrAn
     (record-predicate g$7303$6202$bmrAn))
   (g$make-i/o-file-already-exists-error$6206$bmrAn
     g$make-i/o-file-already-exists-error$6286$bmrAn
     (record-constructor g$7304$6204$bmrAn))
   (g$i/o-file-already-exists-error?$6207$bmrAn
     g$i/o-file-already-exists-error?$6287$bmrAn
     (condition-predicate g$7303$6202$bmrAn))
   (g$7317$6208$bmrAn
     g$7317$6288$bmrAn
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$7259$6182$bmrAn
       'g$7320$bmrAn
       '#f
       '#f
       '#()))
   (g$7319$6209$bmrAn g$7319$6289$bmrAn '#f)
   (g$7318$6210$bmrAn
     g$7318$6290$bmrAn
     (make-record-constructor-descriptor
       g$7317$6208$bmrAn
       g$7260$6184$bmrAn
       g$7319$6209$bmrAn))
   (g$7316$6211$bmrAn
     g$7316$6291$bmrAn
     (record-predicate g$7317$6208$bmrAn))
   (g$make-i/o-file-does-not-exist-error$6212$bmrAn
     g$make-i/o-file-does-not-exist-error$6292$bmrAn
     (record-constructor g$7318$6210$bmrAn))
   (g$i/o-file-does-not-exist-error?$6213$bmrAn
     g$i/o-file-does-not-exist-error?$6293$bmrAn
     (condition-predicate g$7317$6208$bmrAn))
   (g$7332$6214$bmrAn
     g$7332$6294$bmrAn
     (make-record-type-descriptor
       '&i/o-port
       g$7199$6156$bmrAn
       'g$7335$bmrAn
       '#f
       '#f
       '#((immutable port))))
   (g$7334$6215$bmrAn g$7334$6295$bmrAn '#f)
   (g$7333$6216$bmrAn
     g$7333$6296$bmrAn
     (make-record-constructor-descriptor
       g$7332$6214$bmrAn
       g$7200$6158$bmrAn
       g$7334$6215$bmrAn))
   (g$7331$6217$bmrAn
     g$7331$6297$bmrAn
     (record-predicate g$7332$6214$bmrAn))
   (g$make-i/o-port-error$6218$bmrAn
     g$make-i/o-port-error$6298$bmrAn
     (record-constructor g$7333$6216$bmrAn))
   (g$7330$6219$bmrAn
     g$7330$6299$bmrAn
     (record-accessor g$7332$6214$bmrAn '0))
   (g$i/o-port-error?$6220$bmrAn
     g$i/o-port-error?$6300$bmrAn
     (condition-predicate g$7332$6214$bmrAn))
   (g$i/o-error-port$6221$bmrAn
     g$i/o-error-port$6301$bmrAn
     (condition-accessor g$7332$6214$bmrAn g$7330$6219$bmrAn))
   (g$7348$6222$bmrAn
     g$7348$6302$bmrAn
     (make-record-type-descriptor
       '&i/o-decoding
       g$7332$6214$bmrAn
       'g$7351$bmrAn
       '#f
       '#f
       '#()))
   (g$7350$6223$bmrAn g$7350$6303$bmrAn '#f)
   (g$7349$6224$bmrAn
     g$7349$6304$bmrAn
     (make-record-constructor-descriptor
       g$7348$6222$bmrAn
       g$7333$6216$bmrAn
       g$7350$6223$bmrAn))
   (g$7347$6225$bmrAn
     g$7347$6305$bmrAn
     (record-predicate g$7348$6222$bmrAn))
   (g$make-i/o-decoding-error$6226$bmrAn
     g$make-i/o-decoding-error$6306$bmrAn
     (record-constructor g$7349$6224$bmrAn))
   (g$i/o-decoding-error?$6227$bmrAn
     g$i/o-decoding-error?$6307$bmrAn
     (condition-predicate g$7348$6222$bmrAn))
   (g$7363$6228$bmrAn
     g$7363$6308$bmrAn
     (make-record-type-descriptor
       '&i/o-encoding
       g$7332$6214$bmrAn
       'g$7366$bmrAn
       '#f
       '#f
       '#((immutable char))))
   (g$7365$6229$bmrAn g$7365$6309$bmrAn '#f)
   (g$7364$6230$bmrAn
     g$7364$6310$bmrAn
     (make-record-constructor-descriptor
       g$7363$6228$bmrAn
       g$7333$6216$bmrAn
       g$7365$6229$bmrAn))
   (g$7362$6231$bmrAn
     g$7362$6311$bmrAn
     (record-predicate g$7363$6228$bmrAn))
   (g$make-i/o-encoding-error$6232$bmrAn
     g$make-i/o-encoding-error$6312$bmrAn
     (record-constructor g$7364$6230$bmrAn))
   (g$7361$6233$bmrAn
     g$7361$6313$bmrAn
     (record-accessor g$7363$6228$bmrAn '0))
   (g$i/o-encoding-error?$6234$bmrAn
     g$i/o-encoding-error?$6314$bmrAn
     (condition-predicate g$7363$6228$bmrAn))
   (g$i/o-encoding-error-char$6235$bmrAn
     g$i/o-encoding-error-char$6315$bmrAn
     (condition-accessor g$7363$6228$bmrAn g$7361$6233$bmrAn)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$using$6317$bmrAn
     g$using$6333$bmrAn
     (clr-using-internal 'ironscheme.runtime))
   (g$get-output-string$6318$bmrAn
     g$get-output-string$6334$bmrAn
     (case-lambda
       ((g$port$6324$bmrAn)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$6324$bmrAn))))
   (g$open-output-string$6319$bmrAn
     g$open-output-string$6335$bmrAn
     (case-lambda (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$6320$bmrAn
     g$open-string-output-port$6336$bmrAn
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6325$bmrAn)
            (values
              g$p$6325$bmrAn
              (case-lambda
                (() (g$get-output-string$6318$bmrAn g$p$6325$bmrAn))))))
         (g$open-output-string$6319$bmrAn)))))
   (g$port?$6321$bmrAn
     g$port?$6337$bmrAn
     (case-lambda
       ((g$obj$6326$bmrAn)
        ((case-lambda
           ((g$t$6327$bmrAn)
            (if g$t$6327$bmrAn
              g$t$6327$bmrAn
              (begin '#f (binary-port? g$obj$6326$bmrAn)))))
         (textual-port? g$obj$6326$bmrAn)))))
   (g$call-with-string-output-port$6322$bmrAn
     g$call-with-string-output-port$6338$bmrAn
     (case-lambda
       ((g$proc$6328$bmrAn)
        ((case-lambda
           ((g$p$6329$bmrAn)
            (begin
              (g$call-with-port$6323$bmrAn g$p$6329$bmrAn g$proc$6328$bmrAn)
              (g$get-output-string$6318$bmrAn g$p$6329$bmrAn))))
         (g$open-output-string$6319$bmrAn)))))
   (g$call-with-port$6323$bmrAn
     g$call-with-port$6339$bmrAn
     (case-lambda
       ((g$port$6330$bmrAn g$proc$6331$bmrAn)
        ((case-lambda
           ((g$r$6332$bmrAn)
            (begin (close-port g$port$6330$bmrAn) g$r$6332$bmrAn)))
         (g$proc$6331$bmrAn g$port$6330$bmrAn))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$peek-char$6340$bmrAn
     g$peek-char$6382$bmrAn
     (case-lambda
       (() (g$peek-char$6340$bmrAn (current-input-port)))
       ((g$port$6354$bmrAn) (lookahead-char g$port$6354$bmrAn))))
   (g$read-char$6341$bmrAn
     g$read-char$6383$bmrAn
     (case-lambda
       (() (g$read-char$6341$bmrAn (current-input-port)))
       ((g$port$6355$bmrAn) (get-char g$port$6355$bmrAn))))
   (g$write-char$6342$bmrAn
     g$write-char$6384$bmrAn
     (case-lambda
       ((g$chr$6356$bmrAn)
        (g$write-char$6342$bmrAn g$chr$6356$bmrAn (current-output-port)))
       ((g$chr$6357$bmrAn g$port$6358$bmrAn)
        (put-char g$port$6358$bmrAn g$chr$6357$bmrAn))))
   (g$with-input-from-file$6349$bmrAn
     g$with-input-from-file$6385$bmrAn
     (case-lambda
       ((g$filename$6359$bmrAn g$thunk$6360$bmrAn)
        ((case-lambda
           ((g$current-input-port$6363$bmrAn g$t$6364$bmrAn)
            ((case-lambda
               ((g$swap$6365$bmrAn)
                (dynamic-wind
                  g$swap$6365$bmrAn
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6360$bmrAn)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$6365$bmrAn)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6366$bmrAn)
                    (begin
                      (g$current-input-port$6363$bmrAn g$t$6364$bmrAn)
                      (set! g$t$6364$bmrAn g$t$6366$bmrAn))))
                 (g$current-input-port$6363$bmrAn)))))))
         current-input-port
         (open-input-file g$filename$6359$bmrAn)))))
   (g$with-output-to-file$6350$bmrAn
     g$with-output-to-file$6386$bmrAn
     (case-lambda
       ((g$filename$6367$bmrAn g$thunk$6368$bmrAn)
        ((case-lambda
           ((g$current-output-port$6371$bmrAn g$t$6372$bmrAn)
            ((case-lambda
               ((g$swap$6373$bmrAn)
                (dynamic-wind
                  g$swap$6373$bmrAn
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6368$bmrAn)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$6373$bmrAn)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6374$bmrAn)
                    (begin
                      (g$current-output-port$6371$bmrAn g$t$6372$bmrAn)
                      (set! g$t$6372$bmrAn g$t$6374$bmrAn))))
                 (g$current-output-port$6371$bmrAn)))))))
         current-output-port
         (open-output-file g$filename$6367$bmrAn)))))
   (g$call-with-input-file$6351$bmrAn
     g$call-with-input-file$6387$bmrAn
     (case-lambda
       ((g$filename$6375$bmrAn g$proc$6376$bmrAn)
        ((case-lambda
           ((g$p$6377$bmrAn)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6376$bmrAn g$p$6377$bmrAn)))
              (case-lambda (() (close-input-port g$p$6377$bmrAn))))))
         (open-input-file g$filename$6375$bmrAn)))))
   (g$call-with-output-file$6352$bmrAn
     g$call-with-output-file$6388$bmrAn
     (case-lambda
       ((g$filename$6378$bmrAn g$proc$6379$bmrAn)
        ((case-lambda
           ((g$p$6380$bmrAn)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6379$bmrAn g$p$6380$bmrAn)))
              (case-lambda (() (close-output-port g$p$6380$bmrAn))))))
         (open-output-file g$filename$6378$bmrAn)))))
   (g$newline$6353$bmrAn
     g$newline$6389$bmrAn
     (case-lambda
       (() (g$newline$6353$bmrAn (current-output-port)))
       ((g$port$6381$bmrAn) (display '"
" g$port$6381$bmrAn)))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$7448$6390$bmrAn
     g$7448$6499$bmrAn
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$7450$6391$bmrAn g$7450$6500$bmrAn '#f)
   (g$7449$6392$bmrAn
     g$7449$6501$bmrAn
     (make-record-constructor-descriptor
       g$7448$6390$bmrAn
       '#f
       g$7450$6391$bmrAn))
   (g$enum?$6393$bmrAn
     g$enum?$6502$bmrAn
     (record-predicate g$7448$6390$bmrAn))
   (g$make-enum$6394$bmrAn
     g$make-enum$6503$bmrAn
     (record-constructor g$7449$6392$bmrAn))
   (g$enum-value$6395$bmrAn
     g$enum-value$6504$bmrAn
     (record-accessor g$7448$6390$bmrAn '0))
   (g$enum-info$6396$bmrAn
     g$enum-info$6505$bmrAn
     (record-accessor g$7448$6390$bmrAn '1))
   (g$7461$6397$bmrAn
     g$7461$6506$bmrAn
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$7463$6398$bmrAn g$7463$6507$bmrAn '#f)
   (g$7462$6399$bmrAn
     g$7462$6508$bmrAn
     (make-record-constructor-descriptor
       g$7461$6397$bmrAn
       '#f
       g$7463$6398$bmrAn))
   (g$enum-universe?$6400$bmrAn
     g$enum-universe?$6509$bmrAn
     (record-predicate g$7461$6397$bmrAn))
   (g$make-enum-universe$6401$bmrAn
     g$make-enum-universe$6510$bmrAn
     (record-constructor g$7462$6399$bmrAn))
   (g$enum-universe-id$6402$bmrAn
     g$enum-universe-id$6511$bmrAn
     (record-accessor g$7461$6397$bmrAn '0))
   (g$enum-universe-symbols$6403$bmrAn
     g$enum-universe-symbols$6512$bmrAn
     (record-accessor g$7461$6397$bmrAn '1))
   (g$enum-universe-mapping$6404$bmrAn
     g$enum-universe-mapping$6513$bmrAn
     (record-accessor g$7461$6397$bmrAn '2))
   (g$enum-universe-value$6405$bmrAn
     g$enum-universe-value$6514$bmrAn
     (record-accessor g$7461$6397$bmrAn '3))
   (g$enum-type=?$6406$bmrAn
     g$enum-type=?$6515$bmrAn
     (case-lambda
       ((g$enumset1$6428$bmrAn g$enumset2$6429$bmrAn)
        (eq? (g$enum-universe-id$6402$bmrAn
               (g$enum-info$6396$bmrAn g$enumset1$6428$bmrAn))
             (g$enum-universe-id$6402$bmrAn
               (g$enum-info$6396$bmrAn g$enumset2$6429$bmrAn))))))
   (g$get-symbols$6407$bmrAn
     g$get-symbols$6516$bmrAn
     (case-lambda
       ((g$enumset$6430$bmrAn)
        (g$enum-universe-symbols$6403$bmrAn
          (g$enum-info$6396$bmrAn g$enumset$6430$bmrAn)))))
   (g$get-value$6408$bmrAn
     g$get-value$6517$bmrAn
     (case-lambda
       ((g$enumset$6431$bmrAn g$s$6432$bmrAn)
        (g$hashtable-ref$5541$bmrAn
          (g$enum-universe-mapping$6404$bmrAn
            (g$enum-info$6396$bmrAn g$enumset$6431$bmrAn))
          g$s$6432$bmrAn
          '#f))))
   (g$assert-enum$6409$bmrAn
     g$assert-enum$6518$bmrAn
     (case-lambda
       ((g$who$6433$bmrAn g$enumset$6434$bmrAn)
        (if (not (g$enum?$6393$bmrAn g$enumset$6434$bmrAn))
          (assertion-violation
            g$who$6433$bmrAn
            '"not an enumeration"
            g$enumset$6434$bmrAn)
          (void)))))
   (g$make-info$6410$bmrAn
     g$make-info$6519$bmrAn
     (case-lambda
       ((g$symbols$6435$bmrAn)
        ((case-lambda
           ((g$ht$6436$bmrAn)
            ((letrec ((g$f$6437$bmrAn
                        (case-lambda
                          ((g$s$6438$bmrAn g$a$6439$bmrAn g$mask$6440$bmrAn)
                           (if (null? g$s$6438$bmrAn)
                             (values
                               (reverse! g$a$6439$bmrAn)
                               g$ht$6436$bmrAn
                               (- g$mask$6440$bmrAn '1))
                             ((case-lambda
                                ((g$n$6441$bmrAn)
                                 (if (symbol? g$n$6441$bmrAn)
                                   (if (g$hashtable-contains?$5544$bmrAn
                                         g$ht$6436$bmrAn
                                         g$n$6441$bmrAn)
                                     (g$f$6437$bmrAn
                                       (cdr g$s$6438$bmrAn)
                                       g$a$6439$bmrAn
                                       g$mask$6440$bmrAn)
                                     (begin
                                       (g$hashtable-set!$5542$bmrAn
                                         g$ht$6436$bmrAn
                                         g$n$6441$bmrAn
                                         g$mask$6440$bmrAn)
                                       (g$f$6437$bmrAn
                                         (cdr g$s$6438$bmrAn)
                                         (cons g$n$6441$bmrAn g$a$6439$bmrAn)
                                         (g$bitwise-arithmetic-shift-left$6070$bmrAn
                                           g$mask$6440$bmrAn
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$6441$bmrAn))))
                              (car g$s$6438$bmrAn)))))))
               g$f$6437$bmrAn)
             g$symbols$6435$bmrAn
             '()
             '1)))
         (g$make-eq-hashtable$5538$bmrAn)))))
   (g$make-name$6411$bmrAn
     g$make-name$6520$bmrAn
     (case-lambda
       ((g$symbols$6442$bmrAn)
        (string->symbol (g$format$6559$bmrAn '"~a" g$symbols$6442$bmrAn)))))
   (g$make-enumeration$6412$bmrAn
     g$make-enumeration$6521$bmrAn
     (case-lambda
       ((g$symbols$6443$bmrAn)
        (call-with-values
          (case-lambda (() (g$make-info$6410$bmrAn g$symbols$6443$bmrAn)))
          (case-lambda
            ((g$s$6447$bmrAn g$mapping$6448$bmrAn g$mask$6449$bmrAn)
             ((case-lambda
                ((g$mask$6450$bmrAn g$mapping$6451$bmrAn g$s$6452$bmrAn)
                 (g$make-enum$6394$bmrAn
                   g$mask$6450$bmrAn
                   (g$make-enum-universe$6401$bmrAn
                     (g$make-name$6411$bmrAn g$s$6452$bmrAn)
                     g$s$6452$bmrAn
                     g$mapping$6451$bmrAn
                     g$mask$6450$bmrAn))))
              g$mask$6449$bmrAn
              g$mapping$6448$bmrAn
              g$s$6447$bmrAn)))))))
   (g$enum-set-universe$6413$bmrAn
     g$enum-set-universe$6522$bmrAn
     (case-lambda
       ((g$enumset$6453$bmrAn)
        (begin
          (g$assert-enum$6409$bmrAn 'enum-set-universe g$enumset$6453$bmrAn)
          ((case-lambda
             ((g$ei$6454$bmrAn)
              (g$make-enum$6394$bmrAn
                (g$enum-universe-value$6405$bmrAn g$ei$6454$bmrAn)
                g$ei$6454$bmrAn)))
           (g$enum-info$6396$bmrAn g$enumset$6453$bmrAn))))))
   (g$enum-set-indexer$6414$bmrAn
     g$enum-set-indexer$6523$bmrAn
     (case-lambda
       ((g$enumset$6455$bmrAn)
        (begin
          (g$assert-enum$6409$bmrAn 'enum-set-indexer g$enumset$6455$bmrAn)
          (case-lambda
            ((g$symbol$6456$bmrAn)
             (begin
               (if (not (symbol? g$symbol$6456$bmrAn))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$6456$bmrAn)
                 (void))
               ((case-lambda
                  ((g$v$6457$bmrAn)
                   (if g$v$6457$bmrAn
                     (- (bitwise-length g$v$6457$bmrAn) '1)
                     '#f)))
                (g$get-value$6408$bmrAn
                  g$enumset$6455$bmrAn
                  g$symbol$6456$bmrAn)))))))))
   (g$enum-set-constructor$6415$bmrAn
     g$enum-set-constructor$6524$bmrAn
     (case-lambda
       ((g$enumset$6458$bmrAn)
        (begin
          (g$assert-enum$6409$bmrAn 'enum-set-constructor g$enumset$6458$bmrAn)
          (case-lambda
            ((g$symbols$6459$bmrAn)
             ((letrec ((g$f$6460$bmrAn
                         (case-lambda
                           ((g$v$6461$bmrAn g$s$6462$bmrAn)
                            (if (null? g$s$6462$bmrAn)
                              (g$make-enum$6394$bmrAn
                                g$v$6461$bmrAn
                                (g$enum-info$6396$bmrAn g$enumset$6458$bmrAn))
                              ((case-lambda
                                 ((g$n$6463$bmrAn)
                                  (if (symbol? g$n$6463$bmrAn)
                                    ((case-lambda
                                       ((g$v*$6464$bmrAn)
                                        (if g$v*$6464$bmrAn
                                          (g$f$6460$bmrAn
                                            (bitwise-ior
                                              g$v$6461$bmrAn
                                              g$v*$6464$bmrAn)
                                            (cdr g$s$6462$bmrAn))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$6463$bmrAn))))
                                     (g$get-value$6408$bmrAn
                                       g$enumset$6458$bmrAn
                                       g$n$6463$bmrAn))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$6463$bmrAn))))
                               (car g$s$6462$bmrAn)))))))
                g$f$6460$bmrAn)
              '0
              g$symbols$6459$bmrAn)))))))
   (g$enum-set->list$6416$bmrAn
     g$enum-set->list$6525$bmrAn
     (case-lambda
       ((g$enumset$6465$bmrAn)
        (begin
          (g$assert-enum$6409$bmrAn 'enum-set->list g$enumset$6465$bmrAn)
          ((case-lambda
             ((g$value$6466$bmrAn)
              ((letrec ((g$f$6467$bmrAn
                          (case-lambda
                            ((g$s$6468$bmrAn g$l$6469$bmrAn)
                             (if (null? g$s$6468$bmrAn)
                               (reverse! g$l$6469$bmrAn)
                               (if (g$zero?$5293$bmrAn
                                     (bitwise-and
                                       (g$get-value$6408$bmrAn
                                         g$enumset$6465$bmrAn
                                         (car g$s$6468$bmrAn))
                                       g$value$6466$bmrAn))
                                 (g$f$6467$bmrAn
                                   (cdr g$s$6468$bmrAn)
                                   g$l$6469$bmrAn)
                                 (g$f$6467$bmrAn
                                   (cdr g$s$6468$bmrAn)
                                   (cons
                                     (car g$s$6468$bmrAn)
                                     g$l$6469$bmrAn))))))))
                 g$f$6467$bmrAn)
               (g$get-symbols$6407$bmrAn g$enumset$6465$bmrAn)
               '())))
           (g$enum-value$6395$bmrAn g$enumset$6465$bmrAn))))))
   (g$enum-set-member?$6417$bmrAn
     g$enum-set-member?$6526$bmrAn
     (case-lambda
       ((g$symbol$6470$bmrAn g$enumset$6471$bmrAn)
        (begin
          (if (not (symbol? g$symbol$6470$bmrAn))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$6470$bmrAn)
            (void))
          (g$assert-enum$6409$bmrAn 'enum-set-member? g$enumset$6471$bmrAn)
          ((case-lambda
             ((g$v$6472$bmrAn)
              (if g$v$6472$bmrAn
                (not (g$zero?$5293$bmrAn
                       (bitwise-and
                         g$v$6472$bmrAn
                         (g$enum-value$6395$bmrAn g$enumset$6471$bmrAn))))
                '#f)))
           (g$get-value$6408$bmrAn
             g$enumset$6471$bmrAn
             g$symbol$6470$bmrAn))))))
   (g$enum-set-subset?$6418$bmrAn
     g$enum-set-subset?$6527$bmrAn
     (case-lambda
       ((g$enumset1$6473$bmrAn g$enumset2$6474$bmrAn)
        (begin
          (g$assert-enum$6409$bmrAn 'enum-set-subset? g$enumset1$6473$bmrAn)
          (g$assert-enum$6409$bmrAn 'enum-set-subset? g$enumset2$6474$bmrAn)
          ((case-lambda
             ((g$v1$6475$bmrAn g$v2$6476$bmrAn)
              (if (g$enum-type=?$6406$bmrAn
                    g$enumset1$6473$bmrAn
                    g$enumset2$6474$bmrAn)
                (= (bitwise-and g$v1$6475$bmrAn g$v2$6476$bmrAn)
                   g$v1$6475$bmrAn)
                ((letrec ((g$f$6477$bmrAn
                            (case-lambda
                              ((g$s$6478$bmrAn)
                               (if (null? g$s$6478$bmrAn)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$6479$bmrAn g$v2*$6480$bmrAn)
                                     (if g$v2*$6480$bmrAn
                                       ((case-lambda
                                          ((g$has1$6481$bmrAn g$has2$6482$bmrAn)
                                           (if (if g$has1$6481$bmrAn
                                                 (begin
                                                   '#f
                                                   (not g$has2$6482$bmrAn))
                                                 '#f)
                                             '#f
                                             (g$f$6477$bmrAn
                                               (cdr g$s$6478$bmrAn)))))
                                        (not (g$zero?$5293$bmrAn
                                               (bitwise-and
                                                 g$v1$6475$bmrAn
                                                 g$v1*$6479$bmrAn)))
                                        (not (g$zero?$5293$bmrAn
                                               (bitwise-and
                                                 g$v2$6476$bmrAn
                                                 g$v2*$6480$bmrAn))))
                                       '#f)))
                                  (g$get-value$6408$bmrAn
                                    g$enumset1$6473$bmrAn
                                    (car g$s$6478$bmrAn))
                                  (g$get-value$6408$bmrAn
                                    g$enumset2$6474$bmrAn
                                    (car g$s$6478$bmrAn))))))))
                   g$f$6477$bmrAn)
                 (g$get-symbols$6407$bmrAn g$enumset1$6473$bmrAn)))))
           (g$enum-value$6395$bmrAn g$enumset1$6473$bmrAn)
           (g$enum-value$6395$bmrAn g$enumset2$6474$bmrAn))))))
   (g$enum-set=?$6419$bmrAn
     g$enum-set=?$6528$bmrAn
     (case-lambda
       ((g$enumset1$6483$bmrAn g$enumset2$6484$bmrAn)
        (begin
          (g$assert-enum$6409$bmrAn 'enum-set=? g$enumset1$6483$bmrAn)
          (g$assert-enum$6409$bmrAn 'enum-set=? g$enumset2$6484$bmrAn)
          (if (g$enum-set-subset?$6418$bmrAn
                g$enumset1$6483$bmrAn
                g$enumset2$6484$bmrAn)
            (begin
              '#f
              (g$enum-set-subset?$6418$bmrAn
                g$enumset2$6484$bmrAn
                g$enumset1$6483$bmrAn))
            '#f)))))
   (g$enum-set-union$6420$bmrAn
     g$enum-set-union$6529$bmrAn
     (case-lambda
       ((g$enumset1$6485$bmrAn g$enumset2$6486$bmrAn)
        (begin
          (g$assert-enum$6409$bmrAn 'enum-set-union g$enumset1$6485$bmrAn)
          (g$assert-enum$6409$bmrAn 'enum-set-union g$enumset2$6486$bmrAn)
          (if (g$enum-type=?$6406$bmrAn
                g$enumset1$6485$bmrAn
                g$enumset2$6486$bmrAn)
            (g$make-enum$6394$bmrAn
              (bitwise-ior
                (g$enum-value$6395$bmrAn g$enumset1$6485$bmrAn)
                (g$enum-value$6395$bmrAn g$enumset2$6486$bmrAn))
              (g$enum-info$6396$bmrAn g$enumset1$6485$bmrAn))
            '#f)))))
   (g$enum-set-intersection$6421$bmrAn
     g$enum-set-intersection$6530$bmrAn
     (case-lambda
       ((g$enumset1$6487$bmrAn g$enumset2$6488$bmrAn)
        (begin
          (g$assert-enum$6409$bmrAn
            'enum-set-intersection
            g$enumset1$6487$bmrAn)
          (g$assert-enum$6409$bmrAn
            'enum-set-intersection
            g$enumset2$6488$bmrAn)
          (if (g$enum-type=?$6406$bmrAn
                g$enumset1$6487$bmrAn
                g$enumset2$6488$bmrAn)
            (g$make-enum$6394$bmrAn
              (bitwise-and
                (g$enum-value$6395$bmrAn g$enumset1$6487$bmrAn)
                (g$enum-value$6395$bmrAn g$enumset2$6488$bmrAn))
              (g$enum-info$6396$bmrAn g$enumset1$6487$bmrAn))
            '#f)))))
   (g$enum-set-difference$6422$bmrAn
     g$enum-set-difference$6531$bmrAn
     (case-lambda
       ((g$enumset1$6489$bmrAn g$enumset2$6490$bmrAn)
        (begin
          (g$assert-enum$6409$bmrAn 'enum-set-difference g$enumset1$6489$bmrAn)
          (g$assert-enum$6409$bmrAn 'enum-set-difference g$enumset2$6490$bmrAn)
          (if (g$enum-type=?$6406$bmrAn
                g$enumset1$6489$bmrAn
                g$enumset2$6490$bmrAn)
            (g$make-enum$6394$bmrAn
              (bitwise-and
                (g$enum-value$6395$bmrAn g$enumset1$6489$bmrAn)
                (bitwise-not (g$enum-value$6395$bmrAn g$enumset2$6490$bmrAn)))
              (g$enum-info$6396$bmrAn g$enumset1$6489$bmrAn))
            '#f)))))
   (g$enum-set-complement$6423$bmrAn
     g$enum-set-complement$6532$bmrAn
     (case-lambda
       ((g$enumset$6491$bmrAn)
        (begin
          (g$assert-enum$6409$bmrAn 'enum-set-complement g$enumset$6491$bmrAn)
          (g$make-enum$6394$bmrAn
            (bitwise-not (g$enum-value$6395$bmrAn g$enumset$6491$bmrAn))
            (g$enum-info$6396$bmrAn g$enumset$6491$bmrAn))))))
   (g$enum-set-projection$6424$bmrAn
     g$enum-set-projection$6533$bmrAn
     (case-lambda
       ((g$enumset1$6492$bmrAn g$enumset2$6493$bmrAn)
        (begin
          (g$assert-enum$6409$bmrAn 'enum-set-projection g$enumset1$6492$bmrAn)
          (g$assert-enum$6409$bmrAn 'enum-set-projection g$enumset2$6493$bmrAn)
          ((case-lambda
             ((g$v1$6494$bmrAn)
              ((letrec ((g$f$6495$bmrAn
                          (case-lambda
                            ((g$s$6496$bmrAn g$v$6497$bmrAn)
                             (if (null? g$s$6496$bmrAn)
                               (g$make-enum$6394$bmrAn
                                 g$v$6497$bmrAn
                                 (g$enum-info$6396$bmrAn g$enumset2$6493$bmrAn))
                               (if (g$zero?$5293$bmrAn
                                     (bitwise-and
                                       g$v1$6494$bmrAn
                                       (g$get-value$6408$bmrAn
                                         g$enumset1$6492$bmrAn
                                         (car g$s$6496$bmrAn))))
                                 (g$f$6495$bmrAn
                                   (cdr g$s$6496$bmrAn)
                                   g$v$6497$bmrAn)
                                 ((case-lambda
                                    ((g$v2$6498$bmrAn)
                                     (if g$v2$6498$bmrAn
                                       (g$f$6495$bmrAn
                                         (cdr g$s$6496$bmrAn)
                                         (bitwise-ior
                                           g$v$6497$bmrAn
                                           g$v2$6498$bmrAn))
                                       (g$f$6495$bmrAn
                                         (cdr g$s$6496$bmrAn)
                                         g$v$6497$bmrAn))))
                                  (g$get-value$6408$bmrAn
                                    g$enumset2$6493$bmrAn
                                    (car g$s$6496$bmrAn)))))))))
                 g$f$6495$bmrAn)
               (g$get-symbols$6407$bmrAn g$enumset1$6492$bmrAn)
               '0)))
           (g$enum-value$6395$bmrAn g$enumset1$6492$bmrAn)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$6425$bmrAn g$p$6426$bmrAn g$wr$6427$bmrAn)
       (g$fprintf$6558$bmrAn
         g$p$6426$bmrAn
         '"#[enum-set ~a]"
         (g$enum-set->list$6416$bmrAn g$x$6425$bmrAn))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$6534$bmrAn
     g$dofmt$6556$bmrAn
     (case-lambda
       ((g$p$6538$bmrAn g$cntl$6539$bmrAn g$args$6540$bmrAn)
        ((case-lambda
           ((g$nmax$6541$bmrAn)
            ((letrec ((g$loop$6542$bmrAn
                        (case-lambda
                          ((g$n$6543$bmrAn g$a$6544$bmrAn)
                           (if (fx<=? g$n$6543$bmrAn g$nmax$6541$bmrAn)
                             ((case-lambda
                                ((g$c$6545$bmrAn)
                                 (if (if (g$char=?$5307$bmrAn
                                           g$c$6545$bmrAn
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6543$bmrAn
                                           g$nmax$6541$bmrAn))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6546$bmrAn)
                                       (if (g$memv$5056$bmrAn
                                             g$t$6546$bmrAn
                                             '(#\a))
                                         (begin
                                           (display
                                             (car g$a$6544$bmrAn)
                                             g$p$6538$bmrAn)
                                           (g$loop$6542$bmrAn
                                             (fx+ g$n$6543$bmrAn '2)
                                             (cdr g$a$6544$bmrAn)))
                                         (if (g$memv$5056$bmrAn
                                               g$t$6546$bmrAn
                                               '(#\s))
                                           (begin
                                             (write
                                               (car g$a$6544$bmrAn)
                                               g$p$6538$bmrAn)
                                             (g$loop$6542$bmrAn
                                               (fx+ g$n$6543$bmrAn '2)
                                               (cdr g$a$6544$bmrAn)))
                                           (if (g$memv$5056$bmrAn
                                                 g$t$6546$bmrAn
                                                 '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6544$bmrAn)
                                                   '2)
                                                 g$p$6538$bmrAn)
                                               (g$loop$6542$bmrAn
                                                 (fx+ g$n$6543$bmrAn '2)
                                                 (cdr g$a$6544$bmrAn)))
                                             (if (g$memv$5056$bmrAn
                                                   g$t$6546$bmrAn
                                                   '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6544$bmrAn)
                                                     '8)
                                                   g$p$6538$bmrAn)
                                                 (g$loop$6542$bmrAn
                                                   (fx+ g$n$6543$bmrAn '2)
                                                   (cdr g$a$6544$bmrAn)))
                                               (if (g$memv$5056$bmrAn
                                                     g$t$6546$bmrAn
                                                     '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6544$bmrAn)
                                                       '16)
                                                     g$p$6538$bmrAn)
                                                   (g$loop$6542$bmrAn
                                                     (fx+ g$n$6543$bmrAn '2)
                                                     (cdr g$a$6544$bmrAn)))
                                                 (if (g$memv$5056$bmrAn
                                                       g$t$6546$bmrAn
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6544$bmrAn)
                                                         '10)
                                                       g$p$6538$bmrAn)
                                                     (g$loop$6542$bmrAn
                                                       (fx+ g$n$6543$bmrAn '2)
                                                       (cdr g$a$6544$bmrAn)))
                                                   (if (g$memv$5056$bmrAn
                                                         g$t$6546$bmrAn
                                                         '(#\~))
                                                     (begin
                                                       (g$write-char$6384$bmrAn
                                                         '#\~
                                                         g$p$6538$bmrAn)
                                                       (g$loop$6542$bmrAn
                                                         (fx+ g$n$6543$bmrAn '2)
                                                         g$a$6544$bmrAn))
                                                     (begin
                                                       (g$write-char$6384$bmrAn
                                                         g$c$6545$bmrAn
                                                         g$p$6538$bmrAn)
                                                       (g$loop$6542$bmrAn
                                                         (fx+ g$n$6543$bmrAn '1)
                                                         g$a$6544$bmrAn)))))))))))
                                    (string-ref
                                      g$cntl$6539$bmrAn
                                      (fx+ g$n$6543$bmrAn '1)))
                                   (begin
                                     (g$write-char$6384$bmrAn
                                       g$c$6545$bmrAn
                                       g$p$6538$bmrAn)
                                     (g$loop$6542$bmrAn
                                       (fx+ g$n$6543$bmrAn '1)
                                       g$a$6544$bmrAn)))))
                              (string-ref g$cntl$6539$bmrAn g$n$6543$bmrAn))
                             (void))))))
               g$loop$6542$bmrAn)
             '0
             g$args$6540$bmrAn)))
         (fx- (string-length g$cntl$6539$bmrAn) '1)))))
   (g$printf$6535$bmrAn
     g$printf$6557$bmrAn
     (case-lambda
       ((g$control$6547$bmrAn . g$args$6548$bmrAn)
        (g$dofmt$6534$bmrAn
          (current-output-port)
          g$control$6547$bmrAn
          g$args$6548$bmrAn))))
   (g$fprintf$6536$bmrAn
     g$fprintf$6558$bmrAn
     (case-lambda
       ((g$p$6549$bmrAn g$control$6550$bmrAn . g$args$6551$bmrAn)
        (g$dofmt$6534$bmrAn
          g$p$6549$bmrAn
          g$control$6550$bmrAn
          g$args$6551$bmrAn))))
   (g$format$6537$bmrAn
     g$format$6559$bmrAn
     (case-lambda
       ((g$control$6552$bmrAn . g$args$6553$bmrAn)
        (call-with-values
          g$open-string-output-port$6336$bmrAn
          (case-lambda
            ((g$p$6554$bmrAn g$c$6555$bmrAn)
             (begin
               (g$dofmt$6534$bmrAn
                 g$p$6554$bmrAn
                 g$control$6552$bmrAn
                 g$args$6553$bmrAn)
               (g$c$6555$bmrAn)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6560$bmrAn
     g$make-traced-macro$6563$bmrAn
     (case-lambda
       ((g$name$6561$bmrAn g$x$6562$bmrAn)
        (if (procedure? g$x$6562$bmrAn)
          (make-traced-procedure
            g$name$6561$bmrAn
            g$x$6562$bmrAn
            g$syntax->datum$11599$bmrAn)
          (if (g$variable-transformer?$11421$bmrAn g$x$6562$bmrAn)
            (g$make-variable-transformer$11420$bmrAn
              (make-traced-procedure
                g$name$6561$bmrAn
                (g$variable-transformer-procedure$11422$bmrAn g$x$6562$bmrAn)
                g$syntax->datum$11599$bmrAn))
            g$x$6562$bmrAn))))))
  (void))

(library-letrec* (ironscheme cps)
  ((g$cps/generate-reference$6564$bmrAn
     g$cps/generate-reference$6824$bmrAn
     (case-lambda
       ((g$variable$6616$bmrAn)
        (g$cps/generate-operand$6568$bmrAn
          (g$make-reference$6594$bmrAn g$variable$6616$bmrAn)))))
   (g$cps/generate-literal$6565$bmrAn
     g$cps/generate-literal$6825$bmrAn
     (case-lambda
       ((g$datum$6617$bmrAn)
        (g$cps/generate-operand$6568$bmrAn
          (g$make-literal$6593$bmrAn g$datum$6617$bmrAn)))))
   (g$cps/generate-abstraction$6566$bmrAn
     g$cps/generate-abstraction$6826$bmrAn
     (case-lambda
       ((g$bvl$6618$bmrAn g$body-generator$6619$bmrAn)
        (g$cps/generate-operand$6568$bmrAn
          (g$make-user-abstraction$6595$bmrAn
            g$bvl$6618$bmrAn
            (case-lambda
              ((g$continuation-variable$6620$bmrAn)
               (g$body-generator$6619$bmrAn
                 (g$variable-continuator$6581$bmrAn
                   g$continuation-variable$6620$bmrAn)))))))))
   (g$cps/generate-abstractions$6567$bmrAn
     g$cps/generate-abstractions$6827$bmrAn
     (case-lambda
       ((g$bvls$6621$bmrAn g$body-generators$6622$bmrAn)
        (g$cps/generate-operand$6568$bmrAn
          (g$make-user-abstractions$6596$bmrAn
            g$bvls$6621$bmrAn
            (g$map$5063$bmrAn
              (case-lambda
                ((g$body-generator$6623$bmrAn)
                 (case-lambda
                   ((g$continuation-variable$6624$bmrAn)
                    (g$body-generator$6623$bmrAn
                      (g$variable-continuator$6581$bmrAn
                        g$continuation-variable$6624$bmrAn))))))
              g$body-generators$6622$bmrAn))))))
   (g$cps/generate-operand$6568$bmrAn
     g$cps/generate-operand$6828$bmrAn
     (case-lambda
       ((g$operand$6625$bmrAn)
        (case-lambda
          ((g$continuator$6626$bmrAn)
           (g$continue-with-operand$6584$bmrAn
             g$continuator$6626$bmrAn
             g$operand$6625$bmrAn))))))
   (g$cps/generate-conditional$6569$bmrAn
     g$cps/generate-conditional$6829$bmrAn
     (case-lambda
       ((g$condition-generator$6627$bmrAn
          g$consequent-generator$6628$bmrAn
          g$alternative-generator$6629$bmrAn)
        (case-lambda
          ((g$continuator$6630$bmrAn)
           (letrec* ((g$if-variable$6631$bmrAn
                       (case-lambda
                         ((g$continuation-variable$6633$bmrAn)
                          ((case-lambda
                             ((g$continuator*$6634$bmrAn)
                              (g$condition-generator$6627$bmrAn
                                (g$conditional-continuator$6580$bmrAn
                                  (case-lambda
                                    ((g$condition$6635$bmrAn)
                                     (g$make-conditional$6603$bmrAn
                                       g$condition$6635$bmrAn
                                       (g$consequent-generator$6628$bmrAn
                                         g$continuator*$6634$bmrAn)
                                       (g$alternative-generator$6629$bmrAn
                                         g$continuator*$6634$bmrAn))))))))
                           (g$variable-continuator$6581$bmrAn
                             g$continuation-variable$6633$bmrAn))))))
             (g$reify-continuation*$6586$bmrAn
               g$continuator$6630$bmrAn
               g$if-variable$6631$bmrAn
               (case-lambda
                 ((g$continuation-abstraction$6632$bmrAn)
                  (g$make-conditional-join$6604$bmrAn
                    g$continuation-abstraction$6632$bmrAn
                    g$if-variable$6631$bmrAn))))))))))
   (g$cps/generate-recursive-bind$6570$bmrAn
     g$cps/generate-recursive-bind$6830$bmrAn
     (case-lambda
       ((g$variables$6636$bmrAn
          g$generators$6637$bmrAn
          g$body-generator$6638$bmrAn)
        (case-lambda
          ((g$continuator$6639$bmrAn)
           (g$make-recursive-bind$6598$bmrAn
             g$variables$6636$bmrAn
             (g$map$5063$bmrAn
               (case-lambda
                 ((g$generator$6640$bmrAn)
                  (case-lambda
                    ((g$continuation-variable$6641$bmrAn)
                     (g$generator$6640$bmrAn
                       (g$variable-continuator$6581$bmrAn
                         g$continuation-variable$6641$bmrAn))))))
               g$generators$6637$bmrAn)
             (g$body-generator$6638$bmrAn
               (g$reified-continuator$6583$bmrAn
                 g$continuator$6639$bmrAn))))))))
   (g$cps/generate-recursive*-bind$6571$bmrAn
     g$cps/generate-recursive*-bind$6831$bmrAn
     (case-lambda
       ((g$variables$6642$bmrAn
          g$generators$6643$bmrAn
          g$body-generator$6644$bmrAn)
        (case-lambda
          ((g$continuator$6645$bmrAn)
           (g$make-recursive*-bind$6599$bmrAn
             g$variables$6642$bmrAn
             (g$map$5063$bmrAn
               (case-lambda
                 ((g$generator$6646$bmrAn)
                  (case-lambda
                    ((g$continuation-variable$6647$bmrAn)
                     (g$generator$6646$bmrAn
                       (g$variable-continuator$6581$bmrAn
                         g$continuation-variable$6647$bmrAn))))))
               g$generators$6643$bmrAn)
             (g$body-generator$6644$bmrAn
               (g$reified-continuator$6583$bmrAn
                 g$continuator$6645$bmrAn))))))))
   (g$cps/generate-recursive*-library-bind$6572$bmrAn
     g$cps/generate-recursive*-library-bind$6832$bmrAn
     (case-lambda
       ((g$name$6648$bmrAn
          g$variables$6649$bmrAn
          g$variables*$6650$bmrAn
          g$generators$6651$bmrAn
          g$body-generator$6652$bmrAn)
        (case-lambda
          ((g$continuator$6653$bmrAn)
           (g$make-recursive*-library-bind$6600$bmrAn
             g$name$6648$bmrAn
             g$variables$6649$bmrAn
             g$variables*$6650$bmrAn
             (g$map$5063$bmrAn
               (case-lambda
                 ((g$generator$6654$bmrAn)
                  (case-lambda
                    ((g$continuation-variable$6655$bmrAn)
                     (g$generator$6654$bmrAn
                       (g$variable-continuator$6581$bmrAn
                         g$continuation-variable$6655$bmrAn))))))
               g$generators$6651$bmrAn)
             (g$body-generator$6652$bmrAn
               (g$reified-continuator$6583$bmrAn
                 g$continuator$6653$bmrAn))))))))
   (g$cps/generate-sequence$6573$bmrAn
     g$cps/generate-sequence$6833$bmrAn
     (case-lambda
       ((g$generators$6656$bmrAn)
        (case-lambda
          ((g$continuator$6657$bmrAn)
           ((letrec ((g$recur$6658$bmrAn
                       (case-lambda
                         ((g$generators$6659$bmrAn)
                          ((car g$generators$6659$bmrAn)
                           ((case-lambda
                              ((g$generators$6660$bmrAn)
                               (if (pair? g$generators$6660$bmrAn)
                                 (g$effect-continuator$6579$bmrAn
                                   (case-lambda
                                     (()
                                      (g$recur$6658$bmrAn
                                        g$generators$6660$bmrAn))))
                                 g$continuator$6657$bmrAn)))
                            (cdr g$generators$6659$bmrAn)))))))
              g$recur$6658$bmrAn)
            g$generators$6656$bmrAn))))))
   (g$cps/generate-assignment$6574$bmrAn
     g$cps/generate-assignment$6834$bmrAn
     (case-lambda
       ((g$location$6661$bmrAn g$expression-generator$6662$bmrAn)
        (case-lambda
          ((g$continuator$6663$bmrAn)
           (g$expression-generator$6662$bmrAn
             (g$operand-continuator$6578$bmrAn
               (case-lambda
                 ((g$operand$6664$bmrAn)
                  (g$make-assignment$6606$bmrAn
                    g$location$6661$bmrAn
                    g$operand$6664$bmrAn
                    (g$continue-with-operand$6584$bmrAn
                      g$continuator$6663$bmrAn
                      '(void))))))))))))
   (g$cps/generate-primitive$6575$bmrAn
     g$cps/generate-primitive$6835$bmrAn
     (case-lambda
       ((g$operator$6665$bmrAn g$operand-generators$6666$bmrAn)
        (case-lambda
          ((g$continuator$6667$bmrAn)
           (g$continue-with-operand$6584$bmrAn
             g$continuator$6667$bmrAn
             (cons
               g$operator$6665$bmrAn
               (g$map$5063$bmrAn
                 (case-lambda
                   ((g$generator$6668$bmrAn)
                    (case-lambda
                      ((g$continuation-variable$6669$bmrAn)
                       (g$generator$6668$bmrAn
                         (g$variable-continuator$6581$bmrAn
                           g$continuation-variable$6669$bmrAn))))))
                 g$operand-generators$6666$bmrAn))))))))
   (g$cps/generate-combination$6576$bmrAn
     g$cps/generate-combination$6836$bmrAn
     (case-lambda
       ((g$operator-generator$6670$bmrAn g$operand-generators$6671$bmrAn)
        (g$cps/generate-subproblems$6577$bmrAn
          (reverse
            (cons
              g$operator-generator$6670$bmrAn
              g$operand-generators$6671$bmrAn))
          (case-lambda
            ((g$operands$6672$bmrAn g$continuator$6673$bmrAn)
             (g$make-combination$6601$bmrAn
               (car g$operands$6672$bmrAn)
               (g$reify-continuation$6585$bmrAn g$continuator$6673$bmrAn)
               (cdr g$operands$6672$bmrAn))))))))
   (g$cps/generate-subproblems$6577$bmrAn
     g$cps/generate-subproblems$6837$bmrAn
     (case-lambda
       ((g$generators$6674$bmrAn g$combiner$6675$bmrAn)
        (case-lambda
          ((g$continuator$6676$bmrAn)
           ((letrec ((g$recur$6677$bmrAn
                       (case-lambda
                         ((g$generators$6678$bmrAn g$operands$6679$bmrAn)
                          (if (pair? g$generators$6678$bmrAn)
                            ((car g$generators$6678$bmrAn)
                             ((case-lambda
                                ((g$generators$6680$bmrAn)
                                 (g$operand-continuator$6578$bmrAn
                                   (case-lambda
                                     ((g$operand$6681$bmrAn)
                                      (g$recur$6677$bmrAn
                                        g$generators$6680$bmrAn
                                        (cons
                                          g$operand$6681$bmrAn
                                          g$operands$6679$bmrAn)))))))
                              (cdr g$generators$6678$bmrAn)))
                            (g$combiner$6675$bmrAn
                              g$operands$6679$bmrAn
                              g$continuator$6676$bmrAn))))))
              g$recur$6677$bmrAn)
            g$generators$6674$bmrAn
            '()))))))
   (g$operand-continuator$6578$bmrAn
     g$operand-continuator$6838$bmrAn
     (case-lambda
       ((g$generator$6682$bmrAn)
        (case-lambda
          ((g$if-operand$6683$bmrAn
             g$if-effect$6684$bmrAn
             g$if-conditional$6685$bmrAn
             g$if-variable$6686$bmrAn
             g$if-inline$6687$bmrAn)
           (begin
             g$if-effect$6684$bmrAn
             g$if-conditional$6685$bmrAn
             g$if-variable$6686$bmrAn
             g$if-inline$6687$bmrAn
             (g$if-operand$6683$bmrAn g$generator$6682$bmrAn)))))))
   (g$effect-continuator$6579$bmrAn
     g$effect-continuator$6839$bmrAn
     (case-lambda
       ((g$generator$6688$bmrAn)
        (case-lambda
          ((g$if-operand$6689$bmrAn
             g$if-effect$6690$bmrAn
             g$if-conditional$6691$bmrAn
             g$if-variable$6692$bmrAn
             g$if-inline$6693$bmrAn)
           (begin
             g$if-operand$6689$bmrAn
             g$if-conditional$6691$bmrAn
             g$if-variable$6692$bmrAn
             g$if-inline$6693$bmrAn
             (g$if-effect$6690$bmrAn g$generator$6688$bmrAn)))))))
   (g$conditional-continuator$6580$bmrAn
     g$conditional-continuator$6840$bmrAn
     (case-lambda
       ((g$generator$6694$bmrAn)
        (case-lambda
          ((g$if-operand$6695$bmrAn
             g$if-effect$6696$bmrAn
             g$if-conditional$6697$bmrAn
             g$if-variable$6698$bmrAn
             g$if-inline$6699$bmrAn)
           (begin
             g$if-operand$6695$bmrAn
             g$if-effect$6696$bmrAn
             g$if-variable$6698$bmrAn
             g$if-inline$6699$bmrAn
             (g$if-conditional$6697$bmrAn g$generator$6694$bmrAn)))))))
   (g$variable-continuator$6581$bmrAn
     g$variable-continuator$6841$bmrAn
     (case-lambda
       ((g$variable$6700$bmrAn)
        (case-lambda
          ((g$if-operand$6701$bmrAn
             g$if-effect$6702$bmrAn
             g$if-conditional$6703$bmrAn
             g$if-variable$6704$bmrAn
             g$if-inline$6705$bmrAn)
           (begin
             g$if-operand$6701$bmrAn
             g$if-effect$6702$bmrAn
             g$if-variable$6704$bmrAn
             g$if-inline$6705$bmrAn
             (g$if-variable$6704$bmrAn g$variable$6700$bmrAn)))))))
   (g$inline-continuator$6582$bmrAn
     g$inline-continuator$6842$bmrAn
     (case-lambda
       ((g$continuation$6706$bmrAn)
        (case-lambda
          ((g$if-operand$6707$bmrAn
             g$if-effect$6708$bmrAn
             g$if-conditional$6709$bmrAn
             g$if-variable$6710$bmrAn
             g$if-inline$6711$bmrAn)
           (begin
             g$if-operand$6707$bmrAn
             g$if-effect$6708$bmrAn
             g$if-conditional$6709$bmrAn
             g$if-variable$6710$bmrAn
             (g$if-inline$6711$bmrAn g$continuation$6706$bmrAn)))))))
   (g$reified-continuator$6583$bmrAn
     g$reified-continuator$6843$bmrAn
     (case-lambda
       ((g$continuator$6712$bmrAn)
        (case-lambda
          ((g$if-operand$6713$bmrAn
             g$if-effect$6714$bmrAn
             g$if-conditional$6715$bmrAn
             g$if-variable$6716$bmrAn
             g$if-inline$6717$bmrAn)
           (begin
             g$if-operand$6713$bmrAn
             g$if-effect$6714$bmrAn
             g$if-conditional$6715$bmrAn
             (g$reify-continuation*$6586$bmrAn
               g$continuator$6712$bmrAn
               g$if-variable$6716$bmrAn
               g$if-inline$6717$bmrAn)))))))
   (g$continue-with-operand$6584$bmrAn
     g$continue-with-operand$6844$bmrAn
     (case-lambda
       ((g$continuator$6718$bmrAn g$operand$6719$bmrAn)
        (g$continuator$6718$bmrAn
          (case-lambda
            ((g$generator$6720$bmrAn)
             (g$generator$6720$bmrAn g$operand$6719$bmrAn)))
          (case-lambda ((g$generator$6721$bmrAn) (g$generator$6721$bmrAn)))
          (case-lambda
            ((g$generator$6722$bmrAn)
             (g$generator$6722$bmrAn
               (g$make-truth-test$6607$bmrAn g$operand$6719$bmrAn))))
          (case-lambda
            ((g$continuation-variable$6723$bmrAn)
             (g$make-return$6602$bmrAn
               (g$make-reference$6594$bmrAn g$continuation-variable$6723$bmrAn)
               (list g$operand$6719$bmrAn))))
          (case-lambda
            ((g$continuation-abstraction$6724$bmrAn)
             (g$make-return$6602$bmrAn
               g$continuation-abstraction$6724$bmrAn
               (list g$operand$6719$bmrAn))))))))
   (g$reify-continuation$6585$bmrAn
     g$reify-continuation$6845$bmrAn
     (case-lambda
       ((g$continuator$6725$bmrAn)
        (g$continuator$6725$bmrAn
          g$operand-continuation-reifier$6588$bmrAn
          g$effect-continuation-reifier$6590$bmrAn
          g$conditional-continuation-reifier$6592$bmrAn
          (case-lambda
            ((g$variable$6726$bmrAn)
             (g$make-reference$6594$bmrAn g$variable$6726$bmrAn)))
          (case-lambda
            ((g$continuation$6727$bmrAn) g$continuation$6727$bmrAn))))))
   (g$reify-continuation*$6586$bmrAn
     g$reify-continuation*$6846$bmrAn
     (case-lambda
       ((g$continuator$6728$bmrAn
          g$if-variable$6729$bmrAn
          g$if-inline$6730$bmrAn)
        (g$continuator$6728$bmrAn
          (g$operand-continuation-reifier*$6587$bmrAn g$if-inline$6730$bmrAn)
          (g$effect-continuation-reifier*$6589$bmrAn g$if-inline$6730$bmrAn)
          (g$conditional-continuation-reifier*$6591$bmrAn
            g$if-inline$6730$bmrAn)
          g$if-variable$6729$bmrAn
          g$if-inline$6730$bmrAn))))
   (g$operand-continuation-reifier*$6587$bmrAn
     g$operand-continuation-reifier*$6847$bmrAn
     (case-lambda
       ((g$receiver$6731$bmrAn)
        (case-lambda
          ((g$generator$6732$bmrAn)
           (g$receiver$6731$bmrAn
             ((case-lambda
                ((g$variable$6733$bmrAn)
                 (g$make-continuation-abstraction$6597$bmrAn
                   (list g$variable$6733$bmrAn)
                   (g$generator$6732$bmrAn
                     (g$make-reference$6594$bmrAn g$variable$6733$bmrAn)))))
              (g$generate-variable$6608$bmrAn 'V))))))))
   (g$operand-continuation-reifier$6588$bmrAn
     g$operand-continuation-reifier$6848$bmrAn
     (g$operand-continuation-reifier*$6587$bmrAn values))
   (g$effect-continuation-reifier*$6589$bmrAn
     g$effect-continuation-reifier*$6849$bmrAn
     (case-lambda
       ((g$receiver$6734$bmrAn)
        (case-lambda
          ((g$generator$6735$bmrAn)
           (g$receiver$6734$bmrAn
             ((case-lambda
                ((g$variable$6736$bmrAn)
                 (g$make-continuation-abstraction$6597$bmrAn
                   g$variable$6736$bmrAn
                   (g$generator$6735$bmrAn))))
              (g$generate-variable$6608$bmrAn 'IGNORE))))))))
   (g$effect-continuation-reifier$6590$bmrAn
     g$effect-continuation-reifier$6850$bmrAn
     (g$effect-continuation-reifier*$6589$bmrAn values))
   (g$conditional-continuation-reifier*$6591$bmrAn
     g$conditional-continuation-reifier*$6851$bmrAn
     (case-lambda
       ((g$receiver$6737$bmrAn)
        (case-lambda
          ((g$generator$6738$bmrAn)
           (g$receiver$6737$bmrAn
             ((case-lambda
                ((g$variable$6739$bmrAn)
                 (g$make-continuation-abstraction$6597$bmrAn
                   (list g$variable$6739$bmrAn)
                   (g$generator$6738$bmrAn
                     (g$make-truth-test$6607$bmrAn
                       (g$make-reference$6594$bmrAn g$variable$6739$bmrAn))))))
              (g$generate-variable$6608$bmrAn 'T))))))))
   (g$conditional-continuation-reifier$6592$bmrAn
     g$conditional-continuation-reifier$6852$bmrAn
     (g$conditional-continuation-reifier*$6591$bmrAn values))
   (g$make-literal$6593$bmrAn
     g$make-literal$6853$bmrAn
     (case-lambda ((g$datum$6740$bmrAn) (list 'quote g$datum$6740$bmrAn))))
   (g$make-reference$6594$bmrAn
     g$make-reference$6854$bmrAn
     (case-lambda ((g$variable$6741$bmrAn) g$variable$6741$bmrAn)))
   (g$make-user-abstraction$6595$bmrAn
     g$make-user-abstraction$6855$bmrAn
     (case-lambda
       ((g$bvl$6742$bmrAn g$body-constructor$6743$bmrAn)
        ((case-lambda
           ((g$continuation$6744$bmrAn)
            (list
              'case-lambda
              (list
                (cons g$continuation$6744$bmrAn g$bvl$6742$bmrAn)
                (g$body-constructor$6743$bmrAn g$continuation$6744$bmrAn)))))
         (g$generate-variable$6608$bmrAn 'C)))))
   (g$make-user-abstractions$6596$bmrAn
     g$make-user-abstractions$6856$bmrAn
     (case-lambda
       ((g$bvls$6745$bmrAn g$body-constructors$6746$bmrAn)
        ((case-lambda
           ((g$continuation$6747$bmrAn)
            (cons
              'case-lambda
              (g$map$5063$bmrAn
                (case-lambda
                  ((g$bvl$6748$bmrAn g$body-constructor$6749$bmrAn)
                   (list
                     (cons g$continuation$6747$bmrAn g$bvl$6748$bmrAn)
                     (g$body-constructor$6749$bmrAn
                       g$continuation$6747$bmrAn))))
                g$bvls$6745$bmrAn
                g$body-constructors$6746$bmrAn))))
         (g$generate-variable$6608$bmrAn 'C)))))
   (g$make-continuation-abstraction$6597$bmrAn
     g$make-continuation-abstraction$6857$bmrAn
     (case-lambda
       ((g$bvl$6750$bmrAn g$body$6751$bmrAn)
        (list 'case-lambda (list g$bvl$6750$bmrAn g$body$6751$bmrAn)))))
   (g$make-recursive-bind$6598$bmrAn
     g$make-recursive-bind$6858$bmrAn
     (case-lambda
       ((g$variables$6752$bmrAn g$constructors$6753$bmrAn g$body$6754$bmrAn)
        (list
          'letrec
          (g$map$5063$bmrAn
            (case-lambda
              ((g$variable$6755$bmrAn g$constructor$6756$bmrAn)
               (list
                 g$variable$6755$bmrAn
                 (cons
                   (g$make-user-abstraction$6595$bmrAn
                     '()
                     g$constructor$6756$bmrAn)
                   '(values)))))
            g$variables$6752$bmrAn
            g$constructors$6753$bmrAn)
          g$body$6754$bmrAn))))
   (g$make-recursive*-bind$6599$bmrAn
     g$make-recursive*-bind$6859$bmrAn
     (case-lambda
       ((g$variables$6757$bmrAn g$constructors$6758$bmrAn g$body$6759$bmrAn)
        (list
          'letrec*
          (g$map$5063$bmrAn
            (case-lambda
              ((g$variable$6760$bmrAn g$constructor$6761$bmrAn)
               (list
                 g$variable$6760$bmrAn
                 (cons
                   (g$make-user-abstraction$6595$bmrAn
                     '()
                     g$constructor$6761$bmrAn)
                   '(values)))))
            g$variables$6757$bmrAn
            g$constructors$6758$bmrAn)
          g$body$6759$bmrAn))))
   (g$make-recursive*-library-bind$6600$bmrAn
     g$make-recursive*-library-bind$6860$bmrAn
     (case-lambda
       ((g$name$6762$bmrAn
          g$variables$6763$bmrAn
          g$variables*$6764$bmrAn
          g$constructors$6765$bmrAn
          g$body$6766$bmrAn)
        (list
          'library-letrec*
          g$name$6762$bmrAn
          (g$map$5063$bmrAn
            (case-lambda
              ((g$variable$6767$bmrAn
                 g$variable*$6768$bmrAn
                 g$constructor$6769$bmrAn)
               (list
                 g$variable$6767$bmrAn
                 g$variable*$6768$bmrAn
                 (cons
                   (g$make-user-abstraction$6595$bmrAn
                     '()
                     g$constructor$6769$bmrAn)
                   '(values)))))
            g$variables$6763$bmrAn
            g$variables*$6764$bmrAn
            g$constructors$6765$bmrAn)
          g$body$6766$bmrAn))))
   (g$make-combination$6601$bmrAn
     g$make-combination$6861$bmrAn
     (case-lambda
       ((g$operator$6770$bmrAn g$continuation$6771$bmrAn g$operands$6772$bmrAn)
        (cons
          g$operator$6770$bmrAn
          (cons g$continuation$6771$bmrAn g$operands$6772$bmrAn)))))
   (g$make-return$6602$bmrAn
     g$make-return$6862$bmrAn
     (case-lambda
       ((g$continuation$6773$bmrAn g$operands$6774$bmrAn)
        (cons g$continuation$6773$bmrAn g$operands$6774$bmrAn))))
   (g$make-conditional$6603$bmrAn
     g$make-conditional$6863$bmrAn
     (case-lambda
       ((g$condition$6775$bmrAn
          g$consequent$6776$bmrAn
          g$alternative$6777$bmrAn)
        (list
          'if
          g$condition$6775$bmrAn
          g$consequent$6776$bmrAn
          g$alternative$6777$bmrAn))))
   (g$make-conditional-join$6604$bmrAn
     g$make-conditional-join$6864$bmrAn
     (case-lambda
       ((g$continuation$6778$bmrAn g$constructor$6779$bmrAn)
        ((case-lambda
           ((g$variable$6780$bmrAn)
            (g$make-let$6605$bmrAn
              (list g$variable$6780$bmrAn)
              (list g$continuation$6778$bmrAn)
              (g$constructor$6779$bmrAn g$variable$6780$bmrAn))))
         (g$generate-variable$6608$bmrAn 'J)))))
   (g$make-let$6605$bmrAn
     g$make-let$6865$bmrAn
     (case-lambda
       ((g$variables$6781$bmrAn g$expressions$6782$bmrAn g$body$6783$bmrAn)
        (cons
          (list 'case-lambda (list g$variables$6781$bmrAn g$body$6783$bmrAn))
          g$expressions$6782$bmrAn))))
   (g$make-assignment$6606$bmrAn
     g$make-assignment$6866$bmrAn
     (case-lambda
       ((g$location$6784$bmrAn g$operand$6785$bmrAn g$expression$6786$bmrAn)
        (list
          'begin
          (list 'set! g$location$6784$bmrAn g$operand$6785$bmrAn)
          g$expression$6786$bmrAn))))
   (g$make-truth-test$6607$bmrAn
     g$make-truth-test$6867$bmrAn
     (case-lambda ((g$operand$6787$bmrAn) g$operand$6787$bmrAn)))
   (g$generate-variable$6608$bmrAn
     g$generate-variable$6868$bmrAn
     (case-lambda ((g$name$6788$bmrAn) (gensym g$name$6788$bmrAn))))
   (g$parse$6609$bmrAn
     g$parse$6869$bmrAn
     (case-lambda
       ((g$x$6789$bmrAn)
        (if (pair? g$x$6789$bmrAn)
          ((case-lambda
             ((g$t$6790$bmrAn)
              (if (g$memv$5056$bmrAn g$t$6790$bmrAn '(quote))
                (g$cps/generate-literal$6565$bmrAn
                  (g$cadr$5264$bmrAn g$x$6789$bmrAn))
                (if (g$memv$5056$bmrAn g$t$6790$bmrAn '(if))
                  (g$cps/generate-conditional$6569$bmrAn
                    (g$parse$6609$bmrAn (g$cadr$5264$bmrAn g$x$6789$bmrAn))
                    (g$parse$6609$bmrAn (g$caddr$5270$bmrAn g$x$6789$bmrAn))
                    (g$parse$6609$bmrAn (g$cadddr$5282$bmrAn g$x$6789$bmrAn)))
                  (if (g$memv$5056$bmrAn g$t$6790$bmrAn '(case-lambda))
                    ((case-lambda
                       ((g$d$6791$bmrAn)
                        (g$cps/generate-abstractions$6567$bmrAn
                          (g$map$5063$bmrAn car g$d$6791$bmrAn)
                          (g$map$5063$bmrAn
                            (case-lambda
                              ((g$e$6792$bmrAn)
                               (g$cps/generate-sequence$6573$bmrAn
                                 (g$map$5063$bmrAn
                                   g$parse$6609$bmrAn
                                   (cdr g$e$6792$bmrAn)))))
                            g$d$6791$bmrAn))))
                     (cdr g$x$6789$bmrAn))
                    (if (g$memv$5056$bmrAn g$t$6790$bmrAn '(letrec))
                      ((case-lambda
                         ((g$bindings$6793$bmrAn g$body*$6794$bmrAn)
                          ((case-lambda
                             ((g$lhs*$6795$bmrAn g$rhs*$6796$bmrAn)
                              (g$cps/generate-recursive-bind$6570$bmrAn
                                g$lhs*$6795$bmrAn
                                (g$map$5063$bmrAn
                                  g$parse$6609$bmrAn
                                  g$rhs*$6796$bmrAn)
                                (g$parse$6609$bmrAn
                                  (cons 'begin g$body*$6794$bmrAn)))))
                           (g$map$5063$bmrAn car g$bindings$6793$bmrAn)
                           (g$map$5063$bmrAn
                             g$cadr$5264$bmrAn
                             g$bindings$6793$bmrAn))))
                       (g$cadr$5264$bmrAn g$x$6789$bmrAn)
                       (g$cddr$5266$bmrAn g$x$6789$bmrAn))
                      (if (g$memv$5056$bmrAn g$t$6790$bmrAn '(letrec*))
                        ((case-lambda
                           ((g$bindings$6797$bmrAn g$body*$6798$bmrAn)
                            ((case-lambda
                               ((g$lhs*$6799$bmrAn g$rhs*$6800$bmrAn)
                                (g$cps/generate-recursive*-bind$6571$bmrAn
                                  g$lhs*$6799$bmrAn
                                  (g$map$5063$bmrAn
                                    g$parse$6609$bmrAn
                                    g$rhs*$6800$bmrAn)
                                  (g$parse$6609$bmrAn
                                    (cons 'begin g$body*$6798$bmrAn)))))
                             (g$map$5063$bmrAn car g$bindings$6797$bmrAn)
                             (g$map$5063$bmrAn
                               g$cadr$5264$bmrAn
                               g$bindings$6797$bmrAn))))
                         (g$cadr$5264$bmrAn g$x$6789$bmrAn)
                         (g$cddr$5266$bmrAn g$x$6789$bmrAn))
                        (if (g$memv$5056$bmrAn
                              g$t$6790$bmrAn
                              '(library-letrec*))
                          ((case-lambda
                             ((g$name$6801$bmrAn g$x$6802$bmrAn)
                              ((case-lambda
                                 ((g$bindings$6803$bmrAn g$body*$6804$bmrAn)
                                  ((case-lambda
                                     ((g$lhs*$6805$bmrAn
                                        g$lhs**$6806$bmrAn
                                        g$rhs*$6807$bmrAn)
                                      (g$cps/generate-recursive*-library-bind$6572$bmrAn
                                        g$name$6801$bmrAn
                                        g$lhs*$6805$bmrAn
                                        g$lhs**$6806$bmrAn
                                        (g$map$5063$bmrAn
                                          g$parse$6609$bmrAn
                                          g$rhs*$6807$bmrAn)
                                        (g$parse$6609$bmrAn
                                          (cons 'begin g$body*$6804$bmrAn)))))
                                   (g$map$5063$bmrAn car g$bindings$6803$bmrAn)
                                   (g$map$5063$bmrAn
                                     g$cadr$5264$bmrAn
                                     g$bindings$6803$bmrAn)
                                   (g$map$5063$bmrAn
                                     g$caddr$5270$bmrAn
                                     g$bindings$6803$bmrAn))))
                               (g$cadr$5264$bmrAn g$x$6802$bmrAn)
                               (g$cddr$5266$bmrAn g$x$6802$bmrAn))))
                           (g$cadr$5264$bmrAn g$x$6789$bmrAn)
                           (cdr g$x$6789$bmrAn))
                          (if (g$memv$5056$bmrAn g$t$6790$bmrAn '(begin))
                            (g$cps/generate-sequence$6573$bmrAn
                              (g$map$5063$bmrAn
                                g$parse$6609$bmrAn
                                (cdr g$x$6789$bmrAn)))
                            (if (g$memv$5056$bmrAn g$t$6790$bmrAn '(set!))
                              (g$cps/generate-assignment$6574$bmrAn
                                (g$cadr$5264$bmrAn g$x$6789$bmrAn)
                                (g$parse$6609$bmrAn
                                  (g$caddr$5270$bmrAn g$x$6789$bmrAn)))
                              (if (list? g$x$6789$bmrAn)
                                (g$cps/generate-combination$6576$bmrAn
                                  (g$parse$6609$bmrAn (car g$x$6789$bmrAn))
                                  (g$map$5063$bmrAn
                                    g$parse$6609$bmrAn
                                    (cdr g$x$6789$bmrAn)))
                                (error
                                  'rewrite
                                  '"invalid form ~s ~s"
                                  g$x$6789$bmrAn
                                  (list? g$x$6789$bmrAn)))))))))))))
           (car g$x$6789$bmrAn))
          (if (symbol? g$x$6789$bmrAn)
            (g$cps/generate-reference$6564$bmrAn g$x$6789$bmrAn)
            (g$cps/generate-literal$6565$bmrAn g$x$6789$bmrAn))))))
   (g$starts-with?$6610$bmrAn
     g$starts-with?$6870$bmrAn
     (case-lambda
       ((g$str$6808$bmrAn g$sub$6809$bmrAn)
        (clr-call-internal
          'system.string
          'startswith
          g$str$6808$bmrAn
          g$sub$6809$bmrAn))))
   (g$special$6611$bmrAn
     g$special$6871$bmrAn
     '(values void call/cc call-with-current-continuation))
   (g$special2$6612$bmrAn
     g$special2$6872$bmrAn
     '(call/cc call-with-current-continuation))
   (g$primitive?$6613$bmrAn
     g$primitive?$6873$bmrAn
     (case-lambda
       ((g$o$6810$bmrAn)
        (if (if (symbol? g$o$6810$bmrAn)
              (begin
                '#f
                (not (g$memq$5055$bmrAn g$o$6810$bmrAn g$special2$6612$bmrAn)))
              '#f)
          (with-exception-handler
            (case-lambda ((g$e$6811$bmrAn) '#f))
            (case-lambda
              (()
               ((case-lambda
                  ((g$b$6812$bmrAn)
                   ((case-lambda
                      ((g$t$6813$bmrAn)
                       (if g$t$6813$bmrAn
                         g$t$6813$bmrAn
                         (begin
                           '#f
                           (g$starts-with?$6610$bmrAn
                             (symbol->string g$o$6810$bmrAn)
                             '"clr-")))))
                    (clr-is-internal
                      'ironscheme.runtime.builtinmethod
                      g$b$6812$bmrAn))))
                (symbol-value g$o$6810$bmrAn)))))
          '#f))))
   (g$fix-primitives$6614$bmrAn
     g$fix-primitives$6874$bmrAn
     (case-lambda
       ((g$e$6814$bmrAn)
        (if (if (pair? g$e$6814$bmrAn) (begin '#f (list? g$e$6814$bmrAn)) '#f)
          ((case-lambda
             ((g$o$6815$bmrAn)
              (if (eq? g$o$6815$bmrAn 'quote)
                g$e$6814$bmrAn
                (if (eq? g$o$6815$bmrAn 'library-letrec*)
                  ((case-lambda
                     ((g$name$6816$bmrAn g$e$6817$bmrAn)
                      ((case-lambda
                         ((g$bindings$6818$bmrAn g$body*$6819$bmrAn)
                          ((case-lambda
                             ((g$lhs*$6820$bmrAn
                                g$lhs**$6821$bmrAn
                                g$rhs*$6822$bmrAn)
                              (cons
                                'library-letrec*
                                (cons
                                  g$name$6816$bmrAn
                                  (cons
                                    (g$map$5063$bmrAn
                                      list
                                      g$lhs*$6820$bmrAn
                                      g$lhs**$6821$bmrAn
                                      (g$map$5063$bmrAn
                                        g$fix-primitives$6614$bmrAn
                                        g$rhs*$6822$bmrAn))
                                    (g$map$5063$bmrAn
                                      g$fix-primitives$6614$bmrAn
                                      g$body*$6819$bmrAn))))))
                           (g$map$5063$bmrAn car g$bindings$6818$bmrAn)
                           (g$map$5063$bmrAn
                             g$cadr$5264$bmrAn
                             g$bindings$6818$bmrAn)
                           (g$map$5063$bmrAn
                             g$caddr$5270$bmrAn
                             g$bindings$6818$bmrAn))))
                       (g$cadr$5264$bmrAn g$e$6817$bmrAn)
                       (g$cddr$5266$bmrAn g$e$6817$bmrAn))))
                   (g$cadr$5264$bmrAn g$e$6814$bmrAn)
                   (cdr g$e$6814$bmrAn))
                  (if (if (g$primitive?$6613$bmrAn g$o$6815$bmrAn)
                        (begin '#f (pair? (cdr g$e$6814$bmrAn)))
                        '#f)
                    (list
                      (g$fix-primitives$6614$bmrAn
                        (g$cadr$5264$bmrAn g$e$6814$bmrAn))
                      (cons
                        g$o$6815$bmrAn
                        (g$map$5063$bmrAn
                          g$fix-primitives$6614$bmrAn
                          (g$cddr$5266$bmrAn g$e$6814$bmrAn))))
                    (cons
                      (g$fix-primitives$6614$bmrAn g$o$6815$bmrAn)
                      (g$map$5063$bmrAn
                        g$fix-primitives$6614$bmrAn
                        (cdr g$e$6814$bmrAn))))))))
           (car g$e$6814$bmrAn))
          (if (if (symbol? g$e$6814$bmrAn)
                (if (not (g$memq$5055$bmrAn
                           g$e$6814$bmrAn
                           g$special$6611$bmrAn))
                  (begin '#f (g$primitive?$6613$bmrAn g$e$6814$bmrAn))
                  '#f)
                '#f)
            (list
              'case-lambda
              (list
                '(k . args)
                (list 'k (cons 'apply (cons g$e$6814$bmrAn '(args))))))
            g$e$6814$bmrAn)))))
   (g$convert->cps$6615$bmrAn
     g$convert->cps$6875$bmrAn
     (case-lambda
       ((g$e$6823$bmrAn)
        (g$fix-primitives$6614$bmrAn
          ((g$parse$6609$bmrAn g$e$6823$bmrAn)
           (g$variable-continuator$6581$bmrAn 'values)))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$6876$bmrAn
     g$library-version-mismatch-warning$6972$bmrAn
     (case-lambda
       ((g$name$6949$bmrAn g$depname$6950$bmrAn g$filename$6951$bmrAn)
        (g$fprintf$6558$bmrAn
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$6949$bmrAn
          g$depname$6950$bmrAn
          g$filename$6951$bmrAn))))
   (g$file-locator-resolution-error$6877$bmrAn
     g$file-locator-resolution-error$6973$bmrAn
     (case-lambda
       ((g$libname$6952$bmrAn g$failed-list$6953$bmrAn)
        (letrec* ((g$7954$6954$bmrAn
                    (make-record-type-descriptor
                      '&library-resolution
                      &condition-rtd
                      'g$7957$bmrAn
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$7956$6955$bmrAn '#f)
                  (g$7955$6956$bmrAn
                    (make-record-constructor-descriptor
                      g$7954$6954$bmrAn
                      &condition-rcd
                      g$7956$6955$bmrAn))
                  (g$7953$6957$bmrAn (record-predicate g$7954$6954$bmrAn))
                  (g$make-library-resolution-condition$6958$bmrAn
                    (record-constructor g$7955$6956$bmrAn))
                  (g$7951$6959$bmrAn (record-accessor g$7954$6954$bmrAn '0))
                  (g$7952$6960$bmrAn (record-accessor g$7954$6954$bmrAn '1))
                  (g$library-resolution-condition?$6961$bmrAn
                    (condition-predicate g$7954$6954$bmrAn))
                  (g$condition-library$6962$bmrAn
                    (condition-accessor g$7954$6954$bmrAn g$7951$6959$bmrAn))
                  (g$condition-files$6963$bmrAn
                    (condition-accessor g$7954$6954$bmrAn g$7952$6960$bmrAn)))
          (raise
            (condition
              (g$make-error$5825$bmrAn)
              (g$make-who-condition$5851$bmrAn 'expander)
              (g$make-message-condition$5805$bmrAn
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$6958$bmrAn
                g$libname$6952$bmrAn
                g$failed-list$6953$bmrAn)))))))
   (g$read-library-source-file$6878$bmrAn
     g$read-library-source-file$6974$bmrAn
     (case-lambda
       ((g$file-name$6964$bmrAn)
        (g$with-input-from-file$6385$bmrAn
          g$file-name$6964$bmrAn
          read-annotated))))
   (g$make-parameter$6879$bmrAn
     g$make-parameter$6975$bmrAn
     (case-lambda
       ((g$x$6965$bmrAn)
        (g$make-parameter$6879$bmrAn
          g$x$6965$bmrAn
          (case-lambda ((g$x$6966$bmrAn) g$x$6966$bmrAn))))
       ((g$x$6967$bmrAn g$fender$6968$bmrAn)
        (begin
          (if (not (procedure? g$fender$6968$bmrAn))
            (g$assertion-error$11592$bmrAn
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(89,8) - (89,36)"))
            (void))
          ((case-lambda
             ((g$x$6969$bmrAn)
              (case-lambda
                (() g$x$6969$bmrAn)
                ((g$v$6970$bmrAn)
                 (set! g$x$6969$bmrAn (g$fender$6968$bmrAn g$v$6970$bmrAn))))))
           (g$fender$6968$bmrAn g$x$6967$bmrAn))))))
   (g$file-options-constructor$6947$bmrAn
     g$file-options-constructor$6976$bmrAn
     (g$make-parameter$6879$bmrAn '#f))
   (g$file-options-spec$6948$bmrAn
     g$file-options-spec$6977$bmrAn
     (case-lambda
       ((g$x$6971$bmrAn)
        ((g$file-options-constructor$6947$bmrAn) g$x$6971$bmrAn)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$7173$bmrAn
     g$current-primitive-locations$7218$bmrAn
     (g$make-parameter$6975$bmrAn
       (case-lambda ((g$x$7179$bmrAn) '#f))
       (case-lambda
         ((g$p$7180$bmrAn)
          (begin
            (if (not (procedure? g$p$7180$bmrAn))
              (g$assertion-error$11592$bmrAn
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$7180$bmrAn)))))
   (g$mutable?$7174$bmrAn
     g$mutable?$7219$bmrAn
     (case-lambda
       ((g$x$7181$bmrAn)
        (letrec* ((g$simple?$7182$bmrAn
                    (case-lambda
                      ((g$x$7183$bmrAn)
                       ((case-lambda
                          ((g$t$7184$bmrAn)
                           (if g$t$7184$bmrAn
                             g$t$7184$bmrAn
                             ((case-lambda
                                ((g$t$7185$bmrAn)
                                 (if g$t$7185$bmrAn
                                   g$t$7185$bmrAn
                                   ((case-lambda
                                      ((g$t$7186$bmrAn)
                                       (if g$t$7186$bmrAn
                                         g$t$7186$bmrAn
                                         ((case-lambda
                                            ((g$t$7187$bmrAn)
                                             (if g$t$7187$bmrAn
                                               g$t$7187$bmrAn
                                               ((case-lambda
                                                  ((g$t$7188$bmrAn)
                                                   (if g$t$7188$bmrAn
                                                     g$t$7188$bmrAn
                                                     ((case-lambda
                                                        ((g$t$7189$bmrAn)
                                                         (if g$t$7189$bmrAn
                                                           g$t$7189$bmrAn
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$7183$bmrAn)))))
                                                      (bytevector?
                                                        g$x$7183$bmrAn)))))
                                                (string? g$x$7183$bmrAn)))))
                                          (boolean? g$x$7183$bmrAn)))))
                                    (symbol? g$x$7183$bmrAn)))))
                              (char? g$x$7183$bmrAn)))))
                        (null? g$x$7183$bmrAn))))))
          (not (g$simple?$7182$bmrAn g$x$7181$bmrAn))))))
   (g$rewriter$7175$bmrAn
     g$rewriter$7220$bmrAn
     (case-lambda
       ((g$quote-hack?$7190$bmrAn)
        (letrec* ((g$f$7191$bmrAn
                    (case-lambda
                      ((g$x$7192$bmrAn)
                       (if (pair? g$x$7192$bmrAn)
                         ((case-lambda
                            ((g$t$7193$bmrAn)
                             (if (g$memv$5056$bmrAn g$t$7193$bmrAn '(quote))
                               (if (if g$quote-hack?$7190$bmrAn
                                     (begin
                                       '#f
                                       (g$mutable?$7174$bmrAn
                                         (g$cadr$5264$bmrAn g$x$7192$bmrAn)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$7194$bmrAn)
                                     (begin
                                       (set-symbol-value!
                                         g$g$7194$bmrAn
                                         (g$cadr$5264$bmrAn g$x$7192$bmrAn))
                                       g$g$7194$bmrAn)))
                                  (gensym))
                                 g$x$7192$bmrAn)
                               (if (g$memv$5056$bmrAn
                                     g$t$7193$bmrAn
                                     '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (g$map$5063$bmrAn
                                     (case-lambda
                                       ((g$x$7195$bmrAn)
                                        (cons
                                          (car g$x$7195$bmrAn)
                                          (g$map$5063$bmrAn
                                            g$f$7191$bmrAn
                                            (cdr g$x$7195$bmrAn)))))
                                     (cdr g$x$7192$bmrAn)))
                                 (if (g$memv$5056$bmrAn
                                       g$t$7193$bmrAn
                                       '(lambda))
                                   (g$cons*$5065$bmrAn
                                     'lambda
                                     (g$cadr$5264$bmrAn g$x$7192$bmrAn)
                                     (g$map$5063$bmrAn
                                       g$f$7191$bmrAn
                                       (g$cddr$5266$bmrAn g$x$7192$bmrAn)))
                                   (if (g$memv$5056$bmrAn
                                         g$t$7193$bmrAn
                                         '(letrec))
                                     ((case-lambda
                                        ((g$bindings$7196$bmrAn
                                           g$body*$7197$bmrAn)
                                         ((case-lambda
                                            ((g$lhs*$7198$bmrAn
                                               g$rhs*$7199$bmrAn)
                                             (g$cons*$5065$bmrAn
                                               'letrec
                                               (g$map$5063$bmrAn
                                                 list
                                                 g$lhs*$7198$bmrAn
                                                 (g$map$5063$bmrAn
                                                   g$f$7191$bmrAn
                                                   g$rhs*$7199$bmrAn))
                                               (g$map$5063$bmrAn
                                                 g$f$7191$bmrAn
                                                 g$body*$7197$bmrAn))))
                                          (g$map$5063$bmrAn
                                            car
                                            g$bindings$7196$bmrAn)
                                          (g$map$5063$bmrAn
                                            g$cadr$5264$bmrAn
                                            g$bindings$7196$bmrAn))))
                                      (g$cadr$5264$bmrAn g$x$7192$bmrAn)
                                      (g$cddr$5266$bmrAn g$x$7192$bmrAn))
                                     (if (g$memv$5056$bmrAn
                                           g$t$7193$bmrAn
                                           '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$7200$bmrAn
                                             g$body*$7201$bmrAn)
                                           ((case-lambda
                                              ((g$lhs*$7202$bmrAn
                                                 g$rhs*$7203$bmrAn)
                                               (g$cons*$5065$bmrAn
                                                 'letrec*
                                                 (g$map$5063$bmrAn
                                                   list
                                                   g$lhs*$7202$bmrAn
                                                   (g$map$5063$bmrAn
                                                     g$f$7191$bmrAn
                                                     g$rhs*$7203$bmrAn))
                                                 (g$map$5063$bmrAn
                                                   g$f$7191$bmrAn
                                                   g$body*$7201$bmrAn))))
                                            (g$map$5063$bmrAn
                                              car
                                              g$bindings$7200$bmrAn)
                                            (g$map$5063$bmrAn
                                              g$cadr$5264$bmrAn
                                              g$bindings$7200$bmrAn))))
                                        (g$cadr$5264$bmrAn g$x$7192$bmrAn)
                                        (g$cddr$5266$bmrAn g$x$7192$bmrAn))
                                       (if (g$memv$5056$bmrAn
                                             g$t$7193$bmrAn
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$7204$bmrAn g$x$7205$bmrAn)
                                             ((case-lambda
                                                ((g$bindings$7206$bmrAn
                                                   g$body*$7207$bmrAn)
                                                 ((case-lambda
                                                    ((g$lhs*$7208$bmrAn
                                                       g$lhs**$7209$bmrAn
                                                       g$rhs*$7210$bmrAn)
                                                     (g$cons*$5065$bmrAn
                                                       'library-letrec*
                                                       g$name$7204$bmrAn
                                                       (g$map$5063$bmrAn
                                                         list
                                                         g$lhs*$7208$bmrAn
                                                         g$lhs**$7209$bmrAn
                                                         (g$map$5063$bmrAn
                                                           g$f$7191$bmrAn
                                                           g$rhs*$7210$bmrAn))
                                                       (g$map$5063$bmrAn
                                                         g$f$7191$bmrAn
                                                         g$body*$7207$bmrAn))))
                                                  (g$map$5063$bmrAn
                                                    car
                                                    g$bindings$7206$bmrAn)
                                                  (g$map$5063$bmrAn
                                                    g$cadr$5264$bmrAn
                                                    g$bindings$7206$bmrAn)
                                                  (g$map$5063$bmrAn
                                                    g$caddr$5270$bmrAn
                                                    g$bindings$7206$bmrAn))))
                                              (g$cadr$5264$bmrAn g$x$7205$bmrAn)
                                              (g$cddr$5266$bmrAn
                                                g$x$7205$bmrAn))))
                                          (g$cadr$5264$bmrAn g$x$7192$bmrAn)
                                          (cdr g$x$7192$bmrAn))
                                         (if (g$memv$5056$bmrAn
                                               g$t$7193$bmrAn
                                               '(begin))
                                           (cons
                                             'begin
                                             (g$map$5063$bmrAn
                                               g$f$7191$bmrAn
                                               (cdr g$x$7192$bmrAn)))
                                           (if (g$memv$5056$bmrAn
                                                 g$t$7193$bmrAn
                                                 '(set!))
                                             (list
                                               'set!
                                               (g$cadr$5264$bmrAn
                                                 g$x$7192$bmrAn)
                                               (g$f$7191$bmrAn
                                                 (g$caddr$5270$bmrAn
                                                   g$x$7192$bmrAn)))
                                             (if (g$memv$5056$bmrAn
                                                   g$t$7193$bmrAn
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$7211$bmrAn)
                                                   ((case-lambda
                                                      ((g$t$7212$bmrAn)
                                                       (if g$t$7212$bmrAn
                                                         ((case-lambda
                                                            ((g$loc$7213$bmrAn)
                                                             g$loc$7213$bmrAn))
                                                          g$t$7212$bmrAn)
                                                         g$op$7211$bmrAn)))
                                                    ((g$current-primitive-locations$7173$bmrAn)
                                                     g$op$7211$bmrAn))))
                                                (g$cadr$5264$bmrAn
                                                  g$x$7192$bmrAn))
                                               (if (g$memv$5056$bmrAn
                                                     g$t$7193$bmrAn
                                                     '(define))
                                                 g$x$7192$bmrAn
                                                 (if (list? g$x$7192$bmrAn)
                                                   (g$map$5063$bmrAn
                                                     g$f$7191$bmrAn
                                                     g$x$7192$bmrAn)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$7192$bmrAn
                                                     (list?
                                                       g$x$7192$bmrAn)))))))))))))))
                          (car g$x$7192$bmrAn))
                         g$x$7192$bmrAn)))))
          g$f$7191$bmrAn))))
   (g$expanded->core$7176$bmrAn
     g$expanded->core$7221$bmrAn
     (case-lambda
       ((g$x$7214$bmrAn) ((g$rewriter$7175$bmrAn '#t) g$x$7214$bmrAn))))
   (g$compile-core-expr$7177$bmrAn
     g$compile-core-expr$7222$bmrAn
     (case-lambda
       ((g$x$7215$bmrAn) ((g$rewriter$7175$bmrAn '#f) g$x$7215$bmrAn))))
   (g$compile-core-expr-to-port$7178$bmrAn
     g$compile-core-expr-to-port$7223$bmrAn
     (case-lambda
       ((g$x$7216$bmrAn g$p$7217$bmrAn)
        (g$pretty-print$7172$bmrAn
          ((g$rewriter$7175$bmrAn '#f) g$x$7216$bmrAn)
          g$p$7217$bmrAn)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$7262$bmrAn
     g$make-collection$7457$bmrAn
     (case-lambda
       (()
        ((case-lambda
           ((g$set$7323$bmrAn)
            (letrec* ((g$set-cons$7324$bmrAn
                        (case-lambda
                          ((g$x$7326$bmrAn g$ls$7327$bmrAn)
                           (if (g$memq$5055$bmrAn
                                 g$x$7326$bmrAn
                                 g$ls$7327$bmrAn)
                             g$ls$7327$bmrAn
                             (cons g$x$7326$bmrAn g$ls$7327$bmrAn))))))
              (case-lambda
                (() g$set$7323$bmrAn)
                ((g$x$7325$bmrAn)
                 (set! g$set$7323$bmrAn
                   (g$set-cons$7324$bmrAn g$x$7325$bmrAn g$set$7323$bmrAn)))))))
         '()))))
   (g$current-library-collection$7263$bmrAn
     g$current-library-collection$7458$bmrAn
     (g$make-parameter$6975$bmrAn
       (g$make-collection$7262$bmrAn)
       (case-lambda
         ((g$x$7328$bmrAn)
          (begin
            (if (not (procedure? g$x$7328$bmrAn))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$7328$bmrAn)
              (void))
            g$x$7328$bmrAn)))))
   (g$8270$7264$bmrAn
     g$8270$7459$bmrAn
     (make-record-type-descriptor
       'library
       '#f
       'g$8273$bmrAn
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$8272$7265$bmrAn g$8272$7460$bmrAn '#f)
   (g$8271$7266$bmrAn
     g$8271$7461$bmrAn
     (make-record-constructor-descriptor
       g$8270$7264$bmrAn
       '#f
       g$8272$7265$bmrAn))
   (g$library?$7267$bmrAn
     g$library?$7462$bmrAn
     (record-predicate g$8270$7264$bmrAn))
   (g$make-library$7268$bmrAn
     g$make-library$7463$bmrAn
     (record-constructor g$8271$7266$bmrAn))
   (g$library-id$7269$bmrAn
     g$library-id$7464$bmrAn
     (record-accessor g$8270$7264$bmrAn '0))
   (g$library-name$7270$bmrAn
     g$library-name$7465$bmrAn
     (record-accessor g$8270$7264$bmrAn '1))
   (g$library-version$7271$bmrAn
     g$library-version$7466$bmrAn
     (record-accessor g$8270$7264$bmrAn '2))
   (g$library-imp*$7272$bmrAn
     g$library-imp*$7467$bmrAn
     (record-accessor g$8270$7264$bmrAn '3))
   (g$library-vis*$7273$bmrAn
     g$library-vis*$7468$bmrAn
     (record-accessor g$8270$7264$bmrAn '4))
   (g$library-inv*$7274$bmrAn
     g$library-inv*$7469$bmrAn
     (record-accessor g$8270$7264$bmrAn '5))
   (g$library-subst$7275$bmrAn
     g$library-subst$7470$bmrAn
     (record-accessor g$8270$7264$bmrAn '6))
   (g$library-env$7276$bmrAn
     g$library-env$7471$bmrAn
     (record-accessor g$8270$7264$bmrAn '7))
   (g$library-visit-state$7277$bmrAn
     g$library-visit-state$7472$bmrAn
     (record-accessor g$8270$7264$bmrAn '8))
   (g$library-invoke-state$7278$bmrAn
     g$library-invoke-state$7473$bmrAn
     (record-accessor g$8270$7264$bmrAn '9))
   (g$library-visit-code$7279$bmrAn
     g$library-visit-code$7474$bmrAn
     (record-accessor g$8270$7264$bmrAn '10))
   (g$library-invoke-code$7280$bmrAn
     g$library-invoke-code$7475$bmrAn
     (record-accessor g$8270$7264$bmrAn '11))
   (g$library-visible?$7281$bmrAn
     g$library-visible?$7476$bmrAn
     (record-accessor g$8270$7264$bmrAn '12))
   (g$library-source-file-name$7282$bmrAn
     g$library-source-file-name$7477$bmrAn
     (record-accessor g$8270$7264$bmrAn '13))
   (g$set-library-id!$7283$bmrAn
     g$set-library-id!$7478$bmrAn
     (record-mutator g$8270$7264$bmrAn '0))
   (g$set-library-name!$7284$bmrAn
     g$set-library-name!$7479$bmrAn
     (record-mutator g$8270$7264$bmrAn '1))
   (g$set-library-version!$7285$bmrAn
     g$set-library-version!$7480$bmrAn
     (record-mutator g$8270$7264$bmrAn '2))
   (g$set-library-imp*!$7286$bmrAn
     g$set-library-imp*!$7481$bmrAn
     (record-mutator g$8270$7264$bmrAn '3))
   (g$set-library-vis*!$7287$bmrAn
     g$set-library-vis*!$7482$bmrAn
     (record-mutator g$8270$7264$bmrAn '4))
   (g$set-library-inv*!$7288$bmrAn
     g$set-library-inv*!$7483$bmrAn
     (record-mutator g$8270$7264$bmrAn '5))
   (g$set-library-subst!$7289$bmrAn
     g$set-library-subst!$7484$bmrAn
     (record-mutator g$8270$7264$bmrAn '6))
   (g$set-library-env!$7290$bmrAn
     g$set-library-env!$7485$bmrAn
     (record-mutator g$8270$7264$bmrAn '7))
   (g$set-library-visit-state!$7291$bmrAn
     g$set-library-visit-state!$7486$bmrAn
     (record-mutator g$8270$7264$bmrAn '8))
   (g$set-library-invoke-state!$7292$bmrAn
     g$set-library-invoke-state!$7487$bmrAn
     (record-mutator g$8270$7264$bmrAn '9))
   (g$set-library-visit-code!$7293$bmrAn
     g$set-library-visit-code!$7488$bmrAn
     (record-mutator g$8270$7264$bmrAn '10))
   (g$set-library-invoke-code!$7294$bmrAn
     g$set-library-invoke-code!$7489$bmrAn
     (record-mutator g$8270$7264$bmrAn '11))
   (g$set-library-visible?!$7295$bmrAn
     g$set-library-visible?!$7490$bmrAn
     (record-mutator g$8270$7264$bmrAn '12))
   (g$set-library-source-file-name!$7296$bmrAn
     g$set-library-source-file-name!$7491$bmrAn
     (record-mutator g$8270$7264$bmrAn '13))
   (g$rp$7297$bmrAn
     g$rp$7492$bmrAn
     (make-record-printer
       'library
       (case-lambda
         ((g$x$7329$bmrAn g$p$7330$bmrAn g$wr$7331$bmrAn)
          (begin
            (if (not (g$library?$7267$bmrAn g$x$7329$bmrAn))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$6559$bmrAn
                '"#<library ~s>"
                (if (null? (g$library-version$7271$bmrAn g$x$7329$bmrAn))
                  (g$library-name$7270$bmrAn g$x$7329$bmrAn)
                  (append
                    (g$library-name$7270$bmrAn g$x$7329$bmrAn)
                    (list (g$library-version$7271$bmrAn g$x$7329$bmrAn)))))
              g$p$7330$bmrAn))))))
   (g$find-dependencies$7298$bmrAn
     g$find-dependencies$7493$bmrAn
     (case-lambda
       ((g$ls$7332$bmrAn)
        (if (null? g$ls$7332$bmrAn)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$7299$bmrAn
     g$find-library-by$7494$bmrAn
     (case-lambda
       ((g$pred$7333$bmrAn)
        ((letrec ((g$f$7334$bmrAn
                    (case-lambda
                      ((g$ls$7335$bmrAn)
                       (if (null? g$ls$7335$bmrAn)
                         '#f
                         (if (g$pred$7333$bmrAn (car g$ls$7335$bmrAn))
                           (car g$ls$7335$bmrAn)
                           (g$f$7334$bmrAn (cdr g$ls$7335$bmrAn))))))))
           g$f$7334$bmrAn)
         ((g$current-library-collection$7263$bmrAn))))))
   (g$library-path$7300$bmrAn
     g$library-path$7495$bmrAn
     (g$make-parameter$6975$bmrAn
       '(".")
       (case-lambda
         ((g$x$7336$bmrAn)
          (if (if (list? g$x$7336$bmrAn)
                (begin '#f (g$for-all$5061$bmrAn string? g$x$7336$bmrAn))
                '#f)
            (g$map$5063$bmrAn
              (case-lambda ((g$x$7337$bmrAn) g$x$7337$bmrAn))
              g$x$7336$bmrAn)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$7336$bmrAn))))))
   (g$library-extensions$7301$bmrAn
     g$library-extensions$7496$bmrAn
     (g$make-parameter$6975$bmrAn
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$7338$bmrAn)
          (if (if (list? g$x$7338$bmrAn)
                (begin '#f (g$for-all$5061$bmrAn string? g$x$7338$bmrAn))
                '#f)
            (g$map$5063$bmrAn
              (case-lambda ((g$x$7339$bmrAn) g$x$7339$bmrAn))
              g$x$7338$bmrAn)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$7338$bmrAn))))))
   (g$library-name->file-name$7302$bmrAn
     g$library-name->file-name$7497$bmrAn
     (case-lambda
       ((g$x$7340$bmrAn)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6336$bmrAn)))
          (case-lambda
            ((g$p$7343$bmrAn g$extract$7344$bmrAn)
             ((case-lambda
                ((g$extract$7345$bmrAn g$p$7346$bmrAn)
                 (letrec* ((g$display-hex$7347$bmrAn
                             (case-lambda
                               ((g$n$7355$bmrAn)
                                (if (<= '0 g$n$7355$bmrAn '9)
                                  (display g$n$7355$bmrAn g$p$7346$bmrAn)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$7355$bmrAn '10)))
                                    g$p$7346$bmrAn))))))
                   (begin
                     ((letrec ((g$f$7348$bmrAn
                                 (case-lambda
                                   ((g$ls$7349$bmrAn)
                                    (if (not (null? g$ls$7349$bmrAn))
                                      (begin
                                        (display '"/" g$p$7346$bmrAn)
                                        (g$for-each$5064$bmrAn
                                          (case-lambda
                                            ((g$c$7350$bmrAn)
                                             (if ((case-lambda
                                                    ((g$t$7351$bmrAn)
                                                     (if g$t$7351$bmrAn
                                                       g$t$7351$bmrAn
                                                       ((case-lambda
                                                          ((g$t$7352$bmrAn)
                                                           (if g$t$7352$bmrAn
                                                             g$t$7352$bmrAn
                                                             ((case-lambda
                                                                ((g$t$7353$bmrAn)
                                                                 (if g$t$7353$bmrAn
                                                                   g$t$7353$bmrAn
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$5056$bmrAn
                                                                       g$c$7350$bmrAn
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$5310$bmrAn
                                                                '#\0
                                                                g$c$7350$bmrAn
                                                                '#\9)))))
                                                        (g$char<=?$5310$bmrAn
                                                          '#\A
                                                          g$c$7350$bmrAn
                                                          '#\Z)))))
                                                  (g$char<=?$5310$bmrAn
                                                    '#\a
                                                    g$c$7350$bmrAn
                                                    '#\z))
                                               (display
                                                 g$c$7350$bmrAn
                                                 g$p$7346$bmrAn)
                                               (begin
                                                 (display '"%" g$p$7346$bmrAn)
                                                 ((case-lambda
                                                    ((g$n$7354$bmrAn)
                                                     (begin
                                                       (g$display-hex$7347$bmrAn
                                                         (g$quotient$5919$bmrAn
                                                           g$n$7354$bmrAn
                                                           '16))
                                                       (g$display-hex$7347$bmrAn
                                                         (g$remainder$5920$bmrAn
                                                           g$n$7354$bmrAn
                                                           '16)))))
                                                  (char->integer
                                                    g$c$7350$bmrAn))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$7349$bmrAn))))
                                        (g$f$7348$bmrAn (cdr g$ls$7349$bmrAn)))
                                      (void))))))
                        g$f$7348$bmrAn)
                      g$x$7340$bmrAn)
                     (g$extract$7345$bmrAn)))))
              g$extract$7344$bmrAn
              g$p$7343$bmrAn)))))))
   (g$file-locator$7303$bmrAn
     g$file-locator$7498$bmrAn
     (g$make-parameter$6975$bmrAn
       (case-lambda
         ((g$x$7356$bmrAn)
          ((case-lambda
             ((g$str$7357$bmrAn)
              ((letrec ((g$f$7358$bmrAn
                          (case-lambda
                            ((g$ls$7359$bmrAn
                               g$exts$7360$bmrAn
                               g$failed-list$7361$bmrAn)
                             (if (null? g$ls$7359$bmrAn)
                               (g$file-locator-resolution-error$6973$bmrAn
                                 g$x$7356$bmrAn
                                 (reverse g$failed-list$7361$bmrAn))
                               (if (null? g$exts$7360$bmrAn)
                                 (g$f$7358$bmrAn
                                   (cdr g$ls$7359$bmrAn)
                                   (g$library-extensions$7301$bmrAn)
                                   g$failed-list$7361$bmrAn)
                                 ((case-lambda
                                    ((g$name$7362$bmrAn)
                                     (if (g$file-exists?$5556$bmrAn
                                           g$name$7362$bmrAn)
                                       g$name$7362$bmrAn
                                       (g$f$7358$bmrAn
                                         g$ls$7359$bmrAn
                                         (cdr g$exts$7360$bmrAn)
                                         (cons
                                           g$name$7362$bmrAn
                                           g$failed-list$7361$bmrAn)))))
                                  (string-append
                                    (car g$ls$7359$bmrAn)
                                    g$str$7357$bmrAn
                                    (car g$exts$7360$bmrAn)))))))))
                 g$f$7358$bmrAn)
               (g$library-path$7300$bmrAn)
               (g$library-extensions$7301$bmrAn)
               '())))
           (g$library-name->file-name$7302$bmrAn g$x$7356$bmrAn))))
       (case-lambda
         ((g$f$7363$bmrAn)
          (if (procedure? g$f$7363$bmrAn)
            g$f$7363$bmrAn
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$7363$bmrAn))))))
   (g$serialize-all$7304$bmrAn
     g$serialize-all$7499$bmrAn
     (case-lambda
       ((g$serialize$7364$bmrAn g$compile$7365$bmrAn)
        (letrec* ((g$library-desc$7366$bmrAn
                    (case-lambda
                      ((g$x$7368$bmrAn)
                       (list
                         (g$library-id$7269$bmrAn g$x$7368$bmrAn)
                         (g$library-name$7270$bmrAn g$x$7368$bmrAn))))))
          (g$for-each$5064$bmrAn
            (case-lambda
              ((g$x$7367$bmrAn)
               (if (g$library-source-file-name$7282$bmrAn g$x$7367$bmrAn)
                 (g$serialize$7364$bmrAn
                   (g$library-source-file-name$7282$bmrAn g$x$7367$bmrAn)
                   (list
                     (g$library-id$7269$bmrAn g$x$7367$bmrAn)
                     (g$library-name$7270$bmrAn g$x$7367$bmrAn)
                     (g$library-version$7271$bmrAn g$x$7367$bmrAn)
                     (g$map$5063$bmrAn
                       g$library-desc$7366$bmrAn
                       (g$library-imp*$7272$bmrAn g$x$7367$bmrAn))
                     (g$map$5063$bmrAn
                       g$library-desc$7366$bmrAn
                       (g$library-vis*$7273$bmrAn g$x$7367$bmrAn))
                     (g$map$5063$bmrAn
                       g$library-desc$7366$bmrAn
                       (g$library-inv*$7274$bmrAn g$x$7367$bmrAn))
                     (g$library-subst$7275$bmrAn g$x$7367$bmrAn)
                     (g$library-env$7276$bmrAn g$x$7367$bmrAn)
                     (g$compile$7365$bmrAn
                       (g$library-visit-code$7279$bmrAn g$x$7367$bmrAn))
                     (g$compile$7365$bmrAn
                       (g$library-invoke-code$7280$bmrAn g$x$7367$bmrAn))
                     (g$library-visible?$7281$bmrAn g$x$7367$bmrAn)))
                 (void))))
            ((g$current-library-collection$7263$bmrAn)))))))
   (g$current-precompiled-library-loader$7305$bmrAn
     g$current-precompiled-library-loader$7500$bmrAn
     (g$make-parameter$6975$bmrAn
       (case-lambda ((g$filename$7369$bmrAn g$sk$7370$bmrAn) '#f))))
   (g$try-load-from-file$7306$bmrAn
     g$try-load-from-file$7501$bmrAn
     (case-lambda
       ((g$filename$7371$bmrAn)
        ((g$current-precompiled-library-loader$7305$bmrAn)
         g$filename$7371$bmrAn
         (case-lambda
           ((g$id$7372$bmrAn
              g$name$7373$bmrAn
              g$ver$7374$bmrAn
              g$imp*$7375$bmrAn
              g$vis*$7376$bmrAn
              g$inv*$7377$bmrAn
              g$exp-subst$7378$bmrAn
              g$exp-env$7379$bmrAn
              g$visit-proc$7380$bmrAn
              g$invoke-proc$7381$bmrAn
              g$visible?$7382$bmrAn)
            ((letrec ((g$f$7383$bmrAn
                        (case-lambda
                          ((g$deps$7384$bmrAn)
                           (if (null? g$deps$7384$bmrAn)
                             (begin
                               (g$install-library$7316$bmrAn
                                 g$id$7372$bmrAn
                                 g$name$7373$bmrAn
                                 g$ver$7374$bmrAn
                                 g$imp*$7375$bmrAn
                                 g$vis*$7376$bmrAn
                                 g$inv*$7377$bmrAn
                                 g$exp-subst$7378$bmrAn
                                 g$exp-env$7379$bmrAn
                                 g$visit-proc$7380$bmrAn
                                 g$invoke-proc$7381$bmrAn
                                 '#f
                                 '#f
                                 g$visible?$7382$bmrAn
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$7385$bmrAn)
                                 ((case-lambda
                                    ((g$label$7386$bmrAn g$dname$7387$bmrAn)
                                     ((case-lambda
                                        ((g$l$7388$bmrAn)
                                         (if (if (g$library?$7267$bmrAn
                                                   g$l$7388$bmrAn)
                                               (begin
                                                 '#f
                                                 (eq? g$label$7386$bmrAn
                                                      (g$library-id$7269$bmrAn
                                                        g$l$7388$bmrAn)))
                                               '#f)
                                           (g$f$7383$bmrAn
                                             (cdr g$deps$7384$bmrAn))
                                           (begin
                                             (g$library-version-mismatch-warning$6972$bmrAn
                                               g$name$7373$bmrAn
                                               g$dname$7387$bmrAn
                                               g$filename$7371$bmrAn)
                                             '#f))))
                                      (g$find-library-by-name$7311$bmrAn
                                        g$dname$7387$bmrAn))))
                                  (car g$d$7385$bmrAn)
                                  (g$cadr$5264$bmrAn g$d$7385$bmrAn))))
                              (car g$deps$7384$bmrAn)))))))
               g$f$7383$bmrAn)
             (append g$imp*$7375$bmrAn g$vis*$7376$bmrAn g$inv*$7377$bmrAn)))
           (g$others$7389$bmrAn '#f))))))
   (g$library-loader$7307$bmrAn
     g$library-loader$7502$bmrAn
     (g$make-parameter$6975$bmrAn
       (case-lambda
         ((g$x$7390$bmrAn)
          ((case-lambda
             ((g$file-name$7391$bmrAn)
              (if (not g$file-name$7391$bmrAn)
                (assertion-violation '#f '"cannot file library" g$x$7390$bmrAn)
                ((case-lambda
                   ((g$t$7392$bmrAn)
                    (if g$t$7392$bmrAn
                      g$t$7392$bmrAn
                      (begin
                        '#f
                        ((g$current-library-expander$7308$bmrAn)
                         (g$read-library-source-file$6974$bmrAn
                           g$file-name$7391$bmrAn)
                         g$file-name$7391$bmrAn
                         (case-lambda
                           ((g$name$7393$bmrAn)
                            (if (not (equal? g$name$7393$bmrAn g$x$7390$bmrAn))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (() (g$open-string-output-port$6336$bmrAn)))
                                  (case-lambda
                                    ((g$p$7396$bmrAn g$e$7397$bmrAn)
                                     ((case-lambda
                                        ((g$e$7398$bmrAn g$p$7399$bmrAn)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$7399$bmrAn)
                                           (write g$x$7390$bmrAn g$p$7399$bmrAn)
                                           (display '" in file " g$p$7399$bmrAn)
                                           (display
                                             g$file-name$7391$bmrAn
                                             g$p$7399$bmrAn)
                                           (display '", found " g$p$7399$bmrAn)
                                           (write
                                             g$name$7393$bmrAn
                                             g$p$7399$bmrAn)
                                           (display '" instead" g$p$7399$bmrAn)
                                           (g$e$7398$bmrAn))))
                                      g$e$7397$bmrAn
                                      g$p$7396$bmrAn)))))
                              (void)))))))))
                 (g$try-load-from-file$7306$bmrAn g$file-name$7391$bmrAn)))))
           ((g$file-locator$7303$bmrAn) g$x$7390$bmrAn))))
       (case-lambda
         ((g$f$7400$bmrAn)
          (if (procedure? g$f$7400$bmrAn)
            g$f$7400$bmrAn
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$7400$bmrAn))))))
   (g$current-library-expander$7308$bmrAn
     g$current-library-expander$7503$bmrAn
     (g$make-parameter$6975$bmrAn
       (case-lambda
         ((g$x$7401$bmrAn)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$7402$bmrAn)
          (if (procedure? g$f$7402$bmrAn)
            g$f$7402$bmrAn
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$7402$bmrAn))))))
   (g$external-pending-libraries$7309$bmrAn
     g$external-pending-libraries$7504$bmrAn
     (g$make-parameter$6975$bmrAn '()))
   (g$find-external-library$7310$bmrAn
     g$find-external-library$7505$bmrAn
     (case-lambda
       ((g$name$7403$bmrAn)
        (begin
          (if (g$member$5057$bmrAn
                g$name$7403$bmrAn
                (g$external-pending-libraries$7309$bmrAn))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$7403$bmrAn)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$7406$bmrAn
                g$external-pending-libraries$7407$bmrAn)
              ((case-lambda
                 ((g$swap$7408$bmrAn)
                  (dynamic-wind
                    g$swap$7408$bmrAn
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$7307$bmrAn) g$name$7403$bmrAn)
                         ((case-lambda
                            ((g$t$7409$bmrAn)
                             (if g$t$7409$bmrAn
                               g$t$7409$bmrAn
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$7403$bmrAn)))))
                          (g$find-library-by$7299$bmrAn
                            (case-lambda
                              ((g$x$7410$bmrAn)
                               (equal?
                                 (g$library-name$7270$bmrAn g$x$7410$bmrAn)
                                 g$name$7403$bmrAn))))))))
                    g$swap$7408$bmrAn)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$7411$bmrAn)
                      (begin
                        (g$external-pending-libraries$7406$bmrAn
                          g$external-pending-libraries$7407$bmrAn)
                        (set! g$external-pending-libraries$7407$bmrAn
                          g$t$7411$bmrAn))))
                   (g$external-pending-libraries$7406$bmrAn)))))))
           g$external-pending-libraries$7309$bmrAn
           (cons
             g$name$7403$bmrAn
             (g$external-pending-libraries$7309$bmrAn)))))))
   (g$find-library-by-name$7311$bmrAn
     g$find-library-by-name$7506$bmrAn
     (case-lambda
       ((g$name$7412$bmrAn)
        ((case-lambda
           ((g$t$7413$bmrAn)
            (if g$t$7413$bmrAn
              g$t$7413$bmrAn
              (begin
                '#f
                (g$find-external-library$7310$bmrAn g$name$7412$bmrAn)))))
         (g$find-library-by$7299$bmrAn
           (case-lambda
             ((g$x$7414$bmrAn)
              (equal?
                (g$library-name$7270$bmrAn g$x$7414$bmrAn)
                g$name$7412$bmrAn))))))))
   (g$library-exists?$7312$bmrAn
     g$library-exists?$7507$bmrAn
     (case-lambda
       ((g$name$7415$bmrAn)
        (if (g$find-library-by$7299$bmrAn
              (case-lambda
                ((g$x$7416$bmrAn)
                 (equal?
                   (g$library-name$7270$bmrAn g$x$7416$bmrAn)
                   g$name$7415$bmrAn))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$7313$bmrAn
     g$find-library-by-spec/die$7508$bmrAn
     (case-lambda
       ((g$spec$7417$bmrAn)
        ((case-lambda
           ((g$id$7418$bmrAn)
            ((case-lambda
               ((g$t$7419$bmrAn)
                (if g$t$7419$bmrAn
                  g$t$7419$bmrAn
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$7417$bmrAn)))))
             (g$find-library-by$7299$bmrAn
               (case-lambda
                 ((g$x$7420$bmrAn)
                  (eq? g$id$7418$bmrAn
                       (g$library-id$7269$bmrAn g$x$7420$bmrAn))))))))
         (car g$spec$7417$bmrAn)))))
   (g$label->binding-table$7314$bmrAn
     g$label->binding-table$7509$bmrAn
     (g$make-eq-hashtable$5538$bmrAn))
   (g$install-library-record$7315$bmrAn
     g$install-library-record$7510$bmrAn
     (case-lambda
       ((g$lib$7421$bmrAn)
        (begin
          ((case-lambda
             ((g$exp-env$7422$bmrAn)
              (g$for-each$5064$bmrAn
                (case-lambda
                  ((g$x$7423$bmrAn)
                   ((case-lambda
                      ((g$label$7424$bmrAn g$binding$7425$bmrAn)
                       ((case-lambda
                          ((g$binding$7426$bmrAn)
                           (g$hashtable-set!$5542$bmrAn
                             g$label->binding-table$7314$bmrAn
                             g$label$7424$bmrAn
                             g$binding$7426$bmrAn)))
                        ((case-lambda
                           ((g$t$7427$bmrAn)
                            (if (g$memv$5056$bmrAn g$t$7427$bmrAn '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$7421$bmrAn
                                  (cdr g$binding$7425$bmrAn)))
                              (if (g$memv$5056$bmrAn
                                    g$t$7427$bmrAn
                                    '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$7421$bmrAn
                                    (cdr g$binding$7425$bmrAn)))
                                (if (g$memv$5056$bmrAn
                                      g$t$7427$bmrAn
                                      '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$7421$bmrAn
                                      (cdr g$binding$7425$bmrAn)))
                                  g$binding$7425$bmrAn)))))
                         (car g$binding$7425$bmrAn)))))
                    (car g$x$7423$bmrAn)
                    (cdr g$x$7423$bmrAn))))
                g$exp-env$7422$bmrAn)))
           (g$library-env$7276$bmrAn g$lib$7421$bmrAn))
          ((g$current-library-collection$7263$bmrAn) g$lib$7421$bmrAn)))))
   (g$install-library$7316$bmrAn
     g$install-library$7511$bmrAn
     (case-lambda
       ((g$id$7428$bmrAn
          g$name$7429$bmrAn
          g$ver$7430$bmrAn
          g$imp*$7431$bmrAn
          g$vis*$7432$bmrAn
          g$inv*$7433$bmrAn
          g$exp-subst$7434$bmrAn
          g$exp-env$7435$bmrAn
          g$visit-proc$7436$bmrAn
          g$invoke-proc$7437$bmrAn
          g$visit-code$7438$bmrAn
          g$invoke-code$7439$bmrAn
          g$visible?$7440$bmrAn
          g$source-file-name$7441$bmrAn)
        ((case-lambda
           ((g$imp-lib*$7442$bmrAn g$vis-lib*$7443$bmrAn g$inv-lib*$7444$bmrAn)
            (begin
              (if (not (if (symbol? g$id$7428$bmrAn)
                         (if (list? g$name$7429$bmrAn)
                           (begin '#f (list? g$ver$7430$bmrAn))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$7428$bmrAn
                  g$name$7429$bmrAn
                  g$ver$7430$bmrAn)
                (void))
              (if (g$library-exists?$7312$bmrAn g$name$7429$bmrAn)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$7429$bmrAn)
                (void))
              ((case-lambda
                 ((g$lib$7445$bmrAn)
                  (g$install-library-record$7315$bmrAn g$lib$7445$bmrAn)))
               (g$make-library$7268$bmrAn
                 g$id$7428$bmrAn
                 g$name$7429$bmrAn
                 g$ver$7430$bmrAn
                 g$imp-lib*$7442$bmrAn
                 g$vis-lib*$7443$bmrAn
                 g$inv-lib*$7444$bmrAn
                 g$exp-subst$7434$bmrAn
                 g$exp-env$7435$bmrAn
                 g$visit-proc$7436$bmrAn
                 g$invoke-proc$7437$bmrAn
                 g$visit-code$7438$bmrAn
                 g$invoke-code$7439$bmrAn
                 g$visible?$7440$bmrAn
                 g$source-file-name$7441$bmrAn)))))
         (g$map$5063$bmrAn
           g$find-library-by-spec/die$7313$bmrAn
           g$imp*$7431$bmrAn)
         (g$map$5063$bmrAn
           g$find-library-by-spec/die$7313$bmrAn
           g$vis*$7432$bmrAn)
         (g$map$5063$bmrAn
           g$find-library-by-spec/die$7313$bmrAn
           g$inv*$7433$bmrAn)))))
   (g$imported-label->binding$7317$bmrAn
     g$imported-label->binding$7512$bmrAn
     (case-lambda
       ((g$lab$7446$bmrAn)
        (g$hashtable-ref$5541$bmrAn
          g$label->binding-table$7314$bmrAn
          g$lab$7446$bmrAn
          '#f))))
   (g$invoke-library$7318$bmrAn
     g$invoke-library$7513$bmrAn
     (case-lambda
       ((g$lib$7447$bmrAn)
        ((case-lambda
           ((g$invoke$7448$bmrAn)
            (if (procedure? g$invoke$7448$bmrAn)
              (begin
                (g$set-library-invoke-state!$7292$bmrAn
                  g$lib$7447$bmrAn
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7447$bmrAn))))
                (g$for-each$5064$bmrAn
                  g$invoke-library$7318$bmrAn
                  (g$library-inv*$7274$bmrAn g$lib$7447$bmrAn))
                (g$set-library-invoke-state!$7292$bmrAn
                  g$lib$7447$bmrAn
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7447$bmrAn))))
                (g$invoke$7448$bmrAn)
                (g$set-library-invoke-state!$7292$bmrAn g$lib$7447$bmrAn '#t))
              (void))))
         (g$library-invoke-state$7278$bmrAn g$lib$7447$bmrAn)))))
   (g$visit-library$7319$bmrAn
     g$visit-library$7514$bmrAn
     (case-lambda
       ((g$lib$7449$bmrAn)
        ((case-lambda
           ((g$visit$7450$bmrAn)
            (if (procedure? g$visit$7450$bmrAn)
              (begin
                (g$set-library-visit-state!$7291$bmrAn
                  g$lib$7449$bmrAn
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7449$bmrAn))))
                (g$for-each$5064$bmrAn
                  g$invoke-library$7318$bmrAn
                  (g$library-vis*$7273$bmrAn g$lib$7449$bmrAn))
                (g$set-library-visit-state!$7291$bmrAn
                  g$lib$7449$bmrAn
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7449$bmrAn))))
                (g$visit$7450$bmrAn)
                (g$set-library-visit-state!$7291$bmrAn g$lib$7449$bmrAn '#t))
              (void))))
         (g$library-visit-state$7277$bmrAn g$lib$7449$bmrAn)))))
   (g$invoke-library-by-spec$7320$bmrAn
     g$invoke-library-by-spec$7515$bmrAn
     (case-lambda
       ((g$spec$7451$bmrAn)
        (g$invoke-library$7318$bmrAn
          (g$find-library-by-spec/die$7313$bmrAn g$spec$7451$bmrAn)))))
   (g$installed-libraries$7321$bmrAn
     g$installed-libraries$7516$bmrAn
     (case-lambda
       ((g$all?$7452$bmrAn)
        ((letrec ((g$f$7453$bmrAn
                    (case-lambda
                      ((g$ls$7454$bmrAn)
                       (if (null? g$ls$7454$bmrAn)
                         '()
                         (if ((case-lambda
                                ((g$t$7455$bmrAn)
                                 (if g$t$7455$bmrAn
                                   g$t$7455$bmrAn
                                   (begin
                                     '#f
                                     (g$library-visible?$7281$bmrAn
                                       (car g$ls$7454$bmrAn))))))
                              g$all?$7452$bmrAn)
                           (cons
                             (car g$ls$7454$bmrAn)
                             (g$f$7453$bmrAn (cdr g$ls$7454$bmrAn)))
                           (g$f$7453$bmrAn (cdr g$ls$7454$bmrAn))))))))
           g$f$7453$bmrAn)
         ((g$current-library-collection$7263$bmrAn))))
       (() (g$installed-libraries$7321$bmrAn '#f))))
   (g$library-spec$7322$bmrAn
     g$library-spec$7517$bmrAn
     (case-lambda
       ((g$x$7456$bmrAn)
        (begin
          (if (not (g$library?$7267$bmrAn g$x$7456$bmrAn))
            (assertion-violation 'library-spec '"not a library" g$x$7456$bmrAn)
            (void))
          (list
            (g$library-id$7269$bmrAn g$x$7456$bmrAn)
            (g$library-name$7270$bmrAn g$x$7456$bmrAn)
            (g$library-version$7271$bmrAn g$x$7456$bmrAn)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7518$bmrAn
     g$build-global-define$7628$bmrAn
     (case-lambda ((g$x$7599$bmrAn) (g$build-void$7595$bmrAn))))
   (g$build-lambda$7567$bmrAn
     g$build-lambda$7629$bmrAn
     (case-lambda
       ((g$ae$7600$bmrAn g$vars$7601$bmrAn g$exp$7602$bmrAn)
        (list 'case-lambda (list g$vars$7601$bmrAn g$exp$7602$bmrAn)))))
   (g$build-case-lambda$7568$bmrAn
     g$build-case-lambda$7630$bmrAn
     (case-lambda
       ((g$ae$7603$bmrAn g$vars*$7604$bmrAn g$exp*$7605$bmrAn)
        (cons
          'case-lambda
          (g$map$5063$bmrAn list g$vars*$7604$bmrAn g$exp*$7605$bmrAn)))))
   (g$build-let$7569$bmrAn
     g$build-let$7631$bmrAn
     (case-lambda
       ((g$ae$7606$bmrAn g$lhs*$7607$bmrAn g$rhs*$7608$bmrAn g$body$7609$bmrAn)
        (cons
          (g$build-lambda$7567$bmrAn
            g$ae$7606$bmrAn
            g$lhs*$7607$bmrAn
            g$body$7609$bmrAn)
          g$rhs*$7608$bmrAn))))
   (g$build-sequence$7594$bmrAn
     g$build-sequence$7632$bmrAn
     (case-lambda
       ((g$ae$7610$bmrAn g$exps$7611$bmrAn)
        ((letrec ((g$loop$7612$bmrAn
                    (case-lambda
                      ((g$exps$7613$bmrAn)
                       (if (null? (cdr g$exps$7613$bmrAn))
                         (car g$exps$7613$bmrAn)
                         (if (equal?
                               (car g$exps$7613$bmrAn)
                               (g$build-void$7595$bmrAn))
                           (g$loop$7612$bmrAn (cdr g$exps$7613$bmrAn))
                           (cons 'begin g$exps$7613$bmrAn)))))))
           g$loop$7612$bmrAn)
         g$exps$7611$bmrAn))))
   (g$build-void$7595$bmrAn
     g$build-void$7633$bmrAn
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7596$bmrAn
     g$build-letrec$7634$bmrAn
     (case-lambda
       ((g$ae$7614$bmrAn
          g$vars$7615$bmrAn
          g$val-exps$7616$bmrAn
          g$body-exp$7617$bmrAn)
        (if (null? g$vars$7615$bmrAn)
          g$body-exp$7617$bmrAn
          (list
            'letrec
            (g$map$5063$bmrAn list g$vars$7615$bmrAn g$val-exps$7616$bmrAn)
            g$body-exp$7617$bmrAn)))))
   (g$build-letrec*$7597$bmrAn
     g$build-letrec*$7635$bmrAn
     (case-lambda
       ((g$ae$7618$bmrAn
          g$vars$7619$bmrAn
          g$val-exps$7620$bmrAn
          g$body-exp$7621$bmrAn)
        (if (null? g$vars$7619$bmrAn)
          g$body-exp$7621$bmrAn
          (list
            'letrec*
            (g$map$5063$bmrAn list g$vars$7619$bmrAn g$val-exps$7620$bmrAn)
            g$body-exp$7621$bmrAn)))))
   (g$build-library-letrec*$7598$bmrAn
     g$build-library-letrec*$7636$bmrAn
     (case-lambda
       ((g$ae$7622$bmrAn
          g$name$7623$bmrAn
          g$vars$7624$bmrAn
          g$locs$7625$bmrAn
          g$val-exps$7626$bmrAn
          g$body-exp$7627$bmrAn)
        (list
          'library-letrec*
          g$name$7623$bmrAn
          (g$map$5063$bmrAn
            list
            g$vars$7624$bmrAn
            g$locs$7625$bmrAn
            g$val-exps$7626$bmrAn)
          g$body-exp$7627$bmrAn)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7637$bmrAn
     g$set-cons$11333$bmrAn
     (case-lambda
       ((g$x$8102$bmrAn g$ls$8103$bmrAn)
        (if (g$memq$5055$bmrAn g$x$8102$bmrAn g$ls$8103$bmrAn)
          g$ls$8103$bmrAn
          (cons g$x$8102$bmrAn g$ls$8103$bmrAn)))))
   (g$set-union$7638$bmrAn
     g$set-union$11334$bmrAn
     (case-lambda
       ((g$ls1$8104$bmrAn g$ls2$8105$bmrAn)
        (if (null? g$ls1$8104$bmrAn)
          g$ls2$8105$bmrAn
          (if (g$memq$5055$bmrAn (car g$ls1$8104$bmrAn) g$ls2$8105$bmrAn)
            (g$set-union$7638$bmrAn (cdr g$ls1$8104$bmrAn) g$ls2$8105$bmrAn)
            (cons
              (car g$ls1$8104$bmrAn)
              (g$set-union$7638$bmrAn
                (cdr g$ls1$8104$bmrAn)
                g$ls2$8105$bmrAn)))))))
   (g$top-mark*$7640$bmrAn g$top-mark*$11335$bmrAn '(top))
   (g$top-marked?$7641$bmrAn
     g$top-marked?$11336$bmrAn
     (case-lambda
       ((g$m*$8106$bmrAn) (g$memq$5055$bmrAn 'top g$m*$8106$bmrAn))))
   (g$gen-lexical$7642$bmrAn
     g$gen-lexical$11337$bmrAn
     (case-lambda
       ((g$sym$8107$bmrAn)
        (if (symbol? g$sym$8107$bmrAn)
          (gensym g$sym$8107$bmrAn)
          (if (g$stx?$7675$bmrAn g$sym$8107$bmrAn)
            (g$gen-lexical$7642$bmrAn (g$id->sym$7704$bmrAn g$sym$8107$bmrAn))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$8107$bmrAn))))))
   (g$gen-global$7643$bmrAn
     g$gen-global$11338$bmrAn
     (case-lambda
       ((g$x$8108$bmrAn) (g$gen-lexical$7642$bmrAn g$x$8108$bmrAn))))
   (g$gen-label$7644$bmrAn
     g$gen-label$11339$bmrAn
     (case-lambda ((g$_$8109$bmrAn) (gensym))))
   (g$gen-top-level-label$7645$bmrAn
     g$gen-top-level-label$11340$bmrAn
     (case-lambda
       ((g$id$8110$bmrAn g$rib$8111$bmrAn)
        (letrec* ((g$find$8112$bmrAn
                    (case-lambda
                      ((g$sym$8118$bmrAn
                         g$mark*$8119$bmrAn
                         g$sym*$8120$bmrAn
                         g$mark**$8121$bmrAn
                         g$label*$8122$bmrAn)
                       (if (pair? g$sym*$8120$bmrAn)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8118$bmrAn
                                        (car g$sym*$8120$bmrAn))
                                 (begin
                                   '#f
                                   (g$same-marks?$7705$bmrAn
                                     g$mark*$8119$bmrAn
                                     (car g$mark**$8121$bmrAn)))
                                 '#f)
                             (car g$label*$8122$bmrAn)
                             (g$find$8112$bmrAn
                               g$sym$8118$bmrAn
                               g$mark*$8119$bmrAn
                               (cdr g$sym*$8120$bmrAn)
                               (cdr g$mark**$8121$bmrAn)
                               (cdr g$label*$8122$bmrAn))))
                         '#f)))))
          ((case-lambda
             ((g$sym$8113$bmrAn g$mark*$8114$bmrAn)
              ((case-lambda
                 ((g$sym*$8115$bmrAn)
                  ((case-lambda
                     ((g$t$8116$bmrAn)
                      (if g$t$8116$bmrAn
                        ((case-lambda
                           ((g$label$8117$bmrAn)
                            (if (g$imported-label->binding$7512$bmrAn
                                  g$label$8117$bmrAn)
                              (gensym)
                              g$label$8117$bmrAn)))
                         g$t$8116$bmrAn)
                        (gensym))))
                   (if (g$memq$5055$bmrAn
                         g$sym$8113$bmrAn
                         (g$rib-sym*$7653$bmrAn g$rib$8111$bmrAn))
                     (begin
                       '#f
                       (g$find$8112$bmrAn
                         g$sym$8113$bmrAn
                         g$mark*$8114$bmrAn
                         g$sym*$8115$bmrAn
                         (g$rib-mark**$7654$bmrAn g$rib$8111$bmrAn)
                         (g$rib-label*$7655$bmrAn g$rib$8111$bmrAn)))
                     '#f))))
               (g$rib-sym*$7653$bmrAn g$rib$8111$bmrAn))))
           (g$id->sym$7704$bmrAn g$id$8110$bmrAn)
           (g$stx-mark*$7678$bmrAn g$id$8110$bmrAn))))))
   (g$gen-define-label+loc$7646$bmrAn
     g$gen-define-label+loc$11341$bmrAn
     (case-lambda
       ((g$id$8123$bmrAn g$rib$8124$bmrAn g$sd?$8125$bmrAn)
        (if g$sd?$8125$bmrAn
          (values (gensym) (g$gen-lexical$7642$bmrAn g$id$8123$bmrAn))
          ((case-lambda
             ((g$env$8126$bmrAn)
              ((case-lambda
                 ((g$label$8127$bmrAn g$locs$8128$bmrAn)
                  (values
                    g$label$8127$bmrAn
                    ((case-lambda
                       ((g$t$8129$bmrAn)
                        (if g$t$8129$bmrAn
                          (cdr g$t$8129$bmrAn)
                          ((case-lambda
                             ((g$loc$8130$bmrAn)
                              (begin
                                (g$set-interaction-env-locs!$8064$bmrAn
                                  g$env$8126$bmrAn
                                  (cons
                                    (cons g$label$8127$bmrAn g$loc$8130$bmrAn)
                                    g$locs$8128$bmrAn))
                                g$loc$8130$bmrAn)))
                           (g$gen-lexical$7642$bmrAn g$id$8123$bmrAn)))))
                     (g$assq$5051$bmrAn
                       g$label$8127$bmrAn
                       g$locs$8128$bmrAn)))))
               (g$gen-top-level-label$7645$bmrAn
                 g$id$8123$bmrAn
                 g$rib$8124$bmrAn)
               (g$interaction-env-locs$8061$bmrAn g$env$8126$bmrAn))))
           (g$top-level-context$8101$bmrAn))))))
   (g$gen-define-label$7647$bmrAn
     g$gen-define-label$11342$bmrAn
     (case-lambda
       ((g$id$8131$bmrAn g$rib$8132$bmrAn g$sd?$8133$bmrAn)
        (if g$sd?$8133$bmrAn
          (gensym)
          (g$gen-top-level-label$7645$bmrAn
            g$id$8131$bmrAn
            g$rib$8132$bmrAn)))))
   (g$8654$7648$bmrAn
     g$8654$11343$bmrAn
     (make-record-type-descriptor
       'rib
       '#f
       'g$8657$bmrAn
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$8656$7649$bmrAn g$8656$11344$bmrAn '#f)
   (g$8655$7650$bmrAn
     g$8655$11345$bmrAn
     (make-record-constructor-descriptor
       g$8654$7648$bmrAn
       '#f
       g$8656$7649$bmrAn))
   (g$rib?$7651$bmrAn
     g$rib?$11346$bmrAn
     (record-predicate g$8654$7648$bmrAn))
   (g$make-rib$7652$bmrAn
     g$make-rib$11347$bmrAn
     (record-constructor g$8655$7650$bmrAn))
   (g$rib-sym*$7653$bmrAn
     g$rib-sym*$11348$bmrAn
     (record-accessor g$8654$7648$bmrAn '0))
   (g$rib-mark**$7654$bmrAn
     g$rib-mark**$11349$bmrAn
     (record-accessor g$8654$7648$bmrAn '1))
   (g$rib-label*$7655$bmrAn
     g$rib-label*$11350$bmrAn
     (record-accessor g$8654$7648$bmrAn '2))
   (g$rib-sealed/freq$7656$bmrAn
     g$rib-sealed/freq$11351$bmrAn
     (record-accessor g$8654$7648$bmrAn '3))
   (g$rib-cache$7657$bmrAn
     g$rib-cache$11352$bmrAn
     (record-accessor g$8654$7648$bmrAn '4))
   (g$set-rib-sym*!$7658$bmrAn
     g$set-rib-sym*!$11353$bmrAn
     (record-mutator g$8654$7648$bmrAn '0))
   (g$set-rib-mark**!$7659$bmrAn
     g$set-rib-mark**!$11354$bmrAn
     (record-mutator g$8654$7648$bmrAn '1))
   (g$set-rib-label*!$7660$bmrAn
     g$set-rib-label*!$11355$bmrAn
     (record-mutator g$8654$7648$bmrAn '2))
   (g$set-rib-sealed/freq!$7661$bmrAn
     g$set-rib-sealed/freq!$11356$bmrAn
     (record-mutator g$8654$7648$bmrAn '3))
   (g$set-rib-cache!$7662$bmrAn
     g$set-rib-cache!$11357$bmrAn
     (record-mutator g$8654$7648$bmrAn '4))
   (g$make-empty-rib$7663$bmrAn
     g$make-empty-rib$11358$bmrAn
     (case-lambda (() (g$make-rib$7652$bmrAn '() '() '() '#f '#f))))
   (g$make-cache-rib$7664$bmrAn
     g$make-cache-rib$11359$bmrAn
     (case-lambda
       (()
        (g$make-rib$7652$bmrAn
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$5538$bmrAn)))))
   (g$find-label$7665$bmrAn
     g$find-label$11360$bmrAn
     (case-lambda
       ((g$rib$8134$bmrAn g$sym$8135$bmrAn g$mark*$8136$bmrAn)
        ((case-lambda
           ((g$ht$8137$bmrAn)
            (if g$ht$8137$bmrAn
              (begin
                '#f
                ((case-lambda
                   ((g$cv$8138$bmrAn)
                    ((case-lambda
                       ((g$t$8139$bmrAn)
                        (if g$t$8139$bmrAn (cdr g$t$8139$bmrAn) '#f)))
                     (if g$cv$8138$bmrAn
                       (begin
                         '#f
                         (g$assp$5054$bmrAn
                           (case-lambda
                             ((g$m$8140$bmrAn)
                              (g$same-marks?$7705$bmrAn
                                g$mark*$8136$bmrAn
                                g$m$8140$bmrAn)))
                           g$cv$8138$bmrAn))
                       '#f))))
                 (g$hashtable-ref$5541$bmrAn
                   g$ht$8137$bmrAn
                   g$sym$8135$bmrAn
                   '#f)))
              '#f)))
         (g$rib-cache$7657$bmrAn g$rib$8134$bmrAn)))))
   (g$extend-rib!$7666$bmrAn
     g$extend-rib!$11361$bmrAn
     (case-lambda
       ((g$rib$8141$bmrAn g$id$8142$bmrAn g$label$8143$bmrAn g$sd?$8144$bmrAn)
        (letrec* ((g$find$8145$bmrAn
                    (case-lambda
                      ((g$sym$8154$bmrAn
                         g$mark*$8155$bmrAn
                         g$sym*$8156$bmrAn
                         g$mark**$8157$bmrAn
                         g$label*$8158$bmrAn)
                       (if (pair? g$sym*$8156$bmrAn)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8154$bmrAn
                                        (car g$sym*$8156$bmrAn))
                                 (begin
                                   '#f
                                   (g$same-marks?$7705$bmrAn
                                     g$mark*$8155$bmrAn
                                     (car g$mark**$8157$bmrAn)))
                                 '#f)
                             g$label*$8158$bmrAn
                             (g$find$8145$bmrAn
                               g$sym$8154$bmrAn
                               g$mark*$8155$bmrAn
                               (cdr g$sym*$8156$bmrAn)
                               (cdr g$mark**$8157$bmrAn)
                               (cdr g$label*$8158$bmrAn))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7656$bmrAn g$rib$8141$bmrAn)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$8141$bmrAn)
              (void))
            ((case-lambda
               ((g$sym$8146$bmrAn g$mark*$8147$bmrAn)
                ((case-lambda
                   ((g$sym*$8148$bmrAn)
                    ((case-lambda
                       ((g$t$8149$bmrAn)
                        (if g$t$8149$bmrAn
                          ((case-lambda
                             ((g$p$8150$bmrAn)
                              (if (not (eq? g$label$8143$bmrAn g$p$8150$bmrAn))
                                (g$syntax-violation$8093$bmrAn
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$8142$bmrAn)
                                (void))))
                           g$t$8149$bmrAn)
                          ((case-lambda
                             ((g$t$8151$bmrAn)
                              (if g$t$8151$bmrAn
                                ((case-lambda
                                   ((g$p$8152$bmrAn)
                                    (if (not (eq? g$label$8143$bmrAn
                                                  (car g$p$8152$bmrAn)))
                                      (if (not g$sd?$8144$bmrAn)
                                        (set-car!
                                          g$p$8152$bmrAn
                                          g$label$8143$bmrAn)
                                        (g$syntax-violation$8093$bmrAn
                                          '#f
                                          '"multiple definitions of identifier"
                                          g$id$8142$bmrAn))
                                      (void))))
                                 g$t$8151$bmrAn)
                                (begin
                                  (if (g$rib-cache$7657$bmrAn g$rib$8141$bmrAn)
                                    (g$hashtable-update!$5545$bmrAn
                                      (g$rib-cache$7657$bmrAn g$rib$8141$bmrAn)
                                      g$sym$8146$bmrAn
                                      (case-lambda
                                        ((g$e$8153$bmrAn)
                                         (cons
                                           (cons
                                             g$mark*$8147$bmrAn
                                             g$label$8143$bmrAn)
                                           g$e$8153$bmrAn)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$7658$bmrAn
                                    g$rib$8141$bmrAn
                                    (cons g$sym$8146$bmrAn g$sym*$8148$bmrAn))
                                  (g$set-rib-mark**!$7659$bmrAn
                                    g$rib$8141$bmrAn
                                    (cons
                                      g$mark*$8147$bmrAn
                                      (g$rib-mark**$7654$bmrAn
                                        g$rib$8141$bmrAn)))
                                  (g$set-rib-label*!$7660$bmrAn
                                    g$rib$8141$bmrAn
                                    (cons
                                      g$label$8143$bmrAn
                                      (g$rib-label*$7655$bmrAn
                                        g$rib$8141$bmrAn)))))))
                           (if (g$memq$5055$bmrAn
                                 g$sym$8146$bmrAn
                                 (g$rib-sym*$7653$bmrAn g$rib$8141$bmrAn))
                             (begin
                               '#f
                               (g$find$8145$bmrAn
                                 g$sym$8146$bmrAn
                                 g$mark*$8147$bmrAn
                                 g$sym*$8148$bmrAn
                                 (g$rib-mark**$7654$bmrAn g$rib$8141$bmrAn)
                                 (g$rib-label*$7655$bmrAn g$rib$8141$bmrAn)))
                             '#f)))))
                     (g$find-label$7665$bmrAn
                       g$rib$8141$bmrAn
                       g$sym$8146$bmrAn
                       g$mark*$8147$bmrAn))))
                 (g$rib-sym*$7653$bmrAn g$rib$8141$bmrAn))))
             (g$id->sym$7704$bmrAn g$id$8142$bmrAn)
             (g$stx-mark*$7678$bmrAn g$id$8142$bmrAn)))))))
   (g$extend-rib/nc!$7667$bmrAn
     g$extend-rib/nc!$11362$bmrAn
     (case-lambda
       ((g$rib$8159$bmrAn g$id$8160$bmrAn g$label$8161$bmrAn)
        ((case-lambda
           ((g$sym$8162$bmrAn g$mark*$8163$bmrAn)
            ((case-lambda
               ((g$sym*$8164$bmrAn)
                (begin
                  (if (g$rib-cache$7657$bmrAn g$rib$8159$bmrAn)
                    (g$hashtable-update!$5545$bmrAn
                      (g$rib-cache$7657$bmrAn g$rib$8159$bmrAn)
                      g$sym$8162$bmrAn
                      (case-lambda
                        ((g$e$8165$bmrAn)
                         (cons
                           (cons g$mark*$8163$bmrAn g$label$8161$bmrAn)
                           g$e$8165$bmrAn)))
                      '())
                    (void))
                  (g$set-rib-sym*!$7658$bmrAn
                    g$rib$8159$bmrAn
                    (cons g$sym$8162$bmrAn g$sym*$8164$bmrAn))
                  (g$set-rib-mark**!$7659$bmrAn
                    g$rib$8159$bmrAn
                    (cons
                      g$mark*$8163$bmrAn
                      (g$rib-mark**$7654$bmrAn g$rib$8159$bmrAn)))
                  (g$set-rib-label*!$7660$bmrAn
                    g$rib$8159$bmrAn
                    (cons
                      g$label$8161$bmrAn
                      (g$rib-label*$7655$bmrAn g$rib$8159$bmrAn))))))
             (g$rib-sym*$7653$bmrAn g$rib$8159$bmrAn))))
         (g$id->sym$7704$bmrAn g$id$8160$bmrAn)
         (g$stx-mark*$7678$bmrAn g$id$8160$bmrAn)))))
   (g$make-rib-map$7668$bmrAn
     g$make-rib-map$11363$bmrAn
     (case-lambda
       ((g$sym*$8166$bmrAn)
        ((case-lambda
           ((g$ht$8167$bmrAn)
            ((letrec ((g$f$8168$bmrAn
                        (case-lambda
                          ((g$i$8169$bmrAn g$sym*$8170$bmrAn)
                           (if (null? g$sym*$8170$bmrAn)
                             g$ht$8167$bmrAn
                             (begin
                               (g$hashtable-update!$5545$bmrAn
                                 g$ht$8167$bmrAn
                                 (car g$sym*$8170$bmrAn)
                                 (case-lambda
                                   ((g$x$8171$bmrAn)
                                    (cons g$i$8169$bmrAn g$x$8171$bmrAn)))
                                 '())
                               (g$f$8168$bmrAn
                                 (+ g$i$8169$bmrAn '1)
                                 (cdr g$sym*$8170$bmrAn))))))))
               g$f$8168$bmrAn)
             '0
             g$sym*$8166$bmrAn)))
         (g$make-eq-hashtable$5538$bmrAn)))))
   (g$seal-rib!$7669$bmrAn
     g$seal-rib!$11364$bmrAn
     (case-lambda
       ((g$rib$8172$bmrAn)
        ((case-lambda
           ((g$sym*$8173$bmrAn)
            (if (not (null? g$sym*$8173$bmrAn))
              (begin
                (g$set-rib-sym*!$7658$bmrAn
                  g$rib$8172$bmrAn
                  (list->vector g$sym*$8173$bmrAn))
                (g$set-rib-mark**!$7659$bmrAn
                  g$rib$8172$bmrAn
                  (list->vector (g$rib-mark**$7654$bmrAn g$rib$8172$bmrAn)))
                (g$set-rib-label*!$7660$bmrAn
                  g$rib$8172$bmrAn
                  (list->vector (g$rib-label*$7655$bmrAn g$rib$8172$bmrAn)))
                (g$set-rib-sealed/freq!$7661$bmrAn
                  g$rib$8172$bmrAn
                  (g$make-rib-map$7668$bmrAn g$sym*$8173$bmrAn)))
              (void))))
         (g$rib-sym*$7653$bmrAn g$rib$8172$bmrAn)))))
   (g$unseal-rib!$7670$bmrAn
     g$unseal-rib!$11365$bmrAn
     (case-lambda
       ((g$rib$8174$bmrAn)
        (if (g$rib-sealed/freq$7656$bmrAn g$rib$8174$bmrAn)
          (begin
            (g$set-rib-sealed/freq!$7661$bmrAn g$rib$8174$bmrAn '#f)
            (g$set-rib-sym*!$7658$bmrAn
              g$rib$8174$bmrAn
              (vector->list (g$rib-sym*$7653$bmrAn g$rib$8174$bmrAn)))
            (g$set-rib-mark**!$7659$bmrAn
              g$rib$8174$bmrAn
              (vector->list (g$rib-mark**$7654$bmrAn g$rib$8174$bmrAn)))
            (g$set-rib-label*!$7660$bmrAn
              g$rib$8174$bmrAn
              (vector->list (g$rib-label*$7655$bmrAn g$rib$8174$bmrAn))))
          (void)))))
   (g$make-full-rib$7671$bmrAn
     g$make-full-rib$11366$bmrAn
     (case-lambda
       ((g$id*$8175$bmrAn g$label*$8176$bmrAn)
        ((case-lambda
           ((g$r$8177$bmrAn)
            (begin (g$seal-rib!$7669$bmrAn g$r$8177$bmrAn) g$r$8177$bmrAn)))
         (g$make-rib$7652$bmrAn
           (g$map$5063$bmrAn g$id->sym$7704$bmrAn g$id*$8175$bmrAn)
           (g$map$5063$bmrAn g$stx-mark*$7678$bmrAn g$id*$8175$bmrAn)
           g$label*$8176$bmrAn
           '#f
           '#f)))))
   (g$8685$7672$bmrAn
     g$8685$11367$bmrAn
     (make-record-type-descriptor
       'stx
       '#f
       'g$8688$bmrAn
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$8687$7673$bmrAn g$8687$11368$bmrAn '#f)
   (g$8686$7674$bmrAn
     g$8686$11369$bmrAn
     (make-record-constructor-descriptor
       g$8685$7672$bmrAn
       '#f
       g$8687$7673$bmrAn))
   (g$stx?$7675$bmrAn
     g$stx?$11370$bmrAn
     (record-predicate g$8685$7672$bmrAn))
   (g$make-stx$7676$bmrAn
     g$make-stx$11371$bmrAn
     (record-constructor g$8686$7674$bmrAn))
   (g$stx-expr$7677$bmrAn
     g$stx-expr$11372$bmrAn
     (record-accessor g$8685$7672$bmrAn '0))
   (g$stx-mark*$7678$bmrAn
     g$stx-mark*$11373$bmrAn
     (record-accessor g$8685$7672$bmrAn '1))
   (g$stx-subst*$7679$bmrAn
     g$stx-subst*$11374$bmrAn
     (record-accessor g$8685$7672$bmrAn '2))
   (g$stx-ae*$7680$bmrAn
     g$stx-ae*$11375$bmrAn
     (record-accessor g$8685$7672$bmrAn '3))
   (g$set-stx-expr!$7681$bmrAn
     g$set-stx-expr!$11376$bmrAn
     (record-mutator g$8685$7672$bmrAn '0))
   (g$set-stx-mark*!$7682$bmrAn
     g$set-stx-mark*!$11377$bmrAn
     (record-mutator g$8685$7672$bmrAn '1))
   (g$set-stx-subst*!$7683$bmrAn
     g$set-stx-subst*!$11378$bmrAn
     (record-mutator g$8685$7672$bmrAn '2))
   (g$set-stx-ae*!$7684$bmrAn
     g$set-stx-ae*!$11379$bmrAn
     (record-mutator g$8685$7672$bmrAn '3))
   (g$rp$7685$bmrAn
     g$rp$11380$bmrAn
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$8178$bmrAn g$p$8179$bmrAn g$wr$8180$bmrAn)
          (begin
            (display '"#<syntax " g$p$8179$bmrAn)
            (write (g$stx->datum$7714$bmrAn g$x$8178$bmrAn) g$p$8179$bmrAn)
            ((case-lambda
               ((g$expr$8181$bmrAn)
                (if (annotation? g$expr$8181$bmrAn)
                  ((case-lambda
                     ((g$src$8182$bmrAn)
                      (if (pair? g$src$8182$bmrAn)
                        (begin
                          (display '" (" g$p$8179$bmrAn)
                          (display (cdr g$src$8182$bmrAn) g$p$8179$bmrAn)
                          (display '" of " g$p$8179$bmrAn)
                          (display (car g$src$8182$bmrAn) g$p$8179$bmrAn)
                          (display '")" g$p$8179$bmrAn))
                        (void))))
                   (annotation-source g$expr$8181$bmrAn))
                  (void))))
             (g$stx-expr$7677$bmrAn g$x$8178$bmrAn))
            (display '">" g$p$8179$bmrAn))))))
   (g$datum->stx$7686$bmrAn
     g$datum->stx$11381$bmrAn
     (case-lambda
       ((g$id$8183$bmrAn g$datum$8184$bmrAn)
        (g$make-stx$7676$bmrAn
          g$datum$8184$bmrAn
          (g$stx-mark*$7678$bmrAn g$id$8183$bmrAn)
          (g$stx-subst*$7679$bmrAn g$id$8183$bmrAn)
          (g$stx-ae*$7680$bmrAn g$id$8183$bmrAn)))))
   (g$gen-mark$7687$bmrAn
     g$gen-mark$11382$bmrAn
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7688$bmrAn g$anti-mark$11383$bmrAn '#f)
   (g$anti-mark?$7689$bmrAn g$anti-mark?$11384$bmrAn not)
   (g$join-wraps$7690$bmrAn
     g$join-wraps$11385$bmrAn
     (case-lambda
       ((g$m1*$8185$bmrAn g$s1*$8186$bmrAn g$ae1*$8187$bmrAn g$e$8188$bmrAn)
        (letrec* ((g$cancel$8189$bmrAn
                    (case-lambda
                      ((g$ls1$8193$bmrAn g$ls2$8194$bmrAn)
                       ((letrec ((g$f$8195$bmrAn
                                   (case-lambda
                                     ((g$x$8196$bmrAn g$ls1$8197$bmrAn)
                                      (if (null? g$ls1$8197$bmrAn)
                                        (cdr g$ls2$8194$bmrAn)
                                        (cons
                                          g$x$8196$bmrAn
                                          (g$f$8195$bmrAn
                                            (car g$ls1$8197$bmrAn)
                                            (cdr g$ls1$8197$bmrAn))))))))
                          g$f$8195$bmrAn)
                        (car g$ls1$8193$bmrAn)
                        (cdr g$ls1$8193$bmrAn))))))
          ((case-lambda
             ((g$m2*$8190$bmrAn g$s2*$8191$bmrAn g$ae2*$8192$bmrAn)
              (if (if (not (null? g$m1*$8185$bmrAn))
                    (if (not (null? g$m2*$8190$bmrAn))
                      (begin
                        '#f
                        (g$anti-mark?$7689$bmrAn (car g$m2*$8190$bmrAn)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$8189$bmrAn g$m1*$8185$bmrAn g$m2*$8190$bmrAn)
                  (g$cancel$8189$bmrAn g$s1*$8186$bmrAn g$s2*$8191$bmrAn)
                  (g$cancel$8189$bmrAn g$ae1*$8187$bmrAn g$ae2*$8192$bmrAn))
                (values
                  (append g$m1*$8185$bmrAn g$m2*$8190$bmrAn)
                  (append g$s1*$8186$bmrAn g$s2*$8191$bmrAn)
                  (append g$ae1*$8187$bmrAn g$ae2*$8192$bmrAn)))))
           (g$stx-mark*$7678$bmrAn g$e$8188$bmrAn)
           (g$stx-subst*$7679$bmrAn g$e$8188$bmrAn)
           (g$stx-ae*$7680$bmrAn g$e$8188$bmrAn))))))
   (g$mkstx$7691$bmrAn
     g$mkstx$11386$bmrAn
     (case-lambda
       ((g$e$8198$bmrAn g$m*$8199$bmrAn g$s*$8200$bmrAn g$ae*$8201$bmrAn)
        (if (if (g$stx?$7675$bmrAn g$e$8198$bmrAn)
              (begin '#f (not (g$top-marked?$7641$bmrAn g$m*$8199$bmrAn)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7690$bmrAn
                 g$m*$8199$bmrAn
                 g$s*$8200$bmrAn
                 g$ae*$8201$bmrAn
                 g$e$8198$bmrAn)))
            (case-lambda
              ((g$m*$8205$bmrAn g$s*$8206$bmrAn g$ae*$8207$bmrAn)
               ((case-lambda
                  ((g$ae*$8208$bmrAn g$s*$8209$bmrAn g$m*$8210$bmrAn)
                   (g$make-stx$7676$bmrAn
                     (g$stx-expr$7677$bmrAn g$e$8198$bmrAn)
                     g$m*$8210$bmrAn
                     g$s*$8209$bmrAn
                     g$ae*$8208$bmrAn)))
                g$ae*$8207$bmrAn
                g$s*$8206$bmrAn
                g$m*$8205$bmrAn))))
          (g$make-stx$7676$bmrAn
            g$e$8198$bmrAn
            g$m*$8199$bmrAn
            g$s*$8200$bmrAn
            g$ae*$8201$bmrAn)))))
   (g$add-mark$7692$bmrAn
     g$add-mark$11387$bmrAn
     (case-lambda
       ((g$m$8211$bmrAn g$e$8212$bmrAn g$ae$8213$bmrAn)
        (g$mkstx$7691$bmrAn
          g$e$8212$bmrAn
          (list g$m$8211$bmrAn)
          '(shift)
          (list g$ae$8213$bmrAn)))))
   (g$add-subst$7693$bmrAn
     g$add-subst$11388$bmrAn
     (case-lambda
       ((g$subst$8214$bmrAn g$e$8215$bmrAn)
        (g$mkstx$7691$bmrAn g$e$8215$bmrAn '() (list g$subst$8214$bmrAn) '()))))
   (g$syntax-kind?$7694$bmrAn
     g$syntax-kind?$11389$bmrAn
     (case-lambda
       ((g$x$8216$bmrAn g$p?$8217$bmrAn)
        (if (g$stx?$7675$bmrAn g$x$8216$bmrAn)
          (g$syntax-kind?$7694$bmrAn
            (g$stx-expr$7677$bmrAn g$x$8216$bmrAn)
            g$p?$8217$bmrAn)
          (if (annotation? g$x$8216$bmrAn)
            (g$syntax-kind?$7694$bmrAn
              (annotation-expression g$x$8216$bmrAn)
              g$p?$8217$bmrAn)
            (g$p?$8217$bmrAn g$x$8216$bmrAn))))))
   (g$syntax-vector->list$7695$bmrAn
     g$syntax-vector->list$11390$bmrAn
     (case-lambda
       ((g$x$8218$bmrAn)
        (if (g$stx?$7675$bmrAn g$x$8218$bmrAn)
          ((case-lambda
             ((g$ls$8219$bmrAn g$m*$8220$bmrAn g$s*$8221$bmrAn g$ae*$8222$bmrAn)
              (g$map$5063$bmrAn
                (case-lambda
                  ((g$x$8223$bmrAn)
                   (g$mkstx$7691$bmrAn
                     g$x$8223$bmrAn
                     g$m*$8220$bmrAn
                     g$s*$8221$bmrAn
                     g$ae*$8222$bmrAn)))
                g$ls$8219$bmrAn)))
           (g$syntax-vector->list$7695$bmrAn
             (g$stx-expr$7677$bmrAn g$x$8218$bmrAn))
           (g$stx-mark*$7678$bmrAn g$x$8218$bmrAn)
           (g$stx-subst*$7679$bmrAn g$x$8218$bmrAn)
           (g$stx-ae*$7680$bmrAn g$x$8218$bmrAn))
          (if (annotation? g$x$8218$bmrAn)
            (g$syntax-vector->list$7695$bmrAn
              (annotation-expression g$x$8218$bmrAn))
            (if (vector? g$x$8218$bmrAn)
              (vector->list g$x$8218$bmrAn)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$8218$bmrAn)))))))
   (g$syntax-pair?$7696$bmrAn
     g$syntax-pair?$11391$bmrAn
     (case-lambda
       ((g$x$8224$bmrAn) (g$syntax-kind?$7694$bmrAn g$x$8224$bmrAn pair?))))
   (g$syntax-vector?$7697$bmrAn
     g$syntax-vector?$11392$bmrAn
     (case-lambda
       ((g$x$8225$bmrAn) (g$syntax-kind?$7694$bmrAn g$x$8225$bmrAn vector?))))
   (g$syntax-null?$7698$bmrAn
     g$syntax-null?$11393$bmrAn
     (case-lambda
       ((g$x$8226$bmrAn) (g$syntax-kind?$7694$bmrAn g$x$8226$bmrAn null?))))
   (g$syntax-list?$7699$bmrAn
     g$syntax-list?$11394$bmrAn
     (case-lambda
       ((g$x$8227$bmrAn)
        ((case-lambda
           ((g$t$8228$bmrAn)
            (if g$t$8228$bmrAn
              g$t$8228$bmrAn
              (begin
                '#f
                (if (g$syntax-pair?$7696$bmrAn g$x$8227$bmrAn)
                  (begin
                    '#f
                    (g$syntax-list?$7699$bmrAn
                      (g$syntax-cdr$7701$bmrAn g$x$8227$bmrAn)))
                  '#f)))))
         (g$syntax-null?$7698$bmrAn g$x$8227$bmrAn)))))
   (g$syntax-car$7700$bmrAn
     g$syntax-car$11395$bmrAn
     (case-lambda
       ((g$x$8229$bmrAn)
        (if (g$stx?$7675$bmrAn g$x$8229$bmrAn)
          (g$mkstx$7691$bmrAn
            (g$syntax-car$7700$bmrAn (g$stx-expr$7677$bmrAn g$x$8229$bmrAn))
            (g$stx-mark*$7678$bmrAn g$x$8229$bmrAn)
            (g$stx-subst*$7679$bmrAn g$x$8229$bmrAn)
            (g$stx-ae*$7680$bmrAn g$x$8229$bmrAn))
          (if (annotation? g$x$8229$bmrAn)
            (g$syntax-car$7700$bmrAn (annotation-expression g$x$8229$bmrAn))
            (if (pair? g$x$8229$bmrAn)
              (car g$x$8229$bmrAn)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$8229$bmrAn)))))))
   (g$syntax-cdr$7701$bmrAn
     g$syntax-cdr$11396$bmrAn
     (case-lambda
       ((g$x$8230$bmrAn)
        (if (g$stx?$7675$bmrAn g$x$8230$bmrAn)
          (g$mkstx$7691$bmrAn
            (g$syntax-cdr$7701$bmrAn (g$stx-expr$7677$bmrAn g$x$8230$bmrAn))
            (g$stx-mark*$7678$bmrAn g$x$8230$bmrAn)
            (g$stx-subst*$7679$bmrAn g$x$8230$bmrAn)
            (g$stx-ae*$7680$bmrAn g$x$8230$bmrAn))
          (if (annotation? g$x$8230$bmrAn)
            (g$syntax-cdr$7701$bmrAn (annotation-expression g$x$8230$bmrAn))
            (if (pair? g$x$8230$bmrAn)
              (cdr g$x$8230$bmrAn)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$8230$bmrAn)))))))
   (g$syntax->list$7702$bmrAn
     g$syntax->list$11397$bmrAn
     (case-lambda
       ((g$x$8231$bmrAn)
        (if (g$syntax-pair?$7696$bmrAn g$x$8231$bmrAn)
          (cons
            (g$syntax-car$7700$bmrAn g$x$8231$bmrAn)
            (g$syntax->list$7702$bmrAn
              (g$syntax-cdr$7701$bmrAn g$x$8231$bmrAn)))
          (if (g$syntax-null?$7698$bmrAn g$x$8231$bmrAn)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$8231$bmrAn))))))
   (g$id?$7703$bmrAn
     g$id?$11398$bmrAn
     (case-lambda
       ((g$x$8232$bmrAn)
        (if (g$stx?$7675$bmrAn g$x$8232$bmrAn)
          (begin
            '#f
            ((case-lambda
               ((g$expr$8233$bmrAn)
                (symbol?
                  (if (annotation? g$expr$8233$bmrAn)
                    (annotation-stripped g$expr$8233$bmrAn)
                    g$expr$8233$bmrAn))))
             (g$stx-expr$7677$bmrAn g$x$8232$bmrAn)))
          '#f))))
   (g$id->sym$7704$bmrAn
     g$id->sym$11399$bmrAn
     (case-lambda
       ((g$x$8234$bmrAn)
        (begin
          (if (not (g$stx?$7675$bmrAn g$x$8234$bmrAn))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$8234$bmrAn)
            (void))
          ((case-lambda
             ((g$expr$8235$bmrAn)
              ((case-lambda
                 ((g$sym$8236$bmrAn)
                  (if (symbol? g$sym$8236$bmrAn)
                    g$sym$8236$bmrAn
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$8234$bmrAn))))
               (if (annotation? g$expr$8235$bmrAn)
                 (annotation-stripped g$expr$8235$bmrAn)
                 g$expr$8235$bmrAn))))
           (g$stx-expr$7677$bmrAn g$x$8234$bmrAn))))))
   (g$same-marks?$7705$bmrAn
     g$same-marks?$11400$bmrAn
     (case-lambda
       ((g$x$8237$bmrAn g$y$8238$bmrAn)
        ((case-lambda
           ((g$t$8239$bmrAn)
            (if g$t$8239$bmrAn
              g$t$8239$bmrAn
              (begin
                '#f
                (if (pair? g$x$8237$bmrAn)
                  (if (pair? g$y$8238$bmrAn)
                    (if (eq? (car g$x$8237$bmrAn) (car g$y$8238$bmrAn))
                      (begin
                        '#f
                        (g$same-marks?$7705$bmrAn
                          (cdr g$x$8237$bmrAn)
                          (cdr g$y$8238$bmrAn)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$8237$bmrAn) (begin '#f (null? g$y$8238$bmrAn)) '#f)))))
   (g$bound-id=?$7706$bmrAn
     g$bound-id=?$11401$bmrAn
     (case-lambda
       ((g$x$8240$bmrAn g$y$8241$bmrAn)
        (if (eq? (g$id->sym$7704$bmrAn g$x$8240$bmrAn)
                 (g$id->sym$7704$bmrAn g$y$8241$bmrAn))
          (begin
            '#f
            (g$same-marks?$7705$bmrAn
              (g$stx-mark*$7678$bmrAn g$x$8240$bmrAn)
              (g$stx-mark*$7678$bmrAn g$y$8241$bmrAn)))
          '#f))))
   (g$free-id=?$7707$bmrAn
     g$free-id=?$11402$bmrAn
     (case-lambda
       ((g$i$8242$bmrAn g$j$8243$bmrAn)
        ((case-lambda
           ((g$t0$8244$bmrAn g$t1$8245$bmrAn)
            (if ((case-lambda
                   ((g$t$8246$bmrAn)
                    (if g$t$8246$bmrAn
                      g$t$8246$bmrAn
                      (begin '#f g$t1$8245$bmrAn))))
                 g$t0$8244$bmrAn)
              (eq? g$t0$8244$bmrAn g$t1$8245$bmrAn)
              (eq? (g$id->sym$7704$bmrAn g$i$8242$bmrAn)
                   (g$id->sym$7704$bmrAn g$j$8243$bmrAn)))))
         (g$id->real-label$7717$bmrAn g$i$8242$bmrAn)
         (g$id->real-label$7717$bmrAn g$j$8243$bmrAn)))))
   (g$valid-bound-ids?$7708$bmrAn
     g$valid-bound-ids?$11403$bmrAn
     (case-lambda
       ((g$id*$8247$bmrAn)
        (if (g$for-all$5061$bmrAn g$id?$7703$bmrAn g$id*$8247$bmrAn)
          (begin '#f (g$distinct-bound-ids?$7709$bmrAn g$id*$8247$bmrAn))
          '#f))))
   (g$distinct-bound-ids?$7709$bmrAn
     g$distinct-bound-ids?$11404$bmrAn
     (case-lambda
       ((g$id*$8248$bmrAn)
        ((case-lambda
           ((g$t$8249$bmrAn)
            (if g$t$8249$bmrAn
              g$t$8249$bmrAn
              (begin
                '#f
                (if (not (g$bound-id-member?$7710$bmrAn
                           (car g$id*$8248$bmrAn)
                           (cdr g$id*$8248$bmrAn)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$7709$bmrAn (cdr g$id*$8248$bmrAn)))
                  '#f)))))
         (null? g$id*$8248$bmrAn)))))
   (g$bound-id-member?$7710$bmrAn
     g$bound-id-member?$11405$bmrAn
     (case-lambda
       ((g$id$8250$bmrAn g$id*$8251$bmrAn)
        (if (pair? g$id*$8251$bmrAn)
          (begin
            '#f
            ((case-lambda
               ((g$t$8252$bmrAn)
                (if g$t$8252$bmrAn
                  g$t$8252$bmrAn
                  (begin
                    '#f
                    (g$bound-id-member?$7710$bmrAn
                      g$id$8250$bmrAn
                      (cdr g$id*$8251$bmrAn))))))
             (g$bound-id=?$7706$bmrAn g$id$8250$bmrAn (car g$id*$8251$bmrAn))))
          '#f))))
   (g$self-evaluating?$7711$bmrAn
     g$self-evaluating?$11406$bmrAn
     (case-lambda
       ((g$x$8253$bmrAn)
        ((case-lambda
           ((g$t$8254$bmrAn)
            (if g$t$8254$bmrAn
              g$t$8254$bmrAn
              ((case-lambda
                 ((g$t$8255$bmrAn)
                  (if g$t$8255$bmrAn
                    g$t$8255$bmrAn
                    ((case-lambda
                       ((g$t$8256$bmrAn)
                        (if g$t$8256$bmrAn
                          g$t$8256$bmrAn
                          ((case-lambda
                             ((g$t$8257$bmrAn)
                              (if g$t$8257$bmrAn
                                g$t$8257$bmrAn
                                (begin '#f (bytevector? g$x$8253$bmrAn)))))
                           (boolean? g$x$8253$bmrAn)))))
                     (char? g$x$8253$bmrAn)))))
               (string? g$x$8253$bmrAn)))))
         (number? g$x$8253$bmrAn)))))
   (g$strip-annotations$7712$bmrAn
     g$strip-annotations$11407$bmrAn
     (case-lambda
       ((g$x$8258$bmrAn)
        (if (pair? g$x$8258$bmrAn)
          (cons
            (g$strip-annotations$7712$bmrAn (car g$x$8258$bmrAn))
            (g$strip-annotations$7712$bmrAn (cdr g$x$8258$bmrAn)))
          (if (vector? g$x$8258$bmrAn)
            (vector-map g$strip-annotations$7712$bmrAn g$x$8258$bmrAn)
            (if (annotation? g$x$8258$bmrAn)
              (annotation-stripped g$x$8258$bmrAn)
              g$x$8258$bmrAn))))))
   (g$strip$7713$bmrAn
     g$strip$11408$bmrAn
     (case-lambda
       ((g$x$8259$bmrAn g$m*$8260$bmrAn)
        (if (g$top-marked?$7641$bmrAn g$m*$8260$bmrAn)
          (if ((case-lambda
                 ((g$t$8261$bmrAn)
                  (if g$t$8261$bmrAn
                    g$t$8261$bmrAn
                    ((case-lambda
                       ((g$t$8262$bmrAn)
                        (if g$t$8262$bmrAn
                          g$t$8262$bmrAn
                          (begin
                            '#f
                            (if (vector? g$x$8259$bmrAn)
                              (if (> (vector-length g$x$8259$bmrAn) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$8259$bmrAn '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$8259$bmrAn)
                       (begin '#f (annotation? (car g$x$8259$bmrAn)))
                       '#f)))))
               (annotation? g$x$8259$bmrAn))
            (g$strip-annotations$7712$bmrAn g$x$8259$bmrAn)
            g$x$8259$bmrAn)
          ((letrec ((g$f$8263$bmrAn
                      (case-lambda
                        ((g$x$8264$bmrAn)
                         (if (g$stx?$7675$bmrAn g$x$8264$bmrAn)
                           (g$strip$7713$bmrAn
                             (g$stx-expr$7677$bmrAn g$x$8264$bmrAn)
                             (g$stx-mark*$7678$bmrAn g$x$8264$bmrAn))
                           (if (annotation? g$x$8264$bmrAn)
                             (annotation-stripped g$x$8264$bmrAn)
                             (if (pair? g$x$8264$bmrAn)
                               ((case-lambda
                                  ((g$a$8265$bmrAn g$d$8266$bmrAn)
                                   (if (if (eq? g$a$8265$bmrAn
                                                (car g$x$8264$bmrAn))
                                         (begin
                                           '#f
                                           (eq? g$d$8266$bmrAn
                                                (cdr g$x$8264$bmrAn)))
                                         '#f)
                                     g$x$8264$bmrAn
                                     (cons g$a$8265$bmrAn g$d$8266$bmrAn))))
                                (g$f$8263$bmrAn (car g$x$8264$bmrAn))
                                (g$f$8263$bmrAn (cdr g$x$8264$bmrAn)))
                               (if (vector? g$x$8264$bmrAn)
                                 ((case-lambda
                                    ((g$old$8267$bmrAn)
                                     ((case-lambda
                                        ((g$new$8268$bmrAn)
                                         (if (g$for-all$5061$bmrAn
                                               eq?
                                               g$old$8267$bmrAn
                                               g$new$8268$bmrAn)
                                           g$x$8264$bmrAn
                                           (list->vector g$new$8268$bmrAn))))
                                      (g$map$5063$bmrAn
                                        g$f$8263$bmrAn
                                        g$old$8267$bmrAn))))
                                  (vector->list g$x$8264$bmrAn))
                                 g$x$8264$bmrAn))))))))
             g$f$8263$bmrAn)
           g$x$8259$bmrAn)))))
   (g$stx->datum$7714$bmrAn
     g$stx->datum$11409$bmrAn
     (case-lambda
       ((g$x$8269$bmrAn) (g$strip$7713$bmrAn g$x$8269$bmrAn '()))))
   (g$same-marks*?$7715$bmrAn
     g$same-marks*?$11410$bmrAn
     (case-lambda
       ((g$mark*$8270$bmrAn g$mark**$8271$bmrAn g$si$8272$bmrAn)
        (if (null? g$si$8272$bmrAn)
          '#f
          (if (g$same-marks?$7705$bmrAn
                g$mark*$8270$bmrAn
                (vector-ref g$mark**$8271$bmrAn (car g$si$8272$bmrAn)))
            (car g$si$8272$bmrAn)
            (g$same-marks*?$7715$bmrAn
              g$mark*$8270$bmrAn
              g$mark**$8271$bmrAn
              (cdr g$si$8272$bmrAn)))))))
   (g$id->label$7716$bmrAn
     g$id->label$11411$bmrAn
     (case-lambda
       ((g$id$8273$bmrAn)
        ((case-lambda
           ((g$t$8274$bmrAn)
            (if g$t$8274$bmrAn
              g$t$8274$bmrAn
              (begin
                '#f
                ((case-lambda
                   ((g$t$8275$bmrAn)
                    (if g$t$8275$bmrAn
                      ((case-lambda
                         ((g$env$8276$bmrAn)
                          ((case-lambda
                             ((g$rib$8277$bmrAn)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7646$bmrAn
                                     g$id$8273$bmrAn
                                     g$rib$8277$bmrAn
                                     '#f)))
                                (case-lambda
                                  ((g$lab$8280$bmrAn g$_loc$8281$bmrAn)
                                   ((case-lambda
                                      ((g$_loc$8282$bmrAn g$lab$8283$bmrAn)
                                       (begin
                                         (g$extend-rib!$7666$bmrAn
                                           g$rib$8277$bmrAn
                                           g$id$8273$bmrAn
                                           g$lab$8283$bmrAn
                                           '#t)
                                         g$lab$8283$bmrAn)))
                                    g$_loc$8281$bmrAn
                                    g$lab$8280$bmrAn))))))
                           (g$interaction-env-rib$8059$bmrAn
                             g$env$8276$bmrAn))))
                       g$t$8275$bmrAn)
                      '#f)))
                 (g$top-level-context$8101$bmrAn))))))
         (g$id->real-label$7717$bmrAn g$id$8273$bmrAn)))))
   (g$id->real-label$7717$bmrAn
     g$id->real-label$11412$bmrAn
     (case-lambda
       ((g$id$8284$bmrAn)
        ((case-lambda
           ((g$sym$8285$bmrAn)
            ((letrec ((g$search$8286$bmrAn
                        (case-lambda
                          ((g$subst*$8287$bmrAn g$mark*$8288$bmrAn)
                           (if (null? g$subst*$8287$bmrAn)
                             '#f
                             (if (eq? (car g$subst*$8287$bmrAn) 'shift)
                               (g$search$8286$bmrAn
                                 (cdr g$subst*$8287$bmrAn)
                                 (cdr g$mark*$8288$bmrAn))
                               ((case-lambda
                                  ((g$rib$8289$bmrAn)
                                   ((case-lambda
                                      ((g$t$8290$bmrAn)
                                       (if g$t$8290$bmrAn
                                         ((case-lambda
                                            ((g$ht$8291$bmrAn)
                                             ((case-lambda
                                                ((g$si$8292$bmrAn)
                                                 ((case-lambda
                                                    ((g$i$8293$bmrAn)
                                                     (if g$i$8293$bmrAn
                                                       (vector-ref
                                                         (g$rib-label*$7655$bmrAn
                                                           g$rib$8289$bmrAn)
                                                         g$i$8293$bmrAn)
                                                       (g$search$8286$bmrAn
                                                         (cdr g$subst*$8287$bmrAn)
                                                         g$mark*$8288$bmrAn))))
                                                  (if g$si$8292$bmrAn
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$7715$bmrAn
                                                        g$mark*$8288$bmrAn
                                                        (g$rib-mark**$7654$bmrAn
                                                          g$rib$8289$bmrAn)
                                                        (reverse
                                                          g$si$8292$bmrAn)))
                                                    '#f))))
                                              (g$hashtable-ref$5541$bmrAn
                                                g$ht$8291$bmrAn
                                                g$sym$8285$bmrAn
                                                '#f))))
                                          g$t$8290$bmrAn)
                                         ((case-lambda
                                            ((g$t$8294$bmrAn)
                                             (if g$t$8294$bmrAn
                                               g$t$8294$bmrAn
                                               (begin
                                                 '#f
                                                 ((letrec ((g$f$8295$bmrAn
                                                             (case-lambda
                                                               ((g$sym*$8296$bmrAn
                                                                  g$mark**$8297$bmrAn
                                                                  g$label*$8298$bmrAn)
                                                                (if (null?
                                                                      g$sym*$8296$bmrAn)
                                                                  (g$search$8286$bmrAn
                                                                    (cdr g$subst*$8287$bmrAn)
                                                                    g$mark*$8288$bmrAn)
                                                                  (if (if (eq? (car g$sym*$8296$bmrAn)
                                                                               g$sym$8285$bmrAn)
                                                                        (begin
                                                                          '#f
                                                                          (g$same-marks?$7705$bmrAn
                                                                            (car g$mark**$8297$bmrAn)
                                                                            g$mark*$8288$bmrAn))
                                                                        '#f)
                                                                    (car g$label*$8298$bmrAn)
                                                                    (g$f$8295$bmrAn
                                                                      (cdr g$sym*$8296$bmrAn)
                                                                      (cdr g$mark**$8297$bmrAn)
                                                                      (cdr g$label*$8298$bmrAn))))))))
                                                    g$f$8295$bmrAn)
                                                  (g$rib-sym*$7653$bmrAn
                                                    g$rib$8289$bmrAn)
                                                  (g$rib-mark**$7654$bmrAn
                                                    g$rib$8289$bmrAn)
                                                  (g$rib-label*$7655$bmrAn
                                                    g$rib$8289$bmrAn))))))
                                          (g$find-label$7665$bmrAn
                                            g$rib$8289$bmrAn
                                            g$sym$8285$bmrAn
                                            g$mark*$8288$bmrAn)))))
                                    (g$rib-sealed/freq$7656$bmrAn
                                      g$rib$8289$bmrAn))))
                                (car g$subst*$8287$bmrAn))))))))
               g$search$8286$bmrAn)
             (g$stx-subst*$7679$bmrAn g$id$8284$bmrAn)
             (g$stx-mark*$7678$bmrAn g$id$8284$bmrAn))))
         (g$id->sym$7704$bmrAn g$id$8284$bmrAn)))))
   (g$label->binding$7718$bmrAn
     g$label->binding$11413$bmrAn
     (case-lambda
       ((g$x$8299$bmrAn g$r$8300$bmrAn)
        ((case-lambda
           ((g$t$8301$bmrAn)
            (if g$t$8301$bmrAn
              ((case-lambda
                 ((g$b$8302$bmrAn)
                  (if (if (pair? g$b$8302$bmrAn)
                        (begin '#f (eq? (car g$b$8302$bmrAn) '$core-rtd))
                        '#f)
                    (cons
                      '$rtd
                      (g$map$5063$bmrAn
                        g$bless$7944$bmrAn
                        (cdr g$b$8302$bmrAn)))
                    (if (if (pair? g$b$8302$bmrAn)
                          (begin '#f (eq? (car g$b$8302$bmrAn) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$8303$bmrAn g$loc$8304$bmrAn)
                          (cons '$rtd (symbol-value g$loc$8304$bmrAn))))
                       (g$cadr$5264$bmrAn g$b$8302$bmrAn)
                       (g$cddr$5266$bmrAn g$b$8302$bmrAn))
                      g$b$8302$bmrAn))))
               g$t$8301$bmrAn)
              ((case-lambda
                 ((g$t$8305$bmrAn)
                  (if g$t$8305$bmrAn
                    (cdr g$t$8305$bmrAn)
                    ((case-lambda
                       ((g$t$8306$bmrAn)
                        (if g$t$8306$bmrAn
                          ((case-lambda
                             ((g$env$8307$bmrAn)
                              ((case-lambda
                                 ((g$t$8308$bmrAn)
                                  (if g$t$8308$bmrAn
                                    ((case-lambda
                                       ((g$p$8309$bmrAn)
                                        (g$cons*$5065$bmrAn
                                          'lexical
                                          (cdr g$p$8309$bmrAn)
                                          '#f)))
                                     g$t$8308$bmrAn)
                                    '(displaced-lexical . #f))))
                               (g$assq$5051$bmrAn
                                 g$x$8299$bmrAn
                                 (g$interaction-env-locs$8061$bmrAn
                                   g$env$8307$bmrAn)))))
                           g$t$8306$bmrAn)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$8101$bmrAn)))))
               (g$assq$5051$bmrAn g$x$8299$bmrAn g$r$8300$bmrAn)))))
         (g$imported-label->binding$7512$bmrAn g$x$8299$bmrAn)))))
   (g$make-binding$7719$bmrAn g$make-binding$11414$bmrAn cons)
   (g$binding-type$7720$bmrAn g$binding-type$11415$bmrAn car)
   (g$binding-value$7721$bmrAn g$binding-value$11416$bmrAn cdr)
   (g$raise-unbound-error$7722$bmrAn
     g$raise-unbound-error$11417$bmrAn
     (case-lambda
       ((g$id$8310$bmrAn)
        (g$syntax-violation*$8092$bmrAn
          '#f
          '"unbound identifier"
          g$id$8310$bmrAn
          (g$make-undefined-violation$5887$bmrAn)))))
   (g$syntax-type$7723$bmrAn
     g$syntax-type$11418$bmrAn
     (case-lambda
       ((g$e$8311$bmrAn g$r$8312$bmrAn)
        (if (g$id?$7703$bmrAn g$e$8311$bmrAn)
          ((case-lambda
             ((g$id$8313$bmrAn)
              ((case-lambda
                 ((g$label$8314$bmrAn)
                  ((case-lambda
                     ((g$b$8315$bmrAn)
                      ((case-lambda
                         ((g$type$8316$bmrAn)
                          (begin
                            (if (not g$label$8314$bmrAn)
                              (g$raise-unbound-error$7722$bmrAn g$id$8313$bmrAn)
                              (void))
                            ((case-lambda
                               ((g$t$8317$bmrAn)
                                (if (g$memv$5056$bmrAn
                                      g$t$8317$bmrAn
                                      '(lexical
                                         core-prim
                                         macro
                                         macro!
                                         global
                                         local-macro
                                         local-macro!
                                         global-macro
                                         global-macro!
                                         displaced-lexical
                                         syntax
                                         import
                                         export
                                         $module
                                         $core-rtd
                                         library
                                         mutable))
                                  (values
                                    g$type$8316$bmrAn
                                    (g$binding-value$7721$bmrAn g$b$8315$bmrAn)
                                    g$id$8313$bmrAn)
                                  (values 'other '#f '#f))))
                             g$type$8316$bmrAn))))
                       (g$binding-type$7720$bmrAn g$b$8315$bmrAn))))
                   (g$label->binding$7718$bmrAn
                     g$label$8314$bmrAn
                     g$r$8312$bmrAn))))
               (g$id->label$7716$bmrAn g$id$8313$bmrAn))))
           g$e$8311$bmrAn)
          (if (g$syntax-pair?$7696$bmrAn g$e$8311$bmrAn)
            ((case-lambda
               ((g$id$8318$bmrAn)
                (if (g$id?$7703$bmrAn g$id$8318$bmrAn)
                  ((case-lambda
                     ((g$label$8319$bmrAn)
                      ((case-lambda
                         ((g$b$8320$bmrAn)
                          ((case-lambda
                             ((g$type$8321$bmrAn)
                              (begin
                                (if (not g$label$8319$bmrAn)
                                  (g$raise-unbound-error$7722$bmrAn
                                    g$id$8318$bmrAn)
                                  (void))
                                ((case-lambda
                                   ((g$t$8322$bmrAn)
                                    (if (g$memv$5056$bmrAn
                                          g$t$8322$bmrAn
                                          '(define define-syntax
                                             core-macro
                                             begin
                                             macro
                                             macro!
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             module
                                             library
                                             set!
                                             let-syntax
                                             letrec-syntax
                                             import
                                             export
                                             $core-rtd))
                                      (values
                                        g$type$8321$bmrAn
                                        (g$binding-value$7721$bmrAn
                                          g$b$8320$bmrAn)
                                        g$id$8318$bmrAn)
                                      (values 'call '#f '#f))))
                                 g$type$8321$bmrAn))))
                           (g$binding-type$7720$bmrAn g$b$8320$bmrAn))))
                       (g$label->binding$7718$bmrAn
                         g$label$8319$bmrAn
                         g$r$8312$bmrAn))))
                   (g$id->label$7716$bmrAn g$id$8318$bmrAn))
                  (values 'call '#f '#f))))
             (g$syntax-car$7700$bmrAn g$e$8311$bmrAn))
            ((case-lambda
               ((g$d$8323$bmrAn)
                (if (g$self-evaluating?$7711$bmrAn g$d$8323$bmrAn)
                  (values 'constant g$d$8323$bmrAn '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$7714$bmrAn g$e$8311$bmrAn)))))))
   (g$sanitize-binding$7731$bmrAn
     g$sanitize-binding$11419$bmrAn
     (case-lambda
       ((g$x$8324$bmrAn g$src$8325$bmrAn)
        (if (procedure? g$x$8324$bmrAn)
          (g$cons*$5065$bmrAn 'local-macro g$x$8324$bmrAn g$src$8325$bmrAn)
          (if (if (pair? g$x$8324$bmrAn)
                (if (eq? (car g$x$8324$bmrAn) 'macro!)
                  (begin '#f (procedure? (cdr g$x$8324$bmrAn)))
                  '#f)
                '#f)
            (g$cons*$5065$bmrAn
              'local-macro!
              (cdr g$x$8324$bmrAn)
              g$src$8325$bmrAn)
            (if (if (pair? g$x$8324$bmrAn)
                  (begin '#f (eq? (car g$x$8324$bmrAn) '$rtd))
                  '#f)
              g$x$8324$bmrAn
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$8324$bmrAn)))))))
   (g$make-variable-transformer$7732$bmrAn
     g$make-variable-transformer$11420$bmrAn
     (case-lambda
       ((g$x$8326$bmrAn)
        (if (procedure? g$x$8326$bmrAn)
          (cons 'macro! g$x$8326$bmrAn)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$8326$bmrAn)))))
   (g$variable-transformer?$7733$bmrAn
     g$variable-transformer?$11421$bmrAn
     (case-lambda
       ((g$x$8327$bmrAn)
        (if (pair? g$x$8327$bmrAn)
          (if (eq? (car g$x$8327$bmrAn) 'macro!)
            (begin '#f (procedure? (cdr g$x$8327$bmrAn)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$7734$bmrAn
     g$variable-transformer-procedure$11422$bmrAn
     (case-lambda
       ((g$x$8328$bmrAn)
        (if (g$variable-transformer?$7733$bmrAn g$x$8328$bmrAn)
          (cdr g$x$8328$bmrAn)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$8328$bmrAn)))))
   (g$make-eval-transformer$7735$bmrAn
     g$make-eval-transformer$11423$bmrAn
     (case-lambda
       ((g$x$8329$bmrAn)
        (g$sanitize-binding$7731$bmrAn
          (eval-core (g$expanded->core$7221$bmrAn g$x$8329$bmrAn))
          g$x$8329$bmrAn))))
   (g$parse-define$7921$bmrAn
     g$parse-define$11424$bmrAn
     (case-lambda
       ((g$x$8330$bmrAn)
        ((case-lambda
           ((g$t$8331$bmrAn)
            ((case-lambda
               ((g$ls/false$8332$bmrAn)
                (if (if g$ls/false$8332$bmrAn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8333$bmrAn
                               g$fmls$8334$bmrAn
                               g$b$8335$bmrAn
                               g$b*$8336$bmrAn)
                             (g$id?$7703$bmrAn g$id$8333$bmrAn)))
                          g$ls/false$8332$bmrAn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8337$bmrAn
                         g$fmls$8338$bmrAn
                         g$b$8339$bmrAn
                         g$b*$8340$bmrAn)
                       (begin
                         (g$verify-formals$8001$bmrAn
                           g$fmls$8338$bmrAn
                           g$x$8330$bmrAn)
                         (values
                           g$id$8337$bmrAn
                           (cons
                             'defun
                             (cons
                               g$fmls$8338$bmrAn
                               (cons g$b$8339$bmrAn g$b*$8340$bmrAn)))))))
                    g$ls/false$8332$bmrAn)
                  ((case-lambda
                     ((g$t$8341$bmrAn)
                      ((case-lambda
                         ((g$ls/false$8342$bmrAn)
                          (if (if g$ls/false$8342$bmrAn
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$8343$bmrAn g$val$8344$bmrAn)
                                       (g$id?$7703$bmrAn g$id$8343$bmrAn)))
                                    g$ls/false$8342$bmrAn))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$8345$bmrAn g$val$8346$bmrAn)
                                 (values
                                   g$id$8345$bmrAn
                                   (cons 'expr g$val$8346$bmrAn))))
                              g$ls/false$8342$bmrAn)
                            ((case-lambda
                               ((g$t$8347$bmrAn)
                                ((case-lambda
                                   ((g$ls/false$8348$bmrAn)
                                    (if (if g$ls/false$8348$bmrAn
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$8349$bmrAn)
                                                 (g$id?$7703$bmrAn
                                                   g$id$8349$bmrAn)))
                                              g$ls/false$8348$bmrAn))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$8350$bmrAn)
                                           (values
                                             g$id$8350$bmrAn
                                             (cons
                                               'expr
                                               (g$bless$7944$bmrAn '(void))))))
                                        g$ls/false$8348$bmrAn)
                                      (g$syntax-violation$8093$bmrAn
                                        '#f
                                        '"invalid syntax"
                                        g$t$8347$bmrAn))))
                                 (g$syntax-dispatch$7981$bmrAn
                                   g$t$8347$bmrAn
                                   '(_ any)))))
                             g$t$8341$bmrAn))))
                       (g$syntax-dispatch$7981$bmrAn
                         g$t$8341$bmrAn
                         '(_ any any)))))
                   g$t$8331$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn
               g$t$8331$bmrAn
               '(_ (any . any) any . each-any)))))
         g$x$8330$bmrAn))))
   (g$parse-define-syntax$7922$bmrAn
     g$parse-define-syntax$11425$bmrAn
     (case-lambda
       ((g$x$8351$bmrAn)
        ((case-lambda
           ((g$t$8352$bmrAn)
            ((case-lambda
               ((g$ls/false$8353$bmrAn)
                (if (if g$ls/false$8353$bmrAn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8354$bmrAn g$val$8355$bmrAn)
                             (g$id?$7703$bmrAn g$id$8354$bmrAn)))
                          g$ls/false$8353$bmrAn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8356$bmrAn g$val$8357$bmrAn)
                       (values g$id$8356$bmrAn g$val$8357$bmrAn)))
                    g$ls/false$8353$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8352$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$8352$bmrAn '(_ any any)))))
         g$x$8351$bmrAn))))
   (g$scheme-stx-hashtable$7923$bmrAn
     g$scheme-stx-hashtable$11426$bmrAn
     (g$make-eq-hashtable$5538$bmrAn))
   (g$scheme-stx$7924$bmrAn
     g$scheme-stx$11427$bmrAn
     (case-lambda
       ((g$sym$8358$bmrAn)
        ((case-lambda
           ((g$t$8359$bmrAn)
            (if g$t$8359$bmrAn
              g$t$8359$bmrAn
              (begin
                '#f
                ((case-lambda
                   ((g$subst$8360$bmrAn)
                    ((case-lambda
                       ((g$stx$8361$bmrAn)
                        ((case-lambda
                           ((g$stx$8362$bmrAn)
                            (begin
                              (g$hashtable-set!$5542$bmrAn
                                g$scheme-stx-hashtable$7923$bmrAn
                                g$sym$8358$bmrAn
                                g$stx$8362$bmrAn)
                              g$stx$8362$bmrAn)))
                         ((case-lambda
                            ((g$t$8363$bmrAn)
                             (if g$t$8363$bmrAn
                               ((case-lambda
                                  ((g$x$8364$bmrAn)
                                   ((case-lambda
                                      ((g$name$8365$bmrAn g$label$8366$bmrAn)
                                       (g$add-subst$7693$bmrAn
                                         (g$make-rib$7652$bmrAn
                                           (list g$name$8365$bmrAn)
                                           (list g$top-mark*$7640$bmrAn)
                                           (list g$label$8366$bmrAn)
                                           '#f
                                           '#f)
                                         g$stx$8361$bmrAn)))
                                    (car g$x$8364$bmrAn)
                                    (cdr g$x$8364$bmrAn))))
                                g$t$8363$bmrAn)
                               g$stx$8361$bmrAn)))
                          (g$assq$5051$bmrAn
                            g$sym$8358$bmrAn
                            g$subst$8360$bmrAn)))))
                     (g$make-stx$7676$bmrAn
                       g$sym$8358$bmrAn
                       g$top-mark*$7640$bmrAn
                       '()
                       '()))))
                 (g$library-subst$7470$bmrAn
                   (g$find-library-by-name$7506$bmrAn
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5541$bmrAn
           g$scheme-stx-hashtable$7923$bmrAn
           g$sym$8358$bmrAn
           '#f)))))
   (g$lexical-var$7925$bmrAn g$lexical-var$11428$bmrAn car)
   (g$lexical-mutable?$7926$bmrAn g$lexical-mutable?$11429$bmrAn cdr)
   (g$set-lexical-mutable!$7927$bmrAn
     g$set-lexical-mutable!$11430$bmrAn
     set-cdr!)
   (g$add-lexical$7928$bmrAn
     g$add-lexical$11431$bmrAn
     (case-lambda
       ((g$lab$8367$bmrAn g$lex$8368$bmrAn g$r$8369$bmrAn)
        (cons
          (g$cons*$5065$bmrAn g$lab$8367$bmrAn 'lexical g$lex$8368$bmrAn '#f)
          g$r$8369$bmrAn))))
   (g$add-lexicals$7929$bmrAn
     g$add-lexicals$11432$bmrAn
     (case-lambda
       ((g$lab*$8370$bmrAn g$lex*$8371$bmrAn g$r$8372$bmrAn)
        (if (null? g$lab*$8370$bmrAn)
          g$r$8372$bmrAn
          (g$add-lexicals$7929$bmrAn
            (cdr g$lab*$8370$bmrAn)
            (cdr g$lex*$8371$bmrAn)
            (g$add-lexical$7928$bmrAn
              (car g$lab*$8370$bmrAn)
              (car g$lex*$8371$bmrAn)
              g$r$8372$bmrAn))))))
   (g$letrec-helper$7930$bmrAn
     g$letrec-helper$11433$bmrAn
     (case-lambda
       ((g$e$8373$bmrAn g$r$8374$bmrAn g$mr$8375$bmrAn g$build$8376$bmrAn)
        ((case-lambda
           ((g$t$8377$bmrAn)
            ((case-lambda
               ((g$ls/false$8378$bmrAn)
                (if g$ls/false$8378$bmrAn
                  (apply
                    (case-lambda
                      ((g$lhs*$8379$bmrAn
                         g$rhs*$8380$bmrAn
                         g$b$8381$bmrAn
                         g$b*$8382$bmrAn)
                       (if (not (g$valid-bound-ids?$7708$bmrAn
                                  g$lhs*$8379$bmrAn))
                         (g$invalid-fmls-error$7946$bmrAn
                           g$e$8373$bmrAn
                           g$lhs*$8379$bmrAn)
                         ((case-lambda
                            ((g$lex*$8383$bmrAn g$lab*$8384$bmrAn)
                             ((case-lambda
                                ((g$rib$8385$bmrAn g$r$8386$bmrAn)
                                 ((case-lambda
                                    ((g$body$8387$bmrAn g$rhs*$8388$bmrAn)
                                     (g$build$8376$bmrAn
                                       '#f
                                       g$lex*$8383$bmrAn
                                       g$rhs*$8388$bmrAn
                                       g$body$8387$bmrAn)))
                                  (g$chi-internal$8010$bmrAn
                                    (g$add-subst$7693$bmrAn
                                      g$rib$8385$bmrAn
                                      (cons g$b$8381$bmrAn g$b*$8382$bmrAn))
                                    g$r$8386$bmrAn
                                    g$mr$8375$bmrAn)
                                  (g$chi-expr*$7997$bmrAn
                                    (g$map$5063$bmrAn
                                      (case-lambda
                                        ((g$x$8389$bmrAn)
                                         (g$add-subst$7693$bmrAn
                                           g$rib$8385$bmrAn
                                           g$x$8389$bmrAn)))
                                      g$rhs*$8380$bmrAn)
                                    g$r$8386$bmrAn
                                    g$mr$8375$bmrAn))))
                              (g$make-full-rib$7671$bmrAn
                                g$lhs*$8379$bmrAn
                                g$lab*$8384$bmrAn)
                              (g$add-lexicals$7929$bmrAn
                                g$lab*$8384$bmrAn
                                g$lex*$8383$bmrAn
                                g$r$8374$bmrAn))))
                          (g$map$5063$bmrAn
                            g$gen-lexical$7642$bmrAn
                            g$lhs*$8379$bmrAn)
                          (g$map$5063$bmrAn
                            g$gen-label$7644$bmrAn
                            g$lhs*$8379$bmrAn)))))
                    g$ls/false$8378$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8377$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn
               g$t$8377$bmrAn
               '(_ #(each (any any)) any . each-any)))))
         g$e$8373$bmrAn))))
   (g$letrec-transformer$7931$bmrAn
     g$letrec-transformer$11434$bmrAn
     (case-lambda
       ((g$e$8390$bmrAn g$r$8391$bmrAn g$mr$8392$bmrAn)
        (g$letrec-helper$7930$bmrAn
          g$e$8390$bmrAn
          g$r$8391$bmrAn
          g$mr$8392$bmrAn
          g$build-letrec$7634$bmrAn))))
   (g$letrec*-transformer$7932$bmrAn
     g$letrec*-transformer$11435$bmrAn
     (case-lambda
       ((g$e$8393$bmrAn g$r$8394$bmrAn g$mr$8395$bmrAn)
        (g$letrec-helper$7930$bmrAn
          g$e$8393$bmrAn
          g$r$8394$bmrAn
          g$mr$8395$bmrAn
          g$build-letrec*$7635$bmrAn))))
   (g$fluid-let-syntax-transformer$7933$bmrAn
     g$fluid-let-syntax-transformer$11436$bmrAn
     (case-lambda
       ((g$e$8396$bmrAn g$r$8397$bmrAn g$mr$8398$bmrAn)
        (letrec* ((g$lookup$8399$bmrAn
                    (case-lambda
                      ((g$x$8409$bmrAn)
                       ((case-lambda
                          ((g$t$8410$bmrAn)
                           (if g$t$8410$bmrAn
                             g$t$8410$bmrAn
                             (begin
                               '#f
                               (g$syntax-violation$8093$bmrAn
                                 '#f
                                 '"unbound identifier"
                                 g$e$8396$bmrAn
                                 g$x$8409$bmrAn)))))
                        (g$id->label$7716$bmrAn g$x$8409$bmrAn))))))
          ((case-lambda
             ((g$t$8400$bmrAn)
              ((case-lambda
                 ((g$ls/false$8401$bmrAn)
                  (if g$ls/false$8401$bmrAn
                    (apply
                      (case-lambda
                        ((g$lhs*$8402$bmrAn
                           g$rhs*$8403$bmrAn
                           g$b$8404$bmrAn
                           g$b*$8405$bmrAn)
                         (if (not (g$valid-bound-ids?$7708$bmrAn
                                    g$lhs*$8402$bmrAn))
                           (g$invalid-fmls-error$7946$bmrAn
                             g$e$8396$bmrAn
                             g$lhs*$8402$bmrAn)
                           ((case-lambda
                              ((g$lab*$8406$bmrAn g$rhs*$8407$bmrAn)
                               (g$chi-internal$8010$bmrAn
                                 (cons g$b$8404$bmrAn g$b*$8405$bmrAn)
                                 (append
                                   (g$map$5063$bmrAn
                                     cons
                                     g$lab*$8406$bmrAn
                                     g$rhs*$8407$bmrAn)
                                   g$r$8397$bmrAn)
                                 (append
                                   (g$map$5063$bmrAn
                                     cons
                                     g$lab*$8406$bmrAn
                                     g$rhs*$8407$bmrAn)
                                   g$mr$8398$bmrAn))))
                            (g$map$5063$bmrAn
                              g$lookup$8399$bmrAn
                              g$lhs*$8402$bmrAn)
                            (g$map$5063$bmrAn
                              (case-lambda
                                ((g$x$8408$bmrAn)
                                 (g$make-eval-transformer$7735$bmrAn
                                   (g$expand-transformer$8026$bmrAn
                                     g$x$8408$bmrAn
                                     g$mr$8398$bmrAn))))
                              g$rhs*$8403$bmrAn)))))
                      g$ls/false$8401$bmrAn)
                    (g$syntax-violation$8093$bmrAn
                      '#f
                      '"invalid syntax"
                      g$t$8400$bmrAn))))
               (g$syntax-dispatch$7981$bmrAn
                 g$t$8400$bmrAn
                 '(_ #(each (any any)) any . each-any)))))
           g$e$8396$bmrAn)))))
   (g$type-descriptor-transformer$7934$bmrAn
     g$type-descriptor-transformer$11437$bmrAn
     (case-lambda
       ((g$e$8411$bmrAn g$r$8412$bmrAn g$mr$8413$bmrAn)
        ((case-lambda
           ((g$t$8414$bmrAn)
            ((case-lambda
               ((g$ls/false$8415$bmrAn)
                (if (if g$ls/false$8415$bmrAn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8416$bmrAn)
                             (g$id?$7703$bmrAn g$id$8416$bmrAn)))
                          g$ls/false$8415$bmrAn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8417$bmrAn)
                       ((case-lambda
                          ((g$lab$8418$bmrAn)
                           ((case-lambda
                              ((g$b$8419$bmrAn)
                               ((case-lambda
                                  ((g$type$8420$bmrAn)
                                   (begin
                                     (if (not g$lab$8418$bmrAn)
                                       (g$raise-unbound-error$7722$bmrAn
                                         g$id$8417$bmrAn)
                                       (void))
                                     (if (not (if (eq? g$type$8420$bmrAn '$rtd)
                                                (begin
                                                  '#f
                                                  (not (list?
                                                         (g$binding-value$7721$bmrAn
                                                           g$b$8419$bmrAn))))
                                                '#f))
                                       (g$syntax-violation$8093$bmrAn
                                         '#f
                                         '"not a record type"
                                         g$e$8411$bmrAn)
                                       (void))
                                     (list
                                       'quote
                                       (g$binding-value$7721$bmrAn
                                         g$b$8419$bmrAn)))))
                                (g$binding-type$7720$bmrAn g$b$8419$bmrAn))))
                            (g$label->binding$7718$bmrAn
                              g$lab$8418$bmrAn
                              g$r$8412$bmrAn))))
                        (g$id->label$7716$bmrAn g$id$8417$bmrAn))))
                    g$ls/false$8415$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8414$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$8414$bmrAn '(_ any)))))
         g$e$8411$bmrAn))))
   (g$record-type-descriptor-transformer$7935$bmrAn
     g$record-type-descriptor-transformer$11438$bmrAn
     (case-lambda
       ((g$e$8421$bmrAn g$r$8422$bmrAn g$mr$8423$bmrAn)
        ((case-lambda
           ((g$t$8424$bmrAn)
            ((case-lambda
               ((g$ls/false$8425$bmrAn)
                (if (if g$ls/false$8425$bmrAn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8426$bmrAn)
                             (g$id?$7703$bmrAn g$id$8426$bmrAn)))
                          g$ls/false$8425$bmrAn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8427$bmrAn)
                       ((case-lambda
                          ((g$lab$8428$bmrAn)
                           ((case-lambda
                              ((g$b$8429$bmrAn)
                               ((case-lambda
                                  ((g$type$8430$bmrAn)
                                   (begin
                                     (if (not g$lab$8428$bmrAn)
                                       (g$raise-unbound-error$7722$bmrAn
                                         g$id$8427$bmrAn)
                                       (void))
                                     (if (not (if (eq? g$type$8430$bmrAn '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$7721$bmrAn
                                                      g$b$8429$bmrAn)))
                                                '#f))
                                       (g$syntax-violation$8093$bmrAn
                                         '#f
                                         '"not a record type"
                                         g$e$8421$bmrAn)
                                       (void))
                                     (g$chi-expr$7999$bmrAn
                                       (car (g$binding-value$7721$bmrAn
                                              g$b$8429$bmrAn))
                                       g$r$8422$bmrAn
                                       g$mr$8423$bmrAn))))
                                (g$binding-type$7720$bmrAn g$b$8429$bmrAn))))
                            (g$label->binding$7718$bmrAn
                              g$lab$8428$bmrAn
                              g$r$8422$bmrAn))))
                        (g$id->label$7716$bmrAn g$id$8427$bmrAn))))
                    g$ls/false$8425$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8424$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$8424$bmrAn '(_ any)))))
         g$e$8421$bmrAn))))
   (g$record-constructor-descriptor-transformer$7936$bmrAn
     g$record-constructor-descriptor-transformer$11439$bmrAn
     (case-lambda
       ((g$e$8431$bmrAn g$r$8432$bmrAn g$mr$8433$bmrAn)
        ((case-lambda
           ((g$t$8434$bmrAn)
            ((case-lambda
               ((g$ls/false$8435$bmrAn)
                (if (if g$ls/false$8435$bmrAn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8436$bmrAn)
                             (g$id?$7703$bmrAn g$id$8436$bmrAn)))
                          g$ls/false$8435$bmrAn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8437$bmrAn)
                       ((case-lambda
                          ((g$lab$8438$bmrAn)
                           ((case-lambda
                              ((g$b$8439$bmrAn)
                               ((case-lambda
                                  ((g$type$8440$bmrAn)
                                   (begin
                                     (if (not g$lab$8438$bmrAn)
                                       (g$raise-unbound-error$7722$bmrAn
                                         g$id$8437$bmrAn)
                                       (void))
                                     (if (not (if (eq? g$type$8440$bmrAn '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$7721$bmrAn
                                                      g$b$8439$bmrAn)))
                                                '#f))
                                       (g$syntax-violation$8093$bmrAn
                                         '#f
                                         '"invalid type"
                                         g$e$8431$bmrAn)
                                       (void))
                                     (g$chi-expr$7999$bmrAn
                                       (g$cadr$5264$bmrAn
                                         (g$binding-value$7721$bmrAn
                                           g$b$8439$bmrAn))
                                       g$r$8432$bmrAn
                                       g$mr$8433$bmrAn))))
                                (g$binding-type$7720$bmrAn g$b$8439$bmrAn))))
                            (g$label->binding$7718$bmrAn
                              g$lab$8438$bmrAn
                              g$r$8432$bmrAn))))
                        (g$id->label$7716$bmrAn g$id$8437$bmrAn))))
                    g$ls/false$8435$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8434$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$8434$bmrAn '(_ any)))))
         g$e$8431$bmrAn))))
   (g$when-macro$7937$bmrAn
     g$when-macro$11440$bmrAn
     (case-lambda
       ((g$e$8441$bmrAn)
        ((case-lambda
           ((g$t$8442$bmrAn)
            ((case-lambda
               ((g$ls/false$8443$bmrAn)
                (if g$ls/false$8443$bmrAn
                  (apply
                    (case-lambda
                      ((g$test$8444$bmrAn g$e$8445$bmrAn g$e*$8446$bmrAn)
                       (g$bless$7944$bmrAn
                         (list
                           'if
                           g$test$8444$bmrAn
                           (cons
                             'begin
                             (cons g$e$8445$bmrAn g$e*$8446$bmrAn))))))
                    g$ls/false$8443$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8442$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn
               g$t$8442$bmrAn
               '(_ any any . each-any)))))
         g$e$8441$bmrAn))))
   (g$unless-macro$7938$bmrAn
     g$unless-macro$11441$bmrAn
     (case-lambda
       ((g$e$8447$bmrAn)
        ((case-lambda
           ((g$t$8448$bmrAn)
            ((case-lambda
               ((g$ls/false$8449$bmrAn)
                (if g$ls/false$8449$bmrAn
                  (apply
                    (case-lambda
                      ((g$test$8450$bmrAn g$e$8451$bmrAn g$e*$8452$bmrAn)
                       (g$bless$7944$bmrAn
                         (list
                           'if
                           (list 'not g$test$8450$bmrAn)
                           (cons
                             'begin
                             (cons g$e$8451$bmrAn g$e*$8452$bmrAn))))))
                    g$ls/false$8449$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8448$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn
               g$t$8448$bmrAn
               '(_ any any . each-any)))))
         g$e$8447$bmrAn))))
   (g$if-transformer$7939$bmrAn
     g$if-transformer$11442$bmrAn
     (case-lambda
       ((g$e$8453$bmrAn g$r$8454$bmrAn g$mr$8455$bmrAn)
        ((case-lambda
           ((g$t$8456$bmrAn)
            ((case-lambda
               ((g$ls/false$8457$bmrAn)
                (if g$ls/false$8457$bmrAn
                  (apply
                    (case-lambda
                      ((g$e0$8458$bmrAn g$e1$8459$bmrAn g$e2$8460$bmrAn)
                       (list
                         'if
                         (g$chi-expr$7999$bmrAn
                           g$e0$8458$bmrAn
                           g$r$8454$bmrAn
                           g$mr$8455$bmrAn)
                         (g$chi-expr$7999$bmrAn
                           g$e1$8459$bmrAn
                           g$r$8454$bmrAn
                           g$mr$8455$bmrAn)
                         (g$chi-expr$7999$bmrAn
                           g$e2$8460$bmrAn
                           g$r$8454$bmrAn
                           g$mr$8455$bmrAn))))
                    g$ls/false$8457$bmrAn)
                  ((case-lambda
                     ((g$t$8461$bmrAn)
                      ((case-lambda
                         ((g$ls/false$8462$bmrAn)
                          (if g$ls/false$8462$bmrAn
                            (apply
                              (case-lambda
                                ((g$e0$8463$bmrAn g$e1$8464$bmrAn)
                                 (list
                                   'if
                                   (g$chi-expr$7999$bmrAn
                                     g$e0$8463$bmrAn
                                     g$r$8454$bmrAn
                                     g$mr$8455$bmrAn)
                                   (g$chi-expr$7999$bmrAn
                                     g$e1$8464$bmrAn
                                     g$r$8454$bmrAn
                                     g$mr$8455$bmrAn)
                                   (g$build-void$7633$bmrAn))))
                              g$ls/false$8462$bmrAn)
                            (g$syntax-violation$8093$bmrAn
                              '#f
                              '"invalid syntax"
                              g$t$8461$bmrAn))))
                       (g$syntax-dispatch$7981$bmrAn
                         g$t$8461$bmrAn
                         '(_ any any)))))
                   g$t$8456$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$8456$bmrAn '(_ any any any)))))
         g$e$8453$bmrAn))))
   (g$case-macro$7940$bmrAn
     g$case-macro$11443$bmrAn
     (case-lambda
       ((g$e$8465$bmrAn)
        (letrec* ((g$build-last$8466$bmrAn
                    (case-lambda
                      ((g$cls$8486$bmrAn)
                       ((case-lambda
                          ((g$t$8487$bmrAn)
                           ((case-lambda
                              ((g$ls/false$8488$bmrAn)
                               (if g$ls/false$8488$bmrAn
                                 (apply
                                   (case-lambda
                                     ((g$e$8489$bmrAn g$e*$8490$bmrAn)
                                      (cons
                                        'begin
                                        (cons g$e$8489$bmrAn g$e*$8490$bmrAn))))
                                   g$ls/false$8488$bmrAn)
                                 ((case-lambda
                                    ((g$t$8491$bmrAn)
                                     ((case-lambda
                                        ((g$ls/false$8492$bmrAn)
                                         (if g$ls/false$8492$bmrAn
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$8467$bmrAn
                                                  g$cls$8486$bmrAn
                                                  '(if #f #f))))
                                             g$ls/false$8492$bmrAn)
                                           (g$syntax-violation$8093$bmrAn
                                             '#f
                                             '"invalid syntax"
                                             g$t$8491$bmrAn))))
                                      (g$syntax-dispatch$7981$bmrAn
                                        g$t$8491$bmrAn
                                        '_))))
                                  g$t$8487$bmrAn))))
                            (g$syntax-dispatch$7981$bmrAn
                              g$t$8487$bmrAn
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$8486$bmrAn))))
                  (g$build-one$8467$bmrAn
                    (case-lambda
                      ((g$cls$8479$bmrAn g$k$8480$bmrAn)
                       ((case-lambda
                          ((g$t$8481$bmrAn)
                           ((case-lambda
                              ((g$ls/false$8482$bmrAn)
                               (if g$ls/false$8482$bmrAn
                                 (apply
                                   (case-lambda
                                     ((g$d*$8483$bmrAn
                                        g$e$8484$bmrAn
                                        g$e*$8485$bmrAn)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$8483$bmrAn))
                                        (cons
                                          'begin
                                          (cons g$e$8484$bmrAn g$e*$8485$bmrAn))
                                        g$k$8480$bmrAn)))
                                   g$ls/false$8482$bmrAn)
                                 (g$syntax-violation$8093$bmrAn
                                   '#f
                                   '"invalid syntax"
                                   g$t$8481$bmrAn))))
                            (g$syntax-dispatch$7981$bmrAn
                              g$t$8481$bmrAn
                              '(each-any any . each-any)))))
                        g$cls$8479$bmrAn)))))
          ((case-lambda
             ((g$t$8468$bmrAn)
              ((case-lambda
                 ((g$ls/false$8469$bmrAn)
                  (if g$ls/false$8469$bmrAn
                    (apply
                      (case-lambda
                        ((g$expr$8470$bmrAn)
                         (g$bless$7944$bmrAn
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$8470$bmrAn))
                               '((if #f #f)))))))
                      g$ls/false$8469$bmrAn)
                    ((case-lambda
                       ((g$t$8471$bmrAn)
                        ((case-lambda
                           ((g$ls/false$8472$bmrAn)
                            (if g$ls/false$8472$bmrAn
                              (apply
                                (case-lambda
                                  ((g$expr$8473$bmrAn
                                     g$cls$8474$bmrAn
                                     g$cls*$8475$bmrAn)
                                   (g$bless$7944$bmrAn
                                     (list
                                       'let
                                       (list (list 't g$expr$8473$bmrAn))
                                       ((letrec ((g$f$8476$bmrAn
                                                   (case-lambda
                                                     ((g$cls$8477$bmrAn
                                                        g$cls*$8478$bmrAn)
                                                      (if (null?
                                                            g$cls*$8478$bmrAn)
                                                        (g$build-last$8466$bmrAn
                                                          g$cls$8477$bmrAn)
                                                        (g$build-one$8467$bmrAn
                                                          g$cls$8477$bmrAn
                                                          (g$f$8476$bmrAn
                                                            (car g$cls*$8478$bmrAn)
                                                            (cdr g$cls*$8478$bmrAn))))))))
                                          g$f$8476$bmrAn)
                                        g$cls$8474$bmrAn
                                        g$cls*$8475$bmrAn)))))
                                g$ls/false$8472$bmrAn)
                              (g$syntax-violation$8093$bmrAn
                                '#f
                                '"invalid syntax"
                                g$t$8471$bmrAn))))
                         (g$syntax-dispatch$7981$bmrAn
                           g$t$8471$bmrAn
                           '(_ any any . each-any)))))
                     g$t$8468$bmrAn))))
               (g$syntax-dispatch$7981$bmrAn g$t$8468$bmrAn '(_ any)))))
           g$e$8465$bmrAn)))))
   (g$quote-transformer$7941$bmrAn
     g$quote-transformer$11444$bmrAn
     (case-lambda
       ((g$e$8493$bmrAn g$r$8494$bmrAn g$mr$8495$bmrAn)
        ((case-lambda
           ((g$t$8496$bmrAn)
            ((case-lambda
               ((g$ls/false$8497$bmrAn)
                (if g$ls/false$8497$bmrAn
                  (apply
                    (case-lambda
                      ((g$datum$8498$bmrAn)
                       (list
                         'quote
                         (g$stx->datum$7714$bmrAn g$datum$8498$bmrAn))))
                    g$ls/false$8497$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8496$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$8496$bmrAn '(_ any)))))
         g$e$8493$bmrAn))))
   (g$case-lambda-transformer$7942$bmrAn
     g$case-lambda-transformer$11445$bmrAn
     (case-lambda
       ((g$e$8499$bmrAn g$r$8500$bmrAn g$mr$8501$bmrAn)
        ((case-lambda
           ((g$t$8502$bmrAn)
            ((case-lambda
               ((g$ls/false$8503$bmrAn)
                (if g$ls/false$8503$bmrAn
                  (apply
                    (case-lambda
                      ((g$fmls*$8504$bmrAn g$b*$8505$bmrAn g$b**$8506$bmrAn)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$8003$bmrAn
                              g$e$8499$bmrAn
                              g$fmls*$8504$bmrAn
                              (g$map$5063$bmrAn
                                cons
                                g$b*$8505$bmrAn
                                g$b**$8506$bmrAn)
                              g$r$8500$bmrAn
                              g$mr$8501$bmrAn)))
                         (case-lambda
                           ((g$fmls*$8509$bmrAn g$body*$8510$bmrAn)
                            ((case-lambda
                               ((g$body*$8511$bmrAn g$fmls*$8512$bmrAn)
                                (g$build-case-lambda$7630$bmrAn
                                  '#f
                                  g$fmls*$8512$bmrAn
                                  g$body*$8511$bmrAn)))
                             g$body*$8510$bmrAn
                             g$fmls*$8509$bmrAn))))))
                    g$ls/false$8503$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8502$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn
               g$t$8502$bmrAn
               '(_ . #(each (any any . each-any)))))))
         g$e$8499$bmrAn))))
   (g$lambda-transformer$7943$bmrAn
     g$lambda-transformer$11446$bmrAn
     (case-lambda
       ((g$e$8513$bmrAn g$r$8514$bmrAn g$mr$8515$bmrAn)
        ((case-lambda
           ((g$t$8516$bmrAn)
            ((case-lambda
               ((g$ls/false$8517$bmrAn)
                (if g$ls/false$8517$bmrAn
                  (apply
                    (case-lambda
                      ((g$fmls$8518$bmrAn g$b$8519$bmrAn g$b*$8520$bmrAn)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$8002$bmrAn
                              g$e$8513$bmrAn
                              g$fmls$8518$bmrAn
                              (cons g$b$8519$bmrAn g$b*$8520$bmrAn)
                              g$r$8514$bmrAn
                              g$mr$8515$bmrAn)))
                         (case-lambda
                           ((g$fmls$8523$bmrAn g$body$8524$bmrAn)
                            ((case-lambda
                               ((g$body$8525$bmrAn g$fmls$8526$bmrAn)
                                (g$build-lambda$7629$bmrAn
                                  '#f
                                  g$fmls$8526$bmrAn
                                  g$body$8525$bmrAn)))
                             g$body$8524$bmrAn
                             g$fmls$8523$bmrAn))))))
                    g$ls/false$8517$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8516$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn
               g$t$8516$bmrAn
               '(_ any any . each-any)))))
         g$e$8513$bmrAn))))
   (g$bless$7944$bmrAn
     g$bless$11447$bmrAn
     (case-lambda
       ((g$x$8527$bmrAn)
        (g$mkstx$7691$bmrAn
          ((letrec ((g$f$8528$bmrAn
                      (case-lambda
                        ((g$x$8529$bmrAn)
                         (if (g$stx?$7675$bmrAn g$x$8529$bmrAn)
                           g$x$8529$bmrAn
                           (if (pair? g$x$8529$bmrAn)
                             (cons
                               (g$f$8528$bmrAn (car g$x$8529$bmrAn))
                               (g$f$8528$bmrAn (cdr g$x$8529$bmrAn)))
                             (if (symbol? g$x$8529$bmrAn)
                               (g$scheme-stx$7924$bmrAn g$x$8529$bmrAn)
                               (if (vector? g$x$8529$bmrAn)
                                 (vector-map g$f$8528$bmrAn g$x$8529$bmrAn)
                                 g$x$8529$bmrAn))))))))
             g$f$8528$bmrAn)
           g$x$8527$bmrAn)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7945$bmrAn
     g$with-syntax-macro$11448$bmrAn
     (case-lambda
       ((g$e$8530$bmrAn)
        ((case-lambda
           ((g$t$8531$bmrAn)
            ((case-lambda
               ((g$ls/false$8532$bmrAn)
                (if g$ls/false$8532$bmrAn
                  (apply
                    (case-lambda
                      ((g$pat*$8533$bmrAn
                         g$expr*$8534$bmrAn
                         g$b$8535$bmrAn
                         g$b*$8536$bmrAn)
                       ((case-lambda
                          ((g$idn*$8537$bmrAn)
                           (begin
                             (g$verify-formals$8001$bmrAn
                               (g$map$5063$bmrAn car g$idn*$8537$bmrAn)
                               g$e$8530$bmrAn)
                             ((case-lambda
                                ((g$t*$8538$bmrAn)
                                 (g$bless$7944$bmrAn
                                   (list
                                     'let
                                     (g$map$5063$bmrAn
                                       list
                                       g$t*$8538$bmrAn
                                       g$expr*$8534$bmrAn)
                                     ((letrec ((g$f$8539$bmrAn
                                                 (case-lambda
                                                   ((g$pat*$8540$bmrAn
                                                      g$t*$8541$bmrAn)
                                                    (if (null?
                                                          g$pat*$8540$bmrAn)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8535$bmrAn
                                                            g$b*$8536$bmrAn)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8541$bmrAn)
                                                        '()
                                                        (list
                                                          (car g$pat*$8540$bmrAn)
                                                          (g$f$8539$bmrAn
                                                            (cdr g$pat*$8540$bmrAn)
                                                            (cdr g$t*$8541$bmrAn)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8540$bmrAn))
                                                            (car g$t*$8541$bmrAn)))))))))
                                        g$f$8539$bmrAn)
                                      g$pat*$8533$bmrAn
                                      g$t*$8538$bmrAn)))))
                              (g$generate-temporaries$8083$bmrAn
                                g$expr*$8534$bmrAn)))))
                        ((letrec ((g$f$8542$bmrAn
                                    (case-lambda
                                      ((g$pat*$8543$bmrAn)
                                       (if (null? g$pat*$8543$bmrAn)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7980$bmrAn
                                                (car g$pat*$8543$bmrAn)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8546$bmrAn
                                                g$idn*$8547$bmrAn)
                                              ((case-lambda
                                                 ((g$idn*$8548$bmrAn
                                                    g$pat$8549$bmrAn)
                                                  (append
                                                    g$idn*$8548$bmrAn
                                                    (g$f$8542$bmrAn
                                                      (cdr g$pat*$8543$bmrAn)))))
                                               g$idn*$8547$bmrAn
                                               g$pat$8546$bmrAn)))))))))
                           g$f$8542$bmrAn)
                         g$pat*$8533$bmrAn))))
                    g$ls/false$8532$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8531$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn
               g$t$8531$bmrAn
               '(_ #(each (any any)) any . each-any)))))
         g$e$8530$bmrAn))))
   (g$invalid-fmls-error$7946$bmrAn
     g$invalid-fmls-error$11449$bmrAn
     (case-lambda
       ((g$stx$8550$bmrAn g$fmls$8551$bmrAn)
        ((case-lambda
           ((g$t$8552$bmrAn)
            ((case-lambda
               ((g$ls/false$8553$bmrAn)
                (if g$ls/false$8553$bmrAn
                  (apply
                    (case-lambda
                      ((g$id*$8554$bmrAn g$last$8555$bmrAn)
                       ((letrec ((g$f$8556$bmrAn
                                   (case-lambda
                                     ((g$id*$8557$bmrAn)
                                      (if (null? g$id*$8557$bmrAn)
                                        (values)
                                        (if (not (g$id?$7703$bmrAn
                                                   (car g$id*$8557$bmrAn)))
                                          (g$syntax-violation$8093$bmrAn
                                            '#f
                                            '"not an identifier"
                                            g$stx$8550$bmrAn
                                            (car g$id*$8557$bmrAn))
                                          (begin
                                            (g$f$8556$bmrAn
                                              (cdr g$id*$8557$bmrAn))
                                            (if (g$bound-id-member?$7710$bmrAn
                                                  (car g$id*$8557$bmrAn)
                                                  (cdr g$id*$8557$bmrAn))
                                              (g$syntax-violation$8093$bmrAn
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8550$bmrAn
                                                (car g$id*$8557$bmrAn))
                                              (void)))))))))
                          g$f$8556$bmrAn)
                        (if (g$id?$7703$bmrAn g$last$8555$bmrAn)
                          (cons g$last$8555$bmrAn g$id*$8554$bmrAn)
                          (if (g$syntax-null?$7698$bmrAn g$last$8555$bmrAn)
                            g$id*$8554$bmrAn
                            (g$syntax-violation$8093$bmrAn
                              '#f
                              '"not an identifier"
                              g$stx$8550$bmrAn
                              g$last$8555$bmrAn))))))
                    g$ls/false$8553$bmrAn)
                  ((case-lambda
                     ((g$t$8558$bmrAn)
                      ((case-lambda
                         ((g$ls/false$8559$bmrAn)
                          (if g$ls/false$8559$bmrAn
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$8093$bmrAn
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8550$bmrAn
                                   g$fmls$8551$bmrAn)))
                              g$ls/false$8559$bmrAn)
                            (g$syntax-violation$8093$bmrAn
                              '#f
                              '"invalid syntax"
                              g$t$8558$bmrAn))))
                       (g$syntax-dispatch$7981$bmrAn g$t$8558$bmrAn '_))))
                   g$t$8552$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn
               g$t$8552$bmrAn
               '#(each+ any () any)))))
         g$fmls$8551$bmrAn))))
   (g$let-macro$7947$bmrAn
     g$let-macro$11450$bmrAn
     (case-lambda
       ((g$stx$8560$bmrAn)
        ((case-lambda
           ((g$t$8561$bmrAn)
            ((case-lambda
               ((g$ls/false$8562$bmrAn)
                (if g$ls/false$8562$bmrAn
                  (apply
                    (case-lambda
                      ((g$lhs*$8563$bmrAn
                         g$rhs*$8564$bmrAn
                         g$b$8565$bmrAn
                         g$b*$8566$bmrAn)
                       (if (g$valid-bound-ids?$7708$bmrAn g$lhs*$8563$bmrAn)
                         (g$bless$7944$bmrAn
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8563$bmrAn
                                 (cons g$b$8565$bmrAn g$b*$8566$bmrAn)))
                             g$rhs*$8564$bmrAn))
                         (g$invalid-fmls-error$7946$bmrAn
                           g$stx$8560$bmrAn
                           g$lhs*$8563$bmrAn))))
                    g$ls/false$8562$bmrAn)
                  ((case-lambda
                     ((g$t$8567$bmrAn)
                      ((case-lambda
                         ((g$ls/false$8568$bmrAn)
                          (if (if g$ls/false$8568$bmrAn
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8569$bmrAn
                                         g$lhs*$8570$bmrAn
                                         g$rhs*$8571$bmrAn
                                         g$b$8572$bmrAn
                                         g$b*$8573$bmrAn)
                                       (g$id?$7703$bmrAn g$f$8569$bmrAn)))
                                    g$ls/false$8568$bmrAn))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8574$bmrAn
                                   g$lhs*$8575$bmrAn
                                   g$rhs*$8576$bmrAn
                                   g$b$8577$bmrAn
                                   g$b*$8578$bmrAn)
                                 (if (g$valid-bound-ids?$7708$bmrAn
                                       g$lhs*$8575$bmrAn)
                                   (g$bless$7944$bmrAn
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8574$bmrAn
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$8575$bmrAn
                                                 (cons
                                                   g$b$8577$bmrAn
                                                   g$b*$8578$bmrAn)))))
                                         g$f$8574$bmrAn)
                                       g$rhs*$8576$bmrAn))
                                   (g$invalid-fmls-error$7946$bmrAn
                                     g$stx$8560$bmrAn
                                     g$lhs*$8575$bmrAn))))
                              g$ls/false$8568$bmrAn)
                            (g$syntax-violation$8093$bmrAn
                              '#f
                              '"invalid syntax"
                              g$t$8567$bmrAn))))
                       (g$syntax-dispatch$7981$bmrAn
                         g$t$8567$bmrAn
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8561$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn
               g$t$8561$bmrAn
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8560$bmrAn))))
   (g$let-values-macro$7948$bmrAn
     g$let-values-macro$11451$bmrAn
     (case-lambda
       ((g$stx$8579$bmrAn)
        (letrec* ((g$rename$8580$bmrAn
                    (case-lambda
                      ((g$x$8631$bmrAn g$old*$8632$bmrAn g$new*$8633$bmrAn)
                       (begin
                         (if (not (g$id?$7703$bmrAn g$x$8631$bmrAn))
                           (g$syntax-violation$8093$bmrAn
                             '#f
                             '"not an indentifier"
                             g$stx$8579$bmrAn
                             g$x$8631$bmrAn)
                           (void))
                         (if (g$bound-id-member?$7710$bmrAn
                               g$x$8631$bmrAn
                               g$old*$8632$bmrAn)
                           (g$syntax-violation$8093$bmrAn
                             '#f
                             '"duplicate binding"
                             g$stx$8579$bmrAn
                             g$x$8631$bmrAn)
                           (void))
                         ((case-lambda
                            ((g$y$8634$bmrAn)
                             (values
                               g$y$8634$bmrAn
                               (cons g$x$8631$bmrAn g$old*$8632$bmrAn)
                               (cons g$y$8634$bmrAn g$new*$8633$bmrAn))))
                          (gensym
                            (g$syntax->datum$8096$bmrAn g$x$8631$bmrAn)))))))
                  (g$rename*$8581$bmrAn
                    (case-lambda
                      ((g$x*$8622$bmrAn g$old*$8623$bmrAn g$new*$8624$bmrAn)
                       (if (null? g$x*$8622$bmrAn)
                         (values '() g$old*$8623$bmrAn g$new*$8624$bmrAn)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$8580$bmrAn
                                (car g$x*$8622$bmrAn)
                                g$old*$8623$bmrAn
                                g$new*$8624$bmrAn)))
                           (case-lambda
                             ((g$x$8625$bmrAn
                                g$old*$8626$bmrAn
                                g$new*$8627$bmrAn)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$8581$bmrAn
                                     (cdr g$x*$8622$bmrAn)
                                     g$old*$8626$bmrAn
                                     g$new*$8627$bmrAn)))
                                (case-lambda
                                  ((g$x*$8628$bmrAn
                                     g$old*$8629$bmrAn
                                     g$new*$8630$bmrAn)
                                   (values
                                     (cons g$x$8625$bmrAn g$x*$8628$bmrAn)
                                     g$old*$8629$bmrAn
                                     g$new*$8630$bmrAn))))))))))))
          ((case-lambda
             ((g$t$8582$bmrAn)
              ((case-lambda
                 ((g$ls/false$8583$bmrAn)
                  (if g$ls/false$8583$bmrAn
                    (apply
                      (case-lambda
                        ((g$b$8584$bmrAn g$b*$8585$bmrAn)
                         (g$cons*$5065$bmrAn
                           (g$bless$7944$bmrAn 'let)
                           '()
                           g$b$8584$bmrAn
                           g$b*$8585$bmrAn)))
                      g$ls/false$8583$bmrAn)
                    ((case-lambda
                       ((g$t$8586$bmrAn)
                        ((case-lambda
                           ((g$ls/false$8587$bmrAn)
                            (if g$ls/false$8587$bmrAn
                              (apply
                                (case-lambda
                                  ((g$lhs*$8588$bmrAn
                                     g$rhs*$8589$bmrAn
                                     g$b$8590$bmrAn
                                     g$b*$8591$bmrAn)
                                   (g$bless$7944$bmrAn
                                     ((letrec ((g$f$8592$bmrAn
                                                 (case-lambda
                                                   ((g$lhs*$8593$bmrAn
                                                      g$rhs*$8594$bmrAn
                                                      g$old*$8595$bmrAn
                                                      g$new*$8596$bmrAn)
                                                    (if (null?
                                                          g$lhs*$8593$bmrAn)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$5063$bmrAn
                                                            list
                                                            g$old*$8595$bmrAn
                                                            g$new*$8596$bmrAn)
                                                          (cons
                                                            g$b$8590$bmrAn
                                                            g$b*$8591$bmrAn)))
                                                      ((case-lambda
                                                         ((g$t$8597$bmrAn)
                                                          ((case-lambda
                                                             ((g$ls/false$8598$bmrAn)
                                                              (if g$ls/false$8598$bmrAn
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8599$bmrAn)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$8581$bmrAn
                                                                            g$x*$8599$bmrAn
                                                                            g$old*$8595$bmrAn
                                                                            g$new*$8596$bmrAn)))
                                                                       (case-lambda
                                                                         ((g$y*$8603$bmrAn
                                                                            g$old*$8604$bmrAn
                                                                            g$new*$8605$bmrAn)
                                                                          ((case-lambda
                                                                             ((g$new*$8606$bmrAn
                                                                                g$old*$8607$bmrAn
                                                                                g$y*$8608$bmrAn)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$8594$bmrAn))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$8608$bmrAn
                                                                                  (g$f$8592$bmrAn
                                                                                    (cdr g$lhs*$8593$bmrAn)
                                                                                    (cdr g$rhs*$8594$bmrAn)
                                                                                    g$old*$8607$bmrAn
                                                                                    g$new*$8606$bmrAn)))))
                                                                           g$new*$8605$bmrAn
                                                                           g$old*$8604$bmrAn
                                                                           g$y*$8603$bmrAn))))))
                                                                  g$ls/false$8598$bmrAn)
                                                                ((case-lambda
                                                                   ((g$t$8609$bmrAn)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8610$bmrAn)
                                                                        (if g$ls/false$8610$bmrAn
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8611$bmrAn
                                                                                 g$x$8612$bmrAn)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$8580$bmrAn
                                                                                      g$x$8612$bmrAn
                                                                                      g$old*$8595$bmrAn
                                                                                      g$new*$8596$bmrAn)))
                                                                                 (case-lambda
                                                                                   ((g$y$8613$bmrAn
                                                                                      g$old*$8614$bmrAn
                                                                                      g$new*$8615$bmrAn)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$8581$bmrAn
                                                                                           g$x*$8611$bmrAn
                                                                                           g$old*$8614$bmrAn
                                                                                           g$new*$8615$bmrAn)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8616$bmrAn
                                                                                           g$old*$8617$bmrAn
                                                                                           g$new*$8618$bmrAn)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$8594$bmrAn))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8616$bmrAn
                                                                                               g$y$8613$bmrAn)
                                                                                             (g$f$8592$bmrAn
                                                                                               (cdr g$lhs*$8593$bmrAn)
                                                                                               (cdr g$rhs*$8594$bmrAn)
                                                                                               g$old*$8617$bmrAn
                                                                                               g$new*$8618$bmrAn)))))))))))
                                                                            g$ls/false$8610$bmrAn)
                                                                          ((case-lambda
                                                                             ((g$t$8619$bmrAn)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8620$bmrAn)
                                                                                  (if g$ls/false$8620$bmrAn
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8621$bmrAn)
                                                                                         (g$syntax-violation$8093$bmrAn
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8579$bmrAn
                                                                                           g$others$8621$bmrAn)))
                                                                                      g$ls/false$8620$bmrAn)
                                                                                    (g$syntax-violation$8093$bmrAn
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8619$bmrAn))))
                                                                               (g$syntax-dispatch$7981$bmrAn
                                                                                 g$t$8619$bmrAn
                                                                                 'any))))
                                                                           g$t$8609$bmrAn))))
                                                                     (g$syntax-dispatch$7981$bmrAn
                                                                       g$t$8609$bmrAn
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8597$bmrAn))))
                                                           (g$syntax-dispatch$7981$bmrAn
                                                             g$t$8597$bmrAn
                                                             'each-any))))
                                                       (car g$lhs*$8593$bmrAn)))))))
                                        g$f$8592$bmrAn)
                                      g$lhs*$8588$bmrAn
                                      g$rhs*$8589$bmrAn
                                      '()
                                      '()))))
                                g$ls/false$8587$bmrAn)
                              (g$syntax-violation$8093$bmrAn
                                '#f
                                '"invalid syntax"
                                g$t$8586$bmrAn))))
                         (g$syntax-dispatch$7981$bmrAn
                           g$t$8586$bmrAn
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8582$bmrAn))))
               (g$syntax-dispatch$7981$bmrAn
                 g$t$8582$bmrAn
                 '(_ () any . each-any)))))
           g$stx$8579$bmrAn)))))
   (g$let*-values-macro$7949$bmrAn
     g$let*-values-macro$11452$bmrAn
     (case-lambda
       ((g$stx$8635$bmrAn)
        (letrec* ((g$check$8636$bmrAn
                    (case-lambda
                      ((g$x*$8660$bmrAn)
                       (if (not (null? g$x*$8660$bmrAn))
                         ((case-lambda
                            ((g$x$8661$bmrAn)
                             (begin
                               (if (not (g$id?$7703$bmrAn g$x$8661$bmrAn))
                                 (g$syntax-violation$8093$bmrAn
                                   '#f
                                   '"not an identifier"
                                   g$stx$8635$bmrAn
                                   g$x$8661$bmrAn)
                                 (void))
                               (g$check$8636$bmrAn (cdr g$x*$8660$bmrAn))
                               (if (g$bound-id-member?$7710$bmrAn
                                     g$x$8661$bmrAn
                                     (cdr g$x*$8660$bmrAn))
                                 (g$syntax-violation$8093$bmrAn
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8635$bmrAn
                                   g$x$8661$bmrAn)
                                 (void)))))
                          (car g$x*$8660$bmrAn))
                         (void))))))
          ((case-lambda
             ((g$t$8637$bmrAn)
              ((case-lambda
                 ((g$ls/false$8638$bmrAn)
                  (if g$ls/false$8638$bmrAn
                    (apply
                      (case-lambda
                        ((g$b$8639$bmrAn g$b*$8640$bmrAn)
                         (g$cons*$5065$bmrAn
                           (g$bless$7944$bmrAn 'let)
                           '()
                           g$b$8639$bmrAn
                           g$b*$8640$bmrAn)))
                      g$ls/false$8638$bmrAn)
                    ((case-lambda
                       ((g$t$8641$bmrAn)
                        ((case-lambda
                           ((g$ls/false$8642$bmrAn)
                            (if g$ls/false$8642$bmrAn
                              (apply
                                (case-lambda
                                  ((g$lhs*$8643$bmrAn
                                     g$rhs*$8644$bmrAn
                                     g$b$8645$bmrAn
                                     g$b*$8646$bmrAn)
                                   (g$bless$7944$bmrAn
                                     ((letrec ((g$f$8647$bmrAn
                                                 (case-lambda
                                                   ((g$lhs*$8648$bmrAn
                                                      g$rhs*$8649$bmrAn)
                                                    (if (null?
                                                          g$lhs*$8648$bmrAn)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8645$bmrAn
                                                          g$b*$8646$bmrAn))
                                                      ((case-lambda
                                                         ((g$t$8650$bmrAn)
                                                          ((case-lambda
                                                             ((g$ls/false$8651$bmrAn)
                                                              (if g$ls/false$8651$bmrAn
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8652$bmrAn)
                                                                     (begin
                                                                       (g$check$8636$bmrAn
                                                                         g$x*$8652$bmrAn)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8649$bmrAn))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8652$bmrAn
                                                                           (g$f$8647$bmrAn
                                                                             (cdr g$lhs*$8648$bmrAn)
                                                                             (cdr g$rhs*$8649$bmrAn)))))))
                                                                  g$ls/false$8651$bmrAn)
                                                                ((case-lambda
                                                                   ((g$t$8653$bmrAn)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8654$bmrAn)
                                                                        (if g$ls/false$8654$bmrAn
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8655$bmrAn
                                                                                 g$x$8656$bmrAn)
                                                                               (begin
                                                                                 (g$check$8636$bmrAn
                                                                                   (cons
                                                                                     g$x$8656$bmrAn
                                                                                     g$x*$8655$bmrAn))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8649$bmrAn))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8655$bmrAn
                                                                                       g$x$8656$bmrAn)
                                                                                     (g$f$8647$bmrAn
                                                                                       (cdr g$lhs*$8648$bmrAn)
                                                                                       (cdr g$rhs*$8649$bmrAn)))))))
                                                                            g$ls/false$8654$bmrAn)
                                                                          ((case-lambda
                                                                             ((g$t$8657$bmrAn)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8658$bmrAn)
                                                                                  (if g$ls/false$8658$bmrAn
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8659$bmrAn)
                                                                                         (g$syntax-violation$8093$bmrAn
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8635$bmrAn
                                                                                           g$others$8659$bmrAn)))
                                                                                      g$ls/false$8658$bmrAn)
                                                                                    (g$syntax-violation$8093$bmrAn
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8657$bmrAn))))
                                                                               (g$syntax-dispatch$7981$bmrAn
                                                                                 g$t$8657$bmrAn
                                                                                 'any))))
                                                                           g$t$8653$bmrAn))))
                                                                     (g$syntax-dispatch$7981$bmrAn
                                                                       g$t$8653$bmrAn
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8650$bmrAn))))
                                                           (g$syntax-dispatch$7981$bmrAn
                                                             g$t$8650$bmrAn
                                                             'each-any))))
                                                       (car g$lhs*$8648$bmrAn)))))))
                                        g$f$8647$bmrAn)
                                      g$lhs*$8643$bmrAn
                                      g$rhs*$8644$bmrAn))))
                                g$ls/false$8642$bmrAn)
                              (g$syntax-violation$8093$bmrAn
                                '#f
                                '"invalid syntax"
                                g$t$8641$bmrAn))))
                         (g$syntax-dispatch$7981$bmrAn
                           g$t$8641$bmrAn
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8637$bmrAn))))
               (g$syntax-dispatch$7981$bmrAn
                 g$t$8637$bmrAn
                 '(_ () any . each-any)))))
           g$stx$8635$bmrAn)))))
   (g$trace-lambda-macro$7950$bmrAn
     g$trace-lambda-macro$11453$bmrAn
     (case-lambda
       ((g$stx$8662$bmrAn)
        ((case-lambda
           ((g$t$8663$bmrAn)
            ((case-lambda
               ((g$ls/false$8664$bmrAn)
                (if g$ls/false$8664$bmrAn
                  (apply
                    (case-lambda
                      ((g$who$8665$bmrAn
                         g$fmls$8666$bmrAn
                         g$b$8667$bmrAn
                         g$b*$8668$bmrAn)
                       (if (g$valid-bound-ids?$7708$bmrAn g$fmls$8666$bmrAn)
                         (g$bless$7944$bmrAn
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8665$bmrAn)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8666$bmrAn
                                 (cons g$b$8667$bmrAn g$b*$8668$bmrAn)))))
                         (g$invalid-fmls-error$7946$bmrAn
                           g$stx$8662$bmrAn
                           g$fmls$8666$bmrAn))))
                    g$ls/false$8664$bmrAn)
                  ((case-lambda
                     ((g$t$8669$bmrAn)
                      ((case-lambda
                         ((g$ls/false$8670$bmrAn)
                          (if g$ls/false$8670$bmrAn
                            (apply
                              (case-lambda
                                ((g$who$8671$bmrAn
                                   g$fmls$8672$bmrAn
                                   g$last$8673$bmrAn
                                   g$b$8674$bmrAn
                                   g$b*$8675$bmrAn)
                                 (if (g$valid-bound-ids?$7708$bmrAn
                                       (cons
                                         g$last$8673$bmrAn
                                         g$fmls$8672$bmrAn))
                                   (g$bless$7944$bmrAn
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8671$bmrAn)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8672$bmrAn
                                             g$last$8673$bmrAn)
                                           (cons
                                             g$b$8674$bmrAn
                                             g$b*$8675$bmrAn)))))
                                   (g$invalid-fmls-error$7946$bmrAn
                                     g$stx$8662$bmrAn
                                     (append
                                       g$fmls$8672$bmrAn
                                       g$last$8673$bmrAn)))))
                              g$ls/false$8670$bmrAn)
                            (g$syntax-violation$8093$bmrAn
                              '#f
                              '"invalid syntax"
                              g$t$8669$bmrAn))))
                       (g$syntax-dispatch$7981$bmrAn
                         g$t$8669$bmrAn
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8663$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn
               g$t$8663$bmrAn
               '(_ any each-any any . each-any)))))
         g$stx$8662$bmrAn))))
   (g$trace-define-macro$7951$bmrAn
     g$trace-define-macro$11454$bmrAn
     (case-lambda
       ((g$stx$8676$bmrAn)
        ((case-lambda
           ((g$t$8677$bmrAn)
            ((case-lambda
               ((g$ls/false$8678$bmrAn)
                (if g$ls/false$8678$bmrAn
                  (apply
                    (case-lambda
                      ((g$who$8679$bmrAn
                         g$fmls$8680$bmrAn
                         g$b$8681$bmrAn
                         g$b*$8682$bmrAn)
                       (if (g$valid-bound-ids?$7708$bmrAn g$fmls$8680$bmrAn)
                         (g$bless$7944$bmrAn
                           (list
                             'define
                             g$who$8679$bmrAn
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8679$bmrAn)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8680$bmrAn
                                   (cons g$b$8681$bmrAn g$b*$8682$bmrAn))))))
                         (g$invalid-fmls-error$7946$bmrAn
                           g$stx$8676$bmrAn
                           g$fmls$8680$bmrAn))))
                    g$ls/false$8678$bmrAn)
                  ((case-lambda
                     ((g$t$8683$bmrAn)
                      ((case-lambda
                         ((g$ls/false$8684$bmrAn)
                          (if g$ls/false$8684$bmrAn
                            (apply
                              (case-lambda
                                ((g$who$8685$bmrAn
                                   g$fmls$8686$bmrAn
                                   g$last$8687$bmrAn
                                   g$b$8688$bmrAn
                                   g$b*$8689$bmrAn)
                                 (if (g$valid-bound-ids?$7708$bmrAn
                                       (cons
                                         g$last$8687$bmrAn
                                         g$fmls$8686$bmrAn))
                                   (g$bless$7944$bmrAn
                                     (list
                                       'define
                                       g$who$8685$bmrAn
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8685$bmrAn)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8686$bmrAn
                                               g$last$8687$bmrAn)
                                             (cons
                                               g$b$8688$bmrAn
                                               g$b*$8689$bmrAn))))))
                                   (g$invalid-fmls-error$7946$bmrAn
                                     g$stx$8676$bmrAn
                                     (append
                                       g$fmls$8686$bmrAn
                                       g$last$8687$bmrAn)))))
                              g$ls/false$8684$bmrAn)
                            ((case-lambda
                               ((g$t$8690$bmrAn)
                                ((case-lambda
                                   ((g$ls/false$8691$bmrAn)
                                    (if g$ls/false$8691$bmrAn
                                      (apply
                                        (case-lambda
                                          ((g$who$8692$bmrAn g$expr$8693$bmrAn)
                                           (if (g$id?$7703$bmrAn
                                                 g$who$8692$bmrAn)
                                             (g$bless$7944$bmrAn
                                               (list
                                                 'define
                                                 g$who$8692$bmrAn
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8693$bmrAn))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8692$bmrAn)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$8093$bmrAn
                                               '#f
                                               '"invalid name"
                                               g$stx$8676$bmrAn))))
                                        g$ls/false$8691$bmrAn)
                                      (g$syntax-violation$8093$bmrAn
                                        '#f
                                        '"invalid syntax"
                                        g$t$8690$bmrAn))))
                                 (g$syntax-dispatch$7981$bmrAn
                                   g$t$8690$bmrAn
                                   '(_ any any)))))
                             g$t$8683$bmrAn))))
                       (g$syntax-dispatch$7981$bmrAn
                         g$t$8683$bmrAn
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8677$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn
               g$t$8677$bmrAn
               '(_ (any . each-any) any . each-any)))))
         g$stx$8676$bmrAn))))
   (g$trace-define-syntax-macro$7952$bmrAn
     g$trace-define-syntax-macro$11455$bmrAn
     (case-lambda
       ((g$stx$8694$bmrAn)
        ((case-lambda
           ((g$t$8695$bmrAn)
            ((case-lambda
               ((g$ls/false$8696$bmrAn)
                (if g$ls/false$8696$bmrAn
                  (apply
                    (case-lambda
                      ((g$who$8697$bmrAn g$expr$8698$bmrAn)
                       (if (g$id?$7703$bmrAn g$who$8697$bmrAn)
                         (g$bless$7944$bmrAn
                           (list
                             'define-syntax
                             g$who$8697$bmrAn
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8697$bmrAn)
                               g$expr$8698$bmrAn)))
                         (g$syntax-violation$8093$bmrAn
                           '#f
                           '"invalid name"
                           g$stx$8694$bmrAn))))
                    g$ls/false$8696$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8695$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$8695$bmrAn '(_ any any)))))
         g$stx$8694$bmrAn))))
   (g$trace-let/rec-syntax$7953$bmrAn
     g$trace-let/rec-syntax$11456$bmrAn
     (case-lambda
       ((g$who$8699$bmrAn)
        (case-lambda
          ((g$stx$8700$bmrAn)
           ((case-lambda
              ((g$t$8701$bmrAn)
               ((case-lambda
                  ((g$ls/false$8702$bmrAn)
                   (if g$ls/false$8702$bmrAn
                     (apply
                       (case-lambda
                         ((g$lhs*$8703$bmrAn
                            g$rhs*$8704$bmrAn
                            g$b$8705$bmrAn
                            g$b*$8706$bmrAn)
                          (if (g$valid-bound-ids?$7708$bmrAn g$lhs*$8703$bmrAn)
                            ((case-lambda
                               ((g$rhs*$8707$bmrAn)
                                (g$bless$7944$bmrAn
                                  (cons
                                    g$who$8699$bmrAn
                                    (cons
                                      (g$map$5063$bmrAn
                                        list
                                        g$lhs*$8703$bmrAn
                                        g$rhs*$8707$bmrAn)
                                      (cons g$b$8705$bmrAn g$b*$8706$bmrAn))))))
                             (g$map$5063$bmrAn
                               (case-lambda
                                 ((g$lhs$8708$bmrAn g$rhs$8709$bmrAn)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$8708$bmrAn)
                                    g$rhs$8709$bmrAn)))
                               g$lhs*$8703$bmrAn
                               g$rhs*$8704$bmrAn))
                            (g$invalid-fmls-error$7946$bmrAn
                              g$stx$8700$bmrAn
                              g$lhs*$8703$bmrAn))))
                       g$ls/false$8702$bmrAn)
                     (g$syntax-violation$8093$bmrAn
                       '#f
                       '"invalid syntax"
                       g$t$8701$bmrAn))))
                (g$syntax-dispatch$7981$bmrAn
                  g$t$8701$bmrAn
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8700$bmrAn))))))
   (g$trace-let-syntax-macro$7954$bmrAn
     g$trace-let-syntax-macro$11457$bmrAn
     (g$trace-let/rec-syntax$7953$bmrAn 'let-syntax))
   (g$trace-letrec-syntax-macro$7955$bmrAn
     g$trace-letrec-syntax-macro$11458$bmrAn
     (g$trace-let/rec-syntax$7953$bmrAn 'letrec-syntax))
   (g$guard-macro$7956$bmrAn
     g$guard-macro$11459$bmrAn
     (case-lambda
       ((g$x$8710$bmrAn)
        (letrec* ((g$gen-clauses$8711$bmrAn
                    (case-lambda
                      ((g$con$8723$bmrAn
                         g$outerk$8724$bmrAn
                         g$clause*$8725$bmrAn)
                       (letrec* ((g$f$8726$bmrAn
                                   (case-lambda
                                     ((g$x$8754$bmrAn g$k$8755$bmrAn)
                                      ((case-lambda
                                         ((g$t$8756$bmrAn)
                                          ((case-lambda
                                             ((g$ls/false$8757$bmrAn)
                                              (if g$ls/false$8757$bmrAn
                                                (apply
                                                  (case-lambda
                                                    ((g$e$8758$bmrAn
                                                       g$p$8759$bmrAn)
                                                     ((case-lambda
                                                        ((g$t$8760$bmrAn)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$8760$bmrAn
                                                               g$e$8758$bmrAn))
                                                           (list
                                                             'if
                                                             g$t$8760$bmrAn
                                                             (list
                                                               g$p$8759$bmrAn
                                                               g$t$8760$bmrAn)
                                                             g$k$8755$bmrAn))))
                                                      (gensym))))
                                                  g$ls/false$8757$bmrAn)
                                                ((case-lambda
                                                   ((g$t$8761$bmrAn)
                                                    ((case-lambda
                                                       ((g$ls/false$8762$bmrAn)
                                                        (if g$ls/false$8762$bmrAn
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8763$bmrAn)
                                                               ((case-lambda
                                                                  ((g$t$8764$bmrAn)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$8764$bmrAn
                                                                         g$e$8763$bmrAn))
                                                                     (list
                                                                       'if
                                                                       g$t$8764$bmrAn
                                                                       g$t$8764$bmrAn
                                                                       g$k$8755$bmrAn))))
                                                                (gensym))))
                                                            g$ls/false$8762$bmrAn)
                                                          ((case-lambda
                                                             ((g$t$8765$bmrAn)
                                                              ((case-lambda
                                                                 ((g$ls/false$8766$bmrAn)
                                                                  (if g$ls/false$8766$bmrAn
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$8767$bmrAn
                                                                           g$v$8768$bmrAn
                                                                           g$v*$8769$bmrAn)
                                                                         (list
                                                                           'if
                                                                           g$e$8767$bmrAn
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$8768$bmrAn
                                                                               g$v*$8769$bmrAn))
                                                                           g$k$8755$bmrAn)))
                                                                      g$ls/false$8766$bmrAn)
                                                                    ((case-lambda
                                                                       ((g$t$8770$bmrAn)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8771$bmrAn)
                                                                            (if g$ls/false$8771$bmrAn
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$8093$bmrAn
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$8754$bmrAn)))
                                                                                g$ls/false$8771$bmrAn)
                                                                              (g$syntax-violation$8093$bmrAn
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8770$bmrAn))))
                                                                         (g$syntax-dispatch$7981$bmrAn
                                                                           g$t$8770$bmrAn
                                                                           '_))))
                                                                     g$t$8765$bmrAn))))
                                                               (g$syntax-dispatch$7981$bmrAn
                                                                 g$t$8765$bmrAn
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$8761$bmrAn))))
                                                     (g$syntax-dispatch$7981$bmrAn
                                                       g$t$8761$bmrAn
                                                       '(any)))))
                                                 g$t$8756$bmrAn))))
                                           (g$syntax-dispatch$7981$bmrAn
                                             g$t$8756$bmrAn
                                             '(any #(scheme-id =>) any)))))
                                       g$x$8754$bmrAn))))
                                 (g$f*$8727$bmrAn
                                   (case-lambda
                                     ((g$x*$8734$bmrAn)
                                      ((case-lambda
                                         ((g$t$8735$bmrAn)
                                          ((case-lambda
                                             ((g$ls/false$8736$bmrAn)
                                              (if g$ls/false$8736$bmrAn
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$8723$bmrAn)
                                                       '#t)))
                                                  g$ls/false$8736$bmrAn)
                                                ((case-lambda
                                                   ((g$t$8737$bmrAn)
                                                    ((case-lambda
                                                       ((g$ls/false$8738$bmrAn)
                                                        (if g$ls/false$8738$bmrAn
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8739$bmrAn
                                                                 g$e*$8740$bmrAn)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$8739$bmrAn
                                                                     g$e*$8740$bmrAn))
                                                                 '#f)))
                                                            g$ls/false$8738$bmrAn)
                                                          ((case-lambda
                                                             ((g$t$8741$bmrAn)
                                                              ((case-lambda
                                                                 ((g$ls/false$8742$bmrAn)
                                                                  (if g$ls/false$8742$bmrAn
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$8743$bmrAn
                                                                           g$cls*$8744$bmrAn)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$8727$bmrAn
                                                                                g$cls*$8744$bmrAn)))
                                                                           (case-lambda
                                                                             ((g$e$8747$bmrAn
                                                                                g$g$8748$bmrAn)
                                                                              ((case-lambda
                                                                                 ((g$g$8749$bmrAn
                                                                                    g$e$8750$bmrAn)
                                                                                  (values
                                                                                    (g$f$8726$bmrAn
                                                                                      g$cls$8743$bmrAn
                                                                                      g$e$8750$bmrAn)
                                                                                    g$g$8749$bmrAn)))
                                                                               g$g$8748$bmrAn
                                                                               g$e$8747$bmrAn))))))
                                                                      g$ls/false$8742$bmrAn)
                                                                    ((case-lambda
                                                                       ((g$t$8751$bmrAn)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8752$bmrAn)
                                                                            (if g$ls/false$8752$bmrAn
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$8753$bmrAn)
                                                                                   (g$syntax-violation$8093$bmrAn
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$8753$bmrAn)))
                                                                                g$ls/false$8752$bmrAn)
                                                                              (g$syntax-violation$8093$bmrAn
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8751$bmrAn))))
                                                                         (g$syntax-dispatch$7981$bmrAn
                                                                           g$t$8751$bmrAn
                                                                           'any))))
                                                                     g$t$8741$bmrAn))))
                                                               (g$syntax-dispatch$7981$bmrAn
                                                                 g$t$8741$bmrAn
                                                                 '(any .
                                                                       any)))))
                                                           g$t$8737$bmrAn))))
                                                     (g$syntax-dispatch$7981$bmrAn
                                                       g$t$8737$bmrAn
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$8735$bmrAn))))
                                           (g$syntax-dispatch$7981$bmrAn
                                             g$t$8735$bmrAn
                                             '()))))
                                       g$x*$8734$bmrAn)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$8727$bmrAn g$clause*$8725$bmrAn)))
                           (case-lambda
                             ((g$code$8730$bmrAn g$raisek$8731$bmrAn)
                              ((case-lambda
                                 ((g$raisek$8732$bmrAn g$code$8733$bmrAn)
                                  (if g$raisek$8732$bmrAn
                                    (list g$outerk$8724$bmrAn g$code$8733$bmrAn)
                                    g$code$8733$bmrAn)))
                               g$raisek$8731$bmrAn
                               g$code$8730$bmrAn)))))))))
          ((case-lambda
             ((g$t$8712$bmrAn)
              ((case-lambda
                 ((g$ls/false$8713$bmrAn)
                  (if (if g$ls/false$8713$bmrAn
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$8714$bmrAn
                                 g$clause*$8715$bmrAn
                                 g$b$8716$bmrAn
                                 g$b*$8717$bmrAn)
                               (g$id?$7703$bmrAn g$con$8714$bmrAn)))
                            g$ls/false$8713$bmrAn))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$8718$bmrAn
                           g$clause*$8719$bmrAn
                           g$b$8720$bmrAn
                           g$b*$8721$bmrAn)
                         ((case-lambda
                            ((g$outerk$8722$bmrAn)
                             (g$bless$7944$bmrAn
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$8722$bmrAn)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$8718$bmrAn)
                                           (g$gen-clauses$8711$bmrAn
                                             g$con$8718$bmrAn
                                             g$outerk$8722$bmrAn
                                             g$clause*$8719$bmrAn))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$8720$bmrAn
                                                 g$b*$8721$bmrAn))))))))))))
                          (gensym))))
                      g$ls/false$8713$bmrAn)
                    (g$syntax-violation$8093$bmrAn
                      '#f
                      '"invalid syntax"
                      g$t$8712$bmrAn))))
               (g$syntax-dispatch$7981$bmrAn
                 g$t$8712$bmrAn
                 '(_ (any . each-any) any . each-any)))))
           g$x$8710$bmrAn)))))
   (g$define-enumeration-macro$7957$bmrAn
     g$define-enumeration-macro$11460$bmrAn
     (case-lambda
       ((g$stx$8772$bmrAn)
        (letrec* ((g$set?$8773$bmrAn
                    (case-lambda
                      ((g$x$8786$bmrAn)
                       ((case-lambda
                          ((g$t$8787$bmrAn)
                           (if g$t$8787$bmrAn
                             g$t$8787$bmrAn
                             (begin
                               '#f
                               (if (not (g$memq$5055$bmrAn
                                          (car g$x$8786$bmrAn)
                                          (cdr g$x$8786$bmrAn)))
                                 (begin
                                   '#f
                                   (g$set?$8773$bmrAn (cdr g$x$8786$bmrAn)))
                                 '#f)))))
                        (null? g$x$8786$bmrAn)))))
                  (g$remove-dups$8774$bmrAn
                    (case-lambda
                      ((g$ls$8785$bmrAn)
                       (if (null? g$ls$8785$bmrAn)
                         '()
                         (cons
                           (car g$ls$8785$bmrAn)
                           (g$remove-dups$8774$bmrAn
                             (g$remq$5070$bmrAn
                               (car g$ls$8785$bmrAn)
                               (cdr g$ls$8785$bmrAn)))))))))
          ((case-lambda
             ((g$t$8775$bmrAn)
              ((case-lambda
                 ((g$ls/false$8776$bmrAn)
                  (if (if g$ls/false$8776$bmrAn
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8777$bmrAn
                                 g$id*$8778$bmrAn
                                 g$maker$8779$bmrAn)
                               (if (g$id?$7703$bmrAn g$name$8777$bmrAn)
                                 (if (g$id?$7703$bmrAn g$maker$8779$bmrAn)
                                   (begin
                                     '#f
                                     (g$for-all$5061$bmrAn
                                       g$id?$7703$bmrAn
                                       g$id*$8778$bmrAn))
                                   '#f)
                                 '#f)))
                            g$ls/false$8776$bmrAn))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8780$bmrAn g$id*$8781$bmrAn g$maker$8782$bmrAn)
                         ((case-lambda
                            ((g$name*$8783$bmrAn g$mk$8784$bmrAn)
                             (g$bless$7944$bmrAn
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8784$bmrAn
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8783$bmrAn))))
                                 (list
                                   'define-syntax
                                   g$name$8780$bmrAn
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8783$bmrAn))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8780$bmrAn)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8782$bmrAn
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8782$bmrAn)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8783$bmrAn))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8782$bmrAn)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8784$bmrAn
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8774$bmrAn
                            (g$syntax->datum$8096$bmrAn g$id*$8781$bmrAn))
                          (gensym))))
                      g$ls/false$8776$bmrAn)
                    (g$syntax-violation$8093$bmrAn
                      '#f
                      '"invalid syntax"
                      g$t$8775$bmrAn))))
               (g$syntax-dispatch$7981$bmrAn
                 g$t$8775$bmrAn
                 '(_ any each-any any)))))
           g$stx$8772$bmrAn)))))
   (g$time-macro$7958$bmrAn
     g$time-macro$11461$bmrAn
     (case-lambda
       ((g$stx$8788$bmrAn)
        ((case-lambda
           ((g$t$8789$bmrAn)
            ((case-lambda
               ((g$ls/false$8790$bmrAn)
                (if g$ls/false$8790$bmrAn
                  (apply
                    (case-lambda
                      ((g$expr$8791$bmrAn)
                       ((case-lambda
                          ((g$str$8792$bmrAn)
                           (g$bless$7944$bmrAn
                             (list
                               'time-it
                               g$str$8792$bmrAn
                               (list 'lambda '() g$expr$8791$bmrAn)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6336$bmrAn)))
                          (case-lambda
                            ((g$p$8795$bmrAn g$e$8796$bmrAn)
                             ((case-lambda
                                ((g$e$8797$bmrAn g$p$8798$bmrAn)
                                 (begin
                                   (write
                                     (g$syntax->datum$8096$bmrAn
                                       g$expr$8791$bmrAn)
                                     g$p$8798$bmrAn)
                                   (g$e$8797$bmrAn))))
                              g$e$8796$bmrAn
                              g$p$8795$bmrAn)))))))
                    g$ls/false$8790$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8789$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$8789$bmrAn '(_ any)))))
         g$stx$8788$bmrAn))))
   (g$delay-macro$7959$bmrAn
     g$delay-macro$11462$bmrAn
     (case-lambda
       ((g$stx$8799$bmrAn)
        ((case-lambda
           ((g$t$8800$bmrAn)
            ((case-lambda
               ((g$ls/false$8801$bmrAn)
                (if g$ls/false$8801$bmrAn
                  (apply
                    (case-lambda
                      ((g$expr$8802$bmrAn)
                       (g$bless$7944$bmrAn
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8802$bmrAn)))))
                    g$ls/false$8801$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8800$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$8800$bmrAn '(_ any)))))
         g$stx$8799$bmrAn))))
   (g$assert-macro$7960$bmrAn
     g$assert-macro$11463$bmrAn
     (case-lambda
       ((g$stx$8803$bmrAn)
        ((case-lambda
           ((g$t$8804$bmrAn)
            ((case-lambda
               ((g$ls/false$8805$bmrAn)
                (if g$ls/false$8805$bmrAn
                  (apply
                    (case-lambda
                      ((g$expr$8806$bmrAn)
                       ((case-lambda
                          ((g$pos$8807$bmrAn)
                           (g$bless$7944$bmrAn
                             (list
                               'unless
                               g$expr$8806$bmrAn
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$8806$bmrAn)
                                 (list 'quote g$pos$8807$bmrAn))))))
                        ((case-lambda
                           ((g$t$8808$bmrAn)
                            (if g$t$8808$bmrAn
                              g$t$8808$bmrAn
                              (begin
                                '#f
                                (g$expression-position$8088$bmrAn
                                  g$expr$8806$bmrAn)))))
                         (g$expression-position$8088$bmrAn g$stx$8803$bmrAn)))))
                    g$ls/false$8805$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8804$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$8804$bmrAn '(_ any)))))
         g$stx$8803$bmrAn))))
   (g$endianness-macro$7961$bmrAn
     g$endianness-macro$11464$bmrAn
     (case-lambda
       ((g$stx$8809$bmrAn)
        ((case-lambda
           ((g$t$8810$bmrAn)
            ((case-lambda
               ((g$ls/false$8811$bmrAn)
                (if g$ls/false$8811$bmrAn
                  (apply
                    (case-lambda
                      ((g$e$8812$bmrAn)
                       ((case-lambda
                          ((g$t$8813$bmrAn)
                           (if (g$memv$5056$bmrAn g$t$8813$bmrAn '(little))
                             (g$bless$7944$bmrAn ''little)
                             (if (g$memv$5056$bmrAn g$t$8813$bmrAn '(big))
                               (g$bless$7944$bmrAn ''big)
                               (g$syntax-violation$8093$bmrAn
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8809$bmrAn)))))
                        (g$syntax->datum$8096$bmrAn g$e$8812$bmrAn))))
                    g$ls/false$8811$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8810$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$8810$bmrAn '(_ any)))))
         g$stx$8809$bmrAn))))
   (g$identifier-syntax-macro$7962$bmrAn
     g$identifier-syntax-macro$11465$bmrAn
     (case-lambda
       ((g$stx$8814$bmrAn)
        ((case-lambda
           ((g$t$8815$bmrAn)
            ((case-lambda
               ((g$ls/false$8816$bmrAn)
                (if g$ls/false$8816$bmrAn
                  (apply
                    (case-lambda
                      ((g$expr$8817$bmrAn)
                       (g$bless$7944$bmrAn
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8817$bmrAn))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8817$bmrAn)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8816$bmrAn)
                  ((case-lambda
                     ((g$t$8818$bmrAn)
                      ((case-lambda
                         ((g$ls/false$8819$bmrAn)
                          (if (if g$ls/false$8819$bmrAn
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8820$bmrAn
                                         g$expr1$8821$bmrAn
                                         g$id2$8822$bmrAn
                                         g$expr2$8823$bmrAn
                                         g$expr3$8824$bmrAn)
                                       (if (g$id?$7703$bmrAn g$id1$8820$bmrAn)
                                         (if (g$id?$7703$bmrAn g$id2$8822$bmrAn)
                                           (begin
                                             '#f
                                             (g$id?$7703$bmrAn
                                               g$expr2$8823$bmrAn))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8819$bmrAn))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8825$bmrAn
                                   g$expr1$8826$bmrAn
                                   g$id2$8827$bmrAn
                                   g$expr2$8828$bmrAn
                                   g$expr3$8829$bmrAn)
                                 (g$bless$7944$bmrAn
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8826$bmrAn))
                                         (list
                                           (list 'set! 'id g$expr2$8828$bmrAn)
                                           (list 'syntax g$expr3$8829$bmrAn))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8826$bmrAn
                                               '(e* ...))))))))))
                              g$ls/false$8819$bmrAn)
                            (g$syntax-violation$8093$bmrAn
                              '#f
                              '"invalid syntax"
                              g$t$8818$bmrAn))))
                       (g$syntax-dispatch$7981$bmrAn
                         g$t$8818$bmrAn
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8815$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$8815$bmrAn '(_ any)))))
         g$stx$8814$bmrAn))))
   (g$do-macro$7963$bmrAn
     g$do-macro$11466$bmrAn
     (case-lambda
       ((g$stx$8830$bmrAn)
        (letrec* ((g$bind$8831$bmrAn
                    (case-lambda
                      ((g$x$8843$bmrAn)
                       ((case-lambda
                          ((g$t$8844$bmrAn)
                           ((case-lambda
                              ((g$ls/false$8845$bmrAn)
                               (if g$ls/false$8845$bmrAn
                                 (apply
                                   (case-lambda
                                     ((g$x$8846$bmrAn g$init$8847$bmrAn)
                                      (list
                                        g$x$8846$bmrAn
                                        g$init$8847$bmrAn
                                        g$x$8846$bmrAn)))
                                   g$ls/false$8845$bmrAn)
                                 ((case-lambda
                                    ((g$t$8848$bmrAn)
                                     ((case-lambda
                                        ((g$ls/false$8849$bmrAn)
                                         (if g$ls/false$8849$bmrAn
                                           (apply
                                             (case-lambda
                                               ((g$x$8850$bmrAn
                                                  g$init$8851$bmrAn
                                                  g$step$8852$bmrAn)
                                                (list
                                                  g$x$8850$bmrAn
                                                  g$init$8851$bmrAn
                                                  g$step$8852$bmrAn)))
                                             g$ls/false$8849$bmrAn)
                                           ((case-lambda
                                              ((g$t$8853$bmrAn)
                                               ((case-lambda
                                                  ((g$ls/false$8854$bmrAn)
                                                   (if g$ls/false$8854$bmrAn
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$8093$bmrAn
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8830$bmrAn)))
                                                       g$ls/false$8854$bmrAn)
                                                     (g$syntax-violation$8093$bmrAn
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8853$bmrAn))))
                                                (g$syntax-dispatch$7981$bmrAn
                                                  g$t$8853$bmrAn
                                                  '_))))
                                            g$t$8848$bmrAn))))
                                      (g$syntax-dispatch$7981$bmrAn
                                        g$t$8848$bmrAn
                                        '(any any any)))))
                                  g$t$8844$bmrAn))))
                            (g$syntax-dispatch$7981$bmrAn
                              g$t$8844$bmrAn
                              '(any any)))))
                        g$x$8843$bmrAn)))))
          ((case-lambda
             ((g$t$8832$bmrAn)
              ((case-lambda
                 ((g$ls/false$8833$bmrAn)
                  (if g$ls/false$8833$bmrAn
                    (apply
                      (case-lambda
                        ((g$binding*$8834$bmrAn
                           g$test$8835$bmrAn
                           g$expr*$8836$bmrAn
                           g$command*$8837$bmrAn)
                         ((case-lambda
                            ((g$t$8838$bmrAn)
                             ((case-lambda
                                ((g$ls/false$8839$bmrAn)
                                 (if g$ls/false$8839$bmrAn
                                   (apply
                                     (case-lambda
                                       ((g$x*$8840$bmrAn
                                          g$init*$8841$bmrAn
                                          g$step*$8842$bmrAn)
                                        (if (g$valid-bound-ids?$7708$bmrAn
                                              g$x*$8840$bmrAn)
                                          (g$bless$7944$bmrAn
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8840$bmrAn
                                                    (list
                                                      'if
                                                      g$test$8835$bmrAn
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8836$bmrAn))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8837$bmrAn
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8842$bmrAn))))))))
                                              (cons 'loop g$init*$8841$bmrAn)))
                                          (g$syntax-violation$8093$bmrAn
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8830$bmrAn))))
                                     g$ls/false$8839$bmrAn)
                                   (g$syntax-violation$8093$bmrAn
                                     '#f
                                     '"invalid syntax"
                                     g$t$8838$bmrAn))))
                              (g$syntax-dispatch$7981$bmrAn
                                g$t$8838$bmrAn
                                '#(each (any any any))))))
                          (g$map$5063$bmrAn
                            g$bind$8831$bmrAn
                            g$binding*$8834$bmrAn))))
                      g$ls/false$8833$bmrAn)
                    (g$syntax-violation$8093$bmrAn
                      '#f
                      '"invalid syntax"
                      g$t$8832$bmrAn))))
               (g$syntax-dispatch$7981$bmrAn
                 g$t$8832$bmrAn
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8830$bmrAn)))))
   (g$let*-macro$7964$bmrAn
     g$let*-macro$11467$bmrAn
     (case-lambda
       ((g$stx$8855$bmrAn)
        ((case-lambda
           ((g$t$8856$bmrAn)
            ((case-lambda
               ((g$ls/false$8857$bmrAn)
                (if (if g$ls/false$8857$bmrAn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8858$bmrAn
                               g$rhs*$8859$bmrAn
                               g$b$8860$bmrAn
                               g$b*$8861$bmrAn)
                             (g$for-all$5061$bmrAn
                               g$id?$7703$bmrAn
                               g$lhs*$8858$bmrAn)))
                          g$ls/false$8857$bmrAn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8862$bmrAn
                         g$rhs*$8863$bmrAn
                         g$b$8864$bmrAn
                         g$b*$8865$bmrAn)
                       (g$bless$7944$bmrAn
                         ((letrec ((g$f$8866$bmrAn
                                     (case-lambda
                                       ((g$x*$8867$bmrAn)
                                        (if (null? g$x*$8867$bmrAn)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8864$bmrAn
                                                g$b*$8865$bmrAn)))
                                          (if (null? (cdr g$x*$8867$bmrAn))
                                            (cons
                                              'let
                                              (cons
                                                (list (car g$x*$8867$bmrAn))
                                                (cons
                                                  g$b$8864$bmrAn
                                                  g$b*$8865$bmrAn)))
                                            (list
                                              'let
                                              (list (car g$x*$8867$bmrAn))
                                              (g$f$8866$bmrAn
                                                (cdr g$x*$8867$bmrAn)))))))))
                            g$f$8866$bmrAn)
                          (g$map$5063$bmrAn
                            list
                            g$lhs*$8862$bmrAn
                            g$rhs*$8863$bmrAn)))))
                    g$ls/false$8857$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8856$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn
               g$t$8856$bmrAn
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8855$bmrAn))))
   (g$or-macro$7965$bmrAn
     g$or-macro$11468$bmrAn
     (case-lambda
       ((g$stx$8868$bmrAn)
        ((case-lambda
           ((g$t$8869$bmrAn)
            ((case-lambda
               ((g$ls/false$8870$bmrAn)
                (if g$ls/false$8870$bmrAn
                  (apply (case-lambda (() '#f)) g$ls/false$8870$bmrAn)
                  ((case-lambda
                     ((g$t$8871$bmrAn)
                      ((case-lambda
                         ((g$ls/false$8872$bmrAn)
                          (if g$ls/false$8872$bmrAn
                            (apply
                              (case-lambda
                                ((g$e$8873$bmrAn g$e*$8874$bmrAn)
                                 (g$bless$7944$bmrAn
                                   ((letrec ((g$f$8875$bmrAn
                                               (case-lambda
                                                 ((g$e$8876$bmrAn
                                                    g$e*$8877$bmrAn)
                                                  (if (null? g$e*$8877$bmrAn)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8876$bmrAn)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8876$bmrAn))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8875$bmrAn
                                                          (car g$e*$8877$bmrAn)
                                                          (cdr g$e*$8877$bmrAn)))))))))
                                      g$f$8875$bmrAn)
                                    g$e$8873$bmrAn
                                    g$e*$8874$bmrAn))))
                              g$ls/false$8872$bmrAn)
                            (g$syntax-violation$8093$bmrAn
                              '#f
                              '"invalid syntax"
                              g$t$8871$bmrAn))))
                       (g$syntax-dispatch$7981$bmrAn
                         g$t$8871$bmrAn
                         '(_ any . each-any)))))
                   g$t$8869$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$8869$bmrAn '(_)))))
         g$stx$8868$bmrAn))))
   (g$and-macro$7966$bmrAn
     g$and-macro$11469$bmrAn
     (case-lambda
       ((g$stx$8878$bmrAn)
        ((case-lambda
           ((g$t$8879$bmrAn)
            ((case-lambda
               ((g$ls/false$8880$bmrAn)
                (if g$ls/false$8880$bmrAn
                  (apply (case-lambda (() '#t)) g$ls/false$8880$bmrAn)
                  ((case-lambda
                     ((g$t$8881$bmrAn)
                      ((case-lambda
                         ((g$ls/false$8882$bmrAn)
                          (if g$ls/false$8882$bmrAn
                            (apply
                              (case-lambda
                                ((g$e$8883$bmrAn g$e*$8884$bmrAn)
                                 (g$bless$7944$bmrAn
                                   ((letrec ((g$f$8885$bmrAn
                                               (case-lambda
                                                 ((g$e$8886$bmrAn
                                                    g$e*$8887$bmrAn)
                                                  (if (null? g$e*$8887$bmrAn)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8886$bmrAn)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8886$bmrAn
                                                        (cons
                                                          (g$f$8885$bmrAn
                                                            (car g$e*$8887$bmrAn)
                                                            (cdr g$e*$8887$bmrAn))
                                                          '(#f)))))))))
                                      g$f$8885$bmrAn)
                                    g$e$8883$bmrAn
                                    g$e*$8884$bmrAn))))
                              g$ls/false$8882$bmrAn)
                            (g$syntax-violation$8093$bmrAn
                              '#f
                              '"invalid syntax"
                              g$t$8881$bmrAn))))
                       (g$syntax-dispatch$7981$bmrAn
                         g$t$8881$bmrAn
                         '(_ any . each-any)))))
                   g$t$8879$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$8879$bmrAn '(_)))))
         g$stx$8878$bmrAn))))
   (g$cond-macro$7967$bmrAn
     g$cond-macro$11470$bmrAn
     (case-lambda
       ((g$stx$8888$bmrAn)
        ((case-lambda
           ((g$t$8889$bmrAn)
            ((case-lambda
               ((g$ls/false$8890$bmrAn)
                (if g$ls/false$8890$bmrAn
                  (apply
                    (case-lambda
                      ((g$cls$8891$bmrAn g$cls*$8892$bmrAn)
                       (g$bless$7944$bmrAn
                         ((letrec ((g$f$8893$bmrAn
                                     (case-lambda
                                       ((g$cls$8894$bmrAn g$cls*$8895$bmrAn)
                                        (if (null? g$cls*$8895$bmrAn)
                                          ((case-lambda
                                             ((g$t$8896$bmrAn)
                                              ((case-lambda
                                                 ((g$ls/false$8897$bmrAn)
                                                  (if g$ls/false$8897$bmrAn
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8898$bmrAn
                                                           g$e*$8899$bmrAn)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8898$bmrAn
                                                             g$e*$8899$bmrAn))))
                                                      g$ls/false$8897$bmrAn)
                                                    ((case-lambda
                                                       ((g$t$8900$bmrAn)
                                                        ((case-lambda
                                                           ((g$ls/false$8901$bmrAn)
                                                            (if g$ls/false$8901$bmrAn
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8902$bmrAn
                                                                     g$p$8903$bmrAn)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8902$bmrAn))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8903$bmrAn
                                                                         '(t))))))
                                                                g$ls/false$8901$bmrAn)
                                                              ((case-lambda
                                                                 ((g$t$8904$bmrAn)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8905$bmrAn)
                                                                      (if g$ls/false$8905$bmrAn
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8906$bmrAn)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8906$bmrAn
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8905$bmrAn)
                                                                        ((case-lambda
                                                                           ((g$t$8907$bmrAn)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8908$bmrAn)
                                                                                (if g$ls/false$8908$bmrAn
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8909$bmrAn
                                                                                         g$e*$8910$bmrAn)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8909$bmrAn
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8910$bmrAn))))
                                                                                    g$ls/false$8908$bmrAn)
                                                                                  ((case-lambda
                                                                                     ((g$t$8911$bmrAn)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8912$bmrAn)
                                                                                          (if g$ls/false$8912$bmrAn
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8093$bmrAn
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8888$bmrAn)))
                                                                                              g$ls/false$8912$bmrAn)
                                                                                            (g$syntax-violation$8093$bmrAn
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8911$bmrAn))))
                                                                                       (g$syntax-dispatch$7981$bmrAn
                                                                                         g$t$8911$bmrAn
                                                                                         '_))))
                                                                                   g$t$8907$bmrAn))))
                                                                             (g$syntax-dispatch$7981$bmrAn
                                                                               g$t$8907$bmrAn
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8904$bmrAn))))
                                                                   (g$syntax-dispatch$7981$bmrAn
                                                                     g$t$8904$bmrAn
                                                                     '(any)))))
                                                               g$t$8900$bmrAn))))
                                                         (g$syntax-dispatch$7981$bmrAn
                                                           g$t$8900$bmrAn
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8896$bmrAn))))
                                               (g$syntax-dispatch$7981$bmrAn
                                                 g$t$8896$bmrAn
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8894$bmrAn)
                                          ((case-lambda
                                             ((g$t$8913$bmrAn)
                                              ((case-lambda
                                                 ((g$ls/false$8914$bmrAn)
                                                  (if g$ls/false$8914$bmrAn
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8915$bmrAn
                                                           g$e*$8916$bmrAn)
                                                         (g$syntax-violation$8093$bmrAn
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8888$bmrAn)))
                                                      g$ls/false$8914$bmrAn)
                                                    ((case-lambda
                                                       ((g$t$8917$bmrAn)
                                                        ((case-lambda
                                                           ((g$ls/false$8918$bmrAn)
                                                            (if g$ls/false$8918$bmrAn
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8919$bmrAn
                                                                     g$p$8920$bmrAn)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8919$bmrAn))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8920$bmrAn
                                                                         '(t))
                                                                       (g$f$8893$bmrAn
                                                                         (car g$cls*$8895$bmrAn)
                                                                         (cdr g$cls*$8895$bmrAn))))))
                                                                g$ls/false$8918$bmrAn)
                                                              ((case-lambda
                                                                 ((g$t$8921$bmrAn)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8922$bmrAn)
                                                                      (if g$ls/false$8922$bmrAn
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8923$bmrAn)
                                                                             (list
                                                                               'or
                                                                               g$e$8923$bmrAn
                                                                               (g$f$8893$bmrAn
                                                                                 (car g$cls*$8895$bmrAn)
                                                                                 (cdr g$cls*$8895$bmrAn)))))
                                                                          g$ls/false$8922$bmrAn)
                                                                        ((case-lambda
                                                                           ((g$t$8924$bmrAn)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8925$bmrAn)
                                                                                (if g$ls/false$8925$bmrAn
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8926$bmrAn
                                                                                         g$e*$8927$bmrAn)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8926$bmrAn
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8927$bmrAn)
                                                                                         (g$f$8893$bmrAn
                                                                                           (car g$cls*$8895$bmrAn)
                                                                                           (cdr g$cls*$8895$bmrAn)))))
                                                                                    g$ls/false$8925$bmrAn)
                                                                                  ((case-lambda
                                                                                     ((g$t$8928$bmrAn)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8929$bmrAn)
                                                                                          (if g$ls/false$8929$bmrAn
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8093$bmrAn
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8888$bmrAn)))
                                                                                              g$ls/false$8929$bmrAn)
                                                                                            (g$syntax-violation$8093$bmrAn
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8928$bmrAn))))
                                                                                       (g$syntax-dispatch$7981$bmrAn
                                                                                         g$t$8928$bmrAn
                                                                                         '_))))
                                                                                   g$t$8924$bmrAn))))
                                                                             (g$syntax-dispatch$7981$bmrAn
                                                                               g$t$8924$bmrAn
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8921$bmrAn))))
                                                                   (g$syntax-dispatch$7981$bmrAn
                                                                     g$t$8921$bmrAn
                                                                     '(any)))))
                                                               g$t$8917$bmrAn))))
                                                         (g$syntax-dispatch$7981$bmrAn
                                                           g$t$8917$bmrAn
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8913$bmrAn))))
                                               (g$syntax-dispatch$7981$bmrAn
                                                 g$t$8913$bmrAn
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8894$bmrAn))))))
                            g$f$8893$bmrAn)
                          g$cls$8891$bmrAn
                          g$cls*$8892$bmrAn))))
                    g$ls/false$8890$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8889$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn
               g$t$8889$bmrAn
               '(_ any . each-any)))))
         g$stx$8888$bmrAn))))
   (g$do-include$7968$bmrAn
     g$do-include$11471$bmrAn
     (case-lambda
       ((g$stx$8930$bmrAn g$id$8931$bmrAn g$filename$8932$bmrAn)
        ((case-lambda
           ((g$filename$8933$bmrAn)
            (begin
              (if (not (if (string? g$filename$8933$bmrAn)
                         (begin '#f (g$id?$7703$bmrAn g$id$8931$bmrAn))
                         '#f))
                (g$syntax-violation$8093$bmrAn
                  '#f
                  '"invalid syntax"
                  g$stx$8930$bmrAn)
                (void))
              (cons
                (g$bless$7944$bmrAn 'begin)
                (g$with-input-from-file$6385$bmrAn
                  g$filename$8933$bmrAn
                  (case-lambda
                    (()
                     ((letrec ((g$f$8934$bmrAn
                                 (case-lambda
                                   ((g$ls$8935$bmrAn)
                                    ((case-lambda
                                       ((g$x$8936$bmrAn)
                                        (if (eof-object? g$x$8936$bmrAn)
                                          (reverse g$ls$8935$bmrAn)
                                          (g$f$8934$bmrAn
                                            (cons
                                              (g$datum->stx$7686$bmrAn
                                                g$id$8931$bmrAn
                                                g$x$8936$bmrAn)
                                              g$ls$8935$bmrAn)))))
                                     (read-annotated))))))
                        g$f$8934$bmrAn)
                      '()))))))))
         (g$stx->datum$7714$bmrAn g$filename$8932$bmrAn)))))
   (g$include-macro$7969$bmrAn
     g$include-macro$11472$bmrAn
     (case-lambda
       ((g$e$8937$bmrAn)
        ((case-lambda
           ((g$t$8938$bmrAn)
            ((case-lambda
               ((g$ls/false$8939$bmrAn)
                (if g$ls/false$8939$bmrAn
                  (apply
                    (case-lambda
                      ((g$id$8940$bmrAn g$filename$8941$bmrAn)
                       (g$do-include$7968$bmrAn
                         g$e$8937$bmrAn
                         g$id$8940$bmrAn
                         g$filename$8941$bmrAn)))
                    g$ls/false$8939$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8938$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$8938$bmrAn '(any any)))))
         g$e$8937$bmrAn))))
   (g$include-into-macro$7970$bmrAn
     g$include-into-macro$11473$bmrAn
     (case-lambda
       ((g$e$8942$bmrAn)
        ((case-lambda
           ((g$t$8943$bmrAn)
            ((case-lambda
               ((g$ls/false$8944$bmrAn)
                (if g$ls/false$8944$bmrAn
                  (apply
                    (case-lambda
                      ((g$id$8945$bmrAn g$filename$8946$bmrAn)
                       (g$do-include$7968$bmrAn
                         g$e$8942$bmrAn
                         g$id$8945$bmrAn
                         g$filename$8946$bmrAn)))
                    g$ls/false$8944$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8943$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$8943$bmrAn '(_ any any)))))
         g$e$8942$bmrAn))))
   (g$syntax-rules-macro$7971$bmrAn
     g$syntax-rules-macro$11474$bmrAn
     (case-lambda
       ((g$e$8947$bmrAn)
        ((case-lambda
           ((g$t$8948$bmrAn)
            ((case-lambda
               ((g$ls/false$8949$bmrAn)
                (if g$ls/false$8949$bmrAn
                  (apply
                    (case-lambda
                      ((g$lits$8950$bmrAn g$pat*$8951$bmrAn g$tmp*$8952$bmrAn)
                       (begin
                         (g$verify-literals$7984$bmrAn
                           g$lits$8950$bmrAn
                           g$e$8947$bmrAn)
                         (g$bless$7944$bmrAn
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8950$bmrAn
                                   (g$map$5063$bmrAn
                                     (case-lambda
                                       ((g$pat$8953$bmrAn g$tmp$8954$bmrAn)
                                        ((case-lambda
                                           ((g$t$8955$bmrAn)
                                            ((case-lambda
                                               ((g$ls/false$8956$bmrAn)
                                                (if g$ls/false$8956$bmrAn
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$8957$bmrAn)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$8957$bmrAn)
                                                         (list
                                                           'syntax
                                                           g$tmp$8954$bmrAn))))
                                                    g$ls/false$8956$bmrAn)
                                                  ((case-lambda
                                                     ((g$t$8958$bmrAn)
                                                      ((case-lambda
                                                         ((g$ls/false$8959$bmrAn)
                                                          (if g$ls/false$8959$bmrAn
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$8093$bmrAn
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$8947$bmrAn
                                                                   g$pat$8953$bmrAn)))
                                                              g$ls/false$8959$bmrAn)
                                                            (g$syntax-violation$8093$bmrAn
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$8958$bmrAn))))
                                                       (g$syntax-dispatch$7981$bmrAn
                                                         g$t$8958$bmrAn
                                                         '_))))
                                                   g$t$8955$bmrAn))))
                                             (g$syntax-dispatch$7981$bmrAn
                                               g$t$8955$bmrAn
                                               '(_ . any)))))
                                         g$pat$8953$bmrAn)))
                                     g$pat*$8951$bmrAn
                                     g$tmp*$8952$bmrAn)))))))))
                    g$ls/false$8949$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$8948$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn
               g$t$8948$bmrAn
               '(_ each-any . #(each (any any)))))))
         g$e$8947$bmrAn))))
   (g$quasiquote-macro$7972$bmrAn
     g$quasiquote-macro$11475$bmrAn
     ((case-lambda
        (()
         (letrec* ((g$datum$8960$bmrAn
                     (case-lambda
                       ((g$x$9091$bmrAn)
                        (list
                          (g$scheme-stx$7924$bmrAn 'quote)
                          (g$mkstx$7691$bmrAn g$x$9091$bmrAn '() '() '())))))
                   (g$quasicons*$8976$bmrAn
                     (case-lambda
                       ((g$x$9087$bmrAn g$y$9088$bmrAn)
                        ((letrec ((g$f$9089$bmrAn
                                    (case-lambda
                                      ((g$x$9090$bmrAn)
                                       (if (null? g$x$9090$bmrAn)
                                         g$y$9088$bmrAn
                                         (g$quasicons$8977$bmrAn
                                           (car g$x$9090$bmrAn)
                                           (g$f$9089$bmrAn
                                             (cdr g$x$9090$bmrAn))))))))
                           g$f$9089$bmrAn)
                         g$x$9087$bmrAn))))
                   (g$quasicons$8977$bmrAn
                     (case-lambda
                       ((g$x$9068$bmrAn g$y$9069$bmrAn)
                        ((case-lambda
                           ((g$t$9070$bmrAn)
                            ((case-lambda
                               ((g$ls/false$9071$bmrAn)
                                (if g$ls/false$9071$bmrAn
                                  (apply
                                    (case-lambda
                                      ((g$dy$9072$bmrAn)
                                       ((case-lambda
                                          ((g$t$9073$bmrAn)
                                           ((case-lambda
                                              ((g$ls/false$9074$bmrAn)
                                               (if g$ls/false$9074$bmrAn
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$9075$bmrAn)
                                                      (list
                                                        (g$scheme-stx$7924$bmrAn
                                                          'quote)
                                                        (cons
                                                          g$dx$9075$bmrAn
                                                          g$dy$9072$bmrAn))))
                                                   g$ls/false$9074$bmrAn)
                                                 ((case-lambda
                                                    ((g$t$9076$bmrAn)
                                                     ((case-lambda
                                                        ((g$ls/false$9077$bmrAn)
                                                         (if g$ls/false$9077$bmrAn
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$9078$bmrAn)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9079$bmrAn)
                                                                        (if g$ls/false$9079$bmrAn
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7924$bmrAn
                                                                                   'list)
                                                                                 g$x$9068$bmrAn)))
                                                                            g$ls/false$9079$bmrAn)
                                                                          ((case-lambda
                                                                             ((g$t$9080$bmrAn)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9081$bmrAn)
                                                                                  (if g$ls/false$9081$bmrAn
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7924$bmrAn
                                                                                             'cons)
                                                                                           g$x$9068$bmrAn
                                                                                           g$y$9069$bmrAn)))
                                                                                      g$ls/false$9081$bmrAn)
                                                                                    (g$syntax-violation$8093$bmrAn
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$9080$bmrAn))))
                                                                               (g$syntax-dispatch$7981$bmrAn
                                                                                 g$t$9080$bmrAn
                                                                                 '_))))
                                                                           g$t$9078$bmrAn))))
                                                                     (g$syntax-dispatch$7981$bmrAn
                                                                       g$t$9078$bmrAn
                                                                       '()))))
                                                                 g$dy$9072$bmrAn)))
                                                             g$ls/false$9077$bmrAn)
                                                           (g$syntax-violation$8093$bmrAn
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$9076$bmrAn))))
                                                      (g$syntax-dispatch$7981$bmrAn
                                                        g$t$9076$bmrAn
                                                        '_))))
                                                  g$t$9073$bmrAn))))
                                            (g$syntax-dispatch$7981$bmrAn
                                              g$t$9073$bmrAn
                                              '(#(scheme-id quote) any)))))
                                        g$x$9068$bmrAn)))
                                    g$ls/false$9071$bmrAn)
                                  ((case-lambda
                                     ((g$t$9082$bmrAn)
                                      ((case-lambda
                                         ((g$ls/false$9083$bmrAn)
                                          (if g$ls/false$9083$bmrAn
                                            (apply
                                              (case-lambda
                                                ((g$stuff$9084$bmrAn)
                                                 (g$cons*$5065$bmrAn
                                                   (g$scheme-stx$7924$bmrAn
                                                     'list)
                                                   g$x$9068$bmrAn
                                                   g$stuff$9084$bmrAn)))
                                              g$ls/false$9083$bmrAn)
                                            ((case-lambda
                                               ((g$t$9085$bmrAn)
                                                ((case-lambda
                                                   ((g$ls/false$9086$bmrAn)
                                                    (if g$ls/false$9086$bmrAn
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7924$bmrAn
                                                               'cons)
                                                             g$x$9068$bmrAn
                                                             g$y$9069$bmrAn)))
                                                        g$ls/false$9086$bmrAn)
                                                      (g$syntax-violation$8093$bmrAn
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$9085$bmrAn))))
                                                 (g$syntax-dispatch$7981$bmrAn
                                                   g$t$9085$bmrAn
                                                   '_))))
                                             g$t$9082$bmrAn))))
                                       (g$syntax-dispatch$7981$bmrAn
                                         g$t$9082$bmrAn
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$9070$bmrAn))))
                             (g$syntax-dispatch$7981$bmrAn
                               g$t$9070$bmrAn
                               '(#(scheme-id quote) any)))))
                         g$y$9069$bmrAn))))
                   (g$quasiappend$8978$bmrAn
                     (case-lambda
                       ((g$x$9055$bmrAn g$y$9056$bmrAn)
                        ((case-lambda
                           ((g$ls$9057$bmrAn)
                            (if (null? g$ls$9057$bmrAn)
                              (list (g$scheme-stx$7924$bmrAn 'quote) '())
                              (if (null? (cdr g$ls$9057$bmrAn))
                                (car g$ls$9057$bmrAn)
                                (g$cons*$5065$bmrAn
                                  (g$scheme-stx$7924$bmrAn 'append)
                                  g$ls$9057$bmrAn)))))
                         ((letrec ((g$f$9058$bmrAn
                                     (case-lambda
                                       ((g$x$9059$bmrAn)
                                        (if (null? g$x$9059$bmrAn)
                                          ((case-lambda
                                             ((g$t$9060$bmrAn)
                                              ((case-lambda
                                                 ((g$ls/false$9061$bmrAn)
                                                  (if g$ls/false$9061$bmrAn
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$9061$bmrAn)
                                                    ((case-lambda
                                                       ((g$t$9062$bmrAn)
                                                        ((case-lambda
                                                           ((g$ls/false$9063$bmrAn)
                                                            (if g$ls/false$9063$bmrAn
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$9056$bmrAn)))
                                                                g$ls/false$9063$bmrAn)
                                                              (g$syntax-violation$8093$bmrAn
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9062$bmrAn))))
                                                         (g$syntax-dispatch$7981$bmrAn
                                                           g$t$9062$bmrAn
                                                           '_))))
                                                     g$t$9060$bmrAn))))
                                               (g$syntax-dispatch$7981$bmrAn
                                                 g$t$9060$bmrAn
                                                 '(#(scheme-id quote) ())))))
                                           g$y$9056$bmrAn)
                                          ((case-lambda
                                             ((g$t$9064$bmrAn)
                                              ((case-lambda
                                                 ((g$ls/false$9065$bmrAn)
                                                  (if g$ls/false$9065$bmrAn
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$9058$bmrAn
                                                           (cdr g$x$9059$bmrAn))))
                                                      g$ls/false$9065$bmrAn)
                                                    ((case-lambda
                                                       ((g$t$9066$bmrAn)
                                                        ((case-lambda
                                                           ((g$ls/false$9067$bmrAn)
                                                            (if g$ls/false$9067$bmrAn
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$9059$bmrAn)
                                                                     (g$f$9058$bmrAn
                                                                       (cdr g$x$9059$bmrAn)))))
                                                                g$ls/false$9067$bmrAn)
                                                              (g$syntax-violation$8093$bmrAn
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9066$bmrAn))))
                                                         (g$syntax-dispatch$7981$bmrAn
                                                           g$t$9066$bmrAn
                                                           '_))))
                                                     g$t$9064$bmrAn))))
                                               (g$syntax-dispatch$7981$bmrAn
                                                 g$t$9064$bmrAn
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$9059$bmrAn)))))))
                            g$f$9058$bmrAn)
                          g$x$9055$bmrAn)))))
                   (g$quasivector$8979$bmrAn
                     (case-lambda
                       ((g$x$9030$bmrAn)
                        ((case-lambda
                           ((g$pat-x$9031$bmrAn)
                            ((case-lambda
                               ((g$t$9032$bmrAn)
                                ((case-lambda
                                   ((g$ls/false$9033$bmrAn)
                                    (if g$ls/false$9033$bmrAn
                                      (apply
                                        (case-lambda
                                          ((g$x*$9034$bmrAn)
                                           (list
                                             (g$scheme-stx$7924$bmrAn 'quote)
                                             (list->vector g$x*$9034$bmrAn))))
                                        g$ls/false$9033$bmrAn)
                                      ((case-lambda
                                         ((g$t$9035$bmrAn)
                                          ((case-lambda
                                             ((g$ls/false$9036$bmrAn)
                                              (if g$ls/false$9036$bmrAn
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$9037$bmrAn
                                                                 (case-lambda
                                                                   ((g$x$9038$bmrAn
                                                                      g$k$9039$bmrAn)
                                                                    ((case-lambda
                                                                       ((g$t$9040$bmrAn)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9041$bmrAn)
                                                                            (if g$ls/false$9041$bmrAn
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$9042$bmrAn)
                                                                                   (g$k$9039$bmrAn
                                                                                     (g$map$5063$bmrAn
                                                                                       (case-lambda
                                                                                         ((g$x$9043$bmrAn)
                                                                                          (list
                                                                                            (g$scheme-stx$7924$bmrAn
                                                                                              'quote)
                                                                                            g$x$9043$bmrAn)))
                                                                                       g$x*$9042$bmrAn))))
                                                                                g$ls/false$9041$bmrAn)
                                                                              ((case-lambda
                                                                                 ((g$t$9044$bmrAn)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$9045$bmrAn)
                                                                                      (if g$ls/false$9045$bmrAn
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$9046$bmrAn)
                                                                                             (g$k$9039$bmrAn
                                                                                               g$x*$9046$bmrAn)))
                                                                                          g$ls/false$9045$bmrAn)
                                                                                        ((case-lambda
                                                                                           ((g$t$9047$bmrAn)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$9048$bmrAn)
                                                                                                (if g$ls/false$9048$bmrAn
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$9049$bmrAn
                                                                                                         g$y$9050$bmrAn)
                                                                                                       (g$f$9037$bmrAn
                                                                                                         g$y$9050$bmrAn
                                                                                                         (case-lambda
                                                                                                           ((g$ls$9051$bmrAn)
                                                                                                            (g$k$9039$bmrAn
                                                                                                              (cons
                                                                                                                g$x$9049$bmrAn
                                                                                                                g$ls$9051$bmrAn)))))))
                                                                                                    g$ls/false$9048$bmrAn)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$9052$bmrAn)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$9053$bmrAn)
                                                                                                          (if g$ls/false$9053$bmrAn
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7924$bmrAn
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$9031$bmrAn)))
                                                                                                              g$ls/false$9053$bmrAn)
                                                                                                            (g$syntax-violation$8093$bmrAn
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$9052$bmrAn))))
                                                                                                       (g$syntax-dispatch$7981$bmrAn
                                                                                                         g$t$9052$bmrAn
                                                                                                         '_))))
                                                                                                   g$t$9047$bmrAn))))
                                                                                             (g$syntax-dispatch$7981$bmrAn
                                                                                               g$t$9047$bmrAn
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$9044$bmrAn))))
                                                                                   (g$syntax-dispatch$7981$bmrAn
                                                                                     g$t$9044$bmrAn
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$9040$bmrAn))))
                                                                         (g$syntax-dispatch$7981$bmrAn
                                                                           g$t$9040$bmrAn
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$9038$bmrAn)))))
                                                        g$f$9037$bmrAn)
                                                      g$x$9030$bmrAn
                                                      (case-lambda
                                                        ((g$ls$9054$bmrAn)
                                                         (g$cons*$5065$bmrAn
                                                           (g$scheme-stx$7924$bmrAn
                                                             'vector)
                                                           g$ls$9054$bmrAn))))))
                                                  g$ls/false$9036$bmrAn)
                                                (g$syntax-violation$8093$bmrAn
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$9035$bmrAn))))
                                           (g$syntax-dispatch$7981$bmrAn
                                             g$t$9035$bmrAn
                                             '_))))
                                       g$t$9032$bmrAn))))
                                 (g$syntax-dispatch$7981$bmrAn
                                   g$t$9032$bmrAn
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$9031$bmrAn)))
                         g$x$9030$bmrAn))))
                   (g$vquasi$8980$bmrAn
                     (case-lambda
                       ((g$p$9013$bmrAn g$lev$9014$bmrAn)
                        ((case-lambda
                           ((g$t$9015$bmrAn)
                            ((case-lambda
                               ((g$ls/false$9016$bmrAn)
                                (if g$ls/false$9016$bmrAn
                                  (apply
                                    (case-lambda
                                      ((g$p$9017$bmrAn g$q$9018$bmrAn)
                                       ((case-lambda
                                          ((g$t$9019$bmrAn)
                                           ((case-lambda
                                              ((g$ls/false$9020$bmrAn)
                                               (if g$ls/false$9020$bmrAn
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9021$bmrAn)
                                                      (if (= g$lev$9014$bmrAn
                                                             '0)
                                                        (g$quasicons*$8976$bmrAn
                                                          g$p$9021$bmrAn
                                                          (g$vquasi$8980$bmrAn
                                                            g$q$9018$bmrAn
                                                            g$lev$9014$bmrAn))
                                                        (g$quasicons$8977$bmrAn
                                                          (g$quasicons$8977$bmrAn
                                                            (g$datum$8960$bmrAn
                                                              'unquote)
                                                            (g$quasi$8981$bmrAn
                                                              g$p$9021$bmrAn
                                                              (- g$lev$9014$bmrAn
                                                                 '1)))
                                                          (g$vquasi$8980$bmrAn
                                                            g$q$9018$bmrAn
                                                            g$lev$9014$bmrAn)))))
                                                   g$ls/false$9020$bmrAn)
                                                 ((case-lambda
                                                    ((g$t$9022$bmrAn)
                                                     ((case-lambda
                                                        ((g$ls/false$9023$bmrAn)
                                                         (if g$ls/false$9023$bmrAn
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$9024$bmrAn)
                                                                (if (= g$lev$9014$bmrAn
                                                                       '0)
                                                                  (g$quasiappend$8978$bmrAn
                                                                    g$p$9024$bmrAn
                                                                    (g$vquasi$8980$bmrAn
                                                                      g$q$9018$bmrAn
                                                                      g$lev$9014$bmrAn))
                                                                  (g$quasicons$8977$bmrAn
                                                                    (g$quasicons$8977$bmrAn
                                                                      (g$datum$8960$bmrAn
                                                                        'unquote-splicing)
                                                                      (g$quasi$8981$bmrAn
                                                                        g$p$9024$bmrAn
                                                                        (- g$lev$9014$bmrAn
                                                                           '1)))
                                                                    (g$vquasi$8980$bmrAn
                                                                      g$q$9018$bmrAn
                                                                      g$lev$9014$bmrAn)))))
                                                             g$ls/false$9023$bmrAn)
                                                           ((case-lambda
                                                              ((g$t$9025$bmrAn)
                                                               ((case-lambda
                                                                  ((g$ls/false$9026$bmrAn)
                                                                   (if g$ls/false$9026$bmrAn
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$9027$bmrAn)
                                                                          (g$quasicons$8977$bmrAn
                                                                            (g$quasi$8981$bmrAn
                                                                              g$p$9027$bmrAn
                                                                              g$lev$9014$bmrAn)
                                                                            (g$vquasi$8980$bmrAn
                                                                              g$q$9018$bmrAn
                                                                              g$lev$9014$bmrAn))))
                                                                       g$ls/false$9026$bmrAn)
                                                                     (g$syntax-violation$8093$bmrAn
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$9025$bmrAn))))
                                                                (g$syntax-dispatch$7981$bmrAn
                                                                  g$t$9025$bmrAn
                                                                  'any))))
                                                            g$t$9022$bmrAn))))
                                                      (g$syntax-dispatch$7981$bmrAn
                                                        g$t$9022$bmrAn
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$9019$bmrAn))))
                                            (g$syntax-dispatch$7981$bmrAn
                                              g$t$9019$bmrAn
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$9017$bmrAn)))
                                    g$ls/false$9016$bmrAn)
                                  ((case-lambda
                                     ((g$t$9028$bmrAn)
                                      ((case-lambda
                                         ((g$ls/false$9029$bmrAn)
                                          (if g$ls/false$9029$bmrAn
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7924$bmrAn
                                                     'quote)
                                                   '())))
                                              g$ls/false$9029$bmrAn)
                                            (g$syntax-violation$8093$bmrAn
                                              '#f
                                              '"invalid syntax"
                                              g$t$9028$bmrAn))))
                                       (g$syntax-dispatch$7981$bmrAn
                                         g$t$9028$bmrAn
                                         '()))))
                                   g$t$9015$bmrAn))))
                             (g$syntax-dispatch$7981$bmrAn
                               g$t$9015$bmrAn
                               '(any . any)))))
                         g$p$9013$bmrAn))))
                   (g$quasi$8981$bmrAn
                     (case-lambda
                       ((g$p$8986$bmrAn g$lev$8987$bmrAn)
                        ((case-lambda
                           ((g$t$8988$bmrAn)
                            ((case-lambda
                               ((g$ls/false$8989$bmrAn)
                                (if g$ls/false$8989$bmrAn
                                  (apply
                                    (case-lambda
                                      ((g$p$8990$bmrAn)
                                       (if (= g$lev$8987$bmrAn '0)
                                         g$p$8990$bmrAn
                                         (g$quasicons$8977$bmrAn
                                           (g$datum$8960$bmrAn 'unquote)
                                           (g$quasi$8981$bmrAn
                                             (list g$p$8990$bmrAn)
                                             (- g$lev$8987$bmrAn '1))))))
                                    g$ls/false$8989$bmrAn)
                                  ((case-lambda
                                     ((g$t$8991$bmrAn)
                                      ((case-lambda
                                         ((g$ls/false$8992$bmrAn)
                                          (if g$ls/false$8992$bmrAn
                                            (apply
                                              (case-lambda
                                                ((g$p$8993$bmrAn g$q$8994$bmrAn)
                                                 (if (= g$lev$8987$bmrAn '0)
                                                   (g$quasicons*$8976$bmrAn
                                                     g$p$8993$bmrAn
                                                     (g$quasi$8981$bmrAn
                                                       g$q$8994$bmrAn
                                                       g$lev$8987$bmrAn))
                                                   (g$quasicons$8977$bmrAn
                                                     (g$quasicons$8977$bmrAn
                                                       (g$datum$8960$bmrAn
                                                         'unquote)
                                                       (g$quasi$8981$bmrAn
                                                         g$p$8993$bmrAn
                                                         (- g$lev$8987$bmrAn
                                                            '1)))
                                                     (g$quasi$8981$bmrAn
                                                       g$q$8994$bmrAn
                                                       g$lev$8987$bmrAn)))))
                                              g$ls/false$8992$bmrAn)
                                            ((case-lambda
                                               ((g$t$8995$bmrAn)
                                                ((case-lambda
                                                   ((g$ls/false$8996$bmrAn)
                                                    (if g$ls/false$8996$bmrAn
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8997$bmrAn
                                                             g$q$8998$bmrAn)
                                                           (if (= g$lev$8987$bmrAn
                                                                  '0)
                                                             (g$quasiappend$8978$bmrAn
                                                               g$p$8997$bmrAn
                                                               (g$quasi$8981$bmrAn
                                                                 g$q$8998$bmrAn
                                                                 g$lev$8987$bmrAn))
                                                             (g$quasicons$8977$bmrAn
                                                               (g$quasicons$8977$bmrAn
                                                                 (g$datum$8960$bmrAn
                                                                   'unquote-splicing)
                                                                 (g$quasi$8981$bmrAn
                                                                   g$p$8997$bmrAn
                                                                   (- g$lev$8987$bmrAn
                                                                      '1)))
                                                               (g$quasi$8981$bmrAn
                                                                 g$q$8998$bmrAn
                                                                 g$lev$8987$bmrAn)))))
                                                        g$ls/false$8996$bmrAn)
                                                      ((case-lambda
                                                         ((g$t$8999$bmrAn)
                                                          ((case-lambda
                                                             ((g$ls/false$9000$bmrAn)
                                                              (if g$ls/false$9000$bmrAn
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$9001$bmrAn)
                                                                     (g$quasicons$8977$bmrAn
                                                                       (g$datum$8960$bmrAn
                                                                         'quasiquote)
                                                                       (g$quasi$8981$bmrAn
                                                                         (list
                                                                           g$p$9001$bmrAn)
                                                                         (+ g$lev$8987$bmrAn
                                                                            '1)))))
                                                                  g$ls/false$9000$bmrAn)
                                                                ((case-lambda
                                                                   ((g$t$9002$bmrAn)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9003$bmrAn)
                                                                        (if g$ls/false$9003$bmrAn
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$9004$bmrAn
                                                                                 g$q$9005$bmrAn)
                                                                               (g$quasicons$8977$bmrAn
                                                                                 (g$quasi$8981$bmrAn
                                                                                   g$p$9004$bmrAn
                                                                                   g$lev$8987$bmrAn)
                                                                                 (g$quasi$8981$bmrAn
                                                                                   g$q$9005$bmrAn
                                                                                   g$lev$8987$bmrAn))))
                                                                            g$ls/false$9003$bmrAn)
                                                                          ((case-lambda
                                                                             ((g$t$9006$bmrAn)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9007$bmrAn)
                                                                                  (if (if g$ls/false$9007$bmrAn
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$9008$bmrAn)
                                                                                               (not (g$stx?$7675$bmrAn
                                                                                                      g$x$9008$bmrAn))))
                                                                                            g$ls/false$9007$bmrAn))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$9009$bmrAn)
                                                                                         (g$quasivector$8979$bmrAn
                                                                                           (g$vquasi$8980$bmrAn
                                                                                             g$x$9009$bmrAn
                                                                                             g$lev$8987$bmrAn))))
                                                                                      g$ls/false$9007$bmrAn)
                                                                                    ((case-lambda
                                                                                       ((g$t$9010$bmrAn)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9011$bmrAn)
                                                                                            (if g$ls/false$9011$bmrAn
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$9012$bmrAn)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7924$bmrAn
                                                                                                       'quote)
                                                                                                     g$p$9012$bmrAn)))
                                                                                                g$ls/false$9011$bmrAn)
                                                                                              (g$syntax-violation$8093$bmrAn
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9010$bmrAn))))
                                                                                         (g$syntax-dispatch$7981$bmrAn
                                                                                           g$t$9010$bmrAn
                                                                                           'any))))
                                                                                     g$t$9006$bmrAn))))
                                                                               (g$syntax-dispatch$7981$bmrAn
                                                                                 g$t$9006$bmrAn
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9002$bmrAn))))
                                                                     (g$syntax-dispatch$7981$bmrAn
                                                                       g$t$9002$bmrAn
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8999$bmrAn))))
                                                           (g$syntax-dispatch$7981$bmrAn
                                                             g$t$8999$bmrAn
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8995$bmrAn))))
                                                 (g$syntax-dispatch$7981$bmrAn
                                                   g$t$8995$bmrAn
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8991$bmrAn))))
                                       (g$syntax-dispatch$7981$bmrAn
                                         g$t$8991$bmrAn
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8988$bmrAn))))
                             (g$syntax-dispatch$7981$bmrAn
                               g$t$8988$bmrAn
                               '(#(scheme-id unquote) any)))))
                         g$p$8986$bmrAn)))))
           (case-lambda
             ((g$x$8982$bmrAn)
              ((case-lambda
                 ((g$t$8983$bmrAn)
                  ((case-lambda
                     ((g$ls/false$8984$bmrAn)
                      (if g$ls/false$8984$bmrAn
                        (apply
                          (case-lambda
                            ((g$e$8985$bmrAn)
                             (g$quasi$8981$bmrAn g$e$8985$bmrAn '0)))
                          g$ls/false$8984$bmrAn)
                        (g$syntax-violation$8093$bmrAn
                          '#f
                          '"invalid syntax"
                          g$t$8983$bmrAn))))
                   (g$syntax-dispatch$7981$bmrAn g$t$8983$bmrAn '(_ any)))))
               g$x$8982$bmrAn))))))))
   (g$quasisyntax-macro$7973$bmrAn
     g$quasisyntax-macro$11476$bmrAn
     ((case-lambda
        (()
         (letrec* ((g$quasi$9092$bmrAn
                     (case-lambda
                       ((g$p$9106$bmrAn g$lev$9107$bmrAn)
                        ((case-lambda
                           ((g$t$9108$bmrAn)
                            ((case-lambda
                               ((g$ls/false$9109$bmrAn)
                                (if g$ls/false$9109$bmrAn
                                  (apply
                                    (case-lambda
                                      ((g$p$9110$bmrAn)
                                       (if (= g$lev$9107$bmrAn '0)
                                         ((case-lambda
                                            ((g$g$9111$bmrAn)
                                             (values
                                               (list g$g$9111$bmrAn)
                                               (list g$p$9110$bmrAn)
                                               g$g$9111$bmrAn)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$9092$bmrAn
                                                g$p$9110$bmrAn
                                                (- g$lev$9107$bmrAn '1))))
                                           (case-lambda
                                             ((g$lhs*$9115$bmrAn
                                                g$rhs*$9116$bmrAn
                                                g$p$9117$bmrAn)
                                              ((case-lambda
                                                 ((g$p$9118$bmrAn
                                                    g$rhs*$9119$bmrAn
                                                    g$lhs*$9120$bmrAn)
                                                  (values
                                                    g$lhs*$9120$bmrAn
                                                    g$rhs*$9119$bmrAn
                                                    (list
                                                      'unsyntax
                                                      g$p$9118$bmrAn))))
                                               g$p$9117$bmrAn
                                               g$rhs*$9116$bmrAn
                                               g$lhs*$9115$bmrAn)))))))
                                    g$ls/false$9109$bmrAn)
                                  ((case-lambda
                                     ((g$t$9121$bmrAn)
                                      ((case-lambda
                                         ((g$ls/false$9122$bmrAn)
                                          (if (if g$ls/false$9122$bmrAn
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$9107$bmrAn '0)))
                                                    g$ls/false$9122$bmrAn))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$8093$bmrAn
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$9106$bmrAn)))
                                              g$ls/false$9122$bmrAn)
                                            ((case-lambda
                                               ((g$t$9123$bmrAn)
                                                ((case-lambda
                                                   ((g$ls/false$9124$bmrAn)
                                                    (if g$ls/false$9124$bmrAn
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$9125$bmrAn
                                                             g$q$9126$bmrAn)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$9092$bmrAn
                                                                  g$q$9126$bmrAn
                                                                  g$lev$9107$bmrAn)))
                                                             (case-lambda
                                                               ((g$lhs*$9130$bmrAn
                                                                  g$rhs*$9131$bmrAn
                                                                  g$q$9132$bmrAn)
                                                                ((case-lambda
                                                                   ((g$q$9133$bmrAn
                                                                      g$rhs*$9134$bmrAn
                                                                      g$lhs*$9135$bmrAn)
                                                                    (if (= g$lev$9107$bmrAn
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$9136$bmrAn)
                                                                          (values
                                                                            (append
                                                                              g$g*$9136$bmrAn
                                                                              g$lhs*$9135$bmrAn)
                                                                            (append
                                                                              g$p*$9125$bmrAn
                                                                              g$rhs*$9134$bmrAn)
                                                                            (append
                                                                              g$g*$9136$bmrAn
                                                                              g$q$9133$bmrAn))))
                                                                       (g$map$5063$bmrAn
                                                                         (case-lambda
                                                                           ((g$x$9137$bmrAn)
                                                                            (gensym)))
                                                                         g$p*$9125$bmrAn))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$9092$bmrAn
                                                                             g$p*$9125$bmrAn
                                                                             (- g$lev$9107$bmrAn
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$9141$bmrAn
                                                                             g$rhs2*$9142$bmrAn
                                                                             g$p*$9143$bmrAn)
                                                                           ((case-lambda
                                                                              ((g$p*$9144$bmrAn
                                                                                 g$rhs2*$9145$bmrAn
                                                                                 g$lhs2*$9146$bmrAn)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$9146$bmrAn
                                                                                   g$lhs*$9135$bmrAn)
                                                                                 (append
                                                                                   g$rhs2*$9145$bmrAn
                                                                                   g$rhs*$9134$bmrAn)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$9144$bmrAn)
                                                                                   g$q$9133$bmrAn))))
                                                                            g$p*$9143$bmrAn
                                                                            g$rhs2*$9142$bmrAn
                                                                            g$lhs2*$9141$bmrAn)))))))
                                                                 g$q$9132$bmrAn
                                                                 g$rhs*$9131$bmrAn
                                                                 g$lhs*$9130$bmrAn))))))
                                                        g$ls/false$9124$bmrAn)
                                                      ((case-lambda
                                                         ((g$t$9147$bmrAn)
                                                          ((case-lambda
                                                             ((g$ls/false$9148$bmrAn)
                                                              (if g$ls/false$9148$bmrAn
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$9149$bmrAn
                                                                       g$q$9150$bmrAn)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$9092$bmrAn
                                                                            g$q$9150$bmrAn
                                                                            g$lev$9107$bmrAn)))
                                                                       (case-lambda
                                                                         ((g$lhs*$9154$bmrAn
                                                                            g$rhs*$9155$bmrAn
                                                                            g$q$9156$bmrAn)
                                                                          ((case-lambda
                                                                             ((g$q$9157$bmrAn
                                                                                g$rhs*$9158$bmrAn
                                                                                g$lhs*$9159$bmrAn)
                                                                              (if (= g$lev$9107$bmrAn
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$9160$bmrAn)
                                                                                    (values
                                                                                      (append
                                                                                        (g$map$5063$bmrAn
                                                                                          (case-lambda
                                                                                            ((g$g$9161$bmrAn)
                                                                                             (cons
                                                                                               g$g$9161$bmrAn
                                                                                               '(...))))
                                                                                          g$g*$9160$bmrAn)
                                                                                        g$lhs*$9159$bmrAn)
                                                                                      (append
                                                                                        g$p*$9149$bmrAn
                                                                                        g$rhs*$9158$bmrAn)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (g$map$5063$bmrAn
                                                                                            (case-lambda
                                                                                              ((g$g$9162$bmrAn)
                                                                                               (cons
                                                                                                 g$g$9162$bmrAn
                                                                                                 '(...))))
                                                                                            g$g*$9160$bmrAn))
                                                                                        g$q$9157$bmrAn))))
                                                                                 (g$map$5063$bmrAn
                                                                                   (case-lambda
                                                                                     ((g$x$9163$bmrAn)
                                                                                      (gensym)))
                                                                                   g$p*$9149$bmrAn))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$9092$bmrAn
                                                                                       g$p*$9149$bmrAn
                                                                                       (- g$lev$9107$bmrAn
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$9167$bmrAn
                                                                                       g$rhs2*$9168$bmrAn
                                                                                       g$p*$9169$bmrAn)
                                                                                     ((case-lambda
                                                                                        ((g$p*$9170$bmrAn
                                                                                           g$rhs2*$9171$bmrAn
                                                                                           g$lhs2*$9172$bmrAn)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$9172$bmrAn
                                                                                             g$lhs*$9159$bmrAn)
                                                                                           (append
                                                                                             g$rhs2*$9171$bmrAn
                                                                                             g$rhs*$9158$bmrAn)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$9170$bmrAn)
                                                                                             g$q$9157$bmrAn))))
                                                                                      g$p*$9169$bmrAn
                                                                                      g$rhs2*$9168$bmrAn
                                                                                      g$lhs2*$9167$bmrAn)))))))
                                                                           g$q$9156$bmrAn
                                                                           g$rhs*$9155$bmrAn
                                                                           g$lhs*$9154$bmrAn))))))
                                                                  g$ls/false$9148$bmrAn)
                                                                ((case-lambda
                                                                   ((g$t$9173$bmrAn)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9174$bmrAn)
                                                                        (if (if g$ls/false$9174$bmrAn
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$9107$bmrAn
                                                                                        '0)))
                                                                                  g$ls/false$9174$bmrAn))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$8093$bmrAn
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$9106$bmrAn)))
                                                                            g$ls/false$9174$bmrAn)
                                                                          ((case-lambda
                                                                             ((g$t$9175$bmrAn)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9176$bmrAn)
                                                                                  (if g$ls/false$9176$bmrAn
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$9177$bmrAn)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$9092$bmrAn
                                                                                                g$p$9177$bmrAn
                                                                                                (+ g$lev$9107$bmrAn
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$9181$bmrAn
                                                                                                g$rhs*$9182$bmrAn
                                                                                                g$p$9183$bmrAn)
                                                                                              ((case-lambda
                                                                                                 ((g$p$9184$bmrAn
                                                                                                    g$rhs*$9185$bmrAn
                                                                                                    g$lhs*$9186$bmrAn)
                                                                                                  (values
                                                                                                    g$lhs*$9186$bmrAn
                                                                                                    g$rhs*$9185$bmrAn
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$9184$bmrAn))))
                                                                                               g$p$9183$bmrAn
                                                                                               g$rhs*$9182$bmrAn
                                                                                               g$lhs*$9181$bmrAn))))))
                                                                                      g$ls/false$9176$bmrAn)
                                                                                    ((case-lambda
                                                                                       ((g$t$9187$bmrAn)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9188$bmrAn)
                                                                                            (if g$ls/false$9188$bmrAn
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$9189$bmrAn
                                                                                                     g$q$9190$bmrAn)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$9092$bmrAn
                                                                                                          g$p$9189$bmrAn
                                                                                                          g$lev$9107$bmrAn)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$9197$bmrAn
                                                                                                          g$rhs*$9198$bmrAn
                                                                                                          g$p$9199$bmrAn)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$9092$bmrAn
                                                                                                               g$q$9190$bmrAn
                                                                                                               g$lev$9107$bmrAn)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$9200$bmrAn
                                                                                                               g$rhs2*$9201$bmrAn
                                                                                                               g$q$9202$bmrAn)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$9203$bmrAn
                                                                                                                   g$rhs2*$9204$bmrAn
                                                                                                                   g$lhs2*$9205$bmrAn
                                                                                                                   g$p$9206$bmrAn
                                                                                                                   g$rhs*$9207$bmrAn
                                                                                                                   g$lhs*$9208$bmrAn)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$9205$bmrAn
                                                                                                                     g$lhs*$9208$bmrAn)
                                                                                                                   (append
                                                                                                                     g$rhs2*$9204$bmrAn
                                                                                                                     g$rhs*$9207$bmrAn)
                                                                                                                   (cons
                                                                                                                     g$p$9206$bmrAn
                                                                                                                     g$q$9203$bmrAn))))
                                                                                                              g$q$9202$bmrAn
                                                                                                              g$rhs2*$9201$bmrAn
                                                                                                              g$lhs2*$9200$bmrAn
                                                                                                              g$p$9199$bmrAn
                                                                                                              g$rhs*$9198$bmrAn
                                                                                                              g$lhs*$9197$bmrAn)))))))))
                                                                                                g$ls/false$9188$bmrAn)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9209$bmrAn)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9210$bmrAn)
                                                                                                      (if g$ls/false$9210$bmrAn
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$9211$bmrAn)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$9092$bmrAn
                                                                                                                    g$x*$9211$bmrAn
                                                                                                                    g$lev$9107$bmrAn)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$9215$bmrAn
                                                                                                                    g$rhs*$9216$bmrAn
                                                                                                                    g$x*$9217$bmrAn)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$9218$bmrAn
                                                                                                                        g$rhs*$9219$bmrAn
                                                                                                                        g$lhs*$9220$bmrAn)
                                                                                                                      (values
                                                                                                                        g$lhs*$9220$bmrAn
                                                                                                                        g$rhs*$9219$bmrAn
                                                                                                                        (list->vector
                                                                                                                          g$x*$9218$bmrAn))))
                                                                                                                   g$x*$9217$bmrAn
                                                                                                                   g$rhs*$9216$bmrAn
                                                                                                                   g$lhs*$9215$bmrAn))))))
                                                                                                          g$ls/false$9210$bmrAn)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9221$bmrAn)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9222$bmrAn)
                                                                                                                (if g$ls/false$9222$bmrAn
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$9106$bmrAn)))
                                                                                                                    g$ls/false$9222$bmrAn)
                                                                                                                  (g$syntax-violation$8093$bmrAn
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9221$bmrAn))))
                                                                                                             (g$syntax-dispatch$7981$bmrAn
                                                                                                               g$t$9221$bmrAn
                                                                                                               '_))))
                                                                                                         g$t$9209$bmrAn))))
                                                                                                   (g$syntax-dispatch$7981$bmrAn
                                                                                                     g$t$9209$bmrAn
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$9187$bmrAn))))
                                                                                         (g$syntax-dispatch$7981$bmrAn
                                                                                           g$t$9187$bmrAn
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$9175$bmrAn))))
                                                                               (g$syntax-dispatch$7981$bmrAn
                                                                                 g$t$9175$bmrAn
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$9173$bmrAn))))
                                                                     (g$syntax-dispatch$7981$bmrAn
                                                                       g$t$9173$bmrAn
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$9147$bmrAn))))
                                                           (g$syntax-dispatch$7981$bmrAn
                                                             g$t$9147$bmrAn
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$9123$bmrAn))))
                                                 (g$syntax-dispatch$7981$bmrAn
                                                   g$t$9123$bmrAn
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$9121$bmrAn))))
                                       (g$syntax-dispatch$7981$bmrAn
                                         g$t$9121$bmrAn
                                         '#(scheme-id unsyntax)))))
                                   g$t$9108$bmrAn))))
                             (g$syntax-dispatch$7981$bmrAn
                               g$t$9108$bmrAn
                               '(#(scheme-id unsyntax) any)))))
                         g$p$9106$bmrAn)))))
           (case-lambda
             ((g$x$9093$bmrAn)
              ((case-lambda
                 ((g$t$9094$bmrAn)
                  ((case-lambda
                     ((g$ls/false$9095$bmrAn)
                      (if g$ls/false$9095$bmrAn
                        (apply
                          (case-lambda
                            ((g$e$9096$bmrAn)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$9092$bmrAn g$e$9096$bmrAn '0)))
                               (case-lambda
                                 ((g$lhs*$9100$bmrAn
                                    g$rhs*$9101$bmrAn
                                    g$v$9102$bmrAn)
                                  ((case-lambda
                                     ((g$v$9103$bmrAn
                                        g$rhs*$9104$bmrAn
                                        g$lhs*$9105$bmrAn)
                                      (g$bless$7944$bmrAn
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$9104$bmrAn)
                                          '()
                                          (list
                                            g$lhs*$9105$bmrAn
                                            (list 'syntax g$v$9103$bmrAn))))))
                                   g$v$9102$bmrAn
                                   g$rhs*$9101$bmrAn
                                   g$lhs*$9100$bmrAn))))))
                          g$ls/false$9095$bmrAn)
                        (g$syntax-violation$8093$bmrAn
                          '#f
                          '"invalid syntax"
                          g$t$9094$bmrAn))))
                   (g$syntax-dispatch$7981$bmrAn g$t$9094$bmrAn '(_ any)))))
               g$x$9093$bmrAn))))))))
   (g$define-struct-macro$7974$bmrAn
     g$define-struct-macro$11477$bmrAn
     (case-lambda
       ((g$stx$9223$bmrAn)
        (g$syntax-violation$8093$bmrAn
          '#f
          '"define-struct not supported"
          g$stx$9223$bmrAn))))
   (g$define-record-type-macro$7975$bmrAn
     g$define-record-type-macro$11478$bmrAn
     (case-lambda
       ((g$x$9224$bmrAn)
        (letrec* ((g$id$9225$bmrAn
                    (case-lambda
                      ((g$ctxt$9477$bmrAn . g$str*$9478$bmrAn)
                       (g$datum->syntax$8095$bmrAn
                         g$ctxt$9477$bmrAn
                         (string->symbol
                           (apply
                             string-append
                             (g$map$5063$bmrAn
                               (case-lambda
                                 ((g$x$9479$bmrAn)
                                  (if (symbol? g$x$9479$bmrAn)
                                    (symbol->string g$x$9479$bmrAn)
                                    (if (string? g$x$9479$bmrAn)
                                      g$x$9479$bmrAn
                                      (assertion-violation
                                        'define-record-type
                                        '"BUG")))))
                               g$str*$9478$bmrAn)))))))
                  (g$get-record-name$9226$bmrAn
                    (case-lambda
                      ((g$spec$9468$bmrAn)
                       ((case-lambda
                          ((g$t$9469$bmrAn)
                           ((case-lambda
                              ((g$ls/false$9470$bmrAn)
                               (if g$ls/false$9470$bmrAn
                                 (apply
                                   (case-lambda
                                     ((g$foo$9471$bmrAn
                                        g$make-foo$9472$bmrAn
                                        g$foo?$9473$bmrAn)
                                      g$foo$9471$bmrAn))
                                   g$ls/false$9470$bmrAn)
                                 ((case-lambda
                                    ((g$t$9474$bmrAn)
                                     ((case-lambda
                                        ((g$ls/false$9475$bmrAn)
                                         (if g$ls/false$9475$bmrAn
                                           (apply
                                             (case-lambda
                                               ((g$foo$9476$bmrAn)
                                                g$foo$9476$bmrAn))
                                             g$ls/false$9475$bmrAn)
                                           (g$syntax-violation$8093$bmrAn
                                             '#f
                                             '"invalid syntax"
                                             g$t$9474$bmrAn))))
                                      (g$syntax-dispatch$7981$bmrAn
                                        g$t$9474$bmrAn
                                        'any))))
                                  g$t$9469$bmrAn))))
                            (g$syntax-dispatch$7981$bmrAn
                              g$t$9469$bmrAn
                              '(any any any)))))
                        g$spec$9468$bmrAn))))
                  (g$get-record-constructor-name$9227$bmrAn
                    (case-lambda
                      ((g$spec$9458$bmrAn)
                       ((case-lambda
                          ((g$t$9459$bmrAn)
                           ((case-lambda
                              ((g$ls/false$9460$bmrAn)
                               (if g$ls/false$9460$bmrAn
                                 (apply
                                   (case-lambda
                                     ((g$foo$9461$bmrAn
                                        g$make-foo$9462$bmrAn
                                        g$foo?$9463$bmrAn)
                                      g$make-foo$9462$bmrAn))
                                   g$ls/false$9460$bmrAn)
                                 ((case-lambda
                                    ((g$t$9464$bmrAn)
                                     ((case-lambda
                                        ((g$ls/false$9465$bmrAn)
                                         (if (if g$ls/false$9465$bmrAn
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9466$bmrAn)
                                                      (g$id?$7703$bmrAn
                                                        g$foo$9466$bmrAn)))
                                                   g$ls/false$9465$bmrAn))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9467$bmrAn)
                                                (g$id$9225$bmrAn
                                                  g$foo$9467$bmrAn
                                                  '"make-"
                                                  (g$stx->datum$7714$bmrAn
                                                    g$foo$9467$bmrAn))))
                                             g$ls/false$9465$bmrAn)
                                           (g$syntax-violation$8093$bmrAn
                                             '#f
                                             '"invalid syntax"
                                             g$t$9464$bmrAn))))
                                      (g$syntax-dispatch$7981$bmrAn
                                        g$t$9464$bmrAn
                                        'any))))
                                  g$t$9459$bmrAn))))
                            (g$syntax-dispatch$7981$bmrAn
                              g$t$9459$bmrAn
                              '(any any any)))))
                        g$spec$9458$bmrAn))))
                  (g$get-record-predicate-name$9228$bmrAn
                    (case-lambda
                      ((g$spec$9448$bmrAn)
                       ((case-lambda
                          ((g$t$9449$bmrAn)
                           ((case-lambda
                              ((g$ls/false$9450$bmrAn)
                               (if g$ls/false$9450$bmrAn
                                 (apply
                                   (case-lambda
                                     ((g$foo$9451$bmrAn
                                        g$make-foo$9452$bmrAn
                                        g$foo?$9453$bmrAn)
                                      g$foo?$9453$bmrAn))
                                   g$ls/false$9450$bmrAn)
                                 ((case-lambda
                                    ((g$t$9454$bmrAn)
                                     ((case-lambda
                                        ((g$ls/false$9455$bmrAn)
                                         (if (if g$ls/false$9455$bmrAn
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9456$bmrAn)
                                                      (g$id?$7703$bmrAn
                                                        g$foo$9456$bmrAn)))
                                                   g$ls/false$9455$bmrAn))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9457$bmrAn)
                                                (g$id$9225$bmrAn
                                                  g$foo$9457$bmrAn
                                                  (g$stx->datum$7714$bmrAn
                                                    g$foo$9457$bmrAn)
                                                  '"?")))
                                             g$ls/false$9455$bmrAn)
                                           (g$syntax-violation$8093$bmrAn
                                             '#f
                                             '"invalid syntax"
                                             g$t$9454$bmrAn))))
                                      (g$syntax-dispatch$7981$bmrAn
                                        g$t$9454$bmrAn
                                        'any))))
                                  g$t$9449$bmrAn))))
                            (g$syntax-dispatch$7981$bmrAn
                              g$t$9449$bmrAn
                              '(any any any)))))
                        g$spec$9448$bmrAn))))
                  (g$get-clause$9229$bmrAn
                    (case-lambda
                      ((g$id$9439$bmrAn g$ls$9440$bmrAn)
                       ((case-lambda
                          ((g$t$9441$bmrAn)
                           ((case-lambda
                              ((g$ls/false$9442$bmrAn)
                               (if g$ls/false$9442$bmrAn
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$9442$bmrAn)
                                 ((case-lambda
                                    ((g$t$9443$bmrAn)
                                     ((case-lambda
                                        ((g$ls/false$9444$bmrAn)
                                         (if g$ls/false$9444$bmrAn
                                           (apply
                                             (case-lambda
                                               ((g$x$9445$bmrAn
                                                  g$rest$9446$bmrAn
                                                  g$ls$9447$bmrAn)
                                                (if (g$free-id=?$7707$bmrAn
                                                      (g$bless$7944$bmrAn
                                                        g$id$9439$bmrAn)
                                                      g$x$9445$bmrAn)
                                                  (cons
                                                    g$x$9445$bmrAn
                                                    g$rest$9446$bmrAn)
                                                  (g$get-clause$9229$bmrAn
                                                    g$id$9439$bmrAn
                                                    g$ls$9447$bmrAn))))
                                             g$ls/false$9444$bmrAn)
                                           (g$syntax-violation$8093$bmrAn
                                             '#f
                                             '"invalid syntax"
                                             g$t$9443$bmrAn))))
                                      (g$syntax-dispatch$7981$bmrAn
                                        g$t$9443$bmrAn
                                        '((any . any) . any)))))
                                  g$t$9441$bmrAn))))
                            (g$syntax-dispatch$7981$bmrAn g$t$9441$bmrAn '()))))
                        g$ls$9440$bmrAn))))
                  (g$foo-rtd-code$9230$bmrAn
                    (case-lambda
                      ((g$name$9398$bmrAn
                         g$clause*$9399$bmrAn
                         g$parent-rtd-code$9400$bmrAn)
                       (letrec* ((g$convert-field-spec*$9401$bmrAn
                                   (case-lambda
                                     ((g$ls$9426$bmrAn)
                                      (list->vector
                                        (g$map$5063$bmrAn
                                          (case-lambda
                                            ((g$x$9427$bmrAn)
                                             ((case-lambda
                                                ((g$t$9428$bmrAn)
                                                 ((case-lambda
                                                    ((g$ls/false$9429$bmrAn)
                                                     (if g$ls/false$9429$bmrAn
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$9430$bmrAn
                                                              g$rest$9431$bmrAn)
                                                            (list
                                                              'mutable
                                                              g$name$9430$bmrAn)))
                                                         g$ls/false$9429$bmrAn)
                                                       ((case-lambda
                                                          ((g$t$9432$bmrAn)
                                                           ((case-lambda
                                                              ((g$ls/false$9433$bmrAn)
                                                               (if g$ls/false$9433$bmrAn
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$9434$bmrAn
                                                                        g$rest$9435$bmrAn)
                                                                      (list
                                                                        'immutable
                                                                        g$name$9434$bmrAn)))
                                                                   g$ls/false$9433$bmrAn)
                                                                 ((case-lambda
                                                                    ((g$t$9436$bmrAn)
                                                                     ((case-lambda
                                                                        ((g$ls/false$9437$bmrAn)
                                                                         (if g$ls/false$9437$bmrAn
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$9438$bmrAn)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$9438$bmrAn)))
                                                                             g$ls/false$9437$bmrAn)
                                                                           (g$syntax-violation$8093$bmrAn
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$9436$bmrAn))))
                                                                      (g$syntax-dispatch$7981$bmrAn
                                                                        g$t$9436$bmrAn
                                                                        'any))))
                                                                  g$t$9432$bmrAn))))
                                                            (g$syntax-dispatch$7981$bmrAn
                                                              g$t$9432$bmrAn
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$9428$bmrAn))))
                                                  (g$syntax-dispatch$7981$bmrAn
                                                    g$t$9428$bmrAn
                                                    '(#(scheme-id mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$9427$bmrAn)))
                                          g$ls$9426$bmrAn))))))
                         ((case-lambda
                            ((g$uid-code$9402$bmrAn
                               g$sealed?$9403$bmrAn
                               g$opaque?$9404$bmrAn
                               g$fields$9405$bmrAn)
                             (g$bless$7944$bmrAn
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$9398$bmrAn)
                                 g$parent-rtd-code$9400$bmrAn
                                 g$uid-code$9402$bmrAn
                                 g$sealed?$9403$bmrAn
                                 g$opaque?$9404$bmrAn
                                 g$fields$9405$bmrAn))))
                          ((case-lambda
                             ((g$t$9406$bmrAn)
                              ((case-lambda
                                 ((g$ls/false$9407$bmrAn)
                                  (if g$ls/false$9407$bmrAn
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$9407$bmrAn)
                                    ((case-lambda
                                       ((g$t$9408$bmrAn)
                                        ((case-lambda
                                           ((g$ls/false$9409$bmrAn)
                                            (if g$ls/false$9409$bmrAn
                                              (apply
                                                (case-lambda
                                                  ((g$uid$9410$bmrAn)
                                                   (list
                                                     'quote
                                                     g$uid$9410$bmrAn)))
                                                g$ls/false$9409$bmrAn)
                                              ((case-lambda
                                                 ((g$t$9411$bmrAn)
                                                  ((case-lambda
                                                     ((g$ls/false$9412$bmrAn)
                                                      (if g$ls/false$9412$bmrAn
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$9412$bmrAn)
                                                        (g$syntax-violation$8093$bmrAn
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$9411$bmrAn))))
                                                   (g$syntax-dispatch$7981$bmrAn
                                                     g$t$9411$bmrAn
                                                     '_))))
                                               g$t$9408$bmrAn))))
                                         (g$syntax-dispatch$7981$bmrAn
                                           g$t$9408$bmrAn
                                           '(_ any)))))
                                     g$t$9406$bmrAn))))
                               (g$syntax-dispatch$7981$bmrAn
                                 g$t$9406$bmrAn
                                 '(_)))))
                           (g$get-clause$9229$bmrAn
                             'nongenerative
                             g$clause*$9399$bmrAn))
                          ((case-lambda
                             ((g$t$9413$bmrAn)
                              ((case-lambda
                                 ((g$ls/false$9414$bmrAn)
                                  (if g$ls/false$9414$bmrAn
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9414$bmrAn)
                                    ((case-lambda
                                       ((g$t$9415$bmrAn)
                                        ((case-lambda
                                           ((g$ls/false$9416$bmrAn)
                                            (if g$ls/false$9416$bmrAn
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9416$bmrAn)
                                              (g$syntax-violation$8093$bmrAn
                                                '#f
                                                '"invalid syntax"
                                                g$t$9415$bmrAn))))
                                         (g$syntax-dispatch$7981$bmrAn
                                           g$t$9415$bmrAn
                                           '_))))
                                     g$t$9413$bmrAn))))
                               (g$syntax-dispatch$7981$bmrAn
                                 g$t$9413$bmrAn
                                 '(_ #(atom #t))))))
                           (g$get-clause$9229$bmrAn
                             'sealed
                             g$clause*$9399$bmrAn))
                          ((case-lambda
                             ((g$t$9417$bmrAn)
                              ((case-lambda
                                 ((g$ls/false$9418$bmrAn)
                                  (if g$ls/false$9418$bmrAn
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9418$bmrAn)
                                    ((case-lambda
                                       ((g$t$9419$bmrAn)
                                        ((case-lambda
                                           ((g$ls/false$9420$bmrAn)
                                            (if g$ls/false$9420$bmrAn
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9420$bmrAn)
                                              (g$syntax-violation$8093$bmrAn
                                                '#f
                                                '"invalid syntax"
                                                g$t$9419$bmrAn))))
                                         (g$syntax-dispatch$7981$bmrAn
                                           g$t$9419$bmrAn
                                           '_))))
                                     g$t$9417$bmrAn))))
                               (g$syntax-dispatch$7981$bmrAn
                                 g$t$9417$bmrAn
                                 '(_ #(atom #t))))))
                           (g$get-clause$9229$bmrAn
                             'opaque
                             g$clause*$9399$bmrAn))
                          ((case-lambda
                             ((g$t$9421$bmrAn)
                              ((case-lambda
                                 ((g$ls/false$9422$bmrAn)
                                  (if g$ls/false$9422$bmrAn
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$9423$bmrAn)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$9401$bmrAn
                                             g$field-spec*$9423$bmrAn))))
                                      g$ls/false$9422$bmrAn)
                                    ((case-lambda
                                       ((g$t$9424$bmrAn)
                                        ((case-lambda
                                           ((g$ls/false$9425$bmrAn)
                                            (if g$ls/false$9425$bmrAn
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$9425$bmrAn)
                                              (g$syntax-violation$8093$bmrAn
                                                '#f
                                                '"invalid syntax"
                                                g$t$9424$bmrAn))))
                                         (g$syntax-dispatch$7981$bmrAn
                                           g$t$9424$bmrAn
                                           '_))))
                                     g$t$9421$bmrAn))))
                               (g$syntax-dispatch$7981$bmrAn
                                 g$t$9421$bmrAn
                                 '(_ . each-any)))))
                           (g$get-clause$9229$bmrAn
                             'fields
                             g$clause*$9399$bmrAn)))))))
                  (g$parent-rtd-code$9231$bmrAn
                    (case-lambda
                      ((g$clause*$9386$bmrAn)
                       ((case-lambda
                          ((g$t$9387$bmrAn)
                           ((case-lambda
                              ((g$ls/false$9388$bmrAn)
                               (if g$ls/false$9388$bmrAn
                                 (apply
                                   (case-lambda
                                     ((g$name$9389$bmrAn)
                                      (list
                                        'record-type-descriptor
                                        g$name$9389$bmrAn)))
                                   g$ls/false$9388$bmrAn)
                                 ((case-lambda
                                    ((g$t$9390$bmrAn)
                                     ((case-lambda
                                        ((g$ls/false$9391$bmrAn)
                                         (if g$ls/false$9391$bmrAn
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9392$bmrAn)
                                                    ((case-lambda
                                                       ((g$ls/false$9393$bmrAn)
                                                        (if g$ls/false$9393$bmrAn
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9394$bmrAn
                                                                 g$rcd$9395$bmrAn)
                                                               g$rtd$9394$bmrAn))
                                                            g$ls/false$9393$bmrAn)
                                                          ((case-lambda
                                                             ((g$t$9396$bmrAn)
                                                              ((case-lambda
                                                                 ((g$ls/false$9397$bmrAn)
                                                                  (if g$ls/false$9397$bmrAn
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9397$bmrAn)
                                                                    (g$syntax-violation$8093$bmrAn
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9396$bmrAn))))
                                                               (g$syntax-dispatch$7981$bmrAn
                                                                 g$t$9396$bmrAn
                                                                 '#(atom #f)))))
                                                           g$t$9392$bmrAn))))
                                                     (g$syntax-dispatch$7981$bmrAn
                                                       g$t$9392$bmrAn
                                                       '(_ any any)))))
                                                 (g$get-clause$9229$bmrAn
                                                   'parent-rtd
                                                   g$clause*$9386$bmrAn))))
                                             g$ls/false$9391$bmrAn)
                                           (g$syntax-violation$8093$bmrAn
                                             '#f
                                             '"invalid syntax"
                                             g$t$9390$bmrAn))))
                                      (g$syntax-dispatch$7981$bmrAn
                                        g$t$9390$bmrAn
                                        '#(atom #f)))))
                                  g$t$9387$bmrAn))))
                            (g$syntax-dispatch$7981$bmrAn
                              g$t$9387$bmrAn
                              '(_ any)))))
                        (g$get-clause$9229$bmrAn
                          'parent
                          g$clause*$9386$bmrAn)))))
                  (g$parent-rcd-code$9232$bmrAn
                    (case-lambda
                      ((g$clause*$9374$bmrAn)
                       ((case-lambda
                          ((g$t$9375$bmrAn)
                           ((case-lambda
                              ((g$ls/false$9376$bmrAn)
                               (if g$ls/false$9376$bmrAn
                                 (apply
                                   (case-lambda
                                     ((g$name$9377$bmrAn)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$9377$bmrAn)))
                                   g$ls/false$9376$bmrAn)
                                 ((case-lambda
                                    ((g$t$9378$bmrAn)
                                     ((case-lambda
                                        ((g$ls/false$9379$bmrAn)
                                         (if g$ls/false$9379$bmrAn
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9380$bmrAn)
                                                    ((case-lambda
                                                       ((g$ls/false$9381$bmrAn)
                                                        (if g$ls/false$9381$bmrAn
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9382$bmrAn
                                                                 g$rcd$9383$bmrAn)
                                                               g$rcd$9383$bmrAn))
                                                            g$ls/false$9381$bmrAn)
                                                          ((case-lambda
                                                             ((g$t$9384$bmrAn)
                                                              ((case-lambda
                                                                 ((g$ls/false$9385$bmrAn)
                                                                  (if g$ls/false$9385$bmrAn
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9385$bmrAn)
                                                                    (g$syntax-violation$8093$bmrAn
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9384$bmrAn))))
                                                               (g$syntax-dispatch$7981$bmrAn
                                                                 g$t$9384$bmrAn
                                                                 '#(atom #f)))))
                                                           g$t$9380$bmrAn))))
                                                     (g$syntax-dispatch$7981$bmrAn
                                                       g$t$9380$bmrAn
                                                       '(_ any any)))))
                                                 (g$get-clause$9229$bmrAn
                                                   'parent-rtd
                                                   g$clause*$9374$bmrAn))))
                                             g$ls/false$9379$bmrAn)
                                           (g$syntax-violation$8093$bmrAn
                                             '#f
                                             '"invalid syntax"
                                             g$t$9378$bmrAn))))
                                      (g$syntax-dispatch$7981$bmrAn
                                        g$t$9378$bmrAn
                                        '#(atom #f)))))
                                  g$t$9375$bmrAn))))
                            (g$syntax-dispatch$7981$bmrAn
                              g$t$9375$bmrAn
                              '(_ any)))))
                        (g$get-clause$9229$bmrAn
                          'parent
                          g$clause*$9374$bmrAn)))))
                  (g$foo-rcd-code$9233$bmrAn
                    (case-lambda
                      ((g$clause*$9370$bmrAn
                         g$foo-rtd$9371$bmrAn
                         g$protocol$9372$bmrAn
                         g$parent-rcd-code$9373$bmrAn)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$9371$bmrAn
                         g$parent-rcd-code$9373$bmrAn
                         g$protocol$9372$bmrAn))))
                  (g$get-protocol-code$9234$bmrAn
                    (case-lambda
                      ((g$clause*$9364$bmrAn)
                       ((case-lambda
                          ((g$t$9365$bmrAn)
                           ((case-lambda
                              ((g$ls/false$9366$bmrAn)
                               (if g$ls/false$9366$bmrAn
                                 (apply
                                   (case-lambda
                                     ((g$expr$9367$bmrAn) g$expr$9367$bmrAn))
                                   g$ls/false$9366$bmrAn)
                                 ((case-lambda
                                    ((g$t$9368$bmrAn)
                                     ((case-lambda
                                        ((g$ls/false$9369$bmrAn)
                                         (if g$ls/false$9369$bmrAn
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$9369$bmrAn)
                                           (g$syntax-violation$8093$bmrAn
                                             '#f
                                             '"invalid syntax"
                                             g$t$9368$bmrAn))))
                                      (g$syntax-dispatch$7981$bmrAn
                                        g$t$9368$bmrAn
                                        '_))))
                                  g$t$9365$bmrAn))))
                            (g$syntax-dispatch$7981$bmrAn
                              g$t$9365$bmrAn
                              '(_ any)))))
                        (g$get-clause$9229$bmrAn
                          'protocol
                          g$clause*$9364$bmrAn)))))
                  (g$get-fields$9235$bmrAn
                    (case-lambda
                      ((g$clause*$9355$bmrAn)
                       ((case-lambda
                          ((g$t$9356$bmrAn)
                           ((case-lambda
                              ((g$ls/false$9357$bmrAn)
                               (if g$ls/false$9357$bmrAn
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$9357$bmrAn)
                                 ((case-lambda
                                    ((g$t$9358$bmrAn)
                                     ((case-lambda
                                        ((g$ls/false$9359$bmrAn)
                                         (if g$ls/false$9359$bmrAn
                                           (apply
                                             (case-lambda
                                               ((g$f*$9360$bmrAn)
                                                g$f*$9360$bmrAn))
                                             g$ls/false$9359$bmrAn)
                                           ((case-lambda
                                              ((g$t$9361$bmrAn)
                                               ((case-lambda
                                                  ((g$ls/false$9362$bmrAn)
                                                   (if g$ls/false$9362$bmrAn
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$9363$bmrAn)
                                                          (g$get-fields$9235$bmrAn
                                                            g$rest$9363$bmrAn)))
                                                       g$ls/false$9362$bmrAn)
                                                     (g$syntax-violation$8093$bmrAn
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9361$bmrAn))))
                                                (g$syntax-dispatch$7981$bmrAn
                                                  g$t$9361$bmrAn
                                                  '(_ . any)))))
                                            g$t$9358$bmrAn))))
                                      (g$syntax-dispatch$7981$bmrAn
                                        g$t$9358$bmrAn
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$9356$bmrAn))))
                            (g$syntax-dispatch$7981$bmrAn g$t$9356$bmrAn '()))))
                        g$clause*$9355$bmrAn))))
                  (g$get-mutator-indices$9236$bmrAn
                    (case-lambda
                      ((g$fields$9343$bmrAn)
                       ((letrec ((g$f$9344$bmrAn
                                   (case-lambda
                                     ((g$fields$9345$bmrAn g$i$9346$bmrAn)
                                      ((case-lambda
                                         ((g$t$9347$bmrAn)
                                          ((case-lambda
                                             ((g$ls/false$9348$bmrAn)
                                              (if g$ls/false$9348$bmrAn
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$9348$bmrAn)
                                                ((case-lambda
                                                   ((g$t$9349$bmrAn)
                                                    ((case-lambda
                                                       ((g$ls/false$9350$bmrAn)
                                                        (if g$ls/false$9350$bmrAn
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$9351$bmrAn)
                                                               (cons
                                                                 g$i$9346$bmrAn
                                                                 (g$f$9344$bmrAn
                                                                   g$rest$9351$bmrAn
                                                                   (+ g$i$9346$bmrAn
                                                                      '1)))))
                                                            g$ls/false$9350$bmrAn)
                                                          ((case-lambda
                                                             ((g$t$9352$bmrAn)
                                                              ((case-lambda
                                                                 ((g$ls/false$9353$bmrAn)
                                                                  (if g$ls/false$9353$bmrAn
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$9354$bmrAn)
                                                                         (g$f$9344$bmrAn
                                                                           g$rest$9354$bmrAn
                                                                           (+ g$i$9346$bmrAn
                                                                              '1))))
                                                                      g$ls/false$9353$bmrAn)
                                                                    (g$syntax-violation$8093$bmrAn
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9352$bmrAn))))
                                                               (g$syntax-dispatch$7981$bmrAn
                                                                 g$t$9352$bmrAn
                                                                 '(_ . any)))))
                                                           g$t$9349$bmrAn))))
                                                     (g$syntax-dispatch$7981$bmrAn
                                                       g$t$9349$bmrAn
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$9347$bmrAn))))
                                           (g$syntax-dispatch$7981$bmrAn
                                             g$t$9347$bmrAn
                                             '()))))
                                       g$fields$9345$bmrAn)))))
                          g$f$9344$bmrAn)
                        g$fields$9343$bmrAn
                        '0))))
                  (g$get-mutators$9237$bmrAn
                    (case-lambda
                      ((g$foo$9322$bmrAn g$fields$9323$bmrAn)
                       (letrec* ((g$gen-name$9324$bmrAn
                                   (case-lambda
                                     ((g$x$9342$bmrAn)
                                      (g$datum->syntax$8095$bmrAn
                                        g$foo$9322$bmrAn
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$8096$bmrAn
                                                g$foo$9322$bmrAn))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$8096$bmrAn
                                                g$x$9342$bmrAn))
                                            '"-set!")))))))
                         ((letrec ((g$f$9325$bmrAn
                                     (case-lambda
                                       ((g$fields$9326$bmrAn)
                                        ((case-lambda
                                           ((g$t$9327$bmrAn)
                                            ((case-lambda
                                               ((g$ls/false$9328$bmrAn)
                                                (if g$ls/false$9328$bmrAn
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$9328$bmrAn)
                                                  ((case-lambda
                                                     ((g$t$9329$bmrAn)
                                                      ((case-lambda
                                                         ((g$ls/false$9330$bmrAn)
                                                          (if g$ls/false$9330$bmrAn
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$9331$bmrAn
                                                                   g$accessor$9332$bmrAn
                                                                   g$mutator$9333$bmrAn
                                                                   g$rest$9334$bmrAn)
                                                                 (cons
                                                                   g$mutator$9333$bmrAn
                                                                   (g$f$9325$bmrAn
                                                                     g$rest$9334$bmrAn))))
                                                              g$ls/false$9330$bmrAn)
                                                            ((case-lambda
                                                               ((g$t$9335$bmrAn)
                                                                ((case-lambda
                                                                   ((g$ls/false$9336$bmrAn)
                                                                    (if g$ls/false$9336$bmrAn
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$9337$bmrAn
                                                                             g$rest$9338$bmrAn)
                                                                           (cons
                                                                             (g$gen-name$9324$bmrAn
                                                                               g$name$9337$bmrAn)
                                                                             (g$f$9325$bmrAn
                                                                               g$rest$9338$bmrAn))))
                                                                        g$ls/false$9336$bmrAn)
                                                                      ((case-lambda
                                                                         ((g$t$9339$bmrAn)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9340$bmrAn)
                                                                              (if g$ls/false$9340$bmrAn
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$9341$bmrAn)
                                                                                     (g$f$9325$bmrAn
                                                                                       g$rest$9341$bmrAn)))
                                                                                  g$ls/false$9340$bmrAn)
                                                                                (g$syntax-violation$8093$bmrAn
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$9339$bmrAn))))
                                                                           (g$syntax-dispatch$7981$bmrAn
                                                                             g$t$9339$bmrAn
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$9335$bmrAn))))
                                                                 (g$syntax-dispatch$7981$bmrAn
                                                                   g$t$9335$bmrAn
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$9329$bmrAn))))
                                                       (g$syntax-dispatch$7981$bmrAn
                                                         g$t$9329$bmrAn
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$9327$bmrAn))))
                                             (g$syntax-dispatch$7981$bmrAn
                                               g$t$9327$bmrAn
                                               '()))))
                                         g$fields$9326$bmrAn)))))
                            g$f$9325$bmrAn)
                          g$fields$9323$bmrAn)))))
                  (g$get-accessors$9238$bmrAn
                    (case-lambda
                      ((g$foo$9288$bmrAn g$fields$9289$bmrAn)
                       (letrec* ((g$gen-name$9290$bmrAn
                                   (case-lambda
                                     ((g$x$9321$bmrAn)
                                      (g$datum->syntax$8095$bmrAn
                                        g$foo$9288$bmrAn
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$8096$bmrAn
                                                g$foo$9288$bmrAn))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$8096$bmrAn
                                                g$x$9321$bmrAn)))))))))
                         (g$map$5063$bmrAn
                           (case-lambda
                             ((g$field$9291$bmrAn)
                              ((case-lambda
                                 ((g$t$9292$bmrAn)
                                  ((case-lambda
                                     ((g$ls/false$9293$bmrAn)
                                      (if (if g$ls/false$9293$bmrAn
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$9294$bmrAn
                                                     g$accessor$9295$bmrAn
                                                     g$mutator$9296$bmrAn)
                                                   (g$id?$7703$bmrAn
                                                     g$accessor$9295$bmrAn)))
                                                g$ls/false$9293$bmrAn))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$9297$bmrAn
                                               g$accessor$9298$bmrAn
                                               g$mutator$9299$bmrAn)
                                             g$accessor$9298$bmrAn))
                                          g$ls/false$9293$bmrAn)
                                        ((case-lambda
                                           ((g$t$9300$bmrAn)
                                            ((case-lambda
                                               ((g$ls/false$9301$bmrAn)
                                                (if (if g$ls/false$9301$bmrAn
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$9302$bmrAn
                                                               g$accessor$9303$bmrAn)
                                                             (g$id?$7703$bmrAn
                                                               g$accessor$9303$bmrAn)))
                                                          g$ls/false$9301$bmrAn))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$9304$bmrAn
                                                         g$accessor$9305$bmrAn)
                                                       g$accessor$9305$bmrAn))
                                                    g$ls/false$9301$bmrAn)
                                                  ((case-lambda
                                                     ((g$t$9306$bmrAn)
                                                      ((case-lambda
                                                         ((g$ls/false$9307$bmrAn)
                                                          (if (if g$ls/false$9307$bmrAn
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$9308$bmrAn)
                                                                       (g$id?$7703$bmrAn
                                                                         g$name$9308$bmrAn)))
                                                                    g$ls/false$9307$bmrAn))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$9309$bmrAn)
                                                                 (g$gen-name$9290$bmrAn
                                                                   g$name$9309$bmrAn)))
                                                              g$ls/false$9307$bmrAn)
                                                            ((case-lambda
                                                               ((g$t$9310$bmrAn)
                                                                ((case-lambda
                                                                   ((g$ls/false$9311$bmrAn)
                                                                    (if (if g$ls/false$9311$bmrAn
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$9312$bmrAn)
                                                                                 (g$id?$7703$bmrAn
                                                                                   g$name$9312$bmrAn)))
                                                                              g$ls/false$9311$bmrAn))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$9313$bmrAn)
                                                                           (g$gen-name$9290$bmrAn
                                                                             g$name$9313$bmrAn)))
                                                                        g$ls/false$9311$bmrAn)
                                                                      ((case-lambda
                                                                         ((g$t$9314$bmrAn)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9315$bmrAn)
                                                                              (if (if g$ls/false$9315$bmrAn
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$9316$bmrAn)
                                                                                           (g$id?$7703$bmrAn
                                                                                             g$name$9316$bmrAn)))
                                                                                        g$ls/false$9315$bmrAn))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$9317$bmrAn)
                                                                                     (g$gen-name$9290$bmrAn
                                                                                       g$name$9317$bmrAn)))
                                                                                  g$ls/false$9315$bmrAn)
                                                                                ((case-lambda
                                                                                   ((g$t$9318$bmrAn)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$9319$bmrAn)
                                                                                        (if g$ls/false$9319$bmrAn
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$9320$bmrAn)
                                                                                               (g$syntax-violation$8093$bmrAn
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$9291$bmrAn)))
                                                                                            g$ls/false$9319$bmrAn)
                                                                                          (g$syntax-violation$8093$bmrAn
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$9318$bmrAn))))
                                                                                     (g$syntax-dispatch$7981$bmrAn
                                                                                       g$t$9318$bmrAn
                                                                                       'any))))
                                                                                 g$t$9314$bmrAn))))
                                                                           (g$syntax-dispatch$7981$bmrAn
                                                                             g$t$9314$bmrAn
                                                                             'any))))
                                                                       g$t$9310$bmrAn))))
                                                                 (g$syntax-dispatch$7981$bmrAn
                                                                   g$t$9310$bmrAn
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$9306$bmrAn))))
                                                       (g$syntax-dispatch$7981$bmrAn
                                                         g$t$9306$bmrAn
                                                         '(#(scheme-id mutable)
                                                           any)))))
                                                   g$t$9300$bmrAn))))
                                             (g$syntax-dispatch$7981$bmrAn
                                               g$t$9300$bmrAn
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$9292$bmrAn))))
                                   (g$syntax-dispatch$7981$bmrAn
                                     g$t$9292$bmrAn
                                     '(#(scheme-id mutable) any any any)))))
                               g$field$9291$bmrAn)))
                           g$fields$9289$bmrAn)))))
                  (g$enumerate$9239$bmrAn
                    (case-lambda
                      ((g$ls$9284$bmrAn)
                       ((letrec ((g$f$9285$bmrAn
                                   (case-lambda
                                     ((g$ls$9286$bmrAn g$i$9287$bmrAn)
                                      (if (null? g$ls$9286$bmrAn)
                                        '()
                                        (cons
                                          g$i$9287$bmrAn
                                          (g$f$9285$bmrAn
                                            (cdr g$ls$9286$bmrAn)
                                            (+ g$i$9287$bmrAn '1))))))))
                          g$f$9285$bmrAn)
                        g$ls$9284$bmrAn
                        '0))))
                  (g$do-define-record$9240$bmrAn
                    (case-lambda
                      ((g$namespec$9264$bmrAn g$clause*$9265$bmrAn)
                       ((case-lambda
                          ((g$foo$9266$bmrAn)
                           ((case-lambda
                              ((g$foo-rtd$9267$bmrAn)
                               ((case-lambda
                                  ((g$foo-rcd$9268$bmrAn)
                                   ((case-lambda
                                      ((g$protocol$9269$bmrAn)
                                       ((case-lambda
                                          ((g$make-foo$9270$bmrAn)
                                           ((case-lambda
                                              ((g$fields$9271$bmrAn)
                                               ((case-lambda
                                                  ((g$idx*$9272$bmrAn)
                                                   ((case-lambda
                                                      ((g$foo-x*$9273$bmrAn)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$9274$bmrAn)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$9275$bmrAn)
                                                               ((case-lambda
                                                                  ((g$foo?$9276$bmrAn)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$9277$bmrAn)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$9278$bmrAn)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$9279$bmrAn)
                                                                               (g$bless$7944$bmrAn
                                                                                 (cons
                                                                                   'begin
                                                                                   (cons
                                                                                     (list
                                                                                       'define
                                                                                       g$foo-rtd$9267$bmrAn
                                                                                       g$foo-rtd-code$9277$bmrAn)
                                                                                     (cons
                                                                                       (list
                                                                                         'define
                                                                                         g$protocol$9269$bmrAn
                                                                                         g$protocol-code$9279$bmrAn)
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rcd$9268$bmrAn
                                                                                           g$foo-rcd-code$9278$bmrAn)
                                                                                         (cons
                                                                                           (list
                                                                                             'define-syntax
                                                                                             g$foo$9266$bmrAn
                                                                                             (list
                                                                                               'list
                                                                                               ''$rtd
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rtd$9267$bmrAn)
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rcd$9268$bmrAn)))
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo?$9276$bmrAn
                                                                                               (list
                                                                                                 'record-predicate
                                                                                                 g$foo-rtd$9267$bmrAn))
                                                                                             (cons
                                                                                               (list
                                                                                                 'define
                                                                                                 g$make-foo$9270$bmrAn
                                                                                                 (list
                                                                                                   'record-constructor
                                                                                                   g$foo-rcd$9268$bmrAn))
                                                                                               (append
                                                                                                 (g$map$5063$bmrAn
                                                                                                   (case-lambda
                                                                                                     ((g$foo-x$9280$bmrAn
                                                                                                        g$idx$9281$bmrAn)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$foo-x$9280$bmrAn
                                                                                                        (list
                                                                                                          'record-accessor
                                                                                                          g$foo-rtd$9267$bmrAn
                                                                                                          g$idx$9281$bmrAn))))
                                                                                                   g$foo-x*$9273$bmrAn
                                                                                                   g$idx*$9272$bmrAn)
                                                                                                 (g$map$5063$bmrAn
                                                                                                   (case-lambda
                                                                                                     ((g$set-foo-x!$9282$bmrAn
                                                                                                        g$idx$9283$bmrAn)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$set-foo-x!$9282$bmrAn
                                                                                                        (list
                                                                                                          'record-mutator
                                                                                                          g$foo-rtd$9267$bmrAn
                                                                                                          g$idx$9283$bmrAn))))
                                                                                                   g$set-foo-x!*$9274$bmrAn
                                                                                                   g$set-foo-idx*$9275$bmrAn))))))))))))
                                                                            (g$get-protocol-code$9234$bmrAn
                                                                              g$clause*$9265$bmrAn))))
                                                                        (g$foo-rcd-code$9233$bmrAn
                                                                          g$clause*$9265$bmrAn
                                                                          g$foo-rtd$9267$bmrAn
                                                                          g$protocol$9269$bmrAn
                                                                          (g$parent-rcd-code$9232$bmrAn
                                                                            g$clause*$9265$bmrAn)))))
                                                                    (g$foo-rtd-code$9230$bmrAn
                                                                      g$foo$9266$bmrAn
                                                                      g$clause*$9265$bmrAn
                                                                      (g$parent-rtd-code$9231$bmrAn
                                                                        g$clause*$9265$bmrAn)))))
                                                                (g$get-record-predicate-name$9228$bmrAn
                                                                  g$namespec$9264$bmrAn))))
                                                            (g$get-mutator-indices$9236$bmrAn
                                                              g$fields$9271$bmrAn))))
                                                        (g$get-mutators$9237$bmrAn
                                                          g$foo$9266$bmrAn
                                                          g$fields$9271$bmrAn))))
                                                    (g$get-accessors$9238$bmrAn
                                                      g$foo$9266$bmrAn
                                                      g$fields$9271$bmrAn))))
                                                (g$enumerate$9239$bmrAn
                                                  g$fields$9271$bmrAn))))
                                            (g$get-fields$9235$bmrAn
                                              g$clause*$9265$bmrAn))))
                                        (g$get-record-constructor-name$9227$bmrAn
                                          g$namespec$9264$bmrAn))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$9226$bmrAn g$namespec$9264$bmrAn)))))
                  (g$verify-clauses$9241$bmrAn
                    (case-lambda
                      ((g$x$9246$bmrAn g$cls*$9247$bmrAn)
                       (letrec* ((g$valid-kwds$9248$bmrAn
                                   (g$map$5063$bmrAn
                                     g$bless$7944$bmrAn
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$9249$bmrAn
                                   (case-lambda
                                     ((g$x$9261$bmrAn g$ls$9262$bmrAn)
                                      (if (pair? g$ls$9262$bmrAn)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$9263$bmrAn)
                                              (if g$t$9263$bmrAn
                                                g$t$9263$bmrAn
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$9249$bmrAn
                                                    g$x$9261$bmrAn
                                                    (cdr g$ls$9262$bmrAn))))))
                                           (g$free-id=?$7707$bmrAn
                                             g$x$9261$bmrAn
                                             (car g$ls$9262$bmrAn))))
                                        '#f)))))
                         ((letrec ((g$f$9250$bmrAn
                                     (case-lambda
                                       ((g$cls*$9251$bmrAn g$seen*$9252$bmrAn)
                                        (if (not (null? g$cls*$9251$bmrAn))
                                          ((case-lambda
                                             ((g$t$9253$bmrAn)
                                              ((case-lambda
                                                 ((g$ls/false$9254$bmrAn)
                                                  (if g$ls/false$9254$bmrAn
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$9255$bmrAn
                                                           g$rest$9256$bmrAn)
                                                         (if ((case-lambda
                                                                ((g$t$9257$bmrAn)
                                                                 (if g$t$9257$bmrAn
                                                                   g$t$9257$bmrAn
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$9249$bmrAn
                                                                            g$kwd$9255$bmrAn
                                                                            g$valid-kwds$9248$bmrAn))))))
                                                              (not (g$id?$7703$bmrAn
                                                                     g$kwd$9255$bmrAn)))
                                                           (g$syntax-violation$8093$bmrAn
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$9255$bmrAn)
                                                           (if (g$bound-id-member?$7710$bmrAn
                                                                 g$kwd$9255$bmrAn
                                                                 g$seen*$9252$bmrAn)
                                                             (g$syntax-violation$8093$bmrAn
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$9246$bmrAn
                                                               g$kwd$9255$bmrAn)
                                                             (g$f$9250$bmrAn
                                                               (cdr g$cls*$9251$bmrAn)
                                                               (cons
                                                                 g$kwd$9255$bmrAn
                                                                 g$seen*$9252$bmrAn))))))
                                                      g$ls/false$9254$bmrAn)
                                                    ((case-lambda
                                                       ((g$t$9258$bmrAn)
                                                        ((case-lambda
                                                           ((g$ls/false$9259$bmrAn)
                                                            (if g$ls/false$9259$bmrAn
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$9260$bmrAn)
                                                                   (g$syntax-violation$8093$bmrAn
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$9260$bmrAn)))
                                                                g$ls/false$9259$bmrAn)
                                                              (g$syntax-violation$8093$bmrAn
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9258$bmrAn))))
                                                         (g$syntax-dispatch$7981$bmrAn
                                                           g$t$9258$bmrAn
                                                           'any))))
                                                     g$t$9253$bmrAn))))
                                               (g$syntax-dispatch$7981$bmrAn
                                                 g$t$9253$bmrAn
                                                 '(any . any)))))
                                           (car g$cls*$9251$bmrAn))
                                          (void))))))
                            g$f$9250$bmrAn)
                          g$cls*$9247$bmrAn
                          '()))))))
          ((case-lambda
             ((g$t$9242$bmrAn)
              ((case-lambda
                 ((g$ls/false$9243$bmrAn)
                  (if g$ls/false$9243$bmrAn
                    (apply
                      (case-lambda
                        ((g$namespec$9244$bmrAn g$clause*$9245$bmrAn)
                         (begin
                           (g$verify-clauses$9241$bmrAn
                             g$x$9224$bmrAn
                             g$clause*$9245$bmrAn)
                           (g$do-define-record$9240$bmrAn
                             g$namespec$9244$bmrAn
                             g$clause*$9245$bmrAn))))
                      g$ls/false$9243$bmrAn)
                    (g$syntax-violation$8093$bmrAn
                      '#f
                      '"invalid syntax"
                      g$t$9242$bmrAn))))
               (g$syntax-dispatch$7981$bmrAn
                 g$t$9242$bmrAn
                 '(_ any . each-any)))))
           g$x$9224$bmrAn)))))
   (g$define-condition-type-macro$7976$bmrAn
     g$define-condition-type-macro$11479$bmrAn
     (case-lambda
       ((g$x$9480$bmrAn)
        (letrec* ((g$mkname$9481$bmrAn
                    (case-lambda
                      ((g$name$9504$bmrAn g$suffix$9505$bmrAn)
                       (g$datum->syntax$8095$bmrAn
                         g$name$9504$bmrAn
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$8096$bmrAn g$name$9504$bmrAn))
                             g$suffix$9505$bmrAn)))))))
          ((case-lambda
             ((g$t$9482$bmrAn)
              ((case-lambda
                 ((g$ls/false$9483$bmrAn)
                  (if (if g$ls/false$9483$bmrAn
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9484$bmrAn
                                 g$name$9485$bmrAn
                                 g$super$9486$bmrAn
                                 g$constructor$9487$bmrAn
                                 g$predicate$9488$bmrAn
                                 g$field*$9489$bmrAn
                                 g$accessor*$9490$bmrAn)
                               (if (g$id?$7703$bmrAn g$name$9485$bmrAn)
                                 (if (g$id?$7703$bmrAn g$super$9486$bmrAn)
                                   (if (g$id?$7703$bmrAn
                                         g$constructor$9487$bmrAn)
                                     (if (g$id?$7703$bmrAn
                                           g$predicate$9488$bmrAn)
                                       (if (g$for-all$5061$bmrAn
                                             g$id?$7703$bmrAn
                                             g$field*$9489$bmrAn)
                                         (begin
                                           '#f
                                           (g$for-all$5061$bmrAn
                                             g$id?$7703$bmrAn
                                             g$accessor*$9490$bmrAn))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9483$bmrAn))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9491$bmrAn
                           g$name$9492$bmrAn
                           g$super$9493$bmrAn
                           g$constructor$9494$bmrAn
                           g$predicate$9495$bmrAn
                           g$field*$9496$bmrAn
                           g$accessor*$9497$bmrAn)
                         ((case-lambda
                            ((g$aux-accessor*$9498$bmrAn)
                             (g$bless$7944$bmrAn
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9492$bmrAn
                                         g$constructor$9494$bmrAn
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9493$bmrAn)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$5063$bmrAn
                                               (case-lambda
                                                 ((g$field$9499$bmrAn
                                                    g$aux$9500$bmrAn)
                                                  (list
                                                    'immutable
                                                    g$field$9499$bmrAn
                                                    g$aux$9500$bmrAn)))
                                               g$field*$9496$bmrAn
                                               g$aux-accessor*$9498$bmrAn))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9495$bmrAn
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9492$bmrAn)))
                                     (g$map$5063$bmrAn
                                       (case-lambda
                                         ((g$accessor$9501$bmrAn
                                            g$aux$9502$bmrAn)
                                          (list
                                            'define
                                            g$accessor$9501$bmrAn
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$9492$bmrAn)
                                              g$aux$9502$bmrAn))))
                                       g$accessor*$9497$bmrAn
                                       g$aux-accessor*$9498$bmrAn)))))))
                          (g$map$5063$bmrAn
                            (case-lambda ((g$x$9503$bmrAn) (gensym)))
                            g$accessor*$9497$bmrAn))))
                      g$ls/false$9483$bmrAn)
                    (g$syntax-violation$8093$bmrAn
                      '#f
                      '"invalid syntax"
                      g$t$9482$bmrAn))))
               (g$syntax-dispatch$7981$bmrAn
                 g$t$9482$bmrAn
                 '(any any any any any . #(each (any any)))))))
           g$x$9480$bmrAn)))))
   (g$incorrect-usage-macro$7977$bmrAn
     g$incorrect-usage-macro$11480$bmrAn
     (case-lambda
       ((g$e$9506$bmrAn)
        (g$syntax-violation$8093$bmrAn
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9506$bmrAn))))
   (g$parameterize-macro$7978$bmrAn
     g$parameterize-macro$11481$bmrAn
     (case-lambda
       ((g$e$9507$bmrAn)
        ((case-lambda
           ((g$t$9508$bmrAn)
            ((case-lambda
               ((g$ls/false$9509$bmrAn)
                (if g$ls/false$9509$bmrAn
                  (apply
                    (case-lambda
                      ((g$b$9510$bmrAn g$b*$9511$bmrAn)
                       (g$bless$7944$bmrAn
                         (cons
                           'let
                           (cons '() (cons g$b$9510$bmrAn g$b*$9511$bmrAn))))))
                    g$ls/false$9509$bmrAn)
                  ((case-lambda
                     ((g$t$9512$bmrAn)
                      ((case-lambda
                         ((g$ls/false$9513$bmrAn)
                          (if g$ls/false$9513$bmrAn
                            (apply
                              (case-lambda
                                ((g$olhs*$9514$bmrAn
                                   g$orhs*$9515$bmrAn
                                   g$b$9516$bmrAn
                                   g$b*$9517$bmrAn)
                                 ((case-lambda
                                    ((g$lhs*$9518$bmrAn g$rhs*$9519$bmrAn)
                                     (g$bless$7944$bmrAn
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$9518$bmrAn
                                             g$rhs*$9519$bmrAn)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$5063$bmrAn
                                                       (case-lambda
                                                         ((g$lhs$9520$bmrAn
                                                            g$rhs$9521$bmrAn)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$9520$bmrAn)))
                                                            (list
                                                              g$lhs$9520$bmrAn
                                                              g$rhs$9521$bmrAn)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$9521$bmrAn
                                                                '(t))))))
                                                       g$lhs*$9518$bmrAn
                                                       g$rhs*$9519$bmrAn)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$9516$bmrAn
                                                         g$b*$9517$bmrAn)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$9514$bmrAn
                                           g$orhs*$9515$bmrAn)))))
                                  (g$generate-temporaries$8083$bmrAn
                                    g$olhs*$9514$bmrAn)
                                  (g$generate-temporaries$8083$bmrAn
                                    g$orhs*$9515$bmrAn))))
                              g$ls/false$9513$bmrAn)
                            (g$syntax-violation$8093$bmrAn
                              '#f
                              '"invalid syntax"
                              g$t$9512$bmrAn))))
                       (g$syntax-dispatch$7981$bmrAn
                         g$t$9512$bmrAn
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9508$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn
               g$t$9508$bmrAn
               '(_ () any . each-any)))))
         g$e$9507$bmrAn))))
   (g$foreign-call-transformer$7979$bmrAn
     g$foreign-call-transformer$11482$bmrAn
     (case-lambda
       ((g$e$9522$bmrAn g$r$9523$bmrAn g$mr$9524$bmrAn)
        ((case-lambda
           ((g$t$9525$bmrAn)
            ((case-lambda
               ((g$ls/false$9526$bmrAn)
                (if g$ls/false$9526$bmrAn
                  (apply
                    (case-lambda
                      ((g$name$9527$bmrAn g$arg*$9528$bmrAn)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7999$bmrAn
                             g$name$9527$bmrAn
                             g$r$9523$bmrAn
                             g$mr$9524$bmrAn)
                           (g$chi-expr*$7997$bmrAn
                             g$arg*$9528$bmrAn
                             g$r$9523$bmrAn
                             g$mr$9524$bmrAn)))))
                    g$ls/false$9526$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$9525$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn
               g$t$9525$bmrAn
               '(_ any . each-any)))))
         g$e$9522$bmrAn))))
   (g$convert-pattern$7980$bmrAn
     g$convert-pattern$11483$bmrAn
     (case-lambda
       ((g$pattern$9529$bmrAn g$keys$9530$bmrAn)
        (letrec* ((g$cvt*$9531$bmrAn
                    (case-lambda
                      ((g$p*$9611$bmrAn g$n$9612$bmrAn g$ids$9613$bmrAn)
                       (if (null? g$p*$9611$bmrAn)
                         (values '() g$ids$9613$bmrAn)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9531$bmrAn
                                (cdr g$p*$9611$bmrAn)
                                g$n$9612$bmrAn
                                g$ids$9613$bmrAn)))
                           (case-lambda
                             ((g$y$9616$bmrAn g$ids$9617$bmrAn)
                              ((case-lambda
                                 ((g$ids$9618$bmrAn g$y$9619$bmrAn)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9532$bmrAn
                                         (car g$p*$9611$bmrAn)
                                         g$n$9612$bmrAn
                                         g$ids$9618$bmrAn)))
                                    (case-lambda
                                      ((g$x$9622$bmrAn g$ids$9623$bmrAn)
                                       ((case-lambda
                                          ((g$ids$9624$bmrAn g$x$9625$bmrAn)
                                           (values
                                             (cons
                                               g$x$9625$bmrAn
                                               g$y$9619$bmrAn)
                                             g$ids$9624$bmrAn)))
                                        g$ids$9623$bmrAn
                                        g$x$9622$bmrAn))))))
                               g$ids$9617$bmrAn
                               g$y$9616$bmrAn))))))))
                  (g$cvt$9532$bmrAn
                    (case-lambda
                      ((g$p$9533$bmrAn g$n$9534$bmrAn g$ids$9535$bmrAn)
                       ((case-lambda
                          ((g$t$9536$bmrAn)
                           ((case-lambda
                              ((g$ls/false$9537$bmrAn)
                               (if (if g$ls/false$9537$bmrAn
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9538$bmrAn)
                                            (g$id?$7703$bmrAn g$id$9538$bmrAn)))
                                         g$ls/false$9537$bmrAn))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9539$bmrAn)
                                      (if (g$bound-id-member?$7710$bmrAn
                                            g$p$9533$bmrAn
                                            g$keys$9530$bmrAn)
                                        (values
                                          (vector 'free-id g$p$9533$bmrAn)
                                          g$ids$9535$bmrAn)
                                        (if (g$free-id=?$7707$bmrAn
                                              g$p$9533$bmrAn
                                              (g$scheme-stx$7924$bmrAn '_))
                                          (values '_ g$ids$9535$bmrAn)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9533$bmrAn
                                                g$n$9534$bmrAn)
                                              g$ids$9535$bmrAn))))))
                                   g$ls/false$9537$bmrAn)
                                 ((case-lambda
                                    ((g$t$9540$bmrAn)
                                     ((case-lambda
                                        ((g$ls/false$9541$bmrAn)
                                         (if (if g$ls/false$9541$bmrAn
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9542$bmrAn
                                                        g$dots$9543$bmrAn)
                                                      (g$ellipsis?$7982$bmrAn
                                                        g$dots$9543$bmrAn)))
                                                   g$ls/false$9541$bmrAn))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9544$bmrAn
                                                  g$dots$9545$bmrAn)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9532$bmrAn
                                                       g$p$9544$bmrAn
                                                       (+ g$n$9534$bmrAn '1)
                                                       g$ids$9535$bmrAn)))
                                                  (case-lambda
                                                    ((g$p$9548$bmrAn
                                                       g$ids$9549$bmrAn)
                                                     ((case-lambda
                                                        ((g$ids$9550$bmrAn
                                                           g$p$9551$bmrAn)
                                                         (values
                                                           (if (eq? g$p$9551$bmrAn
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9551$bmrAn))
                                                           g$ids$9550$bmrAn)))
                                                      g$ids$9549$bmrAn
                                                      g$p$9548$bmrAn))))))
                                             g$ls/false$9541$bmrAn)
                                           ((case-lambda
                                              ((g$t$9552$bmrAn)
                                               ((case-lambda
                                                  ((g$ls/false$9553$bmrAn)
                                                   (if (if g$ls/false$9553$bmrAn
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9554$bmrAn
                                                                  g$dots$9555$bmrAn
                                                                  g$ys$9556$bmrAn
                                                                  g$z$9557$bmrAn)
                                                                (g$ellipsis?$7982$bmrAn
                                                                  g$dots$9555$bmrAn)))
                                                             g$ls/false$9553$bmrAn))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9558$bmrAn
                                                            g$dots$9559$bmrAn
                                                            g$ys$9560$bmrAn
                                                            g$z$9561$bmrAn)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9532$bmrAn
                                                                 g$z$9561$bmrAn
                                                                 g$n$9534$bmrAn
                                                                 g$ids$9535$bmrAn)))
                                                            (case-lambda
                                                              ((g$z$9564$bmrAn
                                                                 g$ids$9565$bmrAn)
                                                               ((case-lambda
                                                                  ((g$ids$9566$bmrAn
                                                                     g$z$9567$bmrAn)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9531$bmrAn
                                                                          g$ys$9560$bmrAn
                                                                          g$n$9534$bmrAn
                                                                          g$ids$9566$bmrAn)))
                                                                     (case-lambda
                                                                       ((g$ys$9570$bmrAn
                                                                          g$ids$9571$bmrAn)
                                                                        ((case-lambda
                                                                           ((g$ids$9572$bmrAn
                                                                              g$ys$9573$bmrAn)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9532$bmrAn
                                                                                   g$x$9558$bmrAn
                                                                                   (+ g$n$9534$bmrAn
                                                                                      '1)
                                                                                   g$ids$9572$bmrAn)))
                                                                              (case-lambda
                                                                                ((g$x$9576$bmrAn
                                                                                   g$ids$9577$bmrAn)
                                                                                 ((case-lambda
                                                                                    ((g$ids$9578$bmrAn
                                                                                       g$x$9579$bmrAn)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$9579$bmrAn
                                                                                         (reverse
                                                                                           g$ys$9573$bmrAn)
                                                                                         g$z$9567$bmrAn)
                                                                                       g$ids$9578$bmrAn)))
                                                                                  g$ids$9577$bmrAn
                                                                                  g$x$9576$bmrAn))))))
                                                                         g$ids$9571$bmrAn
                                                                         g$ys$9570$bmrAn))))))
                                                                g$ids$9565$bmrAn
                                                                g$z$9564$bmrAn))))))
                                                       g$ls/false$9553$bmrAn)
                                                     ((case-lambda
                                                        ((g$t$9580$bmrAn)
                                                         ((case-lambda
                                                            ((g$ls/false$9581$bmrAn)
                                                             (if g$ls/false$9581$bmrAn
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$9582$bmrAn
                                                                      g$y$9583$bmrAn)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9532$bmrAn
                                                                           g$y$9583$bmrAn
                                                                           g$n$9534$bmrAn
                                                                           g$ids$9535$bmrAn)))
                                                                      (case-lambda
                                                                        ((g$y$9586$bmrAn
                                                                           g$ids$9587$bmrAn)
                                                                         ((case-lambda
                                                                            ((g$ids$9588$bmrAn
                                                                               g$y$9589$bmrAn)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9532$bmrAn
                                                                                    g$x$9582$bmrAn
                                                                                    g$n$9534$bmrAn
                                                                                    g$ids$9588$bmrAn)))
                                                                               (case-lambda
                                                                                 ((g$x$9592$bmrAn
                                                                                    g$ids$9593$bmrAn)
                                                                                  ((case-lambda
                                                                                     ((g$ids$9594$bmrAn
                                                                                        g$x$9595$bmrAn)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$9595$bmrAn
                                                                                          g$y$9589$bmrAn)
                                                                                        g$ids$9594$bmrAn)))
                                                                                   g$ids$9593$bmrAn
                                                                                   g$x$9592$bmrAn))))))
                                                                          g$ids$9587$bmrAn
                                                                          g$y$9586$bmrAn))))))
                                                                 g$ls/false$9581$bmrAn)
                                                               ((case-lambda
                                                                  ((g$t$9596$bmrAn)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9597$bmrAn)
                                                                       (if g$ls/false$9597$bmrAn
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9535$bmrAn)))
                                                                           g$ls/false$9597$bmrAn)
                                                                         ((case-lambda
                                                                            ((g$t$9598$bmrAn)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9599$bmrAn)
                                                                                 (if (if g$ls/false$9599$bmrAn
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$9600$bmrAn)
                                                                                              (not (g$stx?$7675$bmrAn
                                                                                                     g$p$9600$bmrAn))))
                                                                                           g$ls/false$9599$bmrAn))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$9601$bmrAn)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9532$bmrAn
                                                                                               g$p$9601$bmrAn
                                                                                               g$n$9534$bmrAn
                                                                                               g$ids$9535$bmrAn)))
                                                                                          (case-lambda
                                                                                            ((g$p$9604$bmrAn
                                                                                               g$ids$9605$bmrAn)
                                                                                             ((case-lambda
                                                                                                ((g$ids$9606$bmrAn
                                                                                                   g$p$9607$bmrAn)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$9607$bmrAn)
                                                                                                   g$ids$9606$bmrAn)))
                                                                                              g$ids$9605$bmrAn
                                                                                              g$p$9604$bmrAn))))))
                                                                                     g$ls/false$9599$bmrAn)
                                                                                   ((case-lambda
                                                                                      ((g$t$9608$bmrAn)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9609$bmrAn)
                                                                                           (if g$ls/false$9609$bmrAn
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$9610$bmrAn)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$7714$bmrAn
                                                                                                        g$datum$9610$bmrAn))
                                                                                                    g$ids$9535$bmrAn)))
                                                                                               g$ls/false$9609$bmrAn)
                                                                                             (g$syntax-violation$8093$bmrAn
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9608$bmrAn))))
                                                                                        (g$syntax-dispatch$7981$bmrAn
                                                                                          g$t$9608$bmrAn
                                                                                          'any))))
                                                                                    g$t$9598$bmrAn))))
                                                                              (g$syntax-dispatch$7981$bmrAn
                                                                                g$t$9598$bmrAn
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$9596$bmrAn))))
                                                                    (g$syntax-dispatch$7981$bmrAn
                                                                      g$t$9596$bmrAn
                                                                      '()))))
                                                                g$t$9580$bmrAn))))
                                                          (g$syntax-dispatch$7981$bmrAn
                                                            g$t$9580$bmrAn
                                                            '(any . any)))))
                                                      g$t$9552$bmrAn))))
                                                (g$syntax-dispatch$7981$bmrAn
                                                  g$t$9552$bmrAn
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9540$bmrAn))))
                                      (g$syntax-dispatch$7981$bmrAn
                                        g$t$9540$bmrAn
                                        '(any any)))))
                                  g$t$9536$bmrAn))))
                            (g$syntax-dispatch$7981$bmrAn
                              g$t$9536$bmrAn
                              'any))))
                        g$p$9533$bmrAn)))))
          (g$cvt$9532$bmrAn g$pattern$9529$bmrAn '0 '())))))
   (g$syntax-dispatch$7981$bmrAn
     g$syntax-dispatch$11484$bmrAn
     ((case-lambda
        (()
         (letrec* ((g$stx^$9626$bmrAn
                     (case-lambda
                       ((g$e$9736$bmrAn
                          g$m*$9737$bmrAn
                          g$s*$9738$bmrAn
                          g$ae*$9739$bmrAn)
                        (if (if (null? g$m*$9737$bmrAn)
                              (if (null? g$s*$9738$bmrAn)
                                (begin '#f (null? g$ae*$9739$bmrAn))
                                '#f)
                              '#f)
                          g$e$9736$bmrAn
                          (g$mkstx$7691$bmrAn
                            g$e$9736$bmrAn
                            g$m*$9737$bmrAn
                            g$s*$9738$bmrAn
                            g$ae*$9739$bmrAn)))))
                   (g$match-each$9627$bmrAn
                     (case-lambda
                       ((g$e$9720$bmrAn
                          g$p$9721$bmrAn
                          g$m*$9722$bmrAn
                          g$s*$9723$bmrAn
                          g$ae*$9724$bmrAn)
                        (if (pair? g$e$9720$bmrAn)
                          ((case-lambda
                             ((g$first$9725$bmrAn)
                              (if g$first$9725$bmrAn
                                (begin
                                  '#f
                                  ((case-lambda
                                     ((g$rest$9726$bmrAn)
                                      (if g$rest$9726$bmrAn
                                        (begin
                                          '#f
                                          (cons
                                            g$first$9725$bmrAn
                                            g$rest$9726$bmrAn))
                                        '#f)))
                                   (g$match-each$9627$bmrAn
                                     (cdr g$e$9720$bmrAn)
                                     g$p$9721$bmrAn
                                     g$m*$9722$bmrAn
                                     g$s*$9723$bmrAn
                                     g$ae*$9724$bmrAn)))
                                '#f)))
                           (g$match$9633$bmrAn
                             (car g$e$9720$bmrAn)
                             g$p$9721$bmrAn
                             g$m*$9722$bmrAn
                             g$s*$9723$bmrAn
                             g$ae*$9724$bmrAn
                             '()))
                          (if (null? g$e$9720$bmrAn)
                            '()
                            (if (g$stx?$7675$bmrAn g$e$9720$bmrAn)
                              (if (not (g$top-marked?$7641$bmrAn
                                         g$m*$9722$bmrAn))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$7690$bmrAn
                                         g$m*$9722$bmrAn
                                         g$s*$9723$bmrAn
                                         g$ae*$9724$bmrAn
                                         g$e$9720$bmrAn)))
                                    (case-lambda
                                      ((g$m*$9730$bmrAn
                                         g$s*$9731$bmrAn
                                         g$ae*$9732$bmrAn)
                                       ((case-lambda
                                          ((g$ae*$9733$bmrAn
                                             g$s*$9734$bmrAn
                                             g$m*$9735$bmrAn)
                                           (g$match-each$9627$bmrAn
                                             (g$stx-expr$7677$bmrAn
                                               g$e$9720$bmrAn)
                                             g$p$9721$bmrAn
                                             g$m*$9735$bmrAn
                                             g$s*$9734$bmrAn
                                             g$ae*$9733$bmrAn)))
                                        g$ae*$9732$bmrAn
                                        g$s*$9731$bmrAn
                                        g$m*$9730$bmrAn)))))
                                '#f)
                              (if (annotation? g$e$9720$bmrAn)
                                (g$match-each$9627$bmrAn
                                  (annotation-expression g$e$9720$bmrAn)
                                  g$p$9721$bmrAn
                                  g$m*$9722$bmrAn
                                  g$s*$9723$bmrAn
                                  g$ae*$9724$bmrAn)
                                '#f)))))))
                   (g$match-each+$9628$bmrAn
                     (case-lambda
                       ((g$e$9688$bmrAn
                          g$x-pat$9689$bmrAn
                          g$y-pat$9690$bmrAn
                          g$z-pat$9691$bmrAn
                          g$m*$9692$bmrAn
                          g$s*$9693$bmrAn
                          g$ae*$9694$bmrAn
                          g$r$9695$bmrAn)
                        ((letrec ((g$f$9696$bmrAn
                                    (case-lambda
                                      ((g$e$9697$bmrAn
                                         g$m*$9698$bmrAn
                                         g$s*$9699$bmrAn
                                         g$ae*$9700$bmrAn)
                                       (if (pair? g$e$9697$bmrAn)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$f$9696$bmrAn
                                                (cdr g$e$9697$bmrAn)
                                                g$m*$9698$bmrAn
                                                g$s*$9699$bmrAn
                                                g$ae*$9700$bmrAn)))
                                           (case-lambda
                                             ((g$xr*$9704$bmrAn
                                                g$y-pat$9705$bmrAn
                                                g$r$9706$bmrAn)
                                              ((case-lambda
                                                 ((g$r$9707$bmrAn
                                                    g$y-pat$9708$bmrAn
                                                    g$xr*$9709$bmrAn)
                                                  (if g$r$9707$bmrAn
                                                    (if (null?
                                                          g$y-pat$9708$bmrAn)
                                                      ((case-lambda
                                                         ((g$xr$9710$bmrAn)
                                                          (if g$xr$9710$bmrAn
                                                            (values
                                                              (cons
                                                                g$xr$9710$bmrAn
                                                                g$xr*$9709$bmrAn)
                                                              g$y-pat$9708$bmrAn
                                                              g$r$9707$bmrAn)
                                                            (values
                                                              '#f
                                                              '#f
                                                              '#f))))
                                                       (g$match$9633$bmrAn
                                                         (car g$e$9697$bmrAn)
                                                         g$x-pat$9689$bmrAn
                                                         g$m*$9698$bmrAn
                                                         g$s*$9699$bmrAn
                                                         g$ae*$9700$bmrAn
                                                         '()))
                                                      (values
                                                        '()
                                                        (cdr g$y-pat$9708$bmrAn)
                                                        (g$match$9633$bmrAn
                                                          (car g$e$9697$bmrAn)
                                                          (car g$y-pat$9708$bmrAn)
                                                          g$m*$9698$bmrAn
                                                          g$s*$9699$bmrAn
                                                          g$ae*$9700$bmrAn
                                                          g$r$9707$bmrAn)))
                                                    (values '#f '#f '#f))))
                                               g$r$9706$bmrAn
                                               g$y-pat$9705$bmrAn
                                               g$xr*$9704$bmrAn))))
                                         (if (g$stx?$7675$bmrAn g$e$9697$bmrAn)
                                           (if (g$top-marked?$7641$bmrAn
                                                 g$m*$9698$bmrAn)
                                             (values
                                               '()
                                               g$y-pat$9690$bmrAn
                                               (g$match$9633$bmrAn
                                                 g$e$9697$bmrAn
                                                 g$z-pat$9691$bmrAn
                                                 g$m*$9698$bmrAn
                                                 g$s*$9699$bmrAn
                                                 g$ae*$9700$bmrAn
                                                 g$r$9695$bmrAn))
                                             (call-with-values
                                               (case-lambda
                                                 (()
                                                  (g$join-wraps$7690$bmrAn
                                                    g$m*$9698$bmrAn
                                                    g$s*$9699$bmrAn
                                                    g$ae*$9700$bmrAn
                                                    g$e$9697$bmrAn)))
                                               (case-lambda
                                                 ((g$m*$9714$bmrAn
                                                    g$s*$9715$bmrAn
                                                    g$ae*$9716$bmrAn)
                                                  ((case-lambda
                                                     ((g$ae*$9717$bmrAn
                                                        g$s*$9718$bmrAn
                                                        g$m*$9719$bmrAn)
                                                      (g$f$9696$bmrAn
                                                        (g$stx-expr$7677$bmrAn
                                                          g$e$9697$bmrAn)
                                                        g$m*$9719$bmrAn
                                                        g$s*$9718$bmrAn
                                                        g$ae*$9717$bmrAn)))
                                                   g$ae*$9716$bmrAn
                                                   g$s*$9715$bmrAn
                                                   g$m*$9714$bmrAn)))))
                                           (if (annotation? g$e$9697$bmrAn)
                                             (g$f$9696$bmrAn
                                               (annotation-expression
                                                 g$e$9697$bmrAn)
                                               g$m*$9698$bmrAn
                                               g$s*$9699$bmrAn
                                               g$ae*$9700$bmrAn)
                                             (values
                                               '()
                                               g$y-pat$9690$bmrAn
                                               (g$match$9633$bmrAn
                                                 g$e$9697$bmrAn
                                                 g$z-pat$9691$bmrAn
                                                 g$m*$9698$bmrAn
                                                 g$s*$9699$bmrAn
                                                 g$ae*$9700$bmrAn
                                                 g$r$9695$bmrAn)))))))))
                           g$f$9696$bmrAn)
                         g$e$9688$bmrAn
                         g$m*$9692$bmrAn
                         g$s*$9693$bmrAn
                         g$ae*$9694$bmrAn))))
                   (g$match-each-any$9629$bmrAn
                     (case-lambda
                       ((g$e$9674$bmrAn
                          g$m*$9675$bmrAn
                          g$s*$9676$bmrAn
                          g$ae*$9677$bmrAn)
                        (if (pair? g$e$9674$bmrAn)
                          ((case-lambda
                             ((g$l$9678$bmrAn)
                              (if g$l$9678$bmrAn
                                (begin
                                  '#f
                                  (cons
                                    (g$stx^$9626$bmrAn
                                      (car g$e$9674$bmrAn)
                                      g$m*$9675$bmrAn
                                      g$s*$9676$bmrAn
                                      g$ae*$9677$bmrAn)
                                    g$l$9678$bmrAn))
                                '#f)))
                           (g$match-each-any$9629$bmrAn
                             (cdr g$e$9674$bmrAn)
                             g$m*$9675$bmrAn
                             g$s*$9676$bmrAn
                             g$ae*$9677$bmrAn))
                          (if (null? g$e$9674$bmrAn)
                            '()
                            (if (g$stx?$7675$bmrAn g$e$9674$bmrAn)
                              (if (not (g$top-marked?$7641$bmrAn
                                         g$m*$9675$bmrAn))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$7690$bmrAn
                                         g$m*$9675$bmrAn
                                         g$s*$9676$bmrAn
                                         g$ae*$9677$bmrAn
                                         g$e$9674$bmrAn)))
                                    (case-lambda
                                      ((g$m*$9682$bmrAn
                                         g$s*$9683$bmrAn
                                         g$ae*$9684$bmrAn)
                                       ((case-lambda
                                          ((g$ae*$9685$bmrAn
                                             g$s*$9686$bmrAn
                                             g$m*$9687$bmrAn)
                                           (g$match-each-any$9629$bmrAn
                                             (g$stx-expr$7677$bmrAn
                                               g$e$9674$bmrAn)
                                             g$m*$9687$bmrAn
                                             g$s*$9686$bmrAn
                                             g$ae*$9685$bmrAn)))
                                        g$ae*$9684$bmrAn
                                        g$s*$9683$bmrAn
                                        g$m*$9682$bmrAn)))))
                                '#f)
                              (if (annotation? g$e$9674$bmrAn)
                                (g$match-each-any$9629$bmrAn
                                  (annotation-expression g$e$9674$bmrAn)
                                  g$m*$9675$bmrAn
                                  g$s*$9676$bmrAn
                                  g$ae*$9677$bmrAn)
                                '#f)))))))
                   (g$match-empty$9630$bmrAn
                     (case-lambda
                       ((g$p$9671$bmrAn g$r$9672$bmrAn)
                        (if (null? g$p$9671$bmrAn)
                          g$r$9672$bmrAn
                          (if (eq? g$p$9671$bmrAn '_)
                            g$r$9672$bmrAn
                            (if (eq? g$p$9671$bmrAn 'any)
                              (cons '() g$r$9672$bmrAn)
                              (if (pair? g$p$9671$bmrAn)
                                (g$match-empty$9630$bmrAn
                                  (car g$p$9671$bmrAn)
                                  (g$match-empty$9630$bmrAn
                                    (cdr g$p$9671$bmrAn)
                                    g$r$9672$bmrAn))
                                (if (eq? g$p$9671$bmrAn 'each-any)
                                  (cons '() g$r$9672$bmrAn)
                                  ((case-lambda
                                     ((g$t$9673$bmrAn)
                                      (if (g$memv$5056$bmrAn
                                            g$t$9673$bmrAn
                                            '(each))
                                        (g$match-empty$9630$bmrAn
                                          (vector-ref g$p$9671$bmrAn '1)
                                          g$r$9672$bmrAn)
                                        (if (g$memv$5056$bmrAn
                                              g$t$9673$bmrAn
                                              '(each+))
                                          (g$match-empty$9630$bmrAn
                                            (vector-ref g$p$9671$bmrAn '1)
                                            (g$match-empty$9630$bmrAn
                                              (reverse
                                                (vector-ref g$p$9671$bmrAn '2))
                                              (g$match-empty$9630$bmrAn
                                                (vector-ref g$p$9671$bmrAn '3)
                                                g$r$9672$bmrAn)))
                                          (if (g$memv$5056$bmrAn
                                                g$t$9673$bmrAn
                                                '(free-id atom))
                                            g$r$9672$bmrAn
                                            (if (g$memv$5056$bmrAn
                                                  g$t$9673$bmrAn
                                                  '(scheme-id atom))
                                              g$r$9672$bmrAn
                                              (if (g$memv$5056$bmrAn
                                                    g$t$9673$bmrAn
                                                    '(vector))
                                                (g$match-empty$9630$bmrAn
                                                  (vector-ref g$p$9671$bmrAn '1)
                                                  g$r$9672$bmrAn)
                                                (assertion-violation
                                                  'syntax-dispatch
                                                  '"invalid pattern"
                                                  g$p$9671$bmrAn))))))))
                                   (vector-ref g$p$9671$bmrAn '0))))))))))
                   (g$combine$9631$bmrAn
                     (case-lambda
                       ((g$r*$9669$bmrAn g$r$9670$bmrAn)
                        (if (null? (car g$r*$9669$bmrAn))
                          g$r$9670$bmrAn
                          (cons
                            (g$map$5063$bmrAn car g$r*$9669$bmrAn)
                            (g$combine$9631$bmrAn
                              (g$map$5063$bmrAn cdr g$r*$9669$bmrAn)
                              g$r$9670$bmrAn))))))
                   (g$match*$9632$bmrAn
                     (case-lambda
                       ((g$e$9651$bmrAn
                          g$p$9652$bmrAn
                          g$m*$9653$bmrAn
                          g$s*$9654$bmrAn
                          g$ae*$9655$bmrAn
                          g$r$9656$bmrAn)
                        (if (null? g$p$9652$bmrAn)
                          (if (null? g$e$9651$bmrAn)
                            (begin '#f g$r$9656$bmrAn)
                            '#f)
                          (if (pair? g$p$9652$bmrAn)
                            (if (pair? g$e$9651$bmrAn)
                              (begin
                                '#f
                                (g$match$9633$bmrAn
                                  (car g$e$9651$bmrAn)
                                  (car g$p$9652$bmrAn)
                                  g$m*$9653$bmrAn
                                  g$s*$9654$bmrAn
                                  g$ae*$9655$bmrAn
                                  (g$match$9633$bmrAn
                                    (cdr g$e$9651$bmrAn)
                                    (cdr g$p$9652$bmrAn)
                                    g$m*$9653$bmrAn
                                    g$s*$9654$bmrAn
                                    g$ae*$9655$bmrAn
                                    g$r$9656$bmrAn)))
                              '#f)
                            (if (eq? g$p$9652$bmrAn 'each-any)
                              ((case-lambda
                                 ((g$l$9657$bmrAn)
                                  (if g$l$9657$bmrAn
                                    (begin
                                      '#f
                                      (cons g$l$9657$bmrAn g$r$9656$bmrAn))
                                    '#f)))
                               (g$match-each-any$9629$bmrAn
                                 g$e$9651$bmrAn
                                 g$m*$9653$bmrAn
                                 g$s*$9654$bmrAn
                                 g$ae*$9655$bmrAn))
                              ((case-lambda
                                 ((g$t$9658$bmrAn)
                                  (if (g$memv$5056$bmrAn g$t$9658$bmrAn '(each))
                                    (if (null? g$e$9651$bmrAn)
                                      (g$match-empty$9630$bmrAn
                                        (vector-ref g$p$9652$bmrAn '1)
                                        g$r$9656$bmrAn)
                                      ((case-lambda
                                         ((g$r*$9659$bmrAn)
                                          (if g$r*$9659$bmrAn
                                            (begin
                                              '#f
                                              (g$combine$9631$bmrAn
                                                g$r*$9659$bmrAn
                                                g$r$9656$bmrAn))
                                            '#f)))
                                       (g$match-each$9627$bmrAn
                                         g$e$9651$bmrAn
                                         (vector-ref g$p$9652$bmrAn '1)
                                         g$m*$9653$bmrAn
                                         g$s*$9654$bmrAn
                                         g$ae*$9655$bmrAn)))
                                    (if (g$memv$5056$bmrAn
                                          g$t$9658$bmrAn
                                          '(free-id))
                                      (if (symbol? g$e$9651$bmrAn)
                                        (if (g$top-marked?$7641$bmrAn
                                              g$m*$9653$bmrAn)
                                          (if (g$free-id=?$7707$bmrAn
                                                (g$stx^$9626$bmrAn
                                                  g$e$9651$bmrAn
                                                  g$m*$9653$bmrAn
                                                  g$s*$9654$bmrAn
                                                  g$ae*$9655$bmrAn)
                                                (vector-ref g$p$9652$bmrAn '1))
                                            (begin '#f g$r$9656$bmrAn)
                                            '#f)
                                          '#f)
                                        '#f)
                                      (if (g$memv$5056$bmrAn
                                            g$t$9658$bmrAn
                                            '(scheme-id))
                                        (if (symbol? g$e$9651$bmrAn)
                                          (if (g$top-marked?$7641$bmrAn
                                                g$m*$9653$bmrAn)
                                            (if (g$free-id=?$7707$bmrAn
                                                  (g$stx^$9626$bmrAn
                                                    g$e$9651$bmrAn
                                                    g$m*$9653$bmrAn
                                                    g$s*$9654$bmrAn
                                                    g$ae*$9655$bmrAn)
                                                  (g$scheme-stx$7924$bmrAn
                                                    (vector-ref
                                                      g$p$9652$bmrAn
                                                      '1)))
                                              (begin '#f g$r$9656$bmrAn)
                                              '#f)
                                            '#f)
                                          '#f)
                                        (if (g$memv$5056$bmrAn
                                              g$t$9658$bmrAn
                                              '(each+))
                                          (call-with-values
                                            (case-lambda
                                              (()
                                               (g$match-each+$9628$bmrAn
                                                 g$e$9651$bmrAn
                                                 (vector-ref g$p$9652$bmrAn '1)
                                                 (vector-ref g$p$9652$bmrAn '2)
                                                 (vector-ref g$p$9652$bmrAn '3)
                                                 g$m*$9653$bmrAn
                                                 g$s*$9654$bmrAn
                                                 g$ae*$9655$bmrAn
                                                 g$r$9656$bmrAn)))
                                            (case-lambda
                                              ((g$xr*$9663$bmrAn
                                                 g$y-pat$9664$bmrAn
                                                 g$r$9665$bmrAn)
                                               ((case-lambda
                                                  ((g$r$9666$bmrAn
                                                     g$y-pat$9667$bmrAn
                                                     g$xr*$9668$bmrAn)
                                                   (if g$r$9666$bmrAn
                                                     (if (null?
                                                           g$y-pat$9667$bmrAn)
                                                       (begin
                                                         '#f
                                                         (if (null?
                                                               g$xr*$9668$bmrAn)
                                                           (g$match-empty$9630$bmrAn
                                                             (vector-ref
                                                               g$p$9652$bmrAn
                                                               '1)
                                                             g$r$9666$bmrAn)
                                                           (g$combine$9631$bmrAn
                                                             g$xr*$9668$bmrAn
                                                             g$r$9666$bmrAn)))
                                                       '#f)
                                                     '#f)))
                                                g$r$9665$bmrAn
                                                g$y-pat$9664$bmrAn
                                                g$xr*$9663$bmrAn))))
                                          (if (g$memv$5056$bmrAn
                                                g$t$9658$bmrAn
                                                '(atom))
                                            (if (equal?
                                                  (vector-ref g$p$9652$bmrAn '1)
                                                  (g$strip$7713$bmrAn
                                                    g$e$9651$bmrAn
                                                    g$m*$9653$bmrAn))
                                              (begin '#f g$r$9656$bmrAn)
                                              '#f)
                                            (if (g$memv$5056$bmrAn
                                                  g$t$9658$bmrAn
                                                  '(vector))
                                              (if (vector? g$e$9651$bmrAn)
                                                (begin
                                                  '#f
                                                  (g$match$9633$bmrAn
                                                    (vector->list
                                                      g$e$9651$bmrAn)
                                                    (vector-ref
                                                      g$p$9652$bmrAn
                                                      '1)
                                                    g$m*$9653$bmrAn
                                                    g$s*$9654$bmrAn
                                                    g$ae*$9655$bmrAn
                                                    g$r$9656$bmrAn))
                                                '#f)
                                              (assertion-violation
                                                'syntax-dispatch
                                                '"invalid pattern"
                                                g$p$9652$bmrAn)))))))))
                               (vector-ref g$p$9652$bmrAn '0))))))))
                   (g$match$9633$bmrAn
                     (case-lambda
                       ((g$e$9636$bmrAn
                          g$p$9637$bmrAn
                          g$m*$9638$bmrAn
                          g$s*$9639$bmrAn
                          g$ae*$9640$bmrAn
                          g$r$9641$bmrAn)
                        (if (not g$r$9641$bmrAn)
                          '#f
                          (if (eq? g$p$9637$bmrAn '_)
                            g$r$9641$bmrAn
                            (if (eq? g$p$9637$bmrAn 'any)
                              (cons
                                (g$stx^$9626$bmrAn
                                  g$e$9636$bmrAn
                                  g$m*$9638$bmrAn
                                  g$s*$9639$bmrAn
                                  g$ae*$9640$bmrAn)
                                g$r$9641$bmrAn)
                              (if (g$stx?$7675$bmrAn g$e$9636$bmrAn)
                                (if (not (g$top-marked?$7641$bmrAn
                                           g$m*$9638$bmrAn))
                                  (begin
                                    '#f
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$join-wraps$7690$bmrAn
                                           g$m*$9638$bmrAn
                                           g$s*$9639$bmrAn
                                           g$ae*$9640$bmrAn
                                           g$e$9636$bmrAn)))
                                      (case-lambda
                                        ((g$m*$9645$bmrAn
                                           g$s*$9646$bmrAn
                                           g$ae*$9647$bmrAn)
                                         ((case-lambda
                                            ((g$ae*$9648$bmrAn
                                               g$s*$9649$bmrAn
                                               g$m*$9650$bmrAn)
                                             (g$match$9633$bmrAn
                                               (g$stx-expr$7677$bmrAn
                                                 g$e$9636$bmrAn)
                                               g$p$9637$bmrAn
                                               g$m*$9650$bmrAn
                                               g$s*$9649$bmrAn
                                               g$ae*$9648$bmrAn
                                               g$r$9641$bmrAn)))
                                          g$ae*$9647$bmrAn
                                          g$s*$9646$bmrAn
                                          g$m*$9645$bmrAn)))))
                                  '#f)
                                (if (annotation? g$e$9636$bmrAn)
                                  (g$match$9633$bmrAn
                                    (annotation-expression g$e$9636$bmrAn)
                                    g$p$9637$bmrAn
                                    g$m*$9638$bmrAn
                                    g$s*$9639$bmrAn
                                    g$ae*$9640$bmrAn
                                    g$r$9641$bmrAn)
                                  (g$match*$9632$bmrAn
                                    g$e$9636$bmrAn
                                    g$p$9637$bmrAn
                                    g$m*$9638$bmrAn
                                    g$s*$9639$bmrAn
                                    g$ae*$9640$bmrAn
                                    g$r$9641$bmrAn))))))))))
           (case-lambda
             ((g$e$9634$bmrAn g$p$9635$bmrAn)
              (g$match$9633$bmrAn
                g$e$9634$bmrAn
                g$p$9635$bmrAn
                '()
                '()
                '()
                '()))))))))
   (g$ellipsis?$7982$bmrAn
     g$ellipsis?$11485$bmrAn
     (case-lambda
       ((g$x$9740$bmrAn)
        (if (g$id?$7703$bmrAn g$x$9740$bmrAn)
          (begin
            '#f
            (g$free-id=?$7707$bmrAn
              g$x$9740$bmrAn
              (g$scheme-stx$7924$bmrAn '...)))
          '#f))))
   (g$underscore?$7983$bmrAn
     g$underscore?$11486$bmrAn
     (case-lambda
       ((g$x$9741$bmrAn)
        (if (g$id?$7703$bmrAn g$x$9741$bmrAn)
          (begin
            '#f
            (g$free-id=?$7707$bmrAn
              g$x$9741$bmrAn
              (g$scheme-stx$7924$bmrAn '_)))
          '#f))))
   (g$verify-literals$7984$bmrAn
     g$verify-literals$11487$bmrAn
     (case-lambda
       ((g$lits$9742$bmrAn g$expr$9743$bmrAn)
        (g$for-each$5064$bmrAn
          (case-lambda
            ((g$x$9744$bmrAn)
             (if ((case-lambda
                    ((g$t$9745$bmrAn)
                     (if g$t$9745$bmrAn
                       g$t$9745$bmrAn
                       ((case-lambda
                          ((g$t$9746$bmrAn)
                           (if g$t$9746$bmrAn
                             g$t$9746$bmrAn
                             (begin
                               '#f
                               (g$underscore?$7983$bmrAn g$x$9744$bmrAn)))))
                        (g$ellipsis?$7982$bmrAn g$x$9744$bmrAn)))))
                  (not (g$id?$7703$bmrAn g$x$9744$bmrAn)))
               (g$syntax-violation$8093$bmrAn
                 '#f
                 '"invalid literal"
                 g$expr$9743$bmrAn
                 g$x$9744$bmrAn)
               (void))))
          g$lits$9742$bmrAn))))
   (g$syntax-case-transformer$7985$bmrAn
     g$syntax-case-transformer$11488$bmrAn
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$9747$bmrAn
                     (case-lambda
                       ((g$pvars$9804$bmrAn
                          g$expr$9805$bmrAn
                          g$y$9806$bmrAn
                          g$r$9807$bmrAn
                          g$mr$9808$bmrAn)
                        ((case-lambda
                           ((g$ids$9809$bmrAn g$levels$9810$bmrAn)
                            ((case-lambda
                               ((g$labels$9811$bmrAn g$new-vars$9812$bmrAn)
                                ((case-lambda
                                   ((g$body$9813$bmrAn)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7629$bmrAn
                                        '#f
                                        g$new-vars$9812$bmrAn
                                        g$body$9813$bmrAn)
                                      g$y$9806$bmrAn)))
                                 (g$chi-expr$7999$bmrAn
                                   (g$add-subst$7693$bmrAn
                                     (g$make-full-rib$7671$bmrAn
                                       g$ids$9809$bmrAn
                                       g$labels$9811$bmrAn)
                                     g$expr$9805$bmrAn)
                                   (append
                                     (g$map$5063$bmrAn
                                       (case-lambda
                                         ((g$label$9814$bmrAn
                                            g$var$9815$bmrAn
                                            g$level$9816$bmrAn)
                                          (cons
                                            g$label$9814$bmrAn
                                            (g$make-binding$7719$bmrAn
                                              'syntax
                                              (cons
                                                g$var$9815$bmrAn
                                                g$level$9816$bmrAn)))))
                                       g$labels$9811$bmrAn
                                       g$new-vars$9812$bmrAn
                                       (g$map$5063$bmrAn
                                         cdr
                                         g$pvars$9804$bmrAn))
                                     g$r$9807$bmrAn)
                                   g$mr$9808$bmrAn))))
                             (g$map$5063$bmrAn
                               g$gen-label$7644$bmrAn
                               g$ids$9809$bmrAn)
                             (g$map$5063$bmrAn
                               g$gen-lexical$7642$bmrAn
                               g$ids$9809$bmrAn))))
                         (g$map$5063$bmrAn car g$pvars$9804$bmrAn)
                         (g$map$5063$bmrAn cdr g$pvars$9804$bmrAn)))))
                   (g$invalid-ids-error$9748$bmrAn
                     (case-lambda
                       ((g$id*$9798$bmrAn g$e$9799$bmrAn g$class$9800$bmrAn)
                        ((letrec ((g$find$9801$bmrAn
                                    (case-lambda
                                      ((g$id*$9802$bmrAn g$ok*$9803$bmrAn)
                                       (if (null? g$id*$9802$bmrAn)
                                         (g$syntax-violation$8093$bmrAn
                                           '#f
                                           '"invalid syntax"
                                           g$e$9799$bmrAn)
                                         (if (g$id?$7703$bmrAn
                                               (car g$id*$9802$bmrAn))
                                           (if (g$bound-id-member?$7710$bmrAn
                                                 (car g$id*$9802$bmrAn)
                                                 g$ok*$9803$bmrAn)
                                             (g$syntax-error$8090$bmrAn
                                               (car g$id*$9802$bmrAn)
                                               '"duplicate "
                                               g$class$9800$bmrAn)
                                             (g$find$9801$bmrAn
                                               (cdr g$id*$9802$bmrAn)
                                               (cons
                                                 (car g$id*$9802$bmrAn)
                                                 g$ok*$9803$bmrAn)))
                                           (g$syntax-error$8090$bmrAn
                                             (car g$id*$9802$bmrAn)
                                             '"invalid "
                                             g$class$9800$bmrAn)))))))
                           g$find$9801$bmrAn)
                         g$id*$9798$bmrAn
                         '()))))
                   (g$gen-clause$9749$bmrAn
                     (case-lambda
                       ((g$x$9778$bmrAn
                          g$keys$9779$bmrAn
                          g$clauses$9780$bmrAn
                          g$r$9781$bmrAn
                          g$mr$9782$bmrAn
                          g$pat$9783$bmrAn
                          g$fender$9784$bmrAn
                          g$expr$9785$bmrAn)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7980$bmrAn
                               g$pat$9783$bmrAn
                               g$keys$9779$bmrAn)))
                          (case-lambda
                            ((g$p$9788$bmrAn g$pvars$9789$bmrAn)
                             ((case-lambda
                                ((g$pvars$9790$bmrAn g$p$9791$bmrAn)
                                 (if (not (g$distinct-bound-ids?$7709$bmrAn
                                            (g$map$5063$bmrAn
                                              car
                                              g$pvars$9790$bmrAn)))
                                   (g$invalid-ids-error$9748$bmrAn
                                     (g$map$5063$bmrAn car g$pvars$9790$bmrAn)
                                     g$pat$9783$bmrAn
                                     '"pattern variable")
                                   (if (not (g$for-all$5061$bmrAn
                                              (case-lambda
                                                ((g$x$9792$bmrAn)
                                                 (not (g$ellipsis?$7982$bmrAn
                                                        (car g$x$9792$bmrAn)))))
                                              g$pvars$9790$bmrAn))
                                     (g$syntax-violation$8093$bmrAn
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9783$bmrAn)
                                     ((case-lambda
                                        ((g$y$9793$bmrAn)
                                         ((case-lambda
                                            ((g$test$9794$bmrAn)
                                             ((case-lambda
                                                ((g$conseq$9795$bmrAn)
                                                 ((case-lambda
                                                    ((g$altern$9796$bmrAn)
                                                     (list
                                                       (g$build-lambda$7629$bmrAn
                                                         '#f
                                                         (list g$y$9793$bmrAn)
                                                         (list
                                                           'if
                                                           g$test$9794$bmrAn
                                                           g$conseq$9795$bmrAn
                                                           g$altern$9796$bmrAn))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9778$bmrAn
                                                         (list
                                                           'quote
                                                           g$p$9791$bmrAn)))))
                                                  (g$gen-syntax-case$9750$bmrAn
                                                    g$x$9778$bmrAn
                                                    g$keys$9779$bmrAn
                                                    g$clauses$9780$bmrAn
                                                    g$r$9781$bmrAn
                                                    g$mr$9782$bmrAn))))
                                              (g$build-dispatch-call$9747$bmrAn
                                                g$pvars$9790$bmrAn
                                                g$expr$9785$bmrAn
                                                g$y$9793$bmrAn
                                                g$r$9781$bmrAn
                                                g$mr$9782$bmrAn))))
                                          (if (eq? g$fender$9784$bmrAn '#t)
                                            g$y$9793$bmrAn
                                            ((case-lambda
                                               ((g$call$9797$bmrAn)
                                                (list
                                                  'if
                                                  g$y$9793$bmrAn
                                                  g$call$9797$bmrAn
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$9747$bmrAn
                                               g$pvars$9790$bmrAn
                                               g$fender$9784$bmrAn
                                               g$y$9793$bmrAn
                                               g$r$9781$bmrAn
                                               g$mr$9782$bmrAn))))))
                                      (g$gen-lexical$7642$bmrAn 'tmp))))))
                              g$pvars$9789$bmrAn
                              g$p$9788$bmrAn)))))))
                   (g$gen-syntax-case$9750$bmrAn
                     (case-lambda
                       ((g$x$9761$bmrAn
                          g$keys$9762$bmrAn
                          g$clauses$9763$bmrAn
                          g$r$9764$bmrAn
                          g$mr$9765$bmrAn)
                        (if (null? g$clauses$9763$bmrAn)
                          (list '(primitive syntax-error) g$x$9761$bmrAn)
                          ((case-lambda
                             ((g$t$9766$bmrAn)
                              ((case-lambda
                                 ((g$ls/false$9767$bmrAn)
                                  (if g$ls/false$9767$bmrAn
                                    (apply
                                      (case-lambda
                                        ((g$pat$9768$bmrAn g$expr$9769$bmrAn)
                                         (if (if (g$id?$7703$bmrAn
                                                   g$pat$9768$bmrAn)
                                               (if (not (g$bound-id-member?$7710$bmrAn
                                                          g$pat$9768$bmrAn
                                                          g$keys$9762$bmrAn))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7982$bmrAn
                                                          g$pat$9768$bmrAn)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$7707$bmrAn
                                                 g$pat$9768$bmrAn
                                                 (g$scheme-stx$7924$bmrAn '_))
                                             (g$chi-expr$7999$bmrAn
                                               g$expr$9769$bmrAn
                                               g$r$9764$bmrAn
                                               g$mr$9765$bmrAn)
                                             ((case-lambda
                                                ((g$lab$9770$bmrAn
                                                   g$lex$9771$bmrAn)
                                                 ((case-lambda
                                                    ((g$body$9772$bmrAn)
                                                     (list
                                                       (g$build-lambda$7629$bmrAn
                                                         '#f
                                                         (list g$lex$9771$bmrAn)
                                                         g$body$9772$bmrAn)
                                                       g$x$9761$bmrAn)))
                                                  (g$chi-expr$7999$bmrAn
                                                    (g$add-subst$7693$bmrAn
                                                      (g$make-full-rib$7671$bmrAn
                                                        (list g$pat$9768$bmrAn)
                                                        (list g$lab$9770$bmrAn))
                                                      g$expr$9769$bmrAn)
                                                    (cons
                                                      (cons
                                                        g$lab$9770$bmrAn
                                                        (g$make-binding$7719$bmrAn
                                                          'syntax
                                                          (cons
                                                            g$lex$9771$bmrAn
                                                            '0)))
                                                      g$r$9764$bmrAn)
                                                    g$mr$9765$bmrAn))))
                                              (g$gen-label$7644$bmrAn
                                                g$pat$9768$bmrAn)
                                              (g$gen-lexical$7642$bmrAn
                                                g$pat$9768$bmrAn)))
                                           (g$gen-clause$9749$bmrAn
                                             g$x$9761$bmrAn
                                             g$keys$9762$bmrAn
                                             (cdr g$clauses$9763$bmrAn)
                                             g$r$9764$bmrAn
                                             g$mr$9765$bmrAn
                                             g$pat$9768$bmrAn
                                             '#t
                                             g$expr$9769$bmrAn))))
                                      g$ls/false$9767$bmrAn)
                                    ((case-lambda
                                       ((g$t$9773$bmrAn)
                                        ((case-lambda
                                           ((g$ls/false$9774$bmrAn)
                                            (if g$ls/false$9774$bmrAn
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9775$bmrAn
                                                     g$fender$9776$bmrAn
                                                     g$expr$9777$bmrAn)
                                                   (g$gen-clause$9749$bmrAn
                                                     g$x$9761$bmrAn
                                                     g$keys$9762$bmrAn
                                                     (cdr g$clauses$9763$bmrAn)
                                                     g$r$9764$bmrAn
                                                     g$mr$9765$bmrAn
                                                     g$pat$9775$bmrAn
                                                     g$fender$9776$bmrAn
                                                     g$expr$9777$bmrAn)))
                                                g$ls/false$9774$bmrAn)
                                              (g$syntax-violation$8093$bmrAn
                                                '#f
                                                '"invalid syntax"
                                                g$t$9773$bmrAn))))
                                         (g$syntax-dispatch$7981$bmrAn
                                           g$t$9773$bmrAn
                                           '(any any any)))))
                                     g$t$9766$bmrAn))))
                               (g$syntax-dispatch$7981$bmrAn
                                 g$t$9766$bmrAn
                                 '(any any)))))
                           (car g$clauses$9763$bmrAn)))))))
           (case-lambda
             ((g$e$9751$bmrAn g$r$9752$bmrAn g$mr$9753$bmrAn)
              ((case-lambda
                 ((g$t$9754$bmrAn)
                  ((case-lambda
                     ((g$ls/false$9755$bmrAn)
                      (if g$ls/false$9755$bmrAn
                        (apply
                          (case-lambda
                            ((g$expr$9756$bmrAn
                               g$keys$9757$bmrAn
                               g$clauses$9758$bmrAn)
                             (begin
                               (g$verify-literals$7984$bmrAn
                                 g$keys$9757$bmrAn
                                 g$e$9751$bmrAn)
                               ((case-lambda
                                  ((g$x$9759$bmrAn)
                                   ((case-lambda
                                      ((g$body$9760$bmrAn)
                                       (list
                                         (g$build-lambda$7629$bmrAn
                                           '#f
                                           (list g$x$9759$bmrAn)
                                           g$body$9760$bmrAn)
                                         (g$chi-expr$7999$bmrAn
                                           g$expr$9756$bmrAn
                                           g$r$9752$bmrAn
                                           g$mr$9753$bmrAn))))
                                    (g$gen-syntax-case$9750$bmrAn
                                      g$x$9759$bmrAn
                                      g$keys$9757$bmrAn
                                      g$clauses$9758$bmrAn
                                      g$r$9752$bmrAn
                                      g$mr$9753$bmrAn))))
                                (g$gen-lexical$7642$bmrAn 'tmp)))))
                          g$ls/false$9755$bmrAn)
                        (g$syntax-violation$8093$bmrAn
                          '#f
                          '"invalid syntax"
                          g$t$9754$bmrAn))))
                   (g$syntax-dispatch$7981$bmrAn
                     g$t$9754$bmrAn
                     '(_ any each-any . each-any)))))
               g$e$9751$bmrAn))))))))
   (g$ellipsis-map$7986$bmrAn
     g$ellipsis-map$11489$bmrAn
     (case-lambda
       ((g$proc$9817$bmrAn g$ls$9818$bmrAn . g$ls*$9819$bmrAn)
        (letrec* ((g$who$9820$bmrAn '...))
          (begin
            (if (not (list? g$ls$9818$bmrAn))
              (assertion-violation
                g$who$9820$bmrAn
                '"not a list"
                g$ls$9818$bmrAn)
              (void))
            (if (not (null? g$ls*$9819$bmrAn))
              ((case-lambda
                 ((g$n$9821$bmrAn)
                  (g$for-each$5064$bmrAn
                    (case-lambda
                      ((g$x$9822$bmrAn)
                       (begin
                         (if (not (list? g$x$9822$bmrAn))
                           (assertion-violation
                             g$who$9820$bmrAn
                             '"not a list"
                             g$x$9822$bmrAn)
                           (void))
                         (if (not (= (length g$x$9822$bmrAn) g$n$9821$bmrAn))
                           (assertion-violation
                             g$who$9820$bmrAn
                             '"length mismatch"
                             g$ls$9818$bmrAn
                             g$x$9822$bmrAn)
                           (void)))))
                    g$ls*$9819$bmrAn)))
               (length g$ls$9818$bmrAn))
              (void))
            (apply
              g$map$5063$bmrAn
              g$proc$9817$bmrAn
              g$ls$9818$bmrAn
              g$ls*$9819$bmrAn))))))
   (g$syntax-transformer$7987$bmrAn
     g$syntax-transformer$11490$bmrAn
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9823$bmrAn
                     (case-lambda
                       ((g$src$9883$bmrAn
                          g$e$9884$bmrAn
                          g$r$9885$bmrAn
                          g$maps$9886$bmrAn
                          g$ellipsis?$9887$bmrAn
                          g$vec?$9888$bmrAn)
                        ((case-lambda
                           ((g$t$9889$bmrAn)
                            ((case-lambda
                               ((g$ls/false$9890$bmrAn)
                                (if (if g$ls/false$9890$bmrAn
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9891$bmrAn)
                                             (g$ellipsis?$9887$bmrAn
                                               g$dots$9891$bmrAn)))
                                          g$ls/false$9890$bmrAn))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9892$bmrAn)
                                       (g$syntax-violation$8093$bmrAn
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9883$bmrAn)))
                                    g$ls/false$9890$bmrAn)
                                  ((case-lambda
                                     ((g$t$9893$bmrAn)
                                      ((case-lambda
                                         ((g$ls/false$9894$bmrAn)
                                          (if (if g$ls/false$9894$bmrAn
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9895$bmrAn)
                                                       (g$id?$7703$bmrAn
                                                         g$id$9895$bmrAn)))
                                                    g$ls/false$9894$bmrAn))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9896$bmrAn)
                                                 ((case-lambda
                                                    ((g$label$9897$bmrAn)
                                                     ((case-lambda
                                                        ((g$b$9898$bmrAn)
                                                         (if (eq? (g$binding-type$7720$bmrAn
                                                                    g$b$9898$bmrAn)
                                                                  'syntax)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$var.lev$9901$bmrAn)
                                                                    (g$gen-ref$9824$bmrAn
                                                                      g$src$9883$bmrAn
                                                                      (car g$var.lev$9901$bmrAn)
                                                                      (cdr g$var.lev$9901$bmrAn)
                                                                      g$maps$9886$bmrAn)))
                                                                 (g$binding-value$7721$bmrAn
                                                                   g$b$9898$bmrAn))))
                                                             (case-lambda
                                                               ((g$var$9902$bmrAn
                                                                  g$maps$9903$bmrAn)
                                                                ((case-lambda
                                                                   ((g$maps$9904$bmrAn
                                                                      g$var$9905$bmrAn)
                                                                    (values
                                                                      (list
                                                                        'ref
                                                                        g$var$9905$bmrAn)
                                                                      g$maps$9904$bmrAn)))
                                                                 g$maps$9903$bmrAn
                                                                 g$var$9902$bmrAn))))
                                                           (values
                                                             (list
                                                               'quote
                                                               g$e$9884$bmrAn)
                                                             g$maps$9886$bmrAn))))
                                                      (g$label->binding$7718$bmrAn
                                                        g$label$9897$bmrAn
                                                        g$r$9885$bmrAn))))
                                                  (g$id->label$7716$bmrAn
                                                    g$e$9884$bmrAn))))
                                              g$ls/false$9894$bmrAn)
                                            ((case-lambda
                                               ((g$t$9906$bmrAn)
                                                ((case-lambda
                                                   ((g$ls/false$9907$bmrAn)
                                                    (if (if g$ls/false$9907$bmrAn
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9908$bmrAn
                                                                   g$e$9909$bmrAn)
                                                                 (g$ellipsis?$9887$bmrAn
                                                                   g$dots$9908$bmrAn)))
                                                              g$ls/false$9907$bmrAn))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9910$bmrAn
                                                             g$e$9911$bmrAn)
                                                           (if g$vec?$9888$bmrAn
                                                             (g$syntax-violation$8093$bmrAn
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9883$bmrAn)
                                                             (g$gen-syntax$9823$bmrAn
                                                               g$src$9883$bmrAn
                                                               g$e$9911$bmrAn
                                                               g$r$9885$bmrAn
                                                               g$maps$9886$bmrAn
                                                               (case-lambda
                                                                 ((g$x$9912$bmrAn)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9907$bmrAn)
                                                      ((case-lambda
                                                         ((g$t$9913$bmrAn)
                                                          ((case-lambda
                                                             ((g$ls/false$9914$bmrAn)
                                                              (if (if g$ls/false$9914$bmrAn
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9915$bmrAn
                                                                             g$dots$9916$bmrAn
                                                                             g$y$9917$bmrAn)
                                                                           (g$ellipsis?$9887$bmrAn
                                                                             g$dots$9916$bmrAn)))
                                                                        g$ls/false$9914$bmrAn))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9918$bmrAn
                                                                       g$dots$9919$bmrAn
                                                                       g$y$9920$bmrAn)
                                                                     ((letrec ((g$f$9921$bmrAn
                                                                                 (case-lambda
                                                                                   ((g$y$9922$bmrAn
                                                                                      g$k$9923$bmrAn)
                                                                                    ((case-lambda
                                                                                       ((g$t$9924$bmrAn)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9925$bmrAn)
                                                                                            (if g$ls/false$9925$bmrAn
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9923$bmrAn
                                                                                                     g$maps$9886$bmrAn)))
                                                                                                g$ls/false$9925$bmrAn)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9926$bmrAn)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9927$bmrAn)
                                                                                                      (if (if g$ls/false$9927$bmrAn
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9928$bmrAn
                                                                                                                     g$y$9929$bmrAn)
                                                                                                                   (g$ellipsis?$9887$bmrAn
                                                                                                                     g$dots$9928$bmrAn)))
                                                                                                                g$ls/false$9927$bmrAn))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9930$bmrAn
                                                                                                               g$y$9931$bmrAn)
                                                                                                             (g$f$9921$bmrAn
                                                                                                               g$y$9931$bmrAn
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9932$bmrAn)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9923$bmrAn
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9932$bmrAn))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9935$bmrAn
                                                                                                                         g$maps$9936$bmrAn)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9937$bmrAn
                                                                                                                             g$x$9938$bmrAn)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9937$bmrAn))
                                                                                                                             (g$syntax-violation$8093$bmrAn
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9883$bmrAn)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9826$bmrAn
                                                                                                                                 g$x$9938$bmrAn
                                                                                                                                 (car g$maps$9937$bmrAn))
                                                                                                                               (cdr g$maps$9937$bmrAn)))))
                                                                                                                        g$maps$9936$bmrAn
                                                                                                                        g$x$9935$bmrAn)))))))))
                                                                                                          g$ls/false$9927$bmrAn)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9939$bmrAn)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9940$bmrAn)
                                                                                                                (if g$ls/false$9940$bmrAn
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9823$bmrAn
                                                                                                                              g$src$9883$bmrAn
                                                                                                                              g$y$9922$bmrAn
                                                                                                                              g$r$9885$bmrAn
                                                                                                                              g$maps$9886$bmrAn
                                                                                                                              g$ellipsis?$9887$bmrAn
                                                                                                                              g$vec?$9888$bmrAn)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9943$bmrAn
                                                                                                                              g$maps$9944$bmrAn)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9945$bmrAn
                                                                                                                                  g$y$9946$bmrAn)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9923$bmrAn
                                                                                                                                       g$maps$9945$bmrAn)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9949$bmrAn
                                                                                                                                       g$maps$9950$bmrAn)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9951$bmrAn
                                                                                                                                           g$x$9952$bmrAn)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9825$bmrAn
                                                                                                                                             g$x$9952$bmrAn
                                                                                                                                             g$y$9946$bmrAn)
                                                                                                                                           g$maps$9951$bmrAn)))
                                                                                                                                      g$maps$9950$bmrAn
                                                                                                                                      g$x$9949$bmrAn))))))
                                                                                                                             g$maps$9944$bmrAn
                                                                                                                             g$y$9943$bmrAn))))))
                                                                                                                    g$ls/false$9940$bmrAn)
                                                                                                                  (g$syntax-violation$8093$bmrAn
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9939$bmrAn))))
                                                                                                             (g$syntax-dispatch$7981$bmrAn
                                                                                                               g$t$9939$bmrAn
                                                                                                               '_))))
                                                                                                         g$t$9926$bmrAn))))
                                                                                                   (g$syntax-dispatch$7981$bmrAn
                                                                                                     g$t$9926$bmrAn
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9924$bmrAn))))
                                                                                         (g$syntax-dispatch$7981$bmrAn
                                                                                           g$t$9924$bmrAn
                                                                                           '()))))
                                                                                     g$y$9922$bmrAn)))))
                                                                        g$f$9921$bmrAn)
                                                                      g$y$9920$bmrAn
                                                                      (case-lambda
                                                                        ((g$maps$9953$bmrAn)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9823$bmrAn
                                                                                g$src$9883$bmrAn
                                                                                g$x$9918$bmrAn
                                                                                g$r$9885$bmrAn
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9953$bmrAn)
                                                                                g$ellipsis?$9887$bmrAn
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9956$bmrAn
                                                                                g$maps$9957$bmrAn)
                                                                              ((case-lambda
                                                                                 ((g$maps$9958$bmrAn
                                                                                    g$x$9959$bmrAn)
                                                                                  (if (null?
                                                                                        (car g$maps$9958$bmrAn))
                                                                                    (g$syntax-violation$8093$bmrAn
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9883$bmrAn)
                                                                                    (values
                                                                                      (g$gen-map$9827$bmrAn
                                                                                        g$x$9959$bmrAn
                                                                                        (car g$maps$9958$bmrAn))
                                                                                      (cdr g$maps$9958$bmrAn)))))
                                                                               g$maps$9957$bmrAn
                                                                               g$x$9956$bmrAn)))))))))
                                                                  g$ls/false$9914$bmrAn)
                                                                ((case-lambda
                                                                   ((g$t$9960$bmrAn)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9961$bmrAn)
                                                                        (if g$ls/false$9961$bmrAn
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9962$bmrAn
                                                                                 g$y$9963$bmrAn)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9823$bmrAn
                                                                                      g$src$9883$bmrAn
                                                                                      g$x$9962$bmrAn
                                                                                      g$r$9885$bmrAn
                                                                                      g$maps$9886$bmrAn
                                                                                      g$ellipsis?$9887$bmrAn
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9966$bmrAn
                                                                                      g$maps$9967$bmrAn)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9968$bmrAn
                                                                                          g$xnew$9969$bmrAn)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9823$bmrAn
                                                                                               g$src$9883$bmrAn
                                                                                               g$y$9963$bmrAn
                                                                                               g$r$9885$bmrAn
                                                                                               g$maps$9968$bmrAn
                                                                                               g$ellipsis?$9887$bmrAn
                                                                                               g$vec?$9888$bmrAn)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9972$bmrAn
                                                                                               g$maps$9973$bmrAn)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9974$bmrAn
                                                                                                   g$ynew$9975$bmrAn)
                                                                                                 (values
                                                                                                   (g$gen-cons$9828$bmrAn
                                                                                                     g$e$9884$bmrAn
                                                                                                     g$x$9962$bmrAn
                                                                                                     g$y$9963$bmrAn
                                                                                                     g$xnew$9969$bmrAn
                                                                                                     g$ynew$9975$bmrAn)
                                                                                                   g$maps$9974$bmrAn)))
                                                                                              g$maps$9973$bmrAn
                                                                                              g$ynew$9972$bmrAn))))))
                                                                                     g$maps$9967$bmrAn
                                                                                     g$xnew$9966$bmrAn))))))
                                                                            g$ls/false$9961$bmrAn)
                                                                          ((case-lambda
                                                                             ((g$t$9976$bmrAn)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9977$bmrAn)
                                                                                  (if g$ls/false$9977$bmrAn
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9978$bmrAn)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9823$bmrAn
                                                                                                g$src$9883$bmrAn
                                                                                                g$ls$9978$bmrAn
                                                                                                g$r$9885$bmrAn
                                                                                                g$maps$9886$bmrAn
                                                                                                g$ellipsis?$9887$bmrAn
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9981$bmrAn
                                                                                                g$maps$9982$bmrAn)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9983$bmrAn
                                                                                                    g$lsnew$9984$bmrAn)
                                                                                                  (values
                                                                                                    (g$gen-vector$9829$bmrAn
                                                                                                      g$e$9884$bmrAn
                                                                                                      g$ls$9978$bmrAn
                                                                                                      g$lsnew$9984$bmrAn)
                                                                                                    g$maps$9983$bmrAn)))
                                                                                               g$maps$9982$bmrAn
                                                                                               g$lsnew$9981$bmrAn))))))
                                                                                      g$ls/false$9977$bmrAn)
                                                                                    ((case-lambda
                                                                                       ((g$t$9985$bmrAn)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9986$bmrAn)
                                                                                            (if g$ls/false$9986$bmrAn
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9884$bmrAn)
                                                                                                     g$maps$9886$bmrAn)))
                                                                                                g$ls/false$9986$bmrAn)
                                                                                              (g$syntax-violation$8093$bmrAn
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9985$bmrAn))))
                                                                                         (g$syntax-dispatch$7981$bmrAn
                                                                                           g$t$9985$bmrAn
                                                                                           '_))))
                                                                                     g$t$9976$bmrAn))))
                                                                               (g$syntax-dispatch$7981$bmrAn
                                                                                 g$t$9976$bmrAn
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9960$bmrAn))))
                                                                     (g$syntax-dispatch$7981$bmrAn
                                                                       g$t$9960$bmrAn
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9913$bmrAn))))
                                                           (g$syntax-dispatch$7981$bmrAn
                                                             g$t$9913$bmrAn
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9906$bmrAn))))
                                                 (g$syntax-dispatch$7981$bmrAn
                                                   g$t$9906$bmrAn
                                                   '(any any)))))
                                             g$t$9893$bmrAn))))
                                       (g$syntax-dispatch$7981$bmrAn
                                         g$t$9893$bmrAn
                                         'any))))
                                   g$t$9889$bmrAn))))
                             (g$syntax-dispatch$7981$bmrAn
                               g$t$9889$bmrAn
                               'any))))
                         g$e$9884$bmrAn))))
                   (g$gen-ref$9824$bmrAn
                     (case-lambda
                       ((g$src$9870$bmrAn
                          g$var$9871$bmrAn
                          g$level$9872$bmrAn
                          g$maps$9873$bmrAn)
                        (if (= g$level$9872$bmrAn '0)
                          (values g$var$9871$bmrAn g$maps$9873$bmrAn)
                          (if (null? g$maps$9873$bmrAn)
                            (g$syntax-violation$8093$bmrAn
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9870$bmrAn)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9824$bmrAn
                                   g$src$9870$bmrAn
                                   g$var$9871$bmrAn
                                   (- g$level$9872$bmrAn '1)
                                   (cdr g$maps$9873$bmrAn))))
                              (case-lambda
                                ((g$outer-var$9876$bmrAn
                                   g$outer-maps$9877$bmrAn)
                                 ((case-lambda
                                    ((g$outer-maps$9878$bmrAn
                                       g$outer-var$9879$bmrAn)
                                     ((case-lambda
                                        ((g$t$9880$bmrAn)
                                         (if g$t$9880$bmrAn
                                           ((case-lambda
                                              ((g$b$9881$bmrAn)
                                               (values
                                                 (cdr g$b$9881$bmrAn)
                                                 g$maps$9873$bmrAn)))
                                            g$t$9880$bmrAn)
                                           ((case-lambda
                                              ((g$inner-var$9882$bmrAn)
                                               (values
                                                 g$inner-var$9882$bmrAn
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9879$bmrAn
                                                       g$inner-var$9882$bmrAn)
                                                     (car g$maps$9873$bmrAn))
                                                   g$outer-maps$9878$bmrAn))))
                                            (g$gen-lexical$7642$bmrAn 'tmp)))))
                                      (g$assq$5051$bmrAn
                                        g$outer-var$9879$bmrAn
                                        (car g$maps$9873$bmrAn)))))
                                  g$outer-maps$9877$bmrAn
                                  g$outer-var$9876$bmrAn)))))))))
                   (g$gen-append$9825$bmrAn
                     (case-lambda
                       ((g$x$9868$bmrAn g$y$9869$bmrAn)
                        (if (equal? g$y$9869$bmrAn ''())
                          g$x$9868$bmrAn
                          (list 'append g$x$9868$bmrAn g$y$9869$bmrAn)))))
                   (g$gen-mappend$9826$bmrAn
                     (case-lambda
                       ((g$e$9866$bmrAn g$map-env$9867$bmrAn)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9827$bmrAn
                            g$e$9866$bmrAn
                            g$map-env$9867$bmrAn)))))
                   (g$gen-map$9827$bmrAn
                     (case-lambda
                       ((g$e$9857$bmrAn g$map-env$9858$bmrAn)
                        ((case-lambda
                           ((g$formals$9859$bmrAn g$actuals$9860$bmrAn)
                            (if (eq? (car g$e$9857$bmrAn) 'ref)
                              (car g$actuals$9860$bmrAn)
                              (if (g$for-all$5061$bmrAn
                                    (case-lambda
                                      ((g$x$9861$bmrAn)
                                       (if (eq? (car g$x$9861$bmrAn) 'ref)
                                         (begin
                                           '#f
                                           (g$memq$5055$bmrAn
                                             (g$cadr$5264$bmrAn g$x$9861$bmrAn)
                                             g$formals$9859$bmrAn))
                                         '#f)))
                                    (cdr g$e$9857$bmrAn))
                                ((case-lambda
                                   ((g$args$9862$bmrAn)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9857$bmrAn))
                                        g$args$9862$bmrAn))))
                                 (g$map$5063$bmrAn
                                   ((case-lambda
                                      ((g$r$9863$bmrAn)
                                       (case-lambda
                                         ((g$x$9864$bmrAn)
                                          (cdr (g$assq$5051$bmrAn
                                                 (g$cadr$5264$bmrAn
                                                   g$x$9864$bmrAn)
                                                 g$r$9863$bmrAn))))))
                                    (g$map$5063$bmrAn
                                      cons
                                      g$formals$9859$bmrAn
                                      g$actuals$9860$bmrAn))
                                   (cdr g$e$9857$bmrAn)))
                                (g$cons*$5065$bmrAn
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9859$bmrAn
                                    g$e$9857$bmrAn)
                                  g$actuals$9860$bmrAn)))))
                         (g$map$5063$bmrAn cdr g$map-env$9858$bmrAn)
                         (g$map$5063$bmrAn
                           (case-lambda
                             ((g$x$9865$bmrAn)
                              (list 'ref (car g$x$9865$bmrAn))))
                           g$map-env$9858$bmrAn)))))
                   (g$gen-cons$9828$bmrAn
                     (case-lambda
                       ((g$e$9849$bmrAn
                          g$x$9850$bmrAn
                          g$y$9851$bmrAn
                          g$xnew$9852$bmrAn
                          g$ynew$9853$bmrAn)
                        ((case-lambda
                           ((g$t$9854$bmrAn)
                            (if (g$memv$5056$bmrAn g$t$9854$bmrAn '(quote))
                              (if (eq? (car g$xnew$9852$bmrAn) 'quote)
                                ((case-lambda
                                   ((g$xnew$9855$bmrAn g$ynew$9856$bmrAn)
                                    (if (if (eq? g$xnew$9855$bmrAn
                                                 g$x$9850$bmrAn)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9856$bmrAn
                                                 g$y$9851$bmrAn))
                                          '#f)
                                      (list 'quote g$e$9849$bmrAn)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9855$bmrAn
                                          g$ynew$9856$bmrAn)))))
                                 (g$cadr$5264$bmrAn g$xnew$9852$bmrAn)
                                 (g$cadr$5264$bmrAn g$ynew$9853$bmrAn))
                                (if (null?
                                      (g$cadr$5264$bmrAn g$ynew$9853$bmrAn))
                                  (list 'list g$xnew$9852$bmrAn)
                                  (list
                                    'cons
                                    g$xnew$9852$bmrAn
                                    g$ynew$9853$bmrAn)))
                              (if (g$memv$5056$bmrAn g$t$9854$bmrAn '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9852$bmrAn
                                    (cdr g$ynew$9853$bmrAn)))
                                (list
                                  'cons
                                  g$xnew$9852$bmrAn
                                  g$ynew$9853$bmrAn)))))
                         (car g$ynew$9853$bmrAn)))))
                   (g$gen-vector$9829$bmrAn
                     (case-lambda
                       ((g$e$9846$bmrAn g$ls$9847$bmrAn g$lsnew$9848$bmrAn)
                        (if (eq? (car g$lsnew$9848$bmrAn) 'quote)
                          (if (eq? (g$cadr$5264$bmrAn g$lsnew$9848$bmrAn)
                                   g$ls$9847$bmrAn)
                            (list 'quote g$e$9846$bmrAn)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$5264$bmrAn g$lsnew$9848$bmrAn))))
                          (if (eq? (car g$lsnew$9848$bmrAn) 'list)
                            (cons 'vector (cdr g$lsnew$9848$bmrAn))
                            (list 'list->vector g$lsnew$9848$bmrAn))))))
                   (g$regen$9830$bmrAn
                     (case-lambda
                       ((g$x$9843$bmrAn)
                        ((case-lambda
                           ((g$t$9844$bmrAn)
                            (if (g$memv$5056$bmrAn g$t$9844$bmrAn '(ref))
                              (g$cadr$5264$bmrAn g$x$9843$bmrAn)
                              (if (g$memv$5056$bmrAn
                                    g$t$9844$bmrAn
                                    '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$5264$bmrAn g$x$9843$bmrAn))
                                (if (g$memv$5056$bmrAn g$t$9844$bmrAn '(quote))
                                  (list
                                    'quote
                                    (g$cadr$5264$bmrAn g$x$9843$bmrAn))
                                  (if (g$memv$5056$bmrAn
                                        g$t$9844$bmrAn
                                        '(lambda))
                                    (g$build-lambda$7629$bmrAn
                                      '#f
                                      (g$cadr$5264$bmrAn g$x$9843$bmrAn)
                                      (g$regen$9830$bmrAn
                                        (g$caddr$5270$bmrAn g$x$9843$bmrAn)))
                                    (if (g$memv$5056$bmrAn
                                          g$t$9844$bmrAn
                                          '(map))
                                      ((case-lambda
                                         ((g$ls$9845$bmrAn)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9845$bmrAn)))
                                       (g$map$5063$bmrAn
                                         g$regen$9830$bmrAn
                                         (cdr g$x$9843$bmrAn)))
                                      (cons
                                        (list 'primitive (car g$x$9843$bmrAn))
                                        (g$map$5063$bmrAn
                                          g$regen$9830$bmrAn
                                          (cdr g$x$9843$bmrAn))))))))))
                         (car g$x$9843$bmrAn))))))
           (case-lambda
             ((g$e$9831$bmrAn g$r$9832$bmrAn g$mr$9833$bmrAn)
              ((case-lambda
                 ((g$t$9834$bmrAn)
                  ((case-lambda
                     ((g$ls/false$9835$bmrAn)
                      (if g$ls/false$9835$bmrAn
                        (apply
                          (case-lambda
                            ((g$x$9836$bmrAn)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9823$bmrAn
                                    g$e$9831$bmrAn
                                    g$x$9836$bmrAn
                                    g$r$9832$bmrAn
                                    '()
                                    g$ellipsis?$7982$bmrAn
                                    '#f)))
                               (case-lambda
                                 ((g$e$9839$bmrAn g$maps$9840$bmrAn)
                                  ((case-lambda
                                     ((g$maps$9841$bmrAn g$e$9842$bmrAn)
                                      (g$regen$9830$bmrAn g$e$9842$bmrAn)))
                                   g$maps$9840$bmrAn
                                   g$e$9839$bmrAn))))))
                          g$ls/false$9835$bmrAn)
                        (g$syntax-violation$8093$bmrAn
                          '#f
                          '"invalid syntax"
                          g$t$9834$bmrAn))))
                   (g$syntax-dispatch$7981$bmrAn g$t$9834$bmrAn '(_ any)))))
               g$e$9831$bmrAn))))))))
   (g$core-macro-transformer$7988$bmrAn
     g$core-macro-transformer$11491$bmrAn
     (case-lambda
       ((g$name$9987$bmrAn)
        ((case-lambda
           ((g$t$9988$bmrAn)
            (if (g$memv$5056$bmrAn g$t$9988$bmrAn '(quote))
              g$quote-transformer$7941$bmrAn
              (if (g$memv$5056$bmrAn g$t$9988$bmrAn '(lambda))
                g$lambda-transformer$7943$bmrAn
                (if (g$memv$5056$bmrAn g$t$9988$bmrAn '(case-lambda))
                  g$case-lambda-transformer$7942$bmrAn
                  (if (g$memv$5056$bmrAn g$t$9988$bmrAn '(letrec))
                    g$letrec-transformer$7931$bmrAn
                    (if (g$memv$5056$bmrAn g$t$9988$bmrAn '(letrec*))
                      g$letrec*-transformer$7932$bmrAn
                      (if (g$memv$5056$bmrAn g$t$9988$bmrAn '(if))
                        g$if-transformer$7939$bmrAn
                        (if (g$memv$5056$bmrAn g$t$9988$bmrAn '(foreign-call))
                          g$foreign-call-transformer$7979$bmrAn
                          (if (g$memv$5056$bmrAn g$t$9988$bmrAn '(syntax-case))
                            g$syntax-case-transformer$7985$bmrAn
                            (if (g$memv$5056$bmrAn g$t$9988$bmrAn '(syntax))
                              g$syntax-transformer$7987$bmrAn
                              (if (g$memv$5056$bmrAn
                                    g$t$9988$bmrAn
                                    '(type-descriptor))
                                g$type-descriptor-transformer$7934$bmrAn
                                (if (g$memv$5056$bmrAn
                                      g$t$9988$bmrAn
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$7935$bmrAn
                                  (if (g$memv$5056$bmrAn
                                        g$t$9988$bmrAn
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$7936$bmrAn
                                    (if (g$memv$5056$bmrAn
                                          g$t$9988$bmrAn
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$7933$bmrAn
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$9987$bmrAn))))))))))))))))
         g$name$9987$bmrAn))))
   (g$file-options-macro$7989$bmrAn
     g$file-options-macro$11492$bmrAn
     (case-lambda
       ((g$x$9989$bmrAn)
        (letrec* ((g$valid-option?$9990$bmrAn
                    (case-lambda
                      ((g$x$9995$bmrAn)
                       (if (g$id?$7703$bmrAn g$x$9995$bmrAn)
                         (begin
                           '#f
                           (g$memq$5055$bmrAn
                             (g$id->sym$7704$bmrAn g$x$9995$bmrAn)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$9991$bmrAn)
              ((case-lambda
                 ((g$ls/false$9992$bmrAn)
                  (if (if g$ls/false$9992$bmrAn
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$9993$bmrAn)
                               (if (g$for-all$5061$bmrAn
                                     g$valid-option?$9990$bmrAn
                                     g$opt*$9993$bmrAn)
                                 (begin
                                   '#f
                                   (g$file-options-spec$6977$bmrAn
                                     (g$map$5063$bmrAn
                                       g$id->sym$7704$bmrAn
                                       g$opt*$9993$bmrAn)))
                                 '#f)))
                            g$ls/false$9992$bmrAn))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$9994$bmrAn)
                         (g$bless$7944$bmrAn
                           (list
                             'quote
                             (g$file-options-spec$6977$bmrAn
                               (g$map$5063$bmrAn
                                 g$id->sym$7704$bmrAn
                                 g$opt*$9994$bmrAn))))))
                      g$ls/false$9992$bmrAn)
                    (g$syntax-violation$8093$bmrAn
                      '#f
                      '"invalid syntax"
                      g$t$9991$bmrAn))))
               (g$syntax-dispatch$7981$bmrAn g$t$9991$bmrAn '(_ . each-any)))))
           g$x$9989$bmrAn)))))
   (g$symbol-macro$7990$bmrAn
     g$symbol-macro$11493$bmrAn
     (case-lambda
       ((g$x$9996$bmrAn g$set$9997$bmrAn)
        ((case-lambda
           ((g$t$9998$bmrAn)
            ((case-lambda
               ((g$ls/false$9999$bmrAn)
                (if (if g$ls/false$9999$bmrAn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$10000$bmrAn)
                             (if (g$id?$7703$bmrAn g$name$10000$bmrAn)
                               (begin
                                 '#f
                                 (g$memq$5055$bmrAn
                                   (g$id->sym$7704$bmrAn g$name$10000$bmrAn)
                                   g$set$9997$bmrAn))
                               '#f)))
                          g$ls/false$9999$bmrAn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$10001$bmrAn)
                       (g$bless$7944$bmrAn (list 'quote g$name$10001$bmrAn))))
                    g$ls/false$9999$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$9998$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$9998$bmrAn '(_ any)))))
         g$x$9996$bmrAn))))
   (g$macro-transformer$7991$bmrAn
     g$macro-transformer$11494$bmrAn
     (case-lambda
       ((g$x$10002$bmrAn)
        (if (procedure? g$x$10002$bmrAn)
          g$x$10002$bmrAn
          (if (symbol? g$x$10002$bmrAn)
            ((case-lambda
               ((g$t$10003$bmrAn)
                (if (g$memv$5056$bmrAn g$t$10003$bmrAn '(define-record-type))
                  g$define-record-type-macro$7975$bmrAn
                  (if (g$memv$5056$bmrAn g$t$10003$bmrAn '(define-struct))
                    g$define-struct-macro$7974$bmrAn
                    (if (g$memv$5056$bmrAn g$t$10003$bmrAn '(include))
                      g$include-macro$7969$bmrAn
                      (if (g$memv$5056$bmrAn g$t$10003$bmrAn '(cond))
                        g$cond-macro$7967$bmrAn
                        (if (g$memv$5056$bmrAn g$t$10003$bmrAn '(let))
                          g$let-macro$7947$bmrAn
                          (if (g$memv$5056$bmrAn g$t$10003$bmrAn '(do))
                            g$do-macro$7963$bmrAn
                            (if (g$memv$5056$bmrAn g$t$10003$bmrAn '(or))
                              g$or-macro$7965$bmrAn
                              (if (g$memv$5056$bmrAn g$t$10003$bmrAn '(and))
                                g$and-macro$7966$bmrAn
                                (if (g$memv$5056$bmrAn g$t$10003$bmrAn '(let*))
                                  g$let*-macro$7964$bmrAn
                                  (if (g$memv$5056$bmrAn
                                        g$t$10003$bmrAn
                                        '(let-values))
                                    g$let-values-macro$7948$bmrAn
                                    (if (g$memv$5056$bmrAn
                                          g$t$10003$bmrAn
                                          '(let*-values))
                                      g$let*-values-macro$7949$bmrAn
                                      (if (g$memv$5056$bmrAn
                                            g$t$10003$bmrAn
                                            '(syntax-rules))
                                        g$syntax-rules-macro$7971$bmrAn
                                        (if (g$memv$5056$bmrAn
                                              g$t$10003$bmrAn
                                              '(quasiquote))
                                          g$quasiquote-macro$7972$bmrAn
                                          (if (g$memv$5056$bmrAn
                                                g$t$10003$bmrAn
                                                '(quasisyntax))
                                            g$quasisyntax-macro$7973$bmrAn
                                            (if (g$memv$5056$bmrAn
                                                  g$t$10003$bmrAn
                                                  '(with-syntax))
                                              g$with-syntax-macro$7945$bmrAn
                                              (if (g$memv$5056$bmrAn
                                                    g$t$10003$bmrAn
                                                    '(when))
                                                g$when-macro$7937$bmrAn
                                                (if (g$memv$5056$bmrAn
                                                      g$t$10003$bmrAn
                                                      '(unless))
                                                  g$unless-macro$7938$bmrAn
                                                  (if (g$memv$5056$bmrAn
                                                        g$t$10003$bmrAn
                                                        '(case))
                                                    g$case-macro$7940$bmrAn
                                                    (if (g$memv$5056$bmrAn
                                                          g$t$10003$bmrAn
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$7962$bmrAn
                                                      (if (g$memv$5056$bmrAn
                                                            g$t$10003$bmrAn
                                                            '(time))
                                                        g$time-macro$7958$bmrAn
                                                        (if (g$memv$5056$bmrAn
                                                              g$t$10003$bmrAn
                                                              '(delay))
                                                          g$delay-macro$7959$bmrAn
                                                          (if (g$memv$5056$bmrAn
                                                                g$t$10003$bmrAn
                                                                '(assert))
                                                            g$assert-macro$7960$bmrAn
                                                            (if (g$memv$5056$bmrAn
                                                                  g$t$10003$bmrAn
                                                                  '(endianness))
                                                              g$endianness-macro$7961$bmrAn
                                                              (if (g$memv$5056$bmrAn
                                                                    g$t$10003$bmrAn
                                                                    '(guard))
                                                                g$guard-macro$7956$bmrAn
                                                                (if (g$memv$5056$bmrAn
                                                                      g$t$10003$bmrAn
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$7957$bmrAn
                                                                  (if (g$memv$5056$bmrAn
                                                                        g$t$10003$bmrAn
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$7950$bmrAn
                                                                    (if (g$memv$5056$bmrAn
                                                                          g$t$10003$bmrAn
                                                                          '(trace-define))
                                                                      g$trace-define-macro$7951$bmrAn
                                                                      (if (g$memv$5056$bmrAn
                                                                            g$t$10003$bmrAn
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$7952$bmrAn
                                                                        (if (g$memv$5056$bmrAn
                                                                              g$t$10003$bmrAn
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$7954$bmrAn
                                                                          (if (g$memv$5056$bmrAn
                                                                                g$t$10003$bmrAn
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$7955$bmrAn
                                                                            (if (g$memv$5056$bmrAn
                                                                                  g$t$10003$bmrAn
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$7976$bmrAn
                                                                              (if (g$memv$5056$bmrAn
                                                                                    g$t$10003$bmrAn
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$7978$bmrAn
                                                                                (if (g$memv$5056$bmrAn
                                                                                      g$t$10003$bmrAn
                                                                                      '(include-into))
                                                                                  g$include-into-macro$7970$bmrAn
                                                                                  (if (g$memv$5056$bmrAn
                                                                                        g$t$10003$bmrAn
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$10004$bmrAn)
                                                                                       (g$symbol-macro$7990$bmrAn
                                                                                         g$x$10004$bmrAn
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (g$memv$5056$bmrAn
                                                                                          g$t$10003$bmrAn
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$10005$bmrAn)
                                                                                         (g$symbol-macro$7990$bmrAn
                                                                                           g$x$10005$bmrAn
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (g$memv$5056$bmrAn
                                                                                            g$t$10003$bmrAn
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$10006$bmrAn)
                                                                                           (g$symbol-macro$7990$bmrAn
                                                                                             g$x$10006$bmrAn
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (g$memv$5056$bmrAn
                                                                                              g$t$10003$bmrAn
                                                                                              '(file-options))
                                                                                          g$file-options-macro$7989$bmrAn
                                                                                          (if (g$memv$5056$bmrAn
                                                                                                g$t$10003$bmrAn
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$7977$bmrAn
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$10002$bmrAn)))))))))))))))))))))))))))))))))))))))))
             g$x$10002$bmrAn)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$10002$bmrAn))))))
   (g$local-macro-transformer$7992$bmrAn
     g$local-macro-transformer$11495$bmrAn
     (case-lambda ((g$x$10007$bmrAn) (car g$x$10007$bmrAn))))
   (g$do-macro-call$7993$bmrAn
     g$do-macro-call$11496$bmrAn
     (case-lambda
       ((g$transformer$10008$bmrAn g$expr$10009$bmrAn)
        ((case-lambda
           ((g$out$10010$bmrAn)
            (begin
              ((letrec ((g$f$10011$bmrAn
                          (case-lambda
                            ((g$x$10012$bmrAn)
                             (if (not (g$stx?$7675$bmrAn g$x$10012$bmrAn))
                               (if (pair? g$x$10012$bmrAn)
                                 (begin
                                   (g$f$10011$bmrAn (car g$x$10012$bmrAn))
                                   (g$f$10011$bmrAn (cdr g$x$10012$bmrAn)))
                                 (if (vector? g$x$10012$bmrAn)
                                   (vector-for-each
                                     g$f$10011$bmrAn
                                     g$x$10012$bmrAn)
                                   (if (symbol? g$x$10012$bmrAn)
                                     (g$syntax-violation$8093$bmrAn
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$10009$bmrAn
                                       g$x$10012$bmrAn)
                                     (void))))
                               (void))))))
                 g$f$10011$bmrAn)
               g$out$10010$bmrAn)
              (g$add-mark$7692$bmrAn
                (g$gen-mark$7687$bmrAn)
                g$out$10010$bmrAn
                g$expr$10009$bmrAn))))
         (g$transformer$10008$bmrAn
           (g$add-mark$7692$bmrAn
             g$anti-mark$7688$bmrAn
             g$expr$10009$bmrAn
             '#f))))))
   (g$chi-macro$7994$bmrAn
     g$chi-macro$11497$bmrAn
     (case-lambda
       ((g$p$10013$bmrAn g$e$10014$bmrAn)
        (g$do-macro-call$7993$bmrAn
          (g$macro-transformer$7991$bmrAn g$p$10013$bmrAn)
          g$e$10014$bmrAn))))
   (g$chi-local-macro$7995$bmrAn
     g$chi-local-macro$11498$bmrAn
     (case-lambda
       ((g$p$10015$bmrAn g$e$10016$bmrAn)
        (g$do-macro-call$7993$bmrAn
          (g$local-macro-transformer$7992$bmrAn g$p$10015$bmrAn)
          g$e$10016$bmrAn))))
   (g$chi-global-macro$7996$bmrAn
     g$chi-global-macro$11499$bmrAn
     (case-lambda
       ((g$p$10017$bmrAn g$e$10018$bmrAn)
        ((case-lambda
           ((g$lib$10019$bmrAn g$loc$10020$bmrAn)
            (begin
              (g$visit-library$7514$bmrAn g$lib$10019$bmrAn)
              ((case-lambda
                 ((g$x$10021$bmrAn)
                  ((case-lambda
                     ((g$transformer$10022$bmrAn)
                      (g$do-macro-call$7993$bmrAn
                        g$transformer$10022$bmrAn
                        g$e$10018$bmrAn)))
                   (if (procedure? g$x$10021$bmrAn)
                     g$x$10021$bmrAn
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$10021$bmrAn)))))
               (symbol-value g$loc$10020$bmrAn)))))
         (car g$p$10017$bmrAn)
         (cdr g$p$10017$bmrAn)))))
   (g$chi-expr*$7997$bmrAn
     g$chi-expr*$11500$bmrAn
     (case-lambda
       ((g$e*$10023$bmrAn g$r$10024$bmrAn g$mr$10025$bmrAn)
        (if (null? g$e*$10023$bmrAn)
          '()
          ((case-lambda
             ((g$e$10026$bmrAn)
              (cons
                g$e$10026$bmrAn
                (g$chi-expr*$7997$bmrAn
                  (cdr g$e*$10023$bmrAn)
                  g$r$10024$bmrAn
                  g$mr$10025$bmrAn))))
           (g$chi-expr$7999$bmrAn
             (car g$e*$10023$bmrAn)
             g$r$10024$bmrAn
             g$mr$10025$bmrAn))))))
   (g$chi-application$7998$bmrAn
     g$chi-application$11501$bmrAn
     (case-lambda
       ((g$e$10027$bmrAn g$r$10028$bmrAn g$mr$10029$bmrAn)
        ((case-lambda
           ((g$t$10030$bmrAn)
            ((case-lambda
               ((g$ls/false$10031$bmrAn)
                (if g$ls/false$10031$bmrAn
                  (apply
                    (case-lambda
                      ((g$rator$10032$bmrAn g$rands$10033$bmrAn)
                       ((case-lambda
                          ((g$rator$10034$bmrAn)
                           (cons
                             g$rator$10034$bmrAn
                             (g$chi-expr*$7997$bmrAn
                               g$rands$10033$bmrAn
                               g$r$10028$bmrAn
                               g$mr$10029$bmrAn))))
                        (g$chi-expr$7999$bmrAn
                          g$rator$10032$bmrAn
                          g$r$10028$bmrAn
                          g$mr$10029$bmrAn))))
                    g$ls/false$10031$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$10030$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$10030$bmrAn '(any . each-any)))))
         g$e$10027$bmrAn))))
   (g$chi-expr$7999$bmrAn
     g$chi-expr$11502$bmrAn
     (case-lambda
       ((g$e$10035$bmrAn g$r$10036$bmrAn g$mr$10037$bmrAn)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$7723$bmrAn g$e$10035$bmrAn g$r$10036$bmrAn)))
          (case-lambda
            ((g$type$10041$bmrAn g$value$10042$bmrAn g$kwd$10043$bmrAn)
             ((case-lambda
                ((g$kwd$10044$bmrAn g$value$10045$bmrAn g$type$10046$bmrAn)
                 ((case-lambda
                    ((g$t$10047$bmrAn)
                     (if (g$memv$5056$bmrAn g$t$10047$bmrAn '(core-macro))
                       ((case-lambda
                          ((g$transformer$10048$bmrAn)
                           (g$transformer$10048$bmrAn
                             g$e$10035$bmrAn
                             g$r$10036$bmrAn
                             g$mr$10037$bmrAn)))
                        (g$core-macro-transformer$7988$bmrAn
                          g$value$10045$bmrAn))
                       (if (g$memv$5056$bmrAn g$t$10047$bmrAn '(global))
                         ((case-lambda
                            ((g$lib$10049$bmrAn)
                             ((case-lambda
                                ((g$loc$10050$bmrAn)
                                 (begin
                                   ((g$inv-collector$8033$bmrAn)
                                    g$lib$10049$bmrAn)
                                   g$loc$10050$bmrAn)))
                              (cdr g$value$10045$bmrAn))))
                          (car g$value$10045$bmrAn))
                         (if (g$memv$5056$bmrAn g$t$10047$bmrAn '(core-prim))
                           ((case-lambda
                              ((g$name$10051$bmrAn)
                               (list 'primitive g$name$10051$bmrAn)))
                            g$value$10045$bmrAn)
                           (if (g$memv$5056$bmrAn g$t$10047$bmrAn '(call))
                             (g$chi-application$7998$bmrAn
                               g$e$10035$bmrAn
                               g$r$10036$bmrAn
                               g$mr$10037$bmrAn)
                             (if (g$memv$5056$bmrAn g$t$10047$bmrAn '(lexical))
                               ((case-lambda
                                  ((g$lex$10052$bmrAn) g$lex$10052$bmrAn))
                                (g$lexical-var$7925$bmrAn g$value$10045$bmrAn))
                               (if (g$memv$5056$bmrAn
                                     g$t$10047$bmrAn
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7999$bmrAn
                                   (g$chi-global-macro$7996$bmrAn
                                     g$value$10045$bmrAn
                                     g$e$10035$bmrAn)
                                   g$r$10036$bmrAn
                                   g$mr$10037$bmrAn)
                                 (if (g$memv$5056$bmrAn
                                       g$t$10047$bmrAn
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7999$bmrAn
                                     (g$chi-local-macro$7995$bmrAn
                                       g$value$10045$bmrAn
                                       g$e$10035$bmrAn)
                                     g$r$10036$bmrAn
                                     g$mr$10037$bmrAn)
                                   (if (g$memv$5056$bmrAn
                                         g$t$10047$bmrAn
                                         '(macro macro!))
                                     (g$chi-expr$7999$bmrAn
                                       (g$chi-macro$7994$bmrAn
                                         g$value$10045$bmrAn
                                         g$e$10035$bmrAn)
                                       g$r$10036$bmrAn
                                       g$mr$10037$bmrAn)
                                     (if (g$memv$5056$bmrAn
                                           g$t$10047$bmrAn
                                           '(constant))
                                       ((case-lambda
                                          ((g$datum$10053$bmrAn)
                                           (list 'quote g$datum$10053$bmrAn)))
                                        g$value$10045$bmrAn)
                                       (if (g$memv$5056$bmrAn
                                             g$t$10047$bmrAn
                                             '(set!))
                                         (g$chi-set!$8000$bmrAn
                                           g$e$10035$bmrAn
                                           g$r$10036$bmrAn
                                           g$mr$10037$bmrAn)
                                         (if (g$memv$5056$bmrAn
                                               g$t$10047$bmrAn
                                               '(begin))
                                           ((case-lambda
                                              ((g$t$10054$bmrAn)
                                               ((case-lambda
                                                  ((g$ls/false$10055$bmrAn)
                                                   (if g$ls/false$10055$bmrAn
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$10056$bmrAn
                                                            g$x*$10057$bmrAn)
                                                          (g$build-sequence$7632$bmrAn
                                                            '#f
                                                            (g$chi-expr*$7997$bmrAn
                                                              (cons
                                                                g$x$10056$bmrAn
                                                                g$x*$10057$bmrAn)
                                                              g$r$10036$bmrAn
                                                              g$mr$10037$bmrAn))))
                                                       g$ls/false$10055$bmrAn)
                                                     (g$syntax-violation$8093$bmrAn
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$10054$bmrAn))))
                                                (g$syntax-dispatch$7981$bmrAn
                                                  g$t$10054$bmrAn
                                                  '(_ any . each-any)))))
                                            g$e$10035$bmrAn)
                                           (if (g$memv$5056$bmrAn
                                                 g$t$10047$bmrAn
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$10058$bmrAn)
                                                 ((case-lambda
                                                    ((g$ls/false$10059$bmrAn)
                                                     (if (if g$ls/false$10059$bmrAn
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$10060$bmrAn
                                                                    g$xrhs*$10061$bmrAn
                                                                    g$xbody$10062$bmrAn
                                                                    g$xbody*$10063$bmrAn)
                                                                  (if (not (g$valid-bound-ids?$7708$bmrAn
                                                                             g$xlhs*$10060$bmrAn))
                                                                    (g$syntax-violation$8093$bmrAn
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$10035$bmrAn)
                                                                    (void))))
                                                               g$ls/false$10059$bmrAn))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$10064$bmrAn
                                                              g$xrhs*$10065$bmrAn
                                                              g$xbody$10066$bmrAn
                                                              g$xbody*$10067$bmrAn)
                                                            ((case-lambda
                                                               ((g$xlab*$10068$bmrAn)
                                                                ((case-lambda
                                                                   ((g$xrib$10069$bmrAn)
                                                                    ((case-lambda
                                                                       ((g$xb*$10070$bmrAn)
                                                                        (g$build-sequence$7632$bmrAn
                                                                          '#f
                                                                          (g$chi-expr*$7997$bmrAn
                                                                            (g$map$5063$bmrAn
                                                                              (case-lambda
                                                                                ((g$x$10071$bmrAn)
                                                                                 (g$add-subst$7693$bmrAn
                                                                                   g$xrib$10069$bmrAn
                                                                                   g$x$10071$bmrAn)))
                                                                              (cons
                                                                                g$xbody$10066$bmrAn
                                                                                g$xbody*$10067$bmrAn))
                                                                            (append
                                                                              (g$map$5063$bmrAn
                                                                                cons
                                                                                g$xlab*$10068$bmrAn
                                                                                g$xb*$10070$bmrAn)
                                                                              g$r$10036$bmrAn)
                                                                            (append
                                                                              (g$map$5063$bmrAn
                                                                                cons
                                                                                g$xlab*$10068$bmrAn
                                                                                g$xb*$10070$bmrAn)
                                                                              g$mr$10037$bmrAn)))))
                                                                     (g$map$5063$bmrAn
                                                                       (case-lambda
                                                                         ((g$x$10072$bmrAn)
                                                                          (g$make-eval-transformer$7735$bmrAn
                                                                            (g$expand-transformer$8026$bmrAn
                                                                              (if (eq? g$type$10046$bmrAn
                                                                                       'let-syntax)
                                                                                g$x$10072$bmrAn
                                                                                (g$add-subst$7693$bmrAn
                                                                                  g$xrib$10069$bmrAn
                                                                                  g$x$10072$bmrAn))
                                                                              g$mr$10037$bmrAn))))
                                                                       g$xrhs*$10065$bmrAn))))
                                                                 (g$make-full-rib$7671$bmrAn
                                                                   g$xlhs*$10064$bmrAn
                                                                   g$xlab*$10068$bmrAn))))
                                                             (g$map$5063$bmrAn
                                                               g$gen-label$7644$bmrAn
                                                               g$xlhs*$10064$bmrAn))))
                                                         g$ls/false$10059$bmrAn)
                                                       (g$syntax-violation$8093$bmrAn
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$10058$bmrAn))))
                                                  (g$syntax-dispatch$7981$bmrAn
                                                    g$t$10058$bmrAn
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$10035$bmrAn)
                                             (if (g$memv$5056$bmrAn
                                                   g$t$10047$bmrAn
                                                   '(displaced-lexical))
                                               (g$syntax-violation$8093$bmrAn
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$10035$bmrAn)
                                               (if (g$memv$5056$bmrAn
                                                     g$t$10047$bmrAn
                                                     '(syntax))
                                                 (g$syntax-violation$8093$bmrAn
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$10035$bmrAn)
                                                 (if (g$memv$5056$bmrAn
                                                       g$t$10047$bmrAn
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$8093$bmrAn
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$10073$bmrAn)
                                                           (if (g$memv$5056$bmrAn
                                                                 g$t$10073$bmrAn
                                                                 '(define))
                                                             '"a definition"
                                                             (if (g$memv$5056$bmrAn
                                                                   g$t$10073$bmrAn
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (g$memv$5056$bmrAn
                                                                     g$t$10073$bmrAn
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (g$memv$5056$bmrAn
                                                                       g$t$10073$bmrAn
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (g$memv$5056$bmrAn
                                                                         g$t$10073$bmrAn
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     (if (g$memv$5056$bmrAn
                                                                           g$t$10073$bmrAn
                                                                           '(export))
                                                                       '"an export declaration"
                                                                       '"a non-expression"))))))))
                                                        g$type$10046$bmrAn)
                                                       '" was found where an expression was expected")
                                                     g$e$10035$bmrAn)
                                                   (if (g$memv$5056$bmrAn
                                                         g$t$10047$bmrAn
                                                         '(mutable))
                                                     (g$syntax-violation$8093$bmrAn
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$10035$bmrAn)
                                                     (g$syntax-violation$8093$bmrAn
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$10035$bmrAn)))))))))))))))))))
                  g$type$10046$bmrAn)))
              g$kwd$10043$bmrAn
              g$value$10042$bmrAn
              g$type$10041$bmrAn)))))))
   (g$chi-set!$8000$bmrAn
     g$chi-set!$11503$bmrAn
     (case-lambda
       ((g$e$10074$bmrAn g$r$10075$bmrAn g$mr$10076$bmrAn)
        ((case-lambda
           ((g$t$10077$bmrAn)
            ((case-lambda
               ((g$ls/false$10078$bmrAn)
                (if (if g$ls/false$10078$bmrAn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$10079$bmrAn g$v$10080$bmrAn)
                             (g$id?$7703$bmrAn g$x$10079$bmrAn)))
                          g$ls/false$10078$bmrAn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$10081$bmrAn g$v$10082$bmrAn)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$7723$bmrAn
                              g$x$10081$bmrAn
                              g$r$10075$bmrAn)))
                         (case-lambda
                           ((g$type$10086$bmrAn
                              g$value$10087$bmrAn
                              g$kwd$10088$bmrAn)
                            ((case-lambda
                               ((g$kwd$10089$bmrAn
                                  g$value$10090$bmrAn
                                  g$type$10091$bmrAn)
                                ((case-lambda
                                   ((g$t$10092$bmrAn)
                                    (if (g$memv$5056$bmrAn
                                          g$t$10092$bmrAn
                                          '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$7927$bmrAn
                                          g$value$10090$bmrAn
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7925$bmrAn
                                            g$value$10090$bmrAn)
                                          (g$chi-expr$7999$bmrAn
                                            g$v$10082$bmrAn
                                            g$r$10075$bmrAn
                                            g$mr$10076$bmrAn)))
                                      (if (g$memv$5056$bmrAn
                                            g$t$10092$bmrAn
                                            '(core-prim))
                                        (g$syntax-violation$8093$bmrAn
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$10074$bmrAn)
                                        (if (g$memv$5056$bmrAn
                                              g$t$10092$bmrAn
                                              '(global))
                                          (g$syntax-violation$8093$bmrAn
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$10074$bmrAn)
                                          (if (g$memv$5056$bmrAn
                                                g$t$10092$bmrAn
                                                '(global-macro!))
                                            (g$chi-expr$7999$bmrAn
                                              (g$chi-global-macro$7996$bmrAn
                                                g$value$10090$bmrAn
                                                g$e$10074$bmrAn)
                                              g$r$10075$bmrAn
                                              g$mr$10076$bmrAn)
                                            (if (g$memv$5056$bmrAn
                                                  g$t$10092$bmrAn
                                                  '(local-macro!))
                                              (g$chi-expr$7999$bmrAn
                                                (g$chi-local-macro$7995$bmrAn
                                                  g$value$10090$bmrAn
                                                  g$e$10074$bmrAn)
                                                g$r$10075$bmrAn
                                                g$mr$10076$bmrAn)
                                              (if (g$memv$5056$bmrAn
                                                    g$t$10092$bmrAn
                                                    '(mutable))
                                                (g$syntax-violation$8093$bmrAn
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$10074$bmrAn)
                                                (g$syntax-violation$8093$bmrAn
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$10074$bmrAn)))))))))
                                 g$type$10091$bmrAn)))
                             g$kwd$10088$bmrAn
                             g$value$10087$bmrAn
                             g$type$10086$bmrAn))))))
                    g$ls/false$10078$bmrAn)
                  (g$syntax-violation$8093$bmrAn
                    '#f
                    '"invalid syntax"
                    g$t$10077$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$10077$bmrAn '(_ any any)))))
         g$e$10074$bmrAn))))
   (g$verify-formals$8001$bmrAn
     g$verify-formals$11504$bmrAn
     (case-lambda
       ((g$fmls$10093$bmrAn g$stx$10094$bmrAn)
        ((case-lambda
           ((g$t$10095$bmrAn)
            ((case-lambda
               ((g$ls/false$10096$bmrAn)
                (if g$ls/false$10096$bmrAn
                  (apply
                    (case-lambda
                      ((g$x*$10097$bmrAn)
                       (if (not (g$valid-bound-ids?$7708$bmrAn
                                  g$x*$10097$bmrAn))
                         (g$invalid-fmls-error$7946$bmrAn
                           g$stx$10094$bmrAn
                           g$fmls$10093$bmrAn)
                         (void))))
                    g$ls/false$10096$bmrAn)
                  ((case-lambda
                     ((g$t$10098$bmrAn)
                      ((case-lambda
                         ((g$ls/false$10099$bmrAn)
                          (if g$ls/false$10099$bmrAn
                            (apply
                              (case-lambda
                                ((g$x*$10100$bmrAn g$x$10101$bmrAn)
                                 (if (not (g$valid-bound-ids?$7708$bmrAn
                                            (cons
                                              g$x$10101$bmrAn
                                              g$x*$10100$bmrAn)))
                                   (g$invalid-fmls-error$7946$bmrAn
                                     g$stx$10094$bmrAn
                                     g$fmls$10093$bmrAn)
                                   (void))))
                              g$ls/false$10099$bmrAn)
                            ((case-lambda
                               ((g$t$10102$bmrAn)
                                ((case-lambda
                                   ((g$ls/false$10103$bmrAn)
                                    (if g$ls/false$10103$bmrAn
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$8093$bmrAn
                                             '#f
                                             '"invalid syntax"
                                             g$stx$10094$bmrAn)))
                                        g$ls/false$10103$bmrAn)
                                      (g$syntax-violation$8093$bmrAn
                                        '#f
                                        '"invalid syntax"
                                        g$t$10102$bmrAn))))
                                 (g$syntax-dispatch$7981$bmrAn
                                   g$t$10102$bmrAn
                                   '_))))
                             g$t$10098$bmrAn))))
                       (g$syntax-dispatch$7981$bmrAn
                         g$t$10098$bmrAn
                         '#(each+ any () any)))))
                   g$t$10095$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$10095$bmrAn 'each-any))))
         g$fmls$10093$bmrAn))))
   (g$chi-lambda-clause$8002$bmrAn
     g$chi-lambda-clause$11505$bmrAn
     (case-lambda
       ((g$stx$10104$bmrAn
          g$fmls$10105$bmrAn
          g$body*$10106$bmrAn
          g$r$10107$bmrAn
          g$mr$10108$bmrAn)
        ((case-lambda
           ((g$t$10109$bmrAn)
            ((case-lambda
               ((g$ls/false$10110$bmrAn)
                (if g$ls/false$10110$bmrAn
                  (apply
                    (case-lambda
                      ((g$x*$10111$bmrAn)
                       (begin
                         (g$verify-formals$8001$bmrAn
                           g$fmls$10105$bmrAn
                           g$stx$10104$bmrAn)
                         ((case-lambda
                            ((g$lex*$10112$bmrAn g$lab*$10113$bmrAn)
                             (values
                               g$lex*$10112$bmrAn
                               (g$chi-internal$8010$bmrAn
                                 (g$add-subst$7693$bmrAn
                                   (g$make-full-rib$7671$bmrAn
                                     g$x*$10111$bmrAn
                                     g$lab*$10113$bmrAn)
                                   g$body*$10106$bmrAn)
                                 (g$add-lexicals$7929$bmrAn
                                   g$lab*$10113$bmrAn
                                   g$lex*$10112$bmrAn
                                   g$r$10107$bmrAn)
                                 g$mr$10108$bmrAn))))
                          (g$map$5063$bmrAn
                            g$gen-lexical$7642$bmrAn
                            g$x*$10111$bmrAn)
                          (g$map$5063$bmrAn
                            g$gen-label$7644$bmrAn
                            g$x*$10111$bmrAn)))))
                    g$ls/false$10110$bmrAn)
                  ((case-lambda
                     ((g$t$10114$bmrAn)
                      ((case-lambda
                         ((g$ls/false$10115$bmrAn)
                          (if g$ls/false$10115$bmrAn
                            (apply
                              (case-lambda
                                ((g$x*$10116$bmrAn g$x$10117$bmrAn)
                                 (begin
                                   (g$verify-formals$8001$bmrAn
                                     g$fmls$10105$bmrAn
                                     g$stx$10104$bmrAn)
                                   ((case-lambda
                                      ((g$lex*$10118$bmrAn
                                         g$lab*$10119$bmrAn
                                         g$lex$10120$bmrAn
                                         g$lab$10121$bmrAn)
                                       (values
                                         (append
                                           g$lex*$10118$bmrAn
                                           g$lex$10120$bmrAn)
                                         (g$chi-internal$8010$bmrAn
                                           (g$add-subst$7693$bmrAn
                                             (g$make-full-rib$7671$bmrAn
                                               (cons
                                                 g$x$10117$bmrAn
                                                 g$x*$10116$bmrAn)
                                               (cons
                                                 g$lab$10121$bmrAn
                                                 g$lab*$10119$bmrAn))
                                             g$body*$10106$bmrAn)
                                           (g$add-lexicals$7929$bmrAn
                                             (cons
                                               g$lab$10121$bmrAn
                                               g$lab*$10119$bmrAn)
                                             (cons
                                               g$lex$10120$bmrAn
                                               g$lex*$10118$bmrAn)
                                             g$r$10107$bmrAn)
                                           g$mr$10108$bmrAn))))
                                    (g$map$5063$bmrAn
                                      g$gen-lexical$7642$bmrAn
                                      g$x*$10116$bmrAn)
                                    (g$map$5063$bmrAn
                                      g$gen-label$7644$bmrAn
                                      g$x*$10116$bmrAn)
                                    (g$gen-lexical$7642$bmrAn g$x$10117$bmrAn)
                                    (g$gen-label$7644$bmrAn g$x$10117$bmrAn)))))
                              g$ls/false$10115$bmrAn)
                            ((case-lambda
                               ((g$t$10122$bmrAn)
                                ((case-lambda
                                   ((g$ls/false$10123$bmrAn)
                                    (if g$ls/false$10123$bmrAn
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$8093$bmrAn
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$10105$bmrAn)))
                                        g$ls/false$10123$bmrAn)
                                      (g$syntax-violation$8093$bmrAn
                                        '#f
                                        '"invalid syntax"
                                        g$t$10122$bmrAn))))
                                 (g$syntax-dispatch$7981$bmrAn
                                   g$t$10122$bmrAn
                                   '_))))
                             g$t$10114$bmrAn))))
                       (g$syntax-dispatch$7981$bmrAn
                         g$t$10114$bmrAn
                         '#(each+ any () any)))))
                   g$t$10109$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$10109$bmrAn 'each-any))))
         g$fmls$10105$bmrAn))))
   (g$chi-lambda-clause*$8003$bmrAn
     g$chi-lambda-clause*$11506$bmrAn
     (case-lambda
       ((g$stx$10124$bmrAn
          g$fmls*$10125$bmrAn
          g$body**$10126$bmrAn
          g$r$10127$bmrAn
          g$mr$10128$bmrAn)
        (if (null? g$fmls*$10125$bmrAn)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$8002$bmrAn
                 g$stx$10124$bmrAn
                 (car g$fmls*$10125$bmrAn)
                 (car g$body**$10126$bmrAn)
                 g$r$10127$bmrAn
                 g$mr$10128$bmrAn)))
            (case-lambda
              ((g$a$10131$bmrAn g$b$10132$bmrAn)
               ((case-lambda
                  ((g$b$10133$bmrAn g$a$10134$bmrAn)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$8003$bmrAn
                          g$stx$10124$bmrAn
                          (cdr g$fmls*$10125$bmrAn)
                          (cdr g$body**$10126$bmrAn)
                          g$r$10127$bmrAn
                          g$mr$10128$bmrAn)))
                     (case-lambda
                       ((g$a*$10137$bmrAn g$b*$10138$bmrAn)
                        ((case-lambda
                           ((g$b*$10139$bmrAn g$a*$10140$bmrAn)
                            (values
                              (cons g$a$10134$bmrAn g$a*$10140$bmrAn)
                              (cons g$b$10133$bmrAn g$b*$10139$bmrAn))))
                         g$b*$10138$bmrAn
                         g$a*$10137$bmrAn))))))
                g$b$10132$bmrAn
                g$a$10131$bmrAn))))))))
   (g$chi-defun$8004$bmrAn
     g$chi-defun$11507$bmrAn
     (case-lambda
       ((g$x$10141$bmrAn g$r$10142$bmrAn g$mr$10143$bmrAn)
        ((case-lambda
           ((g$fmls$10144$bmrAn g$body*$10145$bmrAn)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$8002$bmrAn
                   g$fmls$10144$bmrAn
                   g$fmls$10144$bmrAn
                   g$body*$10145$bmrAn
                   g$r$10142$bmrAn
                   g$mr$10143$bmrAn)))
              (case-lambda
                ((g$fmls$10148$bmrAn g$body$10149$bmrAn)
                 ((case-lambda
                    ((g$body$10150$bmrAn g$fmls$10151$bmrAn)
                     (g$build-lambda$7629$bmrAn
                       '#f
                       g$fmls$10151$bmrAn
                       g$body$10150$bmrAn)))
                  g$body$10149$bmrAn
                  g$fmls$10148$bmrAn))))))
         (car g$x$10141$bmrAn)
         (cdr g$x$10141$bmrAn)))))
   (g$chi-rhs$8005$bmrAn
     g$chi-rhs$11508$bmrAn
     (case-lambda
       ((g$rhs$10152$bmrAn g$r$10153$bmrAn g$mr$10154$bmrAn)
        ((case-lambda
           ((g$t$10155$bmrAn)
            (if (g$memv$5056$bmrAn g$t$10155$bmrAn '(defun))
              (g$chi-defun$8004$bmrAn
                (cdr g$rhs$10152$bmrAn)
                g$r$10153$bmrAn
                g$mr$10154$bmrAn)
              (if (g$memv$5056$bmrAn g$t$10155$bmrAn '(expr))
                ((case-lambda
                   ((g$expr$10156$bmrAn)
                    (g$chi-expr$7999$bmrAn
                      g$expr$10156$bmrAn
                      g$r$10153$bmrAn
                      g$mr$10154$bmrAn)))
                 (cdr g$rhs$10152$bmrAn))
                (if (g$memv$5056$bmrAn g$t$10155$bmrAn '(top-expr))
                  ((case-lambda
                     ((g$expr$10157$bmrAn)
                      (g$build-sequence$7632$bmrAn
                        '#f
                        (list
                          (g$chi-expr$7999$bmrAn
                            g$expr$10157$bmrAn
                            g$r$10153$bmrAn
                            g$mr$10154$bmrAn)
                          (g$build-void$7633$bmrAn)))))
                   (cdr g$rhs$10152$bmrAn))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$10152$bmrAn))))))
         (car g$rhs$10152$bmrAn)))))
   (g$expand-interaction-rhs*/init*$8006$bmrAn
     g$expand-interaction-rhs*/init*$11509$bmrAn
     (case-lambda
       ((g$lhs*$10158$bmrAn
          g$rhs*$10159$bmrAn
          g$init*$10160$bmrAn
          g$r$10161$bmrAn
          g$mr$10162$bmrAn)
        ((letrec ((g$f$10163$bmrAn
                    (case-lambda
                      ((g$lhs*$10164$bmrAn g$rhs*$10165$bmrAn)
                       (if (null? g$lhs*$10164$bmrAn)
                         (g$map$5063$bmrAn
                           (case-lambda
                             ((g$x$10166$bmrAn)
                              (g$chi-expr$7999$bmrAn
                                g$x$10166$bmrAn
                                g$r$10161$bmrAn
                                g$mr$10162$bmrAn)))
                           g$init*$10160$bmrAn)
                         ((case-lambda
                            ((g$lhs$10167$bmrAn g$rhs$10168$bmrAn)
                             ((case-lambda
                                ((g$t$10169$bmrAn)
                                 (if (g$memv$5056$bmrAn
                                       g$t$10169$bmrAn
                                       '(defun))
                                   ((case-lambda
                                      ((g$rhs$10170$bmrAn)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$10167$bmrAn
                                           g$rhs$10170$bmrAn)
                                         (g$f$10163$bmrAn
                                           (cdr g$lhs*$10164$bmrAn)
                                           (cdr g$rhs*$10165$bmrAn)))))
                                    (g$chi-defun$8004$bmrAn
                                      (cdr g$rhs$10168$bmrAn)
                                      g$r$10161$bmrAn
                                      g$mr$10162$bmrAn))
                                   (if (g$memv$5056$bmrAn
                                         g$t$10169$bmrAn
                                         '(expr))
                                     ((case-lambda
                                        ((g$rhs$10171$bmrAn)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$10167$bmrAn
                                             g$rhs$10171$bmrAn)
                                           (g$f$10163$bmrAn
                                             (cdr g$lhs*$10164$bmrAn)
                                             (cdr g$rhs*$10165$bmrAn)))))
                                      (g$chi-expr$7999$bmrAn
                                        (cdr g$rhs$10168$bmrAn)
                                        g$r$10161$bmrAn
                                        g$mr$10162$bmrAn))
                                     (if (g$memv$5056$bmrAn
                                           g$t$10169$bmrAn
                                           '(top-expr))
                                       ((case-lambda
                                          ((g$e$10172$bmrAn)
                                           (cons
                                             g$e$10172$bmrAn
                                             (g$f$10163$bmrAn
                                               (cdr g$lhs*$10164$bmrAn)
                                               (cdr g$rhs*$10165$bmrAn)))))
                                        (g$chi-expr$7999$bmrAn
                                          (cdr g$rhs$10168$bmrAn)
                                          g$r$10161$bmrAn
                                          g$mr$10162$bmrAn))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$10168$bmrAn))))))
                              (car g$rhs$10168$bmrAn))))
                          (car g$lhs*$10164$bmrAn)
                          (car g$rhs*$10165$bmrAn)))))))
           g$f$10163$bmrAn)
         g$lhs*$10158$bmrAn
         g$rhs*$10159$bmrAn))))
   (g$chi-rhs*$8007$bmrAn
     g$chi-rhs*$11510$bmrAn
     (case-lambda
       ((g$rhs*$10173$bmrAn g$r$10174$bmrAn g$mr$10175$bmrAn)
        ((letrec ((g$f$10176$bmrAn
                    (case-lambda
                      ((g$ls$10177$bmrAn)
                       (if (null? g$ls$10177$bmrAn)
                         '()
                         ((case-lambda
                            ((g$a$10178$bmrAn)
                             (cons
                               g$a$10178$bmrAn
                               (g$f$10176$bmrAn (cdr g$ls$10177$bmrAn)))))
                          (g$chi-rhs$8005$bmrAn
                            (car g$ls$10177$bmrAn)
                            g$r$10174$bmrAn
                            g$mr$10175$bmrAn)))))))
           g$f$10176$bmrAn)
         g$rhs*$10173$bmrAn))))
   (g$find-bound=?$8008$bmrAn
     g$find-bound=?$11511$bmrAn
     (case-lambda
       ((g$x$10179$bmrAn g$lhs*$10180$bmrAn g$rhs*$10181$bmrAn)
        (if (null? g$lhs*$10180$bmrAn)
          '#f
          (if (g$bound-id=?$7706$bmrAn g$x$10179$bmrAn (car g$lhs*$10180$bmrAn))
            (car g$rhs*$10181$bmrAn)
            (g$find-bound=?$8008$bmrAn
              g$x$10179$bmrAn
              (cdr g$lhs*$10180$bmrAn)
              (cdr g$rhs*$10181$bmrAn)))))))
   (g$find-dups$8009$bmrAn
     g$find-dups$11512$bmrAn
     (case-lambda
       ((g$ls$10182$bmrAn)
        ((letrec ((g$f$10183$bmrAn
                    (case-lambda
                      ((g$ls$10184$bmrAn g$dups$10185$bmrAn)
                       (if (null? g$ls$10184$bmrAn)
                         g$dups$10185$bmrAn
                         ((case-lambda
                            ((g$t$10186$bmrAn)
                             (if g$t$10186$bmrAn
                               ((case-lambda
                                  ((g$x$10187$bmrAn)
                                   (g$f$10183$bmrAn
                                     (cdr g$ls$10184$bmrAn)
                                     (cons
                                       (list
                                         (car g$ls$10184$bmrAn)
                                         g$x$10187$bmrAn)
                                       g$dups$10185$bmrAn))))
                                g$t$10186$bmrAn)
                               (g$f$10183$bmrAn
                                 (cdr g$ls$10184$bmrAn)
                                 g$dups$10185$bmrAn))))
                          (g$find-bound=?$8008$bmrAn
                            (car g$ls$10184$bmrAn)
                            (cdr g$ls$10184$bmrAn)
                            (cdr g$ls$10184$bmrAn))))))))
           g$f$10183$bmrAn)
         g$ls$10182$bmrAn
         '()))))
   (g$chi-internal$8010$bmrAn
     g$chi-internal$11513$bmrAn
     (case-lambda
       ((g$e*$10188$bmrAn g$r$10189$bmrAn g$mr$10190$bmrAn)
        ((case-lambda
           ((g$rib$10191$bmrAn)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$8025$bmrAn
                   (g$map$5063$bmrAn
                     (case-lambda
                       ((g$x$10200$bmrAn)
                        (g$add-subst$7693$bmrAn
                          g$rib$10191$bmrAn
                          g$x$10200$bmrAn)))
                     (g$syntax->list$7702$bmrAn g$e*$10188$bmrAn))
                   g$r$10189$bmrAn
                   g$mr$10190$bmrAn
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$10191$bmrAn
                   '#f
                   '#t)))
              (case-lambda
                ((g$e*$10201$bmrAn
                   g$r$10202$bmrAn
                   g$mr$10203$bmrAn
                   g$lex*$10204$bmrAn
                   g$rhs*$10205$bmrAn
                   g$mod**$10206$bmrAn
                   g$kwd*$10207$bmrAn
                   g$_exp*$10208$bmrAn)
                 ((case-lambda
                    ((g$_exp*$10209$bmrAn
                       g$kwd*$10210$bmrAn
                       g$mod**$10211$bmrAn
                       g$rhs*$10212$bmrAn
                       g$lex*$10213$bmrAn
                       g$mr$10214$bmrAn
                       g$r$10215$bmrAn
                       g$e*$10216$bmrAn)
                     (begin
                       (if (null? g$e*$10216$bmrAn)
                         (g$syntax-violation$8093$bmrAn
                           '#f
                           '"no expression in body"
                           g$e*$10216$bmrAn)
                         (void))
                       ((case-lambda
                          ((g$init*$10217$bmrAn)
                           ((case-lambda
                              ((g$rhs*$10218$bmrAn)
                               (g$build-letrec*$7635$bmrAn
                                 '#f
                                 (reverse g$lex*$10213$bmrAn)
                                 (reverse g$rhs*$10218$bmrAn)
                                 (g$build-sequence$7632$bmrAn
                                   '#f
                                   g$init*$10217$bmrAn))))
                            (g$chi-rhs*$8007$bmrAn
                              g$rhs*$10212$bmrAn
                              g$r$10215$bmrAn
                              g$mr$10214$bmrAn))))
                        (g$chi-expr*$7997$bmrAn
                          (append
                            (apply append (reverse g$mod**$10211$bmrAn))
                            g$e*$10216$bmrAn)
                          g$r$10215$bmrAn
                          g$mr$10214$bmrAn)))))
                  g$_exp*$10208$bmrAn
                  g$kwd*$10207$bmrAn
                  g$mod**$10206$bmrAn
                  g$rhs*$10205$bmrAn
                  g$lex*$10204$bmrAn
                  g$mr$10203$bmrAn
                  g$r$10202$bmrAn
                  g$e*$10201$bmrAn))))))
         (g$make-empty-rib$7663$bmrAn)))))
   (g$parse-module$8011$bmrAn
     g$parse-module$11514$bmrAn
     (case-lambda
       ((g$e$10219$bmrAn)
        ((case-lambda
           ((g$t$10220$bmrAn)
            ((case-lambda
               ((g$ls/false$10221$bmrAn)
                (if g$ls/false$10221$bmrAn
                  (apply
                    (case-lambda
                      ((g$export*$10222$bmrAn g$b*$10223$bmrAn)
                       (begin
                         (if (not (g$for-all$5061$bmrAn
                                    g$id?$7703$bmrAn
                                    g$export*$10222$bmrAn))
                           (g$syntax-violation$8093$bmrAn
                             '#f
                             '"module exports must be identifiers"
                             g$e$10219$bmrAn)
                           (void))
                         (values
                           '#f
                           (list->vector g$export*$10222$bmrAn)
                           g$b*$10223$bmrAn))))
                    g$ls/false$10221$bmrAn)
                  ((case-lambda
                     ((g$t$10224$bmrAn)
                      ((case-lambda
                         ((g$ls/false$10225$bmrAn)
                          (if g$ls/false$10225$bmrAn
                            (apply
                              (case-lambda
                                ((g$name$10226$bmrAn
                                   g$export*$10227$bmrAn
                                   g$b*$10228$bmrAn)
                                 (begin
                                   (if (not (g$id?$7703$bmrAn
                                              g$name$10226$bmrAn))
                                     (g$syntax-violation$8093$bmrAn
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$10219$bmrAn)
                                     (void))
                                   (if (not (g$for-all$5061$bmrAn
                                              g$id?$7703$bmrAn
                                              g$export*$10227$bmrAn))
                                     (g$syntax-violation$8093$bmrAn
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$10219$bmrAn)
                                     (void))
                                   (values
                                     g$name$10226$bmrAn
                                     (list->vector g$export*$10227$bmrAn)
                                     g$b*$10228$bmrAn))))
                              g$ls/false$10225$bmrAn)
                            (g$syntax-violation$8093$bmrAn
                              '#f
                              '"invalid syntax"
                              g$t$10224$bmrAn))))
                       (g$syntax-dispatch$7981$bmrAn
                         g$t$10224$bmrAn
                         '(_ any each-any . each-any)))))
                   g$t$10220$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn
               g$t$10220$bmrAn
               '(_ each-any . each-any)))))
         g$e$10219$bmrAn))))
   (g$9055$8012$bmrAn
     g$9055$11515$bmrAn
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$9058$bmrAn
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$9057$8013$bmrAn g$9057$11516$bmrAn '#f)
   (g$9056$8014$bmrAn
     g$9056$11517$bmrAn
     (make-record-constructor-descriptor
       g$9055$8012$bmrAn
       '#f
       g$9057$8013$bmrAn))
   (g$module-interface?$8015$bmrAn
     g$module-interface?$11518$bmrAn
     (record-predicate g$9055$8012$bmrAn))
   (g$make-module-interface$8016$bmrAn
     g$make-module-interface$11519$bmrAn
     (record-constructor g$9056$8014$bmrAn))
   (g$module-interface-first-mark$8017$bmrAn
     g$module-interface-first-mark$11520$bmrAn
     (record-accessor g$9055$8012$bmrAn '0))
   (g$module-interface-exp-id-vec$8018$bmrAn
     g$module-interface-exp-id-vec$11521$bmrAn
     (record-accessor g$9055$8012$bmrAn '1))
   (g$module-interface-exp-lab-vec$8019$bmrAn
     g$module-interface-exp-lab-vec$11522$bmrAn
     (record-accessor g$9055$8012$bmrAn '2))
   (g$set-module-interface-first-mark!$8020$bmrAn
     g$set-module-interface-first-mark!$11523$bmrAn
     (record-mutator g$9055$8012$bmrAn '0))
   (g$set-module-interface-exp-id-vec!$8021$bmrAn
     g$set-module-interface-exp-id-vec!$11524$bmrAn
     (record-mutator g$9055$8012$bmrAn '1))
   (g$set-module-interface-exp-lab-vec!$8022$bmrAn
     g$set-module-interface-exp-lab-vec!$11525$bmrAn
     (record-mutator g$9055$8012$bmrAn '2))
   (g$module-interface-exp-id*$8023$bmrAn
     g$module-interface-exp-id*$11526$bmrAn
     (case-lambda
       ((g$iface$10229$bmrAn g$id$10230$bmrAn)
        (letrec* ((g$diff-marks$10231$bmrAn
                    (case-lambda
                      ((g$ls$10235$bmrAn g$x$10236$bmrAn)
                       (begin
                         (if (null? g$ls$10235$bmrAn)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$10237$bmrAn)
                             (if (eq? g$a$10237$bmrAn g$x$10236$bmrAn)
                               '()
                               (cons
                                 g$a$10237$bmrAn
                                 (g$diff-marks$10231$bmrAn
                                   (cdr g$ls$10235$bmrAn)
                                   g$x$10236$bmrAn)))))
                          (car g$ls$10235$bmrAn)))))))
          ((case-lambda
             ((g$diff$10232$bmrAn g$id-vec$10233$bmrAn)
              (if (null? g$diff$10232$bmrAn)
                g$id-vec$10233$bmrAn
                (vector-map
                  (case-lambda
                    ((g$x$10234$bmrAn)
                     (g$make-stx$7676$bmrAn
                       (g$stx-expr$7677$bmrAn g$x$10234$bmrAn)
                       (append
                         g$diff$10232$bmrAn
                         (g$stx-mark*$7678$bmrAn g$x$10234$bmrAn))
                       '()
                       '())))
                  g$id-vec$10233$bmrAn))))
           (g$diff-marks$10231$bmrAn
             (g$stx-mark*$7678$bmrAn g$id$10230$bmrAn)
             (g$module-interface-first-mark$8017$bmrAn g$iface$10229$bmrAn))
           (g$module-interface-exp-id-vec$8018$bmrAn g$iface$10229$bmrAn))))))
   (g$chi-internal-module$8024$bmrAn
     g$chi-internal-module$11527$bmrAn
     (case-lambda
       ((g$e$10238$bmrAn
          g$r$10239$bmrAn
          g$mr$10240$bmrAn
          g$lex*$10241$bmrAn
          g$rhs*$10242$bmrAn
          g$mod**$10243$bmrAn
          g$kwd*$10244$bmrAn)
        (call-with-values
          (case-lambda (() (g$parse-module$8011$bmrAn g$e$10238$bmrAn)))
          (case-lambda
            ((g$name$10248$bmrAn g$exp-id*$10249$bmrAn g$e*$10250$bmrAn)
             ((case-lambda
                ((g$e*$10251$bmrAn g$exp-id*$10252$bmrAn g$name$10253$bmrAn)
                 ((case-lambda
                    ((g$rib$10254$bmrAn)
                     ((case-lambda
                        ((g$e*$10255$bmrAn)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-body*$8025$bmrAn
                                g$e*$10255$bmrAn
                                g$r$10239$bmrAn
                                g$mr$10240$bmrAn
                                g$lex*$10241$bmrAn
                                g$rhs*$10242$bmrAn
                                g$mod**$10243$bmrAn
                                g$kwd*$10244$bmrAn
                                '()
                                g$rib$10254$bmrAn
                                '#f
                                '#t)))
                           (case-lambda
                             ((g$e*$10264$bmrAn
                                g$r$10265$bmrAn
                                g$mr$10266$bmrAn
                                g$lex*$10267$bmrAn
                                g$rhs*$10268$bmrAn
                                g$mod**$10269$bmrAn
                                g$kwd*$10270$bmrAn
                                g$_exp*$10271$bmrAn)
                              ((case-lambda
                                 ((g$_exp*$10272$bmrAn
                                    g$kwd*$10273$bmrAn
                                    g$mod**$10274$bmrAn
                                    g$rhs*$10275$bmrAn
                                    g$lex*$10276$bmrAn
                                    g$mr$10277$bmrAn
                                    g$r$10278$bmrAn
                                    g$e*$10279$bmrAn)
                                  ((case-lambda
                                     ((g$exp-lab*$10280$bmrAn
                                        g$mod**$10281$bmrAn)
                                      (if (not g$name$10253$bmrAn)
                                        (values
                                          g$lex*$10276$bmrAn
                                          g$rhs*$10275$bmrAn
                                          g$exp-id*$10252$bmrAn
                                          g$exp-lab*$10280$bmrAn
                                          g$r$10278$bmrAn
                                          g$mr$10277$bmrAn
                                          g$mod**$10281$bmrAn
                                          g$kwd*$10273$bmrAn)
                                        ((case-lambda
                                           ((g$lab$10282$bmrAn
                                              g$iface$10283$bmrAn)
                                            (values
                                              g$lex*$10276$bmrAn
                                              g$rhs*$10275$bmrAn
                                              (vector g$name$10253$bmrAn)
                                              (vector g$lab$10282$bmrAn)
                                              (cons
                                                (cons
                                                  g$lab$10282$bmrAn
                                                  (cons
                                                    '$module
                                                    g$iface$10283$bmrAn))
                                                g$r$10278$bmrAn)
                                              (cons
                                                (cons
                                                  g$lab$10282$bmrAn
                                                  (cons
                                                    '$module
                                                    g$iface$10283$bmrAn))
                                                g$mr$10277$bmrAn)
                                              g$mod**$10281$bmrAn
                                              g$kwd*$10273$bmrAn)))
                                         (g$gen-label$7644$bmrAn 'module)
                                         (g$make-module-interface$8016$bmrAn
                                           (car (g$stx-mark*$7678$bmrAn
                                                  g$name$10253$bmrAn))
                                           (vector-map
                                             (case-lambda
                                               ((g$x$10284$bmrAn)
                                                (g$make-stx$7676$bmrAn
                                                  (g$stx-expr$7677$bmrAn
                                                    g$x$10284$bmrAn)
                                                  (g$stx-mark*$7678$bmrAn
                                                    g$x$10284$bmrAn)
                                                  '()
                                                  '())))
                                             g$exp-id*$10252$bmrAn)
                                           g$exp-lab*$10280$bmrAn)))))
                                   (vector-map
                                     (case-lambda
                                       ((g$x$10285$bmrAn)
                                        ((case-lambda
                                           ((g$t$10286$bmrAn)
                                            (if g$t$10286$bmrAn
                                              g$t$10286$bmrAn
                                              (begin
                                                '#f
                                                (g$syntax-violation$8093$bmrAn
                                                  '#f
                                                  '"cannot find module export"
                                                  g$x$10285$bmrAn)))))
                                         (g$id->label$7716$bmrAn
                                           (g$make-stx$7676$bmrAn
                                             (g$id->sym$7704$bmrAn
                                               g$x$10285$bmrAn)
                                             (g$stx-mark*$7678$bmrAn
                                               g$x$10285$bmrAn)
                                             (list g$rib$10254$bmrAn)
                                             '())))))
                                     g$exp-id*$10252$bmrAn)
                                   (cons
                                     g$e*$10279$bmrAn
                                     g$mod**$10274$bmrAn))))
                               g$_exp*$10271$bmrAn
                               g$kwd*$10270$bmrAn
                               g$mod**$10269$bmrAn
                               g$rhs*$10268$bmrAn
                               g$lex*$10267$bmrAn
                               g$mr$10266$bmrAn
                               g$r$10265$bmrAn
                               g$e*$10264$bmrAn))))))
                      (g$map$5063$bmrAn
                        (case-lambda
                          ((g$x$10287$bmrAn)
                           (g$add-subst$7693$bmrAn
                             g$rib$10254$bmrAn
                             g$x$10287$bmrAn)))
                        (g$syntax->list$7702$bmrAn g$e*$10251$bmrAn)))))
                  (g$make-empty-rib$7663$bmrAn))))
              g$e*$10250$bmrAn
              g$exp-id*$10249$bmrAn
              g$name$10248$bmrAn)))))))
   (g$chi-body*$8025$bmrAn
     g$chi-body*$11528$bmrAn
     (case-lambda
       ((g$e*$10288$bmrAn
          g$r$10289$bmrAn
          g$mr$10290$bmrAn
          g$lex*$10291$bmrAn
          g$rhs*$10292$bmrAn
          g$mod**$10293$bmrAn
          g$kwd*$10294$bmrAn
          g$exp*$10295$bmrAn
          g$rib$10296$bmrAn
          g$mix?$10297$bmrAn
          g$sd?$10298$bmrAn)
        (if (null? g$e*$10288$bmrAn)
          (values
            g$e*$10288$bmrAn
            g$r$10289$bmrAn
            g$mr$10290$bmrAn
            g$lex*$10291$bmrAn
            g$rhs*$10292$bmrAn
            g$mod**$10293$bmrAn
            g$kwd*$10294$bmrAn
            g$exp*$10295$bmrAn)
          ((case-lambda
             ((g$e$10299$bmrAn)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$7723$bmrAn g$e$10299$bmrAn g$r$10289$bmrAn)))
                (case-lambda
                  ((g$type$10303$bmrAn g$value$10304$bmrAn g$kwd$10305$bmrAn)
                   ((case-lambda
                      ((g$kwd$10306$bmrAn
                         g$value$10307$bmrAn
                         g$type$10308$bmrAn)
                       ((case-lambda
                          ((g$kwd*$10309$bmrAn)
                           ((case-lambda
                              ((g$t$10310$bmrAn)
                               (if (g$memv$5056$bmrAn g$t$10310$bmrAn '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7921$bmrAn
                                        g$e$10299$bmrAn)))
                                   (case-lambda
                                     ((g$id$10313$bmrAn g$rhs$10314$bmrAn)
                                      ((case-lambda
                                         ((g$rhs$10315$bmrAn g$id$10316$bmrAn)
                                          (begin
                                            (if (g$bound-id-member?$7710$bmrAn
                                                  g$id$10316$bmrAn
                                                  g$kwd*$10309$bmrAn)
                                              (g$syntax-violation$8093$bmrAn
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$10299$bmrAn)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7646$bmrAn
                                                   g$id$10316$bmrAn
                                                   g$rib$10296$bmrAn
                                                   g$sd?$10298$bmrAn)))
                                              (case-lambda
                                                ((g$lab$10319$bmrAn
                                                   g$lex$10320$bmrAn)
                                                 ((case-lambda
                                                    ((g$lex$10321$bmrAn
                                                       g$lab$10322$bmrAn)
                                                     (begin
                                                       (g$extend-rib!$7666$bmrAn
                                                         g$rib$10296$bmrAn
                                                         g$id$10316$bmrAn
                                                         g$lab$10322$bmrAn
                                                         g$sd?$10298$bmrAn)
                                                       (g$chi-body*$8025$bmrAn
                                                         (cdr g$e*$10288$bmrAn)
                                                         (g$add-lexical$7928$bmrAn
                                                           g$lab$10322$bmrAn
                                                           g$lex$10321$bmrAn
                                                           g$r$10289$bmrAn)
                                                         g$mr$10290$bmrAn
                                                         (cons
                                                           g$lex$10321$bmrAn
                                                           g$lex*$10291$bmrAn)
                                                         (cons
                                                           g$rhs$10315$bmrAn
                                                           g$rhs*$10292$bmrAn)
                                                         g$mod**$10293$bmrAn
                                                         g$kwd*$10309$bmrAn
                                                         g$exp*$10295$bmrAn
                                                         g$rib$10296$bmrAn
                                                         g$mix?$10297$bmrAn
                                                         g$sd?$10298$bmrAn))))
                                                  g$lex$10320$bmrAn
                                                  g$lab$10319$bmrAn)))))))
                                       g$rhs$10314$bmrAn
                                       g$id$10313$bmrAn))))
                                 (if (g$memv$5056$bmrAn
                                       g$t$10310$bmrAn
                                       '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7922$bmrAn
                                          g$e$10299$bmrAn)))
                                     (case-lambda
                                       ((g$id$10325$bmrAn g$rhs$10326$bmrAn)
                                        ((case-lambda
                                           ((g$rhs$10327$bmrAn g$id$10328$bmrAn)
                                            (begin
                                              (if (g$bound-id-member?$7710$bmrAn
                                                    g$id$10328$bmrAn
                                                    g$kwd*$10309$bmrAn)
                                                (g$syntax-violation$8093$bmrAn
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$10299$bmrAn)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$10329$bmrAn)
                                                  ((case-lambda
                                                     ((g$expanded-rhs$10330$bmrAn)
                                                      (begin
                                                        (g$extend-rib!$7666$bmrAn
                                                          g$rib$10296$bmrAn
                                                          g$id$10328$bmrAn
                                                          g$lab$10329$bmrAn
                                                          g$sd?$10298$bmrAn)
                                                        ((case-lambda
                                                           ((g$b$10331$bmrAn)
                                                            (g$chi-body*$8025$bmrAn
                                                              (cdr g$e*$10288$bmrAn)
                                                              (cons
                                                                (cons
                                                                  g$lab$10329$bmrAn
                                                                  g$b$10331$bmrAn)
                                                                g$r$10289$bmrAn)
                                                              (cons
                                                                (cons
                                                                  g$lab$10329$bmrAn
                                                                  g$b$10331$bmrAn)
                                                                g$mr$10290$bmrAn)
                                                              g$lex*$10291$bmrAn
                                                              g$rhs*$10292$bmrAn
                                                              g$mod**$10293$bmrAn
                                                              g$kwd*$10309$bmrAn
                                                              g$exp*$10295$bmrAn
                                                              g$rib$10296$bmrAn
                                                              g$mix?$10297$bmrAn
                                                              g$sd?$10298$bmrAn)))
                                                         (g$make-eval-transformer$7735$bmrAn
                                                           g$expanded-rhs$10330$bmrAn)))))
                                                   (g$expand-transformer$8026$bmrAn
                                                     g$rhs$10327$bmrAn
                                                     g$mr$10290$bmrAn))))
                                               (g$gen-define-label$7647$bmrAn
                                                 g$id$10328$bmrAn
                                                 g$rib$10296$bmrAn
                                                 g$sd?$10298$bmrAn)))))
                                         g$rhs$10326$bmrAn
                                         g$id$10325$bmrAn))))
                                   (if (g$memv$5056$bmrAn
                                         g$t$10310$bmrAn
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$10332$bmrAn)
                                         ((case-lambda
                                            ((g$ls/false$10333$bmrAn)
                                             (if (if g$ls/false$10333$bmrAn
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$10334$bmrAn
                                                            g$xrhs*$10335$bmrAn
                                                            g$xbody*$10336$bmrAn)
                                                          (if (not (g$valid-bound-ids?$7708$bmrAn
                                                                     g$xlhs*$10334$bmrAn))
                                                            (g$syntax-violation$8093$bmrAn
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$10299$bmrAn)
                                                            (void))))
                                                       g$ls/false$10333$bmrAn))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$10337$bmrAn
                                                      g$xrhs*$10338$bmrAn
                                                      g$xbody*$10339$bmrAn)
                                                    ((case-lambda
                                                       ((g$xlab*$10340$bmrAn)
                                                        ((case-lambda
                                                           ((g$xrib$10341$bmrAn)
                                                            ((case-lambda
                                                               ((g$xb*$10342$bmrAn)
                                                                (g$chi-body*$8025$bmrAn
                                                                  (append
                                                                    (g$map$5063$bmrAn
                                                                      (case-lambda
                                                                        ((g$x$10343$bmrAn)
                                                                         (g$add-subst$7693$bmrAn
                                                                           g$xrib$10341$bmrAn
                                                                           g$x$10343$bmrAn)))
                                                                      g$xbody*$10339$bmrAn)
                                                                    (cdr g$e*$10288$bmrAn))
                                                                  (append
                                                                    (g$map$5063$bmrAn
                                                                      cons
                                                                      g$xlab*$10340$bmrAn
                                                                      g$xb*$10342$bmrAn)
                                                                    g$r$10289$bmrAn)
                                                                  (append
                                                                    (g$map$5063$bmrAn
                                                                      cons
                                                                      g$xlab*$10340$bmrAn
                                                                      g$xb*$10342$bmrAn)
                                                                    g$mr$10290$bmrAn)
                                                                  g$lex*$10291$bmrAn
                                                                  g$rhs*$10292$bmrAn
                                                                  g$mod**$10293$bmrAn
                                                                  g$kwd*$10309$bmrAn
                                                                  g$exp*$10295$bmrAn
                                                                  g$rib$10296$bmrAn
                                                                  g$mix?$10297$bmrAn
                                                                  g$sd?$10298$bmrAn)))
                                                             (g$map$5063$bmrAn
                                                               (case-lambda
                                                                 ((g$x$10344$bmrAn)
                                                                  (g$make-eval-transformer$7735$bmrAn
                                                                    (g$expand-transformer$8026$bmrAn
                                                                      (if (eq? g$type$10308$bmrAn
                                                                               'let-syntax)
                                                                        g$x$10344$bmrAn
                                                                        (g$add-subst$7693$bmrAn
                                                                          g$xrib$10341$bmrAn
                                                                          g$x$10344$bmrAn))
                                                                      g$mr$10290$bmrAn))))
                                                               g$xrhs*$10338$bmrAn))))
                                                         (g$make-full-rib$7671$bmrAn
                                                           g$xlhs*$10337$bmrAn
                                                           g$xlab*$10340$bmrAn))))
                                                     (g$map$5063$bmrAn
                                                       g$gen-label$7644$bmrAn
                                                       g$xlhs*$10337$bmrAn))))
                                                 g$ls/false$10333$bmrAn)
                                               (g$syntax-violation$8093$bmrAn
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10332$bmrAn))))
                                          (g$syntax-dispatch$7981$bmrAn
                                            g$t$10332$bmrAn
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$10299$bmrAn)
                                     (if (g$memv$5056$bmrAn
                                           g$t$10310$bmrAn
                                           '(begin))
                                       ((case-lambda
                                          ((g$t$10345$bmrAn)
                                           ((case-lambda
                                              ((g$ls/false$10346$bmrAn)
                                               (if g$ls/false$10346$bmrAn
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$10347$bmrAn)
                                                      (g$chi-body*$8025$bmrAn
                                                        (append
                                                          g$x*$10347$bmrAn
                                                          (cdr g$e*$10288$bmrAn))
                                                        g$r$10289$bmrAn
                                                        g$mr$10290$bmrAn
                                                        g$lex*$10291$bmrAn
                                                        g$rhs*$10292$bmrAn
                                                        g$mod**$10293$bmrAn
                                                        g$kwd*$10309$bmrAn
                                                        g$exp*$10295$bmrAn
                                                        g$rib$10296$bmrAn
                                                        g$mix?$10297$bmrAn
                                                        g$sd?$10298$bmrAn)))
                                                   g$ls/false$10346$bmrAn)
                                                 (g$syntax-violation$8093$bmrAn
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$10345$bmrAn))))
                                            (g$syntax-dispatch$7981$bmrAn
                                              g$t$10345$bmrAn
                                              '(_ . each-any)))))
                                        g$e$10299$bmrAn)
                                       (if (g$memv$5056$bmrAn
                                             g$t$10310$bmrAn
                                             '(global-macro global-macro!))
                                         (g$chi-body*$8025$bmrAn
                                           (cons
                                             (g$add-subst$7693$bmrAn
                                               g$rib$10296$bmrAn
                                               (g$chi-global-macro$7996$bmrAn
                                                 g$value$10307$bmrAn
                                                 g$e$10299$bmrAn))
                                             (cdr g$e*$10288$bmrAn))
                                           g$r$10289$bmrAn
                                           g$mr$10290$bmrAn
                                           g$lex*$10291$bmrAn
                                           g$rhs*$10292$bmrAn
                                           g$mod**$10293$bmrAn
                                           g$kwd*$10309$bmrAn
                                           g$exp*$10295$bmrAn
                                           g$rib$10296$bmrAn
                                           g$mix?$10297$bmrAn
                                           g$sd?$10298$bmrAn)
                                         (if (g$memv$5056$bmrAn
                                               g$t$10310$bmrAn
                                               '(local-macro local-macro!))
                                           (g$chi-body*$8025$bmrAn
                                             (cons
                                               (g$add-subst$7693$bmrAn
                                                 g$rib$10296$bmrAn
                                                 (g$chi-local-macro$7995$bmrAn
                                                   g$value$10307$bmrAn
                                                   g$e$10299$bmrAn))
                                               (cdr g$e*$10288$bmrAn))
                                             g$r$10289$bmrAn
                                             g$mr$10290$bmrAn
                                             g$lex*$10291$bmrAn
                                             g$rhs*$10292$bmrAn
                                             g$mod**$10293$bmrAn
                                             g$kwd*$10309$bmrAn
                                             g$exp*$10295$bmrAn
                                             g$rib$10296$bmrAn
                                             g$mix?$10297$bmrAn
                                             g$sd?$10298$bmrAn)
                                           (if (g$memv$5056$bmrAn
                                                 g$t$10310$bmrAn
                                                 '(macro macro!))
                                             (g$chi-body*$8025$bmrAn
                                               (cons
                                                 (g$add-subst$7693$bmrAn
                                                   g$rib$10296$bmrAn
                                                   (g$chi-macro$7994$bmrAn
                                                     g$value$10307$bmrAn
                                                     g$e$10299$bmrAn))
                                                 (cdr g$e*$10288$bmrAn))
                                               g$r$10289$bmrAn
                                               g$mr$10290$bmrAn
                                               g$lex*$10291$bmrAn
                                               g$rhs*$10292$bmrAn
                                               g$mod**$10293$bmrAn
                                               g$kwd*$10309$bmrAn
                                               g$exp*$10295$bmrAn
                                               g$rib$10296$bmrAn
                                               g$mix?$10297$bmrAn
                                               g$sd?$10298$bmrAn)
                                             (if (g$memv$5056$bmrAn
                                                   g$t$10310$bmrAn
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$8024$bmrAn
                                                      g$e$10299$bmrAn
                                                      g$r$10289$bmrAn
                                                      g$mr$10290$bmrAn
                                                      g$lex*$10291$bmrAn
                                                      g$rhs*$10292$bmrAn
                                                      g$mod**$10293$bmrAn
                                                      g$kwd*$10309$bmrAn)))
                                                 (case-lambda
                                                   ((g$lex*$10356$bmrAn
                                                      g$rhs*$10357$bmrAn
                                                      g$m-exp-id*$10358$bmrAn
                                                      g$m-exp-lab*$10359$bmrAn
                                                      g$r$10360$bmrAn
                                                      g$mr$10361$bmrAn
                                                      g$mod**$10362$bmrAn
                                                      g$kwd*$10363$bmrAn)
                                                    ((case-lambda
                                                       ((g$kwd*$10364$bmrAn
                                                          g$mod**$10365$bmrAn
                                                          g$mr$10366$bmrAn
                                                          g$r$10367$bmrAn
                                                          g$m-exp-lab*$10368$bmrAn
                                                          g$m-exp-id*$10369$bmrAn
                                                          g$rhs*$10370$bmrAn
                                                          g$lex*$10371$bmrAn)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$10372$bmrAn
                                                                 g$lab$10373$bmrAn)
                                                               (g$extend-rib!$7666$bmrAn
                                                                 g$rib$10296$bmrAn
                                                                 g$id$10372$bmrAn
                                                                 g$lab$10373$bmrAn
                                                                 g$sd?$10298$bmrAn)))
                                                            g$m-exp-id*$10369$bmrAn
                                                            g$m-exp-lab*$10368$bmrAn)
                                                          (g$chi-body*$8025$bmrAn
                                                            (cdr g$e*$10288$bmrAn)
                                                            g$r$10367$bmrAn
                                                            g$mr$10366$bmrAn
                                                            g$lex*$10371$bmrAn
                                                            g$rhs*$10370$bmrAn
                                                            g$mod**$10365$bmrAn
                                                            g$kwd*$10364$bmrAn
                                                            g$exp*$10295$bmrAn
                                                            g$rib$10296$bmrAn
                                                            g$mix?$10297$bmrAn
                                                            g$sd?$10298$bmrAn))))
                                                     g$kwd*$10363$bmrAn
                                                     g$mod**$10362$bmrAn
                                                     g$mr$10361$bmrAn
                                                     g$r$10360$bmrAn
                                                     g$m-exp-lab*$10359$bmrAn
                                                     g$m-exp-id*$10358$bmrAn
                                                     g$rhs*$10357$bmrAn
                                                     g$lex*$10356$bmrAn))))
                                               (if (g$memv$5056$bmrAn
                                                     g$t$10310$bmrAn
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$8077$bmrAn
                                                     (g$stx->datum$7714$bmrAn
                                                       g$e$10299$bmrAn))
                                                   (g$chi-body*$8025$bmrAn
                                                     (cdr g$e*$10288$bmrAn)
                                                     g$r$10289$bmrAn
                                                     g$mr$10290$bmrAn
                                                     g$lex*$10291$bmrAn
                                                     g$rhs*$10292$bmrAn
                                                     g$mod**$10293$bmrAn
                                                     g$kwd*$10309$bmrAn
                                                     g$exp*$10295$bmrAn
                                                     g$rib$10296$bmrAn
                                                     g$mix?$10297$bmrAn
                                                     g$sd?$10298$bmrAn))
                                                 (if (g$memv$5056$bmrAn
                                                       g$t$10310$bmrAn
                                                       '(export))
                                                   ((case-lambda
                                                      ((g$t$10374$bmrAn)
                                                       ((case-lambda
                                                          ((g$ls/false$10375$bmrAn)
                                                           (if g$ls/false$10375$bmrAn
                                                             (apply
                                                               (case-lambda
                                                                 ((g$exp-decl*$10376$bmrAn)
                                                                  (g$chi-body*$8025$bmrAn
                                                                    (cdr g$e*$10288$bmrAn)
                                                                    g$r$10289$bmrAn
                                                                    g$mr$10290$bmrAn
                                                                    g$lex*$10291$bmrAn
                                                                    g$rhs*$10292$bmrAn
                                                                    g$mod**$10293$bmrAn
                                                                    g$kwd*$10309$bmrAn
                                                                    (append
                                                                      g$exp-decl*$10376$bmrAn
                                                                      g$exp*$10295$bmrAn)
                                                                    g$rib$10296$bmrAn
                                                                    g$mix?$10297$bmrAn
                                                                    g$sd?$10298$bmrAn)))
                                                               g$ls/false$10375$bmrAn)
                                                             (g$syntax-violation$8093$bmrAn
                                                               '#f
                                                               '"invalid syntax"
                                                               g$t$10374$bmrAn))))
                                                        (g$syntax-dispatch$7981$bmrAn
                                                          g$t$10374$bmrAn
                                                          '(_ . each-any)))))
                                                    g$e$10299$bmrAn)
                                                   (if (g$memv$5056$bmrAn
                                                         g$t$10310$bmrAn
                                                         '(import))
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$10377$bmrAn
                                                                     (case-lambda
                                                                       ((g$e$10419$bmrAn)
                                                                        ((case-lambda
                                                                           ((g$t$10420$bmrAn)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10421$bmrAn)
                                                                                (if (if g$ls/false$10421$bmrAn
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10422$bmrAn)
                                                                                             (g$id?$7703$bmrAn
                                                                                               g$id$10422$bmrAn)))
                                                                                          g$ls/false$10421$bmrAn))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10423$bmrAn)
                                                                                       '#t))
                                                                                    g$ls/false$10421$bmrAn)
                                                                                  ((case-lambda
                                                                                     ((g$t$10424$bmrAn)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10425$bmrAn)
                                                                                          (if g$ls/false$10425$bmrAn
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$10426$bmrAn)
                                                                                                 '#f))
                                                                                              g$ls/false$10425$bmrAn)
                                                                                            ((case-lambda
                                                                                               ((g$t$10427$bmrAn)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$10428$bmrAn)
                                                                                                    (if g$ls/false$10428$bmrAn
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$8093$bmrAn
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$10419$bmrAn)))
                                                                                                        g$ls/false$10428$bmrAn)
                                                                                                      (g$syntax-violation$8093$bmrAn
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$10427$bmrAn))))
                                                                                                 (g$syntax-dispatch$7981$bmrAn
                                                                                                   g$t$10427$bmrAn
                                                                                                   '_))))
                                                                                             g$t$10424$bmrAn))))
                                                                                       (g$syntax-dispatch$7981$bmrAn
                                                                                         g$t$10424$bmrAn
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$10420$bmrAn))))
                                                                             (g$syntax-dispatch$7981$bmrAn
                                                                               g$t$10420$bmrAn
                                                                               '(_ any)))))
                                                                         g$e$10419$bmrAn))))
                                                                   (g$module-import$10378$bmrAn
                                                                     (case-lambda
                                                                       ((g$e$10402$bmrAn
                                                                          g$r$10403$bmrAn)
                                                                        ((case-lambda
                                                                           ((g$t$10404$bmrAn)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10405$bmrAn)
                                                                                (if (if g$ls/false$10405$bmrAn
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10406$bmrAn)
                                                                                             (g$id?$7703$bmrAn
                                                                                               g$id$10406$bmrAn)))
                                                                                          g$ls/false$10405$bmrAn))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10407$bmrAn)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$7723$bmrAn
                                                                                              g$id$10407$bmrAn
                                                                                              g$r$10403$bmrAn)))
                                                                                         (case-lambda
                                                                                           ((g$type$10411$bmrAn
                                                                                              g$value$10412$bmrAn
                                                                                              g$kwd$10413$bmrAn)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$10414$bmrAn
                                                                                                  g$value$10415$bmrAn
                                                                                                  g$type$10416$bmrAn)
                                                                                                ((case-lambda
                                                                                                   ((g$t$10417$bmrAn)
                                                                                                    (if (g$memv$5056$bmrAn
                                                                                                          g$t$10417$bmrAn
                                                                                                          '($module))
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$10418$bmrAn)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$8023$bmrAn
                                                                                                              g$iface$10418$bmrAn
                                                                                                              g$id$10407$bmrAn)
                                                                                                            (g$module-interface-exp-lab-vec$8019$bmrAn
                                                                                                              g$iface$10418$bmrAn))))
                                                                                                       g$value$10415$bmrAn)
                                                                                                      (g$syntax-violation$8093$bmrAn
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$10402$bmrAn))))
                                                                                                 g$type$10416$bmrAn)))
                                                                                             g$kwd$10413$bmrAn
                                                                                             g$value$10412$bmrAn
                                                                                             g$type$10411$bmrAn))))))
                                                                                    g$ls/false$10405$bmrAn)
                                                                                  (g$syntax-violation$8093$bmrAn
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$10404$bmrAn))))
                                                                             (g$syntax-dispatch$7981$bmrAn
                                                                               g$t$10404$bmrAn
                                                                               '(_ any)))))
                                                                         g$e$10402$bmrAn))))
                                                                   (g$library-import$10379$bmrAn
                                                                     (case-lambda
                                                                       ((g$e$10388$bmrAn)
                                                                        ((case-lambda
                                                                           ((g$t$10389$bmrAn)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10390$bmrAn)
                                                                                (if g$ls/false$10390$bmrAn
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$10391$bmrAn
                                                                                         g$imp*$10392$bmrAn)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$8030$bmrAn
                                                                                              (g$syntax->datum$8096$bmrAn
                                                                                                g$imp*$10392$bmrAn))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$10395$bmrAn
                                                                                              g$subst-labels$10396$bmrAn)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$10397$bmrAn
                                                                                                  g$subst-names$10398$bmrAn)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$10399$bmrAn)
                                                                                                       (g$datum->stx$7686$bmrAn
                                                                                                         g$ctxt$10391$bmrAn
                                                                                                         g$name$10399$bmrAn)))
                                                                                                    g$subst-names$10398$bmrAn)
                                                                                                  g$subst-labels$10397$bmrAn)))
                                                                                             g$subst-labels$10396$bmrAn
                                                                                             g$subst-names$10395$bmrAn))))))
                                                                                    g$ls/false$10390$bmrAn)
                                                                                  ((case-lambda
                                                                                     ((g$t$10400$bmrAn)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10401$bmrAn)
                                                                                          (if g$ls/false$10401$bmrAn
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8093$bmrAn
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$10388$bmrAn)))
                                                                                              g$ls/false$10401$bmrAn)
                                                                                            (g$syntax-violation$8093$bmrAn
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$10400$bmrAn))))
                                                                                       (g$syntax-dispatch$7981$bmrAn
                                                                                         g$t$10400$bmrAn
                                                                                         '_))))
                                                                                   g$t$10389$bmrAn))))
                                                                             (g$syntax-dispatch$7981$bmrAn
                                                                               g$t$10389$bmrAn
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$10388$bmrAn)))))
                                                           (begin
                                                             (call-with-values
                                                               (case-lambda
                                                                 (()
                                                                  (if (g$module-import?$10377$bmrAn
                                                                        g$e$10299$bmrAn)
                                                                    (g$module-import$10378$bmrAn
                                                                      g$e$10299$bmrAn
                                                                      g$r$10289$bmrAn)
                                                                    (g$library-import$10379$bmrAn
                                                                      g$e$10299$bmrAn))))
                                                               (case-lambda
                                                                 ((g$id*$10382$bmrAn
                                                                    g$lab*$10383$bmrAn)
                                                                  ((case-lambda
                                                                     ((g$lab*$10384$bmrAn
                                                                        g$id*$10385$bmrAn)
                                                                      (vector-for-each
                                                                        (case-lambda
                                                                          ((g$id$10386$bmrAn
                                                                             g$lab$10387$bmrAn)
                                                                           (g$extend-rib!$7666$bmrAn
                                                                             g$rib$10296$bmrAn
                                                                             g$id$10386$bmrAn
                                                                             g$lab$10387$bmrAn
                                                                             g$sd?$10298$bmrAn)))
                                                                        g$id*$10385$bmrAn
                                                                        g$lab*$10384$bmrAn)))
                                                                   g$lab*$10383$bmrAn
                                                                   g$id*$10382$bmrAn))))
                                                             (g$chi-body*$8025$bmrAn
                                                               (cdr g$e*$10288$bmrAn)
                                                               g$r$10289$bmrAn
                                                               g$mr$10290$bmrAn
                                                               g$lex*$10291$bmrAn
                                                               g$rhs*$10292$bmrAn
                                                               g$mod**$10293$bmrAn
                                                               g$kwd*$10309$bmrAn
                                                               g$exp*$10295$bmrAn
                                                               g$rib$10296$bmrAn
                                                               g$mix?$10297$bmrAn
                                                               g$sd?$10298$bmrAn))))))
                                                     (if g$mix?$10297$bmrAn
                                                       (g$chi-body*$8025$bmrAn
                                                         (cdr g$e*$10288$bmrAn)
                                                         g$r$10289$bmrAn
                                                         g$mr$10290$bmrAn
                                                         (cons
                                                           (g$gen-lexical$7642$bmrAn
                                                             'dummy)
                                                           g$lex*$10291$bmrAn)
                                                         (cons
                                                           (cons
                                                             'top-expr
                                                             g$e$10299$bmrAn)
                                                           g$rhs*$10292$bmrAn)
                                                         g$mod**$10293$bmrAn
                                                         g$kwd*$10309$bmrAn
                                                         g$exp*$10295$bmrAn
                                                         g$rib$10296$bmrAn
                                                         '#t
                                                         g$sd?$10298$bmrAn)
                                                       (values
                                                         g$e*$10288$bmrAn
                                                         g$r$10289$bmrAn
                                                         g$mr$10290$bmrAn
                                                         g$lex*$10291$bmrAn
                                                         g$rhs*$10292$bmrAn
                                                         g$mod**$10293$bmrAn
                                                         g$kwd*$10309$bmrAn
                                                         g$exp*$10295$bmrAn)))))))))))))))
                            g$type$10308$bmrAn)))
                        (if (g$id?$7703$bmrAn g$kwd$10306$bmrAn)
                          (cons g$kwd$10306$bmrAn g$kwd*$10294$bmrAn)
                          g$kwd*$10294$bmrAn))))
                    g$kwd$10305$bmrAn
                    g$value$10304$bmrAn
                    g$type$10303$bmrAn))))))
           (car g$e*$10288$bmrAn))))))
   (g$expand-transformer$8026$bmrAn
     g$expand-transformer$11529$bmrAn
     (case-lambda
       ((g$expr$10429$bmrAn g$r$10430$bmrAn)
        ((case-lambda
           ((g$rtc$10431$bmrAn)
            ((case-lambda
               ((g$expanded-rhs$10432$bmrAn)
                (begin
                  (g$for-each$5064$bmrAn
                    ((case-lambda
                       ((g$mark-visit$10433$bmrAn)
                        (case-lambda
                          ((g$x$10434$bmrAn)
                           (begin
                             (g$invoke-library$7513$bmrAn g$x$10434$bmrAn)
                             (g$mark-visit$10433$bmrAn g$x$10434$bmrAn))))))
                     (g$vis-collector$8034$bmrAn))
                    (g$rtc$10431$bmrAn))
                  g$expanded-rhs$10432$bmrAn)))
             ((case-lambda
                ((g$inv-collector$10439$bmrAn
                   g$vis-collector$10440$bmrAn
                   g$inv-collector$10441$bmrAn
                   g$vis-collector$10442$bmrAn)
                 ((case-lambda
                    ((g$swap$10443$bmrAn)
                     (dynamic-wind
                       g$swap$10443$bmrAn
                       (case-lambda
                         (()
                          (g$chi-expr$7999$bmrAn
                            g$expr$10429$bmrAn
                            g$r$10430$bmrAn
                            g$r$10430$bmrAn)))
                       g$swap$10443$bmrAn)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$10444$bmrAn)
                           (begin
                             (g$inv-collector$10439$bmrAn
                               g$inv-collector$10441$bmrAn)
                             (set! g$inv-collector$10441$bmrAn
                               g$t$10444$bmrAn))))
                        (g$inv-collector$10439$bmrAn))
                       ((case-lambda
                          ((g$t$10445$bmrAn)
                           (begin
                             (g$vis-collector$10440$bmrAn
                               g$vis-collector$10442$bmrAn)
                             (set! g$vis-collector$10442$bmrAn
                               g$t$10445$bmrAn))))
                        (g$vis-collector$10440$bmrAn))))))))
              g$inv-collector$8033$bmrAn
              g$vis-collector$8034$bmrAn
              g$rtc$10431$bmrAn
              (case-lambda ((g$x$10446$bmrAn) (values)))))))
         (g$make-collector$8032$bmrAn)))))
   (g$parse-exports$8027$bmrAn
     g$parse-exports$11530$bmrAn
     (case-lambda
       ((g$exp*$10447$bmrAn)
        ((letrec ((g$f$10448$bmrAn
                    (case-lambda
                      ((g$exp*$10449$bmrAn
                         g$int*$10450$bmrAn
                         g$ext*$10451$bmrAn)
                       (if (null? g$exp*$10449$bmrAn)
                         (begin
                           (if (not (g$valid-bound-ids?$7708$bmrAn
                                      g$ext*$10451$bmrAn))
                             (g$syntax-violation$8093$bmrAn
                               'export
                               '"invalid exports"
                               (g$find-dups$8009$bmrAn g$ext*$10451$bmrAn))
                             (void))
                           (values
                             (g$map$5063$bmrAn
                               g$syntax->datum$8096$bmrAn
                               g$ext*$10451$bmrAn)
                             g$int*$10450$bmrAn))
                         ((case-lambda
                            ((g$t$10452$bmrAn)
                             ((case-lambda
                                ((g$ls/false$10453$bmrAn)
                                 (if g$ls/false$10453$bmrAn
                                   (apply
                                     (case-lambda
                                       ((g$rename$10454$bmrAn
                                          g$i*$10455$bmrAn
                                          g$e*$10456$bmrAn)
                                        (begin
                                          (if (not (if (eq? (g$syntax->datum$8096$bmrAn
                                                              g$rename$10454$bmrAn)
                                                            'rename)
                                                     (if (g$for-all$5061$bmrAn
                                                           g$id?$7703$bmrAn
                                                           g$i*$10455$bmrAn)
                                                       (begin
                                                         '#f
                                                         (g$for-all$5061$bmrAn
                                                           g$id?$7703$bmrAn
                                                           g$e*$10456$bmrAn))
                                                       '#f)
                                                     '#f))
                                            (g$syntax-violation$8093$bmrAn
                                              'export
                                              '"invalid export specifier"
                                              (car g$exp*$10449$bmrAn))
                                            (void))
                                          (g$f$10448$bmrAn
                                            (cdr g$exp*$10449$bmrAn)
                                            (append
                                              g$i*$10455$bmrAn
                                              g$int*$10450$bmrAn)
                                            (append
                                              g$e*$10456$bmrAn
                                              g$ext*$10451$bmrAn)))))
                                     g$ls/false$10453$bmrAn)
                                   ((case-lambda
                                      ((g$t$10457$bmrAn)
                                       ((case-lambda
                                          ((g$ls/false$10458$bmrAn)
                                           (if g$ls/false$10458$bmrAn
                                             (apply
                                               (case-lambda
                                                 ((g$ie$10459$bmrAn)
                                                  (begin
                                                    (if (not (g$id?$7703$bmrAn
                                                               g$ie$10459$bmrAn))
                                                      (g$syntax-violation$8093$bmrAn
                                                        'export
                                                        '"invalid export"
                                                        g$ie$10459$bmrAn)
                                                      (void))
                                                    (g$f$10448$bmrAn
                                                      (cdr g$exp*$10449$bmrAn)
                                                      (cons
                                                        g$ie$10459$bmrAn
                                                        g$int*$10450$bmrAn)
                                                      (cons
                                                        g$ie$10459$bmrAn
                                                        g$ext*$10451$bmrAn)))))
                                               g$ls/false$10458$bmrAn)
                                             (g$syntax-violation$8093$bmrAn
                                               '#f
                                               '"invalid syntax"
                                               g$t$10457$bmrAn))))
                                        (g$syntax-dispatch$7981$bmrAn
                                          g$t$10457$bmrAn
                                          'any))))
                                    g$t$10452$bmrAn))))
                              (g$syntax-dispatch$7981$bmrAn
                                g$t$10452$bmrAn
                                '(any . #(each (any any)))))))
                          (car g$exp*$10449$bmrAn)))))))
           g$f$10448$bmrAn)
         g$exp*$10447$bmrAn
         '()
         '()))))
   (g$parse-library-name$8028$bmrAn
     g$parse-library-name$11531$bmrAn
     (case-lambda
       ((g$spec$10460$bmrAn)
        (letrec* ((g$parse$10461$bmrAn
                    (case-lambda
                      ((g$x$10468$bmrAn)
                       ((case-lambda
                          ((g$t$10469$bmrAn)
                           ((case-lambda
                              ((g$ls/false$10470$bmrAn)
                               (if (if g$ls/false$10470$bmrAn
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$10471$bmrAn)
                                            (g$for-all$5061$bmrAn
                                              (case-lambda
                                                ((g$x$10472$bmrAn)
                                                 ((case-lambda
                                                    ((g$x$10473$bmrAn)
                                                     (if (integer?
                                                           g$x$10473$bmrAn)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$10473$bmrAn))
                                                       '#f)))
                                                  (g$syntax->datum$8096$bmrAn
                                                    g$x$10472$bmrAn))))
                                              g$v*$10471$bmrAn)))
                                         g$ls/false$10470$bmrAn))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$10474$bmrAn)
                                      (values
                                        '()
                                        (g$map$5063$bmrAn
                                          g$syntax->datum$8096$bmrAn
                                          g$v*$10474$bmrAn))))
                                   g$ls/false$10470$bmrAn)
                                 ((case-lambda
                                    ((g$t$10475$bmrAn)
                                     ((case-lambda
                                        ((g$ls/false$10476$bmrAn)
                                         (if (if g$ls/false$10476$bmrAn
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$10477$bmrAn
                                                        g$rest$10478$bmrAn)
                                                      (symbol?
                                                        (g$syntax->datum$8096$bmrAn
                                                          g$x$10477$bmrAn))))
                                                   g$ls/false$10476$bmrAn))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$10479$bmrAn
                                                  g$rest$10480$bmrAn)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$10461$bmrAn
                                                       g$rest$10480$bmrAn)))
                                                  (case-lambda
                                                    ((g$x*$10483$bmrAn
                                                       g$v*$10484$bmrAn)
                                                     ((case-lambda
                                                        ((g$v*$10485$bmrAn
                                                           g$x*$10486$bmrAn)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$8096$bmrAn
                                                               g$x$10479$bmrAn)
                                                             g$x*$10486$bmrAn)
                                                           g$v*$10485$bmrAn)))
                                                      g$v*$10484$bmrAn
                                                      g$x*$10483$bmrAn))))))
                                             g$ls/false$10476$bmrAn)
                                           ((case-lambda
                                              ((g$t$10487$bmrAn)
                                               ((case-lambda
                                                  ((g$ls/false$10488$bmrAn)
                                                   (if g$ls/false$10488$bmrAn
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10488$bmrAn)
                                                     ((case-lambda
                                                        ((g$t$10489$bmrAn)
                                                         ((case-lambda
                                                            ((g$ls/false$10490$bmrAn)
                                                             (if g$ls/false$10490$bmrAn
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$8093$bmrAn
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$10460$bmrAn)))
                                                                 g$ls/false$10490$bmrAn)
                                                               (g$syntax-violation$8093$bmrAn
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10489$bmrAn))))
                                                          (g$syntax-dispatch$7981$bmrAn
                                                            g$t$10489$bmrAn
                                                            '_))))
                                                      g$t$10487$bmrAn))))
                                                (g$syntax-dispatch$7981$bmrAn
                                                  g$t$10487$bmrAn
                                                  '()))))
                                            g$t$10475$bmrAn))))
                                      (g$syntax-dispatch$7981$bmrAn
                                        g$t$10475$bmrAn
                                        '(any . any)))))
                                  g$t$10469$bmrAn))))
                            (g$syntax-dispatch$7981$bmrAn
                              g$t$10469$bmrAn
                              '(each-any)))))
                        g$x$10468$bmrAn)))))
          (call-with-values
            (case-lambda (() (g$parse$10461$bmrAn g$spec$10460$bmrAn)))
            (case-lambda
              ((g$name*$10464$bmrAn g$ver*$10465$bmrAn)
               ((case-lambda
                  ((g$ver*$10466$bmrAn g$name*$10467$bmrAn)
                   (begin
                     (if (null? g$name*$10467$bmrAn)
                       (g$syntax-violation$8093$bmrAn
                         '#f
                         '"empty library name"
                         g$spec$10460$bmrAn)
                       (void))
                     (values g$name*$10467$bmrAn g$ver*$10466$bmrAn))))
                g$ver*$10465$bmrAn
                g$name*$10464$bmrAn))))))))
   (g$parse-library$8029$bmrAn
     g$parse-library$11532$bmrAn
     (case-lambda
       ((g$e$10491$bmrAn)
        ((case-lambda
           ((g$t$10492$bmrAn)
            ((case-lambda
               ((g$ls/false$10493$bmrAn)
                (if (if g$ls/false$10493$bmrAn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10494$bmrAn
                               g$name*$10495$bmrAn
                               g$export$10496$bmrAn
                               g$exp*$10497$bmrAn
                               g$import$10498$bmrAn
                               g$imp*$10499$bmrAn
                               g$b*$10500$bmrAn)
                             (if (eq? (g$syntax->datum$8096$bmrAn
                                        g$export$10496$bmrAn)
                                      'export)
                               (if (eq? (g$syntax->datum$8096$bmrAn
                                          g$import$10498$bmrAn)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$8096$bmrAn
                                          g$library$10494$bmrAn)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10493$bmrAn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10501$bmrAn
                         g$name*$10502$bmrAn
                         g$export$10503$bmrAn
                         g$exp*$10504$bmrAn
                         g$import$10505$bmrAn
                         g$imp*$10506$bmrAn
                         g$b*$10507$bmrAn)
                       (values
                         g$name*$10502$bmrAn
                         g$exp*$10504$bmrAn
                         g$imp*$10506$bmrAn
                         g$b*$10507$bmrAn)))
                    g$ls/false$10493$bmrAn)
                  ((case-lambda
                     ((g$t$10508$bmrAn)
                      ((case-lambda
                         ((g$ls/false$10509$bmrAn)
                          (if g$ls/false$10509$bmrAn
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$8093$bmrAn
                                   '#f
                                   '"malformed library"
                                   g$e$10491$bmrAn)))
                              g$ls/false$10509$bmrAn)
                            (g$syntax-violation$8093$bmrAn
                              '#f
                              '"invalid syntax"
                              g$t$10508$bmrAn))))
                       (g$syntax-dispatch$7981$bmrAn g$t$10508$bmrAn '_))))
                   g$t$10492$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn
               g$t$10492$bmrAn
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10491$bmrAn))))
   (g$parse-import-spec*$8030$bmrAn
     g$parse-import-spec*$11533$bmrAn
     ((case-lambda
        (()
         (letrec* ((g$idsyn?$10510$bmrAn
                     (case-lambda
                       ((g$x$10771$bmrAn)
                        (symbol?
                          (g$syntax->datum$8096$bmrAn g$x$10771$bmrAn)))))
                   (g$dup-error$10511$bmrAn
                     (case-lambda
                       ((g$name$10770$bmrAn)
                        (g$syntax-violation$8093$bmrAn
                          'import
                          '"two imports with different bindings"
                          g$name$10770$bmrAn))))
                   (g$merge-substs$10512$bmrAn
                     (case-lambda
                       ((g$s$10761$bmrAn g$subst$10762$bmrAn)
                        (letrec* ((g$insert-to-subst$10763$bmrAn
                                    (case-lambda
                                      ((g$a$10764$bmrAn g$subst$10765$bmrAn)
                                       ((case-lambda
                                          ((g$name$10766$bmrAn
                                             g$label$10767$bmrAn)
                                           ((case-lambda
                                              ((g$t$10768$bmrAn)
                                               (if g$t$10768$bmrAn
                                                 ((case-lambda
                                                    ((g$x$10769$bmrAn)
                                                     (if (eq? (cdr g$x$10769$bmrAn)
                                                              g$label$10767$bmrAn)
                                                       g$subst$10765$bmrAn
                                                       (g$dup-error$10511$bmrAn
                                                         g$name$10766$bmrAn))))
                                                  g$t$10768$bmrAn)
                                                 (cons
                                                   g$a$10764$bmrAn
                                                   g$subst$10765$bmrAn))))
                                            (g$assq$5051$bmrAn
                                              g$name$10766$bmrAn
                                              g$subst$10765$bmrAn))))
                                        (car g$a$10764$bmrAn)
                                        (cdr g$a$10764$bmrAn))))))
                          (if (null? g$s$10761$bmrAn)
                            g$subst$10762$bmrAn
                            (g$insert-to-subst$10763$bmrAn
                              (car g$s$10761$bmrAn)
                              (g$merge-substs$10512$bmrAn
                                (cdr g$s$10761$bmrAn)
                                g$subst$10762$bmrAn)))))))
                   (g$exclude*$10513$bmrAn
                     (case-lambda
                       ((g$sym*$10737$bmrAn g$subst$10738$bmrAn)
                        (letrec* ((g$exclude$10739$bmrAn
                                    (case-lambda
                                      ((g$sym$10752$bmrAn g$subst$10753$bmrAn)
                                       (if (null? g$subst$10753$bmrAn)
                                         (g$syntax-violation$8093$bmrAn
                                           'import
                                           '"cannot rename unbound identifier"
                                           g$sym$10752$bmrAn)
                                         (if (eq? g$sym$10752$bmrAn
                                                  (g$caar$5263$bmrAn
                                                    g$subst$10753$bmrAn))
                                           (values
                                             (g$cdar$5265$bmrAn
                                               g$subst$10753$bmrAn)
                                             (cdr g$subst$10753$bmrAn))
                                           ((case-lambda
                                              ((g$a$10754$bmrAn)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$exclude$10739$bmrAn
                                                      g$sym$10752$bmrAn
                                                      (cdr g$subst$10753$bmrAn))))
                                                 (case-lambda
                                                   ((g$old$10757$bmrAn
                                                      g$subst$10758$bmrAn)
                                                    ((case-lambda
                                                       ((g$subst$10759$bmrAn
                                                          g$old$10760$bmrAn)
                                                        (values
                                                          g$old$10760$bmrAn
                                                          (cons
                                                            g$a$10754$bmrAn
                                                            g$subst$10759$bmrAn))))
                                                     g$subst$10758$bmrAn
                                                     g$old$10757$bmrAn))))))
                                            (car g$subst$10753$bmrAn))))))))
                          (if (null? g$sym*$10737$bmrAn)
                            (values '() g$subst$10738$bmrAn)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$exclude$10739$bmrAn
                                   (car g$sym*$10737$bmrAn)
                                   g$subst$10738$bmrAn)))
                              (case-lambda
                                ((g$old$10742$bmrAn g$subst$10743$bmrAn)
                                 ((case-lambda
                                    ((g$subst$10744$bmrAn g$old$10745$bmrAn)
                                     (call-with-values
                                       (case-lambda
                                         (()
                                          (g$exclude*$10513$bmrAn
                                            (cdr g$sym*$10737$bmrAn)
                                            g$subst$10744$bmrAn)))
                                       (case-lambda
                                         ((g$old*$10748$bmrAn
                                            g$subst$10749$bmrAn)
                                          ((case-lambda
                                             ((g$subst$10750$bmrAn
                                                g$old*$10751$bmrAn)
                                              (values
                                                (cons
                                                  g$old$10745$bmrAn
                                                  g$old*$10751$bmrAn)
                                                g$subst$10750$bmrAn)))
                                           g$subst$10749$bmrAn
                                           g$old*$10748$bmrAn))))))
                                  g$subst$10743$bmrAn
                                  g$old$10742$bmrAn)))))))))
                   (g$find*$10514$bmrAn
                     (case-lambda
                       ((g$sym*$10733$bmrAn g$subst$10734$bmrAn)
                        (g$map$5063$bmrAn
                          (case-lambda
                            ((g$x$10735$bmrAn)
                             ((case-lambda
                                ((g$t$10736$bmrAn)
                                 (if g$t$10736$bmrAn
                                   (cdr g$t$10736$bmrAn)
                                   (g$syntax-violation$8093$bmrAn
                                     'import
                                     '"cannot find identifier"
                                     g$x$10735$bmrAn))))
                              (g$assq$5051$bmrAn
                                g$x$10735$bmrAn
                                g$subst$10734$bmrAn))))
                          g$sym*$10733$bmrAn))))
                   (g$rem*$10515$bmrAn
                     (case-lambda
                       ((g$sym*$10729$bmrAn g$subst$10730$bmrAn)
                        ((letrec ((g$f$10731$bmrAn
                                    (case-lambda
                                      ((g$subst$10732$bmrAn)
                                       (if (null? g$subst$10732$bmrAn)
                                         '()
                                         (if (g$memq$5055$bmrAn
                                               (g$caar$5263$bmrAn
                                                 g$subst$10732$bmrAn)
                                               g$sym*$10729$bmrAn)
                                           (g$f$10731$bmrAn
                                             (cdr g$subst$10732$bmrAn))
                                           (cons
                                             (car g$subst$10732$bmrAn)
                                             (g$f$10731$bmrAn
                                               (cdr g$subst$10732$bmrAn)))))))))
                           g$f$10731$bmrAn)
                         g$subst$10730$bmrAn))))
                   (g$remove-dups$10516$bmrAn
                     (case-lambda
                       ((g$ls$10728$bmrAn)
                        (if (null? g$ls$10728$bmrAn)
                          '()
                          (if (g$memq$5055$bmrAn
                                (car g$ls$10728$bmrAn)
                                (cdr g$ls$10728$bmrAn))
                            (g$remove-dups$10516$bmrAn (cdr g$ls$10728$bmrAn))
                            (cons
                              (car g$ls$10728$bmrAn)
                              (g$remove-dups$10516$bmrAn
                                (cdr g$ls$10728$bmrAn))))))))
                   (g$parse-library-name$10517$bmrAn
                     (case-lambda
                       ((g$spec$10612$bmrAn)
                        (letrec* ((g$subversion?$10613$bmrAn
                                    (case-lambda
                                      ((g$x$10726$bmrAn)
                                       ((case-lambda
                                          ((g$x$10727$bmrAn)
                                           (if (integer? g$x$10727$bmrAn)
                                             (if (exact? g$x$10727$bmrAn)
                                               (begin
                                                 '#f
                                                 (>= g$x$10727$bmrAn '0))
                                               '#f)
                                             '#f)))
                                        (g$syntax->datum$8096$bmrAn
                                          g$x$10726$bmrAn)))))
                                  (g$subversion-pred$10614$bmrAn
                                    (case-lambda
                                      ((g$x*$10678$bmrAn)
                                       ((case-lambda
                                          ((g$t$10679$bmrAn)
                                           ((case-lambda
                                              ((g$ls/false$10680$bmrAn)
                                               (if (if g$ls/false$10680$bmrAn
                                                     (begin
                                                       '#f
                                                       (apply
                                                         (case-lambda
                                                           ((g$n$10681$bmrAn)
                                                            (g$subversion?$10613$bmrAn
                                                              g$n$10681$bmrAn)))
                                                         g$ls/false$10680$bmrAn))
                                                     '#f)
                                                 (apply
                                                   (case-lambda
                                                     ((g$n$10682$bmrAn)
                                                      (case-lambda
                                                        ((g$x$10683$bmrAn)
                                                         (= g$x$10683$bmrAn
                                                            (g$syntax->datum$8096$bmrAn
                                                              g$n$10682$bmrAn))))))
                                                   g$ls/false$10680$bmrAn)
                                                 ((case-lambda
                                                    ((g$t$10684$bmrAn)
                                                     ((case-lambda
                                                        ((g$ls/false$10685$bmrAn)
                                                         (if (if g$ls/false$10685$bmrAn
                                                               (begin
                                                                 '#f
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$p?$10686$bmrAn
                                                                        g$sub*$10687$bmrAn)
                                                                      (eq? (g$syntax->datum$8096$bmrAn
                                                                             g$p?$10686$bmrAn)
                                                                           'and)))
                                                                   g$ls/false$10685$bmrAn))
                                                               '#f)
                                                           (apply
                                                             (case-lambda
                                                               ((g$p?$10688$bmrAn
                                                                  g$sub*$10689$bmrAn)
                                                                ((case-lambda
                                                                   ((g$p*$10690$bmrAn)
                                                                    (case-lambda
                                                                      ((g$x$10691$bmrAn)
                                                                       (g$for-all$5061$bmrAn
                                                                         (case-lambda
                                                                           ((g$p$10692$bmrAn)
                                                                            (g$p$10692$bmrAn
                                                                              g$x$10691$bmrAn)))
                                                                         g$p*$10690$bmrAn)))))
                                                                 (g$map$5063$bmrAn
                                                                   g$subversion-pred$10614$bmrAn
                                                                   g$sub*$10689$bmrAn))))
                                                             g$ls/false$10685$bmrAn)
                                                           ((case-lambda
                                                              ((g$t$10693$bmrAn)
                                                               ((case-lambda
                                                                  ((g$ls/false$10694$bmrAn)
                                                                   (if (if g$ls/false$10694$bmrAn
                                                                         (begin
                                                                           '#f
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$p?$10695$bmrAn
                                                                                  g$sub*$10696$bmrAn)
                                                                                (eq? (g$syntax->datum$8096$bmrAn
                                                                                       g$p?$10695$bmrAn)
                                                                                     'or)))
                                                                             g$ls/false$10694$bmrAn))
                                                                         '#f)
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p?$10697$bmrAn
                                                                            g$sub*$10698$bmrAn)
                                                                          ((case-lambda
                                                                             ((g$p*$10699$bmrAn)
                                                                              (case-lambda
                                                                                ((g$x$10700$bmrAn)
                                                                                 (g$exists$5062$bmrAn
                                                                                   (case-lambda
                                                                                     ((g$p$10701$bmrAn)
                                                                                      (g$p$10701$bmrAn
                                                                                        g$x$10700$bmrAn)))
                                                                                   g$p*$10699$bmrAn)))))
                                                                           (g$map$5063$bmrAn
                                                                             g$subversion-pred$10614$bmrAn
                                                                             g$sub*$10698$bmrAn))))
                                                                       g$ls/false$10694$bmrAn)
                                                                     ((case-lambda
                                                                        ((g$t$10702$bmrAn)
                                                                         ((case-lambda
                                                                            ((g$ls/false$10703$bmrAn)
                                                                             (if (if g$ls/false$10703$bmrAn
                                                                                   (begin
                                                                                     '#f
                                                                                     (apply
                                                                                       (case-lambda
                                                                                         ((g$p?$10704$bmrAn
                                                                                            g$sub$10705$bmrAn)
                                                                                          (eq? (g$syntax->datum$8096$bmrAn
                                                                                                 g$p?$10704$bmrAn)
                                                                                               'not)))
                                                                                       g$ls/false$10703$bmrAn))
                                                                                   '#f)
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$p?$10706$bmrAn
                                                                                      g$sub$10707$bmrAn)
                                                                                    ((case-lambda
                                                                                       ((g$p$10708$bmrAn)
                                                                                        (case-lambda
                                                                                          ((g$x$10709$bmrAn)
                                                                                           (not (g$p$10708$bmrAn
                                                                                                  g$x$10709$bmrAn))))))
                                                                                     (g$subversion-pred$10614$bmrAn
                                                                                       g$sub$10707$bmrAn))))
                                                                                 g$ls/false$10703$bmrAn)
                                                                               ((case-lambda
                                                                                  ((g$t$10710$bmrAn)
                                                                                   ((case-lambda
                                                                                      ((g$ls/false$10711$bmrAn)
                                                                                       (if (if g$ls/false$10711$bmrAn
                                                                                             (begin
                                                                                               '#f
                                                                                               (apply
                                                                                                 (case-lambda
                                                                                                   ((g$p?$10712$bmrAn
                                                                                                      g$n$10713$bmrAn)
                                                                                                    (if (eq? (g$syntax->datum$8096$bmrAn
                                                                                                               g$p?$10712$bmrAn)
                                                                                                             '<=)
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (g$subversion?$10613$bmrAn
                                                                                                          g$n$10713$bmrAn))
                                                                                                      '#f)))
                                                                                                 g$ls/false$10711$bmrAn))
                                                                                             '#f)
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p?$10714$bmrAn
                                                                                                g$n$10715$bmrAn)
                                                                                              (case-lambda
                                                                                                ((g$x$10716$bmrAn)
                                                                                                 (<= g$x$10716$bmrAn
                                                                                                     (g$syntax->datum$8096$bmrAn
                                                                                                       g$n$10715$bmrAn))))))
                                                                                           g$ls/false$10711$bmrAn)
                                                                                         ((case-lambda
                                                                                            ((g$t$10717$bmrAn)
                                                                                             ((case-lambda
                                                                                                ((g$ls/false$10718$bmrAn)
                                                                                                 (if (if g$ls/false$10718$bmrAn
                                                                                                       (begin
                                                                                                         '#f
                                                                                                         (apply
                                                                                                           (case-lambda
                                                                                                             ((g$p?$10719$bmrAn
                                                                                                                g$n$10720$bmrAn)
                                                                                                              (if (eq? (g$syntax->datum$8096$bmrAn
                                                                                                                         g$p?$10719$bmrAn)
                                                                                                                       '>=)
                                                                                                                (begin
                                                                                                                  '#f
                                                                                                                  (g$subversion?$10613$bmrAn
                                                                                                                    g$n$10720$bmrAn))
                                                                                                                '#f)))
                                                                                                           g$ls/false$10718$bmrAn))
                                                                                                       '#f)
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$p?$10721$bmrAn
                                                                                                          g$n$10722$bmrAn)
                                                                                                        (case-lambda
                                                                                                          ((g$x$10723$bmrAn)
                                                                                                           (>= g$x$10723$bmrAn
                                                                                                               (g$syntax->datum$8096$bmrAn
                                                                                                                 g$n$10722$bmrAn))))))
                                                                                                     g$ls/false$10718$bmrAn)
                                                                                                   ((case-lambda
                                                                                                      ((g$t$10724$bmrAn)
                                                                                                       ((case-lambda
                                                                                                          ((g$ls/false$10725$bmrAn)
                                                                                                           (if g$ls/false$10725$bmrAn
                                                                                                             (apply
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$syntax-violation$8093$bmrAn
                                                                                                                    'import
                                                                                                                    '"invalid sub-version spec"
                                                                                                                    g$spec$10612$bmrAn
                                                                                                                    g$x*$10678$bmrAn)))
                                                                                                               g$ls/false$10725$bmrAn)
                                                                                                             (g$syntax-violation$8093$bmrAn
                                                                                                               '#f
                                                                                                               '"invalid syntax"
                                                                                                               g$t$10724$bmrAn))))
                                                                                                        (g$syntax-dispatch$7981$bmrAn
                                                                                                          g$t$10724$bmrAn
                                                                                                          '_))))
                                                                                                    g$t$10717$bmrAn))))
                                                                                              (g$syntax-dispatch$7981$bmrAn
                                                                                                g$t$10717$bmrAn
                                                                                                '(any any)))))
                                                                                          g$t$10710$bmrAn))))
                                                                                    (g$syntax-dispatch$7981$bmrAn
                                                                                      g$t$10710$bmrAn
                                                                                      '(any any)))))
                                                                                g$t$10702$bmrAn))))
                                                                          (g$syntax-dispatch$7981$bmrAn
                                                                            g$t$10702$bmrAn
                                                                            '(any any)))))
                                                                      g$t$10693$bmrAn))))
                                                                (g$syntax-dispatch$7981$bmrAn
                                                                  g$t$10693$bmrAn
                                                                  '(any .
                                                                        each-any)))))
                                                            g$t$10684$bmrAn))))
                                                      (g$syntax-dispatch$7981$bmrAn
                                                        g$t$10684$bmrAn
                                                        '(any . each-any)))))
                                                  g$t$10679$bmrAn))))
                                            (g$syntax-dispatch$7981$bmrAn
                                              g$t$10679$bmrAn
                                              'any))))
                                        g$x*$10678$bmrAn))))
                                  (g$version-pred$10615$bmrAn
                                    (case-lambda
                                      ((g$x*$10638$bmrAn)
                                       ((case-lambda
                                          ((g$t$10639$bmrAn)
                                           ((case-lambda
                                              ((g$ls/false$10640$bmrAn)
                                               (if g$ls/false$10640$bmrAn
                                                 (apply
                                                   (case-lambda
                                                     (()
                                                      (case-lambda
                                                        ((g$x$10641$bmrAn)
                                                         '#t))))
                                                   g$ls/false$10640$bmrAn)
                                                 ((case-lambda
                                                    ((g$t$10642$bmrAn)
                                                     ((case-lambda
                                                        ((g$ls/false$10643$bmrAn)
                                                         (if (if g$ls/false$10643$bmrAn
                                                               (begin
                                                                 '#f
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$c$10644$bmrAn
                                                                        g$ver*$10645$bmrAn)
                                                                      (eq? (g$syntax->datum$8096$bmrAn
                                                                             g$c$10644$bmrAn)
                                                                           'and)))
                                                                   g$ls/false$10643$bmrAn))
                                                               '#f)
                                                           (apply
                                                             (case-lambda
                                                               ((g$c$10646$bmrAn
                                                                  g$ver*$10647$bmrAn)
                                                                ((case-lambda
                                                                   ((g$p*$10648$bmrAn)
                                                                    (case-lambda
                                                                      ((g$x$10649$bmrAn)
                                                                       (g$for-all$5061$bmrAn
                                                                         (case-lambda
                                                                           ((g$p$10650$bmrAn)
                                                                            (g$p$10650$bmrAn
                                                                              g$x$10649$bmrAn)))
                                                                         g$p*$10648$bmrAn)))))
                                                                 (g$map$5063$bmrAn
                                                                   g$version-pred$10615$bmrAn
                                                                   g$ver*$10647$bmrAn))))
                                                             g$ls/false$10643$bmrAn)
                                                           ((case-lambda
                                                              ((g$t$10651$bmrAn)
                                                               ((case-lambda
                                                                  ((g$ls/false$10652$bmrAn)
                                                                   (if (if g$ls/false$10652$bmrAn
                                                                         (begin
                                                                           '#f
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$c$10653$bmrAn
                                                                                  g$ver*$10654$bmrAn)
                                                                                (eq? (g$syntax->datum$8096$bmrAn
                                                                                       g$c$10653$bmrAn)
                                                                                     'or)))
                                                                             g$ls/false$10652$bmrAn))
                                                                         '#f)
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$c$10655$bmrAn
                                                                            g$ver*$10656$bmrAn)
                                                                          ((case-lambda
                                                                             ((g$p*$10657$bmrAn)
                                                                              (case-lambda
                                                                                ((g$x$10658$bmrAn)
                                                                                 (g$exists$5062$bmrAn
                                                                                   (case-lambda
                                                                                     ((g$p$10659$bmrAn)
                                                                                      (g$p$10659$bmrAn
                                                                                        g$x$10658$bmrAn)))
                                                                                   g$p*$10657$bmrAn)))))
                                                                           (g$map$5063$bmrAn
                                                                             g$version-pred$10615$bmrAn
                                                                             g$ver*$10656$bmrAn))))
                                                                       g$ls/false$10652$bmrAn)
                                                                     ((case-lambda
                                                                        ((g$t$10660$bmrAn)
                                                                         ((case-lambda
                                                                            ((g$ls/false$10661$bmrAn)
                                                                             (if (if g$ls/false$10661$bmrAn
                                                                                   (begin
                                                                                     '#f
                                                                                     (apply
                                                                                       (case-lambda
                                                                                         ((g$c$10662$bmrAn
                                                                                            g$ver$10663$bmrAn)
                                                                                          (eq? (g$syntax->datum$8096$bmrAn
                                                                                                 g$c$10662$bmrAn)
                                                                                               'not)))
                                                                                       g$ls/false$10661$bmrAn))
                                                                                   '#f)
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$c$10664$bmrAn
                                                                                      g$ver$10665$bmrAn)
                                                                                    ((case-lambda
                                                                                       ((g$p$10666$bmrAn)
                                                                                        (case-lambda
                                                                                          ((g$x$10667$bmrAn)
                                                                                           (not (g$p$10666$bmrAn
                                                                                                  g$x$10667$bmrAn))))))
                                                                                     (g$version-pred$10615$bmrAn
                                                                                       g$ver$10665$bmrAn))))
                                                                                 g$ls/false$10661$bmrAn)
                                                                               ((case-lambda
                                                                                  ((g$t$10668$bmrAn)
                                                                                   ((case-lambda
                                                                                      ((g$ls/false$10669$bmrAn)
                                                                                       (if g$ls/false$10669$bmrAn
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$sub*$10670$bmrAn)
                                                                                              ((case-lambda
                                                                                                 ((g$p*$10671$bmrAn)
                                                                                                  (case-lambda
                                                                                                    ((g$x$10672$bmrAn)
                                                                                                     ((letrec ((g$f$10673$bmrAn
                                                                                                                 (case-lambda
                                                                                                                   ((g$p*$10674$bmrAn
                                                                                                                      g$x$10675$bmrAn)
                                                                                                                    (if (null?
                                                                                                                          g$p*$10674$bmrAn)
                                                                                                                      '#t
                                                                                                                      (if (null?
                                                                                                                            g$x$10675$bmrAn)
                                                                                                                        '#f
                                                                                                                        (if ((car g$p*$10674$bmrAn)
                                                                                                                             (car g$x$10675$bmrAn))
                                                                                                                          (begin
                                                                                                                            '#f
                                                                                                                            (g$f$10673$bmrAn
                                                                                                                              (cdr g$p*$10674$bmrAn)
                                                                                                                              (cdr g$x$10675$bmrAn)))
                                                                                                                          '#f)))))))
                                                                                                        g$f$10673$bmrAn)
                                                                                                      g$p*$10671$bmrAn
                                                                                                      g$x$10672$bmrAn)))))
                                                                                               (g$map$5063$bmrAn
                                                                                                 g$subversion-pred$10614$bmrAn
                                                                                                 g$sub*$10670$bmrAn))))
                                                                                           g$ls/false$10669$bmrAn)
                                                                                         ((case-lambda
                                                                                            ((g$t$10676$bmrAn)
                                                                                             ((case-lambda
                                                                                                ((g$ls/false$10677$bmrAn)
                                                                                                 (if g$ls/false$10677$bmrAn
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$syntax-violation$8093$bmrAn
                                                                                                          'import
                                                                                                          '"invalid version spec"
                                                                                                          g$spec$10612$bmrAn
                                                                                                          g$x*$10638$bmrAn)))
                                                                                                     g$ls/false$10677$bmrAn)
                                                                                                   (g$syntax-violation$8093$bmrAn
                                                                                                     '#f
                                                                                                     '"invalid syntax"
                                                                                                     g$t$10676$bmrAn))))
                                                                                              (g$syntax-dispatch$7981$bmrAn
                                                                                                g$t$10676$bmrAn
                                                                                                '_))))
                                                                                          g$t$10668$bmrAn))))
                                                                                    (g$syntax-dispatch$7981$bmrAn
                                                                                      g$t$10668$bmrAn
                                                                                      'each-any))))
                                                                                g$t$10660$bmrAn))))
                                                                          (g$syntax-dispatch$7981$bmrAn
                                                                            g$t$10660$bmrAn
                                                                            '(any any)))))
                                                                      g$t$10651$bmrAn))))
                                                                (g$syntax-dispatch$7981$bmrAn
                                                                  g$t$10651$bmrAn
                                                                  '(any .
                                                                        each-any)))))
                                                            g$t$10642$bmrAn))))
                                                      (g$syntax-dispatch$7981$bmrAn
                                                        g$t$10642$bmrAn
                                                        '(any . each-any)))))
                                                  g$t$10639$bmrAn))))
                                            (g$syntax-dispatch$7981$bmrAn
                                              g$t$10639$bmrAn
                                              '()))))
                                        g$x*$10638$bmrAn)))))
                          ((letrec ((g$f$10616$bmrAn
                                      (case-lambda
                                        ((g$x$10617$bmrAn)
                                         ((case-lambda
                                            ((g$t$10618$bmrAn)
                                             ((case-lambda
                                                ((g$ls/false$10619$bmrAn)
                                                 (if g$ls/false$10619$bmrAn
                                                   (apply
                                                     (case-lambda
                                                       ((g$version-spec*$10620$bmrAn)
                                                        (values
                                                          '()
                                                          (g$version-pred$10615$bmrAn
                                                            g$version-spec*$10620$bmrAn))))
                                                     g$ls/false$10619$bmrAn)
                                                   ((case-lambda
                                                      ((g$t$10621$bmrAn)
                                                       ((case-lambda
                                                          ((g$ls/false$10622$bmrAn)
                                                           (if (if g$ls/false$10622$bmrAn
                                                                 (begin
                                                                   '#f
                                                                   (apply
                                                                     (case-lambda
                                                                       ((g$x$10623$bmrAn
                                                                          g$x*$10624$bmrAn)
                                                                        (g$idsyn?$10510$bmrAn
                                                                          g$x$10623$bmrAn)))
                                                                     g$ls/false$10622$bmrAn))
                                                                 '#f)
                                                             (apply
                                                               (case-lambda
                                                                 ((g$x$10625$bmrAn
                                                                    g$x*$10626$bmrAn)
                                                                  (call-with-values
                                                                    (case-lambda
                                                                      (()
                                                                       (g$f$10616$bmrAn
                                                                         g$x*$10626$bmrAn)))
                                                                    (case-lambda
                                                                      ((g$name$10629$bmrAn
                                                                         g$pred$10630$bmrAn)
                                                                       ((case-lambda
                                                                          ((g$pred$10631$bmrAn
                                                                             g$name$10632$bmrAn)
                                                                           (values
                                                                             (cons
                                                                               (g$syntax->datum$8096$bmrAn
                                                                                 g$x$10625$bmrAn)
                                                                               g$name$10632$bmrAn)
                                                                             g$pred$10631$bmrAn)))
                                                                        g$pred$10630$bmrAn
                                                                        g$name$10629$bmrAn))))))
                                                               g$ls/false$10622$bmrAn)
                                                             ((case-lambda
                                                                ((g$t$10633$bmrAn)
                                                                 ((case-lambda
                                                                    ((g$ls/false$10634$bmrAn)
                                                                     (if g$ls/false$10634$bmrAn
                                                                       (apply
                                                                         (case-lambda
                                                                           (()
                                                                            (values
                                                                              '()
                                                                              (case-lambda
                                                                                ((g$x$10635$bmrAn)
                                                                                 '#t)))))
                                                                         g$ls/false$10634$bmrAn)
                                                                       ((case-lambda
                                                                          ((g$t$10636$bmrAn)
                                                                           ((case-lambda
                                                                              ((g$ls/false$10637$bmrAn)
                                                                               (if g$ls/false$10637$bmrAn
                                                                                 (apply
                                                                                   (case-lambda
                                                                                     (()
                                                                                      (g$syntax-violation$8093$bmrAn
                                                                                        '#f
                                                                                        '"invalid import spec"
                                                                                        g$spec$10612$bmrAn)))
                                                                                   g$ls/false$10637$bmrAn)
                                                                                 (g$syntax-violation$8093$bmrAn
                                                                                   '#f
                                                                                   '"invalid syntax"
                                                                                   g$t$10636$bmrAn))))
                                                                            (g$syntax-dispatch$7981$bmrAn
                                                                              g$t$10636$bmrAn
                                                                              '_))))
                                                                        g$t$10633$bmrAn))))
                                                                  (g$syntax-dispatch$7981$bmrAn
                                                                    g$t$10633$bmrAn
                                                                    '()))))
                                                              g$t$10621$bmrAn))))
                                                        (g$syntax-dispatch$7981$bmrAn
                                                          g$t$10621$bmrAn
                                                          '(any . any)))))
                                                    g$t$10618$bmrAn))))
                                              (g$syntax-dispatch$7981$bmrAn
                                                g$t$10618$bmrAn
                                                '(each-any)))))
                                          g$x$10617$bmrAn)))))
                             g$f$10616$bmrAn)
                           g$spec$10612$bmrAn)))))
                   (g$import-library$10518$bmrAn
                     (case-lambda
                       ((g$spec*$10604$bmrAn)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$parse-library-name$10517$bmrAn
                               g$spec*$10604$bmrAn)))
                          (case-lambda
                            ((g$name$10607$bmrAn g$pred$10608$bmrAn)
                             ((case-lambda
                                ((g$pred$10609$bmrAn g$name$10610$bmrAn)
                                 (begin
                                   (if (null? g$name$10610$bmrAn)
                                     (g$syntax-violation$8093$bmrAn
                                       'import
                                       '"empty library name"
                                       g$spec*$10604$bmrAn)
                                     (void))
                                   ((case-lambda
                                      ((g$lib$10611$bmrAn)
                                       (begin
                                         (if (not g$lib$10611$bmrAn)
                                           (g$syntax-violation$8093$bmrAn
                                             'import
                                             '"cannot find library with required name"
                                             g$name$10610$bmrAn)
                                           (void))
                                         (if (not (g$pred$10609$bmrAn
                                                    (g$library-version$7466$bmrAn
                                                      g$lib$10611$bmrAn)))
                                           (g$syntax-violation$8093$bmrAn
                                             'import
                                             '"library does not satisfy version specification"
                                             g$spec*$10604$bmrAn
                                             g$lib$10611$bmrAn)
                                           (void))
                                         ((g$imp-collector$8035$bmrAn)
                                          g$lib$10611$bmrAn)
                                         (g$library-subst$7470$bmrAn
                                           g$lib$10611$bmrAn))))
                                    (g$find-library-by-name$7506$bmrAn
                                      g$name$10610$bmrAn)))))
                              g$pred$10608$bmrAn
                              g$name$10607$bmrAn)))))))
                   (g$get-import$10519$bmrAn
                     (case-lambda
                       ((g$spec$10533$bmrAn)
                        ((case-lambda
                           ((g$t$10534$bmrAn)
                            ((case-lambda
                               ((g$ls/false$10535$bmrAn)
                                (if (if g$ls/false$10535$bmrAn
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$x$10536$bmrAn g$x*$10537$bmrAn)
                                             (not (g$memq$5055$bmrAn
                                                    (g$syntax->datum$8096$bmrAn
                                                      g$x$10536$bmrAn)
                                                    '(for rename
                                                          except
                                                          only
                                                          prefix
                                                          library)))))
                                          g$ls/false$10535$bmrAn))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$x$10538$bmrAn g$x*$10539$bmrAn)
                                       (g$import-library$10518$bmrAn
                                         (cons
                                           g$x$10538$bmrAn
                                           g$x*$10539$bmrAn))))
                                    g$ls/false$10535$bmrAn)
                                  ((case-lambda
                                     ((g$t$10540$bmrAn)
                                      ((case-lambda
                                         ((g$ls/false$10541$bmrAn)
                                          (if (if g$ls/false$10541$bmrAn
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$rename$10542$bmrAn
                                                         g$isp$10543$bmrAn
                                                         g$old*$10544$bmrAn
                                                         g$new*$10545$bmrAn)
                                                       (if (eq? (g$syntax->datum$8096$bmrAn
                                                                  g$rename$10542$bmrAn)
                                                                'rename)
                                                         (if (g$for-all$5061$bmrAn
                                                               g$idsyn?$10510$bmrAn
                                                               g$old*$10544$bmrAn)
                                                           (begin
                                                             '#f
                                                             (g$for-all$5061$bmrAn
                                                               g$idsyn?$10510$bmrAn
                                                               g$new*$10545$bmrAn))
                                                           '#f)
                                                         '#f)))
                                                    g$ls/false$10541$bmrAn))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$rename$10546$bmrAn
                                                   g$isp$10547$bmrAn
                                                   g$old*$10548$bmrAn
                                                   g$new*$10549$bmrAn)
                                                 ((case-lambda
                                                    ((g$subst$10550$bmrAn
                                                       g$old*$10551$bmrAn
                                                       g$new*$10552$bmrAn)
                                                     ((case-lambda
                                                        ((g$old-label*$10553$bmrAn)
                                                         ((case-lambda
                                                            ((g$subst$10554$bmrAn)
                                                             (g$merge-substs$10512$bmrAn
                                                               (g$map$5063$bmrAn
                                                                 cons
                                                                 g$new*$10552$bmrAn
                                                                 g$old-label*$10553$bmrAn)
                                                               g$subst$10554$bmrAn)))
                                                          (g$rem*$10515$bmrAn
                                                            g$old*$10551$bmrAn
                                                            g$subst$10550$bmrAn))))
                                                      (g$find*$10514$bmrAn
                                                        g$old*$10551$bmrAn
                                                        g$subst$10550$bmrAn))))
                                                  (g$get-import$10519$bmrAn
                                                    g$isp$10547$bmrAn)
                                                  (g$map$5063$bmrAn
                                                    g$syntax->datum$8096$bmrAn
                                                    g$old*$10548$bmrAn)
                                                  (g$map$5063$bmrAn
                                                    g$syntax->datum$8096$bmrAn
                                                    g$new*$10549$bmrAn))))
                                              g$ls/false$10541$bmrAn)
                                            ((case-lambda
                                               ((g$t$10555$bmrAn)
                                                ((case-lambda
                                                   ((g$ls/false$10556$bmrAn)
                                                    (if (if g$ls/false$10556$bmrAn
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$except$10557$bmrAn
                                                                   g$isp$10558$bmrAn
                                                                   g$sym*$10559$bmrAn)
                                                                 (if (eq? (g$syntax->datum$8096$bmrAn
                                                                            g$except$10557$bmrAn)
                                                                          'except)
                                                                   (begin
                                                                     '#f
                                                                     (g$for-all$5061$bmrAn
                                                                       g$idsyn?$10510$bmrAn
                                                                       g$sym*$10559$bmrAn))
                                                                   '#f)))
                                                              g$ls/false$10556$bmrAn))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$except$10560$bmrAn
                                                             g$isp$10561$bmrAn
                                                             g$sym*$10562$bmrAn)
                                                           ((case-lambda
                                                              ((g$subst$10563$bmrAn)
                                                               (g$rem*$10515$bmrAn
                                                                 (g$map$5063$bmrAn
                                                                   g$syntax->datum$8096$bmrAn
                                                                   g$sym*$10562$bmrAn)
                                                                 g$subst$10563$bmrAn)))
                                                            (g$get-import$10519$bmrAn
                                                              g$isp$10561$bmrAn))))
                                                        g$ls/false$10556$bmrAn)
                                                      ((case-lambda
                                                         ((g$t$10564$bmrAn)
                                                          ((case-lambda
                                                             ((g$ls/false$10565$bmrAn)
                                                              (if (if g$ls/false$10565$bmrAn
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$only$10566$bmrAn
                                                                             g$isp$10567$bmrAn
                                                                             g$sym*$10568$bmrAn)
                                                                           (if (eq? (g$syntax->datum$8096$bmrAn
                                                                                      g$only$10566$bmrAn)
                                                                                    'only)
                                                                             (begin
                                                                               '#f
                                                                               (g$for-all$5061$bmrAn
                                                                                 g$idsyn?$10510$bmrAn
                                                                                 g$sym*$10568$bmrAn))
                                                                             '#f)))
                                                                        g$ls/false$10565$bmrAn))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$only$10569$bmrAn
                                                                       g$isp$10570$bmrAn
                                                                       g$sym*$10571$bmrAn)
                                                                     ((case-lambda
                                                                        ((g$subst$10572$bmrAn
                                                                           g$sym*$10573$bmrAn)
                                                                         ((case-lambda
                                                                            ((g$sym*$10574$bmrAn)
                                                                             ((case-lambda
                                                                                ((g$lab*$10575$bmrAn)
                                                                                 (g$map$5063$bmrAn
                                                                                   cons
                                                                                   g$sym*$10574$bmrAn
                                                                                   g$lab*$10575$bmrAn)))
                                                                              (g$find*$10514$bmrAn
                                                                                g$sym*$10574$bmrAn
                                                                                g$subst$10572$bmrAn))))
                                                                          (g$remove-dups$10516$bmrAn
                                                                            g$sym*$10573$bmrAn))))
                                                                      (g$get-import$10519$bmrAn
                                                                        g$isp$10570$bmrAn)
                                                                      (g$map$5063$bmrAn
                                                                        g$syntax->datum$8096$bmrAn
                                                                        g$sym*$10571$bmrAn))))
                                                                  g$ls/false$10565$bmrAn)
                                                                ((case-lambda
                                                                   ((g$t$10576$bmrAn)
                                                                    ((case-lambda
                                                                       ((g$ls/false$10577$bmrAn)
                                                                        (if (if g$ls/false$10577$bmrAn
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$prefix$10578$bmrAn
                                                                                       g$isp$10579$bmrAn
                                                                                       g$p$10580$bmrAn)
                                                                                     (if (eq? (g$syntax->datum$8096$bmrAn
                                                                                                g$prefix$10578$bmrAn)
                                                                                              'prefix)
                                                                                       (begin
                                                                                         '#f
                                                                                         (g$idsyn?$10510$bmrAn
                                                                                           g$p$10580$bmrAn))
                                                                                       '#f)))
                                                                                  g$ls/false$10577$bmrAn))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$prefix$10581$bmrAn
                                                                                 g$isp$10582$bmrAn
                                                                                 g$p$10583$bmrAn)
                                                                               ((case-lambda
                                                                                  ((g$subst$10584$bmrAn
                                                                                     g$prefix$10585$bmrAn)
                                                                                   (g$map$5063$bmrAn
                                                                                     (case-lambda
                                                                                       ((g$x$10586$bmrAn)
                                                                                        (cons
                                                                                          (string->symbol
                                                                                            (string-append
                                                                                              g$prefix$10585$bmrAn
                                                                                              (symbol->string
                                                                                                (car g$x$10586$bmrAn))))
                                                                                          (cdr g$x$10586$bmrAn))))
                                                                                     g$subst$10584$bmrAn)))
                                                                                (g$get-import$10519$bmrAn
                                                                                  g$isp$10582$bmrAn)
                                                                                (symbol->string
                                                                                  (g$syntax->datum$8096$bmrAn
                                                                                    g$p$10583$bmrAn)))))
                                                                            g$ls/false$10577$bmrAn)
                                                                          ((case-lambda
                                                                             ((g$t$10587$bmrAn)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10588$bmrAn)
                                                                                  (if (if g$ls/false$10588$bmrAn
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$library$10589$bmrAn
                                                                                                 g$spec*$10590$bmrAn)
                                                                                               (eq? (g$syntax->datum$8096$bmrAn
                                                                                                      g$library$10589$bmrAn)
                                                                                                    'library)))
                                                                                            g$ls/false$10588$bmrAn))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$library$10591$bmrAn
                                                                                           g$spec*$10592$bmrAn)
                                                                                         (g$import-library$10518$bmrAn
                                                                                           g$spec*$10592$bmrAn)))
                                                                                      g$ls/false$10588$bmrAn)
                                                                                    ((case-lambda
                                                                                       ((g$t$10593$bmrAn)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10594$bmrAn)
                                                                                            (if (if g$ls/false$10594$bmrAn
                                                                                                  (begin
                                                                                                    '#f
                                                                                                    (apply
                                                                                                      (case-lambda
                                                                                                        ((g$for$10595$bmrAn
                                                                                                           g$isp$10596$bmrAn
                                                                                                           g$rest$10597$bmrAn)
                                                                                                         (eq? (g$syntax->datum$8096$bmrAn
                                                                                                                g$for$10595$bmrAn)
                                                                                                              'for)))
                                                                                                      g$ls/false$10594$bmrAn))
                                                                                                  '#f)
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$for$10598$bmrAn
                                                                                                     g$isp$10599$bmrAn
                                                                                                     g$rest$10600$bmrAn)
                                                                                                   (g$get-import$10519$bmrAn
                                                                                                     g$isp$10599$bmrAn)))
                                                                                                g$ls/false$10594$bmrAn)
                                                                                              ((case-lambda
                                                                                                 ((g$t$10601$bmrAn)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$10602$bmrAn)
                                                                                                      (if g$ls/false$10602$bmrAn
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$spec$10603$bmrAn)
                                                                                                             (g$syntax-violation$8093$bmrAn
                                                                                                               'import
                                                                                                               '"invalid import spec"
                                                                                                               g$spec$10603$bmrAn)))
                                                                                                          g$ls/false$10602$bmrAn)
                                                                                                        (g$syntax-violation$8093$bmrAn
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$10601$bmrAn))))
                                                                                                   (g$syntax-dispatch$7981$bmrAn
                                                                                                     g$t$10601$bmrAn
                                                                                                     'any))))
                                                                                               g$t$10593$bmrAn))))
                                                                                         (g$syntax-dispatch$7981$bmrAn
                                                                                           g$t$10593$bmrAn
                                                                                           '(any any
                                                                                                 .
                                                                                                 any)))))
                                                                                     g$t$10587$bmrAn))))
                                                                               (g$syntax-dispatch$7981$bmrAn
                                                                                 g$t$10587$bmrAn
                                                                                 '(any each-any)))))
                                                                           g$t$10576$bmrAn))))
                                                                     (g$syntax-dispatch$7981$bmrAn
                                                                       g$t$10576$bmrAn
                                                                       '(any any
                                                                             any)))))
                                                                 g$t$10564$bmrAn))))
                                                           (g$syntax-dispatch$7981$bmrAn
                                                             g$t$10564$bmrAn
                                                             '(any any
                                                                   .
                                                                   each-any)))))
                                                       g$t$10555$bmrAn))))
                                                 (g$syntax-dispatch$7981$bmrAn
                                                   g$t$10555$bmrAn
                                                   '(any any . each-any)))))
                                             g$t$10540$bmrAn))))
                                       (g$syntax-dispatch$7981$bmrAn
                                         g$t$10540$bmrAn
                                         '(any any . #(each (any any)))))))
                                   g$t$10534$bmrAn))))
                             (g$syntax-dispatch$7981$bmrAn
                               g$t$10534$bmrAn
                               '(any . each-any)))))
                         g$spec$10533$bmrAn))))
                   (g$add-imports!$10520$bmrAn
                     (case-lambda
                       ((g$imp$10525$bmrAn g$h$10526$bmrAn)
                        ((case-lambda
                           ((g$subst$10527$bmrAn)
                            (g$for-each$5064$bmrAn
                              (case-lambda
                                ((g$x$10528$bmrAn)
                                 ((case-lambda
                                    ((g$name$10529$bmrAn g$label$10530$bmrAn)
                                     ((case-lambda
                                        ((g$t$10531$bmrAn)
                                         (if g$t$10531$bmrAn
                                           ((case-lambda
                                              ((g$l$10532$bmrAn)
                                               (if (not (eq? g$l$10532$bmrAn
                                                             g$label$10530$bmrAn))
                                                 (g$dup-error$10511$bmrAn
                                                   g$name$10529$bmrAn)
                                                 (void))))
                                            g$t$10531$bmrAn)
                                           (g$hashtable-set!$5542$bmrAn
                                             g$h$10526$bmrAn
                                             g$name$10529$bmrAn
                                             g$label$10530$bmrAn))))
                                      (g$hashtable-ref$5541$bmrAn
                                        g$h$10526$bmrAn
                                        g$name$10529$bmrAn
                                        '#f))))
                                  (car g$x$10528$bmrAn)
                                  (cdr g$x$10528$bmrAn))))
                              g$subst$10527$bmrAn)))
                         (g$get-import$10519$bmrAn g$imp$10525$bmrAn))))))
           (case-lambda
             ((g$imp*$10521$bmrAn)
              ((letrec ((g$f$10522$bmrAn
                          (case-lambda
                            ((g$imp*$10523$bmrAn g$h$10524$bmrAn)
                             (if (null? g$imp*$10523$bmrAn)
                               (hashtable-entries g$h$10524$bmrAn)
                               (begin
                                 (g$add-imports!$10520$bmrAn
                                   (car g$imp*$10523$bmrAn)
                                   g$h$10524$bmrAn)
                                 (g$f$10522$bmrAn
                                   (cdr g$imp*$10523$bmrAn)
                                   g$h$10524$bmrAn)))))))
                 g$f$10522$bmrAn)
               g$imp*$10521$bmrAn
               (g$make-eq-hashtable$5538$bmrAn)))))))))
   (g$make-top-rib$8031$bmrAn
     g$make-top-rib$11534$bmrAn
     (case-lambda
       ((g$names$10772$bmrAn g$labels$10773$bmrAn)
        ((case-lambda
           ((g$rib$10774$bmrAn)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$10775$bmrAn g$label$10776$bmrAn)
                   (begin
                     (if (not (symbol? g$name$10775$bmrAn))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$10775$bmrAn)
                       (void))
                     (g$extend-rib/nc!$7667$bmrAn
                       g$rib$10774$bmrAn
                       (g$make-stx$7676$bmrAn
                         g$name$10775$bmrAn
                         g$top-mark*$7640$bmrAn
                         '()
                         '())
                       g$label$10776$bmrAn))))
                g$names$10772$bmrAn
                g$labels$10773$bmrAn)
              g$rib$10774$bmrAn)))
         (g$make-cache-rib$7664$bmrAn)))))
   (g$make-collector$8032$bmrAn
     g$make-collector$11535$bmrAn
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$10777$bmrAn)
            (case-lambda
              (() g$ls$10777$bmrAn)
              ((g$x$10778$bmrAn)
               (set! g$ls$10777$bmrAn
                 (g$set-cons$7637$bmrAn g$x$10778$bmrAn g$ls$10777$bmrAn))))))
         '()))))
   (g$inv-collector$8033$bmrAn
     g$inv-collector$11536$bmrAn
     (g$make-parameter$6975$bmrAn
       (case-lambda
         (g$args$10779$bmrAn
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10780$bmrAn)
          (begin
            (if (not (procedure? g$x$10780$bmrAn))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$10780$bmrAn)
              (void))
            g$x$10780$bmrAn)))))
   (g$vis-collector$8034$bmrAn
     g$vis-collector$11537$bmrAn
     (g$make-parameter$6975$bmrAn
       (case-lambda
         (g$args$10781$bmrAn
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10782$bmrAn)
          (begin
            (if (not (procedure? g$x$10782$bmrAn))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$10782$bmrAn)
              (void))
            g$x$10782$bmrAn)))))
   (g$imp-collector$8035$bmrAn
     g$imp-collector$11538$bmrAn
     (g$make-parameter$6975$bmrAn
       (case-lambda
         (g$args$10783$bmrAn
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10784$bmrAn)
          (begin
            (if (not (procedure? g$x$10784$bmrAn))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10784$bmrAn)
              (void))
            g$x$10784$bmrAn)))))
   (g$chi-library-internal$8036$bmrAn
     g$chi-library-internal$11539$bmrAn
     (case-lambda
       ((g$e*$10785$bmrAn g$rib$10786$bmrAn g$mix?$10787$bmrAn)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$8025$bmrAn
               g$e*$10785$bmrAn
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10786$bmrAn
               g$mix?$10787$bmrAn
               '#t)))
          (case-lambda
            ((g$e*$10796$bmrAn
               g$r$10797$bmrAn
               g$mr$10798$bmrAn
               g$lex*$10799$bmrAn
               g$rhs*$10800$bmrAn
               g$mod**$10801$bmrAn
               g$_kwd*$10802$bmrAn
               g$exp*$10803$bmrAn)
             ((case-lambda
                ((g$exp*$10804$bmrAn
                   g$_kwd*$10805$bmrAn
                   g$mod**$10806$bmrAn
                   g$rhs*$10807$bmrAn
                   g$lex*$10808$bmrAn
                   g$mr$10809$bmrAn
                   g$r$10810$bmrAn
                   g$e*$10811$bmrAn)
                 (values
                   (append
                     (apply append (reverse g$mod**$10806$bmrAn))
                     g$e*$10811$bmrAn)
                   g$r$10810$bmrAn
                   g$mr$10809$bmrAn
                   (reverse g$lex*$10808$bmrAn)
                   (reverse g$rhs*$10807$bmrAn)
                   g$exp*$10804$bmrAn)))
              g$exp*$10803$bmrAn
              g$_kwd*$10802$bmrAn
              g$mod**$10801$bmrAn
              g$rhs*$10800$bmrAn
              g$lex*$10799$bmrAn
              g$mr$10798$bmrAn
              g$r$10797$bmrAn
              g$e*$10796$bmrAn)))))))
   (g$chi-interaction-expr$8037$bmrAn
     g$chi-interaction-expr$11540$bmrAn
     (case-lambda
       ((g$e$10812$bmrAn g$rib$10813$bmrAn g$r$10814$bmrAn)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$8025$bmrAn
               (list g$e$10812$bmrAn)
               g$r$10814$bmrAn
               g$r$10814$bmrAn
               '()
               '()
               '()
               '()
               '()
               g$rib$10813$bmrAn
               '#t
               '#f)))
          (case-lambda
            ((g$e*$10823$bmrAn
               g$r$10824$bmrAn
               g$mr$10825$bmrAn
               g$lex*$10826$bmrAn
               g$rhs*$10827$bmrAn
               g$mod**$10828$bmrAn
               g$_kwd*$10829$bmrAn
               g$_exp*$10830$bmrAn)
             ((case-lambda
                ((g$_exp*$10831$bmrAn
                   g$_kwd*$10832$bmrAn
                   g$mod**$10833$bmrAn
                   g$rhs*$10834$bmrAn
                   g$lex*$10835$bmrAn
                   g$mr$10836$bmrAn
                   g$r$10837$bmrAn
                   g$e*$10838$bmrAn)
                 ((case-lambda
                    ((g$e*$10839$bmrAn)
                     ((case-lambda
                        ((g$e$10840$bmrAn)
                         (values g$e$10840$bmrAn g$r$10837$bmrAn)))
                      (if (null? g$e*$10839$bmrAn)
                        (g$build-void$7633$bmrAn)
                        (if (null? (cdr g$e*$10839$bmrAn))
                          (car g$e*$10839$bmrAn)
                          (g$build-sequence$7632$bmrAn
                            '#f
                            g$e*$10839$bmrAn))))))
                  (g$expand-interaction-rhs*/init*$8006$bmrAn
                    (reverse g$lex*$10835$bmrAn)
                    (reverse g$rhs*$10834$bmrAn)
                    (append
                      (apply append (reverse g$mod**$10833$bmrAn))
                      g$e*$10838$bmrAn)
                    g$r$10837$bmrAn
                    g$mr$10836$bmrAn))))
              g$_exp*$10830$bmrAn
              g$_kwd*$10829$bmrAn
              g$mod**$10828$bmrAn
              g$rhs*$10827$bmrAn
              g$lex*$10826$bmrAn
              g$mr$10825$bmrAn
              g$r$10824$bmrAn
              g$e*$10823$bmrAn)))))))
   (g$library-body-expander$8038$bmrAn
     g$library-body-expander$11541$bmrAn
     (case-lambda
       ((g$name$10841$bmrAn
          g$main-exp*$10842$bmrAn
          g$imp*$10843$bmrAn
          g$b*$10844$bmrAn
          g$mix?$10845$bmrAn)
        (letrec* ((g$itc$10846$bmrAn (g$make-collector$8032$bmrAn)))
          ((case-lambda
             ((g$imp-collector$10851$bmrAn
                g$top-level-context$10852$bmrAn
                g$imp-collector$10853$bmrAn
                g$top-level-context$10854$bmrAn)
              ((case-lambda
                 ((g$swap$10855$bmrAn)
                  (dynamic-wind
                    g$swap$10855$bmrAn
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$8030$bmrAn
                              g$imp*$10843$bmrAn)))
                         (case-lambda
                           ((g$subst-names$10858$bmrAn
                              g$subst-labels$10859$bmrAn)
                            ((case-lambda
                               ((g$subst-labels$10860$bmrAn
                                  g$subst-names$10861$bmrAn)
                                ((case-lambda
                                   ((g$rib$10862$bmrAn)
                                    (letrec* ((g$wrap$10863$bmrAn
                                                (case-lambda
                                                  ((g$x$10925$bmrAn)
                                                   (g$make-stx$7676$bmrAn
                                                     g$x$10925$bmrAn
                                                     g$top-mark*$7640$bmrAn
                                                     (list g$rib$10862$bmrAn)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$10864$bmrAn
                                            g$main-exp*$10865$bmrAn
                                            g$rtc$10866$bmrAn
                                            g$vtc$10867$bmrAn)
                                          ((case-lambda
                                             ((g$inv-collector$10872$bmrAn
                                                g$vis-collector$10873$bmrAn
                                                g$inv-collector$10874$bmrAn
                                                g$vis-collector$10875$bmrAn)
                                              ((case-lambda
                                                 ((g$swap$10876$bmrAn)
                                                  (dynamic-wind
                                                    g$swap$10876$bmrAn
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$8036$bmrAn
                                                              g$b*$10864$bmrAn
                                                              g$rib$10862$bmrAn
                                                              g$mix?$10845$bmrAn)))
                                                         (case-lambda
                                                           ((g$init*$10883$bmrAn
                                                              g$r$10884$bmrAn
                                                              g$mr$10885$bmrAn
                                                              g$lex*$10886$bmrAn
                                                              g$rhs*$10887$bmrAn
                                                              g$internal-exp*$10888$bmrAn)
                                                            ((case-lambda
                                                               ((g$internal-exp*$10889$bmrAn
                                                                  g$rhs*$10890$bmrAn
                                                                  g$lex*$10891$bmrAn
                                                                  g$mr$10892$bmrAn
                                                                  g$r$10893$bmrAn
                                                                  g$init*$10894$bmrAn)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$8027$bmrAn
                                                                       (append
                                                                         g$main-exp*$10865$bmrAn
                                                                         g$internal-exp*$10889$bmrAn))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$10897$bmrAn
                                                                       g$exp-id*$10898$bmrAn)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$10899$bmrAn
                                                                           g$exp-name*$10900$bmrAn)
                                                                         (begin
                                                                           (g$seal-rib!$7669$bmrAn
                                                                             g$rib$10862$bmrAn)
                                                                           ((case-lambda
                                                                              ((g$init*$10901$bmrAn)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$10902$bmrAn)
                                                                                   (begin
                                                                                     (g$unseal-rib!$7670$bmrAn
                                                                                       g$rib$10862$bmrAn)
                                                                                     ((case-lambda
                                                                                        ((g$loc*$10903$bmrAn
                                                                                           g$export-subst$10904$bmrAn)
                                                                                         (letrec* ((g$errstr$10905$bmrAn
                                                                                                     '"attempt to export mutated variable"))
                                                                                           (call-with-values
                                                                                             (case-lambda
                                                                                               (()
                                                                                                (g$make-export-env/macros$8082$bmrAn
                                                                                                  g$lex*$10891$bmrAn
                                                                                                  g$loc*$10903$bmrAn
                                                                                                  g$r$10893$bmrAn)))
                                                                                             (case-lambda
                                                                                               ((g$export-env$10909$bmrAn
                                                                                                  g$global*$10910$bmrAn
                                                                                                  g$macro*$10911$bmrAn)
                                                                                                ((case-lambda
                                                                                                   ((g$macro*$10912$bmrAn
                                                                                                      g$global*$10913$bmrAn
                                                                                                      g$export-env$10914$bmrAn)
                                                                                                    (begin
                                                                                                      (g$for-each$5064$bmrAn
                                                                                                        (case-lambda
                                                                                                          ((g$s$10915$bmrAn)
                                                                                                           ((case-lambda
                                                                                                              ((g$name$10916$bmrAn
                                                                                                                 g$label$10917$bmrAn)
                                                                                                               ((case-lambda
                                                                                                                  ((g$p$10918$bmrAn)
                                                                                                                   (if g$p$10918$bmrAn
                                                                                                                     ((case-lambda
                                                                                                                        ((g$b$10919$bmrAn)
                                                                                                                         ((case-lambda
                                                                                                                            ((g$type$10920$bmrAn)
                                                                                                                             (if (eq? g$type$10920$bmrAn
                                                                                                                                      'mutable)
                                                                                                                               (g$syntax-violation$8093$bmrAn
                                                                                                                                 'export
                                                                                                                                 g$errstr$10905$bmrAn
                                                                                                                                 g$name$10916$bmrAn)
                                                                                                                               (void))))
                                                                                                                          (car g$b$10919$bmrAn))))
                                                                                                                      (cdr g$p$10918$bmrAn))
                                                                                                                     (void))))
                                                                                                                (g$assq$5051$bmrAn
                                                                                                                  g$label$10917$bmrAn
                                                                                                                  g$export-env$10914$bmrAn))))
                                                                                                            (car g$s$10915$bmrAn)
                                                                                                            (cdr g$s$10915$bmrAn))))
                                                                                                        g$export-subst$10904$bmrAn)
                                                                                                      ((case-lambda
                                                                                                         ((g$invoke-body$10921$bmrAn
                                                                                                            g$invoke-definitions$10922$bmrAn)
                                                                                                          (values
                                                                                                            (g$itc$10846$bmrAn)
                                                                                                            (g$rtc$10866$bmrAn)
                                                                                                            (g$vtc$10867$bmrAn)
                                                                                                            (g$build-sequence$7632$bmrAn
                                                                                                              '#f
                                                                                                              (append
                                                                                                                g$invoke-definitions$10922$bmrAn
                                                                                                                (list
                                                                                                                  g$invoke-body$10921$bmrAn)))
                                                                                                            g$macro*$10912$bmrAn
                                                                                                            g$export-subst$10904$bmrAn
                                                                                                            g$export-env$10914$bmrAn)))
                                                                                                       (g$build-library-letrec*$7636$bmrAn
                                                                                                         '#f
                                                                                                         g$name$10841$bmrAn
                                                                                                         g$lex*$10891$bmrAn
                                                                                                         g$loc*$10903$bmrAn
                                                                                                         g$rhs*$10902$bmrAn
                                                                                                         (if (null?
                                                                                                               g$init*$10901$bmrAn)
                                                                                                           (g$build-void$7633$bmrAn)
                                                                                                           (g$build-sequence$7632$bmrAn
                                                                                                             '#f
                                                                                                             g$init*$10901$bmrAn)))
                                                                                                       (g$map$5063$bmrAn
                                                                                                         g$build-global-define$7628$bmrAn
                                                                                                         (g$map$5063$bmrAn
                                                                                                           cdr
                                                                                                           g$global*$10913$bmrAn))))))
                                                                                                 g$macro*$10911$bmrAn
                                                                                                 g$global*$10910$bmrAn
                                                                                                 g$export-env$10909$bmrAn)))))))
                                                                                      (g$map$5063$bmrAn
                                                                                        g$gen-global$7643$bmrAn
                                                                                        g$lex*$10891$bmrAn)
                                                                                      (g$make-export-subst$8081$bmrAn
                                                                                        g$exp-name*$10900$bmrAn
                                                                                        g$exp-id*$10899$bmrAn)))))
                                                                                (g$chi-rhs*$8007$bmrAn
                                                                                  g$rhs*$10890$bmrAn
                                                                                  g$r$10893$bmrAn
                                                                                  g$mr$10892$bmrAn))))
                                                                            (g$chi-expr*$7997$bmrAn
                                                                              g$init*$10894$bmrAn
                                                                              g$r$10893$bmrAn
                                                                              g$mr$10892$bmrAn)))))
                                                                      g$exp-id*$10898$bmrAn
                                                                      g$exp-name*$10897$bmrAn))))))
                                                             g$internal-exp*$10888$bmrAn
                                                             g$rhs*$10887$bmrAn
                                                             g$lex*$10886$bmrAn
                                                             g$mr$10885$bmrAn
                                                             g$r$10884$bmrAn
                                                             g$init*$10883$bmrAn))))))
                                                    g$swap$10876$bmrAn)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$10923$bmrAn)
                                                        (begin
                                                          (g$inv-collector$10872$bmrAn
                                                            g$inv-collector$10874$bmrAn)
                                                          (set! g$inv-collector$10874$bmrAn
                                                            g$t$10923$bmrAn))))
                                                     (g$inv-collector$10872$bmrAn))
                                                    ((case-lambda
                                                       ((g$t$10924$bmrAn)
                                                        (begin
                                                          (g$vis-collector$10873$bmrAn
                                                            g$vis-collector$10875$bmrAn)
                                                          (set! g$vis-collector$10875$bmrAn
                                                            g$t$10924$bmrAn))))
                                                     (g$vis-collector$10873$bmrAn))))))))
                                           g$inv-collector$8033$bmrAn
                                           g$vis-collector$8034$bmrAn
                                           g$rtc$10866$bmrAn
                                           g$vtc$10867$bmrAn)))
                                       (g$map$5063$bmrAn
                                         g$wrap$10863$bmrAn
                                         g$b*$10844$bmrAn)
                                       (g$map$5063$bmrAn
                                         g$wrap$10863$bmrAn
                                         g$main-exp*$10842$bmrAn)
                                       (g$make-collector$8032$bmrAn)
                                       (g$make-collector$8032$bmrAn)))))
                                 (g$make-top-rib$8031$bmrAn
                                   g$subst-names$10861$bmrAn
                                   g$subst-labels$10860$bmrAn))))
                             g$subst-labels$10859$bmrAn
                             g$subst-names$10858$bmrAn))))))
                    g$swap$10855$bmrAn)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10926$bmrAn)
                        (begin
                          (g$imp-collector$10851$bmrAn
                            g$imp-collector$10853$bmrAn)
                          (set! g$imp-collector$10853$bmrAn g$t$10926$bmrAn))))
                     (g$imp-collector$10851$bmrAn))
                    ((case-lambda
                       ((g$t$10927$bmrAn)
                        (begin
                          (g$top-level-context$10852$bmrAn
                            g$top-level-context$10854$bmrAn)
                          (set! g$top-level-context$10854$bmrAn
                            g$t$10927$bmrAn))))
                     (g$top-level-context$10852$bmrAn))))))))
           g$imp-collector$8035$bmrAn
           g$top-level-context$8101$bmrAn
           g$itc$10846$bmrAn
           '#f)))))
   (g$core-library-expander$8039$bmrAn
     g$core-library-expander$11542$bmrAn
     (case-lambda
       ((g$e$10928$bmrAn g$verify-name$10929$bmrAn)
        (call-with-values
          (case-lambda (() (g$parse-library$8029$bmrAn g$e$10928$bmrAn)))
          (case-lambda
            ((g$name*$10934$bmrAn
               g$exp*$10935$bmrAn
               g$imp*$10936$bmrAn
               g$b*$10937$bmrAn)
             ((case-lambda
                ((g$b*$10938$bmrAn
                   g$imp*$10939$bmrAn
                   g$exp*$10940$bmrAn
                   g$name*$10941$bmrAn)
                 (call-with-values
                   (case-lambda
                     (() (g$parse-library-name$8028$bmrAn g$name*$10941$bmrAn)))
                   (case-lambda
                     ((g$name$10944$bmrAn g$ver$10945$bmrAn)
                      ((case-lambda
                         ((g$ver$10946$bmrAn g$name$10947$bmrAn)
                          (begin
                            (g$verify-name$10929$bmrAn g$name$10947$bmrAn)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$8038$bmrAn
                                   g$name$10947$bmrAn
                                   g$exp*$10940$bmrAn
                                   g$imp*$10939$bmrAn
                                   g$b*$10938$bmrAn
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10955$bmrAn
                                   g$invoke-req*$10956$bmrAn
                                   g$visit-req*$10957$bmrAn
                                   g$invoke-code$10958$bmrAn
                                   g$visit-code$10959$bmrAn
                                   g$export-subst$10960$bmrAn
                                   g$export-env$10961$bmrAn)
                                 ((case-lambda
                                    ((g$export-env$10962$bmrAn
                                       g$export-subst$10963$bmrAn
                                       g$visit-code$10964$bmrAn
                                       g$invoke-code$10965$bmrAn
                                       g$visit-req*$10966$bmrAn
                                       g$invoke-req*$10967$bmrAn
                                       g$imp*$10968$bmrAn)
                                     (values
                                       g$name$10947$bmrAn
                                       g$ver$10946$bmrAn
                                       g$imp*$10968$bmrAn
                                       g$invoke-req*$10967$bmrAn
                                       g$visit-req*$10966$bmrAn
                                       g$invoke-code$10965$bmrAn
                                       g$visit-code$10964$bmrAn
                                       g$export-subst$10963$bmrAn
                                       g$export-env$10962$bmrAn)))
                                  g$export-env$10961$bmrAn
                                  g$export-subst$10960$bmrAn
                                  g$visit-code$10959$bmrAn
                                  g$invoke-code$10958$bmrAn
                                  g$visit-req*$10957$bmrAn
                                  g$invoke-req*$10956$bmrAn
                                  g$imp*$10955$bmrAn)))))))
                       g$ver$10945$bmrAn
                       g$name$10944$bmrAn))))))
              g$b*$10937$bmrAn
              g$imp*$10936$bmrAn
              g$exp*$10935$bmrAn
              g$name*$10934$bmrAn)))))))
   (g$parse-top-level-program$8040$bmrAn
     g$parse-top-level-program$11543$bmrAn
     (case-lambda
       ((g$e*$10969$bmrAn)
        ((case-lambda
           ((g$t$10970$bmrAn)
            ((case-lambda
               ((g$ls/false$10971$bmrAn)
                (if (if g$ls/false$10971$bmrAn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10972$bmrAn
                               g$imp*$10973$bmrAn
                               g$b*$10974$bmrAn)
                             (eq? (g$syntax->datum$8096$bmrAn
                                    g$import$10972$bmrAn)
                                  'import)))
                          g$ls/false$10971$bmrAn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10975$bmrAn
                         g$imp*$10976$bmrAn
                         g$b*$10977$bmrAn)
                       (values g$imp*$10976$bmrAn g$b*$10977$bmrAn)))
                    g$ls/false$10971$bmrAn)
                  ((case-lambda
                     ((g$t$10978$bmrAn)
                      ((case-lambda
                         ((g$ls/false$10979$bmrAn)
                          (if (if g$ls/false$10979$bmrAn
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10980$bmrAn
                                         g$x$10981$bmrAn
                                         g$y$10982$bmrAn)
                                       (eq? (g$syntax->datum$8096$bmrAn
                                              g$import$10980$bmrAn)
                                            'import)))
                                    g$ls/false$10979$bmrAn))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10983$bmrAn
                                   g$x$10984$bmrAn
                                   g$y$10985$bmrAn)
                                 (g$syntax-violation$8093$bmrAn
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7700$bmrAn g$e*$10969$bmrAn))))
                              g$ls/false$10979$bmrAn)
                            ((case-lambda
                               ((g$t$10986$bmrAn)
                                ((case-lambda
                                   ((g$ls/false$10987$bmrAn)
                                    (if g$ls/false$10987$bmrAn
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10987$bmrAn)
                                      (g$syntax-violation$8093$bmrAn
                                        '#f
                                        '"invalid syntax"
                                        g$t$10986$bmrAn))))
                                 (g$syntax-dispatch$7981$bmrAn
                                   g$t$10986$bmrAn
                                   '_))))
                             g$t$10978$bmrAn))))
                       (g$syntax-dispatch$7981$bmrAn
                         g$t$10978$bmrAn
                         '((any . any) . any)))))
                   g$t$10970$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn
               g$t$10970$bmrAn
               '((any . each-any) . each-any)))))
         g$e*$10969$bmrAn))))
   (g$top-level-expander$8041$bmrAn
     g$top-level-expander$11544$bmrAn
     (case-lambda
       ((g$e*$10988$bmrAn)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$8040$bmrAn g$e*$10988$bmrAn)))
          (case-lambda
            ((g$imp*$10991$bmrAn g$b*$10992$bmrAn)
             ((case-lambda
                ((g$b*$10993$bmrAn g$imp*$10994$bmrAn)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$8038$bmrAn
                        '()
                        '()
                        g$imp*$10994$bmrAn
                        g$b*$10993$bmrAn
                        '#t)))
                   (case-lambda
                     ((g$imp*$11002$bmrAn
                        g$invoke-req*$11003$bmrAn
                        g$visit-req*$11004$bmrAn
                        g$invoke-code$11005$bmrAn
                        g$visit-code$11006$bmrAn
                        g$export-subst$11007$bmrAn
                        g$export-env$11008$bmrAn)
                      ((case-lambda
                         ((g$export-env$11009$bmrAn
                            g$export-subst$11010$bmrAn
                            g$visit-code$11011$bmrAn
                            g$invoke-code$11012$bmrAn
                            g$visit-req*$11013$bmrAn
                            g$invoke-req*$11014$bmrAn
                            g$imp*$11015$bmrAn)
                          (values
                            g$invoke-req*$11014$bmrAn
                            g$invoke-code$11012$bmrAn)))
                       g$export-env$11008$bmrAn
                       g$export-subst$11007$bmrAn
                       g$visit-code$11006$bmrAn
                       g$invoke-code$11005$bmrAn
                       g$visit-req*$11004$bmrAn
                       g$invoke-req*$11003$bmrAn
                       g$imp*$11002$bmrAn))))))
              g$b*$10992$bmrAn
              g$imp*$10991$bmrAn)))))))
   (g$9092$8042$bmrAn
     g$9092$11545$bmrAn
     (make-record-type-descriptor
       'env
       '#f
       'g$9095$bmrAn
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$9094$8043$bmrAn g$9094$11546$bmrAn '#f)
   (g$9093$8044$bmrAn
     g$9093$11547$bmrAn
     (make-record-constructor-descriptor
       g$9092$8042$bmrAn
       '#f
       g$9094$8043$bmrAn))
   (g$env?$8045$bmrAn
     g$env?$11548$bmrAn
     (record-predicate g$9092$8042$bmrAn))
   (g$make-env$8046$bmrAn
     g$make-env$11549$bmrAn
     (record-constructor g$9093$8044$bmrAn))
   (g$env-names$8047$bmrAn
     g$env-names$11550$bmrAn
     (record-accessor g$9092$8042$bmrAn '0))
   (g$env-labels$8048$bmrAn
     g$env-labels$11551$bmrAn
     (record-accessor g$9092$8042$bmrAn '1))
   (g$env-itc$8049$bmrAn
     g$env-itc$11552$bmrAn
     (record-accessor g$9092$8042$bmrAn '2))
   (g$set-env-names!$8050$bmrAn
     g$set-env-names!$11553$bmrAn
     (record-mutator g$9092$8042$bmrAn '0))
   (g$set-env-labels!$8051$bmrAn
     g$set-env-labels!$11554$bmrAn
     (record-mutator g$9092$8042$bmrAn '1))
   (g$set-env-itc!$8052$bmrAn
     g$set-env-itc!$11555$bmrAn
     (record-mutator g$9092$8042$bmrAn '2))
   (g$rp$8053$bmrAn
     g$rp$11556$bmrAn
     (make-record-printer
       'env
       (case-lambda
         ((g$x$11016$bmrAn g$p$11017$bmrAn g$wr$11018$bmrAn)
          (display '"#<environment>" g$p$11017$bmrAn)))))
   (g$9111$8054$bmrAn
     g$9111$11557$bmrAn
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$9114$bmrAn
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$9113$8055$bmrAn g$9113$11558$bmrAn '#f)
   (g$9112$8056$bmrAn
     g$9112$11559$bmrAn
     (make-record-constructor-descriptor
       g$9111$8054$bmrAn
       '#f
       g$9113$8055$bmrAn))
   (g$interaction-env?$8057$bmrAn
     g$interaction-env?$11560$bmrAn
     (record-predicate g$9111$8054$bmrAn))
   (g$make-interaction-env$8058$bmrAn
     g$make-interaction-env$11561$bmrAn
     (record-constructor g$9112$8056$bmrAn))
   (g$interaction-env-rib$8059$bmrAn
     g$interaction-env-rib$11562$bmrAn
     (record-accessor g$9111$8054$bmrAn '0))
   (g$interaction-env-r$8060$bmrAn
     g$interaction-env-r$11563$bmrAn
     (record-accessor g$9111$8054$bmrAn '1))
   (g$interaction-env-locs$8061$bmrAn
     g$interaction-env-locs$11564$bmrAn
     (record-accessor g$9111$8054$bmrAn '2))
   (g$set-interaction-env-rib!$8062$bmrAn
     g$set-interaction-env-rib!$11565$bmrAn
     (record-mutator g$9111$8054$bmrAn '0))
   (g$set-interaction-env-r!$8063$bmrAn
     g$set-interaction-env-r!$11566$bmrAn
     (record-mutator g$9111$8054$bmrAn '1))
   (g$set-interaction-env-locs!$8064$bmrAn
     g$set-interaction-env-locs!$11567$bmrAn
     (record-mutator g$9111$8054$bmrAn '2))
   (g$rp$8065$bmrAn
     g$rp$11568$bmrAn
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$11019$bmrAn g$p$11020$bmrAn g$wr$11021$bmrAn)
          (display '"#<environment>" g$p$11020$bmrAn)))))
   (g$interaction-environment-symbols$8066$bmrAn
     g$interaction-environment-symbols$11569$bmrAn
     (case-lambda
       (()
        (g$environment-symbols$8070$bmrAn
          (g$interaction-environment$8100$bmrAn)))))
   (g$environment-bindings$8067$bmrAn
     g$environment-bindings$11570$bmrAn
     (case-lambda
       ((g$e$11022$bmrAn)
        (vector->list
          (vector-map
            (case-lambda
              ((g$name$11023$bmrAn g$label$11024$bmrAn)
               (g$parse-binding$8068$bmrAn
                 (cons
                   g$name$11023$bmrAn
                   (g$imported-label->binding$7512$bmrAn
                     g$label$11024$bmrAn)))))
            (g$env-names$8047$bmrAn g$e$11022$bmrAn)
            (g$env-labels$8048$bmrAn g$e$11022$bmrAn))))))
   (g$parse-binding$8068$bmrAn
     g$parse-binding$11571$bmrAn
     (case-lambda
       ((g$b$11025$bmrAn)
        (cons
          (car g$b$11025$bmrAn)
          ((case-lambda
             ((g$t$11026$bmrAn)
              (if (g$memv$5056$bmrAn g$t$11026$bmrAn '(core-prim global))
                'procedure
                (if (g$memv$5056$bmrAn
                      g$t$11026$bmrAn
                      '(core-macro macro global-macro))
                  'syntax
                  (if (g$memv$5056$bmrAn g$t$11026$bmrAn '($core-rtd))
                    'record
                    (if (eq? (car g$b$11025$bmrAn)
                             (g$cadr$5264$bmrAn g$b$11025$bmrAn))
                      'syntax
                      'unknown))))))
           (g$cadr$5264$bmrAn g$b$11025$bmrAn))))))
   (g$environment?$8069$bmrAn
     g$environment?$11572$bmrAn
     (case-lambda
       ((g$x$11027$bmrAn)
        ((case-lambda
           ((g$t$11028$bmrAn)
            (if g$t$11028$bmrAn
              g$t$11028$bmrAn
              (begin '#f (g$interaction-env?$8057$bmrAn g$x$11027$bmrAn)))))
         (g$env?$8045$bmrAn g$x$11027$bmrAn)))))
   (g$environment-symbols$8070$bmrAn
     g$environment-symbols$11573$bmrAn
     (case-lambda
       ((g$x$11029$bmrAn)
        (if (g$env?$8045$bmrAn g$x$11029$bmrAn)
          (vector->list (g$env-names$8047$bmrAn g$x$11029$bmrAn))
          (if (g$interaction-env?$8057$bmrAn g$x$11029$bmrAn)
            (g$map$5063$bmrAn
              values
              (g$rib-sym*$7653$bmrAn
                (g$interaction-env-rib$8059$bmrAn g$x$11029$bmrAn)))
            (assertion-violation
              'environment-symbols
              '"not an environment"
              g$x$11029$bmrAn))))))
   (g$environment$8071$bmrAn
     g$environment$11574$bmrAn
     (case-lambda
       (g$imp*$11030$bmrAn
        ((case-lambda
           ((g$itc$11031$bmrAn)
            ((case-lambda
               ((g$imp-collector$11034$bmrAn g$imp-collector$11035$bmrAn)
                ((case-lambda
                   ((g$swap$11036$bmrAn)
                    (dynamic-wind
                      g$swap$11036$bmrAn
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$8030$bmrAn
                                g$imp*$11030$bmrAn)))
                           (case-lambda
                             ((g$subst-names$11039$bmrAn
                                g$subst-labels$11040$bmrAn)
                              ((case-lambda
                                 ((g$subst-labels$11041$bmrAn
                                    g$subst-names$11042$bmrAn)
                                  (g$make-env$8046$bmrAn
                                    g$subst-names$11042$bmrAn
                                    g$subst-labels$11041$bmrAn
                                    g$itc$11031$bmrAn)))
                               g$subst-labels$11040$bmrAn
                               g$subst-names$11039$bmrAn))))))
                      g$swap$11036$bmrAn)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$11043$bmrAn)
                        (begin
                          (g$imp-collector$11034$bmrAn
                            g$imp-collector$11035$bmrAn)
                          (set! g$imp-collector$11035$bmrAn g$t$11043$bmrAn))))
                     (g$imp-collector$11034$bmrAn)))))))
             g$imp-collector$8035$bmrAn
             g$itc$11031$bmrAn)))
         (g$make-collector$8032$bmrAn)))))
   (g$null-environment$8072$bmrAn
     g$null-environment$11575$bmrAn
     (case-lambda
       ((g$n$11044$bmrAn)
        (begin
          (if (not (eqv? g$n$11044$bmrAn '5))
            (assertion-violation 'null-environment '"not 5" g$n$11044$bmrAn)
            (void))
          (g$environment$8071$bmrAn '(psyntax null-environment-5))))))
   (g$scheme-report-environment$8073$bmrAn
     g$scheme-report-environment$11576$bmrAn
     (case-lambda
       ((g$n$11045$bmrAn)
        (begin
          (if (not (eqv? g$n$11045$bmrAn '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$11045$bmrAn)
            (void))
          (g$environment$8071$bmrAn '(psyntax scheme-report-environment-5))))))
   (g$expand$8074$bmrAn
     g$expand$11577$bmrAn
     (case-lambda
       ((g$x$11046$bmrAn g$env$11047$bmrAn)
        (if (g$env?$8045$bmrAn g$env$11047$bmrAn)
          ((case-lambda
             ((g$rib$11048$bmrAn)
              ((case-lambda
                 ((g$x$11049$bmrAn
                    g$itc$11050$bmrAn
                    g$rtc$11051$bmrAn
                    g$vtc$11052$bmrAn)
                  ((case-lambda
                     ((g$x$11053$bmrAn)
                      (begin
                        (g$seal-rib!$7669$bmrAn g$rib$11048$bmrAn)
                        (values g$x$11053$bmrAn (g$rtc$11051$bmrAn)))))
                   ((case-lambda
                      ((g$top-level-context$11062$bmrAn
                         g$inv-collector$11063$bmrAn
                         g$vis-collector$11064$bmrAn
                         g$imp-collector$11065$bmrAn
                         g$top-level-context$11066$bmrAn
                         g$inv-collector$11067$bmrAn
                         g$vis-collector$11068$bmrAn
                         g$imp-collector$11069$bmrAn)
                       ((case-lambda
                          ((g$swap$11070$bmrAn)
                           (dynamic-wind
                             g$swap$11070$bmrAn
                             (case-lambda
                               (()
                                (g$chi-expr$7999$bmrAn
                                  g$x$11049$bmrAn
                                  '()
                                  '())))
                             g$swap$11070$bmrAn)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$11071$bmrAn)
                                 (begin
                                   (g$top-level-context$11062$bmrAn
                                     g$top-level-context$11066$bmrAn)
                                   (set! g$top-level-context$11066$bmrAn
                                     g$t$11071$bmrAn))))
                              (g$top-level-context$11062$bmrAn))
                             ((case-lambda
                                ((g$t$11072$bmrAn)
                                 (begin
                                   (g$inv-collector$11063$bmrAn
                                     g$inv-collector$11067$bmrAn)
                                   (set! g$inv-collector$11067$bmrAn
                                     g$t$11072$bmrAn))))
                              (g$inv-collector$11063$bmrAn))
                             ((case-lambda
                                ((g$t$11073$bmrAn)
                                 (begin
                                   (g$vis-collector$11064$bmrAn
                                     g$vis-collector$11068$bmrAn)
                                   (set! g$vis-collector$11068$bmrAn
                                     g$t$11073$bmrAn))))
                              (g$vis-collector$11064$bmrAn))
                             ((case-lambda
                                ((g$t$11074$bmrAn)
                                 (begin
                                   (g$imp-collector$11065$bmrAn
                                     g$imp-collector$11069$bmrAn)
                                   (set! g$imp-collector$11069$bmrAn
                                     g$t$11074$bmrAn))))
                              (g$imp-collector$11065$bmrAn))))))))
                    g$top-level-context$8101$bmrAn
                    g$inv-collector$8033$bmrAn
                    g$vis-collector$8034$bmrAn
                    g$imp-collector$8035$bmrAn
                    '#f
                    g$rtc$11051$bmrAn
                    g$vtc$11052$bmrAn
                    g$itc$11050$bmrAn))))
               (g$make-stx$7676$bmrAn
                 g$x$11046$bmrAn
                 g$top-mark*$7640$bmrAn
                 (list g$rib$11048$bmrAn)
                 '())
               (g$env-itc$8049$bmrAn g$env$11047$bmrAn)
               (g$make-collector$8032$bmrAn)
               (g$make-collector$8032$bmrAn))))
           (g$make-top-rib$8031$bmrAn
             (g$env-names$8047$bmrAn g$env$11047$bmrAn)
             (g$env-labels$8048$bmrAn g$env$11047$bmrAn)))
          (if (g$interaction-env?$8057$bmrAn g$env$11047$bmrAn)
            ((case-lambda
               ((g$rib$11075$bmrAn g$r$11076$bmrAn g$rtc$11077$bmrAn)
                ((case-lambda
                   ((g$x$11078$bmrAn)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$11089$bmrAn
                               g$inv-collector$11090$bmrAn
                               g$vis-collector$11091$bmrAn
                               g$imp-collector$11092$bmrAn
                               g$top-level-context$11093$bmrAn
                               g$inv-collector$11094$bmrAn
                               g$vis-collector$11095$bmrAn
                               g$imp-collector$11096$bmrAn)
                             ((case-lambda
                                ((g$swap$11097$bmrAn)
                                 (dynamic-wind
                                   g$swap$11097$bmrAn
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$8037$bmrAn
                                        g$x$11078$bmrAn
                                        g$rib$11075$bmrAn
                                        g$r$11076$bmrAn)))
                                   g$swap$11097$bmrAn)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$11098$bmrAn)
                                       (begin
                                         (g$top-level-context$11089$bmrAn
                                           g$top-level-context$11093$bmrAn)
                                         (set! g$top-level-context$11093$bmrAn
                                           g$t$11098$bmrAn))))
                                    (g$top-level-context$11089$bmrAn))
                                   ((case-lambda
                                      ((g$t$11099$bmrAn)
                                       (begin
                                         (g$inv-collector$11090$bmrAn
                                           g$inv-collector$11094$bmrAn)
                                         (set! g$inv-collector$11094$bmrAn
                                           g$t$11099$bmrAn))))
                                    (g$inv-collector$11090$bmrAn))
                                   ((case-lambda
                                      ((g$t$11100$bmrAn)
                                       (begin
                                         (g$vis-collector$11091$bmrAn
                                           g$vis-collector$11095$bmrAn)
                                         (set! g$vis-collector$11095$bmrAn
                                           g$t$11100$bmrAn))))
                                    (g$vis-collector$11091$bmrAn))
                                   ((case-lambda
                                      ((g$t$11101$bmrAn)
                                       (begin
                                         (g$imp-collector$11092$bmrAn
                                           g$imp-collector$11096$bmrAn)
                                         (set! g$imp-collector$11096$bmrAn
                                           g$t$11101$bmrAn))))
                                    (g$imp-collector$11092$bmrAn))))))))
                          g$top-level-context$8101$bmrAn
                          g$inv-collector$8033$bmrAn
                          g$vis-collector$8034$bmrAn
                          g$imp-collector$8035$bmrAn
                          g$env$11047$bmrAn
                          g$rtc$11077$bmrAn
                          (g$make-collector$8032$bmrAn)
                          (g$make-collector$8032$bmrAn))))
                      (case-lambda
                        ((g$e$11102$bmrAn g$r^$11103$bmrAn)
                         ((case-lambda
                            ((g$r^$11104$bmrAn g$e$11105$bmrAn)
                             (begin
                               (g$set-interaction-env-r!$8063$bmrAn
                                 g$env$11047$bmrAn
                                 g$r^$11104$bmrAn)
                               (values g$e$11105$bmrAn (g$rtc$11077$bmrAn)))))
                          g$r^$11103$bmrAn
                          g$e$11102$bmrAn))))))
                 (g$make-stx$7676$bmrAn
                   g$x$11046$bmrAn
                   g$top-mark*$7640$bmrAn
                   (list g$rib$11075$bmrAn)
                   '()))))
             (g$interaction-env-rib$8059$bmrAn g$env$11047$bmrAn)
             (g$interaction-env-r$8060$bmrAn g$env$11047$bmrAn)
             (g$make-collector$8032$bmrAn))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$11047$bmrAn))))))
   (g$eval$8075$bmrAn
     g$eval$11578$bmrAn
     (case-lambda
       ((g$x$11106$bmrAn g$env$11107$bmrAn)
        (begin
          (if (not (g$environment?$8069$bmrAn g$env$11107$bmrAn))
            (error 'eval '"not an environment" g$env$11107$bmrAn)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$8074$bmrAn g$x$11106$bmrAn g$env$11107$bmrAn)))
            (case-lambda
              ((g$x$11110$bmrAn g$invoke-req*$11111$bmrAn)
               ((case-lambda
                  ((g$invoke-req*$11112$bmrAn g$x$11113$bmrAn)
                   (begin
                     (g$for-each$5064$bmrAn
                       g$invoke-library$7513$bmrAn
                       g$invoke-req*$11112$bmrAn)
                     (eval-core
                       (g$expanded->core$7221$bmrAn g$x$11113$bmrAn)))))
                g$invoke-req*$11111$bmrAn
                g$x$11110$bmrAn))))))))
   (g$expand->core$8076$bmrAn
     g$expand->core$11579$bmrAn
     (case-lambda
       ((g$x$11114$bmrAn g$env$11115$bmrAn)
        (begin
          (if (not (g$environment?$8069$bmrAn g$env$11115$bmrAn))
            (error 'eval '"not an environment" g$env$11115$bmrAn)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$8074$bmrAn g$x$11114$bmrAn g$env$11115$bmrAn)))
            (case-lambda
              ((g$x$11118$bmrAn g$invoke-req*$11119$bmrAn)
               ((case-lambda
                  ((g$invoke-req*$11120$bmrAn g$x$11121$bmrAn)
                   (begin
                     (g$for-each$5064$bmrAn
                       g$invoke-library$7513$bmrAn
                       g$invoke-req*$11120$bmrAn)
                     (g$expanded->core$7221$bmrAn g$x$11121$bmrAn))))
                g$invoke-req*$11119$bmrAn
                g$x$11118$bmrAn))))))))
   (g$library-expander$8077$bmrAn
     g$library-expander$11580$bmrAn
     (case-lambda
       ((g$x$11122$bmrAn g$filename$11123$bmrAn g$verify-name$11124$bmrAn)
        (letrec* ((g$build-visit-code$11125$bmrAn
                    (case-lambda
                      ((g$macro*$11168$bmrAn)
                       (if (null? g$macro*$11168$bmrAn)
                         (g$build-void$7633$bmrAn)
                         (g$build-sequence$7632$bmrAn
                           '#f
                           (g$map$5063$bmrAn
                             (case-lambda
                               ((g$x$11169$bmrAn)
                                ((case-lambda
                                   ((g$loc$11170$bmrAn g$src$11171$bmrAn)
                                    (list
                                      'set!
                                      g$loc$11170$bmrAn
                                      g$src$11171$bmrAn)))
                                 (car g$x$11169$bmrAn)
                                 (g$cddr$5266$bmrAn g$x$11169$bmrAn))))
                             g$macro*$11168$bmrAn))))))
                  (g$visit!$11126$bmrAn
                    (case-lambda
                      ((g$macro*$11164$bmrAn)
                       (g$for-each$5064$bmrAn
                         (case-lambda
                           ((g$x$11165$bmrAn)
                            ((case-lambda
                               ((g$loc$11166$bmrAn g$proc$11167$bmrAn)
                                (set-symbol-value!
                                  g$loc$11166$bmrAn
                                  g$proc$11167$bmrAn)))
                             (car g$x$11165$bmrAn)
                             (g$cadr$5264$bmrAn g$x$11165$bmrAn))))
                         g$macro*$11164$bmrAn)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$8039$bmrAn
                 g$x$11122$bmrAn
                 g$verify-name$11124$bmrAn)))
            (case-lambda
              ((g$name$11136$bmrAn
                 g$ver$11137$bmrAn
                 g$imp*$11138$bmrAn
                 g$inv*$11139$bmrAn
                 g$vis*$11140$bmrAn
                 g$invoke-code$11141$bmrAn
                 g$macro*$11142$bmrAn
                 g$export-subst$11143$bmrAn
                 g$export-env$11144$bmrAn)
               ((case-lambda
                  ((g$export-env$11145$bmrAn
                     g$export-subst$11146$bmrAn
                     g$macro*$11147$bmrAn
                     g$invoke-code$11148$bmrAn
                     g$vis*$11149$bmrAn
                     g$inv*$11150$bmrAn
                     g$imp*$11151$bmrAn
                     g$ver$11152$bmrAn
                     g$name$11153$bmrAn)
                   ((case-lambda
                      ((g$id$11154$bmrAn
                         g$name$11155$bmrAn
                         g$ver$11156$bmrAn
                         g$imp*$11157$bmrAn
                         g$vis*$11158$bmrAn
                         g$inv*$11159$bmrAn
                         g$visit-proc$11160$bmrAn
                         g$invoke-proc$11161$bmrAn
                         g$visit-code$11162$bmrAn
                         g$invoke-code$11163$bmrAn)
                       (begin
                         (g$install-library$7511$bmrAn
                           g$id$11154$bmrAn
                           g$name$11155$bmrAn
                           g$ver$11156$bmrAn
                           g$imp*$11157$bmrAn
                           g$vis*$11158$bmrAn
                           g$inv*$11159$bmrAn
                           g$export-subst$11146$bmrAn
                           g$export-env$11145$bmrAn
                           g$visit-proc$11160$bmrAn
                           g$invoke-proc$11161$bmrAn
                           g$visit-code$11162$bmrAn
                           g$invoke-code$11163$bmrAn
                           '#t
                           g$filename$11123$bmrAn)
                         (values
                           g$id$11154$bmrAn
                           g$name$11155$bmrAn
                           g$ver$11156$bmrAn
                           g$imp*$11157$bmrAn
                           g$vis*$11158$bmrAn
                           g$inv*$11159$bmrAn
                           g$invoke-code$11163$bmrAn
                           g$visit-code$11162$bmrAn
                           g$export-subst$11146$bmrAn
                           g$export-env$11145$bmrAn))))
                    (gensym)
                    g$name$11153$bmrAn
                    g$ver$11152$bmrAn
                    (g$map$5063$bmrAn
                      g$library-spec$7517$bmrAn
                      g$imp*$11151$bmrAn)
                    (g$map$5063$bmrAn
                      g$library-spec$7517$bmrAn
                      g$vis*$11149$bmrAn)
                    (g$map$5063$bmrAn
                      g$library-spec$7517$bmrAn
                      g$inv*$11150$bmrAn)
                    (case-lambda
                      (() (g$visit!$11126$bmrAn g$macro*$11147$bmrAn)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$7221$bmrAn
                           g$invoke-code$11148$bmrAn))))
                    (g$build-visit-code$11125$bmrAn g$macro*$11147$bmrAn)
                    g$invoke-code$11148$bmrAn)))
                g$export-env$11144$bmrAn
                g$export-subst$11143$bmrAn
                g$macro*$11142$bmrAn
                g$invoke-code$11141$bmrAn
                g$vis*$11140$bmrAn
                g$inv*$11139$bmrAn
                g$imp*$11138$bmrAn
                g$ver$11137$bmrAn
                g$name$11136$bmrAn))))))
       ((g$x$11172$bmrAn g$filename$11173$bmrAn)
        (g$library-expander$8077$bmrAn
          g$x$11172$bmrAn
          g$filename$11173$bmrAn
          (case-lambda ((g$x$11174$bmrAn) (values)))))
       ((g$x$11175$bmrAn)
        (g$library-expander$8077$bmrAn
          g$x$11175$bmrAn
          '#f
          (case-lambda ((g$x$11176$bmrAn) (values)))))))
   (g$boot-library-expand$8078$bmrAn
     g$boot-library-expand$11581$bmrAn
     (case-lambda
       ((g$x$11177$bmrAn)
        (call-with-values
          (case-lambda (() (g$library-expander$8077$bmrAn g$x$11177$bmrAn)))
          (case-lambda
            ((g$id$11188$bmrAn
               g$name$11189$bmrAn
               g$ver$11190$bmrAn
               g$imp*$11191$bmrAn
               g$vis*$11192$bmrAn
               g$inv*$11193$bmrAn
               g$invoke-code$11194$bmrAn
               g$visit-code$11195$bmrAn
               g$export-subst$11196$bmrAn
               g$export-env$11197$bmrAn)
             ((case-lambda
                ((g$export-env$11198$bmrAn
                   g$export-subst$11199$bmrAn
                   g$visit-code$11200$bmrAn
                   g$invoke-code$11201$bmrAn
                   g$inv*$11202$bmrAn
                   g$vis*$11203$bmrAn
                   g$imp*$11204$bmrAn
                   g$ver$11205$bmrAn
                   g$name$11206$bmrAn
                   g$id$11207$bmrAn)
                 (values
                   g$name$11206$bmrAn
                   g$invoke-code$11201$bmrAn
                   g$export-subst$11199$bmrAn
                   g$export-env$11198$bmrAn)))
              g$export-env$11197$bmrAn
              g$export-subst$11196$bmrAn
              g$visit-code$11195$bmrAn
              g$invoke-code$11194$bmrAn
              g$inv*$11193$bmrAn
              g$vis*$11192$bmrAn
              g$imp*$11191$bmrAn
              g$ver$11190$bmrAn
              g$name$11189$bmrAn
              g$id$11188$bmrAn)))))))
   (g$rev-map-append$8079$bmrAn
     g$rev-map-append$11582$bmrAn
     (case-lambda
       ((g$f$11208$bmrAn g$ls$11209$bmrAn g$ac$11210$bmrAn)
        (if (null? g$ls$11209$bmrAn)
          g$ac$11210$bmrAn
          (g$rev-map-append$8079$bmrAn
            g$f$11208$bmrAn
            (cdr g$ls$11209$bmrAn)
            (cons
              (g$f$11208$bmrAn (car g$ls$11209$bmrAn))
              g$ac$11210$bmrAn))))))
   (g$build-exports$8080$bmrAn
     g$build-exports$11583$bmrAn
     (case-lambda
       ((g$lex*+loc*$11211$bmrAn g$init*$11212$bmrAn)
        (g$build-sequence$7632$bmrAn
          '#f
          (cons
            (g$build-void$7633$bmrAn)
            (g$rev-map-append$8079$bmrAn
              (case-lambda
                ((g$x$11213$bmrAn)
                 (list 'set! (cdr g$x$11213$bmrAn) (car g$x$11213$bmrAn))))
              g$lex*+loc*$11211$bmrAn
              g$init*$11212$bmrAn))))))
   (g$make-export-subst$8081$bmrAn
     g$make-export-subst$11584$bmrAn
     (case-lambda
       ((g$name*$11214$bmrAn g$id*$11215$bmrAn)
        (g$map$5063$bmrAn
          (case-lambda
            ((g$name$11216$bmrAn g$id$11217$bmrAn)
             ((case-lambda
                ((g$label$11218$bmrAn)
                 (begin
                   (if (not g$label$11218$bmrAn)
                     (g$syntax-violation$8093$bmrAn
                       '#f
                       '"cannot export unbound identifier"
                       g$id$11217$bmrAn)
                     (void))
                   (cons g$name$11216$bmrAn g$label$11218$bmrAn))))
              (g$id->label$7716$bmrAn g$id$11217$bmrAn))))
          g$name*$11214$bmrAn
          g$id*$11215$bmrAn))))
   (g$make-export-env/macros$8082$bmrAn
     g$make-export-env/macros$11585$bmrAn
     (case-lambda
       ((g$lex*$11219$bmrAn g$loc*$11220$bmrAn g$r$11221$bmrAn)
        (letrec* ((g$lookup$11222$bmrAn
                    (case-lambda
                      ((g$x$11237$bmrAn)
                       ((letrec ((g$f$11238$bmrAn
                                   (case-lambda
                                     ((g$x$11239$bmrAn
                                        g$lex*$11240$bmrAn
                                        g$loc*$11241$bmrAn)
                                      (if (pair? g$lex*$11240$bmrAn)
                                        (if (eq? g$x$11239$bmrAn
                                                 (car g$lex*$11240$bmrAn))
                                          (car g$loc*$11241$bmrAn)
                                          (g$f$11238$bmrAn
                                            g$x$11239$bmrAn
                                            (cdr g$lex*$11240$bmrAn)
                                            (cdr g$loc*$11241$bmrAn)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$11238$bmrAn)
                        g$x$11237$bmrAn
                        g$lex*$11219$bmrAn
                        g$loc*$11220$bmrAn)))))
          ((letrec ((g$f$11223$bmrAn
                      (case-lambda
                        ((g$r$11224$bmrAn
                           g$env$11225$bmrAn
                           g$global*$11226$bmrAn
                           g$macro*$11227$bmrAn)
                         (if (null? g$r$11224$bmrAn)
                           (values
                             g$env$11225$bmrAn
                             g$global*$11226$bmrAn
                             g$macro*$11227$bmrAn)
                           ((case-lambda
                              ((g$x$11228$bmrAn)
                               ((case-lambda
                                  ((g$label$11229$bmrAn g$b$11230$bmrAn)
                                   ((case-lambda
                                      ((g$t$11231$bmrAn)
                                       (if (g$memv$5056$bmrAn
                                             g$t$11231$bmrAn
                                             '(lexical))
                                         ((case-lambda
                                            ((g$v$11232$bmrAn)
                                             ((case-lambda
                                                ((g$loc$11233$bmrAn
                                                   g$type$11234$bmrAn)
                                                 (g$f$11223$bmrAn
                                                   (cdr g$r$11224$bmrAn)
                                                   (cons
                                                     (g$cons*$5065$bmrAn
                                                       g$label$11229$bmrAn
                                                       g$type$11234$bmrAn
                                                       g$loc$11233$bmrAn)
                                                     g$env$11225$bmrAn)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7925$bmrAn
                                                         g$v$11232$bmrAn)
                                                       g$loc$11233$bmrAn)
                                                     g$global*$11226$bmrAn)
                                                   g$macro*$11227$bmrAn)))
                                              (g$lookup$11222$bmrAn
                                                (g$lexical-var$7925$bmrAn
                                                  g$v$11232$bmrAn))
                                              (if (g$lexical-mutable?$7926$bmrAn
                                                    g$v$11232$bmrAn)
                                                'mutable
                                                'global))))
                                          (g$binding-value$7721$bmrAn
                                            g$b$11230$bmrAn))
                                         (if (g$memv$5056$bmrAn
                                               g$t$11231$bmrAn
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$11235$bmrAn)
                                               (g$f$11223$bmrAn
                                                 (cdr g$r$11224$bmrAn)
                                                 (cons
                                                   (g$cons*$5065$bmrAn
                                                     g$label$11229$bmrAn
                                                     'global-macro
                                                     g$loc$11235$bmrAn)
                                                   g$env$11225$bmrAn)
                                                 g$global*$11226$bmrAn
                                                 (cons
                                                   (cons
                                                     g$loc$11235$bmrAn
                                                     (g$binding-value$7721$bmrAn
                                                       g$b$11230$bmrAn))
                                                   g$macro*$11227$bmrAn))))
                                            (gensym))
                                           (if (g$memv$5056$bmrAn
                                                 g$t$11231$bmrAn
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$11236$bmrAn)
                                                 (g$f$11223$bmrAn
                                                   (cdr g$r$11224$bmrAn)
                                                   (cons
                                                     (g$cons*$5065$bmrAn
                                                       g$label$11229$bmrAn
                                                       'global-macro!
                                                       g$loc$11236$bmrAn)
                                                     g$env$11225$bmrAn)
                                                   g$global*$11226$bmrAn
                                                   (cons
                                                     (cons
                                                       g$loc$11236$bmrAn
                                                       (g$binding-value$7721$bmrAn
                                                         g$b$11230$bmrAn))
                                                     g$macro*$11227$bmrAn))))
                                              (gensym))
                                             (if (g$memv$5056$bmrAn
                                                   g$t$11231$bmrAn
                                                   '($rtd $module))
                                               (g$f$11223$bmrAn
                                                 (cdr g$r$11224$bmrAn)
                                                 (cons
                                                   g$x$11228$bmrAn
                                                   g$env$11225$bmrAn)
                                                 g$global*$11226$bmrAn
                                                 g$macro*$11227$bmrAn)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$7720$bmrAn
                                                   g$b$11230$bmrAn)
                                                 (g$binding-value$7721$bmrAn
                                                   g$b$11230$bmrAn))))))))
                                    (g$binding-type$7720$bmrAn
                                      g$b$11230$bmrAn))))
                                (car g$x$11228$bmrAn)
                                (cdr g$x$11228$bmrAn))))
                            (car g$r$11224$bmrAn)))))))
             g$f$11223$bmrAn)
           g$r$11221$bmrAn
           '()
           '()
           '())))))
   (g$generate-temporaries$8083$bmrAn
     g$generate-temporaries$11586$bmrAn
     (case-lambda
       ((g$ls$11242$bmrAn)
        ((case-lambda
           ((g$t$11243$bmrAn)
            ((case-lambda
               ((g$ls/false$11244$bmrAn)
                (if g$ls/false$11244$bmrAn
                  (apply
                    (case-lambda
                      ((g$ls$11245$bmrAn)
                       (g$map$5063$bmrAn
                         (case-lambda
                           ((g$x$11246$bmrAn)
                            (g$make-stx$7676$bmrAn
                              ((case-lambda
                                 ((g$x$11247$bmrAn)
                                  (if ((case-lambda
                                         ((g$t$11248$bmrAn)
                                          (if g$t$11248$bmrAn
                                            g$t$11248$bmrAn
                                            (begin
                                              '#f
                                              (string? g$x$11247$bmrAn)))))
                                       (symbol? g$x$11247$bmrAn))
                                    (gensym g$x$11247$bmrAn)
                                    (gensym 't))))
                               (g$syntax->datum$8096$bmrAn g$x$11246$bmrAn))
                              g$top-mark*$7640$bmrAn
                              '()
                              '())))
                         g$ls$11245$bmrAn)))
                    g$ls/false$11244$bmrAn)
                  ((case-lambda
                     ((g$t$11249$bmrAn)
                      ((case-lambda
                         ((g$ls/false$11250$bmrAn)
                          (if g$ls/false$11250$bmrAn
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$11250$bmrAn)
                            (g$syntax-violation$8093$bmrAn
                              '#f
                              '"invalid syntax"
                              g$t$11249$bmrAn))))
                       (g$syntax-dispatch$7981$bmrAn g$t$11249$bmrAn '_))))
                   g$t$11243$bmrAn))))
             (g$syntax-dispatch$7981$bmrAn g$t$11243$bmrAn 'each-any))))
         g$ls$11242$bmrAn))))
   (g$free-identifier=?$8084$bmrAn
     g$free-identifier=?$11587$bmrAn
     (case-lambda
       ((g$x$11251$bmrAn g$y$11252$bmrAn)
        (if (g$id?$7703$bmrAn g$x$11251$bmrAn)
          (if (g$id?$7703$bmrAn g$y$11252$bmrAn)
            (g$free-id=?$7707$bmrAn g$x$11251$bmrAn g$y$11252$bmrAn)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$11252$bmrAn))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$11251$bmrAn)))))
   (g$bound-identifier=?$8085$bmrAn
     g$bound-identifier=?$11588$bmrAn
     (case-lambda
       ((g$x$11253$bmrAn g$y$11254$bmrAn)
        (if (g$id?$7703$bmrAn g$x$11253$bmrAn)
          (if (g$id?$7703$bmrAn g$y$11254$bmrAn)
            (g$bound-id=?$7706$bmrAn g$x$11253$bmrAn g$y$11254$bmrAn)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$11254$bmrAn))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$11253$bmrAn)))))
   (g$make-source-condition$8086$bmrAn
     g$make-source-condition$11589$bmrAn
     (case-lambda
       ((g$x$11255$bmrAn)
        (letrec* ((g$12047$11256$bmrAn
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$12050$bmrAn
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$12049$11257$bmrAn '#f)
                  (g$12048$11258$bmrAn
                    (make-record-constructor-descriptor
                      g$12047$11256$bmrAn
                      &condition-rcd
                      g$12049$11257$bmrAn))
                  (g$12046$11259$bmrAn (record-predicate g$12047$11256$bmrAn))
                  (g$make-source-condition$11260$bmrAn
                    (record-constructor g$12048$11258$bmrAn))
                  (g$12044$11261$bmrAn (record-accessor g$12047$11256$bmrAn '0))
                  (g$12045$11262$bmrAn (record-accessor g$12047$11256$bmrAn '1))
                  (g$source-condition?$11263$bmrAn
                    (condition-predicate g$12047$11256$bmrAn))
                  (g$source-filename$11264$bmrAn
                    (condition-accessor
                      g$12047$11256$bmrAn
                      g$12044$11261$bmrAn))
                  (g$source-character$11265$bmrAn
                    (condition-accessor
                      g$12047$11256$bmrAn
                      g$12045$11262$bmrAn)))
          (if (pair? g$x$11255$bmrAn)
            (g$make-source-condition$11260$bmrAn
              (car g$x$11255$bmrAn)
              (cdr g$x$11255$bmrAn))
            (condition))))))
   (g$extract-position-condition$8087$bmrAn
     g$extract-position-condition$11590$bmrAn
     (case-lambda
       ((g$x$11266$bmrAn)
        (g$make-source-condition$8086$bmrAn
          (g$expression-position$8088$bmrAn g$x$11266$bmrAn)))))
   (g$expression-position$8088$bmrAn
     g$expression-position$11591$bmrAn
     (case-lambda
       ((g$x$11267$bmrAn)
        (if (g$stx?$7675$bmrAn g$x$11267$bmrAn)
          (begin
            '#f
            ((case-lambda
               ((g$x$11268$bmrAn)
                (if (annotation? g$x$11268$bmrAn)
                  (begin '#f (annotation-source g$x$11268$bmrAn))
                  '#f)))
             (g$stx-expr$7677$bmrAn g$x$11267$bmrAn)))
          '#f))))
   (g$assertion-error$8089$bmrAn
     g$assertion-error$11592$bmrAn
     (case-lambda
       ((g$expr$11269$bmrAn g$pos$11270$bmrAn)
        (raise
          (condition
            (g$make-assertion-violation$5837$bmrAn)
            (g$make-who-condition$5851$bmrAn 'assert)
            (g$make-message-condition$5805$bmrAn '"assertion failed")
            (g$make-irritants-condition$5843$bmrAn (list g$expr$11269$bmrAn))
            (g$make-source-condition$8086$bmrAn g$pos$11270$bmrAn))))))
   (g$syntax-error$8090$bmrAn
     g$syntax-error$11593$bmrAn
     (case-lambda
       ((g$x$11271$bmrAn . g$args$11272$bmrAn)
        (begin
          (if (not (g$for-all$5061$bmrAn string? g$args$11272$bmrAn))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$11272$bmrAn)
            (void))
          (raise
            (condition
              (g$make-message-condition$5805$bmrAn
                (if (null? g$args$11272$bmrAn)
                  '"invalid syntax"
                  (apply string-append g$args$11272$bmrAn)))
              (g$make-syntax-violation$5877$bmrAn
                (g$syntax->datum$8096$bmrAn g$x$11271$bmrAn)
                '#f)
              (g$extract-position-condition$8087$bmrAn g$x$11271$bmrAn)
              (g$extract-trace$8091$bmrAn g$x$11271$bmrAn)))))))
   (g$extract-trace$8091$bmrAn
     g$extract-trace$11594$bmrAn
     (case-lambda
       ((g$x$11273$bmrAn)
        (letrec* ((g$12074$11274$bmrAn
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$12077$bmrAn
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$12076$11275$bmrAn '#f)
                  (g$12075$11276$bmrAn
                    (make-record-constructor-descriptor
                      g$12074$11274$bmrAn
                      &condition-rcd
                      g$12076$11275$bmrAn))
                  (g$12073$11277$bmrAn (record-predicate g$12074$11274$bmrAn))
                  (g$make-trace$11278$bmrAn
                    (record-constructor g$12075$11276$bmrAn))
                  (g$12072$11279$bmrAn (record-accessor g$12074$11274$bmrAn '0))
                  (g$trace?$11280$bmrAn
                    (condition-predicate g$12074$11274$bmrAn))
                  (g$trace-form$11281$bmrAn
                    (condition-accessor
                      g$12074$11274$bmrAn
                      g$12072$11279$bmrAn)))
          ((letrec ((g$f$11282$bmrAn
                      (case-lambda
                        ((g$x$11283$bmrAn)
                         (if (g$stx?$7675$bmrAn g$x$11283$bmrAn)
                           (apply
                             condition
                             (g$make-trace$11278$bmrAn g$x$11283$bmrAn)
                             (g$map$5063$bmrAn
                               g$f$11282$bmrAn
                               (g$stx-ae*$7680$bmrAn g$x$11283$bmrAn)))
                           (if (annotation? g$x$11283$bmrAn)
                             (g$make-trace$11278$bmrAn
                               (g$make-stx$7676$bmrAn
                                 g$x$11283$bmrAn
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$11282$bmrAn)
           g$x$11273$bmrAn)))))
   (g$syntax-violation*$8092$bmrAn
     g$syntax-violation*$11595$bmrAn
     (case-lambda
       ((g$who$11284$bmrAn
          g$msg$11285$bmrAn
          g$form$11286$bmrAn
          g$condition-object$11287$bmrAn)
        (begin
          (if (not (string? g$msg$11285$bmrAn))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$11285$bmrAn)
            (void))
          ((case-lambda
             ((g$who$11288$bmrAn)
              (raise
                (condition
                  (if g$who$11288$bmrAn
                    (g$make-who-condition$5851$bmrAn g$who$11288$bmrAn)
                    (condition))
                  (g$make-message-condition$5805$bmrAn g$msg$11285$bmrAn)
                  g$condition-object$11287$bmrAn
                  (g$extract-position-condition$8087$bmrAn g$form$11286$bmrAn)
                  (g$extract-trace$8091$bmrAn g$form$11286$bmrAn)))))
           (if ((case-lambda
                  ((g$t$11289$bmrAn)
                   (if g$t$11289$bmrAn
                     g$t$11289$bmrAn
                     (begin '#f (symbol? g$who$11284$bmrAn)))))
                (string? g$who$11284$bmrAn))
             g$who$11284$bmrAn
             (if (not g$who$11284$bmrAn)
               ((case-lambda
                  ((g$t$11290$bmrAn)
                   ((case-lambda
                      ((g$ls/false$11291$bmrAn)
                       (if (if g$ls/false$11291$bmrAn
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$11292$bmrAn)
                                    (g$id?$7703$bmrAn g$id$11292$bmrAn)))
                                 g$ls/false$11291$bmrAn))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$11293$bmrAn)
                              (g$syntax->datum$8096$bmrAn g$id$11293$bmrAn)))
                           g$ls/false$11291$bmrAn)
                         ((case-lambda
                            ((g$t$11294$bmrAn)
                             ((case-lambda
                                ((g$ls/false$11295$bmrAn)
                                 (if (if g$ls/false$11295$bmrAn
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$11296$bmrAn
                                                g$rest$11297$bmrAn)
                                              (g$id?$7703$bmrAn
                                                g$id$11296$bmrAn)))
                                           g$ls/false$11295$bmrAn))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$11298$bmrAn g$rest$11299$bmrAn)
                                        (g$syntax->datum$8096$bmrAn
                                          g$id$11298$bmrAn)))
                                     g$ls/false$11295$bmrAn)
                                   ((case-lambda
                                      ((g$t$11300$bmrAn)
                                       ((case-lambda
                                          ((g$ls/false$11301$bmrAn)
                                           (if g$ls/false$11301$bmrAn
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$11301$bmrAn)
                                             (g$syntax-violation$8093$bmrAn
                                               '#f
                                               '"invalid syntax"
                                               g$t$11300$bmrAn))))
                                        (g$syntax-dispatch$7981$bmrAn
                                          g$t$11300$bmrAn
                                          '_))))
                                    g$t$11294$bmrAn))))
                              (g$syntax-dispatch$7981$bmrAn
                                g$t$11294$bmrAn
                                '(any . any)))))
                          g$t$11290$bmrAn))))
                    (g$syntax-dispatch$7981$bmrAn g$t$11290$bmrAn 'any))))
                g$form$11286$bmrAn)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$11284$bmrAn))))))))
   (g$syntax-violation$8093$bmrAn
     g$syntax-violation$11596$bmrAn
     (case-lambda
       ((g$who$11302$bmrAn g$msg$11303$bmrAn g$form$11304$bmrAn)
        (g$syntax-violation$8093$bmrAn
          g$who$11302$bmrAn
          g$msg$11303$bmrAn
          g$form$11304$bmrAn
          '#f))
       ((g$who$11305$bmrAn
          g$msg$11306$bmrAn
          g$form$11307$bmrAn
          g$subform$11308$bmrAn)
        (g$syntax-violation*$8092$bmrAn
          g$who$11305$bmrAn
          g$msg$11306$bmrAn
          g$form$11307$bmrAn
          (g$make-syntax-violation$5877$bmrAn
            (g$syntax->datum$8096$bmrAn g$form$11307$bmrAn)
            (g$syntax->datum$8096$bmrAn g$subform$11308$bmrAn))))))
   (g$identifier?$8094$bmrAn
     g$identifier?$11597$bmrAn
     (case-lambda ((g$x$11309$bmrAn) (g$id?$7703$bmrAn g$x$11309$bmrAn))))
   (g$datum->syntax$8095$bmrAn
     g$datum->syntax$11598$bmrAn
     (case-lambda
       ((g$id$11310$bmrAn g$datum$11311$bmrAn)
        (if (g$id?$7703$bmrAn g$id$11310$bmrAn)
          (g$datum->stx$7686$bmrAn g$id$11310$bmrAn g$datum$11311$bmrAn)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$11310$bmrAn)))))
   (g$syntax->datum$8096$bmrAn
     g$syntax->datum$11599$bmrAn
     (case-lambda
       ((g$x$11312$bmrAn) (g$stx->datum$7714$bmrAn g$x$11312$bmrAn))))
   (g$compile-r6rs-top-level$8097$bmrAn
     g$compile-r6rs-top-level$11600$bmrAn
     (case-lambda
       ((g$x*$11313$bmrAn)
        (call-with-values
          (case-lambda (() (g$top-level-expander$8041$bmrAn g$x*$11313$bmrAn)))
          (case-lambda
            ((g$lib*$11316$bmrAn g$invoke-code$11317$bmrAn)
             ((case-lambda
                ((g$invoke-code$11318$bmrAn g$lib*$11319$bmrAn)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$5064$bmrAn
                        g$invoke-library$7513$bmrAn
                        g$lib*$11319$bmrAn)
                      (eval-core
                        (g$expanded->core$7221$bmrAn
                          g$invoke-code$11318$bmrAn)))))))
              g$invoke-code$11317$bmrAn
              g$lib*$11316$bmrAn)))))))
   (g$pre-compile-r6rs-top-level$8098$bmrAn
     g$pre-compile-r6rs-top-level$11601$bmrAn
     (case-lambda
       ((g$x*$11320$bmrAn)
        (call-with-values
          (case-lambda (() (g$top-level-expander$8041$bmrAn g$x*$11320$bmrAn)))
          (case-lambda
            ((g$lib*$11323$bmrAn g$invoke-code$11324$bmrAn)
             ((case-lambda
                ((g$invoke-code$11325$bmrAn g$lib*$11326$bmrAn)
                 (begin
                   (g$for-each$5064$bmrAn
                     g$invoke-library$7513$bmrAn
                     g$lib*$11326$bmrAn)
                   (compile-core
                     (g$expanded->core$7221$bmrAn g$invoke-code$11325$bmrAn)))))
              g$invoke-code$11324$bmrAn
              g$lib*$11323$bmrAn)))))))
   (g$new-interaction-environment$8099$bmrAn
     g$new-interaction-environment$11602$bmrAn
     (case-lambda
       (()
        ((case-lambda
           ((g$lib$11327$bmrAn g$rib$11328$bmrAn)
            (begin
              ((case-lambda
                 ((g$subst$11329$bmrAn)
                  (begin
                    (g$set-rib-sym*!$7658$bmrAn
                      g$rib$11328$bmrAn
                      (g$map$5063$bmrAn car g$subst$11329$bmrAn))
                    (g$set-rib-mark**!$7659$bmrAn
                      g$rib$11328$bmrAn
                      (g$map$5063$bmrAn
                        (case-lambda ((g$x$11330$bmrAn) g$top-mark*$7640$bmrAn))
                        g$subst$11329$bmrAn))
                    (g$set-rib-label*!$7660$bmrAn
                      g$rib$11328$bmrAn
                      (g$map$5063$bmrAn cdr g$subst$11329$bmrAn)))))
               (g$library-subst$7470$bmrAn g$lib$11327$bmrAn))
              (g$make-interaction-env$8058$bmrAn g$rib$11328$bmrAn '() '()))))
         (g$find-library-by-name$7506$bmrAn '(ironscheme))
         (g$make-empty-rib$7663$bmrAn)))))
   (g$interaction-environment$8100$bmrAn
     g$interaction-environment$11603$bmrAn
     ((case-lambda
        ((g$e$11331$bmrAn)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$11332$bmrAn)
                (if g$t$11332$bmrAn
                  g$t$11332$bmrAn
                  (begin
                    '#f
                    (begin
                      (set! g$e$11331$bmrAn
                        (g$new-interaction-environment$8099$bmrAn))
                      g$e$11331$bmrAn)))))
             g$e$11331$bmrAn)))))
      '#f))
   (g$top-level-context$8101$bmrAn
     g$top-level-context$11604$bmrAn
     (g$make-parameter$6975$bmrAn '#f)))
  (g$current-library-expander$7503$bmrAn g$library-expander$8077$bmrAn))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$7218$bmrAn
      (case-lambda
        ((g$x$11657$bmrAn)
         ((case-lambda
            ((g$t$11658$bmrAn) (if g$t$11658$bmrAn (cdr g$t$11658$bmrAn) '#f)))
          (g$assq$5051$bmrAn
            g$x$11657$bmrAn
            '((ellipsis-map . g$ellipsis-map$11489$bmrAn)
              (make-list . g$make-list$5046$bmrAn)
              (last-pair . g$last-pair$5045$bmrAn)
              (ironscheme-build . g$ironscheme-build$11650$bmrAn)
              (syntax-error . g$syntax-error$11593$bmrAn)
              (syntax-dispatch . g$syntax-dispatch$11484$bmrAn)
              (compile-system-libraries
                .
                g$compile-system-libraries$11652$bmrAn)
              (compile->closure . g$compile->closure$11654$bmrAn)
              (compile . g$compile$11653$bmrAn)
              (load . g$load$11649$bmrAn)
              (interaction-environment . g$interaction-environment$11603$bmrAn)
              (string-ci>? . g$string-ci>?$6027$bmrAn)
              (string-ci>=? . g$string-ci>=?$6029$bmrAn)
              (string-ci=? . g$string-ci=?$6025$bmrAn)
              (string-ci<? . g$string-ci<?$6026$bmrAn)
              (string-ci<=? . g$string-ci<=?$6028$bmrAn)
              (char-ci>? . g$char-ci>?$6032$bmrAn)
              (char-ci>=? . g$char-ci>=?$6034$bmrAn)
              (char-ci=? . g$char-ci=?$6030$bmrAn)
              (char-ci<? . g$char-ci<?$6031$bmrAn)
              (char-ci<=? . g$char-ci<=?$6033$bmrAn)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$11422$bmrAn)
              (variable-transformer? . g$variable-transformer?$11421$bmrAn)
              (make-variable-transformer
                .
                g$make-variable-transformer$11420$bmrAn)
              (identifier? . g$identifier?$11597$bmrAn)
              (generate-temporaries . g$generate-temporaries$11586$bmrAn)
              (free-identifier=? . g$free-identifier=?$11587$bmrAn)
              (syntax->datum . g$syntax->datum$11599$bmrAn)
              (datum->syntax . g$datum->syntax$11598$bmrAn)
              (bound-identifier=? . g$bound-identifier=?$11588$bmrAn)
              (delete-file . g$delete-file$5557$bmrAn)
              (file-exists? . g$file-exists?$5556$bmrAn)
              (list-sort . g$list-sort$5952$bmrAn)
              (make-eqv-hashtable . g$make-eqv-hashtable$5539$bmrAn)
              (make-eq-hashtable . g$make-eq-hashtable$5538$bmrAn)
              (hashtable-update! . g$hashtable-update!$5545$bmrAn)
              (hashtable-size . g$hashtable-size$5540$bmrAn)
              (hashtable-set! . g$hashtable-set!$5542$bmrAn)
              (hashtable-ref . g$hashtable-ref$5541$bmrAn)
              (hashtable-delete! . g$hashtable-delete!$5543$bmrAn)
              (hashtable-contains? . g$hashtable-contains?$5544$bmrAn)
              (hashtable-clear! . g$hashtable-clear!$5546$bmrAn)
              (call-with-output-file . g$call-with-output-file$6388$bmrAn)
              (call-with-input-file . g$call-with-input-file$6387$bmrAn)
              (write-char . g$write-char$6384$bmrAn)
              (with-output-to-file . g$with-output-to-file$6386$bmrAn)
              (with-input-from-file . g$with-input-from-file$6385$bmrAn)
              (read-char . g$read-char$6383$bmrAn)
              (peek-char . g$peek-char$6382$bmrAn)
              (newline . g$newline$6389$bmrAn)
              (port? . g$port?$6337$bmrAn)
              (open-string-output-port . g$open-string-output-port$6336$bmrAn)
              (make-i/o-write-error . g$make-i/o-write-error$6252$bmrAn)
              (make-i/o-read-error . g$make-i/o-read-error$6246$bmrAn)
              (make-i/o-port-error . g$make-i/o-port-error$6298$bmrAn)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6258$bmrAn)
              (make-i/o-filename-error . g$make-i/o-filename-error$6266$bmrAn)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6274$bmrAn)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6280$bmrAn)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6292$bmrAn)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6286$bmrAn)
              (make-i/o-error . g$make-i/o-error$6240$bmrAn)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6312$bmrAn)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6306$bmrAn)
              (i/o-write-error? . g$i/o-write-error?$6253$bmrAn)
              (i/o-read-error? . g$i/o-read-error?$6247$bmrAn)
              (i/o-port-error? . g$i/o-port-error?$6300$bmrAn)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6260$bmrAn)
              (i/o-error-position . g$i/o-error-position$6261$bmrAn)
              (i/o-filename-error? . g$i/o-filename-error?$6268$bmrAn)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6275$bmrAn)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6281$bmrAn)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6293$bmrAn)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6287$bmrAn)
              (i/o-error? . g$i/o-error?$6241$bmrAn)
              (i/o-error-port . g$i/o-error-port$6301$bmrAn)
              (i/o-error-filename . g$i/o-error-filename$6269$bmrAn)
              (i/o-encoding-error? . g$i/o-encoding-error?$6314$bmrAn)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6315$bmrAn)
              (i/o-decoding-error? . g$i/o-decoding-error?$6307$bmrAn)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$6338$bmrAn)
              (call-with-port . g$call-with-port$6339$bmrAn)
              (scheme-report-environment
                .
                g$scheme-report-environment$11576$bmrAn)
              (quotient . g$quotient$5919$bmrAn)
              (null-environment . g$null-environment$11575$bmrAn)
              (remainder . g$remainder$5920$bmrAn)
              (modulo . g$modulo$5921$bmrAn)
              (inexact->exact . g$inexact->exact$5916$bmrAn)
              (force . g$force$5923$bmrAn)
              (exact->inexact . g$exact->inexact$5917$bmrAn)
              (command-line . g$command-line$11646$bmrAn)
              (remove . g$remove$5068$bmrAn)
              (remv . g$remv$5069$bmrAn)
              (remp . g$remp$5049$bmrAn)
              (remq . g$remq$5070$bmrAn)
              (partition . g$partition$5048$bmrAn)
              (memv . g$memv$5056$bmrAn)
              (memq . g$memq$5055$bmrAn)
              (memp . g$memp$5058$bmrAn)
              (member . g$member$5057$bmrAn)
              (exists . g$exists$5062$bmrAn)
              (for-all . g$for-all$5061$bmrAn)
              (fold-right . g$fold-right$5067$bmrAn)
              (fold-left . g$fold-left$5066$bmrAn)
              (find . g$find$5047$bmrAn)
              (filter . g$filter$5050$bmrAn)
              (cons* . g$cons*$5065$bmrAn)
              (assv . g$assv$5052$bmrAn)
              (assq . g$assq$5051$bmrAn)
              (assp . g$assp$5054$bmrAn)
              (assoc . g$assoc$5053$bmrAn)
              (eval . g$eval$11578$bmrAn)
              (environment . g$environment$11574$bmrAn)
              (make-enumeration . g$make-enumeration$6521$bmrAn)
              (enum-set=? . g$enum-set=?$6528$bmrAn)
              (enum-set-universe . g$enum-set-universe$6522$bmrAn)
              (enum-set-union . g$enum-set-union$6529$bmrAn)
              (enum-set-subset? . g$enum-set-subset?$6527$bmrAn)
              (enum-set-projection . g$enum-set-projection$6533$bmrAn)
              (enum-set-member? . g$enum-set-member?$6526$bmrAn)
              (enum-set-intersection . g$enum-set-intersection$6530$bmrAn)
              (enum-set-indexer . g$enum-set-indexer$6523$bmrAn)
              (enum-set-difference . g$enum-set-difference$6531$bmrAn)
              (enum-set-constructor . g$enum-set-constructor$6524$bmrAn)
              (enum-set-complement . g$enum-set-complement$6532$bmrAn)
              (enum-set->list . g$enum-set->list$6525$bmrAn)
              (who-condition? . g$who-condition?$5853$bmrAn)
              (warning? . g$warning?$5814$bmrAn)
              (violation? . g$violation?$5832$bmrAn)
              (undefined-violation? . g$undefined-violation?$5888$bmrAn)
              (syntax-violation? . g$syntax-violation?$5880$bmrAn)
              (syntax-violation-subform . g$syntax-violation-subform$5882$bmrAn)
              (syntax-violation-form . g$syntax-violation-form$5881$bmrAn)
              (syntax-violation . g$syntax-violation$11596$bmrAn)
              (serious-condition? . g$serious-condition?$5820$bmrAn)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$5860$bmrAn)
              (message-condition? . g$message-condition?$5807$bmrAn)
              (make-who-condition . g$make-who-condition$5851$bmrAn)
              (make-warning . g$make-warning$5813$bmrAn)
              (make-violation . g$make-violation$5831$bmrAn)
              (make-undefined-violation . g$make-undefined-violation$5887$bmrAn)
              (make-syntax-violation . g$make-syntax-violation$5877$bmrAn)
              (make-serious-condition . g$make-serious-condition$5819$bmrAn)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$5859$bmrAn)
              (make-message-condition . g$make-message-condition$5805$bmrAn)
              (make-lexical-violation . g$make-lexical-violation$5871$bmrAn)
              (make-irritants-condition . g$make-irritants-condition$5843$bmrAn)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$5865$bmrAn)
              (make-error . g$make-error$5825$bmrAn)
              (make-assertion-violation . g$make-assertion-violation$5837$bmrAn)
              (lexical-violation? . g$lexical-violation?$5872$bmrAn)
              (irritants-condition? . g$irritants-condition?$5845$bmrAn)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$5866$bmrAn)
              (error? . g$error?$5826$bmrAn)
              (condition-who . g$condition-who$5854$bmrAn)
              (condition-message . g$condition-message$5808$bmrAn)
              (condition-irritants . g$condition-irritants$5846$bmrAn)
              (assertion-violation? . g$assertion-violation?$5838$bmrAn)
              (native-endianness . g$native-endianness$5670$bmrAn)
              (bytevector-u64-set! . g$bytevector-u64-set!$5691$bmrAn)
              (bytevector-u64-ref . g$bytevector-u64-ref$5687$bmrAn)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$5693$bmrAn)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$5689$bmrAn)
              (bytevector-u32-set! . g$bytevector-u32-set!$5683$bmrAn)
              (bytevector-u32-ref . g$bytevector-u32-ref$5679$bmrAn)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$5685$bmrAn)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$5681$bmrAn)
              (bytevector-u16-set! . g$bytevector-u16-set!$5675$bmrAn)
              (bytevector-u16-ref . g$bytevector-u16-ref$5671$bmrAn)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5677$bmrAn)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5673$bmrAn)
              (bytevector-s64-set! . g$bytevector-s64-set!$5692$bmrAn)
              (bytevector-s64-ref . g$bytevector-s64-ref$5688$bmrAn)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$5694$bmrAn)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$5690$bmrAn)
              (bytevector-s32-set! . g$bytevector-s32-set!$5684$bmrAn)
              (bytevector-s32-ref . g$bytevector-s32-ref$5680$bmrAn)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$5686$bmrAn)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$5682$bmrAn)
              (bytevector-s16-set! . g$bytevector-s16-set!$5676$bmrAn)
              (bytevector-s16-ref . g$bytevector-s16-ref$5672$bmrAn)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5678$bmrAn)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5674$bmrAn)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$5697$bmrAn)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$5695$bmrAn)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$5698$bmrAn)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$5696$bmrAn)
              (no-nans-violation? . g$no-nans-violation?$6155$bmrAn)
              (no-infinities-violation? . g$no-infinities-violation?$6149$bmrAn)
              (make-no-nans-violation . g$make-no-nans-violation$6154$bmrAn)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6148$bmrAn)
              (fxrotate-bit-field . g$fxrotate-bit-field$6131$bmrAn)
              (fxif . g$fxif$6125$bmrAn)
              (fxcopy-bit-field . g$fxcopy-bit-field$6128$bmrAn)
              (fxcopy-bit . g$fxcopy-bit$6126$bmrAn)
              (fxbit-field . g$fxbit-field$6127$bmrAn)
              (fxarithmetic-shift-right . g$fxarithmetic-shift-right$6130$bmrAn)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6129$bmrAn)
              (fx-/carry . g$fx-/carry$6123$bmrAn)
              (fx+/carry . g$fx+/carry$6124$bmrAn)
              (fx*/carry . g$fx*/carry$6122$bmrAn)
              (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$6072$bmrAn)
              (bitwise-if . g$bitwise-if$6066$bmrAn)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6069$bmrAn)
              (bitwise-copy-bit . g$bitwise-copy-bit$6067$bmrAn)
              (bitwise-bit-field . g$bitwise-bit-field$6068$bmrAn)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$6071$bmrAn)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$6070$bmrAn)
              (zero? . g$zero?$5293$bmrAn)
              (symbol=? . g$symbol=?$5305$bmrAn)
              (string>? . g$string>?$5302$bmrAn)
              (string>=? . g$string>=?$5304$bmrAn)
              (string=? . g$string=?$5300$bmrAn)
              (string<? . g$string<?$5301$bmrAn)
              (string<=? . g$string<=?$5303$bmrAn)
              (rationalize . g$rationalize$5312$bmrAn)
              (positive? . g$positive?$5291$bmrAn)
              (odd? . g$odd?$5295$bmrAn)
              (negative? . g$negative?$5292$bmrAn)
              (min . g$min$5297$bmrAn)
              (max . g$max$5296$bmrAn)
              (map . g$map$5063$bmrAn)
              (list-tail . g$list-tail$5043$bmrAn)
              (list-ref . g$list-ref$5044$bmrAn)
              (lcm . g$lcm$5299$bmrAn)
              (gcd . g$gcd$5298$bmrAn)
              (for-each . g$for-each$5064$bmrAn)
              (even? . g$even?$5294$bmrAn)
              (char>? . g$char>?$5309$bmrAn)
              (char>=? . g$char>=?$5311$bmrAn)
              (char=? . g$char=?$5307$bmrAn)
              (char<? . g$char<?$5308$bmrAn)
              (char<=? . g$char<=?$5310$bmrAn)
              (cddddr . g$cddddr$5290$bmrAn)
              (cdddar . g$cdddar$5289$bmrAn)
              (cddadr . g$cddadr$5288$bmrAn)
              (cddaar . g$cddaar$5287$bmrAn)
              (cdaddr . g$cdaddr$5286$bmrAn)
              (cdadar . g$cdadar$5285$bmrAn)
              (cdaadr . g$cdaadr$5284$bmrAn)
              (cdaaar . g$cdaaar$5283$bmrAn)
              (cadddr . g$cadddr$5282$bmrAn)
              (caddar . g$caddar$5281$bmrAn)
              (cadadr . g$cadadr$5280$bmrAn)
              (cadaar . g$cadaar$5279$bmrAn)
              (caaddr . g$caaddr$5278$bmrAn)
              (caadar . g$caadar$5277$bmrAn)
              (caaadr . g$caaadr$5276$bmrAn)
              (caaaar . g$caaaar$5275$bmrAn)
              (cdddr . g$cdddr$5274$bmrAn)
              (cddar . g$cddar$5273$bmrAn)
              (cdadr . g$cdadr$5272$bmrAn)
              (cdaar . g$cdaar$5271$bmrAn)
              (caddr . g$caddr$5270$bmrAn)
              (cadar . g$cadar$5269$bmrAn)
              (caadr . g$caadr$5268$bmrAn)
              (caaar . g$caaar$5267$bmrAn)
              (cddr . g$cddr$5266$bmrAn)
              (cdar . g$cdar$5265$bmrAn)
              (cadr . g$cadr$5264$bmrAn)
              (caar . g$caar$5263$bmrAn)
              (boolean=? . g$boolean=?$5306$bmrAn)
              (enum-set? . g$enum?$6502$bmrAn)
              (make-promise . g$make-promise$5922$bmrAn)
              (load/args . g$load/args$11648$bmrAn)
              (printf . g$printf$6557$bmrAn)
              (fprintf . g$fprintf$6558$bmrAn)
              (format . g$format$6559$bmrAn)
              (trace-printer . g$trace-printer$11645$bmrAn)
              (make-traced-macro . g$make-traced-macro$6563$bmrAn)
              (assertion-error . g$assertion-error$11592$bmrAn)
              (make-parameter . g$make-parameter$6975$bmrAn)
              (environment-bindings . g$environment-bindings$11570$bmrAn)
              (environment-symbols . g$environment-symbols$11573$bmrAn)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$11569$bmrAn)
              (library-path . g$library-path$7495$bmrAn)
              (expand->core . g$expand->core$11579$bmrAn)
              (expand . g$expand$11577$bmrAn)))))))
    (g$install-library$7511$bmrAn
      'g$12768$bmrAn
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$12705$bmrAn)
        (cosh . g$12704$bmrAn)
        (sinh . g$12703$bmrAn)
        (make-guid . g$12702$bmrAn)
        (unspecified? . g$12701$bmrAn)
        (make-list . g$5853$bmrAn)
        (last-pair . g$5852$bmrAn)
        (load-r5rs . g$12700$bmrAn)
        (license . g$12699$bmrAn)
        (stacktrace . g$12698$bmrAn)
        (ironscheme-build . g$12145$bmrAn)
        (set-symbol-value! . g$12685$bmrAn)
        (symbol-value . g$12684$bmrAn)
        (ungensym . g$12683$bmrAn)
        (gensym . g$12682$bmrAn)
        (void . g$12681$bmrAn)
        (compile-system-libraries . g$12147$bmrAn)
        (compile->closure . g$12149$bmrAn)
        (compile . g$12148$bmrAn)
        (load . g$12144$bmrAn)
        (interaction-environment . g$9164$bmrAn)
        (string-upcase . g$12677$bmrAn)
        (string-titlecase . g$12676$bmrAn)
        (string-normalize-nfkd . g$12675$bmrAn)
        (string-normalize-nfkc . g$12674$bmrAn)
        (string-normalize-nfd . g$12673$bmrAn)
        (string-normalize-nfc . g$12672$bmrAn)
        (string-foldcase . g$12671$bmrAn)
        (string-downcase . g$12670$bmrAn)
        (string-ci>? . g$6992$bmrAn)
        (string-ci>=? . g$6994$bmrAn)
        (string-ci=? . g$6990$bmrAn)
        (string-ci<? . g$6991$bmrAn)
        (string-ci<=? . g$6993$bmrAn)
        (char-whitespace? . g$12669$bmrAn)
        (char-upper-case? . g$12668$bmrAn)
        (char-title-case? . g$12667$bmrAn)
        (char-numeric? . g$12666$bmrAn)
        (char-lower-case? . g$12665$bmrAn)
        (char-general-category . g$12664$bmrAn)
        (char-upcase . g$12663$bmrAn)
        (char-titlecase . g$12662$bmrAn)
        (char-foldcase . g$12661$bmrAn)
        (char-downcase . g$12660$bmrAn)
        (char-ci>? . g$7031$bmrAn)
        (char-ci>=? . g$7033$bmrAn)
        (char-ci=? . g$7029$bmrAn)
        (char-ci<? . g$7030$bmrAn)
        (char-ci<=? . g$7032$bmrAn)
        (char-alphabetic? . g$12659$bmrAn)
        (make-variable-transformer . g$8759$bmrAn)
        (identifier? . g$9158$bmrAn)
        (generate-temporaries . g$9147$bmrAn)
        (free-identifier=? . g$9148$bmrAn)
        (syntax->datum . g$9160$bmrAn)
        (datum->syntax . g$9159$bmrAn)
        (bound-identifier=? . g$9149$bmrAn)
        (record-type-descriptor? . g$12658$bmrAn)
        (record-predicate . g$12657$bmrAn)
        (record-mutator . g$12656$bmrAn)
        (record-constructor . g$12655$bmrAn)
        (record-accessor . g$12654$bmrAn)
        (make-record-type-descriptor . g$12653$bmrAn)
        (make-record-constructor-descriptor . g$12652$bmrAn)
        (record? . g$12651$bmrAn)
        (record-type-uid . g$12650$bmrAn)
        (record-type-sealed? . g$12649$bmrAn)
        (record-type-parent . g$12648$bmrAn)
        (record-type-opaque? . g$12647$bmrAn)
        (record-type-name . g$12646$bmrAn)
        (record-type-generative? . g$12645$bmrAn)
        (record-type-field-names . g$12644$bmrAn)
        (record-rtd . g$12643$bmrAn)
        (record-field-mutable? . g$12642$bmrAn)
        (delete-file . g$6566$bmrAn)
        (file-exists? . g$6565$bmrAn)
        (vector-sort! . g$12641$bmrAn)
        (vector-sort . g$12640$bmrAn)
        (list-sort . g$6932$bmrAn)
        (symbol-hash . g$12639$bmrAn)
        (string-ci-hash . g$12638$bmrAn)
        (string-hash . g$12637$bmrAn)
        (equal-hash . g$12636$bmrAn)
        (hashtable-equivalence-function . g$12635$bmrAn)
        (make-hashtable . g$12634$bmrAn)
        (hashtable-hash-function . g$12633$bmrAn)
        (make-eqv-hashtable . g$6534$bmrAn)
        (make-eq-hashtable . g$6533$bmrAn)
        (hashtable? . g$12632$bmrAn)
        (hashtable-update! . g$6540$bmrAn)
        (hashtable-size . g$6535$bmrAn)
        (hashtable-set! . g$6537$bmrAn)
        (hashtable-ref . g$6536$bmrAn)
        (hashtable-mutable? . g$12631$bmrAn)
        (hashtable-keys . g$12630$bmrAn)
        (hashtable-entries . g$12629$bmrAn)
        (hashtable-delete! . g$6538$bmrAn)
        (hashtable-copy . g$12628$bmrAn)
        (hashtable-contains? . g$6539$bmrAn)
        (hashtable-clear! . g$6541$bmrAn)
        (call-with-output-file . g$7417$bmrAn)
        (call-with-input-file . g$7416$bmrAn)
        (write-char . g$7398$bmrAn)
        (write . g$12627$bmrAn)
        (with-output-to-file . g$7415$bmrAn)
        (with-input-from-file . g$7414$bmrAn)
        (read-char . g$7397$bmrAn)
        (read . g$12626$bmrAn)
        (peek-char . g$7396$bmrAn)
        (open-output-file . g$12625$bmrAn)
        (open-input-file . g$12624$bmrAn)
        (newline . g$7418$bmrAn)
        (display . g$12623$bmrAn)
        (close-output-port . g$12622$bmrAn)
        (close-input-port . g$12621$bmrAn)
        (eof-object? . g$12620$bmrAn)
        (eof-object . g$12619$bmrAn)
        (current-error-port . g$12618$bmrAn)
        (current-output-port . g$12617$bmrAn)
        (current-input-port . g$12616$bmrAn)
        (output-port? . g$12615$bmrAn)
        (input-port? . g$12614$bmrAn)
        (utf-8-codec . g$12613$bmrAn)
        (utf-16-codec . g$12612$bmrAn)
        (transcoder-error-handling-mode . g$12611$bmrAn)
        (transcoder-eol-style . g$12610$bmrAn)
        (transcoder-codec . g$12609$bmrAn)
        (transcoded-port . g$12608$bmrAn)
        (textual-port? . g$12607$bmrAn)
        (string->bytevector . g$12606$bmrAn)
        (standard-output-port . g$12605$bmrAn)
        (standard-input-port . g$12604$bmrAn)
        (standard-error-port . g$12603$bmrAn)
        (set-port-position! . g$12602$bmrAn)
        (put-u8 . g$12601$bmrAn)
        (put-string . g$12600$bmrAn)
        (put-datum . g$12599$bmrAn)
        (put-char . g$12598$bmrAn)
        (put-bytevector . g$12597$bmrAn)
        (port? . g$7383$bmrAn)
        (port-transcoder . g$12596$bmrAn)
        (port-position . g$12595$bmrAn)
        (port-has-set-port-position!? . g$12594$bmrAn)
        (port-has-port-position? . g$12593$bmrAn)
        (port-eof? . g$12592$bmrAn)
        (output-port-buffer-mode . g$12591$bmrAn)
        (open-string-output-port . g$7382$bmrAn)
        (open-string-input-port . g$12590$bmrAn)
        (open-file-output-port . g$12589$bmrAn)
        (open-file-input/output-port . g$12588$bmrAn)
        (open-file-input-port . g$12587$bmrAn)
        (open-bytevector-output-port . g$12586$bmrAn)
        (open-bytevector-input-port . g$12585$bmrAn)
        (native-transcoder . g$12584$bmrAn)
        (native-eol-style . g$12583$bmrAn)
        (make-transcoder . g$12582$bmrAn)
        (latin-1-codec . g$12581$bmrAn)
        (make-i/o-write-error . g$7238$bmrAn)
        (make-i/o-read-error . g$7224$bmrAn)
        (make-i/o-port-error . g$7343$bmrAn)
        (make-i/o-invalid-position-error . g$7253$bmrAn)
        (make-i/o-filename-error . g$7270$bmrAn)
        (make-i/o-file-protection-error . g$7286$bmrAn)
        (make-i/o-file-is-read-only-error . g$7300$bmrAn)
        (make-i/o-file-does-not-exist-error . g$7328$bmrAn)
        (make-i/o-file-already-exists-error . g$7314$bmrAn)
        (make-i/o-error . g$7210$bmrAn)
        (make-i/o-encoding-error . g$7374$bmrAn)
        (make-i/o-decoding-error . g$7359$bmrAn)
        (make-custom-textual-output-port . g$12580$bmrAn)
        (make-custom-textual-input/output-port . g$12579$bmrAn)
        (make-custom-textual-input-port . g$12578$bmrAn)
        (make-custom-binary-output-port . g$12577$bmrAn)
        (make-custom-binary-input/output-port . g$12576$bmrAn)
        (make-custom-binary-input-port . g$12575$bmrAn)
        (make-bytevector . g$12574$bmrAn)
        (lookahead-u8 . g$12573$bmrAn)
        (lookahead-char . g$12572$bmrAn)
        (i/o-write-error? . g$7239$bmrAn)
        (i/o-read-error? . g$7225$bmrAn)
        (i/o-port-error? . g$7345$bmrAn)
        (i/o-invalid-position-error? . g$7255$bmrAn)
        (i/o-error-position . g$7256$bmrAn)
        (i/o-filename-error? . g$7272$bmrAn)
        (i/o-file-protection-error? . g$7287$bmrAn)
        (i/o-file-is-read-only-error? . g$7301$bmrAn)
        (i/o-file-does-not-exist-error? . g$7329$bmrAn)
        (i/o-file-already-exists-error? . g$7315$bmrAn)
        (i/o-error? . g$7211$bmrAn)
        (i/o-error-port . g$7346$bmrAn)
        (i/o-error-filename . g$7273$bmrAn)
        (i/o-encoding-error? . g$7376$bmrAn)
        (i/o-encoding-error-char . g$7377$bmrAn)
        (i/o-decoding-error? . g$7360$bmrAn)
        (get-u8 . g$12571$bmrAn)
        (get-string-n! . g$12570$bmrAn)
        (get-string-n . g$12569$bmrAn)
        (get-string-all . g$12568$bmrAn)
        (get-line . g$12567$bmrAn)
        (get-datum . g$12566$bmrAn)
        (get-char . g$12565$bmrAn)
        (get-bytevector-some . g$12564$bmrAn)
        (get-bytevector-n! . g$12563$bmrAn)
        (get-bytevector-n . g$12562$bmrAn)
        (get-bytevector-all . g$12561$bmrAn)
        (flush-output-port . g$12560$bmrAn)
        (close-port . g$12559$bmrAn)
        (call-with-string-output-port . g$7384$bmrAn)
        (call-with-port . g$7385$bmrAn)
        (call-with-bytevector-output-port . g$12558$bmrAn)
        (bytevector->string . g$12557$bmrAn)
        (buffer-mode? . g$12556$bmrAn)
        (binary-port? . g$12555$bmrAn)
        (scheme-report-environment . g$9137$bmrAn)
        (quotient . g$6911$bmrAn)
        (null-environment . g$9136$bmrAn)
        (remainder . g$6912$bmrAn)
        (modulo . g$6913$bmrAn)
        (inexact->exact . g$6908$bmrAn)
        (force . g$6915$bmrAn)
        (exact->inexact . g$6909$bmrAn)
        (exit . g$12554$bmrAn)
        (command-line . g$12141$bmrAn)
        (string-fill! . g$12553$bmrAn)
        (string-set! . g$12552$bmrAn)
        (set-cdr! . g$12551$bmrAn)
        (set-car! . g$12550$bmrAn)
        (remove . g$5875$bmrAn)
        (remv . g$5876$bmrAn)
        (remp . g$5856$bmrAn)
        (remq . g$5877$bmrAn)
        (partition . g$5855$bmrAn)
        (memv . g$5863$bmrAn)
        (memq . g$5862$bmrAn)
        (memp . g$5865$bmrAn)
        (member . g$5864$bmrAn)
        (exists . g$5869$bmrAn)
        (for-all . g$5868$bmrAn)
        (fold-right . g$5874$bmrAn)
        (fold-left . g$5873$bmrAn)
        (find . g$5854$bmrAn)
        (filter . g$5857$bmrAn)
        (cons* . g$5872$bmrAn)
        (assv . g$5859$bmrAn)
        (assq . g$5858$bmrAn)
        (assp . g$5861$bmrAn)
        (assoc . g$5860$bmrAn)
        (with-exception-handler . g$12549$bmrAn)
        (raise-continuable . g$12548$bmrAn)
        (raise . g$12547$bmrAn)
        (eval . g$9139$bmrAn)
        (environment . g$9135$bmrAn)
        (make-enumeration . g$7482$bmrAn)
        (enum-set=? . g$7489$bmrAn)
        (enum-set-universe . g$7483$bmrAn)
        (enum-set-union . g$7490$bmrAn)
        (enum-set-subset? . g$7488$bmrAn)
        (enum-set-projection . g$7494$bmrAn)
        (enum-set-member? . g$7487$bmrAn)
        (enum-set-intersection . g$7491$bmrAn)
        (enum-set-indexer . g$7484$bmrAn)
        (enum-set-difference . g$7492$bmrAn)
        (enum-set-constructor . g$7485$bmrAn)
        (enum-set-complement . g$7493$bmrAn)
        (enum-set->list . g$7486$bmrAn)
        (who-condition? . g$6820$bmrAn)
        (warning? . g$6731$bmrAn)
        (violation? . g$6773$bmrAn)
        (undefined-violation? . g$6897$bmrAn)
        (syntax-violation? . g$6881$bmrAn)
        (syntax-violation-subform . g$6883$bmrAn)
        (syntax-violation-form . g$6882$bmrAn)
        (syntax-violation . g$9157$bmrAn)
        (simple-conditions . g$12546$bmrAn)
        (serious-condition? . g$6745$bmrAn)
        (non-continuable-violation? . g$6835$bmrAn)
        (message-condition? . g$6716$bmrAn)
        (make-who-condition . g$6818$bmrAn)
        (make-warning . g$6730$bmrAn)
        (make-violation . g$6772$bmrAn)
        (make-undefined-violation . g$6896$bmrAn)
        (make-syntax-violation . g$6878$bmrAn)
        (make-serious-condition . g$6744$bmrAn)
        (make-non-continuable-violation . g$6834$bmrAn)
        (make-message-condition . g$6714$bmrAn)
        (make-lexical-violation . g$6862$bmrAn)
        (make-irritants-condition . g$6801$bmrAn)
        (make-implementation-restriction-violation . g$6848$bmrAn)
        (make-error . g$6758$bmrAn)
        (make-assertion-violation . g$6786$bmrAn)
        (lexical-violation? . g$6863$bmrAn)
        (irritants-condition? . g$6803$bmrAn)
        (implementation-restriction-violation? . g$6849$bmrAn)
        (error? . g$6759$bmrAn)
        (condition-who . g$6821$bmrAn)
        (condition-predicate . g$12545$bmrAn)
        (condition-message . g$6717$bmrAn)
        (condition-irritants . g$6804$bmrAn)
        (condition-accessor . g$12544$bmrAn)
        (condition . g$12543$bmrAn)
        (assertion-violation? . g$6787$bmrAn)
        (condition? . g$12542$bmrAn)
        (utf32->string . g$12541$bmrAn)
        (utf16->string . g$12540$bmrAn)
        (utf8->string . g$12539$bmrAn)
        (uint-list->bytevector . g$12538$bmrAn)
        (u8-list->bytevector . g$12537$bmrAn)
        (string->utf8 . g$12536$bmrAn)
        (string->utf32 . g$12535$bmrAn)
        (string->utf16 . g$12534$bmrAn)
        (sint-list->bytevector . g$12533$bmrAn)
        (native-endianness . g$6572$bmrAn)
        (bytevector? . g$12532$bmrAn)
        (bytevector=? . g$12531$bmrAn)
        (bytevector-uint-set! . g$12530$bmrAn)
        (bytevector-uint-ref . g$12529$bmrAn)
        (bytevector-u8-set! . g$12528$bmrAn)
        (bytevector-u8-ref . g$12527$bmrAn)
        (bytevector-u64-set! . g$6593$bmrAn)
        (bytevector-u64-ref . g$6589$bmrAn)
        (bytevector-u64-native-set! . g$6595$bmrAn)
        (bytevector-u64-native-ref . g$6591$bmrAn)
        (bytevector-u32-set! . g$6585$bmrAn)
        (bytevector-u32-ref . g$6581$bmrAn)
        (bytevector-u32-native-set! . g$6587$bmrAn)
        (bytevector-u32-native-ref . g$6583$bmrAn)
        (bytevector-u16-set! . g$6577$bmrAn)
        (bytevector-u16-ref . g$6573$bmrAn)
        (bytevector-u16-native-set! . g$6579$bmrAn)
        (bytevector-u16-native-ref . g$6575$bmrAn)
        (bytevector-sint-set! . g$12526$bmrAn)
        (bytevector-sint-ref . g$12525$bmrAn)
        (bytevector-s8-set! . g$12524$bmrAn)
        (bytevector-s8-ref . g$12523$bmrAn)
        (bytevector-s64-set! . g$6594$bmrAn)
        (bytevector-s64-ref . g$6590$bmrAn)
        (bytevector-s64-native-set! . g$6596$bmrAn)
        (bytevector-s64-native-ref . g$6592$bmrAn)
        (bytevector-s32-set! . g$6586$bmrAn)
        (bytevector-s32-ref . g$6582$bmrAn)
        (bytevector-s32-native-set! . g$6588$bmrAn)
        (bytevector-s32-native-ref . g$6584$bmrAn)
        (bytevector-s16-set! . g$6578$bmrAn)
        (bytevector-s16-ref . g$6574$bmrAn)
        (bytevector-s16-native-set! . g$6580$bmrAn)
        (bytevector-s16-native-ref . g$6576$bmrAn)
        (bytevector-length . g$12522$bmrAn)
        (bytevector-ieee-single-set! . g$12521$bmrAn)
        (bytevector-ieee-single-ref . g$12520$bmrAn)
        (bytevector-ieee-single-native-set! . g$6599$bmrAn)
        (bytevector-ieee-single-native-ref . g$6597$bmrAn)
        (bytevector-ieee-double-set! . g$12519$bmrAn)
        (bytevector-ieee-double-ref . g$12518$bmrAn)
        (bytevector-ieee-double-native-set! . g$6600$bmrAn)
        (bytevector-ieee-double-native-ref . g$6598$bmrAn)
        (bytevector-fill! . g$12517$bmrAn)
        (bytevector-copy! . g$12516$bmrAn)
        (bytevector-copy . g$12515$bmrAn)
        (bytevector->uint-list . g$12514$bmrAn)
        (bytevector->u8-list . g$12513$bmrAn)
        (bytevector->sint-list . g$12512$bmrAn)
        (no-nans-violation? . g$7196$bmrAn)
        (no-infinities-violation? . g$7182$bmrAn)
        (make-no-nans-violation . g$7195$bmrAn)
        (make-no-infinities-violation . g$7181$bmrAn)
        (real->flonum . g$12511$bmrAn)
        (flzero? . g$12510$bmrAn)
        (fltruncate . g$12509$bmrAn)
        (fltan . g$12508$bmrAn)
        (flsqrt . g$12507$bmrAn)
        (flsin . g$12506$bmrAn)
        (flround . g$12505$bmrAn)
        (flpositive? . g$12504$bmrAn)
        (flonum? . g$12503$bmrAn)
        (flodd? . g$12502$bmrAn)
        (flnumerator . g$12501$bmrAn)
        (flnegative? . g$12500$bmrAn)
        (flnan? . g$12499$bmrAn)
        (flmod0 . g$12498$bmrAn)
        (flmod . g$12497$bmrAn)
        (flmin . g$12496$bmrAn)
        (flmax . g$12495$bmrAn)
        (fllog . g$12494$bmrAn)
        (flinteger? . g$12493$bmrAn)
        (flinfinite? . g$12492$bmrAn)
        (flfloor . g$12491$bmrAn)
        (flfinite? . g$12490$bmrAn)
        (flexpt . g$12489$bmrAn)
        (flexp . g$12488$bmrAn)
        (fleven? . g$12487$bmrAn)
        (fldiv0-and-mod0 . g$12486$bmrAn)
        (fldiv0 . g$12485$bmrAn)
        (fldiv-and-mod . g$12484$bmrAn)
        (fldiv . g$12483$bmrAn)
        (fldenominator . g$12482$bmrAn)
        (flcos . g$12481$bmrAn)
        (flceiling . g$12480$bmrAn)
        (flatan . g$12479$bmrAn)
        (flasin . g$12478$bmrAn)
        (flacos . g$12477$bmrAn)
        (flabs . g$12476$bmrAn)
        (fl>? . g$12475$bmrAn)
        (fl>=? . g$12474$bmrAn)
        (fl=? . g$12473$bmrAn)
        (fl<? . g$12472$bmrAn)
        (fl<=? . g$12471$bmrAn)
        (fl/ . g$12470$bmrAn)
        (fl- . g$12469$bmrAn)
        (fl+ . g$12468$bmrAn)
        (fl* . g$12467$bmrAn)
        (fixnum->flonum . g$12466$bmrAn)
        (fxzero? . g$12465$bmrAn)
        (fxxor . g$12464$bmrAn)
        (fxrotate-bit-field . g$7128$bmrAn)
        (fxreverse-bit-field . g$12463$bmrAn)
        (fxpositive? . g$12462$bmrAn)
        (fxodd? . g$12461$bmrAn)
        (fxnot . g$12460$bmrAn)
        (fxnegative? . g$12459$bmrAn)
        (fxmod0 . g$12458$bmrAn)
        (fxmod . g$12457$bmrAn)
        (fxmin . g$12456$bmrAn)
        (fxmax . g$12455$bmrAn)
        (fxlength . g$12454$bmrAn)
        (fxior . g$12453$bmrAn)
        (fxif . g$7122$bmrAn)
        (fxfirst-bit-set . g$12452$bmrAn)
        (fxeven? . g$12451$bmrAn)
        (fxdiv0-and-mod0 . g$12450$bmrAn)
        (fxdiv0 . g$12449$bmrAn)
        (fxdiv-and-mod . g$12448$bmrAn)
        (fxdiv . g$12447$bmrAn)
        (fxcopy-bit-field . g$7125$bmrAn)
        (fxcopy-bit . g$7123$bmrAn)
        (fxbit-set? . g$12446$bmrAn)
        (fxbit-field . g$7124$bmrAn)
        (fxbit-count . g$12445$bmrAn)
        (fxarithmetic-shift-right . g$7127$bmrAn)
        (fxarithmetic-shift-left . g$7126$bmrAn)
        (fxarithmetic-shift . g$12444$bmrAn)
        (fxand . g$12443$bmrAn)
        (fx>? . g$12442$bmrAn)
        (fx>=? . g$12441$bmrAn)
        (fx=? . g$12440$bmrAn)
        (fx<? . g$12439$bmrAn)
        (fx<=? . g$12438$bmrAn)
        (fx-/carry . g$7120$bmrAn)
        (fx- . g$12437$bmrAn)
        (fx+/carry . g$7121$bmrAn)
        (fx+ . g$12436$bmrAn)
        (fx*/carry . g$7119$bmrAn)
        (fx* . g$12435$bmrAn)
        (greatest-fixnum . g$12434$bmrAn)
        (least-fixnum . g$12433$bmrAn)
        (fixnum-width . g$12432$bmrAn)
        (fixnum? . g$12431$bmrAn)
        (bitwise-rotate-bit-field . g$7093$bmrAn)
        (bitwise-reverse-bit-field . g$12430$bmrAn)
        (bitwise-length . g$12429$bmrAn)
        (bitwise-if . g$7087$bmrAn)
        (bitwise-first-bit-set . g$12428$bmrAn)
        (bitwise-copy-bit-field . g$7090$bmrAn)
        (bitwise-copy-bit . g$7088$bmrAn)
        (bitwise-bit-set? . g$12427$bmrAn)
        (bitwise-bit-field . g$7089$bmrAn)
        (bitwise-bit-count . g$12426$bmrAn)
        (bitwise-xor . g$12425$bmrAn)
        (bitwise-ior . g$12424$bmrAn)
        (bitwise-and . g$12423$bmrAn)
        (bitwise-not . g$12422$bmrAn)
        (bitwise-arithmetic-shift-right . g$7092$bmrAn)
        (bitwise-arithmetic-shift-left . g$7091$bmrAn)
        (bitwise-arithmetic-shift . g$12421$bmrAn)
        (zero? . g$6018$bmrAn)
        (vector? . g$12420$bmrAn)
        (vector-set! . g$12419$bmrAn)
        (vector-ref . g$12418$bmrAn)
        (vector-map . g$12417$bmrAn)
        (vector-length . g$12416$bmrAn)
        (vector-for-each . g$12415$bmrAn)
        (vector-fill! . g$12414$bmrAn)
        (vector->list . g$12413$bmrAn)
        (vector . g$12412$bmrAn)
        (values . g$12411$bmrAn)
        (truncate . g$12410$bmrAn)
        (tan . g$12409$bmrAn)
        (symbol? . g$12408$bmrAn)
        (symbol=? . g$6064$bmrAn)
        (symbol->string . g$12407$bmrAn)
        (substring . g$12406$bmrAn)
        (string? . g$12405$bmrAn)
        (string>? . g$6061$bmrAn)
        (string>=? . g$6063$bmrAn)
        (string=? . g$6059$bmrAn)
        (string<? . g$6060$bmrAn)
        (string<=? . g$6062$bmrAn)
        (string-ref . g$12404$bmrAn)
        (string-length . g$12403$bmrAn)
        (string-for-each . g$12402$bmrAn)
        (string-copy . g$12401$bmrAn)
        (string-append . g$12400$bmrAn)
        (string->symbol . g$12399$bmrAn)
        (string->number . g$12398$bmrAn)
        (string->list . g$12397$bmrAn)
        (string . g$12396$bmrAn)
        (sqrt . g$12395$bmrAn)
        (sin . g$12394$bmrAn)
        (round . g$12393$bmrAn)
        (reverse . g$12392$bmrAn)
        (real? . g$12391$bmrAn)
        (real-valued? . g$12390$bmrAn)
        (real-part . g$12389$bmrAn)
        (rationalize . g$6105$bmrAn)
        (rational? . g$12388$bmrAn)
        (rational-valued? . g$12387$bmrAn)
        (procedure? . g$12386$bmrAn)
        (positive? . g$6016$bmrAn)
        (pair? . g$12385$bmrAn)
        (odd? . g$6020$bmrAn)
        (numerator . g$12384$bmrAn)
        (number? . g$12383$bmrAn)
        (number->string . g$12382$bmrAn)
        (null? . g$12381$bmrAn)
        (not . g$12380$bmrAn)
        (negative? . g$6017$bmrAn)
        (nan? . g$12379$bmrAn)
        (min . g$6022$bmrAn)
        (max . g$6021$bmrAn)
        (map . g$5870$bmrAn)
        (make-vector . g$12378$bmrAn)
        (make-string . g$12377$bmrAn)
        (make-rectangular . g$12376$bmrAn)
        (make-polar . g$12375$bmrAn)
        (magnitude . g$12374$bmrAn)
        (log . g$12373$bmrAn)
        (list? . g$12372$bmrAn)
        (list-tail . g$5850$bmrAn)
        (list-ref . g$5851$bmrAn)
        (list->vector . g$12371$bmrAn)
        (list->string . g$12370$bmrAn)
        (list . g$12369$bmrAn)
        (length . g$12368$bmrAn)
        (lcm . g$6024$bmrAn)
        (integer? . g$12367$bmrAn)
        (integer-valued? . g$12366$bmrAn)
        (integer->char . g$12365$bmrAn)
        (infinite? . g$12364$bmrAn)
        (inexact? . g$12363$bmrAn)
        (inexact . g$12362$bmrAn)
        (imag-part . g$12361$bmrAn)
        (gcd . g$6023$bmrAn)
        (for-each . g$5871$bmrAn)
        (floor . g$12360$bmrAn)
        (finite? . g$12359$bmrAn)
        (expt . g$12358$bmrAn)
        (exp . g$12357$bmrAn)
        (exact? . g$12356$bmrAn)
        (exact-integer-sqrt . g$12355$bmrAn)
        (exact . g$12354$bmrAn)
        (even? . g$6019$bmrAn)
        (error . g$12353$bmrAn)
        (eqv? . g$12352$bmrAn)
        (equal? . g$12351$bmrAn)
        (eq? . g$12350$bmrAn)
        (dynamic-wind . g$12349$bmrAn)
        (div0-and-mod0 . g$12348$bmrAn)
        (mod0 . g$12347$bmrAn)
        (div0 . g$12346$bmrAn)
        (div-and-mod . g$12345$bmrAn)
        (mod . g$12344$bmrAn)
        (div . g$12343$bmrAn)
        (denominator . g$12342$bmrAn)
        (cos . g$12341$bmrAn)
        (cons . g$12340$bmrAn)
        (complex? . g$12339$bmrAn)
        (char? . g$12338$bmrAn)
        (char>? . g$6102$bmrAn)
        (char>=? . g$6104$bmrAn)
        (char=? . g$6100$bmrAn)
        (char<? . g$6101$bmrAn)
        (char<=? . g$6103$bmrAn)
        (char->integer . g$12337$bmrAn)
        (ceiling . g$12336$bmrAn)
        (call-with-values . g$12335$bmrAn)
        (call/cc . g$12334$bmrAn)
        (call-with-current-continuation . g$12333$bmrAn)
        (cddddr . g$6015$bmrAn)
        (cdddar . g$6014$bmrAn)
        (cddadr . g$6013$bmrAn)
        (cddaar . g$6012$bmrAn)
        (cdaddr . g$6011$bmrAn)
        (cdadar . g$6010$bmrAn)
        (cdaadr . g$6009$bmrAn)
        (cdaaar . g$6008$bmrAn)
        (cadddr . g$6007$bmrAn)
        (caddar . g$6006$bmrAn)
        (cadadr . g$6005$bmrAn)
        (cadaar . g$6004$bmrAn)
        (caaddr . g$6003$bmrAn)
        (caadar . g$6002$bmrAn)
        (caaadr . g$6001$bmrAn)
        (caaaar . g$6000$bmrAn)
        (cdddr . g$5999$bmrAn)
        (cddar . g$5998$bmrAn)
        (cdadr . g$5997$bmrAn)
        (cdaar . g$5996$bmrAn)
        (caddr . g$5995$bmrAn)
        (cadar . g$5994$bmrAn)
        (caadr . g$5993$bmrAn)
        (caaar . g$5992$bmrAn)
        (cddr . g$5991$bmrAn)
        (cdar . g$5990$bmrAn)
        (cadr . g$5989$bmrAn)
        (caar . g$5988$bmrAn)
        (cdr . g$12332$bmrAn)
        (car . g$12331$bmrAn)
        (boolean? . g$12330$bmrAn)
        (boolean=? . g$6065$bmrAn)
        (atan . g$12329$bmrAn)
        (assertion-violation . g$12328$bmrAn)
        (asin . g$12327$bmrAn)
        (apply . g$12326$bmrAn)
        (append . g$12325$bmrAn)
        (angle . g$12324$bmrAn)
        (acos . g$12323$bmrAn)
        (abs . g$12322$bmrAn)
        (/ . g$12321$bmrAn)
        (* . g$12320$bmrAn)
        (- . g$12319$bmrAn)
        (+ . g$12318$bmrAn)
        (>= . g$12317$bmrAn)
        (> . g$12316$bmrAn)
        (= . g$12315$bmrAn)
        (<= . g$12314$bmrAn)
        (< . g$12313$bmrAn)
        (deserialize-port . g$12309$bmrAn)
        (serialize-port . g$12308$bmrAn)
        (enum-set? . g$7457$bmrAn)
        (load/args . g$12143$bmrAn)
        (printf . g$7568$bmrAn)
        (fprintf . g$7569$bmrAn)
        (format . g$7570$bmrAn)
        (procedure-form . g$12307$bmrAn)
        (procedure-environment . g$12306$bmrAn)
        (procedure-name . g$12305$bmrAn)
        (procedure-arity . g$12304$bmrAn)
        (gc-collect . g$12303$bmrAn)
        (clr-type? . g$12302$bmrAn)
        (get-clr-type . g$12301$bmrAn)
        (vector-append . g$12299$bmrAn)
        (vector-filter . g$12298$bmrAn)
        (vector-reverse! . g$12297$bmrAn)
        (vector-contains? . g$12296$bmrAn)
        (vector-index-of . g$12295$bmrAn)
        (vector-copy . g$12294$bmrAn)
        (vector-binary-search . g$12293$bmrAn)
        (string-ci-compare . g$12292$bmrAn)
        (string-compare . g$12291$bmrAn)
        (string-format . g$12290$bmrAn)
        (trace-printer . g$12140$bmrAn)
        (time-it . g$12288$bmrAn)
        (make-parameter . g$7858$bmrAn)
        (open-tcp-input/output-port . g$12285$bmrAn)
        (hashtable-for-each . g$12284$bmrAn)
        (hashtable-map . g$12283$bmrAn)
        (environment-bindings . g$9131$bmrAn)
        (environment-symbols . g$9134$bmrAn)
        (interaction-environment-symbols . g$9130$bmrAn)
        (optimization-level . g$12282$bmrAn)
        (library-path . g$8313$bmrAn)
        (expand->core . g$9140$bmrAn)
        (expand . g$9138$bmrAn)
        (&no-nans . g$12281$bmrAn)
        (&no-infinities . g$12280$bmrAn)
        (&i/o-encoding . g$12279$bmrAn)
        (&i/o-decoding . g$12278$bmrAn)
        (&i/o-port . g$12277$bmrAn)
        (&i/o-file-does-not-exist . g$12276$bmrAn)
        (&i/o-file-already-exists . g$12275$bmrAn)
        (&i/o-file-is-read-only . g$12274$bmrAn)
        (&i/o-file-protection . g$12273$bmrAn)
        (&i/o-filename . g$12272$bmrAn)
        (&i/o-invalid-position . g$12271$bmrAn)
        (&i/o-write . g$12270$bmrAn)
        (&i/o-read . g$12269$bmrAn)
        (&i/o . g$12268$bmrAn)
        (&non-continuable . g$12267$bmrAn)
        (&undefined . g$12266$bmrAn)
        (&syntax . g$12265$bmrAn)
        (&lexical . g$12264$bmrAn)
        (&implementation-restriction . g$12263$bmrAn)
        (&who . g$12262$bmrAn)
        (&irritants . g$12261$bmrAn)
        (&assertion . g$12260$bmrAn)
        (&violation . g$12259$bmrAn)
        (&error . g$12258$bmrAn)
        (&serious . g$12257$bmrAn)
        (&warning . g$12256$bmrAn)
        (&message . g$12255$bmrAn)
        (&condition . g$12254$bmrAn)
        (define-condition-type . g$12253$bmrAn)
        (define-enumeration . g$12252$bmrAn)
        (define-record-type . g$12251$bmrAn)
        (parent-rtd . g$12250$bmrAn)
        (nongenerative . g$12249$bmrAn)
        (opaque . g$12248$bmrAn)
        (sealed . g$12247$bmrAn)
        (protocol . g$12246$bmrAn)
        (parent . g$12245$bmrAn)
        (immutable . g$12244$bmrAn)
        (mutable . g$12243$bmrAn)
        (fields . g$12242$bmrAn)
        (error-handling-mode . g$12241$bmrAn)
        (file-options . g$12240$bmrAn)
        (buffer-mode . g$12239$bmrAn)
        (eol-style . g$12238$bmrAn)
        (guard . g$12237$bmrAn)
        (trace-letrec-syntax . g$12236$bmrAn)
        (trace-let-syntax . g$12235$bmrAn)
        (trace-define-syntax . g$12234$bmrAn)
        (trace-define . g$12233$bmrAn)
        (trace-lambda . g$12232$bmrAn)
        (unsyntax-splicing . g$12231$bmrAn)
        (unsyntax . g$12230$bmrAn)
        (unquote-splicing . g$12229$bmrAn)
        (unquote . g$12228$bmrAn)
        (_ . g$12227$bmrAn)
        (else . g$12226$bmrAn)
        (=> . g$12225$bmrAn)
        (... . g$12224$bmrAn)
        (assert . g$12223$bmrAn)
        (endianness . g$12222$bmrAn)
        (delay . g$12221$bmrAn)
        (time . g$12220$bmrAn)
        (or . g$12219$bmrAn)
        (and . g$12218$bmrAn)
        (do . g$12217$bmrAn)
        (cond . g$12216$bmrAn)
        (let* . g$12215$bmrAn)
        (let . g$12214$bmrAn)
        (identifier-syntax . g$12213$bmrAn)
        (with-syntax . g$12212$bmrAn)
        (quasisyntax . g$12211$bmrAn)
        (quasiquote . g$12210$bmrAn)
        (syntax-rules . g$12209$bmrAn)
        (include-into . g$12208$bmrAn)
        (include . g$12207$bmrAn)
        (let-values . g$12205$bmrAn)
        (let*-values . g$12204$bmrAn)
        (record-constructor-descriptor . g$12203$bmrAn)
        (record-type-descriptor . g$12202$bmrAn)
        (fluid-let-syntax . g$12201$bmrAn)
        (case . g$12200$bmrAn)
        (parameterize . g$12199$bmrAn)
        (unless . g$12198$bmrAn)
        (when . g$12197$bmrAn)
        (if . g$12196$bmrAn)
        (letrec* . g$12195$bmrAn)
        (letrec . g$12194$bmrAn)
        (case-lambda . g$12192$bmrAn)
        (lambda . g$12191$bmrAn)
        (syntax . g$12190$bmrAn)
        (syntax-case . g$12189$bmrAn)
        (quote . g$12188$bmrAn)
        (letrec-syntax . g$12186$bmrAn)
        (let-syntax . g$12185$bmrAn)
        (set! . g$12184$bmrAn)
        (export . g$12183$bmrAn)
        (import . g$12182$bmrAn)
        (library . g$12181$bmrAn)
        (begin . g$12180$bmrAn)
        (module . g$12179$bmrAn)
        (define-syntax . g$12178$bmrAn)
        (define . g$12177$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12769$bmrAn
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$12286$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7511$bmrAn
      'g$12770$bmrAn
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$12710$bmrAn)
        (annotation-source . g$12709$bmrAn)
        (annotation-expression . g$12708$bmrAn)
        (annotation? . g$12707$bmrAn)
        (read-annotated . g$12706$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7511$bmrAn
      'g$12771$bmrAn
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$12680$bmrAn)
        (serialize-library . g$12679$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7511$bmrAn
      'g$12772$bmrAn
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$8761$bmrAn)
        (variable-transformer? . g$8760$bmrAn)
        (eqv-hash . g$12311$bmrAn)
        (reverse! . g$12310$bmrAn)
        (make-promise . g$6914$bmrAn)
        (format . g$7570$bmrAn)
        (get-command-line . g$12300$bmrAn)
        (make-traced-procedure . g$12289$bmrAn)
        (make-traced-macro . g$7590$bmrAn)
        (assertion-error . g$9153$bmrAn)
        (library-locator . g$12287$bmrAn)
        (get-library-paths . g$12286$bmrAn)
        (library-path . g$8313$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7511$bmrAn
      'g$12773$bmrAn
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$12312$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12774$bmrAn
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$12697$bmrAn)
        (clr-field-set!-internal . g$12696$bmrAn)
        (clr-field-get-internal . g$12695$bmrAn)
        (clr-cast-internal . g$12694$bmrAn)
        (clr-call-internal . g$12693$bmrAn)
        (clr-new-internal . g$12692$bmrAn)
        (clr-new-array-internal . g$12691$bmrAn)
        (clr-is-internal . g$12690$bmrAn)
        (clr-reference-internal . g$12689$bmrAn)
        (clr-using-internal . g$12688$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12775$bmrAn
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$12229$bmrAn)
        (unquote . g$12228$bmrAn)
        (else . g$12226$bmrAn)
        (=> . g$12225$bmrAn)
        (delay . g$12221$bmrAn)
        (or . g$12219$bmrAn)
        (and . g$12218$bmrAn)
        (do . g$12217$bmrAn)
        (cond . g$12216$bmrAn)
        (let* . g$12215$bmrAn)
        (let . g$12214$bmrAn)
        (quasiquote . g$12210$bmrAn)
        (syntax-rules . g$12209$bmrAn)
        (case . g$12200$bmrAn)
        (if . g$12196$bmrAn)
        (letrec . g$12194$bmrAn)
        (lambda . g$12191$bmrAn)
        (quote . g$12188$bmrAn)
        (letrec-syntax . g$12186$bmrAn)
        (let-syntax . g$12185$bmrAn)
        (set! . g$12184$bmrAn)
        (begin . g$12180$bmrAn)
        (define-syntax . g$12178$bmrAn)
        (define . g$12177$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7511$bmrAn
      'g$12776$bmrAn
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$9164$bmrAn)
        (char-ready? . g$12678$bmrAn)
        (string-ci>? . g$6992$bmrAn)
        (string-ci>=? . g$6994$bmrAn)
        (string-ci=? . g$6990$bmrAn)
        (string-ci<? . g$6991$bmrAn)
        (string-ci<=? . g$6993$bmrAn)
        (char-whitespace? . g$12669$bmrAn)
        (char-upper-case? . g$12668$bmrAn)
        (char-numeric? . g$12666$bmrAn)
        (char-lower-case? . g$12665$bmrAn)
        (char-upcase . g$12663$bmrAn)
        (char-downcase . g$12660$bmrAn)
        (char-ci>? . g$7031$bmrAn)
        (char-ci>=? . g$7033$bmrAn)
        (char-ci=? . g$7029$bmrAn)
        (char-ci<? . g$7030$bmrAn)
        (char-ci<=? . g$7032$bmrAn)
        (char-alphabetic? . g$12659$bmrAn)
        (call-with-output-file . g$7417$bmrAn)
        (call-with-input-file . g$7416$bmrAn)
        (write-char . g$7398$bmrAn)
        (write . g$12627$bmrAn)
        (with-output-to-file . g$7415$bmrAn)
        (with-input-from-file . g$7414$bmrAn)
        (read-char . g$7397$bmrAn)
        (read . g$12626$bmrAn)
        (peek-char . g$7396$bmrAn)
        (open-output-file . g$12625$bmrAn)
        (open-input-file . g$12624$bmrAn)
        (newline . g$7418$bmrAn)
        (display . g$12623$bmrAn)
        (close-output-port . g$12622$bmrAn)
        (close-input-port . g$12621$bmrAn)
        (eof-object? . g$12620$bmrAn)
        (eof-object . g$12619$bmrAn)
        (current-error-port . g$12618$bmrAn)
        (current-output-port . g$12617$bmrAn)
        (current-input-port . g$12616$bmrAn)
        (output-port? . g$12615$bmrAn)
        (input-port? . g$12614$bmrAn)
        (scheme-report-environment . g$9137$bmrAn)
        (quotient . g$6911$bmrAn)
        (null-environment . g$9136$bmrAn)
        (remainder . g$6912$bmrAn)
        (modulo . g$6913$bmrAn)
        (inexact->exact . g$6908$bmrAn)
        (force . g$6915$bmrAn)
        (exact->inexact . g$6909$bmrAn)
        (string-fill! . g$12553$bmrAn)
        (string-set! . g$12552$bmrAn)
        (set-cdr! . g$12551$bmrAn)
        (set-car! . g$12550$bmrAn)
        (memv . g$5863$bmrAn)
        (memq . g$5862$bmrAn)
        (member . g$5864$bmrAn)
        (assv . g$5859$bmrAn)
        (assq . g$5858$bmrAn)
        (assoc . g$5860$bmrAn)
        (eval . g$9139$bmrAn)
        (zero? . g$6018$bmrAn)
        (vector? . g$12420$bmrAn)
        (vector-set! . g$12419$bmrAn)
        (vector-ref . g$12418$bmrAn)
        (vector-length . g$12416$bmrAn)
        (vector-fill! . g$12414$bmrAn)
        (vector->list . g$12413$bmrAn)
        (vector . g$12412$bmrAn)
        (values . g$12411$bmrAn)
        (truncate . g$12410$bmrAn)
        (tan . g$12409$bmrAn)
        (symbol? . g$12408$bmrAn)
        (symbol->string . g$12407$bmrAn)
        (substring . g$12406$bmrAn)
        (string? . g$12405$bmrAn)
        (string>? . g$6061$bmrAn)
        (string>=? . g$6063$bmrAn)
        (string=? . g$6059$bmrAn)
        (string<? . g$6060$bmrAn)
        (string<=? . g$6062$bmrAn)
        (string-ref . g$12404$bmrAn)
        (string-length . g$12403$bmrAn)
        (string-copy . g$12401$bmrAn)
        (string-append . g$12400$bmrAn)
        (string->symbol . g$12399$bmrAn)
        (string->number . g$12398$bmrAn)
        (string->list . g$12397$bmrAn)
        (string . g$12396$bmrAn)
        (sqrt . g$12395$bmrAn)
        (sin . g$12394$bmrAn)
        (round . g$12393$bmrAn)
        (reverse . g$12392$bmrAn)
        (real? . g$12391$bmrAn)
        (real-part . g$12389$bmrAn)
        (rationalize . g$6105$bmrAn)
        (rational? . g$12388$bmrAn)
        (procedure? . g$12386$bmrAn)
        (positive? . g$6016$bmrAn)
        (pair? . g$12385$bmrAn)
        (odd? . g$6020$bmrAn)
        (numerator . g$12384$bmrAn)
        (number? . g$12383$bmrAn)
        (number->string . g$12382$bmrAn)
        (null? . g$12381$bmrAn)
        (not . g$12380$bmrAn)
        (negative? . g$6017$bmrAn)
        (min . g$6022$bmrAn)
        (max . g$6021$bmrAn)
        (map . g$5870$bmrAn)
        (make-vector . g$12378$bmrAn)
        (make-string . g$12377$bmrAn)
        (make-rectangular . g$12376$bmrAn)
        (make-polar . g$12375$bmrAn)
        (magnitude . g$12374$bmrAn)
        (log . g$12373$bmrAn)
        (list? . g$12372$bmrAn)
        (list-tail . g$5850$bmrAn)
        (list-ref . g$5851$bmrAn)
        (list->vector . g$12371$bmrAn)
        (list->string . g$12370$bmrAn)
        (list . g$12369$bmrAn)
        (length . g$12368$bmrAn)
        (lcm . g$6024$bmrAn)
        (integer? . g$12367$bmrAn)
        (integer->char . g$12365$bmrAn)
        (inexact? . g$12363$bmrAn)
        (imag-part . g$12361$bmrAn)
        (gcd . g$6023$bmrAn)
        (for-each . g$5871$bmrAn)
        (floor . g$12360$bmrAn)
        (expt . g$12358$bmrAn)
        (exp . g$12357$bmrAn)
        (exact? . g$12356$bmrAn)
        (even? . g$6019$bmrAn)
        (eqv? . g$12352$bmrAn)
        (equal? . g$12351$bmrAn)
        (eq? . g$12350$bmrAn)
        (dynamic-wind . g$12349$bmrAn)
        (denominator . g$12342$bmrAn)
        (cos . g$12341$bmrAn)
        (cons . g$12340$bmrAn)
        (complex? . g$12339$bmrAn)
        (char? . g$12338$bmrAn)
        (char>? . g$6102$bmrAn)
        (char>=? . g$6104$bmrAn)
        (char=? . g$6100$bmrAn)
        (char<? . g$6101$bmrAn)
        (char<=? . g$6103$bmrAn)
        (char->integer . g$12337$bmrAn)
        (ceiling . g$12336$bmrAn)
        (call-with-values . g$12335$bmrAn)
        (call-with-current-continuation . g$12333$bmrAn)
        (cddddr . g$6015$bmrAn)
        (cdddar . g$6014$bmrAn)
        (cddadr . g$6013$bmrAn)
        (cddaar . g$6012$bmrAn)
        (cdaddr . g$6011$bmrAn)
        (cdadar . g$6010$bmrAn)
        (cdaadr . g$6009$bmrAn)
        (cdaaar . g$6008$bmrAn)
        (cadddr . g$6007$bmrAn)
        (caddar . g$6006$bmrAn)
        (cadadr . g$6005$bmrAn)
        (cadaar . g$6004$bmrAn)
        (caaddr . g$6003$bmrAn)
        (caadar . g$6002$bmrAn)
        (caaadr . g$6001$bmrAn)
        (caaaar . g$6000$bmrAn)
        (cdddr . g$5999$bmrAn)
        (cddar . g$5998$bmrAn)
        (cdadr . g$5997$bmrAn)
        (cdaar . g$5996$bmrAn)
        (caddr . g$5995$bmrAn)
        (cadar . g$5994$bmrAn)
        (caadr . g$5993$bmrAn)
        (caaar . g$5992$bmrAn)
        (cddr . g$5991$bmrAn)
        (cdar . g$5990$bmrAn)
        (cadr . g$5989$bmrAn)
        (caar . g$5988$bmrAn)
        (cdr . g$12332$bmrAn)
        (car . g$12331$bmrAn)
        (boolean? . g$12330$bmrAn)
        (atan . g$12329$bmrAn)
        (asin . g$12327$bmrAn)
        (apply . g$12326$bmrAn)
        (append . g$12325$bmrAn)
        (angle . g$12324$bmrAn)
        (acos . g$12323$bmrAn)
        (abs . g$12322$bmrAn)
        (/ . g$12321$bmrAn)
        (* . g$12320$bmrAn)
        (- . g$12319$bmrAn)
        (+ . g$12318$bmrAn)
        (>= . g$12317$bmrAn)
        (> . g$12316$bmrAn)
        (= . g$12315$bmrAn)
        (<= . g$12314$bmrAn)
        (< . g$12313$bmrAn)
        (unquote-splicing . g$12229$bmrAn)
        (unquote . g$12228$bmrAn)
        (else . g$12226$bmrAn)
        (=> . g$12225$bmrAn)
        (... . g$12224$bmrAn)
        (delay . g$12221$bmrAn)
        (or . g$12219$bmrAn)
        (and . g$12218$bmrAn)
        (do . g$12217$bmrAn)
        (cond . g$12216$bmrAn)
        (let* . g$12215$bmrAn)
        (let . g$12214$bmrAn)
        (quasiquote . g$12210$bmrAn)
        (syntax-rules . g$12209$bmrAn)
        (case . g$12200$bmrAn)
        (if . g$12196$bmrAn)
        (letrec . g$12194$bmrAn)
        (lambda . g$12191$bmrAn)
        (quote . g$12188$bmrAn)
        (letrec-syntax . g$12186$bmrAn)
        (let-syntax . g$12185$bmrAn)
        (set! . g$12184$bmrAn)
        (begin . g$12180$bmrAn)
        (define-syntax . g$12178$bmrAn)
        (define . g$12177$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7511$bmrAn
      'g$12777$bmrAn
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12677$bmrAn)
        (string-titlecase . g$12676$bmrAn)
        (string-normalize-nfkd . g$12675$bmrAn)
        (string-normalize-nfkc . g$12674$bmrAn)
        (string-normalize-nfd . g$12673$bmrAn)
        (string-normalize-nfc . g$12672$bmrAn)
        (string-foldcase . g$12671$bmrAn)
        (string-downcase . g$12670$bmrAn)
        (string-ci>? . g$6992$bmrAn)
        (string-ci>=? . g$6994$bmrAn)
        (string-ci=? . g$6990$bmrAn)
        (string-ci<? . g$6991$bmrAn)
        (string-ci<=? . g$6993$bmrAn)
        (char-whitespace? . g$12669$bmrAn)
        (char-upper-case? . g$12668$bmrAn)
        (char-title-case? . g$12667$bmrAn)
        (char-numeric? . g$12666$bmrAn)
        (char-lower-case? . g$12665$bmrAn)
        (char-general-category . g$12664$bmrAn)
        (char-upcase . g$12663$bmrAn)
        (char-titlecase . g$12662$bmrAn)
        (char-foldcase . g$12661$bmrAn)
        (char-downcase . g$12660$bmrAn)
        (char-ci>? . g$7031$bmrAn)
        (char-ci>=? . g$7033$bmrAn)
        (char-ci=? . g$7029$bmrAn)
        (char-ci<? . g$7030$bmrAn)
        (char-ci<=? . g$7032$bmrAn)
        (char-alphabetic? . g$12659$bmrAn)
        (make-variable-transformer . g$8759$bmrAn)
        (identifier? . g$9158$bmrAn)
        (generate-temporaries . g$9147$bmrAn)
        (free-identifier=? . g$9148$bmrAn)
        (syntax->datum . g$9160$bmrAn)
        (datum->syntax . g$9159$bmrAn)
        (bound-identifier=? . g$9149$bmrAn)
        (record-type-descriptor? . g$12658$bmrAn)
        (record-predicate . g$12657$bmrAn)
        (record-mutator . g$12656$bmrAn)
        (record-constructor . g$12655$bmrAn)
        (record-accessor . g$12654$bmrAn)
        (make-record-type-descriptor . g$12653$bmrAn)
        (make-record-constructor-descriptor . g$12652$bmrAn)
        (record? . g$12651$bmrAn)
        (record-type-uid . g$12650$bmrAn)
        (record-type-sealed? . g$12649$bmrAn)
        (record-type-parent . g$12648$bmrAn)
        (record-type-opaque? . g$12647$bmrAn)
        (record-type-name . g$12646$bmrAn)
        (record-type-generative? . g$12645$bmrAn)
        (record-type-field-names . g$12644$bmrAn)
        (record-rtd . g$12643$bmrAn)
        (record-field-mutable? . g$12642$bmrAn)
        (delete-file . g$6566$bmrAn)
        (file-exists? . g$6565$bmrAn)
        (vector-sort! . g$12641$bmrAn)
        (vector-sort . g$12640$bmrAn)
        (list-sort . g$6932$bmrAn)
        (symbol-hash . g$12639$bmrAn)
        (string-ci-hash . g$12638$bmrAn)
        (string-hash . g$12637$bmrAn)
        (equal-hash . g$12636$bmrAn)
        (hashtable-equivalence-function . g$12635$bmrAn)
        (make-hashtable . g$12634$bmrAn)
        (hashtable-hash-function . g$12633$bmrAn)
        (make-eqv-hashtable . g$6534$bmrAn)
        (make-eq-hashtable . g$6533$bmrAn)
        (hashtable? . g$12632$bmrAn)
        (hashtable-update! . g$6540$bmrAn)
        (hashtable-size . g$6535$bmrAn)
        (hashtable-set! . g$6537$bmrAn)
        (hashtable-ref . g$6536$bmrAn)
        (hashtable-mutable? . g$12631$bmrAn)
        (hashtable-keys . g$12630$bmrAn)
        (hashtable-entries . g$12629$bmrAn)
        (hashtable-delete! . g$6538$bmrAn)
        (hashtable-copy . g$12628$bmrAn)
        (hashtable-contains? . g$6539$bmrAn)
        (hashtable-clear! . g$6541$bmrAn)
        (call-with-output-file . g$7417$bmrAn)
        (call-with-input-file . g$7416$bmrAn)
        (write-char . g$7398$bmrAn)
        (write . g$12627$bmrAn)
        (with-output-to-file . g$7415$bmrAn)
        (with-input-from-file . g$7414$bmrAn)
        (read-char . g$7397$bmrAn)
        (read . g$12626$bmrAn)
        (peek-char . g$7396$bmrAn)
        (open-output-file . g$12625$bmrAn)
        (open-input-file . g$12624$bmrAn)
        (newline . g$7418$bmrAn)
        (display . g$12623$bmrAn)
        (close-output-port . g$12622$bmrAn)
        (close-input-port . g$12621$bmrAn)
        (eof-object? . g$12620$bmrAn)
        (eof-object . g$12619$bmrAn)
        (current-error-port . g$12618$bmrAn)
        (current-output-port . g$12617$bmrAn)
        (current-input-port . g$12616$bmrAn)
        (output-port? . g$12615$bmrAn)
        (input-port? . g$12614$bmrAn)
        (utf-8-codec . g$12613$bmrAn)
        (utf-16-codec . g$12612$bmrAn)
        (transcoder-error-handling-mode . g$12611$bmrAn)
        (transcoder-eol-style . g$12610$bmrAn)
        (transcoder-codec . g$12609$bmrAn)
        (transcoded-port . g$12608$bmrAn)
        (textual-port? . g$12607$bmrAn)
        (string->bytevector . g$12606$bmrAn)
        (standard-output-port . g$12605$bmrAn)
        (standard-input-port . g$12604$bmrAn)
        (standard-error-port . g$12603$bmrAn)
        (set-port-position! . g$12602$bmrAn)
        (put-u8 . g$12601$bmrAn)
        (put-string . g$12600$bmrAn)
        (put-datum . g$12599$bmrAn)
        (put-char . g$12598$bmrAn)
        (put-bytevector . g$12597$bmrAn)
        (port? . g$7383$bmrAn)
        (port-transcoder . g$12596$bmrAn)
        (port-position . g$12595$bmrAn)
        (port-has-set-port-position!? . g$12594$bmrAn)
        (port-has-port-position? . g$12593$bmrAn)
        (port-eof? . g$12592$bmrAn)
        (output-port-buffer-mode . g$12591$bmrAn)
        (open-string-output-port . g$7382$bmrAn)
        (open-string-input-port . g$12590$bmrAn)
        (open-file-output-port . g$12589$bmrAn)
        (open-file-input/output-port . g$12588$bmrAn)
        (open-file-input-port . g$12587$bmrAn)
        (open-bytevector-output-port . g$12586$bmrAn)
        (open-bytevector-input-port . g$12585$bmrAn)
        (native-transcoder . g$12584$bmrAn)
        (native-eol-style . g$12583$bmrAn)
        (make-transcoder . g$12582$bmrAn)
        (latin-1-codec . g$12581$bmrAn)
        (make-i/o-write-error . g$7238$bmrAn)
        (make-i/o-read-error . g$7224$bmrAn)
        (make-i/o-port-error . g$7343$bmrAn)
        (make-i/o-invalid-position-error . g$7253$bmrAn)
        (make-i/o-filename-error . g$7270$bmrAn)
        (make-i/o-file-protection-error . g$7286$bmrAn)
        (make-i/o-file-is-read-only-error . g$7300$bmrAn)
        (make-i/o-file-does-not-exist-error . g$7328$bmrAn)
        (make-i/o-file-already-exists-error . g$7314$bmrAn)
        (make-i/o-error . g$7210$bmrAn)
        (make-i/o-encoding-error . g$7374$bmrAn)
        (make-i/o-decoding-error . g$7359$bmrAn)
        (make-custom-textual-output-port . g$12580$bmrAn)
        (make-custom-textual-input/output-port . g$12579$bmrAn)
        (make-custom-textual-input-port . g$12578$bmrAn)
        (make-custom-binary-output-port . g$12577$bmrAn)
        (make-custom-binary-input/output-port . g$12576$bmrAn)
        (make-custom-binary-input-port . g$12575$bmrAn)
        (make-bytevector . g$12574$bmrAn)
        (lookahead-u8 . g$12573$bmrAn)
        (lookahead-char . g$12572$bmrAn)
        (i/o-write-error? . g$7239$bmrAn)
        (i/o-read-error? . g$7225$bmrAn)
        (i/o-port-error? . g$7345$bmrAn)
        (i/o-invalid-position-error? . g$7255$bmrAn)
        (i/o-error-position . g$7256$bmrAn)
        (i/o-filename-error? . g$7272$bmrAn)
        (i/o-file-protection-error? . g$7287$bmrAn)
        (i/o-file-is-read-only-error? . g$7301$bmrAn)
        (i/o-file-does-not-exist-error? . g$7329$bmrAn)
        (i/o-file-already-exists-error? . g$7315$bmrAn)
        (i/o-error? . g$7211$bmrAn)
        (i/o-error-port . g$7346$bmrAn)
        (i/o-error-filename . g$7273$bmrAn)
        (i/o-encoding-error? . g$7376$bmrAn)
        (i/o-encoding-error-char . g$7377$bmrAn)
        (i/o-decoding-error? . g$7360$bmrAn)
        (get-u8 . g$12571$bmrAn)
        (get-string-n! . g$12570$bmrAn)
        (get-string-n . g$12569$bmrAn)
        (get-string-all . g$12568$bmrAn)
        (get-line . g$12567$bmrAn)
        (get-datum . g$12566$bmrAn)
        (get-char . g$12565$bmrAn)
        (get-bytevector-some . g$12564$bmrAn)
        (get-bytevector-n! . g$12563$bmrAn)
        (get-bytevector-n . g$12562$bmrAn)
        (get-bytevector-all . g$12561$bmrAn)
        (flush-output-port . g$12560$bmrAn)
        (close-port . g$12559$bmrAn)
        (call-with-string-output-port . g$7384$bmrAn)
        (call-with-port . g$7385$bmrAn)
        (call-with-bytevector-output-port . g$12558$bmrAn)
        (bytevector->string . g$12557$bmrAn)
        (buffer-mode? . g$12556$bmrAn)
        (binary-port? . g$12555$bmrAn)
        (exit . g$12554$bmrAn)
        (command-line . g$12141$bmrAn)
        (remove . g$5875$bmrAn)
        (remv . g$5876$bmrAn)
        (remp . g$5856$bmrAn)
        (remq . g$5877$bmrAn)
        (partition . g$5855$bmrAn)
        (memv . g$5863$bmrAn)
        (memq . g$5862$bmrAn)
        (memp . g$5865$bmrAn)
        (member . g$5864$bmrAn)
        (exists . g$5869$bmrAn)
        (for-all . g$5868$bmrAn)
        (fold-right . g$5874$bmrAn)
        (fold-left . g$5873$bmrAn)
        (find . g$5854$bmrAn)
        (filter . g$5857$bmrAn)
        (cons* . g$5872$bmrAn)
        (assv . g$5859$bmrAn)
        (assq . g$5858$bmrAn)
        (assp . g$5861$bmrAn)
        (assoc . g$5860$bmrAn)
        (with-exception-handler . g$12549$bmrAn)
        (raise-continuable . g$12548$bmrAn)
        (raise . g$12547$bmrAn)
        (make-enumeration . g$7482$bmrAn)
        (enum-set=? . g$7489$bmrAn)
        (enum-set-universe . g$7483$bmrAn)
        (enum-set-union . g$7490$bmrAn)
        (enum-set-subset? . g$7488$bmrAn)
        (enum-set-projection . g$7494$bmrAn)
        (enum-set-member? . g$7487$bmrAn)
        (enum-set-intersection . g$7491$bmrAn)
        (enum-set-indexer . g$7484$bmrAn)
        (enum-set-difference . g$7492$bmrAn)
        (enum-set-constructor . g$7485$bmrAn)
        (enum-set-complement . g$7493$bmrAn)
        (enum-set->list . g$7486$bmrAn)
        (who-condition? . g$6820$bmrAn)
        (warning? . g$6731$bmrAn)
        (violation? . g$6773$bmrAn)
        (undefined-violation? . g$6897$bmrAn)
        (syntax-violation? . g$6881$bmrAn)
        (syntax-violation-subform . g$6883$bmrAn)
        (syntax-violation-form . g$6882$bmrAn)
        (syntax-violation . g$9157$bmrAn)
        (simple-conditions . g$12546$bmrAn)
        (serious-condition? . g$6745$bmrAn)
        (non-continuable-violation? . g$6835$bmrAn)
        (message-condition? . g$6716$bmrAn)
        (make-who-condition . g$6818$bmrAn)
        (make-warning . g$6730$bmrAn)
        (make-violation . g$6772$bmrAn)
        (make-undefined-violation . g$6896$bmrAn)
        (make-syntax-violation . g$6878$bmrAn)
        (make-serious-condition . g$6744$bmrAn)
        (make-non-continuable-violation . g$6834$bmrAn)
        (make-message-condition . g$6714$bmrAn)
        (make-lexical-violation . g$6862$bmrAn)
        (make-irritants-condition . g$6801$bmrAn)
        (make-implementation-restriction-violation . g$6848$bmrAn)
        (make-error . g$6758$bmrAn)
        (make-assertion-violation . g$6786$bmrAn)
        (lexical-violation? . g$6863$bmrAn)
        (irritants-condition? . g$6803$bmrAn)
        (implementation-restriction-violation? . g$6849$bmrAn)
        (error? . g$6759$bmrAn)
        (condition-who . g$6821$bmrAn)
        (condition-predicate . g$12545$bmrAn)
        (condition-message . g$6717$bmrAn)
        (condition-irritants . g$6804$bmrAn)
        (condition-accessor . g$12544$bmrAn)
        (condition . g$12543$bmrAn)
        (assertion-violation? . g$6787$bmrAn)
        (condition? . g$12542$bmrAn)
        (utf32->string . g$12541$bmrAn)
        (utf16->string . g$12540$bmrAn)
        (utf8->string . g$12539$bmrAn)
        (uint-list->bytevector . g$12538$bmrAn)
        (u8-list->bytevector . g$12537$bmrAn)
        (string->utf8 . g$12536$bmrAn)
        (string->utf32 . g$12535$bmrAn)
        (string->utf16 . g$12534$bmrAn)
        (sint-list->bytevector . g$12533$bmrAn)
        (native-endianness . g$6572$bmrAn)
        (bytevector? . g$12532$bmrAn)
        (bytevector=? . g$12531$bmrAn)
        (bytevector-uint-set! . g$12530$bmrAn)
        (bytevector-uint-ref . g$12529$bmrAn)
        (bytevector-u8-set! . g$12528$bmrAn)
        (bytevector-u8-ref . g$12527$bmrAn)
        (bytevector-u64-set! . g$6593$bmrAn)
        (bytevector-u64-ref . g$6589$bmrAn)
        (bytevector-u64-native-set! . g$6595$bmrAn)
        (bytevector-u64-native-ref . g$6591$bmrAn)
        (bytevector-u32-set! . g$6585$bmrAn)
        (bytevector-u32-ref . g$6581$bmrAn)
        (bytevector-u32-native-set! . g$6587$bmrAn)
        (bytevector-u32-native-ref . g$6583$bmrAn)
        (bytevector-u16-set! . g$6577$bmrAn)
        (bytevector-u16-ref . g$6573$bmrAn)
        (bytevector-u16-native-set! . g$6579$bmrAn)
        (bytevector-u16-native-ref . g$6575$bmrAn)
        (bytevector-sint-set! . g$12526$bmrAn)
        (bytevector-sint-ref . g$12525$bmrAn)
        (bytevector-s8-set! . g$12524$bmrAn)
        (bytevector-s8-ref . g$12523$bmrAn)
        (bytevector-s64-set! . g$6594$bmrAn)
        (bytevector-s64-ref . g$6590$bmrAn)
        (bytevector-s64-native-set! . g$6596$bmrAn)
        (bytevector-s64-native-ref . g$6592$bmrAn)
        (bytevector-s32-set! . g$6586$bmrAn)
        (bytevector-s32-ref . g$6582$bmrAn)
        (bytevector-s32-native-set! . g$6588$bmrAn)
        (bytevector-s32-native-ref . g$6584$bmrAn)
        (bytevector-s16-set! . g$6578$bmrAn)
        (bytevector-s16-ref . g$6574$bmrAn)
        (bytevector-s16-native-set! . g$6580$bmrAn)
        (bytevector-s16-native-ref . g$6576$bmrAn)
        (bytevector-length . g$12522$bmrAn)
        (bytevector-ieee-single-set! . g$12521$bmrAn)
        (bytevector-ieee-single-ref . g$12520$bmrAn)
        (bytevector-ieee-single-native-set! . g$6599$bmrAn)
        (bytevector-ieee-single-native-ref . g$6597$bmrAn)
        (bytevector-ieee-double-set! . g$12519$bmrAn)
        (bytevector-ieee-double-ref . g$12518$bmrAn)
        (bytevector-ieee-double-native-set! . g$6600$bmrAn)
        (bytevector-ieee-double-native-ref . g$6598$bmrAn)
        (bytevector-fill! . g$12517$bmrAn)
        (bytevector-copy! . g$12516$bmrAn)
        (bytevector-copy . g$12515$bmrAn)
        (bytevector->uint-list . g$12514$bmrAn)
        (bytevector->u8-list . g$12513$bmrAn)
        (bytevector->sint-list . g$12512$bmrAn)
        (no-nans-violation? . g$7196$bmrAn)
        (no-infinities-violation? . g$7182$bmrAn)
        (make-no-nans-violation . g$7195$bmrAn)
        (make-no-infinities-violation . g$7181$bmrAn)
        (real->flonum . g$12511$bmrAn)
        (flzero? . g$12510$bmrAn)
        (fltruncate . g$12509$bmrAn)
        (fltan . g$12508$bmrAn)
        (flsqrt . g$12507$bmrAn)
        (flsin . g$12506$bmrAn)
        (flround . g$12505$bmrAn)
        (flpositive? . g$12504$bmrAn)
        (flonum? . g$12503$bmrAn)
        (flodd? . g$12502$bmrAn)
        (flnumerator . g$12501$bmrAn)
        (flnegative? . g$12500$bmrAn)
        (flnan? . g$12499$bmrAn)
        (flmod0 . g$12498$bmrAn)
        (flmod . g$12497$bmrAn)
        (flmin . g$12496$bmrAn)
        (flmax . g$12495$bmrAn)
        (fllog . g$12494$bmrAn)
        (flinteger? . g$12493$bmrAn)
        (flinfinite? . g$12492$bmrAn)
        (flfloor . g$12491$bmrAn)
        (flfinite? . g$12490$bmrAn)
        (flexpt . g$12489$bmrAn)
        (flexp . g$12488$bmrAn)
        (fleven? . g$12487$bmrAn)
        (fldiv0-and-mod0 . g$12486$bmrAn)
        (fldiv0 . g$12485$bmrAn)
        (fldiv-and-mod . g$12484$bmrAn)
        (fldiv . g$12483$bmrAn)
        (fldenominator . g$12482$bmrAn)
        (flcos . g$12481$bmrAn)
        (flceiling . g$12480$bmrAn)
        (flatan . g$12479$bmrAn)
        (flasin . g$12478$bmrAn)
        (flacos . g$12477$bmrAn)
        (flabs . g$12476$bmrAn)
        (fl>? . g$12475$bmrAn)
        (fl>=? . g$12474$bmrAn)
        (fl=? . g$12473$bmrAn)
        (fl<? . g$12472$bmrAn)
        (fl<=? . g$12471$bmrAn)
        (fl/ . g$12470$bmrAn)
        (fl- . g$12469$bmrAn)
        (fl+ . g$12468$bmrAn)
        (fl* . g$12467$bmrAn)
        (fixnum->flonum . g$12466$bmrAn)
        (fxzero? . g$12465$bmrAn)
        (fxxor . g$12464$bmrAn)
        (fxrotate-bit-field . g$7128$bmrAn)
        (fxreverse-bit-field . g$12463$bmrAn)
        (fxpositive? . g$12462$bmrAn)
        (fxodd? . g$12461$bmrAn)
        (fxnot . g$12460$bmrAn)
        (fxnegative? . g$12459$bmrAn)
        (fxmod0 . g$12458$bmrAn)
        (fxmod . g$12457$bmrAn)
        (fxmin . g$12456$bmrAn)
        (fxmax . g$12455$bmrAn)
        (fxlength . g$12454$bmrAn)
        (fxior . g$12453$bmrAn)
        (fxif . g$7122$bmrAn)
        (fxfirst-bit-set . g$12452$bmrAn)
        (fxeven? . g$12451$bmrAn)
        (fxdiv0-and-mod0 . g$12450$bmrAn)
        (fxdiv0 . g$12449$bmrAn)
        (fxdiv-and-mod . g$12448$bmrAn)
        (fxdiv . g$12447$bmrAn)
        (fxcopy-bit-field . g$7125$bmrAn)
        (fxcopy-bit . g$7123$bmrAn)
        (fxbit-set? . g$12446$bmrAn)
        (fxbit-field . g$7124$bmrAn)
        (fxbit-count . g$12445$bmrAn)
        (fxarithmetic-shift-right . g$7127$bmrAn)
        (fxarithmetic-shift-left . g$7126$bmrAn)
        (fxarithmetic-shift . g$12444$bmrAn)
        (fxand . g$12443$bmrAn)
        (fx>? . g$12442$bmrAn)
        (fx>=? . g$12441$bmrAn)
        (fx=? . g$12440$bmrAn)
        (fx<? . g$12439$bmrAn)
        (fx<=? . g$12438$bmrAn)
        (fx-/carry . g$7120$bmrAn)
        (fx- . g$12437$bmrAn)
        (fx+/carry . g$7121$bmrAn)
        (fx+ . g$12436$bmrAn)
        (fx*/carry . g$7119$bmrAn)
        (fx* . g$12435$bmrAn)
        (greatest-fixnum . g$12434$bmrAn)
        (least-fixnum . g$12433$bmrAn)
        (fixnum-width . g$12432$bmrAn)
        (fixnum? . g$12431$bmrAn)
        (bitwise-rotate-bit-field . g$7093$bmrAn)
        (bitwise-reverse-bit-field . g$12430$bmrAn)
        (bitwise-length . g$12429$bmrAn)
        (bitwise-if . g$7087$bmrAn)
        (bitwise-first-bit-set . g$12428$bmrAn)
        (bitwise-copy-bit-field . g$7090$bmrAn)
        (bitwise-copy-bit . g$7088$bmrAn)
        (bitwise-bit-set? . g$12427$bmrAn)
        (bitwise-bit-field . g$7089$bmrAn)
        (bitwise-bit-count . g$12426$bmrAn)
        (bitwise-xor . g$12425$bmrAn)
        (bitwise-ior . g$12424$bmrAn)
        (bitwise-and . g$12423$bmrAn)
        (bitwise-not . g$12422$bmrAn)
        (bitwise-arithmetic-shift-right . g$7092$bmrAn)
        (bitwise-arithmetic-shift-left . g$7091$bmrAn)
        (bitwise-arithmetic-shift . g$12421$bmrAn)
        (zero? . g$6018$bmrAn)
        (vector? . g$12420$bmrAn)
        (vector-set! . g$12419$bmrAn)
        (vector-ref . g$12418$bmrAn)
        (vector-map . g$12417$bmrAn)
        (vector-length . g$12416$bmrAn)
        (vector-for-each . g$12415$bmrAn)
        (vector-fill! . g$12414$bmrAn)
        (vector->list . g$12413$bmrAn)
        (vector . g$12412$bmrAn)
        (values . g$12411$bmrAn)
        (truncate . g$12410$bmrAn)
        (tan . g$12409$bmrAn)
        (symbol? . g$12408$bmrAn)
        (symbol=? . g$6064$bmrAn)
        (symbol->string . g$12407$bmrAn)
        (substring . g$12406$bmrAn)
        (string? . g$12405$bmrAn)
        (string>? . g$6061$bmrAn)
        (string>=? . g$6063$bmrAn)
        (string=? . g$6059$bmrAn)
        (string<? . g$6060$bmrAn)
        (string<=? . g$6062$bmrAn)
        (string-ref . g$12404$bmrAn)
        (string-length . g$12403$bmrAn)
        (string-for-each . g$12402$bmrAn)
        (string-copy . g$12401$bmrAn)
        (string-append . g$12400$bmrAn)
        (string->symbol . g$12399$bmrAn)
        (string->number . g$12398$bmrAn)
        (string->list . g$12397$bmrAn)
        (string . g$12396$bmrAn)
        (sqrt . g$12395$bmrAn)
        (sin . g$12394$bmrAn)
        (round . g$12393$bmrAn)
        (reverse . g$12392$bmrAn)
        (real? . g$12391$bmrAn)
        (real-valued? . g$12390$bmrAn)
        (real-part . g$12389$bmrAn)
        (rationalize . g$6105$bmrAn)
        (rational? . g$12388$bmrAn)
        (rational-valued? . g$12387$bmrAn)
        (procedure? . g$12386$bmrAn)
        (positive? . g$6016$bmrAn)
        (pair? . g$12385$bmrAn)
        (odd? . g$6020$bmrAn)
        (numerator . g$12384$bmrAn)
        (number? . g$12383$bmrAn)
        (number->string . g$12382$bmrAn)
        (null? . g$12381$bmrAn)
        (not . g$12380$bmrAn)
        (negative? . g$6017$bmrAn)
        (nan? . g$12379$bmrAn)
        (min . g$6022$bmrAn)
        (max . g$6021$bmrAn)
        (map . g$5870$bmrAn)
        (make-vector . g$12378$bmrAn)
        (make-string . g$12377$bmrAn)
        (make-rectangular . g$12376$bmrAn)
        (make-polar . g$12375$bmrAn)
        (magnitude . g$12374$bmrAn)
        (log . g$12373$bmrAn)
        (list? . g$12372$bmrAn)
        (list-tail . g$5850$bmrAn)
        (list-ref . g$5851$bmrAn)
        (list->vector . g$12371$bmrAn)
        (list->string . g$12370$bmrAn)
        (list . g$12369$bmrAn)
        (length . g$12368$bmrAn)
        (lcm . g$6024$bmrAn)
        (integer? . g$12367$bmrAn)
        (integer-valued? . g$12366$bmrAn)
        (integer->char . g$12365$bmrAn)
        (infinite? . g$12364$bmrAn)
        (inexact? . g$12363$bmrAn)
        (inexact . g$12362$bmrAn)
        (imag-part . g$12361$bmrAn)
        (gcd . g$6023$bmrAn)
        (for-each . g$5871$bmrAn)
        (floor . g$12360$bmrAn)
        (finite? . g$12359$bmrAn)
        (expt . g$12358$bmrAn)
        (exp . g$12357$bmrAn)
        (exact? . g$12356$bmrAn)
        (exact-integer-sqrt . g$12355$bmrAn)
        (exact . g$12354$bmrAn)
        (even? . g$6019$bmrAn)
        (error . g$12353$bmrAn)
        (eqv? . g$12352$bmrAn)
        (equal? . g$12351$bmrAn)
        (eq? . g$12350$bmrAn)
        (dynamic-wind . g$12349$bmrAn)
        (div0-and-mod0 . g$12348$bmrAn)
        (mod0 . g$12347$bmrAn)
        (div0 . g$12346$bmrAn)
        (div-and-mod . g$12345$bmrAn)
        (mod . g$12344$bmrAn)
        (div . g$12343$bmrAn)
        (denominator . g$12342$bmrAn)
        (cos . g$12341$bmrAn)
        (cons . g$12340$bmrAn)
        (complex? . g$12339$bmrAn)
        (char? . g$12338$bmrAn)
        (char>? . g$6102$bmrAn)
        (char>=? . g$6104$bmrAn)
        (char=? . g$6100$bmrAn)
        (char<? . g$6101$bmrAn)
        (char<=? . g$6103$bmrAn)
        (char->integer . g$12337$bmrAn)
        (ceiling . g$12336$bmrAn)
        (call-with-values . g$12335$bmrAn)
        (call/cc . g$12334$bmrAn)
        (call-with-current-continuation . g$12333$bmrAn)
        (cddddr . g$6015$bmrAn)
        (cdddar . g$6014$bmrAn)
        (cddadr . g$6013$bmrAn)
        (cddaar . g$6012$bmrAn)
        (cdaddr . g$6011$bmrAn)
        (cdadar . g$6010$bmrAn)
        (cdaadr . g$6009$bmrAn)
        (cdaaar . g$6008$bmrAn)
        (cadddr . g$6007$bmrAn)
        (caddar . g$6006$bmrAn)
        (cadadr . g$6005$bmrAn)
        (cadaar . g$6004$bmrAn)
        (caaddr . g$6003$bmrAn)
        (caadar . g$6002$bmrAn)
        (caaadr . g$6001$bmrAn)
        (caaaar . g$6000$bmrAn)
        (cdddr . g$5999$bmrAn)
        (cddar . g$5998$bmrAn)
        (cdadr . g$5997$bmrAn)
        (cdaar . g$5996$bmrAn)
        (caddr . g$5995$bmrAn)
        (cadar . g$5994$bmrAn)
        (caadr . g$5993$bmrAn)
        (caaar . g$5992$bmrAn)
        (cddr . g$5991$bmrAn)
        (cdar . g$5990$bmrAn)
        (cadr . g$5989$bmrAn)
        (caar . g$5988$bmrAn)
        (cdr . g$12332$bmrAn)
        (car . g$12331$bmrAn)
        (boolean? . g$12330$bmrAn)
        (boolean=? . g$6065$bmrAn)
        (atan . g$12329$bmrAn)
        (assertion-violation . g$12328$bmrAn)
        (asin . g$12327$bmrAn)
        (apply . g$12326$bmrAn)
        (append . g$12325$bmrAn)
        (angle . g$12324$bmrAn)
        (acos . g$12323$bmrAn)
        (abs . g$12322$bmrAn)
        (/ . g$12321$bmrAn)
        (* . g$12320$bmrAn)
        (- . g$12319$bmrAn)
        (+ . g$12318$bmrAn)
        (>= . g$12317$bmrAn)
        (> . g$12316$bmrAn)
        (= . g$12315$bmrAn)
        (<= . g$12314$bmrAn)
        (< . g$12313$bmrAn)
        (&no-nans . g$12281$bmrAn)
        (&no-infinities . g$12280$bmrAn)
        (&i/o-encoding . g$12279$bmrAn)
        (&i/o-decoding . g$12278$bmrAn)
        (&i/o-port . g$12277$bmrAn)
        (&i/o-file-does-not-exist . g$12276$bmrAn)
        (&i/o-file-already-exists . g$12275$bmrAn)
        (&i/o-file-is-read-only . g$12274$bmrAn)
        (&i/o-file-protection . g$12273$bmrAn)
        (&i/o-filename . g$12272$bmrAn)
        (&i/o-invalid-position . g$12271$bmrAn)
        (&i/o-write . g$12270$bmrAn)
        (&i/o-read . g$12269$bmrAn)
        (&i/o . g$12268$bmrAn)
        (&non-continuable . g$12267$bmrAn)
        (&undefined . g$12266$bmrAn)
        (&syntax . g$12265$bmrAn)
        (&lexical . g$12264$bmrAn)
        (&implementation-restriction . g$12263$bmrAn)
        (&who . g$12262$bmrAn)
        (&irritants . g$12261$bmrAn)
        (&assertion . g$12260$bmrAn)
        (&violation . g$12259$bmrAn)
        (&error . g$12258$bmrAn)
        (&serious . g$12257$bmrAn)
        (&warning . g$12256$bmrAn)
        (&message . g$12255$bmrAn)
        (&condition . g$12254$bmrAn)
        (define-condition-type . g$12253$bmrAn)
        (define-enumeration . g$12252$bmrAn)
        (define-record-type . g$12251$bmrAn)
        (parent-rtd . g$12250$bmrAn)
        (nongenerative . g$12249$bmrAn)
        (opaque . g$12248$bmrAn)
        (sealed . g$12247$bmrAn)
        (protocol . g$12246$bmrAn)
        (parent . g$12245$bmrAn)
        (immutable . g$12244$bmrAn)
        (mutable . g$12243$bmrAn)
        (fields . g$12242$bmrAn)
        (error-handling-mode . g$12241$bmrAn)
        (file-options . g$12240$bmrAn)
        (buffer-mode . g$12239$bmrAn)
        (eol-style . g$12238$bmrAn)
        (guard . g$12237$bmrAn)
        (unsyntax-splicing . g$12231$bmrAn)
        (unsyntax . g$12230$bmrAn)
        (unquote-splicing . g$12229$bmrAn)
        (unquote . g$12228$bmrAn)
        (_ . g$12227$bmrAn)
        (else . g$12226$bmrAn)
        (=> . g$12225$bmrAn)
        (... . g$12224$bmrAn)
        (assert . g$12223$bmrAn)
        (endianness . g$12222$bmrAn)
        (or . g$12219$bmrAn)
        (and . g$12218$bmrAn)
        (do . g$12217$bmrAn)
        (cond . g$12216$bmrAn)
        (let* . g$12215$bmrAn)
        (let . g$12214$bmrAn)
        (identifier-syntax . g$12213$bmrAn)
        (with-syntax . g$12212$bmrAn)
        (quasisyntax . g$12211$bmrAn)
        (quasiquote . g$12210$bmrAn)
        (syntax-rules . g$12209$bmrAn)
        (let-values . g$12205$bmrAn)
        (let*-values . g$12204$bmrAn)
        (record-constructor-descriptor . g$12203$bmrAn)
        (record-type-descriptor . g$12202$bmrAn)
        (case . g$12200$bmrAn)
        (unless . g$12198$bmrAn)
        (when . g$12197$bmrAn)
        (if . g$12196$bmrAn)
        (letrec* . g$12195$bmrAn)
        (letrec . g$12194$bmrAn)
        (case-lambda . g$12192$bmrAn)
        (lambda . g$12191$bmrAn)
        (syntax . g$12190$bmrAn)
        (syntax-case . g$12189$bmrAn)
        (quote . g$12188$bmrAn)
        (letrec-syntax . g$12186$bmrAn)
        (let-syntax . g$12185$bmrAn)
        (set! . g$12184$bmrAn)
        (begin . g$12180$bmrAn)
        (define-syntax . g$12178$bmrAn)
        (define . g$12177$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12778$bmrAn
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$9164$bmrAn)
        (scheme-report-environment . g$9137$bmrAn)
        (quotient . g$6911$bmrAn)
        (null-environment . g$9136$bmrAn)
        (remainder . g$6912$bmrAn)
        (modulo . g$6913$bmrAn)
        (inexact->exact . g$6908$bmrAn)
        (force . g$6915$bmrAn)
        (exact->inexact . g$6909$bmrAn)
        (delay . g$12221$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12779$bmrAn
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$12217$bmrAn)
        (unless . g$12198$bmrAn)
        (when . g$12197$bmrAn)
        (case-lambda . g$12192$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12780$bmrAn
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$9139$bmrAn) (environment . g$9135$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12781$bmrAn
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$12551$bmrAn) (set-car! . g$12550$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12782$bmrAn
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$12553$bmrAn) (string-set! . g$12552$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12783$bmrAn
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$12554$bmrAn) (command-line . g$12141$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12784$bmrAn
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$8759$bmrAn)
        (identifier? . g$9158$bmrAn)
        (generate-temporaries . g$9147$bmrAn)
        (free-identifier=? . g$9148$bmrAn)
        (syntax->datum . g$9160$bmrAn)
        (datum->syntax . g$9159$bmrAn)
        (bound-identifier=? . g$9149$bmrAn)
        (syntax-violation . g$9157$bmrAn)
        (unsyntax-splicing . g$12231$bmrAn)
        (unsyntax . g$12230$bmrAn)
        (_ . g$12227$bmrAn)
        (... . g$12224$bmrAn)
        (with-syntax . g$12212$bmrAn)
        (quasisyntax . g$12211$bmrAn)
        (syntax . g$12190$bmrAn)
        (syntax-case . g$12189$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12785$bmrAn
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6566$bmrAn)
        (file-exists? . g$6565$bmrAn)
        (make-i/o-write-error . g$7238$bmrAn)
        (make-i/o-read-error . g$7224$bmrAn)
        (make-i/o-port-error . g$7343$bmrAn)
        (make-i/o-invalid-position-error . g$7253$bmrAn)
        (make-i/o-filename-error . g$7270$bmrAn)
        (make-i/o-file-protection-error . g$7286$bmrAn)
        (make-i/o-file-is-read-only-error . g$7300$bmrAn)
        (make-i/o-file-does-not-exist-error . g$7328$bmrAn)
        (make-i/o-file-already-exists-error . g$7314$bmrAn)
        (make-i/o-error . g$7210$bmrAn)
        (i/o-write-error? . g$7239$bmrAn)
        (i/o-read-error? . g$7225$bmrAn)
        (i/o-port-error? . g$7345$bmrAn)
        (i/o-invalid-position-error? . g$7255$bmrAn)
        (i/o-error-position . g$7256$bmrAn)
        (i/o-filename-error? . g$7272$bmrAn)
        (i/o-file-protection-error? . g$7287$bmrAn)
        (i/o-file-is-read-only-error? . g$7301$bmrAn)
        (i/o-file-does-not-exist-error? . g$7329$bmrAn)
        (i/o-file-already-exists-error? . g$7315$bmrAn)
        (i/o-error? . g$7211$bmrAn)
        (i/o-error-port . g$7346$bmrAn)
        (i/o-error-filename . g$7273$bmrAn)
        (&i/o-port . g$12277$bmrAn)
        (&i/o-file-does-not-exist . g$12276$bmrAn)
        (&i/o-file-already-exists . g$12275$bmrAn)
        (&i/o-file-is-read-only . g$12274$bmrAn)
        (&i/o-file-protection . g$12273$bmrAn)
        (&i/o-filename . g$12272$bmrAn)
        (&i/o-invalid-position . g$12271$bmrAn)
        (&i/o-write . g$12270$bmrAn)
        (&i/o-read . g$12269$bmrAn)
        (&i/o . g$12268$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12786$bmrAn
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$12641$bmrAn)
        (vector-sort . g$12640$bmrAn)
        (list-sort . g$6932$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12787$bmrAn
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$6018$bmrAn)
        (vector? . g$12420$bmrAn)
        (vector-set! . g$12419$bmrAn)
        (vector-ref . g$12418$bmrAn)
        (vector-map . g$12417$bmrAn)
        (vector-length . g$12416$bmrAn)
        (vector-for-each . g$12415$bmrAn)
        (vector-fill! . g$12414$bmrAn)
        (vector->list . g$12413$bmrAn)
        (vector . g$12412$bmrAn)
        (values . g$12411$bmrAn)
        (truncate . g$12410$bmrAn)
        (tan . g$12409$bmrAn)
        (symbol? . g$12408$bmrAn)
        (symbol=? . g$6064$bmrAn)
        (symbol->string . g$12407$bmrAn)
        (substring . g$12406$bmrAn)
        (string? . g$12405$bmrAn)
        (string>? . g$6061$bmrAn)
        (string>=? . g$6063$bmrAn)
        (string=? . g$6059$bmrAn)
        (string<? . g$6060$bmrAn)
        (string<=? . g$6062$bmrAn)
        (string-ref . g$12404$bmrAn)
        (string-length . g$12403$bmrAn)
        (string-for-each . g$12402$bmrAn)
        (string-copy . g$12401$bmrAn)
        (string-append . g$12400$bmrAn)
        (string->symbol . g$12399$bmrAn)
        (string->number . g$12398$bmrAn)
        (string->list . g$12397$bmrAn)
        (string . g$12396$bmrAn)
        (sqrt . g$12395$bmrAn)
        (sin . g$12394$bmrAn)
        (round . g$12393$bmrAn)
        (reverse . g$12392$bmrAn)
        (real? . g$12391$bmrAn)
        (real-valued? . g$12390$bmrAn)
        (real-part . g$12389$bmrAn)
        (rationalize . g$6105$bmrAn)
        (rational? . g$12388$bmrAn)
        (rational-valued? . g$12387$bmrAn)
        (procedure? . g$12386$bmrAn)
        (positive? . g$6016$bmrAn)
        (pair? . g$12385$bmrAn)
        (odd? . g$6020$bmrAn)
        (numerator . g$12384$bmrAn)
        (number? . g$12383$bmrAn)
        (number->string . g$12382$bmrAn)
        (null? . g$12381$bmrAn)
        (not . g$12380$bmrAn)
        (negative? . g$6017$bmrAn)
        (nan? . g$12379$bmrAn)
        (min . g$6022$bmrAn)
        (max . g$6021$bmrAn)
        (map . g$5870$bmrAn)
        (make-vector . g$12378$bmrAn)
        (make-string . g$12377$bmrAn)
        (make-rectangular . g$12376$bmrAn)
        (make-polar . g$12375$bmrAn)
        (magnitude . g$12374$bmrAn)
        (log . g$12373$bmrAn)
        (list? . g$12372$bmrAn)
        (list-tail . g$5850$bmrAn)
        (list-ref . g$5851$bmrAn)
        (list->vector . g$12371$bmrAn)
        (list->string . g$12370$bmrAn)
        (list . g$12369$bmrAn)
        (length . g$12368$bmrAn)
        (lcm . g$6024$bmrAn)
        (integer? . g$12367$bmrAn)
        (integer-valued? . g$12366$bmrAn)
        (integer->char . g$12365$bmrAn)
        (infinite? . g$12364$bmrAn)
        (inexact? . g$12363$bmrAn)
        (inexact . g$12362$bmrAn)
        (imag-part . g$12361$bmrAn)
        (gcd . g$6023$bmrAn)
        (for-each . g$5871$bmrAn)
        (floor . g$12360$bmrAn)
        (finite? . g$12359$bmrAn)
        (expt . g$12358$bmrAn)
        (exp . g$12357$bmrAn)
        (exact? . g$12356$bmrAn)
        (exact-integer-sqrt . g$12355$bmrAn)
        (exact . g$12354$bmrAn)
        (even? . g$6019$bmrAn)
        (error . g$12353$bmrAn)
        (eqv? . g$12352$bmrAn)
        (equal? . g$12351$bmrAn)
        (eq? . g$12350$bmrAn)
        (dynamic-wind . g$12349$bmrAn)
        (div0-and-mod0 . g$12348$bmrAn)
        (mod0 . g$12347$bmrAn)
        (div0 . g$12346$bmrAn)
        (div-and-mod . g$12345$bmrAn)
        (mod . g$12344$bmrAn)
        (div . g$12343$bmrAn)
        (denominator . g$12342$bmrAn)
        (cos . g$12341$bmrAn)
        (cons . g$12340$bmrAn)
        (complex? . g$12339$bmrAn)
        (char? . g$12338$bmrAn)
        (char>? . g$6102$bmrAn)
        (char>=? . g$6104$bmrAn)
        (char=? . g$6100$bmrAn)
        (char<? . g$6101$bmrAn)
        (char<=? . g$6103$bmrAn)
        (char->integer . g$12337$bmrAn)
        (ceiling . g$12336$bmrAn)
        (call-with-values . g$12335$bmrAn)
        (call/cc . g$12334$bmrAn)
        (call-with-current-continuation . g$12333$bmrAn)
        (cddddr . g$6015$bmrAn)
        (cdddar . g$6014$bmrAn)
        (cddadr . g$6013$bmrAn)
        (cddaar . g$6012$bmrAn)
        (cdaddr . g$6011$bmrAn)
        (cdadar . g$6010$bmrAn)
        (cdaadr . g$6009$bmrAn)
        (cdaaar . g$6008$bmrAn)
        (cadddr . g$6007$bmrAn)
        (caddar . g$6006$bmrAn)
        (cadadr . g$6005$bmrAn)
        (cadaar . g$6004$bmrAn)
        (caaddr . g$6003$bmrAn)
        (caadar . g$6002$bmrAn)
        (caaadr . g$6001$bmrAn)
        (caaaar . g$6000$bmrAn)
        (cdddr . g$5999$bmrAn)
        (cddar . g$5998$bmrAn)
        (cdadr . g$5997$bmrAn)
        (cdaar . g$5996$bmrAn)
        (caddr . g$5995$bmrAn)
        (cadar . g$5994$bmrAn)
        (caadr . g$5993$bmrAn)
        (caaar . g$5992$bmrAn)
        (cddr . g$5991$bmrAn)
        (cdar . g$5990$bmrAn)
        (cadr . g$5989$bmrAn)
        (caar . g$5988$bmrAn)
        (cdr . g$12332$bmrAn)
        (car . g$12331$bmrAn)
        (boolean? . g$12330$bmrAn)
        (boolean=? . g$6065$bmrAn)
        (atan . g$12329$bmrAn)
        (assertion-violation . g$12328$bmrAn)
        (asin . g$12327$bmrAn)
        (apply . g$12326$bmrAn)
        (append . g$12325$bmrAn)
        (angle . g$12324$bmrAn)
        (acos . g$12323$bmrAn)
        (abs . g$12322$bmrAn)
        (/ . g$12321$bmrAn)
        (* . g$12320$bmrAn)
        (- . g$12319$bmrAn)
        (+ . g$12318$bmrAn)
        (>= . g$12317$bmrAn)
        (> . g$12316$bmrAn)
        (= . g$12315$bmrAn)
        (<= . g$12314$bmrAn)
        (< . g$12313$bmrAn)
        (unquote-splicing . g$12229$bmrAn)
        (unquote . g$12228$bmrAn)
        (_ . g$12227$bmrAn)
        (else . g$12226$bmrAn)
        (=> . g$12225$bmrAn)
        (... . g$12224$bmrAn)
        (assert . g$12223$bmrAn)
        (or . g$12219$bmrAn)
        (and . g$12218$bmrAn)
        (cond . g$12216$bmrAn)
        (let* . g$12215$bmrAn)
        (let . g$12214$bmrAn)
        (identifier-syntax . g$12213$bmrAn)
        (quasiquote . g$12210$bmrAn)
        (syntax-rules . g$12209$bmrAn)
        (let-values . g$12205$bmrAn)
        (let*-values . g$12204$bmrAn)
        (case . g$12200$bmrAn)
        (if . g$12196$bmrAn)
        (letrec* . g$12195$bmrAn)
        (letrec . g$12194$bmrAn)
        (lambda . g$12191$bmrAn)
        (quote . g$12188$bmrAn)
        (letrec-syntax . g$12186$bmrAn)
        (let-syntax . g$12185$bmrAn)
        (set! . g$12184$bmrAn)
        (begin . g$12180$bmrAn)
        (define-syntax . g$12178$bmrAn)
        (define . g$12177$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12788$bmrAn
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$5875$bmrAn)
        (remv . g$5876$bmrAn)
        (remp . g$5856$bmrAn)
        (remq . g$5877$bmrAn)
        (partition . g$5855$bmrAn)
        (memv . g$5863$bmrAn)
        (memq . g$5862$bmrAn)
        (memp . g$5865$bmrAn)
        (member . g$5864$bmrAn)
        (exists . g$5869$bmrAn)
        (for-all . g$5868$bmrAn)
        (fold-right . g$5874$bmrAn)
        (fold-left . g$5873$bmrAn)
        (find . g$5854$bmrAn)
        (filter . g$5857$bmrAn)
        (cons* . g$5872$bmrAn)
        (assv . g$5859$bmrAn)
        (assq . g$5858$bmrAn)
        (assp . g$5861$bmrAn)
        (assoc . g$5860$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12789$bmrAn
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$7417$bmrAn)
        (call-with-input-file . g$7416$bmrAn)
        (write-char . g$7398$bmrAn)
        (write . g$12627$bmrAn)
        (with-output-to-file . g$7415$bmrAn)
        (with-input-from-file . g$7414$bmrAn)
        (read-char . g$7397$bmrAn)
        (read . g$12626$bmrAn)
        (peek-char . g$7396$bmrAn)
        (open-output-file . g$12625$bmrAn)
        (open-input-file . g$12624$bmrAn)
        (newline . g$7418$bmrAn)
        (display . g$12623$bmrAn)
        (close-output-port . g$12622$bmrAn)
        (close-input-port . g$12621$bmrAn)
        (eof-object? . g$12620$bmrAn)
        (eof-object . g$12619$bmrAn)
        (current-error-port . g$12618$bmrAn)
        (current-output-port . g$12617$bmrAn)
        (current-input-port . g$12616$bmrAn)
        (output-port? . g$12615$bmrAn)
        (input-port? . g$12614$bmrAn)
        (make-i/o-write-error . g$7238$bmrAn)
        (make-i/o-read-error . g$7224$bmrAn)
        (make-i/o-port-error . g$7343$bmrAn)
        (make-i/o-invalid-position-error . g$7253$bmrAn)
        (make-i/o-filename-error . g$7270$bmrAn)
        (make-i/o-file-protection-error . g$7286$bmrAn)
        (make-i/o-file-is-read-only-error . g$7300$bmrAn)
        (make-i/o-file-does-not-exist-error . g$7328$bmrAn)
        (make-i/o-file-already-exists-error . g$7314$bmrAn)
        (make-i/o-error . g$7210$bmrAn)
        (i/o-write-error? . g$7239$bmrAn)
        (i/o-read-error? . g$7225$bmrAn)
        (i/o-port-error? . g$7345$bmrAn)
        (i/o-invalid-position-error? . g$7255$bmrAn)
        (i/o-error-position . g$7256$bmrAn)
        (i/o-filename-error? . g$7272$bmrAn)
        (i/o-file-protection-error? . g$7287$bmrAn)
        (i/o-file-is-read-only-error? . g$7301$bmrAn)
        (i/o-file-does-not-exist-error? . g$7329$bmrAn)
        (i/o-file-already-exists-error? . g$7315$bmrAn)
        (i/o-error? . g$7211$bmrAn)
        (i/o-error-port . g$7346$bmrAn)
        (i/o-error-filename . g$7273$bmrAn)
        (&i/o-port . g$12277$bmrAn)
        (&i/o-file-does-not-exist . g$12276$bmrAn)
        (&i/o-file-already-exists . g$12275$bmrAn)
        (&i/o-file-is-read-only . g$12274$bmrAn)
        (&i/o-file-protection . g$12273$bmrAn)
        (&i/o-filename . g$12272$bmrAn)
        (&i/o-invalid-position . g$12271$bmrAn)
        (&i/o-write . g$12270$bmrAn)
        (&i/o-read . g$12269$bmrAn)
        (&i/o . g$12268$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12790$bmrAn
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$12574$bmrAn)
        (utf32->string . g$12541$bmrAn)
        (utf16->string . g$12540$bmrAn)
        (utf8->string . g$12539$bmrAn)
        (uint-list->bytevector . g$12538$bmrAn)
        (u8-list->bytevector . g$12537$bmrAn)
        (string->utf8 . g$12536$bmrAn)
        (string->utf32 . g$12535$bmrAn)
        (string->utf16 . g$12534$bmrAn)
        (sint-list->bytevector . g$12533$bmrAn)
        (native-endianness . g$6572$bmrAn)
        (bytevector? . g$12532$bmrAn)
        (bytevector=? . g$12531$bmrAn)
        (bytevector-uint-set! . g$12530$bmrAn)
        (bytevector-uint-ref . g$12529$bmrAn)
        (bytevector-u8-set! . g$12528$bmrAn)
        (bytevector-u8-ref . g$12527$bmrAn)
        (bytevector-u64-set! . g$6593$bmrAn)
        (bytevector-u64-ref . g$6589$bmrAn)
        (bytevector-u64-native-set! . g$6595$bmrAn)
        (bytevector-u64-native-ref . g$6591$bmrAn)
        (bytevector-u32-set! . g$6585$bmrAn)
        (bytevector-u32-ref . g$6581$bmrAn)
        (bytevector-u32-native-set! . g$6587$bmrAn)
        (bytevector-u32-native-ref . g$6583$bmrAn)
        (bytevector-u16-set! . g$6577$bmrAn)
        (bytevector-u16-ref . g$6573$bmrAn)
        (bytevector-u16-native-set! . g$6579$bmrAn)
        (bytevector-u16-native-ref . g$6575$bmrAn)
        (bytevector-sint-set! . g$12526$bmrAn)
        (bytevector-sint-ref . g$12525$bmrAn)
        (bytevector-s8-set! . g$12524$bmrAn)
        (bytevector-s8-ref . g$12523$bmrAn)
        (bytevector-s64-set! . g$6594$bmrAn)
        (bytevector-s64-ref . g$6590$bmrAn)
        (bytevector-s64-native-set! . g$6596$bmrAn)
        (bytevector-s64-native-ref . g$6592$bmrAn)
        (bytevector-s32-set! . g$6586$bmrAn)
        (bytevector-s32-ref . g$6582$bmrAn)
        (bytevector-s32-native-set! . g$6588$bmrAn)
        (bytevector-s32-native-ref . g$6584$bmrAn)
        (bytevector-s16-set! . g$6578$bmrAn)
        (bytevector-s16-ref . g$6574$bmrAn)
        (bytevector-s16-native-set! . g$6580$bmrAn)
        (bytevector-s16-native-ref . g$6576$bmrAn)
        (bytevector-length . g$12522$bmrAn)
        (bytevector-ieee-single-set! . g$12521$bmrAn)
        (bytevector-ieee-single-ref . g$12520$bmrAn)
        (bytevector-ieee-single-native-set! . g$6599$bmrAn)
        (bytevector-ieee-single-native-ref . g$6597$bmrAn)
        (bytevector-ieee-double-set! . g$12519$bmrAn)
        (bytevector-ieee-double-ref . g$12518$bmrAn)
        (bytevector-ieee-double-native-set! . g$6600$bmrAn)
        (bytevector-ieee-double-native-ref . g$6598$bmrAn)
        (bytevector-fill! . g$12517$bmrAn)
        (bytevector-copy! . g$12516$bmrAn)
        (bytevector-copy . g$12515$bmrAn)
        (bytevector->uint-list . g$12514$bmrAn)
        (bytevector->u8-list . g$12513$bmrAn)
        (bytevector->sint-list . g$12512$bmrAn)
        (endianness . g$12222$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12791$bmrAn
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12677$bmrAn)
        (string-titlecase . g$12676$bmrAn)
        (string-normalize-nfkd . g$12675$bmrAn)
        (string-normalize-nfkc . g$12674$bmrAn)
        (string-normalize-nfd . g$12673$bmrAn)
        (string-normalize-nfc . g$12672$bmrAn)
        (string-foldcase . g$12671$bmrAn)
        (string-downcase . g$12670$bmrAn)
        (string-ci>? . g$6992$bmrAn)
        (string-ci>=? . g$6994$bmrAn)
        (string-ci=? . g$6990$bmrAn)
        (string-ci<? . g$6991$bmrAn)
        (string-ci<=? . g$6993$bmrAn)
        (char-whitespace? . g$12669$bmrAn)
        (char-upper-case? . g$12668$bmrAn)
        (char-title-case? . g$12667$bmrAn)
        (char-numeric? . g$12666$bmrAn)
        (char-lower-case? . g$12665$bmrAn)
        (char-general-category . g$12664$bmrAn)
        (char-upcase . g$12663$bmrAn)
        (char-titlecase . g$12662$bmrAn)
        (char-foldcase . g$12661$bmrAn)
        (char-downcase . g$12660$bmrAn)
        (char-ci>? . g$7031$bmrAn)
        (char-ci>=? . g$7033$bmrAn)
        (char-ci=? . g$7029$bmrAn)
        (char-ci<? . g$7030$bmrAn)
        (char-ci<=? . g$7032$bmrAn)
        (char-alphabetic? . g$12659$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12792$bmrAn
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$12549$bmrAn)
        (raise-continuable . g$12548$bmrAn)
        (raise . g$12547$bmrAn)
        (guard . g$12237$bmrAn)
        (else . g$12226$bmrAn)
        (=> . g$12225$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12793$bmrAn
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7093$bmrAn)
        (bitwise-reverse-bit-field . g$12430$bmrAn)
        (bitwise-length . g$12429$bmrAn)
        (bitwise-if . g$7087$bmrAn)
        (bitwise-first-bit-set . g$12428$bmrAn)
        (bitwise-copy-bit-field . g$7090$bmrAn)
        (bitwise-copy-bit . g$7088$bmrAn)
        (bitwise-bit-set? . g$12427$bmrAn)
        (bitwise-bit-field . g$7089$bmrAn)
        (bitwise-bit-count . g$12426$bmrAn)
        (bitwise-xor . g$12425$bmrAn)
        (bitwise-ior . g$12424$bmrAn)
        (bitwise-and . g$12423$bmrAn)
        (bitwise-not . g$12422$bmrAn)
        (bitwise-arithmetic-shift-right . g$7092$bmrAn)
        (bitwise-arithmetic-shift-left . g$7091$bmrAn)
        (bitwise-arithmetic-shift . g$12421$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12794$bmrAn
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$12465$bmrAn)
        (fxxor . g$12464$bmrAn)
        (fxrotate-bit-field . g$7128$bmrAn)
        (fxreverse-bit-field . g$12463$bmrAn)
        (fxpositive? . g$12462$bmrAn)
        (fxodd? . g$12461$bmrAn)
        (fxnot . g$12460$bmrAn)
        (fxnegative? . g$12459$bmrAn)
        (fxmod0 . g$12458$bmrAn)
        (fxmod . g$12457$bmrAn)
        (fxmin . g$12456$bmrAn)
        (fxmax . g$12455$bmrAn)
        (fxlength . g$12454$bmrAn)
        (fxior . g$12453$bmrAn)
        (fxif . g$7122$bmrAn)
        (fxfirst-bit-set . g$12452$bmrAn)
        (fxeven? . g$12451$bmrAn)
        (fxdiv0-and-mod0 . g$12450$bmrAn)
        (fxdiv0 . g$12449$bmrAn)
        (fxdiv-and-mod . g$12448$bmrAn)
        (fxdiv . g$12447$bmrAn)
        (fxcopy-bit-field . g$7125$bmrAn)
        (fxcopy-bit . g$7123$bmrAn)
        (fxbit-set? . g$12446$bmrAn)
        (fxbit-field . g$7124$bmrAn)
        (fxbit-count . g$12445$bmrAn)
        (fxarithmetic-shift-right . g$7127$bmrAn)
        (fxarithmetic-shift-left . g$7126$bmrAn)
        (fxarithmetic-shift . g$12444$bmrAn)
        (fxand . g$12443$bmrAn)
        (fx>? . g$12442$bmrAn)
        (fx>=? . g$12441$bmrAn)
        (fx=? . g$12440$bmrAn)
        (fx<? . g$12439$bmrAn)
        (fx<=? . g$12438$bmrAn)
        (fx-/carry . g$7120$bmrAn)
        (fx- . g$12437$bmrAn)
        (fx+/carry . g$7121$bmrAn)
        (fx+ . g$12436$bmrAn)
        (fx*/carry . g$7119$bmrAn)
        (fx* . g$12435$bmrAn)
        (greatest-fixnum . g$12434$bmrAn)
        (least-fixnum . g$12433$bmrAn)
        (fixnum-width . g$12432$bmrAn)
        (fixnum? . g$12431$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12795$bmrAn
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7196$bmrAn)
        (no-infinities-violation? . g$7182$bmrAn)
        (make-no-nans-violation . g$7195$bmrAn)
        (make-no-infinities-violation . g$7181$bmrAn)
        (real->flonum . g$12511$bmrAn)
        (flzero? . g$12510$bmrAn)
        (fltruncate . g$12509$bmrAn)
        (fltan . g$12508$bmrAn)
        (flsqrt . g$12507$bmrAn)
        (flsin . g$12506$bmrAn)
        (flround . g$12505$bmrAn)
        (flpositive? . g$12504$bmrAn)
        (flonum? . g$12503$bmrAn)
        (flodd? . g$12502$bmrAn)
        (flnumerator . g$12501$bmrAn)
        (flnegative? . g$12500$bmrAn)
        (flnan? . g$12499$bmrAn)
        (flmod0 . g$12498$bmrAn)
        (flmod . g$12497$bmrAn)
        (flmin . g$12496$bmrAn)
        (flmax . g$12495$bmrAn)
        (fllog . g$12494$bmrAn)
        (flinteger? . g$12493$bmrAn)
        (flinfinite? . g$12492$bmrAn)
        (flfloor . g$12491$bmrAn)
        (flfinite? . g$12490$bmrAn)
        (flexpt . g$12489$bmrAn)
        (flexp . g$12488$bmrAn)
        (fleven? . g$12487$bmrAn)
        (fldiv0-and-mod0 . g$12486$bmrAn)
        (fldiv0 . g$12485$bmrAn)
        (fldiv-and-mod . g$12484$bmrAn)
        (fldiv . g$12483$bmrAn)
        (fldenominator . g$12482$bmrAn)
        (flcos . g$12481$bmrAn)
        (flceiling . g$12480$bmrAn)
        (flatan . g$12479$bmrAn)
        (flasin . g$12478$bmrAn)
        (flacos . g$12477$bmrAn)
        (flabs . g$12476$bmrAn)
        (fl>? . g$12475$bmrAn)
        (fl>=? . g$12474$bmrAn)
        (fl=? . g$12473$bmrAn)
        (fl<? . g$12472$bmrAn)
        (fl<=? . g$12471$bmrAn)
        (fl/ . g$12470$bmrAn)
        (fl- . g$12469$bmrAn)
        (fl+ . g$12468$bmrAn)
        (fl* . g$12467$bmrAn)
        (fixnum->flonum . g$12466$bmrAn)
        (&no-nans . g$12281$bmrAn)
        (&no-infinities . g$12280$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12796$bmrAn
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$12639$bmrAn)
        (string-ci-hash . g$12638$bmrAn)
        (string-hash . g$12637$bmrAn)
        (equal-hash . g$12636$bmrAn)
        (hashtable-equivalence-function . g$12635$bmrAn)
        (make-hashtable . g$12634$bmrAn)
        (hashtable-hash-function . g$12633$bmrAn)
        (make-eqv-hashtable . g$6534$bmrAn)
        (make-eq-hashtable . g$6533$bmrAn)
        (hashtable? . g$12632$bmrAn)
        (hashtable-update! . g$6540$bmrAn)
        (hashtable-size . g$6535$bmrAn)
        (hashtable-set! . g$6537$bmrAn)
        (hashtable-ref . g$6536$bmrAn)
        (hashtable-mutable? . g$12631$bmrAn)
        (hashtable-keys . g$12630$bmrAn)
        (hashtable-entries . g$12629$bmrAn)
        (hashtable-delete! . g$6538$bmrAn)
        (hashtable-copy . g$12628$bmrAn)
        (hashtable-contains? . g$6539$bmrAn)
        (hashtable-clear! . g$6541$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12797$bmrAn
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$12620$bmrAn)
        (eof-object . g$12619$bmrAn)
        (current-error-port . g$12618$bmrAn)
        (current-output-port . g$12617$bmrAn)
        (current-input-port . g$12616$bmrAn)
        (output-port? . g$12615$bmrAn)
        (input-port? . g$12614$bmrAn)
        (utf-8-codec . g$12613$bmrAn)
        (utf-16-codec . g$12612$bmrAn)
        (transcoder-error-handling-mode . g$12611$bmrAn)
        (transcoder-eol-style . g$12610$bmrAn)
        (transcoder-codec . g$12609$bmrAn)
        (transcoded-port . g$12608$bmrAn)
        (textual-port? . g$12607$bmrAn)
        (string->bytevector . g$12606$bmrAn)
        (standard-output-port . g$12605$bmrAn)
        (standard-input-port . g$12604$bmrAn)
        (standard-error-port . g$12603$bmrAn)
        (set-port-position! . g$12602$bmrAn)
        (put-u8 . g$12601$bmrAn)
        (put-string . g$12600$bmrAn)
        (put-datum . g$12599$bmrAn)
        (put-char . g$12598$bmrAn)
        (put-bytevector . g$12597$bmrAn)
        (port? . g$7383$bmrAn)
        (port-transcoder . g$12596$bmrAn)
        (port-position . g$12595$bmrAn)
        (port-has-set-port-position!? . g$12594$bmrAn)
        (port-has-port-position? . g$12593$bmrAn)
        (port-eof? . g$12592$bmrAn)
        (output-port-buffer-mode . g$12591$bmrAn)
        (open-string-output-port . g$7382$bmrAn)
        (open-string-input-port . g$12590$bmrAn)
        (open-file-output-port . g$12589$bmrAn)
        (open-file-input/output-port . g$12588$bmrAn)
        (open-file-input-port . g$12587$bmrAn)
        (open-bytevector-output-port . g$12586$bmrAn)
        (open-bytevector-input-port . g$12585$bmrAn)
        (native-transcoder . g$12584$bmrAn)
        (native-eol-style . g$12583$bmrAn)
        (make-transcoder . g$12582$bmrAn)
        (latin-1-codec . g$12581$bmrAn)
        (make-i/o-write-error . g$7238$bmrAn)
        (make-i/o-read-error . g$7224$bmrAn)
        (make-i/o-port-error . g$7343$bmrAn)
        (make-i/o-invalid-position-error . g$7253$bmrAn)
        (make-i/o-filename-error . g$7270$bmrAn)
        (make-i/o-file-protection-error . g$7286$bmrAn)
        (make-i/o-file-is-read-only-error . g$7300$bmrAn)
        (make-i/o-file-does-not-exist-error . g$7328$bmrAn)
        (make-i/o-file-already-exists-error . g$7314$bmrAn)
        (make-i/o-error . g$7210$bmrAn)
        (make-i/o-encoding-error . g$7374$bmrAn)
        (make-i/o-decoding-error . g$7359$bmrAn)
        (make-custom-textual-output-port . g$12580$bmrAn)
        (make-custom-textual-input/output-port . g$12579$bmrAn)
        (make-custom-textual-input-port . g$12578$bmrAn)
        (make-custom-binary-output-port . g$12577$bmrAn)
        (make-custom-binary-input/output-port . g$12576$bmrAn)
        (make-custom-binary-input-port . g$12575$bmrAn)
        (lookahead-u8 . g$12573$bmrAn)
        (lookahead-char . g$12572$bmrAn)
        (i/o-write-error? . g$7239$bmrAn)
        (i/o-read-error? . g$7225$bmrAn)
        (i/o-port-error? . g$7345$bmrAn)
        (i/o-invalid-position-error? . g$7255$bmrAn)
        (i/o-error-position . g$7256$bmrAn)
        (i/o-filename-error? . g$7272$bmrAn)
        (i/o-file-protection-error? . g$7287$bmrAn)
        (i/o-file-is-read-only-error? . g$7301$bmrAn)
        (i/o-file-does-not-exist-error? . g$7329$bmrAn)
        (i/o-file-already-exists-error? . g$7315$bmrAn)
        (i/o-error? . g$7211$bmrAn)
        (i/o-error-port . g$7346$bmrAn)
        (i/o-error-filename . g$7273$bmrAn)
        (i/o-encoding-error? . g$7376$bmrAn)
        (i/o-encoding-error-char . g$7377$bmrAn)
        (i/o-decoding-error? . g$7360$bmrAn)
        (get-u8 . g$12571$bmrAn)
        (get-string-n! . g$12570$bmrAn)
        (get-string-n . g$12569$bmrAn)
        (get-string-all . g$12568$bmrAn)
        (get-line . g$12567$bmrAn)
        (get-datum . g$12566$bmrAn)
        (get-char . g$12565$bmrAn)
        (get-bytevector-some . g$12564$bmrAn)
        (get-bytevector-n! . g$12563$bmrAn)
        (get-bytevector-n . g$12562$bmrAn)
        (get-bytevector-all . g$12561$bmrAn)
        (flush-output-port . g$12560$bmrAn)
        (close-port . g$12559$bmrAn)
        (call-with-string-output-port . g$7384$bmrAn)
        (call-with-port . g$7385$bmrAn)
        (call-with-bytevector-output-port . g$12558$bmrAn)
        (bytevector->string . g$12557$bmrAn)
        (buffer-mode? . g$12556$bmrAn)
        (binary-port? . g$12555$bmrAn)
        (&i/o-encoding . g$12279$bmrAn)
        (&i/o-decoding . g$12278$bmrAn)
        (&i/o-port . g$12277$bmrAn)
        (&i/o-file-does-not-exist . g$12276$bmrAn)
        (&i/o-file-already-exists . g$12275$bmrAn)
        (&i/o-file-is-read-only . g$12274$bmrAn)
        (&i/o-file-protection . g$12273$bmrAn)
        (&i/o-filename . g$12272$bmrAn)
        (&i/o-invalid-position . g$12271$bmrAn)
        (&i/o-write . g$12270$bmrAn)
        (&i/o-read . g$12269$bmrAn)
        (&i/o . g$12268$bmrAn)
        (error-handling-mode . g$12241$bmrAn)
        (file-options . g$12240$bmrAn)
        (buffer-mode . g$12239$bmrAn)
        (eol-style . g$12238$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12798$bmrAn
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$7482$bmrAn)
        (enum-set=? . g$7489$bmrAn)
        (enum-set-universe . g$7483$bmrAn)
        (enum-set-union . g$7490$bmrAn)
        (enum-set-subset? . g$7488$bmrAn)
        (enum-set-projection . g$7494$bmrAn)
        (enum-set-member? . g$7487$bmrAn)
        (enum-set-intersection . g$7491$bmrAn)
        (enum-set-indexer . g$7484$bmrAn)
        (enum-set-difference . g$7492$bmrAn)
        (enum-set-constructor . g$7485$bmrAn)
        (enum-set-complement . g$7493$bmrAn)
        (enum-set->list . g$7486$bmrAn)
        (define-enumeration . g$12252$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12799$bmrAn
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6820$bmrAn)
        (warning? . g$6731$bmrAn)
        (violation? . g$6773$bmrAn)
        (undefined-violation? . g$6897$bmrAn)
        (syntax-violation? . g$6881$bmrAn)
        (syntax-violation-subform . g$6883$bmrAn)
        (syntax-violation-form . g$6882$bmrAn)
        (syntax-violation . g$9157$bmrAn)
        (simple-conditions . g$12546$bmrAn)
        (serious-condition? . g$6745$bmrAn)
        (non-continuable-violation? . g$6835$bmrAn)
        (message-condition? . g$6716$bmrAn)
        (make-who-condition . g$6818$bmrAn)
        (make-warning . g$6730$bmrAn)
        (make-violation . g$6772$bmrAn)
        (make-undefined-violation . g$6896$bmrAn)
        (make-syntax-violation . g$6878$bmrAn)
        (make-serious-condition . g$6744$bmrAn)
        (make-non-continuable-violation . g$6834$bmrAn)
        (make-message-condition . g$6714$bmrAn)
        (make-lexical-violation . g$6862$bmrAn)
        (make-irritants-condition . g$6801$bmrAn)
        (make-implementation-restriction-violation . g$6848$bmrAn)
        (make-error . g$6758$bmrAn)
        (make-assertion-violation . g$6786$bmrAn)
        (lexical-violation? . g$6863$bmrAn)
        (irritants-condition? . g$6803$bmrAn)
        (implementation-restriction-violation? . g$6849$bmrAn)
        (error? . g$6759$bmrAn)
        (condition-who . g$6821$bmrAn)
        (condition-predicate . g$12545$bmrAn)
        (condition-message . g$6717$bmrAn)
        (condition-irritants . g$6804$bmrAn)
        (condition-accessor . g$12544$bmrAn)
        (condition . g$12543$bmrAn)
        (assertion-violation? . g$6787$bmrAn)
        (condition? . g$12542$bmrAn)
        (&non-continuable . g$12267$bmrAn)
        (&undefined . g$12266$bmrAn)
        (&syntax . g$12265$bmrAn)
        (&lexical . g$12264$bmrAn)
        (&implementation-restriction . g$12263$bmrAn)
        (&who . g$12262$bmrAn)
        (&irritants . g$12261$bmrAn)
        (&assertion . g$12260$bmrAn)
        (&violation . g$12259$bmrAn)
        (&error . g$12258$bmrAn)
        (&serious . g$12257$bmrAn)
        (&warning . g$12256$bmrAn)
        (&message . g$12255$bmrAn)
        (&condition . g$12254$bmrAn)
        (define-condition-type . g$12253$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12800$bmrAn
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$12651$bmrAn)
        (record-type-uid . g$12650$bmrAn)
        (record-type-sealed? . g$12649$bmrAn)
        (record-type-parent . g$12648$bmrAn)
        (record-type-opaque? . g$12647$bmrAn)
        (record-type-name . g$12646$bmrAn)
        (record-type-generative? . g$12645$bmrAn)
        (record-type-field-names . g$12644$bmrAn)
        (record-rtd . g$12643$bmrAn)
        (record-field-mutable? . g$12642$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12801$bmrAn
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$12658$bmrAn)
        (record-predicate . g$12657$bmrAn)
        (record-mutator . g$12656$bmrAn)
        (record-constructor . g$12655$bmrAn)
        (record-accessor . g$12654$bmrAn)
        (make-record-type-descriptor . g$12653$bmrAn)
        (make-record-constructor-descriptor . g$12652$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12802$bmrAn
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$12251$bmrAn)
        (parent-rtd . g$12250$bmrAn)
        (nongenerative . g$12249$bmrAn)
        (opaque . g$12248$bmrAn)
        (sealed . g$12247$bmrAn)
        (protocol . g$12246$bmrAn)
        (parent . g$12245$bmrAn)
        (immutable . g$12244$bmrAn)
        (mutable . g$12243$bmrAn)
        (fields . g$12242$bmrAn)
        (record-constructor-descriptor . g$12203$bmrAn)
        (record-type-descriptor . g$12202$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7511$bmrAn
      'g$12803$bmrAn
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$9029$bmrAn)
        (&no-nans-rcd . g$12767$bmrAn)
        (&no-nans-rtd . g$12766$bmrAn)
        (&no-infinities-rcd . g$12765$bmrAn)
        (&no-infinities-rtd . g$12764$bmrAn)
        (&i/o-encoding-rcd . g$12763$bmrAn)
        (&i/o-encoding-rtd . g$12762$bmrAn)
        (&i/o-decoding-rcd . g$12761$bmrAn)
        (&i/o-decoding-rtd . g$12760$bmrAn)
        (&i/o-port-rcd . g$12759$bmrAn)
        (&i/o-port-rtd . g$12758$bmrAn)
        (&i/o-file-does-not-exist-rcd . g$12757$bmrAn)
        (&i/o-file-does-not-exist-rtd . g$12756$bmrAn)
        (&i/o-file-already-exists-rcd . g$12755$bmrAn)
        (&i/o-file-already-exists-rtd . g$12754$bmrAn)
        (&i/o-file-is-read-only-rcd . g$12753$bmrAn)
        (&i/o-file-is-read-only-rtd . g$12752$bmrAn)
        (&i/o-file-protection-rcd . g$12751$bmrAn)
        (&i/o-file-protection-rtd . g$12750$bmrAn)
        (&i/o-filename-rcd . g$12749$bmrAn)
        (&i/o-filename-rtd . g$12748$bmrAn)
        (&i/o-invalid-position-rcd . g$12747$bmrAn)
        (&i/o-invalid-position-rtd . g$12746$bmrAn)
        (&i/o-write-rcd . g$12745$bmrAn)
        (&i/o-write-rtd . g$12744$bmrAn)
        (&i/o-read-rcd . g$12743$bmrAn)
        (&i/o-read-rtd . g$12742$bmrAn)
        (&i/o-rcd . g$12741$bmrAn)
        (&i/o-rtd . g$12740$bmrAn)
        (&undefined-rcd . g$12739$bmrAn)
        (&undefined-rtd . g$12738$bmrAn)
        (&syntax-rcd . g$12737$bmrAn)
        (&syntax-rtd . g$12736$bmrAn)
        (&lexical-rcd . g$12735$bmrAn)
        (&lexical-rtd . g$12734$bmrAn)
        (&implementation-restriction-rcd . g$12733$bmrAn)
        (&implementation-restriction-rtd . g$12732$bmrAn)
        (&non-continuable-rcd . g$12731$bmrAn)
        (&non-continuable-rtd . g$12730$bmrAn)
        (&who-rcd . g$12729$bmrAn)
        (&who-rtd . g$12728$bmrAn)
        (&irritants-rcd . g$12727$bmrAn)
        (&irritants-rtd . g$12726$bmrAn)
        (&assertion-rcd . g$12725$bmrAn)
        (&assertion-rtd . g$12724$bmrAn)
        (&violation-rcd . g$12723$bmrAn)
        (&violation-rtd . g$12722$bmrAn)
        (&error-rcd . g$12721$bmrAn)
        (&error-rtd . g$12720$bmrAn)
        (&serious-rcd . g$12719$bmrAn)
        (&serious-rtd . g$12718$bmrAn)
        (&warning-rcd . g$12717$bmrAn)
        (&warning-rtd . g$12716$bmrAn)
        (&message-rcd . g$12715$bmrAn)
        (&message-rtd . g$12714$bmrAn)
        (&condition-rcd . g$12713$bmrAn)
        (&condition-rtd . g$12712$bmrAn)
        (library-letrec* . g$12711$bmrAn)
        (annotation-stripped . g$12710$bmrAn)
        (annotation-source . g$12709$bmrAn)
        (annotation-expression . g$12708$bmrAn)
        (annotation? . g$12707$bmrAn)
        (read-annotated . g$12706$bmrAn)
        (tanh . g$12705$bmrAn)
        (cosh . g$12704$bmrAn)
        (sinh . g$12703$bmrAn)
        (make-guid . g$12702$bmrAn)
        (unspecified? . g$12701$bmrAn)
        (make-list . g$5853$bmrAn)
        (last-pair . g$5852$bmrAn)
        (load-r5rs . g$12700$bmrAn)
        (license . g$12699$bmrAn)
        (stacktrace . g$12698$bmrAn)
        (ironscheme-build . g$12145$bmrAn)
        (define-clr-class-internal . g$12697$bmrAn)
        (clr-field-set!-internal . g$12696$bmrAn)
        (clr-field-get-internal . g$12695$bmrAn)
        (clr-cast-internal . g$12694$bmrAn)
        (clr-call-internal . g$12693$bmrAn)
        (clr-new-internal . g$12692$bmrAn)
        (clr-new-array-internal . g$12691$bmrAn)
        (clr-is-internal . g$12690$bmrAn)
        (clr-reference-internal . g$12689$bmrAn)
        (clr-using-internal . g$12688$bmrAn)
        (syntax-error . g$9154$bmrAn)
        (syntax-dispatch . g$9024$bmrAn)
        (compile-core . g$12687$bmrAn)
        (eval-core . g$12686$bmrAn)
        (set-symbol-value! . g$12685$bmrAn)
        (symbol-value . g$12684$bmrAn)
        (ungensym . g$12683$bmrAn)
        (gensym . g$12682$bmrAn)
        (void . g$12681$bmrAn)
        (load-serialized-library . g$12680$bmrAn)
        (serialize-library . g$12679$bmrAn)
        (compile-system-libraries . g$12147$bmrAn)
        (compile->closure . g$12149$bmrAn)
        (compile . g$12148$bmrAn)
        (load . g$12144$bmrAn)
        (interaction-environment . g$9164$bmrAn)
        (char-ready? . g$12678$bmrAn)
        (string-upcase . g$12677$bmrAn)
        (string-titlecase . g$12676$bmrAn)
        (string-normalize-nfkd . g$12675$bmrAn)
        (string-normalize-nfkc . g$12674$bmrAn)
        (string-normalize-nfd . g$12673$bmrAn)
        (string-normalize-nfc . g$12672$bmrAn)
        (string-foldcase . g$12671$bmrAn)
        (string-downcase . g$12670$bmrAn)
        (string-ci>? . g$6992$bmrAn)
        (string-ci>=? . g$6994$bmrAn)
        (string-ci=? . g$6990$bmrAn)
        (string-ci<? . g$6991$bmrAn)
        (string-ci<=? . g$6993$bmrAn)
        (char-whitespace? . g$12669$bmrAn)
        (char-upper-case? . g$12668$bmrAn)
        (char-title-case? . g$12667$bmrAn)
        (char-numeric? . g$12666$bmrAn)
        (char-lower-case? . g$12665$bmrAn)
        (char-general-category . g$12664$bmrAn)
        (char-upcase . g$12663$bmrAn)
        (char-titlecase . g$12662$bmrAn)
        (char-foldcase . g$12661$bmrAn)
        (char-downcase . g$12660$bmrAn)
        (char-ci>? . g$7031$bmrAn)
        (char-ci>=? . g$7033$bmrAn)
        (char-ci=? . g$7029$bmrAn)
        (char-ci<? . g$7030$bmrAn)
        (char-ci<=? . g$7032$bmrAn)
        (char-alphabetic? . g$12659$bmrAn)
        (variable-transformer-procedure . g$8761$bmrAn)
        (variable-transformer? . g$8760$bmrAn)
        (make-variable-transformer . g$8759$bmrAn)
        (identifier? . g$9158$bmrAn)
        (generate-temporaries . g$9147$bmrAn)
        (free-identifier=? . g$9148$bmrAn)
        (syntax->datum . g$9160$bmrAn)
        (datum->syntax . g$9159$bmrAn)
        (bound-identifier=? . g$9149$bmrAn)
        (record-type-descriptor? . g$12658$bmrAn)
        (record-predicate . g$12657$bmrAn)
        (record-mutator . g$12656$bmrAn)
        (record-constructor . g$12655$bmrAn)
        (record-accessor . g$12654$bmrAn)
        (make-record-type-descriptor . g$12653$bmrAn)
        (make-record-constructor-descriptor . g$12652$bmrAn)
        (record? . g$12651$bmrAn)
        (record-type-uid . g$12650$bmrAn)
        (record-type-sealed? . g$12649$bmrAn)
        (record-type-parent . g$12648$bmrAn)
        (record-type-opaque? . g$12647$bmrAn)
        (record-type-name . g$12646$bmrAn)
        (record-type-generative? . g$12645$bmrAn)
        (record-type-field-names . g$12644$bmrAn)
        (record-rtd . g$12643$bmrAn)
        (record-field-mutable? . g$12642$bmrAn)
        (delete-file . g$6566$bmrAn)
        (file-exists? . g$6565$bmrAn)
        (vector-sort! . g$12641$bmrAn)
        (vector-sort . g$12640$bmrAn)
        (list-sort . g$6932$bmrAn)
        (symbol-hash . g$12639$bmrAn)
        (string-ci-hash . g$12638$bmrAn)
        (string-hash . g$12637$bmrAn)
        (equal-hash . g$12636$bmrAn)
        (hashtable-equivalence-function . g$12635$bmrAn)
        (make-hashtable . g$12634$bmrAn)
        (hashtable-hash-function . g$12633$bmrAn)
        (make-eqv-hashtable . g$6534$bmrAn)
        (make-eq-hashtable . g$6533$bmrAn)
        (hashtable? . g$12632$bmrAn)
        (hashtable-update! . g$6540$bmrAn)
        (hashtable-size . g$6535$bmrAn)
        (hashtable-set! . g$6537$bmrAn)
        (hashtable-ref . g$6536$bmrAn)
        (hashtable-mutable? . g$12631$bmrAn)
        (hashtable-keys . g$12630$bmrAn)
        (hashtable-entries . g$12629$bmrAn)
        (hashtable-delete! . g$6538$bmrAn)
        (hashtable-copy . g$12628$bmrAn)
        (hashtable-contains? . g$6539$bmrAn)
        (hashtable-clear! . g$6541$bmrAn)
        (call-with-output-file . g$7417$bmrAn)
        (call-with-input-file . g$7416$bmrAn)
        (write-char . g$7398$bmrAn)
        (write . g$12627$bmrAn)
        (with-output-to-file . g$7415$bmrAn)
        (with-input-from-file . g$7414$bmrAn)
        (read-char . g$7397$bmrAn)
        (read . g$12626$bmrAn)
        (peek-char . g$7396$bmrAn)
        (open-output-file . g$12625$bmrAn)
        (open-input-file . g$12624$bmrAn)
        (newline . g$7418$bmrAn)
        (display . g$12623$bmrAn)
        (close-output-port . g$12622$bmrAn)
        (close-input-port . g$12621$bmrAn)
        (eof-object? . g$12620$bmrAn)
        (eof-object . g$12619$bmrAn)
        (current-error-port . g$12618$bmrAn)
        (current-output-port . g$12617$bmrAn)
        (current-input-port . g$12616$bmrAn)
        (output-port? . g$12615$bmrAn)
        (input-port? . g$12614$bmrAn)
        (utf-8-codec . g$12613$bmrAn)
        (utf-16-codec . g$12612$bmrAn)
        (transcoder-error-handling-mode . g$12611$bmrAn)
        (transcoder-eol-style . g$12610$bmrAn)
        (transcoder-codec . g$12609$bmrAn)
        (transcoded-port . g$12608$bmrAn)
        (textual-port? . g$12607$bmrAn)
        (string->bytevector . g$12606$bmrAn)
        (standard-output-port . g$12605$bmrAn)
        (standard-input-port . g$12604$bmrAn)
        (standard-error-port . g$12603$bmrAn)
        (set-port-position! . g$12602$bmrAn)
        (put-u8 . g$12601$bmrAn)
        (put-string . g$12600$bmrAn)
        (put-datum . g$12599$bmrAn)
        (put-char . g$12598$bmrAn)
        (put-bytevector . g$12597$bmrAn)
        (port? . g$7383$bmrAn)
        (port-transcoder . g$12596$bmrAn)
        (port-position . g$12595$bmrAn)
        (port-has-set-port-position!? . g$12594$bmrAn)
        (port-has-port-position? . g$12593$bmrAn)
        (port-eof? . g$12592$bmrAn)
        (output-port-buffer-mode . g$12591$bmrAn)
        (open-string-output-port . g$7382$bmrAn)
        (open-string-input-port . g$12590$bmrAn)
        (open-file-output-port . g$12589$bmrAn)
        (open-file-input/output-port . g$12588$bmrAn)
        (open-file-input-port . g$12587$bmrAn)
        (open-bytevector-output-port . g$12586$bmrAn)
        (open-bytevector-input-port . g$12585$bmrAn)
        (native-transcoder . g$12584$bmrAn)
        (native-eol-style . g$12583$bmrAn)
        (make-transcoder . g$12582$bmrAn)
        (latin-1-codec . g$12581$bmrAn)
        (make-i/o-write-error . g$7238$bmrAn)
        (make-i/o-read-error . g$7224$bmrAn)
        (make-i/o-port-error . g$7343$bmrAn)
        (make-i/o-invalid-position-error . g$7253$bmrAn)
        (make-i/o-filename-error . g$7270$bmrAn)
        (make-i/o-file-protection-error . g$7286$bmrAn)
        (make-i/o-file-is-read-only-error . g$7300$bmrAn)
        (make-i/o-file-does-not-exist-error . g$7328$bmrAn)
        (make-i/o-file-already-exists-error . g$7314$bmrAn)
        (make-i/o-error . g$7210$bmrAn)
        (make-i/o-encoding-error . g$7374$bmrAn)
        (make-i/o-decoding-error . g$7359$bmrAn)
        (make-custom-textual-output-port . g$12580$bmrAn)
        (make-custom-textual-input/output-port . g$12579$bmrAn)
        (make-custom-textual-input-port . g$12578$bmrAn)
        (make-custom-binary-output-port . g$12577$bmrAn)
        (make-custom-binary-input/output-port . g$12576$bmrAn)
        (make-custom-binary-input-port . g$12575$bmrAn)
        (make-bytevector . g$12574$bmrAn)
        (lookahead-u8 . g$12573$bmrAn)
        (lookahead-char . g$12572$bmrAn)
        (i/o-write-error? . g$7239$bmrAn)
        (i/o-read-error? . g$7225$bmrAn)
        (i/o-port-error? . g$7345$bmrAn)
        (i/o-invalid-position-error? . g$7255$bmrAn)
        (i/o-error-position . g$7256$bmrAn)
        (i/o-filename-error? . g$7272$bmrAn)
        (i/o-file-protection-error? . g$7287$bmrAn)
        (i/o-file-is-read-only-error? . g$7301$bmrAn)
        (i/o-file-does-not-exist-error? . g$7329$bmrAn)
        (i/o-file-already-exists-error? . g$7315$bmrAn)
        (i/o-error? . g$7211$bmrAn)
        (i/o-error-port . g$7346$bmrAn)
        (i/o-error-filename . g$7273$bmrAn)
        (i/o-encoding-error? . g$7376$bmrAn)
        (i/o-encoding-error-char . g$7377$bmrAn)
        (i/o-decoding-error? . g$7360$bmrAn)
        (get-u8 . g$12571$bmrAn)
        (get-string-n! . g$12570$bmrAn)
        (get-string-n . g$12569$bmrAn)
        (get-string-all . g$12568$bmrAn)
        (get-line . g$12567$bmrAn)
        (get-datum . g$12566$bmrAn)
        (get-char . g$12565$bmrAn)
        (get-bytevector-some . g$12564$bmrAn)
        (get-bytevector-n! . g$12563$bmrAn)
        (get-bytevector-n . g$12562$bmrAn)
        (get-bytevector-all . g$12561$bmrAn)
        (flush-output-port . g$12560$bmrAn)
        (close-port . g$12559$bmrAn)
        (call-with-string-output-port . g$7384$bmrAn)
        (call-with-port . g$7385$bmrAn)
        (call-with-bytevector-output-port . g$12558$bmrAn)
        (bytevector->string . g$12557$bmrAn)
        (buffer-mode? . g$12556$bmrAn)
        (binary-port? . g$12555$bmrAn)
        (scheme-report-environment . g$9137$bmrAn)
        (quotient . g$6911$bmrAn)
        (null-environment . g$9136$bmrAn)
        (remainder . g$6912$bmrAn)
        (modulo . g$6913$bmrAn)
        (inexact->exact . g$6908$bmrAn)
        (force . g$6915$bmrAn)
        (exact->inexact . g$6909$bmrAn)
        (exit . g$12554$bmrAn)
        (command-line . g$12141$bmrAn)
        (string-fill! . g$12553$bmrAn)
        (string-set! . g$12552$bmrAn)
        (set-cdr! . g$12551$bmrAn)
        (set-car! . g$12550$bmrAn)
        (remove . g$5875$bmrAn)
        (remv . g$5876$bmrAn)
        (remp . g$5856$bmrAn)
        (remq . g$5877$bmrAn)
        (partition . g$5855$bmrAn)
        (memv . g$5863$bmrAn)
        (memq . g$5862$bmrAn)
        (memp . g$5865$bmrAn)
        (member . g$5864$bmrAn)
        (exists . g$5869$bmrAn)
        (for-all . g$5868$bmrAn)
        (fold-right . g$5874$bmrAn)
        (fold-left . g$5873$bmrAn)
        (find . g$5854$bmrAn)
        (filter . g$5857$bmrAn)
        (cons* . g$5872$bmrAn)
        (assv . g$5859$bmrAn)
        (assq . g$5858$bmrAn)
        (assp . g$5861$bmrAn)
        (assoc . g$5860$bmrAn)
        (with-exception-handler . g$12549$bmrAn)
        (raise-continuable . g$12548$bmrAn)
        (raise . g$12547$bmrAn)
        (eval . g$9139$bmrAn)
        (environment . g$9135$bmrAn)
        (make-enumeration . g$7482$bmrAn)
        (enum-set=? . g$7489$bmrAn)
        (enum-set-universe . g$7483$bmrAn)
        (enum-set-union . g$7490$bmrAn)
        (enum-set-subset? . g$7488$bmrAn)
        (enum-set-projection . g$7494$bmrAn)
        (enum-set-member? . g$7487$bmrAn)
        (enum-set-intersection . g$7491$bmrAn)
        (enum-set-indexer . g$7484$bmrAn)
        (enum-set-difference . g$7492$bmrAn)
        (enum-set-constructor . g$7485$bmrAn)
        (enum-set-complement . g$7493$bmrAn)
        (enum-set->list . g$7486$bmrAn)
        (who-condition? . g$6820$bmrAn)
        (warning? . g$6731$bmrAn)
        (violation? . g$6773$bmrAn)
        (undefined-violation? . g$6897$bmrAn)
        (syntax-violation? . g$6881$bmrAn)
        (syntax-violation-subform . g$6883$bmrAn)
        (syntax-violation-form . g$6882$bmrAn)
        (syntax-violation . g$9157$bmrAn)
        (simple-conditions . g$12546$bmrAn)
        (serious-condition? . g$6745$bmrAn)
        (non-continuable-violation? . g$6835$bmrAn)
        (message-condition? . g$6716$bmrAn)
        (make-who-condition . g$6818$bmrAn)
        (make-warning . g$6730$bmrAn)
        (make-violation . g$6772$bmrAn)
        (make-undefined-violation . g$6896$bmrAn)
        (make-syntax-violation . g$6878$bmrAn)
        (make-serious-condition . g$6744$bmrAn)
        (make-non-continuable-violation . g$6834$bmrAn)
        (make-message-condition . g$6714$bmrAn)
        (make-lexical-violation . g$6862$bmrAn)
        (make-irritants-condition . g$6801$bmrAn)
        (make-implementation-restriction-violation . g$6848$bmrAn)
        (make-error . g$6758$bmrAn)
        (make-assertion-violation . g$6786$bmrAn)
        (lexical-violation? . g$6863$bmrAn)
        (irritants-condition? . g$6803$bmrAn)
        (implementation-restriction-violation? . g$6849$bmrAn)
        (error? . g$6759$bmrAn)
        (condition-who . g$6821$bmrAn)
        (condition-predicate . g$12545$bmrAn)
        (condition-message . g$6717$bmrAn)
        (condition-irritants . g$6804$bmrAn)
        (condition-accessor . g$12544$bmrAn)
        (condition . g$12543$bmrAn)
        (assertion-violation? . g$6787$bmrAn)
        (condition? . g$12542$bmrAn)
        (utf32->string . g$12541$bmrAn)
        (utf16->string . g$12540$bmrAn)
        (utf8->string . g$12539$bmrAn)
        (uint-list->bytevector . g$12538$bmrAn)
        (u8-list->bytevector . g$12537$bmrAn)
        (string->utf8 . g$12536$bmrAn)
        (string->utf32 . g$12535$bmrAn)
        (string->utf16 . g$12534$bmrAn)
        (sint-list->bytevector . g$12533$bmrAn)
        (native-endianness . g$6572$bmrAn)
        (bytevector? . g$12532$bmrAn)
        (bytevector=? . g$12531$bmrAn)
        (bytevector-uint-set! . g$12530$bmrAn)
        (bytevector-uint-ref . g$12529$bmrAn)
        (bytevector-u8-set! . g$12528$bmrAn)
        (bytevector-u8-ref . g$12527$bmrAn)
        (bytevector-u64-set! . g$6593$bmrAn)
        (bytevector-u64-ref . g$6589$bmrAn)
        (bytevector-u64-native-set! . g$6595$bmrAn)
        (bytevector-u64-native-ref . g$6591$bmrAn)
        (bytevector-u32-set! . g$6585$bmrAn)
        (bytevector-u32-ref . g$6581$bmrAn)
        (bytevector-u32-native-set! . g$6587$bmrAn)
        (bytevector-u32-native-ref . g$6583$bmrAn)
        (bytevector-u16-set! . g$6577$bmrAn)
        (bytevector-u16-ref . g$6573$bmrAn)
        (bytevector-u16-native-set! . g$6579$bmrAn)
        (bytevector-u16-native-ref . g$6575$bmrAn)
        (bytevector-sint-set! . g$12526$bmrAn)
        (bytevector-sint-ref . g$12525$bmrAn)
        (bytevector-s8-set! . g$12524$bmrAn)
        (bytevector-s8-ref . g$12523$bmrAn)
        (bytevector-s64-set! . g$6594$bmrAn)
        (bytevector-s64-ref . g$6590$bmrAn)
        (bytevector-s64-native-set! . g$6596$bmrAn)
        (bytevector-s64-native-ref . g$6592$bmrAn)
        (bytevector-s32-set! . g$6586$bmrAn)
        (bytevector-s32-ref . g$6582$bmrAn)
        (bytevector-s32-native-set! . g$6588$bmrAn)
        (bytevector-s32-native-ref . g$6584$bmrAn)
        (bytevector-s16-set! . g$6578$bmrAn)
        (bytevector-s16-ref . g$6574$bmrAn)
        (bytevector-s16-native-set! . g$6580$bmrAn)
        (bytevector-s16-native-ref . g$6576$bmrAn)
        (bytevector-length . g$12522$bmrAn)
        (bytevector-ieee-single-set! . g$12521$bmrAn)
        (bytevector-ieee-single-ref . g$12520$bmrAn)
        (bytevector-ieee-single-native-set! . g$6599$bmrAn)
        (bytevector-ieee-single-native-ref . g$6597$bmrAn)
        (bytevector-ieee-double-set! . g$12519$bmrAn)
        (bytevector-ieee-double-ref . g$12518$bmrAn)
        (bytevector-ieee-double-native-set! . g$6600$bmrAn)
        (bytevector-ieee-double-native-ref . g$6598$bmrAn)
        (bytevector-fill! . g$12517$bmrAn)
        (bytevector-copy! . g$12516$bmrAn)
        (bytevector-copy . g$12515$bmrAn)
        (bytevector->uint-list . g$12514$bmrAn)
        (bytevector->u8-list . g$12513$bmrAn)
        (bytevector->sint-list . g$12512$bmrAn)
        (no-nans-violation? . g$7196$bmrAn)
        (no-infinities-violation? . g$7182$bmrAn)
        (make-no-nans-violation . g$7195$bmrAn)
        (make-no-infinities-violation . g$7181$bmrAn)
        (real->flonum . g$12511$bmrAn)
        (flzero? . g$12510$bmrAn)
        (fltruncate . g$12509$bmrAn)
        (fltan . g$12508$bmrAn)
        (flsqrt . g$12507$bmrAn)
        (flsin . g$12506$bmrAn)
        (flround . g$12505$bmrAn)
        (flpositive? . g$12504$bmrAn)
        (flonum? . g$12503$bmrAn)
        (flodd? . g$12502$bmrAn)
        (flnumerator . g$12501$bmrAn)
        (flnegative? . g$12500$bmrAn)
        (flnan? . g$12499$bmrAn)
        (flmod0 . g$12498$bmrAn)
        (flmod . g$12497$bmrAn)
        (flmin . g$12496$bmrAn)
        (flmax . g$12495$bmrAn)
        (fllog . g$12494$bmrAn)
        (flinteger? . g$12493$bmrAn)
        (flinfinite? . g$12492$bmrAn)
        (flfloor . g$12491$bmrAn)
        (flfinite? . g$12490$bmrAn)
        (flexpt . g$12489$bmrAn)
        (flexp . g$12488$bmrAn)
        (fleven? . g$12487$bmrAn)
        (fldiv0-and-mod0 . g$12486$bmrAn)
        (fldiv0 . g$12485$bmrAn)
        (fldiv-and-mod . g$12484$bmrAn)
        (fldiv . g$12483$bmrAn)
        (fldenominator . g$12482$bmrAn)
        (flcos . g$12481$bmrAn)
        (flceiling . g$12480$bmrAn)
        (flatan . g$12479$bmrAn)
        (flasin . g$12478$bmrAn)
        (flacos . g$12477$bmrAn)
        (flabs . g$12476$bmrAn)
        (fl>? . g$12475$bmrAn)
        (fl>=? . g$12474$bmrAn)
        (fl=? . g$12473$bmrAn)
        (fl<? . g$12472$bmrAn)
        (fl<=? . g$12471$bmrAn)
        (fl/ . g$12470$bmrAn)
        (fl- . g$12469$bmrAn)
        (fl+ . g$12468$bmrAn)
        (fl* . g$12467$bmrAn)
        (fixnum->flonum . g$12466$bmrAn)
        (fxzero? . g$12465$bmrAn)
        (fxxor . g$12464$bmrAn)
        (fxrotate-bit-field . g$7128$bmrAn)
        (fxreverse-bit-field . g$12463$bmrAn)
        (fxpositive? . g$12462$bmrAn)
        (fxodd? . g$12461$bmrAn)
        (fxnot . g$12460$bmrAn)
        (fxnegative? . g$12459$bmrAn)
        (fxmod0 . g$12458$bmrAn)
        (fxmod . g$12457$bmrAn)
        (fxmin . g$12456$bmrAn)
        (fxmax . g$12455$bmrAn)
        (fxlength . g$12454$bmrAn)
        (fxior . g$12453$bmrAn)
        (fxif . g$7122$bmrAn)
        (fxfirst-bit-set . g$12452$bmrAn)
        (fxeven? . g$12451$bmrAn)
        (fxdiv0-and-mod0 . g$12450$bmrAn)
        (fxdiv0 . g$12449$bmrAn)
        (fxdiv-and-mod . g$12448$bmrAn)
        (fxdiv . g$12447$bmrAn)
        (fxcopy-bit-field . g$7125$bmrAn)
        (fxcopy-bit . g$7123$bmrAn)
        (fxbit-set? . g$12446$bmrAn)
        (fxbit-field . g$7124$bmrAn)
        (fxbit-count . g$12445$bmrAn)
        (fxarithmetic-shift-right . g$7127$bmrAn)
        (fxarithmetic-shift-left . g$7126$bmrAn)
        (fxarithmetic-shift . g$12444$bmrAn)
        (fxand . g$12443$bmrAn)
        (fx>? . g$12442$bmrAn)
        (fx>=? . g$12441$bmrAn)
        (fx=? . g$12440$bmrAn)
        (fx<? . g$12439$bmrAn)
        (fx<=? . g$12438$bmrAn)
        (fx-/carry . g$7120$bmrAn)
        (fx- . g$12437$bmrAn)
        (fx+/carry . g$7121$bmrAn)
        (fx+ . g$12436$bmrAn)
        (fx*/carry . g$7119$bmrAn)
        (fx* . g$12435$bmrAn)
        (greatest-fixnum . g$12434$bmrAn)
        (least-fixnum . g$12433$bmrAn)
        (fixnum-width . g$12432$bmrAn)
        (fixnum? . g$12431$bmrAn)
        (bitwise-rotate-bit-field . g$7093$bmrAn)
        (bitwise-reverse-bit-field . g$12430$bmrAn)
        (bitwise-length . g$12429$bmrAn)
        (bitwise-if . g$7087$bmrAn)
        (bitwise-first-bit-set . g$12428$bmrAn)
        (bitwise-copy-bit-field . g$7090$bmrAn)
        (bitwise-copy-bit . g$7088$bmrAn)
        (bitwise-bit-set? . g$12427$bmrAn)
        (bitwise-bit-field . g$7089$bmrAn)
        (bitwise-bit-count . g$12426$bmrAn)
        (bitwise-xor . g$12425$bmrAn)
        (bitwise-ior . g$12424$bmrAn)
        (bitwise-and . g$12423$bmrAn)
        (bitwise-not . g$12422$bmrAn)
        (bitwise-arithmetic-shift-right . g$7092$bmrAn)
        (bitwise-arithmetic-shift-left . g$7091$bmrAn)
        (bitwise-arithmetic-shift . g$12421$bmrAn)
        (zero? . g$6018$bmrAn)
        (vector? . g$12420$bmrAn)
        (vector-set! . g$12419$bmrAn)
        (vector-ref . g$12418$bmrAn)
        (vector-map . g$12417$bmrAn)
        (vector-length . g$12416$bmrAn)
        (vector-for-each . g$12415$bmrAn)
        (vector-fill! . g$12414$bmrAn)
        (vector->list . g$12413$bmrAn)
        (vector . g$12412$bmrAn)
        (values . g$12411$bmrAn)
        (truncate . g$12410$bmrAn)
        (tan . g$12409$bmrAn)
        (symbol? . g$12408$bmrAn)
        (symbol=? . g$6064$bmrAn)
        (symbol->string . g$12407$bmrAn)
        (substring . g$12406$bmrAn)
        (string? . g$12405$bmrAn)
        (string>? . g$6061$bmrAn)
        (string>=? . g$6063$bmrAn)
        (string=? . g$6059$bmrAn)
        (string<? . g$6060$bmrAn)
        (string<=? . g$6062$bmrAn)
        (string-ref . g$12404$bmrAn)
        (string-length . g$12403$bmrAn)
        (string-for-each . g$12402$bmrAn)
        (string-copy . g$12401$bmrAn)
        (string-append . g$12400$bmrAn)
        (string->symbol . g$12399$bmrAn)
        (string->number . g$12398$bmrAn)
        (string->list . g$12397$bmrAn)
        (string . g$12396$bmrAn)
        (sqrt . g$12395$bmrAn)
        (sin . g$12394$bmrAn)
        (round . g$12393$bmrAn)
        (reverse . g$12392$bmrAn)
        (real? . g$12391$bmrAn)
        (real-valued? . g$12390$bmrAn)
        (real-part . g$12389$bmrAn)
        (rationalize . g$6105$bmrAn)
        (rational? . g$12388$bmrAn)
        (rational-valued? . g$12387$bmrAn)
        (procedure? . g$12386$bmrAn)
        (positive? . g$6016$bmrAn)
        (pair? . g$12385$bmrAn)
        (odd? . g$6020$bmrAn)
        (numerator . g$12384$bmrAn)
        (number? . g$12383$bmrAn)
        (number->string . g$12382$bmrAn)
        (null? . g$12381$bmrAn)
        (not . g$12380$bmrAn)
        (negative? . g$6017$bmrAn)
        (nan? . g$12379$bmrAn)
        (min . g$6022$bmrAn)
        (max . g$6021$bmrAn)
        (map . g$5870$bmrAn)
        (make-vector . g$12378$bmrAn)
        (make-string . g$12377$bmrAn)
        (make-rectangular . g$12376$bmrAn)
        (make-polar . g$12375$bmrAn)
        (magnitude . g$12374$bmrAn)
        (log . g$12373$bmrAn)
        (list? . g$12372$bmrAn)
        (list-tail . g$5850$bmrAn)
        (list-ref . g$5851$bmrAn)
        (list->vector . g$12371$bmrAn)
        (list->string . g$12370$bmrAn)
        (list . g$12369$bmrAn)
        (length . g$12368$bmrAn)
        (lcm . g$6024$bmrAn)
        (integer? . g$12367$bmrAn)
        (integer-valued? . g$12366$bmrAn)
        (integer->char . g$12365$bmrAn)
        (infinite? . g$12364$bmrAn)
        (inexact? . g$12363$bmrAn)
        (inexact . g$12362$bmrAn)
        (imag-part . g$12361$bmrAn)
        (gcd . g$6023$bmrAn)
        (for-each . g$5871$bmrAn)
        (floor . g$12360$bmrAn)
        (finite? . g$12359$bmrAn)
        (expt . g$12358$bmrAn)
        (exp . g$12357$bmrAn)
        (exact? . g$12356$bmrAn)
        (exact-integer-sqrt . g$12355$bmrAn)
        (exact . g$12354$bmrAn)
        (even? . g$6019$bmrAn)
        (error . g$12353$bmrAn)
        (eqv? . g$12352$bmrAn)
        (equal? . g$12351$bmrAn)
        (eq? . g$12350$bmrAn)
        (dynamic-wind . g$12349$bmrAn)
        (div0-and-mod0 . g$12348$bmrAn)
        (mod0 . g$12347$bmrAn)
        (div0 . g$12346$bmrAn)
        (div-and-mod . g$12345$bmrAn)
        (mod . g$12344$bmrAn)
        (div . g$12343$bmrAn)
        (denominator . g$12342$bmrAn)
        (cos . g$12341$bmrAn)
        (cons . g$12340$bmrAn)
        (complex? . g$12339$bmrAn)
        (char? . g$12338$bmrAn)
        (char>? . g$6102$bmrAn)
        (char>=? . g$6104$bmrAn)
        (char=? . g$6100$bmrAn)
        (char<? . g$6101$bmrAn)
        (char<=? . g$6103$bmrAn)
        (char->integer . g$12337$bmrAn)
        (ceiling . g$12336$bmrAn)
        (call-with-values . g$12335$bmrAn)
        (call/cc . g$12334$bmrAn)
        (call-with-current-continuation . g$12333$bmrAn)
        (cddddr . g$6015$bmrAn)
        (cdddar . g$6014$bmrAn)
        (cddadr . g$6013$bmrAn)
        (cddaar . g$6012$bmrAn)
        (cdaddr . g$6011$bmrAn)
        (cdadar . g$6010$bmrAn)
        (cdaadr . g$6009$bmrAn)
        (cdaaar . g$6008$bmrAn)
        (cadddr . g$6007$bmrAn)
        (caddar . g$6006$bmrAn)
        (cadadr . g$6005$bmrAn)
        (cadaar . g$6004$bmrAn)
        (caaddr . g$6003$bmrAn)
        (caadar . g$6002$bmrAn)
        (caaadr . g$6001$bmrAn)
        (caaaar . g$6000$bmrAn)
        (cdddr . g$5999$bmrAn)
        (cddar . g$5998$bmrAn)
        (cdadr . g$5997$bmrAn)
        (cdaar . g$5996$bmrAn)
        (caddr . g$5995$bmrAn)
        (cadar . g$5994$bmrAn)
        (caadr . g$5993$bmrAn)
        (caaar . g$5992$bmrAn)
        (cddr . g$5991$bmrAn)
        (cdar . g$5990$bmrAn)
        (cadr . g$5989$bmrAn)
        (caar . g$5988$bmrAn)
        (cdr . g$12332$bmrAn)
        (car . g$12331$bmrAn)
        (boolean? . g$12330$bmrAn)
        (boolean=? . g$6065$bmrAn)
        (atan . g$12329$bmrAn)
        (assertion-violation . g$12328$bmrAn)
        (asin . g$12327$bmrAn)
        (apply . g$12326$bmrAn)
        (append . g$12325$bmrAn)
        (angle . g$12324$bmrAn)
        (acos . g$12323$bmrAn)
        (abs . g$12322$bmrAn)
        (/ . g$12321$bmrAn)
        (* . g$12320$bmrAn)
        (- . g$12319$bmrAn)
        (+ . g$12318$bmrAn)
        (>= . g$12317$bmrAn)
        (> . g$12316$bmrAn)
        (= . g$12315$bmrAn)
        (<= . g$12314$bmrAn)
        (< . g$12313$bmrAn)
        (make-record-printer . g$12312$bmrAn)
        (eqv-hash . g$12311$bmrAn)
        (reverse! . g$12310$bmrAn)
        (deserialize-port . g$12309$bmrAn)
        (serialize-port . g$12308$bmrAn)
        (enum-set? . g$7457$bmrAn)
        (make-promise . g$6914$bmrAn)
        (load/args . g$12143$bmrAn)
        (printf . g$7568$bmrAn)
        (fprintf . g$7569$bmrAn)
        (format . g$7570$bmrAn)
        (procedure-form . g$12307$bmrAn)
        (procedure-environment . g$12306$bmrAn)
        (procedure-name . g$12305$bmrAn)
        (procedure-arity . g$12304$bmrAn)
        (gc-collect . g$12303$bmrAn)
        (clr-type? . g$12302$bmrAn)
        (get-clr-type . g$12301$bmrAn)
        (get-command-line . g$12300$bmrAn)
        (vector-append . g$12299$bmrAn)
        (vector-filter . g$12298$bmrAn)
        (vector-reverse! . g$12297$bmrAn)
        (vector-contains? . g$12296$bmrAn)
        (vector-index-of . g$12295$bmrAn)
        (vector-copy . g$12294$bmrAn)
        (vector-binary-search . g$12293$bmrAn)
        (string-ci-compare . g$12292$bmrAn)
        (string-compare . g$12291$bmrAn)
        (string-format . g$12290$bmrAn)
        (trace-printer . g$12140$bmrAn)
        (make-traced-procedure . g$12289$bmrAn)
        (make-traced-macro . g$7590$bmrAn)
        (assertion-error . g$9153$bmrAn)
        (time-it . g$12288$bmrAn)
        (make-parameter . g$7858$bmrAn)
        (library-locator . g$12287$bmrAn)
        (get-library-paths . g$12286$bmrAn)
        (open-tcp-input/output-port . g$12285$bmrAn)
        (hashtable-for-each . g$12284$bmrAn)
        (hashtable-map . g$12283$bmrAn)
        (environment-bindings . g$9131$bmrAn)
        (environment-symbols . g$9134$bmrAn)
        (interaction-environment-symbols . g$9130$bmrAn)
        (optimization-level . g$12282$bmrAn)
        (library-path . g$8313$bmrAn)
        (expand->core . g$9140$bmrAn)
        (expand . g$9138$bmrAn)
        (&no-nans . g$12281$bmrAn)
        (&no-infinities . g$12280$bmrAn)
        (&i/o-encoding . g$12279$bmrAn)
        (&i/o-decoding . g$12278$bmrAn)
        (&i/o-port . g$12277$bmrAn)
        (&i/o-file-does-not-exist . g$12276$bmrAn)
        (&i/o-file-already-exists . g$12275$bmrAn)
        (&i/o-file-is-read-only . g$12274$bmrAn)
        (&i/o-file-protection . g$12273$bmrAn)
        (&i/o-filename . g$12272$bmrAn)
        (&i/o-invalid-position . g$12271$bmrAn)
        (&i/o-write . g$12270$bmrAn)
        (&i/o-read . g$12269$bmrAn)
        (&i/o . g$12268$bmrAn)
        (&non-continuable . g$12267$bmrAn)
        (&undefined . g$12266$bmrAn)
        (&syntax . g$12265$bmrAn)
        (&lexical . g$12264$bmrAn)
        (&implementation-restriction . g$12263$bmrAn)
        (&who . g$12262$bmrAn)
        (&irritants . g$12261$bmrAn)
        (&assertion . g$12260$bmrAn)
        (&violation . g$12259$bmrAn)
        (&error . g$12258$bmrAn)
        (&serious . g$12257$bmrAn)
        (&warning . g$12256$bmrAn)
        (&message . g$12255$bmrAn)
        (&condition . g$12254$bmrAn)
        (define-condition-type . g$12253$bmrAn)
        (define-enumeration . g$12252$bmrAn)
        (define-record-type . g$12251$bmrAn)
        (parent-rtd . g$12250$bmrAn)
        (nongenerative . g$12249$bmrAn)
        (opaque . g$12248$bmrAn)
        (sealed . g$12247$bmrAn)
        (protocol . g$12246$bmrAn)
        (parent . g$12245$bmrAn)
        (immutable . g$12244$bmrAn)
        (mutable . g$12243$bmrAn)
        (fields . g$12242$bmrAn)
        (error-handling-mode . g$12241$bmrAn)
        (file-options . g$12240$bmrAn)
        (buffer-mode . g$12239$bmrAn)
        (eol-style . g$12238$bmrAn)
        (guard . g$12237$bmrAn)
        (trace-letrec-syntax . g$12236$bmrAn)
        (trace-let-syntax . g$12235$bmrAn)
        (trace-define-syntax . g$12234$bmrAn)
        (trace-define . g$12233$bmrAn)
        (trace-lambda . g$12232$bmrAn)
        (unsyntax-splicing . g$12231$bmrAn)
        (unsyntax . g$12230$bmrAn)
        (unquote-splicing . g$12229$bmrAn)
        (unquote . g$12228$bmrAn)
        (_ . g$12227$bmrAn)
        (else . g$12226$bmrAn)
        (=> . g$12225$bmrAn)
        (... . g$12224$bmrAn)
        (assert . g$12223$bmrAn)
        (endianness . g$12222$bmrAn)
        (delay . g$12221$bmrAn)
        (time . g$12220$bmrAn)
        (or . g$12219$bmrAn)
        (and . g$12218$bmrAn)
        (do . g$12217$bmrAn)
        (cond . g$12216$bmrAn)
        (let* . g$12215$bmrAn)
        (let . g$12214$bmrAn)
        (identifier-syntax . g$12213$bmrAn)
        (with-syntax . g$12212$bmrAn)
        (quasisyntax . g$12211$bmrAn)
        (quasiquote . g$12210$bmrAn)
        (syntax-rules . g$12209$bmrAn)
        (include-into . g$12208$bmrAn)
        (include . g$12207$bmrAn)
        (define-struct . g$12206$bmrAn)
        (let-values . g$12205$bmrAn)
        (let*-values . g$12204$bmrAn)
        (record-constructor-descriptor . g$12203$bmrAn)
        (record-type-descriptor . g$12202$bmrAn)
        (fluid-let-syntax . g$12201$bmrAn)
        (case . g$12200$bmrAn)
        (parameterize . g$12199$bmrAn)
        (unless . g$12198$bmrAn)
        (when . g$12197$bmrAn)
        (if . g$12196$bmrAn)
        (letrec* . g$12195$bmrAn)
        (letrec . g$12194$bmrAn)
        (type-descriptor . g$12193$bmrAn)
        (case-lambda . g$12192$bmrAn)
        (lambda . g$12191$bmrAn)
        (syntax . g$12190$bmrAn)
        (syntax-case . g$12189$bmrAn)
        (quote . g$12188$bmrAn)
        (foreign-call . g$12187$bmrAn)
        (letrec-syntax . g$12186$bmrAn)
        (let-syntax . g$12185$bmrAn)
        (set! . g$12184$bmrAn)
        (export . g$12183$bmrAn)
        (import . g$12182$bmrAn)
        (library . g$12181$bmrAn)
        (begin . g$12180$bmrAn)
        (module . g$12179$bmrAn)
        (define-syntax . g$12178$bmrAn)
        (define . g$12177$bmrAn))
      '((g$9029$bmrAn core-prim . ellipsis-map)
        (g$12767$bmrAn core-prim . &no-nans-rcd)
        (g$12766$bmrAn core-prim . &no-nans-rtd)
        (g$12765$bmrAn core-prim . &no-infinities-rcd)
        (g$12764$bmrAn core-prim . &no-infinities-rtd)
        (g$12763$bmrAn core-prim . &i/o-encoding-rcd)
        (g$12762$bmrAn core-prim . &i/o-encoding-rtd)
        (g$12761$bmrAn core-prim . &i/o-decoding-rcd)
        (g$12760$bmrAn core-prim . &i/o-decoding-rtd)
        (g$12759$bmrAn core-prim . &i/o-port-rcd)
        (g$12758$bmrAn core-prim . &i/o-port-rtd)
        (g$12757$bmrAn core-prim . &i/o-file-does-not-exist-rcd)
        (g$12756$bmrAn core-prim . &i/o-file-does-not-exist-rtd)
        (g$12755$bmrAn core-prim . &i/o-file-already-exists-rcd)
        (g$12754$bmrAn core-prim . &i/o-file-already-exists-rtd)
        (g$12753$bmrAn core-prim . &i/o-file-is-read-only-rcd)
        (g$12752$bmrAn core-prim . &i/o-file-is-read-only-rtd)
        (g$12751$bmrAn core-prim . &i/o-file-protection-rcd)
        (g$12750$bmrAn core-prim . &i/o-file-protection-rtd)
        (g$12749$bmrAn core-prim . &i/o-filename-rcd)
        (g$12748$bmrAn core-prim . &i/o-filename-rtd)
        (g$12747$bmrAn core-prim . &i/o-invalid-position-rcd)
        (g$12746$bmrAn core-prim . &i/o-invalid-position-rtd)
        (g$12745$bmrAn core-prim . &i/o-write-rcd)
        (g$12744$bmrAn core-prim . &i/o-write-rtd)
        (g$12743$bmrAn core-prim . &i/o-read-rcd)
        (g$12742$bmrAn core-prim . &i/o-read-rtd)
        (g$12741$bmrAn core-prim . &i/o-rcd)
        (g$12740$bmrAn core-prim . &i/o-rtd)
        (g$12739$bmrAn core-prim . &undefined-rcd)
        (g$12738$bmrAn core-prim . &undefined-rtd)
        (g$12737$bmrAn core-prim . &syntax-rcd)
        (g$12736$bmrAn core-prim . &syntax-rtd)
        (g$12735$bmrAn core-prim . &lexical-rcd)
        (g$12734$bmrAn core-prim . &lexical-rtd)
        (g$12733$bmrAn core-prim . &implementation-restriction-rcd)
        (g$12732$bmrAn core-prim . &implementation-restriction-rtd)
        (g$12731$bmrAn core-prim . &non-continuable-rcd)
        (g$12730$bmrAn core-prim . &non-continuable-rtd)
        (g$12729$bmrAn core-prim . &who-rcd)
        (g$12728$bmrAn core-prim . &who-rtd)
        (g$12727$bmrAn core-prim . &irritants-rcd)
        (g$12726$bmrAn core-prim . &irritants-rtd)
        (g$12725$bmrAn core-prim . &assertion-rcd)
        (g$12724$bmrAn core-prim . &assertion-rtd)
        (g$12723$bmrAn core-prim . &violation-rcd)
        (g$12722$bmrAn core-prim . &violation-rtd)
        (g$12721$bmrAn core-prim . &error-rcd)
        (g$12720$bmrAn core-prim . &error-rtd)
        (g$12719$bmrAn core-prim . &serious-rcd)
        (g$12718$bmrAn core-prim . &serious-rtd)
        (g$12717$bmrAn core-prim . &warning-rcd)
        (g$12716$bmrAn core-prim . &warning-rtd)
        (g$12715$bmrAn core-prim . &message-rcd)
        (g$12714$bmrAn core-prim . &message-rtd)
        (g$12713$bmrAn core-prim . &condition-rcd)
        (g$12712$bmrAn core-prim . &condition-rtd)
        (g$12711$bmrAn core-prim . library-letrec*)
        (g$12710$bmrAn core-prim . annotation-stripped)
        (g$12709$bmrAn core-prim . annotation-source)
        (g$12708$bmrAn core-prim . annotation-expression)
        (g$12707$bmrAn core-prim . annotation?)
        (g$12706$bmrAn core-prim . read-annotated)
        (g$12705$bmrAn core-prim . tanh)
        (g$12704$bmrAn core-prim . cosh)
        (g$12703$bmrAn core-prim . sinh)
        (g$12702$bmrAn core-prim . make-guid)
        (g$12701$bmrAn core-prim . unspecified?)
        (g$5853$bmrAn core-prim . make-list)
        (g$5852$bmrAn core-prim . last-pair)
        (g$12700$bmrAn core-prim . load-r5rs)
        (g$12699$bmrAn core-prim . license)
        (g$12698$bmrAn core-prim . stacktrace)
        (g$12145$bmrAn core-prim . ironscheme-build)
        (g$12697$bmrAn core-prim . define-clr-class-internal)
        (g$12696$bmrAn core-prim . clr-field-set!-internal)
        (g$12695$bmrAn core-prim . clr-field-get-internal)
        (g$12694$bmrAn core-prim . clr-cast-internal)
        (g$12693$bmrAn core-prim . clr-call-internal)
        (g$12692$bmrAn core-prim . clr-new-internal)
        (g$12691$bmrAn core-prim . clr-new-array-internal)
        (g$12690$bmrAn core-prim . clr-is-internal)
        (g$12689$bmrAn core-prim . clr-reference-internal)
        (g$12688$bmrAn core-prim . clr-using-internal)
        (g$9154$bmrAn core-prim . syntax-error)
        (g$9024$bmrAn core-prim . syntax-dispatch)
        (g$12687$bmrAn core-prim . compile-core)
        (g$12686$bmrAn core-prim . eval-core)
        (g$12685$bmrAn core-prim . set-symbol-value!)
        (g$12684$bmrAn core-prim . symbol-value)
        (g$12683$bmrAn core-prim . ungensym)
        (g$12682$bmrAn core-prim . gensym)
        (g$12681$bmrAn core-prim . void)
        (g$12680$bmrAn core-prim . load-serialized-library)
        (g$12679$bmrAn core-prim . serialize-library)
        (g$12147$bmrAn core-prim . compile-system-libraries)
        (g$12149$bmrAn core-prim . compile->closure)
        (g$12148$bmrAn core-prim . compile)
        (g$12144$bmrAn core-prim . load)
        (g$9164$bmrAn core-prim . interaction-environment)
        (g$12678$bmrAn core-prim . char-ready?)
        (g$12677$bmrAn core-prim . string-upcase)
        (g$12676$bmrAn core-prim . string-titlecase)
        (g$12675$bmrAn core-prim . string-normalize-nfkd)
        (g$12674$bmrAn core-prim . string-normalize-nfkc)
        (g$12673$bmrAn core-prim . string-normalize-nfd)
        (g$12672$bmrAn core-prim . string-normalize-nfc)
        (g$12671$bmrAn core-prim . string-foldcase)
        (g$12670$bmrAn core-prim . string-downcase)
        (g$6992$bmrAn core-prim . string-ci>?)
        (g$6994$bmrAn core-prim . string-ci>=?)
        (g$6990$bmrAn core-prim . string-ci=?)
        (g$6991$bmrAn core-prim . string-ci<?)
        (g$6993$bmrAn core-prim . string-ci<=?)
        (g$12669$bmrAn core-prim . char-whitespace?)
        (g$12668$bmrAn core-prim . char-upper-case?)
        (g$12667$bmrAn core-prim . char-title-case?)
        (g$12666$bmrAn core-prim . char-numeric?)
        (g$12665$bmrAn core-prim . char-lower-case?)
        (g$12664$bmrAn core-prim . char-general-category)
        (g$12663$bmrAn core-prim . char-upcase)
        (g$12662$bmrAn core-prim . char-titlecase)
        (g$12661$bmrAn core-prim . char-foldcase)
        (g$12660$bmrAn core-prim . char-downcase)
        (g$7031$bmrAn core-prim . char-ci>?)
        (g$7033$bmrAn core-prim . char-ci>=?)
        (g$7029$bmrAn core-prim . char-ci=?)
        (g$7030$bmrAn core-prim . char-ci<?)
        (g$7032$bmrAn core-prim . char-ci<=?)
        (g$12659$bmrAn core-prim . char-alphabetic?)
        (g$8761$bmrAn core-prim . variable-transformer-procedure)
        (g$8760$bmrAn core-prim . variable-transformer?)
        (g$8759$bmrAn core-prim . make-variable-transformer)
        (g$9158$bmrAn core-prim . identifier?)
        (g$9147$bmrAn core-prim . generate-temporaries)
        (g$9148$bmrAn core-prim . free-identifier=?)
        (g$9160$bmrAn core-prim . syntax->datum)
        (g$9159$bmrAn core-prim . datum->syntax)
        (g$9149$bmrAn core-prim . bound-identifier=?)
        (g$12658$bmrAn core-prim . record-type-descriptor?)
        (g$12657$bmrAn core-prim . record-predicate)
        (g$12656$bmrAn core-prim . record-mutator)
        (g$12655$bmrAn core-prim . record-constructor)
        (g$12654$bmrAn core-prim . record-accessor)
        (g$12653$bmrAn core-prim . make-record-type-descriptor)
        (g$12652$bmrAn core-prim . make-record-constructor-descriptor)
        (g$12651$bmrAn core-prim . record?)
        (g$12650$bmrAn core-prim . record-type-uid)
        (g$12649$bmrAn core-prim . record-type-sealed?)
        (g$12648$bmrAn core-prim . record-type-parent)
        (g$12647$bmrAn core-prim . record-type-opaque?)
        (g$12646$bmrAn core-prim . record-type-name)
        (g$12645$bmrAn core-prim . record-type-generative?)
        (g$12644$bmrAn core-prim . record-type-field-names)
        (g$12643$bmrAn core-prim . record-rtd)
        (g$12642$bmrAn core-prim . record-field-mutable?)
        (g$6566$bmrAn core-prim . delete-file)
        (g$6565$bmrAn core-prim . file-exists?)
        (g$12641$bmrAn core-prim . vector-sort!)
        (g$12640$bmrAn core-prim . vector-sort)
        (g$6932$bmrAn core-prim . list-sort)
        (g$12639$bmrAn core-prim . symbol-hash)
        (g$12638$bmrAn core-prim . string-ci-hash)
        (g$12637$bmrAn core-prim . string-hash)
        (g$12636$bmrAn core-prim . equal-hash)
        (g$12635$bmrAn core-prim . hashtable-equivalence-function)
        (g$12634$bmrAn core-prim . make-hashtable)
        (g$12633$bmrAn core-prim . hashtable-hash-function)
        (g$6534$bmrAn core-prim . make-eqv-hashtable)
        (g$6533$bmrAn core-prim . make-eq-hashtable)
        (g$12632$bmrAn core-prim . hashtable?)
        (g$6540$bmrAn core-prim . hashtable-update!)
        (g$6535$bmrAn core-prim . hashtable-size)
        (g$6537$bmrAn core-prim . hashtable-set!)
        (g$6536$bmrAn core-prim . hashtable-ref)
        (g$12631$bmrAn core-prim . hashtable-mutable?)
        (g$12630$bmrAn core-prim . hashtable-keys)
        (g$12629$bmrAn core-prim . hashtable-entries)
        (g$6538$bmrAn core-prim . hashtable-delete!)
        (g$12628$bmrAn core-prim . hashtable-copy)
        (g$6539$bmrAn core-prim . hashtable-contains?)
        (g$6541$bmrAn core-prim . hashtable-clear!)
        (g$7417$bmrAn core-prim . call-with-output-file)
        (g$7416$bmrAn core-prim . call-with-input-file)
        (g$7398$bmrAn core-prim . write-char)
        (g$12627$bmrAn core-prim . write)
        (g$7415$bmrAn core-prim . with-output-to-file)
        (g$7414$bmrAn core-prim . with-input-from-file)
        (g$7397$bmrAn core-prim . read-char)
        (g$12626$bmrAn core-prim . read)
        (g$7396$bmrAn core-prim . peek-char)
        (g$12625$bmrAn core-prim . open-output-file)
        (g$12624$bmrAn core-prim . open-input-file)
        (g$7418$bmrAn core-prim . newline)
        (g$12623$bmrAn core-prim . display)
        (g$12622$bmrAn core-prim . close-output-port)
        (g$12621$bmrAn core-prim . close-input-port)
        (g$12620$bmrAn core-prim . eof-object?)
        (g$12619$bmrAn core-prim . eof-object)
        (g$12618$bmrAn core-prim . current-error-port)
        (g$12617$bmrAn core-prim . current-output-port)
        (g$12616$bmrAn core-prim . current-input-port)
        (g$12615$bmrAn core-prim . output-port?)
        (g$12614$bmrAn core-prim . input-port?)
        (g$12613$bmrAn core-prim . utf-8-codec)
        (g$12612$bmrAn core-prim . utf-16-codec)
        (g$12611$bmrAn core-prim . transcoder-error-handling-mode)
        (g$12610$bmrAn core-prim . transcoder-eol-style)
        (g$12609$bmrAn core-prim . transcoder-codec)
        (g$12608$bmrAn core-prim . transcoded-port)
        (g$12607$bmrAn core-prim . textual-port?)
        (g$12606$bmrAn core-prim . string->bytevector)
        (g$12605$bmrAn core-prim . standard-output-port)
        (g$12604$bmrAn core-prim . standard-input-port)
        (g$12603$bmrAn core-prim . standard-error-port)
        (g$12602$bmrAn core-prim . set-port-position!)
        (g$12601$bmrAn core-prim . put-u8)
        (g$12600$bmrAn core-prim . put-string)
        (g$12599$bmrAn core-prim . put-datum)
        (g$12598$bmrAn core-prim . put-char)
        (g$12597$bmrAn core-prim . put-bytevector)
        (g$7383$bmrAn core-prim . port?)
        (g$12596$bmrAn core-prim . port-transcoder)
        (g$12595$bmrAn core-prim . port-position)
        (g$12594$bmrAn core-prim . port-has-set-port-position!?)
        (g$12593$bmrAn core-prim . port-has-port-position?)
        (g$12592$bmrAn core-prim . port-eof?)
        (g$12591$bmrAn core-prim . output-port-buffer-mode)
        (g$7382$bmrAn core-prim . open-string-output-port)
        (g$12590$bmrAn core-prim . open-string-input-port)
        (g$12589$bmrAn core-prim . open-file-output-port)
        (g$12588$bmrAn core-prim . open-file-input/output-port)
        (g$12587$bmrAn core-prim . open-file-input-port)
        (g$12586$bmrAn core-prim . open-bytevector-output-port)
        (g$12585$bmrAn core-prim . open-bytevector-input-port)
        (g$12584$bmrAn core-prim . native-transcoder)
        (g$12583$bmrAn core-prim . native-eol-style)
        (g$12582$bmrAn core-prim . make-transcoder)
        (g$12581$bmrAn core-prim . latin-1-codec)
        (g$7238$bmrAn core-prim . make-i/o-write-error)
        (g$7224$bmrAn core-prim . make-i/o-read-error)
        (g$7343$bmrAn core-prim . make-i/o-port-error)
        (g$7253$bmrAn core-prim . make-i/o-invalid-position-error)
        (g$7270$bmrAn core-prim . make-i/o-filename-error)
        (g$7286$bmrAn core-prim . make-i/o-file-protection-error)
        (g$7300$bmrAn core-prim . make-i/o-file-is-read-only-error)
        (g$7328$bmrAn core-prim . make-i/o-file-does-not-exist-error)
        (g$7314$bmrAn core-prim . make-i/o-file-already-exists-error)
        (g$7210$bmrAn core-prim . make-i/o-error)
        (g$7374$bmrAn core-prim . make-i/o-encoding-error)
        (g$7359$bmrAn core-prim . make-i/o-decoding-error)
        (g$12580$bmrAn core-prim . make-custom-textual-output-port)
        (g$12579$bmrAn core-prim . make-custom-textual-input/output-port)
        (g$12578$bmrAn core-prim . make-custom-textual-input-port)
        (g$12577$bmrAn core-prim . make-custom-binary-output-port)
        (g$12576$bmrAn core-prim . make-custom-binary-input/output-port)
        (g$12575$bmrAn core-prim . make-custom-binary-input-port)
        (g$12574$bmrAn core-prim . make-bytevector)
        (g$12573$bmrAn core-prim . lookahead-u8)
        (g$12572$bmrAn core-prim . lookahead-char)
        (g$7239$bmrAn core-prim . i/o-write-error?)
        (g$7225$bmrAn core-prim . i/o-read-error?)
        (g$7345$bmrAn core-prim . i/o-port-error?)
        (g$7255$bmrAn core-prim . i/o-invalid-position-error?)
        (g$7256$bmrAn core-prim . i/o-error-position)
        (g$7272$bmrAn core-prim . i/o-filename-error?)
        (g$7287$bmrAn core-prim . i/o-file-protection-error?)
        (g$7301$bmrAn core-prim . i/o-file-is-read-only-error?)
        (g$7329$bmrAn core-prim . i/o-file-does-not-exist-error?)
        (g$7315$bmrAn core-prim . i/o-file-already-exists-error?)
        (g$7211$bmrAn core-prim . i/o-error?)
        (g$7346$bmrAn core-prim . i/o-error-port)
        (g$7273$bmrAn core-prim . i/o-error-filename)
        (g$7376$bmrAn core-prim . i/o-encoding-error?)
        (g$7377$bmrAn core-prim . i/o-encoding-error-char)
        (g$7360$bmrAn core-prim . i/o-decoding-error?)
        (g$12571$bmrAn core-prim . get-u8)
        (g$12570$bmrAn core-prim . get-string-n!)
        (g$12569$bmrAn core-prim . get-string-n)
        (g$12568$bmrAn core-prim . get-string-all)
        (g$12567$bmrAn core-prim . get-line)
        (g$12566$bmrAn core-prim . get-datum)
        (g$12565$bmrAn core-prim . get-char)
        (g$12564$bmrAn core-prim . get-bytevector-some)
        (g$12563$bmrAn core-prim . get-bytevector-n!)
        (g$12562$bmrAn core-prim . get-bytevector-n)
        (g$12561$bmrAn core-prim . get-bytevector-all)
        (g$12560$bmrAn core-prim . flush-output-port)
        (g$12559$bmrAn core-prim . close-port)
        (g$7384$bmrAn core-prim . call-with-string-output-port)
        (g$7385$bmrAn core-prim . call-with-port)
        (g$12558$bmrAn core-prim . call-with-bytevector-output-port)
        (g$12557$bmrAn core-prim . bytevector->string)
        (g$12556$bmrAn core-prim . buffer-mode?)
        (g$12555$bmrAn core-prim . binary-port?)
        (g$9137$bmrAn core-prim . scheme-report-environment)
        (g$6911$bmrAn core-prim . quotient)
        (g$9136$bmrAn core-prim . null-environment)
        (g$6912$bmrAn core-prim . remainder)
        (g$6913$bmrAn core-prim . modulo)
        (g$6908$bmrAn core-prim . inexact->exact)
        (g$6915$bmrAn core-prim . force)
        (g$6909$bmrAn core-prim . exact->inexact)
        (g$12554$bmrAn core-prim . exit)
        (g$12141$bmrAn core-prim . command-line)
        (g$12553$bmrAn core-prim . string-fill!)
        (g$12552$bmrAn core-prim . string-set!)
        (g$12551$bmrAn core-prim . set-cdr!)
        (g$12550$bmrAn core-prim . set-car!)
        (g$5875$bmrAn core-prim . remove)
        (g$5876$bmrAn core-prim . remv)
        (g$5856$bmrAn core-prim . remp)
        (g$5877$bmrAn core-prim . remq)
        (g$5855$bmrAn core-prim . partition)
        (g$5863$bmrAn core-prim . memv)
        (g$5862$bmrAn core-prim . memq)
        (g$5865$bmrAn core-prim . memp)
        (g$5864$bmrAn core-prim . member)
        (g$5869$bmrAn core-prim . exists)
        (g$5868$bmrAn core-prim . for-all)
        (g$5874$bmrAn core-prim . fold-right)
        (g$5873$bmrAn core-prim . fold-left)
        (g$5854$bmrAn core-prim . find)
        (g$5857$bmrAn core-prim . filter)
        (g$5872$bmrAn core-prim . cons*)
        (g$5859$bmrAn core-prim . assv)
        (g$5858$bmrAn core-prim . assq)
        (g$5861$bmrAn core-prim . assp)
        (g$5860$bmrAn core-prim . assoc)
        (g$12549$bmrAn core-prim . with-exception-handler)
        (g$12548$bmrAn core-prim . raise-continuable)
        (g$12547$bmrAn core-prim . raise)
        (g$9139$bmrAn core-prim . eval)
        (g$9135$bmrAn core-prim . environment)
        (g$7482$bmrAn core-prim . make-enumeration)
        (g$7489$bmrAn core-prim . enum-set=?)
        (g$7483$bmrAn core-prim . enum-set-universe)
        (g$7490$bmrAn core-prim . enum-set-union)
        (g$7488$bmrAn core-prim . enum-set-subset?)
        (g$7494$bmrAn core-prim . enum-set-projection)
        (g$7487$bmrAn core-prim . enum-set-member?)
        (g$7491$bmrAn core-prim . enum-set-intersection)
        (g$7484$bmrAn core-prim . enum-set-indexer)
        (g$7492$bmrAn core-prim . enum-set-difference)
        (g$7485$bmrAn core-prim . enum-set-constructor)
        (g$7493$bmrAn core-prim . enum-set-complement)
        (g$7486$bmrAn core-prim . enum-set->list)
        (g$6820$bmrAn core-prim . who-condition?)
        (g$6731$bmrAn core-prim . warning?)
        (g$6773$bmrAn core-prim . violation?)
        (g$6897$bmrAn core-prim . undefined-violation?)
        (g$6881$bmrAn core-prim . syntax-violation?)
        (g$6883$bmrAn core-prim . syntax-violation-subform)
        (g$6882$bmrAn core-prim . syntax-violation-form)
        (g$9157$bmrAn core-prim . syntax-violation)
        (g$12546$bmrAn core-prim . simple-conditions)
        (g$6745$bmrAn core-prim . serious-condition?)
        (g$6835$bmrAn core-prim . non-continuable-violation?)
        (g$6716$bmrAn core-prim . message-condition?)
        (g$6818$bmrAn core-prim . make-who-condition)
        (g$6730$bmrAn core-prim . make-warning)
        (g$6772$bmrAn core-prim . make-violation)
        (g$6896$bmrAn core-prim . make-undefined-violation)
        (g$6878$bmrAn core-prim . make-syntax-violation)
        (g$6744$bmrAn core-prim . make-serious-condition)
        (g$6834$bmrAn core-prim . make-non-continuable-violation)
        (g$6714$bmrAn core-prim . make-message-condition)
        (g$6862$bmrAn core-prim . make-lexical-violation)
        (g$6801$bmrAn core-prim . make-irritants-condition)
        (g$6848$bmrAn core-prim . make-implementation-restriction-violation)
        (g$6758$bmrAn core-prim . make-error)
        (g$6786$bmrAn core-prim . make-assertion-violation)
        (g$6863$bmrAn core-prim . lexical-violation?)
        (g$6803$bmrAn core-prim . irritants-condition?)
        (g$6849$bmrAn core-prim . implementation-restriction-violation?)
        (g$6759$bmrAn core-prim . error?)
        (g$6821$bmrAn core-prim . condition-who)
        (g$12545$bmrAn core-prim . condition-predicate)
        (g$6717$bmrAn core-prim . condition-message)
        (g$6804$bmrAn core-prim . condition-irritants)
        (g$12544$bmrAn core-prim . condition-accessor)
        (g$12543$bmrAn core-prim . condition)
        (g$6787$bmrAn core-prim . assertion-violation?)
        (g$12542$bmrAn core-prim . condition?)
        (g$12541$bmrAn core-prim . utf32->string)
        (g$12540$bmrAn core-prim . utf16->string)
        (g$12539$bmrAn core-prim . utf8->string)
        (g$12538$bmrAn core-prim . uint-list->bytevector)
        (g$12537$bmrAn core-prim . u8-list->bytevector)
        (g$12536$bmrAn core-prim . string->utf8)
        (g$12535$bmrAn core-prim . string->utf32)
        (g$12534$bmrAn core-prim . string->utf16)
        (g$12533$bmrAn core-prim . sint-list->bytevector)
        (g$6572$bmrAn core-prim . native-endianness)
        (g$12532$bmrAn core-prim . bytevector?)
        (g$12531$bmrAn core-prim . bytevector=?)
        (g$12530$bmrAn core-prim . bytevector-uint-set!)
        (g$12529$bmrAn core-prim . bytevector-uint-ref)
        (g$12528$bmrAn core-prim . bytevector-u8-set!)
        (g$12527$bmrAn core-prim . bytevector-u8-ref)
        (g$6593$bmrAn core-prim . bytevector-u64-set!)
        (g$6589$bmrAn core-prim . bytevector-u64-ref)
        (g$6595$bmrAn core-prim . bytevector-u64-native-set!)
        (g$6591$bmrAn core-prim . bytevector-u64-native-ref)
        (g$6585$bmrAn core-prim . bytevector-u32-set!)
        (g$6581$bmrAn core-prim . bytevector-u32-ref)
        (g$6587$bmrAn core-prim . bytevector-u32-native-set!)
        (g$6583$bmrAn core-prim . bytevector-u32-native-ref)
        (g$6577$bmrAn core-prim . bytevector-u16-set!)
        (g$6573$bmrAn core-prim . bytevector-u16-ref)
        (g$6579$bmrAn core-prim . bytevector-u16-native-set!)
        (g$6575$bmrAn core-prim . bytevector-u16-native-ref)
        (g$12526$bmrAn core-prim . bytevector-sint-set!)
        (g$12525$bmrAn core-prim . bytevector-sint-ref)
        (g$12524$bmrAn core-prim . bytevector-s8-set!)
        (g$12523$bmrAn core-prim . bytevector-s8-ref)
        (g$6594$bmrAn core-prim . bytevector-s64-set!)
        (g$6590$bmrAn core-prim . bytevector-s64-ref)
        (g$6596$bmrAn core-prim . bytevector-s64-native-set!)
        (g$6592$bmrAn core-prim . bytevector-s64-native-ref)
        (g$6586$bmrAn core-prim . bytevector-s32-set!)
        (g$6582$bmrAn core-prim . bytevector-s32-ref)
        (g$6588$bmrAn core-prim . bytevector-s32-native-set!)
        (g$6584$bmrAn core-prim . bytevector-s32-native-ref)
        (g$6578$bmrAn core-prim . bytevector-s16-set!)
        (g$6574$bmrAn core-prim . bytevector-s16-ref)
        (g$6580$bmrAn core-prim . bytevector-s16-native-set!)
        (g$6576$bmrAn core-prim . bytevector-s16-native-ref)
        (g$12522$bmrAn core-prim . bytevector-length)
        (g$12521$bmrAn core-prim . bytevector-ieee-single-set!)
        (g$12520$bmrAn core-prim . bytevector-ieee-single-ref)
        (g$6599$bmrAn core-prim . bytevector-ieee-single-native-set!)
        (g$6597$bmrAn core-prim . bytevector-ieee-single-native-ref)
        (g$12519$bmrAn core-prim . bytevector-ieee-double-set!)
        (g$12518$bmrAn core-prim . bytevector-ieee-double-ref)
        (g$6600$bmrAn core-prim . bytevector-ieee-double-native-set!)
        (g$6598$bmrAn core-prim . bytevector-ieee-double-native-ref)
        (g$12517$bmrAn core-prim . bytevector-fill!)
        (g$12516$bmrAn core-prim . bytevector-copy!)
        (g$12515$bmrAn core-prim . bytevector-copy)
        (g$12514$bmrAn core-prim . bytevector->uint-list)
        (g$12513$bmrAn core-prim . bytevector->u8-list)
        (g$12512$bmrAn core-prim . bytevector->sint-list)
        (g$7196$bmrAn core-prim . no-nans-violation?)
        (g$7182$bmrAn core-prim . no-infinities-violation?)
        (g$7195$bmrAn core-prim . make-no-nans-violation)
        (g$7181$bmrAn core-prim . make-no-infinities-violation)
        (g$12511$bmrAn core-prim . real->flonum)
        (g$12510$bmrAn core-prim . flzero?)
        (g$12509$bmrAn core-prim . fltruncate)
        (g$12508$bmrAn core-prim . fltan)
        (g$12507$bmrAn core-prim . flsqrt)
        (g$12506$bmrAn core-prim . flsin)
        (g$12505$bmrAn core-prim . flround)
        (g$12504$bmrAn core-prim . flpositive?)
        (g$12503$bmrAn core-prim . flonum?)
        (g$12502$bmrAn core-prim . flodd?)
        (g$12501$bmrAn core-prim . flnumerator)
        (g$12500$bmrAn core-prim . flnegative?)
        (g$12499$bmrAn core-prim . flnan?)
        (g$12498$bmrAn core-prim . flmod0)
        (g$12497$bmrAn core-prim . flmod)
        (g$12496$bmrAn core-prim . flmin)
        (g$12495$bmrAn core-prim . flmax)
        (g$12494$bmrAn core-prim . fllog)
        (g$12493$bmrAn core-prim . flinteger?)
        (g$12492$bmrAn core-prim . flinfinite?)
        (g$12491$bmrAn core-prim . flfloor)
        (g$12490$bmrAn core-prim . flfinite?)
        (g$12489$bmrAn core-prim . flexpt)
        (g$12488$bmrAn core-prim . flexp)
        (g$12487$bmrAn core-prim . fleven?)
        (g$12486$bmrAn core-prim . fldiv0-and-mod0)
        (g$12485$bmrAn core-prim . fldiv0)
        (g$12484$bmrAn core-prim . fldiv-and-mod)
        (g$12483$bmrAn core-prim . fldiv)
        (g$12482$bmrAn core-prim . fldenominator)
        (g$12481$bmrAn core-prim . flcos)
        (g$12480$bmrAn core-prim . flceiling)
        (g$12479$bmrAn core-prim . flatan)
        (g$12478$bmrAn core-prim . flasin)
        (g$12477$bmrAn core-prim . flacos)
        (g$12476$bmrAn core-prim . flabs)
        (g$12475$bmrAn core-prim . fl>?)
        (g$12474$bmrAn core-prim . fl>=?)
        (g$12473$bmrAn core-prim . fl=?)
        (g$12472$bmrAn core-prim . fl<?)
        (g$12471$bmrAn core-prim . fl<=?)
        (g$12470$bmrAn core-prim . fl/)
        (g$12469$bmrAn core-prim . fl-)
        (g$12468$bmrAn core-prim . fl+)
        (g$12467$bmrAn core-prim . fl*)
        (g$12466$bmrAn core-prim . fixnum->flonum)
        (g$12465$bmrAn core-prim . fxzero?)
        (g$12464$bmrAn core-prim . fxxor)
        (g$7128$bmrAn core-prim . fxrotate-bit-field)
        (g$12463$bmrAn core-prim . fxreverse-bit-field)
        (g$12462$bmrAn core-prim . fxpositive?)
        (g$12461$bmrAn core-prim . fxodd?)
        (g$12460$bmrAn core-prim . fxnot)
        (g$12459$bmrAn core-prim . fxnegative?)
        (g$12458$bmrAn core-prim . fxmod0)
        (g$12457$bmrAn core-prim . fxmod)
        (g$12456$bmrAn core-prim . fxmin)
        (g$12455$bmrAn core-prim . fxmax)
        (g$12454$bmrAn core-prim . fxlength)
        (g$12453$bmrAn core-prim . fxior)
        (g$7122$bmrAn core-prim . fxif)
        (g$12452$bmrAn core-prim . fxfirst-bit-set)
        (g$12451$bmrAn core-prim . fxeven?)
        (g$12450$bmrAn core-prim . fxdiv0-and-mod0)
        (g$12449$bmrAn core-prim . fxdiv0)
        (g$12448$bmrAn core-prim . fxdiv-and-mod)
        (g$12447$bmrAn core-prim . fxdiv)
        (g$7125$bmrAn core-prim . fxcopy-bit-field)
        (g$7123$bmrAn core-prim . fxcopy-bit)
        (g$12446$bmrAn core-prim . fxbit-set?)
        (g$7124$bmrAn core-prim . fxbit-field)
        (g$12445$bmrAn core-prim . fxbit-count)
        (g$7127$bmrAn core-prim . fxarithmetic-shift-right)
        (g$7126$bmrAn core-prim . fxarithmetic-shift-left)
        (g$12444$bmrAn core-prim . fxarithmetic-shift)
        (g$12443$bmrAn core-prim . fxand)
        (g$12442$bmrAn core-prim . fx>?)
        (g$12441$bmrAn core-prim . fx>=?)
        (g$12440$bmrAn core-prim . fx=?)
        (g$12439$bmrAn core-prim . fx<?)
        (g$12438$bmrAn core-prim . fx<=?)
        (g$7120$bmrAn core-prim . fx-/carry)
        (g$12437$bmrAn core-prim . fx-)
        (g$7121$bmrAn core-prim . fx+/carry)
        (g$12436$bmrAn core-prim . fx+)
        (g$7119$bmrAn core-prim . fx*/carry)
        (g$12435$bmrAn core-prim . fx*)
        (g$12434$bmrAn core-prim . greatest-fixnum)
        (g$12433$bmrAn core-prim . least-fixnum)
        (g$12432$bmrAn core-prim . fixnum-width)
        (g$12431$bmrAn core-prim . fixnum?)
        (g$7093$bmrAn core-prim . bitwise-rotate-bit-field)
        (g$12430$bmrAn core-prim . bitwise-reverse-bit-field)
        (g$12429$bmrAn core-prim . bitwise-length)
        (g$7087$bmrAn core-prim . bitwise-if)
        (g$12428$bmrAn core-prim . bitwise-first-bit-set)
        (g$7090$bmrAn core-prim . bitwise-copy-bit-field)
        (g$7088$bmrAn core-prim . bitwise-copy-bit)
        (g$12427$bmrAn core-prim . bitwise-bit-set?)
        (g$7089$bmrAn core-prim . bitwise-bit-field)
        (g$12426$bmrAn core-prim . bitwise-bit-count)
        (g$12425$bmrAn core-prim . bitwise-xor)
        (g$12424$bmrAn core-prim . bitwise-ior)
        (g$12423$bmrAn core-prim . bitwise-and)
        (g$12422$bmrAn core-prim . bitwise-not)
        (g$7092$bmrAn core-prim . bitwise-arithmetic-shift-right)
        (g$7091$bmrAn core-prim . bitwise-arithmetic-shift-left)
        (g$12421$bmrAn core-prim . bitwise-arithmetic-shift)
        (g$6018$bmrAn core-prim . zero?)
        (g$12420$bmrAn core-prim . vector?)
        (g$12419$bmrAn core-prim . vector-set!)
        (g$12418$bmrAn core-prim . vector-ref)
        (g$12417$bmrAn core-prim . vector-map)
        (g$12416$bmrAn core-prim . vector-length)
        (g$12415$bmrAn core-prim . vector-for-each)
        (g$12414$bmrAn core-prim . vector-fill!)
        (g$12413$bmrAn core-prim . vector->list)
        (g$12412$bmrAn core-prim . vector)
        (g$12411$bmrAn core-prim . values)
        (g$12410$bmrAn core-prim . truncate)
        (g$12409$bmrAn core-prim . tan)
        (g$12408$bmrAn core-prim . symbol?)
        (g$6064$bmrAn core-prim . symbol=?)
        (g$12407$bmrAn core-prim . symbol->string)
        (g$12406$bmrAn core-prim . substring)
        (g$12405$bmrAn core-prim . string?)
        (g$6061$bmrAn core-prim . string>?)
        (g$6063$bmrAn core-prim . string>=?)
        (g$6059$bmrAn core-prim . string=?)
        (g$6060$bmrAn core-prim . string<?)
        (g$6062$bmrAn core-prim . string<=?)
        (g$12404$bmrAn core-prim . string-ref)
        (g$12403$bmrAn core-prim . string-length)
        (g$12402$bmrAn core-prim . string-for-each)
        (g$12401$bmrAn core-prim . string-copy)
        (g$12400$bmrAn core-prim . string-append)
        (g$12399$bmrAn core-prim . string->symbol)
        (g$12398$bmrAn core-prim . string->number)
        (g$12397$bmrAn core-prim . string->list)
        (g$12396$bmrAn core-prim . string)
        (g$12395$bmrAn core-prim . sqrt)
        (g$12394$bmrAn core-prim . sin)
        (g$12393$bmrAn core-prim . round)
        (g$12392$bmrAn core-prim . reverse)
        (g$12391$bmrAn core-prim . real?)
        (g$12390$bmrAn core-prim . real-valued?)
        (g$12389$bmrAn core-prim . real-part)
        (g$6105$bmrAn core-prim . rationalize)
        (g$12388$bmrAn core-prim . rational?)
        (g$12387$bmrAn core-prim . rational-valued?)
        (g$12386$bmrAn core-prim . procedure?)
        (g$6016$bmrAn core-prim . positive?)
        (g$12385$bmrAn core-prim . pair?)
        (g$6020$bmrAn core-prim . odd?)
        (g$12384$bmrAn core-prim . numerator)
        (g$12383$bmrAn core-prim . number?)
        (g$12382$bmrAn core-prim . number->string)
        (g$12381$bmrAn core-prim . null?)
        (g$12380$bmrAn core-prim . not)
        (g$6017$bmrAn core-prim . negative?)
        (g$12379$bmrAn core-prim . nan?)
        (g$6022$bmrAn core-prim . min)
        (g$6021$bmrAn core-prim . max)
        (g$5870$bmrAn core-prim . map)
        (g$12378$bmrAn core-prim . make-vector)
        (g$12377$bmrAn core-prim . make-string)
        (g$12376$bmrAn core-prim . make-rectangular)
        (g$12375$bmrAn core-prim . make-polar)
        (g$12374$bmrAn core-prim . magnitude)
        (g$12373$bmrAn core-prim . log)
        (g$12372$bmrAn core-prim . list?)
        (g$5850$bmrAn core-prim . list-tail)
        (g$5851$bmrAn core-prim . list-ref)
        (g$12371$bmrAn core-prim . list->vector)
        (g$12370$bmrAn core-prim . list->string)
        (g$12369$bmrAn core-prim . list)
        (g$12368$bmrAn core-prim . length)
        (g$6024$bmrAn core-prim . lcm)
        (g$12367$bmrAn core-prim . integer?)
        (g$12366$bmrAn core-prim . integer-valued?)
        (g$12365$bmrAn core-prim . integer->char)
        (g$12364$bmrAn core-prim . infinite?)
        (g$12363$bmrAn core-prim . inexact?)
        (g$12362$bmrAn core-prim . inexact)
        (g$12361$bmrAn core-prim . imag-part)
        (g$6023$bmrAn core-prim . gcd)
        (g$5871$bmrAn core-prim . for-each)
        (g$12360$bmrAn core-prim . floor)
        (g$12359$bmrAn core-prim . finite?)
        (g$12358$bmrAn core-prim . expt)
        (g$12357$bmrAn core-prim . exp)
        (g$12356$bmrAn core-prim . exact?)
        (g$12355$bmrAn core-prim . exact-integer-sqrt)
        (g$12354$bmrAn core-prim . exact)
        (g$6019$bmrAn core-prim . even?)
        (g$12353$bmrAn core-prim . error)
        (g$12352$bmrAn core-prim . eqv?)
        (g$12351$bmrAn core-prim . equal?)
        (g$12350$bmrAn core-prim . eq?)
        (g$12349$bmrAn core-prim . dynamic-wind)
        (g$12348$bmrAn core-prim . div0-and-mod0)
        (g$12347$bmrAn core-prim . mod0)
        (g$12346$bmrAn core-prim . div0)
        (g$12345$bmrAn core-prim . div-and-mod)
        (g$12344$bmrAn core-prim . mod)
        (g$12343$bmrAn core-prim . div)
        (g$12342$bmrAn core-prim . denominator)
        (g$12341$bmrAn core-prim . cos)
        (g$12340$bmrAn core-prim . cons)
        (g$12339$bmrAn core-prim . complex?)
        (g$12338$bmrAn core-prim . char?)
        (g$6102$bmrAn core-prim . char>?)
        (g$6104$bmrAn core-prim . char>=?)
        (g$6100$bmrAn core-prim . char=?)
        (g$6101$bmrAn core-prim . char<?)
        (g$6103$bmrAn core-prim . char<=?)
        (g$12337$bmrAn core-prim . char->integer)
        (g$12336$bmrAn core-prim . ceiling)
        (g$12335$bmrAn core-prim . call-with-values)
        (g$12334$bmrAn core-prim . call/cc)
        (g$12333$bmrAn core-prim . call-with-current-continuation)
        (g$6015$bmrAn core-prim . cddddr)
        (g$6014$bmrAn core-prim . cdddar)
        (g$6013$bmrAn core-prim . cddadr)
        (g$6012$bmrAn core-prim . cddaar)
        (g$6011$bmrAn core-prim . cdaddr)
        (g$6010$bmrAn core-prim . cdadar)
        (g$6009$bmrAn core-prim . cdaadr)
        (g$6008$bmrAn core-prim . cdaaar)
        (g$6007$bmrAn core-prim . cadddr)
        (g$6006$bmrAn core-prim . caddar)
        (g$6005$bmrAn core-prim . cadadr)
        (g$6004$bmrAn core-prim . cadaar)
        (g$6003$bmrAn core-prim . caaddr)
        (g$6002$bmrAn core-prim . caadar)
        (g$6001$bmrAn core-prim . caaadr)
        (g$6000$bmrAn core-prim . caaaar)
        (g$5999$bmrAn core-prim . cdddr)
        (g$5998$bmrAn core-prim . cddar)
        (g$5997$bmrAn core-prim . cdadr)
        (g$5996$bmrAn core-prim . cdaar)
        (g$5995$bmrAn core-prim . caddr)
        (g$5994$bmrAn core-prim . cadar)
        (g$5993$bmrAn core-prim . caadr)
        (g$5992$bmrAn core-prim . caaar)
        (g$5991$bmrAn core-prim . cddr)
        (g$5990$bmrAn core-prim . cdar)
        (g$5989$bmrAn core-prim . cadr)
        (g$5988$bmrAn core-prim . caar)
        (g$12332$bmrAn core-prim . cdr)
        (g$12331$bmrAn core-prim . car)
        (g$12330$bmrAn core-prim . boolean?)
        (g$6065$bmrAn core-prim . boolean=?)
        (g$12329$bmrAn core-prim . atan)
        (g$12328$bmrAn core-prim . assertion-violation)
        (g$12327$bmrAn core-prim . asin)
        (g$12326$bmrAn core-prim . apply)
        (g$12325$bmrAn core-prim . append)
        (g$12324$bmrAn core-prim . angle)
        (g$12323$bmrAn core-prim . acos)
        (g$12322$bmrAn core-prim . abs)
        (g$12321$bmrAn core-prim . /)
        (g$12320$bmrAn core-prim . *)
        (g$12319$bmrAn core-prim . -)
        (g$12318$bmrAn core-prim . +)
        (g$12317$bmrAn core-prim . >=)
        (g$12316$bmrAn core-prim . >)
        (g$12315$bmrAn core-prim . =)
        (g$12314$bmrAn core-prim . <=)
        (g$12313$bmrAn core-prim . <)
        (g$12312$bmrAn core-prim . make-record-printer)
        (g$12311$bmrAn core-prim . eqv-hash)
        (g$12310$bmrAn core-prim . reverse!)
        (g$12309$bmrAn core-prim . deserialize-port)
        (g$12308$bmrAn core-prim . serialize-port)
        (g$7457$bmrAn core-prim . enum-set?)
        (g$6914$bmrAn core-prim . make-promise)
        (g$12143$bmrAn core-prim . load/args)
        (g$7568$bmrAn core-prim . printf)
        (g$7569$bmrAn core-prim . fprintf)
        (g$7570$bmrAn core-prim . format)
        (g$12307$bmrAn core-prim . procedure-form)
        (g$12306$bmrAn core-prim . procedure-environment)
        (g$12305$bmrAn core-prim . procedure-name)
        (g$12304$bmrAn core-prim . procedure-arity)
        (g$12303$bmrAn core-prim . gc-collect)
        (g$12302$bmrAn core-prim . clr-type?)
        (g$12301$bmrAn core-prim . get-clr-type)
        (g$12300$bmrAn core-prim . get-command-line)
        (g$12299$bmrAn core-prim . vector-append)
        (g$12298$bmrAn core-prim . vector-filter)
        (g$12297$bmrAn core-prim . vector-reverse!)
        (g$12296$bmrAn core-prim . vector-contains?)
        (g$12295$bmrAn core-prim . vector-index-of)
        (g$12294$bmrAn core-prim . vector-copy)
        (g$12293$bmrAn core-prim . vector-binary-search)
        (g$12292$bmrAn core-prim . string-ci-compare)
        (g$12291$bmrAn core-prim . string-compare)
        (g$12290$bmrAn core-prim . string-format)
        (g$12140$bmrAn core-prim . trace-printer)
        (g$12289$bmrAn core-prim . make-traced-procedure)
        (g$7590$bmrAn core-prim . make-traced-macro)
        (g$9153$bmrAn core-prim . assertion-error)
        (g$12288$bmrAn core-prim . time-it)
        (g$7858$bmrAn core-prim . make-parameter)
        (g$12287$bmrAn core-prim . library-locator)
        (g$12286$bmrAn core-prim . get-library-paths)
        (g$12285$bmrAn core-prim . open-tcp-input/output-port)
        (g$12284$bmrAn core-prim . hashtable-for-each)
        (g$12283$bmrAn core-prim . hashtable-map)
        (g$9131$bmrAn core-prim . environment-bindings)
        (g$9134$bmrAn core-prim . environment-symbols)
        (g$9130$bmrAn core-prim . interaction-environment-symbols)
        (g$12282$bmrAn core-prim . optimization-level)
        (g$8313$bmrAn core-prim . library-path)
        (g$9140$bmrAn core-prim . expand->core)
        (g$9138$bmrAn core-prim . expand)
        (g$12281$bmrAn $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$12280$bmrAn $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$12279$bmrAn $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$12278$bmrAn $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$12277$bmrAn $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$12276$bmrAn
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$12275$bmrAn
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$12274$bmrAn
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$12273$bmrAn
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$12272$bmrAn $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$12271$bmrAn
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$12270$bmrAn $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$12269$bmrAn $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$12268$bmrAn $core-rtd &i/o-rtd &i/o-rcd)
        (g$12267$bmrAn $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12266$bmrAn $core-rtd &undefined-rtd &undefined-rcd)
        (g$12265$bmrAn $core-rtd &syntax-rtd &syntax-rcd)
        (g$12264$bmrAn $core-rtd &lexical-rtd &lexical-rcd)
        (g$12263$bmrAn
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$12262$bmrAn $core-rtd &who-rtd &who-rcd)
        (g$12261$bmrAn $core-rtd &irritants-rtd &irritants-rcd)
        (g$12260$bmrAn $core-rtd &assertion-rtd &assertion-rcd)
        (g$12259$bmrAn $core-rtd &violation-rtd &violation-rcd)
        (g$12258$bmrAn $core-rtd &error-rtd &error-rcd)
        (g$12257$bmrAn $core-rtd &serious-rtd &serious-rcd)
        (g$12256$bmrAn $core-rtd &warning-rtd &warning-rcd)
        (g$12255$bmrAn $core-rtd &message-rtd &message-rcd)
        (g$12254$bmrAn $core-rtd &condition-rtd &condition-rcd)
        (g$12253$bmrAn macro . define-condition-type)
        (g$12252$bmrAn macro . define-enumeration)
        (g$12251$bmrAn macro . define-record-type)
        (g$12250$bmrAn macro . parent-rtd)
        (g$12249$bmrAn macro . nongenerative)
        (g$12248$bmrAn macro . opaque)
        (g$12247$bmrAn macro . sealed)
        (g$12246$bmrAn macro . protocol)
        (g$12245$bmrAn macro . parent)
        (g$12244$bmrAn macro . immutable)
        (g$12243$bmrAn macro . mutable)
        (g$12242$bmrAn macro . fields)
        (g$12241$bmrAn macro . error-handling-mode)
        (g$12240$bmrAn macro . file-options)
        (g$12239$bmrAn macro . buffer-mode)
        (g$12238$bmrAn macro . eol-style)
        (g$12237$bmrAn macro . guard)
        (g$12236$bmrAn macro . trace-letrec-syntax)
        (g$12235$bmrAn macro . trace-let-syntax)
        (g$12234$bmrAn macro . trace-define-syntax)
        (g$12233$bmrAn macro . trace-define)
        (g$12232$bmrAn macro . trace-lambda)
        (g$12231$bmrAn macro . unsyntax-splicing)
        (g$12230$bmrAn macro . unsyntax)
        (g$12229$bmrAn macro . unquote-splicing)
        (g$12228$bmrAn macro . unquote)
        (g$12227$bmrAn macro . _)
        (g$12226$bmrAn macro . else)
        (g$12225$bmrAn macro . =>)
        (g$12224$bmrAn macro . ...)
        (g$12223$bmrAn macro . assert)
        (g$12222$bmrAn macro . endianness)
        (g$12221$bmrAn macro . delay)
        (g$12220$bmrAn macro . time)
        (g$12219$bmrAn macro . or)
        (g$12218$bmrAn macro . and)
        (g$12217$bmrAn macro . do)
        (g$12216$bmrAn macro . cond)
        (g$12215$bmrAn macro . let*)
        (g$12214$bmrAn macro . let)
        (g$12213$bmrAn macro . identifier-syntax)
        (g$12212$bmrAn macro . with-syntax)
        (g$12211$bmrAn macro . quasisyntax)
        (g$12210$bmrAn macro . quasiquote)
        (g$12209$bmrAn macro . syntax-rules)
        (g$12208$bmrAn macro . include-into)
        (g$12207$bmrAn macro . include)
        (g$12206$bmrAn macro . define-struct)
        (g$12205$bmrAn macro . let-values)
        (g$12204$bmrAn macro . let*-values)
        (g$12203$bmrAn core-macro . record-constructor-descriptor)
        (g$12202$bmrAn core-macro . record-type-descriptor)
        (g$12201$bmrAn core-macro . fluid-let-syntax)
        (g$12200$bmrAn macro . case)
        (g$12199$bmrAn macro . parameterize)
        (g$12198$bmrAn macro . unless)
        (g$12197$bmrAn macro . when)
        (g$12196$bmrAn core-macro . if)
        (g$12195$bmrAn core-macro . letrec*)
        (g$12194$bmrAn core-macro . letrec)
        (g$12193$bmrAn core-macro . type-descriptor)
        (g$12192$bmrAn core-macro . case-lambda)
        (g$12191$bmrAn core-macro . lambda)
        (g$12190$bmrAn core-macro . syntax)
        (g$12189$bmrAn core-macro . syntax-case)
        (g$12188$bmrAn core-macro . quote)
        (g$12187$bmrAn core-macro . foreign-call)
        (g$12186$bmrAn letrec-syntax)
        (g$12185$bmrAn let-syntax)
        (g$12184$bmrAn set!)
        (g$12183$bmrAn export)
        (g$12182$bmrAn import)
        (g$12181$bmrAn library)
        (g$12180$bmrAn begin)
        (g$12179$bmrAn module)
        (g$12178$bmrAn define-syntax)
        (g$12177$bmrAn define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7511$bmrAn
      'g$12804$bmrAn
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$12687$bmrAn)
        (eval-core . g$12686$bmrAn)
        (set-symbol-value! . g$12685$bmrAn)
        (symbol-value . g$12684$bmrAn)
        (gensym . g$12682$bmrAn)
        (void . g$12681$bmrAn))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$11605$bmrAn
     g$trace-printer$11645$bmrAn
     (g$make-parameter$6975$bmrAn write))
   (g$command-line$11606$bmrAn
     g$command-line$11646$bmrAn
     (g$make-parameter$6975$bmrAn (get-command-line)))
   (g$local-library-path$11607$bmrAn
     g$local-library-path$11647$bmrAn
     (case-lambda
       ((g$filename$11618$bmrAn)
        (cons
          (g$get-directory-name$5558$bmrAn g$filename$11618$bmrAn)
          (g$library-path$7495$bmrAn)))))
   (g$load/args$11608$bmrAn
     g$load/args$11648$bmrAn
     (case-lambda
       ((g$filename$11619$bmrAn . g$args$11620$bmrAn)
        (begin
          (apply
            g$load-r6rs-top-level$11615$bmrAn
            g$filename$11619$bmrAn
            'load
            g$args$11620$bmrAn)
          (void)))))
   (g$load$11609$bmrAn
     g$load$11649$bmrAn
     (case-lambda
       ((g$filename$11621$bmrAn)
        (begin
          (apply
            g$load-r6rs-top-level$11615$bmrAn
            g$filename$11621$bmrAn
            'load
            (cdr (g$command-line$11606$bmrAn)))
          (void)))))
   (g$ironscheme-build$11610$bmrAn
     g$ironscheme-build$11650$bmrAn
     (case-lambda (() (g$load$11609$bmrAn '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$11611$bmrAn
     g$eval-top-level$11651$bmrAn
     (case-lambda
       ((g$x$11622$bmrAn)
        (g$eval$11578$bmrAn
          g$x$11622$bmrAn
          (g$interaction-environment$11603$bmrAn)))))
   (g$compile-system-libraries$11612$bmrAn
     g$compile-system-libraries$11652$bmrAn
     (case-lambda
       (()
        (g$eval-top-level$11611$bmrAn
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$11613$bmrAn
     g$compile$11653$bmrAn
     (case-lambda
       ((g$filename$11623$bmrAn)
        (g$load-r6rs-top-level$11615$bmrAn g$filename$11623$bmrAn 'compile))))
   (g$compile->closure$11614$bmrAn
     g$compile->closure$11654$bmrAn
     (case-lambda
       ((g$filename$11624$bmrAn)
        (g$load-r6rs-top-level$11615$bmrAn g$filename$11624$bmrAn 'closure))))
   (g$load-r6rs-top-level$11615$bmrAn
     g$load-r6rs-top-level$11655$bmrAn
     (case-lambda
       ((g$filename$11625$bmrAn g$how$11626$bmrAn . g$args$11627$bmrAn)
        ((case-lambda
           ((g$library-path$11630$bmrAn g$library-path$11631$bmrAn)
            ((case-lambda
               ((g$swap$11632$bmrAn)
                (dynamic-wind
                  g$swap$11632$bmrAn
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$11633$bmrAn)
                         ((case-lambda
                            ((g$t$11634$bmrAn)
                             (if (g$memv$5056$bmrAn g$t$11634$bmrAn '(closure))
                               (g$pre-compile-r6rs-top-level$11601$bmrAn
                                 g$x*$11633$bmrAn)
                               (if (g$memv$5056$bmrAn g$t$11634$bmrAn '(load))
                                 ((case-lambda
                                    ((g$command-line$11637$bmrAn
                                       g$command-line$11638$bmrAn)
                                     ((case-lambda
                                        ((g$swap$11639$bmrAn)
                                         (dynamic-wind
                                           g$swap$11639$bmrAn
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$11600$bmrAn
                                                 g$x*$11633$bmrAn))))
                                           g$swap$11639$bmrAn)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$11640$bmrAn)
                                             (begin
                                               (g$command-line$11637$bmrAn
                                                 g$command-line$11638$bmrAn)
                                               (set! g$command-line$11638$bmrAn
                                                 g$t$11640$bmrAn))))
                                          (g$command-line$11637$bmrAn)))))))
                                  g$command-line$11606$bmrAn
                                  (cons
                                    g$filename$11625$bmrAn
                                    (g$map$5063$bmrAn
                                      (case-lambda
                                        ((g$x$11641$bmrAn)
                                         (g$format$6559$bmrAn
                                           '"~a"
                                           g$x$11641$bmrAn)))
                                      g$args$11627$bmrAn)))
                                 (if (g$memv$5056$bmrAn
                                       g$t$11634$bmrAn
                                       '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$11600$bmrAn
                                       g$x*$11633$bmrAn)
                                     (g$serialize-all$7499$bmrAn
                                       serialize-library
                                       g$compile-core-expr$7222$bmrAn))
                                   (if '#f '#f (void)))))))
                          g$how$11626$bmrAn)))
                      (g$with-input-from-file$6385$bmrAn
                        g$filename$11625$bmrAn
                        (case-lambda
                          (()
                           ((letrec ((g$f$11642$bmrAn
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$11643$bmrAn)
                                              (if (eof-object? g$x$11643$bmrAn)
                                                '()
                                                (cons
                                                  g$x$11643$bmrAn
                                                  (g$f$11642$bmrAn)))))
                                           (read-annotated))))))
                              g$f$11642$bmrAn))))))))
                  g$swap$11632$bmrAn)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$11644$bmrAn)
                    (begin
                      (g$library-path$11630$bmrAn g$library-path$11631$bmrAn)
                      (set! g$library-path$11631$bmrAn g$t$11644$bmrAn))))
                 (g$library-path$11630$bmrAn)))))))
         g$library-path$7495$bmrAn
         (g$local-library-path$11607$bmrAn g$filename$11625$bmrAn)))))
   (g$fo$11616$bmrAn
     g$fo$11656$bmrAn
     (g$make-enumeration$6521$bmrAn '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$7500$bmrAn
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$11617$bmrAn)
         (if (g$serious-condition?$5820$bmrAn g$ex$11617$bmrAn)
           (raise g$ex$11617$bmrAn)
           (begin (display g$ex$11617$bmrAn) (g$newline$6389$bmrAn))))))
    (set-symbol-value! 'load g$load$11609$bmrAn)
    (set-symbol-value! 'compile g$compile$11613$bmrAn)
    (set-symbol-value! 'compile->closure g$compile->closure$11614$bmrAn)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$11611$bmrAn)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$11569$bmrAn)
    (set-symbol-value! 'expanded2core g$expanded->core$7221$bmrAn)
    (set-symbol-value! 'trace-printer g$trace-printer$11605$bmrAn)
    (set-symbol-value! 'convert->cps g$convert->cps$6875$bmrAn)
    (g$file-options-constructor$6976$bmrAn
      (g$enum-set-constructor$6524$bmrAn g$fo$11616$bmrAn))
    (g$library-path$7495$bmrAn (get-library-paths))))

