;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme lists)
  ((g$find$4876$1RbCyC
     g$find$4981$1RbCyC
     (case-lambda
       ((g$proc$4898$1RbCyC g$l$4899$1RbCyC)
        (if (null? g$l$4899$1RbCyC)
          '#f
          ((case-lambda
             ((g$e$4900$1RbCyC)
              (if (g$proc$4898$1RbCyC g$e$4900$1RbCyC)
                g$e$4900$1RbCyC
                (g$find$4876$1RbCyC g$proc$4898$1RbCyC (cdr g$l$4899$1RbCyC)))))
           (car g$l$4899$1RbCyC))))))
   (g$partition$4877$1RbCyC
     g$partition$4982$1RbCyC
     (case-lambda
       ((g$proc$4901$1RbCyC g$l$4902$1RbCyC)
        ((letrec ((g$f$4903$1RbCyC
                    (case-lambda
                      ((g$l$4904$1RbCyC g$a$4905$1RbCyC g$b$4906$1RbCyC)
                       (if (null? g$l$4904$1RbCyC)
                         (values
                           (reverse! g$a$4905$1RbCyC)
                           (reverse! g$b$4906$1RbCyC))
                         ((case-lambda
                            ((g$e$4907$1RbCyC)
                             (if (g$proc$4901$1RbCyC g$e$4907$1RbCyC)
                               (g$f$4903$1RbCyC
                                 (cdr g$l$4904$1RbCyC)
                                 (cons g$e$4907$1RbCyC g$a$4905$1RbCyC)
                                 g$b$4906$1RbCyC)
                               (g$f$4903$1RbCyC
                                 (cdr g$l$4904$1RbCyC)
                                 g$a$4905$1RbCyC
                                 (cons g$e$4907$1RbCyC g$b$4906$1RbCyC)))))
                          (car g$l$4904$1RbCyC)))))))
           g$f$4903$1RbCyC)
         g$l$4902$1RbCyC
         '()
         '()))))
   (g$remp$4878$1RbCyC
     g$remp$4983$1RbCyC
     (case-lambda
       ((g$proc$4908$1RbCyC g$l$4909$1RbCyC)
        ((letrec ((g$f$4910$1RbCyC
                    (case-lambda
                      ((g$l$4911$1RbCyC g$a$4912$1RbCyC)
                       (if (null? g$l$4911$1RbCyC)
                         (reverse! g$a$4912$1RbCyC)
                         ((case-lambda
                            ((g$e$4913$1RbCyC)
                             (if (g$proc$4908$1RbCyC g$e$4913$1RbCyC)
                               (g$f$4910$1RbCyC
                                 (cdr g$l$4911$1RbCyC)
                                 g$a$4912$1RbCyC)
                               (g$f$4910$1RbCyC
                                 (cdr g$l$4911$1RbCyC)
                                 (cons g$e$4913$1RbCyC g$a$4912$1RbCyC)))))
                          (car g$l$4911$1RbCyC)))))))
           g$f$4910$1RbCyC)
         g$l$4909$1RbCyC
         '()))))
   (g$filter$4879$1RbCyC
     g$filter$4984$1RbCyC
     (case-lambda
       ((g$proc$4914$1RbCyC g$l$4915$1RbCyC)
        ((letrec ((g$f$4916$1RbCyC
                    (case-lambda
                      ((g$l$4917$1RbCyC g$a$4918$1RbCyC)
                       (if (null? g$l$4917$1RbCyC)
                         (reverse! g$a$4918$1RbCyC)
                         ((case-lambda
                            ((g$e$4919$1RbCyC)
                             (if (g$proc$4914$1RbCyC g$e$4919$1RbCyC)
                               (g$f$4916$1RbCyC
                                 (cdr g$l$4917$1RbCyC)
                                 (cons g$e$4919$1RbCyC g$a$4918$1RbCyC))
                               (g$f$4916$1RbCyC
                                 (cdr g$l$4917$1RbCyC)
                                 g$a$4918$1RbCyC))))
                          (car g$l$4917$1RbCyC)))))))
           g$f$4916$1RbCyC)
         g$l$4915$1RbCyC
         '()))))
   (g$assq$4880$1RbCyC
     g$assq$4985$1RbCyC
     (case-lambda
       ((g$obj$4920$1RbCyC g$lst$4921$1RbCyC)
        (if (null? g$lst$4921$1RbCyC)
          '#f
          ((case-lambda
             ((g$obj$4922$1RbCyC g$t$4923$1RbCyC g$r$4924$1RbCyC)
              (if (eq? g$obj$4922$1RbCyC (car g$t$4923$1RbCyC))
                g$t$4923$1RbCyC
                (g$assq$4880$1RbCyC g$obj$4922$1RbCyC g$r$4924$1RbCyC))))
           g$obj$4920$1RbCyC
           (car g$lst$4921$1RbCyC)
           (cdr g$lst$4921$1RbCyC))))))
   (g$assv$4881$1RbCyC
     g$assv$4986$1RbCyC
     (case-lambda
       ((g$obj$4925$1RbCyC g$lst$4926$1RbCyC)
        (if (null? g$lst$4926$1RbCyC)
          '#f
          ((case-lambda
             ((g$c$4927$1RbCyC)
              (if (eqv? g$obj$4925$1RbCyC (car g$c$4927$1RbCyC))
                g$c$4927$1RbCyC
                (g$assv$4881$1RbCyC
                  g$obj$4925$1RbCyC
                  (cdr g$lst$4926$1RbCyC)))))
           (car g$lst$4926$1RbCyC))))))
   (g$assoc$4882$1RbCyC
     g$assoc$4987$1RbCyC
     (case-lambda
       ((g$obj$4928$1RbCyC g$lst$4929$1RbCyC)
        (if (null? g$lst$4929$1RbCyC)
          '#f
          ((case-lambda
             ((g$c$4930$1RbCyC)
              (if (equal? g$obj$4928$1RbCyC (car g$c$4930$1RbCyC))
                g$c$4930$1RbCyC
                (g$assoc$4882$1RbCyC
                  g$obj$4928$1RbCyC
                  (cdr g$lst$4929$1RbCyC)))))
           (car g$lst$4929$1RbCyC))))))
   (g$assp$4883$1RbCyC
     g$assp$4988$1RbCyC
     (case-lambda
       ((g$p?$4931$1RbCyC g$lst$4932$1RbCyC)
        (if (null? g$lst$4932$1RbCyC)
          '#f
          ((case-lambda
             ((g$p?$4933$1RbCyC g$t$4934$1RbCyC g$r$4935$1RbCyC)
              (if (g$p?$4933$1RbCyC (car g$t$4934$1RbCyC))
                g$t$4934$1RbCyC
                (g$assp$4883$1RbCyC g$p?$4933$1RbCyC g$r$4935$1RbCyC))))
           g$p?$4931$1RbCyC
           (car g$lst$4932$1RbCyC)
           (cdr g$lst$4932$1RbCyC))))))
   (g$memq$4884$1RbCyC
     g$memq$4989$1RbCyC
     (case-lambda
       ((g$obj$4936$1RbCyC g$lst$4937$1RbCyC)
        (if (null? g$lst$4937$1RbCyC)
          '#f
          (if (eq? g$obj$4936$1RbCyC (car g$lst$4937$1RbCyC))
            g$lst$4937$1RbCyC
            (g$memq$4884$1RbCyC g$obj$4936$1RbCyC (cdr g$lst$4937$1RbCyC)))))))
   (g$memv$4885$1RbCyC
     g$memv$4990$1RbCyC
     (case-lambda
       ((g$obj$4938$1RbCyC g$lst$4939$1RbCyC)
        (if (null? g$lst$4939$1RbCyC)
          '#f
          (if (eqv? g$obj$4938$1RbCyC (car g$lst$4939$1RbCyC))
            g$lst$4939$1RbCyC
            (g$memv$4885$1RbCyC g$obj$4938$1RbCyC (cdr g$lst$4939$1RbCyC)))))))
   (g$member$4886$1RbCyC
     g$member$4991$1RbCyC
     (case-lambda
       ((g$obj$4940$1RbCyC g$lst$4941$1RbCyC)
        (if (null? g$lst$4941$1RbCyC)
          '#f
          (if (equal? g$obj$4940$1RbCyC (car g$lst$4941$1RbCyC))
            g$lst$4941$1RbCyC
            (g$member$4886$1RbCyC
              g$obj$4940$1RbCyC
              (cdr g$lst$4941$1RbCyC)))))))
   (g$memp$4887$1RbCyC
     g$memp$4992$1RbCyC
     (case-lambda
       ((g$p?$4942$1RbCyC g$lst$4943$1RbCyC)
        (if (null? g$lst$4943$1RbCyC)
          '#f
          (if (g$p?$4942$1RbCyC (car g$lst$4943$1RbCyC))
            g$lst$4943$1RbCyC
            (g$memp$4887$1RbCyC g$p?$4942$1RbCyC (cdr g$lst$4943$1RbCyC)))))))
   (g$all-empty?$4888$1RbCyC
     g$all-empty?$4993$1RbCyC
     (case-lambda
       ((g$ls$4944$1RbCyC)
        ((case-lambda
           ((g$t$4945$1RbCyC)
            (if g$t$4945$1RbCyC
              g$t$4945$1RbCyC
              (begin
                '#f
                (if (null? (car g$ls$4944$1RbCyC))
                  (begin '#f (g$all-empty?$4888$1RbCyC (cdr g$ls$4944$1RbCyC)))
                  '#f)))))
         (null? g$ls$4944$1RbCyC)))))
   (g$split$4889$1RbCyC
     g$split$4994$1RbCyC
     (case-lambda
       ((g$ls$4946$1RbCyC)
        (if (null? g$ls$4946$1RbCyC)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$4889$1RbCyC (cdr g$ls$4946$1RbCyC))))
            (case-lambda
              ((g$cars$4947$1RbCyC g$cdrs$4948$1RbCyC)
               ((case-lambda
                  ((g$a$4949$1RbCyC)
                   (values
                     (cons (car g$a$4949$1RbCyC) g$cars$4947$1RbCyC)
                     (cons (cdr g$a$4949$1RbCyC) g$cdrs$4948$1RbCyC))))
                (car g$ls$4946$1RbCyC)))))))))
   (g$for-all$4890$1RbCyC
     g$for-all$4995$1RbCyC
     (case-lambda
       ((g$f$4950$1RbCyC . g$args$4951$1RbCyC)
        (if (g$all-empty?$4888$1RbCyC g$args$4951$1RbCyC)
          '#t
          (call-with-values
            (case-lambda (() (g$split$4889$1RbCyC g$args$4951$1RbCyC)))
            (case-lambda
              ((g$cars$4952$1RbCyC g$cdrs$4953$1RbCyC)
               (if (g$all-empty?$4888$1RbCyC g$cdrs$4953$1RbCyC)
                 (apply g$f$4950$1RbCyC g$cars$4952$1RbCyC)
                 (if (apply g$f$4950$1RbCyC g$cars$4952$1RbCyC)
                   (begin
                     '#f
                     (apply
                       g$for-all$4890$1RbCyC
                       g$f$4950$1RbCyC
                       g$cdrs$4953$1RbCyC))
                   '#f)))))))))
   (g$exists$4891$1RbCyC
     g$exists$4996$1RbCyC
     (case-lambda
       ((g$f$4954$1RbCyC . g$args$4955$1RbCyC)
        (if (g$all-empty?$4888$1RbCyC g$args$4955$1RbCyC)
          '#f
          (call-with-values
            (case-lambda (() (g$split$4889$1RbCyC g$args$4955$1RbCyC)))
            (case-lambda
              ((g$cars$4956$1RbCyC g$cdrs$4957$1RbCyC)
               ((case-lambda
                  ((g$t$4958$1RbCyC)
                   (if g$t$4958$1RbCyC
                     g$t$4958$1RbCyC
                     (begin
                       '#f
                       (apply
                         g$exists$4891$1RbCyC
                         g$f$4954$1RbCyC
                         g$cdrs$4957$1RbCyC)))))
                (apply g$f$4954$1RbCyC g$cars$4956$1RbCyC)))))))))
   (g$cons*$4892$1RbCyC
     g$cons*$4997$1RbCyC
     (case-lambda
       ((g$a$4959$1RbCyC . g$rest$4960$1RbCyC)
        ((letrec ((g$f$4961$1RbCyC
                    (case-lambda
                      ((g$a$4962$1RbCyC g$rest$4963$1RbCyC)
                       (if (null? g$rest$4963$1RbCyC)
                         g$a$4962$1RbCyC
                         (cons
                           g$a$4962$1RbCyC
                           (g$f$4961$1RbCyC
                             (car g$rest$4963$1RbCyC)
                             (cdr g$rest$4963$1RbCyC))))))))
           g$f$4961$1RbCyC)
         g$a$4959$1RbCyC
         g$rest$4960$1RbCyC))))
   (g$fold-left$4893$1RbCyC
     g$fold-left$4998$1RbCyC
     (case-lambda
       ((g$combine$4964$1RbCyC
          g$nil$4965$1RbCyC
          g$list1$4966$1RbCyC
          .
          g$lists$4967$1RbCyC)
        (if (null? g$list1$4966$1RbCyC)
          g$nil$4965$1RbCyC
          (apply
            g$fold-left$4893$1RbCyC
            (g$cons*$4892$1RbCyC
              g$combine$4964$1RbCyC
              (apply
                g$combine$4964$1RbCyC
                (g$cons*$4892$1RbCyC
                  g$nil$4965$1RbCyC
                  (car g$list1$4966$1RbCyC)
                  (map car g$lists$4967$1RbCyC)))
              (cdr g$list1$4966$1RbCyC)
              (map cdr g$lists$4967$1RbCyC)))))))
   (g$fold-right$4894$1RbCyC
     g$fold-right$4999$1RbCyC
     (case-lambda
       ((g$combine$4968$1RbCyC
          g$nil$4969$1RbCyC
          g$list1$4970$1RbCyC
          .
          g$lists$4971$1RbCyC)
        (if (null? g$list1$4970$1RbCyC)
          g$nil$4969$1RbCyC
          (apply
            g$combine$4968$1RbCyC
            (append
              (list (car g$list1$4970$1RbCyC))
              (map car g$lists$4971$1RbCyC)
              (list
                (apply
                  g$fold-right$4894$1RbCyC
                  (g$cons*$4892$1RbCyC
                    g$combine$4968$1RbCyC
                    g$nil$4969$1RbCyC
                    (cdr g$list1$4970$1RbCyC)
                    (map cdr g$lists$4971$1RbCyC))))))))))
   (g$remove$4895$1RbCyC
     g$remove$5000$1RbCyC
     (case-lambda
       ((g$obj$4972$1RbCyC g$list$4973$1RbCyC)
        (g$remp$4878$1RbCyC
          (case-lambda
            ((g$x$4974$1RbCyC) (equal? g$obj$4972$1RbCyC g$x$4974$1RbCyC)))
          g$list$4973$1RbCyC))))
   (g$remv$4896$1RbCyC
     g$remv$5001$1RbCyC
     (case-lambda
       ((g$obj$4975$1RbCyC g$list$4976$1RbCyC)
        (g$remp$4878$1RbCyC
          (case-lambda
            ((g$x$4977$1RbCyC) (eqv? g$obj$4975$1RbCyC g$x$4977$1RbCyC)))
          g$list$4976$1RbCyC))))
   (g$remq$4897$1RbCyC
     g$remq$5002$1RbCyC
     (case-lambda
       ((g$obj$4978$1RbCyC g$list$4979$1RbCyC)
        (g$remp$4878$1RbCyC
          (case-lambda
            ((g$x$4980$1RbCyC) (eq? g$obj$4978$1RbCyC g$x$4980$1RbCyC)))
          g$list$4979$1RbCyC)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$caar$5003$1RbCyC
     g$caar$5158$1RbCyC
     (case-lambda ((g$x$5058$1RbCyC) (car (car g$x$5058$1RbCyC)))))
   (g$cadr$5004$1RbCyC
     g$cadr$5159$1RbCyC
     (case-lambda ((g$x$5059$1RbCyC) (car (cdr g$x$5059$1RbCyC)))))
   (g$cdar$5005$1RbCyC
     g$cdar$5160$1RbCyC
     (case-lambda ((g$x$5060$1RbCyC) (cdr (car g$x$5060$1RbCyC)))))
   (g$cddr$5006$1RbCyC
     g$cddr$5161$1RbCyC
     (case-lambda ((g$x$5061$1RbCyC) (cdr (cdr g$x$5061$1RbCyC)))))
   (g$caaar$5007$1RbCyC
     g$caaar$5162$1RbCyC
     (case-lambda
       ((g$x$5062$1RbCyC) (g$caar$5003$1RbCyC (car g$x$5062$1RbCyC)))))
   (g$caadr$5008$1RbCyC
     g$caadr$5163$1RbCyC
     (case-lambda
       ((g$x$5063$1RbCyC) (g$caar$5003$1RbCyC (cdr g$x$5063$1RbCyC)))))
   (g$cadar$5009$1RbCyC
     g$cadar$5164$1RbCyC
     (case-lambda
       ((g$x$5064$1RbCyC) (g$cadr$5004$1RbCyC (car g$x$5064$1RbCyC)))))
   (g$caddr$5010$1RbCyC
     g$caddr$5165$1RbCyC
     (case-lambda
       ((g$x$5065$1RbCyC) (g$cadr$5004$1RbCyC (cdr g$x$5065$1RbCyC)))))
   (g$cdaar$5011$1RbCyC
     g$cdaar$5166$1RbCyC
     (case-lambda
       ((g$x$5066$1RbCyC) (g$cdar$5005$1RbCyC (car g$x$5066$1RbCyC)))))
   (g$cdadr$5012$1RbCyC
     g$cdadr$5167$1RbCyC
     (case-lambda
       ((g$x$5067$1RbCyC) (g$cdar$5005$1RbCyC (cdr g$x$5067$1RbCyC)))))
   (g$cddar$5013$1RbCyC
     g$cddar$5168$1RbCyC
     (case-lambda
       ((g$x$5068$1RbCyC) (g$cddr$5006$1RbCyC (car g$x$5068$1RbCyC)))))
   (g$cdddr$5014$1RbCyC
     g$cdddr$5169$1RbCyC
     (case-lambda
       ((g$x$5069$1RbCyC) (g$cddr$5006$1RbCyC (cdr g$x$5069$1RbCyC)))))
   (g$caaaar$5015$1RbCyC
     g$caaaar$5170$1RbCyC
     (case-lambda
       ((g$x$5070$1RbCyC) (g$caaar$5007$1RbCyC (car g$x$5070$1RbCyC)))))
   (g$caaadr$5016$1RbCyC
     g$caaadr$5171$1RbCyC
     (case-lambda
       ((g$x$5071$1RbCyC) (g$caaar$5007$1RbCyC (cdr g$x$5071$1RbCyC)))))
   (g$caadar$5017$1RbCyC
     g$caadar$5172$1RbCyC
     (case-lambda
       ((g$x$5072$1RbCyC) (g$caadr$5008$1RbCyC (car g$x$5072$1RbCyC)))))
   (g$caaddr$5018$1RbCyC
     g$caaddr$5173$1RbCyC
     (case-lambda
       ((g$x$5073$1RbCyC) (g$caadr$5008$1RbCyC (cdr g$x$5073$1RbCyC)))))
   (g$cadaar$5019$1RbCyC
     g$cadaar$5174$1RbCyC
     (case-lambda
       ((g$x$5074$1RbCyC) (g$cadar$5009$1RbCyC (car g$x$5074$1RbCyC)))))
   (g$cadadr$5020$1RbCyC
     g$cadadr$5175$1RbCyC
     (case-lambda
       ((g$x$5075$1RbCyC) (g$cadar$5009$1RbCyC (cdr g$x$5075$1RbCyC)))))
   (g$caddar$5021$1RbCyC
     g$caddar$5176$1RbCyC
     (case-lambda
       ((g$x$5076$1RbCyC) (g$caddr$5010$1RbCyC (car g$x$5076$1RbCyC)))))
   (g$cadddr$5022$1RbCyC
     g$cadddr$5177$1RbCyC
     (case-lambda
       ((g$x$5077$1RbCyC) (g$caddr$5010$1RbCyC (cdr g$x$5077$1RbCyC)))))
   (g$cdaaar$5023$1RbCyC
     g$cdaaar$5178$1RbCyC
     (case-lambda
       ((g$x$5078$1RbCyC) (g$cdaar$5011$1RbCyC (car g$x$5078$1RbCyC)))))
   (g$cdaadr$5024$1RbCyC
     g$cdaadr$5179$1RbCyC
     (case-lambda
       ((g$x$5079$1RbCyC) (g$cdaar$5011$1RbCyC (cdr g$x$5079$1RbCyC)))))
   (g$cdadar$5025$1RbCyC
     g$cdadar$5180$1RbCyC
     (case-lambda
       ((g$x$5080$1RbCyC) (g$cdadr$5012$1RbCyC (car g$x$5080$1RbCyC)))))
   (g$cdaddr$5026$1RbCyC
     g$cdaddr$5181$1RbCyC
     (case-lambda
       ((g$x$5081$1RbCyC) (g$cdadr$5012$1RbCyC (cdr g$x$5081$1RbCyC)))))
   (g$cddaar$5027$1RbCyC
     g$cddaar$5182$1RbCyC
     (case-lambda
       ((g$x$5082$1RbCyC) (g$cddar$5013$1RbCyC (car g$x$5082$1RbCyC)))))
   (g$cddadr$5028$1RbCyC
     g$cddadr$5183$1RbCyC
     (case-lambda
       ((g$x$5083$1RbCyC) (g$cddar$5013$1RbCyC (cdr g$x$5083$1RbCyC)))))
   (g$cdddar$5029$1RbCyC
     g$cdddar$5184$1RbCyC
     (case-lambda
       ((g$x$5084$1RbCyC) (g$cdddr$5014$1RbCyC (car g$x$5084$1RbCyC)))))
   (g$cddddr$5030$1RbCyC
     g$cddddr$5185$1RbCyC
     (case-lambda
       ((g$x$5085$1RbCyC) (g$cdddr$5014$1RbCyC (cdr g$x$5085$1RbCyC)))))
   (g$string=?$5037$1RbCyC
     g$string=?$5186$1RbCyC
     (case-lambda
       ((g$a$5086$1RbCyC g$b$5087$1RbCyC . g$rest$5088$1RbCyC)
        (begin
          (if (not (string? g$a$5086$1RbCyC))
            (assertion-violation 'string=? '"not a string" g$a$5086$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5089$1RbCyC)
               (begin
                 (if (not (string? g$x$5089$1RbCyC))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$5089$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5090$1RbCyC)
                     (begin
                       (set! g$a$5086$1RbCyC g$x$5089$1RbCyC)
                       g$r$5090$1RbCyC)))
                  (= (string-compare g$a$5086$1RbCyC g$x$5089$1RbCyC) '0)))))
            (cons g$b$5087$1RbCyC g$rest$5088$1RbCyC))))))
   (g$string<?$5038$1RbCyC
     g$string<?$5187$1RbCyC
     (case-lambda
       ((g$a$5091$1RbCyC g$b$5092$1RbCyC . g$rest$5093$1RbCyC)
        (begin
          (if (not (string? g$a$5091$1RbCyC))
            (assertion-violation 'string<? '"not a string" g$a$5091$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5094$1RbCyC)
               (begin
                 (if (not (string? g$x$5094$1RbCyC))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$5094$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5095$1RbCyC)
                     (begin
                       (set! g$a$5091$1RbCyC g$x$5094$1RbCyC)
                       g$r$5095$1RbCyC)))
                  (< (string-compare g$a$5091$1RbCyC g$x$5094$1RbCyC) '0)))))
            (cons g$b$5092$1RbCyC g$rest$5093$1RbCyC))))))
   (g$string>?$5039$1RbCyC
     g$string>?$5188$1RbCyC
     (case-lambda
       ((g$a$5096$1RbCyC g$b$5097$1RbCyC . g$rest$5098$1RbCyC)
        (begin
          (if (not (string? g$a$5096$1RbCyC))
            (assertion-violation 'string>? '"not a string" g$a$5096$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5099$1RbCyC)
               (begin
                 (if (not (string? g$x$5099$1RbCyC))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$5099$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5100$1RbCyC)
                     (begin
                       (set! g$a$5096$1RbCyC g$x$5099$1RbCyC)
                       g$r$5100$1RbCyC)))
                  (> (string-compare g$a$5096$1RbCyC g$x$5099$1RbCyC) '0)))))
            (cons g$b$5097$1RbCyC g$rest$5098$1RbCyC))))))
   (g$string<=?$5040$1RbCyC
     g$string<=?$5189$1RbCyC
     (case-lambda
       ((g$a$5101$1RbCyC g$b$5102$1RbCyC . g$rest$5103$1RbCyC)
        (begin
          (if (not (string? g$a$5101$1RbCyC))
            (assertion-violation 'string<=? '"not a string" g$a$5101$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5104$1RbCyC)
               (begin
                 (if (not (string? g$x$5104$1RbCyC))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$5104$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5105$1RbCyC)
                     (begin
                       (set! g$a$5101$1RbCyC g$x$5104$1RbCyC)
                       g$r$5105$1RbCyC)))
                  (<= (string-compare g$a$5101$1RbCyC g$x$5104$1RbCyC) '0)))))
            (cons g$b$5102$1RbCyC g$rest$5103$1RbCyC))))))
   (g$string>=?$5041$1RbCyC
     g$string>=?$5190$1RbCyC
     (case-lambda
       ((g$a$5106$1RbCyC g$b$5107$1RbCyC . g$rest$5108$1RbCyC)
        (begin
          (if (not (string? g$a$5106$1RbCyC))
            (assertion-violation 'string>=? '"not a string" g$a$5106$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5109$1RbCyC)
               (begin
                 (if (not (string? g$x$5109$1RbCyC))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$5109$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5110$1RbCyC)
                     (begin
                       (set! g$a$5106$1RbCyC g$x$5109$1RbCyC)
                       g$r$5110$1RbCyC)))
                  (>= (string-compare g$a$5106$1RbCyC g$x$5109$1RbCyC) '0)))))
            (cons g$b$5107$1RbCyC g$rest$5108$1RbCyC))))))
   (g$symbol=?$5042$1RbCyC
     g$symbol=?$5191$1RbCyC
     (case-lambda
       ((g$a$5111$1RbCyC g$b$5112$1RbCyC . g$rest$5113$1RbCyC)
        (begin
          (if (not (symbol? g$a$5111$1RbCyC))
            (assertion-violation 'symbol=? '"not a symbol" g$a$5111$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5114$1RbCyC)
               (begin
                 (if (not (symbol? g$x$5114$1RbCyC))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$5114$1RbCyC)
                   (void))
                 (eq? g$a$5111$1RbCyC g$x$5114$1RbCyC))))
            (cons g$b$5112$1RbCyC g$rest$5113$1RbCyC))))))
   (g$boolean=?$5043$1RbCyC
     g$boolean=?$5192$1RbCyC
     (case-lambda
       ((g$a$5115$1RbCyC g$b$5116$1RbCyC . g$rest$5117$1RbCyC)
        (begin
          (if (not (boolean? g$a$5115$1RbCyC))
            (assertion-violation 'boolean=? '"not a boolean" g$a$5115$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5118$1RbCyC)
               (begin
                 (if (not (boolean? g$x$5118$1RbCyC))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$5118$1RbCyC)
                   (void))
                 (eq? g$a$5115$1RbCyC g$x$5118$1RbCyC))))
            (cons g$b$5116$1RbCyC g$rest$5117$1RbCyC))))))
   (g$char=?$5050$1RbCyC
     g$char=?$5193$1RbCyC
     (case-lambda
       ((g$a$5119$1RbCyC g$b$5120$1RbCyC . g$rest$5121$1RbCyC)
        (begin
          (if (not (char? g$a$5119$1RbCyC))
            (assertion-violation 'char=? '"not a char" g$a$5119$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5122$1RbCyC)
               (begin
                 (if (not (char? g$x$5122$1RbCyC))
                   (assertion-violation 'char=? '"not a char" g$x$5122$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5123$1RbCyC)
                     (begin
                       (set! g$a$5119$1RbCyC g$x$5122$1RbCyC)
                       g$r$5123$1RbCyC)))
                  (= (char->integer g$a$5119$1RbCyC)
                     (char->integer g$x$5122$1RbCyC))))))
            (cons g$b$5120$1RbCyC g$rest$5121$1RbCyC))))))
   (g$char<?$5051$1RbCyC
     g$char<?$5194$1RbCyC
     (case-lambda
       ((g$a$5124$1RbCyC g$b$5125$1RbCyC . g$rest$5126$1RbCyC)
        (begin
          (if (not (char? g$a$5124$1RbCyC))
            (assertion-violation 'char<? '"not a char" g$a$5124$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5127$1RbCyC)
               (begin
                 (if (not (char? g$x$5127$1RbCyC))
                   (assertion-violation 'char<? '"not a char" g$x$5127$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5128$1RbCyC)
                     (begin
                       (set! g$a$5124$1RbCyC g$x$5127$1RbCyC)
                       g$r$5128$1RbCyC)))
                  (< (char->integer g$a$5124$1RbCyC)
                     (char->integer g$x$5127$1RbCyC))))))
            (cons g$b$5125$1RbCyC g$rest$5126$1RbCyC))))))
   (g$char>?$5052$1RbCyC
     g$char>?$5195$1RbCyC
     (case-lambda
       ((g$a$5129$1RbCyC g$b$5130$1RbCyC . g$rest$5131$1RbCyC)
        (begin
          (if (not (char? g$a$5129$1RbCyC))
            (assertion-violation 'char>? '"not a char" g$a$5129$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5132$1RbCyC)
               (begin
                 (if (not (char? g$x$5132$1RbCyC))
                   (assertion-violation 'char>? '"not a char" g$x$5132$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5133$1RbCyC)
                     (begin
                       (set! g$a$5129$1RbCyC g$x$5132$1RbCyC)
                       g$r$5133$1RbCyC)))
                  (> (char->integer g$a$5129$1RbCyC)
                     (char->integer g$x$5132$1RbCyC))))))
            (cons g$b$5130$1RbCyC g$rest$5131$1RbCyC))))))
   (g$char<=?$5053$1RbCyC
     g$char<=?$5196$1RbCyC
     (case-lambda
       ((g$a$5134$1RbCyC g$b$5135$1RbCyC . g$rest$5136$1RbCyC)
        (begin
          (if (not (char? g$a$5134$1RbCyC))
            (assertion-violation 'char<=? '"not a char" g$a$5134$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5137$1RbCyC)
               (begin
                 (if (not (char? g$x$5137$1RbCyC))
                   (assertion-violation 'char<=? '"not a char" g$x$5137$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5138$1RbCyC)
                     (begin
                       (set! g$a$5134$1RbCyC g$x$5137$1RbCyC)
                       g$r$5138$1RbCyC)))
                  (<= (char->integer g$a$5134$1RbCyC)
                      (char->integer g$x$5137$1RbCyC))))))
            (cons g$b$5135$1RbCyC g$rest$5136$1RbCyC))))))
   (g$char>=?$5054$1RbCyC
     g$char>=?$5197$1RbCyC
     (case-lambda
       ((g$a$5139$1RbCyC g$b$5140$1RbCyC . g$rest$5141$1RbCyC)
        (begin
          (if (not (char? g$a$5139$1RbCyC))
            (assertion-violation 'char>=? '"not a char" g$a$5139$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5142$1RbCyC)
               (begin
                 (if (not (char? g$x$5142$1RbCyC))
                   (assertion-violation 'char>=? '"not a char" g$x$5142$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5143$1RbCyC)
                     (begin
                       (set! g$a$5139$1RbCyC g$x$5142$1RbCyC)
                       g$r$5143$1RbCyC)))
                  (>= (char->integer g$a$5139$1RbCyC)
                      (char->integer g$x$5142$1RbCyC))))))
            (cons g$b$5140$1RbCyC g$rest$5141$1RbCyC))))))
   (g$rationalize$5055$1RbCyC
     g$rationalize$5198$1RbCyC
     (case-lambda
       ((g$x$5144$1RbCyC g$e$5145$1RbCyC)
        (if (if (infinite? g$x$5144$1RbCyC)
              (begin '#f (infinite? g$e$5145$1RbCyC))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$5146$1RbCyC)
              (if (if (exact? g$x$5144$1RbCyC)
                    (begin '#f (exact? g$e$5145$1RbCyC))
                    '#f)
                g$r$5146$1RbCyC
                (inexact g$r$5146$1RbCyC))))
           (apply
             /
             (g$find-ratio$5056$1RbCyC g$x$5144$1RbCyC g$e$5145$1RbCyC)))))))
   (g$find-ratio$5056$1RbCyC
     g$find-ratio$5199$1RbCyC
     (case-lambda
       ((g$x$5147$1RbCyC g$e$5148$1RbCyC)
        (g$find-ratio-between$5057$1RbCyC
          (- g$x$5147$1RbCyC g$e$5148$1RbCyC)
          (+ g$x$5147$1RbCyC g$e$5148$1RbCyC)))))
   (g$find-ratio-between$5057$1RbCyC
     g$find-ratio-between$5200$1RbCyC
     (case-lambda
       ((g$x$5149$1RbCyC g$y$5150$1RbCyC)
        (letrec* ((g$sr$5151$1RbCyC
                    (case-lambda
                      ((g$x$5153$1RbCyC g$y$5154$1RbCyC)
                       ((case-lambda
                          ((g$fx$5155$1RbCyC g$fy$5156$1RbCyC)
                           (if (>= g$fx$5155$1RbCyC g$x$5153$1RbCyC)
                             (list g$fx$5155$1RbCyC '1)
                             (if (= g$fx$5155$1RbCyC g$fy$5156$1RbCyC)
                               ((case-lambda
                                  ((g$rat$5157$1RbCyC)
                                   (list
                                     (+ (g$cadr$5004$1RbCyC g$rat$5157$1RbCyC)
                                        (* g$fx$5155$1RbCyC
                                           (car g$rat$5157$1RbCyC)))
                                     (car g$rat$5157$1RbCyC))))
                                (g$sr$5151$1RbCyC
                                  (/ (- g$y$5154$1RbCyC g$fy$5156$1RbCyC))
                                  (/ (- g$x$5153$1RbCyC g$fx$5155$1RbCyC))))
                               (list (+ '1 g$fx$5155$1RbCyC) '1)))))
                        (exact (floor g$x$5153$1RbCyC))
                        (exact (floor g$y$5154$1RbCyC)))))))
          (if (< g$y$5150$1RbCyC g$x$5149$1RbCyC)
            (g$find-ratio-between$5057$1RbCyC g$y$5150$1RbCyC g$x$5149$1RbCyC)
            (if (>= g$x$5149$1RbCyC g$y$5150$1RbCyC)
              (list g$x$5149$1RbCyC '1)
              (if (positive? g$x$5149$1RbCyC)
                (g$sr$5151$1RbCyC g$x$5149$1RbCyC g$y$5150$1RbCyC)
                (if (negative? g$y$5150$1RbCyC)
                  ((case-lambda
                     ((g$rat$5152$1RbCyC)
                      (list
                        (- (car g$rat$5152$1RbCyC))
                        (g$cadr$5004$1RbCyC g$rat$5152$1RbCyC))))
                   (g$sr$5151$1RbCyC (- g$y$5150$1RbCyC) (- g$x$5149$1RbCyC)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5396$1RbCyC g$using$5431$1RbCyC (clr-using-internal 'system))
   (g$using$5398$1RbCyC
     g$using$5432$1RbCyC
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5399$1RbCyC
     g$make-eq-hashtable$5433$1RbCyC
     (case-lambda
       (() (g$make-eq-hashtable$5399$1RbCyC '32))
       ((g$k$5410$1RbCyC)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5410$1RbCyC)))))
   (g$make-eqv-hashtable$5400$1RbCyC
     g$make-eqv-hashtable$5434$1RbCyC
     (case-lambda
       (() (g$make-eqv-hashtable$5400$1RbCyC '32))
       ((g$k$5411$1RbCyC) (make-hashtable eqv-hash eqv? g$k$5411$1RbCyC))))
   (g$hashtable-size$5401$1RbCyC
     g$hashtable-size$5435$1RbCyC
     (case-lambda
       ((g$ht$5412$1RbCyC)
        (clr-call-internal 'hashtable 'get_count g$ht$5412$1RbCyC))))
   (g$hashtable-ref$5402$1RbCyC
     g$hashtable-ref$5436$1RbCyC
     (case-lambda
       ((g$ht$5413$1RbCyC g$key$5414$1RbCyC g$default$5415$1RbCyC)
        (letrec* ((g$r$5416$1RbCyC
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5413$1RbCyC
                      g$key$5414$1RbCyC)))
          (if (not (null? g$r$5416$1RbCyC))
            g$r$5416$1RbCyC
            g$default$5415$1RbCyC)))))
   (g$hashtable-set!$5403$1RbCyC
     g$hashtable-set!$5437$1RbCyC
     (case-lambda
       ((g$ht$5417$1RbCyC g$key$5418$1RbCyC g$obj$5419$1RbCyC)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5417$1RbCyC
          g$key$5418$1RbCyC
          g$obj$5419$1RbCyC))))
   (g$hashtable-delete!$5404$1RbCyC
     g$hashtable-delete!$5438$1RbCyC
     (case-lambda
       ((g$ht$5420$1RbCyC g$key$5421$1RbCyC)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5420$1RbCyC
          g$key$5421$1RbCyC))))
   (g$hashtable-contains?$5405$1RbCyC
     g$hashtable-contains?$5439$1RbCyC
     (case-lambda
       ((g$ht$5422$1RbCyC g$key$5423$1RbCyC)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5422$1RbCyC
          g$key$5423$1RbCyC))))
   (g$hashtable-update!$5406$1RbCyC
     g$hashtable-update!$5440$1RbCyC
     (case-lambda
       ((g$ht$5424$1RbCyC
          g$key$5425$1RbCyC
          g$proc$5426$1RbCyC
          g$default$5427$1RbCyC)
        (g$hashtable-set!$5403$1RbCyC
          g$ht$5424$1RbCyC
          g$key$5425$1RbCyC
          (g$proc$5426$1RbCyC
            (g$hashtable-ref$5402$1RbCyC
              g$ht$5424$1RbCyC
              g$key$5425$1RbCyC
              g$default$5427$1RbCyC))))))
   (g$hashtable-clear!$5407$1RbCyC
     g$hashtable-clear!$5441$1RbCyC
     (case-lambda
       ((g$ht$5428$1RbCyC)
        (g$hashtable-clear!$5407$1RbCyC g$ht$5428$1RbCyC '32))
       ((g$ht$5429$1RbCyC g$k$5430$1RbCyC)
        (clr-call-internal 'hashtable 'clear g$ht$5429$1RbCyC))))
   (g$clear-usings$5409$1RbCyC
     g$clear-usings$5442$1RbCyC
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5444$1RbCyC
     g$using$5451$1RbCyC
     (clr-using-internal 'system.io))
   (g$file-exists?$5445$1RbCyC
     g$file-exists?$5452$1RbCyC
     (case-lambda
       ((g$fn$5448$1RbCyC)
        (clr-call-internal 'file 'exists '() g$fn$5448$1RbCyC))))
   (g$delete-file$5446$1RbCyC
     g$delete-file$5453$1RbCyC
     (case-lambda
       ((g$fn$5449$1RbCyC)
        (clr-call-internal 'file 'delete '() g$fn$5449$1RbCyC))))
   (g$get-directory-name$5447$1RbCyC
     g$get-directory-name$5454$1RbCyC
     (case-lambda
       ((g$path$5450$1RbCyC)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5450$1RbCyC)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5455$1RbCyC
     g$native-endianness$5566$1RbCyC
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5456$1RbCyC
     g$bytevector-u16-ref$5567$1RbCyC
     (case-lambda
       ((g$bytevector$5484$1RbCyC g$k$5485$1RbCyC g$endianness$5486$1RbCyC)
        (bytevector-uint-ref
          g$bytevector$5484$1RbCyC
          g$k$5485$1RbCyC
          g$endianness$5486$1RbCyC
          '2))))
   (g$bytevector-s16-ref$5457$1RbCyC
     g$bytevector-s16-ref$5568$1RbCyC
     (case-lambda
       ((g$bytevector$5487$1RbCyC g$k$5488$1RbCyC g$endianness$5489$1RbCyC)
        (bytevector-sint-ref
          g$bytevector$5487$1RbCyC
          g$k$5488$1RbCyC
          g$endianness$5489$1RbCyC
          '2))))
   (g$bytevector-u16-native-ref$5458$1RbCyC
     g$bytevector-u16-native-ref$5569$1RbCyC
     (case-lambda
       ((g$bytevector$5490$1RbCyC g$k$5491$1RbCyC)
        (bytevector-uint-ref
          g$bytevector$5490$1RbCyC
          g$k$5491$1RbCyC
          (g$native-endianness$5455$1RbCyC)
          '2))))
   (g$bytevector-s16-native-ref$5459$1RbCyC
     g$bytevector-s16-native-ref$5570$1RbCyC
     (case-lambda
       ((g$bytevector$5492$1RbCyC g$k$5493$1RbCyC)
        (bytevector-sint-ref
          g$bytevector$5492$1RbCyC
          g$k$5493$1RbCyC
          (g$native-endianness$5455$1RbCyC)
          '2))))
   (g$bytevector-u16-set!$5460$1RbCyC
     g$bytevector-u16-set!$5571$1RbCyC
     (case-lambda
       ((g$bytevector$5494$1RbCyC
          g$k$5495$1RbCyC
          g$n$5496$1RbCyC
          g$endianness$5497$1RbCyC)
        (bytevector-uint-set!
          g$bytevector$5494$1RbCyC
          g$k$5495$1RbCyC
          g$n$5496$1RbCyC
          g$endianness$5497$1RbCyC
          '2))))
   (g$bytevector-s16-set!$5461$1RbCyC
     g$bytevector-s16-set!$5572$1RbCyC
     (case-lambda
       ((g$bytevector$5498$1RbCyC
          g$k$5499$1RbCyC
          g$n$5500$1RbCyC
          g$endianness$5501$1RbCyC)
        (bytevector-sint-set!
          g$bytevector$5498$1RbCyC
          g$k$5499$1RbCyC
          g$n$5500$1RbCyC
          g$endianness$5501$1RbCyC
          '2))))
   (g$bytevector-u16-native-set!$5462$1RbCyC
     g$bytevector-u16-native-set!$5573$1RbCyC
     (case-lambda
       ((g$bytevector$5502$1RbCyC g$k$5503$1RbCyC g$n$5504$1RbCyC)
        (bytevector-uint-set!
          g$bytevector$5502$1RbCyC
          g$k$5503$1RbCyC
          g$n$5504$1RbCyC
          (g$native-endianness$5455$1RbCyC)
          '2))))
   (g$bytevector-s16-native-set!$5463$1RbCyC
     g$bytevector-s16-native-set!$5574$1RbCyC
     (case-lambda
       ((g$bytevector$5505$1RbCyC g$k$5506$1RbCyC g$n$5507$1RbCyC)
        (bytevector-sint-set!
          g$bytevector$5505$1RbCyC
          g$k$5506$1RbCyC
          g$n$5507$1RbCyC
          (g$native-endianness$5455$1RbCyC)
          '2))))
   (g$bytevector-u32-ref$5464$1RbCyC
     g$bytevector-u32-ref$5575$1RbCyC
     (case-lambda
       ((g$bytevector$5508$1RbCyC g$k$5509$1RbCyC g$endianness$5510$1RbCyC)
        (bytevector-uint-ref
          g$bytevector$5508$1RbCyC
          g$k$5509$1RbCyC
          g$endianness$5510$1RbCyC
          '4))))
   (g$bytevector-s32-ref$5465$1RbCyC
     g$bytevector-s32-ref$5576$1RbCyC
     (case-lambda
       ((g$bytevector$5511$1RbCyC g$k$5512$1RbCyC g$endianness$5513$1RbCyC)
        (bytevector-sint-ref
          g$bytevector$5511$1RbCyC
          g$k$5512$1RbCyC
          g$endianness$5513$1RbCyC
          '4))))
   (g$bytevector-u32-native-ref$5466$1RbCyC
     g$bytevector-u32-native-ref$5577$1RbCyC
     (case-lambda
       ((g$bytevector$5514$1RbCyC g$k$5515$1RbCyC)
        (bytevector-uint-ref
          g$bytevector$5514$1RbCyC
          g$k$5515$1RbCyC
          (g$native-endianness$5455$1RbCyC)
          '4))))
   (g$bytevector-s32-native-ref$5467$1RbCyC
     g$bytevector-s32-native-ref$5578$1RbCyC
     (case-lambda
       ((g$bytevector$5516$1RbCyC g$k$5517$1RbCyC)
        (bytevector-sint-ref
          g$bytevector$5516$1RbCyC
          g$k$5517$1RbCyC
          (g$native-endianness$5455$1RbCyC)
          '4))))
   (g$bytevector-u32-set!$5468$1RbCyC
     g$bytevector-u32-set!$5579$1RbCyC
     (case-lambda
       ((g$bytevector$5518$1RbCyC
          g$k$5519$1RbCyC
          g$n$5520$1RbCyC
          g$endianness$5521$1RbCyC)
        (bytevector-uint-set!
          g$bytevector$5518$1RbCyC
          g$k$5519$1RbCyC
          g$n$5520$1RbCyC
          g$endianness$5521$1RbCyC
          '4))))
   (g$bytevector-s32-set!$5469$1RbCyC
     g$bytevector-s32-set!$5580$1RbCyC
     (case-lambda
       ((g$bytevector$5522$1RbCyC
          g$k$5523$1RbCyC
          g$n$5524$1RbCyC
          g$endianness$5525$1RbCyC)
        (bytevector-sint-set!
          g$bytevector$5522$1RbCyC
          g$k$5523$1RbCyC
          g$n$5524$1RbCyC
          g$endianness$5525$1RbCyC
          '4))))
   (g$bytevector-u32-native-set!$5470$1RbCyC
     g$bytevector-u32-native-set!$5581$1RbCyC
     (case-lambda
       ((g$bytevector$5526$1RbCyC g$k$5527$1RbCyC g$n$5528$1RbCyC)
        (bytevector-uint-set!
          g$bytevector$5526$1RbCyC
          g$k$5527$1RbCyC
          g$n$5528$1RbCyC
          (g$native-endianness$5455$1RbCyC)
          '4))))
   (g$bytevector-s32-native-set!$5471$1RbCyC
     g$bytevector-s32-native-set!$5582$1RbCyC
     (case-lambda
       ((g$bytevector$5529$1RbCyC g$k$5530$1RbCyC g$n$5531$1RbCyC)
        (bytevector-sint-set!
          g$bytevector$5529$1RbCyC
          g$k$5530$1RbCyC
          g$n$5531$1RbCyC
          (g$native-endianness$5455$1RbCyC)
          '4))))
   (g$bytevector-u64-ref$5472$1RbCyC
     g$bytevector-u64-ref$5583$1RbCyC
     (case-lambda
       ((g$bytevector$5532$1RbCyC g$k$5533$1RbCyC g$endianness$5534$1RbCyC)
        (bytevector-uint-ref
          g$bytevector$5532$1RbCyC
          g$k$5533$1RbCyC
          g$endianness$5534$1RbCyC
          '8))))
   (g$bytevector-s64-ref$5473$1RbCyC
     g$bytevector-s64-ref$5584$1RbCyC
     (case-lambda
       ((g$bytevector$5535$1RbCyC g$k$5536$1RbCyC g$endianness$5537$1RbCyC)
        (bytevector-sint-ref
          g$bytevector$5535$1RbCyC
          g$k$5536$1RbCyC
          g$endianness$5537$1RbCyC
          '8))))
   (g$bytevector-u64-native-ref$5474$1RbCyC
     g$bytevector-u64-native-ref$5585$1RbCyC
     (case-lambda
       ((g$bytevector$5538$1RbCyC g$k$5539$1RbCyC)
        (bytevector-uint-ref
          g$bytevector$5538$1RbCyC
          g$k$5539$1RbCyC
          (g$native-endianness$5455$1RbCyC)
          '8))))
   (g$bytevector-s64-native-ref$5475$1RbCyC
     g$bytevector-s64-native-ref$5586$1RbCyC
     (case-lambda
       ((g$bytevector$5540$1RbCyC g$k$5541$1RbCyC)
        (bytevector-sint-ref
          g$bytevector$5540$1RbCyC
          g$k$5541$1RbCyC
          (g$native-endianness$5455$1RbCyC)
          '8))))
   (g$bytevector-u64-set!$5476$1RbCyC
     g$bytevector-u64-set!$5587$1RbCyC
     (case-lambda
       ((g$bytevector$5542$1RbCyC
          g$k$5543$1RbCyC
          g$n$5544$1RbCyC
          g$endianness$5545$1RbCyC)
        (bytevector-uint-set!
          g$bytevector$5542$1RbCyC
          g$k$5543$1RbCyC
          g$n$5544$1RbCyC
          g$endianness$5545$1RbCyC
          '8))))
   (g$bytevector-s64-set!$5477$1RbCyC
     g$bytevector-s64-set!$5588$1RbCyC
     (case-lambda
       ((g$bytevector$5546$1RbCyC
          g$k$5547$1RbCyC
          g$n$5548$1RbCyC
          g$endianness$5549$1RbCyC)
        (bytevector-sint-set!
          g$bytevector$5546$1RbCyC
          g$k$5547$1RbCyC
          g$n$5548$1RbCyC
          g$endianness$5549$1RbCyC
          '8))))
   (g$bytevector-u64-native-set!$5478$1RbCyC
     g$bytevector-u64-native-set!$5589$1RbCyC
     (case-lambda
       ((g$bytevector$5550$1RbCyC g$k$5551$1RbCyC g$n$5552$1RbCyC)
        (bytevector-uint-set!
          g$bytevector$5550$1RbCyC
          g$k$5551$1RbCyC
          g$n$5552$1RbCyC
          (g$native-endianness$5455$1RbCyC)
          '8))))
   (g$bytevector-s64-native-set!$5479$1RbCyC
     g$bytevector-s64-native-set!$5590$1RbCyC
     (case-lambda
       ((g$bytevector$5553$1RbCyC g$k$5554$1RbCyC g$n$5555$1RbCyC)
        (bytevector-sint-set!
          g$bytevector$5553$1RbCyC
          g$k$5554$1RbCyC
          g$n$5555$1RbCyC
          (g$native-endianness$5455$1RbCyC)
          '8))))
   (g$bytevector-ieee-single-native-ref$5480$1RbCyC
     g$bytevector-ieee-single-native-ref$5591$1RbCyC
     (case-lambda
       ((g$bytevector$5556$1RbCyC g$k$5557$1RbCyC)
        (if (not (zero? (mod g$k$5557$1RbCyC '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$5557$1RbCyC)
          (bytevector-ieee-single-ref
            g$bytevector$5556$1RbCyC
            g$k$5557$1RbCyC
            (g$native-endianness$5455$1RbCyC))))))
   (g$bytevector-ieee-double-native-ref$5481$1RbCyC
     g$bytevector-ieee-double-native-ref$5592$1RbCyC
     (case-lambda
       ((g$bytevector$5558$1RbCyC g$k$5559$1RbCyC)
        (if (not (zero? (mod g$k$5559$1RbCyC '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$5559$1RbCyC)
          (bytevector-ieee-double-ref
            g$bytevector$5558$1RbCyC
            g$k$5559$1RbCyC
            (g$native-endianness$5455$1RbCyC))))))
   (g$bytevector-ieee-single-native-set!$5482$1RbCyC
     g$bytevector-ieee-single-native-set!$5593$1RbCyC
     (case-lambda
       ((g$bytevector$5560$1RbCyC g$k$5561$1RbCyC g$x$5562$1RbCyC)
        (if (not (zero? (mod g$k$5561$1RbCyC '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$5561$1RbCyC)
          (bytevector-ieee-single-set!
            g$bytevector$5560$1RbCyC
            g$k$5561$1RbCyC
            g$x$5562$1RbCyC
            (g$native-endianness$5455$1RbCyC))))))
   (g$bytevector-ieee-double-native-set!$5483$1RbCyC
     g$bytevector-ieee-double-native-set!$5594$1RbCyC
     (case-lambda
       ((g$bytevector$5563$1RbCyC g$k$5564$1RbCyC g$x$5565$1RbCyC)
        (if (not (zero? (mod g$k$5564$1RbCyC '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$5564$1RbCyC)
          (bytevector-ieee-double-set!
            g$bytevector$5563$1RbCyC
            g$k$5564$1RbCyC
            g$x$5565$1RbCyC
            (g$native-endianness$5455$1RbCyC)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6607$5595$1RbCyC
     g$6607$5690$1RbCyC
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6610$1RbCyC
       '#f
       '#f
       '#()))
   (g$6609$5596$1RbCyC g$6609$5691$1RbCyC '#f)
   (g$6608$5597$1RbCyC
     g$6608$5692$1RbCyC
     (make-record-constructor-descriptor
       g$6607$5595$1RbCyC
       '#f
       g$6609$5596$1RbCyC))
   (g$&condition?$5598$1RbCyC
     g$&condition?$5693$1RbCyC
     (record-predicate g$6607$5595$1RbCyC))
   (g$make-&condition$5599$1RbCyC
     g$make-&condition$5694$1RbCyC
     (record-constructor g$6608$5597$1RbCyC))
   (g$&condition-rtd$5600$1RbCyC
     g$&condition-rtd$5695$1RbCyC
     g$6607$5595$1RbCyC)
   (g$&condition-rcd$5601$1RbCyC
     g$&condition-rcd$5696$1RbCyC
     g$6608$5597$1RbCyC)
   (g$6623$5602$1RbCyC
     g$6623$5697$1RbCyC
     (make-record-type-descriptor
       '&message
       g$6607$5595$1RbCyC
       'g$6626$1RbCyC
       '#f
       '#f
       '#((immutable message))))
   (g$6625$5603$1RbCyC g$6625$5698$1RbCyC '#f)
   (g$6624$5604$1RbCyC
     g$6624$5699$1RbCyC
     (make-record-constructor-descriptor
       g$6623$5602$1RbCyC
       g$6608$5597$1RbCyC
       g$6625$5603$1RbCyC))
   (g$6622$5605$1RbCyC
     g$6622$5700$1RbCyC
     (record-predicate g$6623$5602$1RbCyC))
   (g$make-message-condition$5606$1RbCyC
     g$make-message-condition$5701$1RbCyC
     (record-constructor g$6624$5604$1RbCyC))
   (g$6621$5607$1RbCyC
     g$6621$5702$1RbCyC
     (record-accessor g$6623$5602$1RbCyC '0))
   (g$message-condition?$5608$1RbCyC
     g$message-condition?$5703$1RbCyC
     (condition-predicate g$6623$5602$1RbCyC))
   (g$condition-message$5609$1RbCyC
     g$condition-message$5704$1RbCyC
     (condition-accessor g$6623$5602$1RbCyC g$6621$5607$1RbCyC))
   (g$6639$5610$1RbCyC
     g$6639$5705$1RbCyC
     (make-record-type-descriptor
       '&warning
       g$6607$5595$1RbCyC
       'g$6642$1RbCyC
       '#f
       '#f
       '#()))
   (g$6641$5611$1RbCyC g$6641$5706$1RbCyC '#f)
   (g$6640$5612$1RbCyC
     g$6640$5707$1RbCyC
     (make-record-constructor-descriptor
       g$6639$5610$1RbCyC
       g$6608$5597$1RbCyC
       g$6641$5611$1RbCyC))
   (g$6638$5613$1RbCyC
     g$6638$5708$1RbCyC
     (record-predicate g$6639$5610$1RbCyC))
   (g$make-warning$5614$1RbCyC
     g$make-warning$5709$1RbCyC
     (record-constructor g$6640$5612$1RbCyC))
   (g$warning?$5615$1RbCyC
     g$warning?$5710$1RbCyC
     (condition-predicate g$6639$5610$1RbCyC))
   (g$6653$5616$1RbCyC
     g$6653$5711$1RbCyC
     (make-record-type-descriptor
       '&serious
       g$6607$5595$1RbCyC
       'g$6656$1RbCyC
       '#f
       '#f
       '#()))
   (g$6655$5617$1RbCyC g$6655$5712$1RbCyC '#f)
   (g$6654$5618$1RbCyC
     g$6654$5713$1RbCyC
     (make-record-constructor-descriptor
       g$6653$5616$1RbCyC
       g$6608$5597$1RbCyC
       g$6655$5617$1RbCyC))
   (g$6652$5619$1RbCyC
     g$6652$5714$1RbCyC
     (record-predicate g$6653$5616$1RbCyC))
   (g$make-serious-condition$5620$1RbCyC
     g$make-serious-condition$5715$1RbCyC
     (record-constructor g$6654$5618$1RbCyC))
   (g$serious-condition?$5621$1RbCyC
     g$serious-condition?$5716$1RbCyC
     (condition-predicate g$6653$5616$1RbCyC))
   (g$6667$5622$1RbCyC
     g$6667$5717$1RbCyC
     (make-record-type-descriptor
       '&error
       g$6653$5616$1RbCyC
       'g$6670$1RbCyC
       '#f
       '#f
       '#()))
   (g$6669$5623$1RbCyC g$6669$5718$1RbCyC '#f)
   (g$6668$5624$1RbCyC
     g$6668$5719$1RbCyC
     (make-record-constructor-descriptor
       g$6667$5622$1RbCyC
       g$6654$5618$1RbCyC
       g$6669$5623$1RbCyC))
   (g$6666$5625$1RbCyC
     g$6666$5720$1RbCyC
     (record-predicate g$6667$5622$1RbCyC))
   (g$make-error$5626$1RbCyC
     g$make-error$5721$1RbCyC
     (record-constructor g$6668$5624$1RbCyC))
   (g$error?$5627$1RbCyC
     g$error?$5722$1RbCyC
     (condition-predicate g$6667$5622$1RbCyC))
   (g$6681$5628$1RbCyC
     g$6681$5723$1RbCyC
     (make-record-type-descriptor
       '&violation
       g$6653$5616$1RbCyC
       'g$6684$1RbCyC
       '#f
       '#f
       '#()))
   (g$6683$5629$1RbCyC g$6683$5724$1RbCyC '#f)
   (g$6682$5630$1RbCyC
     g$6682$5725$1RbCyC
     (make-record-constructor-descriptor
       g$6681$5628$1RbCyC
       g$6654$5618$1RbCyC
       g$6683$5629$1RbCyC))
   (g$6680$5631$1RbCyC
     g$6680$5726$1RbCyC
     (record-predicate g$6681$5628$1RbCyC))
   (g$make-violation$5632$1RbCyC
     g$make-violation$5727$1RbCyC
     (record-constructor g$6682$5630$1RbCyC))
   (g$violation?$5633$1RbCyC
     g$violation?$5728$1RbCyC
     (condition-predicate g$6681$5628$1RbCyC))
   (g$6695$5634$1RbCyC
     g$6695$5729$1RbCyC
     (make-record-type-descriptor
       '&assertion
       g$6681$5628$1RbCyC
       'g$6698$1RbCyC
       '#f
       '#f
       '#()))
   (g$6697$5635$1RbCyC g$6697$5730$1RbCyC '#f)
   (g$6696$5636$1RbCyC
     g$6696$5731$1RbCyC
     (make-record-constructor-descriptor
       g$6695$5634$1RbCyC
       g$6682$5630$1RbCyC
       g$6697$5635$1RbCyC))
   (g$6694$5637$1RbCyC
     g$6694$5732$1RbCyC
     (record-predicate g$6695$5634$1RbCyC))
   (g$make-assertion-violation$5638$1RbCyC
     g$make-assertion-violation$5733$1RbCyC
     (record-constructor g$6696$5636$1RbCyC))
   (g$assertion-violation?$5639$1RbCyC
     g$assertion-violation?$5734$1RbCyC
     (condition-predicate g$6695$5634$1RbCyC))
   (g$6710$5640$1RbCyC
     g$6710$5735$1RbCyC
     (make-record-type-descriptor
       '&irritants
       g$6607$5595$1RbCyC
       'g$6713$1RbCyC
       '#f
       '#f
       '#((immutable irritants))))
   (g$6712$5641$1RbCyC g$6712$5736$1RbCyC '#f)
   (g$6711$5642$1RbCyC
     g$6711$5737$1RbCyC
     (make-record-constructor-descriptor
       g$6710$5640$1RbCyC
       g$6608$5597$1RbCyC
       g$6712$5641$1RbCyC))
   (g$6709$5643$1RbCyC
     g$6709$5738$1RbCyC
     (record-predicate g$6710$5640$1RbCyC))
   (g$make-irritants-condition$5644$1RbCyC
     g$make-irritants-condition$5739$1RbCyC
     (record-constructor g$6711$5642$1RbCyC))
   (g$6708$5645$1RbCyC
     g$6708$5740$1RbCyC
     (record-accessor g$6710$5640$1RbCyC '0))
   (g$irritants-condition?$5646$1RbCyC
     g$irritants-condition?$5741$1RbCyC
     (condition-predicate g$6710$5640$1RbCyC))
   (g$condition-irritants$5647$1RbCyC
     g$condition-irritants$5742$1RbCyC
     (condition-accessor g$6710$5640$1RbCyC g$6708$5645$1RbCyC))
   (g$6727$5648$1RbCyC
     g$6727$5743$1RbCyC
     (make-record-type-descriptor
       '&who
       g$6607$5595$1RbCyC
       'g$6730$1RbCyC
       '#f
       '#f
       '#((immutable who))))
   (g$6729$5649$1RbCyC g$6729$5744$1RbCyC '#f)
   (g$6728$5650$1RbCyC
     g$6728$5745$1RbCyC
     (make-record-constructor-descriptor
       g$6727$5648$1RbCyC
       g$6608$5597$1RbCyC
       g$6729$5649$1RbCyC))
   (g$6726$5651$1RbCyC
     g$6726$5746$1RbCyC
     (record-predicate g$6727$5648$1RbCyC))
   (g$make-who-condition$5652$1RbCyC
     g$make-who-condition$5747$1RbCyC
     (record-constructor g$6728$5650$1RbCyC))
   (g$6725$5653$1RbCyC
     g$6725$5748$1RbCyC
     (record-accessor g$6727$5648$1RbCyC '0))
   (g$who-condition?$5654$1RbCyC
     g$who-condition?$5749$1RbCyC
     (condition-predicate g$6727$5648$1RbCyC))
   (g$condition-who$5655$1RbCyC
     g$condition-who$5750$1RbCyC
     (condition-accessor g$6727$5648$1RbCyC g$6725$5653$1RbCyC))
   (g$6743$5656$1RbCyC
     g$6743$5751$1RbCyC
     (make-record-type-descriptor
       '&non-continuable
       g$6681$5628$1RbCyC
       'g$6746$1RbCyC
       '#f
       '#f
       '#()))
   (g$6745$5657$1RbCyC g$6745$5752$1RbCyC '#f)
   (g$6744$5658$1RbCyC
     g$6744$5753$1RbCyC
     (make-record-constructor-descriptor
       g$6743$5656$1RbCyC
       g$6682$5630$1RbCyC
       g$6745$5657$1RbCyC))
   (g$6742$5659$1RbCyC
     g$6742$5754$1RbCyC
     (record-predicate g$6743$5656$1RbCyC))
   (g$make-non-continuable-violation$5660$1RbCyC
     g$make-non-continuable-violation$5755$1RbCyC
     (record-constructor g$6744$5658$1RbCyC))
   (g$non-continuable-violation?$5661$1RbCyC
     g$non-continuable-violation?$5756$1RbCyC
     (condition-predicate g$6743$5656$1RbCyC))
   (g$6757$5662$1RbCyC
     g$6757$5757$1RbCyC
     (make-record-type-descriptor
       '&implementation-restriction
       g$6681$5628$1RbCyC
       'g$6760$1RbCyC
       '#f
       '#f
       '#()))
   (g$6759$5663$1RbCyC g$6759$5758$1RbCyC '#f)
   (g$6758$5664$1RbCyC
     g$6758$5759$1RbCyC
     (make-record-constructor-descriptor
       g$6757$5662$1RbCyC
       g$6682$5630$1RbCyC
       g$6759$5663$1RbCyC))
   (g$6756$5665$1RbCyC
     g$6756$5760$1RbCyC
     (record-predicate g$6757$5662$1RbCyC))
   (g$make-implementation-restriction-violation$5666$1RbCyC
     g$make-implementation-restriction-violation$5761$1RbCyC
     (record-constructor g$6758$5664$1RbCyC))
   (g$implementation-restriction-violation?$5667$1RbCyC
     g$implementation-restriction-violation?$5762$1RbCyC
     (condition-predicate g$6757$5662$1RbCyC))
   (g$6771$5668$1RbCyC
     g$6771$5763$1RbCyC
     (make-record-type-descriptor
       '&lexical
       g$6681$5628$1RbCyC
       'g$6774$1RbCyC
       '#f
       '#f
       '#()))
   (g$6773$5669$1RbCyC g$6773$5764$1RbCyC '#f)
   (g$6772$5670$1RbCyC
     g$6772$5765$1RbCyC
     (make-record-constructor-descriptor
       g$6771$5668$1RbCyC
       g$6682$5630$1RbCyC
       g$6773$5669$1RbCyC))
   (g$6770$5671$1RbCyC
     g$6770$5766$1RbCyC
     (record-predicate g$6771$5668$1RbCyC))
   (g$make-lexical-violation$5672$1RbCyC
     g$make-lexical-violation$5767$1RbCyC
     (record-constructor g$6772$5670$1RbCyC))
   (g$lexical-violation?$5673$1RbCyC
     g$lexical-violation?$5768$1RbCyC
     (condition-predicate g$6771$5668$1RbCyC))
   (g$6787$5674$1RbCyC
     g$6787$5769$1RbCyC
     (make-record-type-descriptor
       '&syntax
       g$6681$5628$1RbCyC
       'g$6790$1RbCyC
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6789$5675$1RbCyC g$6789$5770$1RbCyC '#f)
   (g$6788$5676$1RbCyC
     g$6788$5771$1RbCyC
     (make-record-constructor-descriptor
       g$6787$5674$1RbCyC
       g$6682$5630$1RbCyC
       g$6789$5675$1RbCyC))
   (g$6786$5677$1RbCyC
     g$6786$5772$1RbCyC
     (record-predicate g$6787$5674$1RbCyC))
   (g$make-syntax-violation$5678$1RbCyC
     g$make-syntax-violation$5773$1RbCyC
     (record-constructor g$6788$5676$1RbCyC))
   (g$6784$5679$1RbCyC
     g$6784$5774$1RbCyC
     (record-accessor g$6787$5674$1RbCyC '0))
   (g$6785$5680$1RbCyC
     g$6785$5775$1RbCyC
     (record-accessor g$6787$5674$1RbCyC '1))
   (g$syntax-violation?$5681$1RbCyC
     g$syntax-violation?$5776$1RbCyC
     (condition-predicate g$6787$5674$1RbCyC))
   (g$syntax-violation-form$5682$1RbCyC
     g$syntax-violation-form$5777$1RbCyC
     (condition-accessor g$6787$5674$1RbCyC g$6784$5679$1RbCyC))
   (g$syntax-violation-subform$5683$1RbCyC
     g$syntax-violation-subform$5778$1RbCyC
     (condition-accessor g$6787$5674$1RbCyC g$6785$5680$1RbCyC))
   (g$6805$5684$1RbCyC
     g$6805$5779$1RbCyC
     (make-record-type-descriptor
       '&undefined
       g$6681$5628$1RbCyC
       'g$6808$1RbCyC
       '#f
       '#f
       '#()))
   (g$6807$5685$1RbCyC g$6807$5780$1RbCyC '#f)
   (g$6806$5686$1RbCyC
     g$6806$5781$1RbCyC
     (make-record-constructor-descriptor
       g$6805$5684$1RbCyC
       g$6682$5630$1RbCyC
       g$6807$5685$1RbCyC))
   (g$6804$5687$1RbCyC
     g$6804$5782$1RbCyC
     (record-predicate g$6805$5684$1RbCyC))
   (g$make-undefined-violation$5688$1RbCyC
     g$make-undefined-violation$5783$1RbCyC
     (record-constructor g$6806$5686$1RbCyC))
   (g$undefined-violation?$5689$1RbCyC
     g$undefined-violation?$5784$1RbCyC
     (condition-predicate g$6805$5684$1RbCyC)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$5785$1RbCyC
     g$append!$5791$1RbCyC
     (case-lambda
       ((g$a$5786$1RbCyC . g$b$5787$1RbCyC)
        (if (null? g$a$5786$1RbCyC)
          g$b$5787$1RbCyC
          (if (null? g$b$5787$1RbCyC)
            g$a$5786$1RbCyC
            (begin
              ((letrec ((g$f$5788$1RbCyC
                          (case-lambda
                            ((g$a$5789$1RbCyC)
                             ((case-lambda
                                ((g$n$5790$1RbCyC)
                                 (if (null? g$n$5790$1RbCyC)
                                   (set-cdr! g$a$5789$1RbCyC g$b$5787$1RbCyC)
                                   (g$f$5788$1RbCyC g$n$5790$1RbCyC))))
                              (cdr g$a$5789$1RbCyC))))))
                 g$f$5788$1RbCyC)
               g$a$5786$1RbCyC)
              g$a$5786$1RbCyC)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$5792$1RbCyC
     g$sign$5810$1RbCyC
     (case-lambda
       ((g$n$5798$1RbCyC)
        (if (> g$n$5798$1RbCyC '0) '1 (if (< g$n$5798$1RbCyC '0) '-1 '0)))))
   (g$quotient$5793$1RbCyC
     g$quotient$5811$1RbCyC
     (case-lambda
       ((g$n1$5799$1RbCyC g$n2$5800$1RbCyC)
        (begin
          (if (not (integer-valued? g$n1$5799$1RbCyC))
            (assertion-violation 'quotient '"not an integer" g$n1$5799$1RbCyC)
            (void))
          (if (not (integer-valued? g$n2$5800$1RbCyC))
            (assertion-violation 'quotient '"not an integer" g$n2$5800$1RbCyC)
            (void))
          (* (g$sign$5792$1RbCyC g$n1$5799$1RbCyC)
             (g$sign$5792$1RbCyC g$n2$5800$1RbCyC)
             (div (abs g$n1$5799$1RbCyC) (abs g$n2$5800$1RbCyC)))))))
   (g$remainder$5794$1RbCyC
     g$remainder$5812$1RbCyC
     (case-lambda
       ((g$n1$5801$1RbCyC g$n2$5802$1RbCyC)
        (begin
          (if (not (integer-valued? g$n1$5801$1RbCyC))
            (assertion-violation 'remainder '"not an integer" g$n1$5801$1RbCyC)
            (void))
          (if (not (integer-valued? g$n2$5802$1RbCyC))
            (assertion-violation 'remainder '"not an integer" g$n2$5802$1RbCyC)
            (void))
          (* (g$sign$5792$1RbCyC g$n1$5801$1RbCyC)
             (mod (abs g$n1$5801$1RbCyC) (abs g$n2$5802$1RbCyC)))))))
   (g$modulo$5795$1RbCyC
     g$modulo$5813$1RbCyC
     (case-lambda
       ((g$n1$5803$1RbCyC g$n2$5804$1RbCyC)
        (begin
          (if (not (integer-valued? g$n1$5803$1RbCyC))
            (assertion-violation 'modulo '"not an integer" g$n1$5803$1RbCyC)
            (void))
          (if (not (integer-valued? g$n2$5804$1RbCyC))
            (assertion-violation 'modulo '"not an integer" g$n2$5804$1RbCyC)
            (void))
          (* (g$sign$5792$1RbCyC g$n2$5804$1RbCyC)
             (mod (* (g$sign$5792$1RbCyC g$n2$5804$1RbCyC) g$n1$5803$1RbCyC)
                  (abs g$n2$5804$1RbCyC)))))))
   (g$make-promise$5796$1RbCyC
     g$make-promise$5814$1RbCyC
     (case-lambda
       ((g$proc$5805$1RbCyC)
        ((case-lambda
           ((g$result-ready?$5806$1RbCyC g$result$5807$1RbCyC)
            (case-lambda
              (()
               (if g$result-ready?$5806$1RbCyC
                 g$result$5807$1RbCyC
                 ((case-lambda
                    ((g$x$5808$1RbCyC)
                     (if g$result-ready?$5806$1RbCyC
                       g$result$5807$1RbCyC
                       (begin
                         (set! g$result-ready?$5806$1RbCyC '#t)
                         (set! g$result$5807$1RbCyC g$x$5808$1RbCyC)
                         g$result$5807$1RbCyC))))
                  (g$proc$5805$1RbCyC)))))))
         '#f
         '#f))))
   (g$force$5797$1RbCyC
     g$force$5815$1RbCyC
     (case-lambda ((g$object$5809$1RbCyC) (g$object$5809$1RbCyC)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$5816$1RbCyC
     g$split$5842$1RbCyC
     (case-lambda
       ((g$ls$5819$1RbCyC)
        ((letrec ((g$loop$5820$1RbCyC
                    (case-lambda
                      ((g$rest$5821$1RbCyC
                         g$left$5822$1RbCyC
                         g$right$5823$1RbCyC)
                       (if (null? g$rest$5821$1RbCyC)
                         (cons g$left$5822$1RbCyC g$right$5823$1RbCyC)
                         (if (null? (cdr g$rest$5821$1RbCyC))
                           (cons
                             (cons (car g$rest$5821$1RbCyC) g$left$5822$1RbCyC)
                             g$right$5823$1RbCyC)
                           (g$loop$5820$1RbCyC
                             (g$cddr$5161$1RbCyC g$rest$5821$1RbCyC)
                             (cons (car g$rest$5821$1RbCyC) g$left$5822$1RbCyC)
                             (cons
                               (g$cadr$5159$1RbCyC g$rest$5821$1RbCyC)
                               g$right$5823$1RbCyC))))))))
           g$loop$5820$1RbCyC)
         g$ls$5819$1RbCyC
         '()
         '()))))
   (g$reverse-it$5817$1RbCyC
     g$reverse-it$5843$1RbCyC
     (case-lambda
       ((g$head$5824$1RbCyC g$tail$5825$1RbCyC)
        (if (null? g$head$5824$1RbCyC)
          g$tail$5825$1RbCyC
          ((case-lambda
             ((g$hd$5826$1RbCyC g$tl$5827$1RbCyC)
              (g$reverse-it$5817$1RbCyC
                g$tl$5827$1RbCyC
                (cons g$hd$5826$1RbCyC g$tail$5825$1RbCyC))))
           (car g$head$5824$1RbCyC)
           (cdr g$head$5824$1RbCyC))))))
   (g$list-sort$5818$1RbCyC
     g$list-sort$5844$1RbCyC
     (case-lambda
       ((g$precedes?$5828$1RbCyC g$ls$5829$1RbCyC)
        ((case-lambda
           ((g$merge$5830$1RbCyC)
            ((case-lambda
               (()
                (if (null? g$ls$5829$1RbCyC)
                  '()
                  ((letrec ((g$helper$5831$1RbCyC
                              (case-lambda
                                ((g$piece$5832$1RbCyC)
                                 (if (null? (cdr g$piece$5832$1RbCyC))
                                   g$piece$5832$1RbCyC
                                   ((case-lambda
                                      ((g$parts$5833$1RbCyC)
                                       (g$merge$5830$1RbCyC
                                         (g$helper$5831$1RbCyC
                                           (car g$parts$5833$1RbCyC))
                                         (g$helper$5831$1RbCyC
                                           (cdr g$parts$5833$1RbCyC)))))
                                    (g$split$5816$1RbCyC
                                      g$piece$5832$1RbCyC)))))))
                     g$helper$5831$1RbCyC)
                   g$ls$5829$1RbCyC)))))))
         (case-lambda
           ((g$list-1$5834$1RbCyC g$list-2$5835$1RbCyC)
            ((letrec ((g$loop$5836$1RbCyC
                        (case-lambda
                          ((g$source-1$5837$1RbCyC
                             g$source-2$5838$1RbCyC
                             g$so-far$5839$1RbCyC)
                           (if (null? g$source-1$5837$1RbCyC)
                             (g$reverse-it$5817$1RbCyC
                               g$so-far$5839$1RbCyC
                               g$source-2$5838$1RbCyC)
                             (if (null? g$source-2$5838$1RbCyC)
                               (g$reverse-it$5817$1RbCyC
                                 g$so-far$5839$1RbCyC
                                 g$source-1$5837$1RbCyC)
                               ((case-lambda
                                  ((g$car-1$5840$1RbCyC g$car-2$5841$1RbCyC)
                                   (if (g$precedes?$5828$1RbCyC
                                         g$car-2$5841$1RbCyC
                                         g$car-1$5840$1RbCyC)
                                     (g$loop$5836$1RbCyC
                                       g$source-1$5837$1RbCyC
                                       (cdr g$source-2$5838$1RbCyC)
                                       (cons
                                         g$car-2$5841$1RbCyC
                                         g$so-far$5839$1RbCyC))
                                     (g$loop$5836$1RbCyC
                                       g$source-2$5838$1RbCyC
                                       (cdr g$source-1$5837$1RbCyC)
                                       (cons
                                         g$car-1$5840$1RbCyC
                                         g$so-far$5839$1RbCyC)))))
                                (car g$source-1$5837$1RbCyC)
                                (car g$source-2$5838$1RbCyC))))))))
               g$loop$5836$1RbCyC)
             g$list-1$5834$1RbCyC
             g$list-2$5835$1RbCyC
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$5851$1RbCyC
     g$string-ci=?$5917$1RbCyC
     (case-lambda
       ((g$a$5867$1RbCyC g$b$5868$1RbCyC . g$rest$5869$1RbCyC)
        (begin
          (if (not (string? g$a$5867$1RbCyC))
            (assertion-violation 'string-ci=? '"not a string" g$a$5867$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5870$1RbCyC)
               (begin
                 (if (not (string? g$x$5870$1RbCyC))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$5870$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5871$1RbCyC)
                     (begin
                       (set! g$a$5867$1RbCyC g$x$5870$1RbCyC)
                       g$r$5871$1RbCyC)))
                  (= (string-ci-compare g$a$5867$1RbCyC g$x$5870$1RbCyC) '0)))))
            (cons g$b$5868$1RbCyC g$rest$5869$1RbCyC))))))
   (g$string-ci<?$5852$1RbCyC
     g$string-ci<?$5918$1RbCyC
     (case-lambda
       ((g$a$5872$1RbCyC g$b$5873$1RbCyC . g$rest$5874$1RbCyC)
        (begin
          (if (not (string? g$a$5872$1RbCyC))
            (assertion-violation 'string-ci<? '"not a string" g$a$5872$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5875$1RbCyC)
               (begin
                 (if (not (string? g$x$5875$1RbCyC))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$5875$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5876$1RbCyC)
                     (begin
                       (set! g$a$5872$1RbCyC g$x$5875$1RbCyC)
                       g$r$5876$1RbCyC)))
                  (< (string-ci-compare g$a$5872$1RbCyC g$x$5875$1RbCyC) '0)))))
            (cons g$b$5873$1RbCyC g$rest$5874$1RbCyC))))))
   (g$string-ci>?$5853$1RbCyC
     g$string-ci>?$5919$1RbCyC
     (case-lambda
       ((g$a$5877$1RbCyC g$b$5878$1RbCyC . g$rest$5879$1RbCyC)
        (begin
          (if (not (string? g$a$5877$1RbCyC))
            (assertion-violation 'string-ci>? '"not a string" g$a$5877$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5880$1RbCyC)
               (begin
                 (if (not (string? g$x$5880$1RbCyC))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$5880$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5881$1RbCyC)
                     (begin
                       (set! g$a$5877$1RbCyC g$x$5880$1RbCyC)
                       g$r$5881$1RbCyC)))
                  (> (string-ci-compare g$a$5877$1RbCyC g$x$5880$1RbCyC) '0)))))
            (cons g$b$5878$1RbCyC g$rest$5879$1RbCyC))))))
   (g$string-ci<=?$5854$1RbCyC
     g$string-ci<=?$5920$1RbCyC
     (case-lambda
       ((g$a$5882$1RbCyC g$b$5883$1RbCyC . g$rest$5884$1RbCyC)
        (begin
          (if (not (string? g$a$5882$1RbCyC))
            (assertion-violation 'string-ci<=? '"not a string" g$a$5882$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5885$1RbCyC)
               (begin
                 (if (not (string? g$x$5885$1RbCyC))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$5885$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5886$1RbCyC)
                     (begin
                       (set! g$a$5882$1RbCyC g$x$5885$1RbCyC)
                       g$r$5886$1RbCyC)))
                  (<= (string-ci-compare g$a$5882$1RbCyC g$x$5885$1RbCyC)
                      '0)))))
            (cons g$b$5883$1RbCyC g$rest$5884$1RbCyC))))))
   (g$string-ci>=?$5855$1RbCyC
     g$string-ci>=?$5921$1RbCyC
     (case-lambda
       ((g$a$5887$1RbCyC g$b$5888$1RbCyC . g$rest$5889$1RbCyC)
        (begin
          (if (not (string? g$a$5887$1RbCyC))
            (assertion-violation 'string-ci>=? '"not a string" g$a$5887$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5890$1RbCyC)
               (begin
                 (if (not (string? g$x$5890$1RbCyC))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$5890$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5891$1RbCyC)
                     (begin
                       (set! g$a$5887$1RbCyC g$x$5890$1RbCyC)
                       g$r$5891$1RbCyC)))
                  (>= (string-ci-compare g$a$5887$1RbCyC g$x$5890$1RbCyC)
                      '0)))))
            (cons g$b$5888$1RbCyC g$rest$5889$1RbCyC))))))
   (g$char-ci=?$5862$1RbCyC
     g$char-ci=?$5922$1RbCyC
     (case-lambda
       ((g$a$5892$1RbCyC g$b$5893$1RbCyC . g$rest$5894$1RbCyC)
        (begin
          (if (not (char? g$a$5892$1RbCyC))
            (assertion-violation 'char-ci=? '"not a char" g$a$5892$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5895$1RbCyC)
               (begin
                 (if (not (char? g$x$5895$1RbCyC))
                   (assertion-violation
                     'char-ci=?
                     '"not a char"
                     g$x$5895$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5896$1RbCyC)
                     (begin
                       (set! g$a$5892$1RbCyC g$x$5895$1RbCyC)
                       g$r$5896$1RbCyC)))
                  (= (char->integer (char-upcase g$a$5892$1RbCyC))
                     (char->integer (char-upcase g$x$5895$1RbCyC)))))))
            (cons g$b$5893$1RbCyC g$rest$5894$1RbCyC))))))
   (g$char-ci<?$5863$1RbCyC
     g$char-ci<?$5923$1RbCyC
     (case-lambda
       ((g$a$5897$1RbCyC g$b$5898$1RbCyC . g$rest$5899$1RbCyC)
        (begin
          (if (not (char? g$a$5897$1RbCyC))
            (assertion-violation 'char-ci<? '"not a char" g$a$5897$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5900$1RbCyC)
               (begin
                 (if (not (char? g$x$5900$1RbCyC))
                   (assertion-violation
                     'char-ci<?
                     '"not a char"
                     g$x$5900$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5901$1RbCyC)
                     (begin
                       (set! g$a$5897$1RbCyC g$x$5900$1RbCyC)
                       g$r$5901$1RbCyC)))
                  (< (char->integer (char-upcase g$a$5897$1RbCyC))
                     (char->integer (char-upcase g$x$5900$1RbCyC)))))))
            (cons g$b$5898$1RbCyC g$rest$5899$1RbCyC))))))
   (g$char-ci>?$5864$1RbCyC
     g$char-ci>?$5924$1RbCyC
     (case-lambda
       ((g$a$5902$1RbCyC g$b$5903$1RbCyC . g$rest$5904$1RbCyC)
        (begin
          (if (not (char? g$a$5902$1RbCyC))
            (assertion-violation 'char-ci>? '"not a char" g$a$5902$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5905$1RbCyC)
               (begin
                 (if (not (char? g$x$5905$1RbCyC))
                   (assertion-violation
                     'char-ci>?
                     '"not a char"
                     g$x$5905$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5906$1RbCyC)
                     (begin
                       (set! g$a$5902$1RbCyC g$x$5905$1RbCyC)
                       g$r$5906$1RbCyC)))
                  (> (char->integer (char-upcase g$a$5902$1RbCyC))
                     (char->integer (char-upcase g$x$5905$1RbCyC)))))))
            (cons g$b$5903$1RbCyC g$rest$5904$1RbCyC))))))
   (g$char-ci<=?$5865$1RbCyC
     g$char-ci<=?$5925$1RbCyC
     (case-lambda
       ((g$a$5907$1RbCyC g$b$5908$1RbCyC . g$rest$5909$1RbCyC)
        (begin
          (if (not (char? g$a$5907$1RbCyC))
            (assertion-violation 'char-ci<=? '"not a char" g$a$5907$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5910$1RbCyC)
               (begin
                 (if (not (char? g$x$5910$1RbCyC))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$5910$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5911$1RbCyC)
                     (begin
                       (set! g$a$5907$1RbCyC g$x$5910$1RbCyC)
                       g$r$5911$1RbCyC)))
                  (<= (char->integer (char-upcase g$a$5907$1RbCyC))
                      (char->integer (char-upcase g$x$5910$1RbCyC)))))))
            (cons g$b$5908$1RbCyC g$rest$5909$1RbCyC))))))
   (g$char-ci>=?$5866$1RbCyC
     g$char-ci>=?$5926$1RbCyC
     (case-lambda
       ((g$a$5912$1RbCyC g$b$5913$1RbCyC . g$rest$5914$1RbCyC)
        (begin
          (if (not (char? g$a$5912$1RbCyC))
            (assertion-violation 'char-ci>=? '"not a char" g$a$5912$1RbCyC)
            (void))
          (g$for-all$4995$1RbCyC
            (case-lambda
              ((g$x$5915$1RbCyC)
               (begin
                 (if (not (char? g$x$5915$1RbCyC))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$5915$1RbCyC)
                   (void))
                 ((case-lambda
                    ((g$r$5916$1RbCyC)
                     (begin
                       (set! g$a$5912$1RbCyC g$x$5915$1RbCyC)
                       g$r$5916$1RbCyC)))
                  (>= (char->integer (char-upcase g$a$5912$1RbCyC))
                      (char->integer (char-upcase g$x$5915$1RbCyC)))))))
            (cons g$b$5913$1RbCyC g$rest$5914$1RbCyC)))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$5927$1RbCyC
     g$bitwise-if$5974$1RbCyC
     (case-lambda
       ((g$ei1$5934$1RbCyC g$ei2$5935$1RbCyC g$ei3$5936$1RbCyC)
        (bitwise-ior
          (bitwise-and g$ei1$5934$1RbCyC g$ei2$5935$1RbCyC)
          (bitwise-and (bitwise-not g$ei1$5934$1RbCyC) g$ei3$5936$1RbCyC)))))
   (g$bitwise-copy-bit$5928$1RbCyC
     g$bitwise-copy-bit$5975$1RbCyC
     (case-lambda
       ((g$ei1$5937$1RbCyC g$ei2$5938$1RbCyC g$ei3$5939$1RbCyC)
        ((case-lambda
           ((g$mask$5940$1RbCyC)
            ((case-lambda
               (()
                (g$bitwise-if$5927$1RbCyC
                  g$mask$5940$1RbCyC
                  (g$bitwise-arithmetic-shift-left$5931$1RbCyC
                    g$ei3$5939$1RbCyC
                    g$ei2$5938$1RbCyC)
                  g$ei1$5937$1RbCyC))))))
         (g$bitwise-arithmetic-shift-left$5931$1RbCyC '1 g$ei2$5938$1RbCyC)))))
   (g$bitwise-bit-field$5929$1RbCyC
     g$bitwise-bit-field$5976$1RbCyC
     (case-lambda
       ((g$ei1$5941$1RbCyC g$ei2$5942$1RbCyC g$ei3$5943$1RbCyC)
        ((case-lambda
           ((g$mask$5944$1RbCyC)
            (g$bitwise-arithmetic-shift-right$5932$1RbCyC
              (bitwise-and g$ei1$5941$1RbCyC g$mask$5944$1RbCyC)
              g$ei2$5942$1RbCyC)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$5931$1RbCyC
             '-1
             g$ei3$5943$1RbCyC))))))
   (g$bitwise-copy-bit-field$5930$1RbCyC
     g$bitwise-copy-bit-field$5977$1RbCyC
     (case-lambda
       ((g$ei1$5945$1RbCyC
          g$ei2$5946$1RbCyC
          g$ei3$5947$1RbCyC
          g$ei4$5948$1RbCyC)
        ((case-lambda
           ((g$to$5949$1RbCyC)
            ((case-lambda
               ((g$start$5950$1RbCyC)
                ((case-lambda
                   ((g$end$5951$1RbCyC)
                    ((case-lambda
                       ((g$from$5952$1RbCyC)
                        ((case-lambda
                           ((g$mask1$5953$1RbCyC)
                            ((case-lambda
                               ((g$mask2$5954$1RbCyC)
                                ((case-lambda
                                   ((g$mask$5955$1RbCyC)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$5927$1RbCyC
                                          g$mask$5955$1RbCyC
                                          (g$bitwise-arithmetic-shift-left$5931$1RbCyC
                                            g$from$5952$1RbCyC
                                            g$start$5950$1RbCyC)
                                          g$to$5949$1RbCyC))))))
                                 (bitwise-and
                                   g$mask1$5953$1RbCyC
                                   g$mask2$5954$1RbCyC))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$5931$1RbCyC
                                 '-1
                                 g$end$5951$1RbCyC)))))
                         (g$bitwise-arithmetic-shift-left$5931$1RbCyC
                           '-1
                           g$start$5950$1RbCyC))))
                     g$ei4$5948$1RbCyC)))
                 g$ei3$5947$1RbCyC)))
             g$ei2$5946$1RbCyC)))
         g$ei1$5945$1RbCyC))))
   (g$bitwise-arithmetic-shift-left$5931$1RbCyC
     g$bitwise-arithmetic-shift-left$5978$1RbCyC
     (case-lambda
       ((g$ei1$5956$1RbCyC g$ei2$5957$1RbCyC)
        (bitwise-arithmetic-shift g$ei1$5956$1RbCyC g$ei2$5957$1RbCyC))))
   (g$bitwise-arithmetic-shift-right$5932$1RbCyC
     g$bitwise-arithmetic-shift-right$5979$1RbCyC
     (case-lambda
       ((g$ei1$5958$1RbCyC g$ei2$5959$1RbCyC)
        (bitwise-arithmetic-shift g$ei1$5958$1RbCyC (- g$ei2$5959$1RbCyC)))))
   (g$bitwise-rotate-bit-field$5933$1RbCyC
     g$bitwise-rotate-bit-field$5980$1RbCyC
     (case-lambda
       ((g$ei1$5960$1RbCyC
          g$ei2$5961$1RbCyC
          g$ei3$5962$1RbCyC
          g$ei4$5963$1RbCyC)
        ((case-lambda
           ((g$n$5964$1RbCyC)
            ((case-lambda
               ((g$start$5965$1RbCyC)
                ((case-lambda
                   ((g$end$5966$1RbCyC)
                    ((case-lambda
                       ((g$count$5967$1RbCyC)
                        ((case-lambda
                           ((g$width$5968$1RbCyC)
                            ((case-lambda
                               (()
                                (if (positive? g$width$5968$1RbCyC)
                                  ((case-lambda
                                     ((g$count$5969$1RbCyC)
                                      ((case-lambda
                                         ((g$field0$5970$1RbCyC)
                                          ((case-lambda
                                             ((g$field1$5971$1RbCyC)
                                              ((case-lambda
                                                 ((g$field2$5972$1RbCyC)
                                                  ((case-lambda
                                                     ((g$field$5973$1RbCyC)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$5930$1RbCyC
                                                            g$n$5964$1RbCyC
                                                            g$start$5965$1RbCyC
                                                            g$end$5966$1RbCyC
                                                            g$field$5973$1RbCyC))))))
                                                   (bitwise-ior
                                                     g$field1$5971$1RbCyC
                                                     g$field2$5972$1RbCyC))))
                                               (g$bitwise-arithmetic-shift-right$5932$1RbCyC
                                                 g$field0$5970$1RbCyC
                                                 (- g$width$5968$1RbCyC
                                                    g$count$5969$1RbCyC)))))
                                           (g$bitwise-arithmetic-shift-left$5931$1RbCyC
                                             g$field0$5970$1RbCyC
                                             g$count$5969$1RbCyC))))
                                       (g$bitwise-bit-field$5929$1RbCyC
                                         g$n$5964$1RbCyC
                                         g$start$5965$1RbCyC
                                         g$end$5966$1RbCyC))))
                                   (mod g$count$5967$1RbCyC
                                        g$width$5968$1RbCyC))
                                  g$n$5964$1RbCyC))))))
                         (- g$end$5966$1RbCyC g$start$5965$1RbCyC))))
                     g$ei4$5963$1RbCyC)))
                 g$ei3$5962$1RbCyC)))
             g$ei2$5961$1RbCyC)))
         g$ei1$5960$1RbCyC)))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$5981$1RbCyC
     g$fxif$6028$1RbCyC
     (case-lambda
       ((g$fx1$5988$1RbCyC g$fx2$5989$1RbCyC g$fx3$5990$1RbCyC)
        (fxior
          (fxand g$fx1$5988$1RbCyC g$fx2$5989$1RbCyC)
          (fxand (fxnot g$fx1$5988$1RbCyC) g$fx3$5990$1RbCyC)))))
   (g$fxcopy-bit$5982$1RbCyC
     g$fxcopy-bit$6029$1RbCyC
     (case-lambda
       ((g$fx1$5991$1RbCyC g$fx2$5992$1RbCyC g$fx3$5993$1RbCyC)
        ((case-lambda
           ((g$mask$5994$1RbCyC)
            ((case-lambda
               (()
                (g$fxif$5981$1RbCyC
                  g$mask$5994$1RbCyC
                  (g$fxarithmetic-shift-left$5985$1RbCyC
                    g$fx3$5993$1RbCyC
                    g$fx2$5992$1RbCyC)
                  g$fx1$5991$1RbCyC))))))
         (g$fxarithmetic-shift-left$5985$1RbCyC '1 g$fx2$5992$1RbCyC)))))
   (g$fxbit-field$5983$1RbCyC
     g$fxbit-field$6030$1RbCyC
     (case-lambda
       ((g$fx1$5995$1RbCyC g$fx2$5996$1RbCyC g$fx3$5997$1RbCyC)
        ((case-lambda
           ((g$mask$5998$1RbCyC)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$5986$1RbCyC
                  (fxand g$fx1$5995$1RbCyC g$mask$5998$1RbCyC)
                  g$fx2$5996$1RbCyC))))))
         (fxnot
           (g$fxarithmetic-shift-left$5985$1RbCyC '-1 g$fx3$5997$1RbCyC))))))
   (g$fxcopy-bit-field$5984$1RbCyC
     g$fxcopy-bit-field$6031$1RbCyC
     (case-lambda
       ((g$fx1$5999$1RbCyC
          g$fx2$6000$1RbCyC
          g$fx3$6001$1RbCyC
          g$fx4$6002$1RbCyC)
        ((case-lambda
           ((g$to$6003$1RbCyC)
            ((case-lambda
               ((g$start$6004$1RbCyC)
                ((case-lambda
                   ((g$end$6005$1RbCyC)
                    ((case-lambda
                       ((g$from$6006$1RbCyC)
                        ((case-lambda
                           ((g$mask1$6007$1RbCyC)
                            ((case-lambda
                               ((g$mask2$6008$1RbCyC)
                                ((case-lambda
                                   ((g$mask$6009$1RbCyC)
                                    ((case-lambda
                                       (()
                                        (g$fxif$5981$1RbCyC
                                          g$mask$6009$1RbCyC
                                          (g$fxarithmetic-shift-left$5985$1RbCyC
                                            g$from$6006$1RbCyC
                                            g$start$6004$1RbCyC)
                                          g$to$6003$1RbCyC))))))
                                 (fxand
                                   g$mask1$6007$1RbCyC
                                   g$mask2$6008$1RbCyC))))
                             (fxnot
                               (g$fxarithmetic-shift-left$5985$1RbCyC
                                 '-1
                                 g$end$6005$1RbCyC)))))
                         (g$fxarithmetic-shift-left$5985$1RbCyC
                           '-1
                           g$start$6004$1RbCyC))))
                     g$fx4$6002$1RbCyC)))
                 g$fx3$6001$1RbCyC)))
             g$fx2$6000$1RbCyC)))
         g$fx1$5999$1RbCyC))))
   (g$fxarithmetic-shift-left$5985$1RbCyC
     g$fxarithmetic-shift-left$6032$1RbCyC
     (case-lambda
       ((g$fx1$6010$1RbCyC g$fx2$6011$1RbCyC)
        (fxarithmetic-shift g$fx1$6010$1RbCyC g$fx2$6011$1RbCyC))))
   (g$fxarithmetic-shift-right$5986$1RbCyC
     g$fxarithmetic-shift-right$6033$1RbCyC
     (case-lambda
       ((g$fx1$6012$1RbCyC g$fx2$6013$1RbCyC)
        (fxarithmetic-shift g$fx1$6012$1RbCyC (- g$fx2$6013$1RbCyC)))))
   (g$fxrotate-bit-field$5987$1RbCyC
     g$fxrotate-bit-field$6034$1RbCyC
     (case-lambda
       ((g$fx1$6014$1RbCyC
          g$fx2$6015$1RbCyC
          g$fx3$6016$1RbCyC
          g$fx4$6017$1RbCyC)
        ((case-lambda
           ((g$n$6018$1RbCyC)
            ((case-lambda
               ((g$start$6019$1RbCyC)
                ((case-lambda
                   ((g$end$6020$1RbCyC)
                    ((case-lambda
                       ((g$count$6021$1RbCyC)
                        ((case-lambda
                           ((g$width$6022$1RbCyC)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6022$1RbCyC)
                                  ((case-lambda
                                     ((g$count$6023$1RbCyC)
                                      ((case-lambda
                                         ((g$field0$6024$1RbCyC)
                                          ((case-lambda
                                             ((g$field1$6025$1RbCyC)
                                              ((case-lambda
                                                 ((g$field2$6026$1RbCyC)
                                                  ((case-lambda
                                                     ((g$field$6027$1RbCyC)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$5984$1RbCyC
                                                            g$n$6018$1RbCyC
                                                            g$start$6019$1RbCyC
                                                            g$end$6020$1RbCyC
                                                            g$field$6027$1RbCyC))))))
                                                   (fxior
                                                     g$field1$6025$1RbCyC
                                                     g$field2$6026$1RbCyC))))
                                               (g$fxarithmetic-shift-right$5986$1RbCyC
                                                 g$field0$6024$1RbCyC
                                                 (- g$width$6022$1RbCyC
                                                    g$count$6023$1RbCyC)))))
                                           (g$fxarithmetic-shift-left$5985$1RbCyC
                                             g$field0$6024$1RbCyC
                                             g$count$6023$1RbCyC))))
                                       (g$fxbit-field$5983$1RbCyC
                                         g$n$6018$1RbCyC
                                         g$start$6019$1RbCyC
                                         g$end$6020$1RbCyC))))
                                   (mod g$count$6021$1RbCyC
                                        g$width$6022$1RbCyC))
                                  g$n$6018$1RbCyC))))))
                         (- g$end$6020$1RbCyC g$start$6019$1RbCyC))))
                     g$fx4$6017$1RbCyC)))
                 g$fx3$6016$1RbCyC)))
             g$fx2$6015$1RbCyC)))
         g$fx1$6014$1RbCyC)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7103$6035$1RbCyC
     g$7103$6047$1RbCyC
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7106$1RbCyC
       '#f
       '#f
       '#()))
   (g$7105$6036$1RbCyC g$7105$6048$1RbCyC '#f)
   (g$7104$6037$1RbCyC
     g$7104$6049$1RbCyC
     (make-record-constructor-descriptor
       g$7103$6035$1RbCyC
       &implementation-restriction-rcd
       g$7105$6036$1RbCyC))
   (g$7102$6038$1RbCyC
     g$7102$6050$1RbCyC
     (record-predicate g$7103$6035$1RbCyC))
   (g$make-no-infinities-violation$6039$1RbCyC
     g$make-no-infinities-violation$6051$1RbCyC
     (record-constructor g$7104$6037$1RbCyC))
   (g$no-infinities-violation?$6040$1RbCyC
     g$no-infinities-violation?$6052$1RbCyC
     (condition-predicate g$7103$6035$1RbCyC))
   (g$7117$6041$1RbCyC
     g$7117$6053$1RbCyC
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7120$1RbCyC
       '#f
       '#f
       '#()))
   (g$7119$6042$1RbCyC g$7119$6054$1RbCyC '#f)
   (g$7118$6043$1RbCyC
     g$7118$6055$1RbCyC
     (make-record-constructor-descriptor
       g$7117$6041$1RbCyC
       &implementation-restriction-rcd
       g$7119$6042$1RbCyC))
   (g$7116$6044$1RbCyC
     g$7116$6056$1RbCyC
     (record-predicate g$7117$6041$1RbCyC))
   (g$make-no-nans-violation$6045$1RbCyC
     g$make-no-nans-violation$6057$1RbCyC
     (record-constructor g$7118$6043$1RbCyC))
   (g$no-nans-violation?$6046$1RbCyC
     g$no-nans-violation?$6058$1RbCyC
     (condition-predicate g$7117$6041$1RbCyC)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7132$6059$1RbCyC
     g$7132$6139$1RbCyC
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7135$1RbCyC
       '#f
       '#f
       '#()))
   (g$7134$6060$1RbCyC g$7134$6140$1RbCyC '#f)
   (g$7133$6061$1RbCyC
     g$7133$6141$1RbCyC
     (make-record-constructor-descriptor
       g$7132$6059$1RbCyC
       &error-rcd
       g$7134$6060$1RbCyC))
   (g$7131$6062$1RbCyC
     g$7131$6142$1RbCyC
     (record-predicate g$7132$6059$1RbCyC))
   (g$make-i/o-error$6063$1RbCyC
     g$make-i/o-error$6143$1RbCyC
     (record-constructor g$7133$6061$1RbCyC))
   (g$i/o-error?$6064$1RbCyC
     g$i/o-error?$6144$1RbCyC
     (condition-predicate g$7132$6059$1RbCyC))
   (g$7146$6065$1RbCyC
     g$7146$6145$1RbCyC
     (make-record-type-descriptor
       '&i/o-read
       g$7132$6059$1RbCyC
       'g$7149$1RbCyC
       '#f
       '#f
       '#()))
   (g$7148$6066$1RbCyC g$7148$6146$1RbCyC '#f)
   (g$7147$6067$1RbCyC
     g$7147$6147$1RbCyC
     (make-record-constructor-descriptor
       g$7146$6065$1RbCyC
       g$7133$6061$1RbCyC
       g$7148$6066$1RbCyC))
   (g$7145$6068$1RbCyC
     g$7145$6148$1RbCyC
     (record-predicate g$7146$6065$1RbCyC))
   (g$make-i/o-read-error$6069$1RbCyC
     g$make-i/o-read-error$6149$1RbCyC
     (record-constructor g$7147$6067$1RbCyC))
   (g$i/o-read-error?$6070$1RbCyC
     g$i/o-read-error?$6150$1RbCyC
     (condition-predicate g$7146$6065$1RbCyC))
   (g$7160$6071$1RbCyC
     g$7160$6151$1RbCyC
     (make-record-type-descriptor
       '&i/o-write
       g$7132$6059$1RbCyC
       'g$7163$1RbCyC
       '#f
       '#f
       '#()))
   (g$7162$6072$1RbCyC g$7162$6152$1RbCyC '#f)
   (g$7161$6073$1RbCyC
     g$7161$6153$1RbCyC
     (make-record-constructor-descriptor
       g$7160$6071$1RbCyC
       g$7133$6061$1RbCyC
       g$7162$6072$1RbCyC))
   (g$7159$6074$1RbCyC
     g$7159$6154$1RbCyC
     (record-predicate g$7160$6071$1RbCyC))
   (g$make-i/o-write-error$6075$1RbCyC
     g$make-i/o-write-error$6155$1RbCyC
     (record-constructor g$7161$6073$1RbCyC))
   (g$i/o-write-error?$6076$1RbCyC
     g$i/o-write-error?$6156$1RbCyC
     (condition-predicate g$7160$6071$1RbCyC))
   (g$7175$6077$1RbCyC
     g$7175$6157$1RbCyC
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7132$6059$1RbCyC
       'g$7178$1RbCyC
       '#f
       '#f
       '#((immutable position))))
   (g$7177$6078$1RbCyC g$7177$6158$1RbCyC '#f)
   (g$7176$6079$1RbCyC
     g$7176$6159$1RbCyC
     (make-record-constructor-descriptor
       g$7175$6077$1RbCyC
       g$7133$6061$1RbCyC
       g$7177$6078$1RbCyC))
   (g$7174$6080$1RbCyC
     g$7174$6160$1RbCyC
     (record-predicate g$7175$6077$1RbCyC))
   (g$make-i/o-invalid-position-error$6081$1RbCyC
     g$make-i/o-invalid-position-error$6161$1RbCyC
     (record-constructor g$7176$6079$1RbCyC))
   (g$7173$6082$1RbCyC
     g$7173$6162$1RbCyC
     (record-accessor g$7175$6077$1RbCyC '0))
   (g$i/o-invalid-position-error?$6083$1RbCyC
     g$i/o-invalid-position-error?$6163$1RbCyC
     (condition-predicate g$7175$6077$1RbCyC))
   (g$i/o-error-position$6084$1RbCyC
     g$i/o-error-position$6164$1RbCyC
     (condition-accessor g$7175$6077$1RbCyC g$7173$6082$1RbCyC))
   (g$7192$6085$1RbCyC
     g$7192$6165$1RbCyC
     (make-record-type-descriptor
       '&i/o-filename
       g$7132$6059$1RbCyC
       'g$7195$1RbCyC
       '#f
       '#f
       '#((immutable filename))))
   (g$7194$6086$1RbCyC g$7194$6166$1RbCyC '#f)
   (g$7193$6087$1RbCyC
     g$7193$6167$1RbCyC
     (make-record-constructor-descriptor
       g$7192$6085$1RbCyC
       g$7133$6061$1RbCyC
       g$7194$6086$1RbCyC))
   (g$7191$6088$1RbCyC
     g$7191$6168$1RbCyC
     (record-predicate g$7192$6085$1RbCyC))
   (g$make-i/o-filename-error$6089$1RbCyC
     g$make-i/o-filename-error$6169$1RbCyC
     (record-constructor g$7193$6087$1RbCyC))
   (g$7190$6090$1RbCyC
     g$7190$6170$1RbCyC
     (record-accessor g$7192$6085$1RbCyC '0))
   (g$i/o-filename-error?$6091$1RbCyC
     g$i/o-filename-error?$6171$1RbCyC
     (condition-predicate g$7192$6085$1RbCyC))
   (g$i/o-error-filename$6092$1RbCyC
     g$i/o-error-filename$6172$1RbCyC
     (condition-accessor g$7192$6085$1RbCyC g$7190$6090$1RbCyC))
   (g$7208$6093$1RbCyC
     g$7208$6173$1RbCyC
     (make-record-type-descriptor
       '&i/o-file-protection
       g$7192$6085$1RbCyC
       'g$7211$1RbCyC
       '#f
       '#f
       '#()))
   (g$7210$6094$1RbCyC g$7210$6174$1RbCyC '#f)
   (g$7209$6095$1RbCyC
     g$7209$6175$1RbCyC
     (make-record-constructor-descriptor
       g$7208$6093$1RbCyC
       g$7193$6087$1RbCyC
       g$7210$6094$1RbCyC))
   (g$7207$6096$1RbCyC
     g$7207$6176$1RbCyC
     (record-predicate g$7208$6093$1RbCyC))
   (g$make-i/o-file-protection-error$6097$1RbCyC
     g$make-i/o-file-protection-error$6177$1RbCyC
     (record-constructor g$7209$6095$1RbCyC))
   (g$i/o-file-protection-error?$6098$1RbCyC
     g$i/o-file-protection-error?$6178$1RbCyC
     (condition-predicate g$7208$6093$1RbCyC))
   (g$7222$6099$1RbCyC
     g$7222$6179$1RbCyC
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$7208$6093$1RbCyC
       'g$7225$1RbCyC
       '#f
       '#f
       '#()))
   (g$7224$6100$1RbCyC g$7224$6180$1RbCyC '#f)
   (g$7223$6101$1RbCyC
     g$7223$6181$1RbCyC
     (make-record-constructor-descriptor
       g$7222$6099$1RbCyC
       g$7209$6095$1RbCyC
       g$7224$6100$1RbCyC))
   (g$7221$6102$1RbCyC
     g$7221$6182$1RbCyC
     (record-predicate g$7222$6099$1RbCyC))
   (g$make-i/o-file-is-read-only-error$6103$1RbCyC
     g$make-i/o-file-is-read-only-error$6183$1RbCyC
     (record-constructor g$7223$6101$1RbCyC))
   (g$i/o-file-is-read-only-error?$6104$1RbCyC
     g$i/o-file-is-read-only-error?$6184$1RbCyC
     (condition-predicate g$7222$6099$1RbCyC))
   (g$7236$6105$1RbCyC
     g$7236$6185$1RbCyC
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$7192$6085$1RbCyC
       'g$7239$1RbCyC
       '#f
       '#f
       '#()))
   (g$7238$6106$1RbCyC g$7238$6186$1RbCyC '#f)
   (g$7237$6107$1RbCyC
     g$7237$6187$1RbCyC
     (make-record-constructor-descriptor
       g$7236$6105$1RbCyC
       g$7193$6087$1RbCyC
       g$7238$6106$1RbCyC))
   (g$7235$6108$1RbCyC
     g$7235$6188$1RbCyC
     (record-predicate g$7236$6105$1RbCyC))
   (g$make-i/o-file-already-exists-error$6109$1RbCyC
     g$make-i/o-file-already-exists-error$6189$1RbCyC
     (record-constructor g$7237$6107$1RbCyC))
   (g$i/o-file-already-exists-error?$6110$1RbCyC
     g$i/o-file-already-exists-error?$6190$1RbCyC
     (condition-predicate g$7236$6105$1RbCyC))
   (g$7250$6111$1RbCyC
     g$7250$6191$1RbCyC
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$7192$6085$1RbCyC
       'g$7253$1RbCyC
       '#f
       '#f
       '#()))
   (g$7252$6112$1RbCyC g$7252$6192$1RbCyC '#f)
   (g$7251$6113$1RbCyC
     g$7251$6193$1RbCyC
     (make-record-constructor-descriptor
       g$7250$6111$1RbCyC
       g$7193$6087$1RbCyC
       g$7252$6112$1RbCyC))
   (g$7249$6114$1RbCyC
     g$7249$6194$1RbCyC
     (record-predicate g$7250$6111$1RbCyC))
   (g$make-i/o-file-does-not-exist-error$6115$1RbCyC
     g$make-i/o-file-does-not-exist-error$6195$1RbCyC
     (record-constructor g$7251$6113$1RbCyC))
   (g$i/o-file-does-not-exist-error?$6116$1RbCyC
     g$i/o-file-does-not-exist-error?$6196$1RbCyC
     (condition-predicate g$7250$6111$1RbCyC))
   (g$7265$6117$1RbCyC
     g$7265$6197$1RbCyC
     (make-record-type-descriptor
       '&i/o-port
       g$7132$6059$1RbCyC
       'g$7268$1RbCyC
       '#f
       '#f
       '#((immutable port))))
   (g$7267$6118$1RbCyC g$7267$6198$1RbCyC '#f)
   (g$7266$6119$1RbCyC
     g$7266$6199$1RbCyC
     (make-record-constructor-descriptor
       g$7265$6117$1RbCyC
       g$7133$6061$1RbCyC
       g$7267$6118$1RbCyC))
   (g$7264$6120$1RbCyC
     g$7264$6200$1RbCyC
     (record-predicate g$7265$6117$1RbCyC))
   (g$make-i/o-port-error$6121$1RbCyC
     g$make-i/o-port-error$6201$1RbCyC
     (record-constructor g$7266$6119$1RbCyC))
   (g$7263$6122$1RbCyC
     g$7263$6202$1RbCyC
     (record-accessor g$7265$6117$1RbCyC '0))
   (g$i/o-port-error?$6123$1RbCyC
     g$i/o-port-error?$6203$1RbCyC
     (condition-predicate g$7265$6117$1RbCyC))
   (g$i/o-error-port$6124$1RbCyC
     g$i/o-error-port$6204$1RbCyC
     (condition-accessor g$7265$6117$1RbCyC g$7263$6122$1RbCyC))
   (g$7281$6125$1RbCyC
     g$7281$6205$1RbCyC
     (make-record-type-descriptor
       '&i/o-decoding
       g$7265$6117$1RbCyC
       'g$7284$1RbCyC
       '#f
       '#f
       '#()))
   (g$7283$6126$1RbCyC g$7283$6206$1RbCyC '#f)
   (g$7282$6127$1RbCyC
     g$7282$6207$1RbCyC
     (make-record-constructor-descriptor
       g$7281$6125$1RbCyC
       g$7266$6119$1RbCyC
       g$7283$6126$1RbCyC))
   (g$7280$6128$1RbCyC
     g$7280$6208$1RbCyC
     (record-predicate g$7281$6125$1RbCyC))
   (g$make-i/o-decoding-error$6129$1RbCyC
     g$make-i/o-decoding-error$6209$1RbCyC
     (record-constructor g$7282$6127$1RbCyC))
   (g$i/o-decoding-error?$6130$1RbCyC
     g$i/o-decoding-error?$6210$1RbCyC
     (condition-predicate g$7281$6125$1RbCyC))
   (g$7296$6131$1RbCyC
     g$7296$6211$1RbCyC
     (make-record-type-descriptor
       '&i/o-encoding
       g$7265$6117$1RbCyC
       'g$7299$1RbCyC
       '#f
       '#f
       '#((immutable char))))
   (g$7298$6132$1RbCyC g$7298$6212$1RbCyC '#f)
   (g$7297$6133$1RbCyC
     g$7297$6213$1RbCyC
     (make-record-constructor-descriptor
       g$7296$6131$1RbCyC
       g$7266$6119$1RbCyC
       g$7298$6132$1RbCyC))
   (g$7295$6134$1RbCyC
     g$7295$6214$1RbCyC
     (record-predicate g$7296$6131$1RbCyC))
   (g$make-i/o-encoding-error$6135$1RbCyC
     g$make-i/o-encoding-error$6215$1RbCyC
     (record-constructor g$7297$6133$1RbCyC))
   (g$7294$6136$1RbCyC
     g$7294$6216$1RbCyC
     (record-accessor g$7296$6131$1RbCyC '0))
   (g$i/o-encoding-error?$6137$1RbCyC
     g$i/o-encoding-error?$6217$1RbCyC
     (condition-predicate g$7296$6131$1RbCyC))
   (g$i/o-encoding-error-char$6138$1RbCyC
     g$i/o-encoding-error-char$6218$1RbCyC
     (condition-accessor g$7296$6131$1RbCyC g$7294$6136$1RbCyC)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6219$1RbCyC
     g$get-output-string$6230$1RbCyC
     (case-lambda
       ((g$port$6224$1RbCyC)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$6224$1RbCyC))))
   (g$open-output-string$6220$1RbCyC
     g$open-output-string$6231$1RbCyC
     (case-lambda (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$6221$1RbCyC
     g$open-string-output-port$6232$1RbCyC
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6225$1RbCyC)
            (values
              g$p$6225$1RbCyC
              (case-lambda
                (() (g$get-output-string$6219$1RbCyC g$p$6225$1RbCyC))))))
         (g$open-output-string$6220$1RbCyC)))))
   (g$port?$6222$1RbCyC
     g$port?$6233$1RbCyC
     (case-lambda
       ((g$obj$6226$1RbCyC)
        ((case-lambda
           ((g$t$6227$1RbCyC)
            (if g$t$6227$1RbCyC
              g$t$6227$1RbCyC
              (begin '#f (binary-port? g$obj$6226$1RbCyC)))))
         (textual-port? g$obj$6226$1RbCyC)))))
   (g$call-with-string-output-port$6223$1RbCyC
     g$call-with-string-output-port$6234$1RbCyC
     (case-lambda
       ((g$proc$6228$1RbCyC)
        ((case-lambda
           ((g$p$6229$1RbCyC)
            (begin
              (call-with-port g$p$6229$1RbCyC g$proc$6228$1RbCyC)
              (g$get-output-string$6219$1RbCyC g$p$6229$1RbCyC))))
         (g$open-output-string$6220$1RbCyC))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$with-input-from-file$6241$1RbCyC
     g$with-input-from-file$6267$1RbCyC
     (case-lambda
       ((g$filename$6245$1RbCyC g$thunk$6246$1RbCyC)
        ((case-lambda
           ((g$current-input-port$6249$1RbCyC g$t$6250$1RbCyC)
            ((case-lambda
               ((g$swap$6251$1RbCyC)
                (dynamic-wind
                  g$swap$6251$1RbCyC
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6246$1RbCyC)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$6251$1RbCyC)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6252$1RbCyC)
                    (begin
                      (g$current-input-port$6249$1RbCyC g$t$6250$1RbCyC)
                      (set! g$t$6250$1RbCyC g$t$6252$1RbCyC))))
                 (g$current-input-port$6249$1RbCyC)))))))
         current-input-port
         (open-input-file g$filename$6245$1RbCyC)))))
   (g$with-output-to-file$6242$1RbCyC
     g$with-output-to-file$6268$1RbCyC
     (case-lambda
       ((g$filename$6253$1RbCyC g$thunk$6254$1RbCyC)
        ((case-lambda
           ((g$current-output-port$6257$1RbCyC g$t$6258$1RbCyC)
            ((case-lambda
               ((g$swap$6259$1RbCyC)
                (dynamic-wind
                  g$swap$6259$1RbCyC
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6254$1RbCyC)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$6259$1RbCyC)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6260$1RbCyC)
                    (begin
                      (g$current-output-port$6257$1RbCyC g$t$6258$1RbCyC)
                      (set! g$t$6258$1RbCyC g$t$6260$1RbCyC))))
                 (g$current-output-port$6257$1RbCyC)))))))
         current-output-port
         (open-output-file g$filename$6253$1RbCyC)))))
   (g$call-with-input-file$6243$1RbCyC
     g$call-with-input-file$6269$1RbCyC
     (case-lambda
       ((g$filename$6261$1RbCyC g$proc$6262$1RbCyC)
        ((case-lambda
           ((g$p$6263$1RbCyC)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6262$1RbCyC g$p$6263$1RbCyC)))
              (case-lambda (() (close-input-port g$p$6263$1RbCyC))))))
         (open-input-file g$filename$6261$1RbCyC)))))
   (g$call-with-output-file$6244$1RbCyC
     g$call-with-output-file$6270$1RbCyC
     (case-lambda
       ((g$filename$6264$1RbCyC g$proc$6265$1RbCyC)
        ((case-lambda
           ((g$p$6266$1RbCyC)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6265$1RbCyC g$p$6266$1RbCyC)))
              (case-lambda (() (close-output-port g$p$6266$1RbCyC))))))
         (open-output-file g$filename$6264$1RbCyC))))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$7366$6271$1RbCyC
     g$7366$6379$1RbCyC
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$7368$6272$1RbCyC g$7368$6380$1RbCyC '#f)
   (g$7367$6273$1RbCyC
     g$7367$6381$1RbCyC
     (make-record-constructor-descriptor
       g$7366$6271$1RbCyC
       '#f
       g$7368$6272$1RbCyC))
   (g$enum?$6274$1RbCyC
     g$enum?$6382$1RbCyC
     (record-predicate g$7366$6271$1RbCyC))
   (g$make-enum$6275$1RbCyC
     g$make-enum$6383$1RbCyC
     (record-constructor g$7367$6273$1RbCyC))
   (g$enum-value$6276$1RbCyC
     g$enum-value$6384$1RbCyC
     (record-accessor g$7366$6271$1RbCyC '0))
   (g$enum-info$6277$1RbCyC
     g$enum-info$6385$1RbCyC
     (record-accessor g$7366$6271$1RbCyC '1))
   (g$7379$6278$1RbCyC
     g$7379$6386$1RbCyC
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$7381$6279$1RbCyC g$7381$6387$1RbCyC '#f)
   (g$7380$6280$1RbCyC
     g$7380$6388$1RbCyC
     (make-record-constructor-descriptor
       g$7379$6278$1RbCyC
       '#f
       g$7381$6279$1RbCyC))
   (g$enum-universe?$6281$1RbCyC
     g$enum-universe?$6389$1RbCyC
     (record-predicate g$7379$6278$1RbCyC))
   (g$make-enum-universe$6282$1RbCyC
     g$make-enum-universe$6390$1RbCyC
     (record-constructor g$7380$6280$1RbCyC))
   (g$enum-universe-id$6283$1RbCyC
     g$enum-universe-id$6391$1RbCyC
     (record-accessor g$7379$6278$1RbCyC '0))
   (g$enum-universe-symbols$6284$1RbCyC
     g$enum-universe-symbols$6392$1RbCyC
     (record-accessor g$7379$6278$1RbCyC '1))
   (g$enum-universe-mapping$6285$1RbCyC
     g$enum-universe-mapping$6393$1RbCyC
     (record-accessor g$7379$6278$1RbCyC '2))
   (g$enum-universe-value$6286$1RbCyC
     g$enum-universe-value$6394$1RbCyC
     (record-accessor g$7379$6278$1RbCyC '3))
   (g$enum-type=?$6287$1RbCyC
     g$enum-type=?$6395$1RbCyC
     (case-lambda
       ((g$enumset1$6308$1RbCyC g$enumset2$6309$1RbCyC)
        (eq? (g$enum-universe-id$6283$1RbCyC
               (g$enum-info$6277$1RbCyC g$enumset1$6308$1RbCyC))
             (g$enum-universe-id$6283$1RbCyC
               (g$enum-info$6277$1RbCyC g$enumset2$6309$1RbCyC))))))
   (g$get-symbols$6288$1RbCyC
     g$get-symbols$6396$1RbCyC
     (case-lambda
       ((g$enumset$6310$1RbCyC)
        (g$enum-universe-symbols$6284$1RbCyC
          (g$enum-info$6277$1RbCyC g$enumset$6310$1RbCyC)))))
   (g$get-value$6289$1RbCyC
     g$get-value$6397$1RbCyC
     (case-lambda
       ((g$enumset$6311$1RbCyC g$s$6312$1RbCyC)
        (g$hashtable-ref$5436$1RbCyC
          (g$enum-universe-mapping$6285$1RbCyC
            (g$enum-info$6277$1RbCyC g$enumset$6311$1RbCyC))
          g$s$6312$1RbCyC
          '#f))))
   (g$assert-enum$6290$1RbCyC
     g$assert-enum$6398$1RbCyC
     (case-lambda
       ((g$who$6313$1RbCyC g$enumset$6314$1RbCyC)
        (if (not (g$enum?$6274$1RbCyC g$enumset$6314$1RbCyC))
          (assertion-violation
            g$who$6313$1RbCyC
            '"not an enumeration"
            g$enumset$6314$1RbCyC)
          (void)))))
   (g$make-info$6291$1RbCyC
     g$make-info$6399$1RbCyC
     (case-lambda
       ((g$symbols$6315$1RbCyC)
        ((case-lambda
           ((g$ht$6316$1RbCyC)
            ((letrec ((g$f$6317$1RbCyC
                        (case-lambda
                          ((g$s$6318$1RbCyC g$a$6319$1RbCyC g$mask$6320$1RbCyC)
                           (if (null? g$s$6318$1RbCyC)
                             (values
                               (reverse! g$a$6319$1RbCyC)
                               g$ht$6316$1RbCyC
                               (- g$mask$6320$1RbCyC '1))
                             ((case-lambda
                                ((g$n$6321$1RbCyC)
                                 (if (symbol? g$n$6321$1RbCyC)
                                   (if (g$hashtable-contains?$5439$1RbCyC
                                         g$ht$6316$1RbCyC
                                         g$n$6321$1RbCyC)
                                     (g$f$6317$1RbCyC
                                       (cdr g$s$6318$1RbCyC)
                                       g$a$6319$1RbCyC
                                       g$mask$6320$1RbCyC)
                                     (begin
                                       (g$hashtable-set!$5437$1RbCyC
                                         g$ht$6316$1RbCyC
                                         g$n$6321$1RbCyC
                                         g$mask$6320$1RbCyC)
                                       (g$f$6317$1RbCyC
                                         (cdr g$s$6318$1RbCyC)
                                         (cons g$n$6321$1RbCyC g$a$6319$1RbCyC)
                                         (g$bitwise-arithmetic-shift-left$5978$1RbCyC
                                           g$mask$6320$1RbCyC
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$6321$1RbCyC))))
                              (car g$s$6318$1RbCyC)))))))
               g$f$6317$1RbCyC)
             g$symbols$6315$1RbCyC
             '()
             '1)))
         (g$make-eq-hashtable$5433$1RbCyC)))))
   (g$make-name$6292$1RbCyC
     g$make-name$6400$1RbCyC
     (case-lambda
       ((g$symbols$6322$1RbCyC)
        (string->symbol (g$format$6439$1RbCyC '"~a" g$symbols$6322$1RbCyC)))))
   (g$make-enumeration$6293$1RbCyC
     g$make-enumeration$6401$1RbCyC
     (case-lambda
       ((g$symbols$6323$1RbCyC)
        (call-with-values
          (case-lambda (() (g$make-info$6291$1RbCyC g$symbols$6323$1RbCyC)))
          (case-lambda
            ((g$s$6327$1RbCyC g$mapping$6328$1RbCyC g$mask$6329$1RbCyC)
             ((case-lambda
                ((g$mask$6330$1RbCyC g$mapping$6331$1RbCyC g$s$6332$1RbCyC)
                 (g$make-enum$6275$1RbCyC
                   g$mask$6330$1RbCyC
                   (g$make-enum-universe$6282$1RbCyC
                     (g$make-name$6292$1RbCyC g$s$6332$1RbCyC)
                     g$s$6332$1RbCyC
                     g$mapping$6331$1RbCyC
                     g$mask$6330$1RbCyC))))
              g$mask$6329$1RbCyC
              g$mapping$6328$1RbCyC
              g$s$6327$1RbCyC)))))))
   (g$enum-set-universe$6294$1RbCyC
     g$enum-set-universe$6402$1RbCyC
     (case-lambda
       ((g$enumset$6333$1RbCyC)
        (begin
          (g$assert-enum$6290$1RbCyC 'enum-set-universe g$enumset$6333$1RbCyC)
          ((case-lambda
             ((g$ei$6334$1RbCyC)
              (g$make-enum$6275$1RbCyC
                (g$enum-universe-value$6286$1RbCyC g$ei$6334$1RbCyC)
                g$ei$6334$1RbCyC)))
           (g$enum-info$6277$1RbCyC g$enumset$6333$1RbCyC))))))
   (g$enum-set-indexer$6295$1RbCyC
     g$enum-set-indexer$6403$1RbCyC
     (case-lambda
       ((g$enumset$6335$1RbCyC)
        (begin
          (g$assert-enum$6290$1RbCyC 'enum-set-indexer g$enumset$6335$1RbCyC)
          (case-lambda
            ((g$symbol$6336$1RbCyC)
             (begin
               (if (not (symbol? g$symbol$6336$1RbCyC))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$6336$1RbCyC)
                 (void))
               ((case-lambda
                  ((g$v$6337$1RbCyC)
                   (if g$v$6337$1RbCyC
                     (- (bitwise-length g$v$6337$1RbCyC) '1)
                     '#f)))
                (g$get-value$6289$1RbCyC
                  g$enumset$6335$1RbCyC
                  g$symbol$6336$1RbCyC)))))))))
   (g$enum-set-constructor$6296$1RbCyC
     g$enum-set-constructor$6404$1RbCyC
     (case-lambda
       ((g$enumset$6338$1RbCyC)
        (begin
          (g$assert-enum$6290$1RbCyC
            'enum-set-constructor
            g$enumset$6338$1RbCyC)
          (case-lambda
            ((g$symbols$6339$1RbCyC)
             ((letrec ((g$f$6340$1RbCyC
                         (case-lambda
                           ((g$v$6341$1RbCyC g$s$6342$1RbCyC)
                            (if (null? g$s$6342$1RbCyC)
                              (g$make-enum$6275$1RbCyC
                                g$v$6341$1RbCyC
                                (g$enum-info$6277$1RbCyC g$enumset$6338$1RbCyC))
                              ((case-lambda
                                 ((g$n$6343$1RbCyC)
                                  (if (symbol? g$n$6343$1RbCyC)
                                    ((case-lambda
                                       ((g$v*$6344$1RbCyC)
                                        (if g$v*$6344$1RbCyC
                                          (g$f$6340$1RbCyC
                                            (bitwise-ior
                                              g$v$6341$1RbCyC
                                              g$v*$6344$1RbCyC)
                                            (cdr g$s$6342$1RbCyC))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$6343$1RbCyC))))
                                     (g$get-value$6289$1RbCyC
                                       g$enumset$6338$1RbCyC
                                       g$n$6343$1RbCyC))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$6343$1RbCyC))))
                               (car g$s$6342$1RbCyC)))))))
                g$f$6340$1RbCyC)
              '0
              g$symbols$6339$1RbCyC)))))))
   (g$enum-set->list$6297$1RbCyC
     g$enum-set->list$6405$1RbCyC
     (case-lambda
       ((g$enumset$6345$1RbCyC)
        (begin
          (g$assert-enum$6290$1RbCyC 'enum-set->list g$enumset$6345$1RbCyC)
          ((case-lambda
             ((g$value$6346$1RbCyC)
              ((letrec ((g$f$6347$1RbCyC
                          (case-lambda
                            ((g$s$6348$1RbCyC g$l$6349$1RbCyC)
                             (if (null? g$s$6348$1RbCyC)
                               (reverse! g$l$6349$1RbCyC)
                               (if (zero?
                                     (bitwise-and
                                       (g$get-value$6289$1RbCyC
                                         g$enumset$6345$1RbCyC
                                         (car g$s$6348$1RbCyC))
                                       g$value$6346$1RbCyC))
                                 (g$f$6347$1RbCyC
                                   (cdr g$s$6348$1RbCyC)
                                   g$l$6349$1RbCyC)
                                 (g$f$6347$1RbCyC
                                   (cdr g$s$6348$1RbCyC)
                                   (cons
                                     (car g$s$6348$1RbCyC)
                                     g$l$6349$1RbCyC))))))))
                 g$f$6347$1RbCyC)
               (g$get-symbols$6288$1RbCyC g$enumset$6345$1RbCyC)
               '())))
           (g$enum-value$6276$1RbCyC g$enumset$6345$1RbCyC))))))
   (g$enum-set-member?$6298$1RbCyC
     g$enum-set-member?$6406$1RbCyC
     (case-lambda
       ((g$symbol$6350$1RbCyC g$enumset$6351$1RbCyC)
        (begin
          (if (not (symbol? g$symbol$6350$1RbCyC))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$6350$1RbCyC)
            (void))
          (g$assert-enum$6290$1RbCyC 'enum-set-member? g$enumset$6351$1RbCyC)
          ((case-lambda
             ((g$v$6352$1RbCyC)
              (if g$v$6352$1RbCyC
                (not (zero?
                       (bitwise-and
                         g$v$6352$1RbCyC
                         (g$enum-value$6276$1RbCyC g$enumset$6351$1RbCyC))))
                '#f)))
           (g$get-value$6289$1RbCyC
             g$enumset$6351$1RbCyC
             g$symbol$6350$1RbCyC))))))
   (g$enum-set-subset?$6299$1RbCyC
     g$enum-set-subset?$6407$1RbCyC
     (case-lambda
       ((g$enumset1$6353$1RbCyC g$enumset2$6354$1RbCyC)
        (begin
          (g$assert-enum$6290$1RbCyC 'enum-set-subset? g$enumset1$6353$1RbCyC)
          (g$assert-enum$6290$1RbCyC 'enum-set-subset? g$enumset2$6354$1RbCyC)
          ((case-lambda
             ((g$v1$6355$1RbCyC g$v2$6356$1RbCyC)
              (if (g$enum-type=?$6287$1RbCyC
                    g$enumset1$6353$1RbCyC
                    g$enumset2$6354$1RbCyC)
                (= (bitwise-and g$v1$6355$1RbCyC g$v2$6356$1RbCyC)
                   g$v1$6355$1RbCyC)
                ((letrec ((g$f$6357$1RbCyC
                            (case-lambda
                              ((g$s$6358$1RbCyC)
                               (if (null? g$s$6358$1RbCyC)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$6359$1RbCyC g$v2*$6360$1RbCyC)
                                     (if g$v2*$6360$1RbCyC
                                       ((case-lambda
                                          ((g$has1$6361$1RbCyC
                                             g$has2$6362$1RbCyC)
                                           (if (if g$has1$6361$1RbCyC
                                                 (begin
                                                   '#f
                                                   (not g$has2$6362$1RbCyC))
                                                 '#f)
                                             '#f
                                             (g$f$6357$1RbCyC
                                               (cdr g$s$6358$1RbCyC)))))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v1$6355$1RbCyC
                                                 g$v1*$6359$1RbCyC)))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v2$6356$1RbCyC
                                                 g$v2*$6360$1RbCyC))))
                                       '#f)))
                                  (g$get-value$6289$1RbCyC
                                    g$enumset1$6353$1RbCyC
                                    (car g$s$6358$1RbCyC))
                                  (g$get-value$6289$1RbCyC
                                    g$enumset2$6354$1RbCyC
                                    (car g$s$6358$1RbCyC))))))))
                   g$f$6357$1RbCyC)
                 (g$get-symbols$6288$1RbCyC g$enumset1$6353$1RbCyC)))))
           (g$enum-value$6276$1RbCyC g$enumset1$6353$1RbCyC)
           (g$enum-value$6276$1RbCyC g$enumset2$6354$1RbCyC))))))
   (g$enum-set=?$6300$1RbCyC
     g$enum-set=?$6408$1RbCyC
     (case-lambda
       ((g$enumset1$6363$1RbCyC g$enumset2$6364$1RbCyC)
        (begin
          (g$assert-enum$6290$1RbCyC 'enum-set=? g$enumset1$6363$1RbCyC)
          (g$assert-enum$6290$1RbCyC 'enum-set=? g$enumset2$6364$1RbCyC)
          (if (g$enum-set-subset?$6299$1RbCyC
                g$enumset1$6363$1RbCyC
                g$enumset2$6364$1RbCyC)
            (begin
              '#f
              (g$enum-set-subset?$6299$1RbCyC
                g$enumset2$6364$1RbCyC
                g$enumset1$6363$1RbCyC))
            '#f)))))
   (g$enum-set-union$6301$1RbCyC
     g$enum-set-union$6409$1RbCyC
     (case-lambda
       ((g$enumset1$6365$1RbCyC g$enumset2$6366$1RbCyC)
        (begin
          (g$assert-enum$6290$1RbCyC 'enum-set-union g$enumset1$6365$1RbCyC)
          (g$assert-enum$6290$1RbCyC 'enum-set-union g$enumset2$6366$1RbCyC)
          (if (g$enum-type=?$6287$1RbCyC
                g$enumset1$6365$1RbCyC
                g$enumset2$6366$1RbCyC)
            (g$make-enum$6275$1RbCyC
              (bitwise-ior
                (g$enum-value$6276$1RbCyC g$enumset1$6365$1RbCyC)
                (g$enum-value$6276$1RbCyC g$enumset2$6366$1RbCyC))
              (g$enum-info$6277$1RbCyC g$enumset1$6365$1RbCyC))
            '#f)))))
   (g$enum-set-intersection$6302$1RbCyC
     g$enum-set-intersection$6410$1RbCyC
     (case-lambda
       ((g$enumset1$6367$1RbCyC g$enumset2$6368$1RbCyC)
        (begin
          (g$assert-enum$6290$1RbCyC
            'enum-set-intersection
            g$enumset1$6367$1RbCyC)
          (g$assert-enum$6290$1RbCyC
            'enum-set-intersection
            g$enumset2$6368$1RbCyC)
          (if (g$enum-type=?$6287$1RbCyC
                g$enumset1$6367$1RbCyC
                g$enumset2$6368$1RbCyC)
            (g$make-enum$6275$1RbCyC
              (bitwise-and
                (g$enum-value$6276$1RbCyC g$enumset1$6367$1RbCyC)
                (g$enum-value$6276$1RbCyC g$enumset2$6368$1RbCyC))
              (g$enum-info$6277$1RbCyC g$enumset1$6367$1RbCyC))
            '#f)))))
   (g$enum-set-difference$6303$1RbCyC
     g$enum-set-difference$6411$1RbCyC
     (case-lambda
       ((g$enumset1$6369$1RbCyC g$enumset2$6370$1RbCyC)
        (begin
          (g$assert-enum$6290$1RbCyC
            'enum-set-difference
            g$enumset1$6369$1RbCyC)
          (g$assert-enum$6290$1RbCyC
            'enum-set-difference
            g$enumset2$6370$1RbCyC)
          (if (g$enum-type=?$6287$1RbCyC
                g$enumset1$6369$1RbCyC
                g$enumset2$6370$1RbCyC)
            (g$make-enum$6275$1RbCyC
              (bitwise-and
                (g$enum-value$6276$1RbCyC g$enumset1$6369$1RbCyC)
                (bitwise-not (g$enum-value$6276$1RbCyC g$enumset2$6370$1RbCyC)))
              (g$enum-info$6277$1RbCyC g$enumset1$6369$1RbCyC))
            '#f)))))
   (g$enum-set-complement$6304$1RbCyC
     g$enum-set-complement$6412$1RbCyC
     (case-lambda
       ((g$enumset$6371$1RbCyC)
        (begin
          (g$assert-enum$6290$1RbCyC 'enum-set-complement g$enumset$6371$1RbCyC)
          (g$make-enum$6275$1RbCyC
            (bitwise-not (g$enum-value$6276$1RbCyC g$enumset$6371$1RbCyC))
            (g$enum-info$6277$1RbCyC g$enumset$6371$1RbCyC))))))
   (g$enum-set-projection$6305$1RbCyC
     g$enum-set-projection$6413$1RbCyC
     (case-lambda
       ((g$enumset1$6372$1RbCyC g$enumset2$6373$1RbCyC)
        (begin
          (g$assert-enum$6290$1RbCyC
            'enum-set-projection
            g$enumset1$6372$1RbCyC)
          (g$assert-enum$6290$1RbCyC
            'enum-set-projection
            g$enumset2$6373$1RbCyC)
          ((case-lambda
             ((g$v1$6374$1RbCyC)
              ((letrec ((g$f$6375$1RbCyC
                          (case-lambda
                            ((g$s$6376$1RbCyC g$v$6377$1RbCyC)
                             (if (null? g$s$6376$1RbCyC)
                               (g$make-enum$6275$1RbCyC
                                 g$v$6377$1RbCyC
                                 (g$enum-info$6277$1RbCyC
                                   g$enumset2$6373$1RbCyC))
                               (if (zero?
                                     (bitwise-and
                                       g$v1$6374$1RbCyC
                                       (g$get-value$6289$1RbCyC
                                         g$enumset1$6372$1RbCyC
                                         (car g$s$6376$1RbCyC))))
                                 (g$f$6375$1RbCyC
                                   (cdr g$s$6376$1RbCyC)
                                   g$v$6377$1RbCyC)
                                 ((case-lambda
                                    ((g$v2$6378$1RbCyC)
                                     (if g$v2$6378$1RbCyC
                                       (g$f$6375$1RbCyC
                                         (cdr g$s$6376$1RbCyC)
                                         (bitwise-ior
                                           g$v$6377$1RbCyC
                                           g$v2$6378$1RbCyC))
                                       (g$f$6375$1RbCyC
                                         (cdr g$s$6376$1RbCyC)
                                         g$v$6377$1RbCyC))))
                                  (g$get-value$6289$1RbCyC
                                    g$enumset2$6373$1RbCyC
                                    (car g$s$6376$1RbCyC)))))))))
                 g$f$6375$1RbCyC)
               (g$get-symbols$6288$1RbCyC g$enumset1$6372$1RbCyC)
               '0)))
           (g$enum-value$6276$1RbCyC g$enumset1$6372$1RbCyC)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$6306$1RbCyC g$p$6307$1RbCyC)
       (g$fprintf$6438$1RbCyC
         g$p$6307$1RbCyC
         '"#[enum-set ~a]"
         (g$enum-set->list$6297$1RbCyC g$x$6306$1RbCyC))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$6414$1RbCyC
     g$dofmt$6436$1RbCyC
     (case-lambda
       ((g$p$6418$1RbCyC g$cntl$6419$1RbCyC g$args$6420$1RbCyC)
        ((case-lambda
           ((g$nmax$6421$1RbCyC)
            ((letrec ((g$loop$6422$1RbCyC
                        (case-lambda
                          ((g$n$6423$1RbCyC g$a$6424$1RbCyC)
                           (if (fx<=? g$n$6423$1RbCyC g$nmax$6421$1RbCyC)
                             ((case-lambda
                                ((g$c$6425$1RbCyC)
                                 (if (if (g$char=?$5193$1RbCyC
                                           g$c$6425$1RbCyC
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6423$1RbCyC
                                           g$nmax$6421$1RbCyC))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6426$1RbCyC)
                                       (if (g$memv$4990$1RbCyC
                                             g$t$6426$1RbCyC
                                             '(#\a))
                                         (begin
                                           (display
                                             (car g$a$6424$1RbCyC)
                                             g$p$6418$1RbCyC)
                                           (g$loop$6422$1RbCyC
                                             (fx+ g$n$6423$1RbCyC '2)
                                             (cdr g$a$6424$1RbCyC)))
                                         (if (g$memv$4990$1RbCyC
                                               g$t$6426$1RbCyC
                                               '(#\s))
                                           (begin
                                             (write
                                               (car g$a$6424$1RbCyC)
                                               g$p$6418$1RbCyC)
                                             (g$loop$6422$1RbCyC
                                               (fx+ g$n$6423$1RbCyC '2)
                                               (cdr g$a$6424$1RbCyC)))
                                           (if (g$memv$4990$1RbCyC
                                                 g$t$6426$1RbCyC
                                                 '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6424$1RbCyC)
                                                   '2)
                                                 g$p$6418$1RbCyC)
                                               (g$loop$6422$1RbCyC
                                                 (fx+ g$n$6423$1RbCyC '2)
                                                 (cdr g$a$6424$1RbCyC)))
                                             (if (g$memv$4990$1RbCyC
                                                   g$t$6426$1RbCyC
                                                   '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6424$1RbCyC)
                                                     '8)
                                                   g$p$6418$1RbCyC)
                                                 (g$loop$6422$1RbCyC
                                                   (fx+ g$n$6423$1RbCyC '2)
                                                   (cdr g$a$6424$1RbCyC)))
                                               (if (g$memv$4990$1RbCyC
                                                     g$t$6426$1RbCyC
                                                     '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6424$1RbCyC)
                                                       '16)
                                                     g$p$6418$1RbCyC)
                                                   (g$loop$6422$1RbCyC
                                                     (fx+ g$n$6423$1RbCyC '2)
                                                     (cdr g$a$6424$1RbCyC)))
                                                 (if (g$memv$4990$1RbCyC
                                                       g$t$6426$1RbCyC
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6424$1RbCyC)
                                                         '10)
                                                       g$p$6418$1RbCyC)
                                                     (g$loop$6422$1RbCyC
                                                       (fx+ g$n$6423$1RbCyC '2)
                                                       (cdr g$a$6424$1RbCyC)))
                                                   (if (g$memv$4990$1RbCyC
                                                         g$t$6426$1RbCyC
                                                         '(#\~))
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6418$1RbCyC)
                                                       (g$loop$6422$1RbCyC
                                                         (fx+ g$n$6423$1RbCyC
                                                              '2)
                                                         g$a$6424$1RbCyC))
                                                     (begin
                                                       (write-char
                                                         g$c$6425$1RbCyC
                                                         g$p$6418$1RbCyC)
                                                       (g$loop$6422$1RbCyC
                                                         (fx+ g$n$6423$1RbCyC
                                                              '1)
                                                         g$a$6424$1RbCyC)))))))))))
                                    (string-ref
                                      g$cntl$6419$1RbCyC
                                      (fx+ g$n$6423$1RbCyC '1)))
                                   (begin
                                     (write-char
                                       g$c$6425$1RbCyC
                                       g$p$6418$1RbCyC)
                                     (g$loop$6422$1RbCyC
                                       (fx+ g$n$6423$1RbCyC '1)
                                       g$a$6424$1RbCyC)))))
                              (string-ref g$cntl$6419$1RbCyC g$n$6423$1RbCyC))
                             (void))))))
               g$loop$6422$1RbCyC)
             '0
             g$args$6420$1RbCyC)))
         (fx- (string-length g$cntl$6419$1RbCyC) '1)))))
   (g$printf$6415$1RbCyC
     g$printf$6437$1RbCyC
     (case-lambda
       ((g$control$6427$1RbCyC . g$args$6428$1RbCyC)
        (g$dofmt$6414$1RbCyC
          (current-output-port)
          g$control$6427$1RbCyC
          g$args$6428$1RbCyC))))
   (g$fprintf$6416$1RbCyC
     g$fprintf$6438$1RbCyC
     (case-lambda
       ((g$p$6429$1RbCyC g$control$6430$1RbCyC . g$args$6431$1RbCyC)
        (g$dofmt$6414$1RbCyC
          g$p$6429$1RbCyC
          g$control$6430$1RbCyC
          g$args$6431$1RbCyC))))
   (g$format$6417$1RbCyC
     g$format$6439$1RbCyC
     (case-lambda
       ((g$control$6432$1RbCyC . g$args$6433$1RbCyC)
        (call-with-values
          g$open-string-output-port$6232$1RbCyC
          (case-lambda
            ((g$p$6434$1RbCyC g$c$6435$1RbCyC)
             (begin
               (g$dofmt$6414$1RbCyC
                 g$p$6434$1RbCyC
                 g$control$6432$1RbCyC
                 g$args$6433$1RbCyC)
               (g$c$6435$1RbCyC)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6440$1RbCyC
     g$make-traced-macro$6443$1RbCyC
     (case-lambda
       ((g$name$6441$1RbCyC g$x$6442$1RbCyC)
        (if (procedure? g$x$6442$1RbCyC)
          (make-traced-procedure
            g$name$6441$1RbCyC
            g$x$6442$1RbCyC
            g$syntax->datum$11141$1RbCyC)
          (if (g$variable-transformer?$10964$1RbCyC g$x$6442$1RbCyC)
            (g$make-variable-transformer$10963$1RbCyC
              (make-traced-procedure
                g$name$6441$1RbCyC
                (g$variable-transformer-procedure$10965$1RbCyC g$x$6442$1RbCyC)
                g$syntax->datum$11141$1RbCyC))
            g$x$6442$1RbCyC))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6444$1RbCyC
     g$read-library-source-file$6523$1RbCyC
     (case-lambda
       ((g$file-name$6515$1RbCyC)
        (g$with-input-from-file$6267$1RbCyC
          g$file-name$6515$1RbCyC
          read-annotated))))
   (g$make-parameter$6445$1RbCyC
     g$make-parameter$6524$1RbCyC
     (case-lambda
       ((g$x$6516$1RbCyC)
        (g$make-parameter$6445$1RbCyC
          g$x$6516$1RbCyC
          (case-lambda ((g$x$6517$1RbCyC) g$x$6517$1RbCyC))))
       ((g$x$6518$1RbCyC g$fender$6519$1RbCyC)
        (begin
          (if (not (procedure? g$fender$6519$1RbCyC))
            (g$assertion-error$11134$1RbCyC
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(51,8) - (51,36)"))
            (void))
          ((case-lambda
             ((g$x$6520$1RbCyC)
              (case-lambda
                (() g$x$6520$1RbCyC)
                ((g$v$6521$1RbCyC)
                 (set! g$x$6520$1RbCyC
                   (g$fender$6519$1RbCyC g$v$6521$1RbCyC))))))
           (g$fender$6519$1RbCyC g$x$6518$1RbCyC))))))
   (g$file-options-constructor$6513$1RbCyC
     g$file-options-constructor$6525$1RbCyC
     (g$make-parameter$6445$1RbCyC '#f))
   (g$file-options-spec$6514$1RbCyC
     g$file-options-spec$6526$1RbCyC
     (case-lambda
       ((g$x$6522$1RbCyC)
        ((g$file-options-constructor$6513$1RbCyC) g$x$6522$1RbCyC)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$6722$1RbCyC
     g$current-primitive-locations$6767$1RbCyC
     (g$make-parameter$6524$1RbCyC
       (case-lambda ((g$x$6728$1RbCyC) '#f))
       (case-lambda
         ((g$p$6729$1RbCyC)
          (begin
            (if (not (procedure? g$p$6729$1RbCyC))
              (g$assertion-error$11134$1RbCyC
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$6729$1RbCyC)))))
   (g$mutable?$6723$1RbCyC
     g$mutable?$6768$1RbCyC
     (case-lambda
       ((g$x$6730$1RbCyC)
        (letrec* ((g$simple?$6731$1RbCyC
                    (case-lambda
                      ((g$x$6732$1RbCyC)
                       ((case-lambda
                          ((g$t$6733$1RbCyC)
                           (if g$t$6733$1RbCyC
                             g$t$6733$1RbCyC
                             ((case-lambda
                                ((g$t$6734$1RbCyC)
                                 (if g$t$6734$1RbCyC
                                   g$t$6734$1RbCyC
                                   ((case-lambda
                                      ((g$t$6735$1RbCyC)
                                       (if g$t$6735$1RbCyC
                                         g$t$6735$1RbCyC
                                         ((case-lambda
                                            ((g$t$6736$1RbCyC)
                                             (if g$t$6736$1RbCyC
                                               g$t$6736$1RbCyC
                                               ((case-lambda
                                                  ((g$t$6737$1RbCyC)
                                                   (if g$t$6737$1RbCyC
                                                     g$t$6737$1RbCyC
                                                     ((case-lambda
                                                        ((g$t$6738$1RbCyC)
                                                         (if g$t$6738$1RbCyC
                                                           g$t$6738$1RbCyC
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$6732$1RbCyC)))))
                                                      (bytevector?
                                                        g$x$6732$1RbCyC)))))
                                                (string? g$x$6732$1RbCyC)))))
                                          (boolean? g$x$6732$1RbCyC)))))
                                    (symbol? g$x$6732$1RbCyC)))))
                              (char? g$x$6732$1RbCyC)))))
                        (null? g$x$6732$1RbCyC))))))
          (not (g$simple?$6731$1RbCyC g$x$6730$1RbCyC))))))
   (g$rewriter$6724$1RbCyC
     g$rewriter$6769$1RbCyC
     (case-lambda
       ((g$quote-hack?$6739$1RbCyC)
        (letrec* ((g$f$6740$1RbCyC
                    (case-lambda
                      ((g$x$6741$1RbCyC)
                       (if (pair? g$x$6741$1RbCyC)
                         ((case-lambda
                            ((g$t$6742$1RbCyC)
                             (if (g$memv$4990$1RbCyC g$t$6742$1RbCyC '(quote))
                               (if (if g$quote-hack?$6739$1RbCyC
                                     (begin
                                       '#f
                                       (g$mutable?$6723$1RbCyC
                                         (g$cadr$5159$1RbCyC g$x$6741$1RbCyC)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$6743$1RbCyC)
                                     (begin
                                       (set-symbol-value!
                                         g$g$6743$1RbCyC
                                         (g$cadr$5159$1RbCyC g$x$6741$1RbCyC))
                                       g$g$6743$1RbCyC)))
                                  (gensym))
                                 g$x$6741$1RbCyC)
                               (if (g$memv$4990$1RbCyC
                                     g$t$6742$1RbCyC
                                     '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$6744$1RbCyC)
                                           (cons
                                             (car g$x$6744$1RbCyC)
                                             (map g$f$6740$1RbCyC
                                                  (cdr g$x$6744$1RbCyC)))))
                                        (cdr g$x$6741$1RbCyC)))
                                 (if (g$memv$4990$1RbCyC
                                       g$t$6742$1RbCyC
                                       '(lambda))
                                   (g$cons*$4997$1RbCyC
                                     'lambda
                                     (g$cadr$5159$1RbCyC g$x$6741$1RbCyC)
                                     (map g$f$6740$1RbCyC
                                          (g$cddr$5161$1RbCyC g$x$6741$1RbCyC)))
                                   (if (g$memv$4990$1RbCyC
                                         g$t$6742$1RbCyC
                                         '(letrec))
                                     ((case-lambda
                                        ((g$bindings$6745$1RbCyC
                                           g$body*$6746$1RbCyC)
                                         ((case-lambda
                                            ((g$lhs*$6747$1RbCyC
                                               g$rhs*$6748$1RbCyC)
                                             (g$cons*$4997$1RbCyC
                                               'letrec
                                               (map list
                                                    g$lhs*$6747$1RbCyC
                                                    (map g$f$6740$1RbCyC
                                                         g$rhs*$6748$1RbCyC))
                                               (map g$f$6740$1RbCyC
                                                    g$body*$6746$1RbCyC))))
                                          (map car g$bindings$6745$1RbCyC)
                                          (map g$cadr$5159$1RbCyC
                                               g$bindings$6745$1RbCyC))))
                                      (g$cadr$5159$1RbCyC g$x$6741$1RbCyC)
                                      (g$cddr$5161$1RbCyC g$x$6741$1RbCyC))
                                     (if (g$memv$4990$1RbCyC
                                           g$t$6742$1RbCyC
                                           '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$6749$1RbCyC
                                             g$body*$6750$1RbCyC)
                                           ((case-lambda
                                              ((g$lhs*$6751$1RbCyC
                                                 g$rhs*$6752$1RbCyC)
                                               (g$cons*$4997$1RbCyC
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$6751$1RbCyC
                                                      (map g$f$6740$1RbCyC
                                                           g$rhs*$6752$1RbCyC))
                                                 (map g$f$6740$1RbCyC
                                                      g$body*$6750$1RbCyC))))
                                            (map car g$bindings$6749$1RbCyC)
                                            (map g$cadr$5159$1RbCyC
                                                 g$bindings$6749$1RbCyC))))
                                        (g$cadr$5159$1RbCyC g$x$6741$1RbCyC)
                                        (g$cddr$5161$1RbCyC g$x$6741$1RbCyC))
                                       (if (g$memv$4990$1RbCyC
                                             g$t$6742$1RbCyC
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$6753$1RbCyC
                                               g$x$6754$1RbCyC)
                                             ((case-lambda
                                                ((g$bindings$6755$1RbCyC
                                                   g$body*$6756$1RbCyC)
                                                 ((case-lambda
                                                    ((g$lhs*$6757$1RbCyC
                                                       g$lhs**$6758$1RbCyC
                                                       g$rhs*$6759$1RbCyC)
                                                     (g$cons*$4997$1RbCyC
                                                       'library-letrec*
                                                       g$name$6753$1RbCyC
                                                       (map list
                                                            g$lhs*$6757$1RbCyC
                                                            g$lhs**$6758$1RbCyC
                                                            (map g$f$6740$1RbCyC
                                                                 g$rhs*$6759$1RbCyC))
                                                       (map g$f$6740$1RbCyC
                                                            g$body*$6756$1RbCyC))))
                                                  (map car
                                                       g$bindings$6755$1RbCyC)
                                                  (map g$cadr$5159$1RbCyC
                                                       g$bindings$6755$1RbCyC)
                                                  (map g$caddr$5165$1RbCyC
                                                       g$bindings$6755$1RbCyC))))
                                              (g$cadr$5159$1RbCyC
                                                g$x$6754$1RbCyC)
                                              (g$cddr$5161$1RbCyC
                                                g$x$6754$1RbCyC))))
                                          (g$cadr$5159$1RbCyC g$x$6741$1RbCyC)
                                          (cdr g$x$6741$1RbCyC))
                                         (if (g$memv$4990$1RbCyC
                                               g$t$6742$1RbCyC
                                               '(begin))
                                           (cons
                                             'begin
                                             (map g$f$6740$1RbCyC
                                                  (cdr g$x$6741$1RbCyC)))
                                           (if (g$memv$4990$1RbCyC
                                                 g$t$6742$1RbCyC
                                                 '(set!))
                                             (list
                                               'set!
                                               (g$cadr$5159$1RbCyC
                                                 g$x$6741$1RbCyC)
                                               (g$f$6740$1RbCyC
                                                 (g$caddr$5165$1RbCyC
                                                   g$x$6741$1RbCyC)))
                                             (if (g$memv$4990$1RbCyC
                                                   g$t$6742$1RbCyC
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$6760$1RbCyC)
                                                   ((case-lambda
                                                      ((g$t$6761$1RbCyC)
                                                       (if g$t$6761$1RbCyC
                                                         ((case-lambda
                                                            ((g$loc$6762$1RbCyC)
                                                             g$loc$6762$1RbCyC))
                                                          g$t$6761$1RbCyC)
                                                         g$op$6760$1RbCyC)))
                                                    ((g$current-primitive-locations$6722$1RbCyC)
                                                     g$op$6760$1RbCyC))))
                                                (g$cadr$5159$1RbCyC
                                                  g$x$6741$1RbCyC))
                                               (if (g$memv$4990$1RbCyC
                                                     g$t$6742$1RbCyC
                                                     '(define))
                                                 g$x$6741$1RbCyC
                                                 (if (list? g$x$6741$1RbCyC)
                                                   (map g$f$6740$1RbCyC
                                                        g$x$6741$1RbCyC)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$6741$1RbCyC
                                                     (list?
                                                       g$x$6741$1RbCyC)))))))))))))))
                          (car g$x$6741$1RbCyC))
                         g$x$6741$1RbCyC)))))
          g$f$6740$1RbCyC))))
   (g$expanded->core$6725$1RbCyC
     g$expanded->core$6770$1RbCyC
     (case-lambda
       ((g$x$6763$1RbCyC) ((g$rewriter$6724$1RbCyC '#t) g$x$6763$1RbCyC))))
   (g$compile-core-expr$6726$1RbCyC
     g$compile-core-expr$6771$1RbCyC
     (case-lambda
       ((g$x$6764$1RbCyC) ((g$rewriter$6724$1RbCyC '#f) g$x$6764$1RbCyC))))
   (g$compile-core-expr-to-port$6727$1RbCyC
     g$compile-core-expr-to-port$6772$1RbCyC
     (case-lambda
       ((g$x$6765$1RbCyC g$p$6766$1RbCyC)
        (g$pretty-print$6721$1RbCyC
          ((g$rewriter$6724$1RbCyC '#f) g$x$6765$1RbCyC)
          g$p$6766$1RbCyC)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$6811$1RbCyC
     g$make-collection$7015$1RbCyC
     (case-lambda
       (()
        ((case-lambda
           ((g$set$6872$1RbCyC)
            (letrec* ((g$set-cons$6873$1RbCyC
                        (case-lambda
                          ((g$x$6875$1RbCyC g$ls$6876$1RbCyC)
                           (if (g$memq$4989$1RbCyC
                                 g$x$6875$1RbCyC
                                 g$ls$6876$1RbCyC)
                             g$ls$6876$1RbCyC
                             (cons g$x$6875$1RbCyC g$ls$6876$1RbCyC))))))
              (case-lambda
                (() g$set$6872$1RbCyC)
                ((g$x$6874$1RbCyC)
                 (set! g$set$6872$1RbCyC
                   (g$set-cons$6873$1RbCyC
                     g$x$6874$1RbCyC
                     g$set$6872$1RbCyC)))))))
         '()))))
   (g$current-library-collection$6812$1RbCyC
     g$current-library-collection$7016$1RbCyC
     (g$make-parameter$6524$1RbCyC
       (g$make-collection$6811$1RbCyC)
       (case-lambda
         ((g$x$6877$1RbCyC)
          (begin
            (if (not (procedure? g$x$6877$1RbCyC))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$6877$1RbCyC)
              (void))
            g$x$6877$1RbCyC)))))
   (g$7899$6813$1RbCyC
     g$7899$7017$1RbCyC
     (make-record-type-descriptor
       'library
       '#f
       'g$7902$1RbCyC
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$7901$6814$1RbCyC g$7901$7018$1RbCyC '#f)
   (g$7900$6815$1RbCyC
     g$7900$7019$1RbCyC
     (make-record-constructor-descriptor
       g$7899$6813$1RbCyC
       '#f
       g$7901$6814$1RbCyC))
   (g$library?$6816$1RbCyC
     g$library?$7020$1RbCyC
     (record-predicate g$7899$6813$1RbCyC))
   (g$make-library$6817$1RbCyC
     g$make-library$7021$1RbCyC
     (record-constructor g$7900$6815$1RbCyC))
   (g$library-id$6818$1RbCyC
     g$library-id$7022$1RbCyC
     (record-accessor g$7899$6813$1RbCyC '0))
   (g$library-name$6819$1RbCyC
     g$library-name$7023$1RbCyC
     (record-accessor g$7899$6813$1RbCyC '1))
   (g$library-version$6820$1RbCyC
     g$library-version$7024$1RbCyC
     (record-accessor g$7899$6813$1RbCyC '2))
   (g$library-imp*$6821$1RbCyC
     g$library-imp*$7025$1RbCyC
     (record-accessor g$7899$6813$1RbCyC '3))
   (g$library-vis*$6822$1RbCyC
     g$library-vis*$7026$1RbCyC
     (record-accessor g$7899$6813$1RbCyC '4))
   (g$library-inv*$6823$1RbCyC
     g$library-inv*$7027$1RbCyC
     (record-accessor g$7899$6813$1RbCyC '5))
   (g$library-subst$6824$1RbCyC
     g$library-subst$7028$1RbCyC
     (record-accessor g$7899$6813$1RbCyC '6))
   (g$library-env$6825$1RbCyC
     g$library-env$7029$1RbCyC
     (record-accessor g$7899$6813$1RbCyC '7))
   (g$library-visit-state$6826$1RbCyC
     g$library-visit-state$7030$1RbCyC
     (record-accessor g$7899$6813$1RbCyC '8))
   (g$library-invoke-state$6827$1RbCyC
     g$library-invoke-state$7031$1RbCyC
     (record-accessor g$7899$6813$1RbCyC '9))
   (g$library-visit-code$6828$1RbCyC
     g$library-visit-code$7032$1RbCyC
     (record-accessor g$7899$6813$1RbCyC '10))
   (g$library-invoke-code$6829$1RbCyC
     g$library-invoke-code$7033$1RbCyC
     (record-accessor g$7899$6813$1RbCyC '11))
   (g$library-visible?$6830$1RbCyC
     g$library-visible?$7034$1RbCyC
     (record-accessor g$7899$6813$1RbCyC '12))
   (g$library-source-file-name$6831$1RbCyC
     g$library-source-file-name$7035$1RbCyC
     (record-accessor g$7899$6813$1RbCyC '13))
   (g$set-library-id!$6832$1RbCyC
     g$set-library-id!$7036$1RbCyC
     (record-mutator g$7899$6813$1RbCyC '0))
   (g$set-library-name!$6833$1RbCyC
     g$set-library-name!$7037$1RbCyC
     (record-mutator g$7899$6813$1RbCyC '1))
   (g$set-library-version!$6834$1RbCyC
     g$set-library-version!$7038$1RbCyC
     (record-mutator g$7899$6813$1RbCyC '2))
   (g$set-library-imp*!$6835$1RbCyC
     g$set-library-imp*!$7039$1RbCyC
     (record-mutator g$7899$6813$1RbCyC '3))
   (g$set-library-vis*!$6836$1RbCyC
     g$set-library-vis*!$7040$1RbCyC
     (record-mutator g$7899$6813$1RbCyC '4))
   (g$set-library-inv*!$6837$1RbCyC
     g$set-library-inv*!$7041$1RbCyC
     (record-mutator g$7899$6813$1RbCyC '5))
   (g$set-library-subst!$6838$1RbCyC
     g$set-library-subst!$7042$1RbCyC
     (record-mutator g$7899$6813$1RbCyC '6))
   (g$set-library-env!$6839$1RbCyC
     g$set-library-env!$7043$1RbCyC
     (record-mutator g$7899$6813$1RbCyC '7))
   (g$set-library-visit-state!$6840$1RbCyC
     g$set-library-visit-state!$7044$1RbCyC
     (record-mutator g$7899$6813$1RbCyC '8))
   (g$set-library-invoke-state!$6841$1RbCyC
     g$set-library-invoke-state!$7045$1RbCyC
     (record-mutator g$7899$6813$1RbCyC '9))
   (g$set-library-visit-code!$6842$1RbCyC
     g$set-library-visit-code!$7046$1RbCyC
     (record-mutator g$7899$6813$1RbCyC '10))
   (g$set-library-invoke-code!$6843$1RbCyC
     g$set-library-invoke-code!$7047$1RbCyC
     (record-mutator g$7899$6813$1RbCyC '11))
   (g$set-library-visible?!$6844$1RbCyC
     g$set-library-visible?!$7048$1RbCyC
     (record-mutator g$7899$6813$1RbCyC '12))
   (g$set-library-source-file-name!$6845$1RbCyC
     g$set-library-source-file-name!$7049$1RbCyC
     (record-mutator g$7899$6813$1RbCyC '13))
   (g$rp$6846$1RbCyC
     g$rp$7050$1RbCyC
     (make-record-printer
       'library
       (case-lambda
         ((g$x$6878$1RbCyC g$p$6879$1RbCyC)
          (begin
            (if (not (g$library?$6816$1RbCyC g$x$6878$1RbCyC))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$6439$1RbCyC
                '"#<library ~s>"
                (if (null? (g$library-version$6820$1RbCyC g$x$6878$1RbCyC))
                  (g$library-name$6819$1RbCyC g$x$6878$1RbCyC)
                  (append
                    (g$library-name$6819$1RbCyC g$x$6878$1RbCyC)
                    (list (g$library-version$6820$1RbCyC g$x$6878$1RbCyC)))))
              g$p$6879$1RbCyC))))))
   (g$find-dependencies$6847$1RbCyC
     g$find-dependencies$7051$1RbCyC
     (case-lambda
       ((g$ls$6880$1RbCyC)
        (if (null? g$ls$6880$1RbCyC)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$6848$1RbCyC
     g$find-library-by$7052$1RbCyC
     (case-lambda
       ((g$pred$6881$1RbCyC)
        ((letrec ((g$f$6882$1RbCyC
                    (case-lambda
                      ((g$ls$6883$1RbCyC)
                       (if (null? g$ls$6883$1RbCyC)
                         '#f
                         (if (g$pred$6881$1RbCyC (car g$ls$6883$1RbCyC))
                           (car g$ls$6883$1RbCyC)
                           (g$f$6882$1RbCyC (cdr g$ls$6883$1RbCyC))))))))
           g$f$6882$1RbCyC)
         ((g$current-library-collection$6812$1RbCyC))))))
   (g$library-path$6849$1RbCyC
     g$library-path$7053$1RbCyC
     (g$make-parameter$6524$1RbCyC
       '(".")
       (case-lambda
         ((g$x$6884$1RbCyC)
          (if (if (list? g$x$6884$1RbCyC)
                (begin '#f (g$for-all$4995$1RbCyC string? g$x$6884$1RbCyC))
                '#f)
            (map (case-lambda ((g$x$6885$1RbCyC) g$x$6885$1RbCyC))
                 g$x$6884$1RbCyC)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$6884$1RbCyC))))))
   (g$library-extensions$6850$1RbCyC
     g$library-extensions$7054$1RbCyC
     (g$make-parameter$6524$1RbCyC
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$6886$1RbCyC)
          (if (if (list? g$x$6886$1RbCyC)
                (begin '#f (g$for-all$4995$1RbCyC string? g$x$6886$1RbCyC))
                '#f)
            (map (case-lambda ((g$x$6887$1RbCyC) g$x$6887$1RbCyC))
                 g$x$6886$1RbCyC)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$6886$1RbCyC))))))
   (g$library-name->file-name$6851$1RbCyC
     g$library-name->file-name$7055$1RbCyC
     (case-lambda
       ((g$x$6888$1RbCyC)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6232$1RbCyC)))
          (case-lambda
            ((g$p$6891$1RbCyC g$extract$6892$1RbCyC)
             ((case-lambda
                ((g$extract$6893$1RbCyC g$p$6894$1RbCyC)
                 (letrec* ((g$display-hex$6895$1RbCyC
                             (case-lambda
                               ((g$n$6903$1RbCyC)
                                (if (<= '0 g$n$6903$1RbCyC '9)
                                  (display g$n$6903$1RbCyC g$p$6894$1RbCyC)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$6903$1RbCyC '10)))
                                    g$p$6894$1RbCyC))))))
                   (begin
                     ((letrec ((g$f$6896$1RbCyC
                                 (case-lambda
                                   ((g$ls$6897$1RbCyC)
                                    (if (not (null? g$ls$6897$1RbCyC))
                                      (begin
                                        (display '"/" g$p$6894$1RbCyC)
                                        (for-each
                                          (case-lambda
                                            ((g$c$6898$1RbCyC)
                                             (if ((case-lambda
                                                    ((g$t$6899$1RbCyC)
                                                     (if g$t$6899$1RbCyC
                                                       g$t$6899$1RbCyC
                                                       ((case-lambda
                                                          ((g$t$6900$1RbCyC)
                                                           (if g$t$6900$1RbCyC
                                                             g$t$6900$1RbCyC
                                                             ((case-lambda
                                                                ((g$t$6901$1RbCyC)
                                                                 (if g$t$6901$1RbCyC
                                                                   g$t$6901$1RbCyC
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$4990$1RbCyC
                                                                       g$c$6898$1RbCyC
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$5196$1RbCyC
                                                                '#\0
                                                                g$c$6898$1RbCyC
                                                                '#\9)))))
                                                        (g$char<=?$5196$1RbCyC
                                                          '#\A
                                                          g$c$6898$1RbCyC
                                                          '#\Z)))))
                                                  (g$char<=?$5196$1RbCyC
                                                    '#\a
                                                    g$c$6898$1RbCyC
                                                    '#\z))
                                               (display
                                                 g$c$6898$1RbCyC
                                                 g$p$6894$1RbCyC)
                                               (begin
                                                 (display '"%" g$p$6894$1RbCyC)
                                                 ((case-lambda
                                                    ((g$n$6902$1RbCyC)
                                                     (begin
                                                       (g$display-hex$6895$1RbCyC
                                                         (g$quotient$5811$1RbCyC
                                                           g$n$6902$1RbCyC
                                                           '16))
                                                       (g$display-hex$6895$1RbCyC
                                                         (g$remainder$5812$1RbCyC
                                                           g$n$6902$1RbCyC
                                                           '16)))))
                                                  (char->integer
                                                    g$c$6898$1RbCyC))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$6897$1RbCyC))))
                                        (g$f$6896$1RbCyC
                                          (cdr g$ls$6897$1RbCyC)))
                                      (void))))))
                        g$f$6896$1RbCyC)
                      g$x$6888$1RbCyC)
                     (g$extract$6893$1RbCyC)))))
              g$extract$6892$1RbCyC
              g$p$6891$1RbCyC)))))))
   (g$file-locator$6852$1RbCyC
     g$file-locator$7056$1RbCyC
     (g$make-parameter$6524$1RbCyC
       (case-lambda
         ((g$x$6904$1RbCyC)
          ((case-lambda
             ((g$str$6905$1RbCyC)
              ((letrec ((g$f$6906$1RbCyC
                          (case-lambda
                            ((g$ls$6907$1RbCyC
                               g$exts$6908$1RbCyC
                               g$failed-list$6909$1RbCyC)
                             (if (null? g$ls$6907$1RbCyC)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$8004$6910$1RbCyC
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$8007$1RbCyC
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$8006$6911$1RbCyC '#f)
                                             (g$8005$6912$1RbCyC
                                               (make-record-constructor-descriptor
                                                 g$8004$6910$1RbCyC
                                                 &condition-rcd
                                                 g$8006$6911$1RbCyC))
                                             (g$8003$6913$1RbCyC
                                               (record-predicate
                                                 g$8004$6910$1RbCyC))
                                             (g$make-library-resolution-condition$6914$1RbCyC
                                               (record-constructor
                                                 g$8005$6912$1RbCyC))
                                             (g$8001$6915$1RbCyC
                                               (record-accessor
                                                 g$8004$6910$1RbCyC
                                                 '0))
                                             (g$8002$6916$1RbCyC
                                               (record-accessor
                                                 g$8004$6910$1RbCyC
                                                 '1))
                                             (g$library-resolution-condition?$6917$1RbCyC
                                               (condition-predicate
                                                 g$8004$6910$1RbCyC))
                                             (g$condition-library$6918$1RbCyC
                                               (condition-accessor
                                                 g$8004$6910$1RbCyC
                                                 g$8001$6915$1RbCyC))
                                             (g$condition-files$6919$1RbCyC
                                               (condition-accessor
                                                 g$8004$6910$1RbCyC
                                                 g$8002$6916$1RbCyC)))
                                     (raise
                                       (condition
                                         (g$make-error$5721$1RbCyC)
                                         (g$make-who-condition$5747$1RbCyC
                                           'expander)
                                         (g$make-message-condition$5701$1RbCyC
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$6914$1RbCyC
                                           g$x$6904$1RbCyC
                                           (reverse
                                             g$failed-list$6909$1RbCyC))))))))
                               (if (null? g$exts$6908$1RbCyC)
                                 (g$f$6906$1RbCyC
                                   (cdr g$ls$6907$1RbCyC)
                                   (g$library-extensions$6850$1RbCyC)
                                   g$failed-list$6909$1RbCyC)
                                 ((case-lambda
                                    ((g$name$6920$1RbCyC)
                                     (if (g$file-exists?$5452$1RbCyC
                                           g$name$6920$1RbCyC)
                                       g$name$6920$1RbCyC
                                       (g$f$6906$1RbCyC
                                         g$ls$6907$1RbCyC
                                         (cdr g$exts$6908$1RbCyC)
                                         (cons
                                           g$name$6920$1RbCyC
                                           g$failed-list$6909$1RbCyC)))))
                                  (string-append
                                    (car g$ls$6907$1RbCyC)
                                    g$str$6905$1RbCyC
                                    (car g$exts$6908$1RbCyC)))))))))
                 g$f$6906$1RbCyC)
               (g$library-path$6849$1RbCyC)
               (g$library-extensions$6850$1RbCyC)
               '())))
           (g$library-name->file-name$6851$1RbCyC g$x$6904$1RbCyC))))
       (case-lambda
         ((g$f$6921$1RbCyC)
          (if (procedure? g$f$6921$1RbCyC)
            g$f$6921$1RbCyC
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$6921$1RbCyC))))))
   (g$serialize-all$6853$1RbCyC
     g$serialize-all$7057$1RbCyC
     (case-lambda
       ((g$serialize$6922$1RbCyC g$compile$6923$1RbCyC)
        (letrec* ((g$library-desc$6924$1RbCyC
                    (case-lambda
                      ((g$x$6926$1RbCyC)
                       (list
                         (g$library-id$6818$1RbCyC g$x$6926$1RbCyC)
                         (g$library-name$6819$1RbCyC g$x$6926$1RbCyC))))))
          (for-each
            (case-lambda
              ((g$x$6925$1RbCyC)
               (if (g$library-source-file-name$6831$1RbCyC g$x$6925$1RbCyC)
                 (g$serialize$6922$1RbCyC
                   (g$library-source-file-name$6831$1RbCyC g$x$6925$1RbCyC)
                   (list
                     (g$library-id$6818$1RbCyC g$x$6925$1RbCyC)
                     (g$library-name$6819$1RbCyC g$x$6925$1RbCyC)
                     (g$library-version$6820$1RbCyC g$x$6925$1RbCyC)
                     (map g$library-desc$6924$1RbCyC
                          (g$library-imp*$6821$1RbCyC g$x$6925$1RbCyC))
                     (map g$library-desc$6924$1RbCyC
                          (g$library-vis*$6822$1RbCyC g$x$6925$1RbCyC))
                     (map g$library-desc$6924$1RbCyC
                          (g$library-inv*$6823$1RbCyC g$x$6925$1RbCyC))
                     (g$library-subst$6824$1RbCyC g$x$6925$1RbCyC)
                     (g$library-env$6825$1RbCyC g$x$6925$1RbCyC)
                     (g$compile$6923$1RbCyC
                       (g$library-visit-code$6828$1RbCyC g$x$6925$1RbCyC))
                     (g$compile$6923$1RbCyC
                       (g$library-invoke-code$6829$1RbCyC g$x$6925$1RbCyC))
                     (g$library-visible?$6830$1RbCyC g$x$6925$1RbCyC)))
                 (void))))
            ((g$current-library-collection$6812$1RbCyC)))))))
   (g$current-precompiled-library-loader$6854$1RbCyC
     g$current-precompiled-library-loader$7058$1RbCyC
     (g$make-parameter$6524$1RbCyC
       (case-lambda ((g$filename$6927$1RbCyC g$sk$6928$1RbCyC) '#f))))
   (g$try-load-from-file$6855$1RbCyC
     g$try-load-from-file$7059$1RbCyC
     (case-lambda
       ((g$filename$6929$1RbCyC)
        ((g$current-precompiled-library-loader$6854$1RbCyC)
         g$filename$6929$1RbCyC
         (case-lambda
           ((g$id$6930$1RbCyC
              g$name$6931$1RbCyC
              g$ver$6932$1RbCyC
              g$imp*$6933$1RbCyC
              g$vis*$6934$1RbCyC
              g$inv*$6935$1RbCyC
              g$exp-subst$6936$1RbCyC
              g$exp-env$6937$1RbCyC
              g$visit-proc$6938$1RbCyC
              g$invoke-proc$6939$1RbCyC
              g$visible?$6940$1RbCyC)
            ((letrec ((g$f$6941$1RbCyC
                        (case-lambda
                          ((g$deps$6942$1RbCyC)
                           (if (null? g$deps$6942$1RbCyC)
                             (begin
                               (g$install-library$6865$1RbCyC
                                 g$id$6930$1RbCyC
                                 g$name$6931$1RbCyC
                                 g$ver$6932$1RbCyC
                                 g$imp*$6933$1RbCyC
                                 g$vis*$6934$1RbCyC
                                 g$inv*$6935$1RbCyC
                                 g$exp-subst$6936$1RbCyC
                                 g$exp-env$6937$1RbCyC
                                 g$visit-proc$6938$1RbCyC
                                 g$invoke-proc$6939$1RbCyC
                                 '#f
                                 '#f
                                 g$visible?$6940$1RbCyC
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$6943$1RbCyC)
                                 ((case-lambda
                                    ((g$label$6944$1RbCyC g$dname$6945$1RbCyC)
                                     ((case-lambda
                                        ((g$l$6946$1RbCyC)
                                         (if (if (g$library?$6816$1RbCyC
                                                   g$l$6946$1RbCyC)
                                               (begin
                                                 '#f
                                                 (eq? g$label$6944$1RbCyC
                                                      (g$library-id$6818$1RbCyC
                                                        g$l$6946$1RbCyC)))
                                               '#f)
                                           (g$f$6941$1RbCyC
                                             (cdr g$deps$6942$1RbCyC))
                                           (begin
                                             (g$fprintf$6438$1RbCyC
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
                                               g$name$6931$1RbCyC
                                               g$dname$6945$1RbCyC
                                               g$filename$6929$1RbCyC)
                                             '#f))))
                                      (g$find-library-by-name$6860$1RbCyC
                                        g$dname$6945$1RbCyC))))
                                  (car g$d$6943$1RbCyC)
                                  (g$cadr$5159$1RbCyC g$d$6943$1RbCyC))))
                              (car g$deps$6942$1RbCyC)))))))
               g$f$6941$1RbCyC)
             (append g$imp*$6933$1RbCyC g$vis*$6934$1RbCyC g$inv*$6935$1RbCyC)))
           (g$others$6947$1RbCyC '#f))))))
   (g$library-loader$6856$1RbCyC
     g$library-loader$7060$1RbCyC
     (g$make-parameter$6524$1RbCyC
       (case-lambda
         ((g$x$6948$1RbCyC)
          ((case-lambda
             ((g$file-name$6949$1RbCyC)
              (if (not g$file-name$6949$1RbCyC)
                (assertion-violation '#f '"cannot file library" g$x$6948$1RbCyC)
                ((case-lambda
                   ((g$t$6950$1RbCyC)
                    (if g$t$6950$1RbCyC
                      g$t$6950$1RbCyC
                      (begin
                        '#f
                        ((g$current-library-expander$6857$1RbCyC)
                         (g$read-library-source-file$6523$1RbCyC
                           g$file-name$6949$1RbCyC)
                         g$file-name$6949$1RbCyC
                         (case-lambda
                           ((g$name$6951$1RbCyC)
                            (if (not (equal?
                                       g$name$6951$1RbCyC
                                       g$x$6948$1RbCyC))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$open-string-output-port$6232$1RbCyC)))
                                  (case-lambda
                                    ((g$p$6954$1RbCyC g$e$6955$1RbCyC)
                                     ((case-lambda
                                        ((g$e$6956$1RbCyC g$p$6957$1RbCyC)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$6957$1RbCyC)
                                           (write
                                             g$x$6948$1RbCyC
                                             g$p$6957$1RbCyC)
                                           (display
                                             '" in file "
                                             g$p$6957$1RbCyC)
                                           (display
                                             g$file-name$6949$1RbCyC
                                             g$p$6957$1RbCyC)
                                           (display '", found " g$p$6957$1RbCyC)
                                           (write
                                             g$name$6951$1RbCyC
                                             g$p$6957$1RbCyC)
                                           (display '" instead" g$p$6957$1RbCyC)
                                           (g$e$6956$1RbCyC))))
                                      g$e$6955$1RbCyC
                                      g$p$6954$1RbCyC)))))
                              (void)))))))))
                 (g$try-load-from-file$6855$1RbCyC g$file-name$6949$1RbCyC)))))
           ((g$file-locator$6852$1RbCyC) g$x$6948$1RbCyC))))
       (case-lambda
         ((g$f$6958$1RbCyC)
          (if (procedure? g$f$6958$1RbCyC)
            g$f$6958$1RbCyC
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$6958$1RbCyC))))))
   (g$current-library-expander$6857$1RbCyC
     g$current-library-expander$7061$1RbCyC
     (g$make-parameter$6524$1RbCyC
       (case-lambda
         ((g$x$6959$1RbCyC)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$6960$1RbCyC)
          (if (procedure? g$f$6960$1RbCyC)
            g$f$6960$1RbCyC
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$6960$1RbCyC))))))
   (g$external-pending-libraries$6858$1RbCyC
     g$external-pending-libraries$7062$1RbCyC
     (g$make-parameter$6524$1RbCyC '()))
   (g$find-external-library$6859$1RbCyC
     g$find-external-library$7063$1RbCyC
     (case-lambda
       ((g$name$6961$1RbCyC)
        (begin
          (if (g$member$4991$1RbCyC
                g$name$6961$1RbCyC
                (g$external-pending-libraries$6858$1RbCyC))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$6961$1RbCyC)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$6964$1RbCyC
                g$external-pending-libraries$6965$1RbCyC)
              ((case-lambda
                 ((g$swap$6966$1RbCyC)
                  (dynamic-wind
                    g$swap$6966$1RbCyC
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$6856$1RbCyC) g$name$6961$1RbCyC)
                         ((case-lambda
                            ((g$t$6967$1RbCyC)
                             (if g$t$6967$1RbCyC
                               g$t$6967$1RbCyC
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$6961$1RbCyC)))))
                          (g$find-library-by$6848$1RbCyC
                            (case-lambda
                              ((g$x$6968$1RbCyC)
                               (equal?
                                 (g$library-name$6819$1RbCyC g$x$6968$1RbCyC)
                                 g$name$6961$1RbCyC))))))))
                    g$swap$6966$1RbCyC)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$6969$1RbCyC)
                      (begin
                        (g$external-pending-libraries$6964$1RbCyC
                          g$external-pending-libraries$6965$1RbCyC)
                        (set! g$external-pending-libraries$6965$1RbCyC
                          g$t$6969$1RbCyC))))
                   (g$external-pending-libraries$6964$1RbCyC)))))))
           g$external-pending-libraries$6858$1RbCyC
           (cons
             g$name$6961$1RbCyC
             (g$external-pending-libraries$6858$1RbCyC)))))))
   (g$find-library-by-name$6860$1RbCyC
     g$find-library-by-name$7064$1RbCyC
     (case-lambda
       ((g$name$6970$1RbCyC)
        ((case-lambda
           ((g$t$6971$1RbCyC)
            (if g$t$6971$1RbCyC
              g$t$6971$1RbCyC
              (begin
                '#f
                (g$find-external-library$6859$1RbCyC g$name$6970$1RbCyC)))))
         (g$find-library-by$6848$1RbCyC
           (case-lambda
             ((g$x$6972$1RbCyC)
              (equal?
                (g$library-name$6819$1RbCyC g$x$6972$1RbCyC)
                g$name$6970$1RbCyC))))))))
   (g$library-exists?$6861$1RbCyC
     g$library-exists?$7065$1RbCyC
     (case-lambda
       ((g$name$6973$1RbCyC)
        (if (g$find-library-by$6848$1RbCyC
              (case-lambda
                ((g$x$6974$1RbCyC)
                 (equal?
                   (g$library-name$6819$1RbCyC g$x$6974$1RbCyC)
                   g$name$6973$1RbCyC))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$6862$1RbCyC
     g$find-library-by-spec/die$7066$1RbCyC
     (case-lambda
       ((g$spec$6975$1RbCyC)
        ((case-lambda
           ((g$id$6976$1RbCyC)
            ((case-lambda
               ((g$t$6977$1RbCyC)
                (if g$t$6977$1RbCyC
                  g$t$6977$1RbCyC
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$6975$1RbCyC)))))
             (g$find-library-by$6848$1RbCyC
               (case-lambda
                 ((g$x$6978$1RbCyC)
                  (eq? g$id$6976$1RbCyC
                       (g$library-id$6818$1RbCyC g$x$6978$1RbCyC))))))))
         (car g$spec$6975$1RbCyC)))))
   (g$label->binding-table$6863$1RbCyC
     g$label->binding-table$7067$1RbCyC
     (g$make-eq-hashtable$5433$1RbCyC))
   (g$install-library-record$6864$1RbCyC
     g$install-library-record$7068$1RbCyC
     (case-lambda
       ((g$lib$6979$1RbCyC)
        (begin
          ((case-lambda
             ((g$exp-env$6980$1RbCyC)
              (for-each
                (case-lambda
                  ((g$x$6981$1RbCyC)
                   ((case-lambda
                      ((g$label$6982$1RbCyC g$binding$6983$1RbCyC)
                       ((case-lambda
                          ((g$binding$6984$1RbCyC)
                           (g$hashtable-set!$5437$1RbCyC
                             g$label->binding-table$6863$1RbCyC
                             g$label$6982$1RbCyC
                             g$binding$6984$1RbCyC)))
                        ((case-lambda
                           ((g$t$6985$1RbCyC)
                            (if (g$memv$4990$1RbCyC g$t$6985$1RbCyC '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$6979$1RbCyC
                                  (cdr g$binding$6983$1RbCyC)))
                              (if (g$memv$4990$1RbCyC
                                    g$t$6985$1RbCyC
                                    '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$6979$1RbCyC
                                    (cdr g$binding$6983$1RbCyC)))
                                (if (g$memv$4990$1RbCyC
                                      g$t$6985$1RbCyC
                                      '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$6979$1RbCyC
                                      (cdr g$binding$6983$1RbCyC)))
                                  g$binding$6983$1RbCyC)))))
                         (car g$binding$6983$1RbCyC)))))
                    (car g$x$6981$1RbCyC)
                    (cdr g$x$6981$1RbCyC))))
                g$exp-env$6980$1RbCyC)))
           (g$library-env$6825$1RbCyC g$lib$6979$1RbCyC))
          ((g$current-library-collection$6812$1RbCyC) g$lib$6979$1RbCyC)))))
   (g$install-library$6865$1RbCyC
     g$install-library$7069$1RbCyC
     (case-lambda
       ((g$id$6986$1RbCyC
          g$name$6987$1RbCyC
          g$ver$6988$1RbCyC
          g$imp*$6989$1RbCyC
          g$vis*$6990$1RbCyC
          g$inv*$6991$1RbCyC
          g$exp-subst$6992$1RbCyC
          g$exp-env$6993$1RbCyC
          g$visit-proc$6994$1RbCyC
          g$invoke-proc$6995$1RbCyC
          g$visit-code$6996$1RbCyC
          g$invoke-code$6997$1RbCyC
          g$visible?$6998$1RbCyC
          g$source-file-name$6999$1RbCyC)
        ((case-lambda
           ((g$imp-lib*$7000$1RbCyC
              g$vis-lib*$7001$1RbCyC
              g$inv-lib*$7002$1RbCyC)
            (begin
              (if (not (if (symbol? g$id$6986$1RbCyC)
                         (if (list? g$name$6987$1RbCyC)
                           (begin '#f (list? g$ver$6988$1RbCyC))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$6986$1RbCyC
                  g$name$6987$1RbCyC
                  g$ver$6988$1RbCyC)
                (void))
              (if (g$library-exists?$6861$1RbCyC g$name$6987$1RbCyC)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$6987$1RbCyC)
                (void))
              ((case-lambda
                 ((g$lib$7003$1RbCyC)
                  (g$install-library-record$6864$1RbCyC g$lib$7003$1RbCyC)))
               (g$make-library$6817$1RbCyC
                 g$id$6986$1RbCyC
                 g$name$6987$1RbCyC
                 g$ver$6988$1RbCyC
                 g$imp-lib*$7000$1RbCyC
                 g$vis-lib*$7001$1RbCyC
                 g$inv-lib*$7002$1RbCyC
                 g$exp-subst$6992$1RbCyC
                 g$exp-env$6993$1RbCyC
                 g$visit-proc$6994$1RbCyC
                 g$invoke-proc$6995$1RbCyC
                 g$visit-code$6996$1RbCyC
                 g$invoke-code$6997$1RbCyC
                 g$visible?$6998$1RbCyC
                 g$source-file-name$6999$1RbCyC)))))
         (map g$find-library-by-spec/die$6862$1RbCyC g$imp*$6989$1RbCyC)
         (map g$find-library-by-spec/die$6862$1RbCyC g$vis*$6990$1RbCyC)
         (map g$find-library-by-spec/die$6862$1RbCyC g$inv*$6991$1RbCyC)))))
   (g$imported-label->binding$6866$1RbCyC
     g$imported-label->binding$7070$1RbCyC
     (case-lambda
       ((g$lab$7004$1RbCyC)
        (g$hashtable-ref$5436$1RbCyC
          g$label->binding-table$6863$1RbCyC
          g$lab$7004$1RbCyC
          '#f))))
   (g$invoke-library$6867$1RbCyC
     g$invoke-library$7071$1RbCyC
     (case-lambda
       ((g$lib$7005$1RbCyC)
        ((case-lambda
           ((g$invoke$7006$1RbCyC)
            (if (procedure? g$invoke$7006$1RbCyC)
              (begin
                (g$set-library-invoke-state!$6841$1RbCyC
                  g$lib$7005$1RbCyC
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7005$1RbCyC))))
                (for-each
                  g$invoke-library$6867$1RbCyC
                  (g$library-inv*$6823$1RbCyC g$lib$7005$1RbCyC))
                (g$set-library-invoke-state!$6841$1RbCyC
                  g$lib$7005$1RbCyC
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7005$1RbCyC))))
                (g$invoke$7006$1RbCyC)
                (g$set-library-invoke-state!$6841$1RbCyC g$lib$7005$1RbCyC '#t))
              (void))))
         (g$library-invoke-state$6827$1RbCyC g$lib$7005$1RbCyC)))))
   (g$visit-library$6868$1RbCyC
     g$visit-library$7072$1RbCyC
     (case-lambda
       ((g$lib$7007$1RbCyC)
        ((case-lambda
           ((g$visit$7008$1RbCyC)
            (if (procedure? g$visit$7008$1RbCyC)
              (begin
                (g$set-library-visit-state!$6840$1RbCyC
                  g$lib$7007$1RbCyC
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7007$1RbCyC))))
                (for-each
                  g$invoke-library$6867$1RbCyC
                  (g$library-vis*$6822$1RbCyC g$lib$7007$1RbCyC))
                (g$set-library-visit-state!$6840$1RbCyC
                  g$lib$7007$1RbCyC
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7007$1RbCyC))))
                (g$visit$7008$1RbCyC)
                (g$set-library-visit-state!$6840$1RbCyC g$lib$7007$1RbCyC '#t))
              (void))))
         (g$library-visit-state$6826$1RbCyC g$lib$7007$1RbCyC)))))
   (g$invoke-library-by-spec$6869$1RbCyC
     g$invoke-library-by-spec$7073$1RbCyC
     (case-lambda
       ((g$spec$7009$1RbCyC)
        (g$invoke-library$6867$1RbCyC
          (g$find-library-by-spec/die$6862$1RbCyC g$spec$7009$1RbCyC)))))
   (g$installed-libraries$6870$1RbCyC
     g$installed-libraries$7074$1RbCyC
     (case-lambda
       ((g$all?$7010$1RbCyC)
        ((letrec ((g$f$7011$1RbCyC
                    (case-lambda
                      ((g$ls$7012$1RbCyC)
                       (if (null? g$ls$7012$1RbCyC)
                         '()
                         (if ((case-lambda
                                ((g$t$7013$1RbCyC)
                                 (if g$t$7013$1RbCyC
                                   g$t$7013$1RbCyC
                                   (begin
                                     '#f
                                     (g$library-visible?$6830$1RbCyC
                                       (car g$ls$7012$1RbCyC))))))
                              g$all?$7010$1RbCyC)
                           (cons
                             (car g$ls$7012$1RbCyC)
                             (g$f$7011$1RbCyC (cdr g$ls$7012$1RbCyC)))
                           (g$f$7011$1RbCyC (cdr g$ls$7012$1RbCyC))))))))
           g$f$7011$1RbCyC)
         ((g$current-library-collection$6812$1RbCyC))))
       (() (g$installed-libraries$6870$1RbCyC '#f))))
   (g$library-spec$6871$1RbCyC
     g$library-spec$7075$1RbCyC
     (case-lambda
       ((g$x$7014$1RbCyC)
        (begin
          (if (not (g$library?$6816$1RbCyC g$x$7014$1RbCyC))
            (assertion-violation 'library-spec '"not a library" g$x$7014$1RbCyC)
            (void))
          (list
            (g$library-id$6818$1RbCyC g$x$7014$1RbCyC)
            (g$library-name$6819$1RbCyC g$x$7014$1RbCyC)
            (g$library-version$6820$1RbCyC g$x$7014$1RbCyC)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7076$1RbCyC
     g$build-global-define$7186$1RbCyC
     (case-lambda ((g$x$7157$1RbCyC) (g$build-void$7153$1RbCyC))))
   (g$build-lambda$7125$1RbCyC
     g$build-lambda$7187$1RbCyC
     (case-lambda
       ((g$ae$7158$1RbCyC g$vars$7159$1RbCyC g$exp$7160$1RbCyC)
        (list 'case-lambda (list g$vars$7159$1RbCyC g$exp$7160$1RbCyC)))))
   (g$build-case-lambda$7126$1RbCyC
     g$build-case-lambda$7188$1RbCyC
     (case-lambda
       ((g$ae$7161$1RbCyC g$vars*$7162$1RbCyC g$exp*$7163$1RbCyC)
        (cons 'case-lambda (map list g$vars*$7162$1RbCyC g$exp*$7163$1RbCyC)))))
   (g$build-let$7127$1RbCyC
     g$build-let$7189$1RbCyC
     (case-lambda
       ((g$ae$7164$1RbCyC
          g$lhs*$7165$1RbCyC
          g$rhs*$7166$1RbCyC
          g$body$7167$1RbCyC)
        (cons
          (g$build-lambda$7125$1RbCyC
            g$ae$7164$1RbCyC
            g$lhs*$7165$1RbCyC
            g$body$7167$1RbCyC)
          g$rhs*$7166$1RbCyC))))
   (g$build-sequence$7152$1RbCyC
     g$build-sequence$7190$1RbCyC
     (case-lambda
       ((g$ae$7168$1RbCyC g$exps$7169$1RbCyC)
        ((letrec ((g$loop$7170$1RbCyC
                    (case-lambda
                      ((g$exps$7171$1RbCyC)
                       (if (null? (cdr g$exps$7171$1RbCyC))
                         (car g$exps$7171$1RbCyC)
                         (if (equal?
                               (car g$exps$7171$1RbCyC)
                               (g$build-void$7153$1RbCyC))
                           (g$loop$7170$1RbCyC (cdr g$exps$7171$1RbCyC))
                           (cons 'begin g$exps$7171$1RbCyC)))))))
           g$loop$7170$1RbCyC)
         g$exps$7169$1RbCyC))))
   (g$build-void$7153$1RbCyC
     g$build-void$7191$1RbCyC
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7154$1RbCyC
     g$build-letrec$7192$1RbCyC
     (case-lambda
       ((g$ae$7172$1RbCyC
          g$vars$7173$1RbCyC
          g$val-exps$7174$1RbCyC
          g$body-exp$7175$1RbCyC)
        (if (null? g$vars$7173$1RbCyC)
          g$body-exp$7175$1RbCyC
          (list
            'letrec
            (map list g$vars$7173$1RbCyC g$val-exps$7174$1RbCyC)
            g$body-exp$7175$1RbCyC)))))
   (g$build-letrec*$7155$1RbCyC
     g$build-letrec*$7193$1RbCyC
     (case-lambda
       ((g$ae$7176$1RbCyC
          g$vars$7177$1RbCyC
          g$val-exps$7178$1RbCyC
          g$body-exp$7179$1RbCyC)
        (if (null? g$vars$7177$1RbCyC)
          g$body-exp$7179$1RbCyC
          (list
            'letrec*
            (map list g$vars$7177$1RbCyC g$val-exps$7178$1RbCyC)
            g$body-exp$7179$1RbCyC)))))
   (g$build-library-letrec*$7156$1RbCyC
     g$build-library-letrec*$7194$1RbCyC
     (case-lambda
       ((g$ae$7180$1RbCyC
          g$name$7181$1RbCyC
          g$vars$7182$1RbCyC
          g$locs$7183$1RbCyC
          g$val-exps$7184$1RbCyC
          g$body-exp$7185$1RbCyC)
        (list
          'library-letrec*
          g$name$7181$1RbCyC
          (map list
               g$vars$7182$1RbCyC
               g$locs$7183$1RbCyC
               g$val-exps$7184$1RbCyC)
          g$body-exp$7185$1RbCyC)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7195$1RbCyC
     g$set-cons$10876$1RbCyC
     (case-lambda
       ((g$x$7658$1RbCyC g$ls$7659$1RbCyC)
        (if (g$memq$4989$1RbCyC g$x$7658$1RbCyC g$ls$7659$1RbCyC)
          g$ls$7659$1RbCyC
          (cons g$x$7658$1RbCyC g$ls$7659$1RbCyC)))))
   (g$set-union$7196$1RbCyC
     g$set-union$10877$1RbCyC
     (case-lambda
       ((g$ls1$7660$1RbCyC g$ls2$7661$1RbCyC)
        (if (null? g$ls1$7660$1RbCyC)
          g$ls2$7661$1RbCyC
          (if (g$memq$4989$1RbCyC (car g$ls1$7660$1RbCyC) g$ls2$7661$1RbCyC)
            (g$set-union$7196$1RbCyC (cdr g$ls1$7660$1RbCyC) g$ls2$7661$1RbCyC)
            (cons
              (car g$ls1$7660$1RbCyC)
              (g$set-union$7196$1RbCyC
                (cdr g$ls1$7660$1RbCyC)
                g$ls2$7661$1RbCyC)))))))
   (g$top-mark*$7198$1RbCyC g$top-mark*$10878$1RbCyC '(top))
   (g$top-marked?$7199$1RbCyC
     g$top-marked?$10879$1RbCyC
     (case-lambda
       ((g$m*$7662$1RbCyC) (g$memq$4989$1RbCyC 'top g$m*$7662$1RbCyC))))
   (g$gen-lexical$7200$1RbCyC
     g$gen-lexical$10880$1RbCyC
     (case-lambda
       ((g$sym$7663$1RbCyC)
        (if (symbol? g$sym$7663$1RbCyC)
          (gensym g$sym$7663$1RbCyC)
          (if (g$stx?$7233$1RbCyC g$sym$7663$1RbCyC)
            (g$gen-lexical$7200$1RbCyC
              (g$id->sym$7262$1RbCyC g$sym$7663$1RbCyC))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$7663$1RbCyC))))))
   (g$gen-global$7201$1RbCyC
     g$gen-global$10881$1RbCyC
     (case-lambda
       ((g$x$7664$1RbCyC) (g$gen-lexical$7200$1RbCyC g$x$7664$1RbCyC))))
   (g$gen-label$7202$1RbCyC
     g$gen-label$10882$1RbCyC
     (case-lambda ((g$_$7665$1RbCyC) (gensym))))
   (g$gen-top-level-label$7203$1RbCyC
     g$gen-top-level-label$10883$1RbCyC
     (case-lambda
       ((g$id$7666$1RbCyC g$rib$7667$1RbCyC)
        (letrec* ((g$find$7668$1RbCyC
                    (case-lambda
                      ((g$sym$7674$1RbCyC
                         g$mark*$7675$1RbCyC
                         g$sym*$7676$1RbCyC
                         g$mark**$7677$1RbCyC
                         g$label*$7678$1RbCyC)
                       (if (pair? g$sym*$7676$1RbCyC)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7674$1RbCyC
                                        (car g$sym*$7676$1RbCyC))
                                 (begin
                                   '#f
                                   (g$same-marks?$7263$1RbCyC
                                     g$mark*$7675$1RbCyC
                                     (car g$mark**$7677$1RbCyC)))
                                 '#f)
                             (car g$label*$7678$1RbCyC)
                             (g$find$7668$1RbCyC
                               g$sym$7674$1RbCyC
                               g$mark*$7675$1RbCyC
                               (cdr g$sym*$7676$1RbCyC)
                               (cdr g$mark**$7677$1RbCyC)
                               (cdr g$label*$7678$1RbCyC))))
                         '#f)))))
          ((case-lambda
             ((g$sym$7669$1RbCyC g$mark*$7670$1RbCyC)
              ((case-lambda
                 ((g$sym*$7671$1RbCyC)
                  ((case-lambda
                     ((g$t$7672$1RbCyC)
                      (if g$t$7672$1RbCyC
                        ((case-lambda
                           ((g$label$7673$1RbCyC)
                            (if (g$imported-label->binding$7070$1RbCyC
                                  g$label$7673$1RbCyC)
                              (gensym)
                              g$label$7673$1RbCyC)))
                         g$t$7672$1RbCyC)
                        (gensym))))
                   (if (g$memq$4989$1RbCyC
                         g$sym$7669$1RbCyC
                         (g$rib-sym*$7211$1RbCyC g$rib$7667$1RbCyC))
                     (begin
                       '#f
                       (g$find$7668$1RbCyC
                         g$sym$7669$1RbCyC
                         g$mark*$7670$1RbCyC
                         g$sym*$7671$1RbCyC
                         (g$rib-mark**$7212$1RbCyC g$rib$7667$1RbCyC)
                         (g$rib-label*$7213$1RbCyC g$rib$7667$1RbCyC)))
                     '#f))))
               (g$rib-sym*$7211$1RbCyC g$rib$7667$1RbCyC))))
           (g$id->sym$7262$1RbCyC g$id$7666$1RbCyC)
           (g$stx-mark*$7236$1RbCyC g$id$7666$1RbCyC))))))
   (g$gen-define-label+loc$7204$1RbCyC
     g$gen-define-label+loc$10884$1RbCyC
     (case-lambda
       ((g$id$7679$1RbCyC g$rib$7680$1RbCyC)
        ((case-lambda
           ((g$t$7681$1RbCyC)
            (if g$t$7681$1RbCyC
              ((case-lambda
                 ((g$env$7682$1RbCyC)
                  ((case-lambda
                     ((g$label$7683$1RbCyC g$locs$7684$1RbCyC)
                      (values
                        g$label$7683$1RbCyC
                        ((case-lambda
                           ((g$t$7685$1RbCyC)
                            (if g$t$7685$1RbCyC
                              (cdr g$t$7685$1RbCyC)
                              ((case-lambda
                                 ((g$loc$7686$1RbCyC)
                                  (begin
                                    (g$set-interaction-env-locs!$7622$1RbCyC
                                      g$env$7682$1RbCyC
                                      (cons
                                        (cons
                                          g$label$7683$1RbCyC
                                          g$loc$7686$1RbCyC)
                                        g$locs$7684$1RbCyC))
                                    g$loc$7686$1RbCyC)))
                               (g$gen-lexical$7200$1RbCyC g$id$7679$1RbCyC)))))
                         (g$assq$4985$1RbCyC
                           g$label$7683$1RbCyC
                           g$locs$7684$1RbCyC)))))
                   (g$gen-top-level-label$7203$1RbCyC
                     g$id$7679$1RbCyC
                     g$rib$7680$1RbCyC)
                   (g$interaction-env-locs$7619$1RbCyC g$env$7682$1RbCyC))))
               g$t$7681$1RbCyC)
              (values (gensym) (g$gen-lexical$7200$1RbCyC g$id$7679$1RbCyC)))))
         (g$top-level-context$7657$1RbCyC)))))
   (g$gen-define-label$7205$1RbCyC
     g$gen-define-label$10885$1RbCyC
     (case-lambda
       ((g$id$7687$1RbCyC g$rib$7688$1RbCyC)
        (if (g$top-level-context$7657$1RbCyC)
          (g$gen-top-level-label$7203$1RbCyC g$id$7687$1RbCyC g$rib$7688$1RbCyC)
          (gensym)))))
   (g$8302$7206$1RbCyC
     g$8302$10886$1RbCyC
     (make-record-type-descriptor
       'rib
       '#f
       'g$8305$1RbCyC
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$8304$7207$1RbCyC g$8304$10887$1RbCyC '#f)
   (g$8303$7208$1RbCyC
     g$8303$10888$1RbCyC
     (make-record-constructor-descriptor
       g$8302$7206$1RbCyC
       '#f
       g$8304$7207$1RbCyC))
   (g$rib?$7209$1RbCyC
     g$rib?$10889$1RbCyC
     (record-predicate g$8302$7206$1RbCyC))
   (g$make-rib$7210$1RbCyC
     g$make-rib$10890$1RbCyC
     (record-constructor g$8303$7208$1RbCyC))
   (g$rib-sym*$7211$1RbCyC
     g$rib-sym*$10891$1RbCyC
     (record-accessor g$8302$7206$1RbCyC '0))
   (g$rib-mark**$7212$1RbCyC
     g$rib-mark**$10892$1RbCyC
     (record-accessor g$8302$7206$1RbCyC '1))
   (g$rib-label*$7213$1RbCyC
     g$rib-label*$10893$1RbCyC
     (record-accessor g$8302$7206$1RbCyC '2))
   (g$rib-sealed/freq$7214$1RbCyC
     g$rib-sealed/freq$10894$1RbCyC
     (record-accessor g$8302$7206$1RbCyC '3))
   (g$rib-cache$7215$1RbCyC
     g$rib-cache$10895$1RbCyC
     (record-accessor g$8302$7206$1RbCyC '4))
   (g$set-rib-sym*!$7216$1RbCyC
     g$set-rib-sym*!$10896$1RbCyC
     (record-mutator g$8302$7206$1RbCyC '0))
   (g$set-rib-mark**!$7217$1RbCyC
     g$set-rib-mark**!$10897$1RbCyC
     (record-mutator g$8302$7206$1RbCyC '1))
   (g$set-rib-label*!$7218$1RbCyC
     g$set-rib-label*!$10898$1RbCyC
     (record-mutator g$8302$7206$1RbCyC '2))
   (g$set-rib-sealed/freq!$7219$1RbCyC
     g$set-rib-sealed/freq!$10899$1RbCyC
     (record-mutator g$8302$7206$1RbCyC '3))
   (g$set-rib-cache!$7220$1RbCyC
     g$set-rib-cache!$10900$1RbCyC
     (record-mutator g$8302$7206$1RbCyC '4))
   (g$make-empty-rib$7221$1RbCyC
     g$make-empty-rib$10901$1RbCyC
     (case-lambda (() (g$make-rib$7210$1RbCyC '() '() '() '#f '#f))))
   (g$make-cache-rib$7222$1RbCyC
     g$make-cache-rib$10902$1RbCyC
     (case-lambda
       (()
        (g$make-rib$7210$1RbCyC
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$5433$1RbCyC)))))
   (g$find-label$7223$1RbCyC
     g$find-label$10903$1RbCyC
     (case-lambda
       ((g$rib$7689$1RbCyC g$sym$7690$1RbCyC g$mark*$7691$1RbCyC)
        ((case-lambda
           ((g$ht$7692$1RbCyC)
            (if g$ht$7692$1RbCyC
              (begin
                '#f
                ((case-lambda
                   ((g$cv$7693$1RbCyC)
                    ((case-lambda
                       ((g$t$7694$1RbCyC)
                        (if g$t$7694$1RbCyC (cdr g$t$7694$1RbCyC) '#f)))
                     (if g$cv$7693$1RbCyC
                       (begin
                         '#f
                         (g$assp$4988$1RbCyC
                           (case-lambda
                             ((g$m$7695$1RbCyC)
                              (g$same-marks?$7263$1RbCyC
                                g$mark*$7691$1RbCyC
                                g$m$7695$1RbCyC)))
                           g$cv$7693$1RbCyC))
                       '#f))))
                 (g$hashtable-ref$5436$1RbCyC
                   g$ht$7692$1RbCyC
                   g$sym$7690$1RbCyC
                   '#f)))
              '#f)))
         (g$rib-cache$7215$1RbCyC g$rib$7689$1RbCyC)))))
   (g$extend-rib!$7224$1RbCyC
     g$extend-rib!$10904$1RbCyC
     (case-lambda
       ((g$rib$7696$1RbCyC g$id$7697$1RbCyC g$label$7698$1RbCyC)
        (letrec* ((g$find$7699$1RbCyC
                    (case-lambda
                      ((g$sym$7708$1RbCyC
                         g$mark*$7709$1RbCyC
                         g$sym*$7710$1RbCyC
                         g$mark**$7711$1RbCyC
                         g$label*$7712$1RbCyC)
                       (if (pair? g$sym*$7710$1RbCyC)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7708$1RbCyC
                                        (car g$sym*$7710$1RbCyC))
                                 (begin
                                   '#f
                                   (g$same-marks?$7263$1RbCyC
                                     g$mark*$7709$1RbCyC
                                     (car g$mark**$7711$1RbCyC)))
                                 '#f)
                             g$label*$7712$1RbCyC
                             (g$find$7699$1RbCyC
                               g$sym$7708$1RbCyC
                               g$mark*$7709$1RbCyC
                               (cdr g$sym*$7710$1RbCyC)
                               (cdr g$mark**$7711$1RbCyC)
                               (cdr g$label*$7712$1RbCyC))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7214$1RbCyC g$rib$7696$1RbCyC)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$7696$1RbCyC)
              (void))
            ((case-lambda
               ((g$sym$7700$1RbCyC g$mark*$7701$1RbCyC)
                ((case-lambda
                   ((g$sym*$7702$1RbCyC)
                    ((case-lambda
                       ((g$t$7703$1RbCyC)
                        (if g$t$7703$1RbCyC
                          ((case-lambda
                             ((g$p$7704$1RbCyC)
                              (if (not (eq? g$label$7698$1RbCyC
                                            g$p$7704$1RbCyC))
                                (g$syntax-violation$7650$1RbCyC
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$7697$1RbCyC)
                                (void))))
                           g$t$7703$1RbCyC)
                          ((case-lambda
                             ((g$t$7705$1RbCyC)
                              (if g$t$7705$1RbCyC
                                ((case-lambda
                                   ((g$p$7706$1RbCyC)
                                    (if (not (eq? g$label$7698$1RbCyC
                                                  (car g$p$7706$1RbCyC)))
                                      (if (g$top-level-context$7657$1RbCyC)
                                        (set-car!
                                          g$p$7706$1RbCyC
                                          g$label$7698$1RbCyC)
                                        (g$syntax-violation$7650$1RbCyC
                                          '#f
                                          '"multiple definitions of identifier"
                                          g$id$7697$1RbCyC))
                                      (void))))
                                 g$t$7705$1RbCyC)
                                (begin
                                  (if (g$rib-cache$7215$1RbCyC
                                        g$rib$7696$1RbCyC)
                                    (g$hashtable-update!$5440$1RbCyC
                                      (g$rib-cache$7215$1RbCyC
                                        g$rib$7696$1RbCyC)
                                      g$sym$7700$1RbCyC
                                      (case-lambda
                                        ((g$e$7707$1RbCyC)
                                         (cons
                                           (cons
                                             g$mark*$7701$1RbCyC
                                             g$label$7698$1RbCyC)
                                           g$e$7707$1RbCyC)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$7216$1RbCyC
                                    g$rib$7696$1RbCyC
                                    (cons g$sym$7700$1RbCyC g$sym*$7702$1RbCyC))
                                  (g$set-rib-mark**!$7217$1RbCyC
                                    g$rib$7696$1RbCyC
                                    (cons
                                      g$mark*$7701$1RbCyC
                                      (g$rib-mark**$7212$1RbCyC
                                        g$rib$7696$1RbCyC)))
                                  (g$set-rib-label*!$7218$1RbCyC
                                    g$rib$7696$1RbCyC
                                    (cons
                                      g$label$7698$1RbCyC
                                      (g$rib-label*$7213$1RbCyC
                                        g$rib$7696$1RbCyC)))))))
                           (if (g$memq$4989$1RbCyC
                                 g$sym$7700$1RbCyC
                                 (g$rib-sym*$7211$1RbCyC g$rib$7696$1RbCyC))
                             (begin
                               '#f
                               (g$find$7699$1RbCyC
                                 g$sym$7700$1RbCyC
                                 g$mark*$7701$1RbCyC
                                 g$sym*$7702$1RbCyC
                                 (g$rib-mark**$7212$1RbCyC g$rib$7696$1RbCyC)
                                 (g$rib-label*$7213$1RbCyC g$rib$7696$1RbCyC)))
                             '#f)))))
                     (g$find-label$7223$1RbCyC
                       g$rib$7696$1RbCyC
                       g$sym$7700$1RbCyC
                       g$mark*$7701$1RbCyC))))
                 (g$rib-sym*$7211$1RbCyC g$rib$7696$1RbCyC))))
             (g$id->sym$7262$1RbCyC g$id$7697$1RbCyC)
             (g$stx-mark*$7236$1RbCyC g$id$7697$1RbCyC)))))))
   (g$extend-rib/nc!$7225$1RbCyC
     g$extend-rib/nc!$10905$1RbCyC
     (case-lambda
       ((g$rib$7713$1RbCyC g$id$7714$1RbCyC g$label$7715$1RbCyC)
        ((case-lambda
           ((g$sym$7716$1RbCyC g$mark*$7717$1RbCyC)
            ((case-lambda
               ((g$sym*$7718$1RbCyC)
                (begin
                  (if (g$rib-cache$7215$1RbCyC g$rib$7713$1RbCyC)
                    (g$hashtable-update!$5440$1RbCyC
                      (g$rib-cache$7215$1RbCyC g$rib$7713$1RbCyC)
                      g$sym$7716$1RbCyC
                      (case-lambda
                        ((g$e$7719$1RbCyC)
                         (cons
                           (cons g$mark*$7717$1RbCyC g$label$7715$1RbCyC)
                           g$e$7719$1RbCyC)))
                      '())
                    (void))
                  (g$set-rib-sym*!$7216$1RbCyC
                    g$rib$7713$1RbCyC
                    (cons g$sym$7716$1RbCyC g$sym*$7718$1RbCyC))
                  (g$set-rib-mark**!$7217$1RbCyC
                    g$rib$7713$1RbCyC
                    (cons
                      g$mark*$7717$1RbCyC
                      (g$rib-mark**$7212$1RbCyC g$rib$7713$1RbCyC)))
                  (g$set-rib-label*!$7218$1RbCyC
                    g$rib$7713$1RbCyC
                    (cons
                      g$label$7715$1RbCyC
                      (g$rib-label*$7213$1RbCyC g$rib$7713$1RbCyC))))))
             (g$rib-sym*$7211$1RbCyC g$rib$7713$1RbCyC))))
         (g$id->sym$7262$1RbCyC g$id$7714$1RbCyC)
         (g$stx-mark*$7236$1RbCyC g$id$7714$1RbCyC)))))
   (g$make-rib-map$7226$1RbCyC
     g$make-rib-map$10906$1RbCyC
     (case-lambda
       ((g$sym*$7720$1RbCyC)
        ((case-lambda
           ((g$ht$7721$1RbCyC)
            ((letrec ((g$f$7722$1RbCyC
                        (case-lambda
                          ((g$i$7723$1RbCyC g$sym*$7724$1RbCyC)
                           (if (null? g$sym*$7724$1RbCyC)
                             g$ht$7721$1RbCyC
                             (begin
                               (g$hashtable-update!$5440$1RbCyC
                                 g$ht$7721$1RbCyC
                                 (car g$sym*$7724$1RbCyC)
                                 (case-lambda
                                   ((g$x$7725$1RbCyC)
                                    (cons g$i$7723$1RbCyC g$x$7725$1RbCyC)))
                                 '())
                               (g$f$7722$1RbCyC
                                 (+ g$i$7723$1RbCyC '1)
                                 (cdr g$sym*$7724$1RbCyC))))))))
               g$f$7722$1RbCyC)
             '0
             g$sym*$7720$1RbCyC)))
         (g$make-eq-hashtable$5433$1RbCyC)))))
   (g$seal-rib!$7227$1RbCyC
     g$seal-rib!$10907$1RbCyC
     (case-lambda
       ((g$rib$7726$1RbCyC)
        ((case-lambda
           ((g$sym*$7727$1RbCyC)
            (if (not (null? g$sym*$7727$1RbCyC))
              (begin
                (g$set-rib-sym*!$7216$1RbCyC
                  g$rib$7726$1RbCyC
                  (list->vector g$sym*$7727$1RbCyC))
                (g$set-rib-mark**!$7217$1RbCyC
                  g$rib$7726$1RbCyC
                  (list->vector (g$rib-mark**$7212$1RbCyC g$rib$7726$1RbCyC)))
                (g$set-rib-label*!$7218$1RbCyC
                  g$rib$7726$1RbCyC
                  (list->vector (g$rib-label*$7213$1RbCyC g$rib$7726$1RbCyC)))
                (g$set-rib-sealed/freq!$7219$1RbCyC
                  g$rib$7726$1RbCyC
                  (g$make-rib-map$7226$1RbCyC g$sym*$7727$1RbCyC)))
              (void))))
         (g$rib-sym*$7211$1RbCyC g$rib$7726$1RbCyC)))))
   (g$unseal-rib!$7228$1RbCyC
     g$unseal-rib!$10908$1RbCyC
     (case-lambda
       ((g$rib$7728$1RbCyC)
        (if (g$rib-sealed/freq$7214$1RbCyC g$rib$7728$1RbCyC)
          (begin
            (g$set-rib-sealed/freq!$7219$1RbCyC g$rib$7728$1RbCyC '#f)
            (g$set-rib-sym*!$7216$1RbCyC
              g$rib$7728$1RbCyC
              (vector->list (g$rib-sym*$7211$1RbCyC g$rib$7728$1RbCyC)))
            (g$set-rib-mark**!$7217$1RbCyC
              g$rib$7728$1RbCyC
              (vector->list (g$rib-mark**$7212$1RbCyC g$rib$7728$1RbCyC)))
            (g$set-rib-label*!$7218$1RbCyC
              g$rib$7728$1RbCyC
              (vector->list (g$rib-label*$7213$1RbCyC g$rib$7728$1RbCyC))))
          (void)))))
   (g$make-full-rib$7229$1RbCyC
     g$make-full-rib$10909$1RbCyC
     (case-lambda
       ((g$id*$7729$1RbCyC g$label*$7730$1RbCyC)
        ((case-lambda
           ((g$r$7731$1RbCyC)
            (begin (g$seal-rib!$7227$1RbCyC g$r$7731$1RbCyC) g$r$7731$1RbCyC)))
         (g$make-rib$7210$1RbCyC
           (map g$id->sym$7262$1RbCyC g$id*$7729$1RbCyC)
           (map g$stx-mark*$7236$1RbCyC g$id*$7729$1RbCyC)
           g$label*$7730$1RbCyC
           '#f
           '#f)))))
   (g$8333$7230$1RbCyC
     g$8333$10910$1RbCyC
     (make-record-type-descriptor
       'stx
       '#f
       'g$8336$1RbCyC
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$8335$7231$1RbCyC g$8335$10911$1RbCyC '#f)
   (g$8334$7232$1RbCyC
     g$8334$10912$1RbCyC
     (make-record-constructor-descriptor
       g$8333$7230$1RbCyC
       '#f
       g$8335$7231$1RbCyC))
   (g$stx?$7233$1RbCyC
     g$stx?$10913$1RbCyC
     (record-predicate g$8333$7230$1RbCyC))
   (g$make-stx$7234$1RbCyC
     g$make-stx$10914$1RbCyC
     (record-constructor g$8334$7232$1RbCyC))
   (g$stx-expr$7235$1RbCyC
     g$stx-expr$10915$1RbCyC
     (record-accessor g$8333$7230$1RbCyC '0))
   (g$stx-mark*$7236$1RbCyC
     g$stx-mark*$10916$1RbCyC
     (record-accessor g$8333$7230$1RbCyC '1))
   (g$stx-subst*$7237$1RbCyC
     g$stx-subst*$10917$1RbCyC
     (record-accessor g$8333$7230$1RbCyC '2))
   (g$stx-ae*$7238$1RbCyC
     g$stx-ae*$10918$1RbCyC
     (record-accessor g$8333$7230$1RbCyC '3))
   (g$set-stx-expr!$7239$1RbCyC
     g$set-stx-expr!$10919$1RbCyC
     (record-mutator g$8333$7230$1RbCyC '0))
   (g$set-stx-mark*!$7240$1RbCyC
     g$set-stx-mark*!$10920$1RbCyC
     (record-mutator g$8333$7230$1RbCyC '1))
   (g$set-stx-subst*!$7241$1RbCyC
     g$set-stx-subst*!$10921$1RbCyC
     (record-mutator g$8333$7230$1RbCyC '2))
   (g$set-stx-ae*!$7242$1RbCyC
     g$set-stx-ae*!$10922$1RbCyC
     (record-mutator g$8333$7230$1RbCyC '3))
   (g$rp$7243$1RbCyC
     g$rp$10923$1RbCyC
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$7732$1RbCyC g$p$7733$1RbCyC)
          (begin
            (display '"#<syntax " g$p$7733$1RbCyC)
            (write (g$stx->datum$7272$1RbCyC g$x$7732$1RbCyC) g$p$7733$1RbCyC)
            ((case-lambda
               ((g$expr$7734$1RbCyC)
                (if (annotation? g$expr$7734$1RbCyC)
                  ((case-lambda
                     ((g$src$7735$1RbCyC)
                      (if (pair? g$src$7735$1RbCyC)
                        (begin
                          (display '" [" g$p$7733$1RbCyC)
                          (display (cdr g$src$7735$1RbCyC) g$p$7733$1RbCyC)
                          (display '" of " g$p$7733$1RbCyC)
                          (display (car g$src$7735$1RbCyC) g$p$7733$1RbCyC)
                          (display '"]" g$p$7733$1RbCyC))
                        (void))))
                   (annotation-source g$expr$7734$1RbCyC))
                  (void))))
             (g$stx-expr$7235$1RbCyC g$x$7732$1RbCyC))
            (display '">" g$p$7733$1RbCyC))))))
   (g$datum->stx$7244$1RbCyC
     g$datum->stx$10924$1RbCyC
     (case-lambda
       ((g$id$7736$1RbCyC g$datum$7737$1RbCyC)
        (g$make-stx$7234$1RbCyC
          g$datum$7737$1RbCyC
          (g$stx-mark*$7236$1RbCyC g$id$7736$1RbCyC)
          (g$stx-subst*$7237$1RbCyC g$id$7736$1RbCyC)
          (g$stx-ae*$7238$1RbCyC g$id$7736$1RbCyC)))))
   (g$gen-mark$7245$1RbCyC
     g$gen-mark$10925$1RbCyC
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7246$1RbCyC g$anti-mark$10926$1RbCyC '#f)
   (g$anti-mark?$7247$1RbCyC g$anti-mark?$10927$1RbCyC not)
   (g$join-wraps$7248$1RbCyC
     g$join-wraps$10928$1RbCyC
     (case-lambda
       ((g$m1*$7738$1RbCyC
          g$s1*$7739$1RbCyC
          g$ae1*$7740$1RbCyC
          g$e$7741$1RbCyC)
        (letrec* ((g$cancel$7742$1RbCyC
                    (case-lambda
                      ((g$ls1$7746$1RbCyC g$ls2$7747$1RbCyC)
                       ((letrec ((g$f$7748$1RbCyC
                                   (case-lambda
                                     ((g$x$7749$1RbCyC g$ls1$7750$1RbCyC)
                                      (if (null? g$ls1$7750$1RbCyC)
                                        (cdr g$ls2$7747$1RbCyC)
                                        (cons
                                          g$x$7749$1RbCyC
                                          (g$f$7748$1RbCyC
                                            (car g$ls1$7750$1RbCyC)
                                            (cdr g$ls1$7750$1RbCyC))))))))
                          g$f$7748$1RbCyC)
                        (car g$ls1$7746$1RbCyC)
                        (cdr g$ls1$7746$1RbCyC))))))
          ((case-lambda
             ((g$m2*$7743$1RbCyC g$s2*$7744$1RbCyC g$ae2*$7745$1RbCyC)
              (if (if (not (null? g$m1*$7738$1RbCyC))
                    (if (not (null? g$m2*$7743$1RbCyC))
                      (begin
                        '#f
                        (g$anti-mark?$7247$1RbCyC (car g$m2*$7743$1RbCyC)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$7742$1RbCyC g$m1*$7738$1RbCyC g$m2*$7743$1RbCyC)
                  (g$cancel$7742$1RbCyC g$s1*$7739$1RbCyC g$s2*$7744$1RbCyC)
                  (g$cancel$7742$1RbCyC g$ae1*$7740$1RbCyC g$ae2*$7745$1RbCyC))
                (values
                  (append g$m1*$7738$1RbCyC g$m2*$7743$1RbCyC)
                  (append g$s1*$7739$1RbCyC g$s2*$7744$1RbCyC)
                  (append g$ae1*$7740$1RbCyC g$ae2*$7745$1RbCyC)))))
           (g$stx-mark*$7236$1RbCyC g$e$7741$1RbCyC)
           (g$stx-subst*$7237$1RbCyC g$e$7741$1RbCyC)
           (g$stx-ae*$7238$1RbCyC g$e$7741$1RbCyC))))))
   (g$mkstx$7249$1RbCyC
     g$mkstx$10929$1RbCyC
     (case-lambda
       ((g$e$7751$1RbCyC g$m*$7752$1RbCyC g$s*$7753$1RbCyC g$ae*$7754$1RbCyC)
        (if (if (g$stx?$7233$1RbCyC g$e$7751$1RbCyC)
              (begin '#f (not (g$top-marked?$7199$1RbCyC g$m*$7752$1RbCyC)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7248$1RbCyC
                 g$m*$7752$1RbCyC
                 g$s*$7753$1RbCyC
                 g$ae*$7754$1RbCyC
                 g$e$7751$1RbCyC)))
            (case-lambda
              ((g$m*$7758$1RbCyC g$s*$7759$1RbCyC g$ae*$7760$1RbCyC)
               ((case-lambda
                  ((g$ae*$7761$1RbCyC g$s*$7762$1RbCyC g$m*$7763$1RbCyC)
                   (g$make-stx$7234$1RbCyC
                     (g$stx-expr$7235$1RbCyC g$e$7751$1RbCyC)
                     g$m*$7763$1RbCyC
                     g$s*$7762$1RbCyC
                     g$ae*$7761$1RbCyC)))
                g$ae*$7760$1RbCyC
                g$s*$7759$1RbCyC
                g$m*$7758$1RbCyC))))
          (g$make-stx$7234$1RbCyC
            g$e$7751$1RbCyC
            g$m*$7752$1RbCyC
            g$s*$7753$1RbCyC
            g$ae*$7754$1RbCyC)))))
   (g$add-mark$7250$1RbCyC
     g$add-mark$10930$1RbCyC
     (case-lambda
       ((g$m$7764$1RbCyC g$e$7765$1RbCyC g$ae$7766$1RbCyC)
        (g$mkstx$7249$1RbCyC
          g$e$7765$1RbCyC
          (list g$m$7764$1RbCyC)
          '(shift)
          (list g$ae$7766$1RbCyC)))))
   (g$add-subst$7251$1RbCyC
     g$add-subst$10931$1RbCyC
     (case-lambda
       ((g$subst$7767$1RbCyC g$e$7768$1RbCyC)
        (g$mkstx$7249$1RbCyC
          g$e$7768$1RbCyC
          '()
          (list g$subst$7767$1RbCyC)
          '()))))
   (g$syntax-kind?$7252$1RbCyC
     g$syntax-kind?$10932$1RbCyC
     (case-lambda
       ((g$x$7769$1RbCyC g$p?$7770$1RbCyC)
        (if (g$stx?$7233$1RbCyC g$x$7769$1RbCyC)
          (g$syntax-kind?$7252$1RbCyC
            (g$stx-expr$7235$1RbCyC g$x$7769$1RbCyC)
            g$p?$7770$1RbCyC)
          (if (annotation? g$x$7769$1RbCyC)
            (g$syntax-kind?$7252$1RbCyC
              (annotation-expression g$x$7769$1RbCyC)
              g$p?$7770$1RbCyC)
            (g$p?$7770$1RbCyC g$x$7769$1RbCyC))))))
   (g$syntax-vector->list$7253$1RbCyC
     g$syntax-vector->list$10933$1RbCyC
     (case-lambda
       ((g$x$7771$1RbCyC)
        (if (g$stx?$7233$1RbCyC g$x$7771$1RbCyC)
          ((case-lambda
             ((g$ls$7772$1RbCyC
                g$m*$7773$1RbCyC
                g$s*$7774$1RbCyC
                g$ae*$7775$1RbCyC)
              (map (case-lambda
                     ((g$x$7776$1RbCyC)
                      (g$mkstx$7249$1RbCyC
                        g$x$7776$1RbCyC
                        g$m*$7773$1RbCyC
                        g$s*$7774$1RbCyC
                        g$ae*$7775$1RbCyC)))
                   g$ls$7772$1RbCyC)))
           (g$syntax-vector->list$7253$1RbCyC
             (g$stx-expr$7235$1RbCyC g$x$7771$1RbCyC))
           (g$stx-mark*$7236$1RbCyC g$x$7771$1RbCyC)
           (g$stx-subst*$7237$1RbCyC g$x$7771$1RbCyC)
           (g$stx-ae*$7238$1RbCyC g$x$7771$1RbCyC))
          (if (annotation? g$x$7771$1RbCyC)
            (g$syntax-vector->list$7253$1RbCyC
              (annotation-expression g$x$7771$1RbCyC))
            (if (vector? g$x$7771$1RbCyC)
              (vector->list g$x$7771$1RbCyC)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$7771$1RbCyC)))))))
   (g$syntax-pair?$7254$1RbCyC
     g$syntax-pair?$10934$1RbCyC
     (case-lambda
       ((g$x$7777$1RbCyC) (g$syntax-kind?$7252$1RbCyC g$x$7777$1RbCyC pair?))))
   (g$syntax-vector?$7255$1RbCyC
     g$syntax-vector?$10935$1RbCyC
     (case-lambda
       ((g$x$7778$1RbCyC)
        (g$syntax-kind?$7252$1RbCyC g$x$7778$1RbCyC vector?))))
   (g$syntax-null?$7256$1RbCyC
     g$syntax-null?$10936$1RbCyC
     (case-lambda
       ((g$x$7779$1RbCyC) (g$syntax-kind?$7252$1RbCyC g$x$7779$1RbCyC null?))))
   (g$syntax-list?$7257$1RbCyC
     g$syntax-list?$10937$1RbCyC
     (case-lambda
       ((g$x$7780$1RbCyC)
        ((case-lambda
           ((g$t$7781$1RbCyC)
            (if g$t$7781$1RbCyC
              g$t$7781$1RbCyC
              (begin
                '#f
                (if (g$syntax-pair?$7254$1RbCyC g$x$7780$1RbCyC)
                  (begin
                    '#f
                    (g$syntax-list?$7257$1RbCyC
                      (g$syntax-cdr$7259$1RbCyC g$x$7780$1RbCyC)))
                  '#f)))))
         (g$syntax-null?$7256$1RbCyC g$x$7780$1RbCyC)))))
   (g$syntax-car$7258$1RbCyC
     g$syntax-car$10938$1RbCyC
     (case-lambda
       ((g$x$7782$1RbCyC)
        (if (g$stx?$7233$1RbCyC g$x$7782$1RbCyC)
          (g$mkstx$7249$1RbCyC
            (g$syntax-car$7258$1RbCyC (g$stx-expr$7235$1RbCyC g$x$7782$1RbCyC))
            (g$stx-mark*$7236$1RbCyC g$x$7782$1RbCyC)
            (g$stx-subst*$7237$1RbCyC g$x$7782$1RbCyC)
            (g$stx-ae*$7238$1RbCyC g$x$7782$1RbCyC))
          (if (annotation? g$x$7782$1RbCyC)
            (g$syntax-car$7258$1RbCyC (annotation-expression g$x$7782$1RbCyC))
            (if (pair? g$x$7782$1RbCyC)
              (car g$x$7782$1RbCyC)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$7782$1RbCyC)))))))
   (g$syntax-cdr$7259$1RbCyC
     g$syntax-cdr$10939$1RbCyC
     (case-lambda
       ((g$x$7783$1RbCyC)
        (if (g$stx?$7233$1RbCyC g$x$7783$1RbCyC)
          (g$mkstx$7249$1RbCyC
            (g$syntax-cdr$7259$1RbCyC (g$stx-expr$7235$1RbCyC g$x$7783$1RbCyC))
            (g$stx-mark*$7236$1RbCyC g$x$7783$1RbCyC)
            (g$stx-subst*$7237$1RbCyC g$x$7783$1RbCyC)
            (g$stx-ae*$7238$1RbCyC g$x$7783$1RbCyC))
          (if (annotation? g$x$7783$1RbCyC)
            (g$syntax-cdr$7259$1RbCyC (annotation-expression g$x$7783$1RbCyC))
            (if (pair? g$x$7783$1RbCyC)
              (cdr g$x$7783$1RbCyC)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$7783$1RbCyC)))))))
   (g$syntax->list$7260$1RbCyC
     g$syntax->list$10940$1RbCyC
     (case-lambda
       ((g$x$7784$1RbCyC)
        (if (g$syntax-pair?$7254$1RbCyC g$x$7784$1RbCyC)
          (cons
            (g$syntax-car$7258$1RbCyC g$x$7784$1RbCyC)
            (g$syntax->list$7260$1RbCyC
              (g$syntax-cdr$7259$1RbCyC g$x$7784$1RbCyC)))
          (if (g$syntax-null?$7256$1RbCyC g$x$7784$1RbCyC)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$7784$1RbCyC))))))
   (g$id?$7261$1RbCyC
     g$id?$10941$1RbCyC
     (case-lambda
       ((g$x$7785$1RbCyC)
        (if (g$stx?$7233$1RbCyC g$x$7785$1RbCyC)
          (begin
            '#f
            ((case-lambda
               ((g$expr$7786$1RbCyC)
                (symbol?
                  (if (annotation? g$expr$7786$1RbCyC)
                    (annotation-stripped g$expr$7786$1RbCyC)
                    g$expr$7786$1RbCyC))))
             (g$stx-expr$7235$1RbCyC g$x$7785$1RbCyC)))
          '#f))))
   (g$id->sym$7262$1RbCyC
     g$id->sym$10942$1RbCyC
     (case-lambda
       ((g$x$7787$1RbCyC)
        (begin
          (if (not (g$stx?$7233$1RbCyC g$x$7787$1RbCyC))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$7787$1RbCyC)
            (void))
          ((case-lambda
             ((g$expr$7788$1RbCyC)
              ((case-lambda
                 ((g$sym$7789$1RbCyC)
                  (if (symbol? g$sym$7789$1RbCyC)
                    g$sym$7789$1RbCyC
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$7787$1RbCyC))))
               (if (annotation? g$expr$7788$1RbCyC)
                 (annotation-stripped g$expr$7788$1RbCyC)
                 g$expr$7788$1RbCyC))))
           (g$stx-expr$7235$1RbCyC g$x$7787$1RbCyC))))))
   (g$same-marks?$7263$1RbCyC
     g$same-marks?$10943$1RbCyC
     (case-lambda
       ((g$x$7790$1RbCyC g$y$7791$1RbCyC)
        ((case-lambda
           ((g$t$7792$1RbCyC)
            (if g$t$7792$1RbCyC
              g$t$7792$1RbCyC
              (begin
                '#f
                (if (pair? g$x$7790$1RbCyC)
                  (if (pair? g$y$7791$1RbCyC)
                    (if (eq? (car g$x$7790$1RbCyC) (car g$y$7791$1RbCyC))
                      (begin
                        '#f
                        (g$same-marks?$7263$1RbCyC
                          (cdr g$x$7790$1RbCyC)
                          (cdr g$y$7791$1RbCyC)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$7790$1RbCyC)
           (begin '#f (null? g$y$7791$1RbCyC))
           '#f)))))
   (g$bound-id=?$7264$1RbCyC
     g$bound-id=?$10944$1RbCyC
     (case-lambda
       ((g$x$7793$1RbCyC g$y$7794$1RbCyC)
        (if (eq? (g$id->sym$7262$1RbCyC g$x$7793$1RbCyC)
                 (g$id->sym$7262$1RbCyC g$y$7794$1RbCyC))
          (begin
            '#f
            (g$same-marks?$7263$1RbCyC
              (g$stx-mark*$7236$1RbCyC g$x$7793$1RbCyC)
              (g$stx-mark*$7236$1RbCyC g$y$7794$1RbCyC)))
          '#f))))
   (g$free-id=?$7265$1RbCyC
     g$free-id=?$10945$1RbCyC
     (case-lambda
       ((g$i$7795$1RbCyC g$j$7796$1RbCyC)
        ((case-lambda
           ((g$t0$7797$1RbCyC g$t1$7798$1RbCyC)
            (if ((case-lambda
                   ((g$t$7799$1RbCyC)
                    (if g$t$7799$1RbCyC
                      g$t$7799$1RbCyC
                      (begin '#f g$t1$7798$1RbCyC))))
                 g$t0$7797$1RbCyC)
              (eq? g$t0$7797$1RbCyC g$t1$7798$1RbCyC)
              (eq? (g$id->sym$7262$1RbCyC g$i$7795$1RbCyC)
                   (g$id->sym$7262$1RbCyC g$j$7796$1RbCyC)))))
         (g$id->real-label$7275$1RbCyC g$i$7795$1RbCyC)
         (g$id->real-label$7275$1RbCyC g$j$7796$1RbCyC)))))
   (g$valid-bound-ids?$7266$1RbCyC
     g$valid-bound-ids?$10946$1RbCyC
     (case-lambda
       ((g$id*$7800$1RbCyC)
        (if (g$for-all$4995$1RbCyC g$id?$7261$1RbCyC g$id*$7800$1RbCyC)
          (begin '#f (g$distinct-bound-ids?$7267$1RbCyC g$id*$7800$1RbCyC))
          '#f))))
   (g$distinct-bound-ids?$7267$1RbCyC
     g$distinct-bound-ids?$10947$1RbCyC
     (case-lambda
       ((g$id*$7801$1RbCyC)
        ((case-lambda
           ((g$t$7802$1RbCyC)
            (if g$t$7802$1RbCyC
              g$t$7802$1RbCyC
              (begin
                '#f
                (if (not (g$bound-id-member?$7268$1RbCyC
                           (car g$id*$7801$1RbCyC)
                           (cdr g$id*$7801$1RbCyC)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$7267$1RbCyC (cdr g$id*$7801$1RbCyC)))
                  '#f)))))
         (null? g$id*$7801$1RbCyC)))))
   (g$bound-id-member?$7268$1RbCyC
     g$bound-id-member?$10948$1RbCyC
     (case-lambda
       ((g$id$7803$1RbCyC g$id*$7804$1RbCyC)
        (if (pair? g$id*$7804$1RbCyC)
          (begin
            '#f
            ((case-lambda
               ((g$t$7805$1RbCyC)
                (if g$t$7805$1RbCyC
                  g$t$7805$1RbCyC
                  (begin
                    '#f
                    (g$bound-id-member?$7268$1RbCyC
                      g$id$7803$1RbCyC
                      (cdr g$id*$7804$1RbCyC))))))
             (g$bound-id=?$7264$1RbCyC
               g$id$7803$1RbCyC
               (car g$id*$7804$1RbCyC))))
          '#f))))
   (g$self-evaluating?$7269$1RbCyC
     g$self-evaluating?$10949$1RbCyC
     (case-lambda
       ((g$x$7806$1RbCyC)
        ((case-lambda
           ((g$t$7807$1RbCyC)
            (if g$t$7807$1RbCyC
              g$t$7807$1RbCyC
              ((case-lambda
                 ((g$t$7808$1RbCyC)
                  (if g$t$7808$1RbCyC
                    g$t$7808$1RbCyC
                    ((case-lambda
                       ((g$t$7809$1RbCyC)
                        (if g$t$7809$1RbCyC
                          g$t$7809$1RbCyC
                          ((case-lambda
                             ((g$t$7810$1RbCyC)
                              (if g$t$7810$1RbCyC
                                g$t$7810$1RbCyC
                                (begin '#f (bytevector? g$x$7806$1RbCyC)))))
                           (boolean? g$x$7806$1RbCyC)))))
                     (char? g$x$7806$1RbCyC)))))
               (string? g$x$7806$1RbCyC)))))
         (number? g$x$7806$1RbCyC)))))
   (g$strip-annotations$7270$1RbCyC
     g$strip-annotations$10950$1RbCyC
     (case-lambda
       ((g$x$7811$1RbCyC)
        (if (pair? g$x$7811$1RbCyC)
          (cons
            (g$strip-annotations$7270$1RbCyC (car g$x$7811$1RbCyC))
            (g$strip-annotations$7270$1RbCyC (cdr g$x$7811$1RbCyC)))
          (if (vector? g$x$7811$1RbCyC)
            (vector-map g$strip-annotations$7270$1RbCyC g$x$7811$1RbCyC)
            (if (annotation? g$x$7811$1RbCyC)
              (annotation-stripped g$x$7811$1RbCyC)
              g$x$7811$1RbCyC))))))
   (g$strip$7271$1RbCyC
     g$strip$10951$1RbCyC
     (case-lambda
       ((g$x$7812$1RbCyC g$m*$7813$1RbCyC)
        (if (g$top-marked?$7199$1RbCyC g$m*$7813$1RbCyC)
          (if ((case-lambda
                 ((g$t$7814$1RbCyC)
                  (if g$t$7814$1RbCyC
                    g$t$7814$1RbCyC
                    ((case-lambda
                       ((g$t$7815$1RbCyC)
                        (if g$t$7815$1RbCyC
                          g$t$7815$1RbCyC
                          (begin
                            '#f
                            (if (vector? g$x$7812$1RbCyC)
                              (if (> (vector-length g$x$7812$1RbCyC) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$7812$1RbCyC '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$7812$1RbCyC)
                       (begin '#f (annotation? (car g$x$7812$1RbCyC)))
                       '#f)))))
               (annotation? g$x$7812$1RbCyC))
            (g$strip-annotations$7270$1RbCyC g$x$7812$1RbCyC)
            g$x$7812$1RbCyC)
          ((letrec ((g$f$7816$1RbCyC
                      (case-lambda
                        ((g$x$7817$1RbCyC)
                         (if (g$stx?$7233$1RbCyC g$x$7817$1RbCyC)
                           (g$strip$7271$1RbCyC
                             (g$stx-expr$7235$1RbCyC g$x$7817$1RbCyC)
                             (g$stx-mark*$7236$1RbCyC g$x$7817$1RbCyC))
                           (if (annotation? g$x$7817$1RbCyC)
                             (annotation-stripped g$x$7817$1RbCyC)
                             (if (pair? g$x$7817$1RbCyC)
                               ((case-lambda
                                  ((g$a$7818$1RbCyC g$d$7819$1RbCyC)
                                   (if (if (eq? g$a$7818$1RbCyC
                                                (car g$x$7817$1RbCyC))
                                         (begin
                                           '#f
                                           (eq? g$d$7819$1RbCyC
                                                (cdr g$x$7817$1RbCyC)))
                                         '#f)
                                     g$x$7817$1RbCyC
                                     (cons g$a$7818$1RbCyC g$d$7819$1RbCyC))))
                                (g$f$7816$1RbCyC (car g$x$7817$1RbCyC))
                                (g$f$7816$1RbCyC (cdr g$x$7817$1RbCyC)))
                               (if (vector? g$x$7817$1RbCyC)
                                 ((case-lambda
                                    ((g$old$7820$1RbCyC)
                                     ((case-lambda
                                        ((g$new$7821$1RbCyC)
                                         (if (g$for-all$4995$1RbCyC
                                               eq?
                                               g$old$7820$1RbCyC
                                               g$new$7821$1RbCyC)
                                           g$x$7817$1RbCyC
                                           (list->vector g$new$7821$1RbCyC))))
                                      (map g$f$7816$1RbCyC g$old$7820$1RbCyC))))
                                  (vector->list g$x$7817$1RbCyC))
                                 g$x$7817$1RbCyC))))))))
             g$f$7816$1RbCyC)
           g$x$7812$1RbCyC)))))
   (g$stx->datum$7272$1RbCyC
     g$stx->datum$10952$1RbCyC
     (case-lambda
       ((g$x$7822$1RbCyC) (g$strip$7271$1RbCyC g$x$7822$1RbCyC '()))))
   (g$same-marks*?$7273$1RbCyC
     g$same-marks*?$10953$1RbCyC
     (case-lambda
       ((g$mark*$7823$1RbCyC g$mark**$7824$1RbCyC g$si$7825$1RbCyC)
        (if (null? g$si$7825$1RbCyC)
          '#f
          (if (g$same-marks?$7263$1RbCyC
                g$mark*$7823$1RbCyC
                (vector-ref g$mark**$7824$1RbCyC (car g$si$7825$1RbCyC)))
            (car g$si$7825$1RbCyC)
            (g$same-marks*?$7273$1RbCyC
              g$mark*$7823$1RbCyC
              g$mark**$7824$1RbCyC
              (cdr g$si$7825$1RbCyC)))))))
   (g$id->label$7274$1RbCyC
     g$id->label$10954$1RbCyC
     (case-lambda
       ((g$id$7826$1RbCyC)
        ((case-lambda
           ((g$t$7827$1RbCyC)
            (if g$t$7827$1RbCyC
              g$t$7827$1RbCyC
              (begin
                '#f
                ((case-lambda
                   ((g$t$7828$1RbCyC)
                    (if g$t$7828$1RbCyC
                      ((case-lambda
                         ((g$env$7829$1RbCyC)
                          ((case-lambda
                             ((g$rib$7830$1RbCyC)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7204$1RbCyC
                                     g$id$7826$1RbCyC
                                     g$rib$7830$1RbCyC)))
                                (case-lambda
                                  ((g$lab$7833$1RbCyC g$loc_$7834$1RbCyC)
                                   ((case-lambda
                                      ((g$loc_$7835$1RbCyC g$lab$7836$1RbCyC)
                                       (begin
                                         (g$extend-rib!$7224$1RbCyC
                                           g$rib$7830$1RbCyC
                                           g$id$7826$1RbCyC
                                           g$lab$7836$1RbCyC)
                                         g$lab$7836$1RbCyC)))
                                    g$loc_$7834$1RbCyC
                                    g$lab$7833$1RbCyC))))))
                           (g$interaction-env-rib$7617$1RbCyC
                             g$env$7829$1RbCyC))))
                       g$t$7828$1RbCyC)
                      '#f)))
                 (g$top-level-context$7657$1RbCyC))))))
         (g$id->real-label$7275$1RbCyC g$id$7826$1RbCyC)))))
   (g$id->real-label$7275$1RbCyC
     g$id->real-label$10955$1RbCyC
     (case-lambda
       ((g$id$7837$1RbCyC)
        ((case-lambda
           ((g$sym$7838$1RbCyC)
            ((letrec ((g$search$7839$1RbCyC
                        (case-lambda
                          ((g$subst*$7840$1RbCyC g$mark*$7841$1RbCyC)
                           (if (null? g$subst*$7840$1RbCyC)
                             '#f
                             (if (eq? (car g$subst*$7840$1RbCyC) 'shift)
                               (g$search$7839$1RbCyC
                                 (cdr g$subst*$7840$1RbCyC)
                                 (cdr g$mark*$7841$1RbCyC))
                               ((case-lambda
                                  ((g$rib$7842$1RbCyC)
                                   ((case-lambda
                                      ((g$t$7843$1RbCyC)
                                       (if g$t$7843$1RbCyC
                                         ((case-lambda
                                            ((g$ht$7844$1RbCyC)
                                             ((case-lambda
                                                ((g$si$7845$1RbCyC)
                                                 ((case-lambda
                                                    ((g$i$7846$1RbCyC)
                                                     (if g$i$7846$1RbCyC
                                                       (vector-ref
                                                         (g$rib-label*$7213$1RbCyC
                                                           g$rib$7842$1RbCyC)
                                                         g$i$7846$1RbCyC)
                                                       (g$search$7839$1RbCyC
                                                         (cdr g$subst*$7840$1RbCyC)
                                                         g$mark*$7841$1RbCyC))))
                                                  (if g$si$7845$1RbCyC
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$7273$1RbCyC
                                                        g$mark*$7841$1RbCyC
                                                        (g$rib-mark**$7212$1RbCyC
                                                          g$rib$7842$1RbCyC)
                                                        (reverse
                                                          g$si$7845$1RbCyC)))
                                                    '#f))))
                                              (g$hashtable-ref$5436$1RbCyC
                                                g$ht$7844$1RbCyC
                                                g$sym$7838$1RbCyC
                                                '#f))))
                                          g$t$7843$1RbCyC)
                                         ((case-lambda
                                            ((g$t$7847$1RbCyC)
                                             (if g$t$7847$1RbCyC
                                               g$t$7847$1RbCyC
                                               (begin
                                                 '#f
                                                 ((letrec ((g$f$7848$1RbCyC
                                                             (case-lambda
                                                               ((g$sym*$7849$1RbCyC
                                                                  g$mark**$7850$1RbCyC
                                                                  g$label*$7851$1RbCyC)
                                                                (if (null?
                                                                      g$sym*$7849$1RbCyC)
                                                                  (g$search$7839$1RbCyC
                                                                    (cdr g$subst*$7840$1RbCyC)
                                                                    g$mark*$7841$1RbCyC)
                                                                  (if (if (eq? (car g$sym*$7849$1RbCyC)
                                                                               g$sym$7838$1RbCyC)
                                                                        (begin
                                                                          '#f
                                                                          (g$same-marks?$7263$1RbCyC
                                                                            (car g$mark**$7850$1RbCyC)
                                                                            g$mark*$7841$1RbCyC))
                                                                        '#f)
                                                                    (car g$label*$7851$1RbCyC)
                                                                    (g$f$7848$1RbCyC
                                                                      (cdr g$sym*$7849$1RbCyC)
                                                                      (cdr g$mark**$7850$1RbCyC)
                                                                      (cdr g$label*$7851$1RbCyC))))))))
                                                    g$f$7848$1RbCyC)
                                                  (g$rib-sym*$7211$1RbCyC
                                                    g$rib$7842$1RbCyC)
                                                  (g$rib-mark**$7212$1RbCyC
                                                    g$rib$7842$1RbCyC)
                                                  (g$rib-label*$7213$1RbCyC
                                                    g$rib$7842$1RbCyC))))))
                                          (g$find-label$7223$1RbCyC
                                            g$rib$7842$1RbCyC
                                            g$sym$7838$1RbCyC
                                            g$mark*$7841$1RbCyC)))))
                                    (g$rib-sealed/freq$7214$1RbCyC
                                      g$rib$7842$1RbCyC))))
                                (car g$subst*$7840$1RbCyC))))))))
               g$search$7839$1RbCyC)
             (g$stx-subst*$7237$1RbCyC g$id$7837$1RbCyC)
             (g$stx-mark*$7236$1RbCyC g$id$7837$1RbCyC))))
         (g$id->sym$7262$1RbCyC g$id$7837$1RbCyC)))))
   (g$label->binding$7276$1RbCyC
     g$label->binding$10956$1RbCyC
     (case-lambda
       ((g$x$7852$1RbCyC g$r$7853$1RbCyC)
        ((case-lambda
           ((g$t$7854$1RbCyC)
            (if g$t$7854$1RbCyC
              ((case-lambda
                 ((g$b$7855$1RbCyC)
                  (if (if (pair? g$b$7855$1RbCyC)
                        (begin '#f (eq? (car g$b$7855$1RbCyC) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7502$1RbCyC (cdr g$b$7855$1RbCyC)))
                    (if (if (pair? g$b$7855$1RbCyC)
                          (begin '#f (eq? (car g$b$7855$1RbCyC) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$7856$1RbCyC g$loc$7857$1RbCyC)
                          (cons '$rtd (symbol-value g$loc$7857$1RbCyC))))
                       (g$cadr$5159$1RbCyC g$b$7855$1RbCyC)
                       (g$cddr$5161$1RbCyC g$b$7855$1RbCyC))
                      g$b$7855$1RbCyC))))
               g$t$7854$1RbCyC)
              ((case-lambda
                 ((g$t$7858$1RbCyC)
                  (if g$t$7858$1RbCyC
                    (cdr g$t$7858$1RbCyC)
                    ((case-lambda
                       ((g$t$7859$1RbCyC)
                        (if g$t$7859$1RbCyC
                          ((case-lambda
                             ((g$env$7860$1RbCyC)
                              ((case-lambda
                                 ((g$t$7861$1RbCyC)
                                  (if g$t$7861$1RbCyC
                                    ((case-lambda
                                       ((g$p$7862$1RbCyC)
                                        (g$cons*$4997$1RbCyC
                                          'lexical
                                          (cdr g$p$7862$1RbCyC)
                                          '#f)))
                                     g$t$7861$1RbCyC)
                                    '(displaced-lexical . #f))))
                               (g$assq$4985$1RbCyC
                                 g$x$7852$1RbCyC
                                 (g$interaction-env-locs$7619$1RbCyC
                                   g$env$7860$1RbCyC)))))
                           g$t$7859$1RbCyC)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$7657$1RbCyC)))))
               (g$assq$4985$1RbCyC g$x$7852$1RbCyC g$r$7853$1RbCyC)))))
         (g$imported-label->binding$7070$1RbCyC g$x$7852$1RbCyC)))))
   (g$make-binding$7277$1RbCyC g$make-binding$10957$1RbCyC cons)
   (g$binding-type$7278$1RbCyC g$binding-type$10958$1RbCyC car)
   (g$binding-value$7279$1RbCyC g$binding-value$10959$1RbCyC cdr)
   (g$raise-unbound-error$7280$1RbCyC
     g$raise-unbound-error$10960$1RbCyC
     (case-lambda
       ((g$id$7863$1RbCyC)
        (g$syntax-violation*$7649$1RbCyC
          '#f
          '"unbound identifier"
          g$id$7863$1RbCyC
          (g$make-undefined-violation$5783$1RbCyC)))))
   (g$syntax-type$7281$1RbCyC
     g$syntax-type$10961$1RbCyC
     (case-lambda
       ((g$e$7864$1RbCyC g$r$7865$1RbCyC)
        (if (g$id?$7261$1RbCyC g$e$7864$1RbCyC)
          ((case-lambda
             ((g$id$7866$1RbCyC)
              ((case-lambda
                 ((g$label$7867$1RbCyC)
                  ((case-lambda
                     ((g$b$7868$1RbCyC)
                      ((case-lambda
                         ((g$type$7869$1RbCyC)
                          ((case-lambda
                             (()
                              (begin
                                (if (not g$label$7867$1RbCyC)
                                  (g$raise-unbound-error$7280$1RbCyC
                                    g$id$7866$1RbCyC)
                                  (void))
                                ((case-lambda
                                   ((g$t$7870$1RbCyC)
                                    (if (g$memv$4990$1RbCyC
                                          g$t$7870$1RbCyC
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             export
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$7869$1RbCyC
                                        (g$binding-value$7279$1RbCyC
                                          g$b$7868$1RbCyC)
                                        g$id$7866$1RbCyC)
                                      (values 'other '#f '#f))))
                                 g$type$7869$1RbCyC)))))))
                       (g$binding-type$7278$1RbCyC g$b$7868$1RbCyC))))
                   (g$label->binding$7276$1RbCyC
                     g$label$7867$1RbCyC
                     g$r$7865$1RbCyC))))
               (g$id->label$7274$1RbCyC g$id$7866$1RbCyC))))
           g$e$7864$1RbCyC)
          (if (g$syntax-pair?$7254$1RbCyC g$e$7864$1RbCyC)
            ((case-lambda
               ((g$id$7871$1RbCyC)
                (if (g$id?$7261$1RbCyC g$id$7871$1RbCyC)
                  ((case-lambda
                     ((g$label$7872$1RbCyC)
                      ((case-lambda
                         ((g$b$7873$1RbCyC)
                          ((case-lambda
                             ((g$type$7874$1RbCyC)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if (not g$label$7872$1RbCyC)
                                      (g$raise-unbound-error$7280$1RbCyC
                                        g$id$7871$1RbCyC)
                                      (void))
                                    ((case-lambda
                                       ((g$t$7875$1RbCyC)
                                        (if (g$memv$4990$1RbCyC
                                              g$t$7875$1RbCyC
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 export
                                                 $core-rtd))
                                          (values
                                            g$type$7874$1RbCyC
                                            (g$binding-value$7279$1RbCyC
                                              g$b$7873$1RbCyC)
                                            g$id$7871$1RbCyC)
                                          (values 'call '#f '#f))))
                                     g$type$7874$1RbCyC)))))))
                           (g$binding-type$7278$1RbCyC g$b$7873$1RbCyC))))
                       (g$label->binding$7276$1RbCyC
                         g$label$7872$1RbCyC
                         g$r$7865$1RbCyC))))
                   (g$id->label$7274$1RbCyC g$id$7871$1RbCyC))
                  (values 'call '#f '#f))))
             (g$syntax-car$7258$1RbCyC g$e$7864$1RbCyC))
            ((case-lambda
               ((g$d$7876$1RbCyC)
                (if (g$self-evaluating?$7269$1RbCyC g$d$7876$1RbCyC)
                  (values 'constant g$d$7876$1RbCyC '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$7272$1RbCyC g$e$7864$1RbCyC)))))))
   (g$sanitize-binding$7289$1RbCyC
     g$sanitize-binding$10962$1RbCyC
     (case-lambda
       ((g$x$7877$1RbCyC g$src$7878$1RbCyC)
        (if (procedure? g$x$7877$1RbCyC)
          (g$cons*$4997$1RbCyC 'local-macro g$x$7877$1RbCyC g$src$7878$1RbCyC)
          (if (if (pair? g$x$7877$1RbCyC)
                (if (eq? (car g$x$7877$1RbCyC) 'macro!)
                  (begin '#f (procedure? (cdr g$x$7877$1RbCyC)))
                  '#f)
                '#f)
            (g$cons*$4997$1RbCyC
              'local-macro!
              (cdr g$x$7877$1RbCyC)
              g$src$7878$1RbCyC)
            (if (if (pair? g$x$7877$1RbCyC)
                  (begin '#f (eq? (car g$x$7877$1RbCyC) '$rtd))
                  '#f)
              g$x$7877$1RbCyC
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$7877$1RbCyC)))))))
   (g$make-variable-transformer$7290$1RbCyC
     g$make-variable-transformer$10963$1RbCyC
     (case-lambda
       ((g$x$7879$1RbCyC)
        (if (procedure? g$x$7879$1RbCyC)
          (cons 'macro! g$x$7879$1RbCyC)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$7879$1RbCyC)))))
   (g$variable-transformer?$7291$1RbCyC
     g$variable-transformer?$10964$1RbCyC
     (case-lambda
       ((g$x$7880$1RbCyC)
        (if (pair? g$x$7880$1RbCyC)
          (if (eq? (car g$x$7880$1RbCyC) 'macro!)
            (begin '#f (procedure? (cdr g$x$7880$1RbCyC)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$7292$1RbCyC
     g$variable-transformer-procedure$10965$1RbCyC
     (case-lambda
       ((g$x$7881$1RbCyC)
        (if (g$variable-transformer?$7291$1RbCyC g$x$7881$1RbCyC)
          (cdr g$x$7881$1RbCyC)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$7881$1RbCyC)))))
   (g$make-eval-transformer$7293$1RbCyC
     g$make-eval-transformer$10966$1RbCyC
     (case-lambda
       ((g$x$7882$1RbCyC)
        (g$sanitize-binding$7289$1RbCyC
          (eval-core (g$expanded->core$6770$1RbCyC g$x$7882$1RbCyC))
          g$x$7882$1RbCyC))))
   (g$parse-define$7479$1RbCyC
     g$parse-define$10967$1RbCyC
     (case-lambda
       ((g$x$7883$1RbCyC)
        ((case-lambda
           ((g$t$7884$1RbCyC)
            ((case-lambda
               ((g$ls/false$7885$1RbCyC)
                (if (if g$ls/false$7885$1RbCyC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7886$1RbCyC
                               g$fmls$7887$1RbCyC
                               g$b$7888$1RbCyC
                               g$b*$7889$1RbCyC)
                             (g$id?$7261$1RbCyC g$id$7886$1RbCyC)))
                          g$ls/false$7885$1RbCyC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7890$1RbCyC
                         g$fmls$7891$1RbCyC
                         g$b$7892$1RbCyC
                         g$b*$7893$1RbCyC)
                       (begin
                         (g$verify-formals$7559$1RbCyC
                           g$fmls$7891$1RbCyC
                           g$x$7883$1RbCyC)
                         (values
                           g$id$7890$1RbCyC
                           (cons
                             'defun
                             (cons
                               g$fmls$7891$1RbCyC
                               (cons g$b$7892$1RbCyC g$b*$7893$1RbCyC)))))))
                    g$ls/false$7885$1RbCyC)
                  ((case-lambda
                     ((g$t$7894$1RbCyC)
                      ((case-lambda
                         ((g$ls/false$7895$1RbCyC)
                          (if (if g$ls/false$7895$1RbCyC
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$7896$1RbCyC g$val$7897$1RbCyC)
                                       (g$id?$7261$1RbCyC g$id$7896$1RbCyC)))
                                    g$ls/false$7895$1RbCyC))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$7898$1RbCyC g$val$7899$1RbCyC)
                                 (values
                                   g$id$7898$1RbCyC
                                   (cons 'expr g$val$7899$1RbCyC))))
                              g$ls/false$7895$1RbCyC)
                            ((case-lambda
                               ((g$t$7900$1RbCyC)
                                ((case-lambda
                                   ((g$ls/false$7901$1RbCyC)
                                    (if (if g$ls/false$7901$1RbCyC
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$7902$1RbCyC)
                                                 (g$id?$7261$1RbCyC
                                                   g$id$7902$1RbCyC)))
                                              g$ls/false$7901$1RbCyC))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$7903$1RbCyC)
                                           (values
                                             g$id$7903$1RbCyC
                                             (cons
                                               'expr
                                               (g$bless$7502$1RbCyC '(void))))))
                                        g$ls/false$7901$1RbCyC)
                                      (g$syntax-violation$7650$1RbCyC
                                        '#f
                                        '"invalid syntax"
                                        g$t$7900$1RbCyC))))
                                 (g$syntax-dispatch$7539$1RbCyC
                                   g$t$7900$1RbCyC
                                   '(_ any)))))
                             g$t$7894$1RbCyC))))
                       (g$syntax-dispatch$7539$1RbCyC
                         g$t$7894$1RbCyC
                         '(_ any any)))))
                   g$t$7884$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$7884$1RbCyC
               '(_ (any . any) any . each-any)))))
         g$x$7883$1RbCyC))))
   (g$parse-define-syntax$7480$1RbCyC
     g$parse-define-syntax$10968$1RbCyC
     (case-lambda
       ((g$x$7904$1RbCyC)
        ((case-lambda
           ((g$t$7905$1RbCyC)
            ((case-lambda
               ((g$ls/false$7906$1RbCyC)
                (if (if g$ls/false$7906$1RbCyC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7907$1RbCyC g$val$7908$1RbCyC)
                             (g$id?$7261$1RbCyC g$id$7907$1RbCyC)))
                          g$ls/false$7906$1RbCyC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7909$1RbCyC g$val$7910$1RbCyC)
                       (values g$id$7909$1RbCyC g$val$7910$1RbCyC)))
                    g$ls/false$7906$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$7905$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$7905$1RbCyC '(_ any any)))))
         g$x$7904$1RbCyC))))
   (g$scheme-stx-hashtable$7481$1RbCyC
     g$scheme-stx-hashtable$10969$1RbCyC
     (g$make-eq-hashtable$5433$1RbCyC))
   (g$scheme-stx$7482$1RbCyC
     g$scheme-stx$10970$1RbCyC
     (case-lambda
       ((g$sym$7911$1RbCyC)
        ((case-lambda
           ((g$t$7912$1RbCyC)
            (if g$t$7912$1RbCyC
              g$t$7912$1RbCyC
              (begin
                '#f
                ((case-lambda
                   ((g$subst$7913$1RbCyC)
                    ((case-lambda
                       ((g$stx$7914$1RbCyC)
                        ((case-lambda
                           ((g$stx$7915$1RbCyC)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5437$1RbCyC
                                    g$scheme-stx-hashtable$7481$1RbCyC
                                    g$sym$7911$1RbCyC
                                    g$stx$7915$1RbCyC)
                                  g$stx$7915$1RbCyC))))))
                         ((case-lambda
                            ((g$t$7916$1RbCyC)
                             (if g$t$7916$1RbCyC
                               ((case-lambda
                                  ((g$x$7917$1RbCyC)
                                   ((case-lambda
                                      ((g$name$7918$1RbCyC g$label$7919$1RbCyC)
                                       (g$add-subst$7251$1RbCyC
                                         (g$make-rib$7210$1RbCyC
                                           (list g$name$7918$1RbCyC)
                                           (list g$top-mark*$7198$1RbCyC)
                                           (list g$label$7919$1RbCyC)
                                           '#f
                                           '#f)
                                         g$stx$7914$1RbCyC)))
                                    (car g$x$7917$1RbCyC)
                                    (cdr g$x$7917$1RbCyC))))
                                g$t$7916$1RbCyC)
                               g$stx$7914$1RbCyC)))
                          (g$assq$4985$1RbCyC
                            g$sym$7911$1RbCyC
                            g$subst$7913$1RbCyC)))))
                     (g$make-stx$7234$1RbCyC
                       g$sym$7911$1RbCyC
                       g$top-mark*$7198$1RbCyC
                       '()
                       '()))))
                 (g$library-subst$7028$1RbCyC
                   (g$find-library-by-name$7064$1RbCyC
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5436$1RbCyC
           g$scheme-stx-hashtable$7481$1RbCyC
           g$sym$7911$1RbCyC
           '#f)))))
   (g$lexical-var$7483$1RbCyC g$lexical-var$10971$1RbCyC car)
   (g$lexical-mutable?$7484$1RbCyC g$lexical-mutable?$10972$1RbCyC cdr)
   (g$set-lexical-mutable!$7485$1RbCyC
     g$set-lexical-mutable!$10973$1RbCyC
     set-cdr!)
   (g$add-lexical$7486$1RbCyC
     g$add-lexical$10974$1RbCyC
     (case-lambda
       ((g$lab$7920$1RbCyC g$lex$7921$1RbCyC g$r$7922$1RbCyC)
        (cons
          (g$cons*$4997$1RbCyC g$lab$7920$1RbCyC 'lexical g$lex$7921$1RbCyC '#f)
          g$r$7922$1RbCyC))))
   (g$add-lexicals$7487$1RbCyC
     g$add-lexicals$10975$1RbCyC
     (case-lambda
       ((g$lab*$7923$1RbCyC g$lex*$7924$1RbCyC g$r$7925$1RbCyC)
        (if (null? g$lab*$7923$1RbCyC)
          g$r$7925$1RbCyC
          (g$add-lexicals$7487$1RbCyC
            (cdr g$lab*$7923$1RbCyC)
            (cdr g$lex*$7924$1RbCyC)
            (g$add-lexical$7486$1RbCyC
              (car g$lab*$7923$1RbCyC)
              (car g$lex*$7924$1RbCyC)
              g$r$7925$1RbCyC))))))
   (g$letrec-helper$7488$1RbCyC
     g$letrec-helper$10976$1RbCyC
     (case-lambda
       ((g$e$7926$1RbCyC g$r$7927$1RbCyC g$mr$7928$1RbCyC g$build$7929$1RbCyC)
        ((case-lambda
           ((g$t$7930$1RbCyC)
            ((case-lambda
               ((g$ls/false$7931$1RbCyC)
                (if g$ls/false$7931$1RbCyC
                  (apply
                    (case-lambda
                      ((g$lhs*$7932$1RbCyC
                         g$rhs*$7933$1RbCyC
                         g$b$7934$1RbCyC
                         g$b*$7935$1RbCyC)
                       (if (not (g$valid-bound-ids?$7266$1RbCyC
                                  g$lhs*$7932$1RbCyC))
                         (g$invalid-fmls-error$7504$1RbCyC
                           g$e$7926$1RbCyC
                           g$lhs*$7932$1RbCyC)
                         ((case-lambda
                            ((g$lex*$7936$1RbCyC g$lab*$7937$1RbCyC)
                             ((case-lambda
                                ((g$rib$7938$1RbCyC g$r$7939$1RbCyC)
                                 ((case-lambda
                                    ((g$body$7940$1RbCyC g$rhs*$7941$1RbCyC)
                                     (g$build$7929$1RbCyC
                                       '#f
                                       g$lex*$7936$1RbCyC
                                       g$rhs*$7941$1RbCyC
                                       g$body$7940$1RbCyC)))
                                  (g$chi-internal$7568$1RbCyC
                                    (g$add-subst$7251$1RbCyC
                                      g$rib$7938$1RbCyC
                                      (cons g$b$7934$1RbCyC g$b*$7935$1RbCyC))
                                    g$r$7939$1RbCyC
                                    g$mr$7928$1RbCyC)
                                  (g$chi-expr*$7555$1RbCyC
                                    (map (case-lambda
                                           ((g$x$7942$1RbCyC)
                                            (g$add-subst$7251$1RbCyC
                                              g$rib$7938$1RbCyC
                                              g$x$7942$1RbCyC)))
                                         g$rhs*$7933$1RbCyC)
                                    g$r$7939$1RbCyC
                                    g$mr$7928$1RbCyC))))
                              (g$make-full-rib$7229$1RbCyC
                                g$lhs*$7932$1RbCyC
                                g$lab*$7937$1RbCyC)
                              (g$add-lexicals$7487$1RbCyC
                                g$lab*$7937$1RbCyC
                                g$lex*$7936$1RbCyC
                                g$r$7927$1RbCyC))))
                          (map g$gen-lexical$7200$1RbCyC g$lhs*$7932$1RbCyC)
                          (map g$gen-label$7202$1RbCyC g$lhs*$7932$1RbCyC)))))
                    g$ls/false$7931$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$7930$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$7930$1RbCyC
               '(_ #(each (any any)) any . each-any)))))
         g$e$7926$1RbCyC))))
   (g$letrec-transformer$7489$1RbCyC
     g$letrec-transformer$10977$1RbCyC
     (case-lambda
       ((g$e$7943$1RbCyC g$r$7944$1RbCyC g$mr$7945$1RbCyC)
        (g$letrec-helper$7488$1RbCyC
          g$e$7943$1RbCyC
          g$r$7944$1RbCyC
          g$mr$7945$1RbCyC
          g$build-letrec$7192$1RbCyC))))
   (g$letrec*-transformer$7490$1RbCyC
     g$letrec*-transformer$10978$1RbCyC
     (case-lambda
       ((g$e$7946$1RbCyC g$r$7947$1RbCyC g$mr$7948$1RbCyC)
        (g$letrec-helper$7488$1RbCyC
          g$e$7946$1RbCyC
          g$r$7947$1RbCyC
          g$mr$7948$1RbCyC
          g$build-letrec*$7193$1RbCyC))))
   (g$fluid-let-syntax-transformer$7491$1RbCyC
     g$fluid-let-syntax-transformer$10979$1RbCyC
     (case-lambda
       ((g$e$7949$1RbCyC g$r$7950$1RbCyC g$mr$7951$1RbCyC)
        (letrec* ((g$lookup$7952$1RbCyC
                    (case-lambda
                      ((g$x$7962$1RbCyC)
                       ((case-lambda
                          ((g$t$7963$1RbCyC)
                           (if g$t$7963$1RbCyC
                             g$t$7963$1RbCyC
                             (begin
                               '#f
                               (g$syntax-violation$7650$1RbCyC
                                 '#f
                                 '"unbound identifier"
                                 g$e$7949$1RbCyC
                                 g$x$7962$1RbCyC)))))
                        (g$id->label$7274$1RbCyC g$x$7962$1RbCyC))))))
          ((case-lambda
             ((g$t$7953$1RbCyC)
              ((case-lambda
                 ((g$ls/false$7954$1RbCyC)
                  (if g$ls/false$7954$1RbCyC
                    (apply
                      (case-lambda
                        ((g$lhs*$7955$1RbCyC
                           g$rhs*$7956$1RbCyC
                           g$b$7957$1RbCyC
                           g$b*$7958$1RbCyC)
                         (if (not (g$valid-bound-ids?$7266$1RbCyC
                                    g$lhs*$7955$1RbCyC))
                           (g$invalid-fmls-error$7504$1RbCyC
                             g$e$7949$1RbCyC
                             g$lhs*$7955$1RbCyC)
                           ((case-lambda
                              ((g$lab*$7959$1RbCyC g$rhs*$7960$1RbCyC)
                               (g$chi-internal$7568$1RbCyC
                                 (cons g$b$7957$1RbCyC g$b*$7958$1RbCyC)
                                 (append
                                   (map cons
                                        g$lab*$7959$1RbCyC
                                        g$rhs*$7960$1RbCyC)
                                   g$r$7950$1RbCyC)
                                 (append
                                   (map cons
                                        g$lab*$7959$1RbCyC
                                        g$rhs*$7960$1RbCyC)
                                   g$mr$7951$1RbCyC))))
                            (map g$lookup$7952$1RbCyC g$lhs*$7955$1RbCyC)
                            (map (case-lambda
                                   ((g$x$7961$1RbCyC)
                                    (g$make-eval-transformer$7293$1RbCyC
                                      (g$expand-transformer$7584$1RbCyC
                                        g$x$7961$1RbCyC
                                        g$mr$7951$1RbCyC))))
                                 g$rhs*$7956$1RbCyC)))))
                      g$ls/false$7954$1RbCyC)
                    (g$syntax-violation$7650$1RbCyC
                      '#f
                      '"invalid syntax"
                      g$t$7953$1RbCyC))))
               (g$syntax-dispatch$7539$1RbCyC
                 g$t$7953$1RbCyC
                 '(_ #(each (any any)) any . each-any)))))
           g$e$7949$1RbCyC)))))
   (g$type-descriptor-transformer$7492$1RbCyC
     g$type-descriptor-transformer$10980$1RbCyC
     (case-lambda
       ((g$e$7964$1RbCyC g$r$7965$1RbCyC g$mr$7966$1RbCyC)
        ((case-lambda
           ((g$t$7967$1RbCyC)
            ((case-lambda
               ((g$ls/false$7968$1RbCyC)
                (if (if g$ls/false$7968$1RbCyC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7969$1RbCyC)
                             (g$id?$7261$1RbCyC g$id$7969$1RbCyC)))
                          g$ls/false$7968$1RbCyC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7970$1RbCyC)
                       ((case-lambda
                          ((g$lab$7971$1RbCyC)
                           ((case-lambda
                              ((g$b$7972$1RbCyC)
                               ((case-lambda
                                  ((g$type$7973$1RbCyC)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$7971$1RbCyC)
                                           (g$raise-unbound-error$7280$1RbCyC
                                             g$id$7970$1RbCyC)
                                           (void))
                                         (if (not (if (eq? g$type$7973$1RbCyC
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (not (list?
                                                             (g$binding-value$7279$1RbCyC
                                                               g$b$7972$1RbCyC))))
                                                    '#f))
                                           (g$syntax-violation$7650$1RbCyC
                                             '#f
                                             '"not a record type"
                                             g$e$7964$1RbCyC)
                                           (void))
                                         (list
                                           'quote
                                           (g$binding-value$7279$1RbCyC
                                             g$b$7972$1RbCyC))))))))
                                (g$binding-type$7278$1RbCyC g$b$7972$1RbCyC))))
                            (g$label->binding$7276$1RbCyC
                              g$lab$7971$1RbCyC
                              g$r$7965$1RbCyC))))
                        (g$id->label$7274$1RbCyC g$id$7970$1RbCyC))))
                    g$ls/false$7968$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$7967$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$7967$1RbCyC '(_ any)))))
         g$e$7964$1RbCyC))))
   (g$record-type-descriptor-transformer$7493$1RbCyC
     g$record-type-descriptor-transformer$10981$1RbCyC
     (case-lambda
       ((g$e$7974$1RbCyC g$r$7975$1RbCyC g$mr$7976$1RbCyC)
        ((case-lambda
           ((g$t$7977$1RbCyC)
            ((case-lambda
               ((g$ls/false$7978$1RbCyC)
                (if (if g$ls/false$7978$1RbCyC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7979$1RbCyC)
                             (g$id?$7261$1RbCyC g$id$7979$1RbCyC)))
                          g$ls/false$7978$1RbCyC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7980$1RbCyC)
                       ((case-lambda
                          ((g$lab$7981$1RbCyC)
                           ((case-lambda
                              ((g$b$7982$1RbCyC)
                               ((case-lambda
                                  ((g$type$7983$1RbCyC)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$7981$1RbCyC)
                                           (g$raise-unbound-error$7280$1RbCyC
                                             g$id$7980$1RbCyC)
                                           (void))
                                         (if (not (if (eq? g$type$7983$1RbCyC
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7279$1RbCyC
                                                          g$b$7982$1RbCyC)))
                                                    '#f))
                                           (g$syntax-violation$7650$1RbCyC
                                             '#f
                                             '"not a record type"
                                             g$e$7974$1RbCyC)
                                           (void))
                                         (g$chi-expr$7557$1RbCyC
                                           (car (g$binding-value$7279$1RbCyC
                                                  g$b$7982$1RbCyC))
                                           g$r$7975$1RbCyC
                                           g$mr$7976$1RbCyC)))))))
                                (g$binding-type$7278$1RbCyC g$b$7982$1RbCyC))))
                            (g$label->binding$7276$1RbCyC
                              g$lab$7981$1RbCyC
                              g$r$7975$1RbCyC))))
                        (g$id->label$7274$1RbCyC g$id$7980$1RbCyC))))
                    g$ls/false$7978$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$7977$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$7977$1RbCyC '(_ any)))))
         g$e$7974$1RbCyC))))
   (g$record-constructor-descriptor-transformer$7494$1RbCyC
     g$record-constructor-descriptor-transformer$10982$1RbCyC
     (case-lambda
       ((g$e$7984$1RbCyC g$r$7985$1RbCyC g$mr$7986$1RbCyC)
        ((case-lambda
           ((g$t$7987$1RbCyC)
            ((case-lambda
               ((g$ls/false$7988$1RbCyC)
                (if (if g$ls/false$7988$1RbCyC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7989$1RbCyC)
                             (g$id?$7261$1RbCyC g$id$7989$1RbCyC)))
                          g$ls/false$7988$1RbCyC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7990$1RbCyC)
                       ((case-lambda
                          ((g$lab$7991$1RbCyC)
                           ((case-lambda
                              ((g$b$7992$1RbCyC)
                               ((case-lambda
                                  ((g$type$7993$1RbCyC)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$7991$1RbCyC)
                                           (g$raise-unbound-error$7280$1RbCyC
                                             g$id$7990$1RbCyC)
                                           (void))
                                         (if (not (if (eq? g$type$7993$1RbCyC
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7279$1RbCyC
                                                          g$b$7992$1RbCyC)))
                                                    '#f))
                                           (g$syntax-violation$7650$1RbCyC
                                             '#f
                                             '"invalid type"
                                             g$e$7984$1RbCyC)
                                           (void))
                                         (g$chi-expr$7557$1RbCyC
                                           (g$cadr$5159$1RbCyC
                                             (g$binding-value$7279$1RbCyC
                                               g$b$7992$1RbCyC))
                                           g$r$7985$1RbCyC
                                           g$mr$7986$1RbCyC)))))))
                                (g$binding-type$7278$1RbCyC g$b$7992$1RbCyC))))
                            (g$label->binding$7276$1RbCyC
                              g$lab$7991$1RbCyC
                              g$r$7985$1RbCyC))))
                        (g$id->label$7274$1RbCyC g$id$7990$1RbCyC))))
                    g$ls/false$7988$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$7987$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$7987$1RbCyC '(_ any)))))
         g$e$7984$1RbCyC))))
   (g$when-macro$7495$1RbCyC
     g$when-macro$10983$1RbCyC
     (case-lambda
       ((g$e$7994$1RbCyC)
        ((case-lambda
           ((g$t$7995$1RbCyC)
            ((case-lambda
               ((g$ls/false$7996$1RbCyC)
                (if g$ls/false$7996$1RbCyC
                  (apply
                    (case-lambda
                      ((g$test$7997$1RbCyC g$e$7998$1RbCyC g$e*$7999$1RbCyC)
                       (g$bless$7502$1RbCyC
                         (list
                           'if
                           g$test$7997$1RbCyC
                           (cons
                             'begin
                             (cons g$e$7998$1RbCyC g$e*$7999$1RbCyC))))))
                    g$ls/false$7996$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$7995$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$7995$1RbCyC
               '(_ any any . each-any)))))
         g$e$7994$1RbCyC))))
   (g$unless-macro$7496$1RbCyC
     g$unless-macro$10984$1RbCyC
     (case-lambda
       ((g$e$8000$1RbCyC)
        ((case-lambda
           ((g$t$8001$1RbCyC)
            ((case-lambda
               ((g$ls/false$8002$1RbCyC)
                (if g$ls/false$8002$1RbCyC
                  (apply
                    (case-lambda
                      ((g$test$8003$1RbCyC g$e$8004$1RbCyC g$e*$8005$1RbCyC)
                       (g$bless$7502$1RbCyC
                         (list
                           'if
                           (list 'not g$test$8003$1RbCyC)
                           (cons
                             'begin
                             (cons g$e$8004$1RbCyC g$e*$8005$1RbCyC))))))
                    g$ls/false$8002$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$8001$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$8001$1RbCyC
               '(_ any any . each-any)))))
         g$e$8000$1RbCyC))))
   (g$if-transformer$7497$1RbCyC
     g$if-transformer$10985$1RbCyC
     (case-lambda
       ((g$e$8006$1RbCyC g$r$8007$1RbCyC g$mr$8008$1RbCyC)
        ((case-lambda
           ((g$t$8009$1RbCyC)
            ((case-lambda
               ((g$ls/false$8010$1RbCyC)
                (if g$ls/false$8010$1RbCyC
                  (apply
                    (case-lambda
                      ((g$e0$8011$1RbCyC g$e1$8012$1RbCyC g$e2$8013$1RbCyC)
                       (list
                         'if
                         (g$chi-expr$7557$1RbCyC
                           g$e0$8011$1RbCyC
                           g$r$8007$1RbCyC
                           g$mr$8008$1RbCyC)
                         (g$chi-expr$7557$1RbCyC
                           g$e1$8012$1RbCyC
                           g$r$8007$1RbCyC
                           g$mr$8008$1RbCyC)
                         (g$chi-expr$7557$1RbCyC
                           g$e2$8013$1RbCyC
                           g$r$8007$1RbCyC
                           g$mr$8008$1RbCyC))))
                    g$ls/false$8010$1RbCyC)
                  ((case-lambda
                     ((g$t$8014$1RbCyC)
                      ((case-lambda
                         ((g$ls/false$8015$1RbCyC)
                          (if g$ls/false$8015$1RbCyC
                            (apply
                              (case-lambda
                                ((g$e0$8016$1RbCyC g$e1$8017$1RbCyC)
                                 (list
                                   'if
                                   (g$chi-expr$7557$1RbCyC
                                     g$e0$8016$1RbCyC
                                     g$r$8007$1RbCyC
                                     g$mr$8008$1RbCyC)
                                   (g$chi-expr$7557$1RbCyC
                                     g$e1$8017$1RbCyC
                                     g$r$8007$1RbCyC
                                     g$mr$8008$1RbCyC)
                                   (g$build-void$7191$1RbCyC))))
                              g$ls/false$8015$1RbCyC)
                            (g$syntax-violation$7650$1RbCyC
                              '#f
                              '"invalid syntax"
                              g$t$8014$1RbCyC))))
                       (g$syntax-dispatch$7539$1RbCyC
                         g$t$8014$1RbCyC
                         '(_ any any)))))
                   g$t$8009$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$8009$1RbCyC '(_ any any any)))))
         g$e$8006$1RbCyC))))
   (g$case-macro$7498$1RbCyC
     g$case-macro$10986$1RbCyC
     (case-lambda
       ((g$e$8018$1RbCyC)
        (letrec* ((g$build-last$8019$1RbCyC
                    (case-lambda
                      ((g$cls$8039$1RbCyC)
                       ((case-lambda
                          ((g$t$8040$1RbCyC)
                           ((case-lambda
                              ((g$ls/false$8041$1RbCyC)
                               (if g$ls/false$8041$1RbCyC
                                 (apply
                                   (case-lambda
                                     ((g$e$8042$1RbCyC g$e*$8043$1RbCyC)
                                      (cons
                                        'begin
                                        (cons
                                          g$e$8042$1RbCyC
                                          g$e*$8043$1RbCyC))))
                                   g$ls/false$8041$1RbCyC)
                                 ((case-lambda
                                    ((g$t$8044$1RbCyC)
                                     ((case-lambda
                                        ((g$ls/false$8045$1RbCyC)
                                         (if g$ls/false$8045$1RbCyC
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$8020$1RbCyC
                                                  g$cls$8039$1RbCyC
                                                  '(if #f #f))))
                                             g$ls/false$8045$1RbCyC)
                                           (g$syntax-violation$7650$1RbCyC
                                             '#f
                                             '"invalid syntax"
                                             g$t$8044$1RbCyC))))
                                      (g$syntax-dispatch$7539$1RbCyC
                                        g$t$8044$1RbCyC
                                        '_))))
                                  g$t$8040$1RbCyC))))
                            (g$syntax-dispatch$7539$1RbCyC
                              g$t$8040$1RbCyC
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$8039$1RbCyC))))
                  (g$build-one$8020$1RbCyC
                    (case-lambda
                      ((g$cls$8032$1RbCyC g$k$8033$1RbCyC)
                       ((case-lambda
                          ((g$t$8034$1RbCyC)
                           ((case-lambda
                              ((g$ls/false$8035$1RbCyC)
                               (if g$ls/false$8035$1RbCyC
                                 (apply
                                   (case-lambda
                                     ((g$d*$8036$1RbCyC
                                        g$e$8037$1RbCyC
                                        g$e*$8038$1RbCyC)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$8036$1RbCyC))
                                        (cons
                                          'begin
                                          (cons
                                            g$e$8037$1RbCyC
                                            g$e*$8038$1RbCyC))
                                        g$k$8033$1RbCyC)))
                                   g$ls/false$8035$1RbCyC)
                                 (g$syntax-violation$7650$1RbCyC
                                   '#f
                                   '"invalid syntax"
                                   g$t$8034$1RbCyC))))
                            (g$syntax-dispatch$7539$1RbCyC
                              g$t$8034$1RbCyC
                              '(each-any any . each-any)))))
                        g$cls$8032$1RbCyC)))))
          ((case-lambda
             ((g$t$8021$1RbCyC)
              ((case-lambda
                 ((g$ls/false$8022$1RbCyC)
                  (if g$ls/false$8022$1RbCyC
                    (apply
                      (case-lambda
                        ((g$expr$8023$1RbCyC)
                         (g$bless$7502$1RbCyC
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$8023$1RbCyC))
                               '((if #f #f)))))))
                      g$ls/false$8022$1RbCyC)
                    ((case-lambda
                       ((g$t$8024$1RbCyC)
                        ((case-lambda
                           ((g$ls/false$8025$1RbCyC)
                            (if g$ls/false$8025$1RbCyC
                              (apply
                                (case-lambda
                                  ((g$expr$8026$1RbCyC
                                     g$cls$8027$1RbCyC
                                     g$cls*$8028$1RbCyC)
                                   (g$bless$7502$1RbCyC
                                     (list
                                       'let
                                       (list (list 't g$expr$8026$1RbCyC))
                                       ((letrec ((g$f$8029$1RbCyC
                                                   (case-lambda
                                                     ((g$cls$8030$1RbCyC
                                                        g$cls*$8031$1RbCyC)
                                                      (if (null?
                                                            g$cls*$8031$1RbCyC)
                                                        (g$build-last$8019$1RbCyC
                                                          g$cls$8030$1RbCyC)
                                                        (g$build-one$8020$1RbCyC
                                                          g$cls$8030$1RbCyC
                                                          (g$f$8029$1RbCyC
                                                            (car g$cls*$8031$1RbCyC)
                                                            (cdr g$cls*$8031$1RbCyC))))))))
                                          g$f$8029$1RbCyC)
                                        g$cls$8027$1RbCyC
                                        g$cls*$8028$1RbCyC)))))
                                g$ls/false$8025$1RbCyC)
                              (g$syntax-violation$7650$1RbCyC
                                '#f
                                '"invalid syntax"
                                g$t$8024$1RbCyC))))
                         (g$syntax-dispatch$7539$1RbCyC
                           g$t$8024$1RbCyC
                           '(_ any any . each-any)))))
                     g$t$8021$1RbCyC))))
               (g$syntax-dispatch$7539$1RbCyC g$t$8021$1RbCyC '(_ any)))))
           g$e$8018$1RbCyC)))))
   (g$quote-transformer$7499$1RbCyC
     g$quote-transformer$10987$1RbCyC
     (case-lambda
       ((g$e$8046$1RbCyC g$r$8047$1RbCyC g$mr$8048$1RbCyC)
        ((case-lambda
           ((g$t$8049$1RbCyC)
            ((case-lambda
               ((g$ls/false$8050$1RbCyC)
                (if g$ls/false$8050$1RbCyC
                  (apply
                    (case-lambda
                      ((g$datum$8051$1RbCyC)
                       (list
                         'quote
                         (g$stx->datum$7272$1RbCyC g$datum$8051$1RbCyC))))
                    g$ls/false$8050$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$8049$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$8049$1RbCyC '(_ any)))))
         g$e$8046$1RbCyC))))
   (g$case-lambda-transformer$7500$1RbCyC
     g$case-lambda-transformer$10988$1RbCyC
     (case-lambda
       ((g$e$8052$1RbCyC g$r$8053$1RbCyC g$mr$8054$1RbCyC)
        ((case-lambda
           ((g$t$8055$1RbCyC)
            ((case-lambda
               ((g$ls/false$8056$1RbCyC)
                (if g$ls/false$8056$1RbCyC
                  (apply
                    (case-lambda
                      ((g$fmls*$8057$1RbCyC g$b*$8058$1RbCyC g$b**$8059$1RbCyC)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$7561$1RbCyC
                              g$e$8052$1RbCyC
                              g$fmls*$8057$1RbCyC
                              (map cons g$b*$8058$1RbCyC g$b**$8059$1RbCyC)
                              g$r$8053$1RbCyC
                              g$mr$8054$1RbCyC)))
                         (case-lambda
                           ((g$fmls*$8062$1RbCyC g$body*$8063$1RbCyC)
                            ((case-lambda
                               ((g$body*$8064$1RbCyC g$fmls*$8065$1RbCyC)
                                (g$build-case-lambda$7188$1RbCyC
                                  '#f
                                  g$fmls*$8065$1RbCyC
                                  g$body*$8064$1RbCyC)))
                             g$body*$8063$1RbCyC
                             g$fmls*$8062$1RbCyC))))))
                    g$ls/false$8056$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$8055$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$8055$1RbCyC
               '(_ . #(each (any any . each-any)))))))
         g$e$8052$1RbCyC))))
   (g$lambda-transformer$7501$1RbCyC
     g$lambda-transformer$10989$1RbCyC
     (case-lambda
       ((g$e$8066$1RbCyC g$r$8067$1RbCyC g$mr$8068$1RbCyC)
        ((case-lambda
           ((g$t$8069$1RbCyC)
            ((case-lambda
               ((g$ls/false$8070$1RbCyC)
                (if g$ls/false$8070$1RbCyC
                  (apply
                    (case-lambda
                      ((g$fmls$8071$1RbCyC g$b$8072$1RbCyC g$b*$8073$1RbCyC)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$7560$1RbCyC
                              g$e$8066$1RbCyC
                              g$fmls$8071$1RbCyC
                              (cons g$b$8072$1RbCyC g$b*$8073$1RbCyC)
                              g$r$8067$1RbCyC
                              g$mr$8068$1RbCyC)))
                         (case-lambda
                           ((g$fmls$8076$1RbCyC g$body$8077$1RbCyC)
                            ((case-lambda
                               ((g$body$8078$1RbCyC g$fmls$8079$1RbCyC)
                                (g$build-lambda$7187$1RbCyC
                                  '#f
                                  g$fmls$8079$1RbCyC
                                  g$body$8078$1RbCyC)))
                             g$body$8077$1RbCyC
                             g$fmls$8076$1RbCyC))))))
                    g$ls/false$8070$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$8069$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$8069$1RbCyC
               '(_ any any . each-any)))))
         g$e$8066$1RbCyC))))
   (g$bless$7502$1RbCyC
     g$bless$10990$1RbCyC
     (case-lambda
       ((g$x$8080$1RbCyC)
        (g$mkstx$7249$1RbCyC
          ((letrec ((g$f$8081$1RbCyC
                      (case-lambda
                        ((g$x$8082$1RbCyC)
                         (if (g$stx?$7233$1RbCyC g$x$8082$1RbCyC)
                           g$x$8082$1RbCyC
                           (if (pair? g$x$8082$1RbCyC)
                             (cons
                               (g$f$8081$1RbCyC (car g$x$8082$1RbCyC))
                               (g$f$8081$1RbCyC (cdr g$x$8082$1RbCyC)))
                             (if (symbol? g$x$8082$1RbCyC)
                               (g$scheme-stx$7482$1RbCyC g$x$8082$1RbCyC)
                               (if (vector? g$x$8082$1RbCyC)
                                 (vector-map g$f$8081$1RbCyC g$x$8082$1RbCyC)
                                 g$x$8082$1RbCyC))))))))
             g$f$8081$1RbCyC)
           g$x$8080$1RbCyC)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7503$1RbCyC
     g$with-syntax-macro$10991$1RbCyC
     (case-lambda
       ((g$e$8083$1RbCyC)
        ((case-lambda
           ((g$t$8084$1RbCyC)
            ((case-lambda
               ((g$ls/false$8085$1RbCyC)
                (if g$ls/false$8085$1RbCyC
                  (apply
                    (case-lambda
                      ((g$pat*$8086$1RbCyC
                         g$expr*$8087$1RbCyC
                         g$b$8088$1RbCyC
                         g$b*$8089$1RbCyC)
                       ((case-lambda
                          ((g$idn*$8090$1RbCyC)
                           (begin
                             (g$verify-formals$7559$1RbCyC
                               (map car g$idn*$8090$1RbCyC)
                               g$e$8083$1RbCyC)
                             ((case-lambda
                                ((g$t*$8091$1RbCyC)
                                 (g$bless$7502$1RbCyC
                                   (list
                                     'let
                                     (map list
                                          g$t*$8091$1RbCyC
                                          g$expr*$8087$1RbCyC)
                                     ((letrec ((g$f$8092$1RbCyC
                                                 (case-lambda
                                                   ((g$pat*$8093$1RbCyC
                                                      g$t*$8094$1RbCyC)
                                                    (if (null?
                                                          g$pat*$8093$1RbCyC)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8088$1RbCyC
                                                            g$b*$8089$1RbCyC)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8094$1RbCyC)
                                                        '()
                                                        (list
                                                          (car g$pat*$8093$1RbCyC)
                                                          (g$f$8092$1RbCyC
                                                            (cdr g$pat*$8093$1RbCyC)
                                                            (cdr g$t*$8094$1RbCyC)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8093$1RbCyC))
                                                            (car g$t*$8094$1RbCyC)))))))))
                                        g$f$8092$1RbCyC)
                                      g$pat*$8086$1RbCyC
                                      g$t*$8091$1RbCyC)))))
                              (g$generate-temporaries$7640$1RbCyC
                                g$expr*$8087$1RbCyC)))))
                        ((letrec ((g$f$8095$1RbCyC
                                    (case-lambda
                                      ((g$pat*$8096$1RbCyC)
                                       (if (null? g$pat*$8096$1RbCyC)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7538$1RbCyC
                                                (car g$pat*$8096$1RbCyC)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8099$1RbCyC
                                                g$idn*$8100$1RbCyC)
                                              ((case-lambda
                                                 ((g$idn*$8101$1RbCyC
                                                    g$pat$8102$1RbCyC)
                                                  (append
                                                    g$idn*$8101$1RbCyC
                                                    (g$f$8095$1RbCyC
                                                      (cdr g$pat*$8096$1RbCyC)))))
                                               g$idn*$8100$1RbCyC
                                               g$pat$8099$1RbCyC)))))))))
                           g$f$8095$1RbCyC)
                         g$pat*$8086$1RbCyC))))
                    g$ls/false$8085$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$8084$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$8084$1RbCyC
               '(_ #(each (any any)) any . each-any)))))
         g$e$8083$1RbCyC))))
   (g$invalid-fmls-error$7504$1RbCyC
     g$invalid-fmls-error$10992$1RbCyC
     (case-lambda
       ((g$stx$8103$1RbCyC g$fmls$8104$1RbCyC)
        ((case-lambda
           ((g$t$8105$1RbCyC)
            ((case-lambda
               ((g$ls/false$8106$1RbCyC)
                (if g$ls/false$8106$1RbCyC
                  (apply
                    (case-lambda
                      ((g$id*$8107$1RbCyC g$last$8108$1RbCyC)
                       ((letrec ((g$f$8109$1RbCyC
                                   (case-lambda
                                     ((g$id*$8110$1RbCyC)
                                      (if (null? g$id*$8110$1RbCyC)
                                        (values)
                                        (if (not (g$id?$7261$1RbCyC
                                                   (car g$id*$8110$1RbCyC)))
                                          (g$syntax-violation$7650$1RbCyC
                                            '#f
                                            '"not an identifier"
                                            g$stx$8103$1RbCyC
                                            (car g$id*$8110$1RbCyC))
                                          (begin
                                            (g$f$8109$1RbCyC
                                              (cdr g$id*$8110$1RbCyC))
                                            (if (g$bound-id-member?$7268$1RbCyC
                                                  (car g$id*$8110$1RbCyC)
                                                  (cdr g$id*$8110$1RbCyC))
                                              (g$syntax-violation$7650$1RbCyC
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8103$1RbCyC
                                                (car g$id*$8110$1RbCyC))
                                              (void)))))))))
                          g$f$8109$1RbCyC)
                        (if (g$id?$7261$1RbCyC g$last$8108$1RbCyC)
                          (cons g$last$8108$1RbCyC g$id*$8107$1RbCyC)
                          (if (g$syntax-null?$7256$1RbCyC g$last$8108$1RbCyC)
                            g$id*$8107$1RbCyC
                            (g$syntax-violation$7650$1RbCyC
                              '#f
                              '"not an identifier"
                              g$stx$8103$1RbCyC
                              g$last$8108$1RbCyC))))))
                    g$ls/false$8106$1RbCyC)
                  ((case-lambda
                     ((g$t$8111$1RbCyC)
                      ((case-lambda
                         ((g$ls/false$8112$1RbCyC)
                          (if g$ls/false$8112$1RbCyC
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7650$1RbCyC
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8103$1RbCyC
                                   g$fmls$8104$1RbCyC)))
                              g$ls/false$8112$1RbCyC)
                            (g$syntax-violation$7650$1RbCyC
                              '#f
                              '"invalid syntax"
                              g$t$8111$1RbCyC))))
                       (g$syntax-dispatch$7539$1RbCyC g$t$8111$1RbCyC '_))))
                   g$t$8105$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$8105$1RbCyC
               '#(each+ any () any)))))
         g$fmls$8104$1RbCyC))))
   (g$let-macro$7505$1RbCyC
     g$let-macro$10993$1RbCyC
     (case-lambda
       ((g$stx$8113$1RbCyC)
        ((case-lambda
           ((g$t$8114$1RbCyC)
            ((case-lambda
               ((g$ls/false$8115$1RbCyC)
                (if g$ls/false$8115$1RbCyC
                  (apply
                    (case-lambda
                      ((g$lhs*$8116$1RbCyC
                         g$rhs*$8117$1RbCyC
                         g$b$8118$1RbCyC
                         g$b*$8119$1RbCyC)
                       (if (g$valid-bound-ids?$7266$1RbCyC g$lhs*$8116$1RbCyC)
                         (g$bless$7502$1RbCyC
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8116$1RbCyC
                                 (cons g$b$8118$1RbCyC g$b*$8119$1RbCyC)))
                             g$rhs*$8117$1RbCyC))
                         (g$invalid-fmls-error$7504$1RbCyC
                           g$stx$8113$1RbCyC
                           g$lhs*$8116$1RbCyC))))
                    g$ls/false$8115$1RbCyC)
                  ((case-lambda
                     ((g$t$8120$1RbCyC)
                      ((case-lambda
                         ((g$ls/false$8121$1RbCyC)
                          (if (if g$ls/false$8121$1RbCyC
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8122$1RbCyC
                                         g$lhs*$8123$1RbCyC
                                         g$rhs*$8124$1RbCyC
                                         g$b$8125$1RbCyC
                                         g$b*$8126$1RbCyC)
                                       (g$id?$7261$1RbCyC g$f$8122$1RbCyC)))
                                    g$ls/false$8121$1RbCyC))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8127$1RbCyC
                                   g$lhs*$8128$1RbCyC
                                   g$rhs*$8129$1RbCyC
                                   g$b$8130$1RbCyC
                                   g$b*$8131$1RbCyC)
                                 (if (g$valid-bound-ids?$7266$1RbCyC
                                       g$lhs*$8128$1RbCyC)
                                   (g$bless$7502$1RbCyC
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8127$1RbCyC
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$8128$1RbCyC
                                                 (cons
                                                   g$b$8130$1RbCyC
                                                   g$b*$8131$1RbCyC)))))
                                         g$f$8127$1RbCyC)
                                       g$rhs*$8129$1RbCyC))
                                   (g$invalid-fmls-error$7504$1RbCyC
                                     g$stx$8113$1RbCyC
                                     g$lhs*$8128$1RbCyC))))
                              g$ls/false$8121$1RbCyC)
                            (g$syntax-violation$7650$1RbCyC
                              '#f
                              '"invalid syntax"
                              g$t$8120$1RbCyC))))
                       (g$syntax-dispatch$7539$1RbCyC
                         g$t$8120$1RbCyC
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8114$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$8114$1RbCyC
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8113$1RbCyC))))
   (g$let-values-macro$7506$1RbCyC
     g$let-values-macro$10994$1RbCyC
     (case-lambda
       ((g$stx$8132$1RbCyC)
        (letrec* ((g$rename$8133$1RbCyC
                    (case-lambda
                      ((g$x$8184$1RbCyC g$old*$8185$1RbCyC g$new*$8186$1RbCyC)
                       (begin
                         (if (not (g$id?$7261$1RbCyC g$x$8184$1RbCyC))
                           (g$syntax-violation$7650$1RbCyC
                             '#f
                             '"not an indentifier"
                             g$stx$8132$1RbCyC
                             g$x$8184$1RbCyC)
                           (void))
                         (if (g$bound-id-member?$7268$1RbCyC
                               g$x$8184$1RbCyC
                               g$old*$8185$1RbCyC)
                           (g$syntax-violation$7650$1RbCyC
                             '#f
                             '"duplicate binding"
                             g$stx$8132$1RbCyC
                             g$x$8184$1RbCyC)
                           (void))
                         ((case-lambda
                            ((g$y$8187$1RbCyC)
                             (values
                               g$y$8187$1RbCyC
                               (cons g$x$8184$1RbCyC g$old*$8185$1RbCyC)
                               (cons g$y$8187$1RbCyC g$new*$8186$1RbCyC))))
                          (gensym
                            (g$syntax->datum$7653$1RbCyC g$x$8184$1RbCyC)))))))
                  (g$rename*$8134$1RbCyC
                    (case-lambda
                      ((g$x*$8175$1RbCyC g$old*$8176$1RbCyC g$new*$8177$1RbCyC)
                       (if (null? g$x*$8175$1RbCyC)
                         (values '() g$old*$8176$1RbCyC g$new*$8177$1RbCyC)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$8133$1RbCyC
                                (car g$x*$8175$1RbCyC)
                                g$old*$8176$1RbCyC
                                g$new*$8177$1RbCyC)))
                           (case-lambda
                             ((g$x$8178$1RbCyC
                                g$old*$8179$1RbCyC
                                g$new*$8180$1RbCyC)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$8134$1RbCyC
                                     (cdr g$x*$8175$1RbCyC)
                                     g$old*$8179$1RbCyC
                                     g$new*$8180$1RbCyC)))
                                (case-lambda
                                  ((g$x*$8181$1RbCyC
                                     g$old*$8182$1RbCyC
                                     g$new*$8183$1RbCyC)
                                   (values
                                     (cons g$x$8178$1RbCyC g$x*$8181$1RbCyC)
                                     g$old*$8182$1RbCyC
                                     g$new*$8183$1RbCyC))))))))))))
          ((case-lambda
             ((g$t$8135$1RbCyC)
              ((case-lambda
                 ((g$ls/false$8136$1RbCyC)
                  (if g$ls/false$8136$1RbCyC
                    (apply
                      (case-lambda
                        ((g$b$8137$1RbCyC g$b*$8138$1RbCyC)
                         (g$cons*$4997$1RbCyC
                           (g$bless$7502$1RbCyC 'let)
                           '()
                           g$b$8137$1RbCyC
                           g$b*$8138$1RbCyC)))
                      g$ls/false$8136$1RbCyC)
                    ((case-lambda
                       ((g$t$8139$1RbCyC)
                        ((case-lambda
                           ((g$ls/false$8140$1RbCyC)
                            (if g$ls/false$8140$1RbCyC
                              (apply
                                (case-lambda
                                  ((g$lhs*$8141$1RbCyC
                                     g$rhs*$8142$1RbCyC
                                     g$b$8143$1RbCyC
                                     g$b*$8144$1RbCyC)
                                   (g$bless$7502$1RbCyC
                                     ((letrec ((g$f$8145$1RbCyC
                                                 (case-lambda
                                                   ((g$lhs*$8146$1RbCyC
                                                      g$rhs*$8147$1RbCyC
                                                      g$old*$8148$1RbCyC
                                                      g$new*$8149$1RbCyC)
                                                    (if (null?
                                                          g$lhs*$8146$1RbCyC)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$8148$1RbCyC
                                                               g$new*$8149$1RbCyC)
                                                          (cons
                                                            g$b$8143$1RbCyC
                                                            g$b*$8144$1RbCyC)))
                                                      ((case-lambda
                                                         ((g$t$8150$1RbCyC)
                                                          ((case-lambda
                                                             ((g$ls/false$8151$1RbCyC)
                                                              (if g$ls/false$8151$1RbCyC
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8152$1RbCyC)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$8134$1RbCyC
                                                                            g$x*$8152$1RbCyC
                                                                            g$old*$8148$1RbCyC
                                                                            g$new*$8149$1RbCyC)))
                                                                       (case-lambda
                                                                         ((g$y*$8156$1RbCyC
                                                                            g$old*$8157$1RbCyC
                                                                            g$new*$8158$1RbCyC)
                                                                          ((case-lambda
                                                                             ((g$new*$8159$1RbCyC
                                                                                g$old*$8160$1RbCyC
                                                                                g$y*$8161$1RbCyC)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$8147$1RbCyC))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$8161$1RbCyC
                                                                                  (g$f$8145$1RbCyC
                                                                                    (cdr g$lhs*$8146$1RbCyC)
                                                                                    (cdr g$rhs*$8147$1RbCyC)
                                                                                    g$old*$8160$1RbCyC
                                                                                    g$new*$8159$1RbCyC)))))
                                                                           g$new*$8158$1RbCyC
                                                                           g$old*$8157$1RbCyC
                                                                           g$y*$8156$1RbCyC))))))
                                                                  g$ls/false$8151$1RbCyC)
                                                                ((case-lambda
                                                                   ((g$t$8162$1RbCyC)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8163$1RbCyC)
                                                                        (if g$ls/false$8163$1RbCyC
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8164$1RbCyC
                                                                                 g$x$8165$1RbCyC)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$8133$1RbCyC
                                                                                      g$x$8165$1RbCyC
                                                                                      g$old*$8148$1RbCyC
                                                                                      g$new*$8149$1RbCyC)))
                                                                                 (case-lambda
                                                                                   ((g$y$8166$1RbCyC
                                                                                      g$old*$8167$1RbCyC
                                                                                      g$new*$8168$1RbCyC)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$8134$1RbCyC
                                                                                           g$x*$8164$1RbCyC
                                                                                           g$old*$8167$1RbCyC
                                                                                           g$new*$8168$1RbCyC)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8169$1RbCyC
                                                                                           g$old*$8170$1RbCyC
                                                                                           g$new*$8171$1RbCyC)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$8147$1RbCyC))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8169$1RbCyC
                                                                                               g$y$8166$1RbCyC)
                                                                                             (g$f$8145$1RbCyC
                                                                                               (cdr g$lhs*$8146$1RbCyC)
                                                                                               (cdr g$rhs*$8147$1RbCyC)
                                                                                               g$old*$8170$1RbCyC
                                                                                               g$new*$8171$1RbCyC)))))))))))
                                                                            g$ls/false$8163$1RbCyC)
                                                                          ((case-lambda
                                                                             ((g$t$8172$1RbCyC)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8173$1RbCyC)
                                                                                  (if g$ls/false$8173$1RbCyC
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8174$1RbCyC)
                                                                                         (g$syntax-violation$7650$1RbCyC
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8132$1RbCyC
                                                                                           g$others$8174$1RbCyC)))
                                                                                      g$ls/false$8173$1RbCyC)
                                                                                    (g$syntax-violation$7650$1RbCyC
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8172$1RbCyC))))
                                                                               (g$syntax-dispatch$7539$1RbCyC
                                                                                 g$t$8172$1RbCyC
                                                                                 'any))))
                                                                           g$t$8162$1RbCyC))))
                                                                     (g$syntax-dispatch$7539$1RbCyC
                                                                       g$t$8162$1RbCyC
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8150$1RbCyC))))
                                                           (g$syntax-dispatch$7539$1RbCyC
                                                             g$t$8150$1RbCyC
                                                             'each-any))))
                                                       (car g$lhs*$8146$1RbCyC)))))))
                                        g$f$8145$1RbCyC)
                                      g$lhs*$8141$1RbCyC
                                      g$rhs*$8142$1RbCyC
                                      '()
                                      '()))))
                                g$ls/false$8140$1RbCyC)
                              (g$syntax-violation$7650$1RbCyC
                                '#f
                                '"invalid syntax"
                                g$t$8139$1RbCyC))))
                         (g$syntax-dispatch$7539$1RbCyC
                           g$t$8139$1RbCyC
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8135$1RbCyC))))
               (g$syntax-dispatch$7539$1RbCyC
                 g$t$8135$1RbCyC
                 '(_ () any . each-any)))))
           g$stx$8132$1RbCyC)))))
   (g$let*-values-macro$7507$1RbCyC
     g$let*-values-macro$10995$1RbCyC
     (case-lambda
       ((g$stx$8188$1RbCyC)
        (letrec* ((g$check$8189$1RbCyC
                    (case-lambda
                      ((g$x*$8213$1RbCyC)
                       (if (not (null? g$x*$8213$1RbCyC))
                         ((case-lambda
                            ((g$x$8214$1RbCyC)
                             (begin
                               (if (not (g$id?$7261$1RbCyC g$x$8214$1RbCyC))
                                 (g$syntax-violation$7650$1RbCyC
                                   '#f
                                   '"not an identifier"
                                   g$stx$8188$1RbCyC
                                   g$x$8214$1RbCyC)
                                 (void))
                               (g$check$8189$1RbCyC (cdr g$x*$8213$1RbCyC))
                               (if (g$bound-id-member?$7268$1RbCyC
                                     g$x$8214$1RbCyC
                                     (cdr g$x*$8213$1RbCyC))
                                 (g$syntax-violation$7650$1RbCyC
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8188$1RbCyC
                                   g$x$8214$1RbCyC)
                                 (void)))))
                          (car g$x*$8213$1RbCyC))
                         (void))))))
          ((case-lambda
             ((g$t$8190$1RbCyC)
              ((case-lambda
                 ((g$ls/false$8191$1RbCyC)
                  (if g$ls/false$8191$1RbCyC
                    (apply
                      (case-lambda
                        ((g$b$8192$1RbCyC g$b*$8193$1RbCyC)
                         (g$cons*$4997$1RbCyC
                           (g$bless$7502$1RbCyC 'let)
                           '()
                           g$b$8192$1RbCyC
                           g$b*$8193$1RbCyC)))
                      g$ls/false$8191$1RbCyC)
                    ((case-lambda
                       ((g$t$8194$1RbCyC)
                        ((case-lambda
                           ((g$ls/false$8195$1RbCyC)
                            (if g$ls/false$8195$1RbCyC
                              (apply
                                (case-lambda
                                  ((g$lhs*$8196$1RbCyC
                                     g$rhs*$8197$1RbCyC
                                     g$b$8198$1RbCyC
                                     g$b*$8199$1RbCyC)
                                   (g$bless$7502$1RbCyC
                                     ((letrec ((g$f$8200$1RbCyC
                                                 (case-lambda
                                                   ((g$lhs*$8201$1RbCyC
                                                      g$rhs*$8202$1RbCyC)
                                                    (if (null?
                                                          g$lhs*$8201$1RbCyC)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8198$1RbCyC
                                                          g$b*$8199$1RbCyC))
                                                      ((case-lambda
                                                         ((g$t$8203$1RbCyC)
                                                          ((case-lambda
                                                             ((g$ls/false$8204$1RbCyC)
                                                              (if g$ls/false$8204$1RbCyC
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8205$1RbCyC)
                                                                     (begin
                                                                       (g$check$8189$1RbCyC
                                                                         g$x*$8205$1RbCyC)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8202$1RbCyC))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8205$1RbCyC
                                                                           (g$f$8200$1RbCyC
                                                                             (cdr g$lhs*$8201$1RbCyC)
                                                                             (cdr g$rhs*$8202$1RbCyC)))))))
                                                                  g$ls/false$8204$1RbCyC)
                                                                ((case-lambda
                                                                   ((g$t$8206$1RbCyC)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8207$1RbCyC)
                                                                        (if g$ls/false$8207$1RbCyC
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8208$1RbCyC
                                                                                 g$x$8209$1RbCyC)
                                                                               (begin
                                                                                 (g$check$8189$1RbCyC
                                                                                   (cons
                                                                                     g$x$8209$1RbCyC
                                                                                     g$x*$8208$1RbCyC))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8202$1RbCyC))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8208$1RbCyC
                                                                                       g$x$8209$1RbCyC)
                                                                                     (g$f$8200$1RbCyC
                                                                                       (cdr g$lhs*$8201$1RbCyC)
                                                                                       (cdr g$rhs*$8202$1RbCyC)))))))
                                                                            g$ls/false$8207$1RbCyC)
                                                                          ((case-lambda
                                                                             ((g$t$8210$1RbCyC)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8211$1RbCyC)
                                                                                  (if g$ls/false$8211$1RbCyC
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8212$1RbCyC)
                                                                                         (g$syntax-violation$7650$1RbCyC
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8188$1RbCyC
                                                                                           g$others$8212$1RbCyC)))
                                                                                      g$ls/false$8211$1RbCyC)
                                                                                    (g$syntax-violation$7650$1RbCyC
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8210$1RbCyC))))
                                                                               (g$syntax-dispatch$7539$1RbCyC
                                                                                 g$t$8210$1RbCyC
                                                                                 'any))))
                                                                           g$t$8206$1RbCyC))))
                                                                     (g$syntax-dispatch$7539$1RbCyC
                                                                       g$t$8206$1RbCyC
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8203$1RbCyC))))
                                                           (g$syntax-dispatch$7539$1RbCyC
                                                             g$t$8203$1RbCyC
                                                             'each-any))))
                                                       (car g$lhs*$8201$1RbCyC)))))))
                                        g$f$8200$1RbCyC)
                                      g$lhs*$8196$1RbCyC
                                      g$rhs*$8197$1RbCyC))))
                                g$ls/false$8195$1RbCyC)
                              (g$syntax-violation$7650$1RbCyC
                                '#f
                                '"invalid syntax"
                                g$t$8194$1RbCyC))))
                         (g$syntax-dispatch$7539$1RbCyC
                           g$t$8194$1RbCyC
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8190$1RbCyC))))
               (g$syntax-dispatch$7539$1RbCyC
                 g$t$8190$1RbCyC
                 '(_ () any . each-any)))))
           g$stx$8188$1RbCyC)))))
   (g$trace-lambda-macro$7508$1RbCyC
     g$trace-lambda-macro$10996$1RbCyC
     (case-lambda
       ((g$stx$8215$1RbCyC)
        ((case-lambda
           ((g$t$8216$1RbCyC)
            ((case-lambda
               ((g$ls/false$8217$1RbCyC)
                (if g$ls/false$8217$1RbCyC
                  (apply
                    (case-lambda
                      ((g$who$8218$1RbCyC
                         g$fmls$8219$1RbCyC
                         g$b$8220$1RbCyC
                         g$b*$8221$1RbCyC)
                       (if (g$valid-bound-ids?$7266$1RbCyC g$fmls$8219$1RbCyC)
                         (g$bless$7502$1RbCyC
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8218$1RbCyC)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8219$1RbCyC
                                 (cons g$b$8220$1RbCyC g$b*$8221$1RbCyC)))))
                         (g$invalid-fmls-error$7504$1RbCyC
                           g$stx$8215$1RbCyC
                           g$fmls$8219$1RbCyC))))
                    g$ls/false$8217$1RbCyC)
                  ((case-lambda
                     ((g$t$8222$1RbCyC)
                      ((case-lambda
                         ((g$ls/false$8223$1RbCyC)
                          (if g$ls/false$8223$1RbCyC
                            (apply
                              (case-lambda
                                ((g$who$8224$1RbCyC
                                   g$fmls$8225$1RbCyC
                                   g$last$8226$1RbCyC
                                   g$b$8227$1RbCyC
                                   g$b*$8228$1RbCyC)
                                 (if (g$valid-bound-ids?$7266$1RbCyC
                                       (cons
                                         g$last$8226$1RbCyC
                                         g$fmls$8225$1RbCyC))
                                   (g$bless$7502$1RbCyC
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8224$1RbCyC)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8225$1RbCyC
                                             g$last$8226$1RbCyC)
                                           (cons
                                             g$b$8227$1RbCyC
                                             g$b*$8228$1RbCyC)))))
                                   (g$invalid-fmls-error$7504$1RbCyC
                                     g$stx$8215$1RbCyC
                                     (append
                                       g$fmls$8225$1RbCyC
                                       g$last$8226$1RbCyC)))))
                              g$ls/false$8223$1RbCyC)
                            (g$syntax-violation$7650$1RbCyC
                              '#f
                              '"invalid syntax"
                              g$t$8222$1RbCyC))))
                       (g$syntax-dispatch$7539$1RbCyC
                         g$t$8222$1RbCyC
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8216$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$8216$1RbCyC
               '(_ any each-any any . each-any)))))
         g$stx$8215$1RbCyC))))
   (g$trace-define-macro$7509$1RbCyC
     g$trace-define-macro$10997$1RbCyC
     (case-lambda
       ((g$stx$8229$1RbCyC)
        ((case-lambda
           ((g$t$8230$1RbCyC)
            ((case-lambda
               ((g$ls/false$8231$1RbCyC)
                (if g$ls/false$8231$1RbCyC
                  (apply
                    (case-lambda
                      ((g$who$8232$1RbCyC
                         g$fmls$8233$1RbCyC
                         g$b$8234$1RbCyC
                         g$b*$8235$1RbCyC)
                       (if (g$valid-bound-ids?$7266$1RbCyC g$fmls$8233$1RbCyC)
                         (g$bless$7502$1RbCyC
                           (list
                             'define
                             g$who$8232$1RbCyC
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8232$1RbCyC)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8233$1RbCyC
                                   (cons g$b$8234$1RbCyC g$b*$8235$1RbCyC))))))
                         (g$invalid-fmls-error$7504$1RbCyC
                           g$stx$8229$1RbCyC
                           g$fmls$8233$1RbCyC))))
                    g$ls/false$8231$1RbCyC)
                  ((case-lambda
                     ((g$t$8236$1RbCyC)
                      ((case-lambda
                         ((g$ls/false$8237$1RbCyC)
                          (if g$ls/false$8237$1RbCyC
                            (apply
                              (case-lambda
                                ((g$who$8238$1RbCyC
                                   g$fmls$8239$1RbCyC
                                   g$last$8240$1RbCyC
                                   g$b$8241$1RbCyC
                                   g$b*$8242$1RbCyC)
                                 (if (g$valid-bound-ids?$7266$1RbCyC
                                       (cons
                                         g$last$8240$1RbCyC
                                         g$fmls$8239$1RbCyC))
                                   (g$bless$7502$1RbCyC
                                     (list
                                       'define
                                       g$who$8238$1RbCyC
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8238$1RbCyC)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8239$1RbCyC
                                               g$last$8240$1RbCyC)
                                             (cons
                                               g$b$8241$1RbCyC
                                               g$b*$8242$1RbCyC))))))
                                   (g$invalid-fmls-error$7504$1RbCyC
                                     g$stx$8229$1RbCyC
                                     (append
                                       g$fmls$8239$1RbCyC
                                       g$last$8240$1RbCyC)))))
                              g$ls/false$8237$1RbCyC)
                            ((case-lambda
                               ((g$t$8243$1RbCyC)
                                ((case-lambda
                                   ((g$ls/false$8244$1RbCyC)
                                    (if g$ls/false$8244$1RbCyC
                                      (apply
                                        (case-lambda
                                          ((g$who$8245$1RbCyC
                                             g$expr$8246$1RbCyC)
                                           (if (g$id?$7261$1RbCyC
                                                 g$who$8245$1RbCyC)
                                             (g$bless$7502$1RbCyC
                                               (list
                                                 'define
                                                 g$who$8245$1RbCyC
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8246$1RbCyC))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8245$1RbCyC)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$7650$1RbCyC
                                               '#f
                                               '"invalid name"
                                               g$stx$8229$1RbCyC))))
                                        g$ls/false$8244$1RbCyC)
                                      (g$syntax-violation$7650$1RbCyC
                                        '#f
                                        '"invalid syntax"
                                        g$t$8243$1RbCyC))))
                                 (g$syntax-dispatch$7539$1RbCyC
                                   g$t$8243$1RbCyC
                                   '(_ any any)))))
                             g$t$8236$1RbCyC))))
                       (g$syntax-dispatch$7539$1RbCyC
                         g$t$8236$1RbCyC
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8230$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$8230$1RbCyC
               '(_ (any . each-any) any . each-any)))))
         g$stx$8229$1RbCyC))))
   (g$trace-define-syntax-macro$7510$1RbCyC
     g$trace-define-syntax-macro$10998$1RbCyC
     (case-lambda
       ((g$stx$8247$1RbCyC)
        ((case-lambda
           ((g$t$8248$1RbCyC)
            ((case-lambda
               ((g$ls/false$8249$1RbCyC)
                (if g$ls/false$8249$1RbCyC
                  (apply
                    (case-lambda
                      ((g$who$8250$1RbCyC g$expr$8251$1RbCyC)
                       (if (g$id?$7261$1RbCyC g$who$8250$1RbCyC)
                         (g$bless$7502$1RbCyC
                           (list
                             'define-syntax
                             g$who$8250$1RbCyC
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8250$1RbCyC)
                               g$expr$8251$1RbCyC)))
                         (g$syntax-violation$7650$1RbCyC
                           '#f
                           '"invalid name"
                           g$stx$8247$1RbCyC))))
                    g$ls/false$8249$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$8248$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$8248$1RbCyC '(_ any any)))))
         g$stx$8247$1RbCyC))))
   (g$trace-let/rec-syntax$7511$1RbCyC
     g$trace-let/rec-syntax$10999$1RbCyC
     (case-lambda
       ((g$who$8252$1RbCyC)
        (case-lambda
          ((g$stx$8253$1RbCyC)
           ((case-lambda
              ((g$t$8254$1RbCyC)
               ((case-lambda
                  ((g$ls/false$8255$1RbCyC)
                   (if g$ls/false$8255$1RbCyC
                     (apply
                       (case-lambda
                         ((g$lhs*$8256$1RbCyC
                            g$rhs*$8257$1RbCyC
                            g$b$8258$1RbCyC
                            g$b*$8259$1RbCyC)
                          (if (g$valid-bound-ids?$7266$1RbCyC
                                g$lhs*$8256$1RbCyC)
                            ((case-lambda
                               ((g$rhs*$8260$1RbCyC)
                                (g$bless$7502$1RbCyC
                                  (cons
                                    g$who$8252$1RbCyC
                                    (cons
                                      (map list
                                           g$lhs*$8256$1RbCyC
                                           g$rhs*$8260$1RbCyC)
                                      (cons
                                        g$b$8258$1RbCyC
                                        g$b*$8259$1RbCyC))))))
                             (map (case-lambda
                                    ((g$lhs$8261$1RbCyC g$rhs$8262$1RbCyC)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$8261$1RbCyC)
                                       g$rhs$8262$1RbCyC)))
                                  g$lhs*$8256$1RbCyC
                                  g$rhs*$8257$1RbCyC))
                            (g$invalid-fmls-error$7504$1RbCyC
                              g$stx$8253$1RbCyC
                              g$lhs*$8256$1RbCyC))))
                       g$ls/false$8255$1RbCyC)
                     (g$syntax-violation$7650$1RbCyC
                       '#f
                       '"invalid syntax"
                       g$t$8254$1RbCyC))))
                (g$syntax-dispatch$7539$1RbCyC
                  g$t$8254$1RbCyC
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8253$1RbCyC))))))
   (g$trace-let-syntax-macro$7512$1RbCyC
     g$trace-let-syntax-macro$11000$1RbCyC
     (g$trace-let/rec-syntax$7511$1RbCyC 'let-syntax))
   (g$trace-letrec-syntax-macro$7513$1RbCyC
     g$trace-letrec-syntax-macro$11001$1RbCyC
     (g$trace-let/rec-syntax$7511$1RbCyC 'letrec-syntax))
   (g$guard-macro$7514$1RbCyC
     g$guard-macro$11002$1RbCyC
     (case-lambda
       ((g$x$8263$1RbCyC)
        (letrec* ((g$gen-clauses$8264$1RbCyC
                    (case-lambda
                      ((g$con$8276$1RbCyC
                         g$outerk$8277$1RbCyC
                         g$clause*$8278$1RbCyC)
                       (letrec* ((g$f$8279$1RbCyC
                                   (case-lambda
                                     ((g$x$8307$1RbCyC g$k$8308$1RbCyC)
                                      ((case-lambda
                                         ((g$t$8309$1RbCyC)
                                          ((case-lambda
                                             ((g$ls/false$8310$1RbCyC)
                                              (if g$ls/false$8310$1RbCyC
                                                (apply
                                                  (case-lambda
                                                    ((g$e$8311$1RbCyC
                                                       g$p$8312$1RbCyC)
                                                     ((case-lambda
                                                        ((g$t$8313$1RbCyC)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$8313$1RbCyC
                                                               g$e$8311$1RbCyC))
                                                           (list
                                                             'if
                                                             g$t$8313$1RbCyC
                                                             (list
                                                               g$p$8312$1RbCyC
                                                               g$t$8313$1RbCyC)
                                                             g$k$8308$1RbCyC))))
                                                      (gensym))))
                                                  g$ls/false$8310$1RbCyC)
                                                ((case-lambda
                                                   ((g$t$8314$1RbCyC)
                                                    ((case-lambda
                                                       ((g$ls/false$8315$1RbCyC)
                                                        (if g$ls/false$8315$1RbCyC
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8316$1RbCyC)
                                                               ((case-lambda
                                                                  ((g$t$8317$1RbCyC)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$8317$1RbCyC
                                                                         g$e$8316$1RbCyC))
                                                                     (list
                                                                       'if
                                                                       g$t$8317$1RbCyC
                                                                       g$t$8317$1RbCyC
                                                                       g$k$8308$1RbCyC))))
                                                                (gensym))))
                                                            g$ls/false$8315$1RbCyC)
                                                          ((case-lambda
                                                             ((g$t$8318$1RbCyC)
                                                              ((case-lambda
                                                                 ((g$ls/false$8319$1RbCyC)
                                                                  (if g$ls/false$8319$1RbCyC
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$8320$1RbCyC
                                                                           g$v$8321$1RbCyC
                                                                           g$v*$8322$1RbCyC)
                                                                         (list
                                                                           'if
                                                                           g$e$8320$1RbCyC
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$8321$1RbCyC
                                                                               g$v*$8322$1RbCyC))
                                                                           g$k$8308$1RbCyC)))
                                                                      g$ls/false$8319$1RbCyC)
                                                                    ((case-lambda
                                                                       ((g$t$8323$1RbCyC)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8324$1RbCyC)
                                                                            (if g$ls/false$8324$1RbCyC
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$7650$1RbCyC
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$8307$1RbCyC)))
                                                                                g$ls/false$8324$1RbCyC)
                                                                              (g$syntax-violation$7650$1RbCyC
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8323$1RbCyC))))
                                                                         (g$syntax-dispatch$7539$1RbCyC
                                                                           g$t$8323$1RbCyC
                                                                           '_))))
                                                                     g$t$8318$1RbCyC))))
                                                               (g$syntax-dispatch$7539$1RbCyC
                                                                 g$t$8318$1RbCyC
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$8314$1RbCyC))))
                                                     (g$syntax-dispatch$7539$1RbCyC
                                                       g$t$8314$1RbCyC
                                                       '(any)))))
                                                 g$t$8309$1RbCyC))))
                                           (g$syntax-dispatch$7539$1RbCyC
                                             g$t$8309$1RbCyC
                                             '(any #(scheme-id =>) any)))))
                                       g$x$8307$1RbCyC))))
                                 (g$f*$8280$1RbCyC
                                   (case-lambda
                                     ((g$x*$8287$1RbCyC)
                                      ((case-lambda
                                         ((g$t$8288$1RbCyC)
                                          ((case-lambda
                                             ((g$ls/false$8289$1RbCyC)
                                              (if g$ls/false$8289$1RbCyC
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$8276$1RbCyC)
                                                       '#t)))
                                                  g$ls/false$8289$1RbCyC)
                                                ((case-lambda
                                                   ((g$t$8290$1RbCyC)
                                                    ((case-lambda
                                                       ((g$ls/false$8291$1RbCyC)
                                                        (if g$ls/false$8291$1RbCyC
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8292$1RbCyC
                                                                 g$e*$8293$1RbCyC)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$8292$1RbCyC
                                                                     g$e*$8293$1RbCyC))
                                                                 '#f)))
                                                            g$ls/false$8291$1RbCyC)
                                                          ((case-lambda
                                                             ((g$t$8294$1RbCyC)
                                                              ((case-lambda
                                                                 ((g$ls/false$8295$1RbCyC)
                                                                  (if g$ls/false$8295$1RbCyC
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$8296$1RbCyC
                                                                           g$cls*$8297$1RbCyC)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$8280$1RbCyC
                                                                                g$cls*$8297$1RbCyC)))
                                                                           (case-lambda
                                                                             ((g$e$8300$1RbCyC
                                                                                g$g$8301$1RbCyC)
                                                                              ((case-lambda
                                                                                 ((g$g$8302$1RbCyC
                                                                                    g$e$8303$1RbCyC)
                                                                                  (values
                                                                                    (g$f$8279$1RbCyC
                                                                                      g$cls$8296$1RbCyC
                                                                                      g$e$8303$1RbCyC)
                                                                                    g$g$8302$1RbCyC)))
                                                                               g$g$8301$1RbCyC
                                                                               g$e$8300$1RbCyC))))))
                                                                      g$ls/false$8295$1RbCyC)
                                                                    ((case-lambda
                                                                       ((g$t$8304$1RbCyC)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8305$1RbCyC)
                                                                            (if g$ls/false$8305$1RbCyC
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$8306$1RbCyC)
                                                                                   (g$syntax-violation$7650$1RbCyC
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$8306$1RbCyC)))
                                                                                g$ls/false$8305$1RbCyC)
                                                                              (g$syntax-violation$7650$1RbCyC
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8304$1RbCyC))))
                                                                         (g$syntax-dispatch$7539$1RbCyC
                                                                           g$t$8304$1RbCyC
                                                                           'any))))
                                                                     g$t$8294$1RbCyC))))
                                                               (g$syntax-dispatch$7539$1RbCyC
                                                                 g$t$8294$1RbCyC
                                                                 '(any .
                                                                       any)))))
                                                           g$t$8290$1RbCyC))))
                                                     (g$syntax-dispatch$7539$1RbCyC
                                                       g$t$8290$1RbCyC
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$8288$1RbCyC))))
                                           (g$syntax-dispatch$7539$1RbCyC
                                             g$t$8288$1RbCyC
                                             '()))))
                                       g$x*$8287$1RbCyC)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$8280$1RbCyC g$clause*$8278$1RbCyC)))
                           (case-lambda
                             ((g$code$8283$1RbCyC g$raisek$8284$1RbCyC)
                              ((case-lambda
                                 ((g$raisek$8285$1RbCyC g$code$8286$1RbCyC)
                                  (if g$raisek$8285$1RbCyC
                                    (list
                                      g$outerk$8277$1RbCyC
                                      g$code$8286$1RbCyC)
                                    g$code$8286$1RbCyC)))
                               g$raisek$8284$1RbCyC
                               g$code$8283$1RbCyC)))))))))
          ((case-lambda
             ((g$t$8265$1RbCyC)
              ((case-lambda
                 ((g$ls/false$8266$1RbCyC)
                  (if (if g$ls/false$8266$1RbCyC
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$8267$1RbCyC
                                 g$clause*$8268$1RbCyC
                                 g$b$8269$1RbCyC
                                 g$b*$8270$1RbCyC)
                               (g$id?$7261$1RbCyC g$con$8267$1RbCyC)))
                            g$ls/false$8266$1RbCyC))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$8271$1RbCyC
                           g$clause*$8272$1RbCyC
                           g$b$8273$1RbCyC
                           g$b*$8274$1RbCyC)
                         ((case-lambda
                            ((g$outerk$8275$1RbCyC)
                             (g$bless$7502$1RbCyC
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$8275$1RbCyC)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$8271$1RbCyC)
                                           (g$gen-clauses$8264$1RbCyC
                                             g$con$8271$1RbCyC
                                             g$outerk$8275$1RbCyC
                                             g$clause*$8272$1RbCyC))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$8273$1RbCyC
                                                 g$b*$8274$1RbCyC))))))))))))
                          (gensym))))
                      g$ls/false$8266$1RbCyC)
                    (g$syntax-violation$7650$1RbCyC
                      '#f
                      '"invalid syntax"
                      g$t$8265$1RbCyC))))
               (g$syntax-dispatch$7539$1RbCyC
                 g$t$8265$1RbCyC
                 '(_ (any . each-any) any . each-any)))))
           g$x$8263$1RbCyC)))))
   (g$define-enumeration-macro$7515$1RbCyC
     g$define-enumeration-macro$11003$1RbCyC
     (case-lambda
       ((g$stx$8325$1RbCyC)
        (letrec* ((g$set?$8326$1RbCyC
                    (case-lambda
                      ((g$x$8339$1RbCyC)
                       ((case-lambda
                          ((g$t$8340$1RbCyC)
                           (if g$t$8340$1RbCyC
                             g$t$8340$1RbCyC
                             (begin
                               '#f
                               (if (not (g$memq$4989$1RbCyC
                                          (car g$x$8339$1RbCyC)
                                          (cdr g$x$8339$1RbCyC)))
                                 (begin
                                   '#f
                                   (g$set?$8326$1RbCyC (cdr g$x$8339$1RbCyC)))
                                 '#f)))))
                        (null? g$x$8339$1RbCyC)))))
                  (g$remove-dups$8327$1RbCyC
                    (case-lambda
                      ((g$ls$8338$1RbCyC)
                       (if (null? g$ls$8338$1RbCyC)
                         '()
                         (cons
                           (car g$ls$8338$1RbCyC)
                           (g$remove-dups$8327$1RbCyC
                             (g$remq$5002$1RbCyC
                               (car g$ls$8338$1RbCyC)
                               (cdr g$ls$8338$1RbCyC)))))))))
          ((case-lambda
             ((g$t$8328$1RbCyC)
              ((case-lambda
                 ((g$ls/false$8329$1RbCyC)
                  (if (if g$ls/false$8329$1RbCyC
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8330$1RbCyC
                                 g$id*$8331$1RbCyC
                                 g$maker$8332$1RbCyC)
                               (if (g$id?$7261$1RbCyC g$name$8330$1RbCyC)
                                 (if (g$id?$7261$1RbCyC g$maker$8332$1RbCyC)
                                   (begin
                                     '#f
                                     (g$for-all$4995$1RbCyC
                                       g$id?$7261$1RbCyC
                                       g$id*$8331$1RbCyC))
                                   '#f)
                                 '#f)))
                            g$ls/false$8329$1RbCyC))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8333$1RbCyC
                           g$id*$8334$1RbCyC
                           g$maker$8335$1RbCyC)
                         ((case-lambda
                            ((g$name*$8336$1RbCyC g$mk$8337$1RbCyC)
                             (g$bless$7502$1RbCyC
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8337$1RbCyC
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8336$1RbCyC))))
                                 (list
                                   'define-syntax
                                   g$name$8333$1RbCyC
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8336$1RbCyC))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8333$1RbCyC)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8335$1RbCyC
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8335$1RbCyC)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8336$1RbCyC))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8335$1RbCyC)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8337$1RbCyC
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8327$1RbCyC
                            (g$syntax->datum$7653$1RbCyC g$id*$8334$1RbCyC))
                          (gensym))))
                      g$ls/false$8329$1RbCyC)
                    (g$syntax-violation$7650$1RbCyC
                      '#f
                      '"invalid syntax"
                      g$t$8328$1RbCyC))))
               (g$syntax-dispatch$7539$1RbCyC
                 g$t$8328$1RbCyC
                 '(_ any each-any any)))))
           g$stx$8325$1RbCyC)))))
   (g$time-macro$7516$1RbCyC
     g$time-macro$11004$1RbCyC
     (case-lambda
       ((g$stx$8341$1RbCyC)
        ((case-lambda
           ((g$t$8342$1RbCyC)
            ((case-lambda
               ((g$ls/false$8343$1RbCyC)
                (if g$ls/false$8343$1RbCyC
                  (apply
                    (case-lambda
                      ((g$expr$8344$1RbCyC)
                       ((case-lambda
                          ((g$str$8345$1RbCyC)
                           (g$bless$7502$1RbCyC
                             (list
                               'time-it
                               g$str$8345$1RbCyC
                               (list 'lambda '() g$expr$8344$1RbCyC)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6232$1RbCyC)))
                          (case-lambda
                            ((g$p$8348$1RbCyC g$e$8349$1RbCyC)
                             ((case-lambda
                                ((g$e$8350$1RbCyC g$p$8351$1RbCyC)
                                 (begin
                                   (write
                                     (g$syntax->datum$7653$1RbCyC
                                       g$expr$8344$1RbCyC)
                                     g$p$8351$1RbCyC)
                                   (g$e$8350$1RbCyC))))
                              g$e$8349$1RbCyC
                              g$p$8348$1RbCyC)))))))
                    g$ls/false$8343$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$8342$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$8342$1RbCyC '(_ any)))))
         g$stx$8341$1RbCyC))))
   (g$delay-macro$7517$1RbCyC
     g$delay-macro$11005$1RbCyC
     (case-lambda
       ((g$stx$8352$1RbCyC)
        ((case-lambda
           ((g$t$8353$1RbCyC)
            ((case-lambda
               ((g$ls/false$8354$1RbCyC)
                (if g$ls/false$8354$1RbCyC
                  (apply
                    (case-lambda
                      ((g$expr$8355$1RbCyC)
                       (g$bless$7502$1RbCyC
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8355$1RbCyC)))))
                    g$ls/false$8354$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$8353$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$8353$1RbCyC '(_ any)))))
         g$stx$8352$1RbCyC))))
   (g$assert-macro$7518$1RbCyC
     g$assert-macro$11006$1RbCyC
     (case-lambda
       ((g$stx$8356$1RbCyC)
        ((case-lambda
           ((g$t$8357$1RbCyC)
            ((case-lambda
               ((g$ls/false$8358$1RbCyC)
                (if g$ls/false$8358$1RbCyC
                  (apply
                    (case-lambda
                      ((g$expr$8359$1RbCyC)
                       ((case-lambda
                          ((g$pos$8360$1RbCyC)
                           (g$bless$7502$1RbCyC
                             (list
                               'unless
                               g$expr$8359$1RbCyC
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$8359$1RbCyC)
                                 (list 'quote g$pos$8360$1RbCyC))))))
                        ((case-lambda
                           ((g$t$8361$1RbCyC)
                            (if g$t$8361$1RbCyC
                              g$t$8361$1RbCyC
                              (begin
                                '#f
                                (g$expression-position$7645$1RbCyC
                                  g$expr$8359$1RbCyC)))))
                         (g$expression-position$7645$1RbCyC
                           g$stx$8356$1RbCyC)))))
                    g$ls/false$8358$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$8357$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$8357$1RbCyC '(_ any)))))
         g$stx$8356$1RbCyC))))
   (g$endianness-macro$7519$1RbCyC
     g$endianness-macro$11007$1RbCyC
     (case-lambda
       ((g$stx$8362$1RbCyC)
        ((case-lambda
           ((g$t$8363$1RbCyC)
            ((case-lambda
               ((g$ls/false$8364$1RbCyC)
                (if g$ls/false$8364$1RbCyC
                  (apply
                    (case-lambda
                      ((g$e$8365$1RbCyC)
                       ((case-lambda
                          ((g$t$8366$1RbCyC)
                           (if (g$memv$4990$1RbCyC g$t$8366$1RbCyC '(little))
                             (g$bless$7502$1RbCyC ''little)
                             (if (g$memv$4990$1RbCyC g$t$8366$1RbCyC '(big))
                               (g$bless$7502$1RbCyC ''big)
                               (g$syntax-violation$7650$1RbCyC
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8362$1RbCyC)))))
                        (g$syntax->datum$7653$1RbCyC g$e$8365$1RbCyC))))
                    g$ls/false$8364$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$8363$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$8363$1RbCyC '(_ any)))))
         g$stx$8362$1RbCyC))))
   (g$identifier-syntax-macro$7520$1RbCyC
     g$identifier-syntax-macro$11008$1RbCyC
     (case-lambda
       ((g$stx$8367$1RbCyC)
        ((case-lambda
           ((g$t$8368$1RbCyC)
            ((case-lambda
               ((g$ls/false$8369$1RbCyC)
                (if g$ls/false$8369$1RbCyC
                  (apply
                    (case-lambda
                      ((g$expr$8370$1RbCyC)
                       (g$bless$7502$1RbCyC
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8370$1RbCyC))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8370$1RbCyC)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8369$1RbCyC)
                  ((case-lambda
                     ((g$t$8371$1RbCyC)
                      ((case-lambda
                         ((g$ls/false$8372$1RbCyC)
                          (if (if g$ls/false$8372$1RbCyC
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8373$1RbCyC
                                         g$expr1$8374$1RbCyC
                                         g$id2$8375$1RbCyC
                                         g$expr2$8376$1RbCyC
                                         g$expr3$8377$1RbCyC)
                                       (if (g$id?$7261$1RbCyC g$id1$8373$1RbCyC)
                                         (if (g$id?$7261$1RbCyC
                                               g$id2$8375$1RbCyC)
                                           (begin
                                             '#f
                                             (g$id?$7261$1RbCyC
                                               g$expr2$8376$1RbCyC))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8372$1RbCyC))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8378$1RbCyC
                                   g$expr1$8379$1RbCyC
                                   g$id2$8380$1RbCyC
                                   g$expr2$8381$1RbCyC
                                   g$expr3$8382$1RbCyC)
                                 (g$bless$7502$1RbCyC
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8379$1RbCyC))
                                         (list
                                           (list 'set! 'id g$expr2$8381$1RbCyC)
                                           (list 'syntax g$expr3$8382$1RbCyC))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8379$1RbCyC
                                               '(e* ...))))))))))
                              g$ls/false$8372$1RbCyC)
                            (g$syntax-violation$7650$1RbCyC
                              '#f
                              '"invalid syntax"
                              g$t$8371$1RbCyC))))
                       (g$syntax-dispatch$7539$1RbCyC
                         g$t$8371$1RbCyC
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8368$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$8368$1RbCyC '(_ any)))))
         g$stx$8367$1RbCyC))))
   (g$do-macro$7521$1RbCyC
     g$do-macro$11009$1RbCyC
     (case-lambda
       ((g$stx$8383$1RbCyC)
        (letrec* ((g$bind$8384$1RbCyC
                    (case-lambda
                      ((g$x$8396$1RbCyC)
                       ((case-lambda
                          ((g$t$8397$1RbCyC)
                           ((case-lambda
                              ((g$ls/false$8398$1RbCyC)
                               (if g$ls/false$8398$1RbCyC
                                 (apply
                                   (case-lambda
                                     ((g$x$8399$1RbCyC g$init$8400$1RbCyC)
                                      (list
                                        g$x$8399$1RbCyC
                                        g$init$8400$1RbCyC
                                        g$x$8399$1RbCyC)))
                                   g$ls/false$8398$1RbCyC)
                                 ((case-lambda
                                    ((g$t$8401$1RbCyC)
                                     ((case-lambda
                                        ((g$ls/false$8402$1RbCyC)
                                         (if g$ls/false$8402$1RbCyC
                                           (apply
                                             (case-lambda
                                               ((g$x$8403$1RbCyC
                                                  g$init$8404$1RbCyC
                                                  g$step$8405$1RbCyC)
                                                (list
                                                  g$x$8403$1RbCyC
                                                  g$init$8404$1RbCyC
                                                  g$step$8405$1RbCyC)))
                                             g$ls/false$8402$1RbCyC)
                                           ((case-lambda
                                              ((g$t$8406$1RbCyC)
                                               ((case-lambda
                                                  ((g$ls/false$8407$1RbCyC)
                                                   (if g$ls/false$8407$1RbCyC
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$7650$1RbCyC
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8383$1RbCyC)))
                                                       g$ls/false$8407$1RbCyC)
                                                     (g$syntax-violation$7650$1RbCyC
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8406$1RbCyC))))
                                                (g$syntax-dispatch$7539$1RbCyC
                                                  g$t$8406$1RbCyC
                                                  '_))))
                                            g$t$8401$1RbCyC))))
                                      (g$syntax-dispatch$7539$1RbCyC
                                        g$t$8401$1RbCyC
                                        '(any any any)))))
                                  g$t$8397$1RbCyC))))
                            (g$syntax-dispatch$7539$1RbCyC
                              g$t$8397$1RbCyC
                              '(any any)))))
                        g$x$8396$1RbCyC)))))
          ((case-lambda
             ((g$t$8385$1RbCyC)
              ((case-lambda
                 ((g$ls/false$8386$1RbCyC)
                  (if g$ls/false$8386$1RbCyC
                    (apply
                      (case-lambda
                        ((g$binding*$8387$1RbCyC
                           g$test$8388$1RbCyC
                           g$expr*$8389$1RbCyC
                           g$command*$8390$1RbCyC)
                         ((case-lambda
                            ((g$t$8391$1RbCyC)
                             ((case-lambda
                                ((g$ls/false$8392$1RbCyC)
                                 (if g$ls/false$8392$1RbCyC
                                   (apply
                                     (case-lambda
                                       ((g$x*$8393$1RbCyC
                                          g$init*$8394$1RbCyC
                                          g$step*$8395$1RbCyC)
                                        (if (g$valid-bound-ids?$7266$1RbCyC
                                              g$x*$8393$1RbCyC)
                                          (g$bless$7502$1RbCyC
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8393$1RbCyC
                                                    (list
                                                      'if
                                                      g$test$8388$1RbCyC
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8389$1RbCyC))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8390$1RbCyC
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8395$1RbCyC))))))))
                                              (cons 'loop g$init*$8394$1RbCyC)))
                                          (g$syntax-violation$7650$1RbCyC
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8383$1RbCyC))))
                                     g$ls/false$8392$1RbCyC)
                                   (g$syntax-violation$7650$1RbCyC
                                     '#f
                                     '"invalid syntax"
                                     g$t$8391$1RbCyC))))
                              (g$syntax-dispatch$7539$1RbCyC
                                g$t$8391$1RbCyC
                                '#(each (any any any))))))
                          (map g$bind$8384$1RbCyC g$binding*$8387$1RbCyC))))
                      g$ls/false$8386$1RbCyC)
                    (g$syntax-violation$7650$1RbCyC
                      '#f
                      '"invalid syntax"
                      g$t$8385$1RbCyC))))
               (g$syntax-dispatch$7539$1RbCyC
                 g$t$8385$1RbCyC
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8383$1RbCyC)))))
   (g$let*-macro$7522$1RbCyC
     g$let*-macro$11010$1RbCyC
     (case-lambda
       ((g$stx$8408$1RbCyC)
        ((case-lambda
           ((g$t$8409$1RbCyC)
            ((case-lambda
               ((g$ls/false$8410$1RbCyC)
                (if (if g$ls/false$8410$1RbCyC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8411$1RbCyC
                               g$rhs*$8412$1RbCyC
                               g$b$8413$1RbCyC
                               g$b*$8414$1RbCyC)
                             (g$for-all$4995$1RbCyC
                               g$id?$7261$1RbCyC
                               g$lhs*$8411$1RbCyC)))
                          g$ls/false$8410$1RbCyC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8415$1RbCyC
                         g$rhs*$8416$1RbCyC
                         g$b$8417$1RbCyC
                         g$b*$8418$1RbCyC)
                       (g$bless$7502$1RbCyC
                         ((letrec ((g$f$8419$1RbCyC
                                     (case-lambda
                                       ((g$x*$8420$1RbCyC)
                                        (if (null? g$x*$8420$1RbCyC)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8417$1RbCyC
                                                g$b*$8418$1RbCyC)))
                                          (list
                                            'let
                                            (list (car g$x*$8420$1RbCyC))
                                            (g$f$8419$1RbCyC
                                              (cdr g$x*$8420$1RbCyC))))))))
                            g$f$8419$1RbCyC)
                          (map list g$lhs*$8415$1RbCyC g$rhs*$8416$1RbCyC)))))
                    g$ls/false$8410$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$8409$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$8409$1RbCyC
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8408$1RbCyC))))
   (g$or-macro$7523$1RbCyC
     g$or-macro$11011$1RbCyC
     (case-lambda
       ((g$stx$8421$1RbCyC)
        ((case-lambda
           ((g$t$8422$1RbCyC)
            ((case-lambda
               ((g$ls/false$8423$1RbCyC)
                (if g$ls/false$8423$1RbCyC
                  (apply (case-lambda (() '#f)) g$ls/false$8423$1RbCyC)
                  ((case-lambda
                     ((g$t$8424$1RbCyC)
                      ((case-lambda
                         ((g$ls/false$8425$1RbCyC)
                          (if g$ls/false$8425$1RbCyC
                            (apply
                              (case-lambda
                                ((g$e$8426$1RbCyC g$e*$8427$1RbCyC)
                                 (g$bless$7502$1RbCyC
                                   ((letrec ((g$f$8428$1RbCyC
                                               (case-lambda
                                                 ((g$e$8429$1RbCyC
                                                    g$e*$8430$1RbCyC)
                                                  (if (null? g$e*$8430$1RbCyC)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8429$1RbCyC)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8429$1RbCyC))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8428$1RbCyC
                                                          (car g$e*$8430$1RbCyC)
                                                          (cdr g$e*$8430$1RbCyC)))))))))
                                      g$f$8428$1RbCyC)
                                    g$e$8426$1RbCyC
                                    g$e*$8427$1RbCyC))))
                              g$ls/false$8425$1RbCyC)
                            (g$syntax-violation$7650$1RbCyC
                              '#f
                              '"invalid syntax"
                              g$t$8424$1RbCyC))))
                       (g$syntax-dispatch$7539$1RbCyC
                         g$t$8424$1RbCyC
                         '(_ any . each-any)))))
                   g$t$8422$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$8422$1RbCyC '(_)))))
         g$stx$8421$1RbCyC))))
   (g$and-macro$7524$1RbCyC
     g$and-macro$11012$1RbCyC
     (case-lambda
       ((g$stx$8431$1RbCyC)
        ((case-lambda
           ((g$t$8432$1RbCyC)
            ((case-lambda
               ((g$ls/false$8433$1RbCyC)
                (if g$ls/false$8433$1RbCyC
                  (apply (case-lambda (() '#t)) g$ls/false$8433$1RbCyC)
                  ((case-lambda
                     ((g$t$8434$1RbCyC)
                      ((case-lambda
                         ((g$ls/false$8435$1RbCyC)
                          (if g$ls/false$8435$1RbCyC
                            (apply
                              (case-lambda
                                ((g$e$8436$1RbCyC g$e*$8437$1RbCyC)
                                 (g$bless$7502$1RbCyC
                                   ((letrec ((g$f$8438$1RbCyC
                                               (case-lambda
                                                 ((g$e$8439$1RbCyC
                                                    g$e*$8440$1RbCyC)
                                                  (if (null? g$e*$8440$1RbCyC)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8439$1RbCyC)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8439$1RbCyC
                                                        (cons
                                                          (g$f$8438$1RbCyC
                                                            (car g$e*$8440$1RbCyC)
                                                            (cdr g$e*$8440$1RbCyC))
                                                          '(#f)))))))))
                                      g$f$8438$1RbCyC)
                                    g$e$8436$1RbCyC
                                    g$e*$8437$1RbCyC))))
                              g$ls/false$8435$1RbCyC)
                            (g$syntax-violation$7650$1RbCyC
                              '#f
                              '"invalid syntax"
                              g$t$8434$1RbCyC))))
                       (g$syntax-dispatch$7539$1RbCyC
                         g$t$8434$1RbCyC
                         '(_ any . each-any)))))
                   g$t$8432$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$8432$1RbCyC '(_)))))
         g$stx$8431$1RbCyC))))
   (g$cond-macro$7525$1RbCyC
     g$cond-macro$11013$1RbCyC
     (case-lambda
       ((g$stx$8441$1RbCyC)
        ((case-lambda
           ((g$t$8442$1RbCyC)
            ((case-lambda
               ((g$ls/false$8443$1RbCyC)
                (if g$ls/false$8443$1RbCyC
                  (apply
                    (case-lambda
                      ((g$cls$8444$1RbCyC g$cls*$8445$1RbCyC)
                       (g$bless$7502$1RbCyC
                         ((letrec ((g$f$8446$1RbCyC
                                     (case-lambda
                                       ((g$cls$8447$1RbCyC g$cls*$8448$1RbCyC)
                                        (if (null? g$cls*$8448$1RbCyC)
                                          ((case-lambda
                                             ((g$t$8449$1RbCyC)
                                              ((case-lambda
                                                 ((g$ls/false$8450$1RbCyC)
                                                  (if g$ls/false$8450$1RbCyC
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8451$1RbCyC
                                                           g$e*$8452$1RbCyC)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8451$1RbCyC
                                                             g$e*$8452$1RbCyC))))
                                                      g$ls/false$8450$1RbCyC)
                                                    ((case-lambda
                                                       ((g$t$8453$1RbCyC)
                                                        ((case-lambda
                                                           ((g$ls/false$8454$1RbCyC)
                                                            (if g$ls/false$8454$1RbCyC
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8455$1RbCyC
                                                                     g$p$8456$1RbCyC)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8455$1RbCyC))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8456$1RbCyC
                                                                         '(t))))))
                                                                g$ls/false$8454$1RbCyC)
                                                              ((case-lambda
                                                                 ((g$t$8457$1RbCyC)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8458$1RbCyC)
                                                                      (if g$ls/false$8458$1RbCyC
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8459$1RbCyC)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8459$1RbCyC
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8458$1RbCyC)
                                                                        ((case-lambda
                                                                           ((g$t$8460$1RbCyC)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8461$1RbCyC)
                                                                                (if g$ls/false$8461$1RbCyC
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8462$1RbCyC
                                                                                         g$e*$8463$1RbCyC)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8462$1RbCyC
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8463$1RbCyC))))
                                                                                    g$ls/false$8461$1RbCyC)
                                                                                  ((case-lambda
                                                                                     ((g$t$8464$1RbCyC)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8465$1RbCyC)
                                                                                          (if g$ls/false$8465$1RbCyC
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7650$1RbCyC
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8441$1RbCyC)))
                                                                                              g$ls/false$8465$1RbCyC)
                                                                                            (g$syntax-violation$7650$1RbCyC
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8464$1RbCyC))))
                                                                                       (g$syntax-dispatch$7539$1RbCyC
                                                                                         g$t$8464$1RbCyC
                                                                                         '_))))
                                                                                   g$t$8460$1RbCyC))))
                                                                             (g$syntax-dispatch$7539$1RbCyC
                                                                               g$t$8460$1RbCyC
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8457$1RbCyC))))
                                                                   (g$syntax-dispatch$7539$1RbCyC
                                                                     g$t$8457$1RbCyC
                                                                     '(any)))))
                                                               g$t$8453$1RbCyC))))
                                                         (g$syntax-dispatch$7539$1RbCyC
                                                           g$t$8453$1RbCyC
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8449$1RbCyC))))
                                               (g$syntax-dispatch$7539$1RbCyC
                                                 g$t$8449$1RbCyC
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8447$1RbCyC)
                                          ((case-lambda
                                             ((g$t$8466$1RbCyC)
                                              ((case-lambda
                                                 ((g$ls/false$8467$1RbCyC)
                                                  (if g$ls/false$8467$1RbCyC
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8468$1RbCyC
                                                           g$e*$8469$1RbCyC)
                                                         (g$syntax-violation$7650$1RbCyC
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8441$1RbCyC)))
                                                      g$ls/false$8467$1RbCyC)
                                                    ((case-lambda
                                                       ((g$t$8470$1RbCyC)
                                                        ((case-lambda
                                                           ((g$ls/false$8471$1RbCyC)
                                                            (if g$ls/false$8471$1RbCyC
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8472$1RbCyC
                                                                     g$p$8473$1RbCyC)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8472$1RbCyC))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8473$1RbCyC
                                                                         '(t))
                                                                       (g$f$8446$1RbCyC
                                                                         (car g$cls*$8448$1RbCyC)
                                                                         (cdr g$cls*$8448$1RbCyC))))))
                                                                g$ls/false$8471$1RbCyC)
                                                              ((case-lambda
                                                                 ((g$t$8474$1RbCyC)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8475$1RbCyC)
                                                                      (if g$ls/false$8475$1RbCyC
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8476$1RbCyC)
                                                                             (list
                                                                               'or
                                                                               g$e$8476$1RbCyC
                                                                               (g$f$8446$1RbCyC
                                                                                 (car g$cls*$8448$1RbCyC)
                                                                                 (cdr g$cls*$8448$1RbCyC)))))
                                                                          g$ls/false$8475$1RbCyC)
                                                                        ((case-lambda
                                                                           ((g$t$8477$1RbCyC)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8478$1RbCyC)
                                                                                (if g$ls/false$8478$1RbCyC
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8479$1RbCyC
                                                                                         g$e*$8480$1RbCyC)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8479$1RbCyC
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8480$1RbCyC)
                                                                                         (g$f$8446$1RbCyC
                                                                                           (car g$cls*$8448$1RbCyC)
                                                                                           (cdr g$cls*$8448$1RbCyC)))))
                                                                                    g$ls/false$8478$1RbCyC)
                                                                                  ((case-lambda
                                                                                     ((g$t$8481$1RbCyC)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8482$1RbCyC)
                                                                                          (if g$ls/false$8482$1RbCyC
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7650$1RbCyC
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8441$1RbCyC)))
                                                                                              g$ls/false$8482$1RbCyC)
                                                                                            (g$syntax-violation$7650$1RbCyC
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8481$1RbCyC))))
                                                                                       (g$syntax-dispatch$7539$1RbCyC
                                                                                         g$t$8481$1RbCyC
                                                                                         '_))))
                                                                                   g$t$8477$1RbCyC))))
                                                                             (g$syntax-dispatch$7539$1RbCyC
                                                                               g$t$8477$1RbCyC
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8474$1RbCyC))))
                                                                   (g$syntax-dispatch$7539$1RbCyC
                                                                     g$t$8474$1RbCyC
                                                                     '(any)))))
                                                               g$t$8470$1RbCyC))))
                                                         (g$syntax-dispatch$7539$1RbCyC
                                                           g$t$8470$1RbCyC
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8466$1RbCyC))))
                                               (g$syntax-dispatch$7539$1RbCyC
                                                 g$t$8466$1RbCyC
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8447$1RbCyC))))))
                            g$f$8446$1RbCyC)
                          g$cls$8444$1RbCyC
                          g$cls*$8445$1RbCyC))))
                    g$ls/false$8443$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$8442$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$8442$1RbCyC
               '(_ any . each-any)))))
         g$stx$8441$1RbCyC))))
   (g$do-include$7526$1RbCyC
     g$do-include$11014$1RbCyC
     (case-lambda
       ((g$stx$8483$1RbCyC g$id$8484$1RbCyC g$filename$8485$1RbCyC)
        ((case-lambda
           ((g$filename$8486$1RbCyC)
            (begin
              (if (not (if (string? g$filename$8486$1RbCyC)
                         (begin '#f (g$id?$7261$1RbCyC g$id$8484$1RbCyC))
                         '#f))
                (g$syntax-violation$7650$1RbCyC
                  '#f
                  '"invalid syntax"
                  g$stx$8483$1RbCyC)
                (void))
              (cons
                (g$bless$7502$1RbCyC 'begin)
                (g$with-input-from-file$6267$1RbCyC
                  g$filename$8486$1RbCyC
                  (case-lambda
                    (()
                     ((letrec ((g$f$8487$1RbCyC
                                 (case-lambda
                                   ((g$ls$8488$1RbCyC)
                                    ((case-lambda
                                       ((g$x$8489$1RbCyC)
                                        (if (eof-object? g$x$8489$1RbCyC)
                                          (reverse g$ls$8488$1RbCyC)
                                          (g$f$8487$1RbCyC
                                            (cons
                                              (g$datum->stx$7244$1RbCyC
                                                g$id$8484$1RbCyC
                                                g$x$8489$1RbCyC)
                                              g$ls$8488$1RbCyC)))))
                                     (read-annotated))))))
                        g$f$8487$1RbCyC)
                      '()))))))))
         (g$stx->datum$7272$1RbCyC g$filename$8485$1RbCyC)))))
   (g$include-macro$7527$1RbCyC
     g$include-macro$11015$1RbCyC
     (case-lambda
       ((g$e$8490$1RbCyC)
        ((case-lambda
           ((g$t$8491$1RbCyC)
            ((case-lambda
               ((g$ls/false$8492$1RbCyC)
                (if g$ls/false$8492$1RbCyC
                  (apply
                    (case-lambda
                      ((g$id$8493$1RbCyC g$filename$8494$1RbCyC)
                       (g$do-include$7526$1RbCyC
                         g$e$8490$1RbCyC
                         g$id$8493$1RbCyC
                         g$filename$8494$1RbCyC)))
                    g$ls/false$8492$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$8491$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$8491$1RbCyC '(any any)))))
         g$e$8490$1RbCyC))))
   (g$include-into-macro$7528$1RbCyC
     g$include-into-macro$11016$1RbCyC
     (case-lambda
       ((g$e$8495$1RbCyC)
        ((case-lambda
           ((g$t$8496$1RbCyC)
            ((case-lambda
               ((g$ls/false$8497$1RbCyC)
                (if g$ls/false$8497$1RbCyC
                  (apply
                    (case-lambda
                      ((g$id$8498$1RbCyC g$filename$8499$1RbCyC)
                       (g$do-include$7526$1RbCyC
                         g$e$8495$1RbCyC
                         g$id$8498$1RbCyC
                         g$filename$8499$1RbCyC)))
                    g$ls/false$8497$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$8496$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$8496$1RbCyC '(_ any any)))))
         g$e$8495$1RbCyC))))
   (g$syntax-rules-macro$7529$1RbCyC
     g$syntax-rules-macro$11017$1RbCyC
     (case-lambda
       ((g$e$8500$1RbCyC)
        ((case-lambda
           ((g$t$8501$1RbCyC)
            ((case-lambda
               ((g$ls/false$8502$1RbCyC)
                (if g$ls/false$8502$1RbCyC
                  (apply
                    (case-lambda
                      ((g$lits$8503$1RbCyC
                         g$pat*$8504$1RbCyC
                         g$tmp*$8505$1RbCyC)
                       (begin
                         (g$verify-literals$7542$1RbCyC
                           g$lits$8503$1RbCyC
                           g$e$8500$1RbCyC)
                         (g$bless$7502$1RbCyC
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8503$1RbCyC
                                   (map (case-lambda
                                          ((g$pat$8506$1RbCyC g$tmp$8507$1RbCyC)
                                           ((case-lambda
                                              ((g$t$8508$1RbCyC)
                                               ((case-lambda
                                                  ((g$ls/false$8509$1RbCyC)
                                                   (if g$ls/false$8509$1RbCyC
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8510$1RbCyC)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8510$1RbCyC)
                                                            (list
                                                              'syntax
                                                              g$tmp$8507$1RbCyC))))
                                                       g$ls/false$8509$1RbCyC)
                                                     ((case-lambda
                                                        ((g$t$8511$1RbCyC)
                                                         ((case-lambda
                                                            ((g$ls/false$8512$1RbCyC)
                                                             (if g$ls/false$8512$1RbCyC
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7650$1RbCyC
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8500$1RbCyC
                                                                      g$pat$8506$1RbCyC)))
                                                                 g$ls/false$8512$1RbCyC)
                                                               (g$syntax-violation$7650$1RbCyC
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8511$1RbCyC))))
                                                          (g$syntax-dispatch$7539$1RbCyC
                                                            g$t$8511$1RbCyC
                                                            '_))))
                                                      g$t$8508$1RbCyC))))
                                                (g$syntax-dispatch$7539$1RbCyC
                                                  g$t$8508$1RbCyC
                                                  '(_ . any)))))
                                            g$pat$8506$1RbCyC)))
                                        g$pat*$8504$1RbCyC
                                        g$tmp*$8505$1RbCyC)))))))))
                    g$ls/false$8502$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$8501$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$8501$1RbCyC
               '(_ each-any . #(each (any any)))))))
         g$e$8500$1RbCyC))))
   (g$quasiquote-macro$7530$1RbCyC
     g$quasiquote-macro$11018$1RbCyC
     ((case-lambda
        (()
         (letrec* ((g$datum$8513$1RbCyC
                     (case-lambda
                       ((g$x$8644$1RbCyC)
                        (list
                          (g$scheme-stx$7482$1RbCyC 'quote)
                          (g$mkstx$7249$1RbCyC g$x$8644$1RbCyC '() '() '())))))
                   (g$quasicons*$8529$1RbCyC
                     (case-lambda
                       ((g$x$8640$1RbCyC g$y$8641$1RbCyC)
                        ((letrec ((g$f$8642$1RbCyC
                                    (case-lambda
                                      ((g$x$8643$1RbCyC)
                                       (if (null? g$x$8643$1RbCyC)
                                         g$y$8641$1RbCyC
                                         (g$quasicons$8530$1RbCyC
                                           (car g$x$8643$1RbCyC)
                                           (g$f$8642$1RbCyC
                                             (cdr g$x$8643$1RbCyC))))))))
                           g$f$8642$1RbCyC)
                         g$x$8640$1RbCyC))))
                   (g$quasicons$8530$1RbCyC
                     (case-lambda
                       ((g$x$8621$1RbCyC g$y$8622$1RbCyC)
                        ((case-lambda
                           ((g$t$8623$1RbCyC)
                            ((case-lambda
                               ((g$ls/false$8624$1RbCyC)
                                (if g$ls/false$8624$1RbCyC
                                  (apply
                                    (case-lambda
                                      ((g$dy$8625$1RbCyC)
                                       ((case-lambda
                                          ((g$t$8626$1RbCyC)
                                           ((case-lambda
                                              ((g$ls/false$8627$1RbCyC)
                                               (if g$ls/false$8627$1RbCyC
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$8628$1RbCyC)
                                                      (list
                                                        (g$scheme-stx$7482$1RbCyC
                                                          'quote)
                                                        (cons
                                                          g$dx$8628$1RbCyC
                                                          g$dy$8625$1RbCyC))))
                                                   g$ls/false$8627$1RbCyC)
                                                 ((case-lambda
                                                    ((g$t$8629$1RbCyC)
                                                     ((case-lambda
                                                        ((g$ls/false$8630$1RbCyC)
                                                         (if g$ls/false$8630$1RbCyC
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$8631$1RbCyC)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8632$1RbCyC)
                                                                        (if g$ls/false$8632$1RbCyC
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7482$1RbCyC
                                                                                   'list)
                                                                                 g$x$8621$1RbCyC)))
                                                                            g$ls/false$8632$1RbCyC)
                                                                          ((case-lambda
                                                                             ((g$t$8633$1RbCyC)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8634$1RbCyC)
                                                                                  (if g$ls/false$8634$1RbCyC
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7482$1RbCyC
                                                                                             'cons)
                                                                                           g$x$8621$1RbCyC
                                                                                           g$y$8622$1RbCyC)))
                                                                                      g$ls/false$8634$1RbCyC)
                                                                                    (g$syntax-violation$7650$1RbCyC
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8633$1RbCyC))))
                                                                               (g$syntax-dispatch$7539$1RbCyC
                                                                                 g$t$8633$1RbCyC
                                                                                 '_))))
                                                                           g$t$8631$1RbCyC))))
                                                                     (g$syntax-dispatch$7539$1RbCyC
                                                                       g$t$8631$1RbCyC
                                                                       '()))))
                                                                 g$dy$8625$1RbCyC)))
                                                             g$ls/false$8630$1RbCyC)
                                                           (g$syntax-violation$7650$1RbCyC
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$8629$1RbCyC))))
                                                      (g$syntax-dispatch$7539$1RbCyC
                                                        g$t$8629$1RbCyC
                                                        '_))))
                                                  g$t$8626$1RbCyC))))
                                            (g$syntax-dispatch$7539$1RbCyC
                                              g$t$8626$1RbCyC
                                              '(#(scheme-id quote) any)))))
                                        g$x$8621$1RbCyC)))
                                    g$ls/false$8624$1RbCyC)
                                  ((case-lambda
                                     ((g$t$8635$1RbCyC)
                                      ((case-lambda
                                         ((g$ls/false$8636$1RbCyC)
                                          (if g$ls/false$8636$1RbCyC
                                            (apply
                                              (case-lambda
                                                ((g$stuff$8637$1RbCyC)
                                                 (g$cons*$4997$1RbCyC
                                                   (g$scheme-stx$7482$1RbCyC
                                                     'list)
                                                   g$x$8621$1RbCyC
                                                   g$stuff$8637$1RbCyC)))
                                              g$ls/false$8636$1RbCyC)
                                            ((case-lambda
                                               ((g$t$8638$1RbCyC)
                                                ((case-lambda
                                                   ((g$ls/false$8639$1RbCyC)
                                                    (if g$ls/false$8639$1RbCyC
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7482$1RbCyC
                                                               'cons)
                                                             g$x$8621$1RbCyC
                                                             g$y$8622$1RbCyC)))
                                                        g$ls/false$8639$1RbCyC)
                                                      (g$syntax-violation$7650$1RbCyC
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$8638$1RbCyC))))
                                                 (g$syntax-dispatch$7539$1RbCyC
                                                   g$t$8638$1RbCyC
                                                   '_))))
                                             g$t$8635$1RbCyC))))
                                       (g$syntax-dispatch$7539$1RbCyC
                                         g$t$8635$1RbCyC
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$8623$1RbCyC))))
                             (g$syntax-dispatch$7539$1RbCyC
                               g$t$8623$1RbCyC
                               '(#(scheme-id quote) any)))))
                         g$y$8622$1RbCyC))))
                   (g$quasiappend$8531$1RbCyC
                     (case-lambda
                       ((g$x$8608$1RbCyC g$y$8609$1RbCyC)
                        ((case-lambda
                           ((g$ls$8610$1RbCyC)
                            (if (null? g$ls$8610$1RbCyC)
                              (list (g$scheme-stx$7482$1RbCyC 'quote) '())
                              (if (null? (cdr g$ls$8610$1RbCyC))
                                (car g$ls$8610$1RbCyC)
                                (g$cons*$4997$1RbCyC
                                  (g$scheme-stx$7482$1RbCyC 'append)
                                  g$ls$8610$1RbCyC)))))
                         ((letrec ((g$f$8611$1RbCyC
                                     (case-lambda
                                       ((g$x$8612$1RbCyC)
                                        (if (null? g$x$8612$1RbCyC)
                                          ((case-lambda
                                             ((g$t$8613$1RbCyC)
                                              ((case-lambda
                                                 ((g$ls/false$8614$1RbCyC)
                                                  (if g$ls/false$8614$1RbCyC
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$8614$1RbCyC)
                                                    ((case-lambda
                                                       ((g$t$8615$1RbCyC)
                                                        ((case-lambda
                                                           ((g$ls/false$8616$1RbCyC)
                                                            (if g$ls/false$8616$1RbCyC
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$8609$1RbCyC)))
                                                                g$ls/false$8616$1RbCyC)
                                                              (g$syntax-violation$7650$1RbCyC
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8615$1RbCyC))))
                                                         (g$syntax-dispatch$7539$1RbCyC
                                                           g$t$8615$1RbCyC
                                                           '_))))
                                                     g$t$8613$1RbCyC))))
                                               (g$syntax-dispatch$7539$1RbCyC
                                                 g$t$8613$1RbCyC
                                                 '(#(scheme-id quote) ())))))
                                           g$y$8609$1RbCyC)
                                          ((case-lambda
                                             ((g$t$8617$1RbCyC)
                                              ((case-lambda
                                                 ((g$ls/false$8618$1RbCyC)
                                                  (if g$ls/false$8618$1RbCyC
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$8611$1RbCyC
                                                           (cdr g$x$8612$1RbCyC))))
                                                      g$ls/false$8618$1RbCyC)
                                                    ((case-lambda
                                                       ((g$t$8619$1RbCyC)
                                                        ((case-lambda
                                                           ((g$ls/false$8620$1RbCyC)
                                                            (if g$ls/false$8620$1RbCyC
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$8612$1RbCyC)
                                                                     (g$f$8611$1RbCyC
                                                                       (cdr g$x$8612$1RbCyC)))))
                                                                g$ls/false$8620$1RbCyC)
                                                              (g$syntax-violation$7650$1RbCyC
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8619$1RbCyC))))
                                                         (g$syntax-dispatch$7539$1RbCyC
                                                           g$t$8619$1RbCyC
                                                           '_))))
                                                     g$t$8617$1RbCyC))))
                                               (g$syntax-dispatch$7539$1RbCyC
                                                 g$t$8617$1RbCyC
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$8612$1RbCyC)))))))
                            g$f$8611$1RbCyC)
                          g$x$8608$1RbCyC)))))
                   (g$quasivector$8532$1RbCyC
                     (case-lambda
                       ((g$x$8583$1RbCyC)
                        ((case-lambda
                           ((g$pat-x$8584$1RbCyC)
                            ((case-lambda
                               ((g$t$8585$1RbCyC)
                                ((case-lambda
                                   ((g$ls/false$8586$1RbCyC)
                                    (if g$ls/false$8586$1RbCyC
                                      (apply
                                        (case-lambda
                                          ((g$x*$8587$1RbCyC)
                                           (list
                                             (g$scheme-stx$7482$1RbCyC 'quote)
                                             (list->vector g$x*$8587$1RbCyC))))
                                        g$ls/false$8586$1RbCyC)
                                      ((case-lambda
                                         ((g$t$8588$1RbCyC)
                                          ((case-lambda
                                             ((g$ls/false$8589$1RbCyC)
                                              (if g$ls/false$8589$1RbCyC
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$8590$1RbCyC
                                                                 (case-lambda
                                                                   ((g$x$8591$1RbCyC
                                                                      g$k$8592$1RbCyC)
                                                                    ((case-lambda
                                                                       ((g$t$8593$1RbCyC)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8594$1RbCyC)
                                                                            (if g$ls/false$8594$1RbCyC
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$8595$1RbCyC)
                                                                                   (g$k$8592$1RbCyC
                                                                                     (map (case-lambda
                                                                                            ((g$x$8596$1RbCyC)
                                                                                             (list
                                                                                               (g$scheme-stx$7482$1RbCyC
                                                                                                 'quote)
                                                                                               g$x$8596$1RbCyC)))
                                                                                          g$x*$8595$1RbCyC))))
                                                                                g$ls/false$8594$1RbCyC)
                                                                              ((case-lambda
                                                                                 ((g$t$8597$1RbCyC)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$8598$1RbCyC)
                                                                                      (if g$ls/false$8598$1RbCyC
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$8599$1RbCyC)
                                                                                             (g$k$8592$1RbCyC
                                                                                               g$x*$8599$1RbCyC)))
                                                                                          g$ls/false$8598$1RbCyC)
                                                                                        ((case-lambda
                                                                                           ((g$t$8600$1RbCyC)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$8601$1RbCyC)
                                                                                                (if g$ls/false$8601$1RbCyC
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$8602$1RbCyC
                                                                                                         g$y$8603$1RbCyC)
                                                                                                       (g$f$8590$1RbCyC
                                                                                                         g$y$8603$1RbCyC
                                                                                                         (case-lambda
                                                                                                           ((g$ls$8604$1RbCyC)
                                                                                                            (g$k$8592$1RbCyC
                                                                                                              (cons
                                                                                                                g$x$8602$1RbCyC
                                                                                                                g$ls$8604$1RbCyC)))))))
                                                                                                    g$ls/false$8601$1RbCyC)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$8605$1RbCyC)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$8606$1RbCyC)
                                                                                                          (if g$ls/false$8606$1RbCyC
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7482$1RbCyC
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$8584$1RbCyC)))
                                                                                                              g$ls/false$8606$1RbCyC)
                                                                                                            (g$syntax-violation$7650$1RbCyC
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$8605$1RbCyC))))
                                                                                                       (g$syntax-dispatch$7539$1RbCyC
                                                                                                         g$t$8605$1RbCyC
                                                                                                         '_))))
                                                                                                   g$t$8600$1RbCyC))))
                                                                                             (g$syntax-dispatch$7539$1RbCyC
                                                                                               g$t$8600$1RbCyC
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$8597$1RbCyC))))
                                                                                   (g$syntax-dispatch$7539$1RbCyC
                                                                                     g$t$8597$1RbCyC
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$8593$1RbCyC))))
                                                                         (g$syntax-dispatch$7539$1RbCyC
                                                                           g$t$8593$1RbCyC
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$8591$1RbCyC)))))
                                                        g$f$8590$1RbCyC)
                                                      g$x$8583$1RbCyC
                                                      (case-lambda
                                                        ((g$ls$8607$1RbCyC)
                                                         (g$cons*$4997$1RbCyC
                                                           (g$scheme-stx$7482$1RbCyC
                                                             'vector)
                                                           g$ls$8607$1RbCyC))))))
                                                  g$ls/false$8589$1RbCyC)
                                                (g$syntax-violation$7650$1RbCyC
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$8588$1RbCyC))))
                                           (g$syntax-dispatch$7539$1RbCyC
                                             g$t$8588$1RbCyC
                                             '_))))
                                       g$t$8585$1RbCyC))))
                                 (g$syntax-dispatch$7539$1RbCyC
                                   g$t$8585$1RbCyC
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$8584$1RbCyC)))
                         g$x$8583$1RbCyC))))
                   (g$vquasi$8533$1RbCyC
                     (case-lambda
                       ((g$p$8566$1RbCyC g$lev$8567$1RbCyC)
                        ((case-lambda
                           ((g$t$8568$1RbCyC)
                            ((case-lambda
                               ((g$ls/false$8569$1RbCyC)
                                (if g$ls/false$8569$1RbCyC
                                  (apply
                                    (case-lambda
                                      ((g$p$8570$1RbCyC g$q$8571$1RbCyC)
                                       ((case-lambda
                                          ((g$t$8572$1RbCyC)
                                           ((case-lambda
                                              ((g$ls/false$8573$1RbCyC)
                                               (if g$ls/false$8573$1RbCyC
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8574$1RbCyC)
                                                      (if (= g$lev$8567$1RbCyC
                                                             '0)
                                                        (g$quasicons*$8529$1RbCyC
                                                          g$p$8574$1RbCyC
                                                          (g$vquasi$8533$1RbCyC
                                                            g$q$8571$1RbCyC
                                                            g$lev$8567$1RbCyC))
                                                        (g$quasicons$8530$1RbCyC
                                                          (g$quasicons$8530$1RbCyC
                                                            (g$datum$8513$1RbCyC
                                                              'unquote)
                                                            (g$quasi$8534$1RbCyC
                                                              g$p$8574$1RbCyC
                                                              (- g$lev$8567$1RbCyC
                                                                 '1)))
                                                          (g$vquasi$8533$1RbCyC
                                                            g$q$8571$1RbCyC
                                                            g$lev$8567$1RbCyC)))))
                                                   g$ls/false$8573$1RbCyC)
                                                 ((case-lambda
                                                    ((g$t$8575$1RbCyC)
                                                     ((case-lambda
                                                        ((g$ls/false$8576$1RbCyC)
                                                         (if g$ls/false$8576$1RbCyC
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$8577$1RbCyC)
                                                                (if (= g$lev$8567$1RbCyC
                                                                       '0)
                                                                  (g$quasiappend$8531$1RbCyC
                                                                    g$p$8577$1RbCyC
                                                                    (g$vquasi$8533$1RbCyC
                                                                      g$q$8571$1RbCyC
                                                                      g$lev$8567$1RbCyC))
                                                                  (g$quasicons$8530$1RbCyC
                                                                    (g$quasicons$8530$1RbCyC
                                                                      (g$datum$8513$1RbCyC
                                                                        'unquote-splicing)
                                                                      (g$quasi$8534$1RbCyC
                                                                        g$p$8577$1RbCyC
                                                                        (- g$lev$8567$1RbCyC
                                                                           '1)))
                                                                    (g$vquasi$8533$1RbCyC
                                                                      g$q$8571$1RbCyC
                                                                      g$lev$8567$1RbCyC)))))
                                                             g$ls/false$8576$1RbCyC)
                                                           ((case-lambda
                                                              ((g$t$8578$1RbCyC)
                                                               ((case-lambda
                                                                  ((g$ls/false$8579$1RbCyC)
                                                                   (if g$ls/false$8579$1RbCyC
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$8580$1RbCyC)
                                                                          (g$quasicons$8530$1RbCyC
                                                                            (g$quasi$8534$1RbCyC
                                                                              g$p$8580$1RbCyC
                                                                              g$lev$8567$1RbCyC)
                                                                            (g$vquasi$8533$1RbCyC
                                                                              g$q$8571$1RbCyC
                                                                              g$lev$8567$1RbCyC))))
                                                                       g$ls/false$8579$1RbCyC)
                                                                     (g$syntax-violation$7650$1RbCyC
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$8578$1RbCyC))))
                                                                (g$syntax-dispatch$7539$1RbCyC
                                                                  g$t$8578$1RbCyC
                                                                  'any))))
                                                            g$t$8575$1RbCyC))))
                                                      (g$syntax-dispatch$7539$1RbCyC
                                                        g$t$8575$1RbCyC
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$8572$1RbCyC))))
                                            (g$syntax-dispatch$7539$1RbCyC
                                              g$t$8572$1RbCyC
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$8570$1RbCyC)))
                                    g$ls/false$8569$1RbCyC)
                                  ((case-lambda
                                     ((g$t$8581$1RbCyC)
                                      ((case-lambda
                                         ((g$ls/false$8582$1RbCyC)
                                          (if g$ls/false$8582$1RbCyC
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7482$1RbCyC
                                                     'quote)
                                                   '())))
                                              g$ls/false$8582$1RbCyC)
                                            (g$syntax-violation$7650$1RbCyC
                                              '#f
                                              '"invalid syntax"
                                              g$t$8581$1RbCyC))))
                                       (g$syntax-dispatch$7539$1RbCyC
                                         g$t$8581$1RbCyC
                                         '()))))
                                   g$t$8568$1RbCyC))))
                             (g$syntax-dispatch$7539$1RbCyC
                               g$t$8568$1RbCyC
                               '(any . any)))))
                         g$p$8566$1RbCyC))))
                   (g$quasi$8534$1RbCyC
                     (case-lambda
                       ((g$p$8539$1RbCyC g$lev$8540$1RbCyC)
                        ((case-lambda
                           ((g$t$8541$1RbCyC)
                            ((case-lambda
                               ((g$ls/false$8542$1RbCyC)
                                (if g$ls/false$8542$1RbCyC
                                  (apply
                                    (case-lambda
                                      ((g$p$8543$1RbCyC)
                                       (if (= g$lev$8540$1RbCyC '0)
                                         g$p$8543$1RbCyC
                                         (g$quasicons$8530$1RbCyC
                                           (g$datum$8513$1RbCyC 'unquote)
                                           (g$quasi$8534$1RbCyC
                                             (list g$p$8543$1RbCyC)
                                             (- g$lev$8540$1RbCyC '1))))))
                                    g$ls/false$8542$1RbCyC)
                                  ((case-lambda
                                     ((g$t$8544$1RbCyC)
                                      ((case-lambda
                                         ((g$ls/false$8545$1RbCyC)
                                          (if g$ls/false$8545$1RbCyC
                                            (apply
                                              (case-lambda
                                                ((g$p$8546$1RbCyC
                                                   g$q$8547$1RbCyC)
                                                 (if (= g$lev$8540$1RbCyC '0)
                                                   (g$quasicons*$8529$1RbCyC
                                                     g$p$8546$1RbCyC
                                                     (g$quasi$8534$1RbCyC
                                                       g$q$8547$1RbCyC
                                                       g$lev$8540$1RbCyC))
                                                   (g$quasicons$8530$1RbCyC
                                                     (g$quasicons$8530$1RbCyC
                                                       (g$datum$8513$1RbCyC
                                                         'unquote)
                                                       (g$quasi$8534$1RbCyC
                                                         g$p$8546$1RbCyC
                                                         (- g$lev$8540$1RbCyC
                                                            '1)))
                                                     (g$quasi$8534$1RbCyC
                                                       g$q$8547$1RbCyC
                                                       g$lev$8540$1RbCyC)))))
                                              g$ls/false$8545$1RbCyC)
                                            ((case-lambda
                                               ((g$t$8548$1RbCyC)
                                                ((case-lambda
                                                   ((g$ls/false$8549$1RbCyC)
                                                    (if g$ls/false$8549$1RbCyC
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8550$1RbCyC
                                                             g$q$8551$1RbCyC)
                                                           (if (= g$lev$8540$1RbCyC
                                                                  '0)
                                                             (g$quasiappend$8531$1RbCyC
                                                               g$p$8550$1RbCyC
                                                               (g$quasi$8534$1RbCyC
                                                                 g$q$8551$1RbCyC
                                                                 g$lev$8540$1RbCyC))
                                                             (g$quasicons$8530$1RbCyC
                                                               (g$quasicons$8530$1RbCyC
                                                                 (g$datum$8513$1RbCyC
                                                                   'unquote-splicing)
                                                                 (g$quasi$8534$1RbCyC
                                                                   g$p$8550$1RbCyC
                                                                   (- g$lev$8540$1RbCyC
                                                                      '1)))
                                                               (g$quasi$8534$1RbCyC
                                                                 g$q$8551$1RbCyC
                                                                 g$lev$8540$1RbCyC)))))
                                                        g$ls/false$8549$1RbCyC)
                                                      ((case-lambda
                                                         ((g$t$8552$1RbCyC)
                                                          ((case-lambda
                                                             ((g$ls/false$8553$1RbCyC)
                                                              (if g$ls/false$8553$1RbCyC
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$8554$1RbCyC)
                                                                     (g$quasicons$8530$1RbCyC
                                                                       (g$datum$8513$1RbCyC
                                                                         'quasiquote)
                                                                       (g$quasi$8534$1RbCyC
                                                                         (list
                                                                           g$p$8554$1RbCyC)
                                                                         (+ g$lev$8540$1RbCyC
                                                                            '1)))))
                                                                  g$ls/false$8553$1RbCyC)
                                                                ((case-lambda
                                                                   ((g$t$8555$1RbCyC)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8556$1RbCyC)
                                                                        (if g$ls/false$8556$1RbCyC
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8557$1RbCyC
                                                                                 g$q$8558$1RbCyC)
                                                                               (g$quasicons$8530$1RbCyC
                                                                                 (g$quasi$8534$1RbCyC
                                                                                   g$p$8557$1RbCyC
                                                                                   g$lev$8540$1RbCyC)
                                                                                 (g$quasi$8534$1RbCyC
                                                                                   g$q$8558$1RbCyC
                                                                                   g$lev$8540$1RbCyC))))
                                                                            g$ls/false$8556$1RbCyC)
                                                                          ((case-lambda
                                                                             ((g$t$8559$1RbCyC)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8560$1RbCyC)
                                                                                  (if (if g$ls/false$8560$1RbCyC
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$8561$1RbCyC)
                                                                                               (not (g$stx?$7233$1RbCyC
                                                                                                      g$x$8561$1RbCyC))))
                                                                                            g$ls/false$8560$1RbCyC))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$8562$1RbCyC)
                                                                                         (g$quasivector$8532$1RbCyC
                                                                                           (g$vquasi$8533$1RbCyC
                                                                                             g$x$8562$1RbCyC
                                                                                             g$lev$8540$1RbCyC))))
                                                                                      g$ls/false$8560$1RbCyC)
                                                                                    ((case-lambda
                                                                                       ((g$t$8563$1RbCyC)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8564$1RbCyC)
                                                                                            (if g$ls/false$8564$1RbCyC
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8565$1RbCyC)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7482$1RbCyC
                                                                                                       'quote)
                                                                                                     g$p$8565$1RbCyC)))
                                                                                                g$ls/false$8564$1RbCyC)
                                                                                              (g$syntax-violation$7650$1RbCyC
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$8563$1RbCyC))))
                                                                                         (g$syntax-dispatch$7539$1RbCyC
                                                                                           g$t$8563$1RbCyC
                                                                                           'any))))
                                                                                     g$t$8559$1RbCyC))))
                                                                               (g$syntax-dispatch$7539$1RbCyC
                                                                                 g$t$8559$1RbCyC
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$8555$1RbCyC))))
                                                                     (g$syntax-dispatch$7539$1RbCyC
                                                                       g$t$8555$1RbCyC
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8552$1RbCyC))))
                                                           (g$syntax-dispatch$7539$1RbCyC
                                                             g$t$8552$1RbCyC
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8548$1RbCyC))))
                                                 (g$syntax-dispatch$7539$1RbCyC
                                                   g$t$8548$1RbCyC
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8544$1RbCyC))))
                                       (g$syntax-dispatch$7539$1RbCyC
                                         g$t$8544$1RbCyC
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8541$1RbCyC))))
                             (g$syntax-dispatch$7539$1RbCyC
                               g$t$8541$1RbCyC
                               '(#(scheme-id unquote) any)))))
                         g$p$8539$1RbCyC)))))
           (case-lambda
             ((g$x$8535$1RbCyC)
              ((case-lambda
                 ((g$t$8536$1RbCyC)
                  ((case-lambda
                     ((g$ls/false$8537$1RbCyC)
                      (if g$ls/false$8537$1RbCyC
                        (apply
                          (case-lambda
                            ((g$e$8538$1RbCyC)
                             (g$quasi$8534$1RbCyC g$e$8538$1RbCyC '0)))
                          g$ls/false$8537$1RbCyC)
                        (g$syntax-violation$7650$1RbCyC
                          '#f
                          '"invalid syntax"
                          g$t$8536$1RbCyC))))
                   (g$syntax-dispatch$7539$1RbCyC g$t$8536$1RbCyC '(_ any)))))
               g$x$8535$1RbCyC))))))))
   (g$quasisyntax-macro$7531$1RbCyC
     g$quasisyntax-macro$11019$1RbCyC
     ((case-lambda
        (()
         (letrec* ((g$quasi$8645$1RbCyC
                     (case-lambda
                       ((g$p$8659$1RbCyC g$lev$8660$1RbCyC)
                        ((case-lambda
                           ((g$t$8661$1RbCyC)
                            ((case-lambda
                               ((g$ls/false$8662$1RbCyC)
                                (if g$ls/false$8662$1RbCyC
                                  (apply
                                    (case-lambda
                                      ((g$p$8663$1RbCyC)
                                       (if (= g$lev$8660$1RbCyC '0)
                                         ((case-lambda
                                            ((g$g$8664$1RbCyC)
                                             (values
                                               (list g$g$8664$1RbCyC)
                                               (list g$p$8663$1RbCyC)
                                               g$g$8664$1RbCyC)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$8645$1RbCyC
                                                g$p$8663$1RbCyC
                                                (- g$lev$8660$1RbCyC '1))))
                                           (case-lambda
                                             ((g$lhs*$8668$1RbCyC
                                                g$rhs*$8669$1RbCyC
                                                g$p$8670$1RbCyC)
                                              ((case-lambda
                                                 ((g$p$8671$1RbCyC
                                                    g$rhs*$8672$1RbCyC
                                                    g$lhs*$8673$1RbCyC)
                                                  (values
                                                    g$lhs*$8673$1RbCyC
                                                    g$rhs*$8672$1RbCyC
                                                    (list
                                                      'unsyntax
                                                      g$p$8671$1RbCyC))))
                                               g$p$8670$1RbCyC
                                               g$rhs*$8669$1RbCyC
                                               g$lhs*$8668$1RbCyC)))))))
                                    g$ls/false$8662$1RbCyC)
                                  ((case-lambda
                                     ((g$t$8674$1RbCyC)
                                      ((case-lambda
                                         ((g$ls/false$8675$1RbCyC)
                                          (if (if g$ls/false$8675$1RbCyC
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$8660$1RbCyC
                                                          '0)))
                                                    g$ls/false$8675$1RbCyC))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$7650$1RbCyC
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$8659$1RbCyC)))
                                              g$ls/false$8675$1RbCyC)
                                            ((case-lambda
                                               ((g$t$8676$1RbCyC)
                                                ((case-lambda
                                                   ((g$ls/false$8677$1RbCyC)
                                                    (if g$ls/false$8677$1RbCyC
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$8678$1RbCyC
                                                             g$q$8679$1RbCyC)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$8645$1RbCyC
                                                                  g$q$8679$1RbCyC
                                                                  g$lev$8660$1RbCyC)))
                                                             (case-lambda
                                                               ((g$lhs*$8683$1RbCyC
                                                                  g$rhs*$8684$1RbCyC
                                                                  g$q$8685$1RbCyC)
                                                                ((case-lambda
                                                                   ((g$q$8686$1RbCyC
                                                                      g$rhs*$8687$1RbCyC
                                                                      g$lhs*$8688$1RbCyC)
                                                                    (if (= g$lev$8660$1RbCyC
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$8689$1RbCyC)
                                                                          (values
                                                                            (append
                                                                              g$g*$8689$1RbCyC
                                                                              g$lhs*$8688$1RbCyC)
                                                                            (append
                                                                              g$p*$8678$1RbCyC
                                                                              g$rhs*$8687$1RbCyC)
                                                                            (append
                                                                              g$g*$8689$1RbCyC
                                                                              g$q$8686$1RbCyC))))
                                                                       (map (case-lambda
                                                                              ((g$x$8690$1RbCyC)
                                                                               (gensym)))
                                                                            g$p*$8678$1RbCyC))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$8645$1RbCyC
                                                                             g$p*$8678$1RbCyC
                                                                             (- g$lev$8660$1RbCyC
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$8694$1RbCyC
                                                                             g$rhs2*$8695$1RbCyC
                                                                             g$p*$8696$1RbCyC)
                                                                           ((case-lambda
                                                                              ((g$p*$8697$1RbCyC
                                                                                 g$rhs2*$8698$1RbCyC
                                                                                 g$lhs2*$8699$1RbCyC)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$8699$1RbCyC
                                                                                   g$lhs*$8688$1RbCyC)
                                                                                 (append
                                                                                   g$rhs2*$8698$1RbCyC
                                                                                   g$rhs*$8687$1RbCyC)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$8697$1RbCyC)
                                                                                   g$q$8686$1RbCyC))))
                                                                            g$p*$8696$1RbCyC
                                                                            g$rhs2*$8695$1RbCyC
                                                                            g$lhs2*$8694$1RbCyC)))))))
                                                                 g$q$8685$1RbCyC
                                                                 g$rhs*$8684$1RbCyC
                                                                 g$lhs*$8683$1RbCyC))))))
                                                        g$ls/false$8677$1RbCyC)
                                                      ((case-lambda
                                                         ((g$t$8700$1RbCyC)
                                                          ((case-lambda
                                                             ((g$ls/false$8701$1RbCyC)
                                                              (if g$ls/false$8701$1RbCyC
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$8702$1RbCyC
                                                                       g$q$8703$1RbCyC)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$8645$1RbCyC
                                                                            g$q$8703$1RbCyC
                                                                            g$lev$8660$1RbCyC)))
                                                                       (case-lambda
                                                                         ((g$lhs*$8707$1RbCyC
                                                                            g$rhs*$8708$1RbCyC
                                                                            g$q$8709$1RbCyC)
                                                                          ((case-lambda
                                                                             ((g$q$8710$1RbCyC
                                                                                g$rhs*$8711$1RbCyC
                                                                                g$lhs*$8712$1RbCyC)
                                                                              (if (= g$lev$8660$1RbCyC
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$8713$1RbCyC)
                                                                                    (values
                                                                                      (append
                                                                                        (map (case-lambda
                                                                                               ((g$g$8714$1RbCyC)
                                                                                                (cons
                                                                                                  g$g$8714$1RbCyC
                                                                                                  '(...))))
                                                                                             g$g*$8713$1RbCyC)
                                                                                        g$lhs*$8712$1RbCyC)
                                                                                      (append
                                                                                        g$p*$8702$1RbCyC
                                                                                        g$rhs*$8711$1RbCyC)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (map (case-lambda
                                                                                                 ((g$g$8715$1RbCyC)
                                                                                                  (cons
                                                                                                    g$g$8715$1RbCyC
                                                                                                    '(...))))
                                                                                               g$g*$8713$1RbCyC))
                                                                                        g$q$8710$1RbCyC))))
                                                                                 (map (case-lambda
                                                                                        ((g$x$8716$1RbCyC)
                                                                                         (gensym)))
                                                                                      g$p*$8702$1RbCyC))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$8645$1RbCyC
                                                                                       g$p*$8702$1RbCyC
                                                                                       (- g$lev$8660$1RbCyC
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$8720$1RbCyC
                                                                                       g$rhs2*$8721$1RbCyC
                                                                                       g$p*$8722$1RbCyC)
                                                                                     ((case-lambda
                                                                                        ((g$p*$8723$1RbCyC
                                                                                           g$rhs2*$8724$1RbCyC
                                                                                           g$lhs2*$8725$1RbCyC)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$8725$1RbCyC
                                                                                             g$lhs*$8712$1RbCyC)
                                                                                           (append
                                                                                             g$rhs2*$8724$1RbCyC
                                                                                             g$rhs*$8711$1RbCyC)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$8723$1RbCyC)
                                                                                             g$q$8710$1RbCyC))))
                                                                                      g$p*$8722$1RbCyC
                                                                                      g$rhs2*$8721$1RbCyC
                                                                                      g$lhs2*$8720$1RbCyC)))))))
                                                                           g$q$8709$1RbCyC
                                                                           g$rhs*$8708$1RbCyC
                                                                           g$lhs*$8707$1RbCyC))))))
                                                                  g$ls/false$8701$1RbCyC)
                                                                ((case-lambda
                                                                   ((g$t$8726$1RbCyC)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8727$1RbCyC)
                                                                        (if (if g$ls/false$8727$1RbCyC
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$8660$1RbCyC
                                                                                        '0)))
                                                                                  g$ls/false$8727$1RbCyC))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$7650$1RbCyC
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$8659$1RbCyC)))
                                                                            g$ls/false$8727$1RbCyC)
                                                                          ((case-lambda
                                                                             ((g$t$8728$1RbCyC)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8729$1RbCyC)
                                                                                  (if g$ls/false$8729$1RbCyC
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$8730$1RbCyC)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$8645$1RbCyC
                                                                                                g$p$8730$1RbCyC
                                                                                                (+ g$lev$8660$1RbCyC
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$8734$1RbCyC
                                                                                                g$rhs*$8735$1RbCyC
                                                                                                g$p$8736$1RbCyC)
                                                                                              ((case-lambda
                                                                                                 ((g$p$8737$1RbCyC
                                                                                                    g$rhs*$8738$1RbCyC
                                                                                                    g$lhs*$8739$1RbCyC)
                                                                                                  (values
                                                                                                    g$lhs*$8739$1RbCyC
                                                                                                    g$rhs*$8738$1RbCyC
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$8737$1RbCyC))))
                                                                                               g$p$8736$1RbCyC
                                                                                               g$rhs*$8735$1RbCyC
                                                                                               g$lhs*$8734$1RbCyC))))))
                                                                                      g$ls/false$8729$1RbCyC)
                                                                                    ((case-lambda
                                                                                       ((g$t$8740$1RbCyC)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8741$1RbCyC)
                                                                                            (if g$ls/false$8741$1RbCyC
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8742$1RbCyC
                                                                                                     g$q$8743$1RbCyC)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$8645$1RbCyC
                                                                                                          g$p$8742$1RbCyC
                                                                                                          g$lev$8660$1RbCyC)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$8750$1RbCyC
                                                                                                          g$rhs*$8751$1RbCyC
                                                                                                          g$p$8752$1RbCyC)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$8645$1RbCyC
                                                                                                               g$q$8743$1RbCyC
                                                                                                               g$lev$8660$1RbCyC)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$8753$1RbCyC
                                                                                                               g$rhs2*$8754$1RbCyC
                                                                                                               g$q$8755$1RbCyC)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$8756$1RbCyC
                                                                                                                   g$rhs2*$8757$1RbCyC
                                                                                                                   g$lhs2*$8758$1RbCyC
                                                                                                                   g$p$8759$1RbCyC
                                                                                                                   g$rhs*$8760$1RbCyC
                                                                                                                   g$lhs*$8761$1RbCyC)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$8758$1RbCyC
                                                                                                                     g$lhs*$8761$1RbCyC)
                                                                                                                   (append
                                                                                                                     g$rhs2*$8757$1RbCyC
                                                                                                                     g$rhs*$8760$1RbCyC)
                                                                                                                   (cons
                                                                                                                     g$p$8759$1RbCyC
                                                                                                                     g$q$8756$1RbCyC))))
                                                                                                              g$q$8755$1RbCyC
                                                                                                              g$rhs2*$8754$1RbCyC
                                                                                                              g$lhs2*$8753$1RbCyC
                                                                                                              g$p$8752$1RbCyC
                                                                                                              g$rhs*$8751$1RbCyC
                                                                                                              g$lhs*$8750$1RbCyC)))))))))
                                                                                                g$ls/false$8741$1RbCyC)
                                                                                              ((case-lambda
                                                                                                 ((g$t$8762$1RbCyC)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$8763$1RbCyC)
                                                                                                      (if g$ls/false$8763$1RbCyC
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$8764$1RbCyC)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$8645$1RbCyC
                                                                                                                    g$x*$8764$1RbCyC
                                                                                                                    g$lev$8660$1RbCyC)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$8768$1RbCyC
                                                                                                                    g$rhs*$8769$1RbCyC
                                                                                                                    g$x*$8770$1RbCyC)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$8771$1RbCyC
                                                                                                                        g$rhs*$8772$1RbCyC
                                                                                                                        g$lhs*$8773$1RbCyC)
                                                                                                                      (values
                                                                                                                        g$lhs*$8773$1RbCyC
                                                                                                                        g$rhs*$8772$1RbCyC
                                                                                                                        (list->vector
                                                                                                                          g$x*$8771$1RbCyC))))
                                                                                                                   g$x*$8770$1RbCyC
                                                                                                                   g$rhs*$8769$1RbCyC
                                                                                                                   g$lhs*$8768$1RbCyC))))))
                                                                                                          g$ls/false$8763$1RbCyC)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$8774$1RbCyC)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$8775$1RbCyC)
                                                                                                                (if g$ls/false$8775$1RbCyC
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$8659$1RbCyC)))
                                                                                                                    g$ls/false$8775$1RbCyC)
                                                                                                                  (g$syntax-violation$7650$1RbCyC
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$8774$1RbCyC))))
                                                                                                             (g$syntax-dispatch$7539$1RbCyC
                                                                                                               g$t$8774$1RbCyC
                                                                                                               '_))))
                                                                                                         g$t$8762$1RbCyC))))
                                                                                                   (g$syntax-dispatch$7539$1RbCyC
                                                                                                     g$t$8762$1RbCyC
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$8740$1RbCyC))))
                                                                                         (g$syntax-dispatch$7539$1RbCyC
                                                                                           g$t$8740$1RbCyC
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$8728$1RbCyC))))
                                                                               (g$syntax-dispatch$7539$1RbCyC
                                                                                 g$t$8728$1RbCyC
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$8726$1RbCyC))))
                                                                     (g$syntax-dispatch$7539$1RbCyC
                                                                       g$t$8726$1RbCyC
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$8700$1RbCyC))))
                                                           (g$syntax-dispatch$7539$1RbCyC
                                                             g$t$8700$1RbCyC
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$8676$1RbCyC))))
                                                 (g$syntax-dispatch$7539$1RbCyC
                                                   g$t$8676$1RbCyC
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8674$1RbCyC))))
                                       (g$syntax-dispatch$7539$1RbCyC
                                         g$t$8674$1RbCyC
                                         '#(scheme-id unsyntax)))))
                                   g$t$8661$1RbCyC))))
                             (g$syntax-dispatch$7539$1RbCyC
                               g$t$8661$1RbCyC
                               '(#(scheme-id unsyntax) any)))))
                         g$p$8659$1RbCyC)))))
           (case-lambda
             ((g$x$8646$1RbCyC)
              ((case-lambda
                 ((g$t$8647$1RbCyC)
                  ((case-lambda
                     ((g$ls/false$8648$1RbCyC)
                      (if g$ls/false$8648$1RbCyC
                        (apply
                          (case-lambda
                            ((g$e$8649$1RbCyC)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$8645$1RbCyC g$e$8649$1RbCyC '0)))
                               (case-lambda
                                 ((g$lhs*$8653$1RbCyC
                                    g$rhs*$8654$1RbCyC
                                    g$v$8655$1RbCyC)
                                  ((case-lambda
                                     ((g$v$8656$1RbCyC
                                        g$rhs*$8657$1RbCyC
                                        g$lhs*$8658$1RbCyC)
                                      (g$bless$7502$1RbCyC
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$8657$1RbCyC)
                                          '()
                                          (list
                                            g$lhs*$8658$1RbCyC
                                            (list 'syntax g$v$8656$1RbCyC))))))
                                   g$v$8655$1RbCyC
                                   g$rhs*$8654$1RbCyC
                                   g$lhs*$8653$1RbCyC))))))
                          g$ls/false$8648$1RbCyC)
                        (g$syntax-violation$7650$1RbCyC
                          '#f
                          '"invalid syntax"
                          g$t$8647$1RbCyC))))
                   (g$syntax-dispatch$7539$1RbCyC g$t$8647$1RbCyC '(_ any)))))
               g$x$8646$1RbCyC))))))))
   (g$define-struct-macro$7532$1RbCyC
     g$define-struct-macro$11020$1RbCyC
     (case-lambda
       ((g$stx$8776$1RbCyC)
        (g$syntax-violation$7650$1RbCyC
          '#f
          '"define-struct not supported"
          g$stx$8776$1RbCyC))))
   (g$define-record-type-macro$7533$1RbCyC
     g$define-record-type-macro$11021$1RbCyC
     (case-lambda
       ((g$x$8777$1RbCyC)
        (letrec* ((g$id$8778$1RbCyC
                    (case-lambda
                      ((g$ctxt$9030$1RbCyC . g$str*$9031$1RbCyC)
                       (g$datum->syntax$7652$1RbCyC
                         g$ctxt$9030$1RbCyC
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$9032$1RbCyC)
                                     (if (symbol? g$x$9032$1RbCyC)
                                       (symbol->string g$x$9032$1RbCyC)
                                       (if (string? g$x$9032$1RbCyC)
                                         g$x$9032$1RbCyC
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$9031$1RbCyC)))))))
                  (g$get-record-name$8779$1RbCyC
                    (case-lambda
                      ((g$spec$9021$1RbCyC)
                       ((case-lambda
                          ((g$t$9022$1RbCyC)
                           ((case-lambda
                              ((g$ls/false$9023$1RbCyC)
                               (if g$ls/false$9023$1RbCyC
                                 (apply
                                   (case-lambda
                                     ((g$foo$9024$1RbCyC
                                        g$make-foo$9025$1RbCyC
                                        g$foo?$9026$1RbCyC)
                                      g$foo$9024$1RbCyC))
                                   g$ls/false$9023$1RbCyC)
                                 ((case-lambda
                                    ((g$t$9027$1RbCyC)
                                     ((case-lambda
                                        ((g$ls/false$9028$1RbCyC)
                                         (if g$ls/false$9028$1RbCyC
                                           (apply
                                             (case-lambda
                                               ((g$foo$9029$1RbCyC)
                                                g$foo$9029$1RbCyC))
                                             g$ls/false$9028$1RbCyC)
                                           (g$syntax-violation$7650$1RbCyC
                                             '#f
                                             '"invalid syntax"
                                             g$t$9027$1RbCyC))))
                                      (g$syntax-dispatch$7539$1RbCyC
                                        g$t$9027$1RbCyC
                                        'any))))
                                  g$t$9022$1RbCyC))))
                            (g$syntax-dispatch$7539$1RbCyC
                              g$t$9022$1RbCyC
                              '(any any any)))))
                        g$spec$9021$1RbCyC))))
                  (g$get-record-constructor-name$8780$1RbCyC
                    (case-lambda
                      ((g$spec$9011$1RbCyC)
                       ((case-lambda
                          ((g$t$9012$1RbCyC)
                           ((case-lambda
                              ((g$ls/false$9013$1RbCyC)
                               (if g$ls/false$9013$1RbCyC
                                 (apply
                                   (case-lambda
                                     ((g$foo$9014$1RbCyC
                                        g$make-foo$9015$1RbCyC
                                        g$foo?$9016$1RbCyC)
                                      g$make-foo$9015$1RbCyC))
                                   g$ls/false$9013$1RbCyC)
                                 ((case-lambda
                                    ((g$t$9017$1RbCyC)
                                     ((case-lambda
                                        ((g$ls/false$9018$1RbCyC)
                                         (if (if g$ls/false$9018$1RbCyC
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9019$1RbCyC)
                                                      (g$id?$7261$1RbCyC
                                                        g$foo$9019$1RbCyC)))
                                                   g$ls/false$9018$1RbCyC))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9020$1RbCyC)
                                                (g$id$8778$1RbCyC
                                                  g$foo$9020$1RbCyC
                                                  '"make-"
                                                  (g$stx->datum$7272$1RbCyC
                                                    g$foo$9020$1RbCyC))))
                                             g$ls/false$9018$1RbCyC)
                                           (g$syntax-violation$7650$1RbCyC
                                             '#f
                                             '"invalid syntax"
                                             g$t$9017$1RbCyC))))
                                      (g$syntax-dispatch$7539$1RbCyC
                                        g$t$9017$1RbCyC
                                        'any))))
                                  g$t$9012$1RbCyC))))
                            (g$syntax-dispatch$7539$1RbCyC
                              g$t$9012$1RbCyC
                              '(any any any)))))
                        g$spec$9011$1RbCyC))))
                  (g$get-record-predicate-name$8781$1RbCyC
                    (case-lambda
                      ((g$spec$9001$1RbCyC)
                       ((case-lambda
                          ((g$t$9002$1RbCyC)
                           ((case-lambda
                              ((g$ls/false$9003$1RbCyC)
                               (if g$ls/false$9003$1RbCyC
                                 (apply
                                   (case-lambda
                                     ((g$foo$9004$1RbCyC
                                        g$make-foo$9005$1RbCyC
                                        g$foo?$9006$1RbCyC)
                                      g$foo?$9006$1RbCyC))
                                   g$ls/false$9003$1RbCyC)
                                 ((case-lambda
                                    ((g$t$9007$1RbCyC)
                                     ((case-lambda
                                        ((g$ls/false$9008$1RbCyC)
                                         (if (if g$ls/false$9008$1RbCyC
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9009$1RbCyC)
                                                      (g$id?$7261$1RbCyC
                                                        g$foo$9009$1RbCyC)))
                                                   g$ls/false$9008$1RbCyC))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9010$1RbCyC)
                                                (g$id$8778$1RbCyC
                                                  g$foo$9010$1RbCyC
                                                  (g$stx->datum$7272$1RbCyC
                                                    g$foo$9010$1RbCyC)
                                                  '"?")))
                                             g$ls/false$9008$1RbCyC)
                                           (g$syntax-violation$7650$1RbCyC
                                             '#f
                                             '"invalid syntax"
                                             g$t$9007$1RbCyC))))
                                      (g$syntax-dispatch$7539$1RbCyC
                                        g$t$9007$1RbCyC
                                        'any))))
                                  g$t$9002$1RbCyC))))
                            (g$syntax-dispatch$7539$1RbCyC
                              g$t$9002$1RbCyC
                              '(any any any)))))
                        g$spec$9001$1RbCyC))))
                  (g$get-clause$8782$1RbCyC
                    (case-lambda
                      ((g$id$8992$1RbCyC g$ls$8993$1RbCyC)
                       ((case-lambda
                          ((g$t$8994$1RbCyC)
                           ((case-lambda
                              ((g$ls/false$8995$1RbCyC)
                               (if g$ls/false$8995$1RbCyC
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$8995$1RbCyC)
                                 ((case-lambda
                                    ((g$t$8996$1RbCyC)
                                     ((case-lambda
                                        ((g$ls/false$8997$1RbCyC)
                                         (if g$ls/false$8997$1RbCyC
                                           (apply
                                             (case-lambda
                                               ((g$x$8998$1RbCyC
                                                  g$rest$8999$1RbCyC
                                                  g$ls$9000$1RbCyC)
                                                (if (g$free-id=?$7265$1RbCyC
                                                      (g$bless$7502$1RbCyC
                                                        g$id$8992$1RbCyC)
                                                      g$x$8998$1RbCyC)
                                                  (cons
                                                    g$x$8998$1RbCyC
                                                    g$rest$8999$1RbCyC)
                                                  (g$get-clause$8782$1RbCyC
                                                    g$id$8992$1RbCyC
                                                    g$ls$9000$1RbCyC))))
                                             g$ls/false$8997$1RbCyC)
                                           (g$syntax-violation$7650$1RbCyC
                                             '#f
                                             '"invalid syntax"
                                             g$t$8996$1RbCyC))))
                                      (g$syntax-dispatch$7539$1RbCyC
                                        g$t$8996$1RbCyC
                                        '((any . any) . any)))))
                                  g$t$8994$1RbCyC))))
                            (g$syntax-dispatch$7539$1RbCyC
                              g$t$8994$1RbCyC
                              '()))))
                        g$ls$8993$1RbCyC))))
                  (g$foo-rtd-code$8783$1RbCyC
                    (case-lambda
                      ((g$name$8951$1RbCyC
                         g$clause*$8952$1RbCyC
                         g$parent-rtd-code$8953$1RbCyC)
                       (letrec* ((g$convert-field-spec*$8954$1RbCyC
                                   (case-lambda
                                     ((g$ls$8979$1RbCyC)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$8980$1RbCyC)
                                                ((case-lambda
                                                   ((g$t$8981$1RbCyC)
                                                    ((case-lambda
                                                       ((g$ls/false$8982$1RbCyC)
                                                        (if g$ls/false$8982$1RbCyC
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$8983$1RbCyC
                                                                 g$rest$8984$1RbCyC)
                                                               (list
                                                                 'mutable
                                                                 g$name$8983$1RbCyC)))
                                                            g$ls/false$8982$1RbCyC)
                                                          ((case-lambda
                                                             ((g$t$8985$1RbCyC)
                                                              ((case-lambda
                                                                 ((g$ls/false$8986$1RbCyC)
                                                                  (if g$ls/false$8986$1RbCyC
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$8987$1RbCyC
                                                                           g$rest$8988$1RbCyC)
                                                                         (list
                                                                           'immutable
                                                                           g$name$8987$1RbCyC)))
                                                                      g$ls/false$8986$1RbCyC)
                                                                    ((case-lambda
                                                                       ((g$t$8989$1RbCyC)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8990$1RbCyC)
                                                                            (if g$ls/false$8990$1RbCyC
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$8991$1RbCyC)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$8991$1RbCyC)))
                                                                                g$ls/false$8990$1RbCyC)
                                                                              (g$syntax-violation$7650$1RbCyC
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8989$1RbCyC))))
                                                                         (g$syntax-dispatch$7539$1RbCyC
                                                                           g$t$8989$1RbCyC
                                                                           'any))))
                                                                     g$t$8985$1RbCyC))))
                                                               (g$syntax-dispatch$7539$1RbCyC
                                                                 g$t$8985$1RbCyC
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$8981$1RbCyC))))
                                                     (g$syntax-dispatch$7539$1RbCyC
                                                       g$t$8981$1RbCyC
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$8980$1RbCyC)))
                                             g$ls$8979$1RbCyC))))))
                         ((case-lambda
                            ((g$uid-code$8955$1RbCyC
                               g$sealed?$8956$1RbCyC
                               g$opaque?$8957$1RbCyC
                               g$fields$8958$1RbCyC)
                             (g$bless$7502$1RbCyC
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$8951$1RbCyC)
                                 g$parent-rtd-code$8953$1RbCyC
                                 g$uid-code$8955$1RbCyC
                                 g$sealed?$8956$1RbCyC
                                 g$opaque?$8957$1RbCyC
                                 g$fields$8958$1RbCyC))))
                          ((case-lambda
                             ((g$t$8959$1RbCyC)
                              ((case-lambda
                                 ((g$ls/false$8960$1RbCyC)
                                  (if g$ls/false$8960$1RbCyC
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$8960$1RbCyC)
                                    ((case-lambda
                                       ((g$t$8961$1RbCyC)
                                        ((case-lambda
                                           ((g$ls/false$8962$1RbCyC)
                                            (if g$ls/false$8962$1RbCyC
                                              (apply
                                                (case-lambda
                                                  ((g$uid$8963$1RbCyC)
                                                   (list
                                                     'quote
                                                     g$uid$8963$1RbCyC)))
                                                g$ls/false$8962$1RbCyC)
                                              ((case-lambda
                                                 ((g$t$8964$1RbCyC)
                                                  ((case-lambda
                                                     ((g$ls/false$8965$1RbCyC)
                                                      (if g$ls/false$8965$1RbCyC
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$8965$1RbCyC)
                                                        (g$syntax-violation$7650$1RbCyC
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$8964$1RbCyC))))
                                                   (g$syntax-dispatch$7539$1RbCyC
                                                     g$t$8964$1RbCyC
                                                     '_))))
                                               g$t$8961$1RbCyC))))
                                         (g$syntax-dispatch$7539$1RbCyC
                                           g$t$8961$1RbCyC
                                           '(_ any)))))
                                     g$t$8959$1RbCyC))))
                               (g$syntax-dispatch$7539$1RbCyC
                                 g$t$8959$1RbCyC
                                 '(_)))))
                           (g$get-clause$8782$1RbCyC
                             'nongenerative
                             g$clause*$8952$1RbCyC))
                          ((case-lambda
                             ((g$t$8966$1RbCyC)
                              ((case-lambda
                                 ((g$ls/false$8967$1RbCyC)
                                  (if g$ls/false$8967$1RbCyC
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8967$1RbCyC)
                                    ((case-lambda
                                       ((g$t$8968$1RbCyC)
                                        ((case-lambda
                                           ((g$ls/false$8969$1RbCyC)
                                            (if g$ls/false$8969$1RbCyC
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8969$1RbCyC)
                                              (g$syntax-violation$7650$1RbCyC
                                                '#f
                                                '"invalid syntax"
                                                g$t$8968$1RbCyC))))
                                         (g$syntax-dispatch$7539$1RbCyC
                                           g$t$8968$1RbCyC
                                           '_))))
                                     g$t$8966$1RbCyC))))
                               (g$syntax-dispatch$7539$1RbCyC
                                 g$t$8966$1RbCyC
                                 '(_ #(atom #t))))))
                           (g$get-clause$8782$1RbCyC
                             'sealed
                             g$clause*$8952$1RbCyC))
                          ((case-lambda
                             ((g$t$8970$1RbCyC)
                              ((case-lambda
                                 ((g$ls/false$8971$1RbCyC)
                                  (if g$ls/false$8971$1RbCyC
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8971$1RbCyC)
                                    ((case-lambda
                                       ((g$t$8972$1RbCyC)
                                        ((case-lambda
                                           ((g$ls/false$8973$1RbCyC)
                                            (if g$ls/false$8973$1RbCyC
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8973$1RbCyC)
                                              (g$syntax-violation$7650$1RbCyC
                                                '#f
                                                '"invalid syntax"
                                                g$t$8972$1RbCyC))))
                                         (g$syntax-dispatch$7539$1RbCyC
                                           g$t$8972$1RbCyC
                                           '_))))
                                     g$t$8970$1RbCyC))))
                               (g$syntax-dispatch$7539$1RbCyC
                                 g$t$8970$1RbCyC
                                 '(_ #(atom #t))))))
                           (g$get-clause$8782$1RbCyC
                             'opaque
                             g$clause*$8952$1RbCyC))
                          ((case-lambda
                             ((g$t$8974$1RbCyC)
                              ((case-lambda
                                 ((g$ls/false$8975$1RbCyC)
                                  (if g$ls/false$8975$1RbCyC
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$8976$1RbCyC)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$8954$1RbCyC
                                             g$field-spec*$8976$1RbCyC))))
                                      g$ls/false$8975$1RbCyC)
                                    ((case-lambda
                                       ((g$t$8977$1RbCyC)
                                        ((case-lambda
                                           ((g$ls/false$8978$1RbCyC)
                                            (if g$ls/false$8978$1RbCyC
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$8978$1RbCyC)
                                              (g$syntax-violation$7650$1RbCyC
                                                '#f
                                                '"invalid syntax"
                                                g$t$8977$1RbCyC))))
                                         (g$syntax-dispatch$7539$1RbCyC
                                           g$t$8977$1RbCyC
                                           '_))))
                                     g$t$8974$1RbCyC))))
                               (g$syntax-dispatch$7539$1RbCyC
                                 g$t$8974$1RbCyC
                                 '(_ . each-any)))))
                           (g$get-clause$8782$1RbCyC
                             'fields
                             g$clause*$8952$1RbCyC)))))))
                  (g$parent-rtd-code$8784$1RbCyC
                    (case-lambda
                      ((g$clause*$8939$1RbCyC)
                       ((case-lambda
                          ((g$t$8940$1RbCyC)
                           ((case-lambda
                              ((g$ls/false$8941$1RbCyC)
                               (if g$ls/false$8941$1RbCyC
                                 (apply
                                   (case-lambda
                                     ((g$name$8942$1RbCyC)
                                      (list
                                        'record-type-descriptor
                                        g$name$8942$1RbCyC)))
                                   g$ls/false$8941$1RbCyC)
                                 ((case-lambda
                                    ((g$t$8943$1RbCyC)
                                     ((case-lambda
                                        ((g$ls/false$8944$1RbCyC)
                                         (if g$ls/false$8944$1RbCyC
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$8945$1RbCyC)
                                                    ((case-lambda
                                                       ((g$ls/false$8946$1RbCyC)
                                                        (if g$ls/false$8946$1RbCyC
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$8947$1RbCyC
                                                                 g$rcd$8948$1RbCyC)
                                                               g$rtd$8947$1RbCyC))
                                                            g$ls/false$8946$1RbCyC)
                                                          ((case-lambda
                                                             ((g$t$8949$1RbCyC)
                                                              ((case-lambda
                                                                 ((g$ls/false$8950$1RbCyC)
                                                                  (if g$ls/false$8950$1RbCyC
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$8950$1RbCyC)
                                                                    (g$syntax-violation$7650$1RbCyC
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8949$1RbCyC))))
                                                               (g$syntax-dispatch$7539$1RbCyC
                                                                 g$t$8949$1RbCyC
                                                                 '#(atom #f)))))
                                                           g$t$8945$1RbCyC))))
                                                     (g$syntax-dispatch$7539$1RbCyC
                                                       g$t$8945$1RbCyC
                                                       '(_ any any)))))
                                                 (g$get-clause$8782$1RbCyC
                                                   'parent-rtd
                                                   g$clause*$8939$1RbCyC))))
                                             g$ls/false$8944$1RbCyC)
                                           (g$syntax-violation$7650$1RbCyC
                                             '#f
                                             '"invalid syntax"
                                             g$t$8943$1RbCyC))))
                                      (g$syntax-dispatch$7539$1RbCyC
                                        g$t$8943$1RbCyC
                                        '#(atom #f)))))
                                  g$t$8940$1RbCyC))))
                            (g$syntax-dispatch$7539$1RbCyC
                              g$t$8940$1RbCyC
                              '(_ any)))))
                        (g$get-clause$8782$1RbCyC
                          'parent
                          g$clause*$8939$1RbCyC)))))
                  (g$parent-rcd-code$8785$1RbCyC
                    (case-lambda
                      ((g$clause*$8927$1RbCyC)
                       ((case-lambda
                          ((g$t$8928$1RbCyC)
                           ((case-lambda
                              ((g$ls/false$8929$1RbCyC)
                               (if g$ls/false$8929$1RbCyC
                                 (apply
                                   (case-lambda
                                     ((g$name$8930$1RbCyC)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$8930$1RbCyC)))
                                   g$ls/false$8929$1RbCyC)
                                 ((case-lambda
                                    ((g$t$8931$1RbCyC)
                                     ((case-lambda
                                        ((g$ls/false$8932$1RbCyC)
                                         (if g$ls/false$8932$1RbCyC
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$8933$1RbCyC)
                                                    ((case-lambda
                                                       ((g$ls/false$8934$1RbCyC)
                                                        (if g$ls/false$8934$1RbCyC
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$8935$1RbCyC
                                                                 g$rcd$8936$1RbCyC)
                                                               g$rcd$8936$1RbCyC))
                                                            g$ls/false$8934$1RbCyC)
                                                          ((case-lambda
                                                             ((g$t$8937$1RbCyC)
                                                              ((case-lambda
                                                                 ((g$ls/false$8938$1RbCyC)
                                                                  (if g$ls/false$8938$1RbCyC
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$8938$1RbCyC)
                                                                    (g$syntax-violation$7650$1RbCyC
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8937$1RbCyC))))
                                                               (g$syntax-dispatch$7539$1RbCyC
                                                                 g$t$8937$1RbCyC
                                                                 '#(atom #f)))))
                                                           g$t$8933$1RbCyC))))
                                                     (g$syntax-dispatch$7539$1RbCyC
                                                       g$t$8933$1RbCyC
                                                       '(_ any any)))))
                                                 (g$get-clause$8782$1RbCyC
                                                   'parent-rtd
                                                   g$clause*$8927$1RbCyC))))
                                             g$ls/false$8932$1RbCyC)
                                           (g$syntax-violation$7650$1RbCyC
                                             '#f
                                             '"invalid syntax"
                                             g$t$8931$1RbCyC))))
                                      (g$syntax-dispatch$7539$1RbCyC
                                        g$t$8931$1RbCyC
                                        '#(atom #f)))))
                                  g$t$8928$1RbCyC))))
                            (g$syntax-dispatch$7539$1RbCyC
                              g$t$8928$1RbCyC
                              '(_ any)))))
                        (g$get-clause$8782$1RbCyC
                          'parent
                          g$clause*$8927$1RbCyC)))))
                  (g$foo-rcd-code$8786$1RbCyC
                    (case-lambda
                      ((g$clause*$8923$1RbCyC
                         g$foo-rtd$8924$1RbCyC
                         g$protocol$8925$1RbCyC
                         g$parent-rcd-code$8926$1RbCyC)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$8924$1RbCyC
                         g$parent-rcd-code$8926$1RbCyC
                         g$protocol$8925$1RbCyC))))
                  (g$get-protocol-code$8787$1RbCyC
                    (case-lambda
                      ((g$clause*$8917$1RbCyC)
                       ((case-lambda
                          ((g$t$8918$1RbCyC)
                           ((case-lambda
                              ((g$ls/false$8919$1RbCyC)
                               (if g$ls/false$8919$1RbCyC
                                 (apply
                                   (case-lambda
                                     ((g$expr$8920$1RbCyC) g$expr$8920$1RbCyC))
                                   g$ls/false$8919$1RbCyC)
                                 ((case-lambda
                                    ((g$t$8921$1RbCyC)
                                     ((case-lambda
                                        ((g$ls/false$8922$1RbCyC)
                                         (if g$ls/false$8922$1RbCyC
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$8922$1RbCyC)
                                           (g$syntax-violation$7650$1RbCyC
                                             '#f
                                             '"invalid syntax"
                                             g$t$8921$1RbCyC))))
                                      (g$syntax-dispatch$7539$1RbCyC
                                        g$t$8921$1RbCyC
                                        '_))))
                                  g$t$8918$1RbCyC))))
                            (g$syntax-dispatch$7539$1RbCyC
                              g$t$8918$1RbCyC
                              '(_ any)))))
                        (g$get-clause$8782$1RbCyC
                          'protocol
                          g$clause*$8917$1RbCyC)))))
                  (g$get-fields$8788$1RbCyC
                    (case-lambda
                      ((g$clause*$8908$1RbCyC)
                       ((case-lambda
                          ((g$t$8909$1RbCyC)
                           ((case-lambda
                              ((g$ls/false$8910$1RbCyC)
                               (if g$ls/false$8910$1RbCyC
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$8910$1RbCyC)
                                 ((case-lambda
                                    ((g$t$8911$1RbCyC)
                                     ((case-lambda
                                        ((g$ls/false$8912$1RbCyC)
                                         (if g$ls/false$8912$1RbCyC
                                           (apply
                                             (case-lambda
                                               ((g$f*$8913$1RbCyC)
                                                g$f*$8913$1RbCyC))
                                             g$ls/false$8912$1RbCyC)
                                           ((case-lambda
                                              ((g$t$8914$1RbCyC)
                                               ((case-lambda
                                                  ((g$ls/false$8915$1RbCyC)
                                                   (if g$ls/false$8915$1RbCyC
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8916$1RbCyC)
                                                          (g$get-fields$8788$1RbCyC
                                                            g$rest$8916$1RbCyC)))
                                                       g$ls/false$8915$1RbCyC)
                                                     (g$syntax-violation$7650$1RbCyC
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8914$1RbCyC))))
                                                (g$syntax-dispatch$7539$1RbCyC
                                                  g$t$8914$1RbCyC
                                                  '(_ . any)))))
                                            g$t$8911$1RbCyC))))
                                      (g$syntax-dispatch$7539$1RbCyC
                                        g$t$8911$1RbCyC
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$8909$1RbCyC))))
                            (g$syntax-dispatch$7539$1RbCyC
                              g$t$8909$1RbCyC
                              '()))))
                        g$clause*$8908$1RbCyC))))
                  (g$get-mutator-indices$8789$1RbCyC
                    (case-lambda
                      ((g$fields$8896$1RbCyC)
                       ((letrec ((g$f$8897$1RbCyC
                                   (case-lambda
                                     ((g$fields$8898$1RbCyC g$i$8899$1RbCyC)
                                      ((case-lambda
                                         ((g$t$8900$1RbCyC)
                                          ((case-lambda
                                             ((g$ls/false$8901$1RbCyC)
                                              (if g$ls/false$8901$1RbCyC
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$8901$1RbCyC)
                                                ((case-lambda
                                                   ((g$t$8902$1RbCyC)
                                                    ((case-lambda
                                                       ((g$ls/false$8903$1RbCyC)
                                                        (if g$ls/false$8903$1RbCyC
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$8904$1RbCyC)
                                                               (cons
                                                                 g$i$8899$1RbCyC
                                                                 (g$f$8897$1RbCyC
                                                                   g$rest$8904$1RbCyC
                                                                   (+ g$i$8899$1RbCyC
                                                                      '1)))))
                                                            g$ls/false$8903$1RbCyC)
                                                          ((case-lambda
                                                             ((g$t$8905$1RbCyC)
                                                              ((case-lambda
                                                                 ((g$ls/false$8906$1RbCyC)
                                                                  (if g$ls/false$8906$1RbCyC
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$8907$1RbCyC)
                                                                         (g$f$8897$1RbCyC
                                                                           g$rest$8907$1RbCyC
                                                                           (+ g$i$8899$1RbCyC
                                                                              '1))))
                                                                      g$ls/false$8906$1RbCyC)
                                                                    (g$syntax-violation$7650$1RbCyC
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8905$1RbCyC))))
                                                               (g$syntax-dispatch$7539$1RbCyC
                                                                 g$t$8905$1RbCyC
                                                                 '(_ . any)))))
                                                           g$t$8902$1RbCyC))))
                                                     (g$syntax-dispatch$7539$1RbCyC
                                                       g$t$8902$1RbCyC
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$8900$1RbCyC))))
                                           (g$syntax-dispatch$7539$1RbCyC
                                             g$t$8900$1RbCyC
                                             '()))))
                                       g$fields$8898$1RbCyC)))))
                          g$f$8897$1RbCyC)
                        g$fields$8896$1RbCyC
                        '0))))
                  (g$get-mutators$8790$1RbCyC
                    (case-lambda
                      ((g$foo$8875$1RbCyC g$fields$8876$1RbCyC)
                       (letrec* ((g$gen-name$8877$1RbCyC
                                   (case-lambda
                                     ((g$x$8895$1RbCyC)
                                      (g$datum->syntax$7652$1RbCyC
                                        g$foo$8875$1RbCyC
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7653$1RbCyC
                                                g$foo$8875$1RbCyC))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7653$1RbCyC
                                                g$x$8895$1RbCyC))
                                            '"-set!")))))))
                         ((letrec ((g$f$8878$1RbCyC
                                     (case-lambda
                                       ((g$fields$8879$1RbCyC)
                                        ((case-lambda
                                           ((g$t$8880$1RbCyC)
                                            ((case-lambda
                                               ((g$ls/false$8881$1RbCyC)
                                                (if g$ls/false$8881$1RbCyC
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$8881$1RbCyC)
                                                  ((case-lambda
                                                     ((g$t$8882$1RbCyC)
                                                      ((case-lambda
                                                         ((g$ls/false$8883$1RbCyC)
                                                          (if g$ls/false$8883$1RbCyC
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$8884$1RbCyC
                                                                   g$accessor$8885$1RbCyC
                                                                   g$mutator$8886$1RbCyC
                                                                   g$rest$8887$1RbCyC)
                                                                 (cons
                                                                   g$mutator$8886$1RbCyC
                                                                   (g$f$8878$1RbCyC
                                                                     g$rest$8887$1RbCyC))))
                                                              g$ls/false$8883$1RbCyC)
                                                            ((case-lambda
                                                               ((g$t$8888$1RbCyC)
                                                                ((case-lambda
                                                                   ((g$ls/false$8889$1RbCyC)
                                                                    (if g$ls/false$8889$1RbCyC
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$8890$1RbCyC
                                                                             g$rest$8891$1RbCyC)
                                                                           (cons
                                                                             (g$gen-name$8877$1RbCyC
                                                                               g$name$8890$1RbCyC)
                                                                             (g$f$8878$1RbCyC
                                                                               g$rest$8891$1RbCyC))))
                                                                        g$ls/false$8889$1RbCyC)
                                                                      ((case-lambda
                                                                         ((g$t$8892$1RbCyC)
                                                                          ((case-lambda
                                                                             ((g$ls/false$8893$1RbCyC)
                                                                              (if g$ls/false$8893$1RbCyC
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$8894$1RbCyC)
                                                                                     (g$f$8878$1RbCyC
                                                                                       g$rest$8894$1RbCyC)))
                                                                                  g$ls/false$8893$1RbCyC)
                                                                                (g$syntax-violation$7650$1RbCyC
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$8892$1RbCyC))))
                                                                           (g$syntax-dispatch$7539$1RbCyC
                                                                             g$t$8892$1RbCyC
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$8888$1RbCyC))))
                                                                 (g$syntax-dispatch$7539$1RbCyC
                                                                   g$t$8888$1RbCyC
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$8882$1RbCyC))))
                                                       (g$syntax-dispatch$7539$1RbCyC
                                                         g$t$8882$1RbCyC
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$8880$1RbCyC))))
                                             (g$syntax-dispatch$7539$1RbCyC
                                               g$t$8880$1RbCyC
                                               '()))))
                                         g$fields$8879$1RbCyC)))))
                            g$f$8878$1RbCyC)
                          g$fields$8876$1RbCyC)))))
                  (g$get-accessors$8791$1RbCyC
                    (case-lambda
                      ((g$foo$8841$1RbCyC g$fields$8842$1RbCyC)
                       (letrec* ((g$gen-name$8843$1RbCyC
                                   (case-lambda
                                     ((g$x$8874$1RbCyC)
                                      (g$datum->syntax$7652$1RbCyC
                                        g$foo$8841$1RbCyC
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7653$1RbCyC
                                                g$foo$8841$1RbCyC))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7653$1RbCyC
                                                g$x$8874$1RbCyC)))))))))
                         (map (case-lambda
                                ((g$field$8844$1RbCyC)
                                 ((case-lambda
                                    ((g$t$8845$1RbCyC)
                                     ((case-lambda
                                        ((g$ls/false$8846$1RbCyC)
                                         (if (if g$ls/false$8846$1RbCyC
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$8847$1RbCyC
                                                        g$accessor$8848$1RbCyC
                                                        g$mutator$8849$1RbCyC)
                                                      (g$id?$7261$1RbCyC
                                                        g$accessor$8848$1RbCyC)))
                                                   g$ls/false$8846$1RbCyC))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$8850$1RbCyC
                                                  g$accessor$8851$1RbCyC
                                                  g$mutator$8852$1RbCyC)
                                                g$accessor$8851$1RbCyC))
                                             g$ls/false$8846$1RbCyC)
                                           ((case-lambda
                                              ((g$t$8853$1RbCyC)
                                               ((case-lambda
                                                  ((g$ls/false$8854$1RbCyC)
                                                   (if (if g$ls/false$8854$1RbCyC
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$8855$1RbCyC
                                                                  g$accessor$8856$1RbCyC)
                                                                (g$id?$7261$1RbCyC
                                                                  g$accessor$8856$1RbCyC)))
                                                             g$ls/false$8854$1RbCyC))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$8857$1RbCyC
                                                            g$accessor$8858$1RbCyC)
                                                          g$accessor$8858$1RbCyC))
                                                       g$ls/false$8854$1RbCyC)
                                                     ((case-lambda
                                                        ((g$t$8859$1RbCyC)
                                                         ((case-lambda
                                                            ((g$ls/false$8860$1RbCyC)
                                                             (if (if g$ls/false$8860$1RbCyC
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$8861$1RbCyC)
                                                                          (g$id?$7261$1RbCyC
                                                                            g$name$8861$1RbCyC)))
                                                                       g$ls/false$8860$1RbCyC))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$8862$1RbCyC)
                                                                    (g$gen-name$8843$1RbCyC
                                                                      g$name$8862$1RbCyC)))
                                                                 g$ls/false$8860$1RbCyC)
                                                               ((case-lambda
                                                                  ((g$t$8863$1RbCyC)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8864$1RbCyC)
                                                                       (if (if g$ls/false$8864$1RbCyC
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$8865$1RbCyC)
                                                                                    (g$id?$7261$1RbCyC
                                                                                      g$name$8865$1RbCyC)))
                                                                                 g$ls/false$8864$1RbCyC))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$8866$1RbCyC)
                                                                              (g$gen-name$8843$1RbCyC
                                                                                g$name$8866$1RbCyC)))
                                                                           g$ls/false$8864$1RbCyC)
                                                                         ((case-lambda
                                                                            ((g$t$8867$1RbCyC)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8868$1RbCyC)
                                                                                 (if (if g$ls/false$8868$1RbCyC
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$8869$1RbCyC)
                                                                                              (g$id?$7261$1RbCyC
                                                                                                g$name$8869$1RbCyC)))
                                                                                           g$ls/false$8868$1RbCyC))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$8870$1RbCyC)
                                                                                        (g$gen-name$8843$1RbCyC
                                                                                          g$name$8870$1RbCyC)))
                                                                                     g$ls/false$8868$1RbCyC)
                                                                                   ((case-lambda
                                                                                      ((g$t$8871$1RbCyC)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8872$1RbCyC)
                                                                                           (if g$ls/false$8872$1RbCyC
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$8873$1RbCyC)
                                                                                                  (g$syntax-violation$7650$1RbCyC
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$8844$1RbCyC)))
                                                                                               g$ls/false$8872$1RbCyC)
                                                                                             (g$syntax-violation$7650$1RbCyC
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8871$1RbCyC))))
                                                                                        (g$syntax-dispatch$7539$1RbCyC
                                                                                          g$t$8871$1RbCyC
                                                                                          'any))))
                                                                                    g$t$8867$1RbCyC))))
                                                                              (g$syntax-dispatch$7539$1RbCyC
                                                                                g$t$8867$1RbCyC
                                                                                'any))))
                                                                          g$t$8863$1RbCyC))))
                                                                    (g$syntax-dispatch$7539$1RbCyC
                                                                      g$t$8863$1RbCyC
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$8859$1RbCyC))))
                                                          (g$syntax-dispatch$7539$1RbCyC
                                                            g$t$8859$1RbCyC
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$8853$1RbCyC))))
                                                (g$syntax-dispatch$7539$1RbCyC
                                                  g$t$8853$1RbCyC
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$8845$1RbCyC))))
                                      (g$syntax-dispatch$7539$1RbCyC
                                        g$t$8845$1RbCyC
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$8844$1RbCyC)))
                              g$fields$8842$1RbCyC)))))
                  (g$enumerate$8792$1RbCyC
                    (case-lambda
                      ((g$ls$8837$1RbCyC)
                       ((letrec ((g$f$8838$1RbCyC
                                   (case-lambda
                                     ((g$ls$8839$1RbCyC g$i$8840$1RbCyC)
                                      (if (null? g$ls$8839$1RbCyC)
                                        '()
                                        (cons
                                          g$i$8840$1RbCyC
                                          (g$f$8838$1RbCyC
                                            (cdr g$ls$8839$1RbCyC)
                                            (+ g$i$8840$1RbCyC '1))))))))
                          g$f$8838$1RbCyC)
                        g$ls$8837$1RbCyC
                        '0))))
                  (g$do-define-record$8793$1RbCyC
                    (case-lambda
                      ((g$namespec$8817$1RbCyC g$clause*$8818$1RbCyC)
                       ((case-lambda
                          ((g$foo$8819$1RbCyC)
                           ((case-lambda
                              ((g$foo-rtd$8820$1RbCyC)
                               ((case-lambda
                                  ((g$foo-rcd$8821$1RbCyC)
                                   ((case-lambda
                                      ((g$protocol$8822$1RbCyC)
                                       ((case-lambda
                                          ((g$make-foo$8823$1RbCyC)
                                           ((case-lambda
                                              ((g$fields$8824$1RbCyC)
                                               ((case-lambda
                                                  ((g$idx*$8825$1RbCyC)
                                                   ((case-lambda
                                                      ((g$foo-x*$8826$1RbCyC)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$8827$1RbCyC)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$8828$1RbCyC)
                                                               ((case-lambda
                                                                  ((g$foo?$8829$1RbCyC)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$8830$1RbCyC)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$8831$1RbCyC)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$8832$1RbCyC)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7502$1RbCyC
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$8820$1RbCyC
                                                                                           g$foo-rtd-code$8830$1RbCyC)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$8822$1RbCyC
                                                                                             g$protocol-code$8832$1RbCyC)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$8821$1RbCyC
                                                                                               g$foo-rcd-code$8831$1RbCyC)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$8819$1RbCyC
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$8820$1RbCyC)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$8821$1RbCyC)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$8829$1RbCyC
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$8820$1RbCyC))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$8823$1RbCyC
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$8821$1RbCyC))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$8833$1RbCyC
                                                                                                               g$idx$8834$1RbCyC)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$8833$1RbCyC
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$8820$1RbCyC
                                                                                                                 g$idx$8834$1RbCyC))))
                                                                                                          g$foo-x*$8826$1RbCyC
                                                                                                          g$idx*$8825$1RbCyC)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$8835$1RbCyC
                                                                                                               g$idx$8836$1RbCyC)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$8835$1RbCyC
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$8820$1RbCyC
                                                                                                                 g$idx$8836$1RbCyC))))
                                                                                                          g$set-foo-x!*$8827$1RbCyC
                                                                                                          g$set-foo-idx*$8828$1RbCyC)))))))))))))))
                                                                            (g$get-protocol-code$8787$1RbCyC
                                                                              g$clause*$8818$1RbCyC))))
                                                                        (g$foo-rcd-code$8786$1RbCyC
                                                                          g$clause*$8818$1RbCyC
                                                                          g$foo-rtd$8820$1RbCyC
                                                                          g$protocol$8822$1RbCyC
                                                                          (g$parent-rcd-code$8785$1RbCyC
                                                                            g$clause*$8818$1RbCyC)))))
                                                                    (g$foo-rtd-code$8783$1RbCyC
                                                                      g$foo$8819$1RbCyC
                                                                      g$clause*$8818$1RbCyC
                                                                      (g$parent-rtd-code$8784$1RbCyC
                                                                        g$clause*$8818$1RbCyC)))))
                                                                (g$get-record-predicate-name$8781$1RbCyC
                                                                  g$namespec$8817$1RbCyC))))
                                                            (g$get-mutator-indices$8789$1RbCyC
                                                              g$fields$8824$1RbCyC))))
                                                        (g$get-mutators$8790$1RbCyC
                                                          g$foo$8819$1RbCyC
                                                          g$fields$8824$1RbCyC))))
                                                    (g$get-accessors$8791$1RbCyC
                                                      g$foo$8819$1RbCyC
                                                      g$fields$8824$1RbCyC))))
                                                (g$enumerate$8792$1RbCyC
                                                  g$fields$8824$1RbCyC))))
                                            (g$get-fields$8788$1RbCyC
                                              g$clause*$8818$1RbCyC))))
                                        (g$get-record-constructor-name$8780$1RbCyC
                                          g$namespec$8817$1RbCyC))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$8779$1RbCyC
                          g$namespec$8817$1RbCyC)))))
                  (g$verify-clauses$8794$1RbCyC
                    (case-lambda
                      ((g$x$8799$1RbCyC g$cls*$8800$1RbCyC)
                       (letrec* ((g$valid-kwds$8801$1RbCyC
                                   (map g$bless$7502$1RbCyC
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$8802$1RbCyC
                                   (case-lambda
                                     ((g$x$8814$1RbCyC g$ls$8815$1RbCyC)
                                      (if (pair? g$ls$8815$1RbCyC)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$8816$1RbCyC)
                                              (if g$t$8816$1RbCyC
                                                g$t$8816$1RbCyC
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$8802$1RbCyC
                                                    g$x$8814$1RbCyC
                                                    (cdr g$ls$8815$1RbCyC))))))
                                           (g$free-id=?$7265$1RbCyC
                                             g$x$8814$1RbCyC
                                             (car g$ls$8815$1RbCyC))))
                                        '#f)))))
                         ((letrec ((g$f$8803$1RbCyC
                                     (case-lambda
                                       ((g$cls*$8804$1RbCyC g$seen*$8805$1RbCyC)
                                        (if (not (null? g$cls*$8804$1RbCyC))
                                          ((case-lambda
                                             ((g$t$8806$1RbCyC)
                                              ((case-lambda
                                                 ((g$ls/false$8807$1RbCyC)
                                                  (if g$ls/false$8807$1RbCyC
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$8808$1RbCyC
                                                           g$rest$8809$1RbCyC)
                                                         (if ((case-lambda
                                                                ((g$t$8810$1RbCyC)
                                                                 (if g$t$8810$1RbCyC
                                                                   g$t$8810$1RbCyC
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$8802$1RbCyC
                                                                            g$kwd$8808$1RbCyC
                                                                            g$valid-kwds$8801$1RbCyC))))))
                                                              (not (g$id?$7261$1RbCyC
                                                                     g$kwd$8808$1RbCyC)))
                                                           (g$syntax-violation$7650$1RbCyC
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$8808$1RbCyC)
                                                           (if (g$bound-id-member?$7268$1RbCyC
                                                                 g$kwd$8808$1RbCyC
                                                                 g$seen*$8805$1RbCyC)
                                                             (g$syntax-violation$7650$1RbCyC
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$8799$1RbCyC
                                                               g$kwd$8808$1RbCyC)
                                                             (g$f$8803$1RbCyC
                                                               (cdr g$cls*$8804$1RbCyC)
                                                               (cons
                                                                 g$kwd$8808$1RbCyC
                                                                 g$seen*$8805$1RbCyC))))))
                                                      g$ls/false$8807$1RbCyC)
                                                    ((case-lambda
                                                       ((g$t$8811$1RbCyC)
                                                        ((case-lambda
                                                           ((g$ls/false$8812$1RbCyC)
                                                            (if g$ls/false$8812$1RbCyC
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$8813$1RbCyC)
                                                                   (g$syntax-violation$7650$1RbCyC
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$8813$1RbCyC)))
                                                                g$ls/false$8812$1RbCyC)
                                                              (g$syntax-violation$7650$1RbCyC
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8811$1RbCyC))))
                                                         (g$syntax-dispatch$7539$1RbCyC
                                                           g$t$8811$1RbCyC
                                                           'any))))
                                                     g$t$8806$1RbCyC))))
                                               (g$syntax-dispatch$7539$1RbCyC
                                                 g$t$8806$1RbCyC
                                                 '(any . any)))))
                                           (car g$cls*$8804$1RbCyC))
                                          (void))))))
                            g$f$8803$1RbCyC)
                          g$cls*$8800$1RbCyC
                          '()))))))
          ((case-lambda
             ((g$t$8795$1RbCyC)
              ((case-lambda
                 ((g$ls/false$8796$1RbCyC)
                  (if g$ls/false$8796$1RbCyC
                    (apply
                      (case-lambda
                        ((g$namespec$8797$1RbCyC g$clause*$8798$1RbCyC)
                         (begin
                           (g$verify-clauses$8794$1RbCyC
                             g$x$8777$1RbCyC
                             g$clause*$8798$1RbCyC)
                           (g$do-define-record$8793$1RbCyC
                             g$namespec$8797$1RbCyC
                             g$clause*$8798$1RbCyC))))
                      g$ls/false$8796$1RbCyC)
                    (g$syntax-violation$7650$1RbCyC
                      '#f
                      '"invalid syntax"
                      g$t$8795$1RbCyC))))
               (g$syntax-dispatch$7539$1RbCyC
                 g$t$8795$1RbCyC
                 '(_ any . each-any)))))
           g$x$8777$1RbCyC)))))
   (g$define-condition-type-macro$7534$1RbCyC
     g$define-condition-type-macro$11022$1RbCyC
     (case-lambda
       ((g$x$9033$1RbCyC)
        (letrec* ((g$mkname$9034$1RbCyC
                    (case-lambda
                      ((g$name$9057$1RbCyC g$suffix$9058$1RbCyC)
                       (g$datum->syntax$7652$1RbCyC
                         g$name$9057$1RbCyC
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$7653$1RbCyC g$name$9057$1RbCyC))
                             g$suffix$9058$1RbCyC)))))))
          ((case-lambda
             ((g$t$9035$1RbCyC)
              ((case-lambda
                 ((g$ls/false$9036$1RbCyC)
                  (if (if g$ls/false$9036$1RbCyC
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9037$1RbCyC
                                 g$name$9038$1RbCyC
                                 g$super$9039$1RbCyC
                                 g$constructor$9040$1RbCyC
                                 g$predicate$9041$1RbCyC
                                 g$field*$9042$1RbCyC
                                 g$accessor*$9043$1RbCyC)
                               (if (g$id?$7261$1RbCyC g$name$9038$1RbCyC)
                                 (if (g$id?$7261$1RbCyC g$super$9039$1RbCyC)
                                   (if (g$id?$7261$1RbCyC
                                         g$constructor$9040$1RbCyC)
                                     (if (g$id?$7261$1RbCyC
                                           g$predicate$9041$1RbCyC)
                                       (if (g$for-all$4995$1RbCyC
                                             g$id?$7261$1RbCyC
                                             g$field*$9042$1RbCyC)
                                         (begin
                                           '#f
                                           (g$for-all$4995$1RbCyC
                                             g$id?$7261$1RbCyC
                                             g$accessor*$9043$1RbCyC))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9036$1RbCyC))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9044$1RbCyC
                           g$name$9045$1RbCyC
                           g$super$9046$1RbCyC
                           g$constructor$9047$1RbCyC
                           g$predicate$9048$1RbCyC
                           g$field*$9049$1RbCyC
                           g$accessor*$9050$1RbCyC)
                         ((case-lambda
                            ((g$aux-accessor*$9051$1RbCyC)
                             (g$bless$7502$1RbCyC
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9045$1RbCyC
                                         g$constructor$9047$1RbCyC
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9046$1RbCyC)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$9052$1RbCyC
                                                       g$aux$9053$1RbCyC)
                                                     (list
                                                       'immutable
                                                       g$field$9052$1RbCyC
                                                       g$aux$9053$1RbCyC)))
                                                  g$field*$9049$1RbCyC
                                                  g$aux-accessor*$9051$1RbCyC))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9048$1RbCyC
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9045$1RbCyC)))
                                     (map (case-lambda
                                            ((g$accessor$9054$1RbCyC
                                               g$aux$9055$1RbCyC)
                                             (list
                                               'define
                                               g$accessor$9054$1RbCyC
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$9045$1RbCyC)
                                                 g$aux$9055$1RbCyC))))
                                          g$accessor*$9050$1RbCyC
                                          g$aux-accessor*$9051$1RbCyC)))))))
                          (map (case-lambda ((g$x$9056$1RbCyC) (gensym)))
                               g$accessor*$9050$1RbCyC))))
                      g$ls/false$9036$1RbCyC)
                    (g$syntax-violation$7650$1RbCyC
                      '#f
                      '"invalid syntax"
                      g$t$9035$1RbCyC))))
               (g$syntax-dispatch$7539$1RbCyC
                 g$t$9035$1RbCyC
                 '(any any any any any . #(each (any any)))))))
           g$x$9033$1RbCyC)))))
   (g$incorrect-usage-macro$7535$1RbCyC
     g$incorrect-usage-macro$11023$1RbCyC
     (case-lambda
       ((g$e$9059$1RbCyC)
        (g$syntax-violation$7650$1RbCyC
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9059$1RbCyC))))
   (g$parameterize-macro$7536$1RbCyC
     g$parameterize-macro$11024$1RbCyC
     (case-lambda
       ((g$e$9060$1RbCyC)
        ((case-lambda
           ((g$t$9061$1RbCyC)
            ((case-lambda
               ((g$ls/false$9062$1RbCyC)
                (if g$ls/false$9062$1RbCyC
                  (apply
                    (case-lambda
                      ((g$b$9063$1RbCyC g$b*$9064$1RbCyC)
                       (g$bless$7502$1RbCyC
                         (cons
                           'let
                           (cons
                             '()
                             (cons g$b$9063$1RbCyC g$b*$9064$1RbCyC))))))
                    g$ls/false$9062$1RbCyC)
                  ((case-lambda
                     ((g$t$9065$1RbCyC)
                      ((case-lambda
                         ((g$ls/false$9066$1RbCyC)
                          (if g$ls/false$9066$1RbCyC
                            (apply
                              (case-lambda
                                ((g$olhs*$9067$1RbCyC
                                   g$orhs*$9068$1RbCyC
                                   g$b$9069$1RbCyC
                                   g$b*$9070$1RbCyC)
                                 ((case-lambda
                                    ((g$lhs*$9071$1RbCyC g$rhs*$9072$1RbCyC)
                                     (g$bless$7502$1RbCyC
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$9071$1RbCyC
                                             g$rhs*$9072$1RbCyC)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (map (case-lambda
                                                            ((g$lhs$9073$1RbCyC
                                                               g$rhs$9074$1RbCyC)
                                                             (list
                                                               'let
                                                               (list
                                                                 (list
                                                                   't
                                                                   (list
                                                                     g$lhs$9073$1RbCyC)))
                                                               (list
                                                                 g$lhs$9073$1RbCyC
                                                                 g$rhs$9074$1RbCyC)
                                                               (cons
                                                                 'set!
                                                                 (cons
                                                                   g$rhs$9074$1RbCyC
                                                                   '(t))))))
                                                          g$lhs*$9071$1RbCyC
                                                          g$rhs*$9072$1RbCyC)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$9069$1RbCyC
                                                         g$b*$9070$1RbCyC)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$9067$1RbCyC
                                           g$orhs*$9068$1RbCyC)))))
                                  (g$generate-temporaries$7640$1RbCyC
                                    g$olhs*$9067$1RbCyC)
                                  (g$generate-temporaries$7640$1RbCyC
                                    g$orhs*$9068$1RbCyC))))
                              g$ls/false$9066$1RbCyC)
                            (g$syntax-violation$7650$1RbCyC
                              '#f
                              '"invalid syntax"
                              g$t$9065$1RbCyC))))
                       (g$syntax-dispatch$7539$1RbCyC
                         g$t$9065$1RbCyC
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9061$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$9061$1RbCyC
               '(_ () any . each-any)))))
         g$e$9060$1RbCyC))))
   (g$foreign-call-transformer$7537$1RbCyC
     g$foreign-call-transformer$11025$1RbCyC
     (case-lambda
       ((g$e$9075$1RbCyC g$r$9076$1RbCyC g$mr$9077$1RbCyC)
        ((case-lambda
           ((g$t$9078$1RbCyC)
            ((case-lambda
               ((g$ls/false$9079$1RbCyC)
                (if g$ls/false$9079$1RbCyC
                  (apply
                    (case-lambda
                      ((g$name$9080$1RbCyC g$arg*$9081$1RbCyC)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7557$1RbCyC
                             g$name$9080$1RbCyC
                             g$r$9076$1RbCyC
                             g$mr$9077$1RbCyC)
                           (g$chi-expr*$7555$1RbCyC
                             g$arg*$9081$1RbCyC
                             g$r$9076$1RbCyC
                             g$mr$9077$1RbCyC)))))
                    g$ls/false$9079$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$9078$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$9078$1RbCyC
               '(_ any . each-any)))))
         g$e$9075$1RbCyC))))
   (g$convert-pattern$7538$1RbCyC
     g$convert-pattern$11026$1RbCyC
     (case-lambda
       ((g$pattern$9082$1RbCyC g$keys$9083$1RbCyC)
        (letrec* ((g$cvt*$9084$1RbCyC
                    (case-lambda
                      ((g$p*$9164$1RbCyC g$n$9165$1RbCyC g$ids$9166$1RbCyC)
                       (if (null? g$p*$9164$1RbCyC)
                         (values '() g$ids$9166$1RbCyC)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9084$1RbCyC
                                (cdr g$p*$9164$1RbCyC)
                                g$n$9165$1RbCyC
                                g$ids$9166$1RbCyC)))
                           (case-lambda
                             ((g$y$9169$1RbCyC g$ids$9170$1RbCyC)
                              ((case-lambda
                                 ((g$ids$9171$1RbCyC g$y$9172$1RbCyC)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9085$1RbCyC
                                         (car g$p*$9164$1RbCyC)
                                         g$n$9165$1RbCyC
                                         g$ids$9171$1RbCyC)))
                                    (case-lambda
                                      ((g$x$9175$1RbCyC g$ids$9176$1RbCyC)
                                       ((case-lambda
                                          ((g$ids$9177$1RbCyC g$x$9178$1RbCyC)
                                           (values
                                             (cons
                                               g$x$9178$1RbCyC
                                               g$y$9172$1RbCyC)
                                             g$ids$9177$1RbCyC)))
                                        g$ids$9176$1RbCyC
                                        g$x$9175$1RbCyC))))))
                               g$ids$9170$1RbCyC
                               g$y$9169$1RbCyC))))))))
                  (g$cvt$9085$1RbCyC
                    (case-lambda
                      ((g$p$9086$1RbCyC g$n$9087$1RbCyC g$ids$9088$1RbCyC)
                       ((case-lambda
                          ((g$t$9089$1RbCyC)
                           ((case-lambda
                              ((g$ls/false$9090$1RbCyC)
                               (if (if g$ls/false$9090$1RbCyC
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9091$1RbCyC)
                                            (g$id?$7261$1RbCyC
                                              g$id$9091$1RbCyC)))
                                         g$ls/false$9090$1RbCyC))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9092$1RbCyC)
                                      (if (g$bound-id-member?$7268$1RbCyC
                                            g$p$9086$1RbCyC
                                            g$keys$9083$1RbCyC)
                                        (values
                                          (vector 'free-id g$p$9086$1RbCyC)
                                          g$ids$9088$1RbCyC)
                                        (if (g$free-id=?$7265$1RbCyC
                                              g$p$9086$1RbCyC
                                              (g$scheme-stx$7482$1RbCyC '_))
                                          (values '_ g$ids$9088$1RbCyC)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9086$1RbCyC
                                                g$n$9087$1RbCyC)
                                              g$ids$9088$1RbCyC))))))
                                   g$ls/false$9090$1RbCyC)
                                 ((case-lambda
                                    ((g$t$9093$1RbCyC)
                                     ((case-lambda
                                        ((g$ls/false$9094$1RbCyC)
                                         (if (if g$ls/false$9094$1RbCyC
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9095$1RbCyC
                                                        g$dots$9096$1RbCyC)
                                                      (g$ellipsis?$7540$1RbCyC
                                                        g$dots$9096$1RbCyC)))
                                                   g$ls/false$9094$1RbCyC))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9097$1RbCyC
                                                  g$dots$9098$1RbCyC)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9085$1RbCyC
                                                       g$p$9097$1RbCyC
                                                       (+ g$n$9087$1RbCyC '1)
                                                       g$ids$9088$1RbCyC)))
                                                  (case-lambda
                                                    ((g$p$9101$1RbCyC
                                                       g$ids$9102$1RbCyC)
                                                     ((case-lambda
                                                        ((g$ids$9103$1RbCyC
                                                           g$p$9104$1RbCyC)
                                                         (values
                                                           (if (eq? g$p$9104$1RbCyC
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9104$1RbCyC))
                                                           g$ids$9103$1RbCyC)))
                                                      g$ids$9102$1RbCyC
                                                      g$p$9101$1RbCyC))))))
                                             g$ls/false$9094$1RbCyC)
                                           ((case-lambda
                                              ((g$t$9105$1RbCyC)
                                               ((case-lambda
                                                  ((g$ls/false$9106$1RbCyC)
                                                   (if (if g$ls/false$9106$1RbCyC
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9107$1RbCyC
                                                                  g$dots$9108$1RbCyC
                                                                  g$ys$9109$1RbCyC
                                                                  g$z$9110$1RbCyC)
                                                                (g$ellipsis?$7540$1RbCyC
                                                                  g$dots$9108$1RbCyC)))
                                                             g$ls/false$9106$1RbCyC))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9111$1RbCyC
                                                            g$dots$9112$1RbCyC
                                                            g$ys$9113$1RbCyC
                                                            g$z$9114$1RbCyC)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9085$1RbCyC
                                                                 g$z$9114$1RbCyC
                                                                 g$n$9087$1RbCyC
                                                                 g$ids$9088$1RbCyC)))
                                                            (case-lambda
                                                              ((g$z$9117$1RbCyC
                                                                 g$ids$9118$1RbCyC)
                                                               ((case-lambda
                                                                  ((g$ids$9119$1RbCyC
                                                                     g$z$9120$1RbCyC)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9084$1RbCyC
                                                                          g$ys$9113$1RbCyC
                                                                          g$n$9087$1RbCyC
                                                                          g$ids$9119$1RbCyC)))
                                                                     (case-lambda
                                                                       ((g$ys$9123$1RbCyC
                                                                          g$ids$9124$1RbCyC)
                                                                        ((case-lambda
                                                                           ((g$ids$9125$1RbCyC
                                                                              g$ys$9126$1RbCyC)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9085$1RbCyC
                                                                                   g$x$9111$1RbCyC
                                                                                   (+ g$n$9087$1RbCyC
                                                                                      '1)
                                                                                   g$ids$9125$1RbCyC)))
                                                                              (case-lambda
                                                                                ((g$x$9129$1RbCyC
                                                                                   g$ids$9130$1RbCyC)
                                                                                 ((case-lambda
                                                                                    ((g$ids$9131$1RbCyC
                                                                                       g$x$9132$1RbCyC)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$9132$1RbCyC
                                                                                         (reverse
                                                                                           g$ys$9126$1RbCyC)
                                                                                         g$z$9120$1RbCyC)
                                                                                       g$ids$9131$1RbCyC)))
                                                                                  g$ids$9130$1RbCyC
                                                                                  g$x$9129$1RbCyC))))))
                                                                         g$ids$9124$1RbCyC
                                                                         g$ys$9123$1RbCyC))))))
                                                                g$ids$9118$1RbCyC
                                                                g$z$9117$1RbCyC))))))
                                                       g$ls/false$9106$1RbCyC)
                                                     ((case-lambda
                                                        ((g$t$9133$1RbCyC)
                                                         ((case-lambda
                                                            ((g$ls/false$9134$1RbCyC)
                                                             (if g$ls/false$9134$1RbCyC
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$9135$1RbCyC
                                                                      g$y$9136$1RbCyC)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9085$1RbCyC
                                                                           g$y$9136$1RbCyC
                                                                           g$n$9087$1RbCyC
                                                                           g$ids$9088$1RbCyC)))
                                                                      (case-lambda
                                                                        ((g$y$9139$1RbCyC
                                                                           g$ids$9140$1RbCyC)
                                                                         ((case-lambda
                                                                            ((g$ids$9141$1RbCyC
                                                                               g$y$9142$1RbCyC)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9085$1RbCyC
                                                                                    g$x$9135$1RbCyC
                                                                                    g$n$9087$1RbCyC
                                                                                    g$ids$9141$1RbCyC)))
                                                                               (case-lambda
                                                                                 ((g$x$9145$1RbCyC
                                                                                    g$ids$9146$1RbCyC)
                                                                                  ((case-lambda
                                                                                     ((g$ids$9147$1RbCyC
                                                                                        g$x$9148$1RbCyC)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$9148$1RbCyC
                                                                                          g$y$9142$1RbCyC)
                                                                                        g$ids$9147$1RbCyC)))
                                                                                   g$ids$9146$1RbCyC
                                                                                   g$x$9145$1RbCyC))))))
                                                                          g$ids$9140$1RbCyC
                                                                          g$y$9139$1RbCyC))))))
                                                                 g$ls/false$9134$1RbCyC)
                                                               ((case-lambda
                                                                  ((g$t$9149$1RbCyC)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9150$1RbCyC)
                                                                       (if g$ls/false$9150$1RbCyC
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9088$1RbCyC)))
                                                                           g$ls/false$9150$1RbCyC)
                                                                         ((case-lambda
                                                                            ((g$t$9151$1RbCyC)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9152$1RbCyC)
                                                                                 (if (if g$ls/false$9152$1RbCyC
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$9153$1RbCyC)
                                                                                              (not (g$stx?$7233$1RbCyC
                                                                                                     g$p$9153$1RbCyC))))
                                                                                           g$ls/false$9152$1RbCyC))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$9154$1RbCyC)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9085$1RbCyC
                                                                                               g$p$9154$1RbCyC
                                                                                               g$n$9087$1RbCyC
                                                                                               g$ids$9088$1RbCyC)))
                                                                                          (case-lambda
                                                                                            ((g$p$9157$1RbCyC
                                                                                               g$ids$9158$1RbCyC)
                                                                                             ((case-lambda
                                                                                                ((g$ids$9159$1RbCyC
                                                                                                   g$p$9160$1RbCyC)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$9160$1RbCyC)
                                                                                                   g$ids$9159$1RbCyC)))
                                                                                              g$ids$9158$1RbCyC
                                                                                              g$p$9157$1RbCyC))))))
                                                                                     g$ls/false$9152$1RbCyC)
                                                                                   ((case-lambda
                                                                                      ((g$t$9161$1RbCyC)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9162$1RbCyC)
                                                                                           (if g$ls/false$9162$1RbCyC
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$9163$1RbCyC)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$7272$1RbCyC
                                                                                                        g$datum$9163$1RbCyC))
                                                                                                    g$ids$9088$1RbCyC)))
                                                                                               g$ls/false$9162$1RbCyC)
                                                                                             (g$syntax-violation$7650$1RbCyC
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9161$1RbCyC))))
                                                                                        (g$syntax-dispatch$7539$1RbCyC
                                                                                          g$t$9161$1RbCyC
                                                                                          'any))))
                                                                                    g$t$9151$1RbCyC))))
                                                                              (g$syntax-dispatch$7539$1RbCyC
                                                                                g$t$9151$1RbCyC
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$9149$1RbCyC))))
                                                                    (g$syntax-dispatch$7539$1RbCyC
                                                                      g$t$9149$1RbCyC
                                                                      '()))))
                                                                g$t$9133$1RbCyC))))
                                                          (g$syntax-dispatch$7539$1RbCyC
                                                            g$t$9133$1RbCyC
                                                            '(any . any)))))
                                                      g$t$9105$1RbCyC))))
                                                (g$syntax-dispatch$7539$1RbCyC
                                                  g$t$9105$1RbCyC
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9093$1RbCyC))))
                                      (g$syntax-dispatch$7539$1RbCyC
                                        g$t$9093$1RbCyC
                                        '(any any)))))
                                  g$t$9089$1RbCyC))))
                            (g$syntax-dispatch$7539$1RbCyC
                              g$t$9089$1RbCyC
                              'any))))
                        g$p$9086$1RbCyC)))))
          (g$cvt$9085$1RbCyC g$pattern$9082$1RbCyC '0 '())))))
   (g$syntax-dispatch$7539$1RbCyC
     g$syntax-dispatch$11027$1RbCyC
     ((case-lambda
        (()
         (letrec* ((g$stx^$9179$1RbCyC
                     (case-lambda
                       ((g$e$9289$1RbCyC
                          g$m*$9290$1RbCyC
                          g$s*$9291$1RbCyC
                          g$ae*$9292$1RbCyC)
                        (if (if (null? g$m*$9290$1RbCyC)
                              (if (null? g$s*$9291$1RbCyC)
                                (begin '#f (null? g$ae*$9292$1RbCyC))
                                '#f)
                              '#f)
                          g$e$9289$1RbCyC
                          (g$mkstx$7249$1RbCyC
                            g$e$9289$1RbCyC
                            g$m*$9290$1RbCyC
                            g$s*$9291$1RbCyC
                            g$ae*$9292$1RbCyC)))))
                   (g$match-each$9180$1RbCyC
                     (case-lambda
                       ((g$e$9273$1RbCyC
                          g$p$9274$1RbCyC
                          g$m*$9275$1RbCyC
                          g$s*$9276$1RbCyC
                          g$ae*$9277$1RbCyC)
                        (if (pair? g$e$9273$1RbCyC)
                          ((case-lambda
                             ((g$first$9278$1RbCyC)
                              (if g$first$9278$1RbCyC
                                (begin
                                  '#f
                                  ((case-lambda
                                     ((g$rest$9279$1RbCyC)
                                      (if g$rest$9279$1RbCyC
                                        (begin
                                          '#f
                                          (cons
                                            g$first$9278$1RbCyC
                                            g$rest$9279$1RbCyC))
                                        '#f)))
                                   (g$match-each$9180$1RbCyC
                                     (cdr g$e$9273$1RbCyC)
                                     g$p$9274$1RbCyC
                                     g$m*$9275$1RbCyC
                                     g$s*$9276$1RbCyC
                                     g$ae*$9277$1RbCyC)))
                                '#f)))
                           (g$match$9186$1RbCyC
                             (car g$e$9273$1RbCyC)
                             g$p$9274$1RbCyC
                             g$m*$9275$1RbCyC
                             g$s*$9276$1RbCyC
                             g$ae*$9277$1RbCyC
                             '()))
                          (if (null? g$e$9273$1RbCyC)
                            '()
                            (if (g$stx?$7233$1RbCyC g$e$9273$1RbCyC)
                              (if (not (g$top-marked?$7199$1RbCyC
                                         g$m*$9275$1RbCyC))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$7248$1RbCyC
                                         g$m*$9275$1RbCyC
                                         g$s*$9276$1RbCyC
                                         g$ae*$9277$1RbCyC
                                         g$e$9273$1RbCyC)))
                                    (case-lambda
                                      ((g$m*$9283$1RbCyC
                                         g$s*$9284$1RbCyC
                                         g$ae*$9285$1RbCyC)
                                       ((case-lambda
                                          ((g$ae*$9286$1RbCyC
                                             g$s*$9287$1RbCyC
                                             g$m*$9288$1RbCyC)
                                           (g$match-each$9180$1RbCyC
                                             (g$stx-expr$7235$1RbCyC
                                               g$e$9273$1RbCyC)
                                             g$p$9274$1RbCyC
                                             g$m*$9288$1RbCyC
                                             g$s*$9287$1RbCyC
                                             g$ae*$9286$1RbCyC)))
                                        g$ae*$9285$1RbCyC
                                        g$s*$9284$1RbCyC
                                        g$m*$9283$1RbCyC)))))
                                '#f)
                              (if (annotation? g$e$9273$1RbCyC)
                                (g$match-each$9180$1RbCyC
                                  (annotation-expression g$e$9273$1RbCyC)
                                  g$p$9274$1RbCyC
                                  g$m*$9275$1RbCyC
                                  g$s*$9276$1RbCyC
                                  g$ae*$9277$1RbCyC)
                                '#f)))))))
                   (g$match-each+$9181$1RbCyC
                     (case-lambda
                       ((g$e$9241$1RbCyC
                          g$x-pat$9242$1RbCyC
                          g$y-pat$9243$1RbCyC
                          g$z-pat$9244$1RbCyC
                          g$m*$9245$1RbCyC
                          g$s*$9246$1RbCyC
                          g$ae*$9247$1RbCyC
                          g$r$9248$1RbCyC)
                        ((letrec ((g$f$9249$1RbCyC
                                    (case-lambda
                                      ((g$e$9250$1RbCyC
                                         g$m*$9251$1RbCyC
                                         g$s*$9252$1RbCyC
                                         g$ae*$9253$1RbCyC)
                                       (if (pair? g$e$9250$1RbCyC)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$f$9249$1RbCyC
                                                (cdr g$e$9250$1RbCyC)
                                                g$m*$9251$1RbCyC
                                                g$s*$9252$1RbCyC
                                                g$ae*$9253$1RbCyC)))
                                           (case-lambda
                                             ((g$xr*$9257$1RbCyC
                                                g$y-pat$9258$1RbCyC
                                                g$r$9259$1RbCyC)
                                              ((case-lambda
                                                 ((g$r$9260$1RbCyC
                                                    g$y-pat$9261$1RbCyC
                                                    g$xr*$9262$1RbCyC)
                                                  (if g$r$9260$1RbCyC
                                                    (if (null?
                                                          g$y-pat$9261$1RbCyC)
                                                      ((case-lambda
                                                         ((g$xr$9263$1RbCyC)
                                                          (if g$xr$9263$1RbCyC
                                                            (values
                                                              (cons
                                                                g$xr$9263$1RbCyC
                                                                g$xr*$9262$1RbCyC)
                                                              g$y-pat$9261$1RbCyC
                                                              g$r$9260$1RbCyC)
                                                            (values
                                                              '#f
                                                              '#f
                                                              '#f))))
                                                       (g$match$9186$1RbCyC
                                                         (car g$e$9250$1RbCyC)
                                                         g$x-pat$9242$1RbCyC
                                                         g$m*$9251$1RbCyC
                                                         g$s*$9252$1RbCyC
                                                         g$ae*$9253$1RbCyC
                                                         '()))
                                                      (values
                                                        '()
                                                        (cdr g$y-pat$9261$1RbCyC)
                                                        (g$match$9186$1RbCyC
                                                          (car g$e$9250$1RbCyC)
                                                          (car g$y-pat$9261$1RbCyC)
                                                          g$m*$9251$1RbCyC
                                                          g$s*$9252$1RbCyC
                                                          g$ae*$9253$1RbCyC
                                                          g$r$9260$1RbCyC)))
                                                    (values '#f '#f '#f))))
                                               g$r$9259$1RbCyC
                                               g$y-pat$9258$1RbCyC
                                               g$xr*$9257$1RbCyC))))
                                         (if (g$stx?$7233$1RbCyC
                                               g$e$9250$1RbCyC)
                                           (if (g$top-marked?$7199$1RbCyC
                                                 g$m*$9251$1RbCyC)
                                             (values
                                               '()
                                               g$y-pat$9243$1RbCyC
                                               (g$match$9186$1RbCyC
                                                 g$e$9250$1RbCyC
                                                 g$z-pat$9244$1RbCyC
                                                 g$m*$9251$1RbCyC
                                                 g$s*$9252$1RbCyC
                                                 g$ae*$9253$1RbCyC
                                                 g$r$9248$1RbCyC))
                                             (call-with-values
                                               (case-lambda
                                                 (()
                                                  (g$join-wraps$7248$1RbCyC
                                                    g$m*$9251$1RbCyC
                                                    g$s*$9252$1RbCyC
                                                    g$ae*$9253$1RbCyC
                                                    g$e$9250$1RbCyC)))
                                               (case-lambda
                                                 ((g$m*$9267$1RbCyC
                                                    g$s*$9268$1RbCyC
                                                    g$ae*$9269$1RbCyC)
                                                  ((case-lambda
                                                     ((g$ae*$9270$1RbCyC
                                                        g$s*$9271$1RbCyC
                                                        g$m*$9272$1RbCyC)
                                                      (g$f$9249$1RbCyC
                                                        (g$stx-expr$7235$1RbCyC
                                                          g$e$9250$1RbCyC)
                                                        g$m*$9272$1RbCyC
                                                        g$s*$9271$1RbCyC
                                                        g$ae*$9270$1RbCyC)))
                                                   g$ae*$9269$1RbCyC
                                                   g$s*$9268$1RbCyC
                                                   g$m*$9267$1RbCyC)))))
                                           (if (annotation? g$e$9250$1RbCyC)
                                             (g$f$9249$1RbCyC
                                               (annotation-expression
                                                 g$e$9250$1RbCyC)
                                               g$m*$9251$1RbCyC
                                               g$s*$9252$1RbCyC
                                               g$ae*$9253$1RbCyC)
                                             (values
                                               '()
                                               g$y-pat$9243$1RbCyC
                                               (g$match$9186$1RbCyC
                                                 g$e$9250$1RbCyC
                                                 g$z-pat$9244$1RbCyC
                                                 g$m*$9251$1RbCyC
                                                 g$s*$9252$1RbCyC
                                                 g$ae*$9253$1RbCyC
                                                 g$r$9248$1RbCyC)))))))))
                           g$f$9249$1RbCyC)
                         g$e$9241$1RbCyC
                         g$m*$9245$1RbCyC
                         g$s*$9246$1RbCyC
                         g$ae*$9247$1RbCyC))))
                   (g$match-each-any$9182$1RbCyC
                     (case-lambda
                       ((g$e$9227$1RbCyC
                          g$m*$9228$1RbCyC
                          g$s*$9229$1RbCyC
                          g$ae*$9230$1RbCyC)
                        (if (pair? g$e$9227$1RbCyC)
                          ((case-lambda
                             ((g$l$9231$1RbCyC)
                              (if g$l$9231$1RbCyC
                                (begin
                                  '#f
                                  (cons
                                    (g$stx^$9179$1RbCyC
                                      (car g$e$9227$1RbCyC)
                                      g$m*$9228$1RbCyC
                                      g$s*$9229$1RbCyC
                                      g$ae*$9230$1RbCyC)
                                    g$l$9231$1RbCyC))
                                '#f)))
                           (g$match-each-any$9182$1RbCyC
                             (cdr g$e$9227$1RbCyC)
                             g$m*$9228$1RbCyC
                             g$s*$9229$1RbCyC
                             g$ae*$9230$1RbCyC))
                          (if (null? g$e$9227$1RbCyC)
                            '()
                            (if (g$stx?$7233$1RbCyC g$e$9227$1RbCyC)
                              (if (not (g$top-marked?$7199$1RbCyC
                                         g$m*$9228$1RbCyC))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$7248$1RbCyC
                                         g$m*$9228$1RbCyC
                                         g$s*$9229$1RbCyC
                                         g$ae*$9230$1RbCyC
                                         g$e$9227$1RbCyC)))
                                    (case-lambda
                                      ((g$m*$9235$1RbCyC
                                         g$s*$9236$1RbCyC
                                         g$ae*$9237$1RbCyC)
                                       ((case-lambda
                                          ((g$ae*$9238$1RbCyC
                                             g$s*$9239$1RbCyC
                                             g$m*$9240$1RbCyC)
                                           (g$match-each-any$9182$1RbCyC
                                             (g$stx-expr$7235$1RbCyC
                                               g$e$9227$1RbCyC)
                                             g$m*$9240$1RbCyC
                                             g$s*$9239$1RbCyC
                                             g$ae*$9238$1RbCyC)))
                                        g$ae*$9237$1RbCyC
                                        g$s*$9236$1RbCyC
                                        g$m*$9235$1RbCyC)))))
                                '#f)
                              (if (annotation? g$e$9227$1RbCyC)
                                (g$match-each-any$9182$1RbCyC
                                  (annotation-expression g$e$9227$1RbCyC)
                                  g$m*$9228$1RbCyC
                                  g$s*$9229$1RbCyC
                                  g$ae*$9230$1RbCyC)
                                '#f)))))))
                   (g$match-empty$9183$1RbCyC
                     (case-lambda
                       ((g$p$9224$1RbCyC g$r$9225$1RbCyC)
                        (if (null? g$p$9224$1RbCyC)
                          g$r$9225$1RbCyC
                          (if (eq? g$p$9224$1RbCyC '_)
                            g$r$9225$1RbCyC
                            (if (eq? g$p$9224$1RbCyC 'any)
                              (cons '() g$r$9225$1RbCyC)
                              (if (pair? g$p$9224$1RbCyC)
                                (g$match-empty$9183$1RbCyC
                                  (car g$p$9224$1RbCyC)
                                  (g$match-empty$9183$1RbCyC
                                    (cdr g$p$9224$1RbCyC)
                                    g$r$9225$1RbCyC))
                                (if (eq? g$p$9224$1RbCyC 'each-any)
                                  (cons '() g$r$9225$1RbCyC)
                                  ((case-lambda
                                     ((g$t$9226$1RbCyC)
                                      (if (g$memv$4990$1RbCyC
                                            g$t$9226$1RbCyC
                                            '(each))
                                        (g$match-empty$9183$1RbCyC
                                          (vector-ref g$p$9224$1RbCyC '1)
                                          g$r$9225$1RbCyC)
                                        (if (g$memv$4990$1RbCyC
                                              g$t$9226$1RbCyC
                                              '(each+))
                                          (g$match-empty$9183$1RbCyC
                                            (vector-ref g$p$9224$1RbCyC '1)
                                            (g$match-empty$9183$1RbCyC
                                              (reverse
                                                (vector-ref g$p$9224$1RbCyC '2))
                                              (g$match-empty$9183$1RbCyC
                                                (vector-ref g$p$9224$1RbCyC '3)
                                                g$r$9225$1RbCyC)))
                                          (if (g$memv$4990$1RbCyC
                                                g$t$9226$1RbCyC
                                                '(free-id atom))
                                            g$r$9225$1RbCyC
                                            (if (g$memv$4990$1RbCyC
                                                  g$t$9226$1RbCyC
                                                  '(scheme-id atom))
                                              g$r$9225$1RbCyC
                                              (if (g$memv$4990$1RbCyC
                                                    g$t$9226$1RbCyC
                                                    '(vector))
                                                (g$match-empty$9183$1RbCyC
                                                  (vector-ref
                                                    g$p$9224$1RbCyC
                                                    '1)
                                                  g$r$9225$1RbCyC)
                                                (assertion-violation
                                                  'syntax-dispatch
                                                  '"invalid pattern"
                                                  g$p$9224$1RbCyC))))))))
                                   (vector-ref g$p$9224$1RbCyC '0))))))))))
                   (g$combine$9184$1RbCyC
                     (case-lambda
                       ((g$r*$9222$1RbCyC g$r$9223$1RbCyC)
                        (if (null? (car g$r*$9222$1RbCyC))
                          g$r$9223$1RbCyC
                          (cons
                            (map car g$r*$9222$1RbCyC)
                            (g$combine$9184$1RbCyC
                              (map cdr g$r*$9222$1RbCyC)
                              g$r$9223$1RbCyC))))))
                   (g$match*$9185$1RbCyC
                     (case-lambda
                       ((g$e$9204$1RbCyC
                          g$p$9205$1RbCyC
                          g$m*$9206$1RbCyC
                          g$s*$9207$1RbCyC
                          g$ae*$9208$1RbCyC
                          g$r$9209$1RbCyC)
                        (if (null? g$p$9205$1RbCyC)
                          (if (null? g$e$9204$1RbCyC)
                            (begin '#f g$r$9209$1RbCyC)
                            '#f)
                          (if (pair? g$p$9205$1RbCyC)
                            (if (pair? g$e$9204$1RbCyC)
                              (begin
                                '#f
                                (g$match$9186$1RbCyC
                                  (car g$e$9204$1RbCyC)
                                  (car g$p$9205$1RbCyC)
                                  g$m*$9206$1RbCyC
                                  g$s*$9207$1RbCyC
                                  g$ae*$9208$1RbCyC
                                  (g$match$9186$1RbCyC
                                    (cdr g$e$9204$1RbCyC)
                                    (cdr g$p$9205$1RbCyC)
                                    g$m*$9206$1RbCyC
                                    g$s*$9207$1RbCyC
                                    g$ae*$9208$1RbCyC
                                    g$r$9209$1RbCyC)))
                              '#f)
                            (if (eq? g$p$9205$1RbCyC 'each-any)
                              ((case-lambda
                                 ((g$l$9210$1RbCyC)
                                  (if g$l$9210$1RbCyC
                                    (begin
                                      '#f
                                      (cons g$l$9210$1RbCyC g$r$9209$1RbCyC))
                                    '#f)))
                               (g$match-each-any$9182$1RbCyC
                                 g$e$9204$1RbCyC
                                 g$m*$9206$1RbCyC
                                 g$s*$9207$1RbCyC
                                 g$ae*$9208$1RbCyC))
                              ((case-lambda
                                 ((g$t$9211$1RbCyC)
                                  (if (g$memv$4990$1RbCyC
                                        g$t$9211$1RbCyC
                                        '(each))
                                    (if (null? g$e$9204$1RbCyC)
                                      (g$match-empty$9183$1RbCyC
                                        (vector-ref g$p$9205$1RbCyC '1)
                                        g$r$9209$1RbCyC)
                                      ((case-lambda
                                         ((g$r*$9212$1RbCyC)
                                          (if g$r*$9212$1RbCyC
                                            (begin
                                              '#f
                                              (g$combine$9184$1RbCyC
                                                g$r*$9212$1RbCyC
                                                g$r$9209$1RbCyC))
                                            '#f)))
                                       (g$match-each$9180$1RbCyC
                                         g$e$9204$1RbCyC
                                         (vector-ref g$p$9205$1RbCyC '1)
                                         g$m*$9206$1RbCyC
                                         g$s*$9207$1RbCyC
                                         g$ae*$9208$1RbCyC)))
                                    (if (g$memv$4990$1RbCyC
                                          g$t$9211$1RbCyC
                                          '(free-id))
                                      (if (symbol? g$e$9204$1RbCyC)
                                        (if (g$top-marked?$7199$1RbCyC
                                              g$m*$9206$1RbCyC)
                                          (if (g$free-id=?$7265$1RbCyC
                                                (g$stx^$9179$1RbCyC
                                                  g$e$9204$1RbCyC
                                                  g$m*$9206$1RbCyC
                                                  g$s*$9207$1RbCyC
                                                  g$ae*$9208$1RbCyC)
                                                (vector-ref g$p$9205$1RbCyC '1))
                                            (begin '#f g$r$9209$1RbCyC)
                                            '#f)
                                          '#f)
                                        '#f)
                                      (if (g$memv$4990$1RbCyC
                                            g$t$9211$1RbCyC
                                            '(scheme-id))
                                        (if (symbol? g$e$9204$1RbCyC)
                                          (if (g$top-marked?$7199$1RbCyC
                                                g$m*$9206$1RbCyC)
                                            (if (g$free-id=?$7265$1RbCyC
                                                  (g$stx^$9179$1RbCyC
                                                    g$e$9204$1RbCyC
                                                    g$m*$9206$1RbCyC
                                                    g$s*$9207$1RbCyC
                                                    g$ae*$9208$1RbCyC)
                                                  (g$scheme-stx$7482$1RbCyC
                                                    (vector-ref
                                                      g$p$9205$1RbCyC
                                                      '1)))
                                              (begin '#f g$r$9209$1RbCyC)
                                              '#f)
                                            '#f)
                                          '#f)
                                        (if (g$memv$4990$1RbCyC
                                              g$t$9211$1RbCyC
                                              '(each+))
                                          (call-with-values
                                            (case-lambda
                                              (()
                                               (g$match-each+$9181$1RbCyC
                                                 g$e$9204$1RbCyC
                                                 (vector-ref g$p$9205$1RbCyC '1)
                                                 (vector-ref g$p$9205$1RbCyC '2)
                                                 (vector-ref g$p$9205$1RbCyC '3)
                                                 g$m*$9206$1RbCyC
                                                 g$s*$9207$1RbCyC
                                                 g$ae*$9208$1RbCyC
                                                 g$r$9209$1RbCyC)))
                                            (case-lambda
                                              ((g$xr*$9216$1RbCyC
                                                 g$y-pat$9217$1RbCyC
                                                 g$r$9218$1RbCyC)
                                               ((case-lambda
                                                  ((g$r$9219$1RbCyC
                                                     g$y-pat$9220$1RbCyC
                                                     g$xr*$9221$1RbCyC)
                                                   (if g$r$9219$1RbCyC
                                                     (if (null?
                                                           g$y-pat$9220$1RbCyC)
                                                       (begin
                                                         '#f
                                                         (if (null?
                                                               g$xr*$9221$1RbCyC)
                                                           (g$match-empty$9183$1RbCyC
                                                             (vector-ref
                                                               g$p$9205$1RbCyC
                                                               '1)
                                                             g$r$9219$1RbCyC)
                                                           (g$combine$9184$1RbCyC
                                                             g$xr*$9221$1RbCyC
                                                             g$r$9219$1RbCyC)))
                                                       '#f)
                                                     '#f)))
                                                g$r$9218$1RbCyC
                                                g$y-pat$9217$1RbCyC
                                                g$xr*$9216$1RbCyC))))
                                          (if (g$memv$4990$1RbCyC
                                                g$t$9211$1RbCyC
                                                '(atom))
                                            (if (equal?
                                                  (vector-ref
                                                    g$p$9205$1RbCyC
                                                    '1)
                                                  (g$strip$7271$1RbCyC
                                                    g$e$9204$1RbCyC
                                                    g$m*$9206$1RbCyC))
                                              (begin '#f g$r$9209$1RbCyC)
                                              '#f)
                                            (if (g$memv$4990$1RbCyC
                                                  g$t$9211$1RbCyC
                                                  '(vector))
                                              (if (vector? g$e$9204$1RbCyC)
                                                (begin
                                                  '#f
                                                  (g$match$9186$1RbCyC
                                                    (vector->list
                                                      g$e$9204$1RbCyC)
                                                    (vector-ref
                                                      g$p$9205$1RbCyC
                                                      '1)
                                                    g$m*$9206$1RbCyC
                                                    g$s*$9207$1RbCyC
                                                    g$ae*$9208$1RbCyC
                                                    g$r$9209$1RbCyC))
                                                '#f)
                                              (assertion-violation
                                                'syntax-dispatch
                                                '"invalid pattern"
                                                g$p$9205$1RbCyC)))))))))
                               (vector-ref g$p$9205$1RbCyC '0))))))))
                   (g$match$9186$1RbCyC
                     (case-lambda
                       ((g$e$9189$1RbCyC
                          g$p$9190$1RbCyC
                          g$m*$9191$1RbCyC
                          g$s*$9192$1RbCyC
                          g$ae*$9193$1RbCyC
                          g$r$9194$1RbCyC)
                        (if (not g$r$9194$1RbCyC)
                          '#f
                          (if (eq? g$p$9190$1RbCyC '_)
                            g$r$9194$1RbCyC
                            (if (eq? g$p$9190$1RbCyC 'any)
                              (cons
                                (g$stx^$9179$1RbCyC
                                  g$e$9189$1RbCyC
                                  g$m*$9191$1RbCyC
                                  g$s*$9192$1RbCyC
                                  g$ae*$9193$1RbCyC)
                                g$r$9194$1RbCyC)
                              (if (g$stx?$7233$1RbCyC g$e$9189$1RbCyC)
                                (if (not (g$top-marked?$7199$1RbCyC
                                           g$m*$9191$1RbCyC))
                                  (begin
                                    '#f
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$join-wraps$7248$1RbCyC
                                           g$m*$9191$1RbCyC
                                           g$s*$9192$1RbCyC
                                           g$ae*$9193$1RbCyC
                                           g$e$9189$1RbCyC)))
                                      (case-lambda
                                        ((g$m*$9198$1RbCyC
                                           g$s*$9199$1RbCyC
                                           g$ae*$9200$1RbCyC)
                                         ((case-lambda
                                            ((g$ae*$9201$1RbCyC
                                               g$s*$9202$1RbCyC
                                               g$m*$9203$1RbCyC)
                                             (g$match$9186$1RbCyC
                                               (g$stx-expr$7235$1RbCyC
                                                 g$e$9189$1RbCyC)
                                               g$p$9190$1RbCyC
                                               g$m*$9203$1RbCyC
                                               g$s*$9202$1RbCyC
                                               g$ae*$9201$1RbCyC
                                               g$r$9194$1RbCyC)))
                                          g$ae*$9200$1RbCyC
                                          g$s*$9199$1RbCyC
                                          g$m*$9198$1RbCyC)))))
                                  '#f)
                                (if (annotation? g$e$9189$1RbCyC)
                                  (g$match$9186$1RbCyC
                                    (annotation-expression g$e$9189$1RbCyC)
                                    g$p$9190$1RbCyC
                                    g$m*$9191$1RbCyC
                                    g$s*$9192$1RbCyC
                                    g$ae*$9193$1RbCyC
                                    g$r$9194$1RbCyC)
                                  (g$match*$9185$1RbCyC
                                    g$e$9189$1RbCyC
                                    g$p$9190$1RbCyC
                                    g$m*$9191$1RbCyC
                                    g$s*$9192$1RbCyC
                                    g$ae*$9193$1RbCyC
                                    g$r$9194$1RbCyC))))))))))
           (case-lambda
             ((g$e$9187$1RbCyC g$p$9188$1RbCyC)
              (g$match$9186$1RbCyC
                g$e$9187$1RbCyC
                g$p$9188$1RbCyC
                '()
                '()
                '()
                '()))))))))
   (g$ellipsis?$7540$1RbCyC
     g$ellipsis?$11028$1RbCyC
     (case-lambda
       ((g$x$9293$1RbCyC)
        (if (g$id?$7261$1RbCyC g$x$9293$1RbCyC)
          (begin
            '#f
            (g$free-id=?$7265$1RbCyC
              g$x$9293$1RbCyC
              (g$scheme-stx$7482$1RbCyC '...)))
          '#f))))
   (g$underscore?$7541$1RbCyC
     g$underscore?$11029$1RbCyC
     (case-lambda
       ((g$x$9294$1RbCyC)
        (if (g$id?$7261$1RbCyC g$x$9294$1RbCyC)
          (begin
            '#f
            (g$free-id=?$7265$1RbCyC
              g$x$9294$1RbCyC
              (g$scheme-stx$7482$1RbCyC '_)))
          '#f))))
   (g$verify-literals$7542$1RbCyC
     g$verify-literals$11030$1RbCyC
     (case-lambda
       ((g$lits$9295$1RbCyC g$expr$9296$1RbCyC)
        (for-each
          (case-lambda
            ((g$x$9297$1RbCyC)
             (if ((case-lambda
                    ((g$t$9298$1RbCyC)
                     (if g$t$9298$1RbCyC
                       g$t$9298$1RbCyC
                       ((case-lambda
                          ((g$t$9299$1RbCyC)
                           (if g$t$9299$1RbCyC
                             g$t$9299$1RbCyC
                             (begin
                               '#f
                               (g$underscore?$7541$1RbCyC g$x$9297$1RbCyC)))))
                        (g$ellipsis?$7540$1RbCyC g$x$9297$1RbCyC)))))
                  (not (g$id?$7261$1RbCyC g$x$9297$1RbCyC)))
               (g$syntax-violation$7650$1RbCyC
                 '#f
                 '"invalid literal"
                 g$expr$9296$1RbCyC
                 g$x$9297$1RbCyC)
               (void))))
          g$lits$9295$1RbCyC))))
   (g$syntax-case-transformer$7543$1RbCyC
     g$syntax-case-transformer$11031$1RbCyC
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$9300$1RbCyC
                     (case-lambda
                       ((g$pvars$9357$1RbCyC
                          g$expr$9358$1RbCyC
                          g$y$9359$1RbCyC
                          g$r$9360$1RbCyC
                          g$mr$9361$1RbCyC)
                        ((case-lambda
                           ((g$ids$9362$1RbCyC g$levels$9363$1RbCyC)
                            ((case-lambda
                               ((g$labels$9364$1RbCyC g$new-vars$9365$1RbCyC)
                                ((case-lambda
                                   ((g$body$9366$1RbCyC)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7187$1RbCyC
                                        '#f
                                        g$new-vars$9365$1RbCyC
                                        g$body$9366$1RbCyC)
                                      g$y$9359$1RbCyC)))
                                 (g$chi-expr$7557$1RbCyC
                                   (g$add-subst$7251$1RbCyC
                                     (g$make-full-rib$7229$1RbCyC
                                       g$ids$9362$1RbCyC
                                       g$labels$9364$1RbCyC)
                                     g$expr$9358$1RbCyC)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9367$1RbCyC
                                               g$var$9368$1RbCyC
                                               g$level$9369$1RbCyC)
                                             (cons
                                               g$label$9367$1RbCyC
                                               (g$make-binding$7277$1RbCyC
                                                 'syntax
                                                 (cons
                                                   g$var$9368$1RbCyC
                                                   g$level$9369$1RbCyC)))))
                                          g$labels$9364$1RbCyC
                                          g$new-vars$9365$1RbCyC
                                          (map cdr g$pvars$9357$1RbCyC))
                                     g$r$9360$1RbCyC)
                                   g$mr$9361$1RbCyC))))
                             (map g$gen-label$7202$1RbCyC g$ids$9362$1RbCyC)
                             (map g$gen-lexical$7200$1RbCyC
                                  g$ids$9362$1RbCyC))))
                         (map car g$pvars$9357$1RbCyC)
                         (map cdr g$pvars$9357$1RbCyC)))))
                   (g$invalid-ids-error$9301$1RbCyC
                     (case-lambda
                       ((g$id*$9351$1RbCyC g$e$9352$1RbCyC g$class$9353$1RbCyC)
                        ((letrec ((g$find$9354$1RbCyC
                                    (case-lambda
                                      ((g$id*$9355$1RbCyC g$ok*$9356$1RbCyC)
                                       (if (null? g$id*$9355$1RbCyC)
                                         (g$syntax-violation$7650$1RbCyC
                                           '#f
                                           '"invalid syntax"
                                           g$e$9352$1RbCyC)
                                         (if (g$id?$7261$1RbCyC
                                               (car g$id*$9355$1RbCyC))
                                           (if (g$bound-id-member?$7268$1RbCyC
                                                 (car g$id*$9355$1RbCyC)
                                                 g$ok*$9356$1RbCyC)
                                             (g$syntax-error$7647$1RbCyC
                                               (car g$id*$9355$1RbCyC)
                                               '"duplicate "
                                               g$class$9353$1RbCyC)
                                             (g$find$9354$1RbCyC
                                               (cdr g$id*$9355$1RbCyC)
                                               (cons
                                                 (car g$id*$9355$1RbCyC)
                                                 g$ok*$9356$1RbCyC)))
                                           (g$syntax-error$7647$1RbCyC
                                             (car g$id*$9355$1RbCyC)
                                             '"invalid "
                                             g$class$9353$1RbCyC)))))))
                           g$find$9354$1RbCyC)
                         g$id*$9351$1RbCyC
                         '()))))
                   (g$gen-clause$9302$1RbCyC
                     (case-lambda
                       ((g$x$9331$1RbCyC
                          g$keys$9332$1RbCyC
                          g$clauses$9333$1RbCyC
                          g$r$9334$1RbCyC
                          g$mr$9335$1RbCyC
                          g$pat$9336$1RbCyC
                          g$fender$9337$1RbCyC
                          g$expr$9338$1RbCyC)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7538$1RbCyC
                               g$pat$9336$1RbCyC
                               g$keys$9332$1RbCyC)))
                          (case-lambda
                            ((g$p$9341$1RbCyC g$pvars$9342$1RbCyC)
                             ((case-lambda
                                ((g$pvars$9343$1RbCyC g$p$9344$1RbCyC)
                                 (if (not (g$distinct-bound-ids?$7267$1RbCyC
                                            (map car g$pvars$9343$1RbCyC)))
                                   (g$invalid-ids-error$9301$1RbCyC
                                     (map car g$pvars$9343$1RbCyC)
                                     g$pat$9336$1RbCyC
                                     '"pattern variable")
                                   (if (not (g$for-all$4995$1RbCyC
                                              (case-lambda
                                                ((g$x$9345$1RbCyC)
                                                 (not (g$ellipsis?$7540$1RbCyC
                                                        (car g$x$9345$1RbCyC)))))
                                              g$pvars$9343$1RbCyC))
                                     (g$syntax-violation$7650$1RbCyC
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9336$1RbCyC)
                                     ((case-lambda
                                        ((g$y$9346$1RbCyC)
                                         ((case-lambda
                                            ((g$test$9347$1RbCyC)
                                             ((case-lambda
                                                ((g$conseq$9348$1RbCyC)
                                                 ((case-lambda
                                                    ((g$altern$9349$1RbCyC)
                                                     (list
                                                       (g$build-lambda$7187$1RbCyC
                                                         '#f
                                                         (list g$y$9346$1RbCyC)
                                                         (list
                                                           'if
                                                           g$test$9347$1RbCyC
                                                           g$conseq$9348$1RbCyC
                                                           g$altern$9349$1RbCyC))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9331$1RbCyC
                                                         (list
                                                           'quote
                                                           g$p$9344$1RbCyC)))))
                                                  (g$gen-syntax-case$9303$1RbCyC
                                                    g$x$9331$1RbCyC
                                                    g$keys$9332$1RbCyC
                                                    g$clauses$9333$1RbCyC
                                                    g$r$9334$1RbCyC
                                                    g$mr$9335$1RbCyC))))
                                              (g$build-dispatch-call$9300$1RbCyC
                                                g$pvars$9343$1RbCyC
                                                g$expr$9338$1RbCyC
                                                g$y$9346$1RbCyC
                                                g$r$9334$1RbCyC
                                                g$mr$9335$1RbCyC))))
                                          (if (eq? g$fender$9337$1RbCyC '#t)
                                            g$y$9346$1RbCyC
                                            ((case-lambda
                                               ((g$call$9350$1RbCyC)
                                                (list
                                                  'if
                                                  g$y$9346$1RbCyC
                                                  g$call$9350$1RbCyC
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$9300$1RbCyC
                                               g$pvars$9343$1RbCyC
                                               g$fender$9337$1RbCyC
                                               g$y$9346$1RbCyC
                                               g$r$9334$1RbCyC
                                               g$mr$9335$1RbCyC))))))
                                      (g$gen-lexical$7200$1RbCyC 'tmp))))))
                              g$pvars$9342$1RbCyC
                              g$p$9341$1RbCyC)))))))
                   (g$gen-syntax-case$9303$1RbCyC
                     (case-lambda
                       ((g$x$9314$1RbCyC
                          g$keys$9315$1RbCyC
                          g$clauses$9316$1RbCyC
                          g$r$9317$1RbCyC
                          g$mr$9318$1RbCyC)
                        (if (null? g$clauses$9316$1RbCyC)
                          (list '(primitive syntax-error) g$x$9314$1RbCyC)
                          ((case-lambda
                             ((g$t$9319$1RbCyC)
                              ((case-lambda
                                 ((g$ls/false$9320$1RbCyC)
                                  (if g$ls/false$9320$1RbCyC
                                    (apply
                                      (case-lambda
                                        ((g$pat$9321$1RbCyC g$expr$9322$1RbCyC)
                                         (if (if (g$id?$7261$1RbCyC
                                                   g$pat$9321$1RbCyC)
                                               (if (not (g$bound-id-member?$7268$1RbCyC
                                                          g$pat$9321$1RbCyC
                                                          g$keys$9315$1RbCyC))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7540$1RbCyC
                                                          g$pat$9321$1RbCyC)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$7265$1RbCyC
                                                 g$pat$9321$1RbCyC
                                                 (g$scheme-stx$7482$1RbCyC '_))
                                             (g$chi-expr$7557$1RbCyC
                                               g$expr$9322$1RbCyC
                                               g$r$9317$1RbCyC
                                               g$mr$9318$1RbCyC)
                                             ((case-lambda
                                                ((g$lab$9323$1RbCyC
                                                   g$lex$9324$1RbCyC)
                                                 ((case-lambda
                                                    ((g$body$9325$1RbCyC)
                                                     (list
                                                       (g$build-lambda$7187$1RbCyC
                                                         '#f
                                                         (list
                                                           g$lex$9324$1RbCyC)
                                                         g$body$9325$1RbCyC)
                                                       g$x$9314$1RbCyC)))
                                                  (g$chi-expr$7557$1RbCyC
                                                    (g$add-subst$7251$1RbCyC
                                                      (g$make-full-rib$7229$1RbCyC
                                                        (list g$pat$9321$1RbCyC)
                                                        (list
                                                          g$lab$9323$1RbCyC))
                                                      g$expr$9322$1RbCyC)
                                                    (cons
                                                      (cons
                                                        g$lab$9323$1RbCyC
                                                        (g$make-binding$7277$1RbCyC
                                                          'syntax
                                                          (cons
                                                            g$lex$9324$1RbCyC
                                                            '0)))
                                                      g$r$9317$1RbCyC)
                                                    g$mr$9318$1RbCyC))))
                                              (g$gen-label$7202$1RbCyC
                                                g$pat$9321$1RbCyC)
                                              (g$gen-lexical$7200$1RbCyC
                                                g$pat$9321$1RbCyC)))
                                           (g$gen-clause$9302$1RbCyC
                                             g$x$9314$1RbCyC
                                             g$keys$9315$1RbCyC
                                             (cdr g$clauses$9316$1RbCyC)
                                             g$r$9317$1RbCyC
                                             g$mr$9318$1RbCyC
                                             g$pat$9321$1RbCyC
                                             '#t
                                             g$expr$9322$1RbCyC))))
                                      g$ls/false$9320$1RbCyC)
                                    ((case-lambda
                                       ((g$t$9326$1RbCyC)
                                        ((case-lambda
                                           ((g$ls/false$9327$1RbCyC)
                                            (if g$ls/false$9327$1RbCyC
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9328$1RbCyC
                                                     g$fender$9329$1RbCyC
                                                     g$expr$9330$1RbCyC)
                                                   (g$gen-clause$9302$1RbCyC
                                                     g$x$9314$1RbCyC
                                                     g$keys$9315$1RbCyC
                                                     (cdr g$clauses$9316$1RbCyC)
                                                     g$r$9317$1RbCyC
                                                     g$mr$9318$1RbCyC
                                                     g$pat$9328$1RbCyC
                                                     g$fender$9329$1RbCyC
                                                     g$expr$9330$1RbCyC)))
                                                g$ls/false$9327$1RbCyC)
                                              (g$syntax-violation$7650$1RbCyC
                                                '#f
                                                '"invalid syntax"
                                                g$t$9326$1RbCyC))))
                                         (g$syntax-dispatch$7539$1RbCyC
                                           g$t$9326$1RbCyC
                                           '(any any any)))))
                                     g$t$9319$1RbCyC))))
                               (g$syntax-dispatch$7539$1RbCyC
                                 g$t$9319$1RbCyC
                                 '(any any)))))
                           (car g$clauses$9316$1RbCyC)))))))
           (case-lambda
             ((g$e$9304$1RbCyC g$r$9305$1RbCyC g$mr$9306$1RbCyC)
              ((case-lambda
                 ((g$t$9307$1RbCyC)
                  ((case-lambda
                     ((g$ls/false$9308$1RbCyC)
                      (if g$ls/false$9308$1RbCyC
                        (apply
                          (case-lambda
                            ((g$expr$9309$1RbCyC
                               g$keys$9310$1RbCyC
                               g$clauses$9311$1RbCyC)
                             (begin
                               (g$verify-literals$7542$1RbCyC
                                 g$keys$9310$1RbCyC
                                 g$e$9304$1RbCyC)
                               ((case-lambda
                                  ((g$x$9312$1RbCyC)
                                   ((case-lambda
                                      ((g$body$9313$1RbCyC)
                                       (list
                                         (g$build-lambda$7187$1RbCyC
                                           '#f
                                           (list g$x$9312$1RbCyC)
                                           g$body$9313$1RbCyC)
                                         (g$chi-expr$7557$1RbCyC
                                           g$expr$9309$1RbCyC
                                           g$r$9305$1RbCyC
                                           g$mr$9306$1RbCyC))))
                                    (g$gen-syntax-case$9303$1RbCyC
                                      g$x$9312$1RbCyC
                                      g$keys$9310$1RbCyC
                                      g$clauses$9311$1RbCyC
                                      g$r$9305$1RbCyC
                                      g$mr$9306$1RbCyC))))
                                (g$gen-lexical$7200$1RbCyC 'tmp)))))
                          g$ls/false$9308$1RbCyC)
                        (g$syntax-violation$7650$1RbCyC
                          '#f
                          '"invalid syntax"
                          g$t$9307$1RbCyC))))
                   (g$syntax-dispatch$7539$1RbCyC
                     g$t$9307$1RbCyC
                     '(_ any each-any . each-any)))))
               g$e$9304$1RbCyC))))))))
   (g$ellipsis-map$7544$1RbCyC
     g$ellipsis-map$11032$1RbCyC
     (case-lambda
       ((g$proc$9370$1RbCyC g$ls$9371$1RbCyC . g$ls*$9372$1RbCyC)
        (letrec* ((g$who$9373$1RbCyC '...))
          (begin
            (if (not (list? g$ls$9371$1RbCyC))
              (assertion-violation
                g$who$9373$1RbCyC
                '"not a list"
                g$ls$9371$1RbCyC)
              (void))
            (if (not (null? g$ls*$9372$1RbCyC))
              ((case-lambda
                 ((g$n$9374$1RbCyC)
                  (for-each
                    (case-lambda
                      ((g$x$9375$1RbCyC)
                       (begin
                         (if (not (list? g$x$9375$1RbCyC))
                           (assertion-violation
                             g$who$9373$1RbCyC
                             '"not a list"
                             g$x$9375$1RbCyC)
                           (void))
                         (if (not (= (length g$x$9375$1RbCyC) g$n$9374$1RbCyC))
                           (assertion-violation
                             g$who$9373$1RbCyC
                             '"length mismatch"
                             g$ls$9371$1RbCyC
                             g$x$9375$1RbCyC)
                           (void)))))
                    g$ls*$9372$1RbCyC)))
               (length g$ls$9371$1RbCyC))
              (void))
            (apply
              map
              g$proc$9370$1RbCyC
              g$ls$9371$1RbCyC
              g$ls*$9372$1RbCyC))))))
   (g$syntax-transformer$7545$1RbCyC
     g$syntax-transformer$11033$1RbCyC
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9376$1RbCyC
                     (case-lambda
                       ((g$src$9436$1RbCyC
                          g$e$9437$1RbCyC
                          g$r$9438$1RbCyC
                          g$maps$9439$1RbCyC
                          g$ellipsis?$9440$1RbCyC
                          g$vec?$9441$1RbCyC)
                        ((case-lambda
                           ((g$t$9442$1RbCyC)
                            ((case-lambda
                               ((g$ls/false$9443$1RbCyC)
                                (if (if g$ls/false$9443$1RbCyC
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9444$1RbCyC)
                                             (g$ellipsis?$9440$1RbCyC
                                               g$dots$9444$1RbCyC)))
                                          g$ls/false$9443$1RbCyC))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9445$1RbCyC)
                                       (g$syntax-violation$7650$1RbCyC
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9436$1RbCyC)))
                                    g$ls/false$9443$1RbCyC)
                                  ((case-lambda
                                     ((g$t$9446$1RbCyC)
                                      ((case-lambda
                                         ((g$ls/false$9447$1RbCyC)
                                          (if (if g$ls/false$9447$1RbCyC
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9448$1RbCyC)
                                                       (g$id?$7261$1RbCyC
                                                         g$id$9448$1RbCyC)))
                                                    g$ls/false$9447$1RbCyC))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9449$1RbCyC)
                                                 ((case-lambda
                                                    ((g$label$9450$1RbCyC)
                                                     ((case-lambda
                                                        ((g$b$9451$1RbCyC)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$7278$1RbCyC
                                                                        g$b$9451$1RbCyC)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9454$1RbCyC)
                                                                        (g$gen-ref$9377$1RbCyC
                                                                          g$src$9436$1RbCyC
                                                                          (car g$var.lev$9454$1RbCyC)
                                                                          (cdr g$var.lev$9454$1RbCyC)
                                                                          g$maps$9439$1RbCyC)))
                                                                     (g$binding-value$7279$1RbCyC
                                                                       g$b$9451$1RbCyC))))
                                                                 (case-lambda
                                                                   ((g$var$9455$1RbCyC
                                                                      g$maps$9456$1RbCyC)
                                                                    ((case-lambda
                                                                       ((g$maps$9457$1RbCyC
                                                                          g$var$9458$1RbCyC)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9458$1RbCyC)
                                                                          g$maps$9457$1RbCyC)))
                                                                     g$maps$9456$1RbCyC
                                                                     g$var$9455$1RbCyC))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9437$1RbCyC)
                                                                 g$maps$9439$1RbCyC)))))))
                                                      (g$label->binding$7276$1RbCyC
                                                        g$label$9450$1RbCyC
                                                        g$r$9438$1RbCyC))))
                                                  (g$id->label$7274$1RbCyC
                                                    g$e$9437$1RbCyC))))
                                              g$ls/false$9447$1RbCyC)
                                            ((case-lambda
                                               ((g$t$9459$1RbCyC)
                                                ((case-lambda
                                                   ((g$ls/false$9460$1RbCyC)
                                                    (if (if g$ls/false$9460$1RbCyC
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9461$1RbCyC
                                                                   g$e$9462$1RbCyC)
                                                                 (g$ellipsis?$9440$1RbCyC
                                                                   g$dots$9461$1RbCyC)))
                                                              g$ls/false$9460$1RbCyC))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9463$1RbCyC
                                                             g$e$9464$1RbCyC)
                                                           (if g$vec?$9441$1RbCyC
                                                             (g$syntax-violation$7650$1RbCyC
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9436$1RbCyC)
                                                             (g$gen-syntax$9376$1RbCyC
                                                               g$src$9436$1RbCyC
                                                               g$e$9464$1RbCyC
                                                               g$r$9438$1RbCyC
                                                               g$maps$9439$1RbCyC
                                                               (case-lambda
                                                                 ((g$x$9465$1RbCyC)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9460$1RbCyC)
                                                      ((case-lambda
                                                         ((g$t$9466$1RbCyC)
                                                          ((case-lambda
                                                             ((g$ls/false$9467$1RbCyC)
                                                              (if (if g$ls/false$9467$1RbCyC
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9468$1RbCyC
                                                                             g$dots$9469$1RbCyC
                                                                             g$y$9470$1RbCyC)
                                                                           (g$ellipsis?$9440$1RbCyC
                                                                             g$dots$9469$1RbCyC)))
                                                                        g$ls/false$9467$1RbCyC))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9471$1RbCyC
                                                                       g$dots$9472$1RbCyC
                                                                       g$y$9473$1RbCyC)
                                                                     ((letrec ((g$f$9474$1RbCyC
                                                                                 (case-lambda
                                                                                   ((g$y$9475$1RbCyC
                                                                                      g$k$9476$1RbCyC)
                                                                                    ((case-lambda
                                                                                       ((g$t$9477$1RbCyC)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9478$1RbCyC)
                                                                                            (if g$ls/false$9478$1RbCyC
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9476$1RbCyC
                                                                                                     g$maps$9439$1RbCyC)))
                                                                                                g$ls/false$9478$1RbCyC)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9479$1RbCyC)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9480$1RbCyC)
                                                                                                      (if (if g$ls/false$9480$1RbCyC
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9481$1RbCyC
                                                                                                                     g$y$9482$1RbCyC)
                                                                                                                   (g$ellipsis?$9440$1RbCyC
                                                                                                                     g$dots$9481$1RbCyC)))
                                                                                                                g$ls/false$9480$1RbCyC))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9483$1RbCyC
                                                                                                               g$y$9484$1RbCyC)
                                                                                                             (g$f$9474$1RbCyC
                                                                                                               g$y$9484$1RbCyC
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9485$1RbCyC)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9476$1RbCyC
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9485$1RbCyC))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9488$1RbCyC
                                                                                                                         g$maps$9489$1RbCyC)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9490$1RbCyC
                                                                                                                             g$x$9491$1RbCyC)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9490$1RbCyC))
                                                                                                                             (g$syntax-violation$7650$1RbCyC
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9436$1RbCyC)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9379$1RbCyC
                                                                                                                                 g$x$9491$1RbCyC
                                                                                                                                 (car g$maps$9490$1RbCyC))
                                                                                                                               (cdr g$maps$9490$1RbCyC)))))
                                                                                                                        g$maps$9489$1RbCyC
                                                                                                                        g$x$9488$1RbCyC)))))))))
                                                                                                          g$ls/false$9480$1RbCyC)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9492$1RbCyC)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9493$1RbCyC)
                                                                                                                (if g$ls/false$9493$1RbCyC
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9376$1RbCyC
                                                                                                                              g$src$9436$1RbCyC
                                                                                                                              g$y$9475$1RbCyC
                                                                                                                              g$r$9438$1RbCyC
                                                                                                                              g$maps$9439$1RbCyC
                                                                                                                              g$ellipsis?$9440$1RbCyC
                                                                                                                              g$vec?$9441$1RbCyC)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9496$1RbCyC
                                                                                                                              g$maps$9497$1RbCyC)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9498$1RbCyC
                                                                                                                                  g$y$9499$1RbCyC)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9476$1RbCyC
                                                                                                                                       g$maps$9498$1RbCyC)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9502$1RbCyC
                                                                                                                                       g$maps$9503$1RbCyC)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9504$1RbCyC
                                                                                                                                           g$x$9505$1RbCyC)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9378$1RbCyC
                                                                                                                                             g$x$9505$1RbCyC
                                                                                                                                             g$y$9499$1RbCyC)
                                                                                                                                           g$maps$9504$1RbCyC)))
                                                                                                                                      g$maps$9503$1RbCyC
                                                                                                                                      g$x$9502$1RbCyC))))))
                                                                                                                             g$maps$9497$1RbCyC
                                                                                                                             g$y$9496$1RbCyC))))))
                                                                                                                    g$ls/false$9493$1RbCyC)
                                                                                                                  (g$syntax-violation$7650$1RbCyC
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9492$1RbCyC))))
                                                                                                             (g$syntax-dispatch$7539$1RbCyC
                                                                                                               g$t$9492$1RbCyC
                                                                                                               '_))))
                                                                                                         g$t$9479$1RbCyC))))
                                                                                                   (g$syntax-dispatch$7539$1RbCyC
                                                                                                     g$t$9479$1RbCyC
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9477$1RbCyC))))
                                                                                         (g$syntax-dispatch$7539$1RbCyC
                                                                                           g$t$9477$1RbCyC
                                                                                           '()))))
                                                                                     g$y$9475$1RbCyC)))))
                                                                        g$f$9474$1RbCyC)
                                                                      g$y$9473$1RbCyC
                                                                      (case-lambda
                                                                        ((g$maps$9506$1RbCyC)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9376$1RbCyC
                                                                                g$src$9436$1RbCyC
                                                                                g$x$9471$1RbCyC
                                                                                g$r$9438$1RbCyC
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9506$1RbCyC)
                                                                                g$ellipsis?$9440$1RbCyC
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9509$1RbCyC
                                                                                g$maps$9510$1RbCyC)
                                                                              ((case-lambda
                                                                                 ((g$maps$9511$1RbCyC
                                                                                    g$x$9512$1RbCyC)
                                                                                  (if (null?
                                                                                        (car g$maps$9511$1RbCyC))
                                                                                    (g$syntax-violation$7650$1RbCyC
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9436$1RbCyC)
                                                                                    (values
                                                                                      (g$gen-map$9380$1RbCyC
                                                                                        g$x$9512$1RbCyC
                                                                                        (car g$maps$9511$1RbCyC))
                                                                                      (cdr g$maps$9511$1RbCyC)))))
                                                                               g$maps$9510$1RbCyC
                                                                               g$x$9509$1RbCyC)))))))))
                                                                  g$ls/false$9467$1RbCyC)
                                                                ((case-lambda
                                                                   ((g$t$9513$1RbCyC)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9514$1RbCyC)
                                                                        (if g$ls/false$9514$1RbCyC
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9515$1RbCyC
                                                                                 g$y$9516$1RbCyC)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9376$1RbCyC
                                                                                      g$src$9436$1RbCyC
                                                                                      g$x$9515$1RbCyC
                                                                                      g$r$9438$1RbCyC
                                                                                      g$maps$9439$1RbCyC
                                                                                      g$ellipsis?$9440$1RbCyC
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9519$1RbCyC
                                                                                      g$maps$9520$1RbCyC)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9521$1RbCyC
                                                                                          g$xnew$9522$1RbCyC)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9376$1RbCyC
                                                                                               g$src$9436$1RbCyC
                                                                                               g$y$9516$1RbCyC
                                                                                               g$r$9438$1RbCyC
                                                                                               g$maps$9521$1RbCyC
                                                                                               g$ellipsis?$9440$1RbCyC
                                                                                               g$vec?$9441$1RbCyC)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9525$1RbCyC
                                                                                               g$maps$9526$1RbCyC)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9527$1RbCyC
                                                                                                   g$ynew$9528$1RbCyC)
                                                                                                 (values
                                                                                                   (g$gen-cons$9381$1RbCyC
                                                                                                     g$e$9437$1RbCyC
                                                                                                     g$x$9515$1RbCyC
                                                                                                     g$y$9516$1RbCyC
                                                                                                     g$xnew$9522$1RbCyC
                                                                                                     g$ynew$9528$1RbCyC)
                                                                                                   g$maps$9527$1RbCyC)))
                                                                                              g$maps$9526$1RbCyC
                                                                                              g$ynew$9525$1RbCyC))))))
                                                                                     g$maps$9520$1RbCyC
                                                                                     g$xnew$9519$1RbCyC))))))
                                                                            g$ls/false$9514$1RbCyC)
                                                                          ((case-lambda
                                                                             ((g$t$9529$1RbCyC)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9530$1RbCyC)
                                                                                  (if g$ls/false$9530$1RbCyC
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9531$1RbCyC)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9376$1RbCyC
                                                                                                g$src$9436$1RbCyC
                                                                                                g$ls$9531$1RbCyC
                                                                                                g$r$9438$1RbCyC
                                                                                                g$maps$9439$1RbCyC
                                                                                                g$ellipsis?$9440$1RbCyC
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9534$1RbCyC
                                                                                                g$maps$9535$1RbCyC)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9536$1RbCyC
                                                                                                    g$lsnew$9537$1RbCyC)
                                                                                                  (values
                                                                                                    (g$gen-vector$9382$1RbCyC
                                                                                                      g$e$9437$1RbCyC
                                                                                                      g$ls$9531$1RbCyC
                                                                                                      g$lsnew$9537$1RbCyC)
                                                                                                    g$maps$9536$1RbCyC)))
                                                                                               g$maps$9535$1RbCyC
                                                                                               g$lsnew$9534$1RbCyC))))))
                                                                                      g$ls/false$9530$1RbCyC)
                                                                                    ((case-lambda
                                                                                       ((g$t$9538$1RbCyC)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9539$1RbCyC)
                                                                                            (if g$ls/false$9539$1RbCyC
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9437$1RbCyC)
                                                                                                     g$maps$9439$1RbCyC)))
                                                                                                g$ls/false$9539$1RbCyC)
                                                                                              (g$syntax-violation$7650$1RbCyC
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9538$1RbCyC))))
                                                                                         (g$syntax-dispatch$7539$1RbCyC
                                                                                           g$t$9538$1RbCyC
                                                                                           '_))))
                                                                                     g$t$9529$1RbCyC))))
                                                                               (g$syntax-dispatch$7539$1RbCyC
                                                                                 g$t$9529$1RbCyC
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9513$1RbCyC))))
                                                                     (g$syntax-dispatch$7539$1RbCyC
                                                                       g$t$9513$1RbCyC
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9466$1RbCyC))))
                                                           (g$syntax-dispatch$7539$1RbCyC
                                                             g$t$9466$1RbCyC
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9459$1RbCyC))))
                                                 (g$syntax-dispatch$7539$1RbCyC
                                                   g$t$9459$1RbCyC
                                                   '(any any)))))
                                             g$t$9446$1RbCyC))))
                                       (g$syntax-dispatch$7539$1RbCyC
                                         g$t$9446$1RbCyC
                                         'any))))
                                   g$t$9442$1RbCyC))))
                             (g$syntax-dispatch$7539$1RbCyC
                               g$t$9442$1RbCyC
                               'any))))
                         g$e$9437$1RbCyC))))
                   (g$gen-ref$9377$1RbCyC
                     (case-lambda
                       ((g$src$9423$1RbCyC
                          g$var$9424$1RbCyC
                          g$level$9425$1RbCyC
                          g$maps$9426$1RbCyC)
                        (if (= g$level$9425$1RbCyC '0)
                          (values g$var$9424$1RbCyC g$maps$9426$1RbCyC)
                          (if (null? g$maps$9426$1RbCyC)
                            (g$syntax-violation$7650$1RbCyC
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9423$1RbCyC)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9377$1RbCyC
                                   g$src$9423$1RbCyC
                                   g$var$9424$1RbCyC
                                   (- g$level$9425$1RbCyC '1)
                                   (cdr g$maps$9426$1RbCyC))))
                              (case-lambda
                                ((g$outer-var$9429$1RbCyC
                                   g$outer-maps$9430$1RbCyC)
                                 ((case-lambda
                                    ((g$outer-maps$9431$1RbCyC
                                       g$outer-var$9432$1RbCyC)
                                     ((case-lambda
                                        ((g$t$9433$1RbCyC)
                                         (if g$t$9433$1RbCyC
                                           ((case-lambda
                                              ((g$b$9434$1RbCyC)
                                               (values
                                                 (cdr g$b$9434$1RbCyC)
                                                 g$maps$9426$1RbCyC)))
                                            g$t$9433$1RbCyC)
                                           ((case-lambda
                                              ((g$inner-var$9435$1RbCyC)
                                               (values
                                                 g$inner-var$9435$1RbCyC
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9432$1RbCyC
                                                       g$inner-var$9435$1RbCyC)
                                                     (car g$maps$9426$1RbCyC))
                                                   g$outer-maps$9431$1RbCyC))))
                                            (g$gen-lexical$7200$1RbCyC 'tmp)))))
                                      (g$assq$4985$1RbCyC
                                        g$outer-var$9432$1RbCyC
                                        (car g$maps$9426$1RbCyC)))))
                                  g$outer-maps$9430$1RbCyC
                                  g$outer-var$9429$1RbCyC)))))))))
                   (g$gen-append$9378$1RbCyC
                     (case-lambda
                       ((g$x$9421$1RbCyC g$y$9422$1RbCyC)
                        (if (equal? g$y$9422$1RbCyC ''())
                          g$x$9421$1RbCyC
                          (list 'append g$x$9421$1RbCyC g$y$9422$1RbCyC)))))
                   (g$gen-mappend$9379$1RbCyC
                     (case-lambda
                       ((g$e$9419$1RbCyC g$map-env$9420$1RbCyC)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9380$1RbCyC
                            g$e$9419$1RbCyC
                            g$map-env$9420$1RbCyC)))))
                   (g$gen-map$9380$1RbCyC
                     (case-lambda
                       ((g$e$9410$1RbCyC g$map-env$9411$1RbCyC)
                        ((case-lambda
                           ((g$formals$9412$1RbCyC g$actuals$9413$1RbCyC)
                            (if (eq? (car g$e$9410$1RbCyC) 'ref)
                              (car g$actuals$9413$1RbCyC)
                              (if (g$for-all$4995$1RbCyC
                                    (case-lambda
                                      ((g$x$9414$1RbCyC)
                                       (if (eq? (car g$x$9414$1RbCyC) 'ref)
                                         (begin
                                           '#f
                                           (g$memq$4989$1RbCyC
                                             (g$cadr$5159$1RbCyC
                                               g$x$9414$1RbCyC)
                                             g$formals$9412$1RbCyC))
                                         '#f)))
                                    (cdr g$e$9410$1RbCyC))
                                ((case-lambda
                                   ((g$args$9415$1RbCyC)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9410$1RbCyC))
                                        g$args$9415$1RbCyC))))
                                 (map ((case-lambda
                                         ((g$r$9416$1RbCyC)
                                          (case-lambda
                                            ((g$x$9417$1RbCyC)
                                             (cdr (g$assq$4985$1RbCyC
                                                    (g$cadr$5159$1RbCyC
                                                      g$x$9417$1RbCyC)
                                                    g$r$9416$1RbCyC))))))
                                       (map cons
                                            g$formals$9412$1RbCyC
                                            g$actuals$9413$1RbCyC))
                                      (cdr g$e$9410$1RbCyC)))
                                (g$cons*$4997$1RbCyC
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9412$1RbCyC
                                    g$e$9410$1RbCyC)
                                  g$actuals$9413$1RbCyC)))))
                         (map cdr g$map-env$9411$1RbCyC)
                         (map (case-lambda
                                ((g$x$9418$1RbCyC)
                                 (list 'ref (car g$x$9418$1RbCyC))))
                              g$map-env$9411$1RbCyC)))))
                   (g$gen-cons$9381$1RbCyC
                     (case-lambda
                       ((g$e$9402$1RbCyC
                          g$x$9403$1RbCyC
                          g$y$9404$1RbCyC
                          g$xnew$9405$1RbCyC
                          g$ynew$9406$1RbCyC)
                        ((case-lambda
                           ((g$t$9407$1RbCyC)
                            (if (g$memv$4990$1RbCyC g$t$9407$1RbCyC '(quote))
                              (if (eq? (car g$xnew$9405$1RbCyC) 'quote)
                                ((case-lambda
                                   ((g$xnew$9408$1RbCyC g$ynew$9409$1RbCyC)
                                    (if (if (eq? g$xnew$9408$1RbCyC
                                                 g$x$9403$1RbCyC)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9409$1RbCyC
                                                 g$y$9404$1RbCyC))
                                          '#f)
                                      (list 'quote g$e$9402$1RbCyC)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9408$1RbCyC
                                          g$ynew$9409$1RbCyC)))))
                                 (g$cadr$5159$1RbCyC g$xnew$9405$1RbCyC)
                                 (g$cadr$5159$1RbCyC g$ynew$9406$1RbCyC))
                                (if (null?
                                      (g$cadr$5159$1RbCyC g$ynew$9406$1RbCyC))
                                  (list 'list g$xnew$9405$1RbCyC)
                                  (list
                                    'cons
                                    g$xnew$9405$1RbCyC
                                    g$ynew$9406$1RbCyC)))
                              (if (g$memv$4990$1RbCyC g$t$9407$1RbCyC '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9405$1RbCyC
                                    (cdr g$ynew$9406$1RbCyC)))
                                (list
                                  'cons
                                  g$xnew$9405$1RbCyC
                                  g$ynew$9406$1RbCyC)))))
                         (car g$ynew$9406$1RbCyC)))))
                   (g$gen-vector$9382$1RbCyC
                     (case-lambda
                       ((g$e$9399$1RbCyC g$ls$9400$1RbCyC g$lsnew$9401$1RbCyC)
                        (if (eq? (car g$lsnew$9401$1RbCyC) 'quote)
                          (if (eq? (g$cadr$5159$1RbCyC g$lsnew$9401$1RbCyC)
                                   g$ls$9400$1RbCyC)
                            (list 'quote g$e$9399$1RbCyC)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$5159$1RbCyC g$lsnew$9401$1RbCyC))))
                          (if (eq? (car g$lsnew$9401$1RbCyC) 'list)
                            (cons 'vector (cdr g$lsnew$9401$1RbCyC))
                            (list 'list->vector g$lsnew$9401$1RbCyC))))))
                   (g$regen$9383$1RbCyC
                     (case-lambda
                       ((g$x$9396$1RbCyC)
                        ((case-lambda
                           ((g$t$9397$1RbCyC)
                            (if (g$memv$4990$1RbCyC g$t$9397$1RbCyC '(ref))
                              (g$cadr$5159$1RbCyC g$x$9396$1RbCyC)
                              (if (g$memv$4990$1RbCyC
                                    g$t$9397$1RbCyC
                                    '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$5159$1RbCyC g$x$9396$1RbCyC))
                                (if (g$memv$4990$1RbCyC
                                      g$t$9397$1RbCyC
                                      '(quote))
                                  (list
                                    'quote
                                    (g$cadr$5159$1RbCyC g$x$9396$1RbCyC))
                                  (if (g$memv$4990$1RbCyC
                                        g$t$9397$1RbCyC
                                        '(lambda))
                                    (g$build-lambda$7187$1RbCyC
                                      '#f
                                      (g$cadr$5159$1RbCyC g$x$9396$1RbCyC)
                                      (g$regen$9383$1RbCyC
                                        (g$caddr$5165$1RbCyC g$x$9396$1RbCyC)))
                                    (if (g$memv$4990$1RbCyC
                                          g$t$9397$1RbCyC
                                          '(map))
                                      ((case-lambda
                                         ((g$ls$9398$1RbCyC)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9398$1RbCyC)))
                                       (map g$regen$9383$1RbCyC
                                            (cdr g$x$9396$1RbCyC)))
                                      (cons
                                        (list 'primitive (car g$x$9396$1RbCyC))
                                        (map g$regen$9383$1RbCyC
                                             (cdr g$x$9396$1RbCyC))))))))))
                         (car g$x$9396$1RbCyC))))))
           (case-lambda
             ((g$e$9384$1RbCyC g$r$9385$1RbCyC g$mr$9386$1RbCyC)
              ((case-lambda
                 ((g$t$9387$1RbCyC)
                  ((case-lambda
                     ((g$ls/false$9388$1RbCyC)
                      (if g$ls/false$9388$1RbCyC
                        (apply
                          (case-lambda
                            ((g$x$9389$1RbCyC)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9376$1RbCyC
                                    g$e$9384$1RbCyC
                                    g$x$9389$1RbCyC
                                    g$r$9385$1RbCyC
                                    '()
                                    g$ellipsis?$7540$1RbCyC
                                    '#f)))
                               (case-lambda
                                 ((g$e$9392$1RbCyC g$maps$9393$1RbCyC)
                                  ((case-lambda
                                     ((g$maps$9394$1RbCyC g$e$9395$1RbCyC)
                                      (g$regen$9383$1RbCyC g$e$9395$1RbCyC)))
                                   g$maps$9393$1RbCyC
                                   g$e$9392$1RbCyC))))))
                          g$ls/false$9388$1RbCyC)
                        (g$syntax-violation$7650$1RbCyC
                          '#f
                          '"invalid syntax"
                          g$t$9387$1RbCyC))))
                   (g$syntax-dispatch$7539$1RbCyC g$t$9387$1RbCyC '(_ any)))))
               g$e$9384$1RbCyC))))))))
   (g$core-macro-transformer$7546$1RbCyC
     g$core-macro-transformer$11034$1RbCyC
     (case-lambda
       ((g$name$9540$1RbCyC)
        ((case-lambda
           ((g$t$9541$1RbCyC)
            (if (g$memv$4990$1RbCyC g$t$9541$1RbCyC '(quote))
              g$quote-transformer$7499$1RbCyC
              (if (g$memv$4990$1RbCyC g$t$9541$1RbCyC '(lambda))
                g$lambda-transformer$7501$1RbCyC
                (if (g$memv$4990$1RbCyC g$t$9541$1RbCyC '(case-lambda))
                  g$case-lambda-transformer$7500$1RbCyC
                  (if (g$memv$4990$1RbCyC g$t$9541$1RbCyC '(letrec))
                    g$letrec-transformer$7489$1RbCyC
                    (if (g$memv$4990$1RbCyC g$t$9541$1RbCyC '(letrec*))
                      g$letrec*-transformer$7490$1RbCyC
                      (if (g$memv$4990$1RbCyC g$t$9541$1RbCyC '(if))
                        g$if-transformer$7497$1RbCyC
                        (if (g$memv$4990$1RbCyC g$t$9541$1RbCyC '(foreign-call))
                          g$foreign-call-transformer$7537$1RbCyC
                          (if (g$memv$4990$1RbCyC
                                g$t$9541$1RbCyC
                                '(syntax-case))
                            g$syntax-case-transformer$7543$1RbCyC
                            (if (g$memv$4990$1RbCyC g$t$9541$1RbCyC '(syntax))
                              g$syntax-transformer$7545$1RbCyC
                              (if (g$memv$4990$1RbCyC
                                    g$t$9541$1RbCyC
                                    '(type-descriptor))
                                g$type-descriptor-transformer$7492$1RbCyC
                                (if (g$memv$4990$1RbCyC
                                      g$t$9541$1RbCyC
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$7493$1RbCyC
                                  (if (g$memv$4990$1RbCyC
                                        g$t$9541$1RbCyC
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$7494$1RbCyC
                                    (if (g$memv$4990$1RbCyC
                                          g$t$9541$1RbCyC
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$7491$1RbCyC
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$9540$1RbCyC))))))))))))))))
         g$name$9540$1RbCyC))))
   (g$file-options-macro$7547$1RbCyC
     g$file-options-macro$11035$1RbCyC
     (case-lambda
       ((g$x$9542$1RbCyC)
        (letrec* ((g$valid-option?$9543$1RbCyC
                    (case-lambda
                      ((g$x$9548$1RbCyC)
                       (if (g$id?$7261$1RbCyC g$x$9548$1RbCyC)
                         (begin
                           '#f
                           (g$memq$4989$1RbCyC
                             (g$id->sym$7262$1RbCyC g$x$9548$1RbCyC)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$9544$1RbCyC)
              ((case-lambda
                 ((g$ls/false$9545$1RbCyC)
                  (if (if g$ls/false$9545$1RbCyC
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$9546$1RbCyC)
                               (if (g$for-all$4995$1RbCyC
                                     g$valid-option?$9543$1RbCyC
                                     g$opt*$9546$1RbCyC)
                                 (begin
                                   '#f
                                   (g$file-options-spec$6526$1RbCyC
                                     (map g$id->sym$7262$1RbCyC
                                          g$opt*$9546$1RbCyC)))
                                 '#f)))
                            g$ls/false$9545$1RbCyC))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$9547$1RbCyC)
                         (g$bless$7502$1RbCyC
                           (list
                             'quote
                             (g$file-options-spec$6526$1RbCyC
                               (map g$id->sym$7262$1RbCyC
                                    g$opt*$9547$1RbCyC))))))
                      g$ls/false$9545$1RbCyC)
                    (g$syntax-violation$7650$1RbCyC
                      '#f
                      '"invalid syntax"
                      g$t$9544$1RbCyC))))
               (g$syntax-dispatch$7539$1RbCyC
                 g$t$9544$1RbCyC
                 '(_ . each-any)))))
           g$x$9542$1RbCyC)))))
   (g$symbol-macro$7548$1RbCyC
     g$symbol-macro$11036$1RbCyC
     (case-lambda
       ((g$x$9549$1RbCyC g$set$9550$1RbCyC)
        ((case-lambda
           ((g$t$9551$1RbCyC)
            ((case-lambda
               ((g$ls/false$9552$1RbCyC)
                (if (if g$ls/false$9552$1RbCyC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$9553$1RbCyC)
                             (if (g$id?$7261$1RbCyC g$name$9553$1RbCyC)
                               (begin
                                 '#f
                                 (g$memq$4989$1RbCyC
                                   (g$id->sym$7262$1RbCyC g$name$9553$1RbCyC)
                                   g$set$9550$1RbCyC))
                               '#f)))
                          g$ls/false$9552$1RbCyC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$9554$1RbCyC)
                       (g$bless$7502$1RbCyC (list 'quote g$name$9554$1RbCyC))))
                    g$ls/false$9552$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$9551$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$9551$1RbCyC '(_ any)))))
         g$x$9549$1RbCyC))))
   (g$macro-transformer$7549$1RbCyC
     g$macro-transformer$11037$1RbCyC
     (case-lambda
       ((g$x$9555$1RbCyC)
        (if (procedure? g$x$9555$1RbCyC)
          g$x$9555$1RbCyC
          (if (symbol? g$x$9555$1RbCyC)
            ((case-lambda
               ((g$t$9556$1RbCyC)
                (if (g$memv$4990$1RbCyC g$t$9556$1RbCyC '(define-record-type))
                  g$define-record-type-macro$7533$1RbCyC
                  (if (g$memv$4990$1RbCyC g$t$9556$1RbCyC '(define-struct))
                    g$define-struct-macro$7532$1RbCyC
                    (if (g$memv$4990$1RbCyC g$t$9556$1RbCyC '(include))
                      g$include-macro$7527$1RbCyC
                      (if (g$memv$4990$1RbCyC g$t$9556$1RbCyC '(cond))
                        g$cond-macro$7525$1RbCyC
                        (if (g$memv$4990$1RbCyC g$t$9556$1RbCyC '(let))
                          g$let-macro$7505$1RbCyC
                          (if (g$memv$4990$1RbCyC g$t$9556$1RbCyC '(do))
                            g$do-macro$7521$1RbCyC
                            (if (g$memv$4990$1RbCyC g$t$9556$1RbCyC '(or))
                              g$or-macro$7523$1RbCyC
                              (if (g$memv$4990$1RbCyC g$t$9556$1RbCyC '(and))
                                g$and-macro$7524$1RbCyC
                                (if (g$memv$4990$1RbCyC g$t$9556$1RbCyC '(let*))
                                  g$let*-macro$7522$1RbCyC
                                  (if (g$memv$4990$1RbCyC
                                        g$t$9556$1RbCyC
                                        '(let-values))
                                    g$let-values-macro$7506$1RbCyC
                                    (if (g$memv$4990$1RbCyC
                                          g$t$9556$1RbCyC
                                          '(let*-values))
                                      g$let*-values-macro$7507$1RbCyC
                                      (if (g$memv$4990$1RbCyC
                                            g$t$9556$1RbCyC
                                            '(syntax-rules))
                                        g$syntax-rules-macro$7529$1RbCyC
                                        (if (g$memv$4990$1RbCyC
                                              g$t$9556$1RbCyC
                                              '(quasiquote))
                                          g$quasiquote-macro$7530$1RbCyC
                                          (if (g$memv$4990$1RbCyC
                                                g$t$9556$1RbCyC
                                                '(quasisyntax))
                                            g$quasisyntax-macro$7531$1RbCyC
                                            (if (g$memv$4990$1RbCyC
                                                  g$t$9556$1RbCyC
                                                  '(with-syntax))
                                              g$with-syntax-macro$7503$1RbCyC
                                              (if (g$memv$4990$1RbCyC
                                                    g$t$9556$1RbCyC
                                                    '(when))
                                                g$when-macro$7495$1RbCyC
                                                (if (g$memv$4990$1RbCyC
                                                      g$t$9556$1RbCyC
                                                      '(unless))
                                                  g$unless-macro$7496$1RbCyC
                                                  (if (g$memv$4990$1RbCyC
                                                        g$t$9556$1RbCyC
                                                        '(case))
                                                    g$case-macro$7498$1RbCyC
                                                    (if (g$memv$4990$1RbCyC
                                                          g$t$9556$1RbCyC
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$7520$1RbCyC
                                                      (if (g$memv$4990$1RbCyC
                                                            g$t$9556$1RbCyC
                                                            '(time))
                                                        g$time-macro$7516$1RbCyC
                                                        (if (g$memv$4990$1RbCyC
                                                              g$t$9556$1RbCyC
                                                              '(delay))
                                                          g$delay-macro$7517$1RbCyC
                                                          (if (g$memv$4990$1RbCyC
                                                                g$t$9556$1RbCyC
                                                                '(assert))
                                                            g$assert-macro$7518$1RbCyC
                                                            (if (g$memv$4990$1RbCyC
                                                                  g$t$9556$1RbCyC
                                                                  '(endianness))
                                                              g$endianness-macro$7519$1RbCyC
                                                              (if (g$memv$4990$1RbCyC
                                                                    g$t$9556$1RbCyC
                                                                    '(guard))
                                                                g$guard-macro$7514$1RbCyC
                                                                (if (g$memv$4990$1RbCyC
                                                                      g$t$9556$1RbCyC
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$7515$1RbCyC
                                                                  (if (g$memv$4990$1RbCyC
                                                                        g$t$9556$1RbCyC
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$7508$1RbCyC
                                                                    (if (g$memv$4990$1RbCyC
                                                                          g$t$9556$1RbCyC
                                                                          '(trace-define))
                                                                      g$trace-define-macro$7509$1RbCyC
                                                                      (if (g$memv$4990$1RbCyC
                                                                            g$t$9556$1RbCyC
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$7510$1RbCyC
                                                                        (if (g$memv$4990$1RbCyC
                                                                              g$t$9556$1RbCyC
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$7512$1RbCyC
                                                                          (if (g$memv$4990$1RbCyC
                                                                                g$t$9556$1RbCyC
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$7513$1RbCyC
                                                                            (if (g$memv$4990$1RbCyC
                                                                                  g$t$9556$1RbCyC
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$7534$1RbCyC
                                                                              (if (g$memv$4990$1RbCyC
                                                                                    g$t$9556$1RbCyC
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$7536$1RbCyC
                                                                                (if (g$memv$4990$1RbCyC
                                                                                      g$t$9556$1RbCyC
                                                                                      '(include-into))
                                                                                  g$include-into-macro$7528$1RbCyC
                                                                                  (if (g$memv$4990$1RbCyC
                                                                                        g$t$9556$1RbCyC
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$9557$1RbCyC)
                                                                                       (g$symbol-macro$7548$1RbCyC
                                                                                         g$x$9557$1RbCyC
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (g$memv$4990$1RbCyC
                                                                                          g$t$9556$1RbCyC
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$9558$1RbCyC)
                                                                                         (g$symbol-macro$7548$1RbCyC
                                                                                           g$x$9558$1RbCyC
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (g$memv$4990$1RbCyC
                                                                                            g$t$9556$1RbCyC
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$9559$1RbCyC)
                                                                                           (g$symbol-macro$7548$1RbCyC
                                                                                             g$x$9559$1RbCyC
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (g$memv$4990$1RbCyC
                                                                                              g$t$9556$1RbCyC
                                                                                              '(file-options))
                                                                                          g$file-options-macro$7547$1RbCyC
                                                                                          (if (g$memv$4990$1RbCyC
                                                                                                g$t$9556$1RbCyC
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$7535$1RbCyC
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$9555$1RbCyC)))))))))))))))))))))))))))))))))))))))))
             g$x$9555$1RbCyC)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$9555$1RbCyC))))))
   (g$local-macro-transformer$7550$1RbCyC
     g$local-macro-transformer$11038$1RbCyC
     (case-lambda ((g$x$9560$1RbCyC) (car g$x$9560$1RbCyC))))
   (g$do-macro-call$7551$1RbCyC
     g$do-macro-call$11039$1RbCyC
     (case-lambda
       ((g$transformer$9561$1RbCyC g$expr$9562$1RbCyC)
        ((case-lambda
           ((g$out$9563$1RbCyC)
            (begin
              ((letrec ((g$f$9564$1RbCyC
                          (case-lambda
                            ((g$x$9565$1RbCyC)
                             (if (not (g$stx?$7233$1RbCyC g$x$9565$1RbCyC))
                               (if (pair? g$x$9565$1RbCyC)
                                 (begin
                                   (g$f$9564$1RbCyC (car g$x$9565$1RbCyC))
                                   (g$f$9564$1RbCyC (cdr g$x$9565$1RbCyC)))
                                 (if (vector? g$x$9565$1RbCyC)
                                   (vector-for-each
                                     g$f$9564$1RbCyC
                                     g$x$9565$1RbCyC)
                                   (if (symbol? g$x$9565$1RbCyC)
                                     (g$syntax-violation$7650$1RbCyC
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$9562$1RbCyC
                                       g$x$9565$1RbCyC)
                                     (void))))
                               (void))))))
                 g$f$9564$1RbCyC)
               g$out$9563$1RbCyC)
              (g$add-mark$7250$1RbCyC
                (g$gen-mark$7245$1RbCyC)
                g$out$9563$1RbCyC
                g$expr$9562$1RbCyC))))
         (g$transformer$9561$1RbCyC
           (g$add-mark$7250$1RbCyC
             g$anti-mark$7246$1RbCyC
             g$expr$9562$1RbCyC
             '#f))))))
   (g$chi-macro$7552$1RbCyC
     g$chi-macro$11040$1RbCyC
     (case-lambda
       ((g$p$9566$1RbCyC g$e$9567$1RbCyC)
        (g$do-macro-call$7551$1RbCyC
          (g$macro-transformer$7549$1RbCyC g$p$9566$1RbCyC)
          g$e$9567$1RbCyC))))
   (g$chi-local-macro$7553$1RbCyC
     g$chi-local-macro$11041$1RbCyC
     (case-lambda
       ((g$p$9568$1RbCyC g$e$9569$1RbCyC)
        (g$do-macro-call$7551$1RbCyC
          (g$local-macro-transformer$7550$1RbCyC g$p$9568$1RbCyC)
          g$e$9569$1RbCyC))))
   (g$chi-global-macro$7554$1RbCyC
     g$chi-global-macro$11042$1RbCyC
     (case-lambda
       ((g$p$9570$1RbCyC g$e$9571$1RbCyC)
        ((case-lambda
           ((g$lib$9572$1RbCyC g$loc$9573$1RbCyC)
            (begin
              (g$visit-library$7072$1RbCyC g$lib$9572$1RbCyC)
              ((case-lambda
                 ((g$x$9574$1RbCyC)
                  ((case-lambda
                     ((g$transformer$9575$1RbCyC)
                      (g$do-macro-call$7551$1RbCyC
                        g$transformer$9575$1RbCyC
                        g$e$9571$1RbCyC)))
                   (if (procedure? g$x$9574$1RbCyC)
                     g$x$9574$1RbCyC
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$9574$1RbCyC)))))
               (symbol-value g$loc$9573$1RbCyC)))))
         (car g$p$9570$1RbCyC)
         (cdr g$p$9570$1RbCyC)))))
   (g$chi-expr*$7555$1RbCyC
     g$chi-expr*$11043$1RbCyC
     (case-lambda
       ((g$e*$9576$1RbCyC g$r$9577$1RbCyC g$mr$9578$1RbCyC)
        (if (null? g$e*$9576$1RbCyC)
          '()
          ((case-lambda
             ((g$e$9579$1RbCyC)
              (cons
                g$e$9579$1RbCyC
                (g$chi-expr*$7555$1RbCyC
                  (cdr g$e*$9576$1RbCyC)
                  g$r$9577$1RbCyC
                  g$mr$9578$1RbCyC))))
           (g$chi-expr$7557$1RbCyC
             (car g$e*$9576$1RbCyC)
             g$r$9577$1RbCyC
             g$mr$9578$1RbCyC))))))
   (g$chi-application$7556$1RbCyC
     g$chi-application$11044$1RbCyC
     (case-lambda
       ((g$e$9580$1RbCyC g$r$9581$1RbCyC g$mr$9582$1RbCyC)
        ((case-lambda
           ((g$t$9583$1RbCyC)
            ((case-lambda
               ((g$ls/false$9584$1RbCyC)
                (if g$ls/false$9584$1RbCyC
                  (apply
                    (case-lambda
                      ((g$rator$9585$1RbCyC g$rands$9586$1RbCyC)
                       ((case-lambda
                          ((g$rator$9587$1RbCyC)
                           (cons
                             g$rator$9587$1RbCyC
                             (g$chi-expr*$7555$1RbCyC
                               g$rands$9586$1RbCyC
                               g$r$9581$1RbCyC
                               g$mr$9582$1RbCyC))))
                        (g$chi-expr$7557$1RbCyC
                          g$rator$9585$1RbCyC
                          g$r$9581$1RbCyC
                          g$mr$9582$1RbCyC))))
                    g$ls/false$9584$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$9583$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$9583$1RbCyC
               '(any . each-any)))))
         g$e$9580$1RbCyC))))
   (g$chi-expr$7557$1RbCyC
     g$chi-expr$11045$1RbCyC
     (case-lambda
       ((g$e$9588$1RbCyC g$r$9589$1RbCyC g$mr$9590$1RbCyC)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$7281$1RbCyC g$e$9588$1RbCyC g$r$9589$1RbCyC)))
          (case-lambda
            ((g$type$9594$1RbCyC g$value$9595$1RbCyC g$kwd$9596$1RbCyC)
             ((case-lambda
                ((g$kwd$9597$1RbCyC g$value$9598$1RbCyC g$type$9599$1RbCyC)
                 ((case-lambda
                    ((g$t$9600$1RbCyC)
                     (if (g$memv$4990$1RbCyC g$t$9600$1RbCyC '(core-macro))
                       ((case-lambda
                          ((g$transformer$9601$1RbCyC)
                           (g$transformer$9601$1RbCyC
                             g$e$9588$1RbCyC
                             g$r$9589$1RbCyC
                             g$mr$9590$1RbCyC)))
                        (g$core-macro-transformer$7546$1RbCyC
                          g$value$9598$1RbCyC))
                       (if (g$memv$4990$1RbCyC g$t$9600$1RbCyC '(global))
                         ((case-lambda
                            ((g$lib$9602$1RbCyC)
                             ((case-lambda
                                ((g$loc$9603$1RbCyC)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$7591$1RbCyC)
                                        g$lib$9602$1RbCyC)
                                       g$loc$9603$1RbCyC))))))
                              (cdr g$value$9598$1RbCyC))))
                          (car g$value$9598$1RbCyC))
                         (if (g$memv$4990$1RbCyC g$t$9600$1RbCyC '(core-prim))
                           ((case-lambda
                              ((g$name$9604$1RbCyC)
                               (list 'primitive g$name$9604$1RbCyC)))
                            g$value$9598$1RbCyC)
                           (if (g$memv$4990$1RbCyC g$t$9600$1RbCyC '(call))
                             (g$chi-application$7556$1RbCyC
                               g$e$9588$1RbCyC
                               g$r$9589$1RbCyC
                               g$mr$9590$1RbCyC)
                             (if (g$memv$4990$1RbCyC g$t$9600$1RbCyC '(lexical))
                               ((case-lambda
                                  ((g$lex$9605$1RbCyC) g$lex$9605$1RbCyC))
                                (g$lexical-var$7483$1RbCyC g$value$9598$1RbCyC))
                               (if (g$memv$4990$1RbCyC
                                     g$t$9600$1RbCyC
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7557$1RbCyC
                                   (g$chi-global-macro$7554$1RbCyC
                                     g$value$9598$1RbCyC
                                     g$e$9588$1RbCyC)
                                   g$r$9589$1RbCyC
                                   g$mr$9590$1RbCyC)
                                 (if (g$memv$4990$1RbCyC
                                       g$t$9600$1RbCyC
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7557$1RbCyC
                                     (g$chi-local-macro$7553$1RbCyC
                                       g$value$9598$1RbCyC
                                       g$e$9588$1RbCyC)
                                     g$r$9589$1RbCyC
                                     g$mr$9590$1RbCyC)
                                   (if (g$memv$4990$1RbCyC
                                         g$t$9600$1RbCyC
                                         '(macro macro!))
                                     (g$chi-expr$7557$1RbCyC
                                       (g$chi-macro$7552$1RbCyC
                                         g$value$9598$1RbCyC
                                         g$e$9588$1RbCyC)
                                       g$r$9589$1RbCyC
                                       g$mr$9590$1RbCyC)
                                     (if (g$memv$4990$1RbCyC
                                           g$t$9600$1RbCyC
                                           '(constant))
                                       ((case-lambda
                                          ((g$datum$9606$1RbCyC)
                                           (list 'quote g$datum$9606$1RbCyC)))
                                        g$value$9598$1RbCyC)
                                       (if (g$memv$4990$1RbCyC
                                             g$t$9600$1RbCyC
                                             '(set!))
                                         (g$chi-set!$7558$1RbCyC
                                           g$e$9588$1RbCyC
                                           g$r$9589$1RbCyC
                                           g$mr$9590$1RbCyC)
                                         (if (g$memv$4990$1RbCyC
                                               g$t$9600$1RbCyC
                                               '(begin))
                                           ((case-lambda
                                              ((g$t$9607$1RbCyC)
                                               ((case-lambda
                                                  ((g$ls/false$9608$1RbCyC)
                                                   (if g$ls/false$9608$1RbCyC
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9609$1RbCyC
                                                            g$x*$9610$1RbCyC)
                                                          (g$build-sequence$7190$1RbCyC
                                                            '#f
                                                            (g$chi-expr*$7555$1RbCyC
                                                              (cons
                                                                g$x$9609$1RbCyC
                                                                g$x*$9610$1RbCyC)
                                                              g$r$9589$1RbCyC
                                                              g$mr$9590$1RbCyC))))
                                                       g$ls/false$9608$1RbCyC)
                                                     (g$syntax-violation$7650$1RbCyC
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9607$1RbCyC))))
                                                (g$syntax-dispatch$7539$1RbCyC
                                                  g$t$9607$1RbCyC
                                                  '(_ any . each-any)))))
                                            g$e$9588$1RbCyC)
                                           (if (g$memv$4990$1RbCyC
                                                 g$t$9600$1RbCyC
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$9611$1RbCyC)
                                                 ((case-lambda
                                                    ((g$ls/false$9612$1RbCyC)
                                                     (if (if g$ls/false$9612$1RbCyC
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$9613$1RbCyC
                                                                    g$xrhs*$9614$1RbCyC
                                                                    g$xbody$9615$1RbCyC
                                                                    g$xbody*$9616$1RbCyC)
                                                                  (if (not (g$valid-bound-ids?$7266$1RbCyC
                                                                             g$xlhs*$9613$1RbCyC))
                                                                    (g$syntax-violation$7650$1RbCyC
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$9588$1RbCyC)
                                                                    (void))))
                                                               g$ls/false$9612$1RbCyC))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$9617$1RbCyC
                                                              g$xrhs*$9618$1RbCyC
                                                              g$xbody$9619$1RbCyC
                                                              g$xbody*$9620$1RbCyC)
                                                            ((case-lambda
                                                               ((g$xlab*$9621$1RbCyC)
                                                                ((case-lambda
                                                                   ((g$xrib$9622$1RbCyC)
                                                                    ((case-lambda
                                                                       ((g$xb*$9623$1RbCyC)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$7190$1RbCyC
                                                                              '#f
                                                                              (g$chi-expr*$7555$1RbCyC
                                                                                (map (case-lambda
                                                                                       ((g$x$9624$1RbCyC)
                                                                                        (g$add-subst$7251$1RbCyC
                                                                                          g$xrib$9622$1RbCyC
                                                                                          g$x$9624$1RbCyC)))
                                                                                     (cons
                                                                                       g$xbody$9619$1RbCyC
                                                                                       g$xbody*$9620$1RbCyC))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9621$1RbCyC
                                                                                       g$xb*$9623$1RbCyC)
                                                                                  g$r$9589$1RbCyC)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9621$1RbCyC
                                                                                       g$xb*$9623$1RbCyC)
                                                                                  g$mr$9590$1RbCyC))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$9625$1RbCyC)
                                                                             (g$make-eval-transformer$7293$1RbCyC
                                                                               (g$expand-transformer$7584$1RbCyC
                                                                                 (if (eq? g$type$9599$1RbCyC
                                                                                          'let-syntax)
                                                                                   g$x$9625$1RbCyC
                                                                                   (g$add-subst$7251$1RbCyC
                                                                                     g$xrib$9622$1RbCyC
                                                                                     g$x$9625$1RbCyC))
                                                                                 g$mr$9590$1RbCyC))))
                                                                          g$xrhs*$9618$1RbCyC))))
                                                                 (g$make-full-rib$7229$1RbCyC
                                                                   g$xlhs*$9617$1RbCyC
                                                                   g$xlab*$9621$1RbCyC))))
                                                             (map g$gen-label$7202$1RbCyC
                                                                  g$xlhs*$9617$1RbCyC))))
                                                         g$ls/false$9612$1RbCyC)
                                                       (g$syntax-violation$7650$1RbCyC
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$9611$1RbCyC))))
                                                  (g$syntax-dispatch$7539$1RbCyC
                                                    g$t$9611$1RbCyC
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$9588$1RbCyC)
                                             (if (g$memv$4990$1RbCyC
                                                   g$t$9600$1RbCyC
                                                   '(displaced-lexical))
                                               (g$syntax-violation$7650$1RbCyC
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$9588$1RbCyC)
                                               (if (g$memv$4990$1RbCyC
                                                     g$t$9600$1RbCyC
                                                     '(syntax))
                                                 (g$syntax-violation$7650$1RbCyC
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$9588$1RbCyC)
                                                 (if (g$memv$4990$1RbCyC
                                                       g$t$9600$1RbCyC
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$7650$1RbCyC
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$9626$1RbCyC)
                                                           (if (g$memv$4990$1RbCyC
                                                                 g$t$9626$1RbCyC
                                                                 '(define))
                                                             '"a definition"
                                                             (if (g$memv$4990$1RbCyC
                                                                   g$t$9626$1RbCyC
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (g$memv$4990$1RbCyC
                                                                     g$t$9626$1RbCyC
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (g$memv$4990$1RbCyC
                                                                       g$t$9626$1RbCyC
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (g$memv$4990$1RbCyC
                                                                         g$t$9626$1RbCyC
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     (if (g$memv$4990$1RbCyC
                                                                           g$t$9626$1RbCyC
                                                                           '(export))
                                                                       '"an export declaration"
                                                                       '"a non-expression"))))))))
                                                        g$type$9599$1RbCyC)
                                                       '" was found where an expression was expected")
                                                     g$e$9588$1RbCyC)
                                                   (if (g$memv$4990$1RbCyC
                                                         g$t$9600$1RbCyC
                                                         '(mutable))
                                                     (g$syntax-violation$7650$1RbCyC
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$9588$1RbCyC)
                                                     (g$syntax-violation$7650$1RbCyC
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$9588$1RbCyC)))))))))))))))))))
                  g$type$9599$1RbCyC)))
              g$kwd$9596$1RbCyC
              g$value$9595$1RbCyC
              g$type$9594$1RbCyC)))))))
   (g$chi-set!$7558$1RbCyC
     g$chi-set!$11046$1RbCyC
     (case-lambda
       ((g$e$9627$1RbCyC g$r$9628$1RbCyC g$mr$9629$1RbCyC)
        ((case-lambda
           ((g$t$9630$1RbCyC)
            ((case-lambda
               ((g$ls/false$9631$1RbCyC)
                (if (if g$ls/false$9631$1RbCyC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$9632$1RbCyC g$v$9633$1RbCyC)
                             (g$id?$7261$1RbCyC g$x$9632$1RbCyC)))
                          g$ls/false$9631$1RbCyC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$9634$1RbCyC g$v$9635$1RbCyC)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$7281$1RbCyC
                              g$x$9634$1RbCyC
                              g$r$9628$1RbCyC)))
                         (case-lambda
                           ((g$type$9639$1RbCyC
                              g$value$9640$1RbCyC
                              g$kwd$9641$1RbCyC)
                            ((case-lambda
                               ((g$kwd$9642$1RbCyC
                                  g$value$9643$1RbCyC
                                  g$type$9644$1RbCyC)
                                ((case-lambda
                                   ((g$t$9645$1RbCyC)
                                    (if (g$memv$4990$1RbCyC
                                          g$t$9645$1RbCyC
                                          '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$7485$1RbCyC
                                          g$value$9643$1RbCyC
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7483$1RbCyC
                                            g$value$9643$1RbCyC)
                                          (g$chi-expr$7557$1RbCyC
                                            g$v$9635$1RbCyC
                                            g$r$9628$1RbCyC
                                            g$mr$9629$1RbCyC)))
                                      (if (g$memv$4990$1RbCyC
                                            g$t$9645$1RbCyC
                                            '(core-prim))
                                        (g$syntax-violation$7650$1RbCyC
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$9627$1RbCyC)
                                        (if (g$memv$4990$1RbCyC
                                              g$t$9645$1RbCyC
                                              '(global))
                                          (g$syntax-violation$7650$1RbCyC
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$9627$1RbCyC)
                                          (if (g$memv$4990$1RbCyC
                                                g$t$9645$1RbCyC
                                                '(global-macro!))
                                            (g$chi-expr$7557$1RbCyC
                                              (g$chi-global-macro$7554$1RbCyC
                                                g$value$9643$1RbCyC
                                                g$e$9627$1RbCyC)
                                              g$r$9628$1RbCyC
                                              g$mr$9629$1RbCyC)
                                            (if (g$memv$4990$1RbCyC
                                                  g$t$9645$1RbCyC
                                                  '(local-macro!))
                                              (g$chi-expr$7557$1RbCyC
                                                (g$chi-local-macro$7553$1RbCyC
                                                  g$value$9643$1RbCyC
                                                  g$e$9627$1RbCyC)
                                                g$r$9628$1RbCyC
                                                g$mr$9629$1RbCyC)
                                              (if (g$memv$4990$1RbCyC
                                                    g$t$9645$1RbCyC
                                                    '(mutable))
                                                (g$syntax-violation$7650$1RbCyC
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$9627$1RbCyC)
                                                (g$syntax-violation$7650$1RbCyC
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$9627$1RbCyC)))))))))
                                 g$type$9644$1RbCyC)))
                             g$kwd$9641$1RbCyC
                             g$value$9640$1RbCyC
                             g$type$9639$1RbCyC))))))
                    g$ls/false$9631$1RbCyC)
                  (g$syntax-violation$7650$1RbCyC
                    '#f
                    '"invalid syntax"
                    g$t$9630$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$9630$1RbCyC '(_ any any)))))
         g$e$9627$1RbCyC))))
   (g$verify-formals$7559$1RbCyC
     g$verify-formals$11047$1RbCyC
     (case-lambda
       ((g$fmls$9646$1RbCyC g$stx$9647$1RbCyC)
        ((case-lambda
           ((g$t$9648$1RbCyC)
            ((case-lambda
               ((g$ls/false$9649$1RbCyC)
                (if g$ls/false$9649$1RbCyC
                  (apply
                    (case-lambda
                      ((g$x*$9650$1RbCyC)
                       (if (not (g$valid-bound-ids?$7266$1RbCyC
                                  g$x*$9650$1RbCyC))
                         (g$invalid-fmls-error$7504$1RbCyC
                           g$stx$9647$1RbCyC
                           g$fmls$9646$1RbCyC)
                         (void))))
                    g$ls/false$9649$1RbCyC)
                  ((case-lambda
                     ((g$t$9651$1RbCyC)
                      ((case-lambda
                         ((g$ls/false$9652$1RbCyC)
                          (if g$ls/false$9652$1RbCyC
                            (apply
                              (case-lambda
                                ((g$x*$9653$1RbCyC g$x$9654$1RbCyC)
                                 (if (not (g$valid-bound-ids?$7266$1RbCyC
                                            (cons
                                              g$x$9654$1RbCyC
                                              g$x*$9653$1RbCyC)))
                                   (g$invalid-fmls-error$7504$1RbCyC
                                     g$stx$9647$1RbCyC
                                     g$fmls$9646$1RbCyC)
                                   (void))))
                              g$ls/false$9652$1RbCyC)
                            ((case-lambda
                               ((g$t$9655$1RbCyC)
                                ((case-lambda
                                   ((g$ls/false$9656$1RbCyC)
                                    (if g$ls/false$9656$1RbCyC
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7650$1RbCyC
                                             '#f
                                             '"invalid syntax"
                                             g$stx$9647$1RbCyC)))
                                        g$ls/false$9656$1RbCyC)
                                      (g$syntax-violation$7650$1RbCyC
                                        '#f
                                        '"invalid syntax"
                                        g$t$9655$1RbCyC))))
                                 (g$syntax-dispatch$7539$1RbCyC
                                   g$t$9655$1RbCyC
                                   '_))))
                             g$t$9651$1RbCyC))))
                       (g$syntax-dispatch$7539$1RbCyC
                         g$t$9651$1RbCyC
                         '#(each+ any () any)))))
                   g$t$9648$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$9648$1RbCyC 'each-any))))
         g$fmls$9646$1RbCyC))))
   (g$chi-lambda-clause$7560$1RbCyC
     g$chi-lambda-clause$11048$1RbCyC
     (case-lambda
       ((g$stx$9657$1RbCyC
          g$fmls$9658$1RbCyC
          g$body*$9659$1RbCyC
          g$r$9660$1RbCyC
          g$mr$9661$1RbCyC)
        ((case-lambda
           ((g$t$9662$1RbCyC)
            ((case-lambda
               ((g$ls/false$9663$1RbCyC)
                (if g$ls/false$9663$1RbCyC
                  (apply
                    (case-lambda
                      ((g$x*$9664$1RbCyC)
                       (begin
                         (g$verify-formals$7559$1RbCyC
                           g$fmls$9658$1RbCyC
                           g$stx$9657$1RbCyC)
                         ((case-lambda
                            ((g$lex*$9665$1RbCyC g$lab*$9666$1RbCyC)
                             (values
                               g$lex*$9665$1RbCyC
                               (g$chi-internal$7568$1RbCyC
                                 (g$add-subst$7251$1RbCyC
                                   (g$make-full-rib$7229$1RbCyC
                                     g$x*$9664$1RbCyC
                                     g$lab*$9666$1RbCyC)
                                   g$body*$9659$1RbCyC)
                                 (g$add-lexicals$7487$1RbCyC
                                   g$lab*$9666$1RbCyC
                                   g$lex*$9665$1RbCyC
                                   g$r$9660$1RbCyC)
                                 g$mr$9661$1RbCyC))))
                          (map g$gen-lexical$7200$1RbCyC g$x*$9664$1RbCyC)
                          (map g$gen-label$7202$1RbCyC g$x*$9664$1RbCyC)))))
                    g$ls/false$9663$1RbCyC)
                  ((case-lambda
                     ((g$t$9667$1RbCyC)
                      ((case-lambda
                         ((g$ls/false$9668$1RbCyC)
                          (if g$ls/false$9668$1RbCyC
                            (apply
                              (case-lambda
                                ((g$x*$9669$1RbCyC g$x$9670$1RbCyC)
                                 (begin
                                   (g$verify-formals$7559$1RbCyC
                                     g$fmls$9658$1RbCyC
                                     g$stx$9657$1RbCyC)
                                   ((case-lambda
                                      ((g$lex*$9671$1RbCyC
                                         g$lab*$9672$1RbCyC
                                         g$lex$9673$1RbCyC
                                         g$lab$9674$1RbCyC)
                                       (values
                                         (append
                                           g$lex*$9671$1RbCyC
                                           g$lex$9673$1RbCyC)
                                         (g$chi-internal$7568$1RbCyC
                                           (g$add-subst$7251$1RbCyC
                                             (g$make-full-rib$7229$1RbCyC
                                               (cons
                                                 g$x$9670$1RbCyC
                                                 g$x*$9669$1RbCyC)
                                               (cons
                                                 g$lab$9674$1RbCyC
                                                 g$lab*$9672$1RbCyC))
                                             g$body*$9659$1RbCyC)
                                           (g$add-lexicals$7487$1RbCyC
                                             (cons
                                               g$lab$9674$1RbCyC
                                               g$lab*$9672$1RbCyC)
                                             (cons
                                               g$lex$9673$1RbCyC
                                               g$lex*$9671$1RbCyC)
                                             g$r$9660$1RbCyC)
                                           g$mr$9661$1RbCyC))))
                                    (map g$gen-lexical$7200$1RbCyC
                                         g$x*$9669$1RbCyC)
                                    (map g$gen-label$7202$1RbCyC
                                         g$x*$9669$1RbCyC)
                                    (g$gen-lexical$7200$1RbCyC g$x$9670$1RbCyC)
                                    (g$gen-label$7202$1RbCyC
                                      g$x$9670$1RbCyC)))))
                              g$ls/false$9668$1RbCyC)
                            ((case-lambda
                               ((g$t$9675$1RbCyC)
                                ((case-lambda
                                   ((g$ls/false$9676$1RbCyC)
                                    (if g$ls/false$9676$1RbCyC
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7650$1RbCyC
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$9658$1RbCyC)))
                                        g$ls/false$9676$1RbCyC)
                                      (g$syntax-violation$7650$1RbCyC
                                        '#f
                                        '"invalid syntax"
                                        g$t$9675$1RbCyC))))
                                 (g$syntax-dispatch$7539$1RbCyC
                                   g$t$9675$1RbCyC
                                   '_))))
                             g$t$9667$1RbCyC))))
                       (g$syntax-dispatch$7539$1RbCyC
                         g$t$9667$1RbCyC
                         '#(each+ any () any)))))
                   g$t$9662$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$9662$1RbCyC 'each-any))))
         g$fmls$9658$1RbCyC))))
   (g$chi-lambda-clause*$7561$1RbCyC
     g$chi-lambda-clause*$11049$1RbCyC
     (case-lambda
       ((g$stx$9677$1RbCyC
          g$fmls*$9678$1RbCyC
          g$body**$9679$1RbCyC
          g$r$9680$1RbCyC
          g$mr$9681$1RbCyC)
        (if (null? g$fmls*$9678$1RbCyC)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$7560$1RbCyC
                 g$stx$9677$1RbCyC
                 (car g$fmls*$9678$1RbCyC)
                 (car g$body**$9679$1RbCyC)
                 g$r$9680$1RbCyC
                 g$mr$9681$1RbCyC)))
            (case-lambda
              ((g$a$9684$1RbCyC g$b$9685$1RbCyC)
               ((case-lambda
                  ((g$b$9686$1RbCyC g$a$9687$1RbCyC)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$7561$1RbCyC
                          g$stx$9677$1RbCyC
                          (cdr g$fmls*$9678$1RbCyC)
                          (cdr g$body**$9679$1RbCyC)
                          g$r$9680$1RbCyC
                          g$mr$9681$1RbCyC)))
                     (case-lambda
                       ((g$a*$9690$1RbCyC g$b*$9691$1RbCyC)
                        ((case-lambda
                           ((g$b*$9692$1RbCyC g$a*$9693$1RbCyC)
                            (values
                              (cons g$a$9687$1RbCyC g$a*$9693$1RbCyC)
                              (cons g$b$9686$1RbCyC g$b*$9692$1RbCyC))))
                         g$b*$9691$1RbCyC
                         g$a*$9690$1RbCyC))))))
                g$b$9685$1RbCyC
                g$a$9684$1RbCyC))))))))
   (g$chi-defun$7562$1RbCyC
     g$chi-defun$11050$1RbCyC
     (case-lambda
       ((g$x$9694$1RbCyC g$r$9695$1RbCyC g$mr$9696$1RbCyC)
        ((case-lambda
           ((g$fmls$9697$1RbCyC g$body*$9698$1RbCyC)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$7560$1RbCyC
                   g$fmls$9697$1RbCyC
                   g$fmls$9697$1RbCyC
                   g$body*$9698$1RbCyC
                   g$r$9695$1RbCyC
                   g$mr$9696$1RbCyC)))
              (case-lambda
                ((g$fmls$9701$1RbCyC g$body$9702$1RbCyC)
                 ((case-lambda
                    ((g$body$9703$1RbCyC g$fmls$9704$1RbCyC)
                     (g$build-lambda$7187$1RbCyC
                       '#f
                       g$fmls$9704$1RbCyC
                       g$body$9703$1RbCyC)))
                  g$body$9702$1RbCyC
                  g$fmls$9701$1RbCyC))))))
         (car g$x$9694$1RbCyC)
         (cdr g$x$9694$1RbCyC)))))
   (g$chi-rhs$7563$1RbCyC
     g$chi-rhs$11051$1RbCyC
     (case-lambda
       ((g$rhs$9705$1RbCyC g$r$9706$1RbCyC g$mr$9707$1RbCyC)
        ((case-lambda
           ((g$t$9708$1RbCyC)
            (if (g$memv$4990$1RbCyC g$t$9708$1RbCyC '(defun))
              (g$chi-defun$7562$1RbCyC
                (cdr g$rhs$9705$1RbCyC)
                g$r$9706$1RbCyC
                g$mr$9707$1RbCyC)
              (if (g$memv$4990$1RbCyC g$t$9708$1RbCyC '(expr))
                ((case-lambda
                   ((g$expr$9709$1RbCyC)
                    (g$chi-expr$7557$1RbCyC
                      g$expr$9709$1RbCyC
                      g$r$9706$1RbCyC
                      g$mr$9707$1RbCyC)))
                 (cdr g$rhs$9705$1RbCyC))
                (if (g$memv$4990$1RbCyC g$t$9708$1RbCyC '(top-expr))
                  ((case-lambda
                     ((g$expr$9710$1RbCyC)
                      (g$build-sequence$7190$1RbCyC
                        '#f
                        (list
                          (g$chi-expr$7557$1RbCyC
                            g$expr$9710$1RbCyC
                            g$r$9706$1RbCyC
                            g$mr$9707$1RbCyC)
                          (g$build-void$7191$1RbCyC)))))
                   (cdr g$rhs$9705$1RbCyC))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$9705$1RbCyC))))))
         (car g$rhs$9705$1RbCyC)))))
   (g$expand-interaction-rhs*/init*$7564$1RbCyC
     g$expand-interaction-rhs*/init*$11052$1RbCyC
     (case-lambda
       ((g$lhs*$9711$1RbCyC
          g$rhs*$9712$1RbCyC
          g$init*$9713$1RbCyC
          g$r$9714$1RbCyC
          g$mr$9715$1RbCyC)
        ((letrec ((g$f$9716$1RbCyC
                    (case-lambda
                      ((g$lhs*$9717$1RbCyC g$rhs*$9718$1RbCyC)
                       (if (null? g$lhs*$9717$1RbCyC)
                         (map (case-lambda
                                ((g$x$9719$1RbCyC)
                                 (g$chi-expr$7557$1RbCyC
                                   g$x$9719$1RbCyC
                                   g$r$9714$1RbCyC
                                   g$mr$9715$1RbCyC)))
                              g$init*$9713$1RbCyC)
                         ((case-lambda
                            ((g$lhs$9720$1RbCyC g$rhs$9721$1RbCyC)
                             ((case-lambda
                                ((g$t$9722$1RbCyC)
                                 (if (g$memv$4990$1RbCyC
                                       g$t$9722$1RbCyC
                                       '(defun))
                                   ((case-lambda
                                      ((g$rhs$9723$1RbCyC)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$9720$1RbCyC
                                           g$rhs$9723$1RbCyC)
                                         (g$f$9716$1RbCyC
                                           (cdr g$lhs*$9717$1RbCyC)
                                           (cdr g$rhs*$9718$1RbCyC)))))
                                    (g$chi-defun$7562$1RbCyC
                                      (cdr g$rhs$9721$1RbCyC)
                                      g$r$9714$1RbCyC
                                      g$mr$9715$1RbCyC))
                                   (if (g$memv$4990$1RbCyC
                                         g$t$9722$1RbCyC
                                         '(expr))
                                     ((case-lambda
                                        ((g$rhs$9724$1RbCyC)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$9720$1RbCyC
                                             g$rhs$9724$1RbCyC)
                                           (g$f$9716$1RbCyC
                                             (cdr g$lhs*$9717$1RbCyC)
                                             (cdr g$rhs*$9718$1RbCyC)))))
                                      (g$chi-expr$7557$1RbCyC
                                        (cdr g$rhs$9721$1RbCyC)
                                        g$r$9714$1RbCyC
                                        g$mr$9715$1RbCyC))
                                     (if (g$memv$4990$1RbCyC
                                           g$t$9722$1RbCyC
                                           '(top-expr))
                                       ((case-lambda
                                          ((g$e$9725$1RbCyC)
                                           (cons
                                             g$e$9725$1RbCyC
                                             (g$f$9716$1RbCyC
                                               (cdr g$lhs*$9717$1RbCyC)
                                               (cdr g$rhs*$9718$1RbCyC)))))
                                        (g$chi-expr$7557$1RbCyC
                                          (cdr g$rhs$9721$1RbCyC)
                                          g$r$9714$1RbCyC
                                          g$mr$9715$1RbCyC))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$9721$1RbCyC))))))
                              (car g$rhs$9721$1RbCyC))))
                          (car g$lhs*$9717$1RbCyC)
                          (car g$rhs*$9718$1RbCyC)))))))
           g$f$9716$1RbCyC)
         g$lhs*$9711$1RbCyC
         g$rhs*$9712$1RbCyC))))
   (g$chi-rhs*$7565$1RbCyC
     g$chi-rhs*$11053$1RbCyC
     (case-lambda
       ((g$rhs*$9726$1RbCyC g$r$9727$1RbCyC g$mr$9728$1RbCyC)
        ((letrec ((g$f$9729$1RbCyC
                    (case-lambda
                      ((g$ls$9730$1RbCyC)
                       (if (null? g$ls$9730$1RbCyC)
                         '()
                         ((case-lambda
                            ((g$a$9731$1RbCyC)
                             (cons
                               g$a$9731$1RbCyC
                               (g$f$9729$1RbCyC (cdr g$ls$9730$1RbCyC)))))
                          (g$chi-rhs$7563$1RbCyC
                            (car g$ls$9730$1RbCyC)
                            g$r$9727$1RbCyC
                            g$mr$9728$1RbCyC)))))))
           g$f$9729$1RbCyC)
         g$rhs*$9726$1RbCyC))))
   (g$find-bound=?$7566$1RbCyC
     g$find-bound=?$11054$1RbCyC
     (case-lambda
       ((g$x$9732$1RbCyC g$lhs*$9733$1RbCyC g$rhs*$9734$1RbCyC)
        (if (null? g$lhs*$9733$1RbCyC)
          '#f
          (if (g$bound-id=?$7264$1RbCyC
                g$x$9732$1RbCyC
                (car g$lhs*$9733$1RbCyC))
            (car g$rhs*$9734$1RbCyC)
            (g$find-bound=?$7566$1RbCyC
              g$x$9732$1RbCyC
              (cdr g$lhs*$9733$1RbCyC)
              (cdr g$rhs*$9734$1RbCyC)))))))
   (g$find-dups$7567$1RbCyC
     g$find-dups$11055$1RbCyC
     (case-lambda
       ((g$ls$9735$1RbCyC)
        ((letrec ((g$f$9736$1RbCyC
                    (case-lambda
                      ((g$ls$9737$1RbCyC g$dups$9738$1RbCyC)
                       (if (null? g$ls$9737$1RbCyC)
                         g$dups$9738$1RbCyC
                         ((case-lambda
                            ((g$t$9739$1RbCyC)
                             (if g$t$9739$1RbCyC
                               ((case-lambda
                                  ((g$x$9740$1RbCyC)
                                   (g$f$9736$1RbCyC
                                     (cdr g$ls$9737$1RbCyC)
                                     (cons
                                       (list
                                         (car g$ls$9737$1RbCyC)
                                         g$x$9740$1RbCyC)
                                       g$dups$9738$1RbCyC))))
                                g$t$9739$1RbCyC)
                               (g$f$9736$1RbCyC
                                 (cdr g$ls$9737$1RbCyC)
                                 g$dups$9738$1RbCyC))))
                          (g$find-bound=?$7566$1RbCyC
                            (car g$ls$9737$1RbCyC)
                            (cdr g$ls$9737$1RbCyC)
                            (cdr g$ls$9737$1RbCyC))))))))
           g$f$9736$1RbCyC)
         g$ls$9735$1RbCyC
         '()))))
   (g$chi-internal$7568$1RbCyC
     g$chi-internal$11056$1RbCyC
     (case-lambda
       ((g$e*$9741$1RbCyC g$r$9742$1RbCyC g$mr$9743$1RbCyC)
        ((case-lambda
           ((g$rib$9744$1RbCyC)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$7583$1RbCyC
                   (map (case-lambda
                          ((g$x$9753$1RbCyC)
                           (g$add-subst$7251$1RbCyC
                             g$rib$9744$1RbCyC
                             g$x$9753$1RbCyC)))
                        (g$syntax->list$7260$1RbCyC g$e*$9741$1RbCyC))
                   g$r$9742$1RbCyC
                   g$mr$9743$1RbCyC
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$9744$1RbCyC
                   '#f)))
              (case-lambda
                ((g$e*$9754$1RbCyC
                   g$r$9755$1RbCyC
                   g$mr$9756$1RbCyC
                   g$lex*$9757$1RbCyC
                   g$rhs*$9758$1RbCyC
                   g$mod**$9759$1RbCyC
                   g$kwd*$9760$1RbCyC
                   g$_exp*$9761$1RbCyC)
                 ((case-lambda
                    ((g$_exp*$9762$1RbCyC
                       g$kwd*$9763$1RbCyC
                       g$mod**$9764$1RbCyC
                       g$rhs*$9765$1RbCyC
                       g$lex*$9766$1RbCyC
                       g$mr$9767$1RbCyC
                       g$r$9768$1RbCyC
                       g$e*$9769$1RbCyC)
                     (begin
                       (if (null? g$e*$9769$1RbCyC)
                         (g$syntax-violation$7650$1RbCyC
                           '#f
                           '"no expression in body"
                           g$e*$9769$1RbCyC)
                         (void))
                       ((case-lambda
                          ((g$init*$9770$1RbCyC)
                           ((case-lambda
                              ((g$rhs*$9771$1RbCyC)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$7193$1RbCyC
                                     '#f
                                     (reverse g$lex*$9766$1RbCyC)
                                     (reverse g$rhs*$9771$1RbCyC)
                                     (g$build-sequence$7190$1RbCyC
                                       '#f
                                       g$init*$9770$1RbCyC)))))))
                            (g$chi-rhs*$7565$1RbCyC
                              g$rhs*$9765$1RbCyC
                              g$r$9768$1RbCyC
                              g$mr$9767$1RbCyC))))
                        (g$chi-expr*$7555$1RbCyC
                          (append
                            (apply append (reverse g$mod**$9764$1RbCyC))
                            g$e*$9769$1RbCyC)
                          g$r$9768$1RbCyC
                          g$mr$9767$1RbCyC)))))
                  g$_exp*$9761$1RbCyC
                  g$kwd*$9760$1RbCyC
                  g$mod**$9759$1RbCyC
                  g$rhs*$9758$1RbCyC
                  g$lex*$9757$1RbCyC
                  g$mr$9756$1RbCyC
                  g$r$9755$1RbCyC
                  g$e*$9754$1RbCyC))))))
         (g$make-empty-rib$7221$1RbCyC)))))
   (g$parse-module$7569$1RbCyC
     g$parse-module$11057$1RbCyC
     (case-lambda
       ((g$e$9772$1RbCyC)
        ((case-lambda
           ((g$t$9773$1RbCyC)
            ((case-lambda
               ((g$ls/false$9774$1RbCyC)
                (if g$ls/false$9774$1RbCyC
                  (apply
                    (case-lambda
                      ((g$export*$9775$1RbCyC g$b*$9776$1RbCyC)
                       (begin
                         (if (not (g$for-all$4995$1RbCyC
                                    g$id?$7261$1RbCyC
                                    g$export*$9775$1RbCyC))
                           (g$syntax-violation$7650$1RbCyC
                             '#f
                             '"module exports must be identifiers"
                             g$e$9772$1RbCyC)
                           (void))
                         (values
                           '#f
                           (list->vector g$export*$9775$1RbCyC)
                           g$b*$9776$1RbCyC))))
                    g$ls/false$9774$1RbCyC)
                  ((case-lambda
                     ((g$t$9777$1RbCyC)
                      ((case-lambda
                         ((g$ls/false$9778$1RbCyC)
                          (if g$ls/false$9778$1RbCyC
                            (apply
                              (case-lambda
                                ((g$name$9779$1RbCyC
                                   g$export*$9780$1RbCyC
                                   g$b*$9781$1RbCyC)
                                 (begin
                                   (if (not (g$id?$7261$1RbCyC
                                              g$name$9779$1RbCyC))
                                     (g$syntax-violation$7650$1RbCyC
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$9772$1RbCyC)
                                     (void))
                                   (if (not (g$for-all$4995$1RbCyC
                                              g$id?$7261$1RbCyC
                                              g$export*$9780$1RbCyC))
                                     (g$syntax-violation$7650$1RbCyC
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$9772$1RbCyC)
                                     (void))
                                   (values
                                     g$name$9779$1RbCyC
                                     (list->vector g$export*$9780$1RbCyC)
                                     g$b*$9781$1RbCyC))))
                              g$ls/false$9778$1RbCyC)
                            (g$syntax-violation$7650$1RbCyC
                              '#f
                              '"invalid syntax"
                              g$t$9777$1RbCyC))))
                       (g$syntax-dispatch$7539$1RbCyC
                         g$t$9777$1RbCyC
                         '(_ any each-any . each-any)))))
                   g$t$9773$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$9773$1RbCyC
               '(_ each-any . each-any)))))
         g$e$9772$1RbCyC))))
   (g$8703$7570$1RbCyC
     g$8703$11058$1RbCyC
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8706$1RbCyC
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$8705$7571$1RbCyC g$8705$11059$1RbCyC '#f)
   (g$8704$7572$1RbCyC
     g$8704$11060$1RbCyC
     (make-record-constructor-descriptor
       g$8703$7570$1RbCyC
       '#f
       g$8705$7571$1RbCyC))
   (g$module-interface?$7573$1RbCyC
     g$module-interface?$11061$1RbCyC
     (record-predicate g$8703$7570$1RbCyC))
   (g$make-module-interface$7574$1RbCyC
     g$make-module-interface$11062$1RbCyC
     (record-constructor g$8704$7572$1RbCyC))
   (g$module-interface-first-mark$7575$1RbCyC
     g$module-interface-first-mark$11063$1RbCyC
     (record-accessor g$8703$7570$1RbCyC '0))
   (g$module-interface-exp-id-vec$7576$1RbCyC
     g$module-interface-exp-id-vec$11064$1RbCyC
     (record-accessor g$8703$7570$1RbCyC '1))
   (g$module-interface-exp-lab-vec$7577$1RbCyC
     g$module-interface-exp-lab-vec$11065$1RbCyC
     (record-accessor g$8703$7570$1RbCyC '2))
   (g$set-module-interface-first-mark!$7578$1RbCyC
     g$set-module-interface-first-mark!$11066$1RbCyC
     (record-mutator g$8703$7570$1RbCyC '0))
   (g$set-module-interface-exp-id-vec!$7579$1RbCyC
     g$set-module-interface-exp-id-vec!$11067$1RbCyC
     (record-mutator g$8703$7570$1RbCyC '1))
   (g$set-module-interface-exp-lab-vec!$7580$1RbCyC
     g$set-module-interface-exp-lab-vec!$11068$1RbCyC
     (record-mutator g$8703$7570$1RbCyC '2))
   (g$module-interface-exp-id*$7581$1RbCyC
     g$module-interface-exp-id*$11069$1RbCyC
     (case-lambda
       ((g$iface$9782$1RbCyC g$id$9783$1RbCyC)
        (letrec* ((g$diff-marks$9784$1RbCyC
                    (case-lambda
                      ((g$ls$9788$1RbCyC g$x$9789$1RbCyC)
                       (begin
                         (if (null? g$ls$9788$1RbCyC)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$9790$1RbCyC)
                             (if (eq? g$a$9790$1RbCyC g$x$9789$1RbCyC)
                               '()
                               (cons
                                 g$a$9790$1RbCyC
                                 (g$diff-marks$9784$1RbCyC
                                   (cdr g$ls$9788$1RbCyC)
                                   g$x$9789$1RbCyC)))))
                          (car g$ls$9788$1RbCyC)))))))
          ((case-lambda
             ((g$diff$9785$1RbCyC g$id-vec$9786$1RbCyC)
              (if (null? g$diff$9785$1RbCyC)
                g$id-vec$9786$1RbCyC
                (vector-map
                  (case-lambda
                    ((g$x$9787$1RbCyC)
                     (g$make-stx$7234$1RbCyC
                       (g$stx-expr$7235$1RbCyC g$x$9787$1RbCyC)
                       (append
                         g$diff$9785$1RbCyC
                         (g$stx-mark*$7236$1RbCyC g$x$9787$1RbCyC))
                       '()
                       '())))
                  g$id-vec$9786$1RbCyC))))
           (g$diff-marks$9784$1RbCyC
             (g$stx-mark*$7236$1RbCyC g$id$9783$1RbCyC)
             (g$module-interface-first-mark$7575$1RbCyC g$iface$9782$1RbCyC))
           (g$module-interface-exp-id-vec$7576$1RbCyC g$iface$9782$1RbCyC))))))
   (g$chi-internal-module$7582$1RbCyC
     g$chi-internal-module$11070$1RbCyC
     (case-lambda
       ((g$e$9791$1RbCyC
          g$r$9792$1RbCyC
          g$mr$9793$1RbCyC
          g$lex*$9794$1RbCyC
          g$rhs*$9795$1RbCyC
          g$mod**$9796$1RbCyC
          g$kwd*$9797$1RbCyC)
        (call-with-values
          (case-lambda (() (g$parse-module$7569$1RbCyC g$e$9791$1RbCyC)))
          (case-lambda
            ((g$name$9801$1RbCyC g$exp-id*$9802$1RbCyC g$e*$9803$1RbCyC)
             ((case-lambda
                ((g$e*$9804$1RbCyC g$exp-id*$9805$1RbCyC g$name$9806$1RbCyC)
                 ((case-lambda
                    ((g$rib$9807$1RbCyC)
                     ((case-lambda
                        ((g$e*$9808$1RbCyC)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$7583$1RbCyC
                                    g$e*$9808$1RbCyC
                                    g$r$9792$1RbCyC
                                    g$mr$9793$1RbCyC
                                    g$lex*$9794$1RbCyC
                                    g$rhs*$9795$1RbCyC
                                    g$mod**$9796$1RbCyC
                                    g$kwd*$9797$1RbCyC
                                    '()
                                    g$rib$9807$1RbCyC
                                    '#f)))
                               (case-lambda
                                 ((g$e*$9817$1RbCyC
                                    g$r$9818$1RbCyC
                                    g$mr$9819$1RbCyC
                                    g$lex*$9820$1RbCyC
                                    g$rhs*$9821$1RbCyC
                                    g$mod**$9822$1RbCyC
                                    g$kwd*$9823$1RbCyC
                                    g$_exp*$9824$1RbCyC)
                                  ((case-lambda
                                     ((g$_exp*$9825$1RbCyC
                                        g$kwd*$9826$1RbCyC
                                        g$mod**$9827$1RbCyC
                                        g$rhs*$9828$1RbCyC
                                        g$lex*$9829$1RbCyC
                                        g$mr$9830$1RbCyC
                                        g$r$9831$1RbCyC
                                        g$e*$9832$1RbCyC)
                                      ((case-lambda
                                         ((g$exp-lab*$9833$1RbCyC
                                            g$mod**$9834$1RbCyC)
                                          (if (not g$name$9806$1RbCyC)
                                            (values
                                              g$lex*$9829$1RbCyC
                                              g$rhs*$9828$1RbCyC
                                              g$exp-id*$9805$1RbCyC
                                              g$exp-lab*$9833$1RbCyC
                                              g$r$9831$1RbCyC
                                              g$mr$9830$1RbCyC
                                              g$mod**$9834$1RbCyC
                                              g$kwd*$9826$1RbCyC)
                                            ((case-lambda
                                               ((g$lab$9835$1RbCyC
                                                  g$iface$9836$1RbCyC)
                                                (values
                                                  g$lex*$9829$1RbCyC
                                                  g$rhs*$9828$1RbCyC
                                                  (vector g$name$9806$1RbCyC)
                                                  (vector g$lab$9835$1RbCyC)
                                                  (cons
                                                    (cons
                                                      g$lab$9835$1RbCyC
                                                      (cons
                                                        '$module
                                                        g$iface$9836$1RbCyC))
                                                    g$r$9831$1RbCyC)
                                                  (cons
                                                    (cons
                                                      g$lab$9835$1RbCyC
                                                      (cons
                                                        '$module
                                                        g$iface$9836$1RbCyC))
                                                    g$mr$9830$1RbCyC)
                                                  g$mod**$9834$1RbCyC
                                                  g$kwd*$9826$1RbCyC)))
                                             (g$gen-label$7202$1RbCyC 'module)
                                             (g$make-module-interface$7574$1RbCyC
                                               (car (g$stx-mark*$7236$1RbCyC
                                                      g$name$9806$1RbCyC))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$9837$1RbCyC)
                                                    (g$make-stx$7234$1RbCyC
                                                      (g$stx-expr$7235$1RbCyC
                                                        g$x$9837$1RbCyC)
                                                      (g$stx-mark*$7236$1RbCyC
                                                        g$x$9837$1RbCyC)
                                                      '()
                                                      '())))
                                                 g$exp-id*$9805$1RbCyC)
                                               g$exp-lab*$9833$1RbCyC)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$9838$1RbCyC)
                                            ((case-lambda
                                               ((g$t$9839$1RbCyC)
                                                (if g$t$9839$1RbCyC
                                                  g$t$9839$1RbCyC
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$7650$1RbCyC
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$9838$1RbCyC)))))
                                             (g$id->label$7274$1RbCyC
                                               (g$make-stx$7234$1RbCyC
                                                 (g$id->sym$7262$1RbCyC
                                                   g$x$9838$1RbCyC)
                                                 (g$stx-mark*$7236$1RbCyC
                                                   g$x$9838$1RbCyC)
                                                 (list g$rib$9807$1RbCyC)
                                                 '())))))
                                         g$exp-id*$9805$1RbCyC)
                                       (cons
                                         g$e*$9832$1RbCyC
                                         g$mod**$9827$1RbCyC))))
                                   g$_exp*$9824$1RbCyC
                                   g$kwd*$9823$1RbCyC
                                   g$mod**$9822$1RbCyC
                                   g$rhs*$9821$1RbCyC
                                   g$lex*$9820$1RbCyC
                                   g$mr$9819$1RbCyC
                                   g$r$9818$1RbCyC
                                   g$e*$9817$1RbCyC)))))))))
                      (map (case-lambda
                             ((g$x$9840$1RbCyC)
                              (g$add-subst$7251$1RbCyC
                                g$rib$9807$1RbCyC
                                g$x$9840$1RbCyC)))
                           (g$syntax->list$7260$1RbCyC g$e*$9804$1RbCyC)))))
                  (g$make-empty-rib$7221$1RbCyC))))
              g$e*$9803$1RbCyC
              g$exp-id*$9802$1RbCyC
              g$name$9801$1RbCyC)))))))
   (g$chi-body*$7583$1RbCyC
     g$chi-body*$11071$1RbCyC
     (case-lambda
       ((g$e*$9841$1RbCyC
          g$r$9842$1RbCyC
          g$mr$9843$1RbCyC
          g$lex*$9844$1RbCyC
          g$rhs*$9845$1RbCyC
          g$mod**$9846$1RbCyC
          g$kwd*$9847$1RbCyC
          g$exp*$9848$1RbCyC
          g$rib$9849$1RbCyC
          g$top?$9850$1RbCyC)
        (if (null? g$e*$9841$1RbCyC)
          (values
            g$e*$9841$1RbCyC
            g$r$9842$1RbCyC
            g$mr$9843$1RbCyC
            g$lex*$9844$1RbCyC
            g$rhs*$9845$1RbCyC
            g$mod**$9846$1RbCyC
            g$kwd*$9847$1RbCyC
            g$exp*$9848$1RbCyC)
          ((case-lambda
             ((g$e$9851$1RbCyC)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$7281$1RbCyC g$e$9851$1RbCyC g$r$9842$1RbCyC)))
                (case-lambda
                  ((g$type$9855$1RbCyC g$value$9856$1RbCyC g$kwd$9857$1RbCyC)
                   ((case-lambda
                      ((g$kwd$9858$1RbCyC
                         g$value$9859$1RbCyC
                         g$type$9860$1RbCyC)
                       ((case-lambda
                          ((g$kwd*$9861$1RbCyC)
                           ((case-lambda
                              ((g$t$9862$1RbCyC)
                               (if (g$memv$4990$1RbCyC
                                     g$t$9862$1RbCyC
                                     '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7479$1RbCyC
                                        g$e$9851$1RbCyC)))
                                   (case-lambda
                                     ((g$id$9865$1RbCyC g$rhs$9866$1RbCyC)
                                      ((case-lambda
                                         ((g$rhs$9867$1RbCyC g$id$9868$1RbCyC)
                                          (begin
                                            (if (g$bound-id-member?$7268$1RbCyC
                                                  g$id$9868$1RbCyC
                                                  g$kwd*$9861$1RbCyC)
                                              (g$syntax-violation$7650$1RbCyC
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$9851$1RbCyC)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7204$1RbCyC
                                                   g$id$9868$1RbCyC
                                                   g$rib$9849$1RbCyC)))
                                              (case-lambda
                                                ((g$lab$9871$1RbCyC
                                                   g$lex$9872$1RbCyC)
                                                 ((case-lambda
                                                    ((g$lex$9873$1RbCyC
                                                       g$lab$9874$1RbCyC)
                                                     (begin
                                                       (g$extend-rib!$7224$1RbCyC
                                                         g$rib$9849$1RbCyC
                                                         g$id$9868$1RbCyC
                                                         g$lab$9874$1RbCyC)
                                                       (g$chi-body*$7583$1RbCyC
                                                         (cdr g$e*$9841$1RbCyC)
                                                         (g$add-lexical$7486$1RbCyC
                                                           g$lab$9874$1RbCyC
                                                           g$lex$9873$1RbCyC
                                                           g$r$9842$1RbCyC)
                                                         g$mr$9843$1RbCyC
                                                         (cons
                                                           g$lex$9873$1RbCyC
                                                           g$lex*$9844$1RbCyC)
                                                         (cons
                                                           g$rhs$9867$1RbCyC
                                                           g$rhs*$9845$1RbCyC)
                                                         g$mod**$9846$1RbCyC
                                                         g$kwd*$9861$1RbCyC
                                                         g$exp*$9848$1RbCyC
                                                         g$rib$9849$1RbCyC
                                                         g$top?$9850$1RbCyC))))
                                                  g$lex$9872$1RbCyC
                                                  g$lab$9871$1RbCyC)))))))
                                       g$rhs$9866$1RbCyC
                                       g$id$9865$1RbCyC))))
                                 (if (g$memv$4990$1RbCyC
                                       g$t$9862$1RbCyC
                                       '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7480$1RbCyC
                                          g$e$9851$1RbCyC)))
                                     (case-lambda
                                       ((g$id$9877$1RbCyC g$rhs$9878$1RbCyC)
                                        ((case-lambda
                                           ((g$rhs$9879$1RbCyC g$id$9880$1RbCyC)
                                            (begin
                                              (if (g$bound-id-member?$7268$1RbCyC
                                                    g$id$9880$1RbCyC
                                                    g$kwd*$9861$1RbCyC)
                                                (g$syntax-violation$7650$1RbCyC
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$9851$1RbCyC)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$9881$1RbCyC
                                                    g$expanded-rhs$9882$1RbCyC)
                                                  (begin
                                                    (g$extend-rib!$7224$1RbCyC
                                                      g$rib$9849$1RbCyC
                                                      g$id$9880$1RbCyC
                                                      g$lab$9881$1RbCyC)
                                                    ((case-lambda
                                                       ((g$b$9883$1RbCyC)
                                                        (g$chi-body*$7583$1RbCyC
                                                          (cdr g$e*$9841$1RbCyC)
                                                          (cons
                                                            (cons
                                                              g$lab$9881$1RbCyC
                                                              g$b$9883$1RbCyC)
                                                            g$r$9842$1RbCyC)
                                                          (cons
                                                            (cons
                                                              g$lab$9881$1RbCyC
                                                              g$b$9883$1RbCyC)
                                                            g$mr$9843$1RbCyC)
                                                          g$lex*$9844$1RbCyC
                                                          g$rhs*$9845$1RbCyC
                                                          g$mod**$9846$1RbCyC
                                                          g$kwd*$9861$1RbCyC
                                                          g$exp*$9848$1RbCyC
                                                          g$rib$9849$1RbCyC
                                                          g$top?$9850$1RbCyC)))
                                                     (g$make-eval-transformer$7293$1RbCyC
                                                       g$expanded-rhs$9882$1RbCyC)))))
                                               (g$gen-define-label$7205$1RbCyC
                                                 g$id$9880$1RbCyC
                                                 g$rib$9849$1RbCyC)
                                               (g$expand-transformer$7584$1RbCyC
                                                 g$rhs$9879$1RbCyC
                                                 g$mr$9843$1RbCyC)))))
                                         g$rhs$9878$1RbCyC
                                         g$id$9877$1RbCyC))))
                                   (if (g$memv$4990$1RbCyC
                                         g$t$9862$1RbCyC
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$9884$1RbCyC)
                                         ((case-lambda
                                            ((g$ls/false$9885$1RbCyC)
                                             (if (if g$ls/false$9885$1RbCyC
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$9886$1RbCyC
                                                            g$xrhs*$9887$1RbCyC
                                                            g$xbody*$9888$1RbCyC)
                                                          (if (not (g$valid-bound-ids?$7266$1RbCyC
                                                                     g$xlhs*$9886$1RbCyC))
                                                            (g$syntax-violation$7650$1RbCyC
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$9851$1RbCyC)
                                                            (void))))
                                                       g$ls/false$9885$1RbCyC))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$9889$1RbCyC
                                                      g$xrhs*$9890$1RbCyC
                                                      g$xbody*$9891$1RbCyC)
                                                    ((case-lambda
                                                       ((g$xlab*$9892$1RbCyC)
                                                        ((case-lambda
                                                           ((g$xrib$9893$1RbCyC)
                                                            ((case-lambda
                                                               ((g$xb*$9894$1RbCyC)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$7583$1RbCyC
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$9895$1RbCyC)
                                                                                (g$add-subst$7251$1RbCyC
                                                                                  g$xrib$9893$1RbCyC
                                                                                  g$x$9895$1RbCyC)))
                                                                             g$xbody*$9891$1RbCyC)
                                                                        (cdr g$e*$9841$1RbCyC))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9892$1RbCyC
                                                                             g$xb*$9894$1RbCyC)
                                                                        g$r$9842$1RbCyC)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9892$1RbCyC
                                                                             g$xb*$9894$1RbCyC)
                                                                        g$mr$9843$1RbCyC)
                                                                      g$lex*$9844$1RbCyC
                                                                      g$rhs*$9845$1RbCyC
                                                                      g$mod**$9846$1RbCyC
                                                                      g$kwd*$9861$1RbCyC
                                                                      g$exp*$9848$1RbCyC
                                                                      g$rib$9849$1RbCyC
                                                                      g$top?$9850$1RbCyC))))))
                                                             (map (case-lambda
                                                                    ((g$x$9896$1RbCyC)
                                                                     (g$make-eval-transformer$7293$1RbCyC
                                                                       (g$expand-transformer$7584$1RbCyC
                                                                         (if (eq? g$type$9860$1RbCyC
                                                                                  'let-syntax)
                                                                           g$x$9896$1RbCyC
                                                                           (g$add-subst$7251$1RbCyC
                                                                             g$xrib$9893$1RbCyC
                                                                             g$x$9896$1RbCyC))
                                                                         g$mr$9843$1RbCyC))))
                                                                  g$xrhs*$9890$1RbCyC))))
                                                         (g$make-full-rib$7229$1RbCyC
                                                           g$xlhs*$9889$1RbCyC
                                                           g$xlab*$9892$1RbCyC))))
                                                     (map g$gen-label$7202$1RbCyC
                                                          g$xlhs*$9889$1RbCyC))))
                                                 g$ls/false$9885$1RbCyC)
                                               (g$syntax-violation$7650$1RbCyC
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9884$1RbCyC))))
                                          (g$syntax-dispatch$7539$1RbCyC
                                            g$t$9884$1RbCyC
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$9851$1RbCyC)
                                     (if (g$memv$4990$1RbCyC
                                           g$t$9862$1RbCyC
                                           '(begin))
                                       ((case-lambda
                                          ((g$t$9897$1RbCyC)
                                           ((case-lambda
                                              ((g$ls/false$9898$1RbCyC)
                                               (if g$ls/false$9898$1RbCyC
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$9899$1RbCyC)
                                                      (g$chi-body*$7583$1RbCyC
                                                        (append
                                                          g$x*$9899$1RbCyC
                                                          (cdr g$e*$9841$1RbCyC))
                                                        g$r$9842$1RbCyC
                                                        g$mr$9843$1RbCyC
                                                        g$lex*$9844$1RbCyC
                                                        g$rhs*$9845$1RbCyC
                                                        g$mod**$9846$1RbCyC
                                                        g$kwd*$9861$1RbCyC
                                                        g$exp*$9848$1RbCyC
                                                        g$rib$9849$1RbCyC
                                                        g$top?$9850$1RbCyC)))
                                                   g$ls/false$9898$1RbCyC)
                                                 (g$syntax-violation$7650$1RbCyC
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$9897$1RbCyC))))
                                            (g$syntax-dispatch$7539$1RbCyC
                                              g$t$9897$1RbCyC
                                              '(_ . each-any)))))
                                        g$e$9851$1RbCyC)
                                       (if (g$memv$4990$1RbCyC
                                             g$t$9862$1RbCyC
                                             '(global-macro global-macro!))
                                         (g$chi-body*$7583$1RbCyC
                                           (cons
                                             (g$add-subst$7251$1RbCyC
                                               g$rib$9849$1RbCyC
                                               (g$chi-global-macro$7554$1RbCyC
                                                 g$value$9859$1RbCyC
                                                 g$e$9851$1RbCyC))
                                             (cdr g$e*$9841$1RbCyC))
                                           g$r$9842$1RbCyC
                                           g$mr$9843$1RbCyC
                                           g$lex*$9844$1RbCyC
                                           g$rhs*$9845$1RbCyC
                                           g$mod**$9846$1RbCyC
                                           g$kwd*$9861$1RbCyC
                                           g$exp*$9848$1RbCyC
                                           g$rib$9849$1RbCyC
                                           g$top?$9850$1RbCyC)
                                         (if (g$memv$4990$1RbCyC
                                               g$t$9862$1RbCyC
                                               '(local-macro local-macro!))
                                           (g$chi-body*$7583$1RbCyC
                                             (cons
                                               (g$add-subst$7251$1RbCyC
                                                 g$rib$9849$1RbCyC
                                                 (g$chi-local-macro$7553$1RbCyC
                                                   g$value$9859$1RbCyC
                                                   g$e$9851$1RbCyC))
                                               (cdr g$e*$9841$1RbCyC))
                                             g$r$9842$1RbCyC
                                             g$mr$9843$1RbCyC
                                             g$lex*$9844$1RbCyC
                                             g$rhs*$9845$1RbCyC
                                             g$mod**$9846$1RbCyC
                                             g$kwd*$9861$1RbCyC
                                             g$exp*$9848$1RbCyC
                                             g$rib$9849$1RbCyC
                                             g$top?$9850$1RbCyC)
                                           (if (g$memv$4990$1RbCyC
                                                 g$t$9862$1RbCyC
                                                 '(macro macro!))
                                             (g$chi-body*$7583$1RbCyC
                                               (cons
                                                 (g$add-subst$7251$1RbCyC
                                                   g$rib$9849$1RbCyC
                                                   (g$chi-macro$7552$1RbCyC
                                                     g$value$9859$1RbCyC
                                                     g$e$9851$1RbCyC))
                                                 (cdr g$e*$9841$1RbCyC))
                                               g$r$9842$1RbCyC
                                               g$mr$9843$1RbCyC
                                               g$lex*$9844$1RbCyC
                                               g$rhs*$9845$1RbCyC
                                               g$mod**$9846$1RbCyC
                                               g$kwd*$9861$1RbCyC
                                               g$exp*$9848$1RbCyC
                                               g$rib$9849$1RbCyC
                                               g$top?$9850$1RbCyC)
                                             (if (g$memv$4990$1RbCyC
                                                   g$t$9862$1RbCyC
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$7582$1RbCyC
                                                      g$e$9851$1RbCyC
                                                      g$r$9842$1RbCyC
                                                      g$mr$9843$1RbCyC
                                                      g$lex*$9844$1RbCyC
                                                      g$rhs*$9845$1RbCyC
                                                      g$mod**$9846$1RbCyC
                                                      g$kwd*$9861$1RbCyC)))
                                                 (case-lambda
                                                   ((g$lex*$9908$1RbCyC
                                                      g$rhs*$9909$1RbCyC
                                                      g$m-exp-id*$9910$1RbCyC
                                                      g$m-exp-lab*$9911$1RbCyC
                                                      g$r$9912$1RbCyC
                                                      g$mr$9913$1RbCyC
                                                      g$mod**$9914$1RbCyC
                                                      g$kwd*$9915$1RbCyC)
                                                    ((case-lambda
                                                       ((g$kwd*$9916$1RbCyC
                                                          g$mod**$9917$1RbCyC
                                                          g$mr$9918$1RbCyC
                                                          g$r$9919$1RbCyC
                                                          g$m-exp-lab*$9920$1RbCyC
                                                          g$m-exp-id*$9921$1RbCyC
                                                          g$rhs*$9922$1RbCyC
                                                          g$lex*$9923$1RbCyC)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$9924$1RbCyC
                                                                 g$lab$9925$1RbCyC)
                                                               (g$extend-rib!$7224$1RbCyC
                                                                 g$rib$9849$1RbCyC
                                                                 g$id$9924$1RbCyC
                                                                 g$lab$9925$1RbCyC)))
                                                            g$m-exp-id*$9921$1RbCyC
                                                            g$m-exp-lab*$9920$1RbCyC)
                                                          (g$chi-body*$7583$1RbCyC
                                                            (cdr g$e*$9841$1RbCyC)
                                                            g$r$9919$1RbCyC
                                                            g$mr$9918$1RbCyC
                                                            g$lex*$9923$1RbCyC
                                                            g$rhs*$9922$1RbCyC
                                                            g$mod**$9917$1RbCyC
                                                            g$kwd*$9916$1RbCyC
                                                            g$exp*$9848$1RbCyC
                                                            g$rib$9849$1RbCyC
                                                            g$top?$9850$1RbCyC))))
                                                     g$kwd*$9915$1RbCyC
                                                     g$mod**$9914$1RbCyC
                                                     g$mr$9913$1RbCyC
                                                     g$r$9912$1RbCyC
                                                     g$m-exp-lab*$9911$1RbCyC
                                                     g$m-exp-id*$9910$1RbCyC
                                                     g$rhs*$9909$1RbCyC
                                                     g$lex*$9908$1RbCyC))))
                                               (if (g$memv$4990$1RbCyC
                                                     g$t$9862$1RbCyC
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$7634$1RbCyC
                                                     (g$stx->datum$7272$1RbCyC
                                                       g$e$9851$1RbCyC))
                                                   (g$chi-body*$7583$1RbCyC
                                                     (cdr g$e*$9841$1RbCyC)
                                                     g$r$9842$1RbCyC
                                                     g$mr$9843$1RbCyC
                                                     g$lex*$9844$1RbCyC
                                                     g$rhs*$9845$1RbCyC
                                                     g$mod**$9846$1RbCyC
                                                     g$kwd*$9861$1RbCyC
                                                     g$exp*$9848$1RbCyC
                                                     g$rib$9849$1RbCyC
                                                     g$top?$9850$1RbCyC))
                                                 (if (g$memv$4990$1RbCyC
                                                       g$t$9862$1RbCyC
                                                       '(export))
                                                   ((case-lambda
                                                      ((g$t$9926$1RbCyC)
                                                       ((case-lambda
                                                          ((g$ls/false$9927$1RbCyC)
                                                           (if g$ls/false$9927$1RbCyC
                                                             (apply
                                                               (case-lambda
                                                                 ((g$exp-decl*$9928$1RbCyC)
                                                                  (g$chi-body*$7583$1RbCyC
                                                                    (cdr g$e*$9841$1RbCyC)
                                                                    g$r$9842$1RbCyC
                                                                    g$mr$9843$1RbCyC
                                                                    g$lex*$9844$1RbCyC
                                                                    g$rhs*$9845$1RbCyC
                                                                    g$mod**$9846$1RbCyC
                                                                    g$kwd*$9861$1RbCyC
                                                                    (append
                                                                      g$exp-decl*$9928$1RbCyC
                                                                      g$exp*$9848$1RbCyC)
                                                                    g$rib$9849$1RbCyC
                                                                    g$top?$9850$1RbCyC)))
                                                               g$ls/false$9927$1RbCyC)
                                                             (g$syntax-violation$7650$1RbCyC
                                                               '#f
                                                               '"invalid syntax"
                                                               g$t$9926$1RbCyC))))
                                                        (g$syntax-dispatch$7539$1RbCyC
                                                          g$t$9926$1RbCyC
                                                          '(_ . each-any)))))
                                                    g$e$9851$1RbCyC)
                                                   (if (g$memv$4990$1RbCyC
                                                         g$t$9862$1RbCyC
                                                         '(import))
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$9929$1RbCyC
                                                                     (case-lambda
                                                                       ((g$e$9971$1RbCyC)
                                                                        ((case-lambda
                                                                           ((g$t$9972$1RbCyC)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9973$1RbCyC)
                                                                                (if (if g$ls/false$9973$1RbCyC
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$9974$1RbCyC)
                                                                                             (g$id?$7261$1RbCyC
                                                                                               g$id$9974$1RbCyC)))
                                                                                          g$ls/false$9973$1RbCyC))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$9975$1RbCyC)
                                                                                       '#t))
                                                                                    g$ls/false$9973$1RbCyC)
                                                                                  ((case-lambda
                                                                                     ((g$t$9976$1RbCyC)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9977$1RbCyC)
                                                                                          (if g$ls/false$9977$1RbCyC
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$9978$1RbCyC)
                                                                                                 '#f))
                                                                                              g$ls/false$9977$1RbCyC)
                                                                                            ((case-lambda
                                                                                               ((g$t$9979$1RbCyC)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$9980$1RbCyC)
                                                                                                    (if g$ls/false$9980$1RbCyC
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$7650$1RbCyC
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$9971$1RbCyC)))
                                                                                                        g$ls/false$9980$1RbCyC)
                                                                                                      (g$syntax-violation$7650$1RbCyC
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$9979$1RbCyC))))
                                                                                                 (g$syntax-dispatch$7539$1RbCyC
                                                                                                   g$t$9979$1RbCyC
                                                                                                   '_))))
                                                                                             g$t$9976$1RbCyC))))
                                                                                       (g$syntax-dispatch$7539$1RbCyC
                                                                                         g$t$9976$1RbCyC
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$9972$1RbCyC))))
                                                                             (g$syntax-dispatch$7539$1RbCyC
                                                                               g$t$9972$1RbCyC
                                                                               '(_ any)))))
                                                                         g$e$9971$1RbCyC))))
                                                                   (g$module-import$9930$1RbCyC
                                                                     (case-lambda
                                                                       ((g$e$9954$1RbCyC
                                                                          g$r$9955$1RbCyC)
                                                                        ((case-lambda
                                                                           ((g$t$9956$1RbCyC)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9957$1RbCyC)
                                                                                (if (if g$ls/false$9957$1RbCyC
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$9958$1RbCyC)
                                                                                             (g$id?$7261$1RbCyC
                                                                                               g$id$9958$1RbCyC)))
                                                                                          g$ls/false$9957$1RbCyC))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$9959$1RbCyC)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$7281$1RbCyC
                                                                                              g$id$9959$1RbCyC
                                                                                              g$r$9955$1RbCyC)))
                                                                                         (case-lambda
                                                                                           ((g$type$9963$1RbCyC
                                                                                              g$value$9964$1RbCyC
                                                                                              g$kwd$9965$1RbCyC)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$9966$1RbCyC
                                                                                                  g$value$9967$1RbCyC
                                                                                                  g$type$9968$1RbCyC)
                                                                                                ((case-lambda
                                                                                                   ((g$t$9969$1RbCyC)
                                                                                                    (if (g$memv$4990$1RbCyC
                                                                                                          g$t$9969$1RbCyC
                                                                                                          '($module))
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$9970$1RbCyC)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$7581$1RbCyC
                                                                                                              g$iface$9970$1RbCyC
                                                                                                              g$id$9959$1RbCyC)
                                                                                                            (g$module-interface-exp-lab-vec$7577$1RbCyC
                                                                                                              g$iface$9970$1RbCyC))))
                                                                                                       g$value$9967$1RbCyC)
                                                                                                      (g$syntax-violation$7650$1RbCyC
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$9954$1RbCyC))))
                                                                                                 g$type$9968$1RbCyC)))
                                                                                             g$kwd$9965$1RbCyC
                                                                                             g$value$9964$1RbCyC
                                                                                             g$type$9963$1RbCyC))))))
                                                                                    g$ls/false$9957$1RbCyC)
                                                                                  (g$syntax-violation$7650$1RbCyC
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$9956$1RbCyC))))
                                                                             (g$syntax-dispatch$7539$1RbCyC
                                                                               g$t$9956$1RbCyC
                                                                               '(_ any)))))
                                                                         g$e$9954$1RbCyC))))
                                                                   (g$library-import$9931$1RbCyC
                                                                     (case-lambda
                                                                       ((g$e$9940$1RbCyC)
                                                                        ((case-lambda
                                                                           ((g$t$9941$1RbCyC)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9942$1RbCyC)
                                                                                (if g$ls/false$9942$1RbCyC
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$9943$1RbCyC
                                                                                         g$imp*$9944$1RbCyC)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$7588$1RbCyC
                                                                                              (g$syntax->datum$7653$1RbCyC
                                                                                                g$imp*$9944$1RbCyC))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$9947$1RbCyC
                                                                                              g$subst-labels$9948$1RbCyC)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$9949$1RbCyC
                                                                                                  g$subst-names$9950$1RbCyC)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$9951$1RbCyC)
                                                                                                       (g$datum->stx$7244$1RbCyC
                                                                                                         g$ctxt$9943$1RbCyC
                                                                                                         g$name$9951$1RbCyC)))
                                                                                                    g$subst-names$9950$1RbCyC)
                                                                                                  g$subst-labels$9949$1RbCyC)))
                                                                                             g$subst-labels$9948$1RbCyC
                                                                                             g$subst-names$9947$1RbCyC))))))
                                                                                    g$ls/false$9942$1RbCyC)
                                                                                  ((case-lambda
                                                                                     ((g$t$9952$1RbCyC)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9953$1RbCyC)
                                                                                          (if g$ls/false$9953$1RbCyC
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7650$1RbCyC
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$9940$1RbCyC)))
                                                                                              g$ls/false$9953$1RbCyC)
                                                                                            (g$syntax-violation$7650$1RbCyC
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9952$1RbCyC))))
                                                                                       (g$syntax-dispatch$7539$1RbCyC
                                                                                         g$t$9952$1RbCyC
                                                                                         '_))))
                                                                                   g$t$9941$1RbCyC))))
                                                                             (g$syntax-dispatch$7539$1RbCyC
                                                                               g$t$9941$1RbCyC
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$9940$1RbCyC)))))
                                                           (begin
                                                             (call-with-values
                                                               (case-lambda
                                                                 (()
                                                                  (if (g$module-import?$9929$1RbCyC
                                                                        g$e$9851$1RbCyC)
                                                                    (g$module-import$9930$1RbCyC
                                                                      g$e$9851$1RbCyC
                                                                      g$r$9842$1RbCyC)
                                                                    (g$library-import$9931$1RbCyC
                                                                      g$e$9851$1RbCyC))))
                                                               (case-lambda
                                                                 ((g$id*$9934$1RbCyC
                                                                    g$lab*$9935$1RbCyC)
                                                                  ((case-lambda
                                                                     ((g$lab*$9936$1RbCyC
                                                                        g$id*$9937$1RbCyC)
                                                                      (vector-for-each
                                                                        (case-lambda
                                                                          ((g$id$9938$1RbCyC
                                                                             g$lab$9939$1RbCyC)
                                                                           (g$extend-rib!$7224$1RbCyC
                                                                             g$rib$9849$1RbCyC
                                                                             g$id$9938$1RbCyC
                                                                             g$lab$9939$1RbCyC)))
                                                                        g$id*$9937$1RbCyC
                                                                        g$lab*$9936$1RbCyC)))
                                                                   g$lab*$9935$1RbCyC
                                                                   g$id*$9934$1RbCyC))))
                                                             (g$chi-body*$7583$1RbCyC
                                                               (cdr g$e*$9841$1RbCyC)
                                                               g$r$9842$1RbCyC
                                                               g$mr$9843$1RbCyC
                                                               g$lex*$9844$1RbCyC
                                                               g$rhs*$9845$1RbCyC
                                                               g$mod**$9846$1RbCyC
                                                               g$kwd*$9861$1RbCyC
                                                               g$exp*$9848$1RbCyC
                                                               g$rib$9849$1RbCyC
                                                               g$top?$9850$1RbCyC))))))
                                                     (if g$top?$9850$1RbCyC
                                                       (g$chi-body*$7583$1RbCyC
                                                         (cdr g$e*$9841$1RbCyC)
                                                         g$r$9842$1RbCyC
                                                         g$mr$9843$1RbCyC
                                                         (cons
                                                           (g$gen-lexical$7200$1RbCyC
                                                             'dummy)
                                                           g$lex*$9844$1RbCyC)
                                                         (cons
                                                           (cons
                                                             'top-expr
                                                             g$e$9851$1RbCyC)
                                                           g$rhs*$9845$1RbCyC)
                                                         g$mod**$9846$1RbCyC
                                                         g$kwd*$9861$1RbCyC
                                                         g$exp*$9848$1RbCyC
                                                         g$rib$9849$1RbCyC
                                                         g$top?$9850$1RbCyC)
                                                       (values
                                                         g$e*$9841$1RbCyC
                                                         g$r$9842$1RbCyC
                                                         g$mr$9843$1RbCyC
                                                         g$lex*$9844$1RbCyC
                                                         g$rhs*$9845$1RbCyC
                                                         g$mod**$9846$1RbCyC
                                                         g$kwd*$9861$1RbCyC
                                                         g$exp*$9848$1RbCyC)))))))))))))))
                            g$type$9860$1RbCyC)))
                        (if (g$id?$7261$1RbCyC g$kwd$9858$1RbCyC)
                          (cons g$kwd$9858$1RbCyC g$kwd*$9847$1RbCyC)
                          g$kwd*$9847$1RbCyC))))
                    g$kwd$9857$1RbCyC
                    g$value$9856$1RbCyC
                    g$type$9855$1RbCyC))))))
           (car g$e*$9841$1RbCyC))))))
   (g$expand-transformer$7584$1RbCyC
     g$expand-transformer$11072$1RbCyC
     (case-lambda
       ((g$expr$9981$1RbCyC g$r$9982$1RbCyC)
        ((case-lambda
           ((g$rtc$9983$1RbCyC)
            ((case-lambda
               ((g$expanded-rhs$9984$1RbCyC)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$9985$1RbCyC)
                        (case-lambda
                          ((g$x$9986$1RbCyC)
                           (begin
                             (g$invoke-library$7071$1RbCyC g$x$9986$1RbCyC)
                             (g$mark-visit$9985$1RbCyC g$x$9986$1RbCyC))))))
                     (g$vis-collector$7592$1RbCyC))
                    (g$rtc$9983$1RbCyC))
                  g$expanded-rhs$9984$1RbCyC)))
             ((case-lambda
                ((g$inv-collector$9991$1RbCyC
                   g$vis-collector$9992$1RbCyC
                   g$inv-collector$9993$1RbCyC
                   g$vis-collector$9994$1RbCyC)
                 ((case-lambda
                    ((g$swap$9995$1RbCyC)
                     (dynamic-wind
                       g$swap$9995$1RbCyC
                       (case-lambda
                         (()
                          (g$chi-expr$7557$1RbCyC
                            g$expr$9981$1RbCyC
                            g$r$9982$1RbCyC
                            g$r$9982$1RbCyC)))
                       g$swap$9995$1RbCyC)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$9996$1RbCyC)
                           (begin
                             (g$inv-collector$9991$1RbCyC
                               g$inv-collector$9993$1RbCyC)
                             (set! g$inv-collector$9993$1RbCyC
                               g$t$9996$1RbCyC))))
                        (g$inv-collector$9991$1RbCyC))
                       ((case-lambda
                          ((g$t$9997$1RbCyC)
                           (begin
                             (g$vis-collector$9992$1RbCyC
                               g$vis-collector$9994$1RbCyC)
                             (set! g$vis-collector$9994$1RbCyC
                               g$t$9997$1RbCyC))))
                        (g$vis-collector$9992$1RbCyC))))))))
              g$inv-collector$7591$1RbCyC
              g$vis-collector$7592$1RbCyC
              g$rtc$9983$1RbCyC
              (case-lambda ((g$x$9998$1RbCyC) (values)))))))
         (g$make-collector$7590$1RbCyC)))))
   (g$parse-exports$7585$1RbCyC
     g$parse-exports$11073$1RbCyC
     (case-lambda
       ((g$exp*$9999$1RbCyC)
        ((letrec ((g$f$10000$1RbCyC
                    (case-lambda
                      ((g$exp*$10001$1RbCyC
                         g$int*$10002$1RbCyC
                         g$ext*$10003$1RbCyC)
                       (if (null? g$exp*$10001$1RbCyC)
                         (begin
                           (if (not (g$valid-bound-ids?$7266$1RbCyC
                                      g$ext*$10003$1RbCyC))
                             (g$syntax-violation$7650$1RbCyC
                               'export
                               '"invalid exports"
                               (g$find-dups$7567$1RbCyC g$ext*$10003$1RbCyC))
                             (void))
                           (values
                             (map g$syntax->datum$7653$1RbCyC
                                  g$ext*$10003$1RbCyC)
                             g$int*$10002$1RbCyC))
                         ((case-lambda
                            ((g$t$10004$1RbCyC)
                             ((case-lambda
                                ((g$ls/false$10005$1RbCyC)
                                 (if g$ls/false$10005$1RbCyC
                                   (apply
                                     (case-lambda
                                       ((g$rename$10006$1RbCyC
                                          g$i*$10007$1RbCyC
                                          g$e*$10008$1RbCyC)
                                        (begin
                                          (if (not (if (eq? (g$syntax->datum$7653$1RbCyC
                                                              g$rename$10006$1RbCyC)
                                                            'rename)
                                                     (if (g$for-all$4995$1RbCyC
                                                           g$id?$7261$1RbCyC
                                                           g$i*$10007$1RbCyC)
                                                       (begin
                                                         '#f
                                                         (g$for-all$4995$1RbCyC
                                                           g$id?$7261$1RbCyC
                                                           g$e*$10008$1RbCyC))
                                                       '#f)
                                                     '#f))
                                            (g$syntax-violation$7650$1RbCyC
                                              'export
                                              '"invalid export specifier"
                                              (car g$exp*$10001$1RbCyC))
                                            (void))
                                          (g$f$10000$1RbCyC
                                            (cdr g$exp*$10001$1RbCyC)
                                            (append
                                              g$i*$10007$1RbCyC
                                              g$int*$10002$1RbCyC)
                                            (append
                                              g$e*$10008$1RbCyC
                                              g$ext*$10003$1RbCyC)))))
                                     g$ls/false$10005$1RbCyC)
                                   ((case-lambda
                                      ((g$t$10009$1RbCyC)
                                       ((case-lambda
                                          ((g$ls/false$10010$1RbCyC)
                                           (if g$ls/false$10010$1RbCyC
                                             (apply
                                               (case-lambda
                                                 ((g$ie$10011$1RbCyC)
                                                  (begin
                                                    (if (not (g$id?$7261$1RbCyC
                                                               g$ie$10011$1RbCyC))
                                                      (g$syntax-violation$7650$1RbCyC
                                                        'export
                                                        '"invalid export"
                                                        g$ie$10011$1RbCyC)
                                                      (void))
                                                    (g$f$10000$1RbCyC
                                                      (cdr g$exp*$10001$1RbCyC)
                                                      (cons
                                                        g$ie$10011$1RbCyC
                                                        g$int*$10002$1RbCyC)
                                                      (cons
                                                        g$ie$10011$1RbCyC
                                                        g$ext*$10003$1RbCyC)))))
                                               g$ls/false$10010$1RbCyC)
                                             (g$syntax-violation$7650$1RbCyC
                                               '#f
                                               '"invalid syntax"
                                               g$t$10009$1RbCyC))))
                                        (g$syntax-dispatch$7539$1RbCyC
                                          g$t$10009$1RbCyC
                                          'any))))
                                    g$t$10004$1RbCyC))))
                              (g$syntax-dispatch$7539$1RbCyC
                                g$t$10004$1RbCyC
                                '(any . #(each (any any)))))))
                          (car g$exp*$10001$1RbCyC)))))))
           g$f$10000$1RbCyC)
         g$exp*$9999$1RbCyC
         '()
         '()))))
   (g$parse-library-name$7586$1RbCyC
     g$parse-library-name$11074$1RbCyC
     (case-lambda
       ((g$spec$10012$1RbCyC)
        (letrec* ((g$parse$10013$1RbCyC
                    (case-lambda
                      ((g$x$10020$1RbCyC)
                       ((case-lambda
                          ((g$t$10021$1RbCyC)
                           ((case-lambda
                              ((g$ls/false$10022$1RbCyC)
                               (if (if g$ls/false$10022$1RbCyC
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$10023$1RbCyC)
                                            (g$for-all$4995$1RbCyC
                                              (case-lambda
                                                ((g$x$10024$1RbCyC)
                                                 ((case-lambda
                                                    ((g$x$10025$1RbCyC)
                                                     (if (integer?
                                                           g$x$10025$1RbCyC)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$10025$1RbCyC))
                                                       '#f)))
                                                  (g$syntax->datum$7653$1RbCyC
                                                    g$x$10024$1RbCyC))))
                                              g$v*$10023$1RbCyC)))
                                         g$ls/false$10022$1RbCyC))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$10026$1RbCyC)
                                      (values
                                        '()
                                        (map g$syntax->datum$7653$1RbCyC
                                             g$v*$10026$1RbCyC))))
                                   g$ls/false$10022$1RbCyC)
                                 ((case-lambda
                                    ((g$t$10027$1RbCyC)
                                     ((case-lambda
                                        ((g$ls/false$10028$1RbCyC)
                                         (if (if g$ls/false$10028$1RbCyC
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$10029$1RbCyC
                                                        g$rest$10030$1RbCyC)
                                                      (symbol?
                                                        (g$syntax->datum$7653$1RbCyC
                                                          g$x$10029$1RbCyC))))
                                                   g$ls/false$10028$1RbCyC))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$10031$1RbCyC
                                                  g$rest$10032$1RbCyC)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$10013$1RbCyC
                                                       g$rest$10032$1RbCyC)))
                                                  (case-lambda
                                                    ((g$x*$10035$1RbCyC
                                                       g$v*$10036$1RbCyC)
                                                     ((case-lambda
                                                        ((g$v*$10037$1RbCyC
                                                           g$x*$10038$1RbCyC)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$7653$1RbCyC
                                                               g$x$10031$1RbCyC)
                                                             g$x*$10038$1RbCyC)
                                                           g$v*$10037$1RbCyC)))
                                                      g$v*$10036$1RbCyC
                                                      g$x*$10035$1RbCyC))))))
                                             g$ls/false$10028$1RbCyC)
                                           ((case-lambda
                                              ((g$t$10039$1RbCyC)
                                               ((case-lambda
                                                  ((g$ls/false$10040$1RbCyC)
                                                   (if g$ls/false$10040$1RbCyC
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10040$1RbCyC)
                                                     ((case-lambda
                                                        ((g$t$10041$1RbCyC)
                                                         ((case-lambda
                                                            ((g$ls/false$10042$1RbCyC)
                                                             (if g$ls/false$10042$1RbCyC
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7650$1RbCyC
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$10012$1RbCyC)))
                                                                 g$ls/false$10042$1RbCyC)
                                                               (g$syntax-violation$7650$1RbCyC
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10041$1RbCyC))))
                                                          (g$syntax-dispatch$7539$1RbCyC
                                                            g$t$10041$1RbCyC
                                                            '_))))
                                                      g$t$10039$1RbCyC))))
                                                (g$syntax-dispatch$7539$1RbCyC
                                                  g$t$10039$1RbCyC
                                                  '()))))
                                            g$t$10027$1RbCyC))))
                                      (g$syntax-dispatch$7539$1RbCyC
                                        g$t$10027$1RbCyC
                                        '(any . any)))))
                                  g$t$10021$1RbCyC))))
                            (g$syntax-dispatch$7539$1RbCyC
                              g$t$10021$1RbCyC
                              '(each-any)))))
                        g$x$10020$1RbCyC)))))
          (call-with-values
            (case-lambda (() (g$parse$10013$1RbCyC g$spec$10012$1RbCyC)))
            (case-lambda
              ((g$name*$10016$1RbCyC g$ver*$10017$1RbCyC)
               ((case-lambda
                  ((g$ver*$10018$1RbCyC g$name*$10019$1RbCyC)
                   (begin
                     (if (null? g$name*$10019$1RbCyC)
                       (g$syntax-violation$7650$1RbCyC
                         '#f
                         '"empty library name"
                         g$spec$10012$1RbCyC)
                       (void))
                     (values g$name*$10019$1RbCyC g$ver*$10018$1RbCyC))))
                g$ver*$10017$1RbCyC
                g$name*$10016$1RbCyC))))))))
   (g$parse-library$7587$1RbCyC
     g$parse-library$11075$1RbCyC
     (case-lambda
       ((g$e$10043$1RbCyC)
        ((case-lambda
           ((g$t$10044$1RbCyC)
            ((case-lambda
               ((g$ls/false$10045$1RbCyC)
                (if (if g$ls/false$10045$1RbCyC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10046$1RbCyC
                               g$name*$10047$1RbCyC
                               g$export$10048$1RbCyC
                               g$exp*$10049$1RbCyC
                               g$import$10050$1RbCyC
                               g$imp*$10051$1RbCyC
                               g$b*$10052$1RbCyC)
                             (if (eq? (g$syntax->datum$7653$1RbCyC
                                        g$export$10048$1RbCyC)
                                      'export)
                               (if (eq? (g$syntax->datum$7653$1RbCyC
                                          g$import$10050$1RbCyC)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$7653$1RbCyC
                                          g$library$10046$1RbCyC)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10045$1RbCyC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10053$1RbCyC
                         g$name*$10054$1RbCyC
                         g$export$10055$1RbCyC
                         g$exp*$10056$1RbCyC
                         g$import$10057$1RbCyC
                         g$imp*$10058$1RbCyC
                         g$b*$10059$1RbCyC)
                       (values
                         g$name*$10054$1RbCyC
                         g$exp*$10056$1RbCyC
                         g$imp*$10058$1RbCyC
                         g$b*$10059$1RbCyC)))
                    g$ls/false$10045$1RbCyC)
                  ((case-lambda
                     ((g$t$10060$1RbCyC)
                      ((case-lambda
                         ((g$ls/false$10061$1RbCyC)
                          (if g$ls/false$10061$1RbCyC
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7650$1RbCyC
                                   '#f
                                   '"malformed library"
                                   g$e$10043$1RbCyC)))
                              g$ls/false$10061$1RbCyC)
                            (g$syntax-violation$7650$1RbCyC
                              '#f
                              '"invalid syntax"
                              g$t$10060$1RbCyC))))
                       (g$syntax-dispatch$7539$1RbCyC g$t$10060$1RbCyC '_))))
                   g$t$10044$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$10044$1RbCyC
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10043$1RbCyC))))
   (g$parse-import-spec*$7588$1RbCyC
     g$parse-import-spec*$11076$1RbCyC
     ((case-lambda
        (()
         (letrec* ((g$idsyn?$10062$1RbCyC
                     (case-lambda
                       ((g$x$10323$1RbCyC)
                        (symbol?
                          (g$syntax->datum$7653$1RbCyC g$x$10323$1RbCyC)))))
                   (g$dup-error$10063$1RbCyC
                     (case-lambda
                       ((g$name$10322$1RbCyC)
                        (g$syntax-violation$7650$1RbCyC
                          'import
                          '"two imports with different bindings"
                          g$name$10322$1RbCyC))))
                   (g$merge-substs$10064$1RbCyC
                     (case-lambda
                       ((g$s$10313$1RbCyC g$subst$10314$1RbCyC)
                        (letrec* ((g$insert-to-subst$10315$1RbCyC
                                    (case-lambda
                                      ((g$a$10316$1RbCyC g$subst$10317$1RbCyC)
                                       ((case-lambda
                                          ((g$name$10318$1RbCyC
                                             g$label$10319$1RbCyC)
                                           ((case-lambda
                                              ((g$t$10320$1RbCyC)
                                               (if g$t$10320$1RbCyC
                                                 ((case-lambda
                                                    ((g$x$10321$1RbCyC)
                                                     (if (eq? (cdr g$x$10321$1RbCyC)
                                                              g$label$10319$1RbCyC)
                                                       g$subst$10317$1RbCyC
                                                       (g$dup-error$10063$1RbCyC
                                                         g$name$10318$1RbCyC))))
                                                  g$t$10320$1RbCyC)
                                                 (cons
                                                   g$a$10316$1RbCyC
                                                   g$subst$10317$1RbCyC))))
                                            (g$assq$4985$1RbCyC
                                              g$name$10318$1RbCyC
                                              g$subst$10317$1RbCyC))))
                                        (car g$a$10316$1RbCyC)
                                        (cdr g$a$10316$1RbCyC))))))
                          (if (null? g$s$10313$1RbCyC)
                            g$subst$10314$1RbCyC
                            (g$insert-to-subst$10315$1RbCyC
                              (car g$s$10313$1RbCyC)
                              (g$merge-substs$10064$1RbCyC
                                (cdr g$s$10313$1RbCyC)
                                g$subst$10314$1RbCyC)))))))
                   (g$exclude*$10065$1RbCyC
                     (case-lambda
                       ((g$sym*$10289$1RbCyC g$subst$10290$1RbCyC)
                        (letrec* ((g$exclude$10291$1RbCyC
                                    (case-lambda
                                      ((g$sym$10304$1RbCyC g$subst$10305$1RbCyC)
                                       (if (null? g$subst$10305$1RbCyC)
                                         (g$syntax-violation$7650$1RbCyC
                                           'import
                                           '"cannot rename unbound identifier"
                                           g$sym$10304$1RbCyC)
                                         (if (eq? g$sym$10304$1RbCyC
                                                  (g$caar$5158$1RbCyC
                                                    g$subst$10305$1RbCyC))
                                           (values
                                             (g$cdar$5160$1RbCyC
                                               g$subst$10305$1RbCyC)
                                             (cdr g$subst$10305$1RbCyC))
                                           ((case-lambda
                                              ((g$a$10306$1RbCyC)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$exclude$10291$1RbCyC
                                                      g$sym$10304$1RbCyC
                                                      (cdr g$subst$10305$1RbCyC))))
                                                 (case-lambda
                                                   ((g$old$10309$1RbCyC
                                                      g$subst$10310$1RbCyC)
                                                    ((case-lambda
                                                       ((g$subst$10311$1RbCyC
                                                          g$old$10312$1RbCyC)
                                                        (values
                                                          g$old$10312$1RbCyC
                                                          (cons
                                                            g$a$10306$1RbCyC
                                                            g$subst$10311$1RbCyC))))
                                                     g$subst$10310$1RbCyC
                                                     g$old$10309$1RbCyC))))))
                                            (car g$subst$10305$1RbCyC))))))))
                          (if (null? g$sym*$10289$1RbCyC)
                            (values '() g$subst$10290$1RbCyC)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$exclude$10291$1RbCyC
                                   (car g$sym*$10289$1RbCyC)
                                   g$subst$10290$1RbCyC)))
                              (case-lambda
                                ((g$old$10294$1RbCyC g$subst$10295$1RbCyC)
                                 ((case-lambda
                                    ((g$subst$10296$1RbCyC g$old$10297$1RbCyC)
                                     (call-with-values
                                       (case-lambda
                                         (()
                                          (g$exclude*$10065$1RbCyC
                                            (cdr g$sym*$10289$1RbCyC)
                                            g$subst$10296$1RbCyC)))
                                       (case-lambda
                                         ((g$old*$10300$1RbCyC
                                            g$subst$10301$1RbCyC)
                                          ((case-lambda
                                             ((g$subst$10302$1RbCyC
                                                g$old*$10303$1RbCyC)
                                              (values
                                                (cons
                                                  g$old$10297$1RbCyC
                                                  g$old*$10303$1RbCyC)
                                                g$subst$10302$1RbCyC)))
                                           g$subst$10301$1RbCyC
                                           g$old*$10300$1RbCyC))))))
                                  g$subst$10295$1RbCyC
                                  g$old$10294$1RbCyC)))))))))
                   (g$find*$10066$1RbCyC
                     (case-lambda
                       ((g$sym*$10285$1RbCyC g$subst$10286$1RbCyC)
                        (map (case-lambda
                               ((g$x$10287$1RbCyC)
                                ((case-lambda
                                   ((g$t$10288$1RbCyC)
                                    (if g$t$10288$1RbCyC
                                      (cdr g$t$10288$1RbCyC)
                                      (g$syntax-violation$7650$1RbCyC
                                        'import
                                        '"cannot find identifier"
                                        g$x$10287$1RbCyC))))
                                 (g$assq$4985$1RbCyC
                                   g$x$10287$1RbCyC
                                   g$subst$10286$1RbCyC))))
                             g$sym*$10285$1RbCyC))))
                   (g$rem*$10067$1RbCyC
                     (case-lambda
                       ((g$sym*$10281$1RbCyC g$subst$10282$1RbCyC)
                        ((letrec ((g$f$10283$1RbCyC
                                    (case-lambda
                                      ((g$subst$10284$1RbCyC)
                                       (if (null? g$subst$10284$1RbCyC)
                                         '()
                                         (if (g$memq$4989$1RbCyC
                                               (g$caar$5158$1RbCyC
                                                 g$subst$10284$1RbCyC)
                                               g$sym*$10281$1RbCyC)
                                           (g$f$10283$1RbCyC
                                             (cdr g$subst$10284$1RbCyC))
                                           (cons
                                             (car g$subst$10284$1RbCyC)
                                             (g$f$10283$1RbCyC
                                               (cdr g$subst$10284$1RbCyC)))))))))
                           g$f$10283$1RbCyC)
                         g$subst$10282$1RbCyC))))
                   (g$remove-dups$10068$1RbCyC
                     (case-lambda
                       ((g$ls$10280$1RbCyC)
                        (if (null? g$ls$10280$1RbCyC)
                          '()
                          (if (g$memq$4989$1RbCyC
                                (car g$ls$10280$1RbCyC)
                                (cdr g$ls$10280$1RbCyC))
                            (g$remove-dups$10068$1RbCyC (cdr g$ls$10280$1RbCyC))
                            (cons
                              (car g$ls$10280$1RbCyC)
                              (g$remove-dups$10068$1RbCyC
                                (cdr g$ls$10280$1RbCyC))))))))
                   (g$parse-library-name$10069$1RbCyC
                     (case-lambda
                       ((g$spec$10164$1RbCyC)
                        (letrec* ((g$subversion?$10165$1RbCyC
                                    (case-lambda
                                      ((g$x$10278$1RbCyC)
                                       ((case-lambda
                                          ((g$x$10279$1RbCyC)
                                           (if (integer? g$x$10279$1RbCyC)
                                             (if (exact? g$x$10279$1RbCyC)
                                               (begin
                                                 '#f
                                                 (>= g$x$10279$1RbCyC '0))
                                               '#f)
                                             '#f)))
                                        (g$syntax->datum$7653$1RbCyC
                                          g$x$10278$1RbCyC)))))
                                  (g$subversion-pred$10166$1RbCyC
                                    (case-lambda
                                      ((g$x*$10230$1RbCyC)
                                       ((case-lambda
                                          ((g$t$10231$1RbCyC)
                                           ((case-lambda
                                              ((g$ls/false$10232$1RbCyC)
                                               (if (if g$ls/false$10232$1RbCyC
                                                     (begin
                                                       '#f
                                                       (apply
                                                         (case-lambda
                                                           ((g$n$10233$1RbCyC)
                                                            (g$subversion?$10165$1RbCyC
                                                              g$n$10233$1RbCyC)))
                                                         g$ls/false$10232$1RbCyC))
                                                     '#f)
                                                 (apply
                                                   (case-lambda
                                                     ((g$n$10234$1RbCyC)
                                                      (case-lambda
                                                        ((g$x$10235$1RbCyC)
                                                         (= g$x$10235$1RbCyC
                                                            (g$syntax->datum$7653$1RbCyC
                                                              g$n$10234$1RbCyC))))))
                                                   g$ls/false$10232$1RbCyC)
                                                 ((case-lambda
                                                    ((g$t$10236$1RbCyC)
                                                     ((case-lambda
                                                        ((g$ls/false$10237$1RbCyC)
                                                         (if (if g$ls/false$10237$1RbCyC
                                                               (begin
                                                                 '#f
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$p?$10238$1RbCyC
                                                                        g$sub*$10239$1RbCyC)
                                                                      (eq? (g$syntax->datum$7653$1RbCyC
                                                                             g$p?$10238$1RbCyC)
                                                                           'and)))
                                                                   g$ls/false$10237$1RbCyC))
                                                               '#f)
                                                           (apply
                                                             (case-lambda
                                                               ((g$p?$10240$1RbCyC
                                                                  g$sub*$10241$1RbCyC)
                                                                ((case-lambda
                                                                   ((g$p*$10242$1RbCyC)
                                                                    (case-lambda
                                                                      ((g$x$10243$1RbCyC)
                                                                       (g$for-all$4995$1RbCyC
                                                                         (case-lambda
                                                                           ((g$p$10244$1RbCyC)
                                                                            (g$p$10244$1RbCyC
                                                                              g$x$10243$1RbCyC)))
                                                                         g$p*$10242$1RbCyC)))))
                                                                 (map g$subversion-pred$10166$1RbCyC
                                                                      g$sub*$10241$1RbCyC))))
                                                             g$ls/false$10237$1RbCyC)
                                                           ((case-lambda
                                                              ((g$t$10245$1RbCyC)
                                                               ((case-lambda
                                                                  ((g$ls/false$10246$1RbCyC)
                                                                   (if (if g$ls/false$10246$1RbCyC
                                                                         (begin
                                                                           '#f
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$p?$10247$1RbCyC
                                                                                  g$sub*$10248$1RbCyC)
                                                                                (eq? (g$syntax->datum$7653$1RbCyC
                                                                                       g$p?$10247$1RbCyC)
                                                                                     'or)))
                                                                             g$ls/false$10246$1RbCyC))
                                                                         '#f)
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p?$10249$1RbCyC
                                                                            g$sub*$10250$1RbCyC)
                                                                          ((case-lambda
                                                                             ((g$p*$10251$1RbCyC)
                                                                              (case-lambda
                                                                                ((g$x$10252$1RbCyC)
                                                                                 (g$exists$4996$1RbCyC
                                                                                   (case-lambda
                                                                                     ((g$p$10253$1RbCyC)
                                                                                      (g$p$10253$1RbCyC
                                                                                        g$x$10252$1RbCyC)))
                                                                                   g$p*$10251$1RbCyC)))))
                                                                           (map g$subversion-pred$10166$1RbCyC
                                                                                g$sub*$10250$1RbCyC))))
                                                                       g$ls/false$10246$1RbCyC)
                                                                     ((case-lambda
                                                                        ((g$t$10254$1RbCyC)
                                                                         ((case-lambda
                                                                            ((g$ls/false$10255$1RbCyC)
                                                                             (if (if g$ls/false$10255$1RbCyC
                                                                                   (begin
                                                                                     '#f
                                                                                     (apply
                                                                                       (case-lambda
                                                                                         ((g$p?$10256$1RbCyC
                                                                                            g$sub$10257$1RbCyC)
                                                                                          (eq? (g$syntax->datum$7653$1RbCyC
                                                                                                 g$p?$10256$1RbCyC)
                                                                                               'not)))
                                                                                       g$ls/false$10255$1RbCyC))
                                                                                   '#f)
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$p?$10258$1RbCyC
                                                                                      g$sub$10259$1RbCyC)
                                                                                    ((case-lambda
                                                                                       ((g$p$10260$1RbCyC)
                                                                                        (case-lambda
                                                                                          ((g$x$10261$1RbCyC)
                                                                                           (not (g$p$10260$1RbCyC
                                                                                                  g$x$10261$1RbCyC))))))
                                                                                     (g$subversion-pred$10166$1RbCyC
                                                                                       g$sub$10259$1RbCyC))))
                                                                                 g$ls/false$10255$1RbCyC)
                                                                               ((case-lambda
                                                                                  ((g$t$10262$1RbCyC)
                                                                                   ((case-lambda
                                                                                      ((g$ls/false$10263$1RbCyC)
                                                                                       (if (if g$ls/false$10263$1RbCyC
                                                                                             (begin
                                                                                               '#f
                                                                                               (apply
                                                                                                 (case-lambda
                                                                                                   ((g$p?$10264$1RbCyC
                                                                                                      g$n$10265$1RbCyC)
                                                                                                    (if (eq? (g$syntax->datum$7653$1RbCyC
                                                                                                               g$p?$10264$1RbCyC)
                                                                                                             '<=)
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (g$subversion?$10165$1RbCyC
                                                                                                          g$n$10265$1RbCyC))
                                                                                                      '#f)))
                                                                                                 g$ls/false$10263$1RbCyC))
                                                                                             '#f)
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p?$10266$1RbCyC
                                                                                                g$n$10267$1RbCyC)
                                                                                              (case-lambda
                                                                                                ((g$x$10268$1RbCyC)
                                                                                                 (<= g$x$10268$1RbCyC
                                                                                                     (g$syntax->datum$7653$1RbCyC
                                                                                                       g$n$10267$1RbCyC))))))
                                                                                           g$ls/false$10263$1RbCyC)
                                                                                         ((case-lambda
                                                                                            ((g$t$10269$1RbCyC)
                                                                                             ((case-lambda
                                                                                                ((g$ls/false$10270$1RbCyC)
                                                                                                 (if (if g$ls/false$10270$1RbCyC
                                                                                                       (begin
                                                                                                         '#f
                                                                                                         (apply
                                                                                                           (case-lambda
                                                                                                             ((g$p?$10271$1RbCyC
                                                                                                                g$n$10272$1RbCyC)
                                                                                                              (if (eq? (g$syntax->datum$7653$1RbCyC
                                                                                                                         g$p?$10271$1RbCyC)
                                                                                                                       '>=)
                                                                                                                (begin
                                                                                                                  '#f
                                                                                                                  (g$subversion?$10165$1RbCyC
                                                                                                                    g$n$10272$1RbCyC))
                                                                                                                '#f)))
                                                                                                           g$ls/false$10270$1RbCyC))
                                                                                                       '#f)
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$p?$10273$1RbCyC
                                                                                                          g$n$10274$1RbCyC)
                                                                                                        (case-lambda
                                                                                                          ((g$x$10275$1RbCyC)
                                                                                                           (>= g$x$10275$1RbCyC
                                                                                                               (g$syntax->datum$7653$1RbCyC
                                                                                                                 g$n$10274$1RbCyC))))))
                                                                                                     g$ls/false$10270$1RbCyC)
                                                                                                   ((case-lambda
                                                                                                      ((g$t$10276$1RbCyC)
                                                                                                       ((case-lambda
                                                                                                          ((g$ls/false$10277$1RbCyC)
                                                                                                           (if g$ls/false$10277$1RbCyC
                                                                                                             (apply
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$syntax-violation$7650$1RbCyC
                                                                                                                    'import
                                                                                                                    '"invalid sub-version spec"
                                                                                                                    g$spec$10164$1RbCyC
                                                                                                                    g$x*$10230$1RbCyC)))
                                                                                                               g$ls/false$10277$1RbCyC)
                                                                                                             (g$syntax-violation$7650$1RbCyC
                                                                                                               '#f
                                                                                                               '"invalid syntax"
                                                                                                               g$t$10276$1RbCyC))))
                                                                                                        (g$syntax-dispatch$7539$1RbCyC
                                                                                                          g$t$10276$1RbCyC
                                                                                                          '_))))
                                                                                                    g$t$10269$1RbCyC))))
                                                                                              (g$syntax-dispatch$7539$1RbCyC
                                                                                                g$t$10269$1RbCyC
                                                                                                '(any any)))))
                                                                                          g$t$10262$1RbCyC))))
                                                                                    (g$syntax-dispatch$7539$1RbCyC
                                                                                      g$t$10262$1RbCyC
                                                                                      '(any any)))))
                                                                                g$t$10254$1RbCyC))))
                                                                          (g$syntax-dispatch$7539$1RbCyC
                                                                            g$t$10254$1RbCyC
                                                                            '(any any)))))
                                                                      g$t$10245$1RbCyC))))
                                                                (g$syntax-dispatch$7539$1RbCyC
                                                                  g$t$10245$1RbCyC
                                                                  '(any .
                                                                        each-any)))))
                                                            g$t$10236$1RbCyC))))
                                                      (g$syntax-dispatch$7539$1RbCyC
                                                        g$t$10236$1RbCyC
                                                        '(any . each-any)))))
                                                  g$t$10231$1RbCyC))))
                                            (g$syntax-dispatch$7539$1RbCyC
                                              g$t$10231$1RbCyC
                                              'any))))
                                        g$x*$10230$1RbCyC))))
                                  (g$version-pred$10167$1RbCyC
                                    (case-lambda
                                      ((g$x*$10190$1RbCyC)
                                       ((case-lambda
                                          ((g$t$10191$1RbCyC)
                                           ((case-lambda
                                              ((g$ls/false$10192$1RbCyC)
                                               (if g$ls/false$10192$1RbCyC
                                                 (apply
                                                   (case-lambda
                                                     (()
                                                      (case-lambda
                                                        ((g$x$10193$1RbCyC)
                                                         '#t))))
                                                   g$ls/false$10192$1RbCyC)
                                                 ((case-lambda
                                                    ((g$t$10194$1RbCyC)
                                                     ((case-lambda
                                                        ((g$ls/false$10195$1RbCyC)
                                                         (if (if g$ls/false$10195$1RbCyC
                                                               (begin
                                                                 '#f
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$c$10196$1RbCyC
                                                                        g$ver*$10197$1RbCyC)
                                                                      (eq? (g$syntax->datum$7653$1RbCyC
                                                                             g$c$10196$1RbCyC)
                                                                           'and)))
                                                                   g$ls/false$10195$1RbCyC))
                                                               '#f)
                                                           (apply
                                                             (case-lambda
                                                               ((g$c$10198$1RbCyC
                                                                  g$ver*$10199$1RbCyC)
                                                                ((case-lambda
                                                                   ((g$p*$10200$1RbCyC)
                                                                    (case-lambda
                                                                      ((g$x$10201$1RbCyC)
                                                                       (g$for-all$4995$1RbCyC
                                                                         (case-lambda
                                                                           ((g$p$10202$1RbCyC)
                                                                            (g$p$10202$1RbCyC
                                                                              g$x$10201$1RbCyC)))
                                                                         g$p*$10200$1RbCyC)))))
                                                                 (map g$version-pred$10167$1RbCyC
                                                                      g$ver*$10199$1RbCyC))))
                                                             g$ls/false$10195$1RbCyC)
                                                           ((case-lambda
                                                              ((g$t$10203$1RbCyC)
                                                               ((case-lambda
                                                                  ((g$ls/false$10204$1RbCyC)
                                                                   (if (if g$ls/false$10204$1RbCyC
                                                                         (begin
                                                                           '#f
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$c$10205$1RbCyC
                                                                                  g$ver*$10206$1RbCyC)
                                                                                (eq? (g$syntax->datum$7653$1RbCyC
                                                                                       g$c$10205$1RbCyC)
                                                                                     'or)))
                                                                             g$ls/false$10204$1RbCyC))
                                                                         '#f)
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$c$10207$1RbCyC
                                                                            g$ver*$10208$1RbCyC)
                                                                          ((case-lambda
                                                                             ((g$p*$10209$1RbCyC)
                                                                              (case-lambda
                                                                                ((g$x$10210$1RbCyC)
                                                                                 (g$exists$4996$1RbCyC
                                                                                   (case-lambda
                                                                                     ((g$p$10211$1RbCyC)
                                                                                      (g$p$10211$1RbCyC
                                                                                        g$x$10210$1RbCyC)))
                                                                                   g$p*$10209$1RbCyC)))))
                                                                           (map g$version-pred$10167$1RbCyC
                                                                                g$ver*$10208$1RbCyC))))
                                                                       g$ls/false$10204$1RbCyC)
                                                                     ((case-lambda
                                                                        ((g$t$10212$1RbCyC)
                                                                         ((case-lambda
                                                                            ((g$ls/false$10213$1RbCyC)
                                                                             (if (if g$ls/false$10213$1RbCyC
                                                                                   (begin
                                                                                     '#f
                                                                                     (apply
                                                                                       (case-lambda
                                                                                         ((g$c$10214$1RbCyC
                                                                                            g$ver$10215$1RbCyC)
                                                                                          (eq? (g$syntax->datum$7653$1RbCyC
                                                                                                 g$c$10214$1RbCyC)
                                                                                               'not)))
                                                                                       g$ls/false$10213$1RbCyC))
                                                                                   '#f)
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$c$10216$1RbCyC
                                                                                      g$ver$10217$1RbCyC)
                                                                                    ((case-lambda
                                                                                       ((g$p$10218$1RbCyC)
                                                                                        (case-lambda
                                                                                          ((g$x$10219$1RbCyC)
                                                                                           (not (g$p$10218$1RbCyC
                                                                                                  g$x$10219$1RbCyC))))))
                                                                                     (g$version-pred$10167$1RbCyC
                                                                                       g$ver$10217$1RbCyC))))
                                                                                 g$ls/false$10213$1RbCyC)
                                                                               ((case-lambda
                                                                                  ((g$t$10220$1RbCyC)
                                                                                   ((case-lambda
                                                                                      ((g$ls/false$10221$1RbCyC)
                                                                                       (if g$ls/false$10221$1RbCyC
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$sub*$10222$1RbCyC)
                                                                                              ((case-lambda
                                                                                                 ((g$p*$10223$1RbCyC)
                                                                                                  (case-lambda
                                                                                                    ((g$x$10224$1RbCyC)
                                                                                                     ((letrec ((g$f$10225$1RbCyC
                                                                                                                 (case-lambda
                                                                                                                   ((g$p*$10226$1RbCyC
                                                                                                                      g$x$10227$1RbCyC)
                                                                                                                    (if (null?
                                                                                                                          g$p*$10226$1RbCyC)
                                                                                                                      '#t
                                                                                                                      (if (null?
                                                                                                                            g$x$10227$1RbCyC)
                                                                                                                        '#f
                                                                                                                        (if ((car g$p*$10226$1RbCyC)
                                                                                                                             (car g$x$10227$1RbCyC))
                                                                                                                          (begin
                                                                                                                            '#f
                                                                                                                            (g$f$10225$1RbCyC
                                                                                                                              (cdr g$p*$10226$1RbCyC)
                                                                                                                              (cdr g$x$10227$1RbCyC)))
                                                                                                                          '#f)))))))
                                                                                                        g$f$10225$1RbCyC)
                                                                                                      g$p*$10223$1RbCyC
                                                                                                      g$x$10224$1RbCyC)))))
                                                                                               (map g$subversion-pred$10166$1RbCyC
                                                                                                    g$sub*$10222$1RbCyC))))
                                                                                           g$ls/false$10221$1RbCyC)
                                                                                         ((case-lambda
                                                                                            ((g$t$10228$1RbCyC)
                                                                                             ((case-lambda
                                                                                                ((g$ls/false$10229$1RbCyC)
                                                                                                 (if g$ls/false$10229$1RbCyC
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$syntax-violation$7650$1RbCyC
                                                                                                          'import
                                                                                                          '"invalid version spec"
                                                                                                          g$spec$10164$1RbCyC
                                                                                                          g$x*$10190$1RbCyC)))
                                                                                                     g$ls/false$10229$1RbCyC)
                                                                                                   (g$syntax-violation$7650$1RbCyC
                                                                                                     '#f
                                                                                                     '"invalid syntax"
                                                                                                     g$t$10228$1RbCyC))))
                                                                                              (g$syntax-dispatch$7539$1RbCyC
                                                                                                g$t$10228$1RbCyC
                                                                                                '_))))
                                                                                          g$t$10220$1RbCyC))))
                                                                                    (g$syntax-dispatch$7539$1RbCyC
                                                                                      g$t$10220$1RbCyC
                                                                                      'each-any))))
                                                                                g$t$10212$1RbCyC))))
                                                                          (g$syntax-dispatch$7539$1RbCyC
                                                                            g$t$10212$1RbCyC
                                                                            '(any any)))))
                                                                      g$t$10203$1RbCyC))))
                                                                (g$syntax-dispatch$7539$1RbCyC
                                                                  g$t$10203$1RbCyC
                                                                  '(any .
                                                                        each-any)))))
                                                            g$t$10194$1RbCyC))))
                                                      (g$syntax-dispatch$7539$1RbCyC
                                                        g$t$10194$1RbCyC
                                                        '(any . each-any)))))
                                                  g$t$10191$1RbCyC))))
                                            (g$syntax-dispatch$7539$1RbCyC
                                              g$t$10191$1RbCyC
                                              '()))))
                                        g$x*$10190$1RbCyC)))))
                          ((letrec ((g$f$10168$1RbCyC
                                      (case-lambda
                                        ((g$x$10169$1RbCyC)
                                         ((case-lambda
                                            ((g$t$10170$1RbCyC)
                                             ((case-lambda
                                                ((g$ls/false$10171$1RbCyC)
                                                 (if g$ls/false$10171$1RbCyC
                                                   (apply
                                                     (case-lambda
                                                       ((g$version-spec*$10172$1RbCyC)
                                                        (values
                                                          '()
                                                          (g$version-pred$10167$1RbCyC
                                                            g$version-spec*$10172$1RbCyC))))
                                                     g$ls/false$10171$1RbCyC)
                                                   ((case-lambda
                                                      ((g$t$10173$1RbCyC)
                                                       ((case-lambda
                                                          ((g$ls/false$10174$1RbCyC)
                                                           (if (if g$ls/false$10174$1RbCyC
                                                                 (begin
                                                                   '#f
                                                                   (apply
                                                                     (case-lambda
                                                                       ((g$x$10175$1RbCyC
                                                                          g$x*$10176$1RbCyC)
                                                                        (g$idsyn?$10062$1RbCyC
                                                                          g$x$10175$1RbCyC)))
                                                                     g$ls/false$10174$1RbCyC))
                                                                 '#f)
                                                             (apply
                                                               (case-lambda
                                                                 ((g$x$10177$1RbCyC
                                                                    g$x*$10178$1RbCyC)
                                                                  (call-with-values
                                                                    (case-lambda
                                                                      (()
                                                                       (g$f$10168$1RbCyC
                                                                         g$x*$10178$1RbCyC)))
                                                                    (case-lambda
                                                                      ((g$name$10181$1RbCyC
                                                                         g$pred$10182$1RbCyC)
                                                                       ((case-lambda
                                                                          ((g$pred$10183$1RbCyC
                                                                             g$name$10184$1RbCyC)
                                                                           (values
                                                                             (cons
                                                                               (g$syntax->datum$7653$1RbCyC
                                                                                 g$x$10177$1RbCyC)
                                                                               g$name$10184$1RbCyC)
                                                                             g$pred$10183$1RbCyC)))
                                                                        g$pred$10182$1RbCyC
                                                                        g$name$10181$1RbCyC))))))
                                                               g$ls/false$10174$1RbCyC)
                                                             ((case-lambda
                                                                ((g$t$10185$1RbCyC)
                                                                 ((case-lambda
                                                                    ((g$ls/false$10186$1RbCyC)
                                                                     (if g$ls/false$10186$1RbCyC
                                                                       (apply
                                                                         (case-lambda
                                                                           (()
                                                                            (values
                                                                              '()
                                                                              (case-lambda
                                                                                ((g$x$10187$1RbCyC)
                                                                                 '#t)))))
                                                                         g$ls/false$10186$1RbCyC)
                                                                       ((case-lambda
                                                                          ((g$t$10188$1RbCyC)
                                                                           ((case-lambda
                                                                              ((g$ls/false$10189$1RbCyC)
                                                                               (if g$ls/false$10189$1RbCyC
                                                                                 (apply
                                                                                   (case-lambda
                                                                                     (()
                                                                                      (g$syntax-violation$7650$1RbCyC
                                                                                        '#f
                                                                                        '"invalid import spec"
                                                                                        g$spec$10164$1RbCyC)))
                                                                                   g$ls/false$10189$1RbCyC)
                                                                                 (g$syntax-violation$7650$1RbCyC
                                                                                   '#f
                                                                                   '"invalid syntax"
                                                                                   g$t$10188$1RbCyC))))
                                                                            (g$syntax-dispatch$7539$1RbCyC
                                                                              g$t$10188$1RbCyC
                                                                              '_))))
                                                                        g$t$10185$1RbCyC))))
                                                                  (g$syntax-dispatch$7539$1RbCyC
                                                                    g$t$10185$1RbCyC
                                                                    '()))))
                                                              g$t$10173$1RbCyC))))
                                                        (g$syntax-dispatch$7539$1RbCyC
                                                          g$t$10173$1RbCyC
                                                          '(any . any)))))
                                                    g$t$10170$1RbCyC))))
                                              (g$syntax-dispatch$7539$1RbCyC
                                                g$t$10170$1RbCyC
                                                '(each-any)))))
                                          g$x$10169$1RbCyC)))))
                             g$f$10168$1RbCyC)
                           g$spec$10164$1RbCyC)))))
                   (g$import-library$10070$1RbCyC
                     (case-lambda
                       ((g$spec*$10156$1RbCyC)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$parse-library-name$10069$1RbCyC
                               g$spec*$10156$1RbCyC)))
                          (case-lambda
                            ((g$name$10159$1RbCyC g$pred$10160$1RbCyC)
                             ((case-lambda
                                ((g$pred$10161$1RbCyC g$name$10162$1RbCyC)
                                 (begin
                                   (if (null? g$name$10162$1RbCyC)
                                     (g$syntax-violation$7650$1RbCyC
                                       'import
                                       '"empty library name"
                                       g$spec*$10156$1RbCyC)
                                     (void))
                                   ((case-lambda
                                      ((g$lib$10163$1RbCyC)
                                       (begin
                                         (if (not g$lib$10163$1RbCyC)
                                           (g$syntax-violation$7650$1RbCyC
                                             'import
                                             '"cannot find library with required name"
                                             g$name$10162$1RbCyC)
                                           (void))
                                         (if (not (g$pred$10161$1RbCyC
                                                    (g$library-version$7024$1RbCyC
                                                      g$lib$10163$1RbCyC)))
                                           (g$syntax-violation$7650$1RbCyC
                                             'import
                                             '"library does not satisfy version specification"
                                             g$spec*$10156$1RbCyC
                                             g$lib$10163$1RbCyC)
                                           (void))
                                         ((g$imp-collector$7593$1RbCyC)
                                          g$lib$10163$1RbCyC)
                                         (g$library-subst$7028$1RbCyC
                                           g$lib$10163$1RbCyC))))
                                    (g$find-library-by-name$7064$1RbCyC
                                      g$name$10162$1RbCyC)))))
                              g$pred$10160$1RbCyC
                              g$name$10159$1RbCyC)))))))
                   (g$get-import$10071$1RbCyC
                     (case-lambda
                       ((g$spec$10085$1RbCyC)
                        ((case-lambda
                           ((g$t$10086$1RbCyC)
                            ((case-lambda
                               ((g$ls/false$10087$1RbCyC)
                                (if (if g$ls/false$10087$1RbCyC
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$x$10088$1RbCyC
                                               g$x*$10089$1RbCyC)
                                             (not (g$memq$4989$1RbCyC
                                                    (g$syntax->datum$7653$1RbCyC
                                                      g$x$10088$1RbCyC)
                                                    '(for rename
                                                          except
                                                          only
                                                          prefix
                                                          library)))))
                                          g$ls/false$10087$1RbCyC))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$x$10090$1RbCyC g$x*$10091$1RbCyC)
                                       (g$import-library$10070$1RbCyC
                                         (cons
                                           g$x$10090$1RbCyC
                                           g$x*$10091$1RbCyC))))
                                    g$ls/false$10087$1RbCyC)
                                  ((case-lambda
                                     ((g$t$10092$1RbCyC)
                                      ((case-lambda
                                         ((g$ls/false$10093$1RbCyC)
                                          (if (if g$ls/false$10093$1RbCyC
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$rename$10094$1RbCyC
                                                         g$isp$10095$1RbCyC
                                                         g$old*$10096$1RbCyC
                                                         g$new*$10097$1RbCyC)
                                                       (if (eq? (g$syntax->datum$7653$1RbCyC
                                                                  g$rename$10094$1RbCyC)
                                                                'rename)
                                                         (if (g$for-all$4995$1RbCyC
                                                               g$idsyn?$10062$1RbCyC
                                                               g$old*$10096$1RbCyC)
                                                           (begin
                                                             '#f
                                                             (g$for-all$4995$1RbCyC
                                                               g$idsyn?$10062$1RbCyC
                                                               g$new*$10097$1RbCyC))
                                                           '#f)
                                                         '#f)))
                                                    g$ls/false$10093$1RbCyC))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$rename$10098$1RbCyC
                                                   g$isp$10099$1RbCyC
                                                   g$old*$10100$1RbCyC
                                                   g$new*$10101$1RbCyC)
                                                 ((case-lambda
                                                    ((g$subst$10102$1RbCyC
                                                       g$old*$10103$1RbCyC
                                                       g$new*$10104$1RbCyC)
                                                     ((case-lambda
                                                        ((g$old-label*$10105$1RbCyC)
                                                         ((case-lambda
                                                            ((g$subst$10106$1RbCyC)
                                                             (g$merge-substs$10064$1RbCyC
                                                               (map cons
                                                                    g$new*$10104$1RbCyC
                                                                    g$old-label*$10105$1RbCyC)
                                                               g$subst$10106$1RbCyC)))
                                                          (g$rem*$10067$1RbCyC
                                                            g$old*$10103$1RbCyC
                                                            g$subst$10102$1RbCyC))))
                                                      (g$find*$10066$1RbCyC
                                                        g$old*$10103$1RbCyC
                                                        g$subst$10102$1RbCyC))))
                                                  (g$get-import$10071$1RbCyC
                                                    g$isp$10099$1RbCyC)
                                                  (map g$syntax->datum$7653$1RbCyC
                                                       g$old*$10100$1RbCyC)
                                                  (map g$syntax->datum$7653$1RbCyC
                                                       g$new*$10101$1RbCyC))))
                                              g$ls/false$10093$1RbCyC)
                                            ((case-lambda
                                               ((g$t$10107$1RbCyC)
                                                ((case-lambda
                                                   ((g$ls/false$10108$1RbCyC)
                                                    (if (if g$ls/false$10108$1RbCyC
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$except$10109$1RbCyC
                                                                   g$isp$10110$1RbCyC
                                                                   g$sym*$10111$1RbCyC)
                                                                 (if (eq? (g$syntax->datum$7653$1RbCyC
                                                                            g$except$10109$1RbCyC)
                                                                          'except)
                                                                   (begin
                                                                     '#f
                                                                     (g$for-all$4995$1RbCyC
                                                                       g$idsyn?$10062$1RbCyC
                                                                       g$sym*$10111$1RbCyC))
                                                                   '#f)))
                                                              g$ls/false$10108$1RbCyC))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$except$10112$1RbCyC
                                                             g$isp$10113$1RbCyC
                                                             g$sym*$10114$1RbCyC)
                                                           ((case-lambda
                                                              ((g$subst$10115$1RbCyC)
                                                               (g$rem*$10067$1RbCyC
                                                                 (map g$syntax->datum$7653$1RbCyC
                                                                      g$sym*$10114$1RbCyC)
                                                                 g$subst$10115$1RbCyC)))
                                                            (g$get-import$10071$1RbCyC
                                                              g$isp$10113$1RbCyC))))
                                                        g$ls/false$10108$1RbCyC)
                                                      ((case-lambda
                                                         ((g$t$10116$1RbCyC)
                                                          ((case-lambda
                                                             ((g$ls/false$10117$1RbCyC)
                                                              (if (if g$ls/false$10117$1RbCyC
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$only$10118$1RbCyC
                                                                             g$isp$10119$1RbCyC
                                                                             g$sym*$10120$1RbCyC)
                                                                           (if (eq? (g$syntax->datum$7653$1RbCyC
                                                                                      g$only$10118$1RbCyC)
                                                                                    'only)
                                                                             (begin
                                                                               '#f
                                                                               (g$for-all$4995$1RbCyC
                                                                                 g$idsyn?$10062$1RbCyC
                                                                                 g$sym*$10120$1RbCyC))
                                                                             '#f)))
                                                                        g$ls/false$10117$1RbCyC))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$only$10121$1RbCyC
                                                                       g$isp$10122$1RbCyC
                                                                       g$sym*$10123$1RbCyC)
                                                                     ((case-lambda
                                                                        ((g$subst$10124$1RbCyC
                                                                           g$sym*$10125$1RbCyC)
                                                                         ((case-lambda
                                                                            ((g$sym*$10126$1RbCyC)
                                                                             ((case-lambda
                                                                                ((g$lab*$10127$1RbCyC)
                                                                                 (map cons
                                                                                      g$sym*$10126$1RbCyC
                                                                                      g$lab*$10127$1RbCyC)))
                                                                              (g$find*$10066$1RbCyC
                                                                                g$sym*$10126$1RbCyC
                                                                                g$subst$10124$1RbCyC))))
                                                                          (g$remove-dups$10068$1RbCyC
                                                                            g$sym*$10125$1RbCyC))))
                                                                      (g$get-import$10071$1RbCyC
                                                                        g$isp$10122$1RbCyC)
                                                                      (map g$syntax->datum$7653$1RbCyC
                                                                           g$sym*$10123$1RbCyC))))
                                                                  g$ls/false$10117$1RbCyC)
                                                                ((case-lambda
                                                                   ((g$t$10128$1RbCyC)
                                                                    ((case-lambda
                                                                       ((g$ls/false$10129$1RbCyC)
                                                                        (if (if g$ls/false$10129$1RbCyC
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$prefix$10130$1RbCyC
                                                                                       g$isp$10131$1RbCyC
                                                                                       g$p$10132$1RbCyC)
                                                                                     (if (eq? (g$syntax->datum$7653$1RbCyC
                                                                                                g$prefix$10130$1RbCyC)
                                                                                              'prefix)
                                                                                       (begin
                                                                                         '#f
                                                                                         (g$idsyn?$10062$1RbCyC
                                                                                           g$p$10132$1RbCyC))
                                                                                       '#f)))
                                                                                  g$ls/false$10129$1RbCyC))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$prefix$10133$1RbCyC
                                                                                 g$isp$10134$1RbCyC
                                                                                 g$p$10135$1RbCyC)
                                                                               ((case-lambda
                                                                                  ((g$subst$10136$1RbCyC
                                                                                     g$prefix$10137$1RbCyC)
                                                                                   (map (case-lambda
                                                                                          ((g$x$10138$1RbCyC)
                                                                                           (cons
                                                                                             (string->symbol
                                                                                               (string-append
                                                                                                 g$prefix$10137$1RbCyC
                                                                                                 (symbol->string
                                                                                                   (car g$x$10138$1RbCyC))))
                                                                                             (cdr g$x$10138$1RbCyC))))
                                                                                        g$subst$10136$1RbCyC)))
                                                                                (g$get-import$10071$1RbCyC
                                                                                  g$isp$10134$1RbCyC)
                                                                                (symbol->string
                                                                                  (g$syntax->datum$7653$1RbCyC
                                                                                    g$p$10135$1RbCyC)))))
                                                                            g$ls/false$10129$1RbCyC)
                                                                          ((case-lambda
                                                                             ((g$t$10139$1RbCyC)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10140$1RbCyC)
                                                                                  (if (if g$ls/false$10140$1RbCyC
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$library$10141$1RbCyC
                                                                                                 g$spec*$10142$1RbCyC)
                                                                                               (eq? (g$syntax->datum$7653$1RbCyC
                                                                                                      g$library$10141$1RbCyC)
                                                                                                    'library)))
                                                                                            g$ls/false$10140$1RbCyC))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$library$10143$1RbCyC
                                                                                           g$spec*$10144$1RbCyC)
                                                                                         (g$import-library$10070$1RbCyC
                                                                                           g$spec*$10144$1RbCyC)))
                                                                                      g$ls/false$10140$1RbCyC)
                                                                                    ((case-lambda
                                                                                       ((g$t$10145$1RbCyC)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10146$1RbCyC)
                                                                                            (if (if g$ls/false$10146$1RbCyC
                                                                                                  (begin
                                                                                                    '#f
                                                                                                    (apply
                                                                                                      (case-lambda
                                                                                                        ((g$for$10147$1RbCyC
                                                                                                           g$isp$10148$1RbCyC
                                                                                                           g$rest$10149$1RbCyC)
                                                                                                         (eq? (g$syntax->datum$7653$1RbCyC
                                                                                                                g$for$10147$1RbCyC)
                                                                                                              'for)))
                                                                                                      g$ls/false$10146$1RbCyC))
                                                                                                  '#f)
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$for$10150$1RbCyC
                                                                                                     g$isp$10151$1RbCyC
                                                                                                     g$rest$10152$1RbCyC)
                                                                                                   (g$get-import$10071$1RbCyC
                                                                                                     g$isp$10151$1RbCyC)))
                                                                                                g$ls/false$10146$1RbCyC)
                                                                                              ((case-lambda
                                                                                                 ((g$t$10153$1RbCyC)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$10154$1RbCyC)
                                                                                                      (if g$ls/false$10154$1RbCyC
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$spec$10155$1RbCyC)
                                                                                                             (g$syntax-violation$7650$1RbCyC
                                                                                                               'import
                                                                                                               '"invalid import spec"
                                                                                                               g$spec$10155$1RbCyC)))
                                                                                                          g$ls/false$10154$1RbCyC)
                                                                                                        (g$syntax-violation$7650$1RbCyC
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$10153$1RbCyC))))
                                                                                                   (g$syntax-dispatch$7539$1RbCyC
                                                                                                     g$t$10153$1RbCyC
                                                                                                     'any))))
                                                                                               g$t$10145$1RbCyC))))
                                                                                         (g$syntax-dispatch$7539$1RbCyC
                                                                                           g$t$10145$1RbCyC
                                                                                           '(any any
                                                                                                 .
                                                                                                 any)))))
                                                                                     g$t$10139$1RbCyC))))
                                                                               (g$syntax-dispatch$7539$1RbCyC
                                                                                 g$t$10139$1RbCyC
                                                                                 '(any each-any)))))
                                                                           g$t$10128$1RbCyC))))
                                                                     (g$syntax-dispatch$7539$1RbCyC
                                                                       g$t$10128$1RbCyC
                                                                       '(any any
                                                                             any)))))
                                                                 g$t$10116$1RbCyC))))
                                                           (g$syntax-dispatch$7539$1RbCyC
                                                             g$t$10116$1RbCyC
                                                             '(any any
                                                                   .
                                                                   each-any)))))
                                                       g$t$10107$1RbCyC))))
                                                 (g$syntax-dispatch$7539$1RbCyC
                                                   g$t$10107$1RbCyC
                                                   '(any any . each-any)))))
                                             g$t$10092$1RbCyC))))
                                       (g$syntax-dispatch$7539$1RbCyC
                                         g$t$10092$1RbCyC
                                         '(any any . #(each (any any)))))))
                                   g$t$10086$1RbCyC))))
                             (g$syntax-dispatch$7539$1RbCyC
                               g$t$10086$1RbCyC
                               '(any . each-any)))))
                         g$spec$10085$1RbCyC))))
                   (g$add-imports!$10072$1RbCyC
                     (case-lambda
                       ((g$imp$10077$1RbCyC g$h$10078$1RbCyC)
                        ((case-lambda
                           ((g$subst$10079$1RbCyC)
                            (for-each
                              (case-lambda
                                ((g$x$10080$1RbCyC)
                                 ((case-lambda
                                    ((g$name$10081$1RbCyC g$label$10082$1RbCyC)
                                     ((case-lambda
                                        ((g$t$10083$1RbCyC)
                                         (if g$t$10083$1RbCyC
                                           ((case-lambda
                                              ((g$l$10084$1RbCyC)
                                               (if (not (eq? g$l$10084$1RbCyC
                                                             g$label$10082$1RbCyC))
                                                 (g$dup-error$10063$1RbCyC
                                                   g$name$10081$1RbCyC)
                                                 (void))))
                                            g$t$10083$1RbCyC)
                                           (g$hashtable-set!$5437$1RbCyC
                                             g$h$10078$1RbCyC
                                             g$name$10081$1RbCyC
                                             g$label$10082$1RbCyC))))
                                      (g$hashtable-ref$5436$1RbCyC
                                        g$h$10078$1RbCyC
                                        g$name$10081$1RbCyC
                                        '#f))))
                                  (car g$x$10080$1RbCyC)
                                  (cdr g$x$10080$1RbCyC))))
                              g$subst$10079$1RbCyC)))
                         (g$get-import$10071$1RbCyC g$imp$10077$1RbCyC))))))
           (case-lambda
             ((g$imp*$10073$1RbCyC)
              ((letrec ((g$f$10074$1RbCyC
                          (case-lambda
                            ((g$imp*$10075$1RbCyC g$h$10076$1RbCyC)
                             (if (null? g$imp*$10075$1RbCyC)
                               (hashtable-entries g$h$10076$1RbCyC)
                               (begin
                                 (g$add-imports!$10072$1RbCyC
                                   (car g$imp*$10075$1RbCyC)
                                   g$h$10076$1RbCyC)
                                 (g$f$10074$1RbCyC
                                   (cdr g$imp*$10075$1RbCyC)
                                   g$h$10076$1RbCyC)))))))
                 g$f$10074$1RbCyC)
               g$imp*$10073$1RbCyC
               (g$make-eq-hashtable$5433$1RbCyC)))))))))
   (g$make-top-rib$7589$1RbCyC
     g$make-top-rib$11077$1RbCyC
     (case-lambda
       ((g$names$10324$1RbCyC g$labels$10325$1RbCyC)
        ((case-lambda
           ((g$rib$10326$1RbCyC)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$10327$1RbCyC g$label$10328$1RbCyC)
                   (begin
                     (if (not (symbol? g$name$10327$1RbCyC))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$10327$1RbCyC)
                       (void))
                     (g$extend-rib/nc!$7225$1RbCyC
                       g$rib$10326$1RbCyC
                       (g$make-stx$7234$1RbCyC
                         g$name$10327$1RbCyC
                         g$top-mark*$7198$1RbCyC
                         '()
                         '())
                       g$label$10328$1RbCyC))))
                g$names$10324$1RbCyC
                g$labels$10325$1RbCyC)
              g$rib$10326$1RbCyC)))
         (g$make-cache-rib$7222$1RbCyC)))))
   (g$make-collector$7590$1RbCyC
     g$make-collector$11078$1RbCyC
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$10329$1RbCyC)
            (case-lambda
              (() g$ls$10329$1RbCyC)
              ((g$x$10330$1RbCyC)
               (set! g$ls$10329$1RbCyC
                 (g$set-cons$7195$1RbCyC
                   g$x$10330$1RbCyC
                   g$ls$10329$1RbCyC))))))
         '()))))
   (g$inv-collector$7591$1RbCyC
     g$inv-collector$11079$1RbCyC
     (g$make-parameter$6524$1RbCyC
       (case-lambda
         (g$args$10331$1RbCyC
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10332$1RbCyC)
          (begin
            (if (not (procedure? g$x$10332$1RbCyC))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$10332$1RbCyC)
              (void))
            g$x$10332$1RbCyC)))))
   (g$vis-collector$7592$1RbCyC
     g$vis-collector$11080$1RbCyC
     (g$make-parameter$6524$1RbCyC
       (case-lambda
         (g$args$10333$1RbCyC
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10334$1RbCyC)
          (begin
            (if (not (procedure? g$x$10334$1RbCyC))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$10334$1RbCyC)
              (void))
            g$x$10334$1RbCyC)))))
   (g$imp-collector$7593$1RbCyC
     g$imp-collector$11081$1RbCyC
     (g$make-parameter$6524$1RbCyC
       (case-lambda
         (g$args$10335$1RbCyC
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10336$1RbCyC)
          (begin
            (if (not (procedure? g$x$10336$1RbCyC))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10336$1RbCyC)
              (void))
            g$x$10336$1RbCyC)))))
   (g$chi-library-internal$7594$1RbCyC
     g$chi-library-internal$11082$1RbCyC
     (case-lambda
       ((g$e*$10337$1RbCyC g$rib$10338$1RbCyC g$top?$10339$1RbCyC)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7583$1RbCyC
               g$e*$10337$1RbCyC
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10338$1RbCyC
               g$top?$10339$1RbCyC)))
          (case-lambda
            ((g$e*$10348$1RbCyC
               g$r$10349$1RbCyC
               g$mr$10350$1RbCyC
               g$lex*$10351$1RbCyC
               g$rhs*$10352$1RbCyC
               g$mod**$10353$1RbCyC
               g$_kwd*$10354$1RbCyC
               g$exp*$10355$1RbCyC)
             ((case-lambda
                ((g$exp*$10356$1RbCyC
                   g$_kwd*$10357$1RbCyC
                   g$mod**$10358$1RbCyC
                   g$rhs*$10359$1RbCyC
                   g$lex*$10360$1RbCyC
                   g$mr$10361$1RbCyC
                   g$r$10362$1RbCyC
                   g$e*$10363$1RbCyC)
                 (values
                   (append
                     (apply append (reverse g$mod**$10358$1RbCyC))
                     g$e*$10363$1RbCyC)
                   g$r$10362$1RbCyC
                   g$mr$10361$1RbCyC
                   (reverse g$lex*$10360$1RbCyC)
                   (reverse g$rhs*$10359$1RbCyC)
                   g$exp*$10356$1RbCyC)))
              g$exp*$10355$1RbCyC
              g$_kwd*$10354$1RbCyC
              g$mod**$10353$1RbCyC
              g$rhs*$10352$1RbCyC
              g$lex*$10351$1RbCyC
              g$mr$10350$1RbCyC
              g$r$10349$1RbCyC
              g$e*$10348$1RbCyC)))))))
   (g$chi-interaction-expr$7595$1RbCyC
     g$chi-interaction-expr$11083$1RbCyC
     (case-lambda
       ((g$e$10364$1RbCyC g$rib$10365$1RbCyC g$r$10366$1RbCyC)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7583$1RbCyC
               (list g$e$10364$1RbCyC)
               g$r$10366$1RbCyC
               g$r$10366$1RbCyC
               '()
               '()
               '()
               '()
               '()
               g$rib$10365$1RbCyC
               '#t)))
          (case-lambda
            ((g$e*$10375$1RbCyC
               g$r$10376$1RbCyC
               g$mr$10377$1RbCyC
               g$lex*$10378$1RbCyC
               g$rhs*$10379$1RbCyC
               g$mod**$10380$1RbCyC
               g$_kwd*$10381$1RbCyC
               g$_exp*$10382$1RbCyC)
             ((case-lambda
                ((g$_exp*$10383$1RbCyC
                   g$_kwd*$10384$1RbCyC
                   g$mod**$10385$1RbCyC
                   g$rhs*$10386$1RbCyC
                   g$lex*$10387$1RbCyC
                   g$mr$10388$1RbCyC
                   g$r$10389$1RbCyC
                   g$e*$10390$1RbCyC)
                 ((case-lambda
                    ((g$e*$10391$1RbCyC)
                     ((case-lambda
                        ((g$e$10392$1RbCyC)
                         (values g$e$10392$1RbCyC g$r$10389$1RbCyC)))
                      (if (null? g$e*$10391$1RbCyC)
                        (g$build-void$7191$1RbCyC)
                        (if (null? (cdr g$e*$10391$1RbCyC))
                          (car g$e*$10391$1RbCyC)
                          (g$build-sequence$7190$1RbCyC
                            '#f
                            g$e*$10391$1RbCyC))))))
                  (g$expand-interaction-rhs*/init*$7564$1RbCyC
                    (reverse g$lex*$10387$1RbCyC)
                    (reverse g$rhs*$10386$1RbCyC)
                    (append
                      (apply append (reverse g$mod**$10385$1RbCyC))
                      g$e*$10390$1RbCyC)
                    g$r$10389$1RbCyC
                    g$mr$10388$1RbCyC))))
              g$_exp*$10382$1RbCyC
              g$_kwd*$10381$1RbCyC
              g$mod**$10380$1RbCyC
              g$rhs*$10379$1RbCyC
              g$lex*$10378$1RbCyC
              g$mr$10377$1RbCyC
              g$r$10376$1RbCyC
              g$e*$10375$1RbCyC)))))))
   (g$library-body-expander$7596$1RbCyC
     g$library-body-expander$11084$1RbCyC
     (case-lambda
       ((g$name$10393$1RbCyC
          g$main-exp*$10394$1RbCyC
          g$imp*$10395$1RbCyC
          g$b*$10396$1RbCyC
          g$top?$10397$1RbCyC)
        (letrec* ((g$itc$10398$1RbCyC (g$make-collector$7590$1RbCyC)))
          ((case-lambda
             ((g$imp-collector$10403$1RbCyC
                g$top-level-context$10404$1RbCyC
                g$imp-collector$10405$1RbCyC
                g$top-level-context$10406$1RbCyC)
              ((case-lambda
                 ((g$swap$10407$1RbCyC)
                  (dynamic-wind
                    g$swap$10407$1RbCyC
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$7588$1RbCyC
                              g$imp*$10395$1RbCyC)))
                         (case-lambda
                           ((g$subst-names$10410$1RbCyC
                              g$subst-labels$10411$1RbCyC)
                            ((case-lambda
                               ((g$subst-labels$10412$1RbCyC
                                  g$subst-names$10413$1RbCyC)
                                ((case-lambda
                                   ((g$rib$10414$1RbCyC)
                                    (letrec* ((g$wrap$10415$1RbCyC
                                                (case-lambda
                                                  ((g$x$10477$1RbCyC)
                                                   (g$make-stx$7234$1RbCyC
                                                     g$x$10477$1RbCyC
                                                     g$top-mark*$7198$1RbCyC
                                                     (list g$rib$10414$1RbCyC)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$10416$1RbCyC
                                            g$main-exp*$10417$1RbCyC
                                            g$rtc$10418$1RbCyC
                                            g$vtc$10419$1RbCyC)
                                          ((case-lambda
                                             ((g$inv-collector$10424$1RbCyC
                                                g$vis-collector$10425$1RbCyC
                                                g$inv-collector$10426$1RbCyC
                                                g$vis-collector$10427$1RbCyC)
                                              ((case-lambda
                                                 ((g$swap$10428$1RbCyC)
                                                  (dynamic-wind
                                                    g$swap$10428$1RbCyC
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$7594$1RbCyC
                                                              g$b*$10416$1RbCyC
                                                              g$rib$10414$1RbCyC
                                                              g$top?$10397$1RbCyC)))
                                                         (case-lambda
                                                           ((g$init*$10435$1RbCyC
                                                              g$r$10436$1RbCyC
                                                              g$mr$10437$1RbCyC
                                                              g$lex*$10438$1RbCyC
                                                              g$rhs*$10439$1RbCyC
                                                              g$internal-exp*$10440$1RbCyC)
                                                            ((case-lambda
                                                               ((g$internal-exp*$10441$1RbCyC
                                                                  g$rhs*$10442$1RbCyC
                                                                  g$lex*$10443$1RbCyC
                                                                  g$mr$10444$1RbCyC
                                                                  g$r$10445$1RbCyC
                                                                  g$init*$10446$1RbCyC)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$7585$1RbCyC
                                                                       (append
                                                                         g$main-exp*$10417$1RbCyC
                                                                         g$internal-exp*$10441$1RbCyC))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$10449$1RbCyC
                                                                       g$exp-id*$10450$1RbCyC)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$10451$1RbCyC
                                                                           g$exp-name*$10452$1RbCyC)
                                                                         (begin
                                                                           (g$seal-rib!$7227$1RbCyC
                                                                             g$rib$10414$1RbCyC)
                                                                           ((case-lambda
                                                                              ((g$init*$10453$1RbCyC)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$10454$1RbCyC)
                                                                                   ((case-lambda
                                                                                      (()
                                                                                       (begin
                                                                                         (g$unseal-rib!$7228$1RbCyC
                                                                                           g$rib$10414$1RbCyC)
                                                                                         ((case-lambda
                                                                                            ((g$loc*$10455$1RbCyC
                                                                                               g$export-subst$10456$1RbCyC)
                                                                                             (letrec* ((g$errstr$10457$1RbCyC
                                                                                                         '"attempt to export mutated variable"))
                                                                                               (call-with-values
                                                                                                 (case-lambda
                                                                                                   (()
                                                                                                    (g$make-export-env/macros$7639$1RbCyC
                                                                                                      g$lex*$10443$1RbCyC
                                                                                                      g$loc*$10455$1RbCyC
                                                                                                      g$r$10445$1RbCyC)))
                                                                                                 (case-lambda
                                                                                                   ((g$export-env$10461$1RbCyC
                                                                                                      g$global*$10462$1RbCyC
                                                                                                      g$macro*$10463$1RbCyC)
                                                                                                    ((case-lambda
                                                                                                       ((g$macro*$10464$1RbCyC
                                                                                                          g$global*$10465$1RbCyC
                                                                                                          g$export-env$10466$1RbCyC)
                                                                                                        (begin
                                                                                                          (for-each
                                                                                                            (case-lambda
                                                                                                              ((g$s$10467$1RbCyC)
                                                                                                               ((case-lambda
                                                                                                                  ((g$name$10468$1RbCyC
                                                                                                                     g$label$10469$1RbCyC)
                                                                                                                   ((case-lambda
                                                                                                                      ((g$p$10470$1RbCyC)
                                                                                                                       (if g$p$10470$1RbCyC
                                                                                                                         ((case-lambda
                                                                                                                            ((g$b$10471$1RbCyC)
                                                                                                                             ((case-lambda
                                                                                                                                ((g$type$10472$1RbCyC)
                                                                                                                                 (if (eq? g$type$10472$1RbCyC
                                                                                                                                          'mutable)
                                                                                                                                   (g$syntax-violation$7650$1RbCyC
                                                                                                                                     'export
                                                                                                                                     g$errstr$10457$1RbCyC
                                                                                                                                     g$name$10468$1RbCyC)
                                                                                                                                   (void))))
                                                                                                                              (car g$b$10471$1RbCyC))))
                                                                                                                          (cdr g$p$10470$1RbCyC))
                                                                                                                         (void))))
                                                                                                                    (g$assq$4985$1RbCyC
                                                                                                                      g$label$10469$1RbCyC
                                                                                                                      g$export-env$10466$1RbCyC))))
                                                                                                                (car g$s$10467$1RbCyC)
                                                                                                                (cdr g$s$10467$1RbCyC))))
                                                                                                            g$export-subst$10456$1RbCyC)
                                                                                                          ((case-lambda
                                                                                                             ((g$invoke-body$10473$1RbCyC
                                                                                                                g$invoke-definitions$10474$1RbCyC)
                                                                                                              (values
                                                                                                                (g$itc$10398$1RbCyC)
                                                                                                                (g$rtc$10418$1RbCyC)
                                                                                                                (g$vtc$10419$1RbCyC)
                                                                                                                (g$build-sequence$7190$1RbCyC
                                                                                                                  '#f
                                                                                                                  (append
                                                                                                                    g$invoke-definitions$10474$1RbCyC
                                                                                                                    (list
                                                                                                                      g$invoke-body$10473$1RbCyC)))
                                                                                                                g$macro*$10464$1RbCyC
                                                                                                                g$export-subst$10456$1RbCyC
                                                                                                                g$export-env$10466$1RbCyC)))
                                                                                                           (g$build-library-letrec*$7194$1RbCyC
                                                                                                             '#f
                                                                                                             g$name$10393$1RbCyC
                                                                                                             g$lex*$10443$1RbCyC
                                                                                                             g$loc*$10455$1RbCyC
                                                                                                             g$rhs*$10454$1RbCyC
                                                                                                             (if (null?
                                                                                                                   g$init*$10453$1RbCyC)
                                                                                                               (g$build-void$7191$1RbCyC)
                                                                                                               (g$build-sequence$7190$1RbCyC
                                                                                                                 '#f
                                                                                                                 g$init*$10453$1RbCyC)))
                                                                                                           (map g$build-global-define$7186$1RbCyC
                                                                                                                (map cdr
                                                                                                                     g$global*$10465$1RbCyC))))))
                                                                                                     g$macro*$10463$1RbCyC
                                                                                                     g$global*$10462$1RbCyC
                                                                                                     g$export-env$10461$1RbCyC)))))))
                                                                                          (map g$gen-global$7201$1RbCyC
                                                                                               g$lex*$10443$1RbCyC)
                                                                                          (g$make-export-subst$7638$1RbCyC
                                                                                            g$exp-name*$10452$1RbCyC
                                                                                            g$exp-id*$10451$1RbCyC))))))))
                                                                                (g$chi-rhs*$7565$1RbCyC
                                                                                  g$rhs*$10442$1RbCyC
                                                                                  g$r$10445$1RbCyC
                                                                                  g$mr$10444$1RbCyC))))
                                                                            (g$chi-expr*$7555$1RbCyC
                                                                              g$init*$10446$1RbCyC
                                                                              g$r$10445$1RbCyC
                                                                              g$mr$10444$1RbCyC)))))
                                                                      g$exp-id*$10450$1RbCyC
                                                                      g$exp-name*$10449$1RbCyC))))))
                                                             g$internal-exp*$10440$1RbCyC
                                                             g$rhs*$10439$1RbCyC
                                                             g$lex*$10438$1RbCyC
                                                             g$mr$10437$1RbCyC
                                                             g$r$10436$1RbCyC
                                                             g$init*$10435$1RbCyC))))))
                                                    g$swap$10428$1RbCyC)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$10475$1RbCyC)
                                                        (begin
                                                          (g$inv-collector$10424$1RbCyC
                                                            g$inv-collector$10426$1RbCyC)
                                                          (set! g$inv-collector$10426$1RbCyC
                                                            g$t$10475$1RbCyC))))
                                                     (g$inv-collector$10424$1RbCyC))
                                                    ((case-lambda
                                                       ((g$t$10476$1RbCyC)
                                                        (begin
                                                          (g$vis-collector$10425$1RbCyC
                                                            g$vis-collector$10427$1RbCyC)
                                                          (set! g$vis-collector$10427$1RbCyC
                                                            g$t$10476$1RbCyC))))
                                                     (g$vis-collector$10425$1RbCyC))))))))
                                           g$inv-collector$7591$1RbCyC
                                           g$vis-collector$7592$1RbCyC
                                           g$rtc$10418$1RbCyC
                                           g$vtc$10419$1RbCyC)))
                                       (map g$wrap$10415$1RbCyC
                                            g$b*$10396$1RbCyC)
                                       (map g$wrap$10415$1RbCyC
                                            g$main-exp*$10394$1RbCyC)
                                       (g$make-collector$7590$1RbCyC)
                                       (g$make-collector$7590$1RbCyC)))))
                                 (g$make-top-rib$7589$1RbCyC
                                   g$subst-names$10413$1RbCyC
                                   g$subst-labels$10412$1RbCyC))))
                             g$subst-labels$10411$1RbCyC
                             g$subst-names$10410$1RbCyC))))))
                    g$swap$10407$1RbCyC)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10478$1RbCyC)
                        (begin
                          (g$imp-collector$10403$1RbCyC
                            g$imp-collector$10405$1RbCyC)
                          (set! g$imp-collector$10405$1RbCyC
                            g$t$10478$1RbCyC))))
                     (g$imp-collector$10403$1RbCyC))
                    ((case-lambda
                       ((g$t$10479$1RbCyC)
                        (begin
                          (g$top-level-context$10404$1RbCyC
                            g$top-level-context$10406$1RbCyC)
                          (set! g$top-level-context$10406$1RbCyC
                            g$t$10479$1RbCyC))))
                     (g$top-level-context$10404$1RbCyC))))))))
           g$imp-collector$7593$1RbCyC
           g$top-level-context$7657$1RbCyC
           g$itc$10398$1RbCyC
           '#f)))))
   (g$core-library-expander$7597$1RbCyC
     g$core-library-expander$11085$1RbCyC
     (case-lambda
       ((g$e$10480$1RbCyC g$verify-name$10481$1RbCyC)
        (call-with-values
          (case-lambda (() (g$parse-library$7587$1RbCyC g$e$10480$1RbCyC)))
          (case-lambda
            ((g$name*$10486$1RbCyC
               g$exp*$10487$1RbCyC
               g$imp*$10488$1RbCyC
               g$b*$10489$1RbCyC)
             ((case-lambda
                ((g$b*$10490$1RbCyC
                   g$imp*$10491$1RbCyC
                   g$exp*$10492$1RbCyC
                   g$name*$10493$1RbCyC)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$7586$1RbCyC g$name*$10493$1RbCyC)))
                   (case-lambda
                     ((g$name$10496$1RbCyC g$ver$10497$1RbCyC)
                      ((case-lambda
                         ((g$ver$10498$1RbCyC g$name$10499$1RbCyC)
                          (begin
                            (g$verify-name$10481$1RbCyC g$name$10499$1RbCyC)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$7596$1RbCyC
                                   g$name$10499$1RbCyC
                                   g$exp*$10492$1RbCyC
                                   g$imp*$10491$1RbCyC
                                   g$b*$10490$1RbCyC
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10507$1RbCyC
                                   g$invoke-req*$10508$1RbCyC
                                   g$visit-req*$10509$1RbCyC
                                   g$invoke-code$10510$1RbCyC
                                   g$visit-code$10511$1RbCyC
                                   g$export-subst$10512$1RbCyC
                                   g$export-env$10513$1RbCyC)
                                 ((case-lambda
                                    ((g$export-env$10514$1RbCyC
                                       g$export-subst$10515$1RbCyC
                                       g$visit-code$10516$1RbCyC
                                       g$invoke-code$10517$1RbCyC
                                       g$visit-req*$10518$1RbCyC
                                       g$invoke-req*$10519$1RbCyC
                                       g$imp*$10520$1RbCyC)
                                     (values
                                       g$name$10499$1RbCyC
                                       g$ver$10498$1RbCyC
                                       g$imp*$10520$1RbCyC
                                       g$invoke-req*$10519$1RbCyC
                                       g$visit-req*$10518$1RbCyC
                                       g$invoke-code$10517$1RbCyC
                                       g$visit-code$10516$1RbCyC
                                       g$export-subst$10515$1RbCyC
                                       g$export-env$10514$1RbCyC)))
                                  g$export-env$10513$1RbCyC
                                  g$export-subst$10512$1RbCyC
                                  g$visit-code$10511$1RbCyC
                                  g$invoke-code$10510$1RbCyC
                                  g$visit-req*$10509$1RbCyC
                                  g$invoke-req*$10508$1RbCyC
                                  g$imp*$10507$1RbCyC)))))))
                       g$ver$10497$1RbCyC
                       g$name$10496$1RbCyC))))))
              g$b*$10489$1RbCyC
              g$imp*$10488$1RbCyC
              g$exp*$10487$1RbCyC
              g$name*$10486$1RbCyC)))))))
   (g$parse-top-level-program$7598$1RbCyC
     g$parse-top-level-program$11086$1RbCyC
     (case-lambda
       ((g$e*$10521$1RbCyC)
        ((case-lambda
           ((g$t$10522$1RbCyC)
            ((case-lambda
               ((g$ls/false$10523$1RbCyC)
                (if (if g$ls/false$10523$1RbCyC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10524$1RbCyC
                               g$imp*$10525$1RbCyC
                               g$b*$10526$1RbCyC)
                             (eq? (g$syntax->datum$7653$1RbCyC
                                    g$import$10524$1RbCyC)
                                  'import)))
                          g$ls/false$10523$1RbCyC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10527$1RbCyC
                         g$imp*$10528$1RbCyC
                         g$b*$10529$1RbCyC)
                       (values g$imp*$10528$1RbCyC g$b*$10529$1RbCyC)))
                    g$ls/false$10523$1RbCyC)
                  ((case-lambda
                     ((g$t$10530$1RbCyC)
                      ((case-lambda
                         ((g$ls/false$10531$1RbCyC)
                          (if (if g$ls/false$10531$1RbCyC
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10532$1RbCyC
                                         g$x$10533$1RbCyC
                                         g$y$10534$1RbCyC)
                                       (eq? (g$syntax->datum$7653$1RbCyC
                                              g$import$10532$1RbCyC)
                                            'import)))
                                    g$ls/false$10531$1RbCyC))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10535$1RbCyC
                                   g$x$10536$1RbCyC
                                   g$y$10537$1RbCyC)
                                 (g$syntax-violation$7650$1RbCyC
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7258$1RbCyC
                                     g$e*$10521$1RbCyC))))
                              g$ls/false$10531$1RbCyC)
                            ((case-lambda
                               ((g$t$10538$1RbCyC)
                                ((case-lambda
                                   ((g$ls/false$10539$1RbCyC)
                                    (if g$ls/false$10539$1RbCyC
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10539$1RbCyC)
                                      (g$syntax-violation$7650$1RbCyC
                                        '#f
                                        '"invalid syntax"
                                        g$t$10538$1RbCyC))))
                                 (g$syntax-dispatch$7539$1RbCyC
                                   g$t$10538$1RbCyC
                                   '_))))
                             g$t$10530$1RbCyC))))
                       (g$syntax-dispatch$7539$1RbCyC
                         g$t$10530$1RbCyC
                         '((any . any) . any)))))
                   g$t$10522$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC
               g$t$10522$1RbCyC
               '((any . each-any) . each-any)))))
         g$e*$10521$1RbCyC))))
   (g$top-level-expander$7599$1RbCyC
     g$top-level-expander$11087$1RbCyC
     (case-lambda
       ((g$e*$10540$1RbCyC)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$7598$1RbCyC g$e*$10540$1RbCyC)))
          (case-lambda
            ((g$imp*$10543$1RbCyC g$b*$10544$1RbCyC)
             ((case-lambda
                ((g$b*$10545$1RbCyC g$imp*$10546$1RbCyC)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$7596$1RbCyC
                        '()
                        '()
                        g$imp*$10546$1RbCyC
                        g$b*$10545$1RbCyC
                        '#t)))
                   (case-lambda
                     ((g$imp*$10554$1RbCyC
                        g$invoke-req*$10555$1RbCyC
                        g$visit-req*$10556$1RbCyC
                        g$invoke-code$10557$1RbCyC
                        g$visit-code$10558$1RbCyC
                        g$export-subst$10559$1RbCyC
                        g$export-env$10560$1RbCyC)
                      ((case-lambda
                         ((g$export-env$10561$1RbCyC
                            g$export-subst$10562$1RbCyC
                            g$visit-code$10563$1RbCyC
                            g$invoke-code$10564$1RbCyC
                            g$visit-req*$10565$1RbCyC
                            g$invoke-req*$10566$1RbCyC
                            g$imp*$10567$1RbCyC)
                          (values
                            g$invoke-req*$10566$1RbCyC
                            g$invoke-code$10564$1RbCyC)))
                       g$export-env$10560$1RbCyC
                       g$export-subst$10559$1RbCyC
                       g$visit-code$10558$1RbCyC
                       g$invoke-code$10557$1RbCyC
                       g$visit-req*$10556$1RbCyC
                       g$invoke-req*$10555$1RbCyC
                       g$imp*$10554$1RbCyC))))))
              g$b*$10544$1RbCyC
              g$imp*$10543$1RbCyC)))))))
   (g$8740$7600$1RbCyC
     g$8740$11088$1RbCyC
     (make-record-type-descriptor
       'env
       '#f
       'g$8743$1RbCyC
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8742$7601$1RbCyC g$8742$11089$1RbCyC '#f)
   (g$8741$7602$1RbCyC
     g$8741$11090$1RbCyC
     (make-record-constructor-descriptor
       g$8740$7600$1RbCyC
       '#f
       g$8742$7601$1RbCyC))
   (g$env?$7603$1RbCyC
     g$env?$11091$1RbCyC
     (record-predicate g$8740$7600$1RbCyC))
   (g$make-env$7604$1RbCyC
     g$make-env$11092$1RbCyC
     (record-constructor g$8741$7602$1RbCyC))
   (g$env-names$7605$1RbCyC
     g$env-names$11093$1RbCyC
     (record-accessor g$8740$7600$1RbCyC '0))
   (g$env-labels$7606$1RbCyC
     g$env-labels$11094$1RbCyC
     (record-accessor g$8740$7600$1RbCyC '1))
   (g$env-itc$7607$1RbCyC
     g$env-itc$11095$1RbCyC
     (record-accessor g$8740$7600$1RbCyC '2))
   (g$set-env-names!$7608$1RbCyC
     g$set-env-names!$11096$1RbCyC
     (record-mutator g$8740$7600$1RbCyC '0))
   (g$set-env-labels!$7609$1RbCyC
     g$set-env-labels!$11097$1RbCyC
     (record-mutator g$8740$7600$1RbCyC '1))
   (g$set-env-itc!$7610$1RbCyC
     g$set-env-itc!$11098$1RbCyC
     (record-mutator g$8740$7600$1RbCyC '2))
   (g$rp$7611$1RbCyC
     g$rp$11099$1RbCyC
     (make-record-printer
       'env
       (case-lambda
         ((g$x$10568$1RbCyC g$p$10569$1RbCyC)
          (display '"#<environment>" g$p$10569$1RbCyC)))))
   (g$8759$7612$1RbCyC
     g$8759$11100$1RbCyC
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8762$1RbCyC
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8761$7613$1RbCyC g$8761$11101$1RbCyC '#f)
   (g$8760$7614$1RbCyC
     g$8760$11102$1RbCyC
     (make-record-constructor-descriptor
       g$8759$7612$1RbCyC
       '#f
       g$8761$7613$1RbCyC))
   (g$interaction-env?$7615$1RbCyC
     g$interaction-env?$11103$1RbCyC
     (record-predicate g$8759$7612$1RbCyC))
   (g$make-interaction-env$7616$1RbCyC
     g$make-interaction-env$11104$1RbCyC
     (record-constructor g$8760$7614$1RbCyC))
   (g$interaction-env-rib$7617$1RbCyC
     g$interaction-env-rib$11105$1RbCyC
     (record-accessor g$8759$7612$1RbCyC '0))
   (g$interaction-env-r$7618$1RbCyC
     g$interaction-env-r$11106$1RbCyC
     (record-accessor g$8759$7612$1RbCyC '1))
   (g$interaction-env-locs$7619$1RbCyC
     g$interaction-env-locs$11107$1RbCyC
     (record-accessor g$8759$7612$1RbCyC '2))
   (g$set-interaction-env-rib!$7620$1RbCyC
     g$set-interaction-env-rib!$11108$1RbCyC
     (record-mutator g$8759$7612$1RbCyC '0))
   (g$set-interaction-env-r!$7621$1RbCyC
     g$set-interaction-env-r!$11109$1RbCyC
     (record-mutator g$8759$7612$1RbCyC '1))
   (g$set-interaction-env-locs!$7622$1RbCyC
     g$set-interaction-env-locs!$11110$1RbCyC
     (record-mutator g$8759$7612$1RbCyC '2))
   (g$rp$7623$1RbCyC
     g$rp$11111$1RbCyC
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$10570$1RbCyC g$p$10571$1RbCyC)
          (display '"#<environment>" g$p$10571$1RbCyC)))))
   (g$interaction-environment-symbols$7624$1RbCyC
     g$interaction-environment-symbols$11112$1RbCyC
     (case-lambda
       (()
        (g$environment-symbols$7628$1RbCyC
          (g$interaction-environment$7656$1RbCyC)))))
   (g$environment-bindings$7625$1RbCyC
     g$environment-bindings$11113$1RbCyC
     (case-lambda
       ((g$e$10572$1RbCyC)
        (vector->list
          (vector-map
            (case-lambda
              ((g$name$10573$1RbCyC g$label$10574$1RbCyC)
               (g$parse-binding$7626$1RbCyC
                 (cons
                   g$name$10573$1RbCyC
                   (g$imported-label->binding$7070$1RbCyC
                     g$label$10574$1RbCyC)))))
            (g$env-names$7605$1RbCyC g$e$10572$1RbCyC)
            (g$env-labels$7606$1RbCyC g$e$10572$1RbCyC))))))
   (g$parse-binding$7626$1RbCyC
     g$parse-binding$11114$1RbCyC
     (case-lambda
       ((g$b$10575$1RbCyC)
        (cons
          (car g$b$10575$1RbCyC)
          ((case-lambda
             ((g$t$10576$1RbCyC)
              (if (g$memv$4990$1RbCyC g$t$10576$1RbCyC '(core-prim global))
                'procedure
                (if (g$memv$4990$1RbCyC
                      g$t$10576$1RbCyC
                      '(core-macro macro global-macro))
                  'syntax
                  (if (g$memv$4990$1RbCyC g$t$10576$1RbCyC '($core-rtd))
                    'record
                    (if (eq? (car g$b$10575$1RbCyC)
                             (g$cadr$5159$1RbCyC g$b$10575$1RbCyC))
                      'syntax
                      'unknown))))))
           (g$cadr$5159$1RbCyC g$b$10575$1RbCyC))))))
   (g$environment?$7627$1RbCyC
     g$environment?$11115$1RbCyC
     (case-lambda
       ((g$x$10577$1RbCyC)
        ((case-lambda
           ((g$t$10578$1RbCyC)
            (if g$t$10578$1RbCyC
              g$t$10578$1RbCyC
              (begin '#f (g$interaction-env?$7615$1RbCyC g$x$10577$1RbCyC)))))
         (g$env?$7603$1RbCyC g$x$10577$1RbCyC)))))
   (g$environment-symbols$7628$1RbCyC
     g$environment-symbols$11116$1RbCyC
     (case-lambda
       ((g$x$10579$1RbCyC)
        (if (g$env?$7603$1RbCyC g$x$10579$1RbCyC)
          (vector->list (g$env-names$7605$1RbCyC g$x$10579$1RbCyC))
          (if (g$interaction-env?$7615$1RbCyC g$x$10579$1RbCyC)
            (map values
                 (g$rib-sym*$7211$1RbCyC
                   (g$interaction-env-rib$7617$1RbCyC g$x$10579$1RbCyC)))
            (assertion-violation
              'environment-symbols
              '"not an environment"
              g$x$10579$1RbCyC))))))
   (g$environment$7629$1RbCyC
     g$environment$11117$1RbCyC
     (case-lambda
       (g$imp*$10580$1RbCyC
        ((case-lambda
           ((g$itc$10581$1RbCyC)
            ((case-lambda
               ((g$imp-collector$10584$1RbCyC g$imp-collector$10585$1RbCyC)
                ((case-lambda
                   ((g$swap$10586$1RbCyC)
                    (dynamic-wind
                      g$swap$10586$1RbCyC
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$7588$1RbCyC
                                g$imp*$10580$1RbCyC)))
                           (case-lambda
                             ((g$subst-names$10589$1RbCyC
                                g$subst-labels$10590$1RbCyC)
                              ((case-lambda
                                 ((g$subst-labels$10591$1RbCyC
                                    g$subst-names$10592$1RbCyC)
                                  (g$make-env$7604$1RbCyC
                                    g$subst-names$10592$1RbCyC
                                    g$subst-labels$10591$1RbCyC
                                    g$itc$10581$1RbCyC)))
                               g$subst-labels$10590$1RbCyC
                               g$subst-names$10589$1RbCyC))))))
                      g$swap$10586$1RbCyC)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$10593$1RbCyC)
                        (begin
                          (g$imp-collector$10584$1RbCyC
                            g$imp-collector$10585$1RbCyC)
                          (set! g$imp-collector$10585$1RbCyC
                            g$t$10593$1RbCyC))))
                     (g$imp-collector$10584$1RbCyC)))))))
             g$imp-collector$7593$1RbCyC
             g$itc$10581$1RbCyC)))
         (g$make-collector$7590$1RbCyC)))))
   (g$null-environment$7630$1RbCyC
     g$null-environment$11118$1RbCyC
     (case-lambda
       ((g$n$10594$1RbCyC)
        (begin
          (if (not (eqv? g$n$10594$1RbCyC '5))
            (assertion-violation 'null-environment '"not 5" g$n$10594$1RbCyC)
            (void))
          (g$environment$7629$1RbCyC '(psyntax null-environment-5))))))
   (g$scheme-report-environment$7631$1RbCyC
     g$scheme-report-environment$11119$1RbCyC
     (case-lambda
       ((g$n$10595$1RbCyC)
        (begin
          (if (not (eqv? g$n$10595$1RbCyC '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$10595$1RbCyC)
            (void))
          (g$environment$7629$1RbCyC '(psyntax scheme-report-environment-5))))))
   (g$expand$7632$1RbCyC
     g$expand$11120$1RbCyC
     (case-lambda
       ((g$x$10596$1RbCyC g$env$10597$1RbCyC)
        (if (g$env?$7603$1RbCyC g$env$10597$1RbCyC)
          ((case-lambda
             ((g$rib$10598$1RbCyC)
              ((case-lambda
                 ((g$x$10599$1RbCyC
                    g$itc$10600$1RbCyC
                    g$rtc$10601$1RbCyC
                    g$vtc$10602$1RbCyC)
                  ((case-lambda
                     ((g$x$10603$1RbCyC)
                      (begin
                        (g$seal-rib!$7227$1RbCyC g$rib$10598$1RbCyC)
                        (values g$x$10603$1RbCyC (g$rtc$10601$1RbCyC)))))
                   ((case-lambda
                      ((g$top-level-context$10612$1RbCyC
                         g$inv-collector$10613$1RbCyC
                         g$vis-collector$10614$1RbCyC
                         g$imp-collector$10615$1RbCyC
                         g$top-level-context$10616$1RbCyC
                         g$inv-collector$10617$1RbCyC
                         g$vis-collector$10618$1RbCyC
                         g$imp-collector$10619$1RbCyC)
                       ((case-lambda
                          ((g$swap$10620$1RbCyC)
                           (dynamic-wind
                             g$swap$10620$1RbCyC
                             (case-lambda
                               (()
                                (g$chi-expr$7557$1RbCyC
                                  g$x$10599$1RbCyC
                                  '()
                                  '())))
                             g$swap$10620$1RbCyC)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$10621$1RbCyC)
                                 (begin
                                   (g$top-level-context$10612$1RbCyC
                                     g$top-level-context$10616$1RbCyC)
                                   (set! g$top-level-context$10616$1RbCyC
                                     g$t$10621$1RbCyC))))
                              (g$top-level-context$10612$1RbCyC))
                             ((case-lambda
                                ((g$t$10622$1RbCyC)
                                 (begin
                                   (g$inv-collector$10613$1RbCyC
                                     g$inv-collector$10617$1RbCyC)
                                   (set! g$inv-collector$10617$1RbCyC
                                     g$t$10622$1RbCyC))))
                              (g$inv-collector$10613$1RbCyC))
                             ((case-lambda
                                ((g$t$10623$1RbCyC)
                                 (begin
                                   (g$vis-collector$10614$1RbCyC
                                     g$vis-collector$10618$1RbCyC)
                                   (set! g$vis-collector$10618$1RbCyC
                                     g$t$10623$1RbCyC))))
                              (g$vis-collector$10614$1RbCyC))
                             ((case-lambda
                                ((g$t$10624$1RbCyC)
                                 (begin
                                   (g$imp-collector$10615$1RbCyC
                                     g$imp-collector$10619$1RbCyC)
                                   (set! g$imp-collector$10619$1RbCyC
                                     g$t$10624$1RbCyC))))
                              (g$imp-collector$10615$1RbCyC))))))))
                    g$top-level-context$7657$1RbCyC
                    g$inv-collector$7591$1RbCyC
                    g$vis-collector$7592$1RbCyC
                    g$imp-collector$7593$1RbCyC
                    '#f
                    g$rtc$10601$1RbCyC
                    g$vtc$10602$1RbCyC
                    g$itc$10600$1RbCyC))))
               (g$make-stx$7234$1RbCyC
                 g$x$10596$1RbCyC
                 g$top-mark*$7198$1RbCyC
                 (list g$rib$10598$1RbCyC)
                 '())
               (g$env-itc$7607$1RbCyC g$env$10597$1RbCyC)
               (g$make-collector$7590$1RbCyC)
               (g$make-collector$7590$1RbCyC))))
           (g$make-top-rib$7589$1RbCyC
             (g$env-names$7605$1RbCyC g$env$10597$1RbCyC)
             (g$env-labels$7606$1RbCyC g$env$10597$1RbCyC)))
          (if (g$interaction-env?$7615$1RbCyC g$env$10597$1RbCyC)
            ((case-lambda
               ((g$rib$10625$1RbCyC g$r$10626$1RbCyC g$rtc$10627$1RbCyC)
                ((case-lambda
                   ((g$x$10628$1RbCyC)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$10639$1RbCyC
                               g$inv-collector$10640$1RbCyC
                               g$vis-collector$10641$1RbCyC
                               g$imp-collector$10642$1RbCyC
                               g$top-level-context$10643$1RbCyC
                               g$inv-collector$10644$1RbCyC
                               g$vis-collector$10645$1RbCyC
                               g$imp-collector$10646$1RbCyC)
                             ((case-lambda
                                ((g$swap$10647$1RbCyC)
                                 (dynamic-wind
                                   g$swap$10647$1RbCyC
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$7595$1RbCyC
                                        g$x$10628$1RbCyC
                                        g$rib$10625$1RbCyC
                                        g$r$10626$1RbCyC)))
                                   g$swap$10647$1RbCyC)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$10648$1RbCyC)
                                       (begin
                                         (g$top-level-context$10639$1RbCyC
                                           g$top-level-context$10643$1RbCyC)
                                         (set! g$top-level-context$10643$1RbCyC
                                           g$t$10648$1RbCyC))))
                                    (g$top-level-context$10639$1RbCyC))
                                   ((case-lambda
                                      ((g$t$10649$1RbCyC)
                                       (begin
                                         (g$inv-collector$10640$1RbCyC
                                           g$inv-collector$10644$1RbCyC)
                                         (set! g$inv-collector$10644$1RbCyC
                                           g$t$10649$1RbCyC))))
                                    (g$inv-collector$10640$1RbCyC))
                                   ((case-lambda
                                      ((g$t$10650$1RbCyC)
                                       (begin
                                         (g$vis-collector$10641$1RbCyC
                                           g$vis-collector$10645$1RbCyC)
                                         (set! g$vis-collector$10645$1RbCyC
                                           g$t$10650$1RbCyC))))
                                    (g$vis-collector$10641$1RbCyC))
                                   ((case-lambda
                                      ((g$t$10651$1RbCyC)
                                       (begin
                                         (g$imp-collector$10642$1RbCyC
                                           g$imp-collector$10646$1RbCyC)
                                         (set! g$imp-collector$10646$1RbCyC
                                           g$t$10651$1RbCyC))))
                                    (g$imp-collector$10642$1RbCyC))))))))
                          g$top-level-context$7657$1RbCyC
                          g$inv-collector$7591$1RbCyC
                          g$vis-collector$7592$1RbCyC
                          g$imp-collector$7593$1RbCyC
                          g$env$10597$1RbCyC
                          g$rtc$10627$1RbCyC
                          (g$make-collector$7590$1RbCyC)
                          (g$make-collector$7590$1RbCyC))))
                      (case-lambda
                        ((g$e$10652$1RbCyC g$r^$10653$1RbCyC)
                         ((case-lambda
                            ((g$r^$10654$1RbCyC g$e$10655$1RbCyC)
                             (begin
                               (g$set-interaction-env-r!$7621$1RbCyC
                                 g$env$10597$1RbCyC
                                 g$r^$10654$1RbCyC)
                               (values g$e$10655$1RbCyC (g$rtc$10627$1RbCyC)))))
                          g$r^$10653$1RbCyC
                          g$e$10652$1RbCyC))))))
                 (g$make-stx$7234$1RbCyC
                   g$x$10596$1RbCyC
                   g$top-mark*$7198$1RbCyC
                   (list g$rib$10625$1RbCyC)
                   '()))))
             (g$interaction-env-rib$7617$1RbCyC g$env$10597$1RbCyC)
             (g$interaction-env-r$7618$1RbCyC g$env$10597$1RbCyC)
             (g$make-collector$7590$1RbCyC))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$10597$1RbCyC))))))
   (g$eval$7633$1RbCyC
     g$eval$11121$1RbCyC
     (case-lambda
       ((g$x$10656$1RbCyC g$env$10657$1RbCyC)
        (begin
          (if (not (g$environment?$7627$1RbCyC g$env$10657$1RbCyC))
            (error 'eval '"not an environment" g$env$10657$1RbCyC)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$7632$1RbCyC g$x$10656$1RbCyC g$env$10657$1RbCyC)))
            (case-lambda
              ((g$x$10660$1RbCyC g$invoke-req*$10661$1RbCyC)
               ((case-lambda
                  ((g$invoke-req*$10662$1RbCyC g$x$10663$1RbCyC)
                   (begin
                     (for-each
                       g$invoke-library$7071$1RbCyC
                       g$invoke-req*$10662$1RbCyC)
                     (eval-core
                       (g$expanded->core$6770$1RbCyC g$x$10663$1RbCyC)))))
                g$invoke-req*$10661$1RbCyC
                g$x$10660$1RbCyC))))))))
   (g$library-expander$7634$1RbCyC
     g$library-expander$11122$1RbCyC
     (case-lambda
       ((g$x$10664$1RbCyC g$filename$10665$1RbCyC g$verify-name$10666$1RbCyC)
        (letrec* ((g$build-visit-code$10667$1RbCyC
                    (case-lambda
                      ((g$macro*$10710$1RbCyC)
                       (if (null? g$macro*$10710$1RbCyC)
                         (g$build-void$7191$1RbCyC)
                         (g$build-sequence$7190$1RbCyC
                           '#f
                           (map (case-lambda
                                  ((g$x$10711$1RbCyC)
                                   ((case-lambda
                                      ((g$loc$10712$1RbCyC g$src$10713$1RbCyC)
                                       (list
                                         'set!
                                         g$loc$10712$1RbCyC
                                         g$src$10713$1RbCyC)))
                                    (car g$x$10711$1RbCyC)
                                    (g$cddr$5161$1RbCyC g$x$10711$1RbCyC))))
                                g$macro*$10710$1RbCyC))))))
                  (g$visit!$10668$1RbCyC
                    (case-lambda
                      ((g$macro*$10706$1RbCyC)
                       (for-each
                         (case-lambda
                           ((g$x$10707$1RbCyC)
                            ((case-lambda
                               ((g$loc$10708$1RbCyC g$proc$10709$1RbCyC)
                                (set-symbol-value!
                                  g$loc$10708$1RbCyC
                                  g$proc$10709$1RbCyC)))
                             (car g$x$10707$1RbCyC)
                             (g$cadr$5159$1RbCyC g$x$10707$1RbCyC))))
                         g$macro*$10706$1RbCyC)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$7597$1RbCyC
                 g$x$10664$1RbCyC
                 g$verify-name$10666$1RbCyC)))
            (case-lambda
              ((g$name$10678$1RbCyC
                 g$ver$10679$1RbCyC
                 g$imp*$10680$1RbCyC
                 g$inv*$10681$1RbCyC
                 g$vis*$10682$1RbCyC
                 g$invoke-code$10683$1RbCyC
                 g$macro*$10684$1RbCyC
                 g$export-subst$10685$1RbCyC
                 g$export-env$10686$1RbCyC)
               ((case-lambda
                  ((g$export-env$10687$1RbCyC
                     g$export-subst$10688$1RbCyC
                     g$macro*$10689$1RbCyC
                     g$invoke-code$10690$1RbCyC
                     g$vis*$10691$1RbCyC
                     g$inv*$10692$1RbCyC
                     g$imp*$10693$1RbCyC
                     g$ver$10694$1RbCyC
                     g$name$10695$1RbCyC)
                   ((case-lambda
                      ((g$id$10696$1RbCyC
                         g$name$10697$1RbCyC
                         g$ver$10698$1RbCyC
                         g$imp*$10699$1RbCyC
                         g$vis*$10700$1RbCyC
                         g$inv*$10701$1RbCyC
                         g$visit-proc$10702$1RbCyC
                         g$invoke-proc$10703$1RbCyC
                         g$visit-code$10704$1RbCyC
                         g$invoke-code$10705$1RbCyC)
                       (begin
                         (g$install-library$7069$1RbCyC
                           g$id$10696$1RbCyC
                           g$name$10697$1RbCyC
                           g$ver$10698$1RbCyC
                           g$imp*$10699$1RbCyC
                           g$vis*$10700$1RbCyC
                           g$inv*$10701$1RbCyC
                           g$export-subst$10688$1RbCyC
                           g$export-env$10687$1RbCyC
                           g$visit-proc$10702$1RbCyC
                           g$invoke-proc$10703$1RbCyC
                           g$visit-code$10704$1RbCyC
                           g$invoke-code$10705$1RbCyC
                           '#t
                           g$filename$10665$1RbCyC)
                         (values
                           g$id$10696$1RbCyC
                           g$name$10697$1RbCyC
                           g$ver$10698$1RbCyC
                           g$imp*$10699$1RbCyC
                           g$vis*$10700$1RbCyC
                           g$inv*$10701$1RbCyC
                           g$invoke-code$10705$1RbCyC
                           g$visit-code$10704$1RbCyC
                           g$export-subst$10688$1RbCyC
                           g$export-env$10687$1RbCyC))))
                    (gensym)
                    g$name$10695$1RbCyC
                    g$ver$10694$1RbCyC
                    (map g$library-spec$7075$1RbCyC g$imp*$10693$1RbCyC)
                    (map g$library-spec$7075$1RbCyC g$vis*$10691$1RbCyC)
                    (map g$library-spec$7075$1RbCyC g$inv*$10692$1RbCyC)
                    (case-lambda
                      (() (g$visit!$10668$1RbCyC g$macro*$10689$1RbCyC)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$6770$1RbCyC
                           g$invoke-code$10690$1RbCyC))))
                    (g$build-visit-code$10667$1RbCyC g$macro*$10689$1RbCyC)
                    g$invoke-code$10690$1RbCyC)))
                g$export-env$10686$1RbCyC
                g$export-subst$10685$1RbCyC
                g$macro*$10684$1RbCyC
                g$invoke-code$10683$1RbCyC
                g$vis*$10682$1RbCyC
                g$inv*$10681$1RbCyC
                g$imp*$10680$1RbCyC
                g$ver$10679$1RbCyC
                g$name$10678$1RbCyC))))))
       ((g$x$10714$1RbCyC g$filename$10715$1RbCyC)
        (g$library-expander$7634$1RbCyC
          g$x$10714$1RbCyC
          g$filename$10715$1RbCyC
          (case-lambda ((g$x$10716$1RbCyC) (values)))))
       ((g$x$10717$1RbCyC)
        (g$library-expander$7634$1RbCyC
          g$x$10717$1RbCyC
          '#f
          (case-lambda ((g$x$10718$1RbCyC) (values)))))))
   (g$boot-library-expand$7635$1RbCyC
     g$boot-library-expand$11123$1RbCyC
     (case-lambda
       ((g$x$10719$1RbCyC)
        (call-with-values
          (case-lambda (() (g$library-expander$7634$1RbCyC g$x$10719$1RbCyC)))
          (case-lambda
            ((g$id$10730$1RbCyC
               g$name$10731$1RbCyC
               g$ver$10732$1RbCyC
               g$imp*$10733$1RbCyC
               g$vis*$10734$1RbCyC
               g$inv*$10735$1RbCyC
               g$invoke-code$10736$1RbCyC
               g$visit-code$10737$1RbCyC
               g$export-subst$10738$1RbCyC
               g$export-env$10739$1RbCyC)
             ((case-lambda
                ((g$export-env$10740$1RbCyC
                   g$export-subst$10741$1RbCyC
                   g$visit-code$10742$1RbCyC
                   g$invoke-code$10743$1RbCyC
                   g$inv*$10744$1RbCyC
                   g$vis*$10745$1RbCyC
                   g$imp*$10746$1RbCyC
                   g$ver$10747$1RbCyC
                   g$name$10748$1RbCyC
                   g$id$10749$1RbCyC)
                 (values
                   g$name$10748$1RbCyC
                   g$invoke-code$10743$1RbCyC
                   g$export-subst$10741$1RbCyC
                   g$export-env$10740$1RbCyC)))
              g$export-env$10739$1RbCyC
              g$export-subst$10738$1RbCyC
              g$visit-code$10737$1RbCyC
              g$invoke-code$10736$1RbCyC
              g$inv*$10735$1RbCyC
              g$vis*$10734$1RbCyC
              g$imp*$10733$1RbCyC
              g$ver$10732$1RbCyC
              g$name$10731$1RbCyC
              g$id$10730$1RbCyC)))))))
   (g$rev-map-append$7636$1RbCyC
     g$rev-map-append$11124$1RbCyC
     (case-lambda
       ((g$f$10750$1RbCyC g$ls$10751$1RbCyC g$ac$10752$1RbCyC)
        (if (null? g$ls$10751$1RbCyC)
          g$ac$10752$1RbCyC
          (g$rev-map-append$7636$1RbCyC
            g$f$10750$1RbCyC
            (cdr g$ls$10751$1RbCyC)
            (cons
              (g$f$10750$1RbCyC (car g$ls$10751$1RbCyC))
              g$ac$10752$1RbCyC))))))
   (g$build-exports$7637$1RbCyC
     g$build-exports$11125$1RbCyC
     (case-lambda
       ((g$lex*+loc*$10753$1RbCyC g$init*$10754$1RbCyC)
        (g$build-sequence$7190$1RbCyC
          '#f
          (cons
            (g$build-void$7191$1RbCyC)
            (g$rev-map-append$7636$1RbCyC
              (case-lambda
                ((g$x$10755$1RbCyC)
                 (list 'set! (cdr g$x$10755$1RbCyC) (car g$x$10755$1RbCyC))))
              g$lex*+loc*$10753$1RbCyC
              g$init*$10754$1RbCyC))))))
   (g$make-export-subst$7638$1RbCyC
     g$make-export-subst$11126$1RbCyC
     (case-lambda
       ((g$name*$10756$1RbCyC g$id*$10757$1RbCyC)
        (map (case-lambda
               ((g$name$10758$1RbCyC g$id$10759$1RbCyC)
                ((case-lambda
                   ((g$label$10760$1RbCyC)
                    (begin
                      (if (not g$label$10760$1RbCyC)
                        (g$syntax-violation$7650$1RbCyC
                          '#f
                          '"cannot export unbound identifier"
                          g$id$10759$1RbCyC)
                        (void))
                      (cons g$name$10758$1RbCyC g$label$10760$1RbCyC))))
                 (g$id->label$7274$1RbCyC g$id$10759$1RbCyC))))
             g$name*$10756$1RbCyC
             g$id*$10757$1RbCyC))))
   (g$make-export-env/macros$7639$1RbCyC
     g$make-export-env/macros$11127$1RbCyC
     (case-lambda
       ((g$lex*$10761$1RbCyC g$loc*$10762$1RbCyC g$r$10763$1RbCyC)
        (letrec* ((g$lookup$10764$1RbCyC
                    (case-lambda
                      ((g$x$10779$1RbCyC)
                       ((letrec ((g$f$10780$1RbCyC
                                   (case-lambda
                                     ((g$x$10781$1RbCyC
                                        g$lex*$10782$1RbCyC
                                        g$loc*$10783$1RbCyC)
                                      (if (pair? g$lex*$10782$1RbCyC)
                                        (if (eq? g$x$10781$1RbCyC
                                                 (car g$lex*$10782$1RbCyC))
                                          (car g$loc*$10783$1RbCyC)
                                          (g$f$10780$1RbCyC
                                            g$x$10781$1RbCyC
                                            (cdr g$lex*$10782$1RbCyC)
                                            (cdr g$loc*$10783$1RbCyC)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$10780$1RbCyC)
                        g$x$10779$1RbCyC
                        g$lex*$10761$1RbCyC
                        g$loc*$10762$1RbCyC)))))
          ((letrec ((g$f$10765$1RbCyC
                      (case-lambda
                        ((g$r$10766$1RbCyC
                           g$env$10767$1RbCyC
                           g$global*$10768$1RbCyC
                           g$macro*$10769$1RbCyC)
                         (if (null? g$r$10766$1RbCyC)
                           (values
                             g$env$10767$1RbCyC
                             g$global*$10768$1RbCyC
                             g$macro*$10769$1RbCyC)
                           ((case-lambda
                              ((g$x$10770$1RbCyC)
                               ((case-lambda
                                  ((g$label$10771$1RbCyC g$b$10772$1RbCyC)
                                   ((case-lambda
                                      ((g$t$10773$1RbCyC)
                                       (if (g$memv$4990$1RbCyC
                                             g$t$10773$1RbCyC
                                             '(lexical))
                                         ((case-lambda
                                            ((g$v$10774$1RbCyC)
                                             ((case-lambda
                                                ((g$loc$10775$1RbCyC
                                                   g$type$10776$1RbCyC)
                                                 (g$f$10765$1RbCyC
                                                   (cdr g$r$10766$1RbCyC)
                                                   (cons
                                                     (g$cons*$4997$1RbCyC
                                                       g$label$10771$1RbCyC
                                                       g$type$10776$1RbCyC
                                                       g$loc$10775$1RbCyC)
                                                     g$env$10767$1RbCyC)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7483$1RbCyC
                                                         g$v$10774$1RbCyC)
                                                       g$loc$10775$1RbCyC)
                                                     g$global*$10768$1RbCyC)
                                                   g$macro*$10769$1RbCyC)))
                                              (g$lookup$10764$1RbCyC
                                                (g$lexical-var$7483$1RbCyC
                                                  g$v$10774$1RbCyC))
                                              (if (g$lexical-mutable?$7484$1RbCyC
                                                    g$v$10774$1RbCyC)
                                                'mutable
                                                'global))))
                                          (g$binding-value$7279$1RbCyC
                                            g$b$10772$1RbCyC))
                                         (if (g$memv$4990$1RbCyC
                                               g$t$10773$1RbCyC
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$10777$1RbCyC)
                                               (g$f$10765$1RbCyC
                                                 (cdr g$r$10766$1RbCyC)
                                                 (cons
                                                   (g$cons*$4997$1RbCyC
                                                     g$label$10771$1RbCyC
                                                     'global-macro
                                                     g$loc$10777$1RbCyC)
                                                   g$env$10767$1RbCyC)
                                                 g$global*$10768$1RbCyC
                                                 (cons
                                                   (cons
                                                     g$loc$10777$1RbCyC
                                                     (g$binding-value$7279$1RbCyC
                                                       g$b$10772$1RbCyC))
                                                   g$macro*$10769$1RbCyC))))
                                            (gensym))
                                           (if (g$memv$4990$1RbCyC
                                                 g$t$10773$1RbCyC
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$10778$1RbCyC)
                                                 (g$f$10765$1RbCyC
                                                   (cdr g$r$10766$1RbCyC)
                                                   (cons
                                                     (g$cons*$4997$1RbCyC
                                                       g$label$10771$1RbCyC
                                                       'global-macro!
                                                       g$loc$10778$1RbCyC)
                                                     g$env$10767$1RbCyC)
                                                   g$global*$10768$1RbCyC
                                                   (cons
                                                     (cons
                                                       g$loc$10778$1RbCyC
                                                       (g$binding-value$7279$1RbCyC
                                                         g$b$10772$1RbCyC))
                                                     g$macro*$10769$1RbCyC))))
                                              (gensym))
                                             (if (g$memv$4990$1RbCyC
                                                   g$t$10773$1RbCyC
                                                   '($rtd $module))
                                               (g$f$10765$1RbCyC
                                                 (cdr g$r$10766$1RbCyC)
                                                 (cons
                                                   g$x$10770$1RbCyC
                                                   g$env$10767$1RbCyC)
                                                 g$global*$10768$1RbCyC
                                                 g$macro*$10769$1RbCyC)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$7278$1RbCyC
                                                   g$b$10772$1RbCyC)
                                                 (g$binding-value$7279$1RbCyC
                                                   g$b$10772$1RbCyC))))))))
                                    (g$binding-type$7278$1RbCyC
                                      g$b$10772$1RbCyC))))
                                (car g$x$10770$1RbCyC)
                                (cdr g$x$10770$1RbCyC))))
                            (car g$r$10766$1RbCyC)))))))
             g$f$10765$1RbCyC)
           g$r$10763$1RbCyC
           '()
           '()
           '())))))
   (g$generate-temporaries$7640$1RbCyC
     g$generate-temporaries$11128$1RbCyC
     (case-lambda
       ((g$ls$10784$1RbCyC)
        ((case-lambda
           ((g$t$10785$1RbCyC)
            ((case-lambda
               ((g$ls/false$10786$1RbCyC)
                (if g$ls/false$10786$1RbCyC
                  (apply
                    (case-lambda
                      ((g$ls$10787$1RbCyC)
                       (map (case-lambda
                              ((g$x$10788$1RbCyC)
                               (g$make-stx$7234$1RbCyC
                                 ((case-lambda
                                    ((g$x$10789$1RbCyC)
                                     (if ((case-lambda
                                            ((g$t$10790$1RbCyC)
                                             (if g$t$10790$1RbCyC
                                               g$t$10790$1RbCyC
                                               (begin
                                                 '#f
                                                 (string? g$x$10789$1RbCyC)))))
                                          (symbol? g$x$10789$1RbCyC))
                                       (gensym g$x$10789$1RbCyC)
                                       (gensym 't))))
                                  (g$syntax->datum$7653$1RbCyC
                                    g$x$10788$1RbCyC))
                                 g$top-mark*$7198$1RbCyC
                                 '()
                                 '())))
                            g$ls$10787$1RbCyC)))
                    g$ls/false$10786$1RbCyC)
                  ((case-lambda
                     ((g$t$10791$1RbCyC)
                      ((case-lambda
                         ((g$ls/false$10792$1RbCyC)
                          (if g$ls/false$10792$1RbCyC
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$10792$1RbCyC)
                            (g$syntax-violation$7650$1RbCyC
                              '#f
                              '"invalid syntax"
                              g$t$10791$1RbCyC))))
                       (g$syntax-dispatch$7539$1RbCyC g$t$10791$1RbCyC '_))))
                   g$t$10785$1RbCyC))))
             (g$syntax-dispatch$7539$1RbCyC g$t$10785$1RbCyC 'each-any))))
         g$ls$10784$1RbCyC))))
   (g$free-identifier=?$7641$1RbCyC
     g$free-identifier=?$11129$1RbCyC
     (case-lambda
       ((g$x$10793$1RbCyC g$y$10794$1RbCyC)
        (if (g$id?$7261$1RbCyC g$x$10793$1RbCyC)
          (if (g$id?$7261$1RbCyC g$y$10794$1RbCyC)
            (g$free-id=?$7265$1RbCyC g$x$10793$1RbCyC g$y$10794$1RbCyC)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$10794$1RbCyC))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$10793$1RbCyC)))))
   (g$bound-identifier=?$7642$1RbCyC
     g$bound-identifier=?$11130$1RbCyC
     (case-lambda
       ((g$x$10795$1RbCyC g$y$10796$1RbCyC)
        (if (g$id?$7261$1RbCyC g$x$10795$1RbCyC)
          (if (g$id?$7261$1RbCyC g$y$10796$1RbCyC)
            (g$bound-id=?$7264$1RbCyC g$x$10795$1RbCyC g$y$10796$1RbCyC)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$10796$1RbCyC))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$10795$1RbCyC)))))
   (g$make-source-condition$7643$1RbCyC
     g$make-source-condition$11131$1RbCyC
     (case-lambda
       ((g$x$10797$1RbCyC)
        (letrec* ((g$11681$10798$1RbCyC
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$11684$1RbCyC
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11683$10799$1RbCyC '#f)
                  (g$11682$10800$1RbCyC
                    (make-record-constructor-descriptor
                      g$11681$10798$1RbCyC
                      &condition-rcd
                      g$11683$10799$1RbCyC))
                  (g$11680$10801$1RbCyC (record-predicate g$11681$10798$1RbCyC))
                  (g$make-source-condition$10802$1RbCyC
                    (record-constructor g$11682$10800$1RbCyC))
                  (g$11678$10803$1RbCyC
                    (record-accessor g$11681$10798$1RbCyC '0))
                  (g$11679$10804$1RbCyC
                    (record-accessor g$11681$10798$1RbCyC '1))
                  (g$source-condition?$10805$1RbCyC
                    (condition-predicate g$11681$10798$1RbCyC))
                  (g$source-filename$10806$1RbCyC
                    (condition-accessor
                      g$11681$10798$1RbCyC
                      g$11678$10803$1RbCyC))
                  (g$source-character$10807$1RbCyC
                    (condition-accessor
                      g$11681$10798$1RbCyC
                      g$11679$10804$1RbCyC)))
          (if (pair? g$x$10797$1RbCyC)
            (g$make-source-condition$10802$1RbCyC
              (car g$x$10797$1RbCyC)
              (cdr g$x$10797$1RbCyC))
            (condition))))))
   (g$extract-position-condition$7644$1RbCyC
     g$extract-position-condition$11132$1RbCyC
     (case-lambda
       ((g$x$10808$1RbCyC)
        (g$make-source-condition$7643$1RbCyC
          (g$expression-position$7645$1RbCyC g$x$10808$1RbCyC)))))
   (g$expression-position$7645$1RbCyC
     g$expression-position$11133$1RbCyC
     (case-lambda
       ((g$x$10809$1RbCyC)
        (if (g$stx?$7233$1RbCyC g$x$10809$1RbCyC)
          (begin
            '#f
            ((case-lambda
               ((g$x$10810$1RbCyC)
                (if (annotation? g$x$10810$1RbCyC)
                  (begin '#f (annotation-source g$x$10810$1RbCyC))
                  '#f)))
             (g$stx-expr$7235$1RbCyC g$x$10809$1RbCyC)))
          '#f))))
   (g$assertion-error$7646$1RbCyC
     g$assertion-error$11134$1RbCyC
     (case-lambda
       ((g$expr$10811$1RbCyC g$pos$10812$1RbCyC)
        (raise
          (condition
            (g$make-assertion-violation$5733$1RbCyC)
            (g$make-who-condition$5747$1RbCyC 'assert)
            (g$make-message-condition$5701$1RbCyC '"assertion failed")
            (g$make-irritants-condition$5739$1RbCyC (list g$expr$10811$1RbCyC))
            (g$make-source-condition$7643$1RbCyC g$pos$10812$1RbCyC))))))
   (g$syntax-error$7647$1RbCyC
     g$syntax-error$11135$1RbCyC
     (case-lambda
       ((g$x$10813$1RbCyC . g$args$10814$1RbCyC)
        (begin
          (if (not (g$for-all$4995$1RbCyC string? g$args$10814$1RbCyC))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$10814$1RbCyC)
            (void))
          (raise
            (condition
              (g$make-message-condition$5701$1RbCyC
                (if (null? g$args$10814$1RbCyC)
                  '"invalid syntax"
                  (apply string-append g$args$10814$1RbCyC)))
              (g$make-syntax-violation$5773$1RbCyC
                (g$syntax->datum$7653$1RbCyC g$x$10813$1RbCyC)
                '#f)
              (g$extract-position-condition$7644$1RbCyC g$x$10813$1RbCyC)
              (g$extract-trace$7648$1RbCyC g$x$10813$1RbCyC)))))))
   (g$extract-trace$7648$1RbCyC
     g$extract-trace$11136$1RbCyC
     (case-lambda
       ((g$x$10815$1RbCyC)
        (letrec* ((g$11708$10816$1RbCyC
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$11711$1RbCyC
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11710$10817$1RbCyC '#f)
                  (g$11709$10818$1RbCyC
                    (make-record-constructor-descriptor
                      g$11708$10816$1RbCyC
                      &condition-rcd
                      g$11710$10817$1RbCyC))
                  (g$11707$10819$1RbCyC (record-predicate g$11708$10816$1RbCyC))
                  (g$make-trace$10820$1RbCyC
                    (record-constructor g$11709$10818$1RbCyC))
                  (g$11706$10821$1RbCyC
                    (record-accessor g$11708$10816$1RbCyC '0))
                  (g$trace?$10822$1RbCyC
                    (condition-predicate g$11708$10816$1RbCyC))
                  (g$trace-form$10823$1RbCyC
                    (condition-accessor
                      g$11708$10816$1RbCyC
                      g$11706$10821$1RbCyC)))
          ((letrec ((g$f$10824$1RbCyC
                      (case-lambda
                        ((g$x$10825$1RbCyC)
                         (if (g$stx?$7233$1RbCyC g$x$10825$1RbCyC)
                           (apply
                             condition
                             (g$make-trace$10820$1RbCyC g$x$10825$1RbCyC)
                             (map g$f$10824$1RbCyC
                                  (g$stx-ae*$7238$1RbCyC g$x$10825$1RbCyC)))
                           (if (annotation? g$x$10825$1RbCyC)
                             (g$make-trace$10820$1RbCyC
                               (g$make-stx$7234$1RbCyC
                                 g$x$10825$1RbCyC
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$10824$1RbCyC)
           g$x$10815$1RbCyC)))))
   (g$syntax-violation*$7649$1RbCyC
     g$syntax-violation*$11137$1RbCyC
     (case-lambda
       ((g$who$10826$1RbCyC
          g$msg$10827$1RbCyC
          g$form$10828$1RbCyC
          g$condition-object$10829$1RbCyC)
        (begin
          (if (not (string? g$msg$10827$1RbCyC))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$10827$1RbCyC)
            (void))
          ((case-lambda
             ((g$who$10830$1RbCyC)
              (raise
                (condition
                  (if g$who$10830$1RbCyC
                    (g$make-who-condition$5747$1RbCyC g$who$10830$1RbCyC)
                    (condition))
                  (g$make-message-condition$5701$1RbCyC g$msg$10827$1RbCyC)
                  g$condition-object$10829$1RbCyC
                  (g$extract-position-condition$7644$1RbCyC g$form$10828$1RbCyC)
                  (g$extract-trace$7648$1RbCyC g$form$10828$1RbCyC)))))
           (if ((case-lambda
                  ((g$t$10831$1RbCyC)
                   (if g$t$10831$1RbCyC
                     g$t$10831$1RbCyC
                     (begin '#f (symbol? g$who$10826$1RbCyC)))))
                (string? g$who$10826$1RbCyC))
             g$who$10826$1RbCyC
             (if (not g$who$10826$1RbCyC)
               ((case-lambda
                  ((g$t$10832$1RbCyC)
                   ((case-lambda
                      ((g$ls/false$10833$1RbCyC)
                       (if (if g$ls/false$10833$1RbCyC
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$10834$1RbCyC)
                                    (g$id?$7261$1RbCyC g$id$10834$1RbCyC)))
                                 g$ls/false$10833$1RbCyC))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$10835$1RbCyC)
                              (g$syntax->datum$7653$1RbCyC g$id$10835$1RbCyC)))
                           g$ls/false$10833$1RbCyC)
                         ((case-lambda
                            ((g$t$10836$1RbCyC)
                             ((case-lambda
                                ((g$ls/false$10837$1RbCyC)
                                 (if (if g$ls/false$10837$1RbCyC
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$10838$1RbCyC
                                                g$rest$10839$1RbCyC)
                                              (g$id?$7261$1RbCyC
                                                g$id$10838$1RbCyC)))
                                           g$ls/false$10837$1RbCyC))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$10840$1RbCyC g$rest$10841$1RbCyC)
                                        (g$syntax->datum$7653$1RbCyC
                                          g$id$10840$1RbCyC)))
                                     g$ls/false$10837$1RbCyC)
                                   ((case-lambda
                                      ((g$t$10842$1RbCyC)
                                       ((case-lambda
                                          ((g$ls/false$10843$1RbCyC)
                                           (if g$ls/false$10843$1RbCyC
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$10843$1RbCyC)
                                             (g$syntax-violation$7650$1RbCyC
                                               '#f
                                               '"invalid syntax"
                                               g$t$10842$1RbCyC))))
                                        (g$syntax-dispatch$7539$1RbCyC
                                          g$t$10842$1RbCyC
                                          '_))))
                                    g$t$10836$1RbCyC))))
                              (g$syntax-dispatch$7539$1RbCyC
                                g$t$10836$1RbCyC
                                '(any . any)))))
                          g$t$10832$1RbCyC))))
                    (g$syntax-dispatch$7539$1RbCyC g$t$10832$1RbCyC 'any))))
                g$form$10828$1RbCyC)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$10826$1RbCyC))))))))
   (g$syntax-violation$7650$1RbCyC
     g$syntax-violation$11138$1RbCyC
     (case-lambda
       ((g$who$10844$1RbCyC g$msg$10845$1RbCyC g$form$10846$1RbCyC)
        (g$syntax-violation$7650$1RbCyC
          g$who$10844$1RbCyC
          g$msg$10845$1RbCyC
          g$form$10846$1RbCyC
          '#f))
       ((g$who$10847$1RbCyC
          g$msg$10848$1RbCyC
          g$form$10849$1RbCyC
          g$subform$10850$1RbCyC)
        (g$syntax-violation*$7649$1RbCyC
          g$who$10847$1RbCyC
          g$msg$10848$1RbCyC
          g$form$10849$1RbCyC
          (g$make-syntax-violation$5773$1RbCyC
            (g$syntax->datum$7653$1RbCyC g$form$10849$1RbCyC)
            (g$syntax->datum$7653$1RbCyC g$subform$10850$1RbCyC))))))
   (g$identifier?$7651$1RbCyC
     g$identifier?$11139$1RbCyC
     (case-lambda ((g$x$10851$1RbCyC) (g$id?$7261$1RbCyC g$x$10851$1RbCyC))))
   (g$datum->syntax$7652$1RbCyC
     g$datum->syntax$11140$1RbCyC
     (case-lambda
       ((g$id$10852$1RbCyC g$datum$10853$1RbCyC)
        (if (g$id?$7261$1RbCyC g$id$10852$1RbCyC)
          (g$datum->stx$7244$1RbCyC g$id$10852$1RbCyC g$datum$10853$1RbCyC)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$10852$1RbCyC)))))
   (g$syntax->datum$7653$1RbCyC
     g$syntax->datum$11141$1RbCyC
     (case-lambda
       ((g$x$10854$1RbCyC) (g$stx->datum$7272$1RbCyC g$x$10854$1RbCyC))))
   (g$compile-r6rs-top-level$7654$1RbCyC
     g$compile-r6rs-top-level$11142$1RbCyC
     (case-lambda
       ((g$x*$10855$1RbCyC)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7599$1RbCyC g$x*$10855$1RbCyC)))
          (case-lambda
            ((g$lib*$10858$1RbCyC g$invoke-code$10859$1RbCyC)
             ((case-lambda
                ((g$invoke-code$10860$1RbCyC g$lib*$10861$1RbCyC)
                 (case-lambda
                   (()
                    (begin
                      (for-each
                        g$invoke-library$7071$1RbCyC
                        g$lib*$10861$1RbCyC)
                      (eval-core
                        (g$expanded->core$6770$1RbCyC
                          g$invoke-code$10860$1RbCyC)))))))
              g$invoke-code$10859$1RbCyC
              g$lib*$10858$1RbCyC)))))))
   (g$pre-compile-r6rs-top-level$7655$1RbCyC
     g$pre-compile-r6rs-top-level$11143$1RbCyC
     (case-lambda
       ((g$x*$10862$1RbCyC)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7599$1RbCyC g$x*$10862$1RbCyC)))
          (case-lambda
            ((g$lib*$10865$1RbCyC g$invoke-code$10866$1RbCyC)
             ((case-lambda
                ((g$invoke-code$10867$1RbCyC g$lib*$10868$1RbCyC)
                 (begin
                   (for-each g$invoke-library$7071$1RbCyC g$lib*$10868$1RbCyC)
                   (compile-core
                     (g$expanded->core$6770$1RbCyC
                       g$invoke-code$10867$1RbCyC)))))
              g$invoke-code$10866$1RbCyC
              g$lib*$10865$1RbCyC)))))))
   (g$interaction-environment$7656$1RbCyC
     g$interaction-environment$11144$1RbCyC
     ((case-lambda
        ((g$the-env$10869$1RbCyC)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$10870$1RbCyC)
                (if g$t$10870$1RbCyC
                  g$t$10870$1RbCyC
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$10871$1RbCyC g$rib$10872$1RbCyC)
                        (begin
                          ((case-lambda
                             ((g$subst$10873$1RbCyC)
                              (begin
                                (g$set-rib-sym*!$7216$1RbCyC
                                  g$rib$10872$1RbCyC
                                  (map car g$subst$10873$1RbCyC))
                                (g$set-rib-mark**!$7217$1RbCyC
                                  g$rib$10872$1RbCyC
                                  (map (case-lambda
                                         ((g$x$10874$1RbCyC)
                                          g$top-mark*$7198$1RbCyC))
                                       g$subst$10873$1RbCyC))
                                (g$set-rib-label*!$7218$1RbCyC
                                  g$rib$10872$1RbCyC
                                  (map cdr g$subst$10873$1RbCyC)))))
                           (g$library-subst$7028$1RbCyC g$lib$10871$1RbCyC))
                          ((case-lambda
                             ((g$env$10875$1RbCyC)
                              (begin
                                (set! g$the-env$10869$1RbCyC g$env$10875$1RbCyC)
                                g$env$10875$1RbCyC)))
                           (g$make-interaction-env$7616$1RbCyC
                             g$rib$10872$1RbCyC
                             '()
                             '())))))
                     (g$find-library-by-name$7064$1RbCyC '(ironscheme))
                     (g$make-cache-rib$7222$1RbCyC))))))
             g$the-env$10869$1RbCyC)))))
      '#f))
   (g$top-level-context$7657$1RbCyC
     g$top-level-context$11145$1RbCyC
     (g$make-parameter$6524$1RbCyC '#f)))
  (g$current-library-expander$7061$1RbCyC g$library-expander$7634$1RbCyC))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$6767$1RbCyC
      (case-lambda
        ((g$x$11198$1RbCyC)
         ((case-lambda
            ((g$t$11199$1RbCyC)
             (if g$t$11199$1RbCyC (cdr g$t$11199$1RbCyC) '#f)))
          (g$assq$4985$1RbCyC
            g$x$11198$1RbCyC
            '((ellipsis-map . g$ellipsis-map$11032$1RbCyC)
              (ironscheme-build . g$ironscheme-build$11191$1RbCyC)
              (syntax-error . g$syntax-error$11135$1RbCyC)
              (syntax-dispatch . g$syntax-dispatch$11027$1RbCyC)
              (compile-system-libraries
                .
                g$compile-system-libraries$11193$1RbCyC)
              (compile->closure . g$compile->closure$11195$1RbCyC)
              (compile . g$compile$11194$1RbCyC)
              (load . g$load$11190$1RbCyC)
              (interaction-environment . g$interaction-environment$11144$1RbCyC)
              (string-ci>? . g$string-ci>?$5919$1RbCyC)
              (string-ci>=? . g$string-ci>=?$5921$1RbCyC)
              (string-ci=? . g$string-ci=?$5917$1RbCyC)
              (string-ci<? . g$string-ci<?$5918$1RbCyC)
              (string-ci<=? . g$string-ci<=?$5920$1RbCyC)
              (char-ci>? . g$char-ci>?$5924$1RbCyC)
              (char-ci>=? . g$char-ci>=?$5926$1RbCyC)
              (char-ci=? . g$char-ci=?$5922$1RbCyC)
              (char-ci<? . g$char-ci<?$5923$1RbCyC)
              (char-ci<=? . g$char-ci<=?$5925$1RbCyC)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$10965$1RbCyC)
              (variable-transformer? . g$variable-transformer?$10964$1RbCyC)
              (make-variable-transformer
                .
                g$make-variable-transformer$10963$1RbCyC)
              (identifier? . g$identifier?$11139$1RbCyC)
              (generate-temporaries . g$generate-temporaries$11128$1RbCyC)
              (free-identifier=? . g$free-identifier=?$11129$1RbCyC)
              (syntax->datum . g$syntax->datum$11141$1RbCyC)
              (datum->syntax . g$datum->syntax$11140$1RbCyC)
              (bound-identifier=? . g$bound-identifier=?$11130$1RbCyC)
              (delete-file . g$delete-file$5453$1RbCyC)
              (file-exists? . g$file-exists?$5452$1RbCyC)
              (list-sort . g$list-sort$5844$1RbCyC)
              (make-eqv-hashtable . g$make-eqv-hashtable$5434$1RbCyC)
              (make-eq-hashtable . g$make-eq-hashtable$5433$1RbCyC)
              (hashtable-update! . g$hashtable-update!$5440$1RbCyC)
              (hashtable-size . g$hashtable-size$5435$1RbCyC)
              (hashtable-set! . g$hashtable-set!$5437$1RbCyC)
              (hashtable-ref . g$hashtable-ref$5436$1RbCyC)
              (hashtable-delete! . g$hashtable-delete!$5438$1RbCyC)
              (hashtable-contains? . g$hashtable-contains?$5439$1RbCyC)
              (hashtable-clear! . g$hashtable-clear!$5441$1RbCyC)
              (call-with-output-file . g$call-with-output-file$6270$1RbCyC)
              (call-with-input-file . g$call-with-input-file$6269$1RbCyC)
              (with-output-to-file . g$with-output-to-file$6268$1RbCyC)
              (with-input-from-file . g$with-input-from-file$6267$1RbCyC)
              (port? . g$port?$6233$1RbCyC)
              (open-string-output-port . g$open-string-output-port$6232$1RbCyC)
              (make-i/o-write-error . g$make-i/o-write-error$6155$1RbCyC)
              (make-i/o-read-error . g$make-i/o-read-error$6149$1RbCyC)
              (make-i/o-port-error . g$make-i/o-port-error$6201$1RbCyC)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6161$1RbCyC)
              (make-i/o-filename-error . g$make-i/o-filename-error$6169$1RbCyC)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6177$1RbCyC)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6183$1RbCyC)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6195$1RbCyC)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6189$1RbCyC)
              (make-i/o-error . g$make-i/o-error$6143$1RbCyC)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6215$1RbCyC)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6209$1RbCyC)
              (i/o-write-error? . g$i/o-write-error?$6156$1RbCyC)
              (i/o-read-error? . g$i/o-read-error?$6150$1RbCyC)
              (i/o-port-error? . g$i/o-port-error?$6203$1RbCyC)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6163$1RbCyC)
              (i/o-error-position . g$i/o-error-position$6164$1RbCyC)
              (i/o-filename-error? . g$i/o-filename-error?$6171$1RbCyC)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6178$1RbCyC)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6184$1RbCyC)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6196$1RbCyC)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6190$1RbCyC)
              (i/o-error? . g$i/o-error?$6144$1RbCyC)
              (i/o-error-port . g$i/o-error-port$6204$1RbCyC)
              (i/o-error-filename . g$i/o-error-filename$6172$1RbCyC)
              (i/o-encoding-error? . g$i/o-encoding-error?$6217$1RbCyC)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6218$1RbCyC)
              (i/o-decoding-error? . g$i/o-decoding-error?$6210$1RbCyC)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$6234$1RbCyC)
              (scheme-report-environment
                .
                g$scheme-report-environment$11119$1RbCyC)
              (quotient . g$quotient$5811$1RbCyC)
              (null-environment . g$null-environment$11118$1RbCyC)
              (remainder . g$remainder$5812$1RbCyC)
              (modulo . g$modulo$5813$1RbCyC)
              (force . g$force$5815$1RbCyC)
              (command-line . g$command-line$11187$1RbCyC)
              (remove . g$remove$5000$1RbCyC)
              (remv . g$remv$5001$1RbCyC)
              (remp . g$remp$4983$1RbCyC)
              (remq . g$remq$5002$1RbCyC)
              (partition . g$partition$4982$1RbCyC)
              (memv . g$memv$4990$1RbCyC)
              (memq . g$memq$4989$1RbCyC)
              (memp . g$memp$4992$1RbCyC)
              (member . g$member$4991$1RbCyC)
              (exists . g$exists$4996$1RbCyC)
              (for-all . g$for-all$4995$1RbCyC)
              (fold-right . g$fold-right$4999$1RbCyC)
              (fold-left . g$fold-left$4998$1RbCyC)
              (find . g$find$4981$1RbCyC)
              (filter . g$filter$4984$1RbCyC)
              (cons* . g$cons*$4997$1RbCyC)
              (assv . g$assv$4986$1RbCyC)
              (assq . g$assq$4985$1RbCyC)
              (assp . g$assp$4988$1RbCyC)
              (assoc . g$assoc$4987$1RbCyC)
              (eval . g$eval$11121$1RbCyC)
              (environment . g$environment$11117$1RbCyC)
              (make-enumeration . g$make-enumeration$6401$1RbCyC)
              (enum-set=? . g$enum-set=?$6408$1RbCyC)
              (enum-set-universe . g$enum-set-universe$6402$1RbCyC)
              (enum-set-union . g$enum-set-union$6409$1RbCyC)
              (enum-set-subset? . g$enum-set-subset?$6407$1RbCyC)
              (enum-set-projection . g$enum-set-projection$6413$1RbCyC)
              (enum-set-member? . g$enum-set-member?$6406$1RbCyC)
              (enum-set-intersection . g$enum-set-intersection$6410$1RbCyC)
              (enum-set-indexer . g$enum-set-indexer$6403$1RbCyC)
              (enum-set-difference . g$enum-set-difference$6411$1RbCyC)
              (enum-set-constructor . g$enum-set-constructor$6404$1RbCyC)
              (enum-set-complement . g$enum-set-complement$6412$1RbCyC)
              (enum-set->list . g$enum-set->list$6405$1RbCyC)
              (who-condition? . g$who-condition?$5749$1RbCyC)
              (warning? . g$warning?$5710$1RbCyC)
              (violation? . g$violation?$5728$1RbCyC)
              (undefined-violation? . g$undefined-violation?$5784$1RbCyC)
              (syntax-violation? . g$syntax-violation?$5776$1RbCyC)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$5778$1RbCyC)
              (syntax-violation-form . g$syntax-violation-form$5777$1RbCyC)
              (syntax-violation . g$syntax-violation$11138$1RbCyC)
              (serious-condition? . g$serious-condition?$5716$1RbCyC)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$5756$1RbCyC)
              (message-condition? . g$message-condition?$5703$1RbCyC)
              (make-who-condition . g$make-who-condition$5747$1RbCyC)
              (make-warning . g$make-warning$5709$1RbCyC)
              (make-violation . g$make-violation$5727$1RbCyC)
              (make-undefined-violation
                .
                g$make-undefined-violation$5783$1RbCyC)
              (make-syntax-violation . g$make-syntax-violation$5773$1RbCyC)
              (make-serious-condition . g$make-serious-condition$5715$1RbCyC)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$5755$1RbCyC)
              (make-message-condition . g$make-message-condition$5701$1RbCyC)
              (make-lexical-violation . g$make-lexical-violation$5767$1RbCyC)
              (make-irritants-condition
                .
                g$make-irritants-condition$5739$1RbCyC)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$5761$1RbCyC)
              (make-error . g$make-error$5721$1RbCyC)
              (make-assertion-violation
                .
                g$make-assertion-violation$5733$1RbCyC)
              (lexical-violation? . g$lexical-violation?$5768$1RbCyC)
              (irritants-condition? . g$irritants-condition?$5741$1RbCyC)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$5762$1RbCyC)
              (error? . g$error?$5722$1RbCyC)
              (condition-who . g$condition-who$5750$1RbCyC)
              (condition-message . g$condition-message$5704$1RbCyC)
              (condition-irritants . g$condition-irritants$5742$1RbCyC)
              (assertion-violation? . g$assertion-violation?$5734$1RbCyC)
              (native-endianness . g$native-endianness$5566$1RbCyC)
              (bytevector-u64-set! . g$bytevector-u64-set!$5587$1RbCyC)
              (bytevector-u64-ref . g$bytevector-u64-ref$5583$1RbCyC)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$5589$1RbCyC)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$5585$1RbCyC)
              (bytevector-u32-set! . g$bytevector-u32-set!$5579$1RbCyC)
              (bytevector-u32-ref . g$bytevector-u32-ref$5575$1RbCyC)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$5581$1RbCyC)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$5577$1RbCyC)
              (bytevector-u16-set! . g$bytevector-u16-set!$5571$1RbCyC)
              (bytevector-u16-ref . g$bytevector-u16-ref$5567$1RbCyC)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5573$1RbCyC)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5569$1RbCyC)
              (bytevector-s64-set! . g$bytevector-s64-set!$5588$1RbCyC)
              (bytevector-s64-ref . g$bytevector-s64-ref$5584$1RbCyC)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$5590$1RbCyC)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$5586$1RbCyC)
              (bytevector-s32-set! . g$bytevector-s32-set!$5580$1RbCyC)
              (bytevector-s32-ref . g$bytevector-s32-ref$5576$1RbCyC)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$5582$1RbCyC)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$5578$1RbCyC)
              (bytevector-s16-set! . g$bytevector-s16-set!$5572$1RbCyC)
              (bytevector-s16-ref . g$bytevector-s16-ref$5568$1RbCyC)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5574$1RbCyC)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5570$1RbCyC)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$5593$1RbCyC)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$5591$1RbCyC)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$5594$1RbCyC)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$5592$1RbCyC)
              (no-nans-violation? . g$no-nans-violation?$6058$1RbCyC)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$6052$1RbCyC)
              (make-no-nans-violation . g$make-no-nans-violation$6057$1RbCyC)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6051$1RbCyC)
              (fxrotate-bit-field . g$fxrotate-bit-field$6034$1RbCyC)
              (fxif . g$fxif$6028$1RbCyC)
              (fxcopy-bit-field . g$fxcopy-bit-field$6031$1RbCyC)
              (fxcopy-bit . g$fxcopy-bit$6029$1RbCyC)
              (fxbit-field . g$fxbit-field$6030$1RbCyC)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$6033$1RbCyC)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6032$1RbCyC)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$5980$1RbCyC)
              (bitwise-if . g$bitwise-if$5974$1RbCyC)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$5977$1RbCyC)
              (bitwise-copy-bit . g$bitwise-copy-bit$5975$1RbCyC)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$5979$1RbCyC)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$5978$1RbCyC)
              (symbol=? . g$symbol=?$5191$1RbCyC)
              (string>? . g$string>?$5188$1RbCyC)
              (string>=? . g$string>=?$5190$1RbCyC)
              (string=? . g$string=?$5186$1RbCyC)
              (string<? . g$string<?$5187$1RbCyC)
              (string<=? . g$string<=?$5189$1RbCyC)
              (rationalize . g$rationalize$5198$1RbCyC)
              (char>? . g$char>?$5195$1RbCyC)
              (char>=? . g$char>=?$5197$1RbCyC)
              (char=? . g$char=?$5193$1RbCyC)
              (char<? . g$char<?$5194$1RbCyC)
              (char<=? . g$char<=?$5196$1RbCyC)
              (cddddr . g$cddddr$5185$1RbCyC)
              (cdddar . g$cdddar$5184$1RbCyC)
              (cddadr . g$cddadr$5183$1RbCyC)
              (cddaar . g$cddaar$5182$1RbCyC)
              (cdaddr . g$cdaddr$5181$1RbCyC)
              (cdadar . g$cdadar$5180$1RbCyC)
              (cdaadr . g$cdaadr$5179$1RbCyC)
              (cdaaar . g$cdaaar$5178$1RbCyC)
              (cadddr . g$cadddr$5177$1RbCyC)
              (caddar . g$caddar$5176$1RbCyC)
              (cadadr . g$cadadr$5175$1RbCyC)
              (cadaar . g$cadaar$5174$1RbCyC)
              (caaddr . g$caaddr$5173$1RbCyC)
              (caadar . g$caadar$5172$1RbCyC)
              (caaadr . g$caaadr$5171$1RbCyC)
              (caaaar . g$caaaar$5170$1RbCyC)
              (cdddr . g$cdddr$5169$1RbCyC)
              (cddar . g$cddar$5168$1RbCyC)
              (cdadr . g$cdadr$5167$1RbCyC)
              (cdaar . g$cdaar$5166$1RbCyC)
              (caddr . g$caddr$5165$1RbCyC)
              (cadar . g$cadar$5164$1RbCyC)
              (caadr . g$caadr$5163$1RbCyC)
              (caaar . g$caaar$5162$1RbCyC)
              (cddr . g$cddr$5161$1RbCyC)
              (cdar . g$cdar$5160$1RbCyC)
              (cadr . g$cadr$5159$1RbCyC)
              (caar . g$caar$5158$1RbCyC)
              (boolean=? . g$boolean=?$5192$1RbCyC)
              (enum-set? . g$enum?$6382$1RbCyC)
              (make-promise . g$make-promise$5814$1RbCyC)
              (load/args . g$load/args$11189$1RbCyC)
              (printf . g$printf$6437$1RbCyC)
              (fprintf . g$fprintf$6438$1RbCyC)
              (format . g$format$6439$1RbCyC)
              (trace-printer . g$trace-printer$11186$1RbCyC)
              (make-traced-macro . g$make-traced-macro$6443$1RbCyC)
              (assertion-error . g$assertion-error$11134$1RbCyC)
              (make-parameter . g$make-parameter$6524$1RbCyC)
              (environment-bindings . g$environment-bindings$11113$1RbCyC)
              (environment-symbols . g$environment-symbols$11116$1RbCyC)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$11112$1RbCyC)
              (library-path . g$library-path$7053$1RbCyC)
              (expand . g$expand$11120$1RbCyC)))))))
    (g$install-library$7069$1RbCyC
      'g$12429$1RbCyC
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$12366$1RbCyC)
        (cosh . g$12365$1RbCyC)
        (sinh . g$12364$1RbCyC)
        (make-guid . g$12363$1RbCyC)
        (unspecified? . g$12362$1RbCyC)
        (make-trace . g$12361$1RbCyC)
        (make-list . g$12360$1RbCyC)
        (last-pair . g$12359$1RbCyC)
        (load-r5rs . g$12358$1RbCyC)
        (license . g$12357$1RbCyC)
        (stacktrace . g$12356$1RbCyC)
        (ironscheme-build . g$11780$1RbCyC)
        (set-symbol-value! . g$12342$1RbCyC)
        (symbol-value . g$12341$1RbCyC)
        (ungensym . g$12340$1RbCyC)
        (gensym . g$12339$1RbCyC)
        (void . g$12338$1RbCyC)
        (compile-system-libraries . g$11782$1RbCyC)
        (compile->closure . g$11784$1RbCyC)
        (compile . g$11783$1RbCyC)
        (load . g$11779$1RbCyC)
        (interaction-environment . g$8810$1RbCyC)
        (string-upcase . g$12334$1RbCyC)
        (string-titlecase . g$12333$1RbCyC)
        (string-normalize-nfkd . g$12332$1RbCyC)
        (string-normalize-nfkc . g$12331$1RbCyC)
        (string-normalize-nfd . g$12330$1RbCyC)
        (string-normalize-nfc . g$12329$1RbCyC)
        (string-foldcase . g$12328$1RbCyC)
        (string-downcase . g$12327$1RbCyC)
        (string-ci>? . g$6911$1RbCyC)
        (string-ci>=? . g$6913$1RbCyC)
        (string-ci=? . g$6909$1RbCyC)
        (string-ci<? . g$6910$1RbCyC)
        (string-ci<=? . g$6912$1RbCyC)
        (char-whitespace? . g$12326$1RbCyC)
        (char-upper-case? . g$12325$1RbCyC)
        (char-title-case? . g$12324$1RbCyC)
        (char-numeric? . g$12323$1RbCyC)
        (char-lower-case? . g$12322$1RbCyC)
        (char-general-category . g$12321$1RbCyC)
        (char-upcase . g$12320$1RbCyC)
        (char-titlecase . g$12319$1RbCyC)
        (char-foldcase . g$12318$1RbCyC)
        (char-downcase . g$12317$1RbCyC)
        (char-ci>? . g$6950$1RbCyC)
        (char-ci>=? . g$6952$1RbCyC)
        (char-ci=? . g$6948$1RbCyC)
        (char-ci<? . g$6949$1RbCyC)
        (char-ci<=? . g$6951$1RbCyC)
        (char-alphabetic? . g$12316$1RbCyC)
        (make-variable-transformer . g$8407$1RbCyC)
        (identifier? . g$8805$1RbCyC)
        (generate-temporaries . g$8794$1RbCyC)
        (free-identifier=? . g$8795$1RbCyC)
        (syntax->datum . g$8807$1RbCyC)
        (datum->syntax . g$8806$1RbCyC)
        (bound-identifier=? . g$8796$1RbCyC)
        (record-type-descriptor? . g$12315$1RbCyC)
        (record-predicate . g$12314$1RbCyC)
        (record-mutator . g$12313$1RbCyC)
        (record-constructor . g$12312$1RbCyC)
        (record-accessor . g$12311$1RbCyC)
        (make-record-type-descriptor . g$12310$1RbCyC)
        (make-record-constructor-descriptor . g$12309$1RbCyC)
        (record? . g$12308$1RbCyC)
        (record-type-uid . g$12307$1RbCyC)
        (record-type-sealed? . g$12306$1RbCyC)
        (record-type-parent . g$12305$1RbCyC)
        (record-type-opaque? . g$12304$1RbCyC)
        (record-type-name . g$12303$1RbCyC)
        (record-type-generative? . g$12302$1RbCyC)
        (record-type-field-names . g$12301$1RbCyC)
        (record-rtd . g$12300$1RbCyC)
        (record-field-mutable? . g$12299$1RbCyC)
        (delete-file . g$6486$1RbCyC)
        (file-exists? . g$6485$1RbCyC)
        (vector-sort! . g$12298$1RbCyC)
        (vector-sort . g$12297$1RbCyC)
        (list-sort . g$6849$1RbCyC)
        (symbol-hash . g$12296$1RbCyC)
        (string-ci-hash . g$12295$1RbCyC)
        (string-hash . g$12294$1RbCyC)
        (equal-hash . g$12293$1RbCyC)
        (hashtable-equivalence-function . g$12292$1RbCyC)
        (make-hashtable . g$12291$1RbCyC)
        (hashtable-hash-function . g$12290$1RbCyC)
        (make-eqv-hashtable . g$6453$1RbCyC)
        (make-eq-hashtable . g$6452$1RbCyC)
        (hashtable? . g$12289$1RbCyC)
        (hashtable-update! . g$6459$1RbCyC)
        (hashtable-size . g$6454$1RbCyC)
        (hashtable-set! . g$6456$1RbCyC)
        (hashtable-ref . g$6455$1RbCyC)
        (hashtable-mutable? . g$12288$1RbCyC)
        (hashtable-keys . g$12287$1RbCyC)
        (hashtable-entries . g$12286$1RbCyC)
        (hashtable-delete! . g$6457$1RbCyC)
        (hashtable-copy . g$12285$1RbCyC)
        (hashtable-contains? . g$6458$1RbCyC)
        (hashtable-clear! . g$6460$1RbCyC)
        (call-with-output-file . g$7342$1RbCyC)
        (call-with-input-file . g$7341$1RbCyC)
        (write-char . g$12284$1RbCyC)
        (write . g$12283$1RbCyC)
        (with-output-to-file . g$7340$1RbCyC)
        (with-input-from-file . g$7339$1RbCyC)
        (read-char . g$12282$1RbCyC)
        (read . g$12281$1RbCyC)
        (peek-char . g$12280$1RbCyC)
        (open-output-file . g$12279$1RbCyC)
        (open-input-file . g$12278$1RbCyC)
        (newline . g$12277$1RbCyC)
        (display . g$12276$1RbCyC)
        (close-output-port . g$12275$1RbCyC)
        (close-input-port . g$12274$1RbCyC)
        (eof-object? . g$12273$1RbCyC)
        (eof-object . g$12272$1RbCyC)
        (current-error-port . g$12271$1RbCyC)
        (current-output-port . g$12270$1RbCyC)
        (current-input-port . g$12269$1RbCyC)
        (output-port? . g$12268$1RbCyC)
        (input-port? . g$12267$1RbCyC)
        (utf-8-codec . g$12266$1RbCyC)
        (utf-16-codec . g$12265$1RbCyC)
        (transcoder-error-handling-mode . g$12264$1RbCyC)
        (transcoder-eol-style . g$12263$1RbCyC)
        (transcoder-codec . g$12262$1RbCyC)
        (transcoded-port . g$12261$1RbCyC)
        (textual-port? . g$12260$1RbCyC)
        (string->bytevector . g$12259$1RbCyC)
        (standard-output-port . g$12258$1RbCyC)
        (standard-input-port . g$12257$1RbCyC)
        (standard-error-port . g$12256$1RbCyC)
        (set-port-position! . g$12255$1RbCyC)
        (put-u8 . g$12254$1RbCyC)
        (put-string . g$12253$1RbCyC)
        (put-datum . g$12252$1RbCyC)
        (put-char . g$12251$1RbCyC)
        (put-bytevector . g$12250$1RbCyC)
        (port? . g$7315$1RbCyC)
        (port-transcoder . g$12249$1RbCyC)
        (port-position . g$12248$1RbCyC)
        (port-has-set-port-position!? . g$12247$1RbCyC)
        (port-has-port-position? . g$12246$1RbCyC)
        (port-eof? . g$12245$1RbCyC)
        (output-port-buffer-mode . g$12244$1RbCyC)
        (open-string-output-port . g$7314$1RbCyC)
        (open-string-input-port . g$12243$1RbCyC)
        (open-file-output-port . g$12242$1RbCyC)
        (open-file-input/output-port . g$12241$1RbCyC)
        (open-file-input-port . g$12240$1RbCyC)
        (open-bytevector-output-port . g$12239$1RbCyC)
        (open-bytevector-input-port . g$12238$1RbCyC)
        (native-transcoder . g$12237$1RbCyC)
        (native-eol-style . g$12236$1RbCyC)
        (make-transcoder . g$12235$1RbCyC)
        (latin-1-codec . g$12234$1RbCyC)
        (make-i/o-write-error . g$7171$1RbCyC)
        (make-i/o-read-error . g$7157$1RbCyC)
        (make-i/o-port-error . g$7276$1RbCyC)
        (make-i/o-invalid-position-error . g$7186$1RbCyC)
        (make-i/o-filename-error . g$7203$1RbCyC)
        (make-i/o-file-protection-error . g$7219$1RbCyC)
        (make-i/o-file-is-read-only-error . g$7233$1RbCyC)
        (make-i/o-file-does-not-exist-error . g$7261$1RbCyC)
        (make-i/o-file-already-exists-error . g$7247$1RbCyC)
        (make-i/o-error . g$7143$1RbCyC)
        (make-i/o-encoding-error . g$7307$1RbCyC)
        (make-i/o-decoding-error . g$7292$1RbCyC)
        (make-custom-textual-output-port . g$12233$1RbCyC)
        (make-custom-textual-input/output-port . g$12232$1RbCyC)
        (make-custom-textual-input-port . g$12231$1RbCyC)
        (make-custom-binary-output-port . g$12230$1RbCyC)
        (make-custom-binary-input/output-port . g$12229$1RbCyC)
        (make-custom-binary-input-port . g$12228$1RbCyC)
        (make-bytevector . g$12227$1RbCyC)
        (lookahead-u8 . g$12226$1RbCyC)
        (lookahead-char . g$12225$1RbCyC)
        (i/o-write-error? . g$7172$1RbCyC)
        (i/o-read-error? . g$7158$1RbCyC)
        (i/o-port-error? . g$7278$1RbCyC)
        (i/o-invalid-position-error? . g$7188$1RbCyC)
        (i/o-error-position . g$7189$1RbCyC)
        (i/o-filename-error? . g$7205$1RbCyC)
        (i/o-file-protection-error? . g$7220$1RbCyC)
        (i/o-file-is-read-only-error? . g$7234$1RbCyC)
        (i/o-file-does-not-exist-error? . g$7262$1RbCyC)
        (i/o-file-already-exists-error? . g$7248$1RbCyC)
        (i/o-error? . g$7144$1RbCyC)
        (i/o-error-port . g$7279$1RbCyC)
        (i/o-error-filename . g$7206$1RbCyC)
        (i/o-encoding-error? . g$7309$1RbCyC)
        (i/o-encoding-error-char . g$7310$1RbCyC)
        (i/o-decoding-error? . g$7293$1RbCyC)
        (get-u8 . g$12224$1RbCyC)
        (get-string-n! . g$12223$1RbCyC)
        (get-string-n . g$12222$1RbCyC)
        (get-string-all . g$12221$1RbCyC)
        (get-line . g$12220$1RbCyC)
        (get-datum . g$12219$1RbCyC)
        (get-char . g$12218$1RbCyC)
        (get-bytevector-some . g$12217$1RbCyC)
        (get-bytevector-n! . g$12216$1RbCyC)
        (get-bytevector-n . g$12215$1RbCyC)
        (get-bytevector-all . g$12214$1RbCyC)
        (flush-output-port . g$12213$1RbCyC)
        (close-port . g$12212$1RbCyC)
        (call-with-string-output-port . g$7316$1RbCyC)
        (call-with-port . g$12211$1RbCyC)
        (call-with-bytevector-output-port . g$12210$1RbCyC)
        (bytevector->string . g$12209$1RbCyC)
        (buffer-mode? . g$12208$1RbCyC)
        (binary-port? . g$12207$1RbCyC)
        (scheme-report-environment . g$8785$1RbCyC)
        (quotient . g$6829$1RbCyC)
        (null-environment . g$8784$1RbCyC)
        (remainder . g$6830$1RbCyC)
        (modulo . g$6831$1RbCyC)
        (inexact->exact . g$12206$1RbCyC)
        (force . g$6833$1RbCyC)
        (exact->inexact . g$12205$1RbCyC)
        (exit . g$12204$1RbCyC)
        (command-line . g$11776$1RbCyC)
        (string-fill! . g$12203$1RbCyC)
        (string-set! . g$12202$1RbCyC)
        (set-cdr! . g$12201$1RbCyC)
        (set-car! . g$12200$1RbCyC)
        (remove . g$5847$1RbCyC)
        (remv . g$5848$1RbCyC)
        (remp . g$5830$1RbCyC)
        (remq . g$5849$1RbCyC)
        (partition . g$5829$1RbCyC)
        (memv . g$5837$1RbCyC)
        (memq . g$5836$1RbCyC)
        (memp . g$5839$1RbCyC)
        (member . g$5838$1RbCyC)
        (exists . g$5843$1RbCyC)
        (for-all . g$5842$1RbCyC)
        (fold-right . g$5846$1RbCyC)
        (fold-left . g$5845$1RbCyC)
        (find . g$5828$1RbCyC)
        (filter . g$5831$1RbCyC)
        (cons* . g$5844$1RbCyC)
        (assv . g$5833$1RbCyC)
        (assq . g$5832$1RbCyC)
        (assp . g$5835$1RbCyC)
        (assoc . g$5834$1RbCyC)
        (with-exception-handler . g$12199$1RbCyC)
        (raise-continuable . g$12198$1RbCyC)
        (raise . g$12197$1RbCyC)
        (eval . g$8787$1RbCyC)
        (environment . g$8783$1RbCyC)
        (make-enumeration . g$7400$1RbCyC)
        (enum-set=? . g$7407$1RbCyC)
        (enum-set-universe . g$7401$1RbCyC)
        (enum-set-union . g$7408$1RbCyC)
        (enum-set-subset? . g$7406$1RbCyC)
        (enum-set-projection . g$7412$1RbCyC)
        (enum-set-member? . g$7405$1RbCyC)
        (enum-set-intersection . g$7409$1RbCyC)
        (enum-set-indexer . g$7402$1RbCyC)
        (enum-set-difference . g$7410$1RbCyC)
        (enum-set-constructor . g$7403$1RbCyC)
        (enum-set-complement . g$7411$1RbCyC)
        (enum-set->list . g$7404$1RbCyC)
        (who-condition? . g$6740$1RbCyC)
        (warning? . g$6651$1RbCyC)
        (violation? . g$6693$1RbCyC)
        (undefined-violation? . g$6817$1RbCyC)
        (syntax-violation? . g$6801$1RbCyC)
        (syntax-violation-subform . g$6803$1RbCyC)
        (syntax-violation-form . g$6802$1RbCyC)
        (syntax-violation . g$8804$1RbCyC)
        (simple-conditions . g$12196$1RbCyC)
        (serious-condition? . g$6665$1RbCyC)
        (non-continuable-violation? . g$6755$1RbCyC)
        (message-condition? . g$6636$1RbCyC)
        (make-who-condition . g$6738$1RbCyC)
        (make-warning . g$6650$1RbCyC)
        (make-violation . g$6692$1RbCyC)
        (make-undefined-violation . g$6816$1RbCyC)
        (make-syntax-violation . g$6798$1RbCyC)
        (make-serious-condition . g$6664$1RbCyC)
        (make-non-continuable-violation . g$6754$1RbCyC)
        (make-message-condition . g$6634$1RbCyC)
        (make-lexical-violation . g$6782$1RbCyC)
        (make-irritants-condition . g$6721$1RbCyC)
        (make-implementation-restriction-violation . g$6768$1RbCyC)
        (make-error . g$6678$1RbCyC)
        (make-assertion-violation . g$6706$1RbCyC)
        (lexical-violation? . g$6783$1RbCyC)
        (irritants-condition? . g$6723$1RbCyC)
        (implementation-restriction-violation? . g$6769$1RbCyC)
        (error? . g$6679$1RbCyC)
        (condition-who . g$6741$1RbCyC)
        (condition-predicate . g$12195$1RbCyC)
        (condition-message . g$6637$1RbCyC)
        (condition-irritants . g$6724$1RbCyC)
        (condition-accessor . g$12194$1RbCyC)
        (condition . g$12193$1RbCyC)
        (assertion-violation? . g$6707$1RbCyC)
        (condition? . g$12192$1RbCyC)
        (utf32->string . g$12191$1RbCyC)
        (utf16->string . g$12190$1RbCyC)
        (utf8->string . g$12189$1RbCyC)
        (uint-list->bytevector . g$12188$1RbCyC)
        (u8-list->bytevector . g$12187$1RbCyC)
        (string->utf8 . g$12186$1RbCyC)
        (string->utf32 . g$12185$1RbCyC)
        (string->utf16 . g$12184$1RbCyC)
        (sint-list->bytevector . g$12183$1RbCyC)
        (native-endianness . g$6492$1RbCyC)
        (bytevector? . g$12182$1RbCyC)
        (bytevector=? . g$12181$1RbCyC)
        (bytevector-uint-set! . g$12180$1RbCyC)
        (bytevector-uint-ref . g$12179$1RbCyC)
        (bytevector-u8-set! . g$12178$1RbCyC)
        (bytevector-u8-ref . g$12177$1RbCyC)
        (bytevector-u64-set! . g$6513$1RbCyC)
        (bytevector-u64-ref . g$6509$1RbCyC)
        (bytevector-u64-native-set! . g$6515$1RbCyC)
        (bytevector-u64-native-ref . g$6511$1RbCyC)
        (bytevector-u32-set! . g$6505$1RbCyC)
        (bytevector-u32-ref . g$6501$1RbCyC)
        (bytevector-u32-native-set! . g$6507$1RbCyC)
        (bytevector-u32-native-ref . g$6503$1RbCyC)
        (bytevector-u16-set! . g$6497$1RbCyC)
        (bytevector-u16-ref . g$6493$1RbCyC)
        (bytevector-u16-native-set! . g$6499$1RbCyC)
        (bytevector-u16-native-ref . g$6495$1RbCyC)
        (bytevector-sint-set! . g$12176$1RbCyC)
        (bytevector-sint-ref . g$12175$1RbCyC)
        (bytevector-s8-set! . g$12174$1RbCyC)
        (bytevector-s8-ref . g$12173$1RbCyC)
        (bytevector-s64-set! . g$6514$1RbCyC)
        (bytevector-s64-ref . g$6510$1RbCyC)
        (bytevector-s64-native-set! . g$6516$1RbCyC)
        (bytevector-s64-native-ref . g$6512$1RbCyC)
        (bytevector-s32-set! . g$6506$1RbCyC)
        (bytevector-s32-ref . g$6502$1RbCyC)
        (bytevector-s32-native-set! . g$6508$1RbCyC)
        (bytevector-s32-native-ref . g$6504$1RbCyC)
        (bytevector-s16-set! . g$6498$1RbCyC)
        (bytevector-s16-ref . g$6494$1RbCyC)
        (bytevector-s16-native-set! . g$6500$1RbCyC)
        (bytevector-s16-native-ref . g$6496$1RbCyC)
        (bytevector-length . g$12172$1RbCyC)
        (bytevector-ieee-single-set! . g$12171$1RbCyC)
        (bytevector-ieee-single-ref . g$12170$1RbCyC)
        (bytevector-ieee-single-native-set! . g$6519$1RbCyC)
        (bytevector-ieee-single-native-ref . g$6517$1RbCyC)
        (bytevector-ieee-double-set! . g$12169$1RbCyC)
        (bytevector-ieee-double-ref . g$12168$1RbCyC)
        (bytevector-ieee-double-native-set! . g$6520$1RbCyC)
        (bytevector-ieee-double-native-ref . g$6518$1RbCyC)
        (bytevector-fill! . g$12167$1RbCyC)
        (bytevector-copy! . g$12166$1RbCyC)
        (bytevector-copy . g$12165$1RbCyC)
        (bytevector->uint-list . g$12164$1RbCyC)
        (bytevector->u8-list . g$12163$1RbCyC)
        (bytevector->sint-list . g$12162$1RbCyC)
        (no-nans-violation? . g$7129$1RbCyC)
        (no-infinities-violation? . g$7115$1RbCyC)
        (make-no-nans-violation . g$7128$1RbCyC)
        (make-no-infinities-violation . g$7114$1RbCyC)
        (real->flonum . g$12161$1RbCyC)
        (flzero? . g$12160$1RbCyC)
        (fltruncate . g$12159$1RbCyC)
        (fltan . g$12158$1RbCyC)
        (flsqrt . g$12157$1RbCyC)
        (flsin . g$12156$1RbCyC)
        (flround . g$12155$1RbCyC)
        (flpositive? . g$12154$1RbCyC)
        (flonum? . g$12153$1RbCyC)
        (flodd? . g$12152$1RbCyC)
        (flnumerator . g$12151$1RbCyC)
        (flnegative? . g$12150$1RbCyC)
        (flnan? . g$12149$1RbCyC)
        (flmod0 . g$12148$1RbCyC)
        (flmod . g$12147$1RbCyC)
        (flmin . g$12146$1RbCyC)
        (flmax . g$12145$1RbCyC)
        (fllog . g$12144$1RbCyC)
        (flinteger? . g$12143$1RbCyC)
        (flinfinite? . g$12142$1RbCyC)
        (flfloor . g$12141$1RbCyC)
        (flfinite? . g$12140$1RbCyC)
        (flexpt . g$12139$1RbCyC)
        (flexp . g$12138$1RbCyC)
        (fleven? . g$12137$1RbCyC)
        (fldiv0-and-mod0 . g$12136$1RbCyC)
        (fldiv0 . g$12135$1RbCyC)
        (fldiv-and-mod . g$12134$1RbCyC)
        (fldiv . g$12133$1RbCyC)
        (fldenominator . g$12132$1RbCyC)
        (flcos . g$12131$1RbCyC)
        (flceiling . g$12130$1RbCyC)
        (flatan . g$12129$1RbCyC)
        (flasin . g$12128$1RbCyC)
        (flacos . g$12127$1RbCyC)
        (flabs . g$12126$1RbCyC)
        (fl>? . g$12125$1RbCyC)
        (fl>=? . g$12124$1RbCyC)
        (fl=? . g$12123$1RbCyC)
        (fl<? . g$12122$1RbCyC)
        (fl<=? . g$12121$1RbCyC)
        (fl/ . g$12120$1RbCyC)
        (fl- . g$12119$1RbCyC)
        (fl+ . g$12118$1RbCyC)
        (fl* . g$12117$1RbCyC)
        (fixnum->flonum . g$12116$1RbCyC)
        (fxzero? . g$12115$1RbCyC)
        (fxxor . g$12114$1RbCyC)
        (fxrotate-bit-field . g$7060$1RbCyC)
        (fxreverse-bit-field . g$12113$1RbCyC)
        (fxpositive? . g$12112$1RbCyC)
        (fxodd? . g$12111$1RbCyC)
        (fxnot . g$12110$1RbCyC)
        (fxnegative? . g$12109$1RbCyC)
        (fxmod0 . g$12108$1RbCyC)
        (fxmod . g$12107$1RbCyC)
        (fxmin . g$12106$1RbCyC)
        (fxmax . g$12105$1RbCyC)
        (fxlength . g$12104$1RbCyC)
        (fxior . g$12103$1RbCyC)
        (fxif . g$7054$1RbCyC)
        (fxfirst-bit-set . g$12102$1RbCyC)
        (fxeven? . g$12101$1RbCyC)
        (fxdiv0-and-mod0 . g$12100$1RbCyC)
        (fxdiv0 . g$12099$1RbCyC)
        (fxdiv-and-mod . g$12098$1RbCyC)
        (fxdiv . g$12097$1RbCyC)
        (fxcopy-bit-field . g$7057$1RbCyC)
        (fxcopy-bit . g$7055$1RbCyC)
        (fxbit-set? . g$12096$1RbCyC)
        (fxbit-field . g$7056$1RbCyC)
        (fxbit-count . g$12095$1RbCyC)
        (fxarithmetic-shift-right . g$7059$1RbCyC)
        (fxarithmetic-shift-left . g$7058$1RbCyC)
        (fxarithmetic-shift . g$12094$1RbCyC)
        (fxand . g$12093$1RbCyC)
        (fx>? . g$12092$1RbCyC)
        (fx>=? . g$12091$1RbCyC)
        (fx=? . g$12090$1RbCyC)
        (fx<? . g$12089$1RbCyC)
        (fx<=? . g$12088$1RbCyC)
        (fx-/carry . g$12087$1RbCyC)
        (fx- . g$12086$1RbCyC)
        (fx+/carry . g$12085$1RbCyC)
        (fx+ . g$12084$1RbCyC)
        (fx*/carry . g$12083$1RbCyC)
        (fx* . g$12082$1RbCyC)
        (greatest-fixnum . g$12081$1RbCyC)
        (least-fixnum . g$12080$1RbCyC)
        (fixnum-width . g$12079$1RbCyC)
        (fixnum? . g$12078$1RbCyC)
        (bitwise-rotate-bit-field . g$7012$1RbCyC)
        (bitwise-reverse-bit-field . g$12077$1RbCyC)
        (bitwise-length . g$12076$1RbCyC)
        (bitwise-if . g$7006$1RbCyC)
        (bitwise-first-bit-set . g$12075$1RbCyC)
        (bitwise-copy-bit-field . g$7009$1RbCyC)
        (bitwise-copy-bit . g$7007$1RbCyC)
        (bitwise-bit-set? . g$12074$1RbCyC)
        (bitwise-bit-field . g$12073$1RbCyC)
        (bitwise-bit-count . g$12072$1RbCyC)
        (bitwise-xor . g$12071$1RbCyC)
        (bitwise-ior . g$12070$1RbCyC)
        (bitwise-and . g$12069$1RbCyC)
        (bitwise-not . g$12068$1RbCyC)
        (bitwise-arithmetic-shift-right . g$7011$1RbCyC)
        (bitwise-arithmetic-shift-left . g$7010$1RbCyC)
        (bitwise-arithmetic-shift . g$12067$1RbCyC)
        (zero? . g$12066$1RbCyC)
        (vector? . g$12065$1RbCyC)
        (vector-set! . g$12064$1RbCyC)
        (vector-ref . g$12063$1RbCyC)
        (vector-map . g$12062$1RbCyC)
        (vector-length . g$12061$1RbCyC)
        (vector-for-each . g$12060$1RbCyC)
        (vector-fill! . g$12059$1RbCyC)
        (vector->list . g$12058$1RbCyC)
        (vector . g$12057$1RbCyC)
        (values . g$12056$1RbCyC)
        (truncate . g$12055$1RbCyC)
        (tan . g$12054$1RbCyC)
        (symbol? . g$12053$1RbCyC)
        (symbol=? . g$6001$1RbCyC)
        (symbol->string . g$12052$1RbCyC)
        (substring . g$12051$1RbCyC)
        (string? . g$12050$1RbCyC)
        (string>? . g$5998$1RbCyC)
        (string>=? . g$6000$1RbCyC)
        (string=? . g$5996$1RbCyC)
        (string<? . g$5997$1RbCyC)
        (string<=? . g$5999$1RbCyC)
        (string-ref . g$12049$1RbCyC)
        (string-length . g$12048$1RbCyC)
        (string-for-each . g$12047$1RbCyC)
        (string-copy . g$12046$1RbCyC)
        (string-append . g$12045$1RbCyC)
        (string->symbol . g$12044$1RbCyC)
        (string->number . g$12043$1RbCyC)
        (string->list . g$12042$1RbCyC)
        (string . g$12041$1RbCyC)
        (sqrt . g$12040$1RbCyC)
        (sin . g$12039$1RbCyC)
        (round . g$12038$1RbCyC)
        (reverse . g$12037$1RbCyC)
        (real? . g$12036$1RbCyC)
        (real-valued? . g$12035$1RbCyC)
        (real-part . g$12034$1RbCyC)
        (rationalize . g$6042$1RbCyC)
        (rational? . g$12033$1RbCyC)
        (rational-valued? . g$12032$1RbCyC)
        (procedure? . g$12031$1RbCyC)
        (positive? . g$12030$1RbCyC)
        (pair? . g$12029$1RbCyC)
        (odd? . g$12028$1RbCyC)
        (numerator . g$12027$1RbCyC)
        (number? . g$12026$1RbCyC)
        (number->string . g$12025$1RbCyC)
        (null? . g$12024$1RbCyC)
        (not . g$12023$1RbCyC)
        (negative? . g$12022$1RbCyC)
        (nan? . g$12021$1RbCyC)
        (min . g$12020$1RbCyC)
        (max . g$12019$1RbCyC)
        (map . g$12018$1RbCyC)
        (make-vector . g$12017$1RbCyC)
        (make-string . g$12016$1RbCyC)
        (make-rectangular . g$12015$1RbCyC)
        (make-polar . g$12014$1RbCyC)
        (magnitude . g$12013$1RbCyC)
        (log . g$12012$1RbCyC)
        (list? . g$12011$1RbCyC)
        (list-tail . g$12010$1RbCyC)
        (list-ref . g$12009$1RbCyC)
        (list->vector . g$12008$1RbCyC)
        (list->string . g$12007$1RbCyC)
        (list . g$12006$1RbCyC)
        (length . g$12005$1RbCyC)
        (lcm . g$12004$1RbCyC)
        (integer? . g$12003$1RbCyC)
        (integer-valued? . g$12002$1RbCyC)
        (integer->char . g$12001$1RbCyC)
        (infinite? . g$12000$1RbCyC)
        (inexact? . g$11999$1RbCyC)
        (inexact . g$11998$1RbCyC)
        (imag-part . g$11997$1RbCyC)
        (gcd . g$11996$1RbCyC)
        (for-each . g$11995$1RbCyC)
        (floor . g$11994$1RbCyC)
        (finite? . g$11993$1RbCyC)
        (expt . g$11992$1RbCyC)
        (exp . g$11991$1RbCyC)
        (exact? . g$11990$1RbCyC)
        (exact-integer-sqrt . g$11989$1RbCyC)
        (exact . g$11988$1RbCyC)
        (even? . g$11987$1RbCyC)
        (error . g$11986$1RbCyC)
        (eqv? . g$11985$1RbCyC)
        (equal? . g$11984$1RbCyC)
        (eq? . g$11983$1RbCyC)
        (dynamic-wind . g$11982$1RbCyC)
        (div0-and-mod0 . g$11981$1RbCyC)
        (mod0 . g$11980$1RbCyC)
        (div0 . g$11979$1RbCyC)
        (div-and-mod . g$11978$1RbCyC)
        (mod . g$11977$1RbCyC)
        (div . g$11976$1RbCyC)
        (denominator . g$11975$1RbCyC)
        (cos . g$11974$1RbCyC)
        (cons . g$11973$1RbCyC)
        (complex? . g$11972$1RbCyC)
        (char? . g$11971$1RbCyC)
        (char>? . g$6039$1RbCyC)
        (char>=? . g$6041$1RbCyC)
        (char=? . g$6037$1RbCyC)
        (char<? . g$6038$1RbCyC)
        (char<=? . g$6040$1RbCyC)
        (char->integer . g$11970$1RbCyC)
        (ceiling . g$11969$1RbCyC)
        (call-with-values . g$11968$1RbCyC)
        (call/cc . g$11967$1RbCyC)
        (call-with-current-continuation . g$11966$1RbCyC)
        (cddddr . g$5961$1RbCyC)
        (cdddar . g$5960$1RbCyC)
        (cddadr . g$5959$1RbCyC)
        (cddaar . g$5958$1RbCyC)
        (cdaddr . g$5957$1RbCyC)
        (cdadar . g$5956$1RbCyC)
        (cdaadr . g$5955$1RbCyC)
        (cdaaar . g$5954$1RbCyC)
        (cadddr . g$5953$1RbCyC)
        (caddar . g$5952$1RbCyC)
        (cadadr . g$5951$1RbCyC)
        (cadaar . g$5950$1RbCyC)
        (caaddr . g$5949$1RbCyC)
        (caadar . g$5948$1RbCyC)
        (caaadr . g$5947$1RbCyC)
        (caaaar . g$5946$1RbCyC)
        (cdddr . g$5945$1RbCyC)
        (cddar . g$5944$1RbCyC)
        (cdadr . g$5943$1RbCyC)
        (cdaar . g$5942$1RbCyC)
        (caddr . g$5941$1RbCyC)
        (cadar . g$5940$1RbCyC)
        (caadr . g$5939$1RbCyC)
        (caaar . g$5938$1RbCyC)
        (cddr . g$5937$1RbCyC)
        (cdar . g$5936$1RbCyC)
        (cadr . g$5935$1RbCyC)
        (caar . g$5934$1RbCyC)
        (cdr . g$11965$1RbCyC)
        (car . g$11964$1RbCyC)
        (boolean? . g$11963$1RbCyC)
        (boolean=? . g$6002$1RbCyC)
        (atan . g$11962$1RbCyC)
        (assertion-violation . g$11961$1RbCyC)
        (asin . g$11960$1RbCyC)
        (apply . g$11959$1RbCyC)
        (append . g$11958$1RbCyC)
        (angle . g$11957$1RbCyC)
        (acos . g$11956$1RbCyC)
        (abs . g$11955$1RbCyC)
        (/ . g$11954$1RbCyC)
        (* . g$11953$1RbCyC)
        (- . g$11952$1RbCyC)
        (+ . g$11951$1RbCyC)
        (>= . g$11950$1RbCyC)
        (> . g$11949$1RbCyC)
        (= . g$11948$1RbCyC)
        (<= . g$11947$1RbCyC)
        (< . g$11946$1RbCyC)
        (deserialize-port . g$11942$1RbCyC)
        (serialize-port . g$11941$1RbCyC)
        (enum-set? . g$7375$1RbCyC)
        (load/args . g$11778$1RbCyC)
        (printf . g$7485$1RbCyC)
        (fprintf . g$7486$1RbCyC)
        (format . g$7487$1RbCyC)
        (procedure-form . g$11940$1RbCyC)
        (procedure-environment . g$11939$1RbCyC)
        (procedure-name . g$11938$1RbCyC)
        (procedure-arity . g$11937$1RbCyC)
        (gc-collect . g$11936$1RbCyC)
        (clr-type? . g$11935$1RbCyC)
        (get-clr-type . g$11934$1RbCyC)
        (vector-append . g$11932$1RbCyC)
        (vector-filter . g$11931$1RbCyC)
        (vector-reverse! . g$11930$1RbCyC)
        (vector-contains? . g$11929$1RbCyC)
        (vector-index-of . g$11928$1RbCyC)
        (vector-copy . g$11927$1RbCyC)
        (vector-binary-search . g$11926$1RbCyC)
        (string-ci-compare . g$11925$1RbCyC)
        (string-compare . g$11924$1RbCyC)
        (string-format . g$11923$1RbCyC)
        (trace-printer . g$11775$1RbCyC)
        (pmap . g$11921$1RbCyC)
        (time-it . g$11920$1RbCyC)
        (make-parameter . g$7512$1RbCyC)
        (environment-bindings . g$8779$1RbCyC)
        (environment-symbols . g$8782$1RbCyC)
        (interaction-environment-symbols . g$8778$1RbCyC)
        (optimization-level . g$11917$1RbCyC)
        (library-path . g$7942$1RbCyC)
        (expand . g$8786$1RbCyC)
        (&no-nans . g$11916$1RbCyC)
        (&no-infinities . g$11915$1RbCyC)
        (&i/o-encoding . g$11914$1RbCyC)
        (&i/o-decoding . g$11913$1RbCyC)
        (&i/o-port . g$11912$1RbCyC)
        (&i/o-file-does-not-exist . g$11911$1RbCyC)
        (&i/o-file-already-exists . g$11910$1RbCyC)
        (&i/o-file-is-read-only . g$11909$1RbCyC)
        (&i/o-file-protection . g$11908$1RbCyC)
        (&i/o-filename . g$11907$1RbCyC)
        (&i/o-invalid-position . g$11906$1RbCyC)
        (&i/o-write . g$11905$1RbCyC)
        (&i/o-read . g$11904$1RbCyC)
        (&i/o . g$11903$1RbCyC)
        (&non-continuable . g$11902$1RbCyC)
        (&undefined . g$11901$1RbCyC)
        (&syntax . g$11900$1RbCyC)
        (&lexical . g$11899$1RbCyC)
        (&implementation-restriction . g$11898$1RbCyC)
        (&who . g$11897$1RbCyC)
        (&irritants . g$11896$1RbCyC)
        (&assertion . g$11895$1RbCyC)
        (&violation . g$11894$1RbCyC)
        (&error . g$11893$1RbCyC)
        (&serious . g$11892$1RbCyC)
        (&warning . g$11891$1RbCyC)
        (&message . g$11890$1RbCyC)
        (&condition . g$11889$1RbCyC)
        (define-condition-type . g$11888$1RbCyC)
        (define-enumeration . g$11887$1RbCyC)
        (define-record-type . g$11886$1RbCyC)
        (parent-rtd . g$11885$1RbCyC)
        (nongenerative . g$11884$1RbCyC)
        (opaque . g$11883$1RbCyC)
        (sealed . g$11882$1RbCyC)
        (protocol . g$11881$1RbCyC)
        (parent . g$11880$1RbCyC)
        (immutable . g$11879$1RbCyC)
        (mutable . g$11878$1RbCyC)
        (fields . g$11877$1RbCyC)
        (error-handling-mode . g$11876$1RbCyC)
        (file-options . g$11875$1RbCyC)
        (buffer-mode . g$11874$1RbCyC)
        (eol-style . g$11873$1RbCyC)
        (guard . g$11872$1RbCyC)
        (trace-letrec-syntax . g$11871$1RbCyC)
        (trace-let-syntax . g$11870$1RbCyC)
        (trace-define-syntax . g$11869$1RbCyC)
        (trace-define . g$11868$1RbCyC)
        (trace-lambda . g$11867$1RbCyC)
        (unsyntax-splicing . g$11866$1RbCyC)
        (unsyntax . g$11865$1RbCyC)
        (unquote-splicing . g$11864$1RbCyC)
        (unquote . g$11863$1RbCyC)
        (_ . g$11862$1RbCyC)
        (else . g$11861$1RbCyC)
        (=> . g$11860$1RbCyC)
        (... . g$11859$1RbCyC)
        (assert . g$11858$1RbCyC)
        (endianness . g$11857$1RbCyC)
        (delay . g$11856$1RbCyC)
        (time . g$11855$1RbCyC)
        (or . g$11854$1RbCyC)
        (and . g$11853$1RbCyC)
        (do . g$11852$1RbCyC)
        (cond . g$11851$1RbCyC)
        (let* . g$11850$1RbCyC)
        (let . g$11849$1RbCyC)
        (identifier-syntax . g$11848$1RbCyC)
        (with-syntax . g$11847$1RbCyC)
        (quasisyntax . g$11846$1RbCyC)
        (quasiquote . g$11845$1RbCyC)
        (syntax-rules . g$11844$1RbCyC)
        (include-into . g$11843$1RbCyC)
        (include . g$11842$1RbCyC)
        (let-values . g$11840$1RbCyC)
        (let*-values . g$11839$1RbCyC)
        (record-constructor-descriptor . g$11838$1RbCyC)
        (record-type-descriptor . g$11837$1RbCyC)
        (fluid-let-syntax . g$11836$1RbCyC)
        (case . g$11835$1RbCyC)
        (parameterize . g$11834$1RbCyC)
        (unless . g$11833$1RbCyC)
        (when . g$11832$1RbCyC)
        (if . g$11831$1RbCyC)
        (letrec* . g$11830$1RbCyC)
        (letrec . g$11829$1RbCyC)
        (case-lambda . g$11827$1RbCyC)
        (lambda . g$11826$1RbCyC)
        (syntax . g$11825$1RbCyC)
        (syntax-case . g$11824$1RbCyC)
        (quote . g$11823$1RbCyC)
        (letrec-syntax . g$11821$1RbCyC)
        (let-syntax . g$11820$1RbCyC)
        (set! . g$11819$1RbCyC)
        (export . g$11818$1RbCyC)
        (import . g$11817$1RbCyC)
        (library . g$11816$1RbCyC)
        (begin . g$11815$1RbCyC)
        (module . g$11814$1RbCyC)
        (define-syntax . g$11813$1RbCyC)
        (define . g$11812$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12430$1RbCyC
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$11918$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12431$1RbCyC
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$12371$1RbCyC)
        (annotation-source . g$12370$1RbCyC)
        (annotation-expression . g$12369$1RbCyC)
        (annotation? . g$12368$1RbCyC)
        (read-annotated . g$12367$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12432$1RbCyC
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$12337$1RbCyC)
        (serialize-library . g$12336$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12433$1RbCyC
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$8409$1RbCyC)
        (variable-transformer? . g$8408$1RbCyC)
        (eqv-hash . g$11944$1RbCyC)
        (reverse! . g$11943$1RbCyC)
        (make-promise . g$6832$1RbCyC)
        (format . g$7487$1RbCyC)
        (get-command-line . g$11933$1RbCyC)
        (make-traced-procedure . g$11922$1RbCyC)
        (make-traced-macro . g$7507$1RbCyC)
        (assertion-error . g$8800$1RbCyC)
        (library-locator . g$11919$1RbCyC)
        (get-library-paths . g$11918$1RbCyC)
        (library-path . g$7942$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12434$1RbCyC
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$11945$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12435$1RbCyC
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$12355$1RbCyC)
        (clr-field-set!-internal . g$12354$1RbCyC)
        (clr-field-get-internal . g$12353$1RbCyC)
        (clr-cast-internal . g$12352$1RbCyC)
        (clr-call-internal . g$12351$1RbCyC)
        (clr-new-internal . g$12350$1RbCyC)
        (clr-new-array-internal . g$12349$1RbCyC)
        (clr-is-internal . g$12348$1RbCyC)
        (clr-reference-internal . g$12347$1RbCyC)
        (clr-using-internal . g$12346$1RbCyC)
        (clr-clear-usings-internal . g$12345$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12436$1RbCyC
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11864$1RbCyC)
        (unquote . g$11863$1RbCyC)
        (else . g$11861$1RbCyC)
        (=> . g$11860$1RbCyC)
        (delay . g$11856$1RbCyC)
        (or . g$11854$1RbCyC)
        (and . g$11853$1RbCyC)
        (do . g$11852$1RbCyC)
        (cond . g$11851$1RbCyC)
        (let* . g$11850$1RbCyC)
        (let . g$11849$1RbCyC)
        (quasiquote . g$11845$1RbCyC)
        (syntax-rules . g$11844$1RbCyC)
        (case . g$11835$1RbCyC)
        (if . g$11831$1RbCyC)
        (letrec . g$11829$1RbCyC)
        (lambda . g$11826$1RbCyC)
        (quote . g$11823$1RbCyC)
        (letrec-syntax . g$11821$1RbCyC)
        (let-syntax . g$11820$1RbCyC)
        (set! . g$11819$1RbCyC)
        (begin . g$11815$1RbCyC)
        (define-syntax . g$11813$1RbCyC)
        (define . g$11812$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12437$1RbCyC
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$8810$1RbCyC)
        (char-ready? . g$12335$1RbCyC)
        (string-ci>? . g$6911$1RbCyC)
        (string-ci>=? . g$6913$1RbCyC)
        (string-ci=? . g$6909$1RbCyC)
        (string-ci<? . g$6910$1RbCyC)
        (string-ci<=? . g$6912$1RbCyC)
        (char-whitespace? . g$12326$1RbCyC)
        (char-upper-case? . g$12325$1RbCyC)
        (char-numeric? . g$12323$1RbCyC)
        (char-lower-case? . g$12322$1RbCyC)
        (char-upcase . g$12320$1RbCyC)
        (char-downcase . g$12317$1RbCyC)
        (char-ci>? . g$6950$1RbCyC)
        (char-ci>=? . g$6952$1RbCyC)
        (char-ci=? . g$6948$1RbCyC)
        (char-ci<? . g$6949$1RbCyC)
        (char-ci<=? . g$6951$1RbCyC)
        (char-alphabetic? . g$12316$1RbCyC)
        (call-with-output-file . g$7342$1RbCyC)
        (call-with-input-file . g$7341$1RbCyC)
        (write-char . g$12284$1RbCyC)
        (write . g$12283$1RbCyC)
        (with-output-to-file . g$7340$1RbCyC)
        (with-input-from-file . g$7339$1RbCyC)
        (read-char . g$12282$1RbCyC)
        (read . g$12281$1RbCyC)
        (peek-char . g$12280$1RbCyC)
        (open-output-file . g$12279$1RbCyC)
        (open-input-file . g$12278$1RbCyC)
        (newline . g$12277$1RbCyC)
        (display . g$12276$1RbCyC)
        (close-output-port . g$12275$1RbCyC)
        (close-input-port . g$12274$1RbCyC)
        (eof-object? . g$12273$1RbCyC)
        (eof-object . g$12272$1RbCyC)
        (current-error-port . g$12271$1RbCyC)
        (current-output-port . g$12270$1RbCyC)
        (current-input-port . g$12269$1RbCyC)
        (output-port? . g$12268$1RbCyC)
        (input-port? . g$12267$1RbCyC)
        (scheme-report-environment . g$8785$1RbCyC)
        (quotient . g$6829$1RbCyC)
        (null-environment . g$8784$1RbCyC)
        (remainder . g$6830$1RbCyC)
        (modulo . g$6831$1RbCyC)
        (inexact->exact . g$12206$1RbCyC)
        (force . g$6833$1RbCyC)
        (exact->inexact . g$12205$1RbCyC)
        (string-fill! . g$12203$1RbCyC)
        (string-set! . g$12202$1RbCyC)
        (set-cdr! . g$12201$1RbCyC)
        (set-car! . g$12200$1RbCyC)
        (memv . g$5837$1RbCyC)
        (memq . g$5836$1RbCyC)
        (member . g$5838$1RbCyC)
        (assv . g$5833$1RbCyC)
        (assq . g$5832$1RbCyC)
        (assoc . g$5834$1RbCyC)
        (eval . g$8787$1RbCyC)
        (zero? . g$12066$1RbCyC)
        (vector? . g$12065$1RbCyC)
        (vector-set! . g$12064$1RbCyC)
        (vector-ref . g$12063$1RbCyC)
        (vector-length . g$12061$1RbCyC)
        (vector-fill! . g$12059$1RbCyC)
        (vector->list . g$12058$1RbCyC)
        (vector . g$12057$1RbCyC)
        (values . g$12056$1RbCyC)
        (truncate . g$12055$1RbCyC)
        (tan . g$12054$1RbCyC)
        (symbol? . g$12053$1RbCyC)
        (symbol->string . g$12052$1RbCyC)
        (substring . g$12051$1RbCyC)
        (string? . g$12050$1RbCyC)
        (string>? . g$5998$1RbCyC)
        (string>=? . g$6000$1RbCyC)
        (string=? . g$5996$1RbCyC)
        (string<? . g$5997$1RbCyC)
        (string<=? . g$5999$1RbCyC)
        (string-ref . g$12049$1RbCyC)
        (string-length . g$12048$1RbCyC)
        (string-copy . g$12046$1RbCyC)
        (string-append . g$12045$1RbCyC)
        (string->symbol . g$12044$1RbCyC)
        (string->number . g$12043$1RbCyC)
        (string->list . g$12042$1RbCyC)
        (string . g$12041$1RbCyC)
        (sqrt . g$12040$1RbCyC)
        (sin . g$12039$1RbCyC)
        (round . g$12038$1RbCyC)
        (reverse . g$12037$1RbCyC)
        (real? . g$12036$1RbCyC)
        (real-part . g$12034$1RbCyC)
        (rationalize . g$6042$1RbCyC)
        (rational? . g$12033$1RbCyC)
        (procedure? . g$12031$1RbCyC)
        (positive? . g$12030$1RbCyC)
        (pair? . g$12029$1RbCyC)
        (odd? . g$12028$1RbCyC)
        (numerator . g$12027$1RbCyC)
        (number? . g$12026$1RbCyC)
        (number->string . g$12025$1RbCyC)
        (null? . g$12024$1RbCyC)
        (not . g$12023$1RbCyC)
        (negative? . g$12022$1RbCyC)
        (min . g$12020$1RbCyC)
        (max . g$12019$1RbCyC)
        (map . g$12018$1RbCyC)
        (make-vector . g$12017$1RbCyC)
        (make-string . g$12016$1RbCyC)
        (make-rectangular . g$12015$1RbCyC)
        (make-polar . g$12014$1RbCyC)
        (magnitude . g$12013$1RbCyC)
        (log . g$12012$1RbCyC)
        (list? . g$12011$1RbCyC)
        (list-tail . g$12010$1RbCyC)
        (list-ref . g$12009$1RbCyC)
        (list->vector . g$12008$1RbCyC)
        (list->string . g$12007$1RbCyC)
        (list . g$12006$1RbCyC)
        (length . g$12005$1RbCyC)
        (lcm . g$12004$1RbCyC)
        (integer? . g$12003$1RbCyC)
        (integer->char . g$12001$1RbCyC)
        (inexact? . g$11999$1RbCyC)
        (imag-part . g$11997$1RbCyC)
        (gcd . g$11996$1RbCyC)
        (for-each . g$11995$1RbCyC)
        (floor . g$11994$1RbCyC)
        (expt . g$11992$1RbCyC)
        (exp . g$11991$1RbCyC)
        (exact? . g$11990$1RbCyC)
        (even? . g$11987$1RbCyC)
        (eqv? . g$11985$1RbCyC)
        (equal? . g$11984$1RbCyC)
        (eq? . g$11983$1RbCyC)
        (dynamic-wind . g$11982$1RbCyC)
        (denominator . g$11975$1RbCyC)
        (cos . g$11974$1RbCyC)
        (cons . g$11973$1RbCyC)
        (complex? . g$11972$1RbCyC)
        (char? . g$11971$1RbCyC)
        (char>? . g$6039$1RbCyC)
        (char>=? . g$6041$1RbCyC)
        (char=? . g$6037$1RbCyC)
        (char<? . g$6038$1RbCyC)
        (char<=? . g$6040$1RbCyC)
        (char->integer . g$11970$1RbCyC)
        (ceiling . g$11969$1RbCyC)
        (call-with-values . g$11968$1RbCyC)
        (call-with-current-continuation . g$11966$1RbCyC)
        (cddddr . g$5961$1RbCyC)
        (cdddar . g$5960$1RbCyC)
        (cddadr . g$5959$1RbCyC)
        (cddaar . g$5958$1RbCyC)
        (cdaddr . g$5957$1RbCyC)
        (cdadar . g$5956$1RbCyC)
        (cdaadr . g$5955$1RbCyC)
        (cdaaar . g$5954$1RbCyC)
        (cadddr . g$5953$1RbCyC)
        (caddar . g$5952$1RbCyC)
        (cadadr . g$5951$1RbCyC)
        (cadaar . g$5950$1RbCyC)
        (caaddr . g$5949$1RbCyC)
        (caadar . g$5948$1RbCyC)
        (caaadr . g$5947$1RbCyC)
        (caaaar . g$5946$1RbCyC)
        (cdddr . g$5945$1RbCyC)
        (cddar . g$5944$1RbCyC)
        (cdadr . g$5943$1RbCyC)
        (cdaar . g$5942$1RbCyC)
        (caddr . g$5941$1RbCyC)
        (cadar . g$5940$1RbCyC)
        (caadr . g$5939$1RbCyC)
        (caaar . g$5938$1RbCyC)
        (cddr . g$5937$1RbCyC)
        (cdar . g$5936$1RbCyC)
        (cadr . g$5935$1RbCyC)
        (caar . g$5934$1RbCyC)
        (cdr . g$11965$1RbCyC)
        (car . g$11964$1RbCyC)
        (boolean? . g$11963$1RbCyC)
        (atan . g$11962$1RbCyC)
        (asin . g$11960$1RbCyC)
        (apply . g$11959$1RbCyC)
        (append . g$11958$1RbCyC)
        (angle . g$11957$1RbCyC)
        (acos . g$11956$1RbCyC)
        (abs . g$11955$1RbCyC)
        (/ . g$11954$1RbCyC)
        (* . g$11953$1RbCyC)
        (- . g$11952$1RbCyC)
        (+ . g$11951$1RbCyC)
        (>= . g$11950$1RbCyC)
        (> . g$11949$1RbCyC)
        (= . g$11948$1RbCyC)
        (<= . g$11947$1RbCyC)
        (< . g$11946$1RbCyC)
        (unquote-splicing . g$11864$1RbCyC)
        (unquote . g$11863$1RbCyC)
        (else . g$11861$1RbCyC)
        (=> . g$11860$1RbCyC)
        (... . g$11859$1RbCyC)
        (delay . g$11856$1RbCyC)
        (or . g$11854$1RbCyC)
        (and . g$11853$1RbCyC)
        (do . g$11852$1RbCyC)
        (cond . g$11851$1RbCyC)
        (let* . g$11850$1RbCyC)
        (let . g$11849$1RbCyC)
        (quasiquote . g$11845$1RbCyC)
        (syntax-rules . g$11844$1RbCyC)
        (case . g$11835$1RbCyC)
        (if . g$11831$1RbCyC)
        (letrec . g$11829$1RbCyC)
        (lambda . g$11826$1RbCyC)
        (quote . g$11823$1RbCyC)
        (letrec-syntax . g$11821$1RbCyC)
        (let-syntax . g$11820$1RbCyC)
        (set! . g$11819$1RbCyC)
        (begin . g$11815$1RbCyC)
        (define-syntax . g$11813$1RbCyC)
        (define . g$11812$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12438$1RbCyC
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12334$1RbCyC)
        (string-titlecase . g$12333$1RbCyC)
        (string-normalize-nfkd . g$12332$1RbCyC)
        (string-normalize-nfkc . g$12331$1RbCyC)
        (string-normalize-nfd . g$12330$1RbCyC)
        (string-normalize-nfc . g$12329$1RbCyC)
        (string-foldcase . g$12328$1RbCyC)
        (string-downcase . g$12327$1RbCyC)
        (string-ci>? . g$6911$1RbCyC)
        (string-ci>=? . g$6913$1RbCyC)
        (string-ci=? . g$6909$1RbCyC)
        (string-ci<? . g$6910$1RbCyC)
        (string-ci<=? . g$6912$1RbCyC)
        (char-whitespace? . g$12326$1RbCyC)
        (char-upper-case? . g$12325$1RbCyC)
        (char-title-case? . g$12324$1RbCyC)
        (char-numeric? . g$12323$1RbCyC)
        (char-lower-case? . g$12322$1RbCyC)
        (char-general-category . g$12321$1RbCyC)
        (char-upcase . g$12320$1RbCyC)
        (char-titlecase . g$12319$1RbCyC)
        (char-foldcase . g$12318$1RbCyC)
        (char-downcase . g$12317$1RbCyC)
        (char-ci>? . g$6950$1RbCyC)
        (char-ci>=? . g$6952$1RbCyC)
        (char-ci=? . g$6948$1RbCyC)
        (char-ci<? . g$6949$1RbCyC)
        (char-ci<=? . g$6951$1RbCyC)
        (char-alphabetic? . g$12316$1RbCyC)
        (make-variable-transformer . g$8407$1RbCyC)
        (identifier? . g$8805$1RbCyC)
        (generate-temporaries . g$8794$1RbCyC)
        (free-identifier=? . g$8795$1RbCyC)
        (syntax->datum . g$8807$1RbCyC)
        (datum->syntax . g$8806$1RbCyC)
        (bound-identifier=? . g$8796$1RbCyC)
        (record-type-descriptor? . g$12315$1RbCyC)
        (record-predicate . g$12314$1RbCyC)
        (record-mutator . g$12313$1RbCyC)
        (record-constructor . g$12312$1RbCyC)
        (record-accessor . g$12311$1RbCyC)
        (make-record-type-descriptor . g$12310$1RbCyC)
        (make-record-constructor-descriptor . g$12309$1RbCyC)
        (record? . g$12308$1RbCyC)
        (record-type-uid . g$12307$1RbCyC)
        (record-type-sealed? . g$12306$1RbCyC)
        (record-type-parent . g$12305$1RbCyC)
        (record-type-opaque? . g$12304$1RbCyC)
        (record-type-name . g$12303$1RbCyC)
        (record-type-generative? . g$12302$1RbCyC)
        (record-type-field-names . g$12301$1RbCyC)
        (record-rtd . g$12300$1RbCyC)
        (record-field-mutable? . g$12299$1RbCyC)
        (delete-file . g$6486$1RbCyC)
        (file-exists? . g$6485$1RbCyC)
        (vector-sort! . g$12298$1RbCyC)
        (vector-sort . g$12297$1RbCyC)
        (list-sort . g$6849$1RbCyC)
        (symbol-hash . g$12296$1RbCyC)
        (string-ci-hash . g$12295$1RbCyC)
        (string-hash . g$12294$1RbCyC)
        (equal-hash . g$12293$1RbCyC)
        (hashtable-equivalence-function . g$12292$1RbCyC)
        (make-hashtable . g$12291$1RbCyC)
        (hashtable-hash-function . g$12290$1RbCyC)
        (make-eqv-hashtable . g$6453$1RbCyC)
        (make-eq-hashtable . g$6452$1RbCyC)
        (hashtable? . g$12289$1RbCyC)
        (hashtable-update! . g$6459$1RbCyC)
        (hashtable-size . g$6454$1RbCyC)
        (hashtable-set! . g$6456$1RbCyC)
        (hashtable-ref . g$6455$1RbCyC)
        (hashtable-mutable? . g$12288$1RbCyC)
        (hashtable-keys . g$12287$1RbCyC)
        (hashtable-entries . g$12286$1RbCyC)
        (hashtable-delete! . g$6457$1RbCyC)
        (hashtable-copy . g$12285$1RbCyC)
        (hashtable-contains? . g$6458$1RbCyC)
        (hashtable-clear! . g$6460$1RbCyC)
        (call-with-output-file . g$7342$1RbCyC)
        (call-with-input-file . g$7341$1RbCyC)
        (write-char . g$12284$1RbCyC)
        (write . g$12283$1RbCyC)
        (with-output-to-file . g$7340$1RbCyC)
        (with-input-from-file . g$7339$1RbCyC)
        (read-char . g$12282$1RbCyC)
        (read . g$12281$1RbCyC)
        (peek-char . g$12280$1RbCyC)
        (open-output-file . g$12279$1RbCyC)
        (open-input-file . g$12278$1RbCyC)
        (newline . g$12277$1RbCyC)
        (display . g$12276$1RbCyC)
        (close-output-port . g$12275$1RbCyC)
        (close-input-port . g$12274$1RbCyC)
        (eof-object? . g$12273$1RbCyC)
        (eof-object . g$12272$1RbCyC)
        (current-error-port . g$12271$1RbCyC)
        (current-output-port . g$12270$1RbCyC)
        (current-input-port . g$12269$1RbCyC)
        (output-port? . g$12268$1RbCyC)
        (input-port? . g$12267$1RbCyC)
        (utf-8-codec . g$12266$1RbCyC)
        (utf-16-codec . g$12265$1RbCyC)
        (transcoder-error-handling-mode . g$12264$1RbCyC)
        (transcoder-eol-style . g$12263$1RbCyC)
        (transcoder-codec . g$12262$1RbCyC)
        (transcoded-port . g$12261$1RbCyC)
        (textual-port? . g$12260$1RbCyC)
        (string->bytevector . g$12259$1RbCyC)
        (standard-output-port . g$12258$1RbCyC)
        (standard-input-port . g$12257$1RbCyC)
        (standard-error-port . g$12256$1RbCyC)
        (set-port-position! . g$12255$1RbCyC)
        (put-u8 . g$12254$1RbCyC)
        (put-string . g$12253$1RbCyC)
        (put-datum . g$12252$1RbCyC)
        (put-char . g$12251$1RbCyC)
        (put-bytevector . g$12250$1RbCyC)
        (port? . g$7315$1RbCyC)
        (port-transcoder . g$12249$1RbCyC)
        (port-position . g$12248$1RbCyC)
        (port-has-set-port-position!? . g$12247$1RbCyC)
        (port-has-port-position? . g$12246$1RbCyC)
        (port-eof? . g$12245$1RbCyC)
        (output-port-buffer-mode . g$12244$1RbCyC)
        (open-string-output-port . g$7314$1RbCyC)
        (open-string-input-port . g$12243$1RbCyC)
        (open-file-output-port . g$12242$1RbCyC)
        (open-file-input/output-port . g$12241$1RbCyC)
        (open-file-input-port . g$12240$1RbCyC)
        (open-bytevector-output-port . g$12239$1RbCyC)
        (open-bytevector-input-port . g$12238$1RbCyC)
        (native-transcoder . g$12237$1RbCyC)
        (native-eol-style . g$12236$1RbCyC)
        (make-transcoder . g$12235$1RbCyC)
        (latin-1-codec . g$12234$1RbCyC)
        (make-i/o-write-error . g$7171$1RbCyC)
        (make-i/o-read-error . g$7157$1RbCyC)
        (make-i/o-port-error . g$7276$1RbCyC)
        (make-i/o-invalid-position-error . g$7186$1RbCyC)
        (make-i/o-filename-error . g$7203$1RbCyC)
        (make-i/o-file-protection-error . g$7219$1RbCyC)
        (make-i/o-file-is-read-only-error . g$7233$1RbCyC)
        (make-i/o-file-does-not-exist-error . g$7261$1RbCyC)
        (make-i/o-file-already-exists-error . g$7247$1RbCyC)
        (make-i/o-error . g$7143$1RbCyC)
        (make-i/o-encoding-error . g$7307$1RbCyC)
        (make-i/o-decoding-error . g$7292$1RbCyC)
        (make-custom-textual-output-port . g$12233$1RbCyC)
        (make-custom-textual-input/output-port . g$12232$1RbCyC)
        (make-custom-textual-input-port . g$12231$1RbCyC)
        (make-custom-binary-output-port . g$12230$1RbCyC)
        (make-custom-binary-input/output-port . g$12229$1RbCyC)
        (make-custom-binary-input-port . g$12228$1RbCyC)
        (make-bytevector . g$12227$1RbCyC)
        (lookahead-u8 . g$12226$1RbCyC)
        (lookahead-char . g$12225$1RbCyC)
        (i/o-write-error? . g$7172$1RbCyC)
        (i/o-read-error? . g$7158$1RbCyC)
        (i/o-port-error? . g$7278$1RbCyC)
        (i/o-invalid-position-error? . g$7188$1RbCyC)
        (i/o-error-position . g$7189$1RbCyC)
        (i/o-filename-error? . g$7205$1RbCyC)
        (i/o-file-protection-error? . g$7220$1RbCyC)
        (i/o-file-is-read-only-error? . g$7234$1RbCyC)
        (i/o-file-does-not-exist-error? . g$7262$1RbCyC)
        (i/o-file-already-exists-error? . g$7248$1RbCyC)
        (i/o-error? . g$7144$1RbCyC)
        (i/o-error-port . g$7279$1RbCyC)
        (i/o-error-filename . g$7206$1RbCyC)
        (i/o-encoding-error? . g$7309$1RbCyC)
        (i/o-encoding-error-char . g$7310$1RbCyC)
        (i/o-decoding-error? . g$7293$1RbCyC)
        (get-u8 . g$12224$1RbCyC)
        (get-string-n! . g$12223$1RbCyC)
        (get-string-n . g$12222$1RbCyC)
        (get-string-all . g$12221$1RbCyC)
        (get-line . g$12220$1RbCyC)
        (get-datum . g$12219$1RbCyC)
        (get-char . g$12218$1RbCyC)
        (get-bytevector-some . g$12217$1RbCyC)
        (get-bytevector-n! . g$12216$1RbCyC)
        (get-bytevector-n . g$12215$1RbCyC)
        (get-bytevector-all . g$12214$1RbCyC)
        (flush-output-port . g$12213$1RbCyC)
        (close-port . g$12212$1RbCyC)
        (call-with-string-output-port . g$7316$1RbCyC)
        (call-with-port . g$12211$1RbCyC)
        (call-with-bytevector-output-port . g$12210$1RbCyC)
        (bytevector->string . g$12209$1RbCyC)
        (buffer-mode? . g$12208$1RbCyC)
        (binary-port? . g$12207$1RbCyC)
        (exit . g$12204$1RbCyC)
        (command-line . g$11776$1RbCyC)
        (remove . g$5847$1RbCyC)
        (remv . g$5848$1RbCyC)
        (remp . g$5830$1RbCyC)
        (remq . g$5849$1RbCyC)
        (partition . g$5829$1RbCyC)
        (memv . g$5837$1RbCyC)
        (memq . g$5836$1RbCyC)
        (memp . g$5839$1RbCyC)
        (member . g$5838$1RbCyC)
        (exists . g$5843$1RbCyC)
        (for-all . g$5842$1RbCyC)
        (fold-right . g$5846$1RbCyC)
        (fold-left . g$5845$1RbCyC)
        (find . g$5828$1RbCyC)
        (filter . g$5831$1RbCyC)
        (cons* . g$5844$1RbCyC)
        (assv . g$5833$1RbCyC)
        (assq . g$5832$1RbCyC)
        (assp . g$5835$1RbCyC)
        (assoc . g$5834$1RbCyC)
        (with-exception-handler . g$12199$1RbCyC)
        (raise-continuable . g$12198$1RbCyC)
        (raise . g$12197$1RbCyC)
        (make-enumeration . g$7400$1RbCyC)
        (enum-set=? . g$7407$1RbCyC)
        (enum-set-universe . g$7401$1RbCyC)
        (enum-set-union . g$7408$1RbCyC)
        (enum-set-subset? . g$7406$1RbCyC)
        (enum-set-projection . g$7412$1RbCyC)
        (enum-set-member? . g$7405$1RbCyC)
        (enum-set-intersection . g$7409$1RbCyC)
        (enum-set-indexer . g$7402$1RbCyC)
        (enum-set-difference . g$7410$1RbCyC)
        (enum-set-constructor . g$7403$1RbCyC)
        (enum-set-complement . g$7411$1RbCyC)
        (enum-set->list . g$7404$1RbCyC)
        (who-condition? . g$6740$1RbCyC)
        (warning? . g$6651$1RbCyC)
        (violation? . g$6693$1RbCyC)
        (undefined-violation? . g$6817$1RbCyC)
        (syntax-violation? . g$6801$1RbCyC)
        (syntax-violation-subform . g$6803$1RbCyC)
        (syntax-violation-form . g$6802$1RbCyC)
        (syntax-violation . g$8804$1RbCyC)
        (simple-conditions . g$12196$1RbCyC)
        (serious-condition? . g$6665$1RbCyC)
        (non-continuable-violation? . g$6755$1RbCyC)
        (message-condition? . g$6636$1RbCyC)
        (make-who-condition . g$6738$1RbCyC)
        (make-warning . g$6650$1RbCyC)
        (make-violation . g$6692$1RbCyC)
        (make-undefined-violation . g$6816$1RbCyC)
        (make-syntax-violation . g$6798$1RbCyC)
        (make-serious-condition . g$6664$1RbCyC)
        (make-non-continuable-violation . g$6754$1RbCyC)
        (make-message-condition . g$6634$1RbCyC)
        (make-lexical-violation . g$6782$1RbCyC)
        (make-irritants-condition . g$6721$1RbCyC)
        (make-implementation-restriction-violation . g$6768$1RbCyC)
        (make-error . g$6678$1RbCyC)
        (make-assertion-violation . g$6706$1RbCyC)
        (lexical-violation? . g$6783$1RbCyC)
        (irritants-condition? . g$6723$1RbCyC)
        (implementation-restriction-violation? . g$6769$1RbCyC)
        (error? . g$6679$1RbCyC)
        (condition-who . g$6741$1RbCyC)
        (condition-predicate . g$12195$1RbCyC)
        (condition-message . g$6637$1RbCyC)
        (condition-irritants . g$6724$1RbCyC)
        (condition-accessor . g$12194$1RbCyC)
        (condition . g$12193$1RbCyC)
        (assertion-violation? . g$6707$1RbCyC)
        (condition? . g$12192$1RbCyC)
        (utf32->string . g$12191$1RbCyC)
        (utf16->string . g$12190$1RbCyC)
        (utf8->string . g$12189$1RbCyC)
        (uint-list->bytevector . g$12188$1RbCyC)
        (u8-list->bytevector . g$12187$1RbCyC)
        (string->utf8 . g$12186$1RbCyC)
        (string->utf32 . g$12185$1RbCyC)
        (string->utf16 . g$12184$1RbCyC)
        (sint-list->bytevector . g$12183$1RbCyC)
        (native-endianness . g$6492$1RbCyC)
        (bytevector? . g$12182$1RbCyC)
        (bytevector=? . g$12181$1RbCyC)
        (bytevector-uint-set! . g$12180$1RbCyC)
        (bytevector-uint-ref . g$12179$1RbCyC)
        (bytevector-u8-set! . g$12178$1RbCyC)
        (bytevector-u8-ref . g$12177$1RbCyC)
        (bytevector-u64-set! . g$6513$1RbCyC)
        (bytevector-u64-ref . g$6509$1RbCyC)
        (bytevector-u64-native-set! . g$6515$1RbCyC)
        (bytevector-u64-native-ref . g$6511$1RbCyC)
        (bytevector-u32-set! . g$6505$1RbCyC)
        (bytevector-u32-ref . g$6501$1RbCyC)
        (bytevector-u32-native-set! . g$6507$1RbCyC)
        (bytevector-u32-native-ref . g$6503$1RbCyC)
        (bytevector-u16-set! . g$6497$1RbCyC)
        (bytevector-u16-ref . g$6493$1RbCyC)
        (bytevector-u16-native-set! . g$6499$1RbCyC)
        (bytevector-u16-native-ref . g$6495$1RbCyC)
        (bytevector-sint-set! . g$12176$1RbCyC)
        (bytevector-sint-ref . g$12175$1RbCyC)
        (bytevector-s8-set! . g$12174$1RbCyC)
        (bytevector-s8-ref . g$12173$1RbCyC)
        (bytevector-s64-set! . g$6514$1RbCyC)
        (bytevector-s64-ref . g$6510$1RbCyC)
        (bytevector-s64-native-set! . g$6516$1RbCyC)
        (bytevector-s64-native-ref . g$6512$1RbCyC)
        (bytevector-s32-set! . g$6506$1RbCyC)
        (bytevector-s32-ref . g$6502$1RbCyC)
        (bytevector-s32-native-set! . g$6508$1RbCyC)
        (bytevector-s32-native-ref . g$6504$1RbCyC)
        (bytevector-s16-set! . g$6498$1RbCyC)
        (bytevector-s16-ref . g$6494$1RbCyC)
        (bytevector-s16-native-set! . g$6500$1RbCyC)
        (bytevector-s16-native-ref . g$6496$1RbCyC)
        (bytevector-length . g$12172$1RbCyC)
        (bytevector-ieee-single-set! . g$12171$1RbCyC)
        (bytevector-ieee-single-ref . g$12170$1RbCyC)
        (bytevector-ieee-single-native-set! . g$6519$1RbCyC)
        (bytevector-ieee-single-native-ref . g$6517$1RbCyC)
        (bytevector-ieee-double-set! . g$12169$1RbCyC)
        (bytevector-ieee-double-ref . g$12168$1RbCyC)
        (bytevector-ieee-double-native-set! . g$6520$1RbCyC)
        (bytevector-ieee-double-native-ref . g$6518$1RbCyC)
        (bytevector-fill! . g$12167$1RbCyC)
        (bytevector-copy! . g$12166$1RbCyC)
        (bytevector-copy . g$12165$1RbCyC)
        (bytevector->uint-list . g$12164$1RbCyC)
        (bytevector->u8-list . g$12163$1RbCyC)
        (bytevector->sint-list . g$12162$1RbCyC)
        (no-nans-violation? . g$7129$1RbCyC)
        (no-infinities-violation? . g$7115$1RbCyC)
        (make-no-nans-violation . g$7128$1RbCyC)
        (make-no-infinities-violation . g$7114$1RbCyC)
        (real->flonum . g$12161$1RbCyC)
        (flzero? . g$12160$1RbCyC)
        (fltruncate . g$12159$1RbCyC)
        (fltan . g$12158$1RbCyC)
        (flsqrt . g$12157$1RbCyC)
        (flsin . g$12156$1RbCyC)
        (flround . g$12155$1RbCyC)
        (flpositive? . g$12154$1RbCyC)
        (flonum? . g$12153$1RbCyC)
        (flodd? . g$12152$1RbCyC)
        (flnumerator . g$12151$1RbCyC)
        (flnegative? . g$12150$1RbCyC)
        (flnan? . g$12149$1RbCyC)
        (flmod0 . g$12148$1RbCyC)
        (flmod . g$12147$1RbCyC)
        (flmin . g$12146$1RbCyC)
        (flmax . g$12145$1RbCyC)
        (fllog . g$12144$1RbCyC)
        (flinteger? . g$12143$1RbCyC)
        (flinfinite? . g$12142$1RbCyC)
        (flfloor . g$12141$1RbCyC)
        (flfinite? . g$12140$1RbCyC)
        (flexpt . g$12139$1RbCyC)
        (flexp . g$12138$1RbCyC)
        (fleven? . g$12137$1RbCyC)
        (fldiv0-and-mod0 . g$12136$1RbCyC)
        (fldiv0 . g$12135$1RbCyC)
        (fldiv-and-mod . g$12134$1RbCyC)
        (fldiv . g$12133$1RbCyC)
        (fldenominator . g$12132$1RbCyC)
        (flcos . g$12131$1RbCyC)
        (flceiling . g$12130$1RbCyC)
        (flatan . g$12129$1RbCyC)
        (flasin . g$12128$1RbCyC)
        (flacos . g$12127$1RbCyC)
        (flabs . g$12126$1RbCyC)
        (fl>? . g$12125$1RbCyC)
        (fl>=? . g$12124$1RbCyC)
        (fl=? . g$12123$1RbCyC)
        (fl<? . g$12122$1RbCyC)
        (fl<=? . g$12121$1RbCyC)
        (fl/ . g$12120$1RbCyC)
        (fl- . g$12119$1RbCyC)
        (fl+ . g$12118$1RbCyC)
        (fl* . g$12117$1RbCyC)
        (fixnum->flonum . g$12116$1RbCyC)
        (fxzero? . g$12115$1RbCyC)
        (fxxor . g$12114$1RbCyC)
        (fxrotate-bit-field . g$7060$1RbCyC)
        (fxreverse-bit-field . g$12113$1RbCyC)
        (fxpositive? . g$12112$1RbCyC)
        (fxodd? . g$12111$1RbCyC)
        (fxnot . g$12110$1RbCyC)
        (fxnegative? . g$12109$1RbCyC)
        (fxmod0 . g$12108$1RbCyC)
        (fxmod . g$12107$1RbCyC)
        (fxmin . g$12106$1RbCyC)
        (fxmax . g$12105$1RbCyC)
        (fxlength . g$12104$1RbCyC)
        (fxior . g$12103$1RbCyC)
        (fxif . g$7054$1RbCyC)
        (fxfirst-bit-set . g$12102$1RbCyC)
        (fxeven? . g$12101$1RbCyC)
        (fxdiv0-and-mod0 . g$12100$1RbCyC)
        (fxdiv0 . g$12099$1RbCyC)
        (fxdiv-and-mod . g$12098$1RbCyC)
        (fxdiv . g$12097$1RbCyC)
        (fxcopy-bit-field . g$7057$1RbCyC)
        (fxcopy-bit . g$7055$1RbCyC)
        (fxbit-set? . g$12096$1RbCyC)
        (fxbit-field . g$7056$1RbCyC)
        (fxbit-count . g$12095$1RbCyC)
        (fxarithmetic-shift-right . g$7059$1RbCyC)
        (fxarithmetic-shift-left . g$7058$1RbCyC)
        (fxarithmetic-shift . g$12094$1RbCyC)
        (fxand . g$12093$1RbCyC)
        (fx>? . g$12092$1RbCyC)
        (fx>=? . g$12091$1RbCyC)
        (fx=? . g$12090$1RbCyC)
        (fx<? . g$12089$1RbCyC)
        (fx<=? . g$12088$1RbCyC)
        (fx-/carry . g$12087$1RbCyC)
        (fx- . g$12086$1RbCyC)
        (fx+/carry . g$12085$1RbCyC)
        (fx+ . g$12084$1RbCyC)
        (fx*/carry . g$12083$1RbCyC)
        (fx* . g$12082$1RbCyC)
        (greatest-fixnum . g$12081$1RbCyC)
        (least-fixnum . g$12080$1RbCyC)
        (fixnum-width . g$12079$1RbCyC)
        (fixnum? . g$12078$1RbCyC)
        (bitwise-rotate-bit-field . g$7012$1RbCyC)
        (bitwise-reverse-bit-field . g$12077$1RbCyC)
        (bitwise-length . g$12076$1RbCyC)
        (bitwise-if . g$7006$1RbCyC)
        (bitwise-first-bit-set . g$12075$1RbCyC)
        (bitwise-copy-bit-field . g$7009$1RbCyC)
        (bitwise-copy-bit . g$7007$1RbCyC)
        (bitwise-bit-set? . g$12074$1RbCyC)
        (bitwise-bit-field . g$12073$1RbCyC)
        (bitwise-bit-count . g$12072$1RbCyC)
        (bitwise-xor . g$12071$1RbCyC)
        (bitwise-ior . g$12070$1RbCyC)
        (bitwise-and . g$12069$1RbCyC)
        (bitwise-not . g$12068$1RbCyC)
        (bitwise-arithmetic-shift-right . g$7011$1RbCyC)
        (bitwise-arithmetic-shift-left . g$7010$1RbCyC)
        (bitwise-arithmetic-shift . g$12067$1RbCyC)
        (zero? . g$12066$1RbCyC)
        (vector? . g$12065$1RbCyC)
        (vector-set! . g$12064$1RbCyC)
        (vector-ref . g$12063$1RbCyC)
        (vector-map . g$12062$1RbCyC)
        (vector-length . g$12061$1RbCyC)
        (vector-for-each . g$12060$1RbCyC)
        (vector-fill! . g$12059$1RbCyC)
        (vector->list . g$12058$1RbCyC)
        (vector . g$12057$1RbCyC)
        (values . g$12056$1RbCyC)
        (truncate . g$12055$1RbCyC)
        (tan . g$12054$1RbCyC)
        (symbol? . g$12053$1RbCyC)
        (symbol=? . g$6001$1RbCyC)
        (symbol->string . g$12052$1RbCyC)
        (substring . g$12051$1RbCyC)
        (string? . g$12050$1RbCyC)
        (string>? . g$5998$1RbCyC)
        (string>=? . g$6000$1RbCyC)
        (string=? . g$5996$1RbCyC)
        (string<? . g$5997$1RbCyC)
        (string<=? . g$5999$1RbCyC)
        (string-ref . g$12049$1RbCyC)
        (string-length . g$12048$1RbCyC)
        (string-for-each . g$12047$1RbCyC)
        (string-copy . g$12046$1RbCyC)
        (string-append . g$12045$1RbCyC)
        (string->symbol . g$12044$1RbCyC)
        (string->number . g$12043$1RbCyC)
        (string->list . g$12042$1RbCyC)
        (string . g$12041$1RbCyC)
        (sqrt . g$12040$1RbCyC)
        (sin . g$12039$1RbCyC)
        (round . g$12038$1RbCyC)
        (reverse . g$12037$1RbCyC)
        (real? . g$12036$1RbCyC)
        (real-valued? . g$12035$1RbCyC)
        (real-part . g$12034$1RbCyC)
        (rationalize . g$6042$1RbCyC)
        (rational? . g$12033$1RbCyC)
        (rational-valued? . g$12032$1RbCyC)
        (procedure? . g$12031$1RbCyC)
        (positive? . g$12030$1RbCyC)
        (pair? . g$12029$1RbCyC)
        (odd? . g$12028$1RbCyC)
        (numerator . g$12027$1RbCyC)
        (number? . g$12026$1RbCyC)
        (number->string . g$12025$1RbCyC)
        (null? . g$12024$1RbCyC)
        (not . g$12023$1RbCyC)
        (negative? . g$12022$1RbCyC)
        (nan? . g$12021$1RbCyC)
        (min . g$12020$1RbCyC)
        (max . g$12019$1RbCyC)
        (map . g$12018$1RbCyC)
        (make-vector . g$12017$1RbCyC)
        (make-string . g$12016$1RbCyC)
        (make-rectangular . g$12015$1RbCyC)
        (make-polar . g$12014$1RbCyC)
        (magnitude . g$12013$1RbCyC)
        (log . g$12012$1RbCyC)
        (list? . g$12011$1RbCyC)
        (list-tail . g$12010$1RbCyC)
        (list-ref . g$12009$1RbCyC)
        (list->vector . g$12008$1RbCyC)
        (list->string . g$12007$1RbCyC)
        (list . g$12006$1RbCyC)
        (length . g$12005$1RbCyC)
        (lcm . g$12004$1RbCyC)
        (integer? . g$12003$1RbCyC)
        (integer-valued? . g$12002$1RbCyC)
        (integer->char . g$12001$1RbCyC)
        (infinite? . g$12000$1RbCyC)
        (inexact? . g$11999$1RbCyC)
        (inexact . g$11998$1RbCyC)
        (imag-part . g$11997$1RbCyC)
        (gcd . g$11996$1RbCyC)
        (for-each . g$11995$1RbCyC)
        (floor . g$11994$1RbCyC)
        (finite? . g$11993$1RbCyC)
        (expt . g$11992$1RbCyC)
        (exp . g$11991$1RbCyC)
        (exact? . g$11990$1RbCyC)
        (exact-integer-sqrt . g$11989$1RbCyC)
        (exact . g$11988$1RbCyC)
        (even? . g$11987$1RbCyC)
        (error . g$11986$1RbCyC)
        (eqv? . g$11985$1RbCyC)
        (equal? . g$11984$1RbCyC)
        (eq? . g$11983$1RbCyC)
        (dynamic-wind . g$11982$1RbCyC)
        (div0-and-mod0 . g$11981$1RbCyC)
        (mod0 . g$11980$1RbCyC)
        (div0 . g$11979$1RbCyC)
        (div-and-mod . g$11978$1RbCyC)
        (mod . g$11977$1RbCyC)
        (div . g$11976$1RbCyC)
        (denominator . g$11975$1RbCyC)
        (cos . g$11974$1RbCyC)
        (cons . g$11973$1RbCyC)
        (complex? . g$11972$1RbCyC)
        (char? . g$11971$1RbCyC)
        (char>? . g$6039$1RbCyC)
        (char>=? . g$6041$1RbCyC)
        (char=? . g$6037$1RbCyC)
        (char<? . g$6038$1RbCyC)
        (char<=? . g$6040$1RbCyC)
        (char->integer . g$11970$1RbCyC)
        (ceiling . g$11969$1RbCyC)
        (call-with-values . g$11968$1RbCyC)
        (call/cc . g$11967$1RbCyC)
        (call-with-current-continuation . g$11966$1RbCyC)
        (cddddr . g$5961$1RbCyC)
        (cdddar . g$5960$1RbCyC)
        (cddadr . g$5959$1RbCyC)
        (cddaar . g$5958$1RbCyC)
        (cdaddr . g$5957$1RbCyC)
        (cdadar . g$5956$1RbCyC)
        (cdaadr . g$5955$1RbCyC)
        (cdaaar . g$5954$1RbCyC)
        (cadddr . g$5953$1RbCyC)
        (caddar . g$5952$1RbCyC)
        (cadadr . g$5951$1RbCyC)
        (cadaar . g$5950$1RbCyC)
        (caaddr . g$5949$1RbCyC)
        (caadar . g$5948$1RbCyC)
        (caaadr . g$5947$1RbCyC)
        (caaaar . g$5946$1RbCyC)
        (cdddr . g$5945$1RbCyC)
        (cddar . g$5944$1RbCyC)
        (cdadr . g$5943$1RbCyC)
        (cdaar . g$5942$1RbCyC)
        (caddr . g$5941$1RbCyC)
        (cadar . g$5940$1RbCyC)
        (caadr . g$5939$1RbCyC)
        (caaar . g$5938$1RbCyC)
        (cddr . g$5937$1RbCyC)
        (cdar . g$5936$1RbCyC)
        (cadr . g$5935$1RbCyC)
        (caar . g$5934$1RbCyC)
        (cdr . g$11965$1RbCyC)
        (car . g$11964$1RbCyC)
        (boolean? . g$11963$1RbCyC)
        (boolean=? . g$6002$1RbCyC)
        (atan . g$11962$1RbCyC)
        (assertion-violation . g$11961$1RbCyC)
        (asin . g$11960$1RbCyC)
        (apply . g$11959$1RbCyC)
        (append . g$11958$1RbCyC)
        (angle . g$11957$1RbCyC)
        (acos . g$11956$1RbCyC)
        (abs . g$11955$1RbCyC)
        (/ . g$11954$1RbCyC)
        (* . g$11953$1RbCyC)
        (- . g$11952$1RbCyC)
        (+ . g$11951$1RbCyC)
        (>= . g$11950$1RbCyC)
        (> . g$11949$1RbCyC)
        (= . g$11948$1RbCyC)
        (<= . g$11947$1RbCyC)
        (< . g$11946$1RbCyC)
        (&no-nans . g$11916$1RbCyC)
        (&no-infinities . g$11915$1RbCyC)
        (&i/o-encoding . g$11914$1RbCyC)
        (&i/o-decoding . g$11913$1RbCyC)
        (&i/o-port . g$11912$1RbCyC)
        (&i/o-file-does-not-exist . g$11911$1RbCyC)
        (&i/o-file-already-exists . g$11910$1RbCyC)
        (&i/o-file-is-read-only . g$11909$1RbCyC)
        (&i/o-file-protection . g$11908$1RbCyC)
        (&i/o-filename . g$11907$1RbCyC)
        (&i/o-invalid-position . g$11906$1RbCyC)
        (&i/o-write . g$11905$1RbCyC)
        (&i/o-read . g$11904$1RbCyC)
        (&i/o . g$11903$1RbCyC)
        (&non-continuable . g$11902$1RbCyC)
        (&undefined . g$11901$1RbCyC)
        (&syntax . g$11900$1RbCyC)
        (&lexical . g$11899$1RbCyC)
        (&implementation-restriction . g$11898$1RbCyC)
        (&who . g$11897$1RbCyC)
        (&irritants . g$11896$1RbCyC)
        (&assertion . g$11895$1RbCyC)
        (&violation . g$11894$1RbCyC)
        (&error . g$11893$1RbCyC)
        (&serious . g$11892$1RbCyC)
        (&warning . g$11891$1RbCyC)
        (&message . g$11890$1RbCyC)
        (&condition . g$11889$1RbCyC)
        (define-condition-type . g$11888$1RbCyC)
        (define-enumeration . g$11887$1RbCyC)
        (define-record-type . g$11886$1RbCyC)
        (parent-rtd . g$11885$1RbCyC)
        (nongenerative . g$11884$1RbCyC)
        (opaque . g$11883$1RbCyC)
        (sealed . g$11882$1RbCyC)
        (protocol . g$11881$1RbCyC)
        (parent . g$11880$1RbCyC)
        (immutable . g$11879$1RbCyC)
        (mutable . g$11878$1RbCyC)
        (fields . g$11877$1RbCyC)
        (error-handling-mode . g$11876$1RbCyC)
        (file-options . g$11875$1RbCyC)
        (buffer-mode . g$11874$1RbCyC)
        (eol-style . g$11873$1RbCyC)
        (guard . g$11872$1RbCyC)
        (unsyntax-splicing . g$11866$1RbCyC)
        (unsyntax . g$11865$1RbCyC)
        (unquote-splicing . g$11864$1RbCyC)
        (unquote . g$11863$1RbCyC)
        (_ . g$11862$1RbCyC)
        (else . g$11861$1RbCyC)
        (=> . g$11860$1RbCyC)
        (... . g$11859$1RbCyC)
        (assert . g$11858$1RbCyC)
        (endianness . g$11857$1RbCyC)
        (or . g$11854$1RbCyC)
        (and . g$11853$1RbCyC)
        (do . g$11852$1RbCyC)
        (cond . g$11851$1RbCyC)
        (let* . g$11850$1RbCyC)
        (let . g$11849$1RbCyC)
        (identifier-syntax . g$11848$1RbCyC)
        (with-syntax . g$11847$1RbCyC)
        (quasisyntax . g$11846$1RbCyC)
        (quasiquote . g$11845$1RbCyC)
        (syntax-rules . g$11844$1RbCyC)
        (let-values . g$11840$1RbCyC)
        (let*-values . g$11839$1RbCyC)
        (record-constructor-descriptor . g$11838$1RbCyC)
        (record-type-descriptor . g$11837$1RbCyC)
        (case . g$11835$1RbCyC)
        (unless . g$11833$1RbCyC)
        (when . g$11832$1RbCyC)
        (if . g$11831$1RbCyC)
        (letrec* . g$11830$1RbCyC)
        (letrec . g$11829$1RbCyC)
        (case-lambda . g$11827$1RbCyC)
        (lambda . g$11826$1RbCyC)
        (syntax . g$11825$1RbCyC)
        (syntax-case . g$11824$1RbCyC)
        (quote . g$11823$1RbCyC)
        (letrec-syntax . g$11821$1RbCyC)
        (let-syntax . g$11820$1RbCyC)
        (set! . g$11819$1RbCyC)
        (begin . g$11815$1RbCyC)
        (define-syntax . g$11813$1RbCyC)
        (define . g$11812$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12439$1RbCyC
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$8810$1RbCyC)
        (scheme-report-environment . g$8785$1RbCyC)
        (quotient . g$6829$1RbCyC)
        (null-environment . g$8784$1RbCyC)
        (remainder . g$6830$1RbCyC)
        (modulo . g$6831$1RbCyC)
        (inexact->exact . g$12206$1RbCyC)
        (force . g$6833$1RbCyC)
        (exact->inexact . g$12205$1RbCyC)
        (delay . g$11856$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12440$1RbCyC
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11852$1RbCyC)
        (unless . g$11833$1RbCyC)
        (when . g$11832$1RbCyC)
        (case-lambda . g$11827$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12441$1RbCyC
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8787$1RbCyC) (environment . g$8783$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12442$1RbCyC
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$12201$1RbCyC) (set-car! . g$12200$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12443$1RbCyC
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$12203$1RbCyC) (string-set! . g$12202$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12444$1RbCyC
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$12204$1RbCyC) (command-line . g$11776$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12445$1RbCyC
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$8407$1RbCyC)
        (identifier? . g$8805$1RbCyC)
        (generate-temporaries . g$8794$1RbCyC)
        (free-identifier=? . g$8795$1RbCyC)
        (syntax->datum . g$8807$1RbCyC)
        (datum->syntax . g$8806$1RbCyC)
        (bound-identifier=? . g$8796$1RbCyC)
        (syntax-violation . g$8804$1RbCyC)
        (unsyntax-splicing . g$11866$1RbCyC)
        (unsyntax . g$11865$1RbCyC)
        (_ . g$11862$1RbCyC)
        (... . g$11859$1RbCyC)
        (with-syntax . g$11847$1RbCyC)
        (quasisyntax . g$11846$1RbCyC)
        (syntax . g$11825$1RbCyC)
        (syntax-case . g$11824$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12446$1RbCyC
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6486$1RbCyC)
        (file-exists? . g$6485$1RbCyC)
        (make-i/o-write-error . g$7171$1RbCyC)
        (make-i/o-read-error . g$7157$1RbCyC)
        (make-i/o-port-error . g$7276$1RbCyC)
        (make-i/o-invalid-position-error . g$7186$1RbCyC)
        (make-i/o-filename-error . g$7203$1RbCyC)
        (make-i/o-file-protection-error . g$7219$1RbCyC)
        (make-i/o-file-is-read-only-error . g$7233$1RbCyC)
        (make-i/o-file-does-not-exist-error . g$7261$1RbCyC)
        (make-i/o-file-already-exists-error . g$7247$1RbCyC)
        (make-i/o-error . g$7143$1RbCyC)
        (i/o-write-error? . g$7172$1RbCyC)
        (i/o-read-error? . g$7158$1RbCyC)
        (i/o-port-error? . g$7278$1RbCyC)
        (i/o-invalid-position-error? . g$7188$1RbCyC)
        (i/o-error-position . g$7189$1RbCyC)
        (i/o-filename-error? . g$7205$1RbCyC)
        (i/o-file-protection-error? . g$7220$1RbCyC)
        (i/o-file-is-read-only-error? . g$7234$1RbCyC)
        (i/o-file-does-not-exist-error? . g$7262$1RbCyC)
        (i/o-file-already-exists-error? . g$7248$1RbCyC)
        (i/o-error? . g$7144$1RbCyC)
        (i/o-error-port . g$7279$1RbCyC)
        (i/o-error-filename . g$7206$1RbCyC)
        (&i/o-port . g$11912$1RbCyC)
        (&i/o-file-does-not-exist . g$11911$1RbCyC)
        (&i/o-file-already-exists . g$11910$1RbCyC)
        (&i/o-file-is-read-only . g$11909$1RbCyC)
        (&i/o-file-protection . g$11908$1RbCyC)
        (&i/o-filename . g$11907$1RbCyC)
        (&i/o-invalid-position . g$11906$1RbCyC)
        (&i/o-write . g$11905$1RbCyC)
        (&i/o-read . g$11904$1RbCyC)
        (&i/o . g$11903$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12447$1RbCyC
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$12298$1RbCyC)
        (vector-sort . g$12297$1RbCyC)
        (list-sort . g$6849$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12448$1RbCyC
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$12066$1RbCyC)
        (vector? . g$12065$1RbCyC)
        (vector-set! . g$12064$1RbCyC)
        (vector-ref . g$12063$1RbCyC)
        (vector-map . g$12062$1RbCyC)
        (vector-length . g$12061$1RbCyC)
        (vector-for-each . g$12060$1RbCyC)
        (vector-fill! . g$12059$1RbCyC)
        (vector->list . g$12058$1RbCyC)
        (vector . g$12057$1RbCyC)
        (values . g$12056$1RbCyC)
        (truncate . g$12055$1RbCyC)
        (tan . g$12054$1RbCyC)
        (symbol? . g$12053$1RbCyC)
        (symbol=? . g$6001$1RbCyC)
        (symbol->string . g$12052$1RbCyC)
        (substring . g$12051$1RbCyC)
        (string? . g$12050$1RbCyC)
        (string>? . g$5998$1RbCyC)
        (string>=? . g$6000$1RbCyC)
        (string=? . g$5996$1RbCyC)
        (string<? . g$5997$1RbCyC)
        (string<=? . g$5999$1RbCyC)
        (string-ref . g$12049$1RbCyC)
        (string-length . g$12048$1RbCyC)
        (string-for-each . g$12047$1RbCyC)
        (string-copy . g$12046$1RbCyC)
        (string-append . g$12045$1RbCyC)
        (string->symbol . g$12044$1RbCyC)
        (string->number . g$12043$1RbCyC)
        (string->list . g$12042$1RbCyC)
        (string . g$12041$1RbCyC)
        (sqrt . g$12040$1RbCyC)
        (sin . g$12039$1RbCyC)
        (round . g$12038$1RbCyC)
        (reverse . g$12037$1RbCyC)
        (real? . g$12036$1RbCyC)
        (real-valued? . g$12035$1RbCyC)
        (real-part . g$12034$1RbCyC)
        (rationalize . g$6042$1RbCyC)
        (rational? . g$12033$1RbCyC)
        (rational-valued? . g$12032$1RbCyC)
        (procedure? . g$12031$1RbCyC)
        (positive? . g$12030$1RbCyC)
        (pair? . g$12029$1RbCyC)
        (odd? . g$12028$1RbCyC)
        (numerator . g$12027$1RbCyC)
        (number? . g$12026$1RbCyC)
        (number->string . g$12025$1RbCyC)
        (null? . g$12024$1RbCyC)
        (not . g$12023$1RbCyC)
        (negative? . g$12022$1RbCyC)
        (nan? . g$12021$1RbCyC)
        (min . g$12020$1RbCyC)
        (max . g$12019$1RbCyC)
        (map . g$12018$1RbCyC)
        (make-vector . g$12017$1RbCyC)
        (make-string . g$12016$1RbCyC)
        (make-rectangular . g$12015$1RbCyC)
        (make-polar . g$12014$1RbCyC)
        (magnitude . g$12013$1RbCyC)
        (log . g$12012$1RbCyC)
        (list? . g$12011$1RbCyC)
        (list-tail . g$12010$1RbCyC)
        (list-ref . g$12009$1RbCyC)
        (list->vector . g$12008$1RbCyC)
        (list->string . g$12007$1RbCyC)
        (list . g$12006$1RbCyC)
        (length . g$12005$1RbCyC)
        (lcm . g$12004$1RbCyC)
        (integer? . g$12003$1RbCyC)
        (integer-valued? . g$12002$1RbCyC)
        (integer->char . g$12001$1RbCyC)
        (infinite? . g$12000$1RbCyC)
        (inexact? . g$11999$1RbCyC)
        (inexact . g$11998$1RbCyC)
        (imag-part . g$11997$1RbCyC)
        (gcd . g$11996$1RbCyC)
        (for-each . g$11995$1RbCyC)
        (floor . g$11994$1RbCyC)
        (finite? . g$11993$1RbCyC)
        (expt . g$11992$1RbCyC)
        (exp . g$11991$1RbCyC)
        (exact? . g$11990$1RbCyC)
        (exact-integer-sqrt . g$11989$1RbCyC)
        (exact . g$11988$1RbCyC)
        (even? . g$11987$1RbCyC)
        (error . g$11986$1RbCyC)
        (eqv? . g$11985$1RbCyC)
        (equal? . g$11984$1RbCyC)
        (eq? . g$11983$1RbCyC)
        (dynamic-wind . g$11982$1RbCyC)
        (div0-and-mod0 . g$11981$1RbCyC)
        (mod0 . g$11980$1RbCyC)
        (div0 . g$11979$1RbCyC)
        (div-and-mod . g$11978$1RbCyC)
        (mod . g$11977$1RbCyC)
        (div . g$11976$1RbCyC)
        (denominator . g$11975$1RbCyC)
        (cos . g$11974$1RbCyC)
        (cons . g$11973$1RbCyC)
        (complex? . g$11972$1RbCyC)
        (char? . g$11971$1RbCyC)
        (char>? . g$6039$1RbCyC)
        (char>=? . g$6041$1RbCyC)
        (char=? . g$6037$1RbCyC)
        (char<? . g$6038$1RbCyC)
        (char<=? . g$6040$1RbCyC)
        (char->integer . g$11970$1RbCyC)
        (ceiling . g$11969$1RbCyC)
        (call-with-values . g$11968$1RbCyC)
        (call/cc . g$11967$1RbCyC)
        (call-with-current-continuation . g$11966$1RbCyC)
        (cddddr . g$5961$1RbCyC)
        (cdddar . g$5960$1RbCyC)
        (cddadr . g$5959$1RbCyC)
        (cddaar . g$5958$1RbCyC)
        (cdaddr . g$5957$1RbCyC)
        (cdadar . g$5956$1RbCyC)
        (cdaadr . g$5955$1RbCyC)
        (cdaaar . g$5954$1RbCyC)
        (cadddr . g$5953$1RbCyC)
        (caddar . g$5952$1RbCyC)
        (cadadr . g$5951$1RbCyC)
        (cadaar . g$5950$1RbCyC)
        (caaddr . g$5949$1RbCyC)
        (caadar . g$5948$1RbCyC)
        (caaadr . g$5947$1RbCyC)
        (caaaar . g$5946$1RbCyC)
        (cdddr . g$5945$1RbCyC)
        (cddar . g$5944$1RbCyC)
        (cdadr . g$5943$1RbCyC)
        (cdaar . g$5942$1RbCyC)
        (caddr . g$5941$1RbCyC)
        (cadar . g$5940$1RbCyC)
        (caadr . g$5939$1RbCyC)
        (caaar . g$5938$1RbCyC)
        (cddr . g$5937$1RbCyC)
        (cdar . g$5936$1RbCyC)
        (cadr . g$5935$1RbCyC)
        (caar . g$5934$1RbCyC)
        (cdr . g$11965$1RbCyC)
        (car . g$11964$1RbCyC)
        (boolean? . g$11963$1RbCyC)
        (boolean=? . g$6002$1RbCyC)
        (atan . g$11962$1RbCyC)
        (assertion-violation . g$11961$1RbCyC)
        (asin . g$11960$1RbCyC)
        (apply . g$11959$1RbCyC)
        (append . g$11958$1RbCyC)
        (angle . g$11957$1RbCyC)
        (acos . g$11956$1RbCyC)
        (abs . g$11955$1RbCyC)
        (/ . g$11954$1RbCyC)
        (* . g$11953$1RbCyC)
        (- . g$11952$1RbCyC)
        (+ . g$11951$1RbCyC)
        (>= . g$11950$1RbCyC)
        (> . g$11949$1RbCyC)
        (= . g$11948$1RbCyC)
        (<= . g$11947$1RbCyC)
        (< . g$11946$1RbCyC)
        (unquote-splicing . g$11864$1RbCyC)
        (unquote . g$11863$1RbCyC)
        (_ . g$11862$1RbCyC)
        (else . g$11861$1RbCyC)
        (=> . g$11860$1RbCyC)
        (... . g$11859$1RbCyC)
        (assert . g$11858$1RbCyC)
        (or . g$11854$1RbCyC)
        (and . g$11853$1RbCyC)
        (cond . g$11851$1RbCyC)
        (let* . g$11850$1RbCyC)
        (let . g$11849$1RbCyC)
        (identifier-syntax . g$11848$1RbCyC)
        (quasiquote . g$11845$1RbCyC)
        (syntax-rules . g$11844$1RbCyC)
        (let-values . g$11840$1RbCyC)
        (let*-values . g$11839$1RbCyC)
        (case . g$11835$1RbCyC)
        (if . g$11831$1RbCyC)
        (letrec* . g$11830$1RbCyC)
        (letrec . g$11829$1RbCyC)
        (lambda . g$11826$1RbCyC)
        (quote . g$11823$1RbCyC)
        (letrec-syntax . g$11821$1RbCyC)
        (let-syntax . g$11820$1RbCyC)
        (set! . g$11819$1RbCyC)
        (begin . g$11815$1RbCyC)
        (define-syntax . g$11813$1RbCyC)
        (define . g$11812$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12449$1RbCyC
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$5847$1RbCyC)
        (remv . g$5848$1RbCyC)
        (remp . g$5830$1RbCyC)
        (remq . g$5849$1RbCyC)
        (partition . g$5829$1RbCyC)
        (memv . g$5837$1RbCyC)
        (memq . g$5836$1RbCyC)
        (memp . g$5839$1RbCyC)
        (member . g$5838$1RbCyC)
        (exists . g$5843$1RbCyC)
        (for-all . g$5842$1RbCyC)
        (fold-right . g$5846$1RbCyC)
        (fold-left . g$5845$1RbCyC)
        (find . g$5828$1RbCyC)
        (filter . g$5831$1RbCyC)
        (cons* . g$5844$1RbCyC)
        (assv . g$5833$1RbCyC)
        (assq . g$5832$1RbCyC)
        (assp . g$5835$1RbCyC)
        (assoc . g$5834$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12450$1RbCyC
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$7342$1RbCyC)
        (call-with-input-file . g$7341$1RbCyC)
        (write-char . g$12284$1RbCyC)
        (write . g$12283$1RbCyC)
        (with-output-to-file . g$7340$1RbCyC)
        (with-input-from-file . g$7339$1RbCyC)
        (read-char . g$12282$1RbCyC)
        (read . g$12281$1RbCyC)
        (peek-char . g$12280$1RbCyC)
        (open-output-file . g$12279$1RbCyC)
        (open-input-file . g$12278$1RbCyC)
        (newline . g$12277$1RbCyC)
        (display . g$12276$1RbCyC)
        (close-output-port . g$12275$1RbCyC)
        (close-input-port . g$12274$1RbCyC)
        (eof-object? . g$12273$1RbCyC)
        (eof-object . g$12272$1RbCyC)
        (current-error-port . g$12271$1RbCyC)
        (current-output-port . g$12270$1RbCyC)
        (current-input-port . g$12269$1RbCyC)
        (output-port? . g$12268$1RbCyC)
        (input-port? . g$12267$1RbCyC)
        (make-i/o-write-error . g$7171$1RbCyC)
        (make-i/o-read-error . g$7157$1RbCyC)
        (make-i/o-port-error . g$7276$1RbCyC)
        (make-i/o-invalid-position-error . g$7186$1RbCyC)
        (make-i/o-filename-error . g$7203$1RbCyC)
        (make-i/o-file-protection-error . g$7219$1RbCyC)
        (make-i/o-file-is-read-only-error . g$7233$1RbCyC)
        (make-i/o-file-does-not-exist-error . g$7261$1RbCyC)
        (make-i/o-file-already-exists-error . g$7247$1RbCyC)
        (make-i/o-error . g$7143$1RbCyC)
        (i/o-write-error? . g$7172$1RbCyC)
        (i/o-read-error? . g$7158$1RbCyC)
        (i/o-port-error? . g$7278$1RbCyC)
        (i/o-invalid-position-error? . g$7188$1RbCyC)
        (i/o-error-position . g$7189$1RbCyC)
        (i/o-filename-error? . g$7205$1RbCyC)
        (i/o-file-protection-error? . g$7220$1RbCyC)
        (i/o-file-is-read-only-error? . g$7234$1RbCyC)
        (i/o-file-does-not-exist-error? . g$7262$1RbCyC)
        (i/o-file-already-exists-error? . g$7248$1RbCyC)
        (i/o-error? . g$7144$1RbCyC)
        (i/o-error-port . g$7279$1RbCyC)
        (i/o-error-filename . g$7206$1RbCyC)
        (&i/o-port . g$11912$1RbCyC)
        (&i/o-file-does-not-exist . g$11911$1RbCyC)
        (&i/o-file-already-exists . g$11910$1RbCyC)
        (&i/o-file-is-read-only . g$11909$1RbCyC)
        (&i/o-file-protection . g$11908$1RbCyC)
        (&i/o-filename . g$11907$1RbCyC)
        (&i/o-invalid-position . g$11906$1RbCyC)
        (&i/o-write . g$11905$1RbCyC)
        (&i/o-read . g$11904$1RbCyC)
        (&i/o . g$11903$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12451$1RbCyC
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$12227$1RbCyC)
        (utf32->string . g$12191$1RbCyC)
        (utf16->string . g$12190$1RbCyC)
        (utf8->string . g$12189$1RbCyC)
        (uint-list->bytevector . g$12188$1RbCyC)
        (u8-list->bytevector . g$12187$1RbCyC)
        (string->utf8 . g$12186$1RbCyC)
        (string->utf32 . g$12185$1RbCyC)
        (string->utf16 . g$12184$1RbCyC)
        (sint-list->bytevector . g$12183$1RbCyC)
        (native-endianness . g$6492$1RbCyC)
        (bytevector? . g$12182$1RbCyC)
        (bytevector=? . g$12181$1RbCyC)
        (bytevector-uint-set! . g$12180$1RbCyC)
        (bytevector-uint-ref . g$12179$1RbCyC)
        (bytevector-u8-set! . g$12178$1RbCyC)
        (bytevector-u8-ref . g$12177$1RbCyC)
        (bytevector-u64-set! . g$6513$1RbCyC)
        (bytevector-u64-ref . g$6509$1RbCyC)
        (bytevector-u64-native-set! . g$6515$1RbCyC)
        (bytevector-u64-native-ref . g$6511$1RbCyC)
        (bytevector-u32-set! . g$6505$1RbCyC)
        (bytevector-u32-ref . g$6501$1RbCyC)
        (bytevector-u32-native-set! . g$6507$1RbCyC)
        (bytevector-u32-native-ref . g$6503$1RbCyC)
        (bytevector-u16-set! . g$6497$1RbCyC)
        (bytevector-u16-ref . g$6493$1RbCyC)
        (bytevector-u16-native-set! . g$6499$1RbCyC)
        (bytevector-u16-native-ref . g$6495$1RbCyC)
        (bytevector-sint-set! . g$12176$1RbCyC)
        (bytevector-sint-ref . g$12175$1RbCyC)
        (bytevector-s8-set! . g$12174$1RbCyC)
        (bytevector-s8-ref . g$12173$1RbCyC)
        (bytevector-s64-set! . g$6514$1RbCyC)
        (bytevector-s64-ref . g$6510$1RbCyC)
        (bytevector-s64-native-set! . g$6516$1RbCyC)
        (bytevector-s64-native-ref . g$6512$1RbCyC)
        (bytevector-s32-set! . g$6506$1RbCyC)
        (bytevector-s32-ref . g$6502$1RbCyC)
        (bytevector-s32-native-set! . g$6508$1RbCyC)
        (bytevector-s32-native-ref . g$6504$1RbCyC)
        (bytevector-s16-set! . g$6498$1RbCyC)
        (bytevector-s16-ref . g$6494$1RbCyC)
        (bytevector-s16-native-set! . g$6500$1RbCyC)
        (bytevector-s16-native-ref . g$6496$1RbCyC)
        (bytevector-length . g$12172$1RbCyC)
        (bytevector-ieee-single-set! . g$12171$1RbCyC)
        (bytevector-ieee-single-ref . g$12170$1RbCyC)
        (bytevector-ieee-single-native-set! . g$6519$1RbCyC)
        (bytevector-ieee-single-native-ref . g$6517$1RbCyC)
        (bytevector-ieee-double-set! . g$12169$1RbCyC)
        (bytevector-ieee-double-ref . g$12168$1RbCyC)
        (bytevector-ieee-double-native-set! . g$6520$1RbCyC)
        (bytevector-ieee-double-native-ref . g$6518$1RbCyC)
        (bytevector-fill! . g$12167$1RbCyC)
        (bytevector-copy! . g$12166$1RbCyC)
        (bytevector-copy . g$12165$1RbCyC)
        (bytevector->uint-list . g$12164$1RbCyC)
        (bytevector->u8-list . g$12163$1RbCyC)
        (bytevector->sint-list . g$12162$1RbCyC)
        (endianness . g$11857$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12452$1RbCyC
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12334$1RbCyC)
        (string-titlecase . g$12333$1RbCyC)
        (string-normalize-nfkd . g$12332$1RbCyC)
        (string-normalize-nfkc . g$12331$1RbCyC)
        (string-normalize-nfd . g$12330$1RbCyC)
        (string-normalize-nfc . g$12329$1RbCyC)
        (string-foldcase . g$12328$1RbCyC)
        (string-downcase . g$12327$1RbCyC)
        (string-ci>? . g$6911$1RbCyC)
        (string-ci>=? . g$6913$1RbCyC)
        (string-ci=? . g$6909$1RbCyC)
        (string-ci<? . g$6910$1RbCyC)
        (string-ci<=? . g$6912$1RbCyC)
        (char-whitespace? . g$12326$1RbCyC)
        (char-upper-case? . g$12325$1RbCyC)
        (char-title-case? . g$12324$1RbCyC)
        (char-numeric? . g$12323$1RbCyC)
        (char-lower-case? . g$12322$1RbCyC)
        (char-general-category . g$12321$1RbCyC)
        (char-upcase . g$12320$1RbCyC)
        (char-titlecase . g$12319$1RbCyC)
        (char-foldcase . g$12318$1RbCyC)
        (char-downcase . g$12317$1RbCyC)
        (char-ci>? . g$6950$1RbCyC)
        (char-ci>=? . g$6952$1RbCyC)
        (char-ci=? . g$6948$1RbCyC)
        (char-ci<? . g$6949$1RbCyC)
        (char-ci<=? . g$6951$1RbCyC)
        (char-alphabetic? . g$12316$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12453$1RbCyC
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$12199$1RbCyC)
        (raise-continuable . g$12198$1RbCyC)
        (raise . g$12197$1RbCyC)
        (guard . g$11872$1RbCyC)
        (else . g$11861$1RbCyC)
        (=> . g$11860$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12454$1RbCyC
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7012$1RbCyC)
        (bitwise-reverse-bit-field . g$12077$1RbCyC)
        (bitwise-length . g$12076$1RbCyC)
        (bitwise-if . g$7006$1RbCyC)
        (bitwise-first-bit-set . g$12075$1RbCyC)
        (bitwise-copy-bit-field . g$7009$1RbCyC)
        (bitwise-copy-bit . g$7007$1RbCyC)
        (bitwise-bit-set? . g$12074$1RbCyC)
        (bitwise-bit-field . g$12073$1RbCyC)
        (bitwise-bit-count . g$12072$1RbCyC)
        (bitwise-xor . g$12071$1RbCyC)
        (bitwise-ior . g$12070$1RbCyC)
        (bitwise-and . g$12069$1RbCyC)
        (bitwise-not . g$12068$1RbCyC)
        (bitwise-arithmetic-shift-right . g$7011$1RbCyC)
        (bitwise-arithmetic-shift-left . g$7010$1RbCyC)
        (bitwise-arithmetic-shift . g$12067$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12455$1RbCyC
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$12115$1RbCyC)
        (fxxor . g$12114$1RbCyC)
        (fxrotate-bit-field . g$7060$1RbCyC)
        (fxreverse-bit-field . g$12113$1RbCyC)
        (fxpositive? . g$12112$1RbCyC)
        (fxodd? . g$12111$1RbCyC)
        (fxnot . g$12110$1RbCyC)
        (fxnegative? . g$12109$1RbCyC)
        (fxmod0 . g$12108$1RbCyC)
        (fxmod . g$12107$1RbCyC)
        (fxmin . g$12106$1RbCyC)
        (fxmax . g$12105$1RbCyC)
        (fxlength . g$12104$1RbCyC)
        (fxior . g$12103$1RbCyC)
        (fxif . g$7054$1RbCyC)
        (fxfirst-bit-set . g$12102$1RbCyC)
        (fxeven? . g$12101$1RbCyC)
        (fxdiv0-and-mod0 . g$12100$1RbCyC)
        (fxdiv0 . g$12099$1RbCyC)
        (fxdiv-and-mod . g$12098$1RbCyC)
        (fxdiv . g$12097$1RbCyC)
        (fxcopy-bit-field . g$7057$1RbCyC)
        (fxcopy-bit . g$7055$1RbCyC)
        (fxbit-set? . g$12096$1RbCyC)
        (fxbit-field . g$7056$1RbCyC)
        (fxbit-count . g$12095$1RbCyC)
        (fxarithmetic-shift-right . g$7059$1RbCyC)
        (fxarithmetic-shift-left . g$7058$1RbCyC)
        (fxarithmetic-shift . g$12094$1RbCyC)
        (fxand . g$12093$1RbCyC)
        (fx>? . g$12092$1RbCyC)
        (fx>=? . g$12091$1RbCyC)
        (fx=? . g$12090$1RbCyC)
        (fx<? . g$12089$1RbCyC)
        (fx<=? . g$12088$1RbCyC)
        (fx-/carry . g$12087$1RbCyC)
        (fx- . g$12086$1RbCyC)
        (fx+/carry . g$12085$1RbCyC)
        (fx+ . g$12084$1RbCyC)
        (fx*/carry . g$12083$1RbCyC)
        (fx* . g$12082$1RbCyC)
        (greatest-fixnum . g$12081$1RbCyC)
        (least-fixnum . g$12080$1RbCyC)
        (fixnum-width . g$12079$1RbCyC)
        (fixnum? . g$12078$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12456$1RbCyC
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7129$1RbCyC)
        (no-infinities-violation? . g$7115$1RbCyC)
        (make-no-nans-violation . g$7128$1RbCyC)
        (make-no-infinities-violation . g$7114$1RbCyC)
        (real->flonum . g$12161$1RbCyC)
        (flzero? . g$12160$1RbCyC)
        (fltruncate . g$12159$1RbCyC)
        (fltan . g$12158$1RbCyC)
        (flsqrt . g$12157$1RbCyC)
        (flsin . g$12156$1RbCyC)
        (flround . g$12155$1RbCyC)
        (flpositive? . g$12154$1RbCyC)
        (flonum? . g$12153$1RbCyC)
        (flodd? . g$12152$1RbCyC)
        (flnumerator . g$12151$1RbCyC)
        (flnegative? . g$12150$1RbCyC)
        (flnan? . g$12149$1RbCyC)
        (flmod0 . g$12148$1RbCyC)
        (flmod . g$12147$1RbCyC)
        (flmin . g$12146$1RbCyC)
        (flmax . g$12145$1RbCyC)
        (fllog . g$12144$1RbCyC)
        (flinteger? . g$12143$1RbCyC)
        (flinfinite? . g$12142$1RbCyC)
        (flfloor . g$12141$1RbCyC)
        (flfinite? . g$12140$1RbCyC)
        (flexpt . g$12139$1RbCyC)
        (flexp . g$12138$1RbCyC)
        (fleven? . g$12137$1RbCyC)
        (fldiv0-and-mod0 . g$12136$1RbCyC)
        (fldiv0 . g$12135$1RbCyC)
        (fldiv-and-mod . g$12134$1RbCyC)
        (fldiv . g$12133$1RbCyC)
        (fldenominator . g$12132$1RbCyC)
        (flcos . g$12131$1RbCyC)
        (flceiling . g$12130$1RbCyC)
        (flatan . g$12129$1RbCyC)
        (flasin . g$12128$1RbCyC)
        (flacos . g$12127$1RbCyC)
        (flabs . g$12126$1RbCyC)
        (fl>? . g$12125$1RbCyC)
        (fl>=? . g$12124$1RbCyC)
        (fl=? . g$12123$1RbCyC)
        (fl<? . g$12122$1RbCyC)
        (fl<=? . g$12121$1RbCyC)
        (fl/ . g$12120$1RbCyC)
        (fl- . g$12119$1RbCyC)
        (fl+ . g$12118$1RbCyC)
        (fl* . g$12117$1RbCyC)
        (fixnum->flonum . g$12116$1RbCyC)
        (&no-nans . g$11916$1RbCyC)
        (&no-infinities . g$11915$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12457$1RbCyC
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$12296$1RbCyC)
        (string-ci-hash . g$12295$1RbCyC)
        (string-hash . g$12294$1RbCyC)
        (equal-hash . g$12293$1RbCyC)
        (hashtable-equivalence-function . g$12292$1RbCyC)
        (make-hashtable . g$12291$1RbCyC)
        (hashtable-hash-function . g$12290$1RbCyC)
        (make-eqv-hashtable . g$6453$1RbCyC)
        (make-eq-hashtable . g$6452$1RbCyC)
        (hashtable? . g$12289$1RbCyC)
        (hashtable-update! . g$6459$1RbCyC)
        (hashtable-size . g$6454$1RbCyC)
        (hashtable-set! . g$6456$1RbCyC)
        (hashtable-ref . g$6455$1RbCyC)
        (hashtable-mutable? . g$12288$1RbCyC)
        (hashtable-keys . g$12287$1RbCyC)
        (hashtable-entries . g$12286$1RbCyC)
        (hashtable-delete! . g$6457$1RbCyC)
        (hashtable-copy . g$12285$1RbCyC)
        (hashtable-contains? . g$6458$1RbCyC)
        (hashtable-clear! . g$6460$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12458$1RbCyC
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$12273$1RbCyC)
        (eof-object . g$12272$1RbCyC)
        (current-error-port . g$12271$1RbCyC)
        (current-output-port . g$12270$1RbCyC)
        (current-input-port . g$12269$1RbCyC)
        (output-port? . g$12268$1RbCyC)
        (input-port? . g$12267$1RbCyC)
        (utf-8-codec . g$12266$1RbCyC)
        (utf-16-codec . g$12265$1RbCyC)
        (transcoder-error-handling-mode . g$12264$1RbCyC)
        (transcoder-eol-style . g$12263$1RbCyC)
        (transcoder-codec . g$12262$1RbCyC)
        (transcoded-port . g$12261$1RbCyC)
        (textual-port? . g$12260$1RbCyC)
        (string->bytevector . g$12259$1RbCyC)
        (standard-output-port . g$12258$1RbCyC)
        (standard-input-port . g$12257$1RbCyC)
        (standard-error-port . g$12256$1RbCyC)
        (set-port-position! . g$12255$1RbCyC)
        (put-u8 . g$12254$1RbCyC)
        (put-string . g$12253$1RbCyC)
        (put-datum . g$12252$1RbCyC)
        (put-char . g$12251$1RbCyC)
        (put-bytevector . g$12250$1RbCyC)
        (port? . g$7315$1RbCyC)
        (port-transcoder . g$12249$1RbCyC)
        (port-position . g$12248$1RbCyC)
        (port-has-set-port-position!? . g$12247$1RbCyC)
        (port-has-port-position? . g$12246$1RbCyC)
        (port-eof? . g$12245$1RbCyC)
        (output-port-buffer-mode . g$12244$1RbCyC)
        (open-string-output-port . g$7314$1RbCyC)
        (open-string-input-port . g$12243$1RbCyC)
        (open-file-output-port . g$12242$1RbCyC)
        (open-file-input/output-port . g$12241$1RbCyC)
        (open-file-input-port . g$12240$1RbCyC)
        (open-bytevector-output-port . g$12239$1RbCyC)
        (open-bytevector-input-port . g$12238$1RbCyC)
        (native-transcoder . g$12237$1RbCyC)
        (native-eol-style . g$12236$1RbCyC)
        (make-transcoder . g$12235$1RbCyC)
        (latin-1-codec . g$12234$1RbCyC)
        (make-i/o-write-error . g$7171$1RbCyC)
        (make-i/o-read-error . g$7157$1RbCyC)
        (make-i/o-port-error . g$7276$1RbCyC)
        (make-i/o-invalid-position-error . g$7186$1RbCyC)
        (make-i/o-filename-error . g$7203$1RbCyC)
        (make-i/o-file-protection-error . g$7219$1RbCyC)
        (make-i/o-file-is-read-only-error . g$7233$1RbCyC)
        (make-i/o-file-does-not-exist-error . g$7261$1RbCyC)
        (make-i/o-file-already-exists-error . g$7247$1RbCyC)
        (make-i/o-error . g$7143$1RbCyC)
        (make-i/o-encoding-error . g$7307$1RbCyC)
        (make-i/o-decoding-error . g$7292$1RbCyC)
        (make-custom-textual-output-port . g$12233$1RbCyC)
        (make-custom-textual-input/output-port . g$12232$1RbCyC)
        (make-custom-textual-input-port . g$12231$1RbCyC)
        (make-custom-binary-output-port . g$12230$1RbCyC)
        (make-custom-binary-input/output-port . g$12229$1RbCyC)
        (make-custom-binary-input-port . g$12228$1RbCyC)
        (lookahead-u8 . g$12226$1RbCyC)
        (lookahead-char . g$12225$1RbCyC)
        (i/o-write-error? . g$7172$1RbCyC)
        (i/o-read-error? . g$7158$1RbCyC)
        (i/o-port-error? . g$7278$1RbCyC)
        (i/o-invalid-position-error? . g$7188$1RbCyC)
        (i/o-error-position . g$7189$1RbCyC)
        (i/o-filename-error? . g$7205$1RbCyC)
        (i/o-file-protection-error? . g$7220$1RbCyC)
        (i/o-file-is-read-only-error? . g$7234$1RbCyC)
        (i/o-file-does-not-exist-error? . g$7262$1RbCyC)
        (i/o-file-already-exists-error? . g$7248$1RbCyC)
        (i/o-error? . g$7144$1RbCyC)
        (i/o-error-port . g$7279$1RbCyC)
        (i/o-error-filename . g$7206$1RbCyC)
        (i/o-encoding-error? . g$7309$1RbCyC)
        (i/o-encoding-error-char . g$7310$1RbCyC)
        (i/o-decoding-error? . g$7293$1RbCyC)
        (get-u8 . g$12224$1RbCyC)
        (get-string-n! . g$12223$1RbCyC)
        (get-string-n . g$12222$1RbCyC)
        (get-string-all . g$12221$1RbCyC)
        (get-line . g$12220$1RbCyC)
        (get-datum . g$12219$1RbCyC)
        (get-char . g$12218$1RbCyC)
        (get-bytevector-some . g$12217$1RbCyC)
        (get-bytevector-n! . g$12216$1RbCyC)
        (get-bytevector-n . g$12215$1RbCyC)
        (get-bytevector-all . g$12214$1RbCyC)
        (flush-output-port . g$12213$1RbCyC)
        (close-port . g$12212$1RbCyC)
        (call-with-string-output-port . g$7316$1RbCyC)
        (call-with-port . g$12211$1RbCyC)
        (call-with-bytevector-output-port . g$12210$1RbCyC)
        (bytevector->string . g$12209$1RbCyC)
        (buffer-mode? . g$12208$1RbCyC)
        (binary-port? . g$12207$1RbCyC)
        (&i/o-encoding . g$11914$1RbCyC)
        (&i/o-decoding . g$11913$1RbCyC)
        (&i/o-port . g$11912$1RbCyC)
        (&i/o-file-does-not-exist . g$11911$1RbCyC)
        (&i/o-file-already-exists . g$11910$1RbCyC)
        (&i/o-file-is-read-only . g$11909$1RbCyC)
        (&i/o-file-protection . g$11908$1RbCyC)
        (&i/o-filename . g$11907$1RbCyC)
        (&i/o-invalid-position . g$11906$1RbCyC)
        (&i/o-write . g$11905$1RbCyC)
        (&i/o-read . g$11904$1RbCyC)
        (&i/o . g$11903$1RbCyC)
        (error-handling-mode . g$11876$1RbCyC)
        (file-options . g$11875$1RbCyC)
        (buffer-mode . g$11874$1RbCyC)
        (eol-style . g$11873$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12459$1RbCyC
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$7400$1RbCyC)
        (enum-set=? . g$7407$1RbCyC)
        (enum-set-universe . g$7401$1RbCyC)
        (enum-set-union . g$7408$1RbCyC)
        (enum-set-subset? . g$7406$1RbCyC)
        (enum-set-projection . g$7412$1RbCyC)
        (enum-set-member? . g$7405$1RbCyC)
        (enum-set-intersection . g$7409$1RbCyC)
        (enum-set-indexer . g$7402$1RbCyC)
        (enum-set-difference . g$7410$1RbCyC)
        (enum-set-constructor . g$7403$1RbCyC)
        (enum-set-complement . g$7411$1RbCyC)
        (enum-set->list . g$7404$1RbCyC)
        (define-enumeration . g$11887$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12460$1RbCyC
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6740$1RbCyC)
        (warning? . g$6651$1RbCyC)
        (violation? . g$6693$1RbCyC)
        (undefined-violation? . g$6817$1RbCyC)
        (syntax-violation? . g$6801$1RbCyC)
        (syntax-violation-subform . g$6803$1RbCyC)
        (syntax-violation-form . g$6802$1RbCyC)
        (syntax-violation . g$8804$1RbCyC)
        (simple-conditions . g$12196$1RbCyC)
        (serious-condition? . g$6665$1RbCyC)
        (non-continuable-violation? . g$6755$1RbCyC)
        (message-condition? . g$6636$1RbCyC)
        (make-who-condition . g$6738$1RbCyC)
        (make-warning . g$6650$1RbCyC)
        (make-violation . g$6692$1RbCyC)
        (make-undefined-violation . g$6816$1RbCyC)
        (make-syntax-violation . g$6798$1RbCyC)
        (make-serious-condition . g$6664$1RbCyC)
        (make-non-continuable-violation . g$6754$1RbCyC)
        (make-message-condition . g$6634$1RbCyC)
        (make-lexical-violation . g$6782$1RbCyC)
        (make-irritants-condition . g$6721$1RbCyC)
        (make-implementation-restriction-violation . g$6768$1RbCyC)
        (make-error . g$6678$1RbCyC)
        (make-assertion-violation . g$6706$1RbCyC)
        (lexical-violation? . g$6783$1RbCyC)
        (irritants-condition? . g$6723$1RbCyC)
        (implementation-restriction-violation? . g$6769$1RbCyC)
        (error? . g$6679$1RbCyC)
        (condition-who . g$6741$1RbCyC)
        (condition-predicate . g$12195$1RbCyC)
        (condition-message . g$6637$1RbCyC)
        (condition-irritants . g$6724$1RbCyC)
        (condition-accessor . g$12194$1RbCyC)
        (condition . g$12193$1RbCyC)
        (assertion-violation? . g$6707$1RbCyC)
        (condition? . g$12192$1RbCyC)
        (&non-continuable . g$11902$1RbCyC)
        (&undefined . g$11901$1RbCyC)
        (&syntax . g$11900$1RbCyC)
        (&lexical . g$11899$1RbCyC)
        (&implementation-restriction . g$11898$1RbCyC)
        (&who . g$11897$1RbCyC)
        (&irritants . g$11896$1RbCyC)
        (&assertion . g$11895$1RbCyC)
        (&violation . g$11894$1RbCyC)
        (&error . g$11893$1RbCyC)
        (&serious . g$11892$1RbCyC)
        (&warning . g$11891$1RbCyC)
        (&message . g$11890$1RbCyC)
        (&condition . g$11889$1RbCyC)
        (define-condition-type . g$11888$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12461$1RbCyC
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$12308$1RbCyC)
        (record-type-uid . g$12307$1RbCyC)
        (record-type-sealed? . g$12306$1RbCyC)
        (record-type-parent . g$12305$1RbCyC)
        (record-type-opaque? . g$12304$1RbCyC)
        (record-type-name . g$12303$1RbCyC)
        (record-type-generative? . g$12302$1RbCyC)
        (record-type-field-names . g$12301$1RbCyC)
        (record-rtd . g$12300$1RbCyC)
        (record-field-mutable? . g$12299$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12462$1RbCyC
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$12315$1RbCyC)
        (record-predicate . g$12314$1RbCyC)
        (record-mutator . g$12313$1RbCyC)
        (record-constructor . g$12312$1RbCyC)
        (record-accessor . g$12311$1RbCyC)
        (make-record-type-descriptor . g$12310$1RbCyC)
        (make-record-constructor-descriptor . g$12309$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12463$1RbCyC
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$11886$1RbCyC)
        (parent-rtd . g$11885$1RbCyC)
        (nongenerative . g$11884$1RbCyC)
        (opaque . g$11883$1RbCyC)
        (sealed . g$11882$1RbCyC)
        (protocol . g$11881$1RbCyC)
        (parent . g$11880$1RbCyC)
        (immutable . g$11879$1RbCyC)
        (mutable . g$11878$1RbCyC)
        (fields . g$11877$1RbCyC)
        (record-constructor-descriptor . g$11838$1RbCyC)
        (record-type-descriptor . g$11837$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12464$1RbCyC
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$8677$1RbCyC)
        (&no-nans-rcd . g$12428$1RbCyC)
        (&no-nans-rtd . g$12427$1RbCyC)
        (&no-infinities-rcd . g$12426$1RbCyC)
        (&no-infinities-rtd . g$12425$1RbCyC)
        (&i/o-encoding-rcd . g$12424$1RbCyC)
        (&i/o-encoding-rtd . g$12423$1RbCyC)
        (&i/o-decoding-rcd . g$12422$1RbCyC)
        (&i/o-decoding-rtd . g$12421$1RbCyC)
        (&i/o-port-rcd . g$12420$1RbCyC)
        (&i/o-port-rtd . g$12419$1RbCyC)
        (&i/o-file-does-not-exist-rcd . g$12418$1RbCyC)
        (&i/o-file-does-not-exist-rtd . g$12417$1RbCyC)
        (&i/o-file-already-exists-rcd . g$12416$1RbCyC)
        (&i/o-file-already-exists-rtd . g$12415$1RbCyC)
        (&i/o-file-is-read-only-rcd . g$12414$1RbCyC)
        (&i/o-file-is-read-only-rtd . g$12413$1RbCyC)
        (&i/o-file-protection-rcd . g$12412$1RbCyC)
        (&i/o-file-protection-rtd . g$12411$1RbCyC)
        (&i/o-filename-rcd . g$12410$1RbCyC)
        (&i/o-filename-rtd . g$12409$1RbCyC)
        (&i/o-invalid-position-rcd . g$12408$1RbCyC)
        (&i/o-invalid-position-rtd . g$12407$1RbCyC)
        (&i/o-write-rcd . g$12406$1RbCyC)
        (&i/o-write-rtd . g$12405$1RbCyC)
        (&i/o-read-rcd . g$12404$1RbCyC)
        (&i/o-read-rtd . g$12403$1RbCyC)
        (&i/o-rcd . g$12402$1RbCyC)
        (&i/o-rtd . g$12401$1RbCyC)
        (&undefined-rcd . g$12400$1RbCyC)
        (&undefined-rtd . g$12399$1RbCyC)
        (&syntax-rcd . g$12398$1RbCyC)
        (&syntax-rtd . g$12397$1RbCyC)
        (&lexical-rcd . g$12396$1RbCyC)
        (&lexical-rtd . g$12395$1RbCyC)
        (&implementation-restriction-rcd . g$12394$1RbCyC)
        (&implementation-restriction-rtd . g$12393$1RbCyC)
        (&non-continuable-rcd . g$12392$1RbCyC)
        (&non-continuable-rtd . g$12391$1RbCyC)
        (&who-rcd . g$12390$1RbCyC)
        (&who-rtd . g$12389$1RbCyC)
        (&irritants-rcd . g$12388$1RbCyC)
        (&irritants-rtd . g$12387$1RbCyC)
        (&assertion-rcd . g$12386$1RbCyC)
        (&assertion-rtd . g$12385$1RbCyC)
        (&violation-rcd . g$12384$1RbCyC)
        (&violation-rtd . g$12383$1RbCyC)
        (&error-rcd . g$12382$1RbCyC)
        (&error-rtd . g$12381$1RbCyC)
        (&serious-rcd . g$12380$1RbCyC)
        (&serious-rtd . g$12379$1RbCyC)
        (&warning-rcd . g$12378$1RbCyC)
        (&warning-rtd . g$12377$1RbCyC)
        (&message-rcd . g$12376$1RbCyC)
        (&message-rtd . g$12375$1RbCyC)
        (&condition-rcd . g$12374$1RbCyC)
        (&condition-rtd . g$12373$1RbCyC)
        (library-letrec* . g$12372$1RbCyC)
        (annotation-stripped . g$12371$1RbCyC)
        (annotation-source . g$12370$1RbCyC)
        (annotation-expression . g$12369$1RbCyC)
        (annotation? . g$12368$1RbCyC)
        (read-annotated . g$12367$1RbCyC)
        (tanh . g$12366$1RbCyC)
        (cosh . g$12365$1RbCyC)
        (sinh . g$12364$1RbCyC)
        (make-guid . g$12363$1RbCyC)
        (unspecified? . g$12362$1RbCyC)
        (make-trace . g$12361$1RbCyC)
        (make-list . g$12360$1RbCyC)
        (last-pair . g$12359$1RbCyC)
        (load-r5rs . g$12358$1RbCyC)
        (license . g$12357$1RbCyC)
        (stacktrace . g$12356$1RbCyC)
        (ironscheme-build . g$11780$1RbCyC)
        (define-clr-class-internal . g$12355$1RbCyC)
        (clr-field-set!-internal . g$12354$1RbCyC)
        (clr-field-get-internal . g$12353$1RbCyC)
        (clr-cast-internal . g$12352$1RbCyC)
        (clr-call-internal . g$12351$1RbCyC)
        (clr-new-internal . g$12350$1RbCyC)
        (clr-new-array-internal . g$12349$1RbCyC)
        (clr-is-internal . g$12348$1RbCyC)
        (clr-reference-internal . g$12347$1RbCyC)
        (clr-using-internal . g$12346$1RbCyC)
        (clr-clear-usings-internal . g$12345$1RbCyC)
        (syntax-error . g$8801$1RbCyC)
        (syntax-dispatch . g$8672$1RbCyC)
        (compile-core . g$12344$1RbCyC)
        (eval-core . g$12343$1RbCyC)
        (set-symbol-value! . g$12342$1RbCyC)
        (symbol-value . g$12341$1RbCyC)
        (ungensym . g$12340$1RbCyC)
        (gensym . g$12339$1RbCyC)
        (void . g$12338$1RbCyC)
        (load-serialized-library . g$12337$1RbCyC)
        (serialize-library . g$12336$1RbCyC)
        (compile-system-libraries . g$11782$1RbCyC)
        (compile->closure . g$11784$1RbCyC)
        (compile . g$11783$1RbCyC)
        (load . g$11779$1RbCyC)
        (interaction-environment . g$8810$1RbCyC)
        (char-ready? . g$12335$1RbCyC)
        (string-upcase . g$12334$1RbCyC)
        (string-titlecase . g$12333$1RbCyC)
        (string-normalize-nfkd . g$12332$1RbCyC)
        (string-normalize-nfkc . g$12331$1RbCyC)
        (string-normalize-nfd . g$12330$1RbCyC)
        (string-normalize-nfc . g$12329$1RbCyC)
        (string-foldcase . g$12328$1RbCyC)
        (string-downcase . g$12327$1RbCyC)
        (string-ci>? . g$6911$1RbCyC)
        (string-ci>=? . g$6913$1RbCyC)
        (string-ci=? . g$6909$1RbCyC)
        (string-ci<? . g$6910$1RbCyC)
        (string-ci<=? . g$6912$1RbCyC)
        (char-whitespace? . g$12326$1RbCyC)
        (char-upper-case? . g$12325$1RbCyC)
        (char-title-case? . g$12324$1RbCyC)
        (char-numeric? . g$12323$1RbCyC)
        (char-lower-case? . g$12322$1RbCyC)
        (char-general-category . g$12321$1RbCyC)
        (char-upcase . g$12320$1RbCyC)
        (char-titlecase . g$12319$1RbCyC)
        (char-foldcase . g$12318$1RbCyC)
        (char-downcase . g$12317$1RbCyC)
        (char-ci>? . g$6950$1RbCyC)
        (char-ci>=? . g$6952$1RbCyC)
        (char-ci=? . g$6948$1RbCyC)
        (char-ci<? . g$6949$1RbCyC)
        (char-ci<=? . g$6951$1RbCyC)
        (char-alphabetic? . g$12316$1RbCyC)
        (variable-transformer-procedure . g$8409$1RbCyC)
        (variable-transformer? . g$8408$1RbCyC)
        (make-variable-transformer . g$8407$1RbCyC)
        (identifier? . g$8805$1RbCyC)
        (generate-temporaries . g$8794$1RbCyC)
        (free-identifier=? . g$8795$1RbCyC)
        (syntax->datum . g$8807$1RbCyC)
        (datum->syntax . g$8806$1RbCyC)
        (bound-identifier=? . g$8796$1RbCyC)
        (record-type-descriptor? . g$12315$1RbCyC)
        (record-predicate . g$12314$1RbCyC)
        (record-mutator . g$12313$1RbCyC)
        (record-constructor . g$12312$1RbCyC)
        (record-accessor . g$12311$1RbCyC)
        (make-record-type-descriptor . g$12310$1RbCyC)
        (make-record-constructor-descriptor . g$12309$1RbCyC)
        (record? . g$12308$1RbCyC)
        (record-type-uid . g$12307$1RbCyC)
        (record-type-sealed? . g$12306$1RbCyC)
        (record-type-parent . g$12305$1RbCyC)
        (record-type-opaque? . g$12304$1RbCyC)
        (record-type-name . g$12303$1RbCyC)
        (record-type-generative? . g$12302$1RbCyC)
        (record-type-field-names . g$12301$1RbCyC)
        (record-rtd . g$12300$1RbCyC)
        (record-field-mutable? . g$12299$1RbCyC)
        (delete-file . g$6486$1RbCyC)
        (file-exists? . g$6485$1RbCyC)
        (vector-sort! . g$12298$1RbCyC)
        (vector-sort . g$12297$1RbCyC)
        (list-sort . g$6849$1RbCyC)
        (symbol-hash . g$12296$1RbCyC)
        (string-ci-hash . g$12295$1RbCyC)
        (string-hash . g$12294$1RbCyC)
        (equal-hash . g$12293$1RbCyC)
        (hashtable-equivalence-function . g$12292$1RbCyC)
        (make-hashtable . g$12291$1RbCyC)
        (hashtable-hash-function . g$12290$1RbCyC)
        (make-eqv-hashtable . g$6453$1RbCyC)
        (make-eq-hashtable . g$6452$1RbCyC)
        (hashtable? . g$12289$1RbCyC)
        (hashtable-update! . g$6459$1RbCyC)
        (hashtable-size . g$6454$1RbCyC)
        (hashtable-set! . g$6456$1RbCyC)
        (hashtable-ref . g$6455$1RbCyC)
        (hashtable-mutable? . g$12288$1RbCyC)
        (hashtable-keys . g$12287$1RbCyC)
        (hashtable-entries . g$12286$1RbCyC)
        (hashtable-delete! . g$6457$1RbCyC)
        (hashtable-copy . g$12285$1RbCyC)
        (hashtable-contains? . g$6458$1RbCyC)
        (hashtable-clear! . g$6460$1RbCyC)
        (call-with-output-file . g$7342$1RbCyC)
        (call-with-input-file . g$7341$1RbCyC)
        (write-char . g$12284$1RbCyC)
        (write . g$12283$1RbCyC)
        (with-output-to-file . g$7340$1RbCyC)
        (with-input-from-file . g$7339$1RbCyC)
        (read-char . g$12282$1RbCyC)
        (read . g$12281$1RbCyC)
        (peek-char . g$12280$1RbCyC)
        (open-output-file . g$12279$1RbCyC)
        (open-input-file . g$12278$1RbCyC)
        (newline . g$12277$1RbCyC)
        (display . g$12276$1RbCyC)
        (close-output-port . g$12275$1RbCyC)
        (close-input-port . g$12274$1RbCyC)
        (eof-object? . g$12273$1RbCyC)
        (eof-object . g$12272$1RbCyC)
        (current-error-port . g$12271$1RbCyC)
        (current-output-port . g$12270$1RbCyC)
        (current-input-port . g$12269$1RbCyC)
        (output-port? . g$12268$1RbCyC)
        (input-port? . g$12267$1RbCyC)
        (utf-8-codec . g$12266$1RbCyC)
        (utf-16-codec . g$12265$1RbCyC)
        (transcoder-error-handling-mode . g$12264$1RbCyC)
        (transcoder-eol-style . g$12263$1RbCyC)
        (transcoder-codec . g$12262$1RbCyC)
        (transcoded-port . g$12261$1RbCyC)
        (textual-port? . g$12260$1RbCyC)
        (string->bytevector . g$12259$1RbCyC)
        (standard-output-port . g$12258$1RbCyC)
        (standard-input-port . g$12257$1RbCyC)
        (standard-error-port . g$12256$1RbCyC)
        (set-port-position! . g$12255$1RbCyC)
        (put-u8 . g$12254$1RbCyC)
        (put-string . g$12253$1RbCyC)
        (put-datum . g$12252$1RbCyC)
        (put-char . g$12251$1RbCyC)
        (put-bytevector . g$12250$1RbCyC)
        (port? . g$7315$1RbCyC)
        (port-transcoder . g$12249$1RbCyC)
        (port-position . g$12248$1RbCyC)
        (port-has-set-port-position!? . g$12247$1RbCyC)
        (port-has-port-position? . g$12246$1RbCyC)
        (port-eof? . g$12245$1RbCyC)
        (output-port-buffer-mode . g$12244$1RbCyC)
        (open-string-output-port . g$7314$1RbCyC)
        (open-string-input-port . g$12243$1RbCyC)
        (open-file-output-port . g$12242$1RbCyC)
        (open-file-input/output-port . g$12241$1RbCyC)
        (open-file-input-port . g$12240$1RbCyC)
        (open-bytevector-output-port . g$12239$1RbCyC)
        (open-bytevector-input-port . g$12238$1RbCyC)
        (native-transcoder . g$12237$1RbCyC)
        (native-eol-style . g$12236$1RbCyC)
        (make-transcoder . g$12235$1RbCyC)
        (latin-1-codec . g$12234$1RbCyC)
        (make-i/o-write-error . g$7171$1RbCyC)
        (make-i/o-read-error . g$7157$1RbCyC)
        (make-i/o-port-error . g$7276$1RbCyC)
        (make-i/o-invalid-position-error . g$7186$1RbCyC)
        (make-i/o-filename-error . g$7203$1RbCyC)
        (make-i/o-file-protection-error . g$7219$1RbCyC)
        (make-i/o-file-is-read-only-error . g$7233$1RbCyC)
        (make-i/o-file-does-not-exist-error . g$7261$1RbCyC)
        (make-i/o-file-already-exists-error . g$7247$1RbCyC)
        (make-i/o-error . g$7143$1RbCyC)
        (make-i/o-encoding-error . g$7307$1RbCyC)
        (make-i/o-decoding-error . g$7292$1RbCyC)
        (make-custom-textual-output-port . g$12233$1RbCyC)
        (make-custom-textual-input/output-port . g$12232$1RbCyC)
        (make-custom-textual-input-port . g$12231$1RbCyC)
        (make-custom-binary-output-port . g$12230$1RbCyC)
        (make-custom-binary-input/output-port . g$12229$1RbCyC)
        (make-custom-binary-input-port . g$12228$1RbCyC)
        (make-bytevector . g$12227$1RbCyC)
        (lookahead-u8 . g$12226$1RbCyC)
        (lookahead-char . g$12225$1RbCyC)
        (i/o-write-error? . g$7172$1RbCyC)
        (i/o-read-error? . g$7158$1RbCyC)
        (i/o-port-error? . g$7278$1RbCyC)
        (i/o-invalid-position-error? . g$7188$1RbCyC)
        (i/o-error-position . g$7189$1RbCyC)
        (i/o-filename-error? . g$7205$1RbCyC)
        (i/o-file-protection-error? . g$7220$1RbCyC)
        (i/o-file-is-read-only-error? . g$7234$1RbCyC)
        (i/o-file-does-not-exist-error? . g$7262$1RbCyC)
        (i/o-file-already-exists-error? . g$7248$1RbCyC)
        (i/o-error? . g$7144$1RbCyC)
        (i/o-error-port . g$7279$1RbCyC)
        (i/o-error-filename . g$7206$1RbCyC)
        (i/o-encoding-error? . g$7309$1RbCyC)
        (i/o-encoding-error-char . g$7310$1RbCyC)
        (i/o-decoding-error? . g$7293$1RbCyC)
        (get-u8 . g$12224$1RbCyC)
        (get-string-n! . g$12223$1RbCyC)
        (get-string-n . g$12222$1RbCyC)
        (get-string-all . g$12221$1RbCyC)
        (get-line . g$12220$1RbCyC)
        (get-datum . g$12219$1RbCyC)
        (get-char . g$12218$1RbCyC)
        (get-bytevector-some . g$12217$1RbCyC)
        (get-bytevector-n! . g$12216$1RbCyC)
        (get-bytevector-n . g$12215$1RbCyC)
        (get-bytevector-all . g$12214$1RbCyC)
        (flush-output-port . g$12213$1RbCyC)
        (close-port . g$12212$1RbCyC)
        (call-with-string-output-port . g$7316$1RbCyC)
        (call-with-port . g$12211$1RbCyC)
        (call-with-bytevector-output-port . g$12210$1RbCyC)
        (bytevector->string . g$12209$1RbCyC)
        (buffer-mode? . g$12208$1RbCyC)
        (binary-port? . g$12207$1RbCyC)
        (scheme-report-environment . g$8785$1RbCyC)
        (quotient . g$6829$1RbCyC)
        (null-environment . g$8784$1RbCyC)
        (remainder . g$6830$1RbCyC)
        (modulo . g$6831$1RbCyC)
        (inexact->exact . g$12206$1RbCyC)
        (force . g$6833$1RbCyC)
        (exact->inexact . g$12205$1RbCyC)
        (exit . g$12204$1RbCyC)
        (command-line . g$11776$1RbCyC)
        (string-fill! . g$12203$1RbCyC)
        (string-set! . g$12202$1RbCyC)
        (set-cdr! . g$12201$1RbCyC)
        (set-car! . g$12200$1RbCyC)
        (remove . g$5847$1RbCyC)
        (remv . g$5848$1RbCyC)
        (remp . g$5830$1RbCyC)
        (remq . g$5849$1RbCyC)
        (partition . g$5829$1RbCyC)
        (memv . g$5837$1RbCyC)
        (memq . g$5836$1RbCyC)
        (memp . g$5839$1RbCyC)
        (member . g$5838$1RbCyC)
        (exists . g$5843$1RbCyC)
        (for-all . g$5842$1RbCyC)
        (fold-right . g$5846$1RbCyC)
        (fold-left . g$5845$1RbCyC)
        (find . g$5828$1RbCyC)
        (filter . g$5831$1RbCyC)
        (cons* . g$5844$1RbCyC)
        (assv . g$5833$1RbCyC)
        (assq . g$5832$1RbCyC)
        (assp . g$5835$1RbCyC)
        (assoc . g$5834$1RbCyC)
        (with-exception-handler . g$12199$1RbCyC)
        (raise-continuable . g$12198$1RbCyC)
        (raise . g$12197$1RbCyC)
        (eval . g$8787$1RbCyC)
        (environment . g$8783$1RbCyC)
        (make-enumeration . g$7400$1RbCyC)
        (enum-set=? . g$7407$1RbCyC)
        (enum-set-universe . g$7401$1RbCyC)
        (enum-set-union . g$7408$1RbCyC)
        (enum-set-subset? . g$7406$1RbCyC)
        (enum-set-projection . g$7412$1RbCyC)
        (enum-set-member? . g$7405$1RbCyC)
        (enum-set-intersection . g$7409$1RbCyC)
        (enum-set-indexer . g$7402$1RbCyC)
        (enum-set-difference . g$7410$1RbCyC)
        (enum-set-constructor . g$7403$1RbCyC)
        (enum-set-complement . g$7411$1RbCyC)
        (enum-set->list . g$7404$1RbCyC)
        (who-condition? . g$6740$1RbCyC)
        (warning? . g$6651$1RbCyC)
        (violation? . g$6693$1RbCyC)
        (undefined-violation? . g$6817$1RbCyC)
        (syntax-violation? . g$6801$1RbCyC)
        (syntax-violation-subform . g$6803$1RbCyC)
        (syntax-violation-form . g$6802$1RbCyC)
        (syntax-violation . g$8804$1RbCyC)
        (simple-conditions . g$12196$1RbCyC)
        (serious-condition? . g$6665$1RbCyC)
        (non-continuable-violation? . g$6755$1RbCyC)
        (message-condition? . g$6636$1RbCyC)
        (make-who-condition . g$6738$1RbCyC)
        (make-warning . g$6650$1RbCyC)
        (make-violation . g$6692$1RbCyC)
        (make-undefined-violation . g$6816$1RbCyC)
        (make-syntax-violation . g$6798$1RbCyC)
        (make-serious-condition . g$6664$1RbCyC)
        (make-non-continuable-violation . g$6754$1RbCyC)
        (make-message-condition . g$6634$1RbCyC)
        (make-lexical-violation . g$6782$1RbCyC)
        (make-irritants-condition . g$6721$1RbCyC)
        (make-implementation-restriction-violation . g$6768$1RbCyC)
        (make-error . g$6678$1RbCyC)
        (make-assertion-violation . g$6706$1RbCyC)
        (lexical-violation? . g$6783$1RbCyC)
        (irritants-condition? . g$6723$1RbCyC)
        (implementation-restriction-violation? . g$6769$1RbCyC)
        (error? . g$6679$1RbCyC)
        (condition-who . g$6741$1RbCyC)
        (condition-predicate . g$12195$1RbCyC)
        (condition-message . g$6637$1RbCyC)
        (condition-irritants . g$6724$1RbCyC)
        (condition-accessor . g$12194$1RbCyC)
        (condition . g$12193$1RbCyC)
        (assertion-violation? . g$6707$1RbCyC)
        (condition? . g$12192$1RbCyC)
        (utf32->string . g$12191$1RbCyC)
        (utf16->string . g$12190$1RbCyC)
        (utf8->string . g$12189$1RbCyC)
        (uint-list->bytevector . g$12188$1RbCyC)
        (u8-list->bytevector . g$12187$1RbCyC)
        (string->utf8 . g$12186$1RbCyC)
        (string->utf32 . g$12185$1RbCyC)
        (string->utf16 . g$12184$1RbCyC)
        (sint-list->bytevector . g$12183$1RbCyC)
        (native-endianness . g$6492$1RbCyC)
        (bytevector? . g$12182$1RbCyC)
        (bytevector=? . g$12181$1RbCyC)
        (bytevector-uint-set! . g$12180$1RbCyC)
        (bytevector-uint-ref . g$12179$1RbCyC)
        (bytevector-u8-set! . g$12178$1RbCyC)
        (bytevector-u8-ref . g$12177$1RbCyC)
        (bytevector-u64-set! . g$6513$1RbCyC)
        (bytevector-u64-ref . g$6509$1RbCyC)
        (bytevector-u64-native-set! . g$6515$1RbCyC)
        (bytevector-u64-native-ref . g$6511$1RbCyC)
        (bytevector-u32-set! . g$6505$1RbCyC)
        (bytevector-u32-ref . g$6501$1RbCyC)
        (bytevector-u32-native-set! . g$6507$1RbCyC)
        (bytevector-u32-native-ref . g$6503$1RbCyC)
        (bytevector-u16-set! . g$6497$1RbCyC)
        (bytevector-u16-ref . g$6493$1RbCyC)
        (bytevector-u16-native-set! . g$6499$1RbCyC)
        (bytevector-u16-native-ref . g$6495$1RbCyC)
        (bytevector-sint-set! . g$12176$1RbCyC)
        (bytevector-sint-ref . g$12175$1RbCyC)
        (bytevector-s8-set! . g$12174$1RbCyC)
        (bytevector-s8-ref . g$12173$1RbCyC)
        (bytevector-s64-set! . g$6514$1RbCyC)
        (bytevector-s64-ref . g$6510$1RbCyC)
        (bytevector-s64-native-set! . g$6516$1RbCyC)
        (bytevector-s64-native-ref . g$6512$1RbCyC)
        (bytevector-s32-set! . g$6506$1RbCyC)
        (bytevector-s32-ref . g$6502$1RbCyC)
        (bytevector-s32-native-set! . g$6508$1RbCyC)
        (bytevector-s32-native-ref . g$6504$1RbCyC)
        (bytevector-s16-set! . g$6498$1RbCyC)
        (bytevector-s16-ref . g$6494$1RbCyC)
        (bytevector-s16-native-set! . g$6500$1RbCyC)
        (bytevector-s16-native-ref . g$6496$1RbCyC)
        (bytevector-length . g$12172$1RbCyC)
        (bytevector-ieee-single-set! . g$12171$1RbCyC)
        (bytevector-ieee-single-ref . g$12170$1RbCyC)
        (bytevector-ieee-single-native-set! . g$6519$1RbCyC)
        (bytevector-ieee-single-native-ref . g$6517$1RbCyC)
        (bytevector-ieee-double-set! . g$12169$1RbCyC)
        (bytevector-ieee-double-ref . g$12168$1RbCyC)
        (bytevector-ieee-double-native-set! . g$6520$1RbCyC)
        (bytevector-ieee-double-native-ref . g$6518$1RbCyC)
        (bytevector-fill! . g$12167$1RbCyC)
        (bytevector-copy! . g$12166$1RbCyC)
        (bytevector-copy . g$12165$1RbCyC)
        (bytevector->uint-list . g$12164$1RbCyC)
        (bytevector->u8-list . g$12163$1RbCyC)
        (bytevector->sint-list . g$12162$1RbCyC)
        (no-nans-violation? . g$7129$1RbCyC)
        (no-infinities-violation? . g$7115$1RbCyC)
        (make-no-nans-violation . g$7128$1RbCyC)
        (make-no-infinities-violation . g$7114$1RbCyC)
        (real->flonum . g$12161$1RbCyC)
        (flzero? . g$12160$1RbCyC)
        (fltruncate . g$12159$1RbCyC)
        (fltan . g$12158$1RbCyC)
        (flsqrt . g$12157$1RbCyC)
        (flsin . g$12156$1RbCyC)
        (flround . g$12155$1RbCyC)
        (flpositive? . g$12154$1RbCyC)
        (flonum? . g$12153$1RbCyC)
        (flodd? . g$12152$1RbCyC)
        (flnumerator . g$12151$1RbCyC)
        (flnegative? . g$12150$1RbCyC)
        (flnan? . g$12149$1RbCyC)
        (flmod0 . g$12148$1RbCyC)
        (flmod . g$12147$1RbCyC)
        (flmin . g$12146$1RbCyC)
        (flmax . g$12145$1RbCyC)
        (fllog . g$12144$1RbCyC)
        (flinteger? . g$12143$1RbCyC)
        (flinfinite? . g$12142$1RbCyC)
        (flfloor . g$12141$1RbCyC)
        (flfinite? . g$12140$1RbCyC)
        (flexpt . g$12139$1RbCyC)
        (flexp . g$12138$1RbCyC)
        (fleven? . g$12137$1RbCyC)
        (fldiv0-and-mod0 . g$12136$1RbCyC)
        (fldiv0 . g$12135$1RbCyC)
        (fldiv-and-mod . g$12134$1RbCyC)
        (fldiv . g$12133$1RbCyC)
        (fldenominator . g$12132$1RbCyC)
        (flcos . g$12131$1RbCyC)
        (flceiling . g$12130$1RbCyC)
        (flatan . g$12129$1RbCyC)
        (flasin . g$12128$1RbCyC)
        (flacos . g$12127$1RbCyC)
        (flabs . g$12126$1RbCyC)
        (fl>? . g$12125$1RbCyC)
        (fl>=? . g$12124$1RbCyC)
        (fl=? . g$12123$1RbCyC)
        (fl<? . g$12122$1RbCyC)
        (fl<=? . g$12121$1RbCyC)
        (fl/ . g$12120$1RbCyC)
        (fl- . g$12119$1RbCyC)
        (fl+ . g$12118$1RbCyC)
        (fl* . g$12117$1RbCyC)
        (fixnum->flonum . g$12116$1RbCyC)
        (fxzero? . g$12115$1RbCyC)
        (fxxor . g$12114$1RbCyC)
        (fxrotate-bit-field . g$7060$1RbCyC)
        (fxreverse-bit-field . g$12113$1RbCyC)
        (fxpositive? . g$12112$1RbCyC)
        (fxodd? . g$12111$1RbCyC)
        (fxnot . g$12110$1RbCyC)
        (fxnegative? . g$12109$1RbCyC)
        (fxmod0 . g$12108$1RbCyC)
        (fxmod . g$12107$1RbCyC)
        (fxmin . g$12106$1RbCyC)
        (fxmax . g$12105$1RbCyC)
        (fxlength . g$12104$1RbCyC)
        (fxior . g$12103$1RbCyC)
        (fxif . g$7054$1RbCyC)
        (fxfirst-bit-set . g$12102$1RbCyC)
        (fxeven? . g$12101$1RbCyC)
        (fxdiv0-and-mod0 . g$12100$1RbCyC)
        (fxdiv0 . g$12099$1RbCyC)
        (fxdiv-and-mod . g$12098$1RbCyC)
        (fxdiv . g$12097$1RbCyC)
        (fxcopy-bit-field . g$7057$1RbCyC)
        (fxcopy-bit . g$7055$1RbCyC)
        (fxbit-set? . g$12096$1RbCyC)
        (fxbit-field . g$7056$1RbCyC)
        (fxbit-count . g$12095$1RbCyC)
        (fxarithmetic-shift-right . g$7059$1RbCyC)
        (fxarithmetic-shift-left . g$7058$1RbCyC)
        (fxarithmetic-shift . g$12094$1RbCyC)
        (fxand . g$12093$1RbCyC)
        (fx>? . g$12092$1RbCyC)
        (fx>=? . g$12091$1RbCyC)
        (fx=? . g$12090$1RbCyC)
        (fx<? . g$12089$1RbCyC)
        (fx<=? . g$12088$1RbCyC)
        (fx-/carry . g$12087$1RbCyC)
        (fx- . g$12086$1RbCyC)
        (fx+/carry . g$12085$1RbCyC)
        (fx+ . g$12084$1RbCyC)
        (fx*/carry . g$12083$1RbCyC)
        (fx* . g$12082$1RbCyC)
        (greatest-fixnum . g$12081$1RbCyC)
        (least-fixnum . g$12080$1RbCyC)
        (fixnum-width . g$12079$1RbCyC)
        (fixnum? . g$12078$1RbCyC)
        (bitwise-rotate-bit-field . g$7012$1RbCyC)
        (bitwise-reverse-bit-field . g$12077$1RbCyC)
        (bitwise-length . g$12076$1RbCyC)
        (bitwise-if . g$7006$1RbCyC)
        (bitwise-first-bit-set . g$12075$1RbCyC)
        (bitwise-copy-bit-field . g$7009$1RbCyC)
        (bitwise-copy-bit . g$7007$1RbCyC)
        (bitwise-bit-set? . g$12074$1RbCyC)
        (bitwise-bit-field . g$12073$1RbCyC)
        (bitwise-bit-count . g$12072$1RbCyC)
        (bitwise-xor . g$12071$1RbCyC)
        (bitwise-ior . g$12070$1RbCyC)
        (bitwise-and . g$12069$1RbCyC)
        (bitwise-not . g$12068$1RbCyC)
        (bitwise-arithmetic-shift-right . g$7011$1RbCyC)
        (bitwise-arithmetic-shift-left . g$7010$1RbCyC)
        (bitwise-arithmetic-shift . g$12067$1RbCyC)
        (zero? . g$12066$1RbCyC)
        (vector? . g$12065$1RbCyC)
        (vector-set! . g$12064$1RbCyC)
        (vector-ref . g$12063$1RbCyC)
        (vector-map . g$12062$1RbCyC)
        (vector-length . g$12061$1RbCyC)
        (vector-for-each . g$12060$1RbCyC)
        (vector-fill! . g$12059$1RbCyC)
        (vector->list . g$12058$1RbCyC)
        (vector . g$12057$1RbCyC)
        (values . g$12056$1RbCyC)
        (truncate . g$12055$1RbCyC)
        (tan . g$12054$1RbCyC)
        (symbol? . g$12053$1RbCyC)
        (symbol=? . g$6001$1RbCyC)
        (symbol->string . g$12052$1RbCyC)
        (substring . g$12051$1RbCyC)
        (string? . g$12050$1RbCyC)
        (string>? . g$5998$1RbCyC)
        (string>=? . g$6000$1RbCyC)
        (string=? . g$5996$1RbCyC)
        (string<? . g$5997$1RbCyC)
        (string<=? . g$5999$1RbCyC)
        (string-ref . g$12049$1RbCyC)
        (string-length . g$12048$1RbCyC)
        (string-for-each . g$12047$1RbCyC)
        (string-copy . g$12046$1RbCyC)
        (string-append . g$12045$1RbCyC)
        (string->symbol . g$12044$1RbCyC)
        (string->number . g$12043$1RbCyC)
        (string->list . g$12042$1RbCyC)
        (string . g$12041$1RbCyC)
        (sqrt . g$12040$1RbCyC)
        (sin . g$12039$1RbCyC)
        (round . g$12038$1RbCyC)
        (reverse . g$12037$1RbCyC)
        (real? . g$12036$1RbCyC)
        (real-valued? . g$12035$1RbCyC)
        (real-part . g$12034$1RbCyC)
        (rationalize . g$6042$1RbCyC)
        (rational? . g$12033$1RbCyC)
        (rational-valued? . g$12032$1RbCyC)
        (procedure? . g$12031$1RbCyC)
        (positive? . g$12030$1RbCyC)
        (pair? . g$12029$1RbCyC)
        (odd? . g$12028$1RbCyC)
        (numerator . g$12027$1RbCyC)
        (number? . g$12026$1RbCyC)
        (number->string . g$12025$1RbCyC)
        (null? . g$12024$1RbCyC)
        (not . g$12023$1RbCyC)
        (negative? . g$12022$1RbCyC)
        (nan? . g$12021$1RbCyC)
        (min . g$12020$1RbCyC)
        (max . g$12019$1RbCyC)
        (map . g$12018$1RbCyC)
        (make-vector . g$12017$1RbCyC)
        (make-string . g$12016$1RbCyC)
        (make-rectangular . g$12015$1RbCyC)
        (make-polar . g$12014$1RbCyC)
        (magnitude . g$12013$1RbCyC)
        (log . g$12012$1RbCyC)
        (list? . g$12011$1RbCyC)
        (list-tail . g$12010$1RbCyC)
        (list-ref . g$12009$1RbCyC)
        (list->vector . g$12008$1RbCyC)
        (list->string . g$12007$1RbCyC)
        (list . g$12006$1RbCyC)
        (length . g$12005$1RbCyC)
        (lcm . g$12004$1RbCyC)
        (integer? . g$12003$1RbCyC)
        (integer-valued? . g$12002$1RbCyC)
        (integer->char . g$12001$1RbCyC)
        (infinite? . g$12000$1RbCyC)
        (inexact? . g$11999$1RbCyC)
        (inexact . g$11998$1RbCyC)
        (imag-part . g$11997$1RbCyC)
        (gcd . g$11996$1RbCyC)
        (for-each . g$11995$1RbCyC)
        (floor . g$11994$1RbCyC)
        (finite? . g$11993$1RbCyC)
        (expt . g$11992$1RbCyC)
        (exp . g$11991$1RbCyC)
        (exact? . g$11990$1RbCyC)
        (exact-integer-sqrt . g$11989$1RbCyC)
        (exact . g$11988$1RbCyC)
        (even? . g$11987$1RbCyC)
        (error . g$11986$1RbCyC)
        (eqv? . g$11985$1RbCyC)
        (equal? . g$11984$1RbCyC)
        (eq? . g$11983$1RbCyC)
        (dynamic-wind . g$11982$1RbCyC)
        (div0-and-mod0 . g$11981$1RbCyC)
        (mod0 . g$11980$1RbCyC)
        (div0 . g$11979$1RbCyC)
        (div-and-mod . g$11978$1RbCyC)
        (mod . g$11977$1RbCyC)
        (div . g$11976$1RbCyC)
        (denominator . g$11975$1RbCyC)
        (cos . g$11974$1RbCyC)
        (cons . g$11973$1RbCyC)
        (complex? . g$11972$1RbCyC)
        (char? . g$11971$1RbCyC)
        (char>? . g$6039$1RbCyC)
        (char>=? . g$6041$1RbCyC)
        (char=? . g$6037$1RbCyC)
        (char<? . g$6038$1RbCyC)
        (char<=? . g$6040$1RbCyC)
        (char->integer . g$11970$1RbCyC)
        (ceiling . g$11969$1RbCyC)
        (call-with-values . g$11968$1RbCyC)
        (call/cc . g$11967$1RbCyC)
        (call-with-current-continuation . g$11966$1RbCyC)
        (cddddr . g$5961$1RbCyC)
        (cdddar . g$5960$1RbCyC)
        (cddadr . g$5959$1RbCyC)
        (cddaar . g$5958$1RbCyC)
        (cdaddr . g$5957$1RbCyC)
        (cdadar . g$5956$1RbCyC)
        (cdaadr . g$5955$1RbCyC)
        (cdaaar . g$5954$1RbCyC)
        (cadddr . g$5953$1RbCyC)
        (caddar . g$5952$1RbCyC)
        (cadadr . g$5951$1RbCyC)
        (cadaar . g$5950$1RbCyC)
        (caaddr . g$5949$1RbCyC)
        (caadar . g$5948$1RbCyC)
        (caaadr . g$5947$1RbCyC)
        (caaaar . g$5946$1RbCyC)
        (cdddr . g$5945$1RbCyC)
        (cddar . g$5944$1RbCyC)
        (cdadr . g$5943$1RbCyC)
        (cdaar . g$5942$1RbCyC)
        (caddr . g$5941$1RbCyC)
        (cadar . g$5940$1RbCyC)
        (caadr . g$5939$1RbCyC)
        (caaar . g$5938$1RbCyC)
        (cddr . g$5937$1RbCyC)
        (cdar . g$5936$1RbCyC)
        (cadr . g$5935$1RbCyC)
        (caar . g$5934$1RbCyC)
        (cdr . g$11965$1RbCyC)
        (car . g$11964$1RbCyC)
        (boolean? . g$11963$1RbCyC)
        (boolean=? . g$6002$1RbCyC)
        (atan . g$11962$1RbCyC)
        (assertion-violation . g$11961$1RbCyC)
        (asin . g$11960$1RbCyC)
        (apply . g$11959$1RbCyC)
        (append . g$11958$1RbCyC)
        (angle . g$11957$1RbCyC)
        (acos . g$11956$1RbCyC)
        (abs . g$11955$1RbCyC)
        (/ . g$11954$1RbCyC)
        (* . g$11953$1RbCyC)
        (- . g$11952$1RbCyC)
        (+ . g$11951$1RbCyC)
        (>= . g$11950$1RbCyC)
        (> . g$11949$1RbCyC)
        (= . g$11948$1RbCyC)
        (<= . g$11947$1RbCyC)
        (< . g$11946$1RbCyC)
        (make-record-printer . g$11945$1RbCyC)
        (eqv-hash . g$11944$1RbCyC)
        (reverse! . g$11943$1RbCyC)
        (deserialize-port . g$11942$1RbCyC)
        (serialize-port . g$11941$1RbCyC)
        (enum-set? . g$7375$1RbCyC)
        (make-promise . g$6832$1RbCyC)
        (load/args . g$11778$1RbCyC)
        (printf . g$7485$1RbCyC)
        (fprintf . g$7486$1RbCyC)
        (format . g$7487$1RbCyC)
        (procedure-form . g$11940$1RbCyC)
        (procedure-environment . g$11939$1RbCyC)
        (procedure-name . g$11938$1RbCyC)
        (procedure-arity . g$11937$1RbCyC)
        (gc-collect . g$11936$1RbCyC)
        (clr-type? . g$11935$1RbCyC)
        (get-clr-type . g$11934$1RbCyC)
        (get-command-line . g$11933$1RbCyC)
        (vector-append . g$11932$1RbCyC)
        (vector-filter . g$11931$1RbCyC)
        (vector-reverse! . g$11930$1RbCyC)
        (vector-contains? . g$11929$1RbCyC)
        (vector-index-of . g$11928$1RbCyC)
        (vector-copy . g$11927$1RbCyC)
        (vector-binary-search . g$11926$1RbCyC)
        (string-ci-compare . g$11925$1RbCyC)
        (string-compare . g$11924$1RbCyC)
        (string-format . g$11923$1RbCyC)
        (trace-printer . g$11775$1RbCyC)
        (make-traced-procedure . g$11922$1RbCyC)
        (make-traced-macro . g$7507$1RbCyC)
        (assertion-error . g$8800$1RbCyC)
        (pmap . g$11921$1RbCyC)
        (time-it . g$11920$1RbCyC)
        (make-parameter . g$7512$1RbCyC)
        (library-locator . g$11919$1RbCyC)
        (get-library-paths . g$11918$1RbCyC)
        (environment-bindings . g$8779$1RbCyC)
        (environment-symbols . g$8782$1RbCyC)
        (interaction-environment-symbols . g$8778$1RbCyC)
        (optimization-level . g$11917$1RbCyC)
        (library-path . g$7942$1RbCyC)
        (expand . g$8786$1RbCyC)
        (&no-nans . g$11916$1RbCyC)
        (&no-infinities . g$11915$1RbCyC)
        (&i/o-encoding . g$11914$1RbCyC)
        (&i/o-decoding . g$11913$1RbCyC)
        (&i/o-port . g$11912$1RbCyC)
        (&i/o-file-does-not-exist . g$11911$1RbCyC)
        (&i/o-file-already-exists . g$11910$1RbCyC)
        (&i/o-file-is-read-only . g$11909$1RbCyC)
        (&i/o-file-protection . g$11908$1RbCyC)
        (&i/o-filename . g$11907$1RbCyC)
        (&i/o-invalid-position . g$11906$1RbCyC)
        (&i/o-write . g$11905$1RbCyC)
        (&i/o-read . g$11904$1RbCyC)
        (&i/o . g$11903$1RbCyC)
        (&non-continuable . g$11902$1RbCyC)
        (&undefined . g$11901$1RbCyC)
        (&syntax . g$11900$1RbCyC)
        (&lexical . g$11899$1RbCyC)
        (&implementation-restriction . g$11898$1RbCyC)
        (&who . g$11897$1RbCyC)
        (&irritants . g$11896$1RbCyC)
        (&assertion . g$11895$1RbCyC)
        (&violation . g$11894$1RbCyC)
        (&error . g$11893$1RbCyC)
        (&serious . g$11892$1RbCyC)
        (&warning . g$11891$1RbCyC)
        (&message . g$11890$1RbCyC)
        (&condition . g$11889$1RbCyC)
        (define-condition-type . g$11888$1RbCyC)
        (define-enumeration . g$11887$1RbCyC)
        (define-record-type . g$11886$1RbCyC)
        (parent-rtd . g$11885$1RbCyC)
        (nongenerative . g$11884$1RbCyC)
        (opaque . g$11883$1RbCyC)
        (sealed . g$11882$1RbCyC)
        (protocol . g$11881$1RbCyC)
        (parent . g$11880$1RbCyC)
        (immutable . g$11879$1RbCyC)
        (mutable . g$11878$1RbCyC)
        (fields . g$11877$1RbCyC)
        (error-handling-mode . g$11876$1RbCyC)
        (file-options . g$11875$1RbCyC)
        (buffer-mode . g$11874$1RbCyC)
        (eol-style . g$11873$1RbCyC)
        (guard . g$11872$1RbCyC)
        (trace-letrec-syntax . g$11871$1RbCyC)
        (trace-let-syntax . g$11870$1RbCyC)
        (trace-define-syntax . g$11869$1RbCyC)
        (trace-define . g$11868$1RbCyC)
        (trace-lambda . g$11867$1RbCyC)
        (unsyntax-splicing . g$11866$1RbCyC)
        (unsyntax . g$11865$1RbCyC)
        (unquote-splicing . g$11864$1RbCyC)
        (unquote . g$11863$1RbCyC)
        (_ . g$11862$1RbCyC)
        (else . g$11861$1RbCyC)
        (=> . g$11860$1RbCyC)
        (... . g$11859$1RbCyC)
        (assert . g$11858$1RbCyC)
        (endianness . g$11857$1RbCyC)
        (delay . g$11856$1RbCyC)
        (time . g$11855$1RbCyC)
        (or . g$11854$1RbCyC)
        (and . g$11853$1RbCyC)
        (do . g$11852$1RbCyC)
        (cond . g$11851$1RbCyC)
        (let* . g$11850$1RbCyC)
        (let . g$11849$1RbCyC)
        (identifier-syntax . g$11848$1RbCyC)
        (with-syntax . g$11847$1RbCyC)
        (quasisyntax . g$11846$1RbCyC)
        (quasiquote . g$11845$1RbCyC)
        (syntax-rules . g$11844$1RbCyC)
        (include-into . g$11843$1RbCyC)
        (include . g$11842$1RbCyC)
        (define-struct . g$11841$1RbCyC)
        (let-values . g$11840$1RbCyC)
        (let*-values . g$11839$1RbCyC)
        (record-constructor-descriptor . g$11838$1RbCyC)
        (record-type-descriptor . g$11837$1RbCyC)
        (fluid-let-syntax . g$11836$1RbCyC)
        (case . g$11835$1RbCyC)
        (parameterize . g$11834$1RbCyC)
        (unless . g$11833$1RbCyC)
        (when . g$11832$1RbCyC)
        (if . g$11831$1RbCyC)
        (letrec* . g$11830$1RbCyC)
        (letrec . g$11829$1RbCyC)
        (type-descriptor . g$11828$1RbCyC)
        (case-lambda . g$11827$1RbCyC)
        (lambda . g$11826$1RbCyC)
        (syntax . g$11825$1RbCyC)
        (syntax-case . g$11824$1RbCyC)
        (quote . g$11823$1RbCyC)
        (foreign-call . g$11822$1RbCyC)
        (letrec-syntax . g$11821$1RbCyC)
        (let-syntax . g$11820$1RbCyC)
        (set! . g$11819$1RbCyC)
        (export . g$11818$1RbCyC)
        (import . g$11817$1RbCyC)
        (library . g$11816$1RbCyC)
        (begin . g$11815$1RbCyC)
        (module . g$11814$1RbCyC)
        (define-syntax . g$11813$1RbCyC)
        (define . g$11812$1RbCyC))
      '((g$8677$1RbCyC core-prim . ellipsis-map)
        (g$12428$1RbCyC core-prim . &no-nans-rcd)
        (g$12427$1RbCyC core-prim . &no-nans-rtd)
        (g$12426$1RbCyC core-prim . &no-infinities-rcd)
        (g$12425$1RbCyC core-prim . &no-infinities-rtd)
        (g$12424$1RbCyC core-prim . &i/o-encoding-rcd)
        (g$12423$1RbCyC core-prim . &i/o-encoding-rtd)
        (g$12422$1RbCyC core-prim . &i/o-decoding-rcd)
        (g$12421$1RbCyC core-prim . &i/o-decoding-rtd)
        (g$12420$1RbCyC core-prim . &i/o-port-rcd)
        (g$12419$1RbCyC core-prim . &i/o-port-rtd)
        (g$12418$1RbCyC core-prim . &i/o-file-does-not-exist-rcd)
        (g$12417$1RbCyC core-prim . &i/o-file-does-not-exist-rtd)
        (g$12416$1RbCyC core-prim . &i/o-file-already-exists-rcd)
        (g$12415$1RbCyC core-prim . &i/o-file-already-exists-rtd)
        (g$12414$1RbCyC core-prim . &i/o-file-is-read-only-rcd)
        (g$12413$1RbCyC core-prim . &i/o-file-is-read-only-rtd)
        (g$12412$1RbCyC core-prim . &i/o-file-protection-rcd)
        (g$12411$1RbCyC core-prim . &i/o-file-protection-rtd)
        (g$12410$1RbCyC core-prim . &i/o-filename-rcd)
        (g$12409$1RbCyC core-prim . &i/o-filename-rtd)
        (g$12408$1RbCyC core-prim . &i/o-invalid-position-rcd)
        (g$12407$1RbCyC core-prim . &i/o-invalid-position-rtd)
        (g$12406$1RbCyC core-prim . &i/o-write-rcd)
        (g$12405$1RbCyC core-prim . &i/o-write-rtd)
        (g$12404$1RbCyC core-prim . &i/o-read-rcd)
        (g$12403$1RbCyC core-prim . &i/o-read-rtd)
        (g$12402$1RbCyC core-prim . &i/o-rcd)
        (g$12401$1RbCyC core-prim . &i/o-rtd)
        (g$12400$1RbCyC core-prim . &undefined-rcd)
        (g$12399$1RbCyC core-prim . &undefined-rtd)
        (g$12398$1RbCyC core-prim . &syntax-rcd)
        (g$12397$1RbCyC core-prim . &syntax-rtd)
        (g$12396$1RbCyC core-prim . &lexical-rcd)
        (g$12395$1RbCyC core-prim . &lexical-rtd)
        (g$12394$1RbCyC core-prim . &implementation-restriction-rcd)
        (g$12393$1RbCyC core-prim . &implementation-restriction-rtd)
        (g$12392$1RbCyC core-prim . &non-continuable-rcd)
        (g$12391$1RbCyC core-prim . &non-continuable-rtd)
        (g$12390$1RbCyC core-prim . &who-rcd)
        (g$12389$1RbCyC core-prim . &who-rtd)
        (g$12388$1RbCyC core-prim . &irritants-rcd)
        (g$12387$1RbCyC core-prim . &irritants-rtd)
        (g$12386$1RbCyC core-prim . &assertion-rcd)
        (g$12385$1RbCyC core-prim . &assertion-rtd)
        (g$12384$1RbCyC core-prim . &violation-rcd)
        (g$12383$1RbCyC core-prim . &violation-rtd)
        (g$12382$1RbCyC core-prim . &error-rcd)
        (g$12381$1RbCyC core-prim . &error-rtd)
        (g$12380$1RbCyC core-prim . &serious-rcd)
        (g$12379$1RbCyC core-prim . &serious-rtd)
        (g$12378$1RbCyC core-prim . &warning-rcd)
        (g$12377$1RbCyC core-prim . &warning-rtd)
        (g$12376$1RbCyC core-prim . &message-rcd)
        (g$12375$1RbCyC core-prim . &message-rtd)
        (g$12374$1RbCyC core-prim . &condition-rcd)
        (g$12373$1RbCyC core-prim . &condition-rtd)
        (g$12372$1RbCyC core-prim . library-letrec*)
        (g$12371$1RbCyC core-prim . annotation-stripped)
        (g$12370$1RbCyC core-prim . annotation-source)
        (g$12369$1RbCyC core-prim . annotation-expression)
        (g$12368$1RbCyC core-prim . annotation?)
        (g$12367$1RbCyC core-prim . read-annotated)
        (g$12366$1RbCyC core-prim . tanh)
        (g$12365$1RbCyC core-prim . cosh)
        (g$12364$1RbCyC core-prim . sinh)
        (g$12363$1RbCyC core-prim . make-guid)
        (g$12362$1RbCyC core-prim . unspecified?)
        (g$12361$1RbCyC core-prim . make-trace)
        (g$12360$1RbCyC core-prim . make-list)
        (g$12359$1RbCyC core-prim . last-pair)
        (g$12358$1RbCyC core-prim . load-r5rs)
        (g$12357$1RbCyC core-prim . license)
        (g$12356$1RbCyC core-prim . stacktrace)
        (g$11780$1RbCyC core-prim . ironscheme-build)
        (g$12355$1RbCyC core-prim . define-clr-class-internal)
        (g$12354$1RbCyC core-prim . clr-field-set!-internal)
        (g$12353$1RbCyC core-prim . clr-field-get-internal)
        (g$12352$1RbCyC core-prim . clr-cast-internal)
        (g$12351$1RbCyC core-prim . clr-call-internal)
        (g$12350$1RbCyC core-prim . clr-new-internal)
        (g$12349$1RbCyC core-prim . clr-new-array-internal)
        (g$12348$1RbCyC core-prim . clr-is-internal)
        (g$12347$1RbCyC core-prim . clr-reference-internal)
        (g$12346$1RbCyC core-prim . clr-using-internal)
        (g$12345$1RbCyC core-prim . clr-clear-usings-internal)
        (g$8801$1RbCyC core-prim . syntax-error)
        (g$8672$1RbCyC core-prim . syntax-dispatch)
        (g$12344$1RbCyC core-prim . compile-core)
        (g$12343$1RbCyC core-prim . eval-core)
        (g$12342$1RbCyC core-prim . set-symbol-value!)
        (g$12341$1RbCyC core-prim . symbol-value)
        (g$12340$1RbCyC core-prim . ungensym)
        (g$12339$1RbCyC core-prim . gensym)
        (g$12338$1RbCyC core-prim . void)
        (g$12337$1RbCyC core-prim . load-serialized-library)
        (g$12336$1RbCyC core-prim . serialize-library)
        (g$11782$1RbCyC core-prim . compile-system-libraries)
        (g$11784$1RbCyC core-prim . compile->closure)
        (g$11783$1RbCyC core-prim . compile)
        (g$11779$1RbCyC core-prim . load)
        (g$8810$1RbCyC core-prim . interaction-environment)
        (g$12335$1RbCyC core-prim . char-ready?)
        (g$12334$1RbCyC core-prim . string-upcase)
        (g$12333$1RbCyC core-prim . string-titlecase)
        (g$12332$1RbCyC core-prim . string-normalize-nfkd)
        (g$12331$1RbCyC core-prim . string-normalize-nfkc)
        (g$12330$1RbCyC core-prim . string-normalize-nfd)
        (g$12329$1RbCyC core-prim . string-normalize-nfc)
        (g$12328$1RbCyC core-prim . string-foldcase)
        (g$12327$1RbCyC core-prim . string-downcase)
        (g$6911$1RbCyC core-prim . string-ci>?)
        (g$6913$1RbCyC core-prim . string-ci>=?)
        (g$6909$1RbCyC core-prim . string-ci=?)
        (g$6910$1RbCyC core-prim . string-ci<?)
        (g$6912$1RbCyC core-prim . string-ci<=?)
        (g$12326$1RbCyC core-prim . char-whitespace?)
        (g$12325$1RbCyC core-prim . char-upper-case?)
        (g$12324$1RbCyC core-prim . char-title-case?)
        (g$12323$1RbCyC core-prim . char-numeric?)
        (g$12322$1RbCyC core-prim . char-lower-case?)
        (g$12321$1RbCyC core-prim . char-general-category)
        (g$12320$1RbCyC core-prim . char-upcase)
        (g$12319$1RbCyC core-prim . char-titlecase)
        (g$12318$1RbCyC core-prim . char-foldcase)
        (g$12317$1RbCyC core-prim . char-downcase)
        (g$6950$1RbCyC core-prim . char-ci>?)
        (g$6952$1RbCyC core-prim . char-ci>=?)
        (g$6948$1RbCyC core-prim . char-ci=?)
        (g$6949$1RbCyC core-prim . char-ci<?)
        (g$6951$1RbCyC core-prim . char-ci<=?)
        (g$12316$1RbCyC core-prim . char-alphabetic?)
        (g$8409$1RbCyC core-prim . variable-transformer-procedure)
        (g$8408$1RbCyC core-prim . variable-transformer?)
        (g$8407$1RbCyC core-prim . make-variable-transformer)
        (g$8805$1RbCyC core-prim . identifier?)
        (g$8794$1RbCyC core-prim . generate-temporaries)
        (g$8795$1RbCyC core-prim . free-identifier=?)
        (g$8807$1RbCyC core-prim . syntax->datum)
        (g$8806$1RbCyC core-prim . datum->syntax)
        (g$8796$1RbCyC core-prim . bound-identifier=?)
        (g$12315$1RbCyC core-prim . record-type-descriptor?)
        (g$12314$1RbCyC core-prim . record-predicate)
        (g$12313$1RbCyC core-prim . record-mutator)
        (g$12312$1RbCyC core-prim . record-constructor)
        (g$12311$1RbCyC core-prim . record-accessor)
        (g$12310$1RbCyC core-prim . make-record-type-descriptor)
        (g$12309$1RbCyC core-prim . make-record-constructor-descriptor)
        (g$12308$1RbCyC core-prim . record?)
        (g$12307$1RbCyC core-prim . record-type-uid)
        (g$12306$1RbCyC core-prim . record-type-sealed?)
        (g$12305$1RbCyC core-prim . record-type-parent)
        (g$12304$1RbCyC core-prim . record-type-opaque?)
        (g$12303$1RbCyC core-prim . record-type-name)
        (g$12302$1RbCyC core-prim . record-type-generative?)
        (g$12301$1RbCyC core-prim . record-type-field-names)
        (g$12300$1RbCyC core-prim . record-rtd)
        (g$12299$1RbCyC core-prim . record-field-mutable?)
        (g$6486$1RbCyC core-prim . delete-file)
        (g$6485$1RbCyC core-prim . file-exists?)
        (g$12298$1RbCyC core-prim . vector-sort!)
        (g$12297$1RbCyC core-prim . vector-sort)
        (g$6849$1RbCyC core-prim . list-sort)
        (g$12296$1RbCyC core-prim . symbol-hash)
        (g$12295$1RbCyC core-prim . string-ci-hash)
        (g$12294$1RbCyC core-prim . string-hash)
        (g$12293$1RbCyC core-prim . equal-hash)
        (g$12292$1RbCyC core-prim . hashtable-equivalence-function)
        (g$12291$1RbCyC core-prim . make-hashtable)
        (g$12290$1RbCyC core-prim . hashtable-hash-function)
        (g$6453$1RbCyC core-prim . make-eqv-hashtable)
        (g$6452$1RbCyC core-prim . make-eq-hashtable)
        (g$12289$1RbCyC core-prim . hashtable?)
        (g$6459$1RbCyC core-prim . hashtable-update!)
        (g$6454$1RbCyC core-prim . hashtable-size)
        (g$6456$1RbCyC core-prim . hashtable-set!)
        (g$6455$1RbCyC core-prim . hashtable-ref)
        (g$12288$1RbCyC core-prim . hashtable-mutable?)
        (g$12287$1RbCyC core-prim . hashtable-keys)
        (g$12286$1RbCyC core-prim . hashtable-entries)
        (g$6457$1RbCyC core-prim . hashtable-delete!)
        (g$12285$1RbCyC core-prim . hashtable-copy)
        (g$6458$1RbCyC core-prim . hashtable-contains?)
        (g$6460$1RbCyC core-prim . hashtable-clear!)
        (g$7342$1RbCyC core-prim . call-with-output-file)
        (g$7341$1RbCyC core-prim . call-with-input-file)
        (g$12284$1RbCyC core-prim . write-char)
        (g$12283$1RbCyC core-prim . write)
        (g$7340$1RbCyC core-prim . with-output-to-file)
        (g$7339$1RbCyC core-prim . with-input-from-file)
        (g$12282$1RbCyC core-prim . read-char)
        (g$12281$1RbCyC core-prim . read)
        (g$12280$1RbCyC core-prim . peek-char)
        (g$12279$1RbCyC core-prim . open-output-file)
        (g$12278$1RbCyC core-prim . open-input-file)
        (g$12277$1RbCyC core-prim . newline)
        (g$12276$1RbCyC core-prim . display)
        (g$12275$1RbCyC core-prim . close-output-port)
        (g$12274$1RbCyC core-prim . close-input-port)
        (g$12273$1RbCyC core-prim . eof-object?)
        (g$12272$1RbCyC core-prim . eof-object)
        (g$12271$1RbCyC core-prim . current-error-port)
        (g$12270$1RbCyC core-prim . current-output-port)
        (g$12269$1RbCyC core-prim . current-input-port)
        (g$12268$1RbCyC core-prim . output-port?)
        (g$12267$1RbCyC core-prim . input-port?)
        (g$12266$1RbCyC core-prim . utf-8-codec)
        (g$12265$1RbCyC core-prim . utf-16-codec)
        (g$12264$1RbCyC core-prim . transcoder-error-handling-mode)
        (g$12263$1RbCyC core-prim . transcoder-eol-style)
        (g$12262$1RbCyC core-prim . transcoder-codec)
        (g$12261$1RbCyC core-prim . transcoded-port)
        (g$12260$1RbCyC core-prim . textual-port?)
        (g$12259$1RbCyC core-prim . string->bytevector)
        (g$12258$1RbCyC core-prim . standard-output-port)
        (g$12257$1RbCyC core-prim . standard-input-port)
        (g$12256$1RbCyC core-prim . standard-error-port)
        (g$12255$1RbCyC core-prim . set-port-position!)
        (g$12254$1RbCyC core-prim . put-u8)
        (g$12253$1RbCyC core-prim . put-string)
        (g$12252$1RbCyC core-prim . put-datum)
        (g$12251$1RbCyC core-prim . put-char)
        (g$12250$1RbCyC core-prim . put-bytevector)
        (g$7315$1RbCyC core-prim . port?)
        (g$12249$1RbCyC core-prim . port-transcoder)
        (g$12248$1RbCyC core-prim . port-position)
        (g$12247$1RbCyC core-prim . port-has-set-port-position!?)
        (g$12246$1RbCyC core-prim . port-has-port-position?)
        (g$12245$1RbCyC core-prim . port-eof?)
        (g$12244$1RbCyC core-prim . output-port-buffer-mode)
        (g$7314$1RbCyC core-prim . open-string-output-port)
        (g$12243$1RbCyC core-prim . open-string-input-port)
        (g$12242$1RbCyC core-prim . open-file-output-port)
        (g$12241$1RbCyC core-prim . open-file-input/output-port)
        (g$12240$1RbCyC core-prim . open-file-input-port)
        (g$12239$1RbCyC core-prim . open-bytevector-output-port)
        (g$12238$1RbCyC core-prim . open-bytevector-input-port)
        (g$12237$1RbCyC core-prim . native-transcoder)
        (g$12236$1RbCyC core-prim . native-eol-style)
        (g$12235$1RbCyC core-prim . make-transcoder)
        (g$12234$1RbCyC core-prim . latin-1-codec)
        (g$7171$1RbCyC core-prim . make-i/o-write-error)
        (g$7157$1RbCyC core-prim . make-i/o-read-error)
        (g$7276$1RbCyC core-prim . make-i/o-port-error)
        (g$7186$1RbCyC core-prim . make-i/o-invalid-position-error)
        (g$7203$1RbCyC core-prim . make-i/o-filename-error)
        (g$7219$1RbCyC core-prim . make-i/o-file-protection-error)
        (g$7233$1RbCyC core-prim . make-i/o-file-is-read-only-error)
        (g$7261$1RbCyC core-prim . make-i/o-file-does-not-exist-error)
        (g$7247$1RbCyC core-prim . make-i/o-file-already-exists-error)
        (g$7143$1RbCyC core-prim . make-i/o-error)
        (g$7307$1RbCyC core-prim . make-i/o-encoding-error)
        (g$7292$1RbCyC core-prim . make-i/o-decoding-error)
        (g$12233$1RbCyC core-prim . make-custom-textual-output-port)
        (g$12232$1RbCyC core-prim . make-custom-textual-input/output-port)
        (g$12231$1RbCyC core-prim . make-custom-textual-input-port)
        (g$12230$1RbCyC core-prim . make-custom-binary-output-port)
        (g$12229$1RbCyC core-prim . make-custom-binary-input/output-port)
        (g$12228$1RbCyC core-prim . make-custom-binary-input-port)
        (g$12227$1RbCyC core-prim . make-bytevector)
        (g$12226$1RbCyC core-prim . lookahead-u8)
        (g$12225$1RbCyC core-prim . lookahead-char)
        (g$7172$1RbCyC core-prim . i/o-write-error?)
        (g$7158$1RbCyC core-prim . i/o-read-error?)
        (g$7278$1RbCyC core-prim . i/o-port-error?)
        (g$7188$1RbCyC core-prim . i/o-invalid-position-error?)
        (g$7189$1RbCyC core-prim . i/o-error-position)
        (g$7205$1RbCyC core-prim . i/o-filename-error?)
        (g$7220$1RbCyC core-prim . i/o-file-protection-error?)
        (g$7234$1RbCyC core-prim . i/o-file-is-read-only-error?)
        (g$7262$1RbCyC core-prim . i/o-file-does-not-exist-error?)
        (g$7248$1RbCyC core-prim . i/o-file-already-exists-error?)
        (g$7144$1RbCyC core-prim . i/o-error?)
        (g$7279$1RbCyC core-prim . i/o-error-port)
        (g$7206$1RbCyC core-prim . i/o-error-filename)
        (g$7309$1RbCyC core-prim . i/o-encoding-error?)
        (g$7310$1RbCyC core-prim . i/o-encoding-error-char)
        (g$7293$1RbCyC core-prim . i/o-decoding-error?)
        (g$12224$1RbCyC core-prim . get-u8)
        (g$12223$1RbCyC core-prim . get-string-n!)
        (g$12222$1RbCyC core-prim . get-string-n)
        (g$12221$1RbCyC core-prim . get-string-all)
        (g$12220$1RbCyC core-prim . get-line)
        (g$12219$1RbCyC core-prim . get-datum)
        (g$12218$1RbCyC core-prim . get-char)
        (g$12217$1RbCyC core-prim . get-bytevector-some)
        (g$12216$1RbCyC core-prim . get-bytevector-n!)
        (g$12215$1RbCyC core-prim . get-bytevector-n)
        (g$12214$1RbCyC core-prim . get-bytevector-all)
        (g$12213$1RbCyC core-prim . flush-output-port)
        (g$12212$1RbCyC core-prim . close-port)
        (g$7316$1RbCyC core-prim . call-with-string-output-port)
        (g$12211$1RbCyC core-prim . call-with-port)
        (g$12210$1RbCyC core-prim . call-with-bytevector-output-port)
        (g$12209$1RbCyC core-prim . bytevector->string)
        (g$12208$1RbCyC core-prim . buffer-mode?)
        (g$12207$1RbCyC core-prim . binary-port?)
        (g$8785$1RbCyC core-prim . scheme-report-environment)
        (g$6829$1RbCyC core-prim . quotient)
        (g$8784$1RbCyC core-prim . null-environment)
        (g$6830$1RbCyC core-prim . remainder)
        (g$6831$1RbCyC core-prim . modulo)
        (g$12206$1RbCyC core-prim . inexact->exact)
        (g$6833$1RbCyC core-prim . force)
        (g$12205$1RbCyC core-prim . exact->inexact)
        (g$12204$1RbCyC core-prim . exit)
        (g$11776$1RbCyC core-prim . command-line)
        (g$12203$1RbCyC core-prim . string-fill!)
        (g$12202$1RbCyC core-prim . string-set!)
        (g$12201$1RbCyC core-prim . set-cdr!)
        (g$12200$1RbCyC core-prim . set-car!)
        (g$5847$1RbCyC core-prim . remove)
        (g$5848$1RbCyC core-prim . remv)
        (g$5830$1RbCyC core-prim . remp)
        (g$5849$1RbCyC core-prim . remq)
        (g$5829$1RbCyC core-prim . partition)
        (g$5837$1RbCyC core-prim . memv)
        (g$5836$1RbCyC core-prim . memq)
        (g$5839$1RbCyC core-prim . memp)
        (g$5838$1RbCyC core-prim . member)
        (g$5843$1RbCyC core-prim . exists)
        (g$5842$1RbCyC core-prim . for-all)
        (g$5846$1RbCyC core-prim . fold-right)
        (g$5845$1RbCyC core-prim . fold-left)
        (g$5828$1RbCyC core-prim . find)
        (g$5831$1RbCyC core-prim . filter)
        (g$5844$1RbCyC core-prim . cons*)
        (g$5833$1RbCyC core-prim . assv)
        (g$5832$1RbCyC core-prim . assq)
        (g$5835$1RbCyC core-prim . assp)
        (g$5834$1RbCyC core-prim . assoc)
        (g$12199$1RbCyC core-prim . with-exception-handler)
        (g$12198$1RbCyC core-prim . raise-continuable)
        (g$12197$1RbCyC core-prim . raise)
        (g$8787$1RbCyC core-prim . eval)
        (g$8783$1RbCyC core-prim . environment)
        (g$7400$1RbCyC core-prim . make-enumeration)
        (g$7407$1RbCyC core-prim . enum-set=?)
        (g$7401$1RbCyC core-prim . enum-set-universe)
        (g$7408$1RbCyC core-prim . enum-set-union)
        (g$7406$1RbCyC core-prim . enum-set-subset?)
        (g$7412$1RbCyC core-prim . enum-set-projection)
        (g$7405$1RbCyC core-prim . enum-set-member?)
        (g$7409$1RbCyC core-prim . enum-set-intersection)
        (g$7402$1RbCyC core-prim . enum-set-indexer)
        (g$7410$1RbCyC core-prim . enum-set-difference)
        (g$7403$1RbCyC core-prim . enum-set-constructor)
        (g$7411$1RbCyC core-prim . enum-set-complement)
        (g$7404$1RbCyC core-prim . enum-set->list)
        (g$6740$1RbCyC core-prim . who-condition?)
        (g$6651$1RbCyC core-prim . warning?)
        (g$6693$1RbCyC core-prim . violation?)
        (g$6817$1RbCyC core-prim . undefined-violation?)
        (g$6801$1RbCyC core-prim . syntax-violation?)
        (g$6803$1RbCyC core-prim . syntax-violation-subform)
        (g$6802$1RbCyC core-prim . syntax-violation-form)
        (g$8804$1RbCyC core-prim . syntax-violation)
        (g$12196$1RbCyC core-prim . simple-conditions)
        (g$6665$1RbCyC core-prim . serious-condition?)
        (g$6755$1RbCyC core-prim . non-continuable-violation?)
        (g$6636$1RbCyC core-prim . message-condition?)
        (g$6738$1RbCyC core-prim . make-who-condition)
        (g$6650$1RbCyC core-prim . make-warning)
        (g$6692$1RbCyC core-prim . make-violation)
        (g$6816$1RbCyC core-prim . make-undefined-violation)
        (g$6798$1RbCyC core-prim . make-syntax-violation)
        (g$6664$1RbCyC core-prim . make-serious-condition)
        (g$6754$1RbCyC core-prim . make-non-continuable-violation)
        (g$6634$1RbCyC core-prim . make-message-condition)
        (g$6782$1RbCyC core-prim . make-lexical-violation)
        (g$6721$1RbCyC core-prim . make-irritants-condition)
        (g$6768$1RbCyC core-prim . make-implementation-restriction-violation)
        (g$6678$1RbCyC core-prim . make-error)
        (g$6706$1RbCyC core-prim . make-assertion-violation)
        (g$6783$1RbCyC core-prim . lexical-violation?)
        (g$6723$1RbCyC core-prim . irritants-condition?)
        (g$6769$1RbCyC core-prim . implementation-restriction-violation?)
        (g$6679$1RbCyC core-prim . error?)
        (g$6741$1RbCyC core-prim . condition-who)
        (g$12195$1RbCyC core-prim . condition-predicate)
        (g$6637$1RbCyC core-prim . condition-message)
        (g$6724$1RbCyC core-prim . condition-irritants)
        (g$12194$1RbCyC core-prim . condition-accessor)
        (g$12193$1RbCyC core-prim . condition)
        (g$6707$1RbCyC core-prim . assertion-violation?)
        (g$12192$1RbCyC core-prim . condition?)
        (g$12191$1RbCyC core-prim . utf32->string)
        (g$12190$1RbCyC core-prim . utf16->string)
        (g$12189$1RbCyC core-prim . utf8->string)
        (g$12188$1RbCyC core-prim . uint-list->bytevector)
        (g$12187$1RbCyC core-prim . u8-list->bytevector)
        (g$12186$1RbCyC core-prim . string->utf8)
        (g$12185$1RbCyC core-prim . string->utf32)
        (g$12184$1RbCyC core-prim . string->utf16)
        (g$12183$1RbCyC core-prim . sint-list->bytevector)
        (g$6492$1RbCyC core-prim . native-endianness)
        (g$12182$1RbCyC core-prim . bytevector?)
        (g$12181$1RbCyC core-prim . bytevector=?)
        (g$12180$1RbCyC core-prim . bytevector-uint-set!)
        (g$12179$1RbCyC core-prim . bytevector-uint-ref)
        (g$12178$1RbCyC core-prim . bytevector-u8-set!)
        (g$12177$1RbCyC core-prim . bytevector-u8-ref)
        (g$6513$1RbCyC core-prim . bytevector-u64-set!)
        (g$6509$1RbCyC core-prim . bytevector-u64-ref)
        (g$6515$1RbCyC core-prim . bytevector-u64-native-set!)
        (g$6511$1RbCyC core-prim . bytevector-u64-native-ref)
        (g$6505$1RbCyC core-prim . bytevector-u32-set!)
        (g$6501$1RbCyC core-prim . bytevector-u32-ref)
        (g$6507$1RbCyC core-prim . bytevector-u32-native-set!)
        (g$6503$1RbCyC core-prim . bytevector-u32-native-ref)
        (g$6497$1RbCyC core-prim . bytevector-u16-set!)
        (g$6493$1RbCyC core-prim . bytevector-u16-ref)
        (g$6499$1RbCyC core-prim . bytevector-u16-native-set!)
        (g$6495$1RbCyC core-prim . bytevector-u16-native-ref)
        (g$12176$1RbCyC core-prim . bytevector-sint-set!)
        (g$12175$1RbCyC core-prim . bytevector-sint-ref)
        (g$12174$1RbCyC core-prim . bytevector-s8-set!)
        (g$12173$1RbCyC core-prim . bytevector-s8-ref)
        (g$6514$1RbCyC core-prim . bytevector-s64-set!)
        (g$6510$1RbCyC core-prim . bytevector-s64-ref)
        (g$6516$1RbCyC core-prim . bytevector-s64-native-set!)
        (g$6512$1RbCyC core-prim . bytevector-s64-native-ref)
        (g$6506$1RbCyC core-prim . bytevector-s32-set!)
        (g$6502$1RbCyC core-prim . bytevector-s32-ref)
        (g$6508$1RbCyC core-prim . bytevector-s32-native-set!)
        (g$6504$1RbCyC core-prim . bytevector-s32-native-ref)
        (g$6498$1RbCyC core-prim . bytevector-s16-set!)
        (g$6494$1RbCyC core-prim . bytevector-s16-ref)
        (g$6500$1RbCyC core-prim . bytevector-s16-native-set!)
        (g$6496$1RbCyC core-prim . bytevector-s16-native-ref)
        (g$12172$1RbCyC core-prim . bytevector-length)
        (g$12171$1RbCyC core-prim . bytevector-ieee-single-set!)
        (g$12170$1RbCyC core-prim . bytevector-ieee-single-ref)
        (g$6519$1RbCyC core-prim . bytevector-ieee-single-native-set!)
        (g$6517$1RbCyC core-prim . bytevector-ieee-single-native-ref)
        (g$12169$1RbCyC core-prim . bytevector-ieee-double-set!)
        (g$12168$1RbCyC core-prim . bytevector-ieee-double-ref)
        (g$6520$1RbCyC core-prim . bytevector-ieee-double-native-set!)
        (g$6518$1RbCyC core-prim . bytevector-ieee-double-native-ref)
        (g$12167$1RbCyC core-prim . bytevector-fill!)
        (g$12166$1RbCyC core-prim . bytevector-copy!)
        (g$12165$1RbCyC core-prim . bytevector-copy)
        (g$12164$1RbCyC core-prim . bytevector->uint-list)
        (g$12163$1RbCyC core-prim . bytevector->u8-list)
        (g$12162$1RbCyC core-prim . bytevector->sint-list)
        (g$7129$1RbCyC core-prim . no-nans-violation?)
        (g$7115$1RbCyC core-prim . no-infinities-violation?)
        (g$7128$1RbCyC core-prim . make-no-nans-violation)
        (g$7114$1RbCyC core-prim . make-no-infinities-violation)
        (g$12161$1RbCyC core-prim . real->flonum)
        (g$12160$1RbCyC core-prim . flzero?)
        (g$12159$1RbCyC core-prim . fltruncate)
        (g$12158$1RbCyC core-prim . fltan)
        (g$12157$1RbCyC core-prim . flsqrt)
        (g$12156$1RbCyC core-prim . flsin)
        (g$12155$1RbCyC core-prim . flround)
        (g$12154$1RbCyC core-prim . flpositive?)
        (g$12153$1RbCyC core-prim . flonum?)
        (g$12152$1RbCyC core-prim . flodd?)
        (g$12151$1RbCyC core-prim . flnumerator)
        (g$12150$1RbCyC core-prim . flnegative?)
        (g$12149$1RbCyC core-prim . flnan?)
        (g$12148$1RbCyC core-prim . flmod0)
        (g$12147$1RbCyC core-prim . flmod)
        (g$12146$1RbCyC core-prim . flmin)
        (g$12145$1RbCyC core-prim . flmax)
        (g$12144$1RbCyC core-prim . fllog)
        (g$12143$1RbCyC core-prim . flinteger?)
        (g$12142$1RbCyC core-prim . flinfinite?)
        (g$12141$1RbCyC core-prim . flfloor)
        (g$12140$1RbCyC core-prim . flfinite?)
        (g$12139$1RbCyC core-prim . flexpt)
        (g$12138$1RbCyC core-prim . flexp)
        (g$12137$1RbCyC core-prim . fleven?)
        (g$12136$1RbCyC core-prim . fldiv0-and-mod0)
        (g$12135$1RbCyC core-prim . fldiv0)
        (g$12134$1RbCyC core-prim . fldiv-and-mod)
        (g$12133$1RbCyC core-prim . fldiv)
        (g$12132$1RbCyC core-prim . fldenominator)
        (g$12131$1RbCyC core-prim . flcos)
        (g$12130$1RbCyC core-prim . flceiling)
        (g$12129$1RbCyC core-prim . flatan)
        (g$12128$1RbCyC core-prim . flasin)
        (g$12127$1RbCyC core-prim . flacos)
        (g$12126$1RbCyC core-prim . flabs)
        (g$12125$1RbCyC core-prim . fl>?)
        (g$12124$1RbCyC core-prim . fl>=?)
        (g$12123$1RbCyC core-prim . fl=?)
        (g$12122$1RbCyC core-prim . fl<?)
        (g$12121$1RbCyC core-prim . fl<=?)
        (g$12120$1RbCyC core-prim . fl/)
        (g$12119$1RbCyC core-prim . fl-)
        (g$12118$1RbCyC core-prim . fl+)
        (g$12117$1RbCyC core-prim . fl*)
        (g$12116$1RbCyC core-prim . fixnum->flonum)
        (g$12115$1RbCyC core-prim . fxzero?)
        (g$12114$1RbCyC core-prim . fxxor)
        (g$7060$1RbCyC core-prim . fxrotate-bit-field)
        (g$12113$1RbCyC core-prim . fxreverse-bit-field)
        (g$12112$1RbCyC core-prim . fxpositive?)
        (g$12111$1RbCyC core-prim . fxodd?)
        (g$12110$1RbCyC core-prim . fxnot)
        (g$12109$1RbCyC core-prim . fxnegative?)
        (g$12108$1RbCyC core-prim . fxmod0)
        (g$12107$1RbCyC core-prim . fxmod)
        (g$12106$1RbCyC core-prim . fxmin)
        (g$12105$1RbCyC core-prim . fxmax)
        (g$12104$1RbCyC core-prim . fxlength)
        (g$12103$1RbCyC core-prim . fxior)
        (g$7054$1RbCyC core-prim . fxif)
        (g$12102$1RbCyC core-prim . fxfirst-bit-set)
        (g$12101$1RbCyC core-prim . fxeven?)
        (g$12100$1RbCyC core-prim . fxdiv0-and-mod0)
        (g$12099$1RbCyC core-prim . fxdiv0)
        (g$12098$1RbCyC core-prim . fxdiv-and-mod)
        (g$12097$1RbCyC core-prim . fxdiv)
        (g$7057$1RbCyC core-prim . fxcopy-bit-field)
        (g$7055$1RbCyC core-prim . fxcopy-bit)
        (g$12096$1RbCyC core-prim . fxbit-set?)
        (g$7056$1RbCyC core-prim . fxbit-field)
        (g$12095$1RbCyC core-prim . fxbit-count)
        (g$7059$1RbCyC core-prim . fxarithmetic-shift-right)
        (g$7058$1RbCyC core-prim . fxarithmetic-shift-left)
        (g$12094$1RbCyC core-prim . fxarithmetic-shift)
        (g$12093$1RbCyC core-prim . fxand)
        (g$12092$1RbCyC core-prim . fx>?)
        (g$12091$1RbCyC core-prim . fx>=?)
        (g$12090$1RbCyC core-prim . fx=?)
        (g$12089$1RbCyC core-prim . fx<?)
        (g$12088$1RbCyC core-prim . fx<=?)
        (g$12087$1RbCyC core-prim . fx-/carry)
        (g$12086$1RbCyC core-prim . fx-)
        (g$12085$1RbCyC core-prim . fx+/carry)
        (g$12084$1RbCyC core-prim . fx+)
        (g$12083$1RbCyC core-prim . fx*/carry)
        (g$12082$1RbCyC core-prim . fx*)
        (g$12081$1RbCyC core-prim . greatest-fixnum)
        (g$12080$1RbCyC core-prim . least-fixnum)
        (g$12079$1RbCyC core-prim . fixnum-width)
        (g$12078$1RbCyC core-prim . fixnum?)
        (g$7012$1RbCyC core-prim . bitwise-rotate-bit-field)
        (g$12077$1RbCyC core-prim . bitwise-reverse-bit-field)
        (g$12076$1RbCyC core-prim . bitwise-length)
        (g$7006$1RbCyC core-prim . bitwise-if)
        (g$12075$1RbCyC core-prim . bitwise-first-bit-set)
        (g$7009$1RbCyC core-prim . bitwise-copy-bit-field)
        (g$7007$1RbCyC core-prim . bitwise-copy-bit)
        (g$12074$1RbCyC core-prim . bitwise-bit-set?)
        (g$12073$1RbCyC core-prim . bitwise-bit-field)
        (g$12072$1RbCyC core-prim . bitwise-bit-count)
        (g$12071$1RbCyC core-prim . bitwise-xor)
        (g$12070$1RbCyC core-prim . bitwise-ior)
        (g$12069$1RbCyC core-prim . bitwise-and)
        (g$12068$1RbCyC core-prim . bitwise-not)
        (g$7011$1RbCyC core-prim . bitwise-arithmetic-shift-right)
        (g$7010$1RbCyC core-prim . bitwise-arithmetic-shift-left)
        (g$12067$1RbCyC core-prim . bitwise-arithmetic-shift)
        (g$12066$1RbCyC core-prim . zero?)
        (g$12065$1RbCyC core-prim . vector?)
        (g$12064$1RbCyC core-prim . vector-set!)
        (g$12063$1RbCyC core-prim . vector-ref)
        (g$12062$1RbCyC core-prim . vector-map)
        (g$12061$1RbCyC core-prim . vector-length)
        (g$12060$1RbCyC core-prim . vector-for-each)
        (g$12059$1RbCyC core-prim . vector-fill!)
        (g$12058$1RbCyC core-prim . vector->list)
        (g$12057$1RbCyC core-prim . vector)
        (g$12056$1RbCyC core-prim . values)
        (g$12055$1RbCyC core-prim . truncate)
        (g$12054$1RbCyC core-prim . tan)
        (g$12053$1RbCyC core-prim . symbol?)
        (g$6001$1RbCyC core-prim . symbol=?)
        (g$12052$1RbCyC core-prim . symbol->string)
        (g$12051$1RbCyC core-prim . substring)
        (g$12050$1RbCyC core-prim . string?)
        (g$5998$1RbCyC core-prim . string>?)
        (g$6000$1RbCyC core-prim . string>=?)
        (g$5996$1RbCyC core-prim . string=?)
        (g$5997$1RbCyC core-prim . string<?)
        (g$5999$1RbCyC core-prim . string<=?)
        (g$12049$1RbCyC core-prim . string-ref)
        (g$12048$1RbCyC core-prim . string-length)
        (g$12047$1RbCyC core-prim . string-for-each)
        (g$12046$1RbCyC core-prim . string-copy)
        (g$12045$1RbCyC core-prim . string-append)
        (g$12044$1RbCyC core-prim . string->symbol)
        (g$12043$1RbCyC core-prim . string->number)
        (g$12042$1RbCyC core-prim . string->list)
        (g$12041$1RbCyC core-prim . string)
        (g$12040$1RbCyC core-prim . sqrt)
        (g$12039$1RbCyC core-prim . sin)
        (g$12038$1RbCyC core-prim . round)
        (g$12037$1RbCyC core-prim . reverse)
        (g$12036$1RbCyC core-prim . real?)
        (g$12035$1RbCyC core-prim . real-valued?)
        (g$12034$1RbCyC core-prim . real-part)
        (g$6042$1RbCyC core-prim . rationalize)
        (g$12033$1RbCyC core-prim . rational?)
        (g$12032$1RbCyC core-prim . rational-valued?)
        (g$12031$1RbCyC core-prim . procedure?)
        (g$12030$1RbCyC core-prim . positive?)
        (g$12029$1RbCyC core-prim . pair?)
        (g$12028$1RbCyC core-prim . odd?)
        (g$12027$1RbCyC core-prim . numerator)
        (g$12026$1RbCyC core-prim . number?)
        (g$12025$1RbCyC core-prim . number->string)
        (g$12024$1RbCyC core-prim . null?)
        (g$12023$1RbCyC core-prim . not)
        (g$12022$1RbCyC core-prim . negative?)
        (g$12021$1RbCyC core-prim . nan?)
        (g$12020$1RbCyC core-prim . min)
        (g$12019$1RbCyC core-prim . max)
        (g$12018$1RbCyC core-prim . map)
        (g$12017$1RbCyC core-prim . make-vector)
        (g$12016$1RbCyC core-prim . make-string)
        (g$12015$1RbCyC core-prim . make-rectangular)
        (g$12014$1RbCyC core-prim . make-polar)
        (g$12013$1RbCyC core-prim . magnitude)
        (g$12012$1RbCyC core-prim . log)
        (g$12011$1RbCyC core-prim . list?)
        (g$12010$1RbCyC core-prim . list-tail)
        (g$12009$1RbCyC core-prim . list-ref)
        (g$12008$1RbCyC core-prim . list->vector)
        (g$12007$1RbCyC core-prim . list->string)
        (g$12006$1RbCyC core-prim . list)
        (g$12005$1RbCyC core-prim . length)
        (g$12004$1RbCyC core-prim . lcm)
        (g$12003$1RbCyC core-prim . integer?)
        (g$12002$1RbCyC core-prim . integer-valued?)
        (g$12001$1RbCyC core-prim . integer->char)
        (g$12000$1RbCyC core-prim . infinite?)
        (g$11999$1RbCyC core-prim . inexact?)
        (g$11998$1RbCyC core-prim . inexact)
        (g$11997$1RbCyC core-prim . imag-part)
        (g$11996$1RbCyC core-prim . gcd)
        (g$11995$1RbCyC core-prim . for-each)
        (g$11994$1RbCyC core-prim . floor)
        (g$11993$1RbCyC core-prim . finite?)
        (g$11992$1RbCyC core-prim . expt)
        (g$11991$1RbCyC core-prim . exp)
        (g$11990$1RbCyC core-prim . exact?)
        (g$11989$1RbCyC core-prim . exact-integer-sqrt)
        (g$11988$1RbCyC core-prim . exact)
        (g$11987$1RbCyC core-prim . even?)
        (g$11986$1RbCyC core-prim . error)
        (g$11985$1RbCyC core-prim . eqv?)
        (g$11984$1RbCyC core-prim . equal?)
        (g$11983$1RbCyC core-prim . eq?)
        (g$11982$1RbCyC core-prim . dynamic-wind)
        (g$11981$1RbCyC core-prim . div0-and-mod0)
        (g$11980$1RbCyC core-prim . mod0)
        (g$11979$1RbCyC core-prim . div0)
        (g$11978$1RbCyC core-prim . div-and-mod)
        (g$11977$1RbCyC core-prim . mod)
        (g$11976$1RbCyC core-prim . div)
        (g$11975$1RbCyC core-prim . denominator)
        (g$11974$1RbCyC core-prim . cos)
        (g$11973$1RbCyC core-prim . cons)
        (g$11972$1RbCyC core-prim . complex?)
        (g$11971$1RbCyC core-prim . char?)
        (g$6039$1RbCyC core-prim . char>?)
        (g$6041$1RbCyC core-prim . char>=?)
        (g$6037$1RbCyC core-prim . char=?)
        (g$6038$1RbCyC core-prim . char<?)
        (g$6040$1RbCyC core-prim . char<=?)
        (g$11970$1RbCyC core-prim . char->integer)
        (g$11969$1RbCyC core-prim . ceiling)
        (g$11968$1RbCyC core-prim . call-with-values)
        (g$11967$1RbCyC core-prim . call/cc)
        (g$11966$1RbCyC core-prim . call-with-current-continuation)
        (g$5961$1RbCyC core-prim . cddddr)
        (g$5960$1RbCyC core-prim . cdddar)
        (g$5959$1RbCyC core-prim . cddadr)
        (g$5958$1RbCyC core-prim . cddaar)
        (g$5957$1RbCyC core-prim . cdaddr)
        (g$5956$1RbCyC core-prim . cdadar)
        (g$5955$1RbCyC core-prim . cdaadr)
        (g$5954$1RbCyC core-prim . cdaaar)
        (g$5953$1RbCyC core-prim . cadddr)
        (g$5952$1RbCyC core-prim . caddar)
        (g$5951$1RbCyC core-prim . cadadr)
        (g$5950$1RbCyC core-prim . cadaar)
        (g$5949$1RbCyC core-prim . caaddr)
        (g$5948$1RbCyC core-prim . caadar)
        (g$5947$1RbCyC core-prim . caaadr)
        (g$5946$1RbCyC core-prim . caaaar)
        (g$5945$1RbCyC core-prim . cdddr)
        (g$5944$1RbCyC core-prim . cddar)
        (g$5943$1RbCyC core-prim . cdadr)
        (g$5942$1RbCyC core-prim . cdaar)
        (g$5941$1RbCyC core-prim . caddr)
        (g$5940$1RbCyC core-prim . cadar)
        (g$5939$1RbCyC core-prim . caadr)
        (g$5938$1RbCyC core-prim . caaar)
        (g$5937$1RbCyC core-prim . cddr)
        (g$5936$1RbCyC core-prim . cdar)
        (g$5935$1RbCyC core-prim . cadr)
        (g$5934$1RbCyC core-prim . caar)
        (g$11965$1RbCyC core-prim . cdr)
        (g$11964$1RbCyC core-prim . car)
        (g$11963$1RbCyC core-prim . boolean?)
        (g$6002$1RbCyC core-prim . boolean=?)
        (g$11962$1RbCyC core-prim . atan)
        (g$11961$1RbCyC core-prim . assertion-violation)
        (g$11960$1RbCyC core-prim . asin)
        (g$11959$1RbCyC core-prim . apply)
        (g$11958$1RbCyC core-prim . append)
        (g$11957$1RbCyC core-prim . angle)
        (g$11956$1RbCyC core-prim . acos)
        (g$11955$1RbCyC core-prim . abs)
        (g$11954$1RbCyC core-prim . /)
        (g$11953$1RbCyC core-prim . *)
        (g$11952$1RbCyC core-prim . -)
        (g$11951$1RbCyC core-prim . +)
        (g$11950$1RbCyC core-prim . >=)
        (g$11949$1RbCyC core-prim . >)
        (g$11948$1RbCyC core-prim . =)
        (g$11947$1RbCyC core-prim . <=)
        (g$11946$1RbCyC core-prim . <)
        (g$11945$1RbCyC core-prim . make-record-printer)
        (g$11944$1RbCyC core-prim . eqv-hash)
        (g$11943$1RbCyC core-prim . reverse!)
        (g$11942$1RbCyC core-prim . deserialize-port)
        (g$11941$1RbCyC core-prim . serialize-port)
        (g$7375$1RbCyC core-prim . enum-set?)
        (g$6832$1RbCyC core-prim . make-promise)
        (g$11778$1RbCyC core-prim . load/args)
        (g$7485$1RbCyC core-prim . printf)
        (g$7486$1RbCyC core-prim . fprintf)
        (g$7487$1RbCyC core-prim . format)
        (g$11940$1RbCyC core-prim . procedure-form)
        (g$11939$1RbCyC core-prim . procedure-environment)
        (g$11938$1RbCyC core-prim . procedure-name)
        (g$11937$1RbCyC core-prim . procedure-arity)
        (g$11936$1RbCyC core-prim . gc-collect)
        (g$11935$1RbCyC core-prim . clr-type?)
        (g$11934$1RbCyC core-prim . get-clr-type)
        (g$11933$1RbCyC core-prim . get-command-line)
        (g$11932$1RbCyC core-prim . vector-append)
        (g$11931$1RbCyC core-prim . vector-filter)
        (g$11930$1RbCyC core-prim . vector-reverse!)
        (g$11929$1RbCyC core-prim . vector-contains?)
        (g$11928$1RbCyC core-prim . vector-index-of)
        (g$11927$1RbCyC core-prim . vector-copy)
        (g$11926$1RbCyC core-prim . vector-binary-search)
        (g$11925$1RbCyC core-prim . string-ci-compare)
        (g$11924$1RbCyC core-prim . string-compare)
        (g$11923$1RbCyC core-prim . string-format)
        (g$11775$1RbCyC core-prim . trace-printer)
        (g$11922$1RbCyC core-prim . make-traced-procedure)
        (g$7507$1RbCyC core-prim . make-traced-macro)
        (g$8800$1RbCyC core-prim . assertion-error)
        (g$11921$1RbCyC core-prim . pmap)
        (g$11920$1RbCyC core-prim . time-it)
        (g$7512$1RbCyC core-prim . make-parameter)
        (g$11919$1RbCyC core-prim . library-locator)
        (g$11918$1RbCyC core-prim . get-library-paths)
        (g$8779$1RbCyC core-prim . environment-bindings)
        (g$8782$1RbCyC core-prim . environment-symbols)
        (g$8778$1RbCyC core-prim . interaction-environment-symbols)
        (g$11917$1RbCyC core-prim . optimization-level)
        (g$7942$1RbCyC core-prim . library-path)
        (g$8786$1RbCyC core-prim . expand)
        (g$11916$1RbCyC $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$11915$1RbCyC $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$11914$1RbCyC $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$11913$1RbCyC $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$11912$1RbCyC $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$11911$1RbCyC
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$11910$1RbCyC
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$11909$1RbCyC
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$11908$1RbCyC
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$11907$1RbCyC $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$11906$1RbCyC
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$11905$1RbCyC $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$11904$1RbCyC $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$11903$1RbCyC $core-rtd &i/o-rtd &i/o-rcd)
        (g$11902$1RbCyC $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11901$1RbCyC $core-rtd &undefined-rtd &undefined-rcd)
        (g$11900$1RbCyC $core-rtd &syntax-rtd &syntax-rcd)
        (g$11899$1RbCyC $core-rtd &lexical-rtd &lexical-rcd)
        (g$11898$1RbCyC
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$11897$1RbCyC $core-rtd &who-rtd &who-rcd)
        (g$11896$1RbCyC $core-rtd &irritants-rtd &irritants-rcd)
        (g$11895$1RbCyC $core-rtd &assertion-rtd &assertion-rcd)
        (g$11894$1RbCyC $core-rtd &violation-rtd &violation-rcd)
        (g$11893$1RbCyC $core-rtd &error-rtd &error-rcd)
        (g$11892$1RbCyC $core-rtd &serious-rtd &serious-rcd)
        (g$11891$1RbCyC $core-rtd &warning-rtd &warning-rcd)
        (g$11890$1RbCyC $core-rtd &message-rtd &message-rcd)
        (g$11889$1RbCyC $core-rtd &condition-rtd &condition-rcd)
        (g$11888$1RbCyC macro . define-condition-type)
        (g$11887$1RbCyC macro . define-enumeration)
        (g$11886$1RbCyC macro . define-record-type)
        (g$11885$1RbCyC macro . parent-rtd)
        (g$11884$1RbCyC macro . nongenerative)
        (g$11883$1RbCyC macro . opaque)
        (g$11882$1RbCyC macro . sealed)
        (g$11881$1RbCyC macro . protocol)
        (g$11880$1RbCyC macro . parent)
        (g$11879$1RbCyC macro . immutable)
        (g$11878$1RbCyC macro . mutable)
        (g$11877$1RbCyC macro . fields)
        (g$11876$1RbCyC macro . error-handling-mode)
        (g$11875$1RbCyC macro . file-options)
        (g$11874$1RbCyC macro . buffer-mode)
        (g$11873$1RbCyC macro . eol-style)
        (g$11872$1RbCyC macro . guard)
        (g$11871$1RbCyC macro . trace-letrec-syntax)
        (g$11870$1RbCyC macro . trace-let-syntax)
        (g$11869$1RbCyC macro . trace-define-syntax)
        (g$11868$1RbCyC macro . trace-define)
        (g$11867$1RbCyC macro . trace-lambda)
        (g$11866$1RbCyC macro . unsyntax-splicing)
        (g$11865$1RbCyC macro . unsyntax)
        (g$11864$1RbCyC macro . unquote-splicing)
        (g$11863$1RbCyC macro . unquote)
        (g$11862$1RbCyC macro . _)
        (g$11861$1RbCyC macro . else)
        (g$11860$1RbCyC macro . =>)
        (g$11859$1RbCyC macro . ...)
        (g$11858$1RbCyC macro . assert)
        (g$11857$1RbCyC macro . endianness)
        (g$11856$1RbCyC macro . delay)
        (g$11855$1RbCyC macro . time)
        (g$11854$1RbCyC macro . or)
        (g$11853$1RbCyC macro . and)
        (g$11852$1RbCyC macro . do)
        (g$11851$1RbCyC macro . cond)
        (g$11850$1RbCyC macro . let*)
        (g$11849$1RbCyC macro . let)
        (g$11848$1RbCyC macro . identifier-syntax)
        (g$11847$1RbCyC macro . with-syntax)
        (g$11846$1RbCyC macro . quasisyntax)
        (g$11845$1RbCyC macro . quasiquote)
        (g$11844$1RbCyC macro . syntax-rules)
        (g$11843$1RbCyC macro . include-into)
        (g$11842$1RbCyC macro . include)
        (g$11841$1RbCyC macro . define-struct)
        (g$11840$1RbCyC macro . let-values)
        (g$11839$1RbCyC macro . let*-values)
        (g$11838$1RbCyC core-macro . record-constructor-descriptor)
        (g$11837$1RbCyC core-macro . record-type-descriptor)
        (g$11836$1RbCyC core-macro . fluid-let-syntax)
        (g$11835$1RbCyC macro . case)
        (g$11834$1RbCyC macro . parameterize)
        (g$11833$1RbCyC macro . unless)
        (g$11832$1RbCyC macro . when)
        (g$11831$1RbCyC core-macro . if)
        (g$11830$1RbCyC core-macro . letrec*)
        (g$11829$1RbCyC core-macro . letrec)
        (g$11828$1RbCyC core-macro . type-descriptor)
        (g$11827$1RbCyC core-macro . case-lambda)
        (g$11826$1RbCyC core-macro . lambda)
        (g$11825$1RbCyC core-macro . syntax)
        (g$11824$1RbCyC core-macro . syntax-case)
        (g$11823$1RbCyC core-macro . quote)
        (g$11822$1RbCyC core-macro . foreign-call)
        (g$11821$1RbCyC letrec-syntax)
        (g$11820$1RbCyC let-syntax)
        (g$11819$1RbCyC set!)
        (g$11818$1RbCyC export)
        (g$11817$1RbCyC import)
        (g$11816$1RbCyC library)
        (g$11815$1RbCyC begin)
        (g$11814$1RbCyC module)
        (g$11813$1RbCyC define-syntax)
        (g$11812$1RbCyC define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7069$1RbCyC
      'g$12465$1RbCyC
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$12344$1RbCyC)
        (eval-core . g$12343$1RbCyC)
        (set-symbol-value! . g$12342$1RbCyC)
        (symbol-value . g$12341$1RbCyC)
        (gensym . g$12339$1RbCyC)
        (void . g$12338$1RbCyC))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$11146$1RbCyC
     g$trace-printer$11186$1RbCyC
     (g$make-parameter$6524$1RbCyC write))
   (g$command-line$11147$1RbCyC
     g$command-line$11187$1RbCyC
     (g$make-parameter$6524$1RbCyC (get-command-line)))
   (g$local-library-path$11148$1RbCyC
     g$local-library-path$11188$1RbCyC
     (case-lambda
       ((g$filename$11159$1RbCyC)
        (cons
          (g$get-directory-name$5454$1RbCyC g$filename$11159$1RbCyC)
          (g$library-path$7053$1RbCyC)))))
   (g$load/args$11149$1RbCyC
     g$load/args$11189$1RbCyC
     (case-lambda
       ((g$filename$11160$1RbCyC . g$args$11161$1RbCyC)
        (begin
          (apply
            g$load-r6rs-top-level$11156$1RbCyC
            g$filename$11160$1RbCyC
            'load
            g$args$11161$1RbCyC)
          (void)))))
   (g$load$11150$1RbCyC
     g$load$11190$1RbCyC
     (case-lambda
       ((g$filename$11162$1RbCyC)
        (begin
          (apply
            g$load-r6rs-top-level$11156$1RbCyC
            g$filename$11162$1RbCyC
            'load
            (cdr (g$command-line$11147$1RbCyC)))
          (void)))))
   (g$ironscheme-build$11151$1RbCyC
     g$ironscheme-build$11191$1RbCyC
     (case-lambda (() (g$load$11150$1RbCyC '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$11152$1RbCyC
     g$eval-top-level$11192$1RbCyC
     (case-lambda
       ((g$x$11163$1RbCyC)
        (g$eval$11121$1RbCyC
          g$x$11163$1RbCyC
          (g$interaction-environment$11144$1RbCyC)))))
   (g$compile-system-libraries$11153$1RbCyC
     g$compile-system-libraries$11193$1RbCyC
     (case-lambda
       (()
        (g$eval-top-level$11152$1RbCyC
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$11154$1RbCyC
     g$compile$11194$1RbCyC
     (case-lambda
       ((g$filename$11164$1RbCyC)
        (g$load-r6rs-top-level$11156$1RbCyC g$filename$11164$1RbCyC 'compile))))
   (g$compile->closure$11155$1RbCyC
     g$compile->closure$11195$1RbCyC
     (case-lambda
       ((g$filename$11165$1RbCyC)
        (g$load-r6rs-top-level$11156$1RbCyC g$filename$11165$1RbCyC 'closure))))
   (g$load-r6rs-top-level$11156$1RbCyC
     g$load-r6rs-top-level$11196$1RbCyC
     (case-lambda
       ((g$filename$11166$1RbCyC g$how$11167$1RbCyC . g$args$11168$1RbCyC)
        ((case-lambda
           ((g$library-path$11171$1RbCyC g$library-path$11172$1RbCyC)
            ((case-lambda
               ((g$swap$11173$1RbCyC)
                (dynamic-wind
                  g$swap$11173$1RbCyC
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$11174$1RbCyC)
                         ((case-lambda
                            ((g$t$11175$1RbCyC)
                             (if (g$memv$4990$1RbCyC
                                   g$t$11175$1RbCyC
                                   '(closure))
                               (g$pre-compile-r6rs-top-level$11143$1RbCyC
                                 g$x*$11174$1RbCyC)
                               (if (g$memv$4990$1RbCyC g$t$11175$1RbCyC '(load))
                                 ((case-lambda
                                    ((g$command-line$11178$1RbCyC
                                       g$command-line$11179$1RbCyC)
                                     ((case-lambda
                                        ((g$swap$11180$1RbCyC)
                                         (dynamic-wind
                                           g$swap$11180$1RbCyC
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$11142$1RbCyC
                                                 g$x*$11174$1RbCyC))))
                                           g$swap$11180$1RbCyC)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$11181$1RbCyC)
                                             (begin
                                               (g$command-line$11178$1RbCyC
                                                 g$command-line$11179$1RbCyC)
                                               (set! g$command-line$11179$1RbCyC
                                                 g$t$11181$1RbCyC))))
                                          (g$command-line$11178$1RbCyC)))))))
                                  g$command-line$11147$1RbCyC
                                  (cons
                                    g$filename$11166$1RbCyC
                                    (map (case-lambda
                                           ((g$x$11182$1RbCyC)
                                            (g$format$6439$1RbCyC
                                              '"~a"
                                              g$x$11182$1RbCyC)))
                                         g$args$11168$1RbCyC)))
                                 (if (g$memv$4990$1RbCyC
                                       g$t$11175$1RbCyC
                                       '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$11142$1RbCyC
                                       g$x*$11174$1RbCyC)
                                     (g$serialize-all$7057$1RbCyC
                                       serialize-library
                                       g$compile-core-expr$6771$1RbCyC))
                                   (if '#f '#f (void)))))))
                          g$how$11167$1RbCyC)))
                      (g$with-input-from-file$6267$1RbCyC
                        g$filename$11166$1RbCyC
                        (case-lambda
                          (()
                           ((letrec ((g$f$11183$1RbCyC
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$11184$1RbCyC)
                                              (if (eof-object? g$x$11184$1RbCyC)
                                                '()
                                                (cons
                                                  g$x$11184$1RbCyC
                                                  (g$f$11183$1RbCyC)))))
                                           (read-annotated))))))
                              g$f$11183$1RbCyC))))))))
                  g$swap$11173$1RbCyC)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$11185$1RbCyC)
                    (begin
                      (g$library-path$11171$1RbCyC g$library-path$11172$1RbCyC)
                      (set! g$library-path$11172$1RbCyC g$t$11185$1RbCyC))))
                 (g$library-path$11171$1RbCyC)))))))
         g$library-path$7053$1RbCyC
         (g$local-library-path$11148$1RbCyC g$filename$11166$1RbCyC)))))
   (g$fo$11157$1RbCyC
     g$fo$11197$1RbCyC
     (g$make-enumeration$6401$1RbCyC '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$7058$1RbCyC
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$11158$1RbCyC)
         (if (g$serious-condition?$5716$1RbCyC g$ex$11158$1RbCyC)
           (raise g$ex$11158$1RbCyC)
           (begin (display g$ex$11158$1RbCyC) (newline))))))
    (set-symbol-value! 'load g$load$11150$1RbCyC)
    (set-symbol-value! 'compile g$compile$11154$1RbCyC)
    (set-symbol-value! 'compile->closure g$compile->closure$11155$1RbCyC)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$11152$1RbCyC)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$11112$1RbCyC)
    (set-symbol-value! 'expanded2core g$expanded->core$6770$1RbCyC)
    (set-symbol-value! 'trace-printer g$trace-printer$11146$1RbCyC)
    (g$file-options-constructor$6525$1RbCyC
      (g$enum-set-constructor$6404$1RbCyC g$fo$11157$1RbCyC))
    (g$library-path$7053$1RbCyC (get-library-paths))))

